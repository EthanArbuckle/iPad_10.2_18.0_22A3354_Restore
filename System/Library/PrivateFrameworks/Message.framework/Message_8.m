uint64_t sub_1A55E34E8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 224);
  v3 = *(_BYTE *)(v0 + 232);
  if (*(_QWORD *)(v0 + 136))
  {
    v4 = *(unsigned int *)(v0 + 160);
    LODWORD(v5) = *(_DWORD *)(v0 + 164);
    v6 = *(_QWORD *)(v0 + 152);
    sub_1A54E4334(v6, v4, v5);
  }
  else
  {
    v6 = sub_1A55C19FC(MEMORY[0x1E0DEE9D8]);
    v4 = v7;
    v5 = HIDWORD(v7);
  }
  v8 = sub_1A55E4C6C(v2, v3, v6, v4 | ((unint64_t)v5 << 32));
  if ((v9 & 1) != 0)
  {
    sub_1A54E3458(v6, v4, v5);
    return 0;
  }
  v10 = v8;
  if ((v3 & 1) == 0)
  {
    v11 = static FetchedWindow.__derived_struct_equals(_:_:)(v8, v2);
    sub_1A54E3458(v6, v4, v5);
    if (!v11)
      goto LABEL_10;
    return 0;
  }
  sub_1A54E3458(v6, v4, v5);
LABEL_10:
  v13 = *(_QWORD *)(v1 + 64);
  v14 = *(_QWORD *)(v13 + 16);
  if (v14)
    v15 = *(_DWORD *)(v13 + 8 * v14 + 24);
  else
    v15 = 1;
  return sub_1A55E3628(v15, v10);
}

uint64_t sub_1A55E3628(unsigned int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;

  v2 = a2;
  result = FetchedWindow.lowerBound.getter(a2);
  if (result >= a1)
    return v2;
  LODWORD(v29) = 1;
  if (a1 < 2)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v30 = a1 - 1;
  v5 = sub_1A54E3414();
  static MessageIdentifier.... infix(_:_:)();
  v29 = v31;
  MessageIdentifierSet.init(_:)((uint64_t)&v29, (uint64_t)&type metadata for UID, v5, v6);
  v8 = v7;
  v10 = v9;
  v11 = HIDWORD(v9);
  v31 = v2;
  MessageIdentifierSet.init(_:)((uint64_t)&v31, (uint64_t)&type metadata for UID, v5, v12);
  v14 = v13;
  v16 = v15;
  v17 = HIDWORD(v15);
  MessageIdentifierSet.subtracting(_:)(v8, v10 & 0xFFFFFFFFFFLL, v13, v15 & 0xFFFFFFFFFFLL);
  v19 = v18;
  v21 = v20;
  v22 = HIDWORD(v20);
  sub_1A54E3458(v8, v10, v11);
  sub_1A54E3458(v14, v16, v17);
  MessageIdentifierSet.ranges.getter(v19, v21 & 0xFFFFFFFFFFLL);
  v24 = v23;
  v26 = v25;
  v27 = HIDWORD(v25);
  sub_1A54E3458(v19, v21, v22);
  if (!MessageIdentifierSet.RangeView.endIndex.getter(v24, v26 & 0xFFFFFFFFFFLL))
  {
    sub_1A54E3458(v24, v26, v27);
    return 0;
  }
  result = MessageIdentifierSet.RangeView.endIndex.getter(v24, v26 & 0xFFFFFFFFFFLL);
  v28 = result - 1;
  if (__OFSUB__(result, 1))
    goto LABEL_11;
  result = MessageIdentifierSet.RangeView.endIndex.getter(v24, v26 & 0xFFFFFFFFFFLL);
  if ((v28 & 0x8000000000000000) == 0 && v28 < result)
  {
    MessageIdentifierSet.RangeView.subscript.getter(v28, v24, v26 & 0xFFFFFFFFFFLL);
    sub_1A54E3458(v24, v26, v27);
    return FetchedWindow.init(_:)();
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1A55E385C(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  os_log_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unsigned int v54;
  unsigned __int8 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t result;
  uint64_t v82;
  BOOL v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char v94;
  char v95;
  uint64_t v96;
  NSObject *v97;
  os_log_type_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unsigned int v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v112;
  unsigned int v113;
  uint64_t v114;
  unsigned int *v115;
  char *v116;
  os_log_t v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  int v136;
  uint64_t v137;
  unsigned int v138;
  unsigned __int8 v139;
  uint64_t v140[2];

  v132 = a4;
  v133 = a1;
  v129 = a2;
  v5 = type metadata accessor for MessageMetadata(0);
  v134 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (int *)((char *)&v115 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v120 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v120);
  v130 = (uint64_t)&v115 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v115 - v10;
  v12 = sub_1A594A764();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v131 = (char *)&v115 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v115 - v16;
  v19 = a3[17];
  if (v19)
  {
    v135 = a3[22];
    v20 = *(_QWORD *)(v135 + 16);
    if (v20)
    {
      v21 = v13;
      v22 = v12;
      v24 = a3[18];
      v23 = a3[19];
      v118 = a3;
      v26 = a3[20];
      v25 = a3[21];
      v128 = (char *)HIDWORD(v26);
      v121 = v22;
      v122 = v21;
      v27 = v132;
      (*(void (**)(char *, uint64_t, double))(v21 + 16))((char *)&v115 - v16, v132, v17);
      sub_1A55034B8(v27, (uint64_t)v11, type metadata accessor for MailboxTaskLogger);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v127 = v24;
      v124 = v25;
      sub_1A55E76A4(v19, v24, v23, v26);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v125 = v26;
      v126 = v23;
      sub_1A54E4334(v23, v26, (char)v128);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v128 = v18;
      v28 = sub_1A594A74C();
      v29 = sub_1A594C030();
      v30 = v29;
      if (os_log_type_enabled(v28, v29))
      {
        v31 = swift_slowAlloc();
        LODWORD(v123) = v30;
        v32 = v31;
        v119 = swift_slowAlloc();
        v140[0] = v119;
        *(_DWORD *)v32 = 68159491;
        LODWORD(v137) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v32 + 8) = 256;
        v33 = *(int *)(v120 + 20);
        v117 = v28;
        v34 = &v11[v33];
        LOBYTE(v137) = v11[v33];
        sub_1A594C3CC();
        *(_WORD *)(v32 + 11) = 2082;
        v116 = v11;
        v35 = *((_QWORD *)v34 + 1);
        v36 = *((_QWORD *)v34 + 2);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v137 = sub_1A55791B0(v35, v36, v140);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v32 + 21) = 1040;
        LODWORD(v137) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v32 + 27) = 512;
        LOWORD(v137) = *((_WORD *)v34 + 12);
        sub_1A594C3CC();
        *(_WORD *)(v32 + 31) = 2160;
        v137 = 0x786F626C69616DLL;
        sub_1A594C3CC();
        *(_WORD *)(v32 + 41) = 2085;
        v37 = *((_DWORD *)v34 + 10);
        v137 = *((_QWORD *)v34 + 4);
        v138 = v37;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v38 = sub_1A594B4A8();
        v137 = sub_1A55791B0(v38, v39, v140);
        v115 = &v138;
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55034FC((uint64_t)v116, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v32 + 51) = 2048;
        v116 = (char *)(v32 + 53);
        v40 = *(_QWORD *)(v135 + 16);
        v42 = v126;
        v41 = v127;
        v43 = v125;
        sub_1A55E76F4(v19, v127, v126, v125);
        v137 = v40;
        v44 = v133;
        v116 = (char *)v19;
        v45 = v121;
        sub_1A594C3CC();
        v46 = v42;
        v12 = v45;
        sub_1A55E76F4((uint64_t)v116, v41, v46, v43);
        v47 = v117;
        _os_log_impl(&dword_1A4F90000, v117, (os_log_type_t)v123, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] %ld new message(s).", (uint8_t *)v32, 0x3Du);
        v48 = v119;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v48, -1, -1);
        MEMORY[0x1A85B1964](v32, -1, -1);

        v13 = v122;
        (*(void (**)(char *, uint64_t))(v122 + 8))(v128, v45);
      }
      else
      {
        v50 = v126;
        v49 = v127;
        v51 = v125;
        sub_1A55E76F4(v19, v127, v126, v125);
        sub_1A55034FC((uint64_t)v11, type metadata accessor for MailboxTaskLogger);
        sub_1A55E76F4(v19, v49, v50, v51);

        v12 = v121;
        v13 = v122;
        (*(void (**)(char *, uint64_t))(v122 + 8))(v128, v121);
        v44 = v133;
      }
      sub_1A554B85C(9u);
      sub_1A54F3290(&v137, 9);
      a3 = v118;
      v52 = v135;
      if ((~*(_QWORD *)(v44 + 352) & 0xFF00000000) != 0)
      {
        v53 = v133;
        v119 = v133 + 344;
        v128 = (char *)sub_1A54E3414();
        v137 = MessageIdentifierSet.init()(&type metadata for UID, v128);
        v138 = v54;
        v139 = v55;
        v56 = v52 + ((*(unsigned __int8 *)(v134 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v134 + 80));
        v57 = *(_QWORD *)(v134 + 72);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        do
        {
          sub_1A55034B8(v56, (uint64_t)v7, type metadata accessor for MessageMetadata);
          v136 = *v7;
          __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
          MessageIdentifierSet.insert(_:)();
          sub_1A55034FC((uint64_t)v7, type metadata accessor for MessageMetadata);
          v56 += v57;
          --v20;
        }
        while (v20);
        swift_bridgeObjectRelease();
        v58 = v137;
        v59 = v138;
        v60 = v139;
        v61 = *(_QWORD *)(v53 + 344);
        v62 = *(unsigned int *)(v53 + 352) | ((unint64_t)*(unsigned __int8 *)(v53 + 356) << 32);
        if (MessageIdentifierSet.count.getter(v61, v62) > 520)
        {
          v127 = v59;
          MessageIdentifierSet.ranges.getter(v61, v62);
          v65 = v64;
          v67 = v66;
          v68 = HIDWORD(v66);
          v69 = v66 & 0xFFFFFFFFFFLL;
          if (MessageIdentifierSet.RangeView.endIndex.getter(v64, v66 & 0xFFFFFFFFFFLL))
          {
            MessageIdentifierSet.RangeView.subscript.getter(0, v65, v69);
            sub_1A54E3458(v65, v67, v68);
            v70 = v137;
          }
          else
          {
            sub_1A54E3458(v65, v67, v68);
            v70 = 1;
          }
          LODWORD(v124) = v70;
          v71 = v127;
          v72 = v127 & 0xFFFFFF00FFFFFFFFLL | ((unint64_t)v60 << 32);
          MessageIdentifierSet.startIndex.getter();
          v73 = v60;
          v75 = v74;
          v77 = v76;
          v126 = v73;
          sub_1A54E4334(v58, v71, v73);
          v125 = v72;
          MessageIdentifierSet.endIndex.getter();
          if (v75 != v79 || v77 != v78)
          {
            v107 = v127;
            v123 = v126 << 32;
            v108 = v126;
            do
            {
              v112 = v123;
              v134 = v134 & 0xFFFFFF0000000000 | v107 | v123;
              MessageIdentifierSet.subscript.getter();
              v113 = v137;
              sub_1A54E4334(v58, v107, v108);
              v135 = v135 & 0xFFFFFF0000000000 | v107 | v112;
              v75 = MessageIdentifierSet.index(_:offsetBy:)(v75, v77, 1, v58, v135);
              v77 = v114;
              sub_1A54E3458(v58, v107, v108);
              if (v124 < v113)
              {
                LODWORD(v140[0]) = v113;
                MessageIdentifierSet.insert(_:)();
              }
              MessageIdentifierSet.endIndex.getter();
            }
            while (v75 != v110 || v77 != v109);
          }
          LOBYTE(v60) = v126;
          v59 = v127;
          sub_1A54E3458(v58, v127, v126);
          v53 = v133;
          v63 = v125;
        }
        else
        {
          v63 = v59 | (v60 << 32);
          MessageIdentifierSet.formUnion(_:)(v58, v63);
        }
        v80 = MessageIdentifierSet.count.getter(v58, v63);
        result = sub_1A54E3458(v58, v59, v60);
        v82 = *(_QWORD *)(v53 + 360);
        v83 = __OFADD__(v82, v80);
        v84 = v82 + v80;
        v13 = v122;
        if (v83)
        {
          __break(1u);
          return result;
        }
        *(_QWORD *)(v53 + 360) = v84;
        v12 = v121;
        a3 = v118;
      }
    }
  }
  v85 = a3;
  if (a3[17])
  {
    v88 = a3 + 19;
    v87 = a3[19];
    v86 = v88[1];
    v89 = v86;
    sub_1A54E4334(v87, v86, SBYTE4(v86));
  }
  else
  {
    v87 = 0;
    v89 = 0xFF00000000;
  }
  v90 = v131;
  v91 = v132;
  v92 = sub_1A55E6584(v133, v129 & 0x1010101FFFF01, v87, v89 & 0xFFFFFFFFFFLL, v85[7], v85[8], v132);
  v135 = v93;
  v95 = v94;
  result = sub_1A5503B8C(v87, v89);
  v96 = v130;
  if ((v95 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v90, v91, v12);
    sub_1A55034B8(v91, v96, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v97 = sub_1A594A74C();
    v98 = sub_1A594C030();
    if (os_log_type_enabled(v97, v98))
    {
      v99 = swift_slowAlloc();
      v134 = swift_slowAlloc();
      v140[0] = v134;
      *(_DWORD *)v99 = 68159747;
      LODWORD(v137) = 2;
      v121 = v12;
      v122 = v13;
      sub_1A594C3CC();
      *(_WORD *)(v99 + 8) = 256;
      v100 = v96 + *(int *)(v120 + 20);
      LOBYTE(v137) = *(_BYTE *)v100;
      sub_1A594C3CC();
      *(_WORD *)(v99 + 11) = 2082;
      v101 = *(_QWORD *)(v100 + 8);
      v102 = *(_QWORD *)(v100 + 16);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v137 = sub_1A55791B0(v101, v102, v140);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v99 + 21) = 1040;
      LODWORD(v137) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v99 + 27) = 512;
      LOWORD(v137) = *(_WORD *)(v100 + 24);
      sub_1A594C3CC();
      *(_WORD *)(v99 + 31) = 2160;
      v137 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v99 + 41) = 2085;
      v103 = *(_DWORD *)(v100 + 40);
      v137 = *(_QWORD *)(v100 + 32);
      v138 = v103;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v104 = sub_1A594B4A8();
      v137 = sub_1A55791B0(v104, v105, v140);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC(v130, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v99 + 51) = 2048;
      v137 = v92;
      sub_1A594C3CC();
      *(_WORD *)(v99 + 61) = 2048;
      v137 = v135;
      sub_1A594C3CC();
      _os_log_impl(&dword_1A4F90000, v97, v98, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Still missing %ld messages (%ld completed). Will run again.", (uint8_t *)v99, 0x47u);
      v106 = v134;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v106, -1, -1);
      MEMORY[0x1A85B1964](v99, -1, -1);

      (*(void (**)(char *, uint64_t))(v122 + 8))(v131, v121);
    }
    else
    {
      sub_1A55034FC(v96, type metadata accessor for MailboxTaskLogger);

      (*(void (**)(char *, uint64_t))(v13 + 8))(v90, v12);
    }
    sub_1A554B85C(1u);
    return sub_1A54F3290(&v137, 1);
  }
  return result;
}

uint64_t sub_1A55E4550(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t result;
  NSObject *v15;
  os_log_type_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  os_log_t v29;
  uint64_t v30;
  _BYTE v31[12];
  int v32;
  unint64_t v33;
  os_log_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;

  v6 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v31[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_1A594A764();
  v10 = *(_QWORD *)(v9 - 8);
  v11.n128_f64[0] = MEMORY[0x1E0C80A78](v9);
  v13 = &v31[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((*(_BYTE *)(a1 + 8) & 1) != 0
    || (result = static FetchedWindow.__derived_struct_equals(_:_:)(*(_QWORD *)a1, a2), (result & 1) == 0))
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v10 + 16))(v13, a3, v9, v11);
    sub_1A55034B8(a3, (uint64_t)v8, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v15 = sub_1A594A74C();
    v16 = sub_1A594C00C();
    v17 = v16;
    if (os_log_type_enabled(v15, v16))
    {
      v33 = HIDWORD(a2);
      v18 = swift_slowAlloc();
      v37 = swift_slowAlloc();
      v40 = v37;
      *(_DWORD *)v18 = 68159491;
      LODWORD(v38) = 2;
      v34 = v15;
      sub_1A594C3CC();
      *(_WORD *)(v18 + 8) = 256;
      v19 = *(int *)(v6 + 20);
      v36 = v10;
      v20 = &v8[v19];
      LOBYTE(v38) = v8[v19];
      sub_1A594C3CC();
      *(_WORD *)(v18 + 11) = 2082;
      v35 = v9;
      v32 = v17;
      v21 = a2;
      v22 = *((_QWORD *)v20 + 1);
      v23 = *((_QWORD *)v20 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v38 = sub_1A55791B0(v22, v23, &v40);
      sub_1A594C3CC();
      a2 = v21;
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 21) = 1040;
      LODWORD(v38) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v18 + 27) = 512;
      LOWORD(v38) = *((_WORD *)v20 + 12);
      sub_1A594C3CC();
      *(_WORD *)(v18 + 31) = 2160;
      v38 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v18 + 41) = 2085;
      v24 = *((_DWORD *)v20 + 10);
      v38 = *((_QWORD *)v20 + 4);
      v39 = v24;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v25 = sub_1A594B4A8();
      v38 = sub_1A55791B0(v25, v26, &v40);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v8, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v18 + 51) = 2082;
      v38 = __PAIR64__(v33, v21);
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796E58);
      MessageIdentifierRange.debugDescription.getter();
      v38 = sub_1A55791B0(v27, v28, &v40);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      v29 = v34;
      _os_log_impl(&dword_1A4F90000, v34, (os_log_type_t)v32, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Updating fetched-window to %{public}s.", (uint8_t *)v18, 0x3Du);
      v30 = v37;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v30, -1, -1);
      MEMORY[0x1A85B1964](v18, -1, -1);

      result = (*(uint64_t (**)(_BYTE *, uint64_t))(v36 + 8))(v13, v35);
    }
    else
    {
      sub_1A55034FC((uint64_t)v8, type metadata accessor for MailboxTaskLogger);

      result = (*(uint64_t (**)(_BYTE *, uint64_t))(v10 + 8))(v13, v9);
    }
    *(_QWORD *)a1 = a2;
    *(_BYTE *)(a1 + 8) = 0;
  }
  return result;
}

uint64_t sub_1A55E4960@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A55530FC(v1 + 88, a1);
}

uint64_t sub_1A55E496C()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796240);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A59ABD10;
  *(_QWORD *)(v0 + 32) = &type metadata for FetchSearchResultMessages;
  sub_1A550F734();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594C6B4();
  return v0;
}

uint64_t sub_1A55E4A10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result;
  uint64_t v7;

  result = sub_1A55E2F48(a1, a2, a3, a4);
  *a5 = result;
  a5[1] = v7;
  return result;
}

uint64_t sub_1A55E4A34(const void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, NSObject *a7)
{
  return sub_1A55E6438(a1, a2, a3, a4, a6, a7);
}

unint64_t sub_1A55E4A40(uint64_t a1, unint64_t a2, uint64_t a3, void *a4, int a5, uint64_t a6, uint64_t a7)
{
  return sub_1A564DEAC(a7, a2, a3, a4, a5);
}

uint64_t sub_1A55E4A58(__int128 *a1, uint64_t a2)
{
  uint64_t v2;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  char v15;
  unsigned int v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  _QWORD v20[5];
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _BYTE v34[32];
  uint64_t v35;
  __int128 v36[3];
  _OWORD v37[2];
  __int128 v38[2];
  __int128 v39;
  char v40;

  v19 = *(_QWORD *)(v2 + 40);
  v18 = *(_DWORD *)(v2 + 48);
  v20[3] = a2;
  v4 = a1[13];
  *(_OWORD *)v34 = a1[12];
  *(_OWORD *)&v34[16] = v4;
  v35 = *((_QWORD *)a1 + 28);
  v5 = a1[9];
  v30 = a1[8];
  v31 = v5;
  v6 = a1[11];
  v32 = a1[10];
  v33 = v6;
  v7 = a1[5];
  v26 = a1[4];
  v27 = v7;
  v8 = a1[7];
  v28 = a1[6];
  v29 = v8;
  v9 = a1[1];
  v22 = *a1;
  v23 = v9;
  v10 = a1[3];
  v24 = a1[2];
  v25 = v10;
  v36[2] = v33;
  v37[0] = *(_OWORD *)v34;
  *(_OWORD *)((char *)v37 + 12) = *(_OWORD *)&v34[12];
  v36[0] = v31;
  v36[1] = v32;
  sub_1A55212B8(v36, v38);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v11 = sub_1A558E3A4();
  v12 = sub_1A558E7E0(v23, BYTE1(v23) & 1, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), SBYTE10(v22), v25, v11);
  sub_1A55212B8(v38, &v39);
  if (v40 == 1)
  {
    v21 = v39;
    sub_1A55E5928((uint64_t)v38);
    sub_1A551B2B0((uint64_t)&v21, v19, v18, 0, (void (*)(uint64_t, uint64_t))sub_1A55E590C, v20, v12 & 0x1010101FFFF01);
    sub_1A55E5958((uint64_t)v38);
    v13 = v21;
    *((_QWORD *)a1 + 19) = 0;
    *((_QWORD *)a1 + 20) = 0;
    *((_QWORD *)a1 + 18) = v13;
    *((_BYTE *)a1 + 168) = 1;
  }
  result = sub_1A55E34E8();
  if ((v15 & 1) == 0)
  {
    MEMORY[0x1E0C80A78](result);
    return sub_1A551CA84(v17, v16, (void (*)(uint64_t))sub_1A55E5988);
  }
  return result;
}

uint64_t sub_1A55E4C48()
{
  return 0x73654D6863746546;
}

uint64_t sub_1A55E4C6C(unint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;

  v9 = *(_QWORD *)v4;
  v10 = *(unsigned int *)(v4 + 8);
  v11 = *(unsigned __int8 *)(v4 + 12);
  sub_1A54E3414();
  MessageIdentifierSet.subtracting(_:)(a3, a4 & 0xFFFFFFFFFFLL, v9, v10 | (v11 << 32));
  v13 = v12;
  v15 = v14;
  v16 = HIDWORD(v14);
  MessageIdentifierSet.subtracting(_:)(v12, v14 & 0xFFFFFFFFFFLL, *(_QWORD *)(v4 + 16), *(unsigned int *)(v4 + 24) | ((unint64_t)*(unsigned __int8 *)(v4 + 28) << 32));
  v18 = v17;
  v20 = v19;
  v21 = HIDWORD(v19);
  sub_1A54E3458(v13, v15, v16);
  if ((a2 & 1) != 0)
    v22 = 0;
  else
    v22 = FetchedWindow.upperBound.getter(a1);
  v23 = sub_1A55E5DCC(v22 | ((unint64_t)(a2 & 1) << 32), v18, v20 & 0xFFFFFFFFFFLL, *(unsigned int *)(v4 + 32) | ((unint64_t)*(unsigned __int8 *)(v4 + 36) << 32));
  if ((v23 & 0x100000000) != 0)
  {
    sub_1A54E3458(v18, v20, v21);
    return 0;
  }
  else
  {
    if ((a2 & 1) == 0)
      v23 = FetchedWindow.lowerBound.getter(a1);
    sub_1A55E6208(v23, v18, v20 & 0xFFFFFFFFFFLL);
    sub_1A54E3458(v18, v20, v21);
    static MessageIdentifier.... infix(_:_:)();
    return FetchedWindow.init(_:)();
  }
}

unint64_t sub_1A55E4E08(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1A55E4E14(a1, a2, a3, (uint64_t (*)(unint64_t, uint64_t))sub_1A55E4E08);
}

unint64_t sub_1A55E4E14(unint64_t result, uint64_t a2, unint64_t a3, uint64_t (*a4)(unint64_t, uint64_t))
{
  uint64_t v4;
  int64_t v5;
  uint64_t v6;

  if ((result & 0x100000000) != 0)
  {
    if (!a2)
      goto LABEL_8;
    if (a2 < 0)
    {
      result = a4(HIDWORD(a3), a2 + 1);
      v6 = HIDWORD(result) & 1;
      return result | ((unint64_t)v6 << 32);
    }
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v4 = result;
  v5 = HIDWORD(a3) - result;
  if (v5 < a2)
  {
    if (v5 + 1 == a2)
    {
      LODWORD(result) = 0;
LABEL_8:
      LOBYTE(v6) = 1;
      return result | ((unint64_t)v6 << 32);
    }
    goto LABEL_15;
  }
  result = result + a2;
  if (v4 + a2 < 1)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (HIDWORD(result))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (result >= a3)
  {
    LOBYTE(v6) = 0;
    return result | ((unint64_t)v6 << 32);
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t destroy for FetchMessages(uint64_t a1)
{
  unint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 84) != 255)
  {
    v2 = *(unsigned int *)(a1 + 80) | ((unint64_t)*(unsigned __int8 *)(a1 + 84) << 32);
    sub_1A54E3458(*(_QWORD *)(a1 + 72), v2, SBYTE4(v2));
  }
  __swift_destroy_boxed_opaque_existential_1(a1 + 96);
  if (*(_QWORD *)(a1 + 136))
  {
    swift_bridgeObjectRelease();
    sub_1A54E3458(*(_QWORD *)(a1 + 152), *(unsigned int *)(a1 + 160), *(_BYTE *)(a1 + 164));
    swift_bridgeObjectRelease();
  }
  sub_1A54E3458(*(_QWORD *)(a1 + 184), *(unsigned int *)(a1 + 192), *(_BYTE *)(a1 + 196));
  return sub_1A54E3458(*(_QWORD *)(a1 + 200), *(unsigned int *)(a1 + 208), *(_BYTE *)(a1 + 212));
}

uint64_t initializeWithCopy for FetchMessages(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unsigned __int8 v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  __int128 v16;
  uint64_t v17;
  unsigned int v18;
  char v19;
  uint64_t v20;
  unsigned int v21;
  char v22;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  v6 = (uint64_t *)(a2 + 72);
  v7 = *(_BYTE *)(a2 + 84);
  v8 = *(unsigned int *)(a2 + 80);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v7 == 255)
  {
    *(_QWORD *)(a1 + 72) = *v6;
    *(_QWORD *)(a1 + 77) = *(uint64_t *)((char *)v6 + 5);
  }
  else
  {
    v9 = v8 & 0xFFFFFF00FFFFFFFFLL | ((unint64_t)v7 << 32);
    v10 = *v6;
    sub_1A54E4334(*v6, v9, SBYTE4(v9));
    *(_QWORD *)(a1 + 72) = v10;
    *(_DWORD *)(a1 + 80) = v9;
    *(_BYTE *)(a1 + 84) = BYTE4(v9);
  }
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v11 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 120) = v11;
  (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 96, a2 + 96);
  v12 = *(_QWORD *)(a2 + 136);
  if (v12)
  {
    *(_QWORD *)(a1 + 136) = v12;
    *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
    v13 = *(_QWORD *)(a2 + 152);
    v14 = *(unsigned int *)(a2 + 160);
    v15 = *(_BYTE *)(a2 + 164);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54E4334(v13, v14, v15);
    *(_QWORD *)(a1 + 152) = v13;
    *(_DWORD *)(a1 + 160) = v14;
    *(_BYTE *)(a1 + 164) = v15;
    *(_DWORD *)(a1 + 165) = *(_DWORD *)(a2 + 165);
    *(_BYTE *)(a1 + 169) = *(_BYTE *)(a2 + 169);
    *(_BYTE *)(a1 + 170) = *(_BYTE *)(a2 + 170);
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    v16 = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 152) = v16;
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  }
  v17 = *(_QWORD *)(a2 + 184);
  v18 = *(_DWORD *)(a2 + 192);
  v19 = *(_BYTE *)(a2 + 196);
  sub_1A54E4334(v17, v18, v19);
  *(_QWORD *)(a1 + 184) = v17;
  *(_DWORD *)(a1 + 192) = v18;
  *(_BYTE *)(a1 + 196) = v19;
  v20 = *(_QWORD *)(a2 + 200);
  v21 = *(_DWORD *)(a2 + 208);
  v22 = *(_BYTE *)(a2 + 212);
  sub_1A54E4334(v20, v21, v22);
  *(_QWORD *)(a1 + 200) = v20;
  *(_DWORD *)(a1 + 208) = v21;
  *(_BYTE *)(a1 + 212) = v22;
  *(_DWORD *)(a1 + 216) = *(_DWORD *)(a2 + 216);
  *(_BYTE *)(a1 + 220) = *(_BYTE *)(a2 + 220);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  return a1;
}

uint64_t assignWithCopy for FetchMessages(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t *v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _OWORD *v15;
  uint64_t v16;
  _OWORD *v17;
  uint64_t v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  unsigned int v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  unsigned int v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  int v43;
  uint64_t v44;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = (uint64_t *)(a1 + 72);
  v5 = (uint64_t *)(a2 + 72);
  v6 = *(unsigned int *)(a2 + 80) | ((unint64_t)*(unsigned __int8 *)(a2 + 84) << 32);
  v7 = *(_BYTE *)(a2 + 84);
  if (*(unsigned __int8 *)(a1 + 84) == 255)
  {
    if (BYTE4(v6) == 255)
    {
      v8 = *v5;
      *(_QWORD *)(a1 + 77) = *(_QWORD *)(a2 + 77);
      *v4 = v8;
    }
    else
    {
      v10 = *v5;
      sub_1A54E4334(*v5, *(unsigned int *)(a2 + 80) | ((unint64_t)*(unsigned __int8 *)(a2 + 84) << 32), SBYTE4(v6));
      *(_QWORD *)(a1 + 72) = v10;
      *(_DWORD *)(a1 + 80) = v6;
      *(_BYTE *)(a1 + 84) = v7;
    }
  }
  else if (BYTE4(v6) == 255)
  {
    sub_1A552AB80(a1 + 72);
    v9 = *(_QWORD *)(a2 + 77);
    *v4 = *v5;
    *(_QWORD *)(a1 + 77) = v9;
  }
  else
  {
    v11 = *v5;
    sub_1A54E4334(*v5, *(unsigned int *)(a2 + 80) | ((unint64_t)*(unsigned __int8 *)(a2 + 84) << 32), SBYTE4(v6));
    v12 = *(_QWORD *)(a1 + 72);
    v13 = *(unsigned int *)(a1 + 80);
    *(_QWORD *)(a1 + 72) = v11;
    *(_DWORD *)(a1 + 80) = v6;
    v14 = *(_BYTE *)(a1 + 84);
    *(_BYTE *)(a1 + 84) = v7;
    sub_1A54E3458(v12, v13, v14);
  }
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 96), (uint64_t *)(a2 + 96));
  v15 = (_OWORD *)(a1 + 136);
  v17 = (_OWORD *)(a2 + 136);
  v16 = *(_QWORD *)(a2 + 136);
  if (*(_QWORD *)(a1 + 136))
  {
    if (v16)
    {
      *(_QWORD *)(a1 + 136) = v16;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
      v18 = *(_QWORD *)(a2 + 152);
      v19 = *(_DWORD *)(a2 + 160);
      v20 = *(_BYTE *)(a2 + 164);
      sub_1A54E4334(v18, v19, v20);
      v21 = *(_QWORD *)(a1 + 152);
      v22 = *(unsigned int *)(a1 + 160);
      *(_QWORD *)(a1 + 152) = v18;
      *(_DWORD *)(a1 + 160) = v19;
      v23 = *(_BYTE *)(a1 + 164);
      *(_BYTE *)(a1 + 164) = v20;
      sub_1A54E3458(v21, v22, v23);
      *(_BYTE *)(a1 + 165) = *(_BYTE *)(a2 + 165);
      *(_BYTE *)(a1 + 166) = *(_BYTE *)(a2 + 166);
      *(_BYTE *)(a1 + 167) = *(_BYTE *)(a2 + 167);
      *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
      *(_BYTE *)(a1 + 169) = *(_BYTE *)(a2 + 169);
      *(_BYTE *)(a1 + 170) = *(_BYTE *)(a2 + 170);
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1A55E54D4(a1 + 136);
      v28 = *(_OWORD *)(a2 + 152);
      v27 = *(_OWORD *)(a2 + 168);
      *v15 = *v17;
      *(_OWORD *)(a1 + 152) = v28;
      *(_OWORD *)(a1 + 168) = v27;
    }
  }
  else if (v16)
  {
    *(_QWORD *)(a1 + 136) = v16;
    *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
    v24 = *(_QWORD *)(a2 + 152);
    v25 = *(unsigned int *)(a2 + 160);
    v26 = *(_BYTE *)(a2 + 164);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54E4334(v24, v25, v26);
    *(_QWORD *)(a1 + 152) = v24;
    *(_DWORD *)(a1 + 160) = v25;
    *(_BYTE *)(a1 + 164) = v26;
    *(_DWORD *)(a1 + 165) = *(_DWORD *)(a2 + 165);
    *(_BYTE *)(a1 + 169) = *(_BYTE *)(a2 + 169);
    *(_BYTE *)(a1 + 170) = *(_BYTE *)(a2 + 170);
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    v29 = *v17;
    v30 = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 168) = v30;
    *v15 = v29;
  }
  v31 = *(_QWORD *)(a2 + 184);
  v32 = *(_DWORD *)(a2 + 192);
  v33 = *(_BYTE *)(a2 + 196);
  sub_1A54E4334(v31, v32, v33);
  v34 = *(_QWORD *)(a1 + 184);
  v35 = *(unsigned int *)(a1 + 192);
  *(_QWORD *)(a1 + 184) = v31;
  *(_DWORD *)(a1 + 192) = v32;
  v36 = *(_BYTE *)(a1 + 196);
  *(_BYTE *)(a1 + 196) = v33;
  sub_1A54E3458(v34, v35, v36);
  v37 = *(_QWORD *)(a2 + 200);
  v38 = *(_DWORD *)(a2 + 208);
  v39 = *(_BYTE *)(a2 + 212);
  sub_1A54E4334(v37, v38, v39);
  v40 = *(_QWORD *)(a1 + 200);
  v41 = *(unsigned int *)(a1 + 208);
  *(_QWORD *)(a1 + 200) = v37;
  *(_DWORD *)(a1 + 208) = v38;
  v42 = *(_BYTE *)(a1 + 212);
  *(_BYTE *)(a1 + 212) = v39;
  sub_1A54E3458(v40, v41, v42);
  v43 = *(_DWORD *)(a2 + 216);
  *(_BYTE *)(a1 + 220) = *(_BYTE *)(a2 + 220);
  *(_DWORD *)(a1 + 216) = v43;
  v44 = *(_QWORD *)(a2 + 224);
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  *(_QWORD *)(a1 + 224) = v44;
  return a1;
}

uint64_t sub_1A55E54D4(uint64_t a1)
{
  destroy for NewServerMessages(a1);
  return a1;
}

uint64_t assignWithTake for FetchMessages(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  unsigned __int8 v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  __int128 v17;
  int v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  int v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  v4 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v4;
  swift_bridgeObjectRelease();
  v5 = (_QWORD *)(a2 + 72);
  v6 = *(_BYTE *)(a1 + 84);
  if (v6 == 255)
    goto LABEL_4;
  v7 = *(unsigned int *)(a2 + 80) | ((unint64_t)*(unsigned __int8 *)(a2 + 84) << 32);
  if (HIDWORD(v7) > 0xFE)
  {
    sub_1A552AB80(a1 + 72);
LABEL_4:
    *(_QWORD *)(a1 + 72) = *v5;
    *(_QWORD *)(a1 + 77) = *(_QWORD *)(a2 + 77);
    goto LABEL_6;
  }
  v8 = *(unsigned int *)(a1 + 80);
  v9 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = *v5;
  *(_DWORD *)(a1 + 80) = v7;
  *(_BYTE *)(a1 + 84) = BYTE4(v7);
  sub_1A54E3458(v9, v8, v6);
LABEL_6:
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  __swift_destroy_boxed_opaque_existential_1(a1 + 96);
  v10 = *(_QWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  v11 = *(_QWORD *)(a1 + 136);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  if (!v11)
  {
LABEL_10:
    v17 = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 152) = v17;
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    goto LABEL_11;
  }
  if (!v10)
  {
    sub_1A55E54D4(a1 + 136);
    goto LABEL_10;
  }
  *(_QWORD *)(a1 + 136) = v10;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
  v12 = *(_DWORD *)(a2 + 160);
  v13 = *(_BYTE *)(a2 + 164);
  v14 = *(_QWORD *)(a1 + 152);
  v15 = *(unsigned int *)(a1 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_DWORD *)(a1 + 160) = v12;
  v16 = *(_BYTE *)(a1 + 164);
  *(_BYTE *)(a1 + 164) = v13;
  sub_1A54E3458(v14, v15, v16);
  *(_BYTE *)(a1 + 165) = *(_BYTE *)(a2 + 165);
  *(_BYTE *)(a1 + 166) = *(_BYTE *)(a2 + 166);
  *(_BYTE *)(a1 + 167) = *(_BYTE *)(a2 + 167);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_BYTE *)(a1 + 169) = *(_BYTE *)(a2 + 169);
  *(_BYTE *)(a1 + 170) = *(_BYTE *)(a2 + 170);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRelease();
LABEL_11:
  v18 = *(_DWORD *)(a2 + 192);
  v19 = *(_BYTE *)(a2 + 196);
  v20 = *(_QWORD *)(a1 + 184);
  v21 = *(unsigned int *)(a1 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_DWORD *)(a1 + 192) = v18;
  v22 = *(_BYTE *)(a1 + 196);
  *(_BYTE *)(a1 + 196) = v19;
  sub_1A54E3458(v20, v21, v22);
  v23 = *(_DWORD *)(a2 + 208);
  v24 = *(_BYTE *)(a2 + 212);
  v25 = *(_QWORD *)(a1 + 200);
  v26 = *(unsigned int *)(a1 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_DWORD *)(a1 + 208) = v23;
  v27 = *(_BYTE *)(a1 + 212);
  *(_BYTE *)(a1 + 212) = v24;
  sub_1A54E3458(v25, v26, v27);
  *(_DWORD *)(a1 + 216) = *(_DWORD *)(a2 + 216);
  *(_BYTE *)(a1 + 220) = *(_BYTE *)(a2 + 220);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  return a1;
}

uint64_t getEnumTagSinglePayload for FetchMessages(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 233))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FetchMessages(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 232) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 233) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 233) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FetchMessages()
{
  return &type metadata for FetchMessages;
}

unint64_t sub_1A55E5818()
{
  unint64_t result;

  result = qword_1EE797290;
  if (!qword_1EE797290)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A98DC, &type metadata for FetchMessages.ActionID);
    atomic_store(result, (unint64_t *)&qword_1EE797290);
  }
  return result;
}

unint64_t sub_1A55E5860()
{
  unint64_t result;

  result = qword_1EE797298;
  if (!qword_1EE797298)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A98B4, &type metadata for FetchMessages.CommandID);
    atomic_store(result, (unint64_t *)&qword_1EE797298);
  }
  return result;
}

unint64_t sub_1A55E58A4(uint64_t a1)
{
  unint64_t result;

  result = sub_1A55E58C8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A55E58C8()
{
  unint64_t result;

  result = qword_1EE7972A8;
  if (!qword_1EE7972A8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A9870, &type metadata for FetchMessages);
    atomic_store(result, (unint64_t *)&qword_1EE7972A8);
  }
  return result;
}

uint64_t sub_1A55E590C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A55E385C(a1, a2 & 0x1010101FFFF01, *(_QWORD **)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1A55E5928(uint64_t a1)
{
  sub_1A55212D0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  return a1;
}

uint64_t sub_1A55E5958(uint64_t a1)
{
  sub_1A54E8FCC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  return a1;
}

uint64_t sub_1A55E5988(uint64_t a1)
{
  uint64_t v1;

  return sub_1A55E4550(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1A55E5990(int a1, uint64_t a2, uint64_t a3)
{
  return sub_1A55E59A8(a1, a2, a3) & 1;
}

uint64_t sub_1A55E59A8(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  int v61;

  v4 = v3;
  v61 = a1;
  v7 = type metadata accessor for TaskHistory.Running(0);
  v53 = *(_QWORD *)(v7 - 8);
  v54 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v49 - v11;
  v13 = type metadata accessor for TaskHistory.Previous(0);
  MEMORY[0x1E0C80A78](v13);
  v56 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v55 = (char *)&v49 - v16;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v49 - v18;
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v49 - v22;
  v24 = *(_QWORD *)(a3 + 16);
  if (!v24)
    return 0;
  v59 = v12;
  v60 = v9;
  v50 = a2;
  v57 = v4;
  v58 = a3;
  v25 = a3 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
  v26 = *(_QWORD *)(v21 + 72);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v51 = v25;
  v52 = v24;
  v27 = v24;
  while (1)
  {
    sub_1A55034B8(v25, (uint64_t)v23, type metadata accessor for TaskHistory.Previous);
    sub_1A55034B8((uint64_t)v23, (uint64_t)v19, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() != 1)
      break;
    sub_1A55034FC((uint64_t)v19, type metadata accessor for TaskHistory.Previous);
LABEL_4:
    sub_1A55034FC((uint64_t)v23, type metadata accessor for TaskHistory.Previous);
    v25 += v26;
    if (!--v27)
    {
      v47 = 0;
      goto LABEL_25;
    }
  }
  v28 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797DD8);
  v29 = v26;
  v30 = v13;
  v31 = *(_DWORD *)&v19[*(int *)(v28 + 48)];
  sub_1A55034FC((uint64_t)v19, type metadata accessor for ClientCommand);
  v32 = v31 == v61;
  v13 = v30;
  v26 = v29;
  if (!v32)
    goto LABEL_4;
  sub_1A55034FC((uint64_t)v23, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v34 = (uint64_t)v55;
  v33 = (uint64_t)v56;
  v35 = v51;
  v36 = v52;
  while (1)
  {
    v37 = v35;
    sub_1A55034B8(v35, v34, type metadata accessor for TaskHistory.Previous);
    sub_1A55034B8(v34, v33, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() != 1)
      break;
    sub_1A55034FC(v33, type metadata accessor for TaskHistory.Previous);
LABEL_10:
    sub_1A55034FC(v34, type metadata accessor for TaskHistory.Previous);
    v35 = v37 + v26;
    if (!--v36)
    {
      v47 = 1;
      goto LABEL_25;
    }
  }
  v38 = v36;
  v39 = *(_DWORD *)(v33 + *(int *)(v28 + 48));
  sub_1A55034FC(v33, type metadata accessor for ClientCommand);
  v32 = v39 == v61;
  v36 = v38;
  v26 = v29;
  if (!v32)
    goto LABEL_10;
  sub_1A55034FC(v34, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease();
  v40 = *(_QWORD *)(v50 + 16);
  if (!v40)
    return 0;
  v41 = v50 + ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80));
  v42 = *(_QWORD *)(v53 + 72);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v44 = (uint64_t)v59;
  v43 = (uint64_t)v60;
  do
  {
    sub_1A55034B8(v41, v44, type metadata accessor for TaskHistory.Running);
    sub_1A55034B8(v44, v43, type metadata accessor for TaskHistory.Running);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1A55034FC(v43, type metadata accessor for TaskHistory.Running);
    }
    else
    {
      v45 = *((_DWORD *)v60 + 2);
      v46 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308);
      sub_1A55034FC((uint64_t)&v60[*(int *)(v46 + 64)], type metadata accessor for ClientCommand);
      v32 = v45 == v61;
      v43 = (uint64_t)v60;
      if (v32)
      {
        sub_1A55034FC((uint64_t)v59, type metadata accessor for TaskHistory.Running);
        v47 = 1;
        goto LABEL_25;
      }
    }
    v44 = (uint64_t)v59;
    sub_1A55034FC((uint64_t)v59, type metadata accessor for TaskHistory.Running);
    v41 += v42;
    --v40;
  }
  while (v40);
  v47 = 0;
LABEL_25:
  swift_bridgeObjectRelease();
  return v47;
}

unint64_t sub_1A55E5DCC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t result;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  char v64;
  uint64_t v65;
  int v66;
  uint64_t v67;

  v4 = a1;
  if ((a4 & 0x100000000) != 0)
  {
    v44 = HIDWORD(a1) & 1;
    goto LABEL_20;
  }
  v5 = a3;
  v6 = a2;
  if ((_DWORD)a4 == -1)
  {
    sub_1A54E4334(a2, a3, SBYTE4(a3));
    v7 = HIDWORD(v5);
    if ((v4 & 0x100000000) == 0)
      goto LABEL_4;
LABEL_13:
    v54 = sub_1A5531838(v6, v5 | ((unint64_t)v7 << 32));
    LODWORD(v4) = v54;
    v55 = HIDWORD(v54) & 1;
    sub_1A54E3458(v6, v5, v7);
    LOBYTE(v44) = v55;
    goto LABEL_20;
  }
  v66 = -1;
  v45 = sub_1A54E3414();
  static MessageIdentifier.... infix(_:_:)();
  v65 = v67;
  MessageIdentifierSet.init(_:)((uint64_t)&v65, (uint64_t)&type metadata for UID, v45, v46);
  v48 = v47;
  v50 = v49;
  v51 = HIDWORD(v49);
  MessageIdentifierSet.subtracting(_:)(v47, v49 & 0xFFFFFFFFFFLL, v6, v5 & 0xFFFFFFFFFFLL);
  v6 = v52;
  v5 = v53;
  v7 = HIDWORD(v53);
  sub_1A54E3458(v48, v50, v51);
  if ((v4 & 0x100000000) != 0)
    goto LABEL_13;
LABEL_4:
  if ((_DWORD)v4 == -1)
  {
    sub_1A54E3458(v6, v5, v7);
    LOBYTE(v44) = 0;
    LODWORD(v4) = -1;
    goto LABEL_20;
  }
  v8 = sub_1A54E3414();
  static MessageIdentifierRange.all.getter();
  MessageIdentifierSet.init(_:)((uint64_t)&v67, (uint64_t)&type metadata for UID, v8, v9);
  v11 = v10;
  v13 = v12;
  v14 = HIDWORD(v12);
  v59 = v5 | ((unint64_t)v7 << 32);
  MessageIdentifierSet.subtracting(_:)(v6, v59, v10, v12 & 0xFFFFFFFFFFLL);
  v60 = v15;
  v64 = v7;
  v17 = v16;
  v63 = HIDWORD(v16);
  sub_1A54E3458(v11, v13, v14);
  LODWORD(v65) = 1;
  v66 = v4;
  static MessageIdentifier.... infix(_:_:)();
  v65 = v67;
  MessageIdentifierSet.init(_:)((uint64_t)&v65, (uint64_t)&type metadata for UID, v8, v18);
  v20 = v19;
  v22 = v21;
  v23 = HIDWORD(v21);
  MessageIdentifierSet.subtracting(_:)(v19, v21 & 0xFFFFFFFFFFLL, v60, v17 & 0xFFFFFFFFFFLL);
  v61 = v5;
  v25 = v24;
  v27 = v26;
  v62 = HIDWORD(v26);
  sub_1A54E3458(v20, v22, v23);
  sub_1A54E3458(v60, v17, v63);
  MessageIdentifierSet.ranges.getter(v25, v27 & 0xFFFFFFFFFFLL);
  v29 = v28;
  v31 = v30;
  v32 = HIDWORD(v30);
  v33 = v30 & 0xFFFFFFFFFFLL;
  if (!MessageIdentifierSet.RangeView.endIndex.getter(v28, v30 & 0xFFFFFFFFFFLL))
  {
    sub_1A54E3458(v29, v31, v32);
    sub_1A54E3458(v25, v27, v62);
    v56 = v6;
    v57 = v61;
    v58 = v64;
    goto LABEL_18;
  }
  MessageIdentifierSet.RangeView.subscript.getter(0, v29, v33);
  sub_1A54E3458(v29, v31, v32);
  result = sub_1A54E3458(v25, v27, v62);
  if (v67 <= v4)
  {
    v56 = v6;
    v57 = v61;
    v58 = v64;
    goto LABEL_18;
  }
  if (v67 >= 2)
  {
    v35 = v67 - 1;
    if (v4 < (int)v67 - 1)
    {
      LODWORD(v65) = v4 + 1;
      v66 = v67 - 1;
      static MessageIdentifier.... infix(_:_:)();
      v65 = v67;
      MessageIdentifierSet.init(_:)((uint64_t)&v65, (uint64_t)&type metadata for UID, v8, v36);
      v38 = v37;
      v40 = v39;
      v41 = HIDWORD(v39);
      MessageIdentifierSet.isSubset(of:)(v6, v59, v37, v39 & 0xFFFFFFFFFFLL);
      v43 = v42;
      sub_1A54E3458(v6, v61, v64);
      sub_1A54E3458(v38, v40, v41);
      if ((v43 & 1) != 0)
      {
        LOBYTE(v44) = 0;
        LODWORD(v4) = v35;
LABEL_20:
        LOBYTE(v67) = v44;
        return v4 | ((unint64_t)v44 << 32);
      }
LABEL_19:
      LOBYTE(v44) = 0;
      goto LABEL_20;
    }
    v56 = v6;
    v57 = v61;
    v58 = v64;
LABEL_18:
    sub_1A54E3458(v56, v57, v58);
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A55E6208(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;

  v3 = a1;
  if (a1 >= 2)
  {
    v6 = sub_1A54E3414();
    static MessageIdentifierRange.all.getter();
    MessageIdentifierSet.init(_:)((uint64_t)&v44, (uint64_t)&type metadata for UID, v6, v7);
    v9 = v8;
    v11 = v10;
    v12 = HIDWORD(v10);
    v38 = a3 & 0xFFFFFFFFFFLL;
    v39 = a2;
    MessageIdentifierSet.subtracting(_:)(a2, a3 & 0xFFFFFFFFFFLL, v8, v10 & 0xFFFFFFFFFFLL);
    v14 = v13;
    v16 = v15;
    v41 = HIDWORD(v15);
    sub_1A54E3458(v9, v11, v12);
    v43 = -1;
    static MessageIdentifier.... infix(_:_:)();
    v42 = v44;
    MessageIdentifierSet.init(_:)((uint64_t)&v42, (uint64_t)&type metadata for UID, v6, v17);
    v19 = v18;
    v21 = v20;
    v22 = HIDWORD(v20);
    MessageIdentifierSet.subtracting(_:)(v18, v20 & 0xFFFFFFFFFFLL, v14, v16 & 0xFFFFFFFFFFLL);
    v24 = v23;
    v26 = v25;
    v40 = HIDWORD(v25);
    sub_1A54E3458(v19, v21, v22);
    sub_1A54E3458(v14, v16, v41);
    v27 = sub_1A5531838(v24, v26 & 0xFFFFFFFFFFLL);
    sub_1A54E3458(v24, v26, v40);
    if ((v27 & 0x100000000) != 0)
    {
      v28 = 1;
      if (v3 <= 1)
        return v3;
    }
    else
    {
      if (v27 >= v3)
        return v3;
      v28 = v27 + 1;
      if ((int)v27 + 1 >= v3)
        return v3;
    }
    LODWORD(v42) = v28;
    v43 = v3 - 1;
    static MessageIdentifier.... infix(_:_:)();
    v42 = v44;
    MessageIdentifierSet.init(_:)((uint64_t)&v42, (uint64_t)&type metadata for UID, v6, v29);
    v31 = v30;
    v33 = v32;
    v34 = HIDWORD(v32);
    MessageIdentifierSet.isSubset(of:)(v39, v38, v30, v32 & 0xFFFFFFFFFFLL);
    v36 = v35;
    sub_1A54E3458(v31, v33, v34);
    if ((v36 & 1) != 0)
      return v28;
    else
      return v3;
  }
  return v3;
}

uint64_t sub_1A55E6438(const void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, NSObject *a6)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _BYTE v21[592];
  _BYTE v22[584];
  _BYTE v23[584];
  _BYTE __dst[584];
  _BYTE v25[584];

  sub_1A552316C(a1, v22);
  sub_1A552316C(v22, v25);
  v12 = sub_1A562ACE0(a4);
  v13 = *(_QWORD *)(v12 + 16);
  if (!v13)
    return swift_bridgeObjectRelease();
  v14 = 0;
  while ((sub_1A55E59A8(*(_DWORD *)(v12 + 4 * v14 + 32), a2, a3) & 1) == 0)
  {
    if (v13 == ++v14)
      return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_1A552316C(a1, v23);
  result = sub_1A5523B90((uint64_t)v23);
  if ((_DWORD)result == 19)
  {
    v16 = (const void *)sub_1A5524678((uint64_t)v23);
    result = (uint64_t)memcpy(__dst, v16, sizeof(__dst));
    v17 = *(_QWORD *)(v6 + 64);
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      v19 = *(_DWORD *)(v17 + 8 * v18 + 24);
      if (!*(_QWORD *)(v6 + 136))
        return result;
    }
    else
    {
      v19 = 1;
      if (!*(_QWORD *)(v6 + 136))
        return result;
    }
    sub_1A552316C(v25, v21);
    v20 = sub_1A5524678((uint64_t)v21);
    sub_1A5529C18(v20);
    sub_1A561F49C((uint64_t)__dst, v19, a6);
    return sub_1A5529E00((uint64_t)a1);
  }
  return result;
}

uint64_t sub_1A55E6584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unsigned int v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _DWORD *v77;
  unint64_t v78;
  int v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  NSObject *v86;
  os_log_type_t v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t isa_high;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  int v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  char v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  NSObject *v115;
  os_log_type_t v116;
  int v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  unint64_t v121;
  uint64_t v122;
  int v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  os_log_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char v145;
  uint64_t v146;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  unint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  unint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  _DWORD *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  uint64_t v168;
  unint64_t v169;
  char *v170;
  char *v171;
  os_log_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  unint64_t v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  int v180;
  uint64_t v181;
  char v182[8];
  uint64_t v183;
  int v184;
  char v185;
  uint64_t v186;
  int v187;
  char v188;
  int v189;
  char v190;
  uint64_t v191;
  unsigned int v192;
  unsigned __int8 v193;
  unsigned int v194;
  unsigned __int8 v195;

  v177 = a6;
  v176 = a5;
  v172 = (os_log_t)type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v172);
  v13 = (char *)&v148 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v148 - v15;
  v17 = sub_1A594A764();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v173 = (char *)&v148 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v148 - v21;
  v175 = v23;
  v174 = v18;
  v178 = v13;
  if ((~a4 & 0xFF00000000) != 0)
  {
    v24 = *(unsigned __int8 *)(a1 + 436);
    if (!(v24 >> 6))
    {
      v164 = a2;
      v171 = v16;
      v165 = a7;
      v25 = *(_QWORD *)(a1 + 376);
      v26 = *(_QWORD *)(a1 + 384);
      v168 = *(_QWORD *)(a1 + 392);
      v167 = *(_QWORD *)(a1 + 400);
      v169 = *(_QWORD *)(a1 + 408);
      v161 = *(_QWORD *)(a1 + 416);
      v162 = *(_QWORD *)(a1 + 424);
      v27 = *(unsigned int *)(a1 + 432);
      v163 = (_DWORD *)(a1 + 432);
      v28 = v27 & 0xFFFFFF00FFFFFFFFLL | ((unint64_t)v24 << 32);
      v159 = HIDWORD(v28);
      sub_1A54E3414();
      v160 = v26;
      MessageIdentifierSet.intersection(_:)(a3, a4 & 0xFFFFFFFFFFLL, v25, v26 & 0xFFFFFFFFFFLL);
      v30 = v29;
      v32 = v31;
      v158 = HIDWORD(v31);
      v33 = v31 & 0xFFFFFFFFFFLL;
      MessageIdentifierSet.subtracting(_:)(v29, v31 & 0xFFFFFFFFFFLL, v25, v26 & 0xFFFFFFFFFFLL);
      v166 = MessageIdentifierSetNonEmpty.init(set:)(v35, v34 & 0xFFFFFFFFFFLL);
      if (BYTE4(v36) == 255)
      {
        sub_1A54E3458(v30, v32, v158);
        v37 = v162;
        sub_1A54E4334(v162, v28, v159);
        v38 = v25;
        v39 = v161;
        sub_1A55E7740(v38, v160, v168, v167, v169, v161, v37, v28);
        *(_QWORD *)(a1 + 376) = v39 & 0x1FFFFFFFFLL;
        *(_QWORD *)(a1 + 384) = v37;
        *(_QWORD *)(a1 + 392) = v28;
        *(_OWORD *)(a1 + 400) = 0u;
        *(_OWORD *)(a1 + 416) = 0u;
        v40 = 0x4000000000;
        v17 = v175;
        v18 = v174;
        v13 = v178;
        a7 = v165;
      }
      else
      {
        v41 = v36;
        v155 = v28;
        v156 = v25;
        v170 = v22;
        v42 = HIDWORD(v169) & 1;
        v154 = HIDWORD(v36);
        MessageIdentifierSet.union(_:)(v30, v33, v168, v167 & 0xFFFFFFFFFFLL);
        v44 = v43;
        v46 = v45;
        v47 = HIDWORD(v45);
        sub_1A54E3458(v30, v32, v158);
        v48 = v166;
        v183 = v166;
        v184 = v41;
        v185 = v154;
        v186 = v44;
        v187 = v46;
        v188 = v47;
        v49 = v169;
        v189 = v169;
        v149 = v42;
        v190 = v42;
        sub_1A5503BA0(v166, v41);
        v157 = v44;
        v152 = v46;
        v154 = v47;
        sub_1A54E4334(v44, v46, v47);
        sub_1A5531E98();
        v51 = v50;
        v151 = HIDWORD(v50);
        v150 = v52;
        v158 = v50 & 0xFFFFFFFFFFLL;
        v153 = v41 & 0xFFFFFFFFFFLL;
        MessageIdentifierSet.intersection(_:)(v52, v50 & 0xFFFFFFFFFFLL, v48, v41 & 0xFFFFFFFFFFLL);
        v54 = v53;
        v56 = v55;
        v57 = HIDWORD(v55);
        v58 = MessageIdentifierSet.count.getter(v53, v55 & 0xFFFFFFFFFFLL);
        sub_1A54E3458(v54, v56, v57);
        if (v58 <= 0)
        {
          v71 = v49;
          v69 = v161;
          sub_1A54E3458(v150, v51, v151);
          sub_1A5503B8C(v166, v41);
          v72 = v152;
          sub_1A54E3458(v157, v152, v154);
          v158 = v72 & 0xFFFFFFFFFFLL;
          v68 = v69;
          v70 = HIDWORD(v69) & 1;
          v18 = v174;
          v13 = v178;
          a7 = v165;
          v67 = v71;
          v40 = v155;
        }
        else
        {
          v59 = v152;
          v60 = v150;
          v61 = v158;
          v70 = v157;
          v158 = v152 & 0xFFFFFFFFFFLL;
          MessageIdentifierSet.intersection(_:)(v150, v61, v157, v152 & 0xFFFFFFFFFFLL);
          v63 = v62;
          v65 = v64;
          v66 = HIDWORD(v64);
          sub_1A54E3458(v60, v51, v151);
          MessageIdentifierSet.count.getter(v63, v65 & 0xFFFFFFFFFFLL);
          sub_1A54E3458(v63, v65, v66);
          sub_1A5503B8C(v166, v41);
          sub_1A54E3458(v70, v59, v154);
          v67 = v169;
          v68 = v169;
          v18 = v174;
          v13 = v178;
          a7 = v165;
          v69 = v161;
          v40 = v155;
          LODWORD(v70) = v149;
        }
        v73 = v162;
        sub_1A54E4334(v162, v40, v159);
        sub_1A55E7740(v156, v160, v168, v167, v67, v69, v73, v40);
        v74 = 0x100000000;
        if (!(_DWORD)v70)
          v74 = 0;
        v75 = v153;
        *(_QWORD *)(a1 + 376) = v166;
        *(_QWORD *)(a1 + 384) = v75;
        v76 = v158;
        *(_QWORD *)(a1 + 392) = v157;
        *(_QWORD *)(a1 + 400) = v76;
        *(_QWORD *)(a1 + 408) = v74 & 0xFFFFFFFF00000000 | v68;
        *(_QWORD *)(a1 + 416) = v69 & 0x1FFFFFFFFLL;
        *(_QWORD *)(a1 + 424) = v73;
        v17 = v175;
        v22 = v170;
      }
      LOWORD(a2) = v164;
      v77 = v163;
      *v163 = v40;
      *((_BYTE *)v77 + 4) = BYTE4(v40);
      v16 = v171;
    }
  }
  sub_1A5510484(a1 + 376, (uint64_t)v182);
  if ((sub_1A5534138(v176, v177) & 1) != 0 && (a2 & 0xFF00) == 0)
  {
    sub_1A5510484((uint64_t)v182, (uint64_t)&v191);
    v78 = v194 | ((unint64_t)v195 << 32);
    v79 = v195 >> 6;
    if (v79)
    {
      v80 = 0;
      if (v79 == 1)
        v195 = BYTE4(v78) & 0x3F;
    }
    else
    {
      v195 = BYTE4(v78) & 0x3F;
      v81 = v16;
      v82 = v191;
      v83 = v192;
      v84 = v193;
      sub_1A54E3414();
      v85 = v82;
      v16 = v81;
      v80 = MessageIdentifierSet.count.getter(v85, v83 | (v84 << 32));
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v22, a7, v17);
    sub_1A55034B8(a7, (uint64_t)v16, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v86 = sub_1A594A74C();
    v87 = sub_1A594C030();
    v88 = v87;
    if (os_log_type_enabled(v86, v87))
    {
      v89 = swift_slowAlloc();
      v176 = v80;
      v90 = v89;
      v177 = swift_slowAlloc();
      v181 = v177;
      *(_DWORD *)v90 = 68159491;
      LODWORD(v179) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v90 + 8) = 256;
      isa_high = SHIDWORD(v172[2].isa);
      v171 = v16;
      v92 = &v16[isa_high];
      LOBYTE(v179) = *v92;
      sub_1A594C3CC();
      *(_WORD *)(v90 + 11) = 2082;
      v170 = v22;
      LODWORD(v169) = v88;
      v93 = a7;
      v94 = *((_QWORD *)v92 + 1);
      v95 = *((_QWORD *)v92 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v179 = sub_1A55791B0(v94, v95, &v181);
      sub_1A594C3CC();
      a7 = v93;
      swift_bridgeObjectRelease();
      *(_WORD *)(v90 + 21) = 1040;
      LODWORD(v179) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v90 + 27) = 512;
      LOWORD(v179) = *((_WORD *)v92 + 12);
      v17 = v175;
      sub_1A594C3CC();
      *(_WORD *)(v90 + 31) = 2160;
      v179 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v90 + 41) = 2085;
      v96 = *((_DWORD *)v92 + 10);
      v179 = *((_QWORD *)v92 + 4);
      v180 = v96;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v97 = sub_1A594B4A8();
      v179 = sub_1A55791B0(v97, v98, &v181);
      v18 = v174;
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v171, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v90 + 51) = 2048;
      v179 = v176;
      v13 = v178;
      sub_1A594C3CC();
      _os_log_impl(&dword_1A4F90000, v86, (os_log_type_t)v169, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] %ld remaining known-to-be-missing. Requesting FindMissingMessages to re-run.", (uint8_t *)v90, 0x3Du);
      v99 = v177;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v99, -1, -1);
      MEMORY[0x1A85B1964](v90, -1, -1);

      (*(void (**)(char *, uint64_t))(v18 + 8))(v170, v17);
    }
    else
    {
      sub_1A55034FC((uint64_t)v16, type metadata accessor for MailboxTaskLogger);

      (*(void (**)(char *, uint64_t))(v18 + 8))(v22, v17);
    }
    sub_1A554B85C(0xCu);
    sub_1A54F3290(&v179, 12);
  }
  v100 = *(unsigned int *)(a1 + 432) | ((unint64_t)*(unsigned __int8 *)(a1 + 436) << 32);
  if (*(unsigned __int8 *)(a1 + 436) >> 6)
    return 0;
  v102 = v18;
  v104 = *(_QWORD *)(a1 + 376);
  v103 = *(_QWORD *)(a1 + 384);
  v105 = v17;
  v177 = *(_QWORD *)(a1 + 392);
  v106 = a7;
  v107 = *(_QWORD *)(a1 + 400);
  v168 = *(_QWORD *)(a1 + 408);
  v108 = *(_QWORD *)(a1 + 424);
  v167 = *(_QWORD *)(a1 + 416);
  v171 = (char *)HIDWORD(v100);
  v109 = v173;
  (*(void (**)(char *, uint64_t, uint64_t))(v102 + 16))(v173, v106, v105);
  sub_1A55034B8(v106, (uint64_t)v13, type metadata accessor for MailboxTaskLogger);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  sub_1A54E4334(v104, v103, SBYTE4(v103));
  v110 = v177;
  sub_1A54E4334(v177, v107, SBYTE4(v107));
  v111 = (char)v171;
  sub_1A54E4334(v108, v100, (char)v171);
  v169 = v104;
  v112 = v104;
  v113 = v110;
  v165 = v103;
  sub_1A54E4334(v112, v103, SBYTE4(v103));
  v176 = v107;
  v170 = (char *)HIDWORD(v107);
  sub_1A54E4334(v110, v107, SBYTE4(v107));
  v166 = v108;
  sub_1A54E4334(v108, v100, v111);
  v114 = v109;
  v115 = sub_1A594A74C();
  v116 = sub_1A594C030();
  v117 = v116;
  if (os_log_type_enabled(v115, v116))
  {
    v118 = swift_slowAlloc();
    LODWORD(v171) = v117;
    v119 = v118;
    v164 = swift_slowAlloc();
    v181 = v164;
    *(_DWORD *)v119 = 68159491;
    LODWORD(v179) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v119 + 8) = 256;
    v120 = &v178[SHIDWORD(v172[2].isa)];
    LOBYTE(v179) = *v120;
    sub_1A594C3CC();
    *(_WORD *)(v119 + 11) = 2082;
    v122 = *((_QWORD *)v120 + 1);
    v121 = *((_QWORD *)v120 + 2);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v179 = sub_1A55791B0(v122, v121, &v181);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v119 + 21) = 1040;
    LODWORD(v179) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v119 + 27) = 512;
    LOWORD(v179) = *((_WORD *)v120 + 12);
    sub_1A594C3CC();
    *(_WORD *)(v119 + 31) = 2160;
    v179 = 0x786F626C69616DLL;
    sub_1A594C3CC();
    *(_WORD *)(v119 + 41) = 2085;
    v123 = *((_DWORD *)v120 + 10);
    v179 = *((_QWORD *)v120 + 4);
    v180 = v123;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v124 = sub_1A594B4A8();
    v179 = sub_1A55791B0(v124, v125, &v181);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC((uint64_t)v178, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v119 + 51) = 2048;
    v178 = (char *)(v119 + 53);
    sub_1A54E3414();
    v126 = v165;
    v163 = (_DWORD *)(v165 & 0xFFFFFFFFFFLL);
    v127 = v169;
    v128 = MessageIdentifierSet.count.getter(v169, v165 & 0xFFFFFFFFFFLL);
    v129 = v176;
    v172 = v115;
    v130 = v168;
    v131 = v167;
    v132 = v166;
    sub_1A55E7740(v127, v126, v177, v176, v168, v167, v166, v100);
    v179 = v128;
    v113 = v177;
    sub_1A594C3CC();
    v133 = v129;
    v134 = (uint64_t)v163;
    sub_1A55E7740(v127, v126, v113, v133, v130, v131, v132, v100);
    v135 = v172;
    _os_log_impl(&dword_1A4F90000, v172, (os_log_type_t)v171, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Missing: %ld.", (uint8_t *)v119, 0x3Du);
    v136 = v164;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v136, -1, -1);
    v137 = v119;
    v138 = v127;
    MEMORY[0x1A85B1964](v137, -1, -1);

    (*(void (**)(char *, uint64_t))(v174 + 8))(v173, v175);
  }
  else
  {
    v138 = v169;
    v139 = v165;
    v140 = v110;
    v141 = v176;
    v142 = v168;
    v143 = v167;
    v144 = v166;
    sub_1A55E7740(v169, v165, v140, v176, v168, v167, v166, v100);
    sub_1A55034FC((uint64_t)v178, type metadata accessor for MailboxTaskLogger);
    sub_1A55E7740(v138, v139, v113, v141, v142, v143, v144, v100);

    (*(void (**)(char *, uint64_t))(v174 + 8))(v114, v175);
    v134 = v139 & 0xFFFFFFFFFFLL;
  }
  v145 = (char)v170;
  sub_1A54E3414();
  v101 = MessageIdentifierSet.count.getter(v138, v134);
  v146 = v176;
  sub_1A54E4334(v113, v176, v145);
  MessageIdentifierSet.count.getter(v113, v146 & 0xFFFFFFFFFFLL);
  sub_1A54E3458(v113, v146, v145);
  return v101;
}

uint64_t sub_1A55E76A4(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v6;

  if (result)
  {
    v6 = HIDWORD(a4);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54E4334(a3, a4, v6);
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return result;
}

uint64_t sub_1A55E76F4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    sub_1A54E3458(a3, a4, SBYTE4(a4));
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A55E7740(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  uint64_t v9;
  unint64_t v13;
  char v14;

  v9 = (a8 >> 38) & 3;
  if ((_DWORD)v9 == 1)
    return sub_1A54E3458(a2, a3, SBYTE4(a3));
  if (!(_DWORD)v9)
  {
    v13 = HIDWORD(a4);
    v14 = BYTE4(a8);
    sub_1A54E3458(result, a2, SBYTE4(a2));
    sub_1A54E3458(a3, a4, v13);
    return sub_1A54E3458(a7, a8, v14);
  }
  return result;
}

uint64_t sub_1A55E77D8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t storeEnumTagSinglePayload for FetchMessages.CommandID(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A55E7844 + 4 * asc_1A59A983E[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A55E7864 + 4 * byte_1A59A9843[v4]))();
}

_BYTE *sub_1A55E7844(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A55E7864(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A55E786C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A55E7874(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A55E787C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A55E7884(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FetchMessages.CommandID()
{
  return &type metadata for FetchMessages.CommandID;
}

uint64_t storeEnumTagSinglePayload for FetchMessages.ActionID(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A55E78EC + 4 * byte_1A59A984D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A55E7920 + 4 * byte_1A59A9848[v4]))();
}

uint64_t sub_1A55E7920(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A55E7928(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A55E7930);
  return result;
}

uint64_t sub_1A55E793C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A55E7944);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A55E7948(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A55E7950(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FetchMessages.ActionID()
{
  return &type metadata for FetchMessages.ActionID;
}

ValueMetadata *type metadata accessor for FetchMessages.MissingUIDs()
{
  return &type metadata for FetchMessages.MissingUIDs;
}

double sub_1A55E797C@<D0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, char a10, char a11, char a12, char a13, char a14, char a15)
{
  uint64_t v21;
  int v22;
  __int128 v23;
  double result;
  uint64_t v25;
  char v26;
  __int128 v27;
  __int128 v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  char v34;
  ValueMetadata *v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  _QWORD v46[9];
  _BYTE v47[88];
  _OWORD v48[4];
  _BYTE v49[21];
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  _OWORD v54[2];
  uint64_t v55;
  int v56;

  v25 = MEMORY[0x1E0DEE9E8];
  v26 = 0;
  sub_1A55EBDF4(a6, a7, a8 & 1, (uint64_t)v47);
  sub_1A55032A0((uint64_t)v47, (uint64_t)v48, &qword_1EE797BB0);
  if (*(_QWORD *)&v48[0])
  {
    v52 = v48[2];
    v53 = v48[3];
    v54[0] = *(_OWORD *)v49;
    v50 = v48[0];
    *(_QWORD *)((char *)v54 + 13) = *(_QWORD *)&v49[13];
    v51 = v48[1];
    v21 = *((_QWORD *)a1 + 3);
    v22 = *((_DWORD *)a1 + 8);
    v35 = &type metadata for FetchSearchResultMessages;
    v55 = v21;
    v56 = v22;
    sub_1A550F734();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594C6B4();
    v23 = a1[1];
    v27 = *a1;
    v28 = v23;
    v29 = *((_DWORD *)a1 + 8);
    v30 = a2;
    v31 = a3;
    v32 = a4;
    v34 = BYTE4(a5);
    v33 = a5;
    memset(&v46[3], 0, 48);
    v36 = a10 & 1;
    v37 = a11 & 1;
    v38 = a12 & 1;
    v39 = a13 & 1;
    v40 = a14 & 1;
    v41 = a15 & 1;
    v44 = v52;
    v45 = v53;
    *(_OWORD *)v46 = v54[0];
    *(_QWORD *)((char *)&v46[1] + 5) = *(_QWORD *)((char *)v54 + 13);
    v42 = v50;
    v43 = v51;
    sub_1A550ED78((uint64_t)&v25, a9);
    sub_1A550EEC0((uint64_t)&v25);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1A5503B8C(a4, a5);
    v50 = *a1;
    sub_1A54F81BC((uint64_t)&v50);
    v55 = *((_QWORD *)a1 + 3);
    v56 = *((_DWORD *)a1 + 8);
    sub_1A54F81BC((uint64_t)&v55);
    *(_QWORD *)(a9 + 272) = 0;
    result = 0.0;
    *(_OWORD *)(a9 + 240) = 0u;
    *(_OWORD *)(a9 + 256) = 0u;
    *(_OWORD *)(a9 + 208) = 0u;
    *(_OWORD *)(a9 + 224) = 0u;
    *(_OWORD *)(a9 + 176) = 0u;
    *(_OWORD *)(a9 + 192) = 0u;
    *(_OWORD *)(a9 + 144) = 0u;
    *(_OWORD *)(a9 + 160) = 0u;
    *(_OWORD *)(a9 + 112) = 0u;
    *(_OWORD *)(a9 + 128) = 0u;
    *(_OWORD *)(a9 + 80) = 0u;
    *(_OWORD *)(a9 + 96) = 0u;
    *(_OWORD *)(a9 + 48) = 0u;
    *(_OWORD *)(a9 + 64) = 0u;
    *(_OWORD *)(a9 + 16) = 0u;
    *(_OWORD *)(a9 + 32) = 0u;
    *(_OWORD *)a9 = 0u;
  }
  return result;
}

uint64_t sub_1A55E7BF4(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;

  v2 = *(unsigned __int8 *)(a2 + 4);
  v3 = (*(_DWORD *)a1 == *(_DWORD *)a2) & ~v2;
  if (*(_DWORD *)a2)
    v4 = *(unsigned __int8 *)(a2 + 4);
  else
    v4 = 0;
  if (*(_DWORD *)a2)
    v2 = 0;
  if (*(_DWORD *)a1)
    v5 = v4;
  else
    v5 = v2;
  if (*(_BYTE *)(a1 + 4) == 1)
    return v5;
  else
    return v3;
}

uint64_t sub_1A55E7C30()
{
  uint64_t result;

  result = sub_1A54F8ABC((uint64_t)&unk_1E4E6EA60);
  qword_1EE7F96D0 = result;
  return result;
}

uint64_t sub_1A55E7C54()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796240);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A59ABDC0;
  *(_QWORD *)(v0 + 32) = &type metadata for DetectChangesToMessages;
  sub_1A550F734();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594C6B4();
  *(_QWORD *)(v0 + 80) = &type metadata for DetectChangesToMessagesInRecent;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594C6B4();
  *(_QWORD *)(v0 + 128) = &type metadata for DetectRemovedMessages;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594C6B4();
  *(_QWORD *)(v0 + 176) = &type metadata for DetectRemovedMessagesInRecent;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594C6B4();
  *(_QWORD *)(v0 + 224) = &type metadata for FetchMessages;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594C6B4();
  *(_QWORD *)(v0 + 272) = &type metadata for FindMissingMessages;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594C6B4();
  *(_QWORD *)(v0 + 320) = &type metadata for PurgeMessagesOutsideWindowOfInterest;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594C6B4();
  return v0;
}

uint64_t sub_1A55E7E34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __int128 v16;
  __int128 v17;
  unint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  int v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  os_log_t v53;
  uint64_t v54;
  uint64_t v56;
  _QWORD v57[2];
  int v58;
  os_log_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  _BYTE v67[152];
  uint64_t v68;
  unsigned int v69;
  unsigned __int8 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  _OWORD v75[2];

  v2 = v1;
  v4 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v57 - v8;
  v10 = sub_1A594A764();
  v62 = *(_QWORD *)(v10 - 8);
  v63 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v57 - v14;
  v16 = *(_OWORD *)(v1 + 192);
  v73 = *(_OWORD *)(v1 + 176);
  v74 = v16;
  v75[0] = *(_OWORD *)(v1 + 208);
  *(_QWORD *)((char *)v75 + 13) = *(_QWORD *)(v1 + 221);
  v17 = *(_OWORD *)(v1 + 160);
  v71 = *(_OWORD *)(v1 + 144);
  v72 = v17;
  v61 = sub_1A55E8684();
  if (BYTE4(v18) == 255)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v12, a1, v63);
    sub_1A55034B8(a1, (uint64_t)v6, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    sub_1A550ED78(v1, (uint64_t)v67);
    v19 = sub_1A594A74C();
    v20 = sub_1A594C030();
    v21 = v20;
    if (os_log_type_enabled(v19, v20))
    {
      v22 = swift_slowAlloc();
      v61 = swift_slowAlloc();
      v66 = v61;
      *(_DWORD *)v22 = 68159491;
      LODWORD(v64) = 2;
      v59 = v19;
      LODWORD(v60) = v21;
      sub_1A594C3CC();
      *(_WORD *)(v22 + 8) = 256;
      v23 = &v6[*(int *)(v4 + 20)];
      LOBYTE(v64) = *v23;
      sub_1A594C3CC();
      *(_WORD *)(v22 + 11) = 2082;
      v25 = *((_QWORD *)v23 + 1);
      v24 = *((_QWORD *)v23 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v64 = sub_1A55791B0(v25, v24, &v66);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 21) = 1040;
      LODWORD(v64) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v22 + 27) = 512;
      LOWORD(v64) = *((_WORD *)v23 + 12);
      sub_1A594C3CC();
      *(_WORD *)(v22 + 31) = 2160;
      v64 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v22 + 41) = 2085;
      v26 = *((_DWORD *)v23 + 10);
      v64 = *((_QWORD *)v23 + 4);
      v65 = v26;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v27 = sub_1A594B4A8();
      v64 = sub_1A55791B0(v27, v28, &v66);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v6, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v22 + 51) = 2048;
      v29 = v68;
      v30 = v69;
      v31 = v70;
      sub_1A54E4334(v68, v69, v70);
      sub_1A54E3414();
      v32 = MessageIdentifierSet.count.getter(v29, v30 | (v31 << 32));
      sub_1A54E3458(v29, v30, v31);
      sub_1A550EEC0((uint64_t)v67);
      v64 = v32;
      sub_1A594C3CC();
      v19 = v59;
      _os_log_impl(&dword_1A4F90000, v59, (os_log_type_t)v60, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task. %ld UIDs total, no UIDs to fetch.", (uint8_t *)v22, 0x3Du);
      v33 = v61;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v33, -1, -1);
      MEMORY[0x1A85B1964](v22, -1, -1);
    }
    else
    {
      sub_1A550EEC0((uint64_t)v67);
      sub_1A55034FC((uint64_t)v6, type metadata accessor for MailboxTaskLogger);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v12, v63);
  }
  else
  {
    v34 = v18;
    v35 = HIDWORD(v18);
    (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v15, a1, v63);
    sub_1A55034B8(a1, (uint64_t)v9, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    sub_1A550ED78(v2, (uint64_t)v67);
    sub_1A54E4334(v61, v34, v35);
    v36 = sub_1A594A74C();
    v37 = sub_1A594C030();
    v38 = v37;
    if (os_log_type_enabled(v36, v37))
    {
      v39 = swift_slowAlloc();
      v60 = swift_slowAlloc();
      v66 = v60;
      *(_DWORD *)v39 = 68159747;
      LODWORD(v64) = 2;
      v59 = v36;
      sub_1A594C3CC();
      *(_WORD *)(v39 + 8) = 256;
      v40 = *(int *)(v4 + 20);
      v58 = v38;
      v41 = &v9[v40];
      LOBYTE(v64) = v9[v40];
      sub_1A594C3CC();
      *(_WORD *)(v39 + 11) = 2082;
      v43 = *((_QWORD *)v41 + 1);
      v42 = *((_QWORD *)v41 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v64 = sub_1A55791B0(v43, v42, &v66);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 21) = 1040;
      LODWORD(v64) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v39 + 27) = 512;
      LOWORD(v64) = *((_WORD *)v41 + 12);
      sub_1A594C3CC();
      *(_WORD *)(v39 + 31) = 2160;
      v64 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v39 + 41) = 2085;
      v44 = *((_DWORD *)v41 + 10);
      v64 = *((_QWORD *)v41 + 4);
      v65 = v44;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v45 = sub_1A594B4A8();
      v64 = sub_1A55791B0(v45, v46, &v66);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v9, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v39 + 51) = 2048;
      v57[1] = v39 + 53;
      v47 = v68;
      v48 = v69;
      v49 = v70;
      sub_1A54E4334(v68, v69, v70);
      sub_1A54E3414();
      v50 = MessageIdentifierSet.count.getter(v47, v48 | (v49 << 32));
      sub_1A54E3458(v47, v48, v49);
      sub_1A550EEC0((uint64_t)v67);
      v64 = v50;
      sub_1A594C3CC();
      *(_WORD *)(v39 + 61) = 2048;
      v51 = v61;
      v52 = MessageIdentifierSet.count.getter(v61, v34 & 0xFFFFFFFFFFLL);
      sub_1A5503B8C(v51, v34);
      v64 = v52;
      sub_1A594C3CC();
      sub_1A5503B8C(v51, v34);
      v53 = v59;
      _os_log_impl(&dword_1A4F90000, v59, (os_log_type_t)v58, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task. %ld UIDs total, %ld UIDs to fetch.", (uint8_t *)v39, 0x47u);
      v54 = v60;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v54, -1, -1);
      MEMORY[0x1A85B1964](v39, -1, -1);

    }
    else
    {
      v56 = v61;
      sub_1A5503B8C(v61, v34);
      sub_1A550EEC0((uint64_t)v67);
      sub_1A55034FC((uint64_t)v9, type metadata accessor for MailboxTaskLogger);
      sub_1A5503B8C(v56, v34);

    }
    return (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v15, v63);
  }
}

uint64_t sub_1A55E8684()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(unsigned int *)(v0 + 16);
  v3 = *(unsigned __int8 *)(v0 + 20);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(unsigned int *)(v0 + 32);
  v6 = *(unsigned __int8 *)(v0 + 36);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(unsigned __int8 *)(v0 + 52);
  v9 = *(unsigned int *)(v0 + 48) | ((unint64_t)*(unsigned __int8 *)(v0 + 52) << 32);
  v10 = sub_1A54E3414();
  v11 = v2 | (v3 << 32);
  v12 = v10;
  MessageIdentifierSet.subtracting(_:)(v4, v5 | (v6 << 32), v1, v11);
  v14 = v13;
  v16 = v15;
  v47 = HIDWORD(v15);
  if (v8 <= 0xFEuLL)
  {
    v20 = HIDWORD(v9);
    v17 = v7;
    v19 = v9;
  }
  else
  {
    v17 = sub_1A55C19FC(MEMORY[0x1E0DEE9D8]);
    v19 = v18;
    v20 = HIDWORD(v18);
  }
  sub_1A5503BA0(v7, v9);
  v21 = v12;
  MessageIdentifierSet.subtracting(_:)(v17, v19 | ((unint64_t)v20 << 32), v14, v16 & 0xFFFFFFFFFFLL);
  v23 = v22;
  v25 = v24;
  v48 = HIDWORD(v24);
  sub_1A54E3458(v14, v16, v47);
  sub_1A54E3458(v17, v19, v20);
  v26 = *(_QWORD *)(v0 + 72);
  v27 = *(unsigned int *)(v0 + 80) | ((unint64_t)*(unsigned __int8 *)(v0 + 84) << 32);
  if (*(unsigned __int8 *)(v0 + 84) == 255)
  {
    v28 = sub_1A55C19FC(MEMORY[0x1E0DEE9D8]);
    v30 = v29;
    v31 = HIDWORD(v29);
  }
  else
  {
    v31 = HIDWORD(v27);
    v28 = *(_QWORD *)(v0 + 72);
    v30 = *(unsigned int *)(v0 + 80) | ((unint64_t)*(unsigned __int8 *)(v0 + 84) << 32);
  }
  sub_1A5503BA0(v26, v27);
  MessageIdentifierSet.subtracting(_:)(v28, v30 | ((unint64_t)v31 << 32), v23, v25 & 0xFFFFFFFFFFLL);
  v33 = v32;
  v35 = v34;
  sub_1A54E3458(v23, v25, v48);
  sub_1A54E3458(v28, v30, v31);
  if ((*(_BYTE *)(v0 + 64) & 1) != 0)
  {
    v37 = sub_1A55C19FC(MEMORY[0x1E0DEE9D8]);
  }
  else
  {
    v49 = *(_QWORD *)(v0 + 56);
    MessageIdentifierSet.init(_:)((uint64_t)&v49, (uint64_t)&type metadata for UID, v21, v36);
  }
  v39 = v37;
  v40 = v38;
  v41 = HIDWORD(v38);
  MessageIdentifierSet.subtracting(_:)(v37, v38 & 0xFFFFFFFFFFLL, v33, v35 & 0xFFFFFFFFFFLL);
  v43 = v42;
  v45 = v44;
  sub_1A54E3458(v33, v35, SBYTE4(v35));
  sub_1A54E3458(v39, v40, v41);
  return MessageIdentifierSetNonEmpty.init(set:)(v43, v45 & 0xFFFFFFFFFFLL);
}

uint64_t sub_1A55E8904@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  BOOL v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  int v88;
  char v89;
  char v90;
  char v91;
  char v92;
  char v93;
  char v94;
  char v95;
  uint64_t v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  _BYTE v101[21];
  _BYTE v102[16];
  _BYTE v103[24];

  v4 = v3;
  v8 = type metadata accessor for TaskHistory.Previous(0);
  v83 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v75 - v12;
  v14 = sub_1A562AF78(a2);
  v15 = *(_QWORD *)(v14 + 16);
  v79 = a3;
  if (v15)
  {
    v77 = v3;
    v16 = 0;
    v80 = v14 + 32;
    v84 = *(_QWORD *)(a1 + 16);
    v82 = a1;
    v81 = v14;
    v78 = v15;
    do
    {
      if (v84)
      {
        v17 = *(_DWORD *)(v80 + 4 * v16);
        v18 = v83;
        v19 = a1 + ((*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80));
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v20 = *(_QWORD *)(v18 + 72);
        v21 = v84;
        while (1)
        {
          sub_1A55034B8(v19, (uint64_t)v13, type metadata accessor for TaskHistory.Previous);
          sub_1A55034B8((uint64_t)v13, (uint64_t)v10, type metadata accessor for TaskHistory.Previous);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            sub_1A55034FC((uint64_t)v10, type metadata accessor for TaskHistory.Previous);
          }
          else
          {
            v22 = *(_DWORD *)&v10[*(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797DD8) + 48)];
            sub_1A55034FC((uint64_t)v10, type metadata accessor for ClientCommand);
            if (v22 == v17)
            {
              sub_1A55034FC((uint64_t)v13, type metadata accessor for TaskHistory.Previous);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              a3 = v79;
              goto LABEL_12;
            }
          }
          sub_1A55034FC((uint64_t)v13, type metadata accessor for TaskHistory.Previous);
          v19 += v20;
          if (!--v21)
          {
            a1 = v82;
            swift_bridgeObjectRelease();
            v15 = v78;
            break;
          }
        }
      }
      ++v16;
    }
    while (v16 != v15);
    swift_bridgeObjectRelease();
    a3 = v79;
    v4 = v77;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v27 = *(_OWORD *)(v4 + 192);
  v99 = *(_OWORD *)(v4 + 176);
  v100 = v27;
  *(_OWORD *)v101 = *(_OWORD *)(v4 + 208);
  *(_QWORD *)&v101[13] = *(_QWORD *)(v4 + 221);
  v28 = *(_OWORD *)(v4 + 160);
  v97 = *(_OWORD *)(v4 + 144);
  v98 = v28;
  v29 = sub_1A55E97AC();
  v31 = BYTE4(v30);
  sub_1A5503B8C(v29, v30);
  if (v31 != 255
    && (sub_1A55032A0((uint64_t)&v101[8], (uint64_t)v102, qword_1EE796DC8),
        sub_1A55032A0((uint64_t)v102, (uint64_t)v103, qword_1EE796DC8),
        v103[12] == 255))
  {
LABEL_12:
    v23 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8CF8);
    v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56);
    v25 = a3;
  }
  else
  {
    v33 = *(_QWORD *)(v4 + 232);
    v32 = *(_QWORD *)(v4 + 240);
    v34 = *(_QWORD *)(v4 + 248);
    v35 = *(_QWORD *)(v4 + 256);
    v36 = v4;
    v37 = *(_QWORD *)(v4 + 264);
    if (v33)
    {
      v38 = HIDWORD(v35);
      v39 = (v35 >> 40) & 1;
      v40 = v37 & 1;
      v41 = v33;
      v42 = HIWORD(v35) & 1;
      v43 = v32;
      v44 = HIBYTE(v35) & 1;
      v45 = v34;
      v46 = (v37 >> 8) & 1;
      v47 = v35;
      v48 = (v37 >> 16) & 1;
      v49 = *(_QWORD *)(v36 + 272);
LABEL_19:
      v85 = v41;
      v86 = v43;
      v87 = v45;
      v88 = v47;
      v89 = v38;
      v90 = v39;
      v91 = v42;
      v92 = v44;
      v93 = v40;
      v94 = v46;
      v95 = v48;
      v96 = v49;
      sub_1A55E76A4(v33, v32, v34, v35);
      v50 = v79;
      sub_1A561F2B0(v79);
      swift_bridgeObjectRelease();
      sub_1A54E3458(v45, v47, v38);
      swift_bridgeObjectRelease();
      v23 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8CF8);
      v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56);
      v25 = v50;
      v26 = 0;
      return v24(v25, v26, 1, v23);
    }
    v82 = *(_QWORD *)(v36 + 272);
    v83 = v34;
    v84 = v32;
    v52 = sub_1A55E8684();
    if (BYTE4(v53) != 255)
    {
      v54 = v52;
      v55 = v53;
      v56 = sub_1A55E1944(47, v52, v53 & 0xFFFFFFFFFFLL);
      v58 = v57;
      sub_1A5503B8C(v54, v55);
      sub_1A54E3414();
      v59 = MessageIdentifierSetNonEmpty.init(set:)(v56, v58 & 0xFFFFFFFFFFLL);
      if ((~v60 & 0xFF00000000) != 0)
      {
        v45 = v59;
        v47 = v60;
        v38 = HIDWORD(v60);
        v61 = v36;
        v41 = *(_QWORD *)(v36 + 40);
        v62 = *(unsigned int *)(v36 + 48);
        v76 = v62;
        v81 = *(unsigned __int8 *)(v36 + 136);
        v63 = *(unsigned __int8 *)(v36 + 137);
        v80 = *(unsigned __int8 *)(v36 + 137);
        v64 = *(unsigned __int8 *)(v36 + 138);
        v78 = *(unsigned __int8 *)(v36 + 138);
        v65 = *(unsigned __int8 *)(v36 + 139);
        v77 = v65;
        LOBYTE(v46) = *(_BYTE *)(v36 + 140);
        LOBYTE(v48) = *(_BYTE *)(v36 + 141);
        v66 = 0x10000000000;
        if (!(_DWORD)v81)
          v66 = 0;
        v67 = v66 & 0xFFFFFF0000000000 | v60 & 0xFFFFFFFFFFLL;
        v68 = v63 == 0;
        v69 = 0x1000000000000;
        if (v68)
          v69 = 0;
        v68 = v64 == 0;
        v70 = 0x100000000000000;
        if (v68)
          v70 = 0;
        v71 = v67 | v69 | v70;
        v72 = 256;
        if (!*(_BYTE *)(v36 + 140))
          v72 = 0;
        v73 = v72 | v65;
        v74 = 0x10000;
        if (!*(_BYTE *)(v36 + 141))
          v74 = 0;
        *(_QWORD *)(v36 + 232) = v41;
        *(_QWORD *)(v36 + 240) = v62;
        *(_QWORD *)(v36 + 248) = v59;
        *(_QWORD *)(v36 + 256) = v71;
        v49 = MEMORY[0x1E0DEE9D8];
        *(_QWORD *)(v61 + 264) = v73 | v74;
        *(_QWORD *)(v61 + 272) = v49;
        swift_bridgeObjectRetain_n();
        sub_1A54E4334(v45, v47, v38);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        LOBYTE(v44) = v78;
        v43 = v76;
        LOBYTE(v42) = v80;
        v40 = v77;
        LOBYTE(v39) = v81;
        v32 = v84;
        v34 = v83;
        goto LABEL_19;
      }
    }
    v23 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8CF8);
    v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56);
    v25 = v79;
  }
  v26 = 1;
  return v24(v25, v26, 1, v23);
}

uint64_t sub_1A55E8E94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t result;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t inited;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _BYTE v100[56];
  unsigned int v101;
  _OWORD v102[3];
  char v103;
  _BYTE v104[49];
  __int128 v105;
  _OWORD v106[2];
  _BYTE v107[16];
  _QWORD v108[4];

  v86 = a4;
  v87 = a1;
  v93 = type metadata accessor for TaskHistory.Running(0);
  v80 = *(_QWORD *)(v93 - 8);
  MEMORY[0x1E0C80A78](v93);
  v92 = (uint64_t)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v94 = (uint64_t)&v78 - v9;
  v10 = type metadata accessor for TaskHistory.Previous(0);
  v89 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v95 = (uint64_t)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v99 = (uint64_t)&v78 - v13;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v78 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v78 - v18;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v78 - v21;
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v78 - v24;
  v82 = v4;
  v26 = sub_1A55E97AC();
  v90 = a2;
  v97 = v10;
  v83 = a3;
  if (BYTE4(v27) != 255)
  {
    v28 = v27;
    v84 = v26;
    LOBYTE(v101) = 1;
    v29 = sub_1A55B0518(0x100000000, v86);
    v30 = *(_QWORD *)(v29 + 16);
    if (v30)
    {
      v79 = v28;
      v31 = 0;
      v88 = v29 + 32;
      v96 = *(_QWORD *)(a2 + 16);
      v85 = v29;
      v81 = v30;
      do
      {
        if (v96)
        {
          v91 = v31;
          v32 = v89;
          LODWORD(v98) = *(_DWORD *)(v88 + 4 * v31);
          v33 = a2 + ((*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80));
          swift_bridgeObjectRetain_n();
          v34 = *(_QWORD *)(v32 + 72);
          v35 = v96;
          do
          {
            sub_1A55034B8(v33, (uint64_t)v25, type metadata accessor for TaskHistory.Previous);
            sub_1A55034B8((uint64_t)v25, (uint64_t)v22, type metadata accessor for TaskHistory.Previous);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              v36 = *((_DWORD *)v22 + 2);
              swift_release();
              if (v36 == (_DWORD)v98)
              {
                sub_1A55034FC((uint64_t)v25, type metadata accessor for TaskHistory.Previous);
                swift_bridgeObjectRelease();
                a2 = v90;
                swift_bridgeObjectRelease_n();
                sub_1A5503B8C(v84, v79);
                a3 = v83;
                goto LABEL_13;
              }
            }
            else
            {
              sub_1A55034FC((uint64_t)v22, type metadata accessor for TaskHistory.Previous);
            }
            sub_1A55034FC((uint64_t)v25, type metadata accessor for TaskHistory.Previous);
            v33 += v34;
            --v35;
          }
          while (v35);
          a2 = v90;
          swift_bridgeObjectRelease_n();
          v30 = v81;
          v31 = v91;
        }
        ++v31;
      }
      while (v31 != v30);
      swift_bridgeObjectRelease();
      v66 = v82;
      v28 = v79;
    }
    else
    {
      swift_bridgeObjectRelease();
      v66 = v82;
    }
    v67 = swift_allocObject();
    v68 = *(_QWORD *)(v66 + 24);
    *(_QWORD *)(v67 + 16) = *(_QWORD *)(v66 + 16);
    *(_QWORD *)(v67 + 24) = v68;
    *(_QWORD *)(v67 + 32) = v84;
    *(_DWORD *)(v67 + 40) = v28;
    *(_BYTE *)(v67 + 44) = BYTE4(v28);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return 0x100000000;
  }
LABEL_13:
  v37 = sub_1A562AF78(a3);
  v38 = *(_QWORD *)(v37 + 16);
  if (!v38)
  {
LABEL_44:
    swift_bridgeObjectRelease();
LABEL_45:
    v71 = v82;
    v70 = v83;
    goto LABEL_46;
  }
  v39 = 0;
  v79 = v37;
  v85 = v37 + 32;
  v96 = *(_QWORD *)(a2 + 16);
  v81 = v38;
  while (!v96)
  {
LABEL_17:
    if (++v39 == v38)
      goto LABEL_44;
  }
  v88 = v39;
  LODWORD(v98) = *(_DWORD *)(v85 + 4 * v39);
  v40 = v89;
  v84 = (*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80);
  v41 = a2 + v84;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v42 = *(_QWORD *)(v40 + 72);
  v43 = v96;
  while (1)
  {
    sub_1A55034B8(v41, (uint64_t)v19, type metadata accessor for TaskHistory.Previous);
    sub_1A55034B8((uint64_t)v19, (uint64_t)v16, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() != 1)
      break;
    sub_1A55034FC((uint64_t)v16, type metadata accessor for TaskHistory.Previous);
LABEL_21:
    sub_1A55034FC((uint64_t)v19, type metadata accessor for TaskHistory.Previous);
    v41 += v42;
    if (!--v43)
    {
      a2 = v90;
LABEL_16:
      v38 = v81;
      v39 = v88;
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
  }
  v44 = *(_DWORD *)&v16[*(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797DD8) + 48)];
  sub_1A55034FC((uint64_t)v16, type metadata accessor for ClientCommand);
  if (v44 != (_DWORD)v98)
    goto LABEL_21;
  sub_1A55034FC((uint64_t)v19, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease();
  v45 = *(_QWORD *)(v87 + 16);
  if (v45)
  {
    v46 = v80;
    v47 = v87 + ((*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80));
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v91 = *(_QWORD *)(v46 + 72);
    v48 = v94;
    do
    {
      sub_1A55034B8(v47, v48, type metadata accessor for TaskHistory.Running);
      v49 = v48;
      v50 = v92;
      sub_1A55034B8(v49, v92, type metadata accessor for TaskHistory.Running);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1A55034FC(v50, type metadata accessor for TaskHistory.Running);
      }
      else
      {
        v51 = *(_DWORD *)(v50 + 8);
        v52 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308);
        sub_1A55034FC(v50 + *(int *)(v52 + 64), type metadata accessor for ClientCommand);
        if (v51 == (_DWORD)v98)
        {
          sub_1A55034FC(v94, type metadata accessor for TaskHistory.Running);
          a2 = v90;
          goto LABEL_16;
        }
      }
      v48 = v94;
      sub_1A55034FC(v94, type metadata accessor for TaskHistory.Running);
      v47 += v91;
      --v45;
    }
    while (v45);
    swift_bridgeObjectRelease();
    a2 = v90;
  }
  else
  {
    a2 = v90;
  }
  swift_bridgeObjectRelease();
  LOBYTE(v101) = 1;
  v53 = sub_1A55B0518(0x100000001, v86);
  v94 = *(_QWORD *)(v53 + 16);
  if (v94)
  {
    v54 = 0;
    v91 = v53;
    v55 = v53 + 32;
    v56 = a2 + v84;
    v92 = a2 + v84;
    v93 = v53 + 32;
LABEL_35:
    v57 = *(_DWORD *)(v55 + 4 * v54);
    v98 = v54 + 1;
    result = swift_bridgeObjectRetain_n();
    v59 = 0;
    v60 = v56;
    while (1)
    {
      v61 = v59 + 1;
      if (__OFADD__(v59, 1))
        break;
      v62 = v99;
      sub_1A55034B8(v60, v99, type metadata accessor for TaskHistory.Previous);
      v63 = v62;
      v64 = v95;
      sub_1A55034B8(v63, v95, type metadata accessor for TaskHistory.Previous);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v65 = *(_DWORD *)(v64 + 8);
        swift_release();
        if (v65 == v57)
        {
          sub_1A55034FC(v99, type metadata accessor for TaskHistory.Previous);
          swift_bridgeObjectRelease();
          a2 = v90;
          swift_bridgeObjectRelease_n();
          goto LABEL_45;
        }
      }
      else
      {
        sub_1A55034FC(v64, type metadata accessor for TaskHistory.Previous);
      }
      result = sub_1A55034FC(v99, type metadata accessor for TaskHistory.Previous);
      ++v59;
      v60 += v42;
      if (v61 == v96)
      {
        a2 = v90;
        swift_bridgeObjectRelease_n();
        v55 = v93;
        v54 = v98;
        v56 = v92;
        if (v98 == v94)
          goto LABEL_52;
        goto LABEL_35;
      }
    }
    __break(1u);
    return result;
  }
LABEL_52:
  swift_bridgeObjectRelease();
  v71 = v82;
  v70 = v83;
  if (*(_QWORD *)(v82 + 232))
  {
    v75 = *(_QWORD *)(v82 + 272);
    if (*(_QWORD *)(v75 + 16))
    {
      v76 = swift_allocObject();
      v77 = *(_QWORD *)(v71 + 24);
      *(_QWORD *)(v76 + 16) = *(_QWORD *)(v71 + 16);
      *(_QWORD *)(v76 + 24) = v77;
      *(_QWORD *)(v76 + 32) = v75;
      *(_QWORD *)(v76 + 40) = 0;
      *(_BYTE *)(v76 + 48) = 1;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      return 0x100000001;
    }
  }
LABEL_46:
  sub_1A55E9B88(v87, a2, v70, v86, (uint64_t)v100);
  sub_1A55032A0((uint64_t)v100, (uint64_t)&v101, &qword_1EE7A8CE0);
  if ((~*(_QWORD *)((char *)v102 + 12) & 0xFF00000000) == 0)
    return 0;
  v69 = v101;
  *(_OWORD *)v104 = v102[0];
  *(_OWORD *)&v104[16] = v102[1];
  *(_OWORD *)&v104[32] = v102[2];
  v104[48] = v103;
  v72 = swift_allocObject();
  *(_DWORD *)(v72 + 16) = v69;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8CE8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A59ABD10;
  *(_QWORD *)(inited + 32) = *(_QWORD *)(v71 + 40);
  *(_DWORD *)(inited + 40) = *(_DWORD *)(v71 + 48);
  v105 = *(_OWORD *)&v104[4];
  v106[0] = *(_OWORD *)&v104[20];
  *(_OWORD *)((char *)v106 + 13) = *(_OWORD *)&v104[33];
  v108[0] = *(_QWORD *)&v104[20];
  *(_QWORD *)((char *)v108 + 5) = *(_OWORD *)&v104[20] >> 40;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A55EE354((uint64_t)v100, (void (*)(uint64_t, unint64_t, unint64_t))sub_1A54E4334, sub_1A5503BA0);
  sub_1A550F348((uint64_t)v108);
  sub_1A55032A0((uint64_t)&v106[1], (uint64_t)v107, qword_1EE796DC8);
  sub_1A55EE26C((uint64_t)v107);
  *(_QWORD *)(inited + 48) = *(_QWORD *)&v104[4];
  *(_QWORD *)(inited + 53) = *(_QWORD *)&v104[9];
  v74 = sub_1A558BA6C(inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8CF0);
  swift_arrayDestroy();
  sub_1A55EE354((uint64_t)v100, (void (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458, sub_1A5503B8C);
  *(_QWORD *)(v72 + 24) = v74;
  return v69;
}

uint64_t sub_1A55E97AC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unsigned int *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unsigned int v50;
  char v51;
  uint64_t v52;

  v52 = *v0;
  v1 = v52;
  sub_1A54FCA28((uint64_t)&v52);
  v2 = sub_1A55C19FC(MEMORY[0x1E0DEE9D8]);
  v4 = v3;
  v5 = HIDWORD(v3);
  v49 = v2;
  v50 = v3;
  v51 = BYTE4(v3);
  v6 = *(_QWORD *)(v1 + 16);
  if (v6)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v7 = (unsigned int *)(v1 + 80);
    v44 = v6;
    do
    {
      if (*((unsigned __int8 *)v7 + 4) == 255)
      {
        v8 = *v7 | ((unint64_t)*((unsigned __int8 *)v7 + 4) << 32);
        v9 = *((_QWORD *)v7 - 1);
        v10 = *(v7 - 4);
        v11 = *((_QWORD *)v7 - 3);
        v12 = *((unsigned __int8 *)v7 - 28);
        v13 = *(v7 - 8);
        v14 = *((_QWORD *)v7 - 5);
        v15 = *((_BYTE *)v7 - 12);
        sub_1A54E4334(v14, v13, *((_BYTE *)v7 - 28));
        sub_1A54E4334(v11, v10, v15);
        sub_1A5503BA0(v9, v8);
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
        v47 = v47 & 0xFFFFFF0000000000 | v13 | (v12 << 32);
        MessageIdentifierSet.formUnion(_:)(v14, v47);
        sub_1A54E3458(v14, v13, v12);
        sub_1A54E3458(v11, v10, v15);
        sub_1A5503B8C(v9, v8);
      }
      v7 += 14;
      --v6;
    }
    while (v6);
    sub_1A54F81BC((uint64_t)&v52);
    sub_1A54F81BC((uint64_t)&v52);
    v16 = v49;
    v4 = v50;
    LOBYTE(v5) = v51;
    v6 = v44;
  }
  else
  {
    v16 = v2;
    sub_1A54F81BC((uint64_t)&v52);
  }
  v17 = sub_1A54E3414();
  if (MessageIdentifierSet.isEmpty.getter(v16, v4 | ((unint64_t)v5 << 32)))
  {
    sub_1A54E3458(v16, v4, v5);
    return 0;
  }
  else
  {
    v49 = v16;
    v50 = v4;
    v51 = v5;
    if (v6)
    {
      v20 = (unsigned int *)(_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0() + 80);
      v46 = v17;
      do
      {
        if (*((unsigned __int8 *)v20 + 4) != 255)
        {
          v21 = *v20 | ((unint64_t)*((unsigned __int8 *)v20 + 4) << 32);
          v22 = *((_QWORD *)v20 - 1);
          v45 = v6;
          v23 = *(v20 - 4);
          v24 = *((_QWORD *)v20 - 3);
          v25 = *((unsigned __int8 *)v20 - 28);
          v26 = *(v20 - 8);
          v27 = *((_QWORD *)v20 - 5);
          v28 = *((_BYTE *)v20 - 12);
          sub_1A54E4334(v27, v26, *((_BYTE *)v20 - 28));
          sub_1A54E4334(v24, v23, v28);
          sub_1A5503BA0(v22, v21);
          __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
          v47 = v47 & 0xFFFFFF0000000000 | v26 | (v25 << 32);
          MessageIdentifierSet.subtract(_:)(v27, v47);
          sub_1A54E3458(v27, v26, v25);
          v29 = v23;
          v6 = v45;
          v17 = v46;
          sub_1A54E3458(v24, v29, v28);
          sub_1A5503B8C(v22, v21);
        }
        v20 += 14;
        --v6;
      }
      while (v6);
      sub_1A54F81BC((uint64_t)&v52);
      v16 = v49;
      v4 = v50;
      LOBYTE(v5) = v51;
    }
    if ((*(_BYTE *)(v43 + 64) & 1) != 0)
    {
      v30 = sub_1A55C19FC(MEMORY[0x1E0DEE9D8]);
    }
    else
    {
      v49 = *(_QWORD *)(v43 + 56);
      MessageIdentifierSet.init(_:)((uint64_t)&v49, (uint64_t)&type metadata for UID, v17, v18);
    }
    v32 = v30;
    v33 = v31;
    v34 = HIDWORD(v31);
    MessageIdentifierSet.subtracting(_:)(v30, v31 & 0xFFFFFFFFFFLL, v16, v4 | ((unint64_t)v5 << 32));
    v36 = v35;
    v38 = v37;
    v48 = HIDWORD(v37);
    sub_1A54E3458(v16, v4, v5);
    sub_1A54E3458(v32, v33, v34);
    MessageIdentifierSet.subtracting(_:)(*(_QWORD *)(v43 + 24), *(unsigned int *)(v43 + 32) | ((unint64_t)*(unsigned __int8 *)(v43 + 36) << 32), v36, v38 & 0xFFFFFFFFFFLL);
    v40 = v39;
    v42 = v41;
    sub_1A54E3458(v36, v38, v48);
    return MessageIdentifierSetNonEmpty.init(set:)(v40, v42 & 0xFFFFFFFFFFLL);
  }
}

uint64_t sub_1A55E9B88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  unint64_t v61;
  uint64_t v62;
  int v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  _QWORD v72[2];
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  int v95;
  char v96;
  _OWORD v97[4];
  _BYTE v98[21];

  v92 = a2;
  v93 = type metadata accessor for TaskHistory.Previous(0);
  v88 = *(_QWORD *)(v93 - 8);
  MEMORY[0x1E0C80A78](v93);
  v10 = (char *)v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v72 - v12;
  LOBYTE(v97[0]) = 1;
  v86 = a4;
  v14 = sub_1A55B0518(0x100000000, a4);
  v15 = *(_QWORD *)(v14 + 16);
  if (v15)
  {
    v16 = 0;
    while ((sub_1A55F3D24(*(_DWORD *)(v14 + 4 * v16 + 32), a1, v92) & 1) == 0)
    {
      if (v15 == ++v16)
        goto LABEL_5;
    }
LABEL_15:
    result = swift_bridgeObjectRelease();
    v29 = 0;
    v30 = 0;
    v31 = 0;
    v32 = 0;
    v33 = 0;
    v34 = 0;
    v35 = 0xFF00000000;
    goto LABEL_16;
  }
LABEL_5:
  swift_bridgeObjectRelease();
  v17 = sub_1A562AF78(a3);
  v18 = *(_QWORD *)(v17 + 16);
  if (v18)
  {
    v19 = 0;
    while ((sub_1A55E5990(*(_DWORD *)(v17 + 4 * v19 + 32), a1, v92) & 1) == 0)
    {
      if (v18 == ++v19)
        goto LABEL_9;
    }
    goto LABEL_15;
  }
LABEL_9:
  swift_bridgeObjectRelease();
  LOBYTE(v97[0]) = 1;
  v20 = sub_1A55B0518(0x100000001, v86);
  v21 = *(_QWORD *)(v20 + 16);
  if (v21)
  {
    v22 = 0;
    while ((sub_1A55F3D24(*(_DWORD *)(v20 + 4 * v22 + 32), a1, v92) & 1) == 0)
    {
      if (v21 == ++v22)
        goto LABEL_13;
    }
    goto LABEL_15;
  }
LABEL_13:
  swift_bridgeObjectRelease();
  v23 = *(_OWORD *)(v91 + 192);
  v97[2] = *(_OWORD *)(v91 + 176);
  v97[3] = v23;
  *(_OWORD *)v98 = *(_OWORD *)(v91 + 208);
  *(_QWORD *)&v98[13] = *(_QWORD *)(v91 + 221);
  v24 = *(_OWORD *)(v91 + 160);
  v97[0] = *(_OWORD *)(v91 + 144);
  v97[1] = v24;
  if (*(_QWORD *)(v91 + 232))
  {
    v26 = *(_QWORD *)(v91 + 248);
    v25 = *(_QWORD *)(v91 + 256);
    v27 = v25;
    sub_1A54E4334(v26, v25, SBYTE4(v25));
  }
  else
  {
    v26 = 0;
    v27 = 0xFF00000000;
  }
  v36 = sub_1A55E8684();
  v38 = BYTE4(v37);
  sub_1A5503B8C(v36, v37);
  v39 = *(_QWORD *)&v97[0];
  v73 = a5;
  if (v38 == 255)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5503B8C(v26, v27);
    v40 = v39;
  }
  else
  {
    sub_1A55EDD50((uint64_t)v97);
    v41 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v42 = sub_1A55EB830(v41, (uint64_t)v97, v26, v27 & 0xFFFFFFFFFFLL);
    sub_1A5503B8C(v26, v27);
    sub_1A55EDE14((uint64_t)v97);
    swift_bridgeObjectRelease();
    v40 = v42;
  }
  v74 = *(_QWORD *)(v40 + 16);
  if (!v74)
  {
    result = swift_bridgeObjectRelease();
LABEL_44:
    v29 = 0;
    v30 = 0;
    v31 = 0;
    v32 = 0;
    v33 = 0;
    v34 = 0;
    v35 = 0xFF00000000;
    a5 = v73;
    goto LABEL_16;
  }
  v85 = 0;
  v76 = v40 + 32;
  v72[1] = v40;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v43 = 0;
LABEL_23:
  v89 = v72;
  v90 = v43;
  v44 = (unsigned int *)(v76 + 56 * v43);
  v45 = *((_QWORD *)v44 + 1);
  v46 = *((unsigned __int8 *)v44 + 20);
  v47 = *((_QWORD *)v44 + 3);
  v48 = v44[8];
  v49 = v44[12] | ((unint64_t)*((unsigned __int8 *)v44 + 52) << 32);
  v50 = *((unsigned __int8 *)v44 + 36);
  v51 = *((_QWORD *)v44 + 5);
  v75 = *v44;
  v95 = v75;
  v96 = 0;
  MEMORY[0x1E0C80A78](v45);
  v72[-2] = &v95;
  v82 = v52;
  v79 = v53;
  sub_1A54E4334(v52, v53, v46);
  v84 = v47;
  v80 = v48;
  v91 = v50;
  sub_1A54E4334(v47, v48, v50);
  v81 = v51;
  v83 = v49;
  sub_1A5503BA0(v51, v49);
  v54 = v86;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v55 = v54;
  v56 = v85;
  v57 = sub_1A56280A8((uint64_t)sub_1A55EE408, (uint64_t)&v72[-4], v55);
  v58 = *(_QWORD *)(v57 + 16);
  if (v58)
  {
    v87 = v46;
    v94 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v89 = (_QWORD *)v57;
    sub_1A54F4F90(0, v58, 0);
    v59 = v89;
    v60 = v94;
    v61 = v94[2];
    v62 = 32;
    do
    {
      v63 = *(_DWORD *)((char *)v59 + v62);
      v94 = v60;
      v64 = v60[3];
      if (v61 >= v64 >> 1)
      {
        sub_1A54F4F90(v64 > 1, v61 + 1, 1);
        v59 = v89;
        v60 = v94;
      }
      v60[2] = v61 + 1;
      *((_DWORD *)v60 + v61 + 8) = v63;
      v62 += 12;
      ++v61;
      --v58;
    }
    while (v58);
    swift_bridgeObjectRelease();
    LOBYTE(v46) = v87;
  }
  else
  {
    swift_bridgeObjectRelease();
    v60 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v77 = v46;
  v78 = v91;
  v91 = v60[2];
  if (v91)
  {
    v85 = v56;
    v89 = v60 + 4;
    ++v90;
    v65 = *(_QWORD *)(v92 + 16);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v66 = 0;
    v87 = v65;
    while (!v65)
    {
LABEL_33:
      if (++v66 == v91)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_46;
      }
    }
    v67 = v88;
    v68 = *((_DWORD *)v89 + v66);
    v69 = v92 + ((*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80));
    swift_bridgeObjectRetain_n();
    v70 = *(_QWORD *)(v67 + 72);
    while (1)
    {
      sub_1A55034B8(v69, (uint64_t)v13, type metadata accessor for TaskHistory.Previous);
      sub_1A55034B8((uint64_t)v13, (uint64_t)v10, type metadata accessor for TaskHistory.Previous);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v71 = *((_DWORD *)v10 + 2);
        swift_release();
        if (v71 == v68)
        {
          sub_1A55034FC((uint64_t)v13, type metadata accessor for TaskHistory.Previous);
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          sub_1A54E3458(v82, v79, v77);
          sub_1A54E3458(v84, v80, v78);
          sub_1A5503B8C(v81, v83);
          v43 = v90;
          if (v90 == v74)
          {
            result = swift_bridgeObjectRelease_n();
            goto LABEL_44;
          }
          goto LABEL_23;
        }
      }
      else
      {
        sub_1A55034FC((uint64_t)v10, type metadata accessor for TaskHistory.Previous);
      }
      sub_1A55034FC((uint64_t)v13, type metadata accessor for TaskHistory.Previous);
      v69 += v70;
      if (!--v65)
      {
        swift_bridgeObjectRelease_n();
        v65 = v87;
        goto LABEL_33;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_46:
  result = swift_bridgeObjectRelease();
  v35 = v79 | (v77 << 32);
  v32 = v80 | (v78 << 32);
  a5 = v73;
  v31 = v84;
  v34 = v83;
  v30 = v82;
  v33 = v81;
  v29 = v75;
LABEL_16:
  *(_QWORD *)a5 = v29;
  *(_QWORD *)(a5 + 8) = v30;
  *(_QWORD *)(a5 + 16) = v35;
  *(_QWORD *)(a5 + 24) = v31;
  *(_QWORD *)(a5 + 32) = v32;
  *(_QWORD *)(a5 + 40) = v33;
  *(_DWORD *)(a5 + 48) = v34;
  *(_BYTE *)(a5 + 52) = BYTE4(v34);
  return result;
}

uint64_t sub_1A55EA2DC(__int128 *a1, uint64_t a2)
{
  uint64_t v2;
  __int128 v5;
  __int128 v6;
  unint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 *v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  char v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t result;
  uint64_t v64;
  _QWORD v65[4];
  uint64_t v66;
  uint64_t v67;
  __int128 *v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  _OWORD v91[2];
  uint64_t v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  _OWORD v97[2];
  __int128 v98[3];
  _OWORD v99[2];
  __int128 v100[2];
  __int128 v101;
  char v102;

  v5 = *(_OWORD *)(v2 + 192);
  v95 = *(_OWORD *)(v2 + 176);
  v96 = v5;
  v97[0] = *(_OWORD *)(v2 + 208);
  *(_QWORD *)((char *)v97 + 13) = *(_QWORD *)(v2 + 221);
  v6 = *(_OWORD *)(v2 + 160);
  v93 = *(_OWORD *)(v2 + 144);
  v94 = v6;
  v8 = *(_QWORD **)(v2 + 248);
  v7 = *(_QWORD *)(v2 + 256);
  v9 = HIDWORD(v7);
  v10 = *(_QWORD *)(v2 + 232);
  v72 = v8;
  if (v10)
  {
    v11 = v7;
    sub_1A54E4334((uint64_t)v8, v7, SBYTE4(v7));
  }
  else
  {
    v8 = 0;
    v11 = 0xFF00000000;
  }
  v12 = sub_1A55E8684();
  v14 = BYTE4(v13);
  sub_1A5503B8C(v12, v13);
  v15 = v93;
  v76 = a2;
  if (v14 == 255)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5503B8C((uint64_t)v8, v11);
  }
  else
  {
    sub_1A55EDD50((uint64_t)&v93);
    v16 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v17 = sub_1A55EB830(v16, (uint64_t)&v93, (uint64_t)v8, v11 & 0xFFFFFFFFFFLL);
    sub_1A5503B8C((uint64_t)v8, v11);
    sub_1A55EDE14((uint64_t)&v93);
    swift_bridgeObjectRelease();
    v15 = v17;
  }
  *(_QWORD *)&v79 = MEMORY[0x1E0DEE9E8];
  v18 = *(_QWORD *)(v15 + 16);
  if (v18)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v19 = 32;
    do
    {
      sub_1A54F402C(v98, *(unsigned int *)(v15 + v19));
      v19 += 56;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease_n();
    v20 = v79;
  }
  else
  {
    swift_bridgeObjectRelease();
    v20 = MEMORY[0x1E0DEE9E8];
  }
  v21 = *((_QWORD *)&v94 + 1);
  v22 = v95;
  v23 = BYTE4(v95);
  v67 = *((_QWORD *)&v95 + 1);
  v69 = v96 | ((unint64_t)BYTE4(v96) << 32);
  v24 = *(_QWORD *)(v77 + 16);
  v73 = *(_QWORD *)(v77 + 24);
  v74 = v24;
  v75 = (uint64_t *)(a1 + 9);
  sub_1A5517310(v20, v24, v73);
  swift_bridgeObjectRelease();
  sub_1A54E4334(v21, v22, v23);
  if (v10)
  {
    v25 = v72;
    sub_1A54E4334((uint64_t)v72, v7, SBYTE4(v7));
  }
  else
  {
    v25 = (_QWORD *)sub_1A55C19FC(MEMORY[0x1E0DEE9D8]);
    v9 = HIDWORD(v26);
    v7 = v26;
  }
  sub_1A54E3414();
  MessageIdentifierSet.union(_:)((uint64_t)v25, v7 | ((unint64_t)v9 << 32), v21, v22 | (v23 << 32));
  v72 = v27;
  v29 = v28;
  v70 = HIDWORD(v28);
  sub_1A54E3458(v21, v22, v23);
  sub_1A54E3458((uint64_t)v25, v7, v9);
  LOBYTE(v23) = BYTE4(v69);
  v71 = v29;
  v68 = a1;
  if (BYTE4(v69) == 255)
  {
    v66 = sub_1A55C19FC(MEMORY[0x1E0DEE9D8]);
    v31 = v30;
    v23 = HIDWORD(v30);
    v32 = v67;
  }
  else
  {
    v32 = v67;
    v66 = v67;
    v31 = v69;
  }
  v33 = *((_QWORD *)&v97[0] + 1);
  v34 = LODWORD(v97[1]) | ((unint64_t)BYTE4(v97[1]) << 32);
  if (BYTE4(v97[1]) == 255)
  {
    sub_1A5503BA0(v32, v69);
    v35 = sub_1A55C19FC(MEMORY[0x1E0DEE9D8]);
    v37 = v36;
    v38 = HIDWORD(v36);
  }
  else
  {
    v38 = HIDWORD(v34);
    sub_1A5503BA0(v32, v69);
    v35 = v33;
    v37 = v34;
  }
  sub_1A5503BA0(v33, v34);
  MessageIdentifierSet.union(_:)(v35, v37 | ((unint64_t)v38 << 32), v66, v31 | ((unint64_t)v23 << 32));
  v40 = v39;
  v42 = v41;
  v43 = HIDWORD(v41);
  sub_1A54E3458(v66, v31, v23);
  sub_1A54E3458(v35, v37, v38);
  sub_1A5517138(v74, v73, (uint64_t)v72, v71 & 0xFFFFFFFFFFLL, v40, v42 & 0xFFFFFFFFFFLL);
  sub_1A54E3458(v40, v42, v43);
  v44 = sub_1A54E3458((uint64_t)v72, v71, v70);
  v75 = &v66;
  v74 = *(_QWORD *)(v77 + 40);
  LODWORD(v73) = *(_DWORD *)(v77 + 48);
  MEMORY[0x1E0C80A78](v44);
  v72 = v65;
  v65[2] = v45;
  v65[3] = v76;
  v46 = v68;
  v47 = v68[13];
  v91[0] = v68[12];
  v91[1] = v47;
  v92 = *((_QWORD *)v68 + 28);
  v48 = v68[9];
  v87 = v68[8];
  v88 = v48;
  v49 = v68[11];
  v89 = v68[10];
  v90 = v49;
  v50 = v68[5];
  v83 = v68[4];
  v84 = v50;
  v51 = v68[7];
  v85 = v68[6];
  v86 = v51;
  v52 = v68[1];
  v79 = *v68;
  v80 = v52;
  v53 = v68[3];
  v81 = v68[2];
  v82 = v53;
  v98[2] = v90;
  v99[0] = v91[0];
  *(_OWORD *)((char *)v99 + 12) = *(_OWORD *)((char *)v91 + 12);
  v98[0] = v88;
  v98[1] = v89;
  sub_1A55212B8(v98, v100);
  v54 = BYTE1(v80);
  v55 = *((_QWORD *)&v80 + 1);
  v56 = BYTE10(v79);
  v57 = *((_QWORD *)&v81 + 1);
  v58 = v82;
  v59 = v81;
  v60 = v80;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v61 = sub_1A558E3A4();
  v62 = sub_1A558E7E0(v60, v54 & 1, v55, v59, v57, v56, v58, v61);
  result = (uint64_t)sub_1A55212B8(v100, &v101);
  if (v102 == 1)
  {
    v78 = v101;
    sub_1A55E5928((uint64_t)v100);
    sub_1A551B2B0((uint64_t)&v78, v74, v73, 0, (void (*)(uint64_t, uint64_t))sub_1A55EDD34, v72, v62 & 0x1010101FFFF01);
    result = sub_1A55E5958((uint64_t)v100);
    v64 = v78;
    *((_QWORD *)v46 + 19) = 0;
    *((_QWORD *)v46 + 20) = 0;
    *((_QWORD *)v46 + 18) = v64;
    *((_BYTE *)v46 + 168) = 1;
  }
  return result;
}

uint64_t sub_1A55EA828(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (a3[29])
  {
    v9 = a3[31];
    v8 = a3[32];
    v10 = v8;
    sub_1A54E4334(v9, v8, SBYTE4(v8));
  }
  else
  {
    v9 = 0;
    v10 = 0xFF00000000;
  }
  sub_1A55E6584(a1, a2 & 0x1010101FFFF01, v9, v10 & 0xFFFFFFFFFFLL, a3[7], a3[8], a4);
  return sub_1A5503B8C(v9, v10);
}

uint64_t sub_1A55EA8CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result;
  uint64_t v7;

  result = sub_1A55E8E94(a1, a2, a3, a4);
  *a5 = result;
  a5[1] = v7;
  return result;
}

uint64_t sub_1A55EA8F0(const void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, NSObject *a7)
{
  return sub_1A55EDED8(a1, a2, a3, a4, a6, a7);
}

uint64_t sub_1A55EA8FC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1A55EE024(a1, a2, a3, a5);
}

uint64_t sub_1A55EA908(uint64_t result)
{
  uint64_t v1;
  int v2;
  char v3;

  if (*(_BYTE *)(result + 4) == 1 && !*(_DWORD *)result && *(unsigned __int8 *)(v1 + 228) == 255)
  {
    result = sub_1A55C19FC(MEMORY[0x1E0DEE9D8]);
    *(_QWORD *)(v1 + 216) = result;
    *(_DWORD *)(v1 + 224) = v2;
    *(_BYTE *)(v1 + 228) = v3;
  }
  return result;
}

unint64_t sub_1A55EA968()
{
  return 0xD000000000000019;
}

uint64_t sub_1A55EA984(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];
  _OWORD v8[2];
  _OWORD v9[4];
  _OWORD v10[2];

  v2 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  v8[0] = *(_OWORD *)(a1 + 64);
  *(_QWORD *)((char *)v8 + 13) = *(_QWORD *)(a1 + 77);
  v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  v10[0] = *(_OWORD *)(a2 + 64);
  *(_QWORD *)((char *)v10 + 13) = *(_QWORD *)(a2 + 77);
  v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_1A55EB5B0((uint64_t)v7, (uint64_t)v9) & 1;
}

BOOL sub_1A55EA9EC(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[2];
  _OWORD v6[2];
  _OWORD v7[2];
  _OWORD v8[2];

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v6[0] = *(_OWORD *)(a1 + 32);
  *(_QWORD *)((char *)v6 + 13) = *(_QWORD *)(a1 + 45);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v8[0] = *(_OWORD *)(a2 + 32);
  *(_QWORD *)((char *)v8 + 13) = *(_QWORD *)(a2 + 45);
  return sub_1A55EB404((uint64_t)v5, (uint64_t)v7);
}

uint64_t sub_1A55EAA44@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v3 = *((_QWORD *)a1 + 1);
  v4 = *((_QWORD *)a1 + 2);
  v5 = *((_QWORD *)a1 + 4);
  if (v5 < 0)
  {
    v11 = a1[12] | ((unint64_t)*((unsigned __int8 *)a1 + 52) << 32);
    v10 = *((_QWORD *)a1 + 5);
    v8 = *((_QWORD *)a1 + 3);
    v7 = *a1;
    v12 = v4 & 0xFFFFFFFFFFLL;
    v9 = v5 & 0xFFFFFFFFFFLL;
    sub_1A54E4334(v3, v4, SBYTE4(v4));
    sub_1A54E4334(v8, v5, SBYTE4(v5));
    result = sub_1A5503BA0(v10, v11);
  }
  else
  {
    sub_1A54E42F8(*((_QWORD *)a1 + 1));
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54E472C(v3);
    result = swift_bridgeObjectRelease();
    v7 = 0;
    v3 = 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v11 = 0;
    v12 = 0xFF00000000;
  }
  *(_QWORD *)a2 = v7;
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v12;
  *(_QWORD *)(a2 + 24) = v8;
  *(_QWORD *)(a2 + 32) = v9;
  *(_QWORD *)(a2 + 40) = v10;
  *(_DWORD *)(a2 + 48) = v11;
  *(_BYTE *)(a2 + 52) = BYTE4(v11);
  return result;
}

uint64_t sub_1A55EAB40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(unsigned int *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(unsigned int *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v7 = *(unsigned __int8 *)(a1 + 52);
  v8 = *(unsigned int *)(a1 + 48);
  v9 = v8 | (v7 << 32);
  *(_QWORD *)a2 = v2;
  *(_DWORD *)(a2 + 8) = v3;
  v10 = *(_BYTE *)(a1 + 20);
  *(_BYTE *)(a2 + 12) = v10;
  *(_QWORD *)(a2 + 16) = v4;
  *(_DWORD *)(a2 + 24) = v5;
  v11 = *(_BYTE *)(a1 + 36);
  *(_BYTE *)(a2 + 28) = v11;
  *(_QWORD *)(a2 + 32) = v6;
  *(_BYTE *)(a2 + 44) = v7;
  *(_DWORD *)(a2 + 40) = v8;
  sub_1A54E4334(v2, v3, v10);
  sub_1A54E4334(v4, v5, v11);
  return sub_1A5503BA0(v6, v9);
}

uint64_t sub_1A55EABD4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  unsigned int *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(uint64_t *);
  void (*v59)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unsigned int v66;
  unsigned __int8 v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  int v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  int v82;
  unsigned __int8 v83;
  uint64_t v84;
  unsigned int v85;
  unsigned __int8 v86;
  uint64_t v87;
  unsigned int v88;
  unsigned __int8 v89;
  uint64_t v90;
  unsigned int v91;
  unsigned __int8 v92;
  _QWORD v93[2];

  v90 = 0;
  v91 = 0;
  v92 = -1;
  v87 = 0;
  v89 = -1;
  v88 = 0;
  v2 = *a1;
  v58 = (uint64_t (*)(uint64_t *))a1[3];
  v59 = (void (*)(uint64_t *__return_ptr, uint64_t *))a1[1];
  v93[0] = v2;
  v50 = (void (*)(uint64_t *__return_ptr, uint64_t *))a1[5];
  v3 = *(_QWORD *)(v2 + 16);
  sub_1A54FCA28((uint64_t)v93);
  swift_retain();
  swift_retain();
  result = swift_retain();
  if (!v3)
  {
    v34 = 0;
    v33 = 0xFF00000000;
    goto LABEL_23;
  }
  v52 = 0;
  v5 = 0;
  v6 = v2 + 80;
  v48 = v3 - 1;
  v49 = v2 + 80;
  v54 = 0xFF00000000;
  v57 = v2;
  v55 = v3;
  while (2)
  {
    while (2)
    {
      v7 = (unsigned int *)(v6 + 56 * v5);
      v8 = v5;
      while (1)
      {
        if (v8 >= *(_QWORD *)(v2 + 16))
        {
          __break(1u);
          return result;
        }
        v9 = v8 + 1;
        v10 = *((unsigned __int8 *)v7 + 4);
        v56 = v8;
        v11 = *v7;
        v12 = v11 | (v10 << 32);
        v14 = *((_QWORD *)v7 - 2);
        v13 = *((_QWORD *)v7 - 1);
        v16 = *((_QWORD *)v7 - 4);
        v15 = *((_QWORD *)v7 - 3);
        v17 = *((_QWORD *)v7 - 5);
        LODWORD(v68) = *(v7 - 12);
        v69 = v17;
        v70 = v16;
        v71 = v15;
        v72 = v14;
        v73 = v13;
        v75 = v10;
        v74 = v11;
        sub_1A550F160(v17, v16, v15, v14, v13, v12);
        v59(&v60, &v68);
        sub_1A5503B08(v17, v16, v15, v14, v13, v12);
        v18 = v60;
        v19 = v61;
        v20 = v62;
        v21 = v63;
        v22 = v64;
        v23 = v65;
        v24 = v66 | ((unint64_t)v67 << 32);
        v76 = v60;
        v77 = v61;
        v78 = v62;
        v79 = v63;
        v80 = v64;
        v81 = v65;
        v83 = v67;
        v82 = v66;
        if ((v58(&v76) & 1) != 0)
          break;
        result = sub_1A55EE2C4(v18, v19, v20, v21, v22, v23, v24, (void (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458, sub_1A5503B8C);
        v7 += 14;
        v8 = v9;
        v2 = v57;
        if (v55 == v9)
        {
          v33 = v54;
          v34 = v52;
          goto LABEL_23;
        }
      }
      v46 = v9;
      v76 = v18;
      v77 = v19;
      v78 = v20;
      v79 = v21;
      v80 = v22;
      v81 = v23;
      v82 = v24;
      v83 = BYTE4(v24);
      v50(&v68, &v76);
      sub_1A55EE2C4(v18, v19, v20, v21, v22, v23, v24, (void (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458, sub_1A5503B8C);
      v25 = v68;
      v26 = v69;
      v27 = BYTE4(v69);
      v28 = v70;
      v29 = v71;
      v51 = BYTE4(v71);
      v34 = v72;
      v30 = BYTE4(v73);
      v31 = v73;
      if (v92 == 255)
      {
        v90 = v68;
        v92 = BYTE4(v69);
        v91 = v69;
        sub_1A54E4334(v68, v69, SBYTE4(v69));
        v32 = v47;
      }
      else
      {
        sub_1A54E4334(v68, v69, SBYTE4(v69));
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
        v32 = v47 & 0xFFFFFF0000000000 | v26 | (v27 << 32);
        MessageIdentifierSet.formUnion(_:)(v25, v32);
        sub_1A54E3458(v25, v26, v27);
      }
      v47 = v32;
      if (v89 == 255)
      {
        v87 = v28;
        v89 = v51;
        v88 = v29;
        sub_1A54E4334(v28, v29, v51);
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
        v45 = v45 & 0xFFFFFF0000000000 | v29 | (v51 << 32);
        MessageIdentifierSet.formUnion(_:)(v28, v45);
      }
      v33 = v31 | (v30 << 32);
      if (BYTE4(v54) == 255)
      {
        sub_1A5503BA0(v34, v31 | (v30 << 32));
        sub_1A54E3458(v25, v26, v27);
        sub_1A54E3458(v28, v29, v51);
        result = sub_1A5503B8C(v34, v31 | (v30 << 32));
        v54 = v31 | (v30 << 32);
        v52 = v34;
        goto LABEL_18;
      }
      if (BYTE4(v33) == 255)
      {
        sub_1A54E3458(v25, v26, v27);
        result = sub_1A54E3458(v28, v29, v51);
        v34 = v52;
        v33 = v54;
LABEL_18:
        v2 = v57;
        v6 = v49;
        v5 = v46;
        if (v48 != v56)
          continue;
        goto LABEL_23;
      }
      break;
    }
    v85 = v54;
    v86 = BYTE4(v54);
    v84 = v52;
    sub_1A54E4334(v34, v33, SBYTE4(v33));
    sub_1A54E3458(v25, v26, v27);
    sub_1A54E3458(v28, v29, v51);
    sub_1A5503B8C(v34, v33);
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
    v44 = v44 & 0xFFFFFF0000000000 | v31 | (v31 | (v30 << 32)) & 0xFF00000000;
    MessageIdentifierSet.formUnion(_:)(v34, v44);
    result = sub_1A5503B8C(v34, v33);
    v33 = v85 | ((unint64_t)v86 << 32);
    v34 = v84;
    v2 = v57;
    v5 = v56 + 1;
    v54 = v33;
    v52 = v84;
    v6 = v49;
    if (v48 != v56)
      continue;
    break;
  }
LABEL_23:
  sub_1A54F81BC((uint64_t)v93);
  swift_release();
  swift_release();
  swift_release();
  v35 = v90;
  v36 = v91 | ((unint64_t)v92 << 32);
  if (v92 == 255)
  {
    sub_1A54F81BC((uint64_t)v93);
    swift_release();
    swift_release();
    swift_release();
    v37 = v88 | ((unint64_t)v89 << 32);
  }
  else
  {
    sub_1A54E4334(v90, v91 | ((unint64_t)v92 << 32), SBYTE4(v36));
    sub_1A54E3414();
    v38 = MessageIdentifierSetNonEmpty.init(set:)(v35, v36);
    v40 = v39;
    sub_1A54F81BC((uint64_t)v93);
    swift_release();
    swift_release();
    swift_release();
    v37 = v88 | ((unint64_t)v89 << 32);
    if (BYTE4(v40) != 255)
    {
      if (BYTE4(v37) != 255)
      {
        v41 = v87;
        result = sub_1A5503B8C(v35, v36);
        v43 = v40 & 0xFFFFFFFFFFLL;
        v42 = v37 & 0xFFFFFFFFFFLL;
        goto LABEL_29;
      }
      sub_1A5503B8C(v38, v40);
    }
  }
  sub_1A5503B8C(v34, v33);
  sub_1A5503B8C(v87, v37);
  result = sub_1A5503B8C(v35, v36);
  v38 = 0;
  v41 = 0;
  v42 = 0;
  v34 = 0;
  v33 = 0;
  v43 = 0xFF00000000;
LABEL_29:
  *(_QWORD *)a2 = v38;
  *(_QWORD *)(a2 + 8) = v43;
  *(_QWORD *)(a2 + 16) = v41;
  *(_QWORD *)(a2 + 24) = v42;
  *(_QWORD *)(a2 + 32) = v34;
  *(_BYTE *)(a2 + 44) = BYTE4(v33);
  *(_DWORD *)(a2 + 40) = v33;
  return result;
}

uint64_t sub_1A55EB240@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t *__return_ptr, _QWORD *)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  int v6;
  char v7;
  void (*v8)(_QWORD *__return_ptr, _OWORD *);
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t result;
  int v16;
  char v17;
  uint64_t v18;
  int v19;
  char v20;
  uint64_t v21;
  int v22;
  char v23;
  _QWORD v24[2];
  unsigned int v25;
  char v26;
  uint64_t v27;
  unsigned int v28;
  char v29;
  uint64_t v30;
  unsigned int v31;
  unsigned __int8 v32;
  _OWORD v33[3];
  int v34;
  char v35;
  uint64_t v36;
  int v37;
  char v38;
  uint64_t v39;
  int v40;
  char v41;
  uint64_t v42;
  int v43;
  char v44;

  v6 = *(_DWORD *)(a1 + 48);
  v7 = *(_BYTE *)(a1 + 52);
  v8 = *(void (**)(_QWORD *__return_ptr, _OWORD *))(a3 + 40);
  v9 = *(_OWORD *)(a1 + 16);
  v33[0] = *(_OWORD *)a1;
  v33[1] = v9;
  v33[2] = *(_OWORD *)(a1 + 32);
  v35 = v7;
  v34 = v6;
  v8(v24, v33);
  a2(&v36, v24);
  v10 = v27;
  v11 = v28;
  v12 = v30;
  v13 = v31 | ((unint64_t)v32 << 32);
  v14 = v29;
  sub_1A54E3458(v24[1], v25, v26);
  sub_1A54E3458(v10, v11, v14);
  result = sub_1A5503B8C(v12, v13);
  v16 = v37;
  v17 = v38;
  v18 = v39;
  v19 = v40;
  v20 = v41;
  v21 = v42;
  v22 = v43;
  v23 = v44;
  *(_QWORD *)a4 = v36;
  *(_DWORD *)(a4 + 8) = v16;
  *(_BYTE *)(a4 + 12) = v17;
  *(_QWORD *)(a4 + 16) = v18;
  *(_DWORD *)(a4 + 24) = v19;
  *(_BYTE *)(a4 + 28) = v20;
  *(_QWORD *)(a4 + 32) = v21;
  *(_BYTE *)(a4 + 44) = v23;
  *(_DWORD *)(a4 + 40) = v22;
  return result;
}

BOOL sub_1A55EB34C(uint64_t a1)
{
  return (~*(_QWORD *)(a1 + 16) & 0xFF00000000) != 0;
}

uint64_t sub_1A55EB360@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(result + 16);
  if ((~v2 & 0xFF00000000) != 0)
  {
    v3 = *(unsigned __int8 *)(result + 52);
    v4 = *(unsigned int *)(result + 48);
    v5 = v4 | (v3 << 32);
    v7 = *(_QWORD *)(result + 32);
    v6 = *(_QWORD *)(result + 40);
    v8 = *(_QWORD *)(result + 24);
    v9 = *(_QWORD *)(result + 8);
    *(_DWORD *)a2 = *(_QWORD *)result;
    *(_QWORD *)(a2 + 8) = v9;
    *(_DWORD *)(a2 + 16) = v2;
    *(_BYTE *)(a2 + 20) = BYTE4(v2);
    *(_QWORD *)(a2 + 24) = v8;
    *(_DWORD *)(a2 + 32) = v7;
    *(_BYTE *)(a2 + 36) = BYTE4(v7);
    *(_QWORD *)(a2 + 40) = v6;
    *(_BYTE *)(a2 + 52) = v3;
    *(_DWORD *)(a2 + 48) = v4;
    sub_1A54E4334(v9, v2, SBYTE4(v2));
    sub_1A54E4334(v8, v7, SBYTE4(v7));
    return sub_1A5503BA0(v6, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

BOOL sub_1A55EB404(uint64_t a1, uint64_t a2)
{
  int32x2_t *v2;
  uint64_t v3;
  uint64_t v4;
  int32x2_t *v5;
  uint64_t v6;
  uint64_t v7;
  int32x2_t *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  int32x2_t *v18;
  int32x2_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int32x2_t *v26;

  if (*(_DWORD *)a1 != *(_DWORD *)a2)
    return 0;
  v2 = *(int32x2_t **)(a1 + 8);
  v3 = *(unsigned int *)(a1 + 16);
  v4 = *(unsigned __int8 *)(a1 + 20);
  v25 = *(unsigned int *)(a1 + 32);
  v26 = *(int32x2_t **)(a1 + 24);
  v24 = *(unsigned __int8 *)(a1 + 36);
  v23 = *(unsigned __int8 *)(a1 + 52);
  v22 = *(unsigned int *)(a1 + 48);
  v5 = *(int32x2_t **)(a2 + 8);
  v6 = *(unsigned int *)(a2 + 16);
  v7 = *(unsigned __int8 *)(a2 + 20);
  v8 = *(int32x2_t **)(a2 + 24);
  v9 = *(unsigned int *)(a2 + 32);
  v10 = *(unsigned __int8 *)(a2 + 36);
  v18 = *(int32x2_t **)(a2 + 40);
  v19 = *(int32x2_t **)(a1 + 40);
  v21 = *(unsigned __int8 *)(a2 + 52);
  v20 = *(unsigned int *)(a2 + 48);
  sub_1A54E3414();
  static MessageIdentifierSet.__derived_struct_equals(_:_:)(v2, v3 | (v4 << 32), v5, v6 | (v7 << 32));
  if ((v11 & 1) == 0)
    return 0;
  static MessageIdentifierSet.__derived_struct_equals(_:_:)(v26, v25 | (v24 << 32), v8, v9 | (v10 << 32));
  if ((v12 & 1) == 0)
    return 0;
  v13 = v22 | (v23 << 32);
  v14 = v20 | (v21 << 32);
  if (BYTE4(v13) != 255)
  {
    if (BYTE4(v14) == 255)
      return 0;
    sub_1A5503BA0((uint64_t)v18, v20 | (v21 << 32));
    sub_1A5503BA0((uint64_t)v19, v13);
    static MessageIdentifierSet.__derived_struct_equals(_:_:)(v19, v13 & 0xFFFFFFFFFFLL, v18, v14 & 0xFFFFFFFFFFLL);
    v16 = v15;
    sub_1A5503B8C((uint64_t)v18, v14);
    sub_1A5503B8C((uint64_t)v19, v13);
    return (v16 & 1) != 0;
  }
  return BYTE4(v14) == 255;
}

uint64_t sub_1A55EB5B0(uint64_t a1, uint64_t a2)
{
  int32x2_t *v4;
  uint64_t v5;
  uint64_t v6;
  int32x2_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  unint64_t v18;
  int32x2_t *v19;
  unint64_t v20;
  int32x2_t *v21;
  char v22;
  char v23;
  int32x2_t *v25;
  int32x2_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int32x2_t *v31;
  uint64_t v32;
  uint64_t v33;
  int32x2_t *v34;

  if ((sub_1A5537510(*(_QWORD *)a1, *(_QWORD *)a2) & 1) == 0)
    return 0;
  v4 = *(int32x2_t **)(a1 + 8);
  v5 = *(unsigned int *)(a1 + 16);
  v6 = *(unsigned __int8 *)(a1 + 20);
  v33 = *(unsigned int *)(a1 + 32);
  v34 = *(int32x2_t **)(a1 + 24);
  v32 = *(unsigned __int8 *)(a1 + 36);
  v30 = *(unsigned __int8 *)(a1 + 52);
  v29 = *(unsigned int *)(a1 + 48);
  v7 = *(int32x2_t **)(a2 + 8);
  v8 = *(unsigned int *)(a2 + 16);
  v9 = *(unsigned __int8 *)(a2 + 20);
  v31 = *(int32x2_t **)(a2 + 24);
  v10 = *(unsigned int *)(a2 + 32);
  v11 = *(unsigned __int8 *)(a2 + 36);
  v25 = *(int32x2_t **)(a2 + 40);
  v26 = *(int32x2_t **)(a1 + 40);
  v28 = *(unsigned __int8 *)(a2 + 52);
  v27 = *(unsigned int *)(a2 + 48);
  sub_1A54E3414();
  static MessageIdentifierSet.__derived_struct_equals(_:_:)(v4, v5 | (v6 << 32), v7, v8 | (v9 << 32));
  if ((v12 & 1) == 0)
    return 0;
  static MessageIdentifierSet.__derived_struct_equals(_:_:)(v34, v33 | (v32 << 32), v31, v10 | (v11 << 32));
  if ((v13 & 1) == 0)
    return 0;
  v14 = v29 | (v30 << 32);
  v15 = v27 | (v28 << 32);
  if (BYTE4(v14) != 255)
  {
    if (BYTE4(v15) == 255)
      return 0;
    sub_1A5503BA0((uint64_t)v25, v27 | (v28 << 32));
    sub_1A5503BA0((uint64_t)v26, v14);
    static MessageIdentifierSet.__derived_struct_equals(_:_:)(v26, v14 & 0xFFFFFFFFFFLL, v25, v15 & 0xFFFFFFFFFFLL);
    v17 = v16;
    sub_1A5503B8C((uint64_t)v25, v15);
    sub_1A5503B8C((uint64_t)v26, v14);
    if ((v17 & 1) == 0)
      return 0;
LABEL_9:
    if ((*(_BYTE *)(a1 + 64) & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 64))
        return 0;
    }
    else if ((*(_BYTE *)(a2 + 64) & 1) != 0
           || !static FetchedWindow.__derived_struct_equals(_:_:)(*(_QWORD *)(a1 + 56), *(_QWORD *)(a2 + 56)))
    {
      return 0;
    }
    v18 = *(unsigned int *)(a2 + 80) | ((unint64_t)*(unsigned __int8 *)(a2 + 84) << 32);
    if (*(unsigned __int8 *)(a1 + 84) == 255)
    {
      if (BYTE4(v18) != 255)
        return 0;
    }
    else
    {
      if (BYTE4(v18) == 255)
        return 0;
      v19 = *(int32x2_t **)(a1 + 72);
      v20 = *(unsigned int *)(a1 + 80) | ((unint64_t)*(unsigned __int8 *)(a1 + 84) << 32);
      v21 = *(int32x2_t **)(a2 + 72);
      sub_1A5503BA0((uint64_t)v21, v18);
      sub_1A5503BA0((uint64_t)v19, v20);
      static MessageIdentifierSet.__derived_struct_equals(_:_:)(v19, v20, v21, v18 & 0xFFFFFFFFFFLL);
      v23 = v22;
      sub_1A5503B8C((uint64_t)v21, v18);
      sub_1A5503B8C((uint64_t)v19, v20);
      if ((v23 & 1) == 0)
        return 0;
    }
    return 1;
  }
  if (BYTE4(v15) == 255)
    goto LABEL_9;
  return 0;
}

uint64_t sub_1A55EB830(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  unint64_t v56;
  unint64_t v59;
  uint64_t v60;
  unsigned int *v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;

  v4 = *(_QWORD *)(result + 16);
  if (!v4)
    return MEMORY[0x1E0DEE9D8];
  v5 = a4;
  v6 = a2;
  v7 = 0;
  v8 = result + 80;
  v52 = v4 - 1;
  v9 = MEMORY[0x1E0DEE9D8];
  v56 = *(_QWORD *)(result + 16);
  v53 = result + 80;
  do
  {
    v54 = v9;
    if (v7 > v4)
      v4 = v7;
    v59 = v4;
    v10 = (unsigned int *)(v8 + 56 * v7);
    v11 = v7;
    while (1)
    {
      if (v59 == v11)
      {
        __break(1u);
        return result;
      }
      v69 = v11;
      v55 = *(v10 - 12);
      v79 = *((_QWORD *)v10 - 5);
      v80 = *(v10 - 8);
      v81 = *((unsigned __int8 *)v10 - 28);
      v82 = *((_QWORD *)v10 - 3);
      v83 = *(v10 - 4);
      v84 = *((unsigned __int8 *)v10 - 12);
      v85 = *((_QWORD *)v10 - 1);
      v12 = *((unsigned __int8 *)v10 + 4);
      v13 = *v10;
      v14 = *(unsigned int *)(v6 + 80) | ((unint64_t)*(unsigned __int8 *)(v6 + 84) << 32);
      v61 = v10;
      v64 = *(_QWORD *)(v6 + 72);
      if (*(unsigned __int8 *)(v6 + 84) == 255)
      {
        v15 = sub_1A54E3414();
        v77 = MessageIdentifierSet.init()(&type metadata for UID, v15);
        v75 = HIDWORD(v16);
        v76 = v16;
      }
      else
      {
        v75 = HIDWORD(v14);
        v77 = *(_QWORD *)(v6 + 72);
        v76 = *(unsigned int *)(v6 + 80) | ((unint64_t)*(unsigned __int8 *)(v6 + 84) << 32);
      }
      v60 = *(_QWORD *)(v6 + 56);
      v67 = *(_BYTE *)(v6 + 64);
      sub_1A54E4334(v79, v80, v81);
      sub_1A54E4334(v82, v83, v84);
      v78 = v13 | (v12 << 32);
      sub_1A5503BA0(v85, v78);
      sub_1A5503BA0(v64, v14);
      v17 = sub_1A54E3414();
      v18 = v5;
      v72 = v72 & 0xFFFFFF0000000000 | v80 | (v81 << 32);
      v73 = v73 & 0xFFFFFF0000000000 | v83 | (v84 << 32);
      MessageIdentifierSet.subtracting(_:)(v82, v73, v79, v72);
      v20 = v19;
      v22 = v21;
      v23 = a3;
      if (BYTE4(v5) == 255)
      {
        v23 = MessageIdentifierSet.init()(&type metadata for UID, v17);
        v5 = v24;
      }
      sub_1A5503BA0(a3, v18);
      MessageIdentifierSet.subtracting(_:)(v23, v5 & 0xFFFFFFFFFFLL, v20, v22 & 0xFFFFFFFFFFLL);
      v65 = v25;
      v27 = v26;
      sub_1A54E3458(v20, v22, SBYTE4(v22));
      sub_1A54E3458(v23, v5, SBYTE4(v5));
      LOBYTE(v20) = BYTE4(v78);
      if (BYTE4(v78) == 255)
      {
        v28 = MessageIdentifierSet.init()(&type metadata for UID, v17);
        v30 = v29;
        v20 = HIDWORD(v29);
        v31 = v71;
        v32 = v85;
      }
      else
      {
        v32 = v85;
        v28 = v85;
        v30 = v78;
        v31 = v71;
      }
      sub_1A5503BA0(v32, v78);
      v71 = v31 & 0xFFFFFF0000000000 | v30 | ((unint64_t)v20 << 32);
      MessageIdentifierSet.subtracting(_:)(v28, v71, v65, v27 & 0xFFFFFFFFFFLL);
      v34 = v33;
      v36 = v35;
      v62 = HIDWORD(v35);
      sub_1A54E3458(v65, v27, SBYTE4(v27));
      sub_1A54E3458(v28, v30, v20);
      MessageIdentifierSet.subtracting(_:)(v77, v70 & 0xFFFFFF0000000000 | v76 | ((unint64_t)v75 << 32), v34, v36 & 0xFFFFFFFFFFLL);
      v66 = v37;
      v39 = v38;
      sub_1A54E3458(v34, v36, v62);
      v70 = v70 & 0xFFFFFF0000000000 | v76 | ((unint64_t)v75 << 32);
      if ((v67 & 1) != 0)
      {
        v41 = MessageIdentifierSet.init()(&type metadata for UID, v17);
      }
      else
      {
        v86 = v60;
        MessageIdentifierSet.init(_:)((uint64_t)&v86, (uint64_t)&type metadata for UID, v17, v40);
      }
      v43 = v41;
      v44 = v42;
      v68 = HIDWORD(v42);
      MessageIdentifierSet.subtracting(_:)(v41, v42 & 0xFFFFFFFFFFLL, v66, v39 & 0xFFFFFFFFFFLL);
      v46 = v45;
      v48 = v47;
      v63 = HIDWORD(v47);
      sub_1A54E3458(v66, v39, SBYTE4(v39));
      sub_1A54E3458(v43, v44, v68);
      LOBYTE(v43) = MessageIdentifierSet.isEmpty.getter(v46, v48 & 0xFFFFFFFFFFLL);
      sub_1A54E3458(v46, v48, v63);
      sub_1A54E3458(v77, v76, v75);
      if ((v43 & 1) != 0)
        break;
      v11 = v69 + 1;
      sub_1A54E3458(v79, v80, v81);
      sub_1A54E3458(v82, v83, v84);
      result = sub_1A5503B8C(v85, v78);
      v10 = v61 + 14;
      v6 = a2;
      v5 = a4;
      if (v56 == v69 + 1)
        return v54;
    }
    result = swift_isUniquelyReferenced_nonNull_native();
    v9 = v54;
    v87 = v54;
    v5 = a4;
    if ((result & 1) == 0)
    {
      result = sub_1A54F4F3C(0, *(_QWORD *)(v54 + 16) + 1, 1);
      v9 = v87;
    }
    v50 = *(_QWORD *)(v9 + 16);
    v49 = *(_QWORD *)(v9 + 24);
    if (v50 >= v49 >> 1)
    {
      result = sub_1A54F4F3C(v49 > 1, v50 + 1, 1);
      v9 = v87;
    }
    *(_QWORD *)(v9 + 16) = v50 + 1;
    v51 = v9 + 56 * v50;
    *(_DWORD *)(v51 + 32) = v55;
    v7 = v69 + 1;
    *(_QWORD *)(v51 + 40) = v79;
    *(_DWORD *)(v51 + 48) = v80;
    *(_BYTE *)(v51 + 52) = v81;
    *(_QWORD *)(v51 + 56) = v82;
    *(_DWORD *)(v51 + 64) = v83;
    *(_BYTE *)(v51 + 68) = v84;
    *(_QWORD *)(v51 + 72) = v85;
    *(_BYTE *)(v51 + 84) = BYTE4(v78);
    *(_DWORD *)(v51 + 80) = v78;
    v8 = v53;
    v4 = v56;
    v6 = a2;
  }
  while (v52 != v69);
  return v9;
}

uint64_t sub_1A55EBDF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  _QWORD *v8;
  uint64_t result;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  unint64_t v36;
  int64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v43;
  BOOL v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  size_t v50;
  void *v51;
  _QWORD *v52;
  int v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE v71[48];
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unsigned int v75;
  unsigned __int8 v76;
  uint64_t v77;
  unsigned int v78;
  unsigned __int8 v79;
  uint64_t v80[8];

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = sub_1A55EAB40;
  v8[3] = 0;
  v8[4] = a1;
  v8[5] = sub_1A55EAA44;
  v8[6] = 0;
  v8[7] = sub_1A55EB34C;
  v8[8] = 0;
  v8[9] = sub_1A55EB360;
  v8[10] = 0;
  v80[0] = a1;
  v80[1] = (uint64_t)sub_1A55EAA44;
  v80[2] = 0;
  v80[3] = (uint64_t)sub_1A55EB34C;
  v80[4] = 0;
  v80[5] = (uint64_t)sub_1A55EC420;
  v80[6] = (uint64_t)v8;
  swift_bridgeObjectRetain_n();
  sub_1A55EABD4(v80, (uint64_t)v71);
  sub_1A55032A0((uint64_t)v71, (uint64_t)&v72, &qword_1EE797CB8);
  if ((~v73 & 0xFF00000000) == 0)
  {
    swift_bridgeObjectRelease();
    result = sub_1A5503B8C(0, 0xFF00000000);
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 0;
    v14 = 0;
    v15 = 0;
    v16 = 0;
    v17 = 0;
    v18 = 0;
    v19 = 0;
LABEL_35:
    *(_QWORD *)a4 = v10;
    *(_QWORD *)(a4 + 8) = v11;
    *(_QWORD *)(a4 + 16) = v12;
    *(_QWORD *)(a4 + 24) = v13;
    *(_QWORD *)(a4 + 32) = v14;
    *(_QWORD *)(a4 + 40) = v15;
    *(_QWORD *)(a4 + 48) = v16;
    *(_QWORD *)(a4 + 56) = v17;
    *(_QWORD *)(a4 + 64) = v18;
    *(_QWORD *)(a4 + 72) = 0;
    *(_BYTE *)(a4 + 84) = BYTE4(v19);
    *(_DWORD *)(a4 + 80) = v19;
    return result;
  }
  v11 = v72;
  v60 = v75;
  v61 = v73;
  v59 = v76;
  v62 = v77;
  v63 = v74;
  v58 = v79;
  v57 = v78;
  v20 = *(_QWORD *)(a1 + 16);
  v64 = a2;
  if (v20)
  {
    v54 = a3;
    v55 = v72;
    v56 = a4;
    result = swift_bridgeObjectRetain_n();
    v67 = 0;
    v21 = 0;
    v22 = -v20;
    v66 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v23 = MEMORY[0x1E0DEE9D8] + 32;
    v24 = a1 + 80;
    while (2)
    {
      v65 = v23;
      v25 = (unsigned int *)(v24 + 56 * v21++);
      while (1)
      {
        if ((unint64_t)(v21 - 1) >= *(_QWORD *)(a1 + 16))
        {
          __break(1u);
          goto LABEL_37;
        }
        v27 = *((_QWORD *)v25 - 5);
        v26 = *((_QWORD *)v25 - 4);
        v28 = *((_QWORD *)v25 - 3);
        v29 = *((_QWORD *)v25 - 2);
        v30 = *((_QWORD *)v25 - 1);
        v31 = *((unsigned __int8 *)v25 + 4);
        v32 = *v25;
        v33 = v32 | (v31 << 32);
        if ((v29 & 0x8000000000000000) != 0)
          break;
        sub_1A550F160(*((_QWORD *)v25 - 5), *((_QWORD *)v25 - 4), *((_QWORD *)v25 - 3), *((_QWORD *)v25 - 2), *((_QWORD *)v25 - 1), v32 | (v31 << 32));
        sub_1A550F160(v27, v26, v28, v29, v30, v33);
        sub_1A54E472C(v27);
        swift_bridgeObjectRelease();
        result = sub_1A5503B08(v27, v26, v28, v29, v30, v33);
        ++v21;
        v25 += 14;
        if (v22 + v21 == 1)
          goto LABEL_29;
      }
      v34 = *(v25 - 12);
      v35 = v67;
      v53 = v34;
      if (v67)
      {
        result = sub_1A550F160(v27, v26, v28, v29, v30, v33);
LABEL_27:
        v44 = __OFSUB__(v35, 1);
        v45 = v35 - 1;
        if (!v44)
        {
          v67 = v45;
          *(_DWORD *)v65 = v53;
          *(_QWORD *)(v65 + 8) = v27;
          *(_DWORD *)(v65 + 16) = v26;
          *(_BYTE *)(v65 + 20) = BYTE4(v26);
          *(_QWORD *)(v65 + 24) = v28;
          *(_DWORD *)(v65 + 32) = v29;
          *(_BYTE *)(v65 + 36) = BYTE4(v29);
          *(_QWORD *)(v65 + 40) = v30;
          *(_DWORD *)(v65 + 48) = v33;
          *(_BYTE *)(v65 + 52) = BYTE4(v33);
          v23 = v65 + 56;
          v24 = a1 + 80;
          if (v22 + v21)
            continue;
LABEL_29:
          result = swift_bridgeObjectRelease();
          v11 = v55;
          a4 = v56;
          v10 = v66;
          a3 = v54;
          goto LABEL_31;
        }
LABEL_37:
        __break(1u);
        goto LABEL_38;
      }
      break;
    }
    v36 = v66[3];
    if ((uint64_t)((v36 >> 1) + 0x4000000000000000) < 0)
      goto LABEL_39;
    v37 = v36 & 0xFFFFFFFFFFFFFFFELL;
    if (v37 <= 1)
      v38 = 1;
    else
      v38 = v37;
    v68 = v38;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A89E8);
    v39 = (_QWORD *)swift_allocObject();
    v40 = (uint64_t)(_swift_stdlib_malloc_size_0(v39) - 32) / 56;
    v39[2] = v68;
    v39[3] = 2 * v40;
    v41 = v66[3] >> 1;
    v69 = (v40 & 0x7FFFFFFFFFFFFFFFLL) - v41;
    v65 = (uint64_t)&v39[7 * v41 + 4];
    if (!v66[2])
    {
      sub_1A550F160(v27, v26, v28, v29, v30, v33);
      result = swift_release();
      v66 = v39;
      v35 = v69;
      goto LABEL_27;
    }
    v50 = 56 * v41;
    v51 = v39 + 4;
    v52 = v39;
    if (v39 < v66 || v39 + 4 >= &v66[7 * v41 + 4])
    {
      sub_1A550F160(v27, v26, v28, v29, v30, v33);
      v35 = v69;
    }
    else
    {
      sub_1A550F160(v27, v26, v28, v29, v30, v33);
      v43 = v39 == v66;
      v35 = v69;
      if (v43)
        goto LABEL_26;
    }
    memmove(v51, v66 + 4, v50);
LABEL_26:
    v66[2] = 0;
    result = swift_release();
    v66 = v52;
    goto LABEL_27;
  }
  result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v67 = 0;
  v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_31:
  v46 = v10[3];
  if (v46 < 2)
  {
LABEL_34:
    v70 = a3 & 1;
    v49 = v57 | (v58 << 32);
    swift_bridgeObjectRelease_n();
    swift_retain();
    sub_1A54E4334(v11, v61, SBYTE4(v61));
    v13 = v63;
    sub_1A54E4334(v63, v60, v59);
    v15 = v62;
    sub_1A5503BA0(v62, v49);
    sub_1A5503B8C(0, 0xFF00000000);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54E4334(v11, v61, SBYTE4(v61));
    sub_1A54E4334(v63, v60, v59);
    sub_1A5503BA0(v62, v49);
    sub_1A5503BA0(0, 0xFF00000000);
    sub_1A54E3458(v11, v61, SBYTE4(v61));
    sub_1A54E3458(v63, v60, v59);
    sub_1A5503B8C(v62, v49);
    swift_release();
    swift_bridgeObjectRelease();
    v17 = v64;
    sub_1A54E3458(v11, v61, SBYTE4(v61));
    sub_1A54E3458(v63, v60, v59);
    sub_1A5503B8C(v62, v49);
    result = sub_1A5503B8C(0, 0xFF00000000);
    v19 = 0xFF00000000;
    v18 = v70;
    v12 = v61 & 0xFFFFFFFFFFLL;
    v14 = v60 | (v59 << 32);
    v16 = v49 & 0xFFFFFFFFFFLL;
    goto LABEL_35;
  }
  v47 = v46 >> 1;
  v44 = __OFSUB__(v47, v67);
  v48 = v47 - v67;
  if (!v44)
  {
    v10[2] = v48;
    goto LABEL_34;
  }
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1A55EC3DC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A55EC420@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1A55EB240(a1, *(void (**)(uint64_t *__return_ptr, _QWORD *))(v2 + 16), v2 + 32, a2);
}

uint64_t destroy for FetchSearchResultMessages.Requests.Search(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  sub_1A54E3458(*(_QWORD *)(a1 + 8), *(unsigned int *)(a1 + 16), *(_BYTE *)(a1 + 20));
  result = sub_1A54E3458(*(_QWORD *)(a1 + 24), *(unsigned int *)(a1 + 32), *(_BYTE *)(a1 + 36));
  if (*(unsigned __int8 *)(a1 + 52) != 255)
  {
    v3 = *(unsigned int *)(a1 + 48) | ((unint64_t)*(unsigned __int8 *)(a1 + 52) << 32);
    return sub_1A54E3458(*(_QWORD *)(a1 + 40), v3, SBYTE4(v3));
  }
  return result;
}

uint64_t initializeWithCopy for FetchSearchResultMessages.Requests.Search(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;
  char v6;
  uint64_t v7;
  unsigned int v8;
  char v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_DWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 20);
  sub_1A54E4334(v4, v5, v6);
  *(_QWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 20) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_DWORD *)(a2 + 32);
  v9 = *(_BYTE *)(a2 + 36);
  sub_1A54E4334(v7, v8, v9);
  *(_QWORD *)(a1 + 24) = v7;
  *(_DWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 36) = v9;
  v10 = (uint64_t *)(a2 + 40);
  if (*(unsigned __int8 *)(a2 + 52) == 255)
  {
    *(_QWORD *)(a1 + 40) = *v10;
    *(_QWORD *)(a1 + 45) = *(_QWORD *)(a2 + 45);
  }
  else
  {
    v11 = *(unsigned int *)(a2 + 48) | ((unint64_t)*(unsigned __int8 *)(a2 + 52) << 32);
    v12 = *v10;
    sub_1A54E4334(*v10, v11, SBYTE4(v11));
    *(_QWORD *)(a1 + 40) = v12;
    *(_DWORD *)(a1 + 48) = v11;
    *(_BYTE *)(a1 + 52) = BYTE4(v11);
  }
  return a1;
}

uint64_t assignWithCopy for FetchSearchResultMessages.Requests.Search(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t *v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_DWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 20);
  sub_1A54E4334(v4, v5, v6);
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(unsigned int *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = v5;
  v9 = *(_BYTE *)(a1 + 20);
  *(_BYTE *)(a1 + 20) = v6;
  sub_1A54E3458(v7, v8, v9);
  v10 = *(_QWORD *)(a2 + 24);
  v11 = *(_DWORD *)(a2 + 32);
  v12 = *(_BYTE *)(a2 + 36);
  sub_1A54E4334(v10, v11, v12);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(unsigned int *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v10;
  *(_DWORD *)(a1 + 32) = v11;
  v15 = *(_BYTE *)(a1 + 36);
  *(_BYTE *)(a1 + 36) = v12;
  sub_1A54E3458(v13, v14, v15);
  v16 = (uint64_t *)(a1 + 40);
  v17 = (uint64_t *)(a2 + 40);
  v18 = *(unsigned int *)(a2 + 48) | ((unint64_t)*(unsigned __int8 *)(a2 + 52) << 32);
  if (*(unsigned __int8 *)(a1 + 52) == 255)
  {
    if (BYTE4(v18) == 255)
    {
      v19 = *v17;
      *(_QWORD *)(a1 + 45) = *(uint64_t *)((char *)v17 + 5);
      *v16 = v19;
    }
    else
    {
      v21 = *v17;
      sub_1A54E4334(*v17, v18, SBYTE4(v18));
      *(_QWORD *)(a1 + 40) = v21;
      *(_DWORD *)(a1 + 48) = v18;
      *(_BYTE *)(a1 + 52) = BYTE4(v18);
    }
  }
  else if (BYTE4(v18) == 255)
  {
    sub_1A5510284(a1 + 40, &qword_1EE796DA8);
    v20 = *(uint64_t *)((char *)v17 + 5);
    *v16 = *v17;
    *(_QWORD *)(a1 + 45) = v20;
  }
  else
  {
    v22 = *v17;
    sub_1A54E4334(*v17, v18, SBYTE4(v18));
    v23 = *(_QWORD *)(a1 + 40);
    v24 = *(unsigned int *)(a1 + 48);
    *(_QWORD *)(a1 + 40) = v22;
    *(_DWORD *)(a1 + 48) = v18;
    v25 = *(_BYTE *)(a1 + 52);
    *(_BYTE *)(a1 + 52) = BYTE4(v18);
    sub_1A54E3458(v23, v24, v25);
  }
  return a1;
}

uint64_t assignWithTake for FetchSearchResultMessages.Requests.Search(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  int v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD *v15;
  unsigned __int8 v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_DWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 20);
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(unsigned int *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = v5;
  v9 = *(_BYTE *)(a1 + 20);
  *(_BYTE *)(a1 + 20) = v6;
  sub_1A54E3458(v7, v8, v9);
  v10 = *(_DWORD *)(a2 + 32);
  v11 = *(_BYTE *)(a2 + 36);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(unsigned int *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = v10;
  v14 = *(_BYTE *)(a1 + 36);
  *(_BYTE *)(a1 + 36) = v11;
  sub_1A54E3458(v12, v13, v14);
  v15 = (_QWORD *)(a2 + 40);
  v16 = *(_BYTE *)(a1 + 52);
  if (v16 != 255)
  {
    v17 = *(unsigned int *)(a2 + 48) | ((unint64_t)*(unsigned __int8 *)(a2 + 52) << 32);
    if (HIDWORD(v17) <= 0xFE)
    {
      v18 = *(unsigned int *)(a1 + 48);
      v19 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = *v15;
      *(_DWORD *)(a1 + 48) = v17;
      *(_BYTE *)(a1 + 52) = BYTE4(v17);
      sub_1A54E3458(v19, v18, v16);
      return a1;
    }
    sub_1A5510284(a1 + 40, &qword_1EE796DA8);
  }
  *(_QWORD *)(a1 + 40) = *v15;
  *(_QWORD *)(a1 + 45) = *(_QWORD *)(a2 + 45);
  return a1;
}

uint64_t getEnumTagSinglePayload for FetchSearchResultMessages.Requests.Search(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 53))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 20);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FetchSearchResultMessages.Requests.Search(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 52) = 0;
    *(_DWORD *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 53) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 53) = 0;
    if (a2)
      *(_BYTE *)(result + 20) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for FetchSearchResultMessages.Requests.Search()
{
  return &type metadata for FetchSearchResultMessages.Requests.Search;
}

uint64_t destroy for FetchSearchResultMessages.Requests(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;

  swift_bridgeObjectRelease();
  sub_1A54E3458(*(_QWORD *)(a1 + 8), *(unsigned int *)(a1 + 16), *(_BYTE *)(a1 + 20));
  result = sub_1A54E3458(*(_QWORD *)(a1 + 24), *(unsigned int *)(a1 + 32), *(_BYTE *)(a1 + 36));
  if (*(unsigned __int8 *)(a1 + 52) != 255)
  {
    v3 = *(unsigned int *)(a1 + 48) | ((unint64_t)*(unsigned __int8 *)(a1 + 52) << 32);
    result = sub_1A54E3458(*(_QWORD *)(a1 + 40), v3, SBYTE4(v3));
  }
  if (*(unsigned __int8 *)(a1 + 84) != 255)
  {
    v4 = *(unsigned int *)(a1 + 80) | ((unint64_t)*(unsigned __int8 *)(a1 + 84) << 32);
    return sub_1A54E3458(*(_QWORD *)(a1 + 72), v4, SBYTE4(v4));
  }
  return result;
}

uint64_t initializeWithCopy for FetchSearchResultMessages.Requests(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(unsigned int *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 20);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54E4334(v4, v5, v6);
  *(_QWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 20) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  LODWORD(v5) = *(_DWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 36);
  sub_1A54E4334(v7, v5, v8);
  *(_QWORD *)(a1 + 24) = v7;
  *(_DWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 36) = v8;
  v9 = (uint64_t *)(a2 + 40);
  if (*(unsigned __int8 *)(a2 + 52) == 255)
  {
    *(_QWORD *)(a1 + 40) = *v9;
    *(_QWORD *)(a1 + 45) = *(_QWORD *)(a2 + 45);
  }
  else
  {
    v10 = *(unsigned int *)(a2 + 48) | ((unint64_t)*(unsigned __int8 *)(a2 + 52) << 32);
    v11 = *v9;
    sub_1A54E4334(*v9, v10, SBYTE4(v10));
    *(_QWORD *)(a1 + 40) = v11;
    *(_DWORD *)(a1 + 48) = v10;
    *(_BYTE *)(a1 + 52) = BYTE4(v10);
  }
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v12 = (uint64_t *)(a2 + 72);
  if (*(unsigned __int8 *)(a2 + 84) == 255)
  {
    *(_QWORD *)(a1 + 72) = *v12;
    *(_QWORD *)(a1 + 77) = *(_QWORD *)(a2 + 77);
  }
  else
  {
    v13 = *(unsigned int *)(a2 + 80) | ((unint64_t)*(unsigned __int8 *)(a2 + 84) << 32);
    v14 = *v12;
    sub_1A54E4334(*v12, v13, SBYTE4(v13));
    *(_QWORD *)(a1 + 72) = v14;
    *(_DWORD *)(a1 + 80) = v13;
    *(_BYTE *)(a1 + 84) = BYTE4(v13);
  }
  return a1;
}

uint64_t assignWithCopy for FetchSearchResultMessages.Requests(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t *v16;
  uint64_t *v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t *v28;
  uint64_t *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_DWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 20);
  sub_1A54E4334(v4, v5, v6);
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(unsigned int *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = v5;
  v9 = *(_BYTE *)(a1 + 20);
  *(_BYTE *)(a1 + 20) = v6;
  sub_1A54E3458(v7, v8, v9);
  v10 = *(_QWORD *)(a2 + 24);
  v11 = *(_DWORD *)(a2 + 32);
  v12 = *(_BYTE *)(a2 + 36);
  sub_1A54E4334(v10, v11, v12);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(unsigned int *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v10;
  *(_DWORD *)(a1 + 32) = v11;
  v15 = *(_BYTE *)(a1 + 36);
  *(_BYTE *)(a1 + 36) = v12;
  sub_1A54E3458(v13, v14, v15);
  v16 = (uint64_t *)(a1 + 40);
  v17 = (uint64_t *)(a2 + 40);
  v18 = *(unsigned int *)(a2 + 48) | ((unint64_t)*(unsigned __int8 *)(a2 + 52) << 32);
  v19 = *(_BYTE *)(a2 + 52);
  if (*(unsigned __int8 *)(a1 + 52) == 255)
  {
    if (BYTE4(v18) == 255)
    {
      v20 = *v17;
      *(_QWORD *)(a1 + 45) = *(_QWORD *)(a2 + 45);
      *v16 = v20;
    }
    else
    {
      v22 = *v17;
      sub_1A54E4334(*v17, *(unsigned int *)(a2 + 48) | ((unint64_t)*(unsigned __int8 *)(a2 + 52) << 32), SBYTE4(v18));
      *(_QWORD *)(a1 + 40) = v22;
      *(_DWORD *)(a1 + 48) = v18;
      *(_BYTE *)(a1 + 52) = v19;
    }
  }
  else if (BYTE4(v18) == 255)
  {
    sub_1A5510284(a1 + 40, &qword_1EE796DA8);
    v21 = *(_QWORD *)(a2 + 45);
    *v16 = *v17;
    *(_QWORD *)(a1 + 45) = v21;
  }
  else
  {
    v23 = *v17;
    sub_1A54E4334(*v17, *(unsigned int *)(a2 + 48) | ((unint64_t)*(unsigned __int8 *)(a2 + 52) << 32), SBYTE4(v18));
    v24 = *(_QWORD *)(a1 + 40);
    v25 = *(unsigned int *)(a1 + 48);
    *(_QWORD *)(a1 + 40) = v23;
    *(_DWORD *)(a1 + 48) = v18;
    v26 = *(_BYTE *)(a1 + 52);
    *(_BYTE *)(a1 + 52) = v19;
    sub_1A54E3458(v24, v25, v26);
  }
  v27 = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = v27;
  v28 = (uint64_t *)(a1 + 72);
  v29 = (uint64_t *)(a2 + 72);
  v30 = *(unsigned int *)(a2 + 80) | ((unint64_t)*(unsigned __int8 *)(a2 + 84) << 32);
  if (*(unsigned __int8 *)(a1 + 84) == 255)
  {
    if (BYTE4(v30) == 255)
    {
      v31 = *v29;
      *(_QWORD *)(a1 + 77) = *(uint64_t *)((char *)v29 + 5);
      *v28 = v31;
    }
    else
    {
      v33 = *v29;
      sub_1A54E4334(*v29, v30, SBYTE4(v30));
      *(_QWORD *)(a1 + 72) = v33;
      *(_DWORD *)(a1 + 80) = v30;
      *(_BYTE *)(a1 + 84) = BYTE4(v30);
    }
  }
  else if (BYTE4(v30) == 255)
  {
    sub_1A5510284(a1 + 72, &qword_1EE796DA8);
    v32 = *(uint64_t *)((char *)v29 + 5);
    *v28 = *v29;
    *(_QWORD *)(a1 + 77) = v32;
  }
  else
  {
    v34 = *v29;
    sub_1A54E4334(*v29, v30, SBYTE4(v30));
    v35 = *(_QWORD *)(a1 + 72);
    v36 = *(unsigned int *)(a1 + 80);
    *(_QWORD *)(a1 + 72) = v34;
    *(_DWORD *)(a1 + 80) = v30;
    v37 = *(_BYTE *)(a1 + 84);
    *(_BYTE *)(a1 + 84) = BYTE4(v30);
    sub_1A54E3458(v35, v36, v37);
  }
  return a1;
}

__n128 __swift_memcpy85_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 77) = *(_QWORD *)(a2 + 77);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for FetchSearchResultMessages.Requests(uint64_t a1, uint64_t a2)
{
  int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  int v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD *v14;
  unsigned __int8 v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  unsigned __int8 v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_DWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 20);
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(unsigned int *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = v4;
  v8 = *(_BYTE *)(a1 + 20);
  *(_BYTE *)(a1 + 20) = v5;
  sub_1A54E3458(v6, v7, v8);
  v9 = *(_DWORD *)(a2 + 32);
  v10 = *(_BYTE *)(a2 + 36);
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(unsigned int *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = v9;
  v13 = *(_BYTE *)(a1 + 36);
  *(_BYTE *)(a1 + 36) = v10;
  sub_1A54E3458(v11, v12, v13);
  v14 = (_QWORD *)(a2 + 40);
  v15 = *(_BYTE *)(a1 + 52);
  if (v15 == 255)
    goto LABEL_4;
  v16 = *(unsigned int *)(a2 + 48) | ((unint64_t)*(unsigned __int8 *)(a2 + 52) << 32);
  if (HIDWORD(v16) > 0xFE)
  {
    sub_1A5510284(a1 + 40, &qword_1EE796DA8);
LABEL_4:
    *(_QWORD *)(a1 + 40) = *v14;
    *(_QWORD *)(a1 + 45) = *(_QWORD *)(a2 + 45);
    goto LABEL_6;
  }
  v17 = *(unsigned int *)(a1 + 48);
  v18 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *v14;
  *(_DWORD *)(a1 + 48) = v16;
  *(_BYTE *)(a1 + 52) = BYTE4(v16);
  sub_1A54E3458(v18, v17, v15);
LABEL_6:
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v19 = (_QWORD *)(a2 + 72);
  v20 = *(_BYTE *)(a1 + 84);
  if (v20 != 255)
  {
    v21 = *(unsigned int *)(a2 + 80) | ((unint64_t)*(unsigned __int8 *)(a2 + 84) << 32);
    if (HIDWORD(v21) <= 0xFE)
    {
      v22 = *(unsigned int *)(a1 + 80);
      v23 = *(_QWORD *)(a1 + 72);
      *(_QWORD *)(a1 + 72) = *v19;
      *(_DWORD *)(a1 + 80) = v21;
      *(_BYTE *)(a1 + 84) = BYTE4(v21);
      sub_1A54E3458(v23, v22, v20);
      return a1;
    }
    sub_1A5510284(a1 + 72, &qword_1EE796DA8);
  }
  *(_QWORD *)(a1 + 72) = *v19;
  *(_QWORD *)(a1 + 77) = *(_QWORD *)(a2 + 77);
  return a1;
}

uint64_t getEnumTagSinglePayload for FetchSearchResultMessages.Requests(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 85))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FetchSearchResultMessages.Requests(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 84) = 0;
    *(_DWORD *)(result + 80) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 85) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 85) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FetchSearchResultMessages.Requests()
{
  return &type metadata for FetchSearchResultMessages.Requests;
}

uint64_t destroy for FetchSearchResultMessages(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 84) != 255)
  {
    v2 = *(unsigned int *)(a1 + 80) | ((unint64_t)*(unsigned __int8 *)(a1 + 84) << 32);
    sub_1A54E3458(*(_QWORD *)(a1 + 72), v2, SBYTE4(v2));
  }
  __swift_destroy_boxed_opaque_existential_1(a1 + 96);
  swift_bridgeObjectRelease();
  sub_1A54E3458(*(_QWORD *)(a1 + 152), *(unsigned int *)(a1 + 160), *(_BYTE *)(a1 + 164));
  sub_1A54E3458(*(_QWORD *)(a1 + 168), *(unsigned int *)(a1 + 176), *(_BYTE *)(a1 + 180));
  if (*(unsigned __int8 *)(a1 + 196) != 255)
  {
    v3 = *(unsigned int *)(a1 + 192) | ((unint64_t)*(unsigned __int8 *)(a1 + 196) << 32);
    sub_1A54E3458(*(_QWORD *)(a1 + 184), v3, SBYTE4(v3));
  }
  if (*(unsigned __int8 *)(a1 + 228) != 255)
  {
    v4 = *(unsigned int *)(a1 + 224) | ((unint64_t)*(unsigned __int8 *)(a1 + 228) << 32);
    sub_1A54E3458(*(_QWORD *)(a1 + 216), v4, SBYTE4(v4));
  }
  result = *(_QWORD *)(a1 + 232);
  if (result)
  {
    swift_bridgeObjectRelease();
    sub_1A54E3458(*(_QWORD *)(a1 + 248), *(unsigned int *)(a1 + 256), *(_BYTE *)(a1 + 260));
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for FetchSearchResultMessages(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unsigned __int8 v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  __int128 v27;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  v6 = (uint64_t *)(a2 + 72);
  v7 = *(_BYTE *)(a2 + 84);
  v8 = *(unsigned int *)(a2 + 80);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v7 == 255)
  {
    *(_QWORD *)(a1 + 72) = *v6;
    *(_QWORD *)(a1 + 77) = *(uint64_t *)((char *)v6 + 5);
  }
  else
  {
    v9 = v8 & 0xFFFFFF00FFFFFFFFLL | ((unint64_t)v7 << 32);
    v10 = *v6;
    sub_1A54E4334(*v6, v9, SBYTE4(v9));
    *(_QWORD *)(a1 + 72) = v10;
    *(_DWORD *)(a1 + 80) = v9;
    *(_BYTE *)(a1 + 84) = BYTE4(v9);
  }
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v11 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 120) = v11;
  (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 96, a2 + 96);
  *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 140) = *(_BYTE *)(a2 + 140);
  *(_BYTE *)(a1 + 141) = *(_BYTE *)(a2 + 141);
  v12 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  v13 = *(unsigned int *)(a2 + 160);
  v14 = *(_BYTE *)(a2 + 164);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54E4334(v12, v13, v14);
  *(_QWORD *)(a1 + 152) = v12;
  *(_DWORD *)(a1 + 160) = v13;
  *(_BYTE *)(a1 + 164) = v14;
  v15 = *(_QWORD *)(a2 + 168);
  LODWORD(v13) = *(_DWORD *)(a2 + 176);
  v16 = *(_BYTE *)(a2 + 180);
  sub_1A54E4334(v15, v13, v16);
  *(_QWORD *)(a1 + 168) = v15;
  *(_DWORD *)(a1 + 176) = v13;
  *(_BYTE *)(a1 + 180) = v16;
  v17 = (uint64_t *)(a2 + 184);
  if (*(unsigned __int8 *)(a2 + 196) == 255)
  {
    *(_QWORD *)(a1 + 184) = *v17;
    *(_QWORD *)(a1 + 189) = *(_QWORD *)(a2 + 189);
  }
  else
  {
    v18 = *(unsigned int *)(a2 + 192) | ((unint64_t)*(unsigned __int8 *)(a2 + 196) << 32);
    v19 = *v17;
    sub_1A54E4334(*v17, v18, SBYTE4(v18));
    *(_QWORD *)(a1 + 184) = v19;
    *(_DWORD *)(a1 + 192) = v18;
    *(_BYTE *)(a1 + 196) = BYTE4(v18);
  }
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
  v20 = (uint64_t *)(a2 + 216);
  if (*(unsigned __int8 *)(a2 + 228) == 255)
  {
    *(_QWORD *)(a1 + 216) = *v20;
    *(_QWORD *)(a1 + 221) = *(_QWORD *)(a2 + 221);
  }
  else
  {
    v21 = *(unsigned int *)(a2 + 224) | ((unint64_t)*(unsigned __int8 *)(a2 + 228) << 32);
    v22 = *v20;
    sub_1A54E4334(*v20, v21, SBYTE4(v21));
    *(_QWORD *)(a1 + 216) = v22;
    *(_DWORD *)(a1 + 224) = v21;
    *(_BYTE *)(a1 + 228) = BYTE4(v21);
  }
  v23 = *(_QWORD *)(a2 + 232);
  if (v23)
  {
    *(_QWORD *)(a1 + 232) = v23;
    *(_DWORD *)(a1 + 240) = *(_DWORD *)(a2 + 240);
    v24 = *(_QWORD *)(a2 + 248);
    v25 = *(unsigned int *)(a2 + 256);
    v26 = *(_BYTE *)(a2 + 260);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54E4334(v24, v25, v26);
    *(_QWORD *)(a1 + 248) = v24;
    *(_DWORD *)(a1 + 256) = v25;
    *(_BYTE *)(a1 + 260) = v26;
    *(_DWORD *)(a1 + 261) = *(_DWORD *)(a2 + 261);
    *(_BYTE *)(a1 + 265) = *(_BYTE *)(a2 + 265);
    *(_BYTE *)(a1 + 266) = *(_BYTE *)(a2 + 266);
    *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    v27 = *(_OWORD *)(a2 + 248);
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 248) = v27;
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  }
  return a1;
}

uint64_t assignWithCopy for FetchSearchResultMessages(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t *v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  unsigned int v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  unsigned int v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t *v27;
  uint64_t *v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t *v39;
  uint64_t *v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  _BYTE *v50;
  _OWORD *v51;
  uint64_t v52;
  _OWORD *v53;
  uint64_t v54;
  unsigned int v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = (uint64_t *)(a1 + 72);
  v5 = (uint64_t *)(a2 + 72);
  v6 = *(unsigned int *)(a2 + 80) | ((unint64_t)*(unsigned __int8 *)(a2 + 84) << 32);
  v7 = *(_BYTE *)(a2 + 84);
  if (*(unsigned __int8 *)(a1 + 84) == 255)
  {
    if (BYTE4(v6) == 255)
    {
      v8 = *v5;
      *(_QWORD *)(a1 + 77) = *(_QWORD *)(a2 + 77);
      *v4 = v8;
    }
    else
    {
      v10 = *v5;
      sub_1A54E4334(*v5, *(unsigned int *)(a2 + 80) | ((unint64_t)*(unsigned __int8 *)(a2 + 84) << 32), SBYTE4(v6));
      *(_QWORD *)(a1 + 72) = v10;
      *(_DWORD *)(a1 + 80) = v6;
      *(_BYTE *)(a1 + 84) = v7;
    }
  }
  else if (BYTE4(v6) == 255)
  {
    sub_1A5510284(a1 + 72, &qword_1EE7A0400);
    v9 = *(_QWORD *)(a2 + 77);
    *v4 = *v5;
    *(_QWORD *)(a1 + 77) = v9;
  }
  else
  {
    v11 = *v5;
    sub_1A54E4334(*v5, *(unsigned int *)(a2 + 80) | ((unint64_t)*(unsigned __int8 *)(a2 + 84) << 32), SBYTE4(v6));
    v12 = *(_QWORD *)(a1 + 72);
    v13 = *(unsigned int *)(a1 + 80);
    *(_QWORD *)(a1 + 72) = v11;
    *(_DWORD *)(a1 + 80) = v6;
    v14 = *(_BYTE *)(a1 + 84);
    *(_BYTE *)(a1 + 84) = v7;
    sub_1A54E3458(v12, v13, v14);
  }
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 96), (uint64_t *)(a2 + 96));
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_BYTE *)(a1 + 137) = *(_BYTE *)(a2 + 137);
  *(_BYTE *)(a1 + 138) = *(_BYTE *)(a2 + 138);
  *(_BYTE *)(a1 + 139) = *(_BYTE *)(a2 + 139);
  *(_BYTE *)(a1 + 140) = *(_BYTE *)(a2 + 140);
  *(_BYTE *)(a1 + 141) = *(_BYTE *)(a2 + 141);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(a2 + 152);
  v16 = *(_DWORD *)(a2 + 160);
  v17 = *(_BYTE *)(a2 + 164);
  sub_1A54E4334(v15, v16, v17);
  v18 = *(_QWORD *)(a1 + 152);
  v19 = *(unsigned int *)(a1 + 160);
  *(_QWORD *)(a1 + 152) = v15;
  *(_DWORD *)(a1 + 160) = v16;
  v20 = *(_BYTE *)(a1 + 164);
  *(_BYTE *)(a1 + 164) = v17;
  sub_1A54E3458(v18, v19, v20);
  v21 = *(_QWORD *)(a2 + 168);
  v22 = *(_DWORD *)(a2 + 176);
  v23 = *(_BYTE *)(a2 + 180);
  sub_1A54E4334(v21, v22, v23);
  v24 = *(_QWORD *)(a1 + 168);
  v25 = *(unsigned int *)(a1 + 176);
  *(_QWORD *)(a1 + 168) = v21;
  *(_DWORD *)(a1 + 176) = v22;
  v26 = *(_BYTE *)(a1 + 180);
  *(_BYTE *)(a1 + 180) = v23;
  sub_1A54E3458(v24, v25, v26);
  v27 = (uint64_t *)(a1 + 184);
  v28 = (uint64_t *)(a2 + 184);
  v29 = *(unsigned int *)(a2 + 192) | ((unint64_t)*(unsigned __int8 *)(a2 + 196) << 32);
  v30 = *(_BYTE *)(a2 + 196);
  if (*(unsigned __int8 *)(a1 + 196) == 255)
  {
    if (BYTE4(v29) == 255)
    {
      v31 = *v28;
      *(_QWORD *)(a1 + 189) = *(_QWORD *)(a2 + 189);
      *v27 = v31;
    }
    else
    {
      v33 = *v28;
      sub_1A54E4334(*v28, *(unsigned int *)(a2 + 192) | ((unint64_t)*(unsigned __int8 *)(a2 + 196) << 32), SBYTE4(v29));
      *(_QWORD *)(a1 + 184) = v33;
      *(_DWORD *)(a1 + 192) = v29;
      *(_BYTE *)(a1 + 196) = v30;
    }
  }
  else if (BYTE4(v29) == 255)
  {
    sub_1A5510284(a1 + 184, &qword_1EE796DA8);
    v32 = *(_QWORD *)(a2 + 189);
    *v27 = *v28;
    *(_QWORD *)(a1 + 189) = v32;
  }
  else
  {
    v34 = *v28;
    sub_1A54E4334(*v28, *(unsigned int *)(a2 + 192) | ((unint64_t)*(unsigned __int8 *)(a2 + 196) << 32), SBYTE4(v29));
    v35 = *(_QWORD *)(a1 + 184);
    v36 = *(unsigned int *)(a1 + 192);
    *(_QWORD *)(a1 + 184) = v34;
    *(_DWORD *)(a1 + 192) = v29;
    v37 = *(_BYTE *)(a1 + 196);
    *(_BYTE *)(a1 + 196) = v30;
    sub_1A54E3458(v35, v36, v37);
  }
  v38 = *(_BYTE *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_BYTE *)(a1 + 208) = v38;
  v39 = (uint64_t *)(a1 + 216);
  v40 = (uint64_t *)(a2 + 216);
  v41 = *(unsigned int *)(a2 + 224) | ((unint64_t)*(unsigned __int8 *)(a2 + 228) << 32);
  v42 = *(_BYTE *)(a2 + 228);
  if (*(unsigned __int8 *)(a1 + 228) == 255)
  {
    if (BYTE4(v41) == 255)
    {
      v43 = *v40;
      *(_QWORD *)(a1 + 221) = *(_QWORD *)(a2 + 221);
      *v39 = v43;
    }
    else
    {
      v45 = *v40;
      sub_1A54E4334(*v40, *(unsigned int *)(a2 + 224) | ((unint64_t)*(unsigned __int8 *)(a2 + 228) << 32), SBYTE4(v41));
      *(_QWORD *)(a1 + 216) = v45;
      *(_DWORD *)(a1 + 224) = v41;
      *(_BYTE *)(a1 + 228) = v42;
    }
  }
  else if (BYTE4(v41) == 255)
  {
    sub_1A5510284(a1 + 216, &qword_1EE796DA8);
    v44 = *(_QWORD *)(a2 + 221);
    *v39 = *v40;
    *(_QWORD *)(a1 + 221) = v44;
  }
  else
  {
    v46 = *v40;
    sub_1A54E4334(*v40, *(unsigned int *)(a2 + 224) | ((unint64_t)*(unsigned __int8 *)(a2 + 228) << 32), SBYTE4(v41));
    v47 = *(_QWORD *)(a1 + 216);
    v48 = *(unsigned int *)(a1 + 224);
    *(_QWORD *)(a1 + 216) = v46;
    *(_DWORD *)(a1 + 224) = v41;
    v49 = *(_BYTE *)(a1 + 228);
    *(_BYTE *)(a1 + 228) = v42;
    sub_1A54E3458(v47, v48, v49);
  }
  v50 = (_BYTE *)(a2 + 261);
  v51 = (_OWORD *)(a1 + 232);
  v53 = (_OWORD *)(a2 + 232);
  v52 = *(_QWORD *)(a2 + 232);
  if (*(_QWORD *)(a1 + 232))
  {
    if (v52)
    {
      *(_QWORD *)(a1 + 232) = v52;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 240) = *(_DWORD *)(a2 + 240);
      v54 = *(_QWORD *)(a2 + 248);
      v55 = *(_DWORD *)(a2 + 256);
      v56 = *(_BYTE *)(a2 + 260);
      sub_1A54E4334(v54, v55, v56);
      v57 = *(_QWORD *)(a1 + 248);
      v58 = *(unsigned int *)(a1 + 256);
      *(_QWORD *)(a1 + 248) = v54;
      *(_DWORD *)(a1 + 256) = v55;
      v59 = *(_BYTE *)(a1 + 260);
      *(_BYTE *)(a1 + 260) = v56;
      sub_1A54E3458(v57, v58, v59);
      *(_BYTE *)(a1 + 261) = *v50;
      *(_BYTE *)(a1 + 262) = *(_BYTE *)(a2 + 262);
      *(_BYTE *)(a1 + 263) = *(_BYTE *)(a2 + 263);
      *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
      *(_BYTE *)(a1 + 265) = *(_BYTE *)(a2 + 265);
      *(_BYTE *)(a1 + 266) = *(_BYTE *)(a2 + 266);
      *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1A55E54D4(a1 + 232);
      v64 = *(_OWORD *)(a2 + 248);
      v63 = *(_OWORD *)(a2 + 264);
      *v51 = *v53;
      *(_OWORD *)(a1 + 248) = v64;
      *(_OWORD *)(a1 + 264) = v63;
    }
  }
  else if (v52)
  {
    *(_QWORD *)(a1 + 232) = v52;
    *(_DWORD *)(a1 + 240) = *(_DWORD *)(a2 + 240);
    v60 = *(_QWORD *)(a2 + 248);
    v61 = *(unsigned int *)(a2 + 256);
    v62 = *(_BYTE *)(a2 + 260);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54E4334(v60, v61, v62);
    *(_QWORD *)(a1 + 248) = v60;
    *(_DWORD *)(a1 + 256) = v61;
    *(_BYTE *)(a1 + 260) = v62;
    *(_DWORD *)(a1 + 261) = *(_DWORD *)v50;
    *(_BYTE *)(a1 + 265) = *(_BYTE *)(a2 + 265);
    *(_BYTE *)(a1 + 266) = *(_BYTE *)(a2 + 266);
    *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    v65 = *v53;
    v66 = *(_OWORD *)(a2 + 264);
    *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
    *(_OWORD *)(a1 + 264) = v66;
    *v51 = v65;
  }
  return a1;
}

void *__swift_memcpy280_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x118uLL);
}

uint64_t assignWithTake for FetchSearchResultMessages(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  unsigned __int8 v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  int v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD *v21;
  unsigned __int8 v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  unsigned __int8 v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  __int128 v37;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  v4 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v4;
  swift_bridgeObjectRelease();
  v5 = (_QWORD *)(a2 + 72);
  v6 = *(_BYTE *)(a1 + 84);
  if (v6 == 255)
    goto LABEL_4;
  v7 = *(unsigned int *)(a2 + 80) | ((unint64_t)*(unsigned __int8 *)(a2 + 84) << 32);
  if (HIDWORD(v7) > 0xFE)
  {
    sub_1A5510284(a1 + 72, &qword_1EE7A0400);
LABEL_4:
    *(_QWORD *)(a1 + 72) = *v5;
    *(_QWORD *)(a1 + 77) = *(_QWORD *)(a2 + 77);
    goto LABEL_6;
  }
  v8 = *(unsigned int *)(a1 + 80);
  v9 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = *v5;
  *(_DWORD *)(a1 + 80) = v7;
  *(_BYTE *)(a1 + 84) = BYTE4(v7);
  sub_1A54E3458(v9, v8, v6);
LABEL_6:
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  __swift_destroy_boxed_opaque_existential_1(a1 + 96);
  v10 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v10;
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_BYTE *)(a1 + 137) = *(_BYTE *)(a2 + 137);
  *(_BYTE *)(a1 + 138) = *(_BYTE *)(a2 + 138);
  *(_BYTE *)(a1 + 139) = *(_BYTE *)(a2 + 139);
  *(_BYTE *)(a1 + 140) = *(_BYTE *)(a2 + 140);
  *(_BYTE *)(a1 + 141) = *(_BYTE *)(a2 + 141);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRelease();
  v11 = *(_DWORD *)(a2 + 160);
  v12 = *(_BYTE *)(a2 + 164);
  v13 = *(_QWORD *)(a1 + 152);
  v14 = *(unsigned int *)(a1 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_DWORD *)(a1 + 160) = v11;
  v15 = *(_BYTE *)(a1 + 164);
  *(_BYTE *)(a1 + 164) = v12;
  sub_1A54E3458(v13, v14, v15);
  v16 = *(_DWORD *)(a2 + 176);
  v17 = *(_BYTE *)(a2 + 180);
  v18 = *(_QWORD *)(a1 + 168);
  v19 = *(unsigned int *)(a1 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_DWORD *)(a1 + 176) = v16;
  v20 = *(_BYTE *)(a1 + 180);
  *(_BYTE *)(a1 + 180) = v17;
  sub_1A54E3458(v18, v19, v20);
  v21 = (_QWORD *)(a2 + 184);
  v22 = *(_BYTE *)(a1 + 196);
  if (v22 == 255)
  {
LABEL_9:
    *(_QWORD *)(a1 + 184) = *v21;
    *(_QWORD *)(a1 + 189) = *(_QWORD *)(a2 + 189);
    goto LABEL_11;
  }
  v23 = *(unsigned int *)(a2 + 192) | ((unint64_t)*(unsigned __int8 *)(a2 + 196) << 32);
  if (HIDWORD(v23) > 0xFE)
  {
    sub_1A5510284(a1 + 184, &qword_1EE796DA8);
    goto LABEL_9;
  }
  v24 = *(unsigned int *)(a1 + 192);
  v25 = *(_QWORD *)(a1 + 184);
  *(_QWORD *)(a1 + 184) = *v21;
  *(_DWORD *)(a1 + 192) = v23;
  *(_BYTE *)(a1 + 196) = BYTE4(v23);
  sub_1A54E3458(v25, v24, v22);
LABEL_11:
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
  v26 = (_QWORD *)(a2 + 216);
  v27 = *(_BYTE *)(a1 + 228);
  if (v27 == 255)
  {
LABEL_14:
    *(_QWORD *)(a1 + 216) = *v26;
    *(_QWORD *)(a1 + 221) = *(_QWORD *)(a2 + 221);
    goto LABEL_16;
  }
  v28 = *(unsigned int *)(a2 + 224) | ((unint64_t)*(unsigned __int8 *)(a2 + 228) << 32);
  if (HIDWORD(v28) > 0xFE)
  {
    sub_1A5510284(a1 + 216, &qword_1EE796DA8);
    goto LABEL_14;
  }
  v29 = *(unsigned int *)(a1 + 224);
  v30 = *(_QWORD *)(a1 + 216);
  *(_QWORD *)(a1 + 216) = *v26;
  *(_DWORD *)(a1 + 224) = v28;
  *(_BYTE *)(a1 + 228) = BYTE4(v28);
  sub_1A54E3458(v30, v29, v27);
LABEL_16:
  v31 = *(_QWORD *)(a2 + 232);
  if (!*(_QWORD *)(a1 + 232))
  {
LABEL_20:
    v37 = *(_OWORD *)(a2 + 248);
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 248) = v37;
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
    return a1;
  }
  if (!v31)
  {
    sub_1A55E54D4(a1 + 232);
    goto LABEL_20;
  }
  *(_QWORD *)(a1 + 232) = v31;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 240) = *(_DWORD *)(a2 + 240);
  v32 = *(_DWORD *)(a2 + 256);
  v33 = *(_BYTE *)(a2 + 260);
  v34 = *(_QWORD *)(a1 + 248);
  v35 = *(unsigned int *)(a1 + 256);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_DWORD *)(a1 + 256) = v32;
  v36 = *(_BYTE *)(a1 + 260);
  *(_BYTE *)(a1 + 260) = v33;
  sub_1A54E3458(v34, v35, v36);
  *(_BYTE *)(a1 + 261) = *(_BYTE *)(a2 + 261);
  *(_BYTE *)(a1 + 262) = *(_BYTE *)(a2 + 262);
  *(_BYTE *)(a1 + 263) = *(_BYTE *)(a2 + 263);
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  *(_BYTE *)(a1 + 265) = *(_BYTE *)(a2 + 265);
  *(_BYTE *)(a1 + 266) = *(_BYTE *)(a2 + 266);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FetchSearchResultMessages(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 280))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FetchSearchResultMessages(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 280) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 280) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FetchSearchResultMessages()
{
  return &type metadata for FetchSearchResultMessages;
}

unint64_t sub_1A55EDC40()
{
  unint64_t result;

  result = qword_1EE7A8CC8;
  if (!qword_1EE7A8CC8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A9A78, &type metadata for FetchSearchResultMessages.ActionID);
    atomic_store(result, (unint64_t *)&qword_1EE7A8CC8);
  }
  return result;
}

unint64_t sub_1A55EDC88()
{
  unint64_t result;

  result = qword_1EE7A8CD0;
  if (!qword_1EE7A8CD0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A9A50, &type metadata for FetchSearchResultMessages.CommandID);
    atomic_store(result, (unint64_t *)&qword_1EE7A8CD0);
  }
  return result;
}

unint64_t sub_1A55EDCCC(uint64_t a1)
{
  unint64_t result;

  result = sub_1A55EDCF0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A55EDCF0()
{
  unint64_t result;

  result = qword_1EE7A8CD8;
  if (!qword_1EE7A8CD8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A9A0C, &type metadata for FetchSearchResultMessages);
    atomic_store(result, (unint64_t *)&qword_1EE7A8CD8);
  }
  return result;
}

uint64_t sub_1A55EDD34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A55EA828(a1, a2 & 0x1010101FFFF01, *(_QWORD **)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1A55EDD50(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  char v10;
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(unsigned int *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(unsigned int *)(a1 + 32);
  v12 = *(_QWORD *)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 48) | ((unint64_t)*(unsigned __int8 *)(a1 + 52) << 32);
  v7 = *(_QWORD *)(a1 + 72);
  v8 = *(unsigned int *)(a1 + 80) | ((unint64_t)*(unsigned __int8 *)(a1 + 84) << 32);
  v9 = *(_BYTE *)(a1 + 20);
  v10 = *(_BYTE *)(a1 + 36);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54E4334(v2, v3, v9);
  sub_1A54E4334(v4, v5, v10);
  sub_1A5503BA0(v12, v6);
  sub_1A5503BA0(v7, v8);
  return a1;
}

uint64_t sub_1A55EDE14(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  char v10;
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(unsigned int *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(unsigned int *)(a1 + 32);
  v12 = *(_QWORD *)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 48) | ((unint64_t)*(unsigned __int8 *)(a1 + 52) << 32);
  v7 = *(_QWORD *)(a1 + 72);
  v8 = *(unsigned int *)(a1 + 80) | ((unint64_t)*(unsigned __int8 *)(a1 + 84) << 32);
  v9 = *(_BYTE *)(a1 + 20);
  v10 = *(_BYTE *)(a1 + 36);
  swift_bridgeObjectRelease();
  sub_1A54E3458(v2, v3, v9);
  sub_1A54E3458(v4, v5, v10);
  sub_1A5503B8C(v12, v6);
  sub_1A5503B8C(v7, v8);
  return a1;
}

uint64_t sub_1A55EDED8(const void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, NSObject *a6)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _BYTE v21[592];
  _BYTE v22[584];
  _BYTE v23[584];
  _BYTE __dst[584];
  _BYTE v25[584];

  sub_1A552316C(a1, v22);
  sub_1A552316C(v22, v25);
  v12 = sub_1A562AF78(a4);
  v13 = *(_QWORD *)(v12 + 16);
  if (!v13)
    return swift_bridgeObjectRelease();
  v14 = 0;
  while ((sub_1A55E5990(*(_DWORD *)(v12 + 4 * v14 + 32), a2, a3) & 1) == 0)
  {
    if (v13 == ++v14)
      return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_1A552316C(a1, v23);
  result = sub_1A5523B90((uint64_t)v23);
  if ((_DWORD)result == 19)
  {
    v16 = (const void *)sub_1A5524678((uint64_t)v23);
    result = (uint64_t)memcpy(__dst, v16, sizeof(__dst));
    v17 = *(_QWORD *)(v6 + 64);
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      v19 = *(_DWORD *)(v17 + 8 * v18 + 24);
      if (!*(_QWORD *)(v6 + 232))
        return result;
    }
    else
    {
      v19 = 1;
      if (!*(_QWORD *)(v6 + 232))
        return result;
    }
    sub_1A552316C(v25, v21);
    v20 = sub_1A5524678((uint64_t)v21);
    sub_1A5529C18(v20);
    sub_1A561F49C((uint64_t)__dst, v19, a6);
    return sub_1A5529E00((uint64_t)a1);
  }
  return result;
}

uint64_t sub_1A55EE024(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  int32x2_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  int32x2_t *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  _OWORD v25[2];
  _BYTE v26[16];

  v5 = v4;
  v9 = sub_1A55B0518(0x100000000, a4);
  v10 = *(_QWORD *)(v9 + 16);
  if (!v10)
    return swift_bridgeObjectRelease();
  v11 = 0;
  while ((sub_1A55F3D24(*(_DWORD *)(v9 + 4 * v11 + 32), a2, a3) & 1) == 0)
  {
    if (v10 == ++v11)
      return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v25[0] = *(_OWORD *)(v5 + 208);
  *(_QWORD *)((char *)v25 + 13) = *(_QWORD *)(v5 + 221);
  result = sub_1A55E97AC();
  if (BYTE4(v13) != 255)
  {
    v14 = (int32x2_t *)result;
    v15 = v13;
    if (((a1 >> 59) & 0x1E | (a1 >> 2) & 1) == 8
      && (v16 = a1 & 0xFFFFFFFFFFFFFFBLL, *(_QWORD *)(v5 + 24) == *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x18))
      && (v17 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x20),
          v18 = *(unsigned int *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x28),
          v19 = *(_BYTE *)(v16 + 44),
          v20 = *(int32x2_t **)(v16 + 48),
          v21 = *(unsigned int *)(v16 + 56),
          v22 = *(unsigned __int8 *)(v16 + 60),
          sub_1A54FF30C(*(_QWORD *)(v5 + 16), *(_QWORD *)(v16 + 16))))
    {
      sub_1A54E4334(v17, v18, v19);
      sub_1A54E4334((uint64_t)v20, v21, v22);
      sub_1A54E3414();
      static MessageIdentifierSet.__derived_struct_equals(_:_:)(v14, v15 & 0xFFFFFFFFFFLL, v20, v21 | (v22 << 32));
      v24 = v23;
      sub_1A54E3458((uint64_t)v20, v21, v22);
      sub_1A5503B8C((uint64_t)v14, v15);
      if ((v24 & 1) != 0)
      {
        sub_1A55032A0((uint64_t)v25 + 8, (uint64_t)v26, qword_1EE796DC8);
        result = sub_1A55EE26C((uint64_t)v26);
        *(_QWORD *)(v5 + 216) = v17;
        *(_BYTE *)(v5 + 228) = v19;
        *(_DWORD *)(v5 + 224) = v18;
      }
      else
      {
        return sub_1A54E3458(v17, v18, v19);
      }
    }
    else
    {
      return sub_1A5503B8C((uint64_t)v14, v15);
    }
  }
  return result;
}

uint64_t sub_1A55EE26C(uint64_t a1)
{
  sub_1A5503B8C(*(_QWORD *)a1, *(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned __int8 *)(a1 + 12) << 32));
  return a1;
}

uint64_t sub_1A55EE2A0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A55EE2C4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t, unint64_t, unint64_t), uint64_t (*a9)(uint64_t, uint64_t))
{
  unint64_t v14;
  uint64_t result;

  if ((~a3 & 0xFF00000000) != 0)
  {
    v14 = HIDWORD(a5);
    a8(a2, a3, HIDWORD(a3));
    a8(a4, a5, v14);
    return a9(a6, a7);
  }
  return result;
}

uint64_t sub_1A55EE354(uint64_t a1, void (*a2)(uint64_t, unint64_t, unint64_t), uint64_t (*a3)(uint64_t, uint64_t))
{
  sub_1A55EE2C4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(unsigned int *)(a1 + 48) | ((unint64_t)*(unsigned __int8 *)(a1 + 52) << 32), a2, a3);
  return a1;
}

uint64_t sub_1A55EE3A8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A55EE3D4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1A54E3458(*(_QWORD *)(v0 + 32), *(unsigned int *)(v0 + 40), *(_BYTE *)(v0 + 44));
  return swift_deallocObject();
}

uint64_t sub_1A55EE408(uint64_t a1)
{
  uint64_t v1;

  return sub_1A55AF174(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t storeEnumTagSinglePayload for FetchSearchResultMessages.CommandID(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A55EE464 + 4 * byte_1A59A99D0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A55EE484 + 4 * byte_1A59A99D5[v4]))();
}

_BYTE *sub_1A55EE464(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A55EE484(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A55EE48C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A55EE494(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A55EE49C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A55EE4A4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FetchSearchResultMessages.CommandID()
{
  return &type metadata for FetchSearchResultMessages.CommandID;
}

uint64_t getEnumTagSinglePayload for FetchSearchResultMessages.ActionID(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 5))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for FetchSearchResultMessages.ActionID(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 5) = v3;
  return result;
}

uint64_t sub_1A55EE50C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 4))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1A55EE528(uint64_t result, int a2)
{
  if (a2)
  {
    *(_DWORD *)result = a2 - 1;
    *(_BYTE *)(result + 4) = 1;
  }
  else
  {
    *(_BYTE *)(result + 4) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for FetchSearchResultMessages.ActionID()
{
  return &type metadata for FetchSearchResultMessages.ActionID;
}

uint64_t sub_1A55EE558@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, unint64_t a10, unsigned __int8 a11, __int16 a12)
{
  int v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int v25;
  unint64_t v26;
  int v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  BOOL v34;
  char v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v53;
  int v54;
  uint64_t v55;
  _QWORD v56[7];
  unsigned int v57;
  unsigned __int8 v58;
  _QWORD v59[7];
  unsigned int v60;
  unsigned __int8 v61;
  _BYTE v62[13];

  v18 = a8 & 1;
  sub_1A5510484(a6, (uint64_t)v56);
  v47 = v56[1];
  v48 = v56[0];
  v45 = v56[4];
  v46 = v56[2];
  v43 = v56[5];
  v44 = v56[3];
  v42 = v56[6];
  v40 = v58;
  v39 = v57;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5503BA0(a4, a5);
  sub_1A556C5B4(a6, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E4334);
  v53 = a2;
  v55 = a3;
  v50 = a5 & 0xFFFFFFFFFFLL;
  v54 = v18;
  v49 = sub_1A55FD600(a2, a3, a4, a5 & 0xFFFFFFFFFFLL, a6, a7, v18, a10 | ((HIDWORD(a10) & 1) << 32), a11);
  v20 = v19;
  v22 = v21;
  v23 = sub_1A5531BB4();
  sub_1A5510484(a6, (uint64_t)v59);
  v24 = v60 | ((unint64_t)v61 << 32);
  v25 = v61 >> 6;
  if (v25)
  {
    if (v25 == 1)
      v61 = BYTE4(v24) & 0x3F;
    v41 = sub_1A55C19FC(MEMORY[0x1E0DEE9D8]);
    v27 = v26;
    v28 = HIDWORD(v26);
  }
  else
  {
    v61 = BYTE4(v24) & 0x3F;
    *(_QWORD *)&v62[5] = *(_QWORD *)((char *)v59 + 5);
    *(_QWORD *)v62 = v59[0];
    v41 = v59[0];
    v27 = *(_QWORD *)((char *)v59 + 5) >> 24;
    LOBYTE(v28) = BYTE4(v59[1]);
    sub_1A550F318((uint64_t)v62);
  }
  sub_1A556C5B4(a6, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
  if (a11)
  {
    v29 = 0;
    if (a11 == 1)
      v30 = 3037;
    else
      v30 = 191;
  }
  else
  {
    v30 = 0;
    v29 = 1;
  }
  if (v54)
    v31 = 1;
  else
    v31 = BYTE4(v23) & 1;
  if (a7 >= v23)
    v32 = v23;
  else
    v32 = a7;
  if (v31)
    v33 = v23;
  else
    v33 = v32;
  if (v47 | v48 | v46 | v44 | v45 | v43 | v42)
    v34 = 0;
  else
    v34 = ((v39 | (v40 << 32)) & 0xFFFFFFFFFFLL) == 0x8000000000;
  v35 = v34;
  v37 = v20 & 0xFFFFFFFFFFLL | (((v20 >> 40) & 1) << 40);
  v38 = v22 | ((HIDWORD(v22) & 1) << 32);
  return sub_1A55EEB08(a1, v53, v55, a4, v50, a7, v54, (uint64_t)v49, a9, v37, SBYTE4(v37), SBYTE5(v37), v38, SBYTE4(v38), SHIWORD(v38), v35, v41, v27, v28,
           v30,
           v29,
           a12 & 0x101,
           v33 | ((unint64_t)(BYTE4(v23) & 1) << 32));
}

BOOL sub_1A55EE828(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;
  _BOOL8 result;

  v2 = *a1;
  v3 = *a2;
  result = v3 == 2 && v2 == 2;
  if (v2 != 2 && v3 != 2)
    return ((v3 ^ v2) & 1) == 0;
  return result;
}

void sub_1A55EE85C(uint64_t a1, uint64_t a2)
{
  int32x2_t *v2;
  unint64_t v3;
  int32x2_t *v4;
  unint64_t v5;

  v2 = *(int32x2_t **)a1;
  v3 = *(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned __int8 *)(a1 + 12) << 32);
  v4 = *(int32x2_t **)a2;
  v5 = *(unsigned int *)(a2 + 8) | ((unint64_t)*(unsigned __int8 *)(a2 + 12) << 32);
  if ((v3 & 0x8000000000) == 0 && (v5 & 0x8000000000) == 0)
  {
    sub_1A54E3414();
    static MessageIdentifierSet.__derived_struct_equals(_:_:)(v2, v3, v4, v5);
  }
}

BOOL sub_1A55EE8FC(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(a1 + 8) == 1)
    return (*(_BYTE *)(a2 + 8) & 1) != 0;
  if ((*(_BYTE *)(a2 + 8) & 1) != 0)
    return 0;
  return *(_QWORD *)a1 == *(_QWORD *)a2;
}

uint64_t sub_1A55EE938()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796240);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A59ABDD0;
  *(_QWORD *)(v0 + 32) = &type metadata for DetectChangesToMessages;
  sub_1A550F734();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594C6B4();
  *(_QWORD *)(v0 + 80) = &type metadata for DetectChangesToMessagesInRecent;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594C6B4();
  *(_QWORD *)(v0 + 128) = &type metadata for DetectRemovedMessages;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594C6B4();
  *(_QWORD *)(v0 + 176) = &type metadata for DetectRemovedMessagesInRecent;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594C6B4();
  *(_QWORD *)(v0 + 224) = &type metadata for FetchSearchResultMessages;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594C6B4();
  *(_QWORD *)(v0 + 272) = &type metadata for PurgeMessagesOutsideWindowOfInterest;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594C6B4();
  return v0;
}

uint64_t sub_1A55EEAE4()
{
  uint64_t result;

  result = sub_1A54F8ABC((uint64_t)&unk_1E4E6C030);
  qword_1EE7F96A8 = result;
  return result;
}

uint64_t sub_1A55EEB08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, int a10, char a11, char a12, int a13, char a14, __int16 a15, char a16, uint64_t a17, int a18, char a19, uint64_t a20,char a21,__int16 a22,uint64_t a23)
{
  unint64_t v26;
  int v27;
  char v28;
  int v29;
  char v30;
  int v31;
  __int128 v32;
  uint64_t result;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  *(_QWORD *)a9 = 0xD000000000000013;
  *(_QWORD *)(a9 + 8) = 0x80000001A59A9B50;
  *(_QWORD *)(a9 + 104) = sub_1A54F8ABC((uint64_t)&unk_1E4EF22B0);
  *(_BYTE *)(a9 + 112) = 0;
  v26 = sub_1A54E3414();
  *(_QWORD *)(a9 + 224) = MessageIdentifierSet.init()(&type metadata for UID, v26);
  *(_DWORD *)(a9 + 232) = v27;
  *(_BYTE *)(a9 + 236) = v28;
  *(_QWORD *)(a9 + 240) = MessageIdentifierSet.init()(&type metadata for UID, v26);
  *(_DWORD *)(a9 + 248) = v29;
  *(_BYTE *)(a9 + 252) = v30;
  v31 = *(_DWORD *)(a1 + 32);
  v32 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a9 + 64) = *(_OWORD *)a1;
  *(_OWORD *)(a9 + 80) = v32;
  *(_DWORD *)(a9 + 96) = v31;
  *(_QWORD *)(a9 + 16) = &type metadata for FindMissingMessages;
  sub_1A550F734();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  result = sub_1A594C6B4();
  *(_QWORD *)(a9 + 120) = a2;
  *(_QWORD *)(a9 + 128) = a3;
  *(_QWORD *)(a9 + 136) = a4;
  *(_BYTE *)(a9 + 148) = BYTE4(a5);
  *(_DWORD *)(a9 + 144) = a5;
  *(_QWORD *)(a9 + 152) = a6;
  *(_BYTE *)(a9 + 160) = a7 & 1;
  *(_QWORD *)(a9 + 168) = a8;
  *(_BYTE *)(a9 + 180) = a11;
  *(_DWORD *)(a9 + 176) = a10;
  *(_BYTE *)(a9 + 181) = a12 & 1;
  *(_DWORD *)(a9 + 184) = a13;
  *(_BYTE *)(a9 + 188) = a14 & 1;
  *(_QWORD *)(a9 + 192) = a20;
  *(_BYTE *)(a9 + 200) = a21 & 1;
  *(_BYTE *)(a9 + 201) = a16;
  *(_QWORD *)(a9 + 208) = a17;
  *(_DWORD *)(a9 + 216) = a18;
  *(_BYTE *)(a9 + 220) = a19;
  *(_BYTE *)(a9 + 189) = a22 & 1;
  *(_BYTE *)(a9 + 190) = HIBYTE(a22) & 1;
  if ((a23 & 0x100000000) != 0)
  {
    v37 = 0;
    v34 = 0;
    v36 = 0;
    v35 = 0;
  }
  else
  {
    v34 = a22 & 0x101 | (unint64_t)(a23 << 32);
    v35 = MEMORY[0x1E0DEE9D8];
    v36 = 0x100000000;
    v37 = 94;
  }
  *(_QWORD *)(a9 + 256) = v37;
  *(_QWORD *)(a9 + 264) = v34;
  *(_QWORD *)(a9 + 272) = v36;
  *(_QWORD *)(a9 + 280) = v35;
  return result;
}

uint64_t sub_1A55EED40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  NSObject *v14;
  int v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  _BYTE *v26;
  int v27;
  int v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  int v41;
  os_log_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  os_log_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  int v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _DWORD v58[70];
  uint64_t v59;
  _DWORD v60[48];
  uint64_t v61;
  char v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;

  v3 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A594A764();
  v7 = *(_QWORD *)(v6 - 8);
  v8.n128_f64[0] = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v1 + 181) & 1) != 0)
  {
    v11 = 0xE900000000000065;
    v12 = 0x74616470752D6F6ELL;
  }
  else
  {
    v13 = *(unsigned int *)(v1 + 176) | ((unint64_t)*(unsigned __int8 *)(v1 + 180) << 32);
    if ((v13 & 0x100000000) != 0)
    {
      v11 = 0xE300000000000000;
      v12 = 7104878;
    }
    else
    {
      v63 = 0;
      v64 = 0xE000000000000000;
      v60[0] = v13;
      sub_1A594C924();
      v12 = v63;
      v11 = v64;
    }
  }
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v10, a1, v6, v8);
  sub_1A55034B8(a1, (uint64_t)v5, type metadata accessor for MailboxTaskLogger);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  sub_1A5510500(v1, (uint64_t)&v63);
  sub_1A5510500(v1, (uint64_t)v60);
  sub_1A5510500(v1, (uint64_t)v58);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v14 = sub_1A594A74C();
  v15 = sub_1A594C030();
  if (os_log_type_enabled(v14, (os_log_type_t)v15))
  {
    v46 = v15;
    v48 = v14;
    v49 = v10;
    v50 = v7;
    v51 = v6;
    v16 = swift_slowAlloc();
    v45 = swift_slowAlloc();
    v57 = v45;
    *(_DWORD *)v16 = 68160259;
    LODWORD(v54) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v16 + 8) = 256;
    v17 = &v5[*(int *)(v3 + 20)];
    LOBYTE(v54) = *v17;
    sub_1A594C3CC();
    *(_WORD *)(v16 + 11) = 2082;
    v47 = v12;
    v18 = *((_QWORD *)v17 + 1);
    v19 = *((_QWORD *)v17 + 2);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v54 = sub_1A55791B0(v18, v19, &v57);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 21) = 1040;
    LODWORD(v54) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v16 + 27) = 512;
    LOWORD(v54) = *((_WORD *)v17 + 12);
    sub_1A594C3CC();
    *(_WORD *)(v16 + 31) = 2160;
    v54 = 0x786F626C69616DLL;
    sub_1A594C3CC();
    *(_WORD *)(v16 + 41) = 2085;
    v20 = *((_DWORD *)v17 + 10);
    v54 = *((_QWORD *)v17 + 4);
    LODWORD(v55) = v20;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v21 = sub_1A594B4A8();
    v54 = sub_1A55791B0(v21, v22, &v57);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC((uint64_t)v5, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v16 + 51) = 2080;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v54 = sub_1A55791B0(v47, v11, &v57);
    sub_1A594C3CC();
    swift_bridgeObjectRelease_n();
    v47 = v16;
    *(_WORD *)(v16 + 61) = 2080;
    v23 = v65;
    v24 = *(_QWORD *)(v65 + 16);
    v25 = MEMORY[0x1E0DEE9D8];
    if (v24)
    {
      v56 = MEMORY[0x1E0DEE9D8];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A54F4B4C(0, v24, 0);
      v25 = v56;
      v44 = v23;
      v26 = (_BYTE *)(v23 + 40);
      do
      {
        v28 = *((_DWORD *)v26 - 2);
        v27 = *((_DWORD *)v26 - 1);
        if ((*v26 & 1) != 0)
        {
          v54 = 14931;
          v29 = 0xE200000000000000;
        }
        else
        {
          v54 = 978332499;
          v29 = 0xE400000000000000;
        }
        v55 = v29;
        v52 = v28;
        v53 = v27;
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796E58);
        sub_1A594B490();
        sub_1A594B5F8();
        swift_bridgeObjectRelease();
        v30 = v54;
        v31 = v55;
        v56 = v25;
        v33 = *(_QWORD *)(v25 + 16);
        v32 = *(_QWORD *)(v25 + 24);
        if (v33 >= v32 >> 1)
        {
          sub_1A54F4B4C(v32 > 1, v33 + 1, 1);
          v25 = v56;
        }
        v26 += 12;
        *(_QWORD *)(v25 + 16) = v33 + 1;
        v34 = v25 + 16 * v33;
        *(_QWORD *)(v34 + 32) = v30;
        *(_QWORD *)(v34 + 40) = v31;
        --v24;
      }
      while (v24);
      swift_bridgeObjectRelease();
    }
    v36 = v47;
    v54 = v25;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799A38);
    sub_1A54F70C0();
    v37 = sub_1A594B268();
    v39 = v38;
    swift_bridgeObjectRelease();
    v54 = sub_1A55791B0(v37, v39, &v57);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55105FC((uint64_t)&v63);
    *(_WORD *)(v36 + 71) = 2048;
    if (v62)
      v40 = 0;
    else
      v40 = v61;
    sub_1A55105FC((uint64_t)v60);
    v54 = v40;
    sub_1A594C3CC();
    *(_WORD *)(v36 + 81) = 1024;
    if (v59)
      v41 = v58[67];
    else
      v41 = 0;
    sub_1A55105FC((uint64_t)v58);
    LODWORD(v54) = v41;
    sub_1A594C3CC();
    v42 = v48;
    _os_log_impl(&dword_1A4F90000, v48, (os_log_type_t)v46, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task with fetched-window-update %s, ranges %s, UID limit: %ld, grow: %u", (uint8_t *)v36, 0x57u);
    v43 = v45;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v43, -1, -1);
    MEMORY[0x1A85B1964](v36, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v49, v51);
  }
  else
  {
    sub_1A55105FC((uint64_t)v58);
    sub_1A55105FC((uint64_t)v60);
    sub_1A55034FC((uint64_t)v5, type metadata accessor for MailboxTaskLogger);
    swift_bridgeObjectRelease_n();
    sub_1A55105FC((uint64_t)&v63);

    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
}

uint64_t sub_1A55EF3E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unsigned int *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unsigned __int8 v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t *v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  unsigned __int8 v64;
  uint64_t v65;
  unsigned int v66;
  char v67;

  v5 = v4;
  v62 = a3;
  v63 = a4;
  v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A0458);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A0450);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v62 - v16;
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v62 - v20;
  v22 = *(_QWORD *)(v5 + 280);
  if (v22)
  {
    sub_1A55F8AE8(a1, a2, *(_QWORD *)(v5 + 256), *(_QWORD *)(v5 + 264) & 0xFFFFFFFF00000101, *(_QWORD *)(v5 + 272) | ((HIDWORD(*(_QWORD *)(v5 + 272)) & 1) << 32), v22, (uint64_t)v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
    {
      v23 = *(int *)(v11 + 48);
      v24 = (uint64_t)&v21[v23];
      v25 = *(_QWORD *)v10;
      v26 = v10[8];
      *(_QWORD *)v21 = *(_QWORD *)v10;
      v21[8] = v26;
      sub_1A54E68A0((uint64_t)&v10[v23], (uint64_t)&v21[v23]);
      v27 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A0468);
      v28 = v63;
      v29 = v63 + *(int *)(v27 + 48);
      v30 = (uint64_t)&v17[*(int *)(v11 + 48)];
      *(_QWORD *)v17 = v25;
      v17[8] = v26;
      sub_1A55034B8(v24, v30, type metadata accessor for ClientCommand);
      *(_QWORD *)v28 = v25;
      *(_BYTE *)(v28 + 12) = 0x80;
      *(_DWORD *)(v28 + 8) = v26;
      v31 = (uint64_t)&v14[*(int *)(v11 + 48)];
      sub_1A54E68A0(v24, v31);
      sub_1A54E68A0(v31, v29);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v28, 0, 1, v27);
      return sub_1A55034FC(v30, type metadata accessor for ClientCommand);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v12 + 56))(v10, 1, 1, v11, v19);
  }
  sub_1A5510284((uint64_t)v10, &qword_1EE7A0458);
  v33 = sub_1A55F3A10(a2);
  v34 = sub_1A54E3414();
  v35 = MessageIdentifierSet.init()(&type metadata for UID, v34);
  v37 = v36;
  v38 = HIDWORD(v36);
  v65 = v35;
  v66 = v36;
  v67 = BYTE4(v36);
  v39 = *(_QWORD *)(v33 + 16);
  if (v39)
  {
    v40 = (unsigned int *)(v33 + 40);
    do
    {
      v41 = *v40 | (unint64_t)((uint64_t)*((char *)v40 + 4) << 32);
      if ((v41 & 0x8000000000000000) == 0)
      {
        v42 = *((_QWORD *)v40 - 1);
        sub_1A54E4334(v42, v41, SBYTE4(v41));
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
        v37 = v37 & 0xFFFFFF0000000000 | v41 | v41 & 0xFF00000000;
        MessageIdentifierSet.formUnion(_:)(v42, v37);
        sub_1A55F8474(v42, v41);
      }
      v40 += 4;
      --v39;
    }
    while (v39);
    swift_bridgeObjectRelease();
    v43 = v65;
    v37 = v66;
    LOBYTE(v38) = v67;
  }
  else
  {
    v43 = v35;
    swift_bridgeObjectRelease();
  }
  v44 = v63;
  v45 = *(_QWORD *)(v5 + 168);
  v46 = *(unsigned int *)(v5 + 176) | ((unint64_t)*(unsigned __int8 *)(v5 + 180) << 32);
  v47 = *(unsigned int *)(v5 + 184);
  v48 = *(_BYTE *)(v5 + 188);
  v49 = *(_QWORD *)(v5 + 120);
  v50 = *(_QWORD *)(v5 + 128);
  v51 = *(_QWORD *)(v5 + 136);
  v52 = *(unsigned int *)(v5 + 144) | ((unint64_t)*(unsigned __int8 *)(v5 + 148) << 32);
  LOBYTE(v65) = *(_BYTE *)(v5 + 181);
  v64 = v48;
  v53 = sub_1A55FB66C(v43, v37 | ((unint64_t)v38 << 32), v49, v50, v51, v52, v45, v46 | ((unint64_t)v65 << 40), v47 | ((unint64_t)v48 << 32));
  v55 = v54;
  sub_1A54E3458(v43, v37, v38);
  if ((~v55 & 0xFF00000000) != 0)
  {
    v57 = swift_allocObject();
    *(_QWORD *)(v57 + 16) = v53;
    *(_BYTE *)(v57 + 28) = BYTE4(v55);
    *(_DWORD *)(v57 + 24) = v55;
    v58 = v57 | 0xA000000000000000;
    v59 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A0468);
    v60 = (unint64_t *)(v44 + *(int *)(v59 + 48));
    *(_QWORD *)v44 = v53;
    *(_BYTE *)(v44 + 12) = BYTE4(v55);
    *(_DWORD *)(v44 + 8) = v55;
    v61 = *(_BYTE *)(v5 + 190);
    *v60 = v58;
    if ((v61 & 1) == 0)
      v60[1] = (unint64_t)&unk_1E4E6BCA8;
    type metadata accessor for ClientCommand(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v44, 0, 1, v59);
    return sub_1A54E4334(v53, v55, SBYTE4(v55));
  }
  else
  {
    v56 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A0468);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v44, 1, 1, v56);
  }
}

uint64_t sub_1A55EF878(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v57;
  int v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  char v73;

  v67 = a3;
  v8 = type metadata accessor for TaskHistory.Previous(0);
  v68 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v62 - v13;
  v15 = v4[35];
  v69 = a2;
  if (!v15)
  {
    v64 = v4;
    goto LABEL_10;
  }
  v16 = v4[8];
  v65 = v4[9];
  v66 = v16;
  MEMORY[0x1E0C80A78](v12);
  *(&v62 - 4) = a1;
  *(&v62 - 3) = a2;
  *(&v62 - 2) = v67;
  *(&v62 - 1) = a4;
  v67 = a4;
  v17 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v18 = sub_1A55F2BC8(v17, (uint64_t (*)(uint64_t, uint64_t *))sub_1A55F84D8);
  swift_bridgeObjectRelease();
  if (!v18[2])
  {
    a4 = v67;
    v64 = v4;
    swift_bridgeObjectRelease();
LABEL_10:
    v28 = a4;
    v29 = sub_1A55F413C(1, a4);
    v30 = *(_QWORD *)(v29 + 16);
    v31 = v69;
    if (v30)
    {
      v32 = 0;
      while ((sub_1A55F3D3C(*(_DWORD *)(v29 + 4 * v32 + 32), a1, v31) & 1) == 0)
      {
        if (v30 == ++v32)
          goto LABEL_14;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
LABEL_14:
      swift_bridgeObjectRelease();
      v33 = sub_1A55B0260(0, 1, v28);
      v34 = *(_QWORD *)(v33 + 16);
      if (v34)
      {
        v35 = 0;
        v65 = v33 + 32;
        v36 = *(_QWORD *)(v31 + 16);
        v66 = v33;
        v62 = v36;
        v63 = v34;
        do
        {
          if (v36)
          {
            v67 = v35;
            a1 = *(unsigned int *)(v65 + 4 * v35);
            v37 = v68;
            v38 = v69 + ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80));
            swift_bridgeObjectRetain_n();
            v39 = *(_QWORD *)(v37 + 72);
            while (1)
            {
              sub_1A55034B8(v38, (uint64_t)v14, type metadata accessor for TaskHistory.Previous);
              sub_1A55034B8((uint64_t)v14, (uint64_t)v10, type metadata accessor for TaskHistory.Previous);
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                v40 = *((_DWORD *)v10 + 2);
                swift_release();
                if (v40 == (_DWORD)a1)
                {
                  sub_1A55034FC((uint64_t)v14, type metadata accessor for TaskHistory.Previous);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease_n();
                  return 0;
                }
              }
              else
              {
                sub_1A55034FC((uint64_t)v10, type metadata accessor for TaskHistory.Previous);
              }
              sub_1A55034FC((uint64_t)v14, type metadata accessor for TaskHistory.Previous);
              v38 += v39;
              if (!--v36)
              {
                swift_bridgeObjectRelease_n();
                v35 = v67;
                v36 = v62;
                v34 = v63;
                break;
              }
            }
          }
          ++v35;
        }
        while (v35 != v34);
      }
      swift_bridgeObjectRelease();
      v41 = v64[21];
      v42 = sub_1A54E3414();
      v43 = MessageIdentifierSet.init()(&type metadata for UID, v42);
      v45 = HIDWORD(v44);
      v71 = v43;
      v72 = v44;
      v73 = BYTE4(v44);
      v46 = *(_QWORD *)(v41 + 16);
      if (v46)
      {
        swift_bridgeObjectRetain_n();
        v69 = v41;
        v48 = (_BYTE *)(v41 + 40);
        do
        {
          if ((*v48 & 1) == 0)
          {
            v70 = *((_QWORD *)v48 - 1);
            MessageIdentifierSet.init(_:)((uint64_t)&v70, (uint64_t)&type metadata for UID, v42, v47);
            v50 = v49;
            v52 = v51;
            v53 = HIDWORD(v51);
            __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
            a1 = a1 & 0xFFFFFF0000000000 | v52 & 0xFFFFFFFFFFLL;
            MessageIdentifierSet.formUnion(_:)(v50, a1);
            sub_1A54E3458(v50, v52, v53);
          }
          v48 += 12;
          --v46;
        }
        while (v46);
        swift_bridgeObjectRelease_n();
        v43 = v71;
        LODWORD(v44) = v72;
        LOBYTE(v45) = v73;
      }
      v54 = MessageIdentifierSetNonEmpty.init(set:)(v43, v44 | ((unint64_t)v45 << 32));
      if ((~v55 & 0xFF00000000) != 0)
      {
        v57 = v54;
        v58 = v55;
        v59 = HIDWORD(v55);
        v60 = swift_allocObject();
        v61 = v64[9];
        *(_QWORD *)(v60 + 16) = v64[8];
        *(_QWORD *)(v60 + 24) = v61;
        *(_QWORD *)(v60 + 32) = v57;
        *(_DWORD *)(v60 + 40) = v58;
        *(_BYTE *)(v60 + 44) = v59;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        return 0;
      }
    }
    return 0;
  }
  v19 = v18[4];
  v20 = v18[5];
  v21 = *((_DWORD *)v18 + 12);
  v22 = *((_BYTE *)v18 + 52);
  sub_1A54E4334(v20, v21, v22);
  swift_bridgeObjectRelease();
  v23 = swift_allocObject();
  v24 = v65;
  *(_QWORD *)(v23 + 16) = v66;
  *(_QWORD *)(v23 + 24) = v24;
  *(_QWORD *)(v23 + 32) = v20;
  *(_DWORD *)(v23 + 40) = v21;
  *(_BYTE *)(v23 + 44) = v22;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v25 = sub_1A55B0260(0, 1, v67);
  v26 = *(_QWORD *)(v25 + 16);
  if (v26)
  {
    v27 = 0;
    while ((sub_1A55F3D3C(*(_DWORD *)(v25 + 4 * v27 + 32), a1, v69) & 1) == 0)
    {
      if (v26 == ++v27)
        goto LABEL_7;
    }
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_7:
  swift_bridgeObjectRelease();
  return v19;
}

unint64_t sub_1A55EFD7C(unint64_t result, char a2)
{
  uint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if ((a2 & 1) == 0)
  {
    v3 = *(_QWORD **)(v2 + 280);
    if (v3)
    {
      v4 = result;
      if ((result & 0x8000000000000000) == 0 && v3[2] > result)
      {
        v5 = sub_1A55C19FC(MEMORY[0x1E0DEE9D8]);
        v7 = v6;
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = (unint64_t)sub_1A554B7C0(v3);
          v3 = (_QWORD *)result;
        }
        if (v3[2] <= v4)
        {
          __break(1u);
        }
        else
        {
          v8 = &v3[6 * v4];
          v9 = v8 + 4;
          if (*((unsigned __int8 *)v8 + 76) == 255)
          {
            v8[8] = v5;
            *((_DWORD *)v8 + 18) = v7;
            *((_BYTE *)v8 + 76) = BYTE4(v7);
          }
          else
          {
            v10 = *((unsigned int *)v8 + 18) | ((unint64_t)*((unsigned __int8 *)v8 + 76) << 32);
            v11 = v8[8];
            sub_1A54E4334(v11, v10, SBYTE4(v10));
            sub_1A54E3414();
            MessageIdentifierSet.union(_:)(v5, v7 & 0xFFFFFFFFFFLL, v11, v10);
            v13 = v12;
            v16 = v5;
            v15 = v14;
            sub_1A5503B8C(v11, v10);
            sub_1A5503B8C(v11, v10);
            v9[4] = v13;
            *((_BYTE *)v9 + 44) = BYTE4(v15);
            *((_DWORD *)v9 + 10) = v15;
            result = sub_1A54E3458(v16, v7, SBYTE4(v7));
          }
          *(_QWORD *)(v2 + 280) = v3;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1A55EFED4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int16 v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  __int128 v50;
  unint64_t v51;
  int v52;
  unint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE v67[56];
  _BYTE v68[88];
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  uint64_t v83;

  v3 = v2;
  v59 = a2;
  v6 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v6);
  v46 = (uint64_t)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = *(unsigned __int8 *)(v2 + 201);
  v8 = *(_QWORD *)(v2 + 120);
  v9 = *(_QWORD *)(v2 + 128);
  v66 = *(_QWORD *)(v3 + 136);
  v57 = *(unsigned int *)(v3 + 144) | ((unint64_t)*(unsigned __int8 *)(v3 + 148) << 32);
  v10 = v57;
  v58 = v9;
  v11 = *(_QWORD *)(v3 + 224);
  v64 = *(unsigned int *)(v3 + 232);
  v12 = *(unsigned __int8 *)(v3 + 236);
  v63 = *(_QWORD *)(v3 + 240);
  v43 = *(unsigned int *)(v3 + 248);
  v13 = *(unsigned __int8 *)(v3 + 252);
  v14 = *(_QWORD *)(v3 + 208);
  v61 = v8;
  v62 = v14;
  v15 = *(unsigned int *)(v3 + 216);
  v41 = *(unsigned __int8 *)(v3 + 220);
  v55 = *(_QWORD *)(v3 + 192);
  v54 = *(unsigned __int8 *)(v3 + 200);
  v53 = *(_QWORD *)(v3 + 152);
  v52 = *(unsigned __int8 *)(v3 + 160);
  v44 = *(_QWORD *)(v3 + 168);
  v16 = *(unsigned int *)(v3 + 176) | ((unint64_t)*(unsigned __int8 *)(v3 + 180) << 32);
  v45 = *(unsigned __int8 *)(v3 + 181);
  v17 = *(unsigned int *)(v3 + 184);
  v47 = v16;
  v48 = v17;
  v42 = *(unsigned __int8 *)(v3 + 188);
  v50 = *(_OWORD *)(v3 + 256);
  v49 = *(_QWORD *)(v3 + 272);
  v40 = *(_QWORD *)(v3 + 280);
  sub_1A55034B8(a2, v46, v18);
  v65 = v11;
  v19 = v64;
  sub_1A54E4334(v11, v64, v12);
  v56 = v12;
  sub_1A54E4334(v11, v19, v12);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5503BA0(v66, v10);
  v20 = v43;
  sub_1A54E4334(v63, v43, v13);
  v21 = v41;
  sub_1A54E4334(v62, v15, v41);
  v22 = v19 | (v12 << 32);
  v51 = v22;
  v23 = v44;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v24 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  LOBYTE(v69) = v45;
  v68[0] = v42;
  sub_1A55F5FEC(v65, v22, v63, v20 | (v13 << 32), v62, v15 | (v21 << 32), v55, v54, (uint64_t)v67, v53, v52, v23, v47 | ((unint64_t)v45 << 40), v48 | ((unint64_t)v42 << 32), v50, *((uint64_t *)&v50 + 1), v49, v24, v46);
  v25 = *(_OWORD *)(a1 + 208);
  v81 = *(_OWORD *)(a1 + 192);
  v82 = v25;
  v83 = *(_QWORD *)(a1 + 224);
  v26 = *(_OWORD *)(a1 + 144);
  v77 = *(_OWORD *)(a1 + 128);
  v78 = v26;
  v27 = *(_OWORD *)(a1 + 176);
  v79 = *(_OWORD *)(a1 + 160);
  v80 = v27;
  v28 = *(_OWORD *)(a1 + 80);
  v73 = *(_OWORD *)(a1 + 64);
  v74 = v28;
  v29 = *(_OWORD *)(a1 + 112);
  v75 = *(_OWORD *)(a1 + 96);
  v76 = v29;
  v30 = *(_OWORD *)(a1 + 16);
  v69 = *(_OWORD *)a1;
  v70 = v30;
  v31 = *(_OWORD *)(a1 + 48);
  v71 = *(_OWORD *)(a1 + 32);
  v72 = v31;
  LOBYTE(v20) = BYTE1(v30);
  v32 = *((_QWORD *)&v30 + 1);
  LODWORD(v63) = BYTE10(v69);
  v33 = *((_QWORD *)&v71 + 1);
  v34 = v31;
  LOBYTE(v23) = v71;
  v35 = v30;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v36 = sub_1A558E3A4();
  v37 = sub_1A558E7E0(v35, v20 & 1, v32, v23, v33, v63, v34, v36);
  v38 = v65;
  sub_1A55F6F00(v60, v58, v66, v57, v65, v51, (uint64_t)v67, v37 & 0xFF01, (uint64_t)v68);
  sub_1A54E3458(v38, v64, v56);
  sub_1A55F70AC((__int128 *)a1, *(_QWORD *)(v3 + 88), *(_DWORD *)(v3 + 96), v61, (uint64_t)v68, v59);
  return sub_1A55F7668((uint64_t)v68, (void (*)(uint64_t, uint64_t, uint64_t))sub_1A54E3458);
}

uint64_t sub_1A55F0244(uint64_t a1, uint64_t a2, uint64_t a3, NSObject *a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  os_log_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  unsigned int v50;
  unsigned int v51;
  BOOL v52;
  char *v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  int v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  NSObject *v86;
  os_log_type_t v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  int v95;
  uint64_t v96;
  unint64_t v97;
  char *v98;
  uint64_t *v99;
  uint64_t result;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  os_log_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  NSObject *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  int v123;
  char *v124;
  char v125;
  _OWORD v126[2];
  _BYTE v127[21];
  uint64_t v128;
  int v129;
  uint64_t v130[8];
  uint64_t v131;
  int v132;

  v111 = a5;
  v120 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v120);
  v109 = (uint64_t)&v104 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v116 = (uint64_t)&v104 - v10;
  MEMORY[0x1E0C80A78](v11);
  v118 = (uint64_t)&v104 - v12;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v104 - v14;
  v121 = sub_1A594A764();
  v16 = *(_QWORD *)(v121 - 8);
  MEMORY[0x1E0C80A78](v121);
  v110 = (char *)&v104 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v117 = (char *)&v104 - v19;
  MEMORY[0x1E0C80A78](v20);
  v119 = (char *)&v104 - v21;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v104 - v23;
  v25 = *(_OWORD *)(a3 + 32);
  v126[0] = *(_OWORD *)(a3 + 16);
  v126[1] = v25;
  *(_OWORD *)v127 = *(_OWORD *)(a3 + 48);
  *(_QWORD *)&v127[13] = *(_QWORD *)(a3 + 61);
  v26 = *(_QWORD *)&v126[0];
  v27 = DWORD2(v126[0]);
  v28 = BYTE12(v126[0]);
  sub_1A54E3414();
  v29 = v27 | (v28 << 32);
  v30 = v16;
  v112 = v26;
  if (!MessageIdentifierSet.isEmpty.getter(v26, v29))
  {
    v107 = v29;
    (*(void (**)(char *, NSObject *, uint64_t))(v16 + 16))(v24, a4, v121);
    v115 = a4;
    sub_1A55034B8((uint64_t)a4, (uint64_t)v15, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    sub_1A55F7668(a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1A54E4334);
    sub_1A55F7668(a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1A54E4334);
    v31 = sub_1A594A74C();
    v32 = sub_1A594C030();
    v33 = v32;
    if (os_log_type_enabled(v31, v32))
    {
      v34 = swift_slowAlloc();
      LODWORD(v106) = v33;
      v35 = v34;
      v105 = swift_slowAlloc();
      v130[0] = v105;
      *(_DWORD *)v35 = 68159491;
      LODWORD(v131) = 2;
      v114 = a1;
      sub_1A594C3CC();
      *(_WORD *)(v35 + 8) = 256;
      v36 = *(int *)(v120 + 20);
      v108 = a3;
      v37 = &v15[v36];
      LOBYTE(v131) = v15[v36];
      sub_1A594C3CC();
      *(_WORD *)(v35 + 11) = 2082;
      v113 = v16;
      v104 = v31;
      v38 = *((_QWORD *)v37 + 1);
      v39 = *((_QWORD *)v37 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v131 = sub_1A55791B0(v38, v39, v130);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 21) = 1040;
      LODWORD(v131) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v35 + 27) = 512;
      LOWORD(v131) = *((_WORD *)v37 + 12);
      sub_1A594C3CC();
      *(_WORD *)(v35 + 31) = 2160;
      v131 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v35 + 41) = 2085;
      v40 = *((_QWORD *)v37 + 4);
      v41 = *((_DWORD *)v37 + 10);
      a3 = v108;
      v131 = v40;
      v132 = v41;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v42 = sub_1A594B4A8();
      v131 = sub_1A55791B0(v42, v43, v130);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v15, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v35 + 51) = 2048;
      v44 = MessageIdentifierSet.count.getter(v112, v107);
      sub_1A55F7668(a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1A54E3458);
      v131 = v44;
      v30 = v113;
      a1 = v114;
      sub_1A594C3CC();
      sub_1A55F7668(a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1A54E3458);
      v45 = v104;
      _os_log_impl(&dword_1A4F90000, v104, (os_log_type_t)v106, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Adding %ld new UID(s).", (uint8_t *)v35, 0x3Du);
      v46 = v105;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v46, -1, -1);
      MEMORY[0x1A85B1964](v35, -1, -1);

    }
    else
    {
      sub_1A55F7668(a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1A54E3458);
      sub_1A55034FC((uint64_t)v15, type metadata accessor for MailboxTaskLogger);
      sub_1A55F7668(a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1A54E3458);

    }
    (*(void (**)(char *, uint64_t))(v30 + 8))(v24, v121);
    a4 = v115;
  }
  v47 = a1 + 376;
  sub_1A5510484(a1 + 376, (uint64_t)&v131);
  sub_1A556C5B4((uint64_t)&v131, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E4334);
  sub_1A5532248((uint64_t)v126);
  sub_1A5510484(a1 + 376, (uint64_t)v130);
  v48 = sub_1A5533E2C((uint64_t)v130, (uint64_t)&v131);
  sub_1A556C5B4((uint64_t)&v131, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
  sub_1A55F1220(a4, (uint64_t)v130);
  v49 = (uint64_t)a4;
  if ((*(_BYTE *)(a3 + 12) & 1) == 0)
  {
    v50 = *(_DWORD *)(a3 + 8);
    if ((*(_BYTE *)(a1 + 12) & 1) != 0)
      goto LABEL_11;
    v51 = *(_DWORD *)(a1 + 8);
    v52 = v51 >= v50;
    if (v51 > v50)
      v50 = *(_DWORD *)(a1 + 8);
    if (!v52)
    {
LABEL_11:
      LODWORD(v112) = v48;
      *(_DWORD *)(a1 + 8) = v50;
      *(_BYTE *)(a1 + 12) = 0;
      v53 = v119;
      (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v119, v49, v121);
      v54 = v118;
      sub_1A55034B8(v49, v118, type metadata accessor for MailboxTaskLogger);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v55 = sub_1A594A74C();
      v56 = sub_1A594C030();
      LODWORD(v107) = v56;
      if (os_log_type_enabled(v55, v56))
      {
        v57 = swift_slowAlloc();
        v115 = v49;
        v58 = v57;
        v106 = swift_slowAlloc();
        v122 = v106;
        *(_DWORD *)v58 = 68159491;
        LODWORD(v128) = 2;
        v114 = a1;
        sub_1A594C3CC();
        *(_WORD *)(v58 + 8) = 256;
        v59 = v54 + *(int *)(v120 + 20);
        LOBYTE(v128) = *(_BYTE *)v59;
        sub_1A594C3CC();
        *(_WORD *)(v58 + 11) = 2082;
        v113 = v30;
        v108 = a3;
        v61 = *(_QWORD *)(v59 + 8);
        v60 = *(_QWORD *)(v59 + 16);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v128 = sub_1A55791B0(v61, v60, &v122);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v58 + 21) = 1040;
        LODWORD(v128) = 2;
        a1 = v114;
        sub_1A594C3CC();
        *(_WORD *)(v58 + 27) = 512;
        LOWORD(v128) = *(_WORD *)(v59 + 24);
        sub_1A594C3CC();
        *(_WORD *)(v58 + 31) = 2160;
        v128 = 0x786F626C69616DLL;
        a3 = v108;
        sub_1A594C3CC();
        *(_WORD *)(v58 + 41) = 2085;
        v62 = *(_DWORD *)(v59 + 40);
        v128 = *(_QWORD *)(v59 + 32);
        v129 = v62;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v63 = sub_1A594B4A8();
        v128 = sub_1A55791B0(v63, v64, &v122);
        v30 = v113;
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55034FC(v118, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v58 + 51) = 1024;
        LODWORD(v128) = v50;
        sub_1A594C3CC();
        _os_log_impl(&dword_1A4F90000, v55, (os_log_type_t)v107, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Updating sync state next UID to %u.", (uint8_t *)v58, 0x39u);
        v65 = v106;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v65, -1, -1);
        v66 = v58;
        v49 = (uint64_t)v115;
        MEMORY[0x1A85B1964](v66, -1, -1);

        (*(void (**)(char *, uint64_t))(v30 + 8))(v119, v121);
      }
      else
      {
        sub_1A55034FC(v54, type metadata accessor for MailboxTaskLogger);

        (*(void (**)(char *, uint64_t))(v30 + 8))(v53, v121);
      }
      LOBYTE(v48) = v112;
    }
  }
  v67 = (char *)(a1 + 336);
  if (*(_BYTE *)(a3 + 69))
  {
    if (*(_BYTE *)(a3 + 69) == 1)
    {
      v68 = v117;
      (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v117, v49, v121);
      v69 = v116;
      sub_1A55034B8(v49, v116, type metadata accessor for MailboxTaskLogger);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v70 = sub_1A594A74C();
      v71 = sub_1A594C030();
      v72 = v71;
      if (os_log_type_enabled(v70, v71))
      {
        v73 = swift_slowAlloc();
        LODWORD(v119) = v72;
        v74 = v73;
        v118 = swift_slowAlloc();
        v122 = v118;
        *(_DWORD *)v74 = 68159235;
        LODWORD(v128) = 2;
        v114 = a1;
        sub_1A594C3CC();
        *(_WORD *)(v74 + 8) = 256;
        v75 = v69 + *(int *)(v120 + 20);
        LOBYTE(v128) = *(_BYTE *)v75;
        sub_1A594C3CC();
        *(_WORD *)(v74 + 11) = 2082;
        v113 = v30;
        v76 = a3;
        v77 = *(_QWORD *)(v75 + 8);
        v78 = *(_QWORD *)(v75 + 16);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v128 = sub_1A55791B0(v77, v78, &v122);
        sub_1A594C3CC();
        a3 = v76;
        v67 = (char *)(a1 + 336);
        swift_bridgeObjectRelease();
        *(_WORD *)(v74 + 21) = 1040;
        LODWORD(v128) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v74 + 27) = 512;
        LOWORD(v128) = *(_WORD *)(v75 + 24);
        sub_1A594C3CC();
        *(_WORD *)(v74 + 31) = 2160;
        v128 = 0x786F626C69616DLL;
        sub_1A594C3CC();
        *(_WORD *)(v74 + 41) = 2085;
        v79 = *(_DWORD *)(v75 + 40);
        v128 = *(_QWORD *)(v75 + 32);
        v129 = v79;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v80 = sub_1A594B4A8();
        v128 = sub_1A55791B0(v80, v81, &v122);
        sub_1A594C3CC();
        a1 = v114;
        swift_bridgeObjectRelease();
        sub_1A55034FC(v116, type metadata accessor for MailboxTaskLogger);
        _os_log_impl(&dword_1A4F90000, v70, (os_log_type_t)v119, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Requesting re-run after initial run.", (uint8_t *)v74, 0x33u);
        v82 = v118;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v82, -1, -1);
        MEMORY[0x1A85B1964](v74, -1, -1);

        (*(void (**)(char *, uint64_t))(v113 + 8))(v117, v121);
      }
      else
      {
        sub_1A55034FC(v69, type metadata accessor for MailboxTaskLogger);

        (*(void (**)(char *, uint64_t))(v30 + 8))(v68, v121);
      }
      sub_1A554B85C(0xCu);
      v99 = &v128;
LABEL_25:
      sub_1A54F3290(v99, 12);
      goto LABEL_26;
    }
    if ((v48 & 1) == 0)
    {
      sub_1A5510484(v47, (uint64_t)&v128);
      v83 = *(unsigned int *)(a3 + 72);
      LOBYTE(v122) = *(_BYTE *)(a3 + 76);
      if ((sub_1A5531CE4(v111, v83 | ((unint64_t)v122 << 32)) & 1) != 0)
      {
        v84 = v110;
        (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v110, v49, v121);
        v85 = v109;
        sub_1A55034B8(v49, v109, type metadata accessor for MailboxTaskLogger);
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        v86 = sub_1A594A74C();
        v87 = sub_1A594C030();
        v88 = v87;
        if (os_log_type_enabled(v86, v87))
        {
          v89 = swift_slowAlloc();
          LODWORD(v118) = v88;
          v90 = v89;
          v117 = (char *)swift_slowAlloc();
          v124 = v117;
          *(_DWORD *)v90 = 68159235;
          LODWORD(v122) = 2;
          v119 = (char *)(a1 + 336);
          v114 = a1;
          sub_1A594C3CC();
          *(_WORD *)(v90 + 8) = 256;
          v91 = v85 + *(int *)(v120 + 20);
          LOBYTE(v122) = *(_BYTE *)v91;
          sub_1A594C3CC();
          *(_WORD *)(v90 + 11) = 2082;
          v113 = v30;
          v92 = a3;
          v93 = *(_QWORD *)(v91 + 8);
          v94 = *(_QWORD *)(v91 + 16);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v122 = sub_1A55791B0(v93, v94, (uint64_t *)&v124);
          sub_1A594C3CC();
          a3 = v92;
          swift_bridgeObjectRelease();
          *(_WORD *)(v90 + 21) = 1040;
          LODWORD(v122) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v90 + 27) = 512;
          LOWORD(v122) = *(_WORD *)(v91 + 24);
          sub_1A594C3CC();
          *(_WORD *)(v90 + 31) = 2160;
          v122 = 0x786F626C69616DLL;
          sub_1A594C3CC();
          *(_WORD *)(v90 + 41) = 2085;
          v95 = *(_DWORD *)(v91 + 40);
          v122 = *(_QWORD *)(v91 + 32);
          v123 = v95;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v96 = sub_1A594B4A8();
          v122 = sub_1A55791B0(v96, v97, (uint64_t *)&v124);
          v67 = v119;
          sub_1A594C3CC();
          a1 = v114;
          swift_bridgeObjectRelease();
          sub_1A55034FC(v109, type metadata accessor for MailboxTaskLogger);
          _os_log_impl(&dword_1A4F90000, v86, (os_log_type_t)v118, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Requesting re-run.", (uint8_t *)v90, 0x33u);
          v98 = v117;
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v98, -1, -1);
          MEMORY[0x1A85B1964](v90, -1, -1);

          (*(void (**)(char *, uint64_t))(v113 + 8))(v110, v121);
        }
        else
        {
          sub_1A55034FC(v85, type metadata accessor for MailboxTaskLogger);

          (*(void (**)(char *, uint64_t))(v30 + 8))(v84, v121);
        }
        sub_1A554B85C(0xCu);
        v99 = &v122;
        goto LABEL_25;
      }
    }
  }
LABEL_26:
  if (!(v67[100] >> 6))
  {
    sub_1A554B85C(1u);
    sub_1A54F3290(&v122, 1);
  }
  sub_1A5534334(a3 + 80, (uint64_t)&v124);
  result = sub_1A5534334((uint64_t)&v124, (uint64_t)&v122);
  if ((v122 & 0x100000000) == 0)
  {
    if (*(_QWORD *)(a1 + 320))
    {
      v101 = *(unsigned int *)v67 | ((unint64_t)v67[4] << 32);
      v102 = *(_QWORD *)(a1 + 328);
      v103 = v122;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A5503BA0(v102, v101);
      swift_bridgeObjectRelease();
      sub_1A5503B8C(v102, v101);
      v125 = 0;
      return sub_1A552D7A0(v103);
    }
  }
  return result;
}

uint64_t sub_1A55F1220(NSObject *a1, uint64_t a2)
{
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t result;
  unint64_t v27;
  int v28;
  uint64_t v29;
  NSObject *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  NSObject *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  os_log_t v38;
  unint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  os_log_t v56;
  uint64_t v57;
  uint64_t (*v58)(char *, uint64_t);
  _BYTE *v59;
  os_log_t v60;
  unint64_t v61;
  uint64_t v62;
  void (*v63)(char *, NSObject *, uint64_t);
  NSObject *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  os_log_t v77;
  uint64_t v78;
  NSObject *v79;
  os_log_type_t v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  int v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  os_log_t v102;
  unint64_t v103;
  NSObject *v104;
  uint64_t v105;
  os_log_t v106;
  unint64_t v107;
  uint64_t v108;
  NSObject *v109;
  os_log_type_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  int v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  uint64_t v122;
  NSObject *v123;
  uint64_t v124;
  char *v125;
  void (*v126)(char *, NSObject *, uint64_t);
  NSObject *v127;
  uint64_t v128;
  unint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  os_log_t v137;
  NSObject *v138;
  os_log_type_t v139;
  int v140;
  uint64_t v141;
  uint64_t v142;
  NSObject *v143;
  char *v144;
  uint64_t v145;
  unint64_t v146;
  int v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  unint64_t v161;
  os_log_t v162;
  unint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  char *v169;
  os_log_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  os_log_t v175;
  NSObject *v176;
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  unint64_t v183;
  _QWORD v184[7];
  unsigned int v185;
  unsigned __int8 v186;
  _BYTE v187[32];
  _BYTE v188[29];
  _BYTE v189[32];
  _BYTE v190[29];
  char v191[8];
  _BYTE v192[13];
  int v193;
  char v194;

  v176 = a1;
  sub_1A5510484(a2, (uint64_t)v184);
  v175 = (os_log_t)v184[0];
  v179 = v184[1];
  v177 = v184[2];
  v3 = v184[3];
  v4 = v184[6];
  v173 = v186;
  v5 = v185;
  v174 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v174);
  v172 = (uint64_t)&v166 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v171 = (uint64_t)&v166 - v8;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v166 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = ((char *)&v166 - v13);
  v180 = sub_1A594A764();
  v181 = *(_QWORD *)(v180 - 8);
  MEMORY[0x1E0C80A78](v180);
  v16 = (char *)&v166 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v166 - v18;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v166 - v21;
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v166 - v24;
  v178 = a2;
  result = sub_1A5510484(a2, (uint64_t)v187);
  v27 = *(unsigned int *)&v188[24] | ((unint64_t)v188[28] << 32);
  v28 = v188[28] >> 6;
  if (!v28)
  {
    v60 = v175;
    v61 = (unint64_t)v3;
    v172 = v4;
    v62 = v5 | (v173 << 32);
    v188[28] = BYTE4(v27) & 0x3F;
    *(_OWORD *)v189 = *(_OWORD *)v187;
    *(_OWORD *)&v189[16] = *(_OWORD *)&v187[16];
    *(_OWORD *)v190 = *(_OWORD *)v188;
    *(_OWORD *)&v190[13] = *(_OWORD *)&v188[13];
    sub_1A5534334((uint64_t)&v190[8], (uint64_t)v191);
    sub_1A5534334((uint64_t)v191, (uint64_t)&v193);
    v170 = v3;
    if ((v194 & 1) != 0)
    {
      v63 = *(void (**)(char *, NSObject *, uint64_t))(v181 + 16);
      v169 = v22;
      v64 = v176;
      v63(v22, v176, v180);
      v65 = v62;
      v167 = v11;
      sub_1A55034B8((uint64_t)v64, (uint64_t)v11, type metadata accessor for MailboxTaskLogger);
      v66 = v179;
      v67 = HIDWORD(v179);
      v68 = v61;
      v69 = HIDWORD(v61);
      sub_1A54E4334((uint64_t)v60, v179, SBYTE4(v179));
      v70 = v177;
      sub_1A54E4334(v177, v68, v69);
      v71 = v172;
      sub_1A54E4334(v172, v65, SBYTE4(v65));
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v72 = v178;
      sub_1A556C5B4(v178, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E4334);
      sub_1A556C5B4(v72, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E4334);
      sub_1A556C5B4(v72, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E4334);
      v73 = v71;
      sub_1A556C5B4(v72, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E4334);
      v74 = (uint64_t)v60;
      v75 = v70;
      v76 = v66;
      v168 = v67;
      v77 = v170;
      sub_1A54E4334(v74, v66, SBYTE4(v66));
      v171 = v69;
      sub_1A54E4334(v75, (uint64_t)v77, v69);
      v173 = v65;
      v176 = BYTE4(v65);
      v78 = (uint64_t)v167;
      sub_1A54E4334(v71, v65, SBYTE4(v65));
      v79 = sub_1A594A74C();
      v80 = sub_1A594C030();
      v81 = v80;
      if (os_log_type_enabled(v79, v80))
      {
        v82 = swift_slowAlloc();
        v179 = swift_slowAlloc();
        v183 = v179;
        *(_DWORD *)v82 = 68160003;
        *(_DWORD *)v192 = 2;
        v177 = (uint64_t)v79;
        sub_1A594C3CC();
        *(_WORD *)(v82 + 8) = 256;
        v83 = v78 + *(int *)(v174 + 20);
        v192[0] = *(_BYTE *)v83;
        sub_1A594C3CC();
        *(_WORD *)(v82 + 11) = 2082;
        LODWORD(v176) = v81;
        v84 = v78;
        v85 = *(_QWORD *)(v83 + 8);
        v86 = *(_QWORD *)(v83 + 16);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        *(_QWORD *)v192 = sub_1A55791B0(v85, v86, (uint64_t *)&v183);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v82 + 21) = 1040;
        *(_DWORD *)v192 = 2;
        sub_1A594C3CC();
        *(_WORD *)(v82 + 27) = 512;
        *(_WORD *)v192 = *(_WORD *)(v83 + 24);
        sub_1A594C3CC();
        *(_WORD *)(v82 + 31) = 2160;
        strcpy(v192, "mailbox");
        sub_1A594C3CC();
        *(_WORD *)(v82 + 41) = 2085;
        v87 = *(_DWORD *)(v83 + 40);
        *(_QWORD *)v192 = *(_QWORD *)(v83 + 32);
        *(_DWORD *)&v192[8] = v87;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v88 = sub_1A594B4A8();
        *(_QWORD *)v192 = sub_1A55791B0(v88, v89, (uint64_t *)&v183);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55034FC(v84, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v82 + 51) = 2048;
        v90 = *(_QWORD *)v189;
        v91 = *(unsigned int *)&v189[8];
        v92 = v189[12];
        v175 = *(os_log_t *)&v189[16];
        v93 = *(unsigned int *)&v189[24];
        v94 = v189[28];
        sub_1A54E3414();
        v95 = MessageIdentifierSet.count.getter(v90, v91 | (v92 << 32));
        v96 = v178;
        sub_1A556C5B4(v178, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
        *(_QWORD *)v192 = v95;
        sub_1A594C3CC();
        sub_1A556C5B4(v96, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
        *(_WORD *)(v82 + 61) = 2048;
        v97 = MessageIdentifierSet.count.getter((uint64_t)v175, v93 | (v94 << 32));
        sub_1A556C5B4(v96, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
        *(_QWORD *)v192 = v97;
        sub_1A594C3CC();
        sub_1A556C5B4(v96, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
        *(_WORD *)(v82 + 71) = 2082;
        *(_QWORD *)v192 = *(_QWORD *)&v190[16];
        *(_QWORD *)&v192[5] = *(_QWORD *)&v190[21];
        sub_1A54E4334(*(uint64_t *)v192, (*(_QWORD *)&v190[21] >> 24), v190[28]);
        MessageIdentifierSet.debugDescription.getter();
        v99 = v98;
        v101 = v100;
        sub_1A550F348((uint64_t)v192);
        v182 = sub_1A55791B0(v99, v101, (uint64_t *)&v183);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A556C5B4(v96, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
        sub_1A556C5B4(v96, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
        v102 = (os_log_t)v177;
        _os_log_impl(&dword_1A4F90000, (os_log_t)v177, (os_log_type_t)v176, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Total missing message count: %ld; %ld done; fetched-w"
          "indow upper bound: nil, queriedUIDs: %{public}s",
          (uint8_t *)v82,
          0x51u);
        v103 = v179;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v103, -1, -1);
        MEMORY[0x1A85B1964](v82, -1, -1);

      }
      else
      {
        sub_1A556C5B4(v72, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
        sub_1A556C5B4(v72, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
        sub_1A55034FC(v78, type metadata accessor for MailboxTaskLogger);
        sub_1A556C5B4(v72, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
        sub_1A556C5B4(v72, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
        sub_1A54E3458((uint64_t)v175, v76, v168);
        sub_1A54E3458(v75, (uint64_t)v77, v171);
        sub_1A54E3458(v73, v173, (char)v176);
        sub_1A55F76C8((uint64_t)v189);

      }
      v58 = *(uint64_t (**)(char *, uint64_t))(v181 + 8);
      v59 = &v189[8];
    }
    else
    {
      LODWORD(v173) = v193;
      v126 = *(void (**)(char *, NSObject *, uint64_t))(v181 + 16);
      v168 = (uint64_t)v25;
      v127 = v176;
      v126(v25, v176, v180);
      v176 = v14;
      sub_1A55034B8((uint64_t)v127, (uint64_t)v14, type metadata accessor for MailboxTaskLogger);
      v128 = v179;
      v129 = HIDWORD(v179);
      v130 = HIDWORD(v61);
      v131 = BYTE4(v62);
      sub_1A54E4334((uint64_t)v60, v179, SBYTE4(v179));
      v132 = v177;
      sub_1A54E4334(v177, v61, SBYTE4(v61));
      v133 = v172;
      sub_1A54E4334(v172, v62, SBYTE4(v62));
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v134 = v178;
      sub_1A556C5B4(v178, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E4334);
      sub_1A556C5B4(v134, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E4334);
      sub_1A556C5B4(v134, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E4334);
      sub_1A556C5B4(v134, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E4334);
      v167 = (char *)v129;
      v135 = v62;
      v136 = v132;
      v137 = v170;
      sub_1A54E4334((uint64_t)v60, v128, SBYTE4(v128));
      v169 = (char *)v130;
      sub_1A54E4334(v136, (uint64_t)v137, v130);
      v171 = v131;
      sub_1A54E4334(v133, v135, v131);
      v138 = sub_1A594A74C();
      v139 = sub_1A594C030();
      v140 = v139;
      if (os_log_type_enabled(v138, v139))
      {
        v141 = swift_slowAlloc();
        LODWORD(v177) = v140;
        v142 = v141;
        v179 = swift_slowAlloc();
        v183 = v179;
        *(_DWORD *)v142 = 68160259;
        *(_DWORD *)v192 = 2;
        v175 = v138;
        sub_1A594C3CC();
        *(_WORD *)(v142 + 8) = 256;
        v143 = v176;
        v144 = (char *)v176 + *(int *)(v174 + 20);
        v192[0] = *v144;
        sub_1A594C3CC();
        *(_WORD *)(v142 + 11) = 2082;
        v145 = *((_QWORD *)v144 + 1);
        v146 = *((_QWORD *)v144 + 2);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        *(_QWORD *)v192 = sub_1A55791B0(v145, v146, (uint64_t *)&v183);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v142 + 21) = 1040;
        *(_DWORD *)v192 = 2;
        sub_1A594C3CC();
        *(_WORD *)(v142 + 27) = 512;
        *(_WORD *)v192 = *((_WORD *)v144 + 12);
        sub_1A594C3CC();
        *(_WORD *)(v142 + 31) = 2160;
        strcpy(v192, "mailbox");
        sub_1A594C3CC();
        *(_WORD *)(v142 + 41) = 2085;
        v147 = *((_DWORD *)v144 + 10);
        *(_QWORD *)v192 = *((_QWORD *)v144 + 4);
        *(_DWORD *)&v192[8] = v147;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v148 = sub_1A594B4A8();
        *(_QWORD *)v192 = sub_1A55791B0(v148, v149, (uint64_t *)&v183);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55034FC((uint64_t)v143, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v142 + 51) = 2048;
        v150 = *(_QWORD *)v189;
        v151 = *(unsigned int *)&v189[8];
        v152 = v189[12];
        v176 = *(NSObject **)&v189[16];
        v153 = *(unsigned int *)&v189[24];
        v154 = v189[28];
        sub_1A54E3414();
        v155 = MessageIdentifierSet.count.getter(v150, v151 | (v152 << 32));
        v156 = v178;
        sub_1A556C5B4(v178, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
        *(_QWORD *)v192 = v155;
        sub_1A594C3CC();
        sub_1A556C5B4(v156, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
        *(_WORD *)(v142 + 61) = 2048;
        v157 = MessageIdentifierSet.count.getter((uint64_t)v176, v153 | (v154 << 32));
        sub_1A556C5B4(v156, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
        *(_QWORD *)v192 = v157;
        sub_1A594C3CC();
        sub_1A556C5B4(v156, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
        *(_WORD *)(v142 + 71) = 1024;
        *(_DWORD *)v192 = v173;
        sub_1A594C3CC();
        *(_WORD *)(v142 + 77) = 2082;
        *(_QWORD *)v192 = *(_QWORD *)&v190[16];
        *(_QWORD *)&v192[5] = *(_QWORD *)&v190[21];
        sub_1A54E4334(*(uint64_t *)v192, (*(_QWORD *)&v190[21] >> 24), v190[28]);
        MessageIdentifierSet.debugDescription.getter();
        v159 = v158;
        v161 = v160;
        sub_1A550F348((uint64_t)v192);
        v182 = sub_1A55791B0(v159, v161, (uint64_t *)&v183);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A556C5B4(v156, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
        sub_1A556C5B4(v156, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
        v162 = v175;
        _os_log_impl(&dword_1A4F90000, v175, (os_log_type_t)v177, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Total missing message count: %ld; %ld done; fetched-w"
          "indow upper bound: %u, queriedUIDs: %{public}s",
          (uint8_t *)v142,
          0x57u);
        v163 = v179;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v163, -1, -1);
        MEMORY[0x1A85B1964](v142, -1, -1);

      }
      else
      {
        sub_1A556C5B4(v134, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
        sub_1A556C5B4(v134, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
        sub_1A55034FC((uint64_t)v176, type metadata accessor for MailboxTaskLogger);
        sub_1A556C5B4(v134, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
        sub_1A556C5B4(v134, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
        sub_1A54E3458((uint64_t)v175, v179, (char)v167);
        sub_1A54E3458(v136, (uint64_t)v137, (char)v169);
        sub_1A54E3458(v133, v135, v171);
        sub_1A55F76C8((uint64_t)v189);

      }
      v58 = *(uint64_t (**)(char *, uint64_t))(v181 + 8);
      v59 = v189;
    }
    goto LABEL_20;
  }
  if (v28 != 1)
    return result;
  v188[28] = BYTE4(v27) & 0x3F;
  *(_QWORD *)&v189[14] = *(_QWORD *)&v187[14];
  *(_OWORD *)v189 = *(_OWORD *)v187;
  v29 = *(_QWORD *)&v187[8];
  v30 = (*(_QWORD *)&v187[14] >> 16);
  v31 = v187[20];
  sub_1A5534334((uint64_t)v189, (uint64_t)&v193);
  sub_1A5534334((uint64_t)&v193, (uint64_t)&v182);
  if ((v182 & 0x100000000) != 0)
  {
    v175 = v30;
    v32 = v181;
    v19 = v16;
    v33 = v16;
    v34 = v176;
    v35 = v180;
    (*(void (**)(char *, NSObject *, uint64_t))(v181 + 16))(v33, v176, v180);
    v36 = (uint64_t)v34;
    v37 = v172;
    sub_1A55034B8(v36, v172, type metadata accessor for MailboxTaskLogger);
    v38 = (os_log_t)v177;
    v39 = HIDWORD(v177);
    v40 = v179;
    sub_1A54E4334(v179, v177, SBYTE4(v177));
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    sub_1A54E4334(v40, (uint64_t)v38, SBYTE4(v38));
    v41 = sub_1A594A74C();
    v42 = sub_1A594C030();
    LODWORD(v176) = v42;
    if (os_log_type_enabled(v41, v42))
    {
      v43 = swift_slowAlloc();
      v173 = v29;
      v44 = v43;
      v171 = swift_slowAlloc();
      v183 = v171;
      *(_DWORD *)v44 = 68159491;
      *(_DWORD *)v192 = 2;
      v170 = v41;
      sub_1A594C3CC();
      *(_WORD *)(v44 + 8) = 256;
      v45 = v37 + *(int *)(v174 + 20);
      v192[0] = *(_BYTE *)v45;
      sub_1A594C3CC();
      *(_WORD *)(v44 + 11) = 2082;
      v174 = (uint64_t)v19;
      v47 = *(_QWORD *)(v45 + 8);
      v46 = *(_QWORD *)(v45 + 16);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      *(_QWORD *)v192 = sub_1A55791B0(v47, v46, (uint64_t *)&v183);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v44 + 21) = 1040;
      *(_DWORD *)v192 = 2;
      sub_1A594C3CC();
      *(_WORD *)(v44 + 27) = 512;
      *(_WORD *)v192 = *(_WORD *)(v45 + 24);
      sub_1A594C3CC();
      *(_WORD *)(v44 + 31) = 2160;
      strcpy(v192, "mailbox");
      sub_1A594C3CC();
      *(_WORD *)(v44 + 41) = 2085;
      v48 = *(_DWORD *)(v45 + 40);
      *(_QWORD *)v192 = *(_QWORD *)(v45 + 32);
      *(_DWORD *)&v192[8] = v48;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v49 = sub_1A594B4A8();
      *(_QWORD *)v192 = sub_1A55791B0(v49, v50, (uint64_t *)&v183);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC(v37, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v44 + 51) = 2082;
      sub_1A54E4334(v179, v177, v39);
      sub_1A54E3414();
      MessageIdentifierSet.debugDescription.getter();
      v52 = v51;
      v54 = v53;
      v55 = v178;
      sub_1A556C5B4(v178, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
      *(_QWORD *)v192 = sub_1A55791B0(v52, v54, (uint64_t *)&v183);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A556C5B4(v55, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
      sub_1A556C5B4(v55, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
      v56 = v170;
      _os_log_impl(&dword_1A4F90000, v170, (os_log_type_t)v176, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] No missing message; fetched-window upper bound: nil, qu"
        "eriedUIDs: %{public}s",
        (uint8_t *)v44,
        0x3Du);
      v57 = v171;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v57, -1, -1);
      MEMORY[0x1A85B1964](v44, -1, -1);

      v58 = *(uint64_t (**)(char *, uint64_t))(v181 + 8);
      v59 = &v190[16];
LABEL_20:
      v125 = (char *)*((_QWORD *)v59 - 32);
      return v58(v125, v180);
    }
    sub_1A55034FC(v37, type metadata accessor for MailboxTaskLogger);
    v164 = v178;
    sub_1A556C5B4(v178, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
    sub_1A556C5B4(v164, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);

    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v19, v35);
  }
  v172 = v31;
  LODWORD(v169) = v182;
  v32 = v181;
  v104 = v176;
  v35 = v180;
  (*(void (**)(char *, NSObject *, uint64_t))(v181 + 16))(v19, v176, v180);
  v105 = v171;
  sub_1A55034B8((uint64_t)v104, v171, type metadata accessor for MailboxTaskLogger);
  v106 = (os_log_t)v177;
  v107 = HIDWORD(v177);
  v108 = v179;
  sub_1A54E4334(v179, v177, SBYTE4(v177));
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  sub_1A54E4334(v108, (uint64_t)v106, SBYTE4(v106));
  v109 = sub_1A594A74C();
  v110 = sub_1A594C030();
  v176 = v109;
  LODWORD(v170) = v110;
  if (!os_log_type_enabled(v109, v110))
  {
    sub_1A55034FC(v105, type metadata accessor for MailboxTaskLogger);
    v165 = v178;
    sub_1A556C5B4(v178, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
    sub_1A556C5B4(v165, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);

    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v19, v35);
  }
  v111 = swift_slowAlloc();
  v168 = swift_slowAlloc();
  v183 = v168;
  *(_DWORD *)v111 = 68159747;
  *(_DWORD *)v192 = 2;
  v173 = v29;
  v175 = v30;
  sub_1A594C3CC();
  *(_WORD *)(v111 + 8) = 256;
  v112 = v105 + *(int *)(v174 + 20);
  v192[0] = *(_BYTE *)v112;
  sub_1A594C3CC();
  *(_WORD *)(v111 + 11) = 2082;
  v114 = *(_QWORD *)(v112 + 8);
  v113 = *(_QWORD *)(v112 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  *(_QWORD *)v192 = sub_1A55791B0(v114, v113, (uint64_t *)&v183);
  sub_1A594C3CC();
  swift_bridgeObjectRelease();
  *(_WORD *)(v111 + 21) = 1040;
  *(_DWORD *)v192 = 2;
  sub_1A594C3CC();
  *(_WORD *)(v111 + 27) = 512;
  *(_WORD *)v192 = *(_WORD *)(v112 + 24);
  sub_1A594C3CC();
  *(_WORD *)(v111 + 31) = 2160;
  strcpy(v192, "mailbox");
  sub_1A594C3CC();
  *(_WORD *)(v111 + 41) = 2085;
  v115 = *(_DWORD *)(v112 + 40);
  *(_QWORD *)v192 = *(_QWORD *)(v112 + 32);
  *(_DWORD *)&v192[8] = v115;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v116 = sub_1A594B4A8();
  *(_QWORD *)v192 = sub_1A55791B0(v116, v117, (uint64_t *)&v183);
  sub_1A594C3CC();
  swift_bridgeObjectRelease();
  sub_1A55034FC(v105, type metadata accessor for MailboxTaskLogger);
  *(_WORD *)(v111 + 51) = 1024;
  *(_DWORD *)v192 = (_DWORD)v169;
  sub_1A594C3CC();
  *(_WORD *)(v111 + 57) = 2082;
  sub_1A54E4334(v179, v177, v107);
  sub_1A54E3414();
  MessageIdentifierSet.debugDescription.getter();
  v119 = v118;
  v121 = v120;
  v122 = v178;
  sub_1A556C5B4(v178, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
  *(_QWORD *)v192 = sub_1A55791B0(v119, v121, (uint64_t *)&v183);
  sub_1A594C3CC();
  swift_bridgeObjectRelease();
  sub_1A556C5B4(v122, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
  sub_1A556C5B4(v122, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
  v123 = v176;
  _os_log_impl(&dword_1A4F90000, v176, (os_log_type_t)v170, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] No missing message; fetched window upper bound: %u, queried"
    "UIDs: %{public}s",
    (uint8_t *)v111,
    0x43u);
  v124 = v168;
  swift_arrayDestroy();
  MEMORY[0x1A85B1964](v124, -1, -1);
  MEMORY[0x1A85B1964](v111, -1, -1);

  v58 = *(uint64_t (**)(char *, uint64_t))(v181 + 8);
  v125 = v19;
  return v58(v125, v180);
}

uint64_t sub_1A55F2A3C()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t sub_1A55F2A44()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 112);
}

uint64_t sub_1A55F2A54@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = sub_1A55EF878(a1, a2, a3, a4);
  *a5 = result;
  a5[1] = v7;
  a5[2] = v8;
  return result;
}

void sub_1A55F2A7C(const void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1A55F7970(a1, a2, a3, a4);
}

uint64_t sub_1A55F2A88(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1A55F8134(a1, a2, a3, a5);
}

unint64_t sub_1A55F2A94(uint64_t a1, unint64_t a2, uint64_t a3, void *a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;

  v9 = *(char *)(a1 + 12);
  v10 = *(unsigned int *)(a1 + 8);
  result = sub_1A564DEAC(a7, a2, a3, a4, a5);
  if (!v8 && (v10 | (v9 << 32)) < 0 && *(_QWORD *)(v7 + 280))
  {
    if ((v10 & 1) != 0)
    {
      *(_DWORD *)(v7 + 272) = 0;
      *(_BYTE *)(v7 + 276) = 1;
    }
    else if ((*(_BYTE *)(v7 + 276) & 1) != 0)
    {
      *(_DWORD *)(v7 + 272) = 1;
      *(_BYTE *)(v7 + 276) = 0;
    }
  }
  return result;
}

unint64_t sub_1A55F2B00(uint64_t a1)
{
  return sub_1A55EFD7C(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t sub_1A55F2B24()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t sub_1A55F2B50(uint64_t (*a1)(void))
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = a1();
  v3 = v2;
  v4 = HIDWORD(v2);
  sub_1A54E3414();
  MessageIdentifierSet.debugDescription.getter();
  v6 = v5;
  sub_1A54E3458(v1, v3, v4);
  return v6;
}

_QWORD *sub_1A55F2BC8(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t *))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  char v34;
  uint64_t v35;
  int v36;
  char v37;
  uint64_t v38;
  int v39;
  char v40;
  _QWORD *v41;

  v26 = *(_QWORD *)(a1 + 16);
  if (!v26)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v2 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v3 = 0;
  v4 = 0;
  v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v25 = v2;
  do
  {
    v41 = v5;
    v31 = v3;
    v6 = v2 + v3;
    v7 = *(_QWORD *)(v2 + v3 + 32);
    v8 = *(unsigned int *)(v2 + v3 + 40);
    v9 = *(_QWORD *)(v2 + v3 + 48);
    v10 = *(unsigned int *)(v2 + v3 + 56);
    v11 = *(_QWORD *)(v2 + v3 + 64);
    v12 = *(unsigned __int8 *)(v2 + v3 + 76);
    v13 = *(unsigned int *)(v6 + 72);
    v14 = v13 | (v12 << 32);
    v30 = v14;
    v32 = v7;
    v33 = v8;
    v34 = *(_BYTE *)(v6 + 44);
    v15 = v34;
    v35 = v9;
    v36 = v10;
    v37 = *(_BYTE *)(v6 + 60);
    v16 = v37;
    v38 = v11;
    v40 = v12;
    v39 = v13;
    sub_1A54E4334(v7, v8, v34);
    sub_1A54E4334(v9, v10, v16);
    sub_1A5503BA0(v11, v14);
    v17 = a2(v4, &v32);
    v28 = v18;
    v29 = v17;
    v20 = v19;
    sub_1A54E3458(v7, v8, v15);
    sub_1A54E3458(v9, v10, v16);
    sub_1A5503B8C(v11, v30);
    if ((~v20 & 0xFF00000000) != 0)
    {
      v5 = v41;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v5 = sub_1A54F20D0(0, v5[2] + 1, 1, v5);
      v22 = v5[2];
      v21 = v5[3];
      if (v22 >= v21 >> 1)
        v5 = sub_1A54F20D0((_QWORD *)(v21 > 1), v22 + 1, 1, v5);
      v5[2] = v22 + 1;
      v23 = &v5[3 * v22];
      v23[4] = v29;
      v23[5] = v28;
      *((_DWORD *)v23 + 12) = v20;
      *((_BYTE *)v23 + 52) = BYTE4(v20);
    }
    else
    {
      v5 = v41;
    }
    ++v4;
    v3 = v31 + 48;
    v2 = v25;
  }
  while (v26 != v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t destroy for FindMissingMessages(uint64_t a1)
{
  unint64_t v2;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 148) != 255)
  {
    v2 = *(unsigned int *)(a1 + 144) | ((unint64_t)*(unsigned __int8 *)(a1 + 148) << 32);
    sub_1A54E3458(*(_QWORD *)(a1 + 136), v2, SBYTE4(v2));
  }
  swift_bridgeObjectRelease();
  sub_1A54E3458(*(_QWORD *)(a1 + 208), *(unsigned int *)(a1 + 216), *(_BYTE *)(a1 + 220));
  sub_1A54E3458(*(_QWORD *)(a1 + 224), *(unsigned int *)(a1 + 232), *(_BYTE *)(a1 + 236));
  sub_1A54E3458(*(_QWORD *)(a1 + 240), *(unsigned int *)(a1 + 248), *(_BYTE *)(a1 + 252));
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FindMissingMessages(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  unsigned __int8 v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = a1 + 24;
  v5 = a2 + 24;
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v8(v4, v5, v7);
  v9 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v9;
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  v10 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v10;
  v11 = (uint64_t *)(a2 + 136);
  v12 = *(_BYTE *)(a2 + 148);
  v13 = *(unsigned int *)(a2 + 144);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v12 == 255)
  {
    *(_QWORD *)(a1 + 136) = *v11;
    *(_QWORD *)(a1 + 141) = *(_QWORD *)(a2 + 141);
  }
  else
  {
    v14 = v13 & 0xFFFFFF00FFFFFFFFLL | ((unint64_t)v12 << 32);
    v15 = *v11;
    sub_1A54E4334(*v11, v14, SBYTE4(v14));
    *(_QWORD *)(a1 + 136) = v15;
    *(_DWORD *)(a1 + 144) = v14;
    *(_BYTE *)(a1 + 148) = BYTE4(v14);
  }
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_DWORD *)(a1 + 176) = *(_DWORD *)(a2 + 176);
  *(_WORD *)(a1 + 180) = *(_WORD *)(a2 + 180);
  *(_DWORD *)(a1 + 184) = *(_DWORD *)(a2 + 184);
  *(_BYTE *)(a1 + 188) = *(_BYTE *)(a2 + 188);
  *(_WORD *)(a1 + 189) = *(_WORD *)(a2 + 189);
  v16 = *(_QWORD *)(a2 + 192);
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = v16;
  *(_BYTE *)(a1 + 201) = *(_BYTE *)(a2 + 201);
  v17 = *(_QWORD *)(a2 + 208);
  v18 = *(unsigned int *)(a2 + 216);
  v19 = *(_BYTE *)(a2 + 220);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54E4334(v17, v18, v19);
  *(_QWORD *)(a1 + 208) = v17;
  *(_DWORD *)(a1 + 216) = v18;
  *(_BYTE *)(a1 + 220) = v19;
  v20 = *(_QWORD *)(a2 + 224);
  LODWORD(v18) = *(_DWORD *)(a2 + 232);
  v21 = *(_BYTE *)(a2 + 236);
  sub_1A54E4334(v20, v18, v21);
  *(_QWORD *)(a1 + 224) = v20;
  *(_DWORD *)(a1 + 232) = v18;
  *(_BYTE *)(a1 + 236) = v21;
  v22 = *(_QWORD *)(a2 + 240);
  LODWORD(v18) = *(_DWORD *)(a2 + 248);
  v23 = *(_BYTE *)(a2 + 252);
  sub_1A54E4334(v22, v18, v23);
  *(_QWORD *)(a1 + 240) = v22;
  *(_DWORD *)(a1 + 248) = v18;
  *(_BYTE *)(a1 + 252) = v23;
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_WORD *)(a1 + 264) = *(_WORD *)(a2 + 264);
  *(_DWORD *)(a1 + 268) = *(_DWORD *)(a2 + 268);
  *(_DWORD *)(a1 + 272) = *(_DWORD *)(a2 + 272);
  *(_BYTE *)(a1 + 276) = *(_BYTE *)(a2 + 276);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for FindMissingMessages(uint64_t a1, uint64_t a2)
{
  _BYTE *v4;
  uint64_t *v5;
  uint64_t *v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  unsigned int v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  unsigned int v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  int v38;

  v4 = (_BYTE *)(a2 + 264);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v5 = (uint64_t *)(a1 + 136);
  v6 = (uint64_t *)(a2 + 136);
  v7 = *(unsigned int *)(a2 + 144) | ((unint64_t)*(unsigned __int8 *)(a2 + 148) << 32);
  v8 = *(_BYTE *)(a2 + 148);
  if (*(unsigned __int8 *)(a1 + 148) == 255)
  {
    if (BYTE4(v7) == 255)
    {
      v9 = *v6;
      *(_QWORD *)(a1 + 141) = *(_QWORD *)(a2 + 141);
      *v5 = v9;
    }
    else
    {
      v11 = *v6;
      sub_1A54E4334(*v6, *(unsigned int *)(a2 + 144) | ((unint64_t)*(unsigned __int8 *)(a2 + 148) << 32), SBYTE4(v7));
      *(_QWORD *)(a1 + 136) = v11;
      *(_DWORD *)(a1 + 144) = v7;
      *(_BYTE *)(a1 + 148) = v8;
    }
  }
  else if (BYTE4(v7) == 255)
  {
    sub_1A5510284(a1 + 136, &qword_1EE7A0400);
    v10 = *(_QWORD *)(a2 + 141);
    *v5 = *v6;
    *(_QWORD *)(a1 + 141) = v10;
  }
  else
  {
    v12 = *v6;
    sub_1A54E4334(*v6, *(unsigned int *)(a2 + 144) | ((unint64_t)*(unsigned __int8 *)(a2 + 148) << 32), SBYTE4(v7));
    v13 = *(_QWORD *)(a1 + 136);
    v14 = *(unsigned int *)(a1 + 144);
    *(_QWORD *)(a1 + 136) = v12;
    *(_DWORD *)(a1 + 144) = v7;
    v15 = *(_BYTE *)(a1 + 148);
    *(_BYTE *)(a1 + 148) = v8;
    sub_1A54E3458(v13, v14, v15);
  }
  v16 = *(_QWORD *)(a2 + 152);
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = v16;
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v17 = *(_DWORD *)(a2 + 176);
  *(_WORD *)(a1 + 180) = *(_WORD *)(a2 + 180);
  *(_DWORD *)(a1 + 176) = v17;
  v18 = *(_DWORD *)(a2 + 184);
  *(_BYTE *)(a1 + 188) = *(_BYTE *)(a2 + 188);
  *(_DWORD *)(a1 + 184) = v18;
  *(_BYTE *)(a1 + 189) = *(_BYTE *)(a2 + 189);
  *(_BYTE *)(a1 + 190) = *(_BYTE *)(a2 + 190);
  v19 = *(_QWORD *)(a2 + 192);
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = v19;
  *(_BYTE *)(a1 + 201) = *(_BYTE *)(a2 + 201);
  v20 = *(_QWORD *)(a2 + 208);
  v21 = *(_DWORD *)(a2 + 216);
  v22 = *(_BYTE *)(a2 + 220);
  sub_1A54E4334(v20, v21, v22);
  v23 = *(_QWORD *)(a1 + 208);
  v24 = *(unsigned int *)(a1 + 216);
  *(_QWORD *)(a1 + 208) = v20;
  *(_DWORD *)(a1 + 216) = v21;
  v25 = *(_BYTE *)(a1 + 220);
  *(_BYTE *)(a1 + 220) = v22;
  sub_1A54E3458(v23, v24, v25);
  v26 = *(_QWORD *)(a2 + 224);
  v27 = *(_DWORD *)(a2 + 232);
  v28 = *(_BYTE *)(a2 + 236);
  sub_1A54E4334(v26, v27, v28);
  v29 = *(_QWORD *)(a1 + 224);
  v30 = *(unsigned int *)(a1 + 232);
  *(_QWORD *)(a1 + 224) = v26;
  *(_DWORD *)(a1 + 232) = v27;
  v31 = *(_BYTE *)(a1 + 236);
  *(_BYTE *)(a1 + 236) = v28;
  sub_1A54E3458(v29, v30, v31);
  v32 = *(_QWORD *)(a2 + 240);
  v33 = *(_DWORD *)(a2 + 248);
  v34 = *(_BYTE *)(a2 + 252);
  sub_1A54E4334(v32, v33, v34);
  v35 = *(_QWORD *)(a1 + 240);
  v36 = *(unsigned int *)(a1 + 248);
  *(_QWORD *)(a1 + 240) = v32;
  *(_DWORD *)(a1 + 248) = v33;
  v37 = *(_BYTE *)(a1 + 252);
  *(_BYTE *)(a1 + 252) = v34;
  sub_1A54E3458(v35, v36, v37);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_BYTE *)(a1 + 264) = *v4;
  *(_BYTE *)(a1 + 265) = v4[1];
  *(_DWORD *)(a1 + 268) = *(_DWORD *)(a2 + 268);
  v38 = *(_DWORD *)(a2 + 272);
  *(_BYTE *)(a1 + 276) = *(_BYTE *)(a2 + 276);
  *(_DWORD *)(a1 + 272) = v38;
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FindMissingMessages(uint64_t a1, uint64_t a2)
{
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unsigned __int8 v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  int v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  int v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;

  v4 = (_BYTE *)(a2 + 264);
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  v7 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v7;
  swift_bridgeObjectRelease();
  v8 = (_QWORD *)(a2 + 136);
  v9 = *(_BYTE *)(a1 + 148);
  if (v9 != 255)
  {
    v10 = *(unsigned int *)(a2 + 144) | ((unint64_t)*(unsigned __int8 *)(a2 + 148) << 32);
    if (HIDWORD(v10) <= 0xFE)
    {
      v11 = *(unsigned int *)(a1 + 144);
      v12 = *(_QWORD *)(a1 + 136);
      *(_QWORD *)(a1 + 136) = *v8;
      *(_DWORD *)(a1 + 144) = v10;
      *(_BYTE *)(a1 + 148) = BYTE4(v10);
      sub_1A54E3458(v12, v11, v9);
      goto LABEL_6;
    }
    sub_1A5510284(a1 + 136, &qword_1EE7A0400);
  }
  *(_QWORD *)(a1 + 136) = *v8;
  *(_QWORD *)(a1 + 141) = *(_QWORD *)(a2 + 141);
LABEL_6:
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 176) = *(_DWORD *)(a2 + 176);
  *(_WORD *)(a1 + 180) = *(_WORD *)(a2 + 180);
  *(_DWORD *)(a1 + 184) = *(_DWORD *)(a2 + 184);
  *(_BYTE *)(a1 + 188) = *(_BYTE *)(a2 + 188);
  *(_BYTE *)(a1 + 189) = *(_BYTE *)(a2 + 189);
  *(_BYTE *)(a1 + 190) = *(_BYTE *)(a2 + 190);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  *(_BYTE *)(a1 + 201) = *(_BYTE *)(a2 + 201);
  v13 = *(_DWORD *)(a2 + 216);
  v14 = *(_BYTE *)(a2 + 220);
  v15 = *(_QWORD *)(a1 + 208);
  v16 = *(unsigned int *)(a1 + 216);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_DWORD *)(a1 + 216) = v13;
  v17 = *(_BYTE *)(a1 + 220);
  *(_BYTE *)(a1 + 220) = v14;
  sub_1A54E3458(v15, v16, v17);
  v18 = *(_DWORD *)(a2 + 232);
  v19 = *(_BYTE *)(a2 + 236);
  v20 = *(_QWORD *)(a1 + 224);
  v21 = *(unsigned int *)(a1 + 232);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_DWORD *)(a1 + 232) = v18;
  v22 = *(_BYTE *)(a1 + 236);
  *(_BYTE *)(a1 + 236) = v19;
  sub_1A54E3458(v20, v21, v22);
  v23 = *(_DWORD *)(a2 + 248);
  v24 = *(_BYTE *)(a2 + 252);
  v25 = *(_QWORD *)(a1 + 240);
  v26 = *(unsigned int *)(a1 + 248);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_DWORD *)(a1 + 248) = v23;
  v27 = *(_BYTE *)(a1 + 252);
  *(_BYTE *)(a1 + 252) = v24;
  sub_1A54E3458(v25, v26, v27);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_BYTE *)(a1 + 264) = *v4;
  *(_BYTE *)(a1 + 265) = v4[1];
  *(_DWORD *)(a1 + 268) = *(_DWORD *)(a2 + 268);
  *(_DWORD *)(a1 + 272) = *(_DWORD *)(a2 + 272);
  *(_BYTE *)(a1 + 276) = *(_BYTE *)(a2 + 276);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FindMissingMessages(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 288))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FindMissingMessages(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 280) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 288) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 288) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FindMissingMessages()
{
  return &type metadata for FindMissingMessages;
}

unint64_t sub_1A55F3710()
{
  unint64_t result;

  result = qword_1EE797880;
  if (!qword_1EE797880)
  {
    result = MEMORY[0x1A85B1874]("٫T?|Z\r", &type metadata for FindMissingMessages.ActionID);
    atomic_store(result, (unint64_t *)&qword_1EE797880);
  }
  return result;
}

unint64_t sub_1A55F3758()
{
  unint64_t result;

  result = qword_1EE7A0460;
  if (!qword_1EE7A0460)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A9BC8, &type metadata for FindMissingMessages.CommandID);
    atomic_store(result, (unint64_t *)&qword_1EE7A0460);
  }
  return result;
}

unint64_t sub_1A55F379C(uint64_t a1)
{
  unint64_t result;

  result = sub_1A55F37C0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A55F37C0()
{
  unint64_t result;

  result = qword_1EE797888;
  if (!qword_1EE797888)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A9B84, &type metadata for FindMissingMessages);
    atomic_store(result, (unint64_t *)&qword_1EE797888);
  }
  return result;
}

uint64_t sub_1A55F3804(char a1, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  int v8;
  unint64_t v9;
  _QWORD v11[3];
  uint64_t v12;
  char v13;

  v13 = a1;
  v11[2] = &v13;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v3 = sub_1A5627674((uint64_t)sub_1A55F8570, (uint64_t)v11, a2);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    sub_1A54F4F58(0, v4, 0);
    v5 = v12;
    v6 = *(_QWORD *)(v12 + 16);
    v7 = 32;
    do
    {
      v8 = *(_DWORD *)(v3 + v7);
      v12 = v5;
      v9 = *(_QWORD *)(v5 + 24);
      if (v6 >= v9 >> 1)
      {
        sub_1A54F4F58(v9 > 1, v6 + 1, 1);
        v5 = v12;
      }
      *(_QWORD *)(v5 + 16) = v6 + 1;
      *(_DWORD *)(v5 + 4 * v6 + 32) = v8;
      v7 += 40;
      ++v6;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v5;
}

uint64_t sub_1A55F391C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v13;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v13 = MEMORY[0x1E0DEE9D8];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54F5038(0, v1, 0);
    v2 = v13;
    v4 = (uint64_t *)(a1 + 64);
    do
    {
      v5 = *(v4 - 3);
      v6 = *(v4 - 2);
      v7 = *(v4 - 1);
      v8 = *v4;
      sub_1A55CA998(v5, v6);
      v10 = *(_QWORD *)(v13 + 16);
      v9 = *(_QWORD *)(v13 + 24);
      if (v10 >= v9 >> 1)
        sub_1A54F5038(v9 > 1, v10 + 1, 1);
      v4 += 5;
      *(_QWORD *)(v13 + 16) = v10 + 1;
      v11 = (_QWORD *)(v13 + 32 * v10);
      v11[4] = v5;
      v11[5] = v6;
      v11[6] = v7;
      v11[7] = v8;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_1A55F3A10(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  unsigned int *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54F5118(0, v1, 0);
    v2 = v11;
    v4 = (unsigned int *)(a1 + 48);
    do
    {
      v5 = *((_QWORD *)v4 - 1);
      v6 = *v4 | ((unint64_t)*((unsigned __int8 *)v4 + 4) << 32);
      sub_1A55F8484(v5, v6);
      v8 = *(_QWORD *)(v11 + 16);
      v7 = *(_QWORD *)(v11 + 24);
      if (v8 >= v7 >> 1)
        sub_1A54F5118(v7 > 1, v8 + 1, 1);
      *(_QWORD *)(v11 + 16) = v8 + 1;
      v9 = v11 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v5;
      *(_DWORD *)(v9 + 40) = v6;
      *(_BYTE *)(v9 + 44) = BYTE4(v6);
      v4 += 6;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_1A55F3B04(uint64_t a1)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;

  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v2 = sub_1A56279A4((uint64_t)OUTLINED_FUNCTION_56, (uint64_t)&v10, a1);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1A54F4F58(0, v3, 0);
    v4 = v11;
    v5 = *(_QWORD *)(v11 + 16);
    v6 = 32;
    do
    {
      v7 = *(_DWORD *)(v2 + v6);
      v11 = v4;
      v8 = *(_QWORD *)(v4 + 24);
      if (v5 >= v8 >> 1)
      {
        sub_1A54F4F58(v8 > 1, v5 + 1, 1);
        v4 = v11;
      }
      *(_QWORD *)(v4 + 16) = v5 + 1;
      *(_DWORD *)(v4 + 4 * v5 + 32) = v7;
      v6 += 8;
      ++v5;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v4;
}

uint64_t sub_1A55F3C0C(char a1, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  int v8;
  unint64_t v9;
  _QWORD v11[3];
  uint64_t v12;
  char v13;

  v13 = a1;
  v11[2] = &v13;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v3 = sub_1A5627B3C((uint64_t)sub_1A55F8588, (uint64_t)v11, a2);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    sub_1A54F4F90(0, v4, 0);
    v5 = v12;
    v6 = *(_QWORD *)(v12 + 16);
    v7 = 32;
    do
    {
      v8 = *(_DWORD *)(v3 + v7);
      v12 = v5;
      v9 = *(_QWORD *)(v5 + 24);
      if (v6 >= v9 >> 1)
      {
        sub_1A54F4F90(v9 > 1, v6 + 1, 1);
        v5 = v12;
      }
      *(_QWORD *)(v5 + 16) = v6 + 1;
      *(_DWORD *)(v5 + 4 * v6 + 32) = v8;
      v7 += 24;
      ++v6;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v5;
}

uint64_t sub_1A55F3D24(int a1, uint64_t a2, uint64_t a3)
{
  return sub_1A55F3D3C(a1, a2, a3) & 1;
}

uint64_t sub_1A55F3D3C(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  _QWORD v41[2];
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;

  v49 = a1;
  v6 = type metadata accessor for TaskHistory.Running(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v44 = (char *)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v43 = (char *)v41 - v10;
  v11 = type metadata accessor for TaskHistory.Previous(0);
  MEMORY[0x1E0C80A78](v11);
  v46 = (char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v45 = (char *)v41 - v14;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v41 - v16;
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)v41 - v20;
  v22 = *(_QWORD *)(a3 + 16);
  if (!v22)
    return 0;
  v41[0] = v7;
  v41[1] = v6;
  v42 = a2;
  v47 = v3;
  v48 = a3;
  v23 = a3 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
  v50 = *(_QWORD *)(v19 + 72);
  swift_bridgeObjectRetain_n();
  v24 = v23;
  v25 = v22;
  while (1)
  {
    sub_1A55034B8(v24, (uint64_t)v21, type metadata accessor for TaskHistory.Previous);
    sub_1A55034B8((uint64_t)v21, (uint64_t)v17, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() == 1)
      break;
    sub_1A55034FC((uint64_t)v17, type metadata accessor for TaskHistory.Previous);
LABEL_4:
    sub_1A55034FC((uint64_t)v21, type metadata accessor for TaskHistory.Previous);
    v24 += v50;
    if (!--v25)
    {
      v39 = 0;
      goto LABEL_23;
    }
  }
  v26 = v11;
  v27 = *((_DWORD *)v17 + 2);
  swift_release();
  v28 = v27 == v49;
  v11 = v26;
  if (!v28)
    goto LABEL_4;
  sub_1A55034FC((uint64_t)v21, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRetain_n();
  v29 = v42;
  v31 = (uint64_t)v45;
  v30 = (uint64_t)v46;
  while (1)
  {
    sub_1A55034B8(v23, v31, type metadata accessor for TaskHistory.Previous);
    sub_1A55034B8(v31, v30, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() == 1)
      break;
    sub_1A55034FC(v30, type metadata accessor for TaskHistory.Previous);
LABEL_10:
    sub_1A55034FC(v31, type metadata accessor for TaskHistory.Previous);
    v23 += v50;
    if (!--v22)
    {
      v39 = 1;
      goto LABEL_23;
    }
  }
  v32 = *(_DWORD *)(v30 + 8);
  swift_release();
  if (v32 != v49)
    goto LABEL_10;
  sub_1A55034FC(v31, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease_n();
  v33 = *(_QWORD *)(v29 + 16);
  if (!v33)
    return 0;
  v34 = v29 + ((*(unsigned __int8 *)(v41[0] + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41[0] + 80));
  v35 = *(_QWORD *)(v41[0] + 72);
  swift_bridgeObjectRetain_n();
  v37 = (uint64_t)v43;
  v36 = (uint64_t)v44;
  do
  {
    sub_1A55034B8(v34, v37, type metadata accessor for TaskHistory.Running);
    sub_1A55034B8(v37, v36, type metadata accessor for TaskHistory.Running);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v38 = *(_DWORD *)(v36 + 4);
      swift_release();
      if (v38 == v49)
      {
        sub_1A55034FC(v37, type metadata accessor for TaskHistory.Running);
        v39 = 1;
        goto LABEL_23;
      }
    }
    else
    {
      sub_1A55034FC(v36, type metadata accessor for TaskHistory.Running);
    }
    sub_1A55034FC(v37, type metadata accessor for TaskHistory.Running);
    v34 += v35;
    --v33;
  }
  while (v33);
  v39 = 0;
LABEL_23:
  swift_bridgeObjectRelease_n();
  return v39;
}

uint64_t sub_1A55F413C(char a1, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  int v8;
  unint64_t v9;
  _QWORD v11[3];
  uint64_t v12;
  char v13;

  v13 = a1 & 1;
  v11[2] = &v13;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v3 = sub_1A5627D18((uint64_t)sub_1A55F8518, (uint64_t)v11, a2);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    sub_1A54F4F90(0, v4, 0);
    v5 = v12;
    v6 = *(_QWORD *)(v12 + 16);
    v7 = 32;
    do
    {
      v8 = *(_DWORD *)(v3 + v7);
      v12 = v5;
      v9 = *(_QWORD *)(v5 + 24);
      if (v6 >= v9 >> 1)
      {
        sub_1A54F4F90(v9 > 1, v6 + 1, 1);
        v5 = v12;
      }
      *(_QWORD *)(v5 + 16) = v6 + 1;
      *(_DWORD *)(v5 + 4 * v6 + 32) = v8;
      v7 += 24;
      ++v6;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v5;
}

uint64_t sub_1A55F4258@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, unint64_t a6@<X5>, unint64_t a7@<X6>, int a8@<W7>, uint64_t *a9@<X8>, uint64_t a10, unint64_t a11, unsigned int a12, char a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t result;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  NSObject *v71;
  os_log_type_t v72;
  int v73;
  uint64_t v74;
  os_log_t v75;
  char *v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  unsigned int v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  os_log_t v96;
  char *v97;
  char *v98;
  unsigned int *v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  os_log_type_t v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  unsigned int v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  os_log_t v118;
  uint64_t v119;
  char *v120;
  unint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char v126;
  char v127;
  uint64_t v128;
  uint64_t v129;
  NSObject *v130;
  os_log_type_t v131;
  os_log_t v132;
  char *v133;
  unint64_t v134;
  uint64_t v135;
  unsigned int v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  char v153;
  char v154;
  uint64_t v155;
  int v156;
  uint64_t v157;
  char v158;
  uint64_t v159;
  int v160;
  uint64_t v161;
  unint64_t v162;
  uint64_t v163;
  unint64_t v164;
  unint64_t v165;
  unint64_t v166;
  uint64_t v167;
  NSObject *v168;
  unint64_t v169;
  uint64_t v170;
  unint64_t v171;
  uint64_t v172;
  unint64_t v173;
  unint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  unint64_t v184;
  char v185;
  char v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  int v191;
  char *v192;
  uint64_t v193;
  NSObject *v194;
  os_log_type_t v195;
  BOOL v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  unint64_t v200;
  unsigned int v201;
  uint64_t v202;
  unint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  unint64_t v207;
  unint64_t v208;
  uint64_t v209;
  unint64_t v210;
  uint64_t v211;
  uint64_t v212;
  unint64_t v213;
  unint64_t v214;
  uint64_t v215;
  uint64_t v216;
  os_log_t v217;
  char *v218;
  uint64_t v219;
  unint64_t v220;
  uint64_t v221;
  unint64_t v222;
  unint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  unint64_t v227;
  unint64_t v228;
  uint64_t *v229;
  char v230;
  char *v231;
  int v232;
  unint64_t v233;
  os_log_t v234;
  os_log_t v235;
  char *v236;
  unint64_t v237;
  uint64_t v238;
  char *v239;
  _DWORD *v240;
  uint64_t v241;
  char *v242;
  unint64_t v243;
  uint64_t *v244;
  unint64_t v245;
  uint64_t v246;
  unint64_t v247;
  unint64_t v248;
  uint64_t v249;
  uint64_t v250;
  int v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  unint64_t v256;
  uint64_t v257;
  uint64_t v258;
  unint64_t v259;
  uint64_t v260;
  char *v261;
  uint64_t v262;
  unsigned int v263;
  unsigned __int8 v264;
  uint64_t v265;

  v251 = a8;
  v233 = a7;
  v232 = a4;
  v243 = a3;
  v244 = a9;
  v257 = a18;
  v259 = HIDWORD(a2);
  v260 = HIDWORD(a6);
  v240 = (_DWORD *)type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v240);
  v241 = (uint64_t)&v231 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v234 = (os_log_t)((char *)&v231 - v24);
  MEMORY[0x1E0C80A78](v25);
  v235 = (os_log_t)((char *)&v231 - v26);
  MEMORY[0x1E0C80A78](v27);
  v238 = (uint64_t)&v231 - v28;
  v29 = sub_1A594A764();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v242 = (char *)&v231 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v32);
  v231 = (char *)&v231 - v33;
  MEMORY[0x1E0C80A78](v34);
  v236 = (char *)&v231 - v35;
  MEMORY[0x1E0C80A78](v36);
  v239 = (char *)&v231 - v37;
  v38 = sub_1A54E3414();
  v258 = a6;
  v248 = a2;
  v246 = a6 & 0xFFFFFFFFFFLL;
  v255 = a1;
  v237 = a2 & 0xFFFFFFFFFFLL;
  MessageIdentifierSet.subtracting(_:)(a5, a6 & 0xFFFFFFFFFFLL, a1, a2 & 0xFFFFFFFFFFLL);
  v40 = v39;
  v256 = HIDWORD(v41);
  v247 = v41;
  v42 = v41 & 0xFFFFFFFFFFLL;
  MessageIdentifierSet.ranges.getter(v39, v41 & 0xFFFFFFFFFFLL);
  v44 = v43;
  v46 = v45;
  v47 = HIDWORD(v45);
  v48 = MessageIdentifierSet.RangeView.endIndex.getter(v43, v45 & 0xFFFFFFFFFFLL);
  v49 = v44;
  v50 = v257;
  sub_1A54E3458(v49, v46, v47);
  v245 = v38;
  v252 = v40;
  v253 = v30;
  v254 = v29;
  v249 = v42;
  v250 = a5;
  v51 = v260;
  if (!v48)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v239, v50, v29);
    sub_1A55034B8(v50, v238, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v100 = v258;
    sub_1A54E4334(a5, v258, v51);
    v101 = v255;
    v70 = v248;
    v102 = v259;
    sub_1A54E4334(v255, v248, v259);
    sub_1A54E4334(a5, v100, v51);
    sub_1A54E4334(v101, v70, v102);
    v40 = sub_1A594A74C();
    v103 = sub_1A594C030();
    v104 = v103;
    v105 = a5;
    if (os_log_type_enabled((os_log_t)v40, v103))
    {
      v106 = swift_slowAlloc();
      v235 = (os_log_t)v40;
      v40 = v106;
      v236 = (char *)swift_slowAlloc();
      v261 = v236;
      *(_DWORD *)v40 = 68159747;
      LODWORD(v262) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v40 + 8) = 256;
      v107 = v238;
      v108 = v238 + (int)v240[5];
      LOBYTE(v262) = *(_BYTE *)v108;
      sub_1A594C3CC();
      *(_WORD *)(v40 + 11) = 2082;
      LODWORD(v234) = v104;
      v110 = *(_QWORD *)(v108 + 8);
      v109 = *(_QWORD *)(v108 + 16);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v262 = sub_1A55791B0(v110, v109, (uint64_t *)&v261);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v40 + 21) = 1040;
      LODWORD(v262) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v40 + 27) = 512;
      LOWORD(v262) = *(_WORD *)(v108 + 24);
      sub_1A594C3CC();
      *(_WORD *)(v40 + 31) = 2160;
      v262 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v40 + 41) = 2085;
      v111 = *(_DWORD *)(v108 + 40);
      v262 = *(_QWORD *)(v108 + 32);
      v263 = v111;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v112 = sub_1A594B4A8();
      v262 = sub_1A55791B0(v112, v113, (uint64_t *)&v261);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC(v107, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v40 + 51) = 2048;
      v114 = MessageIdentifierSet.count.getter(a5, v246);
      v115 = v258;
      LOBYTE(v110) = v260;
      sub_1A54E3458(a5, v258, v260);
      v262 = v114;
      v70 = v248;
      sub_1A594C3CC();
      sub_1A54E3458(a5, v115, v110);
      *(_WORD *)(v40 + 61) = 2048;
      v116 = v255;
      v117 = MessageIdentifierSet.count.getter(v255, v237);
      sub_1A54E3458(v116, v70, v259);
      v262 = v117;
      v102 = v259;
      sub_1A594C3CC();
      sub_1A54E3458(v116, v70, v102);
      v118 = v235;
      _os_log_impl(&dword_1A4F90000, v235, (os_log_type_t)v234, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Found no UIDs to be missing locally. (%ld locally, %ld on server)", (uint8_t *)v40, 0x47u);
      v119 = (uint64_t)v236;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v119, -1, -1);
      MEMORY[0x1A85B1964](v40, -1, -1);

      v120 = v239;
      v239 = *(char **)(v253 + 8);
      ((void (*)(char *, uint64_t))v239)(v120, v254);
      v60 = v252;
      LOBYTE(v40) = v256;
      v93 = v249;
      v121 = v243;
      v92 = v115;
      v79 = v116;
    }
    else
    {
      v149 = v30;
      v150 = v255;
      v151 = v149;
      sub_1A54E3458(v255, v70, v102);
      v92 = v258;
      sub_1A54E3458(v105, v258, v51);
      sub_1A55034FC(v238, type metadata accessor for MailboxTaskLogger);
      sub_1A54E3458(v105, v92, v51);
      sub_1A54E3458(v150, v70, v102);

      v152 = v239;
      v239 = *(char **)(v151 + 8);
      ((void (*)(char *, uint64_t))v239)(v152, v29);
      v60 = v252;
      LOBYTE(v40) = v256;
      v121 = v243;
      v79 = v150;
      v93 = v249;
    }
    goto LABEL_17;
  }
  v52 = v259;
  MessageIdentifierSet.ranges.getter(v40, v42);
  v54 = v53;
  v56 = v55;
  v57 = v55 & 0xFFFFFFFFFFLL;
  v58 = MessageIdentifierSet.RangeView.endIndex.getter(v53, v55 & 0xFFFFFFFFFFLL);
  result = MessageIdentifierSet.RangeView.endIndex.getter(v54, v57);
  if (result < 0)
  {
    __break(1u);
LABEL_47:
    __break(1u);
    return result;
  }
  v60 = v40;
  v61 = MessageIdentifierSet.RangeView.endIndex.getter(v54, v57);
  result = sub_1A54E3458(v54, v56, SBYTE4(v56));
  if (v58 < 0 || v61 < v58)
    goto LABEL_47;
  v62 = *(void (**)(char *, uint64_t, uint64_t))(v253 + 16);
  if ((unint64_t)v58 > 0x13)
  {
    v122 = v231;
    v123 = v257;
    v62(v231, v257, v254);
    sub_1A55034B8(v123, (uint64_t)v234, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v124 = v250;
    v125 = v258;
    v126 = v260;
    sub_1A54E4334(v250, v258, v260);
    v70 = v248;
    v127 = v52;
    v79 = v255;
    sub_1A54E4334(v255, v248, v127);
    v128 = v40;
    v129 = v247;
    LOBYTE(v40) = v256;
    sub_1A54E4334(v128, v247, v256);
    sub_1A54E4334(v124, v125, v126);
    sub_1A54E4334(v79, v70, v127);
    sub_1A54E4334(v60, v129, v40);
    v130 = sub_1A594A74C();
    v131 = sub_1A594C030();
    v239 = (char *)v130;
    LODWORD(v238) = v131;
    if (!os_log_type_enabled(v130, v131))
    {
      v95 = v259;
      sub_1A54E3458(v79, v70, v259);
      sub_1A54E3458(v124, v125, v126);
      sub_1A54E3458(v60, v129, v40);
      sub_1A55034FC((uint64_t)v234, type metadata accessor for MailboxTaskLogger);
      sub_1A54E3458(v60, v129, v40);
      v92 = v125;
      sub_1A54E3458(v124, v125, v126);
      sub_1A54E3458(v79, v70, v95);

      v239 = *(char **)(v253 + 8);
      ((void (*)(char *, uint64_t))v239)(v122, v254);
      v93 = v249;
      goto LABEL_16;
    }
    v40 = swift_slowAlloc();
    v236 = (char *)swift_slowAlloc();
    v261 = v236;
    *(_DWORD *)v40 = 68160003;
    LODWORD(v262) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v40 + 8) = 256;
    v132 = v234;
    v133 = (char *)v234 + (int)v240[5];
    LOBYTE(v262) = *v133;
    sub_1A594C3CC();
    *(_WORD *)(v40 + 11) = 2082;
    v135 = *((_QWORD *)v133 + 1);
    v134 = *((_QWORD *)v133 + 2);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v262 = sub_1A55791B0(v135, v134, (uint64_t *)&v261);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v40 + 21) = 1040;
    LODWORD(v262) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v40 + 27) = 512;
    LOWORD(v262) = *((_WORD *)v133 + 12);
    sub_1A594C3CC();
    *(_WORD *)(v40 + 31) = 2160;
    v262 = 0x786F626C69616DLL;
    v60 = v252;
    sub_1A594C3CC();
    *(_WORD *)(v40 + 41) = 2085;
    v136 = *((_DWORD *)v133 + 10);
    v262 = *((_QWORD *)v133 + 4);
    v263 = v136;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v137 = sub_1A594B4A8();
    v262 = sub_1A55791B0(v137, v138, (uint64_t *)&v261);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC((uint64_t)v132, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v40 + 51) = 2048;
    v93 = v249;
    v139 = MessageIdentifierSet.count.getter(v60, v249);
    sub_1A54E3458(v60, v129, v256);
    v262 = v139;
    sub_1A594C3CC();
    sub_1A54E3458(v60, v129, v256);
    *(_WORD *)(v40 + 61) = 2048;
    v140 = v250;
    v141 = MessageIdentifierSet.count.getter(v250, v246);
    v142 = v140;
    v143 = v140;
    LOBYTE(v140) = v260;
    sub_1A54E3458(v142, v258, v260);
    v262 = v141;
    v70 = v248;
    sub_1A594C3CC();
    sub_1A54E3458(v143, v258, v140);
    *(_WORD *)(v40 + 71) = 2048;
    v144 = MessageIdentifierSet.count.getter(v255, v237);
    v95 = v259;
    sub_1A54E3458(v255, v70, v259);
    v262 = v144;
    v79 = v255;
    v92 = v258;
    sub_1A594C3CC();
    sub_1A54E3458(v79, v70, v95);
    v145 = v239;
    _os_log_impl(&dword_1A4F90000, (os_log_t)v239, (os_log_type_t)v238, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Found %ld new UIDs missing locally. (%ld locally, %ld on server)", (uint8_t *)v40, 0x51u);
    v146 = (uint64_t)v236;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v146, -1, -1);
    v147 = v40;
    LOBYTE(v40) = v256;
    MEMORY[0x1A85B1964](v147, -1, -1);

    v98 = *(char **)(v253 + 8);
    v99 = &v263;
LABEL_12:
    v148 = *((_QWORD *)v99 - 32);
    v239 = v98;
    ((void (*)(uint64_t, uint64_t))v98)(v148, v254);
LABEL_16:
    v121 = v243;
    v102 = v95;
    goto LABEL_17;
  }
  v63 = v257;
  v62(v236, v257, v254);
  sub_1A55034B8(v63, (uint64_t)v235, type metadata accessor for MailboxTaskLogger);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v64 = v40;
  v65 = v247;
  LOBYTE(v40) = v256;
  sub_1A54E4334(v64, v247, v256);
  sub_1A54E4334(v60, v65, v40);
  v66 = v250;
  v67 = v258;
  v68 = v260;
  sub_1A54E4334(v250, v258, v260);
  v69 = v255;
  v70 = v248;
  sub_1A54E4334(v255, v248, v52);
  sub_1A54E4334(v60, v65, v40);
  sub_1A54E4334(v66, v67, v68);
  sub_1A54E4334(v69, v70, v52);
  sub_1A54E4334(v60, v65, v40);
  v71 = sub_1A594A74C();
  v72 = sub_1A594C030();
  v73 = v72;
  if (os_log_type_enabled(v71, v72))
  {
    v74 = swift_slowAlloc();
    v239 = (char *)swift_slowAlloc();
    v261 = v239;
    *(_DWORD *)v74 = 68160259;
    LODWORD(v262) = 2;
    v234 = v71;
    LODWORD(v238) = v73;
    sub_1A594C3CC();
    *(_WORD *)(v74 + 8) = 256;
    v75 = v235;
    v76 = (char *)v235 + (int)v240[5];
    LOBYTE(v262) = *v76;
    sub_1A594C3CC();
    *(_WORD *)(v74 + 11) = 2082;
    v77 = *((_QWORD *)v76 + 1);
    v78 = *((_QWORD *)v76 + 2);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v262 = sub_1A55791B0(v77, v78, (uint64_t *)&v261);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v74 + 21) = 1040;
    LODWORD(v262) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v74 + 27) = 512;
    LOWORD(v262) = *((_WORD *)v76 + 12);
    v79 = v255;
    sub_1A594C3CC();
    *(_WORD *)(v74 + 31) = 2160;
    v262 = 0x786F626C69616DLL;
    sub_1A594C3CC();
    *(_WORD *)(v74 + 41) = 2085;
    v80 = *((_DWORD *)v76 + 10);
    v262 = *((_QWORD *)v76 + 4);
    v263 = v80;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v81 = sub_1A594B4A8();
    v262 = sub_1A55791B0(v81, v82, (uint64_t *)&v261);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC((uint64_t)v75, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v74 + 51) = 2048;
    v83 = MessageIdentifierSet.count.getter(v252, v249);
    sub_1A54E3458(v252, v65, v256);
    v262 = v83;
    sub_1A594C3CC();
    sub_1A54E3458(v252, v65, v256);
    *(_WORD *)(v74 + 61) = 2082;
    sub_1A54E4334(v252, v65, v256);
    MessageIdentifierSet.debugDescription.getter();
    v85 = v84;
    v87 = v86;
    sub_1A54E3458(v252, v65, v256);
    v262 = sub_1A55791B0(v85, v87, (uint64_t *)&v261);
    sub_1A594C3CC();
    v60 = v252;
    swift_bridgeObjectRelease();
    sub_1A54E3458(v60, v65, v256);
    sub_1A54E3458(v60, v65, v256);
    *(_WORD *)(v74 + 71) = 2048;
    v88 = v250;
    v40 = MessageIdentifierSet.count.getter(v250, v246);
    v89 = v258;
    v90 = v260;
    sub_1A54E3458(v88, v258, v260);
    v262 = v40;
    LOBYTE(v40) = v256;
    sub_1A594C3CC();
    v91 = v88;
    v92 = v89;
    sub_1A54E3458(v91, v89, v90);
    *(_WORD *)(v74 + 81) = 2048;
    v93 = v249;
    v94 = MessageIdentifierSet.count.getter(v79, v237);
    v95 = v259;
    sub_1A54E3458(v79, v248, v259);
    v262 = v94;
    v70 = v248;
    sub_1A594C3CC();
    sub_1A54E3458(v79, v70, v95);
    v96 = v234;
    _os_log_impl(&dword_1A4F90000, v234, (os_log_type_t)v238, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Found %ld UIDs %{public}s to be missing locally. (%ld locally, %ld on server)", (uint8_t *)v74, 0x5Bu);
    v97 = v239;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v97, -1, -1);
    MEMORY[0x1A85B1964](v74, -1, -1);

    v98 = *(char **)(v253 + 8);
    v99 = (unsigned int *)&v265;
    goto LABEL_12;
  }
  v153 = v259;
  sub_1A54E3458(v69, v70, v259);
  v154 = v260;
  sub_1A54E3458(v66, v67, v260);
  sub_1A54E3458(v60, v65, v40);
  sub_1A55034FC((uint64_t)v235, type metadata accessor for MailboxTaskLogger);
  sub_1A54E3458(v60, v65, v40);
  sub_1A54E3458(v60, v65, v40);
  sub_1A54E3458(v60, v65, v40);
  v92 = v67;
  sub_1A54E3458(v66, v67, v154);
  v155 = v69;
  sub_1A54E3458(v69, v70, v153);

  v239 = *(char **)(v253 + 8);
  ((void (*)(char *, uint64_t))v239)(v236, v254);
  v93 = v249;
  v121 = v243;
  v102 = v153;
  v79 = v155;
LABEL_17:
  v258 = a17;
  if ((a11 & 0x10000000000) != 0)
  {
    sub_1A54E3458(v79, v70, v102);
    v156 = 0;
    v248 = 1;
  }
  else
  {
    v248 = HIDWORD(a11) & 1;
    if ((v232 & 1) != 0)
    {
      v157 = sub_1A5531838(v79, v237);
      v158 = v102;
      v159 = v157;
      sub_1A54E3458(v79, v70, v158);
      if ((v159 & 0x100000000) != 0)
      {
        if ((a11 & 0x100000000) != 0)
          v156 = v159;
        else
          v156 = a11;
      }
      else
      {
        v248 = 0;
        if (a11 <= v159)
          v160 = v159;
        else
          v160 = a11;
        if ((a11 & 0x100000000) != 0)
          v156 = v159;
        else
          v156 = v160;
      }
    }
    else
    {
      sub_1A54E3458(v79, v70, v102);
      v156 = a11;
    }
  }
  v161 = v250;
  v246 = sub_1A5531838(v250, v246);
  sub_1A54E3458(v161, v92, v260);
  if ((v251 & 1) != 0)
    LODWORD(v250) = 0;
  else
    LODWORD(v250) = FetchedWindow.upperBound.getter(v233);
  v162 = sub_1A5531838(v60, v93);
  LOBYTE(v262) = BYTE5(a11) & 1;
  LOBYTE(v261) = a13 & 1;
  v163 = sub_1A55FBB10(v162 | ((HIDWORD(v162) & 1) << 32), v121 | ((HIDWORD(v121) & 1) << 32), a10, a11 & 0xFFFFFFFFFFLL | (((a11 >> 40) & 1) << 40), a12 | ((unint64_t)(a13 & 1) << 32));
  v165 = v164;
  swift_bridgeObjectRelease();
  v166 = HIDWORD(v165);
  v167 = v258;
  if (v258)
  {
    v235 = (os_log_t)HIDWORD(v165);
    v236 = (char *)v163;
    v237 = v165;
    LODWORD(v238) = v156;
    v168 = sub_1A55F9334(a14, a15 & 0xFFFFFFFF00000101, a16 | ((HIDWORD(a16) & 1) << 32), v258);
    v170 = v169;
    v171 = HIDWORD(v169);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v172 = sub_1A55C19FC(MEMORY[0x1E0DEE9D8]);
    v174 = v173;
    v175 = HIDWORD(v173);
    v262 = v172;
    v263 = v173;
    v264 = BYTE4(v173);
    v176 = *(_QWORD *)(v167 + 16);
    v255 = v170;
    v243 = v171;
    if (v176)
    {
      v234 = v168;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v177 = 0;
      do
      {
        v178 = *(_QWORD *)(v167 + v177 + 32);
        v179 = *(unsigned int *)(v167 + v177 + 40);
        v180 = *(_QWORD *)(v167 + v177 + 48);
        v181 = *(unsigned int *)(v167 + v177 + 56);
        v182 = *(unsigned __int8 *)(v167 + v177 + 60);
        v259 = *(_QWORD *)(v167 + v177 + 64);
        v183 = v259;
        v260 = v178;
        v184 = *(unsigned int *)(v167 + v177 + 72) | ((unint64_t)*(unsigned __int8 *)(v167 + v177 + 76) << 32);
        v185 = *(_BYTE *)(v167 + v177 + 44);
        sub_1A54E4334(v178, v179, v185);
        sub_1A54E4334(v180, v181, v182);
        sub_1A5503BA0(v183, v184);
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
        v174 = v174 & 0xFFFFFF0000000000 | v181 | (v182 << 32);
        MessageIdentifierSet.formUnion(_:)(v180, v174);
        v186 = v185;
        v167 = v258;
        sub_1A54E3458(v260, v179, v186);
        sub_1A54E3458(v180, v181, v182);
        sub_1A5503B8C(v259, v184);
        v177 += 48;
        --v176;
      }
      while (v176);
      swift_bridgeObjectRelease_n();
      v187 = v262;
      v174 = v263;
      v175 = v264;
      v188 = v257;
      v189 = v253;
      v190 = v254;
      v168 = v234;
      v170 = v255;
      LOBYTE(v171) = v243;
    }
    else
    {
      v187 = v172;
      swift_bridgeObjectRelease_n();
      v189 = v253;
      v190 = v254;
      v188 = v257;
    }
    v192 = v242;
    (*(void (**)(char *, uint64_t, uint64_t))(v189 + 16))(v242, v188, v190);
    v193 = v241;
    sub_1A55034B8(v188, v241, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    sub_1A54E4334((uint64_t)v168, v170, v171);
    sub_1A54E4334((uint64_t)v168, v170, v171);
    sub_1A54E4334((uint64_t)v168, v170, v171);
    sub_1A54E4334(v187, v174, v175);
    sub_1A54E4334((uint64_t)v168, v170, v171);
    sub_1A54E4334(v187, v174, v175);
    v194 = sub_1A594A74C();
    v195 = sub_1A594C030();
    LODWORD(v258) = v195;
    v196 = os_log_type_enabled(v194, v195);
    v259 = v174;
    v260 = v175;
    if (v196)
    {
      v197 = swift_slowAlloc();
      v239 = (char *)swift_slowAlloc();
      v261 = v239;
      *(_DWORD *)v197 = 68160003;
      LODWORD(v262) = 2;
      v233 = v187;
      v234 = v194;
      sub_1A594C3CC();
      *(_WORD *)(v197 + 8) = 256;
      v198 = v193 + (int)v240[5];
      LOBYTE(v262) = *(_BYTE *)v198;
      sub_1A594C3CC();
      *(_WORD *)(v197 + 11) = 2082;
      v199 = *(_QWORD *)(v198 + 8);
      v200 = *(_QWORD *)(v198 + 16);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v262 = sub_1A55791B0(v199, v200, (uint64_t *)&v261);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v197 + 21) = 1040;
      LODWORD(v262) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v197 + 27) = 512;
      LOWORD(v262) = *(_WORD *)(v198 + 24);
      sub_1A594C3CC();
      *(_WORD *)(v197 + 31) = 2160;
      v262 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v197 + 41) = 2085;
      v201 = *(_DWORD *)(v198 + 40);
      v262 = *(_QWORD *)(v198 + 32);
      v263 = v201;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v202 = sub_1A594B4A8();
      v262 = sub_1A55791B0(v202, v203, (uint64_t *)&v261);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC(v241, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v197 + 51) = 2048;
      v241 = v255 & 0xFFFFFFFFFFLL;
      v204 = MessageIdentifierSet.count.getter((uint64_t)v168, v255 & 0xFFFFFFFFFFLL);
      sub_1A54E3458((uint64_t)v168, v255, v171);
      v262 = v204;
      v240 = &v263;
      sub_1A594C3CC();
      sub_1A54E3458((uint64_t)v168, v255, v171);
      *(_WORD *)(v197 + 61) = 2082;
      sub_1A54E4334((uint64_t)v168, v255, v171);
      MessageIdentifierSet.debugDescription.getter();
      v206 = v205;
      v208 = v207;
      sub_1A54E3458((uint64_t)v168, v255, v171);
      v262 = sub_1A55791B0(v206, v208, (uint64_t *)&v261);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A54E3458((uint64_t)v168, v255, v171);
      sub_1A54E3458((uint64_t)v168, v255, v171);
      *(_WORD *)(v197 + 71) = 2082;
      v209 = v233;
      LOBYTE(v206) = v260;
      sub_1A54E4334(v233, v174, v260);
      v210 = v174 | ((unint64_t)v206 << 32);
      MessageIdentifierSet.debugDescription.getter();
      v212 = v211;
      v214 = v213;
      sub_1A54E3458(v209, v174, v206);
      v262 = sub_1A55791B0(v212, v214, (uint64_t *)&v261);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A54E3458(v209, v174, v206);
      v215 = v174;
      v216 = v209;
      sub_1A54E3458(v209, v215, v206);
      v217 = v234;
      _os_log_impl(&dword_1A4F90000, v234, (os_log_type_t)v258, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Received %ld UIDs for temporarily growing window-of-interest: %{public}s (did query %{public}s).", (uint8_t *)v197, 0x51u);
      v218 = v239;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v218, -1, -1);
      v219 = v197;
      v170 = v255;
      MEMORY[0x1A85B1964](v219, -1, -1);

      (*(void (**)(char *, uint64_t))(v253 + 8))(v242, v254);
      v220 = v241;
    }
    else
    {
      sub_1A54E3458((uint64_t)v168, v170, v171);
      sub_1A55034FC(v193, type metadata accessor for MailboxTaskLogger);
      sub_1A54E3458((uint64_t)v168, v170, v171);
      sub_1A54E3458((uint64_t)v168, v170, v171);
      sub_1A54E3458((uint64_t)v168, v170, v171);
      sub_1A54E3458(v187, v174, v175);
      sub_1A54E3458(v187, v174, v175);

      ((void (*)(char *, uint64_t))v239)(v192, v190);
      v220 = v170 & 0xFFFFFFFFFFLL;
      v221 = v174;
      v216 = v187;
      v210 = v221 | ((unint64_t)v175 << 32);
    }
    v165 = v252;
    MessageIdentifierSet.union(_:)((uint64_t)v168, v220, v252, v249);
    v166 = v222;
    v191 = v223;
    v40 = HIDWORD(v223);
    sub_1A54E3458(v165, v247, v256);
    sub_1A54E3458((uint64_t)v168, v170, v243);
    v224 = v237;
    v225 = (uint64_t)v236;
    MessageIdentifierSet.union(_:)(v216, v210, (uint64_t)v236, v237 & 0xFFFFFFFFFFLL);
    v163 = v226;
    LODWORD(v165) = v227;
    v228 = HIDWORD(v227);
    sub_1A54E3458(v225, v224, (char)v235);
    sub_1A54E3458(v216, v259, v260);
    v60 = v166;
    LOBYTE(v166) = v228;
    v156 = v238;
  }
  else
  {
    v191 = v247;
  }
  result = sub_1A55034FC(v257, type metadata accessor for MailboxTaskLogger);
  v229 = v244;
  *v244 = v60;
  *((_DWORD *)v229 + 2) = v191;
  *((_BYTE *)v229 + 12) = v40;
  v230 = BYTE4(v246);
  *((_DWORD *)v229 + 4) = v246;
  *((_BYTE *)v229 + 20) = v230 & 1;
  *((_DWORD *)v229 + 6) = v250;
  *((_BYTE *)v229 + 28) = v251 & 1;
  *((_DWORD *)v229 + 8) = v156;
  *((_BYTE *)v229 + 36) = v248;
  v229[5] = v163;
  *((_DWORD *)v229 + 12) = v165;
  *((_BYTE *)v229 + 52) = v166;
  return result;
}

double sub_1A55F5FEC@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>, unint64_t a10, unsigned __int8 a11, uint64_t a12, unint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  NSObject *v86;
  os_log_type_t v87;
  int v88;
  _BOOL4 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  NSObject *v94;
  uint64_t v95;
  unint64_t v96;
  int v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  char v103;
  int v104;
  uint64_t v105;
  __int128 v106;
  double result;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  NSObject *v111;
  os_log_type_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  int v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  unint64_t v131;
  uint64_t v132;
  unint64_t v133;
  char *v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  int v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  uint64_t v153;
  unint64_t v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  int v163;
  int v164;
  uint64_t v165;
  _OWORD v166[2];
  _BYTE v167[21];

  LODWORD(v142) = a8;
  v141 = a7;
  v148 = a9;
  v162 = a18;
  v158 = a19;
  v159 = a17;
  v146 = a16;
  v161 = a15;
  v154 = a13;
  v155 = a14;
  v157 = a12;
  v145 = a11;
  v151 = HIDWORD(a2);
  v160 = HIDWORD(a6);
  v156 = a10;
  v137 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v137);
  v153 = (uint64_t)&v132 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v139 = (uint64_t)&v132 - v27;
  MEMORY[0x1E0C80A78](v28);
  v136 = (uint64_t)&v132 - v29;
  v140 = sub_1A594A764();
  v143 = *(_QWORD *)(v140 - 8);
  MEMORY[0x1E0C80A78](v140);
  v138 = (char *)&v132 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&v132 - v32;
  v34 = sub_1A54E3414();
  v150 = a2;
  v147 = a3;
  v152 = a4 & 0xFFFFFFFFFFLL;
  v149 = a1;
  v144 = a2 & 0xFFFFFFFFFFLL;
  MessageIdentifierSet.union(_:)(a3, a4 & 0xFFFFFFFFFFLL, a1, a2 & 0xFFFFFFFFFFLL);
  v36 = v35;
  v38 = v37;
  v39 = HIDWORD(v37);
  MessageIdentifierSet.union(_:)(a5, a6 & 0xFFFFFFFFFFLL, v35, v37 & 0xFFFFFFFFFFLL);
  v41 = v40;
  v43 = v42;
  v44 = HIDWORD(v42);
  v45 = a5;
  v46 = v162;
  sub_1A54E3458(v45, a6, v160);
  sub_1A54E3458(v36, v38, v39);
  if (v46)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54E3458(v41, v43, v44);
    v47 = v146;
    v48 = v159;
    v49 = sub_1A55F9334(v161, v146 & 0xFFFFFFFF00000101, v159 | ((HIDWORD(v159) & 1) << 32), v46);
    v51 = v50;
    swift_bridgeObjectRelease();
    v52 = v149;
    MessageIdentifierSet.union(_:)(v49, v51 & 0xFFFFFFFFFFLL, v149, v144);
    v160 = v53;
    LODWORD(v55) = v54;
    v56 = HIDWORD(v54);
    sub_1A54E3458(v52, v150, v151);
    sub_1A54E3458(v49, v51, SBYTE4(v51));
    LODWORD(v144) = 0;
    v143 = 0;
    LODWORD(v142) = 1;
    v57 = v148;
    v58 = v158;
    v59 = v147;
    v60 = v48;
LABEL_10:
    v103 = v145;
    goto LABEL_11;
  }
  v55 = v149;
  v56 = v150;
  v134 = v33;
  v61 = v143;
  v135 = v34;
  if ((v142 & 1) != 0)
  {
    sub_1A54E3458(v41, v43, v44);
    v143 = 0;
    LODWORD(v144) = 1;
    LODWORD(v142) = 1;
    v160 = v55;
    LODWORD(v55) = v56;
    LOBYTE(v56) = v151;
    v57 = v148;
    v58 = v158;
    v60 = v159;
    v59 = v147;
    v47 = v146;
    goto LABEL_10;
  }
  v62 = MessageIdentifierSet.count.getter(v41, v43 & 0xFFFFFFFFFFLL);
  v63 = v159;
  if (v62 <= v141)
  {
    sub_1A54E3458(v41, v43, v44);
    v143 = 0;
    LODWORD(v144) = 1;
    LODWORD(v142) = 1;
    v160 = v55;
    LODWORD(v55) = v56;
    LOBYTE(v56) = v151;
    v57 = v148;
    v58 = v158;
    v59 = v147;
    v47 = v146;
    v103 = v145;
    v60 = v63;
    goto LABEL_11;
  }
  v64 = sub_1A55E1944(v141, v41, v43 & 0xFFFFFFFFFFLL);
  v66 = v65;
  v67 = HIDWORD(v65);
  sub_1A54E3458(v41, v43, v44);
  MessageIdentifierSet.intersection(_:)(v55, v144, v64, v66 & 0xFFFFFFFFFFLL);
  v68 = v55;
  v70 = v69;
  v72 = v71;
  v133 = HIDWORD(v71);
  sub_1A54E3458(v68, v56, v151);
  sub_1A54E3458(v64, v66, v67);
  v151 = v72;
  v73 = v72 & 0xFFFFFFFFFFLL;
  MessageIdentifierSet.ranges.getter(v70, v72 & 0xFFFFFFFFFFLL);
  v75 = v74;
  v77 = v76;
  v78 = HIDWORD(v76);
  v79 = v76 & 0xFFFFFFFFFFLL;
  v80 = MessageIdentifierSet.RangeView.endIndex.getter(v74, v76 & 0xFFFFFFFFFFLL);
  v160 = v70;
  if (v80)
  {
    MessageIdentifierSet.RangeView.subscript.getter(0, v75, v79);
    sub_1A54E3458(v75, v77, v78);
    v81 = v166[0];
    v82 = sub_1A5531838(v70, v73);
    if ((v82 & 0x100000000) == 0)
    {
      v144 = v82;
      LODWORD(v149) = v81;
      v83 = v134;
      v58 = v158;
      v84 = v140;
      (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v134, v158, v140);
      v85 = v136;
      sub_1A55034B8(v58, v136, type metadata accessor for MailboxTaskLogger);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v86 = sub_1A594A74C();
      v87 = sub_1A594C030();
      v88 = v87;
      v89 = os_log_type_enabled(v86, v87);
      v90 = v160;
      if (v89)
      {
        v91 = swift_slowAlloc();
        v150 = v73;
        v92 = v91;
        v142 = swift_slowAlloc();
        v165 = v142;
        *(_DWORD *)v92 = 68159747;
        LODWORD(v166[0]) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v92 + 8) = 256;
        v93 = v85 + *(int *)(v137 + 20);
        LOBYTE(v166[0]) = *(_BYTE *)v93;
        sub_1A594C3CC();
        *(_WORD *)(v92 + 11) = 2082;
        v94 = v86;
        LODWORD(v139) = v88;
        v95 = *(_QWORD *)(v93 + 8);
        v96 = *(_QWORD *)(v93 + 16);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        *(_QWORD *)&v166[0] = sub_1A55791B0(v95, v96, &v165);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v92 + 21) = 1040;
        LODWORD(v166[0]) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v92 + 27) = 512;
        LOWORD(v166[0]) = *(_WORD *)(v93 + 24);
        sub_1A594C3CC();
        *(_WORD *)(v92 + 31) = 2160;
        *(_QWORD *)&v166[0] = 0x786F626C69616DLL;
        sub_1A594C3CC();
        *(_WORD *)(v92 + 41) = 2085;
        v97 = *(_DWORD *)(v93 + 40);
        v90 = v160;
        v58 = v158;
        *(_QWORD *)&v166[0] = *(_QWORD *)(v93 + 32);
        DWORD2(v166[0]) = v97;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v98 = sub_1A594B4A8();
        *(_QWORD *)&v166[0] = sub_1A55791B0(v98, v99, &v165);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55034FC(v85, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v92 + 51) = 2048;
        *(_QWORD *)&v166[0] = v141;
        sub_1A594C3CC();
        *(_WORD *)(v92 + 61) = 2082;
        v163 = v144;
        v164 = v149;
        static MessageIdentifier.... infix(_:_:)();
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796E58);
        MessageIdentifierRange.debugDescription.getter();
        *(_QWORD *)&v166[0] = sub_1A55791B0(v100, v101, &v165);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A4F90000, v86, (os_log_type_t)v139, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Limiting server UIDs to %ld UIDs in range %{public}s.", (uint8_t *)v92, 0x47u);
        v102 = v142;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v102, -1, -1);
        MEMORY[0x1A85B1964](v92, -1, -1);

        (*(void (**)(char *, uint64_t))(v143 + 8))(v134, v140);
        v57 = v148;
        v59 = v147;
        goto LABEL_19;
      }
      sub_1A55034FC(v85, type metadata accessor for MailboxTaskLogger);

      (*(void (**)(char *, uint64_t))(v61 + 8))(v83, v84);
      goto LABEL_18;
    }
  }
  else
  {
    sub_1A54E3458(v75, v77, v78);
  }
  v108 = v138;
  v58 = v158;
  v109 = v140;
  (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v138, v158, v140);
  v110 = v139;
  sub_1A55034B8(v58, v139, type metadata accessor for MailboxTaskLogger);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v111 = sub_1A594A74C();
  v112 = sub_1A594C030();
  if (!os_log_type_enabled(v111, v112))
  {
    sub_1A55034FC(v110, type metadata accessor for MailboxTaskLogger);

    (*(void (**)(char *, uint64_t))(v61 + 8))(v108, v109);
    v57 = v148;
    v59 = v147;
    v90 = v160;
    goto LABEL_19;
  }
  v113 = swift_slowAlloc();
  v150 = v73;
  v114 = v113;
  v149 = swift_slowAlloc();
  v165 = v149;
  *(_DWORD *)v114 = 68159491;
  LODWORD(v166[0]) = 2;
  sub_1A594C3CC();
  *(_WORD *)(v114 + 8) = 256;
  v115 = v110 + *(int *)(v137 + 20);
  LOBYTE(v166[0]) = *(_BYTE *)v115;
  sub_1A594C3CC();
  *(_WORD *)(v114 + 11) = 2082;
  v116 = *(_QWORD *)(v115 + 8);
  v117 = *(_QWORD *)(v115 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  *(_QWORD *)&v166[0] = sub_1A55791B0(v116, v117, &v165);
  sub_1A594C3CC();
  swift_bridgeObjectRelease();
  *(_WORD *)(v114 + 21) = 1040;
  LODWORD(v166[0]) = 2;
  sub_1A594C3CC();
  *(_WORD *)(v114 + 27) = 512;
  LOWORD(v166[0]) = *(_WORD *)(v115 + 24);
  v90 = v160;
  v58 = v158;
  sub_1A594C3CC();
  *(_WORD *)(v114 + 31) = 2160;
  *(_QWORD *)&v166[0] = 0x786F626C69616DLL;
  sub_1A594C3CC();
  *(_WORD *)(v114 + 41) = 2085;
  v118 = *(_DWORD *)(v115 + 40);
  *(_QWORD *)&v166[0] = *(_QWORD *)(v115 + 32);
  DWORD2(v166[0]) = v118;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v119 = sub_1A594B4A8();
  *(_QWORD *)&v166[0] = sub_1A55791B0(v119, v120, &v165);
  sub_1A594C3CC();
  swift_bridgeObjectRelease();
  sub_1A55034FC(v139, type metadata accessor for MailboxTaskLogger);
  *(_WORD *)(v114 + 51) = 2048;
  *(_QWORD *)&v166[0] = v141;
  sub_1A594C3CC();
  _os_log_impl(&dword_1A4F90000, v111, v112, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Limiting server UIDs to %ld UIDs.", (uint8_t *)v114, 0x3Du);
  v121 = v149;
  swift_arrayDestroy();
  MEMORY[0x1A85B1964](v121, -1, -1);
  MEMORY[0x1A85B1964](v114, -1, -1);

  (*(void (**)(char *, uint64_t))(v143 + 8))(v138, v140);
LABEL_18:
  v57 = v148;
  v59 = v147;
LABEL_19:
  MessageIdentifierSet.startIndex.getter();
  v123 = v122;
  v125 = v124;
  MessageIdentifierSet.endIndex.getter();
  if (v123 == v127 && v125 == v126)
  {
    LODWORD(v144) = 0;
    v143 = 0;
    LODWORD(v142) = 1;
    LODWORD(v55) = v151;
    LOBYTE(v56) = v133;
  }
  else
  {
    v128 = v90;
    v129 = v90;
    v55 = v151;
    v130 = v133;
    sub_1A54E4334(v129, v151, v133);
    MessageIdentifierSet.subscript.getter();
    sub_1A54E3458(v128, v55, v130);
    LODWORD(v144) = 0;
    LODWORD(v142) = 0;
    v143 = LODWORD(v166[0]);
    LOBYTE(v56) = v130;
  }
  v103 = v145;
  v60 = v159;
  v47 = v146;
LABEL_11:
  v104 = v103 & 1;
  v105 = v153;
  sub_1A55034B8(v58, v153, type metadata accessor for MailboxTaskLogger);
  LOBYTE(v166[0]) = BYTE5(v154) & 1;
  LOBYTE(v165) = BYTE4(v155) & 1;
  v131 = v155 | ((unint64_t)(BYTE4(v155) & 1) << 32);
  sub_1A55F4258(v160, v55 | ((unint64_t)v56 << 32), v143 | ((unint64_t)v142 << 32), v144, v59, v152, v156, v104, (uint64_t *)v166, v157, v154 & 0xFFFFFFFFFFLL | (((v154 >> 40) & 1) << 40), v131, SBYTE4(v131), v161, v47, v60, v162, v105);
  sub_1A55034FC(v58, type metadata accessor for MailboxTaskLogger);
  v106 = v166[1];
  *(_OWORD *)v57 = v166[0];
  *(_OWORD *)(v57 + 16) = v106;
  result = *(double *)v167;
  *(_OWORD *)(v57 + 32) = *(_OWORD *)v167;
  *(_QWORD *)(v57 + 45) = *(_QWORD *)&v167[13];
  return result;
}

uint64_t sub_1A55F6F00@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, __int16 a8@<W7>, uint64_t a9@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  char v19;
  int v20;
  char v21;
  char v22;
  unint64_t v23;
  char v28;
  int v29;
  char v30;
  int v31;
  char v32;
  int v33;
  char v34;
  int v35;
  uint64_t v36;

  v13 = *(_QWORD *)a7;
  v14 = *(unsigned int *)(a7 + 8);
  v15 = *(unsigned __int8 *)(a7 + 12);
  v28 = *(_BYTE *)(a7 + 20);
  v29 = *(_DWORD *)(a7 + 16);
  v30 = *(_BYTE *)(a7 + 28);
  v31 = *(_DWORD *)(a7 + 24);
  v32 = *(_BYTE *)(a7 + 36);
  v33 = *(_DWORD *)(a7 + 32);
  v16 = *(_QWORD *)(a7 + 40);
  v34 = *(_BYTE *)(a7 + 52);
  v35 = *(_DWORD *)(a7 + 48);
  v17 = sub_1A5531838(*(_QWORD *)a7, v14 | (v15 << 32));
  result = sub_1A5531838(v13, v14 | (v15 << 32));
  v19 = BYTE4(result);
  v36 = v16;
  if ((result & 0x100000000) != 0)
  {
    v20 = result;
  }
  else
  {
    if ((_DWORD)result == -1)
    {
      __break(1u);
      return result;
    }
    v20 = result + 1;
  }
  if ((a1 & 1) != 0)
    v21 = 1;
  else
    v21 = 2;
  if ((a8 & 0xFF00) != 0)
    v22 = 0;
  else
    v22 = v21;
  v23 = sub_1A552F010(a2);
  swift_bridgeObjectRelease();
  sub_1A5503B8C(a3, a4);
  result = sub_1A5531838(a5, a6 & 0xFFFFFFFFFFLL);
  *(_DWORD *)a9 = v17;
  *(_BYTE *)(a9 + 4) = BYTE4(v17) & 1;
  *(_DWORD *)(a9 + 8) = v20;
  *(_BYTE *)(a9 + 12) = v19 & 1;
  *(_QWORD *)(a9 + 16) = v13;
  *(_DWORD *)(a9 + 24) = v14;
  *(_BYTE *)(a9 + 28) = v15;
  *(_DWORD *)(a9 + 32) = v29;
  *(_BYTE *)(a9 + 36) = v28 & 1;
  *(_DWORD *)(a9 + 40) = v31;
  *(_BYTE *)(a9 + 44) = v30 & 1;
  *(_DWORD *)(a9 + 48) = v33;
  *(_BYTE *)(a9 + 52) = v32 & 1;
  *(_QWORD *)(a9 + 56) = v36;
  *(_DWORD *)(a9 + 64) = v35;
  *(_BYTE *)(a9 + 68) = v34;
  *(_BYTE *)(a9 + 69) = v22;
  *(_DWORD *)(a9 + 72) = v23;
  *(_BYTE *)(a9 + 76) = BYTE4(v23) & 1;
  *(_DWORD *)(a9 + 80) = result;
  *(_BYTE *)(a9 + 84) = BYTE4(result) & 1;
  return result;
}

uint64_t sub_1A55F70AC(__int128 *a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  unint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  char v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t result;
  uint64_t v50;
  _QWORD v51[2];
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  unsigned int v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  _OWORD v76[2];
  uint64_t v77;
  int v78;
  char v79;
  __int128 v80[3];
  _OWORD v81[2];
  __int128 v82[2];
  __int128 v83;
  char v84;

  v61 = a4;
  v56 = (_QWORD *)type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v56);
  v12 = (char *)v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1A594A764();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = a5;
  sub_1A5534334(a5, (uint64_t)&v63);
  v17 = sub_1A5534334((uint64_t)&v63, (uint64_t)&v78);
  v58 = a3;
  v57 = a2;
  if ((v79 & 1) == 0)
  {
    v59 = (_QWORD *)a6;
    v17 = sub_1A5540368(a2, a3, v78);
    a6 = (uint64_t)v59;
    if ((v17 & 0x100000000) == 0)
    {
      v55 = v17;
      v18 = v14;
      (*(void (**)(char *, _QWORD *, uint64_t))(v14 + 16))(v16, v59, v13);
      v19 = (uint64_t)v12;
      sub_1A55034B8(a6, (uint64_t)v12, type metadata accessor for MailboxTaskLogger);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v20 = sub_1A594A74C();
      v21 = sub_1A594C00C();
      v22 = v21;
      if (os_log_type_enabled(v20, v21))
      {
        v23 = swift_slowAlloc();
        v54 = v22;
        v24 = v23;
        v52 = swift_slowAlloc();
        *(_QWORD *)&v80[0] = v52;
        *(_DWORD *)v24 = 68159491;
        LODWORD(v64) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v24 + 8) = 256;
        v25 = *((int *)v56 + 5);
        v56 = (_QWORD *)v18;
        v26 = &v12[v25];
        LOBYTE(v64) = v12[v25];
        sub_1A594C3CC();
        *(_WORD *)(v24 + 11) = 2082;
        v51[1] = v24 + 13;
        v53 = v13;
        v28 = *((_QWORD *)v26 + 1);
        v27 = *((_QWORD *)v26 + 2);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        *(_QWORD *)&v64 = sub_1A55791B0(v28, v27, (uint64_t *)v80);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v24 + 21) = 1040;
        LODWORD(v64) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v24 + 27) = 512;
        LOWORD(v64) = *((_WORD *)v26 + 12);
        sub_1A594C3CC();
        *(_WORD *)(v24 + 31) = 2160;
        *(_QWORD *)&v64 = 0x786F626C69616DLL;
        sub_1A594C3CC();
        *(_WORD *)(v24 + 41) = 2085;
        v29 = *((_DWORD *)v26 + 10);
        *(_QWORD *)&v64 = *((_QWORD *)v26 + 4);
        DWORD2(v64) = v29;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v30 = sub_1A594B4A8();
        *(_QWORD *)&v64 = sub_1A55791B0(v30, v31, (uint64_t *)v80);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55034FC(v19, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v24 + 51) = 1024;
        LODWORD(v64) = v55;
        sub_1A594C3CC();
        _os_log_impl(&dword_1A4F90000, v20, (os_log_type_t)v54, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Updating server next UID to %u.", (uint8_t *)v24, 0x39u);
        v32 = v52;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v32, -1, -1);
        MEMORY[0x1A85B1964](v24, -1, -1);

        v17 = ((uint64_t (*)(char *, uint64_t))v56[1])(v16, v53);
      }
      else
      {
        sub_1A55034FC((uint64_t)v12, type metadata accessor for MailboxTaskLogger);

        v17 = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v16, v13);
      }
      a6 = (uint64_t)v59;
    }
  }
  v59 = v51;
  MEMORY[0x1E0C80A78](v17);
  v56 = &v51[-6];
  v51[-4] = v60;
  v51[-3] = a6;
  v51[-2] = v61;
  v33 = a1[13];
  v76[0] = a1[12];
  v76[1] = v33;
  v77 = *((_QWORD *)a1 + 28);
  v34 = a1[9];
  v72 = a1[8];
  v73 = v34;
  v35 = a1[11];
  v74 = a1[10];
  v75 = v35;
  v36 = a1[5];
  v68 = a1[4];
  v69 = v36;
  v37 = a1[7];
  v70 = a1[6];
  v71 = v37;
  v38 = a1[1];
  v64 = *a1;
  v65 = v38;
  v39 = a1[3];
  v66 = a1[2];
  v67 = v39;
  v80[2] = v75;
  v81[0] = v76[0];
  *(_OWORD *)((char *)v81 + 12) = *(_OWORD *)((char *)v76 + 12);
  v80[0] = v73;
  v80[1] = v74;
  sub_1A55212B8(v80, v82);
  v40 = BYTE1(v65);
  v41 = *((_QWORD *)&v65 + 1);
  v42 = BYTE10(v64);
  v43 = *((_QWORD *)&v66 + 1);
  v44 = v67;
  v45 = v66;
  v46 = v65;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v47 = sub_1A558E3A4();
  v48 = sub_1A558E7E0(v46, v40 & 1, v41, v45, v43, v42, v44, v47);
  result = (uint64_t)sub_1A55212B8(v82, &v83);
  if (v84 == 1)
  {
    v62 = v83;
    sub_1A55E5928((uint64_t)v82);
    sub_1A551B2B0((uint64_t)&v62, v57, v58, 0, (void (*)(uint64_t, uint64_t))sub_1A55F7648, v56, v48 & 0x1010101FFFF01);
    result = sub_1A55E5958((uint64_t)v82);
    v50 = v62;
    *((_QWORD *)a1 + 19) = 0;
    *((_QWORD *)a1 + 20) = 0;
    *((_QWORD *)a1 + 18) = v50;
    *((_BYTE *)a1 + 168) = 1;
  }
  return result;
}

uint64_t sub_1A55F7648(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A55F0244(a1, a2 & 0x1010101FFFF01, *(_QWORD *)(v2 + 16), *(NSObject **)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1A55F7668(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(unsigned int *)(a1 + 64);
  v6 = *(unsigned __int8 *)(a1 + 68);
  a2(*(_QWORD *)(a1 + 16), *(unsigned int *)(a1 + 24), *(unsigned __int8 *)(a1 + 28));
  a2(v4, v5, v6);
  return a1;
}

uint64_t sub_1A55F76C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(unsigned int *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(unsigned int *)(a1 + 56);
  v6 = *(_BYTE *)(a1 + 28);
  v7 = *(_BYTE *)(a1 + 60);
  sub_1A54E3458(*(_QWORD *)a1, *(unsigned int *)(a1 + 8), *(_BYTE *)(a1 + 12));
  sub_1A54E3458(v2, v3, v6);
  sub_1A54E3458(v4, v5, v7);
  return a1;
}

uint64_t sub_1A55F7748(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unsigned int *v5;
  uint64_t i;
  uint64_t v7;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  if (*(_DWORD *)(a2 + 32) == (_DWORD)result)
  {
    v3 = *(unsigned int *)(a2 + 48) | ((unint64_t)*(unsigned __int8 *)(a2 + 52) << 32);
    v4 = *(_QWORD *)(a2 + 40);
LABEL_11:
    sub_1A55F8484(v4, v3);
    return v4;
  }
  if (v2 == 1)
    return 0;
  v5 = (unsigned int *)(a2 + 72);
  for (i = 1; ; ++i)
  {
    v7 = i + 1;
    if (__OFADD__(i, 1))
      break;
    if (*(v5 - 4) == (_DWORD)result)
    {
      v4 = *((_QWORD *)v5 - 1);
      v3 = *v5 | ((unint64_t)*((unsigned __int8 *)v5 + 4) << 32);
      goto LABEL_11;
    }
    v5 += 6;
    if (v7 == v2)
      return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A55F77F0(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t i;
  uint64_t v5;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  if (*(_DWORD *)(a2 + 32) == (_DWORD)result)
  {
    v3 = a2 + 40;
    return *(_QWORD *)v3;
  }
  if (v2 == 1)
    return 0;
  v3 = a2 + 56;
  for (i = 1; ; ++i)
  {
    v5 = i + 1;
    if (__OFADD__(i, 1))
      break;
    if (*(_DWORD *)(v3 - 8) == (_DWORD)result)
      return *(_QWORD *)v3;
    v3 += 16;
    if (v5 == v2)
      return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A55F7858(char a1, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  int v8;
  unint64_t v9;
  _QWORD v11[3];
  uint64_t v12;
  char v13;

  v13 = a1;
  v11[2] = &v13;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v3 = sub_1A5628390((uint64_t)sub_1A55F8494, (uint64_t)v11, a2);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    sub_1A54F4F58(0, v4, 0);
    v5 = v12;
    v6 = *(_QWORD *)(v12 + 16);
    v7 = 32;
    do
    {
      v8 = *(_DWORD *)(v3 + v7);
      v12 = v5;
      v9 = *(_QWORD *)(v5 + 24);
      if (v6 >= v9 >> 1)
      {
        sub_1A54F4F58(v9 > 1, v6 + 1, 1);
        v5 = v12;
      }
      *(_QWORD *)(v5 + 16) = v6 + 1;
      *(_DWORD *)(v5 + 4 * v6 + 32) = v8;
      v7 += 24;
      ++v6;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v5;
}

void sub_1A55F7970(const void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  int *v28;
  int v29;
  uint64_t v30;
  __int128 *v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t (*v47)(uint64_t);
  uint64_t v48;
  uint64_t (*v49)(uint64_t);
  uint64_t v50;
  unint64_t v51;
  char *v52;
  uint64_t v53;
  unint64_t v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v63;
  ValueMetadata *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  ValueMetadata *v72;
  unsigned int v73;
  ValueMetadata *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unsigned int *v78;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  _QWORD v87[3];
  unint64_t v88;
  uint64_t v89;
  int v90;
  unint64_t v91;
  unint64_t v92;
  unsigned int v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  int v102;
  unsigned int v103;
  _DWORD v104[148];
  _BYTE v105[584];
  _BYTE v106[584];
  __int128 v107;
  __int128 v108;
  __int128 v109;
  _BYTE v110[600];

  v5 = v4;
  sub_1A552316C(a1, v105);
  sub_1A552316C(v105, v110);
  v101 = type metadata accessor for TaskHistory.Running(0);
  v10 = *(_QWORD *)(v101 - 8);
  MEMORY[0x1E0C80A78](v101);
  v95 = (unint64_t)v87 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v96 = (unint64_t)v87 - v13;
  MEMORY[0x1E0C80A78](v14);
  v16 = (_QWORD *)((char *)v87 - v15);
  MEMORY[0x1E0C80A78](v17);
  v100 = (unint64_t)v87 - v18;
  if (*(_QWORD *)(v4 + 280))
    sub_1A55F9E8C(a1, a2, a3, a4);
  v97 = a4;
  v19 = sub_1A55F7858(2, a4);
  v20 = *(_QWORD *)(v19 + 16);
  if (!v20)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    return;
  }
  v99 = v5;
  v21 = 0;
  while ((sub_1A55E59A8(*(_DWORD *)(v19 + 4 * v21 + 32), a2, a3) & 1) == 0)
  {
    if (v20 == ++v21)
      goto LABEL_7;
  }
  swift_bridgeObjectRelease();
  if ((*(_BYTE *)(v99 + 190) & 1) != 0)
  {
    sub_1A552316C(a1, v106);
    if (sub_1A5523B90((uint64_t)v106) == 11)
    {
      v22 = *(_QWORD *)sub_1A5524678((uint64_t)v106);
      v23 = sub_1A54E3414();
      v24 = MessageIdentifierSet.init()(&type metadata for UID, v23);
      v26 = HIDWORD(v25);
      *(_QWORD *)&v107 = v24;
      DWORD2(v107) = v25;
      BYTE12(v107) = BYTE4(v25);
      v27 = *(_QWORD *)(v22 + 16);
      if (v27)
      {
        v28 = (int *)(v22 + 32);
        sub_1A552316C(v110, v104);
        sub_1A5524678((uint64_t)v104);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        do
        {
          v29 = *v28++;
          v102 = v29;
          __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
          MessageIdentifierSet.insert(_:)();
          --v27;
        }
        while (v27);
        sub_1A5529E00((uint64_t)a1);
        v30 = v107;
        LODWORD(v25) = DWORD2(v107);
        v26 = BYTE12(v107);
      }
      else
      {
        v30 = v24;
      }
      v55 = v25;
LABEL_29:
      sub_1A54E3414();
      v97 = v55;
      v98 = v26;
      MessageIdentifierSet.startIndex.getter();
      v57 = v56;
      v59 = v58;
      v96 = v55 | ((unint64_t)v26 << 32);
      MessageIdentifierSet.endIndex.getter();
      if (v57 != v61 || v59 != v60)
      {
        v63 = v98;
        v94 = v99 + 224;
        v95 = (unint64_t)v26 << 32;
        v64 = &type metadata for UID;
        v65 = v97;
        do
        {
          v69 = v65 | v95;
          v101 = v101 & 0xFFFFFF0000000000 | v65 | v95;
          MessageIdentifierSet.subscript.getter();
          v70 = v59;
          v71 = v57;
          v72 = v64;
          v73 = v104[0];
          sub_1A54E4334(v30, v65, v63);
          v100 = v100 & 0xFFFFFF0000000000 | v69;
          v74 = v72;
          v57 = MessageIdentifierSet.index(_:offsetBy:)(v71, v70, 1, v30, v100);
          v59 = v75;
          sub_1A54E3458(v30, v65, v63);
          v76 = *(_QWORD *)(v99 + 168);
          v77 = *(_QWORD *)(v76 + 16);
          if (v77)
          {
            v78 = (unsigned int *)(v76 + 36);
            while (v73 < *(v78 - 1) || *v78 < v73)
            {
              v78 += 3;
              if (!--v77)
                goto LABEL_35;
            }
            v103 = v73;
            __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
            MessageIdentifierSet.insert(_:)();
          }
LABEL_35:
          v64 = v74;
          MessageIdentifierSet.endIndex.getter();
        }
        while (v57 != v67 || v59 != v66);
      }
      sub_1A54E3458(v30, v97, v98);
    }
    return;
  }
  sub_1A552316C(a1, v106);
  if (sub_1A5523B90((uint64_t)v106) != 12)
    return;
  v31 = (__int128 *)sub_1A5524678((uint64_t)v106);
  v32 = v31[1];
  v107 = *v31;
  v108 = v32;
  v109 = v31[2];
  ExtendedSearchResponse.matchedUIDs.getter();
  if (BYTE4(v34) == 255)
    return;
  v30 = v33;
  v35 = v34;
  sub_1A552316C(v110, v104);
  v36 = sub_1A5524678((uint64_t)v104);
  v37 = *(_QWORD *)(v36 + 8);
  if (!v37)
  {
    sub_1A5503B8C(v30, v35);
    return;
  }
  v92 = v35;
  v38 = *(_QWORD *)v36;
  v39 = *(_QWORD *)(v36 + 16);
  v40 = *(_QWORD *)(v36 + 24);
  v90 = *(unsigned __int8 *)(v36 + 32);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v89 = v38;
  v41 = Tag.init(_:)(v38, v37);
  if ((v42 & 1) != 0 || (v43 = *(_QWORD *)(a2 + 16)) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_49:
    sub_1A55240D4(v89, v37);
    goto LABEL_50;
  }
  v87[1] = v40;
  v87[2] = v39;
  v88 = v37;
  v98 = HIDWORD(v92);
  v93 = v41;
  v91 = (unint64_t)v41 >> 32;
  v44 = a2 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  v45 = *(_QWORD *)(v10 + 72);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v46 = 0;
  v47 = type metadata accessor for TaskHistory.Running;
  v48 = v100;
  while (1)
  {
    sub_1A55034B8(v44, v48, v47);
    sub_1A55034B8(v48, (uint64_t)v16, v47);
    if (swift_getEnumCaseMultiPayload() != 1)
      break;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A55034FC((uint64_t)v16, v47);
LABEL_22:
    sub_1A55034FC(v48, v47);
    swift_bridgeObjectRelease();
    ++v46;
    v44 += v45;
    if (v43 == v46)
      goto LABEL_26;
  }
  v94 = *v16;
  v49 = v47;
  v50 = v45;
  v51 = v43;
  v52 = (char *)v16 + *(int *)(__swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308) + 64);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v53 = (uint64_t)v52;
  v43 = v51;
  v45 = v50;
  v47 = v49;
  sub_1A55034FC(v53, type metadata accessor for ClientCommand);
  v48 = v100;
  v54 = CommandID.tag.getter(v94);
  if (__PAIR64__(HIDWORD(v54), v54) != __PAIR64__(v91, v93))
    goto LABEL_22;
  sub_1A55034FC(v48, type metadata accessor for TaskHistory.Running);
  swift_bridgeObjectRelease();
  if (v43 == v46)
  {
LABEL_26:
    swift_bridgeObjectRelease();
    v37 = v88;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_49;
  }
  if (v46 >= v43)
  {
    __break(1u);
    goto LABEL_60;
  }
  v43 = v96;
  sub_1A55034B8(v44, v96, type metadata accessor for TaskHistory.Running);
  v46 = v95;
  sub_1A55034B8(v43, v95, type metadata accessor for TaskHistory.Running);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
LABEL_60:
    sub_1A55034FC(v46, type metadata accessor for TaskHistory.Running);
    goto LABEL_61;
  }
  v80 = *(_QWORD *)v46;
  v81 = *(unsigned int *)(v46 + 8);
  v82 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308);
  sub_1A55034FC(v46 + *(int *)(v82 + 64), type metadata accessor for ClientCommand);
  v83 = CommandID.tag.getter(v80);
  if (__PAIR64__(HIDWORD(v83), v83) != __PAIR64__(v91, v93))
  {
LABEL_61:
    sub_1A55034FC(v43, type metadata accessor for TaskHistory.Running);
    __break(1u);
    return;
  }
  sub_1A55034FC(v43, type metadata accessor for TaskHistory.Running);
  swift_bridgeObjectRelease();
  v84 = v88;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A55240D4(v89, v84);
  v85 = sub_1A55F7748(v81, v97);
  if (((v86 >> 34) & 0x3F) != 0x3F)
  {
    v55 = v92;
    if ((v86 & 0x8000000000) == 0)
    {
      sub_1A55F8460(v85, v86);
      v26 = v98;
      goto LABEL_29;
    }
  }
LABEL_50:
  sub_1A5503B8C(v30, v92);
}

uint64_t sub_1A55F8134(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  int32x2_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int32x2_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  char v47;

  v5 = v4;
  v11 = v4[8];
  v10 = v4[9];
  if (v4[35])
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A55FAA04(a1, v11, v10, a2, a3, a4);
    swift_bridgeObjectRelease();
  }
  v43 = v10;
  v12 = sub_1A55B0260(0, 1, a4);
  v13 = *(_QWORD *)(v12 + 16);
  if (!v13)
    return swift_bridgeObjectRelease();
  v42 = a1;
  v14 = 0;
  while ((sub_1A55F3D3C(*(_DWORD *)(v12 + 4 * v14 + 32), a2, a3) & 1) == 0)
  {
    if (v13 == ++v14)
      return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v16 = v5[21];
  v17 = sub_1A54E3414();
  v18 = MessageIdentifierSet.init()(&type metadata for UID, v17);
  v20 = HIDWORD(v19);
  v45 = v18;
  v46 = v19;
  v47 = BYTE4(v19);
  v21 = *(_QWORD *)(v16 + 16);
  if (v21)
  {
    v41 = v11;
    swift_bridgeObjectRetain_n();
    v23 = (_BYTE *)(v16 + 40);
    do
    {
      if ((*v23 & 1) == 0)
      {
        v44 = *((_QWORD *)v23 - 1);
        MessageIdentifierSet.init(_:)((uint64_t)&v44, (uint64_t)&type metadata for UID, v17, v22);
        v25 = v24;
        v27 = v26;
        v28 = HIDWORD(v26);
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
        v11 = v11 & 0xFFFFFF0000000000 | v27 & 0xFFFFFFFFFFLL;
        MessageIdentifierSet.formUnion(_:)(v25, v11);
        sub_1A54E3458(v25, v27, v28);
      }
      v23 += 12;
      --v21;
    }
    while (v21);
    swift_bridgeObjectRelease_n();
    v18 = v45;
    LODWORD(v19) = v46;
    LOBYTE(v20) = v47;
    v11 = v41;
  }
  result = MessageIdentifierSetNonEmpty.init(set:)(v18, v19 | ((unint64_t)v20 << 32));
  if (BYTE4(v29) != 255)
  {
    v30 = (int32x2_t *)result;
    v31 = v29;
    if (((v42 >> 59) & 0x1E | (v42 >> 2) & 1) == 8
      && v43 == *(_QWORD *)((v42 & 0xFFFFFFFFFFFFFFBLL) + 0x18)
      && (v32 = *(_QWORD *)((v42 & 0xFFFFFFFFFFFFFFBLL) + 0x20),
          v33 = *(unsigned int *)((v42 & 0xFFFFFFFFFFFFFFBLL) + 0x28),
          v34 = *(unsigned __int8 *)((v42 & 0xFFFFFFFFFFFFFFBLL) + 0x2C),
          v35 = *(int32x2_t **)((v42 & 0xFFFFFFFFFFFFFFBLL) + 0x30),
          v36 = *(unsigned int *)((v42 & 0xFFFFFFFFFFFFFFBLL) + 0x38),
          v37 = v11,
          v38 = *(unsigned __int8 *)((v42 & 0xFFFFFFFFFFFFFFBLL) + 0x3C),
          sub_1A54FF30C(v37, *(_QWORD *)((v42 & 0xFFFFFFFFFFFFFFBLL) + 0x10))))
    {
      sub_1A54E4334(v32, v33, v34);
      sub_1A54E4334((uint64_t)v35, v36, v38);
      static MessageIdentifierSet.__derived_struct_equals(_:_:)(v30, v31 & 0xFFFFFFFFFFLL, v35, v36 | (v38 << 32));
      v40 = v39;
      sub_1A54E3458((uint64_t)v35, v36, v38);
      sub_1A5503B8C((uint64_t)v30, v31);
      if ((v40 & 1) != 0)
      {
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
        MessageIdentifierSet.formUnion(_:)(v32, v33 | (v34 << 32));
      }
      return sub_1A54E3458(v32, v33, v34);
    }
    else
    {
      return sub_1A5503B8C((uint64_t)v30, v31);
    }
  }
  return result;
}

uint64_t sub_1A55F8460(uint64_t result, uint64_t a2)
{
  if ((((unint64_t)a2 >> 34) & 0x3F) != 0x3F)
    return sub_1A55F8474(result, a2);
  return result;
}

uint64_t sub_1A55F8474(uint64_t result, uint64_t a2)
{
  if ((a2 & 0x8000000000) == 0)
    return sub_1A54E3458(result, a2, SBYTE4(a2));
  return result;
}

uint64_t sub_1A55F8484(uint64_t result, uint64_t a2)
{
  if ((a2 & 0x8000000000) == 0)
    return sub_1A54E4334(result, a2, SBYTE4(a2));
  return result;
}

BOOL sub_1A55F8494(uint64_t a1)
{
  uint64_t v1;
  int64_t v2;
  int v3;
  _BOOL4 v5;
  _BOOL4 v6;

  v2 = *(unsigned int *)(a1 + 16) | (unint64_t)((uint64_t)*(char *)(a1 + 20) << 32);
  v3 = **(unsigned __int8 **)(v1 + 16);
  v5 = v2 >= 0 && v3 == 2;
  if (v3 == 2)
    v6 = v5;
  else
    v6 = (*(_DWORD *)(a1 + 16) & 1) == (v3 & 1);
  if (v2 < 0)
    return v6;
  else
    return v5;
}

uint64_t sub_1A55F84D8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1A55F971C(a1, a2, v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_1A55F84E4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1A54E3458(*(_QWORD *)(v0 + 32), *(unsigned int *)(v0 + 40), *(_BYTE *)(v0 + 44));
  return swift_deallocObject();
}

uint64_t sub_1A55F8518(uint64_t a1)
{
  uint64_t v1;

  return (*(unsigned __int8 *)(a1 + 16) ^ **(unsigned __int8 **)(v1 + 16)) & 1;
}

uint64_t sub_1A55F8530()
{
  uint64_t v0;
  unint64_t v1;

  if (*(unsigned __int8 *)(v0 + 28) != 255)
  {
    v1 = *(unsigned int *)(v0 + 24) | ((unint64_t)*(unsigned __int8 *)(v0 + 28) << 32);
    sub_1A54E3458(*(_QWORD *)(v0 + 16), v1, SBYTE4(v1));
  }
  return swift_deallocObject();
}

BOOL sub_1A55F8570(uint64_t a1)
{
  uint64_t v1;

  return **(_BYTE **)(v1 + 16) == *(_QWORD *)(a1 + 16) >> 62;
}

BOOL sub_1A55F8588(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 16) >> 60;
  v3 = 1;
  if ((_DWORD)v2 != 11)
    v3 = 2;
  if ((_DWORD)v2 == 15)
    v4 = 0;
  else
    v4 = v3;
  return v4 == **(unsigned __int8 **)(v1 + 16);
}

uint64_t initializeBufferWithCopyOfBuffer for FindMissingMessages.CommandID(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)a2;
  v4 = *(unsigned __int8 *)(a2 + 12);
  v5 = *(unsigned int *)(a2 + 8);
  sub_1A55F8484(*(_QWORD *)a2, v5 | (v4 << 32));
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v5;
  return a1;
}

uint64_t destroy for FindMissingMessages.CommandID(uint64_t a1)
{
  return sub_1A55F8474(*(_QWORD *)a1, *(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned __int8 *)(a1 + 12) << 32));
}

uint64_t assignWithCopy for FindMissingMessages.CommandID(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = *(_QWORD *)a2;
  v4 = *(unsigned __int8 *)(a2 + 12);
  v5 = *(unsigned int *)(a2 + 8);
  sub_1A55F8484(*(_QWORD *)a2, v5 | (v4 << 32));
  v6 = *(_QWORD *)a1;
  v7 = *(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned __int8 *)(a1 + 12) << 32);
  *(_QWORD *)a1 = v3;
  *(_DWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 12) = v4;
  sub_1A55F8474(v6, v7);
  return a1;
}

uint64_t assignWithTake for FindMissingMessages.CommandID(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 12);
  v5 = *((_DWORD *)a2 + 2);
  v6 = a1 + 8;
  v7 = *(unsigned int *)(a1 + 8);
  v8 = *(_QWORD *)a1;
  v9 = v7 | ((unint64_t)*(unsigned __int8 *)(v6 + 4) << 32);
  *(_QWORD *)a1 = v3;
  *(_DWORD *)v6 = v5;
  *(_BYTE *)(v6 + 4) = v4;
  sub_1A55F8474(v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for FindMissingMessages.CommandID(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x3F && *(_BYTE *)(a1 + 13))
    return (*(_DWORD *)a1 + 63);
  v3 = ((*(unsigned __int8 *)(a1 + 12) >> 7) & 0xFFFFFFC1 | (2 * ((*(unsigned __int8 *)(a1 + 12) >> 2) & 0x1F))) ^ 0x3F;
  if (v3 >= 0x3E)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for FindMissingMessages.CommandID(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3E)
  {
    *(_BYTE *)(result + 12) = 0;
    *(_DWORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 63;
    if (a3 >= 0x3F)
      *(_BYTE *)(result + 13) = 1;
  }
  else
  {
    if (a3 >= 0x3F)
      *(_BYTE *)(result + 13) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_DWORD *)(result + 8) = 0;
      *(_BYTE *)(result + 12) = 4 * (((-a2 >> 1) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t sub_1A55F8780(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 12) >> 7;
}

uint64_t sub_1A55F878C(uint64_t a1)
{
  uint64_t result;
  unsigned int v2;
  unint64_t v3;

  v2 = *(_DWORD *)(a1 + 8);
  result = a1 + 8;
  v3 = v2 | ((unint64_t)*(unsigned __int8 *)(result + 4) << 32);
  *(_DWORD *)result = v2;
  *(_BYTE *)(result + 4) = BYTE4(v3) & 0x7F;
  return result;
}

uint64_t sub_1A55F87A8(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unsigned int v3;
  unint64_t v4;

  v3 = *(_DWORD *)(a1 + 8);
  result = a1 + 8;
  v4 = (v3 | ((unint64_t)*(unsigned __int8 *)(result + 4) << 32)) & 0x3FFFFFFFFLL | (a2 << 39);
  *(_DWORD *)result = v3;
  *(_BYTE *)(result + 4) = BYTE4(v4);
  return result;
}

ValueMetadata *type metadata accessor for FindMissingMessages.CommandID()
{
  return &type metadata for FindMissingMessages.CommandID;
}

ValueMetadata *type metadata accessor for FindMissingMessages.ActionID()
{
  return &type metadata for FindMissingMessages.ActionID;
}

unint64_t sub_1A55F87F0()
{
  unint64_t result;

  result = qword_1EE7A8D00;
  if (!qword_1EE7A8D00)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A9C48, &type metadata for FindMissingMessages.ActionID.Kind);
    atomic_store(result, (unint64_t *)&qword_1EE7A8D00);
  }
  return result;
}

unint64_t sub_1A55F8838()
{
  unint64_t result;

  result = qword_1EE7A8D08;
  if (!qword_1EE7A8D08)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A9C8C, &type metadata for FindMissingMessages.CommandID.Kind);
    atomic_store(result, (unint64_t *)&qword_1EE7A8D08);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FindMissingMessages.CommandID.Kind(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
  {
    v6 = *a1;
    v7 = v6 >= 2;
    v8 = v6 - 2;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1A55F88CC + 4 * byte_1A59A9B56[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for FindMissingMessages.CommandID.Kind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 2;
  if (a3 + 2 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFE)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A55F8974 + 4 * byte_1A59A9B60[v5]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A55F89A8 + 4 * byte_1A59A9B5B[v5]))();
}

uint64_t sub_1A55F89A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A55F89B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A55F89B8);
  return result;
}

uint64_t sub_1A55F89C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A55F89CCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A55F89D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A55F89D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A55F89E4(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 >= 2)
    return v1 - 1;
  else
    return 0;
}

_BYTE *sub_1A55F89F8(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 1;
  return result;
}

ValueMetadata *type metadata accessor for FindMissingMessages.CommandID.Kind()
{
  return &type metadata for FindMissingMessages.CommandID.Kind;
}

uint64_t storeEnumTagSinglePayload for FindMissingMessages.ActionID.Kind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A55F8A64 + 4 * byte_1A59A9B6A[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A55F8A98 + 4 * byte_1A59A9B65[v4]))();
}

uint64_t sub_1A55F8A98(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A55F8AA0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A55F8AA8);
  return result;
}

uint64_t sub_1A55F8AB4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A55F8ABCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A55F8AC0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A55F8AC8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FindMissingMessages.ActionID.Kind()
{
  return &type metadata for FindMissingMessages.ActionID.Kind;
}

uint64_t sub_1A55F8AE8@<X0>(uint64_t result@<X0>, uint64_t a2@<X2>, unint64_t a3@<X4>, unint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  ValueMetadata *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  ValueMetadata *v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t *v63;
  uint64_t v64;
  uint64_t inited;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  int v75;
  unint64_t v76;
  unint64_t *v77;
  uint64_t v79;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unsigned int v96;
  char v97;
  uint64_t v98;
  int v99;
  uint64_t v100;

  v7 = a6;
  v79 = result;
  v8 = a7;
  v9 = *(_QWORD *)(a6 + 16);
  v84 = v9;
  if (v9)
  {
    swift_bridgeObjectRetain_n();
    v10 = 0;
    v11 = 0;
    v12 = &type metadata for UID;
    v85 = v7;
    while (1)
    {
      v86 = v10;
      v87 = v9;
      v13 = *(_QWORD *)(v7 + v10 + 32);
      v14 = *(unsigned int *)(v7 + v10 + 40);
      v15 = *(unsigned __int8 *)(v7 + v10 + 44);
      v94 = v11;
      v95 = *(_QWORD *)(v7 + v10 + 48);
      v96 = *(_DWORD *)(v7 + v10 + 56);
      v97 = *(_BYTE *)(v7 + v10 + 60);
      v16 = *(_QWORD *)(v7 + v10 + 64);
      v17 = *(unsigned int *)(v7 + v10 + 72) | ((unint64_t)*(unsigned __int8 *)(v7 + v10 + 76) << 32);
      if (*(unsigned __int8 *)(v7 + v10 + 76) == 255)
      {
        v18 = sub_1A54E3414();
        v19 = MessageIdentifierSet.init()(v12, v18);
        v21 = v20;
        v90 = HIDWORD(v20);
        v91 = v19;
      }
      else
      {
        v90 = HIDWORD(v17);
        v91 = *(_QWORD *)(v7 + v10 + 64);
        v21 = *(unsigned int *)(v7 + v10 + 72) | ((unint64_t)*(unsigned __int8 *)(v7 + v10 + 76) << 32);
      }
      sub_1A5503BA0(v16, v17);
      sub_1A5503BA0(v16, v17);
      v88 = v13;
      v22 = v14;
      v23 = v14;
      v8 = v15;
      sub_1A54E4334(v13, v23, v15);
      sub_1A54E4334(v95, v96, v97);
      sub_1A54E3414();
      v89 = v16;
      v24 = v90;
      v92 = v92 & 0xFFFFFF0000000000 | v22 | (v15 << 32);
      v93 = v93 & 0xFFFFFF0000000000 | v21 | ((unint64_t)v90 << 32);
      MessageIdentifierSet.subtracting(_:)(v91, v93, v13, v92);
      v26 = v25;
      v27 = v12;
      v29 = v28;
      v30 = HIDWORD(v28);
      sub_1A54E3458(v91, v21, v90);
      v31 = MessageIdentifierSet.count.getter(v26, v29 & 0xFFFFFFFFFFLL);
      sub_1A54E3458(v26, v29, v30);
      sub_1A54E3458(v88, v22, v8);
      sub_1A54E3458(v95, v96, v97);
      sub_1A5503B8C(v89, v17);
      v11 = v94 + v31;
      if (__OFADD__(v94, v31))
        break;
      v10 = v86 + 48;
      v9 = v87 - 1;
      v7 = v85;
      v12 = v27;
      if (v87 == 1)
      {
        result = swift_bridgeObjectRelease_n();
        v8 = a7;
        v32 = a3;
        v9 = v84;
        goto LABEL_10;
      }
    }
    __break(1u);
    goto LABEL_43;
  }
  v32 = a3;
  v11 = 0;
LABEL_10:
  if ((unsigned __int128)((uint64_t)v32 * (__int128)3) >> 64 != (uint64_t)(3 * v32) >> 63)
  {
    __break(1u);
    goto LABEL_46;
  }
  if (v11 >= (uint64_t)(3 * v32) / 4)
    goto LABEL_32;
  if (v9)
  {
    v33 = v7 + 48 * v9;
    v34 = *(_QWORD *)(v33 - 16);
    v35 = *(unsigned int *)(v33 - 8);
    v36 = *(unsigned __int8 *)(v33 - 4);
    sub_1A54E3414();
    MessageIdentifierSet.ranges.getter(v34, v35 | (v36 << 32));
    v38 = v37;
    v40 = v39;
    v41 = HIDWORD(v39);
    v42 = v39 & 0xFFFFFFFFFFLL;
    if (!MessageIdentifierSet.RangeView.endIndex.getter(v37, v39 & 0xFFFFFFFFFFLL))
    {
      sub_1A54E3458(v38, v40, v41);
      goto LABEL_32;
    }
    sub_1A54E4334(v34, v35, v36);
    MessageIdentifierSet.RangeView.subscript.getter(0, v38, v42);
    sub_1A54E3458(v38, v40, v41);
    sub_1A54E3458(v34, v35, v36);
    LODWORD(v38) = v100 - 1;
    v32 = a3;
    v9 = v84;
    if (v100 <= 1 || v38 < 2)
      goto LABEL_32;
  }
  else
  {
    v38 = HIDWORD(a4);
    if (HIDWORD(a4) < 2)
      goto LABEL_32;
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v43 = sub_1A55F99B0(v79, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v44 = v43[2];
  if (v44)
  {
    v45 = 5;
    while (((LODWORD(v43[v45]) | (unint64_t)((uint64_t)SBYTE4(v43[v45]) << 32)) & 0x8000000000000000) == 0)
    {
      v45 += 2;
      if (!--v44)
        goto LABEL_22;
    }
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
LABEL_22:
  result = swift_bridgeObjectRelease();
  if ((a4 & 0x101) == 0)
  {
    v61 = v32 - 1;
    if (!__OFSUB__(v32, 1))
    {
      if (v61 <= 0xFFFFFFFFLL)
      {
        if ((unint64_t)v61 <= 0x7FFFFFFFFFFFFFFELL)
        {
          if (!HIDWORD(v32))
          {
            LODWORD(v98) = 1;
            v99 = v32;
            sub_1A5534BE4();
            static MessageIdentifier.... infix(_:_:)();
            v62 = v100;
            v24 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A0450);
            v63 = (unint64_t *)(v8 + *(int *)(v24 + 48));
            *(_QWORD *)v8 = v9;
            *(_BYTE *)(v8 + 8) = 1;
            v64 = swift_allocObject();
            __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AF10);
            inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = xmmword_1A59ABD10;
            LODWORD(v100) = 1;
            LODWORD(v98) = v38;
            sub_1A54E3414();
            static MessageIdentifier.... infix(_:_:)();
            v66 = sub_1A55C19FC(inited);
            v68 = v67;
            swift_setDeallocating();
            *(_QWORD *)(v64 + 16) = v66;
            *(_BYTE *)(v64 + 28) = BYTE4(v68);
            *(_DWORD *)(v64 + 24) = v68;
            __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AEF0);
            v69 = swift_allocObject();
            *(_OWORD *)(v69 + 16) = xmmword_1A59ABD10;
            *(_QWORD *)(v69 + 32) = v62;
            *(_OWORD *)(v69 + 40) = xmmword_1A59ABDE0;
            *(_WORD *)(v69 + 60) = 0;
            *(_DWORD *)(v69 + 56) = 0;
            *(_BYTE *)(v69 + 62) = 0;
            *v63 = v64 | 0xA000000000000000;
            v63[1] = v69;
            type metadata accessor for ClientCommand(0);
LABEL_44:
            swift_storeEnumTagMultiPayload();
            return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v8, 0, 1, v24);
          }
          goto LABEL_49;
        }
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
        goto LABEL_51;
      }
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  if ((a5 & 0x100000000) != 0)
  {
    v70 = swift_allocObject();
    v99 = v38;
    v71 = sub_1A54E3414();
    static MessageIdentifier.... infix(_:_:)();
    v98 = v100;
    MessageIdentifierSet.init(_:)((uint64_t)&v98, (uint64_t)&type metadata for UID, v71, v72);
    *(_QWORD *)(v70 + 16) = v73;
    *(_BYTE *)(v70 + 28) = v74;
    *(_DWORD *)(v70 + 24) = v75;
    v76 = v70 | 0xA000000000000000;
    v24 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A0450);
    v77 = (unint64_t *)(v8 + *(int *)(v24 + 48));
    *(_QWORD *)v8 = v9;
    *(_BYTE *)(v8 + 8) = 0;
    *v77 = v76;
    if ((a4 & 0x100) == 0)
      v77[1] = (unint64_t)&unk_1E4E6BD28;
    type metadata accessor for ClientCommand(0);
    goto LABEL_44;
  }
  if ((a5 & 0xFFFFFFFE) == 0)
    goto LABEL_32;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8D10);
  result = swift_initStackObject();
  *(_OWORD *)(result + 16) = xmmword_1A59ABD10;
  LODWORD(v100) = 1;
  if ((a5 & 0xFFFFFFFE) > 0xFFFFFFF5uLL)
    goto LABEL_50;
  v46 = result;
  LODWORD(v98) = a5 + 10;
  sub_1A5534BE4();
  static MessageIdentifier.... infix(_:_:)();
  v47 = sub_1A55C203C(v46);
  v49 = v48;
  swift_setDeallocating();
  result = v32 + 20;
  if (!__OFADD__(v32, 20))
  {
    v50 = sub_1A55E1C34(result, v47, v49 & 0xFFFFFFFFFFLL);
    v52 = v51;
    sub_1A54E3458(v47, v49, SBYTE4(v49));
    v53 = MessageIdentifierSetNonEmpty.init(set:)(v50, v52 & 0xFFFFFFFFFFLL);
    if ((~v54 & 0xFF00000000) != 0)
    {
      v55 = v53;
      v56 = v54;
      v57 = swift_allocObject();
      *(_QWORD *)(v57 + 16) = v55;
      *(_BYTE *)(v57 + 28) = BYTE4(v56);
      *(_DWORD *)(v57 + 24) = v56;
      v58 = v57 | 0xB000000000000004;
      v24 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A0450);
      v59 = (unint64_t *)(v8 + *(int *)(v24 + 48));
      *(_QWORD *)v8 = v9;
      *(_BYTE *)(v8 + 8) = 1;
      *v59 = v58;
      if ((a4 & 0x100) == 0)
        v59[1] = (unint64_t)&unk_1E4E6BCE8;
LABEL_43:
      type metadata accessor for ClientCommand(0);
      goto LABEL_44;
    }
LABEL_32:
    v60 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A0450);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v8, 1, 1, v60);
  }
LABEL_51:
  __break(1u);
  return result;
}

uint64_t sub_1A55F9334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;

  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v5 = sub_1A55C19FC(MEMORY[0x1E0DEE9D8]);
  v24 = v5;
  v6 = *(_QWORD *)(a4 + 16);
  if (v6)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v7 = 0;
    v21 = a4;
    do
    {
      v22 = v6;
      v8 = a4 + v7;
      v9 = *(_QWORD *)(a4 + v7 + 32);
      v10 = *(unsigned int *)(a4 + v7 + 40);
      v11 = *(unsigned __int8 *)(a4 + v7 + 44);
      v12 = *(_QWORD *)(v8 + 48);
      v13 = *(unsigned int *)(v8 + 56);
      v14 = *(_BYTE *)(v8 + 60);
      v15 = *(_QWORD *)(v8 + 64);
      v16 = *(unsigned __int8 *)(v8 + 76);
      v17 = *(unsigned int *)(v8 + 72) | ((unint64_t)*(unsigned __int8 *)(v8 + 76) << 32);
      sub_1A54E4334(v9, v10, v11);
      sub_1A54E4334(v12, v13, v14);
      sub_1A5503BA0(v15, v17);
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
      v23 = v23 & 0xFFFFFF0000000000 | v10 | (v11 << 32);
      MessageIdentifierSet.formUnion(_:)(v9, v23);
      if (v16 <= 0xFEuLL)
      {
        v20 = v20 & 0xFFFFFF0000000000 | v17 | v17 & 0xFF00000000;
        MessageIdentifierSet.subtract(_:)(v15, v20);
      }
      sub_1A54E3458(v9, v10, v11);
      sub_1A54E3458(v12, v13, v14);
      sub_1A5503B8C(v15, v17);
      v7 += 48;
      v6 = v22 - 1;
      a4 = v21;
    }
    while (v22 != 1);
    swift_bridgeObjectRelease_n();
    return v24;
  }
  else
  {
    v18 = v5;
    swift_bridgeObjectRelease();
  }
  return v18;
}

uint64_t sub_1A55F9504(uint64_t a1, uint64_t a2)
{
  return (*(_QWORD *)a1 == *(_QWORD *)a2) & ~(*(unsigned __int8 *)(a1 + 8) ^ *(unsigned __int8 *)(a2 + 8));
}

uint64_t sub_1A55F9528(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  unsigned int v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  __int128 v27;
  _OWORD v28[2];

  v5 = *(_QWORD **)(v2 + 24);
  v6 = v5[2];
  if (!v6)
  {
    v17 = *(_DWORD *)(v2 + 12);
    goto LABEL_6;
  }
  v7 = &v5[6 * v6];
  v8 = *(v7 - 2);
  v9 = *((unsigned int *)v7 - 2);
  v10 = *((unsigned __int8 *)v7 - 4);
  sub_1A54E3414();
  MessageIdentifierSet.ranges.getter(v8, v9 | (v10 << 32));
  v12 = v11;
  v14 = v13;
  v26 = HIDWORD(v13);
  v15 = v13 & 0xFFFFFFFFFFLL;
  if (!MessageIdentifierSet.RangeView.endIndex.getter(v11, v13 & 0xFFFFFFFFFFLL))
    return sub_1A54E3458(v12, v14, v26);
  sub_1A54E4334(v8, v9, v10);
  MessageIdentifierSet.RangeView.subscript.getter(0, v12, v15);
  sub_1A54E3458(v12, v14, v26);
  result = sub_1A54E3458(v8, v9, v10);
  v17 = v27 - 1;
  if (v27 > 1)
  {
    a1 = v24;
    v2 = v25;
LABEL_6:
    v18 = *(_QWORD *)v2;
    sub_1A54E4334(a1, a2, SBYTE4(a2));
    sub_1A55F9C10(a1, a2 & 0xFFFFFFFFFFLL, v17, v18, (uint64_t)&v27);
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1A54F2328(0, v5[2] + 1, 1, v5);
      v5 = (_QWORD *)result;
    }
    v20 = v5[2];
    v19 = v5[3];
    if (v20 >= v19 >> 1)
    {
      result = (uint64_t)sub_1A54F2328((_QWORD *)(v19 > 1), v20 + 1, 1, v5);
      v5 = (_QWORD *)result;
    }
    v5[2] = v20 + 1;
    v21 = &v5[6 * v20];
    v22 = v27;
    v23 = v28[0];
    *(_OWORD *)((char *)v21 + 61) = *(_OWORD *)((char *)v28 + 13);
    v21[2] = v22;
    v21[3] = v23;
    *(_QWORD *)(v2 + 24) = v5;
  }
  return result;
}

uint64_t sub_1A55F971C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  _QWORD v34[2];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE v43[16];
  _BYTE v44[16];

  v10 = type metadata accessor for TaskHistory.Previous(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v34 - v15;
  sub_1A55FAE78(a2 + 32, (uint64_t)v43);
  sub_1A55FAE78((uint64_t)v43, (uint64_t)v44);
  if (v44[12] != 255)
    return 0;
  v17 = *(_QWORD *)(a2 + 16);
  v18 = *(unsigned int *)(a2 + 24);
  v19 = *(unsigned __int8 *)(a2 + 28);
  sub_1A54E4334(v17, v18, v19);
  sub_1A54E3414();
  v20 = MessageIdentifierSetNonEmpty.init(set:)(v17, v18 | (v19 << 32));
  if (BYTE4(v21) == 255)
    return 0;
  v22 = v20;
  v23 = v21;
  v24 = sub_1A55B0260(a1, 0, a6);
  v25 = *(_QWORD *)(v24 + 16);
  if (v25)
  {
    v35 = v23;
    v36 = v22;
    v26 = 0;
    v34[1] = v24;
    v40 = v24 + 32;
    v42 = *(_QWORD *)(a4 + 16);
    v38 = v11;
    v39 = a1;
    v41 = a4;
    v37 = v25;
    do
    {
      if (v42)
      {
        v27 = *(_DWORD *)(v40 + 4 * v26);
        v28 = v11;
        v29 = a4 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
        swift_bridgeObjectRetain_n();
        v30 = *(_QWORD *)(v28 + 72);
        v31 = v42;
        while (1)
        {
          sub_1A55034B8(v29, (uint64_t)v16, type metadata accessor for TaskHistory.Previous);
          sub_1A55034B8((uint64_t)v16, (uint64_t)v13, type metadata accessor for TaskHistory.Previous);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v32 = *((_DWORD *)v13 + 2);
            swift_release();
            if (v32 == v27)
            {
              sub_1A55034FC((uint64_t)v16, type metadata accessor for TaskHistory.Previous);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              sub_1A5503B8C(v36, v35);
              return 0;
            }
          }
          else
          {
            sub_1A55034FC((uint64_t)v13, type metadata accessor for TaskHistory.Previous);
          }
          sub_1A55034FC((uint64_t)v16, type metadata accessor for TaskHistory.Previous);
          v29 += v30;
          if (!--v31)
          {
            a4 = v41;
            swift_bridgeObjectRelease_n();
            v11 = v38;
            a1 = v39;
            v25 = v37;
            break;
          }
        }
      }
      ++v26;
    }
    while (v26 != v25);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return a1;
}

_QWORD *sub_1A55F99B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  _QWORD *result;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  _QWORD v26[2];
  unsigned int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;

  v5 = type metadata accessor for TaskHistory.Running(0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v26[0] = a1;
  v26[1] = v2;
  v10 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v11 = *(_QWORD *)(v6 + 72);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v12 = 0;
  v27 = (unsigned int *)(a2 + 72);
  v31 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v29 = v10;
  v30 = v5;
  v28 = v11;
  while (1)
  {
    sub_1A55034B8(v10 + v11 * v12, (uint64_t)v8, type metadata accessor for TaskHistory.Running);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1A55034FC((uint64_t)v8, type metadata accessor for TaskHistory.Running);
      goto LABEL_4;
    }
    v13 = *((_DWORD *)v8 + 2);
    v14 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308);
    result = (_QWORD *)sub_1A55034FC((uint64_t)&v8[*(int *)(v14 + 64)], type metadata accessor for ClientCommand);
    v16 = *(_QWORD *)(a2 + 16);
    if (v16)
    {
      if (*(_DWORD *)(a2 + 32) == v13)
      {
        v17 = *(unsigned int *)(a2 + 48) | ((unint64_t)*(unsigned __int8 *)(a2 + 52) << 32);
        v18 = *(_QWORD *)(a2 + 40);
LABEL_16:
        sub_1A55F8484(v18, v17);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          v22 = v31;
        else
          v22 = sub_1A54F192C(0, v31[2] + 1, 1, v31);
        v24 = v22[2];
        v23 = v22[3];
        if (v24 >= v23 >> 1)
          v22 = sub_1A54F192C((_QWORD *)(v23 > 1), v24 + 1, 1, v22);
        v22[2] = v24 + 1;
        v31 = v22;
        v25 = &v22[2 * v24];
        v25[4] = v18;
        *((_DWORD *)v25 + 10) = v17;
        *((_BYTE *)v25 + 44) = BYTE4(v17);
        v10 = v29;
        v11 = v28;
        goto LABEL_4;
      }
      if (v16 != 1)
        break;
    }
LABEL_4:
    if (++v12 == v9)
    {
      swift_bridgeObjectRelease();
      return v31;
    }
  }
  v19 = v27;
  v20 = 1;
  while (1)
  {
    v21 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (*(v19 - 4) == v13)
    {
      v18 = *((_QWORD *)v19 - 1);
      v17 = *v19 | ((unint64_t)*((unsigned __int8 *)v19 + 4) << 32);
      goto LABEL_16;
    }
    ++v20;
    v19 += 6;
    if (v21 == v16)
      goto LABEL_4;
  }
  __break(1u);
  return result;
}

void sub_1A55F9C10(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t inited;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unsigned int v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  char v36;
  unint64_t v37;
  unsigned int v39;
  uint64_t v40;
  unsigned int v41;
  uint64_t v42;

  v37 = HIDWORD(a2);
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AF10);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A59ABD10;
  LODWORD(v42) = 1;
  v39 = a3;
  LODWORD(v40) = a3;
  v10 = sub_1A54E3414();
  static MessageIdentifier.... infix(_:_:)();
  v11 = sub_1A55C19FC(inited);
  v13 = v12;
  v14 = HIDWORD(v12);
  swift_setDeallocating();
  MessageIdentifierSet.intersection(_:)(v11, v13 & 0xFFFFFFFFFFLL, a1, a2 & 0xFFFFFFFFFFLL);
  v16 = v15;
  v18 = v17;
  v19 = HIDWORD(v17);
  sub_1A54E3458(a1, a2, v37);
  sub_1A54E3458(v11, v13, v14);
  v20 = sub_1A55E1944(a4, v16, v18 & 0xFFFFFFFFFFLL);
  v22 = v21;
  v23 = v21;
  v24 = HIDWORD(v21);
  sub_1A54E3458(v16, v18, v19);
  MessageIdentifierSet.ranges.getter(v20, v22 & 0xFFFFFFFFFFLL);
  v26 = v25;
  v28 = v27;
  v29 = HIDWORD(v27);
  v30 = v27 & 0xFFFFFFFFFFLL;
  if (MessageIdentifierSet.RangeView.endIndex.getter(v25, v27 & 0xFFFFFFFFFFLL))
  {
    MessageIdentifierSet.RangeView.subscript.getter(0, v26, v30);
    sub_1A54E3458(v26, v28, v29);
    v31 = v39;
    if (v42 <= v39)
      goto LABEL_6;
  }
  else
  {
    sub_1A54E3458(v26, v28, v29);
    v31 = v39;
  }
  sub_1A54E3458(v20, v23, v24);
  v20 = sub_1A55C19FC(MEMORY[0x1E0DEE9D8]);
  LODWORD(v23) = v32;
  v24 = HIDWORD(v32);
LABEL_6:
  v41 = v31;
  static MessageIdentifier.... infix(_:_:)();
  v40 = v42;
  MessageIdentifierSet.init(_:)((uint64_t)&v40, (uint64_t)&type metadata for UID, v10, v33);
  *(_QWORD *)a5 = v20;
  *(_DWORD *)(a5 + 8) = v23;
  *(_BYTE *)(a5 + 12) = v24;
  *(_QWORD *)(a5 + 16) = v34;
  *(_DWORD *)(a5 + 24) = v35;
  *(_BYTE *)(a5 + 28) = v36;
  *(_QWORD *)(a5 + 32) = 0;
  *(_DWORD *)(a5 + 40) = 0;
  *(_BYTE *)(a5 + 44) = -1;
}

void sub_1A55F9E8C(const void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t i;
  const void *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  int v37;
  unint64_t v38;
  char *v39;
  char v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t (*v45)(uint64_t);
  uint64_t v46;
  uint64_t (*v47)(uint64_t);
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  const void *v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  char *v61;
  char v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  int *v85;
  int v86;
  uint64_t v87;
  __int128 *v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int EnumCaseMultiPayload;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  int *v107;
  int v108;
  uint64_t v109;
  __int128 *v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  char *v118;
  uint64_t (*v119)(uint64_t);
  unint64_t v120;
  unint64_t v121;
  uint64_t (*v122)(uint64_t);
  uint64_t v123;
  uint64_t v124;
  const void *v125;
  uint64_t v126;
  uint64_t v127;
  int v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  uint64_t v132;
  unsigned int v133;
  char v134;
  _BYTE v135[584];
  _BYTE v136[584];
  _BYTE v137[584];
  _BYTE v138[592];

  v125 = a1;
  sub_1A552316C(a1, v135);
  sub_1A552316C(v135, v138);
  v127 = type metadata accessor for TaskHistory.Running(0);
  v123 = *(_QWORD *)(v127 - 8);
  MEMORY[0x1E0C80A78](v127);
  v119 = (uint64_t (*)(uint64_t))((char *)&v113 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v8);
  v120 = (unint64_t)&v113 - v9;
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint64_t *)((char *)&v113 - v11);
  MEMORY[0x1E0C80A78](v13);
  v122 = (uint64_t (*)(uint64_t))((char *)&v113 - v14);
  MEMORY[0x1E0C80A78](v15);
  v121 = (unint64_t)&v113 - v16;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v113 - v18;
  MEMORY[0x1E0C80A78](v20);
  v22 = (uint64_t *)((char *)&v113 - v21);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v113 - v24;
  v126 = a4;
  v26 = sub_1A55F7858(0, a4);
  v27 = *(_QWORD *)(v26 + 16);
  if (!v27)
  {
LABEL_5:
    swift_bridgeObjectRelease();
    v29 = sub_1A55F7858(1, v126);
    v30 = *(_QWORD *)(v29 + 16);
    if (v30)
    {
      for (i = 0; i != v30; ++i)
      {
        if ((sub_1A55E59A8(*(_DWORD *)(v29 + 4 * i + 32), a2, a3) & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v54 = v125;
          sub_1A552316C(v125, v137);
          if (sub_1A5523B90((uint64_t)v137) != 12)
            goto LABEL_62;
          v55 = sub_1A5524678((uint64_t)v137);
          v56 = *(_QWORD *)(v55 + 8);
          if (!v56)
            return;
          v57 = *(_QWORD *)v55;
          v58 = *(_QWORD *)(v55 + 16);
          v59 = *(_QWORD *)(v55 + 24);
          v60 = *(unsigned __int8 *)(v55 + 32);
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          v61 = Tag.init(_:)(v57, v56);
          if ((v62 & 1) != 0 || (v63 = *(_QWORD *)(a2 + 16)) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_36:
            sub_1A55240D4(v57, v56);
            return;
          }
          v116 = v56;
          v117 = v57;
          LODWORD(v113) = v60;
          v114 = v59;
          v115 = v58;
          LODWORD(v121) = v61;
          v118 = (char *)((unint64_t)v61 >> 32);
          v64 = a2 + ((*(unsigned __int8 *)(v123 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80));
          v44 = *(_QWORD *)(v123 + 72);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v52 = 0;
          v45 = v122;
          while (1)
          {
            sub_1A55034B8(v64, (uint64_t)v45, type metadata accessor for TaskHistory.Running);
            sub_1A55034B8((uint64_t)v45, (uint64_t)v12, type metadata accessor for TaskHistory.Running);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
              sub_1A55034FC((uint64_t)v12, type metadata accessor for TaskHistory.Running);
            }
            else
            {
              v65 = v44;
              v66 = *v12;
              v67 = (uint64_t)v12
                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308) + 64);
              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
              sub_1A55034FC(v67, type metadata accessor for ClientCommand);
              v68 = v66;
              v44 = v65;
              v69 = CommandID.tag.getter(v68);
              if (__PAIR64__(HIDWORD(v69), v69) == __PAIR64__(v118, v121))
              {
                sub_1A55034FC((uint64_t)v45, type metadata accessor for TaskHistory.Running);
                swift_bridgeObjectRelease();
                if (v63 == v52)
                {
LABEL_32:
                  swift_bridgeObjectRelease();
                  v56 = v116;
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v57 = v117;
                  goto LABEL_36;
                }
                if (v52 < v63)
                {
                  v52 = v120;
                  sub_1A55034B8(v64, v120, type metadata accessor for TaskHistory.Running);
                  v45 = v119;
                  sub_1A55034B8(v52, (uint64_t)v119, type metadata accessor for TaskHistory.Running);
                  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
                  v94 = v117;
                  if (EnumCaseMultiPayload != 1)
                  {
                    v95 = *(_QWORD *)v45;
                    v96 = *((unsigned int *)v45 + 2);
                    v97 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308);
                    sub_1A55034FC((uint64_t)v45 + *(int *)(v97 + 64), type metadata accessor for ClientCommand);
                    v98 = CommandID.tag.getter(v95);
                    v54 = v125;
                    if (__PAIR64__(HIDWORD(v98), v98) == __PAIR64__(v118, v121))
                    {
                      sub_1A55034FC(v52, type metadata accessor for TaskHistory.Running);
                      swift_bridgeObjectRelease();
                      v99 = v116;
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      sub_1A55240D4(v94, v99);
                      v76 = sub_1A55F7748(v96, v126);
                      if (((v77 >> 34) & 0x3F) != 0x3F)
                      {
                        if ((v77 & 0x8000000000) == 0)
                        {
LABEL_60:
                          sub_1A55F8460(v76, v77);
                          return;
                        }
                        if ((v77 & 1) != 0)
                        {
LABEL_62:
                          if (*(_BYTE *)(v124 + 9) == 1)
                          {
                            sub_1A552316C(v54, v136);
                            if (sub_1A5523B90((uint64_t)v136) == 11)
                            {
                              v100 = *(_QWORD *)sub_1A5524678((uint64_t)v136);
                              v101 = sub_1A54E3414();
                              v102 = MessageIdentifierSet.init()(&type metadata for UID, v101);
                              v104 = v103;
                              v105 = HIDWORD(v103);
                              v132 = v102;
                              v133 = v103;
                              v134 = BYTE4(v103);
                              v106 = *(_QWORD *)(v100 + 16);
                              if (v106)
                              {
                                v107 = (int *)(v100 + 32);
                                sub_1A552316C(v138, &v129);
                                sub_1A5524678((uint64_t)&v129);
                                _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                                do
                                {
                                  v108 = *v107++;
                                  v128 = v108;
                                  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
                                  MessageIdentifierSet.insert(_:)();
                                  --v106;
                                }
                                while (v106);
                                sub_1A5529E00((uint64_t)v54);
                                v109 = v132;
                                v104 = v133;
                                LOBYTE(v105) = v134;
                              }
                              else
                              {
                                v109 = v102;
                              }
LABEL_72:
                              sub_1A55F9528(v109, v104 | ((unint64_t)v105 << 32));
                              sub_1A54E3458(v109, v104, v105);
                            }
                          }
                          else
                          {
                            sub_1A552316C(v54, v136);
                            if (sub_1A5523B90((uint64_t)v136) == 12)
                            {
                              v110 = (__int128 *)sub_1A5524678((uint64_t)v136);
                              v129 = *v110;
                              v130 = v110[1];
                              v131 = v110[2];
                              ExtendedSearchResponse.matchedUIDs.getter();
                              if ((~v112 & 0xFF00000000) != 0)
                              {
                                v109 = v111;
                                v105 = HIDWORD(v112);
                                v104 = v112;
                                goto LABEL_72;
                              }
                            }
                          }
                        }
                      }
                      return;
                    }
LABEL_78:
                    sub_1A55034FC(v52, type metadata accessor for TaskHistory.Running);
                    __break(1u);
                    return;
                  }
LABEL_77:
                  sub_1A55034FC((uint64_t)v45, type metadata accessor for TaskHistory.Running);
                  goto LABEL_78;
                }
LABEL_74:
                __break(1u);
                goto LABEL_75;
              }
            }
            sub_1A55034FC((uint64_t)v45, type metadata accessor for TaskHistory.Running);
            swift_bridgeObjectRelease();
            ++v52;
            v64 += v44;
            if (v63 == v52)
              goto LABEL_32;
          }
        }
      }
    }
    swift_bridgeObjectRelease();
    return;
  }
  v118 = v19;
  v28 = 0;
  while ((sub_1A55E59A8(*(_DWORD *)(v26 + 4 * v28 + 32), a2, a3) & 1) == 0)
  {
    if (v27 == ++v28)
      goto LABEL_5;
  }
  swift_bridgeObjectRelease();
  v32 = v125;
  sub_1A552316C(v125, v137);
  if (sub_1A5523B90((uint64_t)v137) == 12)
  {
    v33 = sub_1A5524678((uint64_t)v137);
    v122 = *(uint64_t (**)(uint64_t))(v33 + 8);
    if (!v122)
      return;
    v34 = *(_QWORD *)v33;
    v35 = *(_QWORD *)(v33 + 16);
    v36 = *(_QWORD *)(v33 + 24);
    v37 = *(unsigned __int8 *)(v33 + 32);
    swift_bridgeObjectRetain_n();
    v38 = (unint64_t)v122;
    swift_bridgeObjectRetain_n();
    v39 = Tag.init(_:)(v34, v38);
    if ((v40 & 1) != 0 || (v41 = *(_QWORD *)(a2 + 16)) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_34;
    }
    v113 = v34;
    LODWORD(v114) = v37;
    v115 = v36;
    v116 = v35;
    LODWORD(v120) = v39;
    v117 = (unint64_t)v39 >> 32;
    v42 = a2 + ((*(unsigned __int8 *)(v123 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80));
    v43 = *(_QWORD *)(v123 + 72);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v44 = 0;
    v45 = type metadata accessor for TaskHistory.Running;
    v119 = (uint64_t (*)(uint64_t))v41;
    while (1)
    {
      sub_1A55034B8(v42, (uint64_t)v25, v45);
      sub_1A55034B8((uint64_t)v25, (uint64_t)v22, v45);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A55034FC((uint64_t)v22, v45);
      }
      else
      {
        v46 = *v22;
        v47 = v45;
        v48 = v43;
        v49 = (char *)v22 + *(int *)(__swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308) + 64);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v50 = (uint64_t)v49;
        v43 = v48;
        v45 = v47;
        sub_1A55034FC(v50, type metadata accessor for ClientCommand);
        v51 = v46;
        v41 = (unint64_t)v119;
        v52 = v127;
        v53 = CommandID.tag.getter(v51);
        if (__PAIR64__(HIDWORD(v53), v53) == __PAIR64__(v117, v120))
        {
          sub_1A55034FC((uint64_t)v25, type metadata accessor for TaskHistory.Running);
          swift_bridgeObjectRelease();
          if (v41 == v44)
          {
LABEL_21:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v34 = v113;
LABEL_34:
            sub_1A55240D4(v34, (uint64_t)v122);
            return;
          }
          if (v44 >= v41)
          {
            __break(1u);
            goto LABEL_74;
          }
          v70 = (uint64_t)v118;
          sub_1A55034B8(v42, (uint64_t)v118, type metadata accessor for TaskHistory.Running);
          v71 = v70;
          v44 = v121;
          sub_1A55034B8(v71, v121, type metadata accessor for TaskHistory.Running);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
LABEL_75:
            sub_1A55034FC(v44, type metadata accessor for TaskHistory.Running);
          }
          else
          {
            v45 = *(uint64_t (**)(uint64_t))v44;
            v72 = *(unsigned int *)(v44 + 8);
            v73 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308);
            sub_1A55034FC(v44 + *(int *)(v73 + 64), type metadata accessor for ClientCommand);
            v74 = CommandID.tag.getter((uint64_t)v45);
            v32 = v125;
            if (__PAIR64__(HIDWORD(v74), v74) == __PAIR64__(v117, v120))
            {
              sub_1A55034FC((uint64_t)v118, type metadata accessor for TaskHistory.Running);
              swift_bridgeObjectRelease();
              v75 = (uint64_t)v122;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1A55240D4(v113, v75);
              v76 = sub_1A55F7748(v72, v126);
              if (((v77 >> 34) & 0x3F) == 0x3F)
                return;
              if ((v77 & 0x8000000000) == 0)
                goto LABEL_60;
              if ((v77 & 1) != 0)
                return;
              break;
            }
          }
          sub_1A55034FC((uint64_t)v118, type metadata accessor for TaskHistory.Running);
          __break(1u);
          goto LABEL_77;
        }
      }
      sub_1A55034FC((uint64_t)v25, v45);
      swift_bridgeObjectRelease();
      ++v44;
      v42 += v43;
      if (v41 == v44)
        goto LABEL_21;
    }
  }
  if (*(_BYTE *)(v124 + 9) == 1)
  {
    sub_1A552316C(v32, v136);
    if (sub_1A5523B90((uint64_t)v136) != 11)
      return;
    v78 = *(_QWORD *)sub_1A5524678((uint64_t)v136);
    v79 = sub_1A5534BE4();
    v80 = MessageIdentifierSet.init()(&type metadata for SequenceNumber, v79);
    v82 = v81;
    v83 = HIDWORD(v81);
    v132 = v80;
    v133 = v81;
    v134 = BYTE4(v81);
    v84 = *(_QWORD *)(v78 + 16);
    if (v84)
    {
      v85 = (int *)(v78 + 32);
      sub_1A552316C(v138, &v129);
      sub_1A5524678((uint64_t)&v129);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      do
      {
        v86 = *v85++;
        v128 = v86;
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8760);
        MessageIdentifierSet.insert(_:)();
        --v84;
      }
      while (v84);
      sub_1A5529E00((uint64_t)v32);
      v87 = v132;
      v82 = v133;
      LOBYTE(v83) = v134;
    }
    else
    {
      v87 = v80;
    }
  }
  else
  {
    sub_1A552316C(v32, v136);
    if (sub_1A5523B90((uint64_t)v136) != 12)
      return;
    v88 = (__int128 *)sub_1A5524678((uint64_t)v136);
    v129 = *v88;
    v130 = v88[1];
    v131 = v88[2];
    ExtendedSearchResponse.matchedSequenceNumbers.getter();
    if ((~v90 & 0xFF00000000) == 0)
      return;
    v87 = v89;
    v83 = HIDWORD(v90);
    v82 = v90;
  }
  v91 = sub_1A553184C(v87, v82 | ((unint64_t)v83 << 32));
  sub_1A54E3458(v87, v82, v83);
  if ((v91 & 0x100000000) == 0)
  {
    v92 = v124;
    *(_DWORD *)(v124 + 16) = v91;
    *(_BYTE *)(v92 + 20) = 0;
  }
}

unint64_t sub_1A55FAA04(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int32x2_t *v29;
  char v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int32x2_t *v49;
  char v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;

  if (((result >> 59) & 0x1E | (result >> 2) & 1) != 8)
    return result;
  if (*(_QWORD *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x18) != a3)
    return result;
  v10 = *(_QWORD *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x20);
  v11 = *(unsigned int *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x28);
  v12 = *(unsigned __int8 *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x2C);
  v49 = *(int32x2_t **)((result & 0xFFFFFFFFFFFFFFBLL) + 0x30);
  v54 = *(unsigned int *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x38);
  v55 = *(unsigned __int8 *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x3C);
  result = sub_1A54FF30C(a2, *(_QWORD *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x10));
  if ((result & 1) == 0)
    return result;
  v13 = *(_QWORD **)(v6 + 24);
  v58 = v13[2];
  if (!v58)
    return result;
  v44 = a5;
  v45 = a6;
  v42 = v6;
  v43 = a4;
  v46 = v10;
  v47 = v11;
  v48 = v12;
  sub_1A54E4334(v10, v11, v12);
  sub_1A54E4334((uint64_t)v49, v54, v55);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v14 = 0;
  v15 = 9;
  v57 = v13;
  while (1)
  {
    v17 = (unsigned int *)&v13[v15];
    v18 = v13[v15 - 5];
    v19 = *(v17 - 8);
    v20 = *((_BYTE *)v17 - 28);
    v21 = *((_QWORD *)v17 - 3);
    v22 = *(v17 - 4);
    v23 = *((unsigned __int8 *)v17 - 12);
    v59 = *((_QWORD *)v17 - 1);
    v24 = *v17 | ((unint64_t)*((unsigned __int8 *)v17 + 4) << 32);
    v25 = *((unsigned __int8 *)v17 + 4);
    sub_1A54E4334(v21, v22, *((_BYTE *)v17 - 12));
    if (v25 >= 0xFF)
      break;
    sub_1A54E4334(v18, v19, v20);
LABEL_7:
    v16 = v59;
LABEL_8:
    sub_1A5503BA0(v16, v24);
    sub_1A54E3458(v18, v19, v20);
    sub_1A54E3458(v21, v22, v23);
    sub_1A5503B8C(v16, v24);
    ++v14;
    v15 += 6;
    v13 = v57;
    if (v58 == v14)
    {
      sub_1A54E3458((uint64_t)v49, v54, v55);
LABEL_14:
      swift_bridgeObjectRelease();
      return sub_1A54E3458(v46, v47, v48);
    }
  }
  sub_1A54E4334(v21, v22, v23);
  sub_1A54E4334(v18, v19, v20);
  v56 = v56 & 0xFFFFFF0000000000 | v22 | (v23 << 32);
  sub_1A54E3414();
  v26 = MessageIdentifierSetNonEmpty.init(set:)(v21, v56);
  if (BYTE4(v27) == 255)
    goto LABEL_7;
  v28 = v27;
  v51 = v18;
  v29 = (int32x2_t *)v26;
  sub_1A54E4334((uint64_t)v49, v54, v55);
  v52 = v52 & 0xFFFFFF0000000000 | v54 | (v55 << 32);
  v53 = v53 & 0xFFFFFF0000000000 | v28 & 0xFFFFFFFFFFLL;
  static MessageIdentifierSet.__derived_struct_equals(_:_:)(v29, v53, v49, v52);
  v50 = v30;
  sub_1A54E3458((uint64_t)v49, v54, v55);
  sub_1A5503B8C((uint64_t)v29, v28);
  if ((v50 & 1) == 0)
  {
    v16 = v59;
    v18 = v51;
    goto LABEL_8;
  }
  sub_1A5503BA0(v59, v24);
  sub_1A54E3458(v51, v19, v20);
  sub_1A54E3458(v21, v22, v23);
  sub_1A5503B8C(v59, v24);
  sub_1A54E3458((uint64_t)v49, v54, v55);
  v31 = v57;
  swift_bridgeObjectRelease();
  v32 = sub_1A55B0260(v14, 0, v45);
  v33 = *(_QWORD *)(v32 + 16);
  if (!v33)
    goto LABEL_14;
  v34 = 0;
  while ((sub_1A55F3D24(*(_DWORD *)(v32 + 4 * v34 + 32), v43, v44) & 1) == 0)
  {
    if (v33 == ++v34)
      goto LABEL_14;
  }
  swift_bridgeObjectRelease();
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    result = (unint64_t)sub_1A554B7C0(v57);
    v31 = (_QWORD *)result;
  }
  if (v14 >= v31[2])
  {
    __break(1u);
  }
  else
  {
    v35 = (unsigned int *)&v31[v15];
    if (BYTE4(v31[v15]) == 255)
    {
      *((_QWORD *)v35 - 1) = v46;
      *((_BYTE *)v35 + 4) = v48;
      *v35 = v47;
    }
    else
    {
      v36 = *v35 | ((unint64_t)BYTE4(v31[v15]) << 32);
      v37 = *((_QWORD *)v35 - 1);
      sub_1A54E4334(v37, v36, SBYTE4(v36));
      MessageIdentifierSet.union(_:)(v46, v47 | (v48 << 32), v37, v36);
      v39 = v38;
      v41 = v40;
      sub_1A5503B8C(v37, v36);
      sub_1A5503B8C(v37, v36);
      *((_QWORD *)v35 - 1) = v39;
      *((_BYTE *)v35 + 4) = BYTE4(v41);
      *v35 = v41;
      result = sub_1A54E3458(v46, v47, v48);
    }
    *(_QWORD *)(v42 + 24) = v31;
  }
  return result;
}

uint64_t sub_1A55FAE78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(qword_1EE796DC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroyTm_1()
{
  uint64_t v0;
  unint64_t v1;

  if (*(unsigned __int8 *)(v0 + 28) != 255)
  {
    v1 = *(unsigned int *)(v0 + 24) | ((unint64_t)*(unsigned __int8 *)(v0 + 28) << 32);
    sub_1A54E3458(*(_QWORD *)(v0 + 16), v1, SBYTE4(v1));
  }
  return swift_deallocObject();
}

ValueMetadata *_s20GrowWindowOfInterestV9CommandIDOMa()
{
  return &_s20GrowWindowOfInterestV9CommandIDON;
}

uint64_t _s19UserInitiatedSearchV13FetchMessagesVwxx(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  sub_1A54E3458(*(_QWORD *)a1, *(unsigned int *)(a1 + 8), *(_BYTE *)(a1 + 12));
  result = sub_1A54E3458(*(_QWORD *)(a1 + 16), *(unsigned int *)(a1 + 24), *(_BYTE *)(a1 + 28));
  if (*(unsigned __int8 *)(a1 + 44) != 255)
  {
    v3 = *(unsigned int *)(a1 + 40) | ((unint64_t)*(unsigned __int8 *)(a1 + 44) << 32);
    return sub_1A54E3458(*(_QWORD *)(a1 + 32), v3, SBYTE4(v3));
  }
  return result;
}

uint64_t _s19UserInitiatedSearchV13FetchMessagesVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;
  char v6;
  uint64_t v7;
  unsigned int v8;
  char v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD *)a2;
  v5 = *(_DWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 12);
  sub_1A54E4334(*(_QWORD *)a2, v5, v6);
  *(_QWORD *)a1 = v4;
  *(_DWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 12) = v6;
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_DWORD *)(a2 + 24);
  v9 = *(_BYTE *)(a2 + 28);
  sub_1A54E4334(v7, v8, v9);
  *(_QWORD *)(a1 + 16) = v7;
  *(_DWORD *)(a1 + 24) = v8;
  *(_BYTE *)(a1 + 28) = v9;
  v10 = (uint64_t *)(a2 + 32);
  if (*(unsigned __int8 *)(a2 + 44) == 255)
  {
    *(_QWORD *)(a1 + 32) = *v10;
    *(_QWORD *)(a1 + 37) = *(_QWORD *)(a2 + 37);
  }
  else
  {
    v11 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned __int8 *)(a2 + 44) << 32);
    v12 = *v10;
    sub_1A54E4334(*v10, v11, SBYTE4(v11));
    *(_QWORD *)(a1 + 32) = v12;
    *(_DWORD *)(a1 + 40) = v11;
    *(_BYTE *)(a1 + 44) = BYTE4(v11);
  }
  return a1;
}

uint64_t _s19UserInitiatedSearchV13FetchMessagesVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t *v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  v4 = *(_QWORD *)a2;
  v5 = *(_DWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 12);
  sub_1A54E4334(*(_QWORD *)a2, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(unsigned int *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_DWORD *)(a1 + 8) = v5;
  v9 = *(_BYTE *)(a1 + 12);
  *(_BYTE *)(a1 + 12) = v6;
  sub_1A54E3458(v7, v8, v9);
  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_DWORD *)(a2 + 24);
  v12 = *(_BYTE *)(a2 + 28);
  sub_1A54E4334(v10, v11, v12);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(unsigned int *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v10;
  *(_DWORD *)(a1 + 24) = v11;
  v15 = *(_BYTE *)(a1 + 28);
  *(_BYTE *)(a1 + 28) = v12;
  sub_1A54E3458(v13, v14, v15);
  v16 = (uint64_t *)(a1 + 32);
  v17 = (uint64_t *)(a2 + 32);
  v18 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned __int8 *)(a2 + 44) << 32);
  if (*(unsigned __int8 *)(a1 + 44) == 255)
  {
    if (BYTE4(v18) == 255)
    {
      v19 = *v17;
      *(_QWORD *)(a1 + 37) = *(uint64_t *)((char *)v17 + 5);
      *v16 = v19;
    }
    else
    {
      v21 = *v17;
      sub_1A54E4334(*v17, v18, SBYTE4(v18));
      *(_QWORD *)(a1 + 32) = v21;
      *(_DWORD *)(a1 + 40) = v18;
      *(_BYTE *)(a1 + 44) = BYTE4(v18);
    }
  }
  else if (BYTE4(v18) == 255)
  {
    sub_1A55C6578(a1 + 32);
    v20 = *(uint64_t *)((char *)v17 + 5);
    *v16 = *v17;
    *(_QWORD *)(a1 + 37) = v20;
  }
  else
  {
    v22 = *v17;
    sub_1A54E4334(*v17, v18, SBYTE4(v18));
    v23 = *(_QWORD *)(a1 + 32);
    v24 = *(unsigned int *)(a1 + 40);
    *(_QWORD *)(a1 + 32) = v22;
    *(_DWORD *)(a1 + 40) = v18;
    v25 = *(_BYTE *)(a1 + 44);
    *(_BYTE *)(a1 + 44) = BYTE4(v18);
    sub_1A54E3458(v23, v24, v25);
  }
  return a1;
}

uint64_t _s19UserInitiatedSearchV13FetchMessagesVwta(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  int v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD *v15;
  unsigned __int8 v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = *a2;
  v5 = *((_DWORD *)a2 + 2);
  v6 = *((_BYTE *)a2 + 12);
  v7 = *(_QWORD *)a1;
  v8 = *(unsigned int *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_DWORD *)(a1 + 8) = v5;
  v9 = *(_BYTE *)(a1 + 12);
  *(_BYTE *)(a1 + 12) = v6;
  sub_1A54E3458(v7, v8, v9);
  v10 = *((_DWORD *)a2 + 6);
  v11 = *((_BYTE *)a2 + 28);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(unsigned int *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_DWORD *)(a1 + 24) = v10;
  v14 = *(_BYTE *)(a1 + 28);
  *(_BYTE *)(a1 + 28) = v11;
  sub_1A54E3458(v12, v13, v14);
  v15 = a2 + 4;
  v16 = *(_BYTE *)(a1 + 44);
  if (v16 != 255)
  {
    v17 = *((unsigned int *)a2 + 10) | ((unint64_t)*((unsigned __int8 *)a2 + 44) << 32);
    if (HIDWORD(v17) <= 0xFE)
    {
      v18 = *(unsigned int *)(a1 + 40);
      v19 = *(_QWORD *)(a1 + 32);
      *(_QWORD *)(a1 + 32) = *v15;
      *(_DWORD *)(a1 + 40) = v17;
      *(_BYTE *)(a1 + 44) = BYTE4(v17);
      sub_1A54E3458(v19, v18, v16);
      return a1;
    }
    sub_1A55C6578(a1 + 32);
  }
  *(_QWORD *)(a1 + 32) = *v15;
  *(_QWORD *)(a1 + 37) = *(uint64_t *)((char *)a2 + 37);
  return a1;
}

uint64_t _s19UserInitiatedSearchV13FetchMessagesVwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 45))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 12);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s19UserInitiatedSearchV13FetchMessagesVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 44) = 0;
    *(_DWORD *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 45) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 45) = 0;
    if (a2)
      *(_BYTE *)(result + 12) = -(char)a2;
  }
  return result;
}

ValueMetadata *_s20GrowWindowOfInterestV6ResultVMa()
{
  return &_s20GrowWindowOfInterestV6ResultVN;
}

uint64_t destroy for FlagsChange()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s20GrowWindowOfInterestVwcp(uint64_t a1, uint64_t a2)
{
  int v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  v3 = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t _s20GrowWindowOfInterestVwca(uint64_t a1, uint64_t a2)
{
  int v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  v3 = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_DWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s20GrowWindowOfInterestVwta(uint64_t a1, uint64_t a2)
{
  int v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  v3 = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FlagsChange(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FlagsChange(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s20GrowWindowOfInterestVMa()
{
  return &_s20GrowWindowOfInterestVN;
}

_QWORD *__swift_memcpy8_8_0(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for FetchedWindow(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for FetchedWindow(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 8) = v3;
  return result;
}

ValueMetadata *_s20GrowWindowOfInterestV8ActionIDOMa()
{
  return &_s20GrowWindowOfInterestV8ActionIDON;
}

uint64_t _s20GrowWindowOfInterestV9CommandIDO4KindOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A55FB5A4 + 4 * byte_1A59A9D0B[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A55FB5D8 + 4 * byte_1A59A9D06[v4]))();
}

uint64_t sub_1A55FB5D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A55FB5E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A55FB5E8);
  return result;
}

uint64_t sub_1A55FB5F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A55FB5FCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A55FB600(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A55FB608(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s20GrowWindowOfInterestV9CommandIDO4KindOMa()
{
  return &_s20GrowWindowOfInterestV9CommandIDO4KindON;
}

unint64_t sub_1A55FB628()
{
  unint64_t result;

  result = qword_1EE7A8D18;
  if (!qword_1EE7A8D18)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A9DAC, &_s20GrowWindowOfInterestV9CommandIDO4KindON);
    atomic_store(result, (unint64_t *)&qword_1EE7A8D18);
  }
  return result;
}

uint64_t sub_1A55FB66C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int *v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v75;
  unsigned int v76;
  uint64_t v77;
  unsigned int v78;
  uint64_t v81;
  unint64_t v82;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  char v89;
  unint64_t v90;

  v82 = sub_1A54E3414();
  v13 = MessageIdentifierSet.init()(&type metadata for UID, v82);
  v15 = v14;
  v16 = HIDWORD(v14);
  v85 = v13;
  LODWORD(v86) = v14;
  BYTE4(v86) = BYTE4(v14);
  v17 = *(_QWORD *)(a7 + 16);
  if (v17)
  {
    v75 = a1;
    v77 = a4;
    swift_bridgeObjectRetain_n();
    v19 = 32;
    do
    {
      v90 = *(_QWORD *)(a7 + v19);
      MessageIdentifierSet.init(_:)((uint64_t)&v90, (uint64_t)&type metadata for UID, v82, v18);
      v21 = v20;
      v23 = v22;
      v24 = HIDWORD(v22);
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
      MessageIdentifierSet.formUnion(_:)(v21, v23 & 0xFFFFFFFFFFLL);
      sub_1A54E3458(v21, v23, v24);
      v19 += 12;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease_n();
    v25 = v85;
    v15 = v86;
    LOBYTE(v16) = BYTE4(v86);
    a1 = v75;
    a4 = v77;
  }
  else
  {
    v25 = v13;
  }
  MessageIdentifierSet.subtracting(_:)(a1, a2 & 0xFFFFFFFFFFLL, v25, v15 | ((unint64_t)v16 << 32));
  v27 = v26;
  v29 = v28;
  sub_1A54E3458(v25, v15, v16);
  v30 = MessageIdentifierSetNonEmpty.init(set:)(v27, v29 & 0xFFFFFFFFFFLL);
  v32 = v31;
  if (BYTE4(v31) != 255)
  {
    v85 = a3;
    v86 = a4;
    v87 = a5;
    v88 = a6;
    v89 = BYTE4(a6);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    LOBYTE(v90) = 0;
    v33 = 0xFFFFFFFFLL;
    if ((a9 & 0x100000000) == 0)
      v33 = a9;
    sub_1A552D7A0(v33);
    v34 = *(_QWORD *)(v86 + 16);
    if (v34)
    {
      v81 = v32 & 0xFFFFFFFFFFLL;
      v36 = (unsigned int *)(_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0() + 36);
      while (1)
      {
        v37 = *v36;
        v76 = *(v36 - 1);
        v85 = __PAIR64__(*v36, v76);
        v78 = v37;
        MessageIdentifierSet.init(_:)((uint64_t)&v85, (uint64_t)&type metadata for UID, v82, v35);
        v39 = v38;
        v41 = v40;
        v84 = HIDWORD(v40);
        sub_1A54E4334(v30, v32, SBYTE4(v32));
        MessageIdentifierSet.intersection(_:)(v30, v81, v39, v41 & 0xFFFFFFFFFFLL);
        v42 = v30;
        v44 = v43;
        v46 = v45;
        v47 = HIDWORD(v45);
        v48 = MessageIdentifierSet.isEmpty.getter(v43, v45 & 0xFFFFFFFFFFLL);
        v49 = v44;
        v30 = v42;
        sub_1A54E3458(v49, v46, v47);
        sub_1A5503B8C(v42, v32);
        sub_1A54E3458(v39, v41, v84);
        if (!v48)
          break;
        v36 += 2;
        if (!--v34)
        {
          swift_bridgeObjectRelease_n();
          goto LABEL_15;
        }
      }
      swift_bridgeObjectRelease_n();
      v85 = __PAIR64__(v78, v76);
      MessageIdentifierSet.init(_:)((uint64_t)&v85, (uint64_t)&type metadata for UID, v82, v50);
      v52 = v51;
      v54 = v53;
      v55 = HIDWORD(v53);
      MessageIdentifierSet.intersection(_:)(v42, v81, v51, v53 & 0xFFFFFFFFFFLL);
      v57 = v56;
      v59 = v58;
      sub_1A5503B8C(v42, v32);
      sub_1A54E3458(v52, v54, v55);
      if ((a9 & 0x100000000) != 0)
      {
        v60 = v59 & 0xFFFFFFFFFFLL;
      }
      else
      {
        LODWORD(v85) = a9;
        v60 = v59 & 0xFFFFFFFFFFLL;
        MessageIdentifierSet.contains(_:)((uint64_t)&v85, v57, v59 & 0xFFFFFFFFFFLL);
        if ((v61 & 1) != 0)
        {
          LODWORD(v90) = a9;
          static MessageIdentifier.... infix(_:_:)();
          v90 = v85;
          MessageIdentifierSet.init(_:)((uint64_t)&v90, (uint64_t)&type metadata for UID, v82, v62);
          v64 = v63;
          v66 = v65;
          v67 = HIDWORD(v65);
          MessageIdentifierSet.union(_:)(v63, v65 & 0xFFFFFFFFFFLL, v57, v59 & 0xFFFFFFFFFFLL);
          v69 = v68;
          v71 = v70;
          sub_1A54E3458(v57, v59, SBYTE4(v59));
          sub_1A54E3458(v64, v66, v67);
          v72 = v71 & 0xFFFFFFFFFFLL;
          v73 = v69;
          return MessageIdentifierSetNonEmpty.init(set:)(v73, v72);
        }
      }
      v73 = v57;
      v72 = v60;
      return MessageIdentifierSetNonEmpty.init(set:)(v73, v72);
    }
    swift_bridgeObjectRelease();
LABEL_15:
    sub_1A5503B8C(v30, v32);
    return 0;
  }
  return v30;
}

uint64_t sub_1A55FBB10(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned int v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t inited;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v42;
  uint64_t v43;
  unsigned int v44;
  char v45;

  v6 = result;
  if ((result & 0x100000000) != 0)
  {
    if ((a5 & 0x100000000) != 0)
      return sub_1A55C19FC(MEMORY[0x1E0DEE9D8]);
    goto LABEL_6;
  }
  if ((_DWORD)result != -1)
  {
    v6 = result + 1;
    if ((a5 & 0x100000000) != 0)
    {
LABEL_12:
      v8 = sub_1A54E3414();
      v9 = MessageIdentifierSet.init()(&type metadata for UID, v8);
      v11 = v10;
      v12 = HIDWORD(v10);
      v43 = v9;
      v44 = v10;
      v45 = BYTE4(v10);
      v13 = *(_QWORD *)(a3 + 16);
      if (v13)
      {
        swift_bridgeObjectRetain_n();
        v15 = 32;
        do
        {
          v42 = *(_QWORD *)(a3 + v15);
          MessageIdentifierSet.init(_:)((uint64_t)&v42, (uint64_t)&type metadata for UID, v8, v14);
          v17 = v16;
          v19 = v18;
          v20 = HIDWORD(v18);
          __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
          MessageIdentifierSet.formUnion(_:)(v17, v19 & 0xFFFFFFFFFFLL);
          sub_1A54E3458(v17, v19, v20);
          v15 += 12;
          --v13;
        }
        while (v13);
        swift_bridgeObjectRelease_n();
        v21 = v43;
        v11 = v44;
        LOBYTE(v12) = v45;
      }
      else
      {
        v21 = v9;
      }
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AF10);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1A59ABD10;
      LODWORD(v43) = v6;
      LODWORD(v42) = -1;
      static MessageIdentifier.... infix(_:_:)();
      v23 = sub_1A55C19FC(inited);
      v25 = v24;
      v26 = HIDWORD(v24);
      swift_setDeallocating();
      MessageIdentifierSet.subtracting(_:)(v23, v25 & 0xFFFFFFFFFFLL, v21, v11 | ((unint64_t)v12 << 32));
      v28 = v27;
      v30 = v29;
      v40 = HIDWORD(v29);
      sub_1A54E3458(v23, v25, v26);
      sub_1A54E3458(v21, v11, v12);
      if ((a2 & 0x100000000) != 0)
        v31 = 1;
      else
        v31 = a2;
      LODWORD(v42) = v31;
      static MessageIdentifier.... infix(_:_:)();
      v42 = v43;
      MessageIdentifierSet.init(_:)((uint64_t)&v42, (uint64_t)&type metadata for UID, v8, v32);
      v34 = v33;
      v36 = v35;
      v37 = HIDWORD(v35);
      MessageIdentifierSet.intersection(_:)(v33, v35 & 0xFFFFFFFFFFLL, v28, v30 & 0xFFFFFFFFFFLL);
      v39 = v38;
      sub_1A54E3458(v34, v36, v37);
      sub_1A54E3458(v28, v30, v40);
      return v39;
    }
LABEL_6:
    if (v6 <= a5)
      v7 = a5;
    else
      v7 = v6;
    if ((result & 0x100000000) != 0)
      v6 = a5;
    else
      v6 = v7;
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A55FBDD8(unsigned int *a1, unsigned int *a2)
{
  char v3;
  uint64_t result;
  unint64_t v5;
  unint64_t v6;

  v3 = *((_BYTE *)a1 + 5);
  result = *((unsigned __int8 *)a2 + 5);
  if ((v3 & 1) == 0)
  {
    if ((result & 1) == 0)
    {
      v5 = *a2 | ((unint64_t)*((unsigned __int8 *)a2 + 4) << 32);
      v6 = *a1 | ((unint64_t)*((unsigned __int8 *)a1 + 4) << 32);
      if ((v6 & 0x100000000) != 0)
      {
        if ((v5 & 0x100000000) != 0)
          return 1;
      }
      else if ((v5 & 0x100000000) == 0 && v6 == *a2)
      {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_1A55FBE30(uint64_t a1, uint64_t a2)
{
  _BOOL4 v3;

  v3 = *(_DWORD *)a2 == *(_DWORD *)a1 && *(_DWORD *)(a2 + 4) == *(_DWORD *)(a1 + 4);
  return v3 & (*(unsigned __int8 *)(a1 + 8) ^ *(unsigned __int8 *)(a2 + 8) ^ 1u);
}

uint64_t sub_1A55FBE5C(uint64_t a1, uint64_t a2)
{
  return sub_1A55FBF58(*(_QWORD *)a1, *(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned __int8 *)(a1 + 12) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 13) << 40), *(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned __int8 *)(a1 + 20) << 32), *(_QWORD *)a2, *(unsigned int *)(a2 + 8) | ((unint64_t)*(unsigned __int8 *)(a2 + 12) << 32) | ((unint64_t)*(unsigned __int8 *)(a2 + 13) << 40), *(unsigned int *)(a2 + 16) | ((unint64_t)*(unsigned __int8 *)(a2 + 20) << 32));
}

uint64_t sub_1A55FBED4(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v4;

  if ((a2 & 1) != 0)
    v2 = 14931;
  else
    v2 = 978332499;
  v4 = v2;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796E58);
  sub_1A594B490();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1A55FBF4C()
{
  uint64_t v0;

  return sub_1A55FBED4(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

uint64_t sub_1A55FBF58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (!sub_1A55380F0(a1, a4))
    return 0;
  if ((a2 & 0x10000000000) != 0)
  {
    if ((a5 & 0x10000000000) == 0)
      return 0;
  }
  else
  {
    if ((a5 & 0x10000000000) != 0)
      return 0;
    if ((a2 & 0x100000000) != 0)
    {
      if ((a5 & 0x100000000) == 0)
        return 0;
    }
    else if ((a5 & 0x100000000) != 0 || a5 != a2)
    {
      return 0;
    }
  }
  if ((a3 & 0x100000000) != 0)
  {
    if ((a6 & 0x100000000) != 0)
      return 1;
  }
  else if ((a6 & 0x100000000) == 0 && a6 == a3)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_1A55FBFDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v5;
  char *v6;
  char *v7;
  ValueMetadata *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t result;
  ValueMetadata *v36;
  int64_t v37;
  ValueMetadata *v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  char *v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  char *v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  char v53;
  char *v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return MEMORY[0x1E0DEE9D8];
  v47 = a3 & 0xFFFFFFFFFFLL;
  v5 = sub_1A54E3414();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v7 = (char *)(a1 + 40);
  v49 = (char *)MEMORY[0x1E0DEE9D8];
  v8 = &type metadata for UID;
  while (1)
  {
    v55 = v3;
    v53 = *v7;
    v54 = v7;
    v57 = *((_QWORD *)v7 - 1);
    MessageIdentifierSet.init(_:)((uint64_t)&v57, (uint64_t)v8, v5, (uint64_t)v6);
    v14 = v13;
    v16 = v15;
    v17 = HIDWORD(v15);
    MessageIdentifierSet.intersection(_:)(a2, v47, v13, v15 & 0xFFFFFFFFFFLL);
    v19 = v18;
    v21 = v20;
    v56 = HIDWORD(v20);
    sub_1A54E3458(v14, v16, v17);
    MessageIdentifierSet.ranges.getter(v19, v21 & 0xFFFFFFFFFFLL);
    v23 = v22;
    v25 = v24;
    v26 = HIDWORD(v24);
    v27 = v24 & 0xFFFFFFFFFFLL;
    if (!MessageIdentifierSet.RangeView.endIndex.getter(v22, v24 & 0xFFFFFFFFFFLL))
    {
      sub_1A54E3458(v23, v25, v26);
      v9 = v19;
      v10 = v21;
LABEL_4:
      sub_1A54E3458(v9, v10, v56);
      v11 = v55;
      v12 = v54;
      goto LABEL_5;
    }
    v51 = v27 | v51 & 0xFFFFFF0000000000;
    MessageIdentifierSet.RangeView.subscript.getter(0, v23, v51);
    sub_1A54E3458(v23, v25, v26);
    v28 = v21 & 0xFFFFFFFFFFLL | v52 & 0xFFFFFF0000000000;
    MessageIdentifierSet.ranges.getter(v19, v28);
    v30 = v29;
    v32 = v31;
    v33 = HIDWORD(v31);
    v50 = v50 & 0xFFFFFF0000000000 | v31 & 0xFFFFFFFFFFLL;
    v52 = v28;
    if (!MessageIdentifierSet.RangeView.endIndex.getter(v29, v50))
    {
      sub_1A54E3458(v30, v32, v33);
      v9 = v19;
      v10 = v21;
      goto LABEL_4;
    }
    v34 = v32 & 0xFFFFFFFFFFLL;
    v46 = v32 & 0xFFFFFFFFFFLL | v46 & 0xFFFFFF0000000000;
    result = MessageIdentifierSet.RangeView.endIndex.getter(v30, v46);
    v36 = v8;
    v37 = result - 1;
    if (__OFSUB__(result, 1))
      break;
    v45 = v34 | v45 & 0xFFFFFF0000000000;
    v38 = v36;
    result = MessageIdentifierSet.RangeView.endIndex.getter(v30, v45);
    if (v37 < 0 || v37 >= result)
      goto LABEL_21;
    v39 = v37;
    v44 = v34 | v44 & 0xFFFFFF0000000000;
    v8 = v38;
    MessageIdentifierSet.RangeView.subscript.getter(v39, v30, v44);
    sub_1A54E3458(v30, v32, v33);
    sub_1A54E3458(v19, v21, v56);
    static MessageIdentifier.... infix(_:_:)();
    v40 = v57;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    {
      v11 = v55;
      v6 = v49;
    }
    else
    {
      v6 = sub_1A54F0788(0, *((_QWORD *)v49 + 2) + 1, 1, v49);
      v11 = v55;
    }
    v12 = v54;
    v42 = *((_QWORD *)v6 + 2);
    v41 = *((_QWORD *)v6 + 3);
    if (v42 >= v41 >> 1)
      v6 = sub_1A54F0788((char *)(v41 > 1), v42 + 1, 1, v6);
    *((_QWORD *)v6 + 2) = v42 + 1;
    v49 = v6;
    v43 = &v6[12 * v42];
    *((_QWORD *)v43 + 4) = v40;
    v43[40] = v53;
LABEL_5:
    v7 = v12 + 12;
    v3 = v11 - 1;
    if (!v3)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v49;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

char *sub_1A55FC380(uint64_t a1, unint64_t a2, unsigned __int8 a3, uint64_t a4, int64_t a5)
{
  char *v5;
  uint64_t v6;
  uint64_t v8;
  unint64_t v11;
  int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  char v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char *v39;
  int v40;
  uint64_t v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  unint64_t v45;
  unint64_t v46;
  char *v47;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  char *v52;
  unint64_t v53;
  char *v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  char *v58;
  unint64_t v59;
  char v60;
  uint64_t v61;
  unsigned int v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v70;
  unsigned int v71;
  char v72;
  uint64_t v73;
  unsigned int v74;
  unsigned __int8 v75;
  unsigned int v76;
  char v77;
  uint64_t v78;
  unsigned int v79;
  unsigned __int8 v80;

  BYTE4(v8) = BYTE4(a4);
  sub_1A5510484(a1, (uint64_t)&v71);
  v11 = v79 | ((unint64_t)v80 << 32);
  v12 = v80 >> 6;
  if (!v12)
  {
    v59 = a2;
    v63 = BYTE4(v8);
    v80 = BYTE4(v11) & 0x3F;
    v13 = v76;
    v68 = v77;
    v14 = v78;
    sub_1A54E4334(v78, v11, BYTE4(v11) & 0x3F);
    sub_1A556C5B4(a1, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
    v15 = HIDWORD(v11) & 0x3F;
LABEL_5:
    v62 = v13;
    v16 = sub_1A54E3414();
    static MessageIdentifierRange.all.getter();
    MessageIdentifierSet.init(_:)((uint64_t)&v70, (uint64_t)&type metadata for UID, v16, v17);
    v19 = v18;
    v21 = v20;
    v22 = HIDWORD(v20);
    sub_1A54E4334(v14, v11, v15);
    MessageIdentifierSet.subtracting(_:)(v14, v11 | (unint64_t)(v15 << 32), v19, v21 & 0xFFFFFFFFFFLL);
    v24 = v23;
    v26 = v25;
    v60 = v15;
    v61 = v14;
    sub_1A54E3458(v14, v11, v15);
    sub_1A54E3458(v19, v21, v22);
    v66 = v26;
    v67 = v24;
    v65 = v26 & 0xFFFFFFFFFFLL;
    MessageIdentifierSet.ranges.getter(v24, v26 & 0xFFFFFFFFFFLL);
    v8 = v27;
    v64 = v28;
    v29 = v28 & 0xFFFFFFFFFFLL;
    if (MessageIdentifierSet.RangeView.endIndex.getter(v27, v28 & 0xFFFFFFFFFFLL))
    {
      v30 = 0;
      v5 = (char *)MEMORY[0x1E0DEE9D8];
      v31 = 12;
      while (1)
      {
        MessageIdentifierSet.RangeView.subscript.getter(v30, v8, v29);
        v32 = v70;
        if (v30 >= MessageIdentifierSet.RangeView.endIndex.getter(v8, v29))
          break;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v5 = sub_1A54F0788(0, *((_QWORD *)v5 + 2) + 1, 1, v5);
        v34 = *((_QWORD *)v5 + 2);
        v33 = *((_QWORD *)v5 + 3);
        v24 = v34 + 1;
        if (v34 >= v33 >> 1)
          v5 = sub_1A54F0788((char *)(v33 > 1), v34 + 1, 1, v5);
        ++v30;
        *((_QWORD *)v5 + 2) = v24;
        v35 = &v5[12 * v34];
        *((_QWORD *)v35 + 4) = v32;
        v35[40] = 0;
        if (v30 == MessageIdentifierSet.RangeView.endIndex.getter(v8, v29))
          goto LABEL_19;
      }
      __break(1u);
      goto LABEL_59;
    }
    v5 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_19:
    v40 = v68 & 1;
    sub_1A54E3458(v8, v64, SBYTE4(v64));
    v41 = sub_1A5531838(v67, v65);
    sub_1A54E3458(v67, v66, SBYTE4(v66));
    if ((a3 & 1) != 0)
    {
      v42 = 0;
      v43 = v62;
      v44 = v62;
      BYTE4(v8) = v63;
    }
    else
    {
      v44 = FetchedWindow.upperBound.getter(v59);
      v42 = v44;
      BYTE4(v8) = v63;
      v43 = v62;
    }
    v31 = v60;
    v24 = v61;
    if (v42 <= v43)
      v42 = v43;
    if ((a3 & 1) != 0)
      v42 = v43;
    if ((v68 & 1) != 0)
      v42 = v44;
    if ((v41 & 0x100000000) != 0)
    {
      if (((v40 != 0) & a3) != 0)
        goto LABEL_36;
    }
    else
    {
      if (v42 <= v41)
        v42 = v41;
      if (((v40 != 0) & a3) != 0)
        v42 = v41;
    }
    if (v42 == -1)
    {
LABEL_40:
      sub_1A54E3458(v24, v11, v31);
      goto LABEL_41;
    }
LABEL_36:
    static MessageIdentifier.... infix(_:_:)();
    v32 = v70;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    {
LABEL_37:
      v46 = *((_QWORD *)v5 + 2);
      v45 = *((_QWORD *)v5 + 3);
      if (v46 >= v45 >> 1)
        v5 = sub_1A54F0788((char *)(v45 > 1), v46 + 1, 1, v5);
      *((_QWORD *)v5 + 2) = v46 + 1;
      v47 = &v5[12 * v46];
      *((_QWORD *)v47 + 4) = v32;
      v47[40] = 1;
      goto LABEL_40;
    }
LABEL_59:
    v5 = sub_1A54F0788(0, *((_QWORD *)v5 + 2) + 1, 1, v5);
    goto LABEL_37;
  }
  if (v12 == 1)
  {
    v59 = a2;
    v63 = BYTE4(v8);
    v80 = BYTE4(v11) & 0x3F;
    v13 = v71;
    v68 = v72;
    v14 = v73;
    v11 = v74;
    v15 = v75;
    goto LABEL_5;
  }
  if ((a3 & 1) != 0)
  {
    sub_1A54E3414();
    static MessageIdentifier.... infix(_:_:)();
    v36 = v70;
    v5 = sub_1A54F0788(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v38 = *((_QWORD *)v5 + 2);
    v37 = *((_QWORD *)v5 + 3);
    if (v38 >= v37 >> 1)
      v5 = sub_1A54F0788((char *)(v37 > 1), v38 + 1, 1, v5);
    *((_QWORD *)v5 + 2) = v38 + 1;
    v39 = &v5[12 * v38];
    *((_QWORD *)v39 + 4) = v36;
    v39[40] = 0;
    goto LABEL_41;
  }
  if (a5 > 1u)
  {
    if (FetchedWindow.upperBound.getter(a2) == -1)
    {
      __break(1u);
    }
    else
    {
      sub_1A54E3414();
      static MessageIdentifier.... infix(_:_:)();
      v6 = v70;
      v5 = sub_1A54F0788(0, 1, 1, MEMORY[0x1E0DEE9D8]);
      v11 = *((_QWORD *)v5 + 2);
      v53 = *((_QWORD *)v5 + 3);
      a5 = v11 + 1;
      if (v11 < v53 >> 1)
      {
LABEL_49:
        *((_QWORD *)v5 + 2) = a5;
        v54 = &v5[12 * v11];
        *((_QWORD *)v54 + 4) = v6;
        v54[40] = 0;
        goto LABEL_41;
      }
    }
    v5 = sub_1A54F0788((char *)(v53 > 1), a5, 1, v5);
    goto LABEL_49;
  }
  if (FetchedWindow.lowerBound.getter(a2) < 2)
  {
    v5 = (char *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    sub_1A54E3414();
    static MessageIdentifier.... infix(_:_:)();
    v49 = v70;
    v5 = sub_1A54F0788(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v51 = *((_QWORD *)v5 + 2);
    v50 = *((_QWORD *)v5 + 3);
    if (v51 >= v50 >> 1)
      v5 = sub_1A54F0788((char *)(v50 > 1), v51 + 1, 1, v5);
    *((_QWORD *)v5 + 2) = v51 + 1;
    v52 = &v5[12 * v51];
    *((_QWORD *)v52 + 4) = v49;
    v52[40] = 0;
  }
  if (FetchedWindow.upperBound.getter(a2) != -1)
  {
    sub_1A54E3414();
    static MessageIdentifier.... infix(_:_:)();
    v55 = v70;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v5 = sub_1A54F0788(0, *((_QWORD *)v5 + 2) + 1, 1, v5);
    v57 = *((_QWORD *)v5 + 2);
    v56 = *((_QWORD *)v5 + 3);
    if (v57 >= v56 >> 1)
      v5 = sub_1A54F0788((char *)(v56 > 1), v57 + 1, 1, v5);
    *((_QWORD *)v5 + 2) = v57 + 1;
    v58 = &v5[12 * v57];
    *((_QWORD *)v58 + 4) = v55;
    v58[40] = 0;
  }
LABEL_41:
  LOBYTE(v71) = 0;
  LOBYTE(v70) = BYTE4(v8) & 1;
  return v5;
}

uint64_t sub_1A55FCAB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v5;
  unint64_t v9;
  unsigned int v10;
  unsigned __int8 v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int *v44;
  unsigned int v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  BOOL v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  int v100;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  unsigned int v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  unint64_t v117;
  unint64_t v118;
  unint64_t v119;
  unsigned int v120;
  char v121;
  uint64_t v122;
  unsigned int v123;
  unsigned __int8 v124;

  if (*(_QWORD *)(a2 + 16) <= a1)
    return 0;
  v102 = *(_QWORD *)(a2 + 16);
  v9 = sub_1A54E3414();
  v122 = MessageIdentifierSet.init()(&type metadata for UID, v9);
  v123 = v10;
  v124 = v11;
  if (a1 < 1)
    return MessageIdentifierSetNonEmpty.init(set:)(v122, v123 | ((unint64_t)v124 << 32));
  v98 = 0;
  if ((a5 & 0x100000000) != 0)
    v12 = -1;
  else
    v12 = a5;
  v100 = v12;
  v13 = *(_QWORD *)(a3 + 16);
  v94 = v13;
  v95 = a3;
  v109 = v9;
  v96 = a1;
  v97 = a5;
  while (1)
  {
    v14 = v122;
    v15 = v123;
    v16 = v124;
    v17 = MessageIdentifierSet.init()(&type metadata for UID, v9);
    v19 = v18;
    v119 = v17;
    v20 = HIDWORD(v18);
    v120 = v18;
    v121 = BYTE4(v18);
    v106 = v14;
    v107 = v15;
    v105 = v16;
    if (v13)
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A54E4334(v14, v15, v16);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v22 = 32;
      do
      {
        v118 = *(_QWORD *)(a3 + v22);
        MessageIdentifierSet.init(_:)((uint64_t)&v118, (uint64_t)&type metadata for UID, v9, v21);
        v24 = v23;
        v26 = v25;
        v27 = HIDWORD(v25);
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
        v5 = v5 & 0xFFFFFF0000000000 | v26 & 0xFFFFFFFFFFLL;
        MessageIdentifierSet.formUnion(_:)(v24, v5);
        sub_1A54E3458(v24, v26, v27);
        v22 += 12;
        --v13;
      }
      while (v13);
      v99 = v5;
      swift_bridgeObjectRelease_n();
      v28 = v119;
      v19 = v120;
      LOBYTE(v20) = v121;
      v29 = v102;
      v14 = v106;
    }
    else
    {
      v99 = v5;
      v30 = v17;
      sub_1A54E4334(v14, v15, v16);
      v28 = v30;
      v29 = v102;
    }
    v31 = v14;
    v103 = v103 & 0xFFFFFF0000000000 | v19 | ((unint64_t)v20 << 32);
    v104 = v104 & 0xFFFFFF0000000000 | v15 | (v16 << 32);
    v32 = v28;
    MessageIdentifierSet.subtracting(_:)(v31, v104, v28, v103);
    v34 = v33;
    v36 = v35;
    sub_1A54E3458(v32, v19, v20);
    v111 = MessageIdentifierSetNonEmpty.init(set:)(v34, v36 & 0xFFFFFFFFFFLL);
    v112 = v37;
    if (BYTE4(v37) == 255)
      break;
    if (v29)
    {
      LODWORD(v118) = *(_DWORD *)(a2 + 32);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      static MessageIdentifier.... infix(_:_:)();
      v38 = v119;
      v39 = a2;
      v41 = v116;
      v40 = v117;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      {
        v42 = *(_QWORD *)(a2 + 16);
        if (!v42)
          goto LABEL_32;
      }
      else
      {
        v39 = (uint64_t)sub_1A554B6E4((_QWORD *)a2);
        v42 = *(_QWORD *)(v39 + 16);
        if (!v42)
        {
LABEL_32:
          __break(1u);
          return 0;
        }
      }
      *(_QWORD *)(v39 + 32) = v38;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AF10);
      v39 = swift_allocObject();
      *(_OWORD *)(v39 + 16) = xmmword_1A59ABD10;
      LODWORD(v119) = 1;
      LODWORD(v118) = v100;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      static MessageIdentifier.... infix(_:_:)();
      swift_bridgeObjectRelease();
      v42 = *(_QWORD *)(v39 + 16);
      v41 = v116;
      v40 = v117;
      if (!v42)
      {
LABEL_34:
        swift_bridgeObjectRelease();
        sub_1A5503B8C(v111, v112);
        break;
      }
    }
    v110 = v112 & 0xFFFFFFFFFFLL;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v44 = (unsigned int *)(v39 + 36);
    while (1)
    {
      v46 = *(v44 - 1);
      v45 = *v44;
      v119 = __PAIR64__(*v44, v46);
      v108 = v45;
      MessageIdentifierSet.init(_:)((uint64_t)&v119, (uint64_t)&type metadata for UID, v9, v43);
      v48 = v47;
      v50 = v49;
      v113 = v47;
      v114 = HIDWORD(v49);
      sub_1A5503BA0(v111, v112);
      v116 = v41 & 0xFFFFFF0000000000 | v110;
      v117 = v40 & 0xFFFFFF0000000000 | v50 & 0xFFFFFFFFFFLL;
      MessageIdentifierSet.intersection(_:)(v111, v116, v48, v117);
      v52 = v51;
      v54 = v53;
      v55 = HIDWORD(v53);
      v115 = v115 & 0xFFFFFF0000000000 | v53 & 0xFFFFFFFFFFLL;
      v56 = MessageIdentifierSet.isEmpty.getter(v51, v115);
      sub_1A54E3458(v52, v54, v55);
      sub_1A5503B8C(v111, v112);
      sub_1A54E3458(v113, v50, v114);
      if (!v56)
        break;
      v44 += 2;
      --v42;
      v9 = v109;
      v41 = v116;
      v40 = v117;
      if (!v42)
      {
        swift_bridgeObjectRelease();
        v15 = v107;
        goto LABEL_34;
      }
    }
    swift_bridgeObjectRelease_n();
    v119 = __PAIR64__(v108, v46);
    MessageIdentifierSet.init(_:)((uint64_t)&v119, (uint64_t)&type metadata for UID, v109, v57);
    v59 = v58;
    v61 = v60;
    v62 = HIDWORD(v60);
    v9 = v109;
    MessageIdentifierSet.intersection(_:)(v111, v110, v58, v60 & 0xFFFFFFFFFFLL);
    v64 = v63;
    v66 = v65;
    sub_1A5503B8C(v111, v112);
    sub_1A54E3458(v59, v61, v62);
    v67 = v107;
    if ((v97 & 0x100000000) != 0)
    {
      v85 = v64;
      v68 = v66 & 0xFFFFFFFFFFLL;
      a3 = v95;
      v84 = v96;
      v86 = v93;
      v5 = v99;
    }
    else
    {
      LODWORD(v119) = v97;
      v68 = v66 & 0xFFFFFFFFFFLL;
      v92 = v92 & 0xFFFFFF0000000000 | v66 & 0xFFFFFFFFFFLL;
      MessageIdentifierSet.contains(_:)((uint64_t)&v119, v64, v92);
      a3 = v95;
      v69 = v64;
      v5 = v99;
      if ((v70 & 1) != 0)
      {
        LODWORD(v118) = v97;
        static MessageIdentifier.... infix(_:_:)();
        v118 = v119;
        MessageIdentifierSet.init(_:)((uint64_t)&v118, (uint64_t)&type metadata for UID, v109, v71);
        v73 = v72;
        v75 = v74;
        v76 = HIDWORD(v74);
        v90 = v68 | v90 & 0xFFFFFF0000000000;
        v91 = v91 & 0xFFFFFF0000000000 | v74 & 0xFFFFFFFFFFLL;
        MessageIdentifierSet.union(_:)(v72, v91, v69, v90);
        v78 = v77;
        v80 = v79;
        sub_1A54E3458(v69, v66, SBYTE4(v66));
        sub_1A54E3458(v73, v75, v76);
        v67 = v107;
        v89 = v89 & 0xFFFFFF0000000000 | v80 & 0xFFFFFFFFFFLL;
        v9 = v109;
        v81 = MessageIdentifierSetNonEmpty.init(set:)(v78, v89);
        v83 = v82;
        v84 = v96;
        goto LABEL_28;
      }
      v85 = v69;
      v84 = v96;
      v86 = v93;
    }
    v93 = v68 | v86 & 0xFFFFFF0000000000;
    v81 = MessageIdentifierSetNonEmpty.init(set:)(v85, v93);
    v83 = v87;
LABEL_28:
    sub_1A54E3458(v106, v67, v105);
    if (BYTE4(v83) != 255)
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
      MessageIdentifierSet.formUnion(_:)(v81, v83 & 0xFFFFFFFFFFLL);
      v13 = v94;
      sub_1A5503B8C(v81, v83);
      if (++v98 != v84)
        continue;
    }
    return MessageIdentifierSetNonEmpty.init(set:)(v122, v123 | ((unint64_t)v124 << 32));
  }
  sub_1A54E3458(v106, v15, v105);
  return MessageIdentifierSetNonEmpty.init(set:)(v122, v123 | ((unint64_t)v124 << 32));
}

uint64_t sub_1A55FD1D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t result;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  int v32;
  uint64_t v33;

  v3 = v2;
  v5 = *(_QWORD *)v2;
  v6 = *(unsigned int *)(v2 + 8) | ((unint64_t)*(unsigned __int8 *)(v2 + 12) << 32);
  v8 = *(unsigned int *)(v2 + 16);
  v9 = *(_BYTE *)(v2 + 20);
  LOBYTE(v33) = *(_BYTE *)(v2 + 13);
  v7 = v33;
  LOBYTE(v31) = v9;
  result = sub_1A55FCAB8(a1, a2, v5, v6 | ((unint64_t)v33 << 40), v8 | ((unint64_t)v9 << 32));
  if (BYTE4(v11) == 255)
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v12 = sub_1A54E3414();
      static MessageIdentifier.... infix(_:_:)();
      v32 = -1;
      static MessageIdentifier.... infix(_:_:)();
      v31 = v33;
      MessageIdentifierSet.init(_:)((uint64_t)&v31, (uint64_t)&type metadata for UID, v12, v13);
      v15 = v14;
      v17 = v16;
      v18 = HIDWORD(v16);
      v19 = v16 & 0xFFFFFFFFFFLL;
      v20 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v21 = sub_1A55FBFDC(v20, v15, v19);
      swift_bridgeObjectRelease();
      *(_QWORD *)v3 = v21;
      LOBYTE(v21) = sub_1A55380F0(v21, v5);
      result = swift_bridgeObjectRelease();
      if ((v21 & 1) == 0 && (v7 & 1) == 0 && (v6 & 0x100000000) == 0)
      {
        if ((_DWORD)v6 != -1)
        {
          LODWORD(v31) = v6 + 1;
          MessageIdentifierSet.contains(_:)((uint64_t)&v31, v15, v19);
          v23 = v22;
          result = sub_1A54E3458(v15, v17, v18);
          if ((v23 & 1) != 0)
            return result;
LABEL_14:
          *(_WORD *)(v3 + 12) = 256;
          *(_DWORD *)(v3 + 8) = 0;
          return result;
        }
LABEL_19:
        __break(1u);
        return result;
      }
      return sub_1A54E3458(v15, v17, v18);
    }
  }
  else
  {
    v24 = result;
    v25 = v11;
    v26 = v11 & 0xFFFFFFFFFFLL;
    v27 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v28 = sub_1A55FBFDC(v27, v24, v26);
    swift_bridgeObjectRelease();
    *(_QWORD *)v3 = v28;
    LOBYTE(v28) = sub_1A55380F0(v28, v5);
    result = swift_bridgeObjectRelease();
    if ((v28 & 1) != 0 || (v7 & 1) != 0 || (v6 & 0x100000000) != 0)
      return sub_1A5503B8C(v24, v25);
    if ((_DWORD)v6 == -1)
    {
      __break(1u);
      goto LABEL_19;
    }
    LODWORD(v33) = v6 + 1;
    sub_1A54E3414();
    MessageIdentifierSet.contains(_:)((uint64_t)&v33, v24, v26);
    v30 = v29;
    result = sub_1A5503B8C(v24, v25);
    if ((v30 & 1) == 0)
      goto LABEL_14;
  }
  return result;
}

uint64_t sub_1A55FD474(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  int v19;
  uint64_t v20;

  v3 = *(_QWORD *)(a2 + 16);
  if ((uint64_t)v3 > result)
  {
    if (__OFSUB__(result, 1))
    {
      __break(1u);
    }
    else if (result - 1 < v3)
    {
      v4 = v2;
      v19 = -1;
      v5 = sub_1A54E3414();
      static MessageIdentifier.... infix(_:_:)();
      v18 = v20;
      MessageIdentifierSet.init(_:)((uint64_t)&v18, (uint64_t)&type metadata for UID, v5, v6);
      v8 = v7;
      v10 = v9;
      v11 = HIDWORD(v9);
      v12 = *(_QWORD *)v4;
      v13 = v9 & 0xFFFFFFFFFFLL;
      v14 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v15 = sub_1A55FBFDC(v14, v8, v13);
      swift_bridgeObjectRelease();
      *(_QWORD *)v4 = v15;
      LOBYTE(v15) = sub_1A55380F0(v15, v12);
      result = swift_bridgeObjectRelease();
      if ((v15 & 1) != 0
        || (*(_BYTE *)(v4 + 13) & 1) != 0
        || ((*(unsigned int *)(v4 + 8) | ((unint64_t)*(unsigned __int8 *)(v4 + 12) << 32)) & 0x100000000) != 0)
      {
        return sub_1A54E3458(v8, v10, v11);
      }
      if (*(_DWORD *)(v4 + 8) != -1)
      {
        LODWORD(v18) = *(_DWORD *)(v4 + 8) + 1;
        MessageIdentifierSet.contains(_:)((uint64_t)&v18, v8, v13);
        v17 = v16;
        result = sub_1A54E3458(v8, v10, v11);
        if ((v17 & 1) == 0)
        {
          *(_WORD *)(v4 + 12) = 256;
          *(_DWORD *)(v4 + 8) = 0;
        }
        return result;
      }
LABEL_14:
      __break(1u);
      return result;
    }
    __break(1u);
    goto LABEL_14;
  }
  return result;
}

char *sub_1A55FD600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, char a7, unint64_t a8, unsigned __int8 a9)
{
  unsigned __int8 v16;
  uint64_t v17;
  unint64_t v18;
  int8x16_t v19;
  uint64_t v20;
  char v21;
  char *v23;
  _QWORD v24[3];
  int8x16_t v25;
  int8x16_t v26;
  unsigned int v27;
  unsigned __int8 v28;

  v16 = a7 & 1;
  sub_1A556C5B4(a5, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E4334);
  v23 = sub_1A55FC380(a5, a6, v16, a8 | ((HIDWORD(a8) & 1) << 32), a9);
  if (a9)
  {
    sub_1A556C5B4(a5, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
    if (a9 == 1)
      v17 = 2;
    else
      v17 = 1;
    sub_1A55FD474(v17, a2);
  }
  else
  {
    sub_1A5510484(a5, (uint64_t)v24);
    v18 = v27 | ((unint64_t)v28 << 32);
    if ((v18 & 0xC000000000) == 0x8000000000
      && v18 == 0x8000000000
      && (v19 = vorrq_s8(v25, v26),
          !(*(_QWORD *)&vorr_s8(*(int8x8_t *)v19.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v19, v19, 8uLL)) | v24[2] | v24[1] | v24[0])))
    {
      v20 = 1;
    }
    else
    {
      v21 = sub_1A5534138(a1, a2);
      sub_1A556C5B4(a5, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
      if ((v21 & 1) != 0)
        v20 = 3;
      else
        v20 = 1;
    }
    sub_1A55FD1D0(v20, a2);
  }
  swift_bridgeObjectRelease();
  sub_1A5503B8C(a3, a4);
  return v23;
}

uint64_t _s11QueryRangesVwCP(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_WORD *)(a1 + 12) = *(_WORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t _s11QueryRangesVwca(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = *(_DWORD *)(a2 + 8);
  *(_WORD *)(a1 + 12) = *(_WORD *)(a2 + 12);
  *(_DWORD *)(a1 + 8) = v4;
  v5 = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_DWORD *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s11QueryRangesVwta(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_WORD *)(a1 + 12) = *(_WORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  return a1;
}

ValueMetadata *_s11QueryRangesVMa()
{
  return &_s11QueryRangesVN;
}

uint64_t _s11QueryRangesV7ElementVwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = v3 >= 2;
  v5 = v3 - 2;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s11QueryRangesV7ElementVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 1;
  }
  return result;
}

ValueMetadata *_s11QueryRangesV7ElementVMa()
{
  return &_s11QueryRangesV7ElementVN;
}

uint64_t _s11QueryRangesV19FetchedWindowUpdateOwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 6))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s11QueryRangesV19FetchedWindowUpdateOwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_WORD *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 6) = v3;
  return result;
}

uint64_t sub_1A55FD9D8(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 5))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1A55FD9F4(uint64_t result, int a2)
{
  if (a2)
  {
    *(_BYTE *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 1;
    *(_BYTE *)(result + 5) = 1;
  }
  else
  {
    *(_BYTE *)(result + 5) = 0;
  }
  return result;
}

ValueMetadata *_s11QueryRangesV19FetchedWindowUpdateOMa()
{
  return &_s11QueryRangesV19FetchedWindowUpdateON;
}

uint64_t _s11QueryRangesV7ElementV11PersistenceOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A55FDA74 + 4 * byte_1A59A9E25[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A55FDAA8 + 4 * byte_1A59A9E20[v4]))();
}

uint64_t sub_1A55FDAA8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A55FDAB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A55FDAB8);
  return result;
}

uint64_t sub_1A55FDAC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A55FDACCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A55FDAD0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A55FDAD8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s11QueryRangesV7ElementV11PersistenceOMa()
{
  return &_s11QueryRangesV7ElementV11PersistenceON;
}

unint64_t sub_1A55FDAF8()
{
  unint64_t result;

  result = qword_1EE7A8D20;
  if (!qword_1EE7A8D20)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A9F20, &_s11QueryRangesV7ElementV11PersistenceON);
    atomic_store(result, (unint64_t *)&qword_1EE7A8D20);
  }
  return result;
}

uint64_t sub_1A55FDB40@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  char v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;

  v44 = a2 & 1;
  if ((a2 & 1) != 0)
  {
    v7 = *(unsigned __int8 *)(a3 + 52);
    v8 = *(unsigned int *)(a3 + 48);
    v9 = *(_QWORD *)(a3 + 32);
    v10 = *(_QWORD *)(a3 + 40);
  }
  else
  {
    v7 = *(unsigned __int8 *)(a3 + 28);
    v8 = *(unsigned int *)(a3 + 24);
    v9 = *(_QWORD *)(a3 + 8);
    v10 = *(_QWORD *)(a3 + 16);
  }
  v48 = v9;
  sub_1A54FCA28((uint64_t)&v48);
  sub_1A54E4334(v10, v8, v7);
  v11 = *(_QWORD *)(a3 + 56);
  v12 = *(unsigned int *)(a3 + 64);
  v41 = *(unsigned __int8 *)(a3 + 68);
  sub_1A54E4334(v11, v12, *(_BYTE *)(a3 + 68));
  sub_1A5503408(a3);
  if (*(_QWORD *)(v9 + 16) >= 0x11AuLL)
  {
    v40 = a1;
    v13 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v14 = sub_1A55FDDC4(v13);
    v16 = v15;
    v17 = HIDWORD(v15);
    v18 = sub_1A5531838(v14, v15 & 0xFFFFFFFFFFLL);
    sub_1A54E3458(v14, v16, v17);
    v19 = sub_1A5531838(v10, v8 | (unint64_t)(v7 << 32));
    if ((v18 & 0x100000000) == 0)
    {
      swift_bridgeObjectRelease();
      sub_1A54E3458(v10, v8, v7);
      if (v19 <= v18)
        v20 = v18;
      else
        v20 = v19;
      if ((v19 & 0x100000000) != 0)
        LODWORD(v19) = v18;
      else
        LODWORD(v19) = v20;
      a1 = v40;
      goto LABEL_15;
    }
    a1 = v40;
    if ((v19 & 0x100000000) == 0)
    {
      swift_bridgeObjectRelease();
      sub_1A54E3458(v10, v8, v7);
LABEL_15:
      v46 = v19;
      v21 = sub_1A54E3414();
      static MessageIdentifier.... infix(_:_:)();
      v45 = v47;
      MessageIdentifierSet.init(_:)((uint64_t)&v45, (uint64_t)&type metadata for UID, v21, v22);
      v24 = v23;
      v26 = v25;
      v27 = HIDWORD(v25);
      v28 = v41;
      v29 = v12 | (v41 << 32);
      v30 = v26 & 0xFFFFFFFFFFLL;
      v31 = v11;
      v32 = v24;
      goto LABEL_17;
    }
  }
  v24 = sub_1A55FDDC4(v9);
  v26 = v33;
  v27 = HIDWORD(v33);
  sub_1A54E3458(v10, v8, v7);
  sub_1A54E3414();
  v28 = v41;
  v29 = v12 | (v41 << 32);
  v30 = v26 & 0xFFFFFFFFFFLL;
  v31 = v11;
  v32 = v24;
LABEL_17:
  MessageIdentifierSet.union(_:)(v31, v29, v32, v30);
  v35 = v34;
  v37 = v36;
  sub_1A54E3458(v11, v12, v28);
  sub_1A54E3458(v24, v26, v27);
  if ((a4 & 1) != 0)
    v38 = 47;
  else
    v38 = 0;
  return sub_1A55FDF6C(a1, v44, v35, v37 & 0xFFFFFFFFFFLL, v38, !(a4 & 1), a5);
}

uint64_t sub_1A55FDDC4(uint64_t a1)
{
  unint64_t v2;
  uint64_t result;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;

  v2 = sub_1A54E3414();
  result = MessageIdentifierSet.init()(&type metadata for UID, v2);
  v4 = 0;
  v13 = result;
  v5 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v8 &= v8 - 1;
      goto LABEL_5;
    }
    v10 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v10 >= v9)
      goto LABEL_23;
    v11 = *(_QWORD *)(v5 + 8 * v10);
    ++v4;
    if (!v11)
    {
      v4 = v10 + 1;
      if (v10 + 1 >= v9)
        goto LABEL_23;
      v11 = *(_QWORD *)(v5 + 8 * v4);
      if (!v11)
      {
        v4 = v10 + 2;
        if (v10 + 2 >= v9)
          goto LABEL_23;
        v11 = *(_QWORD *)(v5 + 8 * v4);
        if (!v11)
        {
          v4 = v10 + 3;
          if (v10 + 3 >= v9)
            goto LABEL_23;
          v11 = *(_QWORD *)(v5 + 8 * v4);
          if (!v11)
            break;
        }
      }
    }
LABEL_22:
    v8 = (v11 - 1) & v11;
LABEL_5:
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
    result = MessageIdentifierSet.insert(_:)();
  }
  v12 = v10 + 4;
  if (v12 >= v9)
  {
LABEL_23:
    swift_release();
    return v13;
  }
  v11 = *(_QWORD *)(v5 + 8 * v12);
  if (v11)
  {
    v4 = v12;
    goto LABEL_22;
  }
  while (1)
  {
    v4 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v4 >= v9)
      goto LABEL_23;
    v11 = *(_QWORD *)(v5 + 8 * v4);
    ++v12;
    if (v11)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1A55FDF6C@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  int v8;
  __int128 v12;
  unint64_t v13;
  uint64_t inited;
  char v15;
  uint64_t v16;
  uint64_t result;

  v8 = a4;
  v12 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a7 + 8) = *(_OWORD *)a1;
  v13 = HIDWORD(a4);
  *(_QWORD *)a7 = 0;
  *(_BYTE *)(a7 + 56) = 0;
  *(_OWORD *)(a7 + 24) = v12;
  *(_DWORD *)(a7 + 40) = *(_DWORD *)(a1 + 32);
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B120);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A59ABD10;
  if ((a2 & 1) != 0)
    v15 = 10;
  else
    v15 = 9;
  *(_BYTE *)(inited + 32) = v15;
  v16 = sub_1A54F8ABC(inited);
  swift_setDeallocating();
  *(_QWORD *)(a7 + 48) = v16;
  *(_BYTE *)(a7 + 57) = a2 & 1;
  *(_QWORD *)(a7 + 64) = a3;
  *(_DWORD *)(a7 + 72) = v8;
  *(_BYTE *)(a7 + 76) = v13;
  *(_QWORD *)(a7 + 96) = &type metadata for FindPendingDownload;
  sub_1A559DF44();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  result = sub_1A594C6B4();
  *(_QWORD *)(a7 + 80) = a5;
  *(_BYTE *)(a7 + 88) = a6 & 1;
  return result;
}

uint64_t sub_1A55FE09C()
{
  uint64_t result;

  result = sub_1A54F8ABC((uint64_t)&unk_1E4E6C3D0);
  qword_1EE7F96B0 = result;
  return result;
}

uint64_t sub_1A55FE0C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(_BYTE *, uint64_t);
  uint64_t *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t result;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  NSObject *v52;
  os_log_type_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE *v57;
  uint64_t v58;
  unint64_t v59;
  int v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  os_log_t v68;
  _BYTE *v69;
  _BYTE *v70;
  _BYTE *v71;
  os_log_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  NSObject *v76;
  os_log_type_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  unint64_t v83;
  int v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _BYTE *v90;
  uint64_t v91;
  _BYTE v92[4];
  int v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _BYTE *v97;
  os_log_t v98;
  _BYTE *v99;
  _BYTE *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _BYTE *v104;
  uint64_t v105;
  int v106;
  _BYTE *v107;
  uint64_t v108;
  int v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;

  v101 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v101);
  v98 = (os_log_t)&v92[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v97 = &v92[-v5];
  MEMORY[0x1E0C80A78](v6);
  v8 = &v92[-v7];
  v9 = sub_1A594A764();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v99 = &v92[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v12);
  v100 = &v92[-v13];
  MEMORY[0x1E0C80A78](v14);
  v104 = &v92[-v15];
  v16 = *(_QWORD *)(v1 + 64);
  v17 = *(unsigned int *)(v1 + 72);
  v18 = *(unsigned __int8 *)(v1 + 76);
  v19 = sub_1A54E3414();
  v20 = v17 | (v18 << 32);
  if (MessageIdentifierSet.isEmpty.getter(v16, v20))
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 16))(v104, a1, v9);
    v21 = (uint64_t)v8;
    sub_1A55034B8(a1, (uint64_t)v8, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v22 = sub_1A594A74C();
    v23 = sub_1A594C030();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc();
      v102 = swift_slowAlloc();
      v105 = v102;
      *(_DWORD *)v24 = 68159235;
      LODWORD(v108) = 2;
      v103 = v9;
      sub_1A594C3CC();
      *(_WORD *)(v24 + 8) = 256;
      v25 = *(int *)(v101 + 20);
      v101 = v10;
      v26 = v21 + v25;
      LOBYTE(v108) = *(_BYTE *)(v21 + v25);
      sub_1A594C3CC();
      *(_WORD *)(v24 + 11) = 2082;
      v27 = *(_QWORD *)(v26 + 8);
      v28 = *(_QWORD *)(v26 + 16);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v108 = sub_1A55791B0(v27, v28, &v105);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 21) = 1040;
      LODWORD(v108) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v24 + 27) = 512;
      LOWORD(v108) = *(_WORD *)(v26 + 24);
      sub_1A594C3CC();
      *(_WORD *)(v24 + 31) = 2160;
      v108 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v24 + 41) = 2085;
      v29 = *(_DWORD *)(v26 + 40);
      v108 = *(_QWORD *)(v26 + 32);
      v109 = v29;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v30 = sub_1A594B4A8();
      v108 = sub_1A55791B0(v30, v31, &v105);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC(v21, type metadata accessor for MailboxTaskLogger);
      _os_log_impl(&dword_1A4F90000, v22, v23, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task.", (uint8_t *)v24, 0x33u);
      v32 = v102;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v32, -1, -1);
      MEMORY[0x1A85B1964](v24, -1, -1);

      v33 = *(uint64_t (**)(_BYTE *, uint64_t))(v101 + 8);
      v34 = &v113;
LABEL_19:
      v70 = (_BYTE *)*(v34 - 32);
      v91 = v103;
      return v33(v70, v91);
    }
    sub_1A55034FC(v21, type metadata accessor for MailboxTaskLogger);

    v33 = *(uint64_t (**)(_BYTE *, uint64_t))(v10 + 8);
    v70 = v104;
    goto LABEL_22;
  }
  v102 = v17;
  v104 = (_BYTE *)v18;
  v35 = v19;
  v36 = v10;
  v103 = v9;
  v95 = v20;
  MessageIdentifierSet.ranges.getter(v16, v20);
  v38 = v37;
  v40 = v39;
  v41 = v39 & 0xFFFFFFFFFFLL;
  v42 = MessageIdentifierSet.RangeView.endIndex.getter(v37, v39 & 0xFFFFFFFFFFLL);
  result = MessageIdentifierSet.RangeView.endIndex.getter(v38, v41);
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v94 = v35;
    v44 = MessageIdentifierSet.RangeView.endIndex.getter(v38, v41);
    v96 = v16;
    sub_1A54E4334(v16, v102, (char)v104);
    result = sub_1A54E3458(v38, v40, SBYTE4(v40));
    if ((v42 & 0x8000000000000000) == 0 && v44 >= v42)
    {
      v45 = v36;
      v46 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v36 + 16);
      if ((unint64_t)v42 > 0x13)
      {
        v71 = v99;
        v9 = v103;
        v46(v99, a1, v103);
        v72 = v98;
        sub_1A55034B8(a1, (uint64_t)v98, type metadata accessor for MailboxTaskLogger);
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        sub_1A550F888(v1, (uint64_t)&v108);
        v73 = v96;
        v74 = v102;
        v75 = (char)v104;
        sub_1A54E4334(v96, v102, (char)v104);
        v76 = sub_1A594A74C();
        v77 = sub_1A594C030();
        v78 = v77;
        if (os_log_type_enabled(v76, v77))
        {
          v79 = swift_slowAlloc();
          LODWORD(v97) = v78;
          v80 = v79;
          v100 = (_BYTE *)swift_slowAlloc();
          v107 = v100;
          *(_DWORD *)v80 = 68159747;
          LODWORD(v105) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v80 + 8) = 256;
          v81 = (char *)v72 + *(int *)(v101 + 20);
          LOBYTE(v105) = *v81;
          sub_1A594C3CC();
          *(_WORD *)(v80 + 11) = 2082;
          v101 = v45;
          v82 = *((_QWORD *)v81 + 1);
          v83 = *((_QWORD *)v81 + 2);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v105 = sub_1A55791B0(v82, v83, (uint64_t *)&v107);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          *(_WORD *)(v80 + 21) = 1040;
          LODWORD(v105) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v80 + 27) = 512;
          LOWORD(v105) = *((_WORD *)v81 + 12);
          sub_1A594C3CC();
          *(_WORD *)(v80 + 31) = 2160;
          v105 = 0x786F626C69616DLL;
          sub_1A594C3CC();
          *(_WORD *)(v80 + 41) = 2085;
          v84 = *((_DWORD *)v81 + 10);
          v105 = *((_QWORD *)v81 + 4);
          v106 = v84;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v85 = sub_1A594B4A8();
          v105 = sub_1A55791B0(v85, v86, (uint64_t *)&v107);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          sub_1A55034FC((uint64_t)v98, type metadata accessor for MailboxTaskLogger);
          *(_WORD *)(v80 + 51) = 2048;
          v87 = MessageIdentifierSet.count.getter(v73, v95);
          v88 = v102;
          sub_1A54E3458(v73, v102, v75);
          v105 = v87;
          sub_1A594C3CC();
          sub_1A54E3458(v73, v88, v75);
          *(_WORD *)(v80 + 61) = 2082;
          if (v110)
            v89 = 6581810;
          else
            v89 = 7631665;
          v105 = sub_1A55791B0(v89, 0xE300000000000000, (uint64_t *)&v107);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          sub_1A550F928((uint64_t)&v108);
          _os_log_impl(&dword_1A4F90000, v76, (os_log_type_t)v97, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task. Excluding %ld, UIDs %{public}s", (uint8_t *)v80, 0x47u);
          v90 = v100;
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v90, -1, -1);
          MEMORY[0x1A85B1964](v80, -1, -1);

          v33 = *(uint64_t (**)(_BYTE *, uint64_t))(v101 + 8);
          v34 = &v111;
          goto LABEL_19;
        }
        sub_1A54E3458(v73, v74, v75);
        sub_1A55034FC((uint64_t)v72, type metadata accessor for MailboxTaskLogger);
        sub_1A54E3458(v73, v74, v75);
        sub_1A550F928((uint64_t)&v108);

        v33 = *(uint64_t (**)(_BYTE *, uint64_t))(v45 + 8);
        v70 = v71;
      }
      else
      {
        v47 = v100;
        v9 = v103;
        v46(v100, a1, v103);
        v48 = v97;
        sub_1A55034B8(a1, (uint64_t)v97, type metadata accessor for MailboxTaskLogger);
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        sub_1A550F888(v1, (uint64_t)&v108);
        v49 = v96;
        v50 = v102;
        v51 = (char)v104;
        sub_1A54E4334(v96, v102, (char)v104);
        v52 = sub_1A594A74C();
        v53 = sub_1A594C030();
        v54 = v53;
        if (os_log_type_enabled(v52, v53))
        {
          v55 = swift_slowAlloc();
          v98 = v52;
          v56 = v55;
          v99 = (_BYTE *)swift_slowAlloc();
          v107 = v99;
          *(_DWORD *)v56 = 68159747;
          LODWORD(v105) = 2;
          v93 = v54;
          sub_1A594C3CC();
          *(_WORD *)(v56 + 8) = 256;
          v57 = &v48[*(int *)(v101 + 20)];
          LOBYTE(v105) = *v57;
          sub_1A594C3CC();
          *(_WORD *)(v56 + 11) = 2082;
          v101 = v45;
          v58 = *((_QWORD *)v57 + 1);
          v59 = *((_QWORD *)v57 + 2);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v105 = sub_1A55791B0(v58, v59, (uint64_t *)&v107);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          *(_WORD *)(v56 + 21) = 1040;
          LODWORD(v105) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v56 + 27) = 512;
          LOWORD(v105) = *((_WORD *)v57 + 12);
          sub_1A594C3CC();
          *(_WORD *)(v56 + 31) = 2160;
          v105 = 0x786F626C69616DLL;
          sub_1A594C3CC();
          *(_WORD *)(v56 + 41) = 2085;
          v60 = *((_DWORD *)v57 + 10);
          v105 = *((_QWORD *)v57 + 4);
          v106 = v60;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v61 = sub_1A594B4A8();
          v105 = sub_1A55791B0(v61, v62, (uint64_t *)&v107);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          sub_1A55034FC((uint64_t)v97, type metadata accessor for MailboxTaskLogger);
          *(_WORD *)(v56 + 51) = 2082;
          sub_1A54E4334(v49, v50, v51);
          MessageIdentifierSet.debugDescription.getter();
          v64 = v63;
          v66 = v65;
          sub_1A54E3458(v49, v50, v51);
          v105 = sub_1A55791B0(v64, v66, (uint64_t *)&v107);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          sub_1A54E3458(v49, v50, v51);
          sub_1A54E3458(v49, v50, v51);
          *(_WORD *)(v56 + 61) = 2082;
          if (v110)
            v67 = 6581810;
          else
            v67 = 7631665;
          v105 = sub_1A55791B0(v67, 0xE300000000000000, (uint64_t *)&v107);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          sub_1A550F928((uint64_t)&v108);
          v68 = v98;
          _os_log_impl(&dword_1A4F90000, v98, (os_log_type_t)v93, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task. Excluding UIDs %{public}s, %{public}s", (uint8_t *)v56, 0x47u);
          v69 = v99;
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v69, -1, -1);
          MEMORY[0x1A85B1964](v56, -1, -1);

          v33 = *(uint64_t (**)(_BYTE *, uint64_t))(v101 + 8);
          v34 = &v112;
          goto LABEL_19;
        }
        sub_1A55034FC((uint64_t)v48, type metadata accessor for MailboxTaskLogger);
        sub_1A54E3458(v49, v50, v51);
        sub_1A54E3458(v49, v50, v51);
        sub_1A550F928((uint64_t)&v108);

        v33 = *(uint64_t (**)(_BYTE *, uint64_t))(v45 + 8);
        v70 = v47;
      }
LABEL_22:
      v91 = v9;
      return v33(v70, v91);
    }
  }
  __break(1u);
  return result;
}

void sub_1A55FEEA4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  int *v30;
  unint64_t v31;
  int v32;
  int v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unsigned int v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  os_log_t v71;
  NSObject *v72;
  os_log_type_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  unint64_t v80;
  unsigned int v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  NSObject *v88;
  os_log_type_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unsigned int v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  os_log_t v104;
  uint64_t v105;
  os_log_t v106;
  NSObject *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  unint64_t v111;
  unsigned int v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  os_log_t v121;
  char *v122;
  uint64_t v123;
  unsigned int v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  os_log_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  os_log_t v136;
  unint64_t v137;
  char *v138;
  uint64_t *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  int v143;
  uint64_t v144;
  unsigned int v145;
  char v146;
  char *v147;

  v3 = v2;
  v6 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v129 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v129 - v10;
  MEMORY[0x1E0C80A78](v12);
  v136 = (os_log_t)((char *)&v129 - v13);
  MEMORY[0x1E0C80A78](v14);
  v138 = (char *)&v129 - v15;
  v16 = sub_1A594A764();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v129 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  MEMORY[0x1E0C80A78](v21);
  v26 = MEMORY[0x1E0C80A78](v22);
  v27 = *v3;
  if (!*v3)
  {
    (*(void (**)(char *, uint64_t, uint64_t, double))(v17 + 16))(v19, a2, v16, v26);
    sub_1A55034B8(a2, (uint64_t)v8, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v44 = sub_1A594A74C();
    v45 = sub_1A594C00C();
    v46 = v45;
    if (os_log_type_enabled(v44, v45))
    {
      v47 = swift_slowAlloc();
      v139 = v3;
      v48 = v47;
      v138 = (char *)swift_slowAlloc();
      v147 = v138;
      *(_DWORD *)v48 = 68159235;
      LODWORD(v144) = 2;
      LODWORD(v137) = v46;
      sub_1A594C3CC();
      *(_WORD *)(v48 + 8) = 256;
      v49 = *(int *)(v6 + 20);
      v142 = v17;
      v50 = &v8[v49];
      LOBYTE(v144) = v8[v49];
      sub_1A594C3CC();
      *(_WORD *)(v48 + 11) = 2082;
      v140 = v16;
      v141 = a2;
      v51 = a1;
      v52 = *((_QWORD *)v50 + 1);
      v53 = *((_QWORD *)v50 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v144 = sub_1A55791B0(v52, v53, (uint64_t *)&v147);
      sub_1A594C3CC();
      a1 = v51;
      swift_bridgeObjectRelease();
      *(_WORD *)(v48 + 21) = 1040;
      LODWORD(v144) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v48 + 27) = 512;
      LOWORD(v144) = *((_WORD *)v50 + 12);
      sub_1A594C3CC();
      *(_WORD *)(v48 + 31) = 2160;
      v144 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v48 + 41) = 2085;
      v54 = *((_DWORD *)v50 + 10);
      v144 = *((_QWORD *)v50 + 4);
      v145 = v54;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v55 = sub_1A594B4A8();
      v144 = sub_1A55791B0(v55, v56, (uint64_t *)&v147);
      a2 = v141;
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v8, type metadata accessor for MailboxTaskLogger);
      _os_log_impl(&dword_1A4F90000, v44, (os_log_type_t)v137, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Persistence returned no messages to download.", (uint8_t *)v48, 0x33u);
      v57 = (uint64_t)v138;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v57, -1, -1);
      v58 = v48;
      v3 = v139;
      MEMORY[0x1A85B1964](v58, -1, -1);

      v59 = (*(uint64_t (**)(char *, uint64_t))(v142 + 8))(v19, v140);
    }
    else
    {
      sub_1A55034FC((uint64_t)v8, type metadata accessor for MailboxTaskLogger);

      v59 = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    }
    goto LABEL_32;
  }
  v131 = v25;
  v132 = v24;
  v134 = v11;
  v135 = (char *)&v129 - v23;
  v141 = a2;
  v142 = v17;
  v139 = v3;
  v28 = *(_QWORD *)(v27 + 16);
  v29 = MEMORY[0x1E0DEE9D8];
  v133 = v6;
  if (v28)
  {
    v144 = MEMORY[0x1E0DEE9D8];
    sub_1A54F4B84(0, v28, 0);
    v29 = v144;
    v30 = (int *)(v27 + 32);
    v31 = *(_QWORD *)(v144 + 16);
    do
    {
      v33 = *v30;
      v30 += 6;
      v32 = v33;
      v144 = v29;
      v34 = *(_QWORD *)(v29 + 24);
      if (v31 >= v34 >> 1)
      {
        sub_1A54F4B84(v34 > 1, v31 + 1, 1);
        v29 = v144;
      }
      *(_QWORD *)(v29 + 16) = v31 + 1;
      *(_DWORD *)(v29 + 4 * v31++ + 32) = v32;
      --v28;
    }
    while (v28);
  }
  v35 = sub_1A54E3414();
  v36 = MessageIdentifierSet.init()(&type metadata for UID, v35);
  v38 = v37;
  v39 = HIDWORD(v37);
  v144 = v36;
  v145 = v37;
  v146 = BYTE4(v37);
  v40 = *(_QWORD *)(v29 + 16);
  v140 = v16;
  if (v40)
  {
    v41 = 0;
    do
    {
      v42 = *(_DWORD *)(v29 + 4 * v41++ + 32);
      v143 = v42;
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
      MessageIdentifierSet.insert(_:)();
    }
    while (v40 != v41);
    swift_bridgeObjectRelease();
    v43 = v144;
    v38 = v145;
    LOBYTE(v39) = v146;
  }
  else
  {
    v43 = v36;
    swift_bridgeObjectRelease();
  }
  v137 = v38 | ((unint64_t)v39 << 32);
  MessageIdentifierSet.ranges.getter(v43, v137);
  v61 = v60;
  v63 = v62;
  v64 = v62 & 0xFFFFFFFFFFLL;
  v65 = MessageIdentifierSet.RangeView.endIndex.getter(v60, v62 & 0xFFFFFFFFFFLL);
  if (MessageIdentifierSet.RangeView.endIndex.getter(v61, v64) < 0)
  {
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    sub_1A54E3458(a1, v61, v63);
    sub_1A54E3458(v43, v38, v39);
    sub_1A54E3458(v43, v38, v39);
    __break(1u);
    goto LABEL_38;
  }
  v66 = MessageIdentifierSet.RangeView.endIndex.getter(v61, v64);
  sub_1A54E3458(v61, v63, SBYTE4(v63));
  if (v65 < 0 || v66 < v65)
    goto LABEL_36;
  if ((unint64_t)(v65 - 21) >= 0xFFFFFFFFFFFFFFECLL)
  {
    a2 = v141;
    v85 = v135;
    v86 = v140;
    (*(void (**)(char *, uint64_t, uint64_t))(v142 + 16))(v135, v141, v140);
    v87 = (uint64_t)v138;
    sub_1A55034B8(a2, (uint64_t)v138, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    sub_1A54E4334(v43, v38, v39);
    v88 = sub_1A594A74C();
    v89 = sub_1A594C00C();
    LODWORD(v136) = v89;
    if (os_log_type_enabled(v88, v89))
    {
      v90 = swift_slowAlloc();
      v132 = v88;
      v91 = v90;
      v134 = (char *)swift_slowAlloc();
      v147 = v134;
      *(_DWORD *)v91 = 68159491;
      LODWORD(v144) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v91 + 8) = 256;
      v92 = *(int *)(v133 + 20);
      v130 = a1;
      v93 = v87 + v92;
      LOBYTE(v144) = *(_BYTE *)(v87 + v92);
      sub_1A594C3CC();
      *(_WORD *)(v91 + 11) = 2082;
      v95 = *(_QWORD *)(v93 + 8);
      v94 = *(_QWORD *)(v93 + 16);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v144 = sub_1A55791B0(v95, v94, (uint64_t *)&v147);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v91 + 21) = 1040;
      LODWORD(v144) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v91 + 27) = 512;
      LOWORD(v144) = *(_WORD *)(v93 + 24);
      sub_1A594C3CC();
      *(_WORD *)(v91 + 31) = 2160;
      v144 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v91 + 41) = 2085;
      v96 = *(_QWORD *)(v93 + 32);
      v97 = *(_DWORD *)(v93 + 40);
      a1 = v130;
      v144 = v96;
      v145 = v97;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v98 = sub_1A594B4A8();
      v144 = sub_1A55791B0(v98, v99, (uint64_t *)&v147);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v138, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v91 + 51) = 2082;
      sub_1A54E4334(v43, v38, v39);
      MessageIdentifierSet.debugDescription.getter();
      v101 = v100;
      v103 = v102;
      sub_1A54E3458(v43, v38, v39);
      v144 = sub_1A55791B0(v101, v103, (uint64_t *)&v147);
      a2 = v141;
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A54E3458(v43, v38, v39);
      sub_1A54E3458(v43, v38, v39);
      v104 = v132;
      _os_log_impl(&dword_1A4F90000, v132, (os_log_type_t)v136, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Persistence returned UIDs %{public}s to download.", (uint8_t *)v91, 0x3Du);
      v105 = (uint64_t)v134;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v105, -1, -1);
      MEMORY[0x1A85B1964](v91, -1, -1);

      v59 = (*(uint64_t (**)(char *, uint64_t))(v142 + 8))(v135, v140);
    }
    else
    {
      sub_1A55034FC(v87, type metadata accessor for MailboxTaskLogger);
      sub_1A54E3458(v43, v38, v39);
      sub_1A54E3458(v43, v38, v39);

      v59 = (*(uint64_t (**)(char *, uint64_t))(v142 + 8))(v85, v86);
    }
    goto LABEL_31;
  }
  v67 = MessageIdentifierSet.isEmpty.getter(v43, v137);
  v68 = v140;
  a2 = v141;
  if (v67)
  {
    sub_1A54E3458(v43, v38, v39);
    v69 = v142;
    v70 = v131;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v142 + 16))(v131, a2, v68);
    v71 = v136;
    sub_1A55034B8(a2, (uint64_t)v136, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v72 = sub_1A594A74C();
    v73 = sub_1A594C00C();
    v74 = v73;
    if (os_log_type_enabled(v72, v73))
    {
      v75 = swift_slowAlloc();
      LODWORD(v138) = v74;
      v76 = v75;
      v77 = swift_slowAlloc();
      v147 = (char *)v77;
      *(_DWORD *)v76 = 68159235;
      LODWORD(v144) = 2;
      v130 = a1;
      sub_1A594C3CC();
      *(_WORD *)(v76 + 8) = 256;
      v78 = (char *)v71 + *(int *)(v133 + 20);
      LOBYTE(v144) = *v78;
      sub_1A594C3CC();
      *(_WORD *)(v76 + 11) = 2082;
      v79 = *((_QWORD *)v78 + 1);
      v80 = *((_QWORD *)v78 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v144 = sub_1A55791B0(v79, v80, (uint64_t *)&v147);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v76 + 21) = 1040;
      LODWORD(v144) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v76 + 27) = 512;
      LOWORD(v144) = *((_WORD *)v78 + 12);
      a1 = v130;
      sub_1A594C3CC();
      *(_WORD *)(v76 + 31) = 2160;
      v144 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v76 + 41) = 2085;
      v81 = *((_DWORD *)v78 + 10);
      v144 = *((_QWORD *)v78 + 4);
      v145 = v81;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v82 = sub_1A594B4A8();
      v144 = sub_1A55791B0(v82, v83, (uint64_t *)&v147);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v136, type metadata accessor for MailboxTaskLogger);
      _os_log_impl(&dword_1A4F90000, v72, (os_log_type_t)v138, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Persistence returned no messages to download.", (uint8_t *)v76, 0x33u);
      swift_arrayDestroy();
      v84 = v77;
      a2 = v141;
      MEMORY[0x1A85B1964](v84, -1, -1);
      MEMORY[0x1A85B1964](v76, -1, -1);

      v59 = (*(uint64_t (**)(uint64_t, uint64_t))(v142 + 8))(v70, v140);
    }
    else
    {
      sub_1A55034FC((uint64_t)v71, type metadata accessor for MailboxTaskLogger);

      v59 = (*(uint64_t (**)(uint64_t, uint64_t))(v69 + 8))(v70, v68);
    }
    goto LABEL_31;
  }
  v106 = v132;
  (*(void (**)(os_log_t, uint64_t, uint64_t))(v142 + 16))(v132, v141, v140);
  sub_1A55034B8(a2, (uint64_t)v134, type metadata accessor for MailboxTaskLogger);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  sub_1A54E4334(v43, v38, v39);
  sub_1A54E4334(v43, v38, v39);
  sub_1A54E4334(v43, v38, v39);
  sub_1A54E4334(v43, v38, v39);
  sub_1A54E4334(v43, v38, v39);
  v107 = sub_1A594A74C();
  LODWORD(v138) = sub_1A594C00C();
  if (!os_log_type_enabled(v107, (os_log_type_t)v138))
  {
    sub_1A54E3458(v43, v38, v39);
    sub_1A54E3458(v43, v38, v39);
    sub_1A54E3458(v43, v38, v39);
    sub_1A55034FC((uint64_t)v134, type metadata accessor for MailboxTaskLogger);
    sub_1A54E3458(v43, v38, v39);
    sub_1A54E3458(v43, v38, v39);
    sub_1A54E3458(v43, v38, v39);

    v59 = (*(uint64_t (**)(os_log_t, uint64_t))(v142 + 8))(v106, v68);
    goto LABEL_31;
  }
  v136 = v107;
  v130 = a1;
  v108 = swift_slowAlloc();
  v135 = (char *)swift_slowAlloc();
  v147 = v135;
  *(_DWORD *)v108 = 68160003;
  LODWORD(v144) = 2;
  sub_1A594C3CC();
  *(_WORD *)(v108 + 8) = 256;
  v109 = &v134[*(int *)(v133 + 20)];
  LOBYTE(v144) = *v109;
  sub_1A594C3CC();
  *(_WORD *)(v108 + 11) = 2082;
  v110 = *((_QWORD *)v109 + 1);
  v111 = *((_QWORD *)v109 + 2);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v144 = sub_1A55791B0(v110, v111, (uint64_t *)&v147);
  sub_1A594C3CC();
  swift_bridgeObjectRelease();
  *(_WORD *)(v108 + 21) = 1040;
  LODWORD(v144) = 2;
  sub_1A594C3CC();
  *(_WORD *)(v108 + 27) = 512;
  LOWORD(v144) = *((_WORD *)v109 + 12);
  sub_1A594C3CC();
  *(_WORD *)(v108 + 31) = 2160;
  v144 = 0x786F626C69616DLL;
  sub_1A594C3CC();
  *(_WORD *)(v108 + 41) = 2085;
  v112 = *((_DWORD *)v109 + 10);
  v144 = *((_QWORD *)v109 + 4);
  v145 = v112;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v113 = sub_1A594B4A8();
  v144 = sub_1A55791B0(v113, v114, (uint64_t *)&v147);
  sub_1A594C3CC();
  swift_bridgeObjectRelease();
  sub_1A55034FC((uint64_t)v134, type metadata accessor for MailboxTaskLogger);
  *(_WORD *)(v108 + 51) = 2048;
  v115 = v137;
  v116 = MessageIdentifierSet.count.getter(v43, v137);
  sub_1A54E3458(v43, v38, v39);
  v144 = v116;
  sub_1A594C3CC();
  sub_1A54E3458(v43, v38, v39);
  *(_WORD *)(v108 + 61) = 1024;
  MessageIdentifierSet.ranges.getter(v43, v115);
  a1 = v117;
  v61 = v118;
  v63 = HIDWORD(v118);
  v119 = v118 & 0xFFFFFFFFFFLL;
  if (!MessageIdentifierSet.RangeView.endIndex.getter(v117, v118 & 0xFFFFFFFFFFLL))
    goto LABEL_37;
  MessageIdentifierSet.RangeView.subscript.getter(0, a1, v119);
  sub_1A54E3458(a1, v61, v63);
  sub_1A54E3458(v43, v38, v39);
  sub_1A594C3CC();
  sub_1A54E3458(v43, v38, v39);
  *(_WORD *)(v108 + 67) = 1024;
  v120 = sub_1A5531838(v43, v137);
  sub_1A54E3458(v43, v38, v39);
  if ((v120 & 0x100000000) != 0)
  {
LABEL_38:
    __break(1u);
    return;
  }
  LODWORD(v144) = v120;
  sub_1A594C3CC();
  sub_1A54E3458(v43, v38, v39);
  v121 = v136;
  _os_log_impl(&dword_1A4F90000, v136, (os_log_type_t)v138, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Persistence returned %ld (min:  %u, max: %u) messages to download.", (uint8_t *)v108, 0x49u);
  v122 = v135;
  swift_arrayDestroy();
  MEMORY[0x1A85B1964](v122, -1, -1);
  MEMORY[0x1A85B1964](v108, -1, -1);

  v59 = (*(uint64_t (**)(os_log_t, uint64_t))(v142 + 8))(v132, v140);
  a1 = v130;
  a2 = v141;
LABEL_31:
  v3 = v139;
LABEL_32:
  v123 = v3[4];
  v124 = *((_DWORD *)v3 + 10);
  MEMORY[0x1E0C80A78](v59);
  *(&v129 - 2) = (uint64_t)v3;
  *(&v129 - 1) = a2;
  if (*(_BYTE *)(a1 + 168) == 1)
  {
    v126 = *(_QWORD *)(a1 + 152);
    v125 = *(_QWORD *)(a1 + 160);
    v144 = *(_QWORD *)(a1 + 144);
    v127 = v144;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A551C6E4((uint64_t)&v144, v123, v124, 0, sub_1A5601CD0, &v129 - 4);
    sub_1A54E8FCC(v127, v126, v125, 1);
    v128 = v144;
    *(_QWORD *)(a1 + 152) = 0;
    *(_QWORD *)(a1 + 160) = 0;
    *(_QWORD *)(a1 + 144) = v128;
    *(_BYTE *)(a1 + 168) = 1;
  }
}

void sub_1A5600178(uint64_t a1, uint64_t a2, NSObject *a3)
{
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  int *v28;
  unint64_t v29;
  int v30;
  int v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  void (*v50)(os_log_t, NSObject *, uint64_t);
  NSObject *v51;
  NSObject *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  os_log_t v68;
  NSObject *v69;
  NSObject *v70;
  os_log_t v71;
  uint64_t v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  NSObject *v90;
  uint64_t v91;
  unint64_t *v92;
  unint64_t v93;
  uint64_t v94;
  _DWORD *v95;
  _DWORD *v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  NSObject *v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  NSObject *v106;
  unint64_t v107;
  uint64_t v108;
  int v109;
  unint64_t *v110;
  unint64_t *v111;
  NSObject **v112;
  _QWORD *v113;
  _DWORD *v114;
  char *v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  NSObject **v119;
  unint64_t v120;
  int v121;
  unint64_t v122;
  char v123;
  char *v124;
  _QWORD *v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t *v129;
  unsigned int *v130;
  unsigned int *v131;
  NSObject *v132;
  NSObject *v133;
  os_log_t v134;
  NSObject *v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  char *v140;
  NSObject **v141;
  uint64_t *v142;
  char *v143;
  uint64_t *v144;
  NSObject *v145;
  uint64_t v146;
  NSObject *v147;
  unsigned int v148;
  unsigned __int8 v149;
  int v150;

  v6 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = ((char *)&v124 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v9);
  v137 = (uint64_t)&v124 - v10;
  v11 = sub_1A594A764();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v13);
  v17 = ((char *)&v124 - v16);
  v18 = *(_QWORD *)a2;
  if (!*(_QWORD *)a2)
    return;
  v135 = a3;
  v125 = (_QWORD *)v6;
  v132 = v8;
  v133 = v15;
  v136 = a2;
  v19 = *(_BYTE *)(a2 + 57);
  v143 = (char *)(a1 + 260);
  v144 = (uint64_t *)(a1 + 248);
  v130 = (unsigned int *)(a1 + 280);
  v131 = (unsigned int *)(a1 + 256);
  v141 = (NSObject **)(a1 + 272);
  v142 = (uint64_t *)(a1 + 264);
  v139 = v14;
  v140 = (char *)(a1 + 284);
  if ((v19 & 1) != 0)
  {
    v20 = *(unsigned __int8 *)(a1 + 284);
    v21 = *(unsigned int *)(a1 + 280);
    v22 = *(_QWORD *)(a1 + 272);
    v23 = *(_QWORD *)(a1 + 264);
  }
  else
  {
    v20 = *(unsigned __int8 *)(a1 + 260);
    v21 = *(unsigned int *)(a1 + 256);
    v22 = *(_QWORD *)(a1 + 248);
    v23 = *(_QWORD *)(a1 + 240);
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54E4334(v22, v21, v20);
  v134 = v17;
  v138 = v12;
  v129 = (unint64_t *)(a1 + 240);
  v128 = a1;
  swift_bridgeObjectRetain_n();
  sub_1A56013D4(v18, v23, v22, v21 | (unint64_t)(v20 << 32));
  v25 = v24;
  swift_bridgeObjectRelease();
  sub_1A54E3458(v22, v21, v20);
  swift_bridgeObjectRelease();
  v26 = *(_QWORD *)(v25 + 16);
  v27 = MEMORY[0x1E0DEE9D8];
  v127 = v25;
  if (v26)
  {
    v146 = MEMORY[0x1E0DEE9D8];
    sub_1A54F4B84(0, v26, 0);
    v27 = v146;
    v28 = (int *)(v25 + 32);
    v29 = *(_QWORD *)(v146 + 16);
    do
    {
      v31 = *v28;
      v28 += 6;
      v30 = v31;
      v146 = v27;
      v32 = *(_QWORD *)(v27 + 24);
      if (v29 >= v32 >> 1)
      {
        sub_1A54F4B84(v32 > 1, v29 + 1, 1);
        v27 = v146;
      }
      *(_QWORD *)(v27 + 16) = v29 + 1;
      *(_DWORD *)(v27 + 4 * v29++ + 32) = v30;
      --v26;
    }
    while (v26);
  }
  v33 = sub_1A54E3414();
  v34 = MessageIdentifierSet.init()(&type metadata for UID, v33);
  v36 = v35;
  v37 = HIDWORD(v35);
  v146 = v34;
  LODWORD(v147) = v35;
  BYTE4(v147) = BYTE4(v35);
  v38 = *(_QWORD *)(v27 + 16);
  if (v38)
  {
    v39 = 0;
    do
    {
      v40 = *(_DWORD *)(v27 + 4 * v39++ + 32);
      v150 = v40;
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
      MessageIdentifierSet.insert(_:)();
    }
    while (v38 != v39);
    swift_bridgeObjectRelease();
    v41 = v146;
    v36 = v147;
    LOBYTE(v37) = BYTE4(v147);
  }
  else
  {
    v41 = v34;
    swift_bridgeObjectRelease();
  }
  v126 = v36 | ((unint64_t)v37 << 32);
  MessageIdentifierSet.ranges.getter(v41, v126);
  v43 = v42;
  v45 = v44;
  v46 = v44 & 0xFFFFFFFFFFLL;
  v47 = MessageIdentifierSet.RangeView.endIndex.getter(v42, v44 & 0xFFFFFFFFFFLL);
  if (MessageIdentifierSet.RangeView.endIndex.getter(v43, v46) < 0)
  {
    __break(1u);
LABEL_41:
    __break(1u);
    return;
  }
  v48 = MessageIdentifierSet.RangeView.endIndex.getter(v43, v46);
  sub_1A54E3458(v43, v45, SBYTE4(v45));
  if (v47 < 0 || v48 < v47)
    goto LABEL_41;
  v49 = v138;
  v50 = *(void (**)(os_log_t, NSObject *, uint64_t))(v138 + 16);
  if ((unint64_t)(v47 - 21) >= 0xFFFFFFFFFFFFFFECLL)
  {
    v71 = v134;
    v70 = v135;
    v72 = v139;
    v50(v134, v135, v139);
    v73 = v137;
    sub_1A55034B8((uint64_t)v70, v137, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    sub_1A54E4334(v41, v36, v37);
    sub_1A54E4334(v41, v36, v37);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54E4334(v41, v36, v37);
    v74 = sub_1A594A74C();
    v75 = sub_1A594C030();
    v135 = v74;
    LODWORD(v133) = v75;
    if (os_log_type_enabled(v74, v75))
    {
      v76 = swift_slowAlloc();
      v132 = swift_slowAlloc();
      v145 = v132;
      *(_DWORD *)v76 = 68160003;
      LODWORD(v146) = 2;
      v124 = (char *)&v146 + 4;
      sub_1A594C3CC();
      *(_WORD *)(v76 + 8) = 256;
      v77 = v73 + *((int *)v125 + 5);
      LOBYTE(v146) = *(_BYTE *)v77;
      sub_1A594C3CC();
      *(_WORD *)(v76 + 11) = 2082;
      v79 = *(_QWORD *)(v77 + 8);
      v78 = *(_QWORD *)(v77 + 16);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v146 = sub_1A55791B0(v79, v78, (uint64_t *)&v145);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v76 + 21) = 1040;
      LODWORD(v146) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v76 + 27) = 512;
      LOWORD(v146) = *(_WORD *)(v77 + 24);
      sub_1A594C3CC();
      *(_WORD *)(v76 + 31) = 2160;
      v146 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v76 + 41) = 2085;
      v80 = *(_DWORD *)(v77 + 40);
      v146 = *(_QWORD *)(v77 + 32);
      LODWORD(v147) = v80;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v81 = sub_1A594B4A8();
      v146 = sub_1A55791B0(v81, v82, (uint64_t *)&v145);
      v125 = &v147;
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC(v137, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v76 + 51) = 2082;
      sub_1A54E4334(v41, v36, v37);
      v83 = v126;
      MessageIdentifierSet.debugDescription.getter();
      v85 = v84;
      v87 = v86;
      sub_1A54E3458(v41, v36, v37);
      v146 = sub_1A55791B0(v85, v87, (uint64_t *)&v145);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A54E3458(v41, v36, v37);
      sub_1A54E3458(v41, v36, v37);
      *(_WORD *)(v76 + 61) = 2048;
      v88 = MessageIdentifierSet.count.getter(v41, v83);
      sub_1A54E3458(v41, v36, v37);
      v146 = v88;
      sub_1A594C3CC();
      sub_1A54E3458(v41, v36, v37);
      *(_WORD *)(v76 + 71) = 2048;
      v89 = *(_QWORD *)(v18 + 16);
      swift_bridgeObjectRelease();
      v146 = v89;
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      v90 = v135;
      _os_log_impl(&dword_1A4F90000, v135, (os_log_type_t)v133, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Adding %{public}s (%ld out of %ld) to download.", (uint8_t *)v76, 0x51u);
      v91 = (uint64_t)v132;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v91, -1, -1);
      MEMORY[0x1A85B1964](v76, -1, -1);

      (*(void (**)(os_log_t, uint64_t))(v138 + 8))(v134, v139);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1A54E3458(v41, v36, v37);
      sub_1A55034FC(v73, type metadata accessor for MailboxTaskLogger);
      sub_1A54E3458(v41, v36, v37);
      sub_1A54E3458(v41, v36, v37);
      sub_1A54E3458(v41, v36, v37);

      swift_bridgeObjectRelease();
      (*(void (**)(os_log_t, uint64_t))(v49 + 8))(v71, v72);
    }
  }
  else
  {
    v51 = v133;
    v52 = v135;
    v53 = v139;
    v50(v133, v135, v139);
    v54 = (uint64_t)v52;
    v55 = (uint64_t)v132;
    sub_1A55034B8(v54, (uint64_t)v132, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54E4334(v41, v36, v37);
    v56 = sub_1A594A74C();
    v57 = sub_1A594C030();
    LODWORD(v137) = v57;
    if (os_log_type_enabled(v56, v57))
    {
      v58 = v55;
      v59 = swift_slowAlloc();
      v135 = swift_slowAlloc();
      v145 = v135;
      *(_DWORD *)v59 = 68159747;
      LODWORD(v146) = 2;
      v124 = (char *)&v146 + 4;
      sub_1A594C3CC();
      *(_WORD *)(v59 + 8) = 256;
      v60 = v58 + *((int *)v125 + 5);
      LOBYTE(v146) = *(_BYTE *)v60;
      sub_1A594C3CC();
      *(_WORD *)(v59 + 11) = 2082;
      v134 = v56;
      v62 = *(_QWORD *)(v60 + 8);
      v61 = *(_QWORD *)(v60 + 16);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v146 = sub_1A55791B0(v62, v61, (uint64_t *)&v145);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v59 + 21) = 1040;
      LODWORD(v146) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v59 + 27) = 512;
      LOWORD(v146) = *(_WORD *)(v60 + 24);
      sub_1A594C3CC();
      *(_WORD *)(v59 + 31) = 2160;
      v146 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v59 + 41) = 2085;
      v63 = *(_DWORD *)(v60 + 40);
      v146 = *(_QWORD *)(v60 + 32);
      LODWORD(v147) = v63;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v64 = sub_1A594B4A8();
      v146 = sub_1A55791B0(v64, v65, (uint64_t *)&v145);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v132, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v59 + 51) = 2048;
      v66 = MessageIdentifierSet.count.getter(v41, v126);
      sub_1A54E3458(v41, v36, v37);
      v146 = v66;
      sub_1A594C3CC();
      sub_1A54E3458(v41, v36, v37);
      *(_WORD *)(v59 + 61) = 2048;
      v67 = *(_QWORD *)(v18 + 16);
      swift_bridgeObjectRelease();
      v146 = v67;
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      v68 = v134;
      _os_log_impl(&dword_1A4F90000, v134, (os_log_type_t)v137, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Adding %ld messages (out of %ld) to download.", (uint8_t *)v59, 0x47u);
      v69 = v135;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v69, -1, -1);
      MEMORY[0x1A85B1964](v59, -1, -1);

      (*(void (**)(NSObject *, uint64_t))(v138 + 8))(v133, v139);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1A54E3458(v41, v36, v37);
      sub_1A55034FC(v55, type metadata accessor for MailboxTaskLogger);
      sub_1A54E3458(v41, v36, v37);

      swift_bridgeObjectRelease();
      (*(void (**)(NSObject *, uint64_t))(v49 + 8))(v51, v53);
    }
  }
  v92 = v129;
  v93 = *v129;
  v94 = *v144;
  v96 = v130;
  v95 = v131;
  v97 = *v131;
  v98 = *v143;
  v99 = *v142;
  v100 = *v141;
  v101 = *v130;
  v102 = *v140;
  LODWORD(v139) = *(unsigned __int8 *)(v136 + 57);
  v137 = v94;
  v138 = v93;
  LODWORD(v136) = v97;
  LODWORD(v135) = v98;
  v134 = v100;
  LODWORD(v133) = v101;
  v132 = v99;
  if ((v139 & 1) != 0)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54E4334((uint64_t)v100, v101, v102);
    v103 = v99;
    v104 = v102;
  }
  else
  {
    v104 = v102;
    v105 = v93;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54E4334(v94, v97, v98);
    v103 = v105;
    v100 = v94;
    LODWORD(v101) = v97;
    v102 = v98;
  }
  v146 = v103;
  v147 = v100;
  v148 = v101;
  v149 = v102;
  sub_1A552F114(v127);
  swift_bridgeObjectRelease();
  v107 = v146;
  v106 = v147;
  v108 = v148;
  v109 = v149;
  v110 = v92;
  if ((v139 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    sub_1A54E3458((uint64_t)v134, v133, v104);
    v112 = v141;
    v111 = (unint64_t *)v142;
    v113 = v141;
    v114 = v96;
    v115 = v140;
    v134 = v106;
    LODWORD(v133) = v108;
    v116 = v109;
    v132 = v107;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1A54E3458(v137, v136, (char)v135);
    v111 = v92;
    v115 = v143;
    v113 = v144;
    v114 = v95;
    v137 = (uint64_t)v106;
    v138 = v107;
    LODWORD(v136) = v108;
    LODWORD(v135) = v109;
    v116 = v104;
    v112 = v141;
  }
  *v111 = v107;
  *v113 = v106;
  *v114 = v108;
  *v115 = v109;
  if (*(_QWORD *)(v107 + 16))
  {
    sub_1A54E4334((uint64_t)v106, v108, v109);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    v117 = MEMORY[0x1E0DEE9D8];
    v107 = sub_1A558A994(MEMORY[0x1E0DEE9D8]);
    sub_1A54E4334((uint64_t)v106, v108, v109);
    v118 = sub_1A55C19FC(v117);
    v119 = v112;
    v121 = v120;
    v122 = HIDWORD(v120);
    sub_1A54E3458((uint64_t)v106, v108, v109);
    v106 = v118;
    v110 = v129;
    LODWORD(v108) = v121;
    v112 = v119;
    LOBYTE(v109) = v122;
    v96 = v130;
    v95 = v131;
  }
  if ((v139 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    sub_1A54E3458((uint64_t)v134, v133, v116);
    *v142 = v107;
    *v112 = v106;
    *v96 = v108;
    *v140 = v109;
    v123 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v123 & 1) == 0)
      return;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1A54E3458(v137, v136, (char)v135);
    *v110 = v107;
    *v144 = (uint64_t)v106;
    *v95 = v108;
    *v143 = v109;
    swift_bridgeObjectRelease();
  }
  sub_1A554B85C(0xAu);
  sub_1A54F3290(&v146, 10);
}

uint64_t sub_1A5601090@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A55530FC(v1 + 96, a1);
}

uint64_t sub_1A560109C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  __int16 v3;
  uint64_t v4;
  int v5;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_WORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_DWORD *)(v1 + 40);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)(a1 + 8) = v2;
  *(_WORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_DWORD *)(a1 + 32) = v5;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t sub_1A56010DC()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t sub_1A56010E4()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t sub_1A56010EC()
{
  uint64_t v0;
  __int128 v2;

  BYTE8(v2) = 0;
  *(_QWORD *)&v2 = *(unsigned __int8 *)(v0 + 57);
  sub_1A594C924();
  return *(_QWORD *)((char *)&v2 + 1);
}

unint64_t sub_1A5601140@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, unint64_t *a3@<X8>)
{
  unint64_t result;

  result = sub_1A5601CD8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A5601174(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1A5601F3C(a1, a2, a3, a5);
}

unint64_t sub_1A5601184()
{
  return 0xD000000000000016;
}

uint64_t sub_1A56011B4()
{
  sub_1A594CE64();
  sub_1A594CE88();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  return sub_1A594CED0();
}

uint64_t sub_1A5601230()
{
  sub_1A594CE88();
  sub_1A594B1D8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A5601290()
{
  sub_1A594CE64();
  sub_1A594CE88();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  return sub_1A594CED0();
}

uint64_t sub_1A5601308(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  if (*(_BYTE *)(a1 + 12))
    v2 = 0x100000000;
  else
    v2 = 0;
  if (*(_BYTE *)(a2 + 12))
    v3 = 0x100000000;
  else
    v3 = 0;
  return sub_1A5601344(*(_QWORD *)a1, v2 | *(unsigned int *)(a1 + 8), *(_QWORD *)a2, v3 | *(unsigned int *)(a2 + 8));
}

uint64_t sub_1A5601344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char v8;

  if (a2 != a4 || !sub_1A54FF30C(a1, a3))
  {
    v8 = 0;
  }
  else
  {
    if ((a2 & 0x100000000) != 0)
      v6 = 6581810;
    else
      v6 = 7631665;
    if ((a4 & 0x100000000) != 0)
      v7 = 6581810;
    else
      v7 = 7631665;
    if (v6 == v7)
      v8 = 1;
    else
      v8 = sub_1A594CD38();
    swift_bridgeObjectRelease_n();
  }
  return v8 & 1;
}

void sub_1A56013D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char *i;
  int v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
    return;
  v5 = a3;
  v6 = 0;
  v7 = a4 & 0xFFFFFFFFFFLL;
  v8 = -v4;
  v9 = a1 + 49;
  v30 = MEMORY[0x1E0DEE9D8];
  v10 = *(_QWORD *)(a1 + 16);
  v29 = v10;
  v32 = a4 & 0xFFFFFFFFFFLL;
  v28 = a1 + 49;
  do
  {
    if (v6 <= v10)
      v11 = v10;
    else
      v11 = v6;
    v37 = -(uint64_t)v11;
    for (i = (char *)(v9 + 24 * v6++); ; i += 24)
    {
      if (v37 + v6 == 1)
      {
        __break(1u);
        return;
      }
      v13 = *(_DWORD *)(i - 17);
      v36 = *(_QWORD *)(i - 9);
      v34 = *i;
      v35 = *(i - 1);
      v38 = v13;
      sub_1A54E3414();
      MessageIdentifierSet.contains(_:)((uint64_t)&v38, v5, v7);
      if ((v14 & 1) == 0)
        break;
LABEL_7:
      ++v6;
      if (v8 + v6 == 1)
        return;
    }
    v15 = v8;
    v16 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v17 = sub_1A55FDDC4(v16);
    v19 = v18;
    v20 = HIDWORD(v18);
    v38 = v13;
    v33 = v33 & 0xFFFFFF0000000000 | v18 & 0xFFFFFFFFFFLL;
    MessageIdentifierSet.contains(_:)((uint64_t)&v38, v17, v33);
    v22 = v21;
    sub_1A54E3458(v17, v19, v20);
    if ((v22 & 1) != 0)
    {
      v5 = a3;
      v7 = v32;
      v8 = v15;
      goto LABEL_7;
    }
    v23 = v30;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v39 = v30;
    v8 = v15;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1A54F4BF4(0, *(_QWORD *)(v30 + 16) + 1, 1);
      v23 = v39;
    }
    v9 = v28;
    v26 = *(_QWORD *)(v23 + 16);
    v25 = *(_QWORD *)(v23 + 24);
    if (v26 >= v25 >> 1)
    {
      sub_1A54F4BF4(v25 > 1, v26 + 1, 1);
      v23 = v39;
    }
    *(_QWORD *)(v23 + 16) = v26 + 1;
    v30 = v23;
    v27 = v23 + 24 * v26;
    *(_DWORD *)(v27 + 32) = v13;
    *(_QWORD *)(v27 + 40) = v36;
    *(_BYTE *)(v27 + 48) = v35;
    *(_BYTE *)(v27 + 49) = v34;
    v5 = a3;
    v7 = v32;
    v10 = v29;
  }
  while (v8 + v6);
}

uint64_t initializeBufferWithCopyOfBuffer for MessagesToRemoveHelper(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for MailboxPath(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  return a1;
}

uint64_t assignWithTake for MailboxPath(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  return a1;
}

uint64_t getEnumTagSinglePayload for MessagesToRemoveHelper(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 13))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MailboxPath(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 12) = 0;
    *(_DWORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 13) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 13) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FindPendingDownload.TaskIDValue()
{
  return &type metadata for FindPendingDownload.TaskIDValue;
}

uint64_t destroy for FindPendingDownload(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A54E3458(*(_QWORD *)(a1 + 64), *(unsigned int *)(a1 + 72), *(_BYTE *)(a1 + 76));
  return __swift_destroy_boxed_opaque_existential_1(a1 + 104);
}

uint64_t initializeWithCopy for FindPendingDownload(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  __int128 v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  v5 = *(_QWORD *)(a2 + 64);
  v6 = *(unsigned int *)(a2 + 72);
  v7 = *(_BYTE *)(a2 + 76);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54E4334(v5, v6, v7);
  *(_QWORD *)(a1 + 64) = v5;
  *(_DWORD *)(a1 + 72) = v6;
  *(_BYTE *)(a1 + 76) = v7;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v8 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 128) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 104, a2 + 104);
  return a1;
}

uint64_t assignWithCopy for FindPendingDownload(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  v4 = *(_QWORD *)(a2 + 64);
  v5 = *(_DWORD *)(a2 + 72);
  v6 = *(_BYTE *)(a2 + 76);
  sub_1A54E4334(v4, v5, v6);
  v7 = *(_QWORD *)(a1 + 64);
  v8 = *(unsigned int *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = v4;
  *(_DWORD *)(a1 + 72) = v5;
  v9 = *(_BYTE *)(a1 + 76);
  *(_BYTE *)(a1 + 76) = v6;
  sub_1A54E3458(v7, v8, v9);
  v10 = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v10;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 104), (uint64_t *)(a2 + 104));
  return a1;
}

__n128 __swift_memcpy144_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

uint64_t assignWithTake for FindPendingDownload(uint64_t a1, uint64_t a2)
{
  int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  v4 = *(_DWORD *)(a2 + 72);
  v5 = *(_BYTE *)(a2 + 76);
  v6 = *(_QWORD *)(a1 + 64);
  v7 = *(unsigned int *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 72) = v4;
  v8 = *(_BYTE *)(a1 + 76);
  *(_BYTE *)(a1 + 76) = v5;
  sub_1A54E3458(v6, v7, v8);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  __swift_destroy_boxed_opaque_existential_1(a1 + 104);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  return a1;
}

uint64_t getEnumTagSinglePayload for FindPendingDownload(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 144))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FindPendingDownload(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 144) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 144) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FindPendingDownload()
{
  return &type metadata for FindPendingDownload;
}

unint64_t sub_1A5601BDC()
{
  unint64_t result;

  result = qword_1EE7978A8;
  if (!qword_1EE7978A8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A9FE8, &type metadata for FindPendingDownload.ActionID);
    atomic_store(result, (unint64_t *)&qword_1EE7978A8);
  }
  return result;
}

unint64_t sub_1A5601C20(uint64_t a1)
{
  unint64_t result;

  result = sub_1A5601C44();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A5601C44()
{
  unint64_t result;

  result = qword_1EE7978B0;
  if (!qword_1EE7978B0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A9FA4, &type metadata for FindPendingDownload);
    atomic_store(result, (unint64_t *)&qword_1EE7978B0);
  }
  return result;
}

unint64_t sub_1A5601C8C()
{
  unint64_t result;

  result = qword_1EE797898;
  if (!qword_1EE797898)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AA010, &type metadata for FindPendingDownload.TaskIDValue);
    atomic_store(result, (unint64_t *)&qword_1EE797898);
  }
  return result;
}

void sub_1A5601CD0(uint64_t a1)
{
  uint64_t v1;

  sub_1A5600178(a1, *(_QWORD *)(v1 + 16), *(NSObject **)(v1 + 24));
}

unint64_t sub_1A5601CD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v5 = type metadata accessor for TaskHistory.Previous(0);
  v34 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v28 - v9;
  v11 = sub_1A55B0274(a2);
  v12 = *(_QWORD *)(v11 + 16);
  if (!v12)
  {
    swift_bridgeObjectRelease();
LABEL_13:
    v21 = swift_allocObject();
    v22 = *(_QWORD *)(v2 + 16);
    *(_QWORD *)(v21 + 16) = *(_QWORD *)(v2 + 8);
    *(_QWORD *)(v21 + 24) = v22;
    *(_BYTE *)(v21 + 32) = *(_BYTE *)(v2 + 57);
    v23 = *(_QWORD *)(v2 + 64);
    v24 = *(unsigned int *)(v2 + 72);
    *(_QWORD *)(v21 + 40) = v23;
    *(_DWORD *)(v21 + 48) = v24;
    v25 = *(_BYTE *)(v2 + 76);
    *(_BYTE *)(v21 + 52) = v25;
    v26 = *(_BYTE *)(v2 + 88);
    *(_QWORD *)(v21 + 56) = *(_QWORD *)(v2 + 80);
    *(_BYTE *)(v21 + 64) = v26;
    v20 = v21 | 0x4000000000000000;
    *(_QWORD *)(v21 + 72) = 563;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54E4334(v23, v24, v25);
    return v20;
  }
  v29 = v2;
  v30 = v11;
  v13 = 0;
  v32 = v11 + 32;
  v35 = *(_QWORD *)(a1 + 16);
  v33 = a1;
  v31 = v12;
  while (!v35)
  {
LABEL_4:
    if (++v13 == v12)
    {
      swift_bridgeObjectRelease();
      v2 = v29;
      goto LABEL_13;
    }
  }
  v14 = *(_DWORD *)(v32 + 4 * v13);
  v15 = v34;
  v16 = a1 + ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80));
  swift_bridgeObjectRetain_n();
  v17 = *(_QWORD *)(v15 + 72);
  v18 = v35;
  while (1)
  {
    sub_1A55034B8(v16, (uint64_t)v10, type metadata accessor for TaskHistory.Previous);
    sub_1A55034B8((uint64_t)v10, (uint64_t)v7, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() == 1)
      break;
    sub_1A55034FC((uint64_t)v7, type metadata accessor for TaskHistory.Previous);
LABEL_8:
    sub_1A55034FC((uint64_t)v10, type metadata accessor for TaskHistory.Previous);
    v16 += v17;
    if (!--v18)
    {
      a1 = v33;
      swift_bridgeObjectRelease_n();
      v12 = v31;
      goto LABEL_4;
    }
  }
  v19 = *((_DWORD *)v7 + 2);
  swift_release();
  if (v19 != v14)
    goto LABEL_8;
  sub_1A55034FC((uint64_t)v10, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return 0xF000000000000007;
}

uint64_t sub_1A5601F3C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  BOOL v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v8 = sub_1A55B0274(a4);
  v9 = *(_QWORD *)(v8 + 16);
  if (!v9)
    return swift_bridgeObjectRelease();
  v10 = 0;
  while ((sub_1A55F3D24(*(_DWORD *)(v8 + 4 * v10 + 32), a2, a3) & 1) == 0)
  {
    if (v9 == ++v10)
      return swift_bridgeObjectRelease();
  }
  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)v4)
    v12 = 0;
  else
    v12 = ((a1 >> 59) & 0x1E | (a1 >> 2) & 1) == 10;
  if (v12)
  {
    v13 = a1 & 0xFFFFFFFFFFFFFFBLL;
    if (*(_QWORD *)(v4 + 16) == *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x18))
    {
      v14 = *(unsigned __int8 *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      v15 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
      result = sub_1A54FF30C(*(_QWORD *)(v4 + 8), *(_QWORD *)(v13 + 16));
      if ((result & 1) != 0)
      {
        if (*(_BYTE *)(v4 + 57))
          v16 = 6581810;
        else
          v16 = 7631665;
        if (v14)
          v17 = 6581810;
        else
          v17 = 7631665;
        if (v16 == v17)
        {
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          result = swift_bridgeObjectRelease_n();
LABEL_22:
          *(_QWORD *)v4 = v15;
          return result;
        }
        v18 = sub_1A594CD38();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        result = swift_bridgeObjectRelease_n();
        if ((v18 & 1) != 0)
          goto LABEL_22;
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_1A56020B4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1A54E3458(*(_QWORD *)(v0 + 40), *(unsigned int *)(v0 + 48), *(_BYTE *)(v0 + 52));
  return swift_deallocObject();
}

uint64_t storeEnumTagSinglePayload for FindPendingDownload.ActionID(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A5602128 + 4 * byte_1A59A9F70[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A5602148 + 4 * byte_1A59A9F75[v4]))();
}

_BYTE *sub_1A5602128(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A5602148(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A5602150(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A5602158(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A5602160(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A5602168(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FindPendingDownload.ActionID()
{
  return &type metadata for FindPendingDownload.ActionID;
}

double sub_1A5602184@<D0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  int v10;
  __int128 v11;
  double result;
  _OWORD v13[2];
  int v14;
  uint64_t v15;
  ValueMetadata *v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  uint64_t v20;
  int v21;
  __int128 v22;

  v17 = MEMORY[0x1E0DEE9E8];
  v18 = 0;
  v19 = sub_1A5572DBC(MEMORY[0x1E0DEE9D8]);
  v8 = sub_1A5586038(a3, a2);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v8 + 16))
  {
    v9 = *((_QWORD *)a1 + 3);
    v10 = *((_DWORD *)a1 + 8);
    v11 = a1[1];
    v13[0] = *a1;
    v13[1] = v11;
    v14 = v10;
    v15 = v8;
    v16 = &type metadata for GetUIDsForDownloadRequests;
    *(_QWORD *)&v22 = v9;
    DWORD2(v22) = v10;
    sub_1A550F734();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594C6B4();
    sub_1A550E85C((uint64_t)v13, a4);
    sub_1A550E8F4((uint64_t)v13);
  }
  else
  {
    swift_release();
    v22 = *a1;
    sub_1A54F81BC((uint64_t)&v22);
    v20 = *((_QWORD *)a1 + 3);
    v21 = *((_DWORD *)a1 + 8);
    sub_1A54F81BC((uint64_t)&v20);
    swift_bridgeObjectRelease();
    *(_QWORD *)(a4 + 112) = 0;
    result = 0.0;
    *(_OWORD *)(a4 + 80) = 0u;
    *(_OWORD *)(a4 + 96) = 0u;
    *(_OWORD *)(a4 + 48) = 0u;
    *(_OWORD *)(a4 + 64) = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
    *(_OWORD *)(a4 + 32) = 0u;
    *(_OWORD *)a4 = 0u;
  }
  return result;
}

uint64_t sub_1A56022C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  int64_t v5;
  int64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  void (*v15)(_QWORD *);
  uint64_t result;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  int64_t v22;
  _QWORD v23[2];
  int v24;
  uint64_t v25;
  char v26;
  char v27;

  v3 = *v1;
  v5 = v1[3];
  v4 = v1[4];
  v6 = v5;
  if (v4)
  {
    v7 = (v4 - 1) & v4;
    v8 = __clz(__rbit64(v4)) | (v5 << 6);
LABEL_3:
    v9 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v8);
    v10 = *v9;
    v11 = v9[1];
    v12 = *(_QWORD *)(v3 + 56) + 24 * v8;
    LODWORD(v9) = *(_DWORD *)v12;
    v13 = *(_QWORD *)(v12 + 8);
    v14 = *(_BYTE *)(v12 + 16);
    LOBYTE(v12) = *(_BYTE *)(v12 + 17);
    v1[3] = v6;
    v1[4] = v7;
    v15 = (void (*)(_QWORD *))v1[5];
    v23[0] = v10;
    v23[1] = v11;
    v24 = (int)v9;
    v25 = v13;
    v26 = v14;
    v27 = v12;
    sub_1A54E42B4(v10, v11);
    v15(v23);
    return sub_1A54E46E8(v10, v11);
  }
  v17 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
  }
  else
  {
    v18 = (unint64_t)(v1[2] + 64) >> 6;
    if (v17 < v18)
    {
      v19 = v1[1];
      v20 = *(_QWORD *)(v19 + 8 * v17);
      if (v20)
      {
LABEL_7:
        v7 = (v20 - 1) & v20;
        v8 = __clz(__rbit64(v20)) + (v17 << 6);
        v6 = v17;
        goto LABEL_3;
      }
      v21 = v5 + 2;
      v6 = v5 + 1;
      if (v5 + 2 < v18)
      {
        v20 = *(_QWORD *)(v19 + 8 * v21);
        if (v20)
        {
LABEL_10:
          v17 = v21;
          goto LABEL_7;
        }
        v6 = v5 + 2;
        if (v5 + 3 < v18)
        {
          v20 = *(_QWORD *)(v19 + 8 * (v5 + 3));
          if (v20)
          {
            v17 = v5 + 3;
            goto LABEL_7;
          }
          v21 = v5 + 4;
          v6 = v5 + 3;
          if (v5 + 4 < v18)
          {
            v20 = *(_QWORD *)(v19 + 8 * v21);
            if (v20)
              goto LABEL_10;
            v17 = v5 + 5;
            v6 = v5 + 4;
            if (v5 + 5 < v18)
            {
              v20 = *(_QWORD *)(v19 + 8 * v17);
              if (v20)
                goto LABEL_7;
              v6 = v18 - 1;
              v22 = v5 + 6;
              while (v18 != v22)
              {
                v20 = *(_QWORD *)(v19 + 8 * v22++);
                if (v20)
                {
                  v17 = v22 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    v1[3] = v6;
    v1[4] = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_WORD *)(a1 + 32) = 512;
  }
  return result;
}

uint64_t sub_1A5602478@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  int64_t v5;
  int64_t v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  void (*v13)(int *);
  uint64_t result;
  int64_t v15;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  int64_t v20;
  int v21;
  uint64_t v22;
  unint64_t v23;

  v3 = *v1;
  v5 = v1[3];
  v4 = v1[4];
  v6 = v5;
  if (v4)
  {
    v7 = (v4 - 1) & v4;
    v8 = __clz(__rbit64(v4)) | (v5 << 6);
LABEL_3:
    v9 = *(_DWORD *)(*(_QWORD *)(v3 + 48) + 4 * v8);
    v10 = (uint64_t *)(*(_QWORD *)(v3 + 56) + 16 * v8);
    v11 = *v10;
    v12 = v10[1];
    v1[3] = v6;
    v1[4] = v7;
    v13 = (void (*)(int *))v1[5];
    v21 = v9;
    v22 = v11;
    v23 = v12;
    sub_1A54E42B4(v11, v12);
    v13(&v21);
    return sub_1A54E46E8(v11, v12);
  }
  v15 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
  }
  else
  {
    v16 = (unint64_t)(v1[2] + 64) >> 6;
    if (v15 < v16)
    {
      v17 = v1[1];
      v18 = *(_QWORD *)(v17 + 8 * v15);
      if (v18)
      {
LABEL_7:
        v7 = (v18 - 1) & v18;
        v8 = __clz(__rbit64(v18)) + (v15 << 6);
        v6 = v15;
        goto LABEL_3;
      }
      v19 = v5 + 2;
      v6 = v5 + 1;
      if (v5 + 2 < v16)
      {
        v18 = *(_QWORD *)(v17 + 8 * v19);
        if (v18)
        {
LABEL_10:
          v15 = v19;
          goto LABEL_7;
        }
        v6 = v5 + 2;
        if (v5 + 3 < v16)
        {
          v18 = *(_QWORD *)(v17 + 8 * (v5 + 3));
          if (v18)
          {
            v15 = v5 + 3;
            goto LABEL_7;
          }
          v19 = v5 + 4;
          v6 = v5 + 3;
          if (v5 + 4 < v16)
          {
            v18 = *(_QWORD *)(v17 + 8 * v19);
            if (v18)
              goto LABEL_10;
            v15 = v5 + 5;
            v6 = v5 + 4;
            if (v5 + 5 < v16)
            {
              v18 = *(_QWORD *)(v17 + 8 * v15);
              if (v18)
                goto LABEL_7;
              v6 = v16 - 1;
              v20 = v5 + 6;
              while (v16 != v20)
              {
                v18 = *(_QWORD *)(v17 + 8 * v20++);
                if (v18)
                {
                  v15 = v20 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    v1[3] = v6;
    v1[4] = 0;
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0xF000000000000000;
  }
  return result;
}

uint64_t sub_1A5602604@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  int64_t v5;
  int64_t v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  void (*v14)(int *);
  uint64_t result;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  int64_t v21;
  int v22;
  char v23;
  uint64_t v24;
  unint64_t v25;

  v3 = *v1;
  v5 = v1[3];
  v4 = v1[4];
  v6 = v5;
  if (v4)
  {
    v7 = (v4 - 1) & v4;
    v8 = __clz(__rbit64(v4)) | (v5 << 6);
LABEL_3:
    v9 = *(_DWORD *)(*(_QWORD *)(v3 + 48) + 4 * v8);
    v10 = *(_QWORD *)(v3 + 56) + 24 * v8;
    v11 = *(_BYTE *)v10;
    v12 = *(_QWORD *)(v10 + 8);
    v13 = *(_QWORD *)(v10 + 16);
    v1[3] = v6;
    v1[4] = v7;
    v14 = (void (*)(int *))v1[5];
    v22 = v9;
    v23 = v11;
    v24 = v12;
    v25 = v13;
    sub_1A54E42B4(v12, v13);
    v14(&v22);
    return sub_1A54E46E8(v12, v13);
  }
  v16 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
  }
  else
  {
    v17 = (unint64_t)(v1[2] + 64) >> 6;
    if (v16 < v17)
    {
      v18 = v1[1];
      v19 = *(_QWORD *)(v18 + 8 * v16);
      if (v19)
      {
LABEL_7:
        v7 = (v19 - 1) & v19;
        v8 = __clz(__rbit64(v19)) + (v16 << 6);
        v6 = v16;
        goto LABEL_3;
      }
      v20 = v5 + 2;
      v6 = v5 + 1;
      if (v5 + 2 < v17)
      {
        v19 = *(_QWORD *)(v18 + 8 * v20);
        if (v19)
        {
LABEL_10:
          v16 = v20;
          goto LABEL_7;
        }
        v6 = v5 + 2;
        if (v5 + 3 < v17)
        {
          v19 = *(_QWORD *)(v18 + 8 * (v5 + 3));
          if (v19)
          {
            v16 = v5 + 3;
            goto LABEL_7;
          }
          v20 = v5 + 4;
          v6 = v5 + 3;
          if (v5 + 4 < v17)
          {
            v19 = *(_QWORD *)(v18 + 8 * v20);
            if (v19)
              goto LABEL_10;
            v16 = v5 + 5;
            v6 = v5 + 4;
            if (v5 + 5 < v17)
            {
              v19 = *(_QWORD *)(v18 + 8 * v16);
              if (v19)
                goto LABEL_7;
              v6 = v17 - 1;
              v21 = v5 + 6;
              while (v17 != v21)
              {
                v19 = *(_QWORD *)(v18 + 8 * v21++);
                if (v19)
                {
                  v16 = v21 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    v1[3] = v6;
    v1[4] = 0;
    *(_OWORD *)a1 = xmmword_1A59ABDF0;
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)(a1 + 24) = 0;
  }
  return result;
}

uint64_t sub_1A56027B0()
{
  uint64_t result;

  result = sub_1A54F8ABC((uint64_t)&unk_1E4E6F1E0);
  qword_1EE7F9260 = result;
  return result;
}

uint64_t sub_1A56027D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  _BYTE v34[40];
  uint64_t v35;

  v2 = v1;
  v4 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A594A764();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))(v11, a1, v7, v9);
  sub_1A55034B8(a1, (uint64_t)v6, type metadata accessor for MailboxTaskLogger);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  sub_1A550E85C(v2, (uint64_t)v34);
  v12 = sub_1A594A74C();
  v13 = sub_1A594C030();
  v14 = v13;
  if (os_log_type_enabled(v12, v13))
  {
    v15 = swift_slowAlloc();
    v29 = v14;
    v16 = v15;
    v28 = swift_slowAlloc();
    v33 = v28;
    *(_DWORD *)v16 = 68159491;
    LODWORD(v31) = 2;
    v30 = v7;
    sub_1A594C3CC();
    *(_WORD *)(v16 + 8) = 256;
    v17 = &v6[*(int *)(v4 + 20)];
    LOBYTE(v31) = *v17;
    sub_1A594C3CC();
    *(_WORD *)(v16 + 11) = 2082;
    v27 = v8;
    v19 = *((_QWORD *)v17 + 1);
    v18 = *((_QWORD *)v17 + 2);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v31 = sub_1A55791B0(v19, v18, &v33);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 21) = 1040;
    LODWORD(v31) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v16 + 27) = 512;
    LOWORD(v31) = *((_WORD *)v17 + 12);
    sub_1A594C3CC();
    *(_WORD *)(v16 + 31) = 2160;
    v31 = 0x786F626C69616DLL;
    sub_1A594C3CC();
    *(_WORD *)(v16 + 41) = 2085;
    v20 = *((_DWORD *)v17 + 10);
    v31 = *((_QWORD *)v17 + 4);
    v32 = v20;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v21 = sub_1A594B4A8();
    v31 = sub_1A55791B0(v21, v22, &v33);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC((uint64_t)v6, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v16 + 51) = 2048;
    v23 = *(_QWORD *)(v35 + 16);
    sub_1A550E8F4((uint64_t)v34);
    v31 = v23;
    sub_1A594C3CC();
    _os_log_impl(&dword_1A4F90000, v12, (os_log_type_t)v29, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task. %ld identifier(s).", (uint8_t *)v16, 0x3Du);
    v24 = v28;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v24, -1, -1);
    MEMORY[0x1A85B1964](v16, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v11, v30);
  }
  else
  {
    sub_1A550E8F4((uint64_t)v34);
    sub_1A55034FC((uint64_t)v6, type metadata accessor for MailboxTaskLogger);

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
}

void sub_1A5602B9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[5];
  uint64_t v15;

  v2 = v1;
  v4 = *(_QWORD *)(v1 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v5 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v6 = sub_1A5586038(v5, v4);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v6 + 16))
  {
    v7 = *(_QWORD *)(v2 + 24);
    v8 = *(_DWORD *)(v2 + 32);
    sub_1A55197F0(v6, v7, v8);
    v9 = swift_release();
  }
  else
  {
    v9 = swift_release();
    v7 = *(_QWORD *)(v2 + 24);
    v8 = *(_DWORD *)(v2 + 32);
  }
  MEMORY[0x1E0C80A78](v9);
  v14[2] = v2;
  if (*(_BYTE *)(a1 + 168) == 1)
  {
    v11 = *(_QWORD *)(a1 + 152);
    v10 = *(_QWORD *)(a1 + 160);
    v15 = *(_QWORD *)(a1 + 144);
    v12 = v15;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A551C6E4((uint64_t)&v15, v7, v8, 0, (void (*)(uint64_t))sub_1A56035C4, v14);
    sub_1A54E8FCC(v12, v11, v10, 1);
    v13 = v15;
    *(_QWORD *)(a1 + 152) = 0;
    *(_QWORD *)(a1 + 160) = 0;
    *(_QWORD *)(a1 + 144) = v13;
    *(_BYTE *)(a1 + 168) = 1;
  }
}

uint64_t sub_1A5602CD0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 112);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v6 = *(_QWORD *)(a1 + 304);
  *(_QWORD *)(a1 + 304) = 0x8000000000000000;
  sub_1A5602DC8(v3, (uint64_t)sub_1A5603158, 0, isUniquelyReferenced_nonNull_native, &v6);
  *(_QWORD *)(a1 + 304) = v6;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A5602D4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A55530FC(v1 + 48, a1);
}

uint64_t sub_1A5602D58()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t sub_1A5602D60()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 104);
}

unint64_t sub_1A5602D6C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, unint64_t *a3@<X8>)
{
  unint64_t result;

  result = sub_1A56035CC(a1, a2);
  *a3 = result;
  return result;
}

unint64_t sub_1A5602DA0(unint64_t result)
{
  return sub_1A5603808(result);
}

unint64_t sub_1A5602DAC()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1A5602DC8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  unint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int16 v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  char v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  _QWORD *v25;
  char v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  _BOOL8 v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int v48;
  uint64_t v49;
  unint64_t v50;
  unsigned int v51;
  _QWORD *v52;
  __int16 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;

  v8 = -1 << *(_BYTE *)(a1 + 32);
  v9 = ~v8;
  v10 = *(_QWORD *)(a1 + 64);
  v11 = -v8;
  v54 = a1;
  v55 = a1 + 64;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  else
    v12 = -1;
  v56 = v9;
  v57 = 0;
  v58 = v12 & v10;
  v59 = a2;
  v60 = a3;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_retain();
  sub_1A56022C8((uint64_t)&v49);
  v13 = v53;
  if ((v53 & 0xFF00) == 0x200)
  {
LABEL_16:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1A550F72C();
    return swift_release();
  }
  else
  {
    v15 = v49;
    v14 = v50;
    v48 = v51;
    v16 = v52;
    v17 = (_QWORD *)*a5;
    v19 = sub_1A54FDD58(v49, v50);
    v20 = v17[2];
    v21 = (v18 & 1) == 0;
    v22 = v20 + v21;
    if (__OFADD__(v20, v21))
      goto LABEL_27;
    LOBYTE(v5) = v18;
    if (v17[3] >= v22)
    {
      if ((a4 & 1) == 0)
        goto LABEL_29;
      goto LABEL_10;
    }
    sub_1A5580630(v22, a4 & 1);
    v23 = sub_1A54FDD58(v15, v14);
    if ((v5 & 1) == (v24 & 1))
    {
      v19 = v23;
LABEL_10:
      v25 = v16;
      while (1)
      {
        v26 = HIBYTE(v13) & 1;
        v16 = (_QWORD *)*a5;
        if ((v5 & 1) != 0)
        {
          sub_1A54E46E8(v15, v14);
          v27 = v16[7] + 24 * v19;
          *(_DWORD *)v27 = v48;
          *(_QWORD *)(v27 + 8) = v25;
          *(_BYTE *)(v27 + 16) = v13 & 1;
          *(_BYTE *)(v27 + 17) = v26;
        }
        else
        {
          v16[(v19 >> 6) + 8] |= 1 << v19;
          v28 = (uint64_t *)(v16[6] + 16 * v19);
          *v28 = v15;
          v28[1] = v14;
          v29 = v16[7] + 24 * v19;
          *(_DWORD *)v29 = v48;
          *(_QWORD *)(v29 + 8) = v25;
          *(_BYTE *)(v29 + 16) = v13 & 1;
          *(_BYTE *)(v29 + 17) = v26;
          v30 = v16[2];
          v31 = __OFADD__(v30, 1);
          v32 = v30 + 1;
          if (v31)
            goto LABEL_28;
          v16[2] = v32;
        }
        sub_1A56022C8((uint64_t)&v49);
        v13 = v53;
        if ((v53 & 0xFF00) == 0x200)
          goto LABEL_16;
        v61 = a5;
        while (1)
        {
          v15 = v49;
          v14 = v50;
          v19 = v51;
          v16 = v52;
          v35 = *a5;
          v5 = sub_1A54FDD58(v49, v50);
          v37 = *(_QWORD *)(v35 + 16);
          v38 = (v36 & 1) == 0;
          v39 = v37 + v38;
          if (__OFADD__(v37, v38))
            break;
          v40 = v36;
          if (*(_QWORD *)(v35 + 24) < v39)
          {
            sub_1A5580630(v39, 1);
            v41 = sub_1A54FDD58(v15, v14);
            if ((v40 & 1) != (v42 & 1))
              goto LABEL_30;
            v5 = v41;
          }
          v43 = HIBYTE(v13) & 1;
          a5 = (_QWORD *)*a5;
          if ((v40 & 1) != 0)
          {
            sub_1A54E46E8(v15, v14);
            v34 = a5[7] + 24 * v5;
            *(_DWORD *)v34 = v19;
            *(_QWORD *)(v34 + 8) = v16;
            *(_BYTE *)(v34 + 16) = v13 & 1;
            *(_BYTE *)(v34 + 17) = v43;
          }
          else
          {
            a5[(v5 >> 6) + 8] |= 1 << v5;
            v44 = (uint64_t *)(a5[6] + 16 * v5);
            *v44 = v15;
            v44[1] = v14;
            v45 = a5[7] + 24 * v5;
            *(_DWORD *)v45 = v19;
            *(_QWORD *)(v45 + 8) = v16;
            *(_BYTE *)(v45 + 16) = v13 & 1;
            *(_BYTE *)(v45 + 17) = v43;
            v46 = a5[2];
            v31 = __OFADD__(v46, 1);
            v47 = v46 + 1;
            if (v31)
              goto LABEL_28;
            a5[2] = v47;
          }
          sub_1A56022C8((uint64_t)&v49);
          v13 = v53;
          a5 = v61;
          if ((v53 & 0xFF00) == 0x200)
            goto LABEL_16;
        }
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        v25 = v16;
        sub_1A554EC04();
      }
    }
LABEL_30:
    result = sub_1A594CDF8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1A5603158@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  char v6;
  char v7;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_DWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_BYTE *)(a1 + 32);
  v7 = *(_BYTE *)(a1 + 33);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_QWORD *)(a2 + 8) = v2;
  *(_DWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 24) = v5;
  *(_BYTE *)(a2 + 32) = v6;
  *(_BYTE *)(a2 + 33) = v7;
  return sub_1A54E42B4(v3, v2);
}

uint64_t destroy for GetUIDsForDownloadRequests(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 56);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GetUIDsForDownloadRequests(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v5 = a2 + 56;
  v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v8(a1 + 56, v5, v7);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for GetUIDsForDownloadRequests(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 56), (uint64_t *)(a2 + 56));
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy120_8_0(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for GetUIDsForDownloadRequests(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  __swift_destroy_boxed_opaque_existential_1(a1 + 56);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v4 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GetUIDsForDownloadRequests(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 120))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s9MultipartVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for GetUIDsForDownloadRequests()
{
  return &type metadata for GetUIDsForDownloadRequests;
}

unint64_t sub_1A5603518()
{
  unint64_t result;

  result = qword_1EE797C50;
  if (!qword_1EE797C50)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AA140, &type metadata for GetUIDsForDownloadRequests.ActionID);
    atomic_store(result, (unint64_t *)&qword_1EE797C50);
  }
  return result;
}

unint64_t sub_1A560355C(uint64_t a1)
{
  unint64_t result;

  result = sub_1A5603580();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A5603580()
{
  unint64_t result;

  result = qword_1EE797C58;
  if (!qword_1EE797C58)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AA0FC, &type metadata for GetUIDsForDownloadRequests);
    atomic_store(result, (unint64_t *)&qword_1EE797C58);
  }
  return result;
}

uint64_t sub_1A56035C4(uint64_t a1)
{
  uint64_t v1;

  return sub_1A5602CD0(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_1A56035CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v5 = type metadata accessor for TaskHistory.Previous(0);
  v30 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v24 - v9;
  v11 = sub_1A55B0638(a2);
  v12 = *(_QWORD *)(v11 + 16);
  if (!v12)
  {
    swift_bridgeObjectRelease();
LABEL_13:
    v21 = swift_allocObject();
    v22 = *(_DWORD *)(v2 + 32);
    *(_QWORD *)(v21 + 16) = *(_QWORD *)(v2 + 24);
    *(_DWORD *)(v21 + 24) = v22;
    *(_QWORD *)(v21 + 32) = *(_QWORD *)(v2 + 40);
    v20 = v21 | 0x9000000000000004;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return v20;
  }
  v25 = v2;
  v26 = v11;
  v13 = 0;
  v28 = v11 + 32;
  v31 = *(_QWORD *)(a1 + 16);
  v29 = a1;
  v27 = v12;
  while (!v31)
  {
LABEL_4:
    if (++v13 == v12)
    {
      swift_bridgeObjectRelease();
      v2 = v25;
      goto LABEL_13;
    }
  }
  v14 = *(_DWORD *)(v28 + 4 * v13);
  v15 = v30;
  v16 = a1 + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80));
  swift_bridgeObjectRetain_n();
  v17 = *(_QWORD *)(v15 + 72);
  v18 = v31;
  while (1)
  {
    sub_1A55034B8(v16, (uint64_t)v10, type metadata accessor for TaskHistory.Previous);
    sub_1A55034B8((uint64_t)v10, (uint64_t)v7, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() == 1)
      break;
    sub_1A55034FC((uint64_t)v7, type metadata accessor for TaskHistory.Previous);
LABEL_8:
    sub_1A55034FC((uint64_t)v10, type metadata accessor for TaskHistory.Previous);
    v16 += v17;
    if (!--v18)
    {
      a1 = v29;
      swift_bridgeObjectRelease_n();
      v12 = v27;
      goto LABEL_4;
    }
  }
  v19 = *((_DWORD *)v7 + 2);
  swift_release();
  if (v19 != v14)
    goto LABEL_8;
  sub_1A55034FC((uint64_t)v10, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return 0xF000000000000007;
}

unint64_t sub_1A5603808(unint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;

  if (((result >> 59) & 0x1E | (result >> 2) & 1) == 0x13
    && (*(unsigned int *)(v1 + 32) | ((unint64_t)*(unsigned int *)(v1 + 32) << 32)) == (*(unsigned int *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x18) | ((unint64_t)*(unsigned int *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x18) << 32)))
  {
    v2 = *(_QWORD *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x20);
    result = sub_1A54FF30C(*(_QWORD *)(v1 + 24), *(_QWORD *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x10));
    if ((result & 1) != 0)
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v4 = *(_QWORD *)(v1 + 112);
      *(_QWORD *)(v1 + 112) = 0x8000000000000000;
      sub_1A5602DC8(v2, (uint64_t)sub_1A5603158, 0, isUniquelyReferenced_nonNull_native, &v4);
      *(_QWORD *)(v1 + 112) = v4;
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1A56038C8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t storeEnumTagSinglePayload for GetUIDsForDownloadRequests.ActionID(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A5603934 + 4 * byte_1A59AA0D0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A5603954 + 4 * byte_1A59AA0D5[v4]))();
}

_BYTE *sub_1A5603934(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A5603954(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A560395C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A5603964(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A560396C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A5603974(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for GetUIDsForDownloadRequests.ActionID()
{
  return &type metadata for GetUIDsForDownloadRequests.ActionID;
}

uint64_t sub_1A5603990()
{
  qword_1EE7F9278 = (uint64_t)&type metadata for ListMailboxes;
  return sub_1A594C6B4();
}

uint64_t destroy for ListMailboxes(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 88);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for ListMailboxes(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = a2 + 24;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v5;
  v6 = v5;
  v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v7(a1 + 24, v4, v6);
  v8 = *(_QWORD *)(a2 + 88);
  v9 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v9;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v8)
  {
    v10 = *(_QWORD *)(a2 + 96);
    v11 = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 88) = v8;
    *(_QWORD *)(a1 + 96) = v10;
    *(_QWORD *)(a1 + 104) = v11;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  }
  *(_WORD *)(a1 + 112) = *(_WORD *)(a2 + 112);
  return a1;
}

uint64_t assignWithCopy for ListMailboxes(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  __int128 v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 88);
  v5 = *(_QWORD *)(a1 + 88);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v7 = (_OWORD *)(a2 + 88);
  v6 = *(_QWORD *)(a2 + 88);
  if (v5)
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 88) = v6;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1A5542C34(a1 + 88);
      v8 = *(_QWORD *)(a2 + 104);
      *v4 = *v7;
      *(_QWORD *)(a1 + 104) = v8;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 88) = v6;
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    v9 = *v7;
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *v4 = v9;
  }
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_BYTE *)(a1 + 113) = *(_BYTE *)(a2 + 113);
  return a1;
}

__n128 __swift_memcpy114_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_WORD *)(a1 + 112) = *((_WORD *)a2 + 56);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for ListMailboxes(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 88);
  v5 = *(_QWORD *)(a1 + 88);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  if (!v5)
    goto LABEL_5;
  if (!v4)
  {
    sub_1A5542C34(a1 + 88);
LABEL_5:
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 88) = v4;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v6;
  swift_bridgeObjectRelease();
LABEL_6:
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_BYTE *)(a1 + 113) = *(_BYTE *)(a2 + 113);
  return a1;
}

uint64_t getEnumTagSinglePayload for ListMailboxes(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 114))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ListMailboxes(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 112) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 114) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 114) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ListMailboxes()
{
  return &type metadata for ListMailboxes;
}

uint64_t sub_1A5603E38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __int16 v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[120];
  _BYTE v33[80];
  char v34;

  v2 = v1;
  v4 = type metadata accessor for Task.Logger(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A594A764();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))(v11, a1, v7, v9);
  sub_1A55034B8(a1, (uint64_t)v6, type metadata accessor for Task.Logger);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  sub_1A55531CC(v2, (uint64_t)v33);
  sub_1A55531CC(v2, (uint64_t)v32);
  v12 = sub_1A594A74C();
  v13 = sub_1A594C030();
  v14 = v13;
  if (os_log_type_enabled(v12, v13))
  {
    v15 = swift_slowAlloc();
    v28 = v14;
    v16 = v15;
    v29 = swift_slowAlloc();
    v31 = v29;
    *(_DWORD *)v16 = 68158722;
    LODWORD(v30) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v16 + 8) = 256;
    v17 = &v6[*(int *)(v4 + 20)];
    v18 = *((_QWORD *)v17 + 1);
    v19 = *((_QWORD *)v17 + 2);
    LOBYTE(v30) = *(_QWORD *)v17;
    sub_1A594C3CC();
    *(_WORD *)(v16 + 11) = 2082;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v27 = v7;
    v30 = sub_1A55791B0(v18, v19, &v31);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC((uint64_t)v6, type metadata accessor for Task.Logger);
    *(_WORD *)(v16 + 21) = 2080;
    if (v34)
      v20 = 0x616C696176616E75;
    else
      v20 = 0x6574726F70707573;
    if (v34)
      v21 = 0xEB00000000656C62;
    else
      v21 = 0xE900000000000064;
    v30 = sub_1A55791B0(v20, v21, &v31);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A5553208((uint64_t)v33);
    *(_WORD *)(v16 + 31) = 2080;
    if (v32[113])
      v22 = 256;
    else
      v22 = 0;
    v23 = sub_1A55401EC(v22 | v32[112]);
    v30 = sub_1A55791B0(v23, v24, &v31);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A5553208((uint64_t)v32);
    _os_log_impl(&dword_1A4F90000, v12, (os_log_type_t)v28, "[%.*hhx-%{public}s] Created task (NAMESPACE: %s; LIST: %s).",
      (uint8_t *)v16,
      0x29u);
    v25 = v29;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v25, -1, -1);
    MEMORY[0x1A85B1964](v16, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v27);
  }
  else
  {
    sub_1A55034FC((uint64_t)v6, type metadata accessor for Task.Logger);
    sub_1A5553208((uint64_t)v33);
    sub_1A5553208((uint64_t)v32);

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
}

uint64_t sub_1A56041C8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  _BYTE *v38;
  __int16 v39;
  _QWORD *v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v57 = a3;
  v6 = type metadata accessor for TaskHistory.Previous(0);
  v59 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v50 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v50 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v50 - v16;
  v56 = v3;
  v18 = *(_BYTE *)(v3 + 80);
  v60 = a1;
  if ((v18 & 1) != 0 || *(_QWORD *)(v56 + 88))
  {
LABEL_14:
    v27 = sub_1A562ABBC(0, a2);
    v28 = *(_QWORD *)(v27 + 16);
    if (v28)
    {
      v29 = 0;
      v54 = v27;
      v58 = v27 + 32;
      v61 = *(_QWORD *)(a1 + 16);
      v55 = v28;
      do
      {
        if (v61)
        {
          v30 = v59;
          v31 = *(_DWORD *)(v58 + 4 * v29);
          v32 = a1 + ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80));
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v33 = *(_QWORD *)(v30 + 72);
          v34 = v61;
          while (1)
          {
            sub_1A55034B8(v32, (uint64_t)v11, type metadata accessor for TaskHistory.Previous);
            sub_1A55034B8((uint64_t)v11, (uint64_t)v8, type metadata accessor for TaskHistory.Previous);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              sub_1A55034FC((uint64_t)v8, type metadata accessor for TaskHistory.Previous);
            }
            else
            {
              v35 = *(_DWORD *)&v8[*(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797DD8) + 48)];
              sub_1A55034FC((uint64_t)v8, type metadata accessor for ClientCommand);
              if (v35 == v31)
              {
                sub_1A55034FC((uint64_t)v11, type metadata accessor for TaskHistory.Previous);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v36 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7972C0);
                return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v57, 1, 1, v36);
              }
            }
            sub_1A55034FC((uint64_t)v11, type metadata accessor for TaskHistory.Previous);
            v32 += v33;
            if (!--v34)
            {
              a1 = v60;
              swift_bridgeObjectRelease();
              v28 = v55;
              break;
            }
          }
        }
        ++v29;
      }
      while (v29 != v28);
    }
    swift_bridgeObjectRelease();
    v38 = v57;
    if (*(_BYTE *)(v56 + 113))
      v39 = 256;
    else
      v39 = 0;
    v40 = sub_1A5604668(v39 | *(unsigned __int8 *)(v56 + 112));
    v41 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7972C0);
    v42 = &v38[*(int *)(v41 + 48)];
    *v38 = 0;
    ByteBuffer.init(string:)(42, 0xE100000000000000);
    v46 = MailboxName.init(_:)(v44, v45, v43 & 0xFFFFFFFFFFFFFFLL);
    *(_QWORD *)v42 = 0;
    *((_DWORD *)v42 + 2) = 0;
    *((_QWORD *)v42 + 2) = v46;
    *((_DWORD *)v42 + 6) = v47;
    *((_QWORD *)v42 + 4) = v40;
    type metadata accessor for ClientCommand(0);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v38, 0, 1, v41);
  }
  else
  {
    v19 = sub_1A562ABBC(1, a2);
    v20 = *(_QWORD *)(v19 + 16);
    if (v20)
    {
      v51 = a2;
      v52 = v19;
      v21 = 0;
      v54 = v19 + 32;
      v58 = *(_QWORD *)(a1 + 16);
      v53 = v20;
      do
      {
        if (v58)
        {
          v55 = v21;
          LODWORD(v61) = *(_DWORD *)(v54 + 4 * v21);
          v22 = v59;
          v23 = a1 + ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80));
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v24 = *(_QWORD *)(v22 + 72);
          v25 = v58;
          while (1)
          {
            sub_1A55034B8(v23, (uint64_t)v17, type metadata accessor for TaskHistory.Previous);
            sub_1A55034B8((uint64_t)v17, (uint64_t)v14, type metadata accessor for TaskHistory.Previous);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              sub_1A55034FC((uint64_t)v14, type metadata accessor for TaskHistory.Previous);
            }
            else
            {
              v26 = *(_DWORD *)&v14[*(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797DD8) + 48)];
              sub_1A55034FC((uint64_t)v14, type metadata accessor for ClientCommand);
              if (v26 == (_DWORD)v61)
              {
                sub_1A55034FC((uint64_t)v17, type metadata accessor for TaskHistory.Previous);
                swift_bridgeObjectRelease();
                a1 = v60;
                swift_bridgeObjectRelease();
                a2 = v51;
                goto LABEL_14;
              }
            }
            sub_1A55034FC((uint64_t)v17, type metadata accessor for TaskHistory.Previous);
            v23 += v24;
            if (!--v25)
            {
              a1 = v60;
              swift_bridgeObjectRelease();
              v20 = v53;
              v21 = v55;
              break;
            }
          }
        }
        ++v21;
      }
      while (v21 != v20);
    }
    swift_bridgeObjectRelease();
    v48 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7972C0);
    v49 = v57;
    *v57 = 1;
    type metadata accessor for ClientCommand(0);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v49, 0, 1, v48);
  }
}

_QWORD *sub_1A5604668(__int16 a1)
{
  _QWORD *v2;
  unint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  void *v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;

  if (!(_BYTE)a1)
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if ((a1 & 0x100) != 0)
      return v2;
    goto LABEL_12;
  }
  if (a1 == 1)
  {
    v2 = sub_1A54F15F8(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v4 = v2[2];
    v3 = v2[3];
    if (v4 >= v3 >> 1)
      v2 = sub_1A54F15F8((_QWORD *)(v3 > 1), v4 + 1, 1, v2);
    v2[2] = v4 + 1;
    v5 = &v2[8 * v4];
    v6 = &unk_1E4E70530;
  }
  else
  {
    v2 = sub_1A54F15F8(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v8 = v2[2];
    v7 = v2[3];
    if (v8 >= v7 >> 1)
      v2 = sub_1A54F15F8((_QWORD *)(v7 > 1), v8 + 1, 1, v2);
    v2[2] = v8 + 1;
    v5 = &v2[8 * v8];
    v6 = &unk_1E4E70508;
  }
  v5[4] = v6;
  v9 = v5 + 4;
  v9[7] = 0;
  *(_OWORD *)(v9 + 5) = 0u;
  *(_OWORD *)(v9 + 3) = 0u;
  *(_OWORD *)(v9 + 1) = 0u;
  if ((a1 & 0x100) == 0)
  {
LABEL_12:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v2 = sub_1A54F15F8(0, v2[2] + 1, 1, v2);
    v11 = v2[2];
    v10 = v2[3];
    if (v11 >= v10 >> 1)
      v2 = sub_1A54F15F8((_QWORD *)(v10 > 1), v11 + 1, 1, v2);
    v2[2] = v11 + 1;
    v12 = &v2[8 * v11];
    v12[4] = 2;
    v12[5] = 0;
    v12[6] = 0;
    v12[7] = 0;
    v12[8] = 0x8000000000000000;
    v12[9] = 0;
    v12[10] = 0;
    v12[11] = 0;
  }
  return v2;
}

uint64_t sub_1A56047FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  BOOL v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  uint64_t result;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  unint64_t v129;
  char *v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;

  v120 = a4;
  v118 = a3;
  v122 = a1;
  v133 = type metadata accessor for TaskHistory.Running(0);
  v116 = *(_QWORD *)(v133 - 8);
  MEMORY[0x1E0C80A78](v133);
  v130 = (char *)&v108 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v125 = (uint64_t)&v108 - v8;
  MEMORY[0x1E0C80A78](v9);
  v132 = (char *)&v108 - v10;
  MEMORY[0x1E0C80A78](v11);
  v129 = (unint64_t)&v108 - v12;
  v136 = type metadata accessor for TaskHistory.Previous(0);
  v123 = *(_QWORD *)(v136 - 8);
  MEMORY[0x1E0C80A78](v136);
  v127 = (char *)&v108 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v135 = (uint64_t)&v108 - v15;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v108 - v17;
  MEMORY[0x1E0C80A78](v19);
  v117 = (char *)&v108 - v20;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v108 - v22;
  MEMORY[0x1E0C80A78](v24);
  v134 = (uint64_t)&v108 - v25;
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v108 - v27;
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v108 - v30;
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)&v108 - v33;
  MEMORY[0x1E0C80A78](v35);
  v37 = (char *)&v108 - v36;
  v119 = v4;
  v38 = *(_QWORD *)(v4 + 88);
  v124 = a2;
  v128 = v23;
  if (v38)
  {
    v39 = *(_QWORD *)(v119 + 104);
    v110 = *(_QWORD *)(v119 + 96);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v113 = v39;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v40 = sub_1A55B00A8(0, v120);
    v41 = *(_QWORD *)(v40 + 16);
    if (v41)
    {
      v109 = v38;
      v42 = 0;
      v115 = v40 + 32;
      v126 = *(_QWORD *)(a2 + 16);
      v114 = v40;
      v112 = v41;
      do
      {
        if (v126)
        {
          v121 = v42;
          LODWORD(v131) = *(_DWORD *)(v115 + 4 * v42);
          v43 = v123;
          v44 = a2 + ((*(unsigned __int8 *)(v123 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80));
          swift_bridgeObjectRetain_n();
          v45 = *(_QWORD *)(v43 + 72);
          v46 = v126;
          do
          {
            sub_1A55034B8(v44, (uint64_t)v37, type metadata accessor for TaskHistory.Previous);
            sub_1A55034B8((uint64_t)v37, (uint64_t)v34, type metadata accessor for TaskHistory.Previous);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              v47 = *((_DWORD *)v34 + 2);
              swift_release();
              if (v47 == (_DWORD)v131)
              {
                sub_1A55034FC((uint64_t)v37, type metadata accessor for TaskHistory.Previous);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                a2 = v124;
                swift_bridgeObjectRelease_n();
                v23 = v128;
                goto LABEL_13;
              }
            }
            else
            {
              sub_1A55034FC((uint64_t)v34, type metadata accessor for TaskHistory.Previous);
            }
            sub_1A55034FC((uint64_t)v37, type metadata accessor for TaskHistory.Previous);
            v44 += v45;
            --v46;
          }
          while (v46);
          a2 = v124;
          swift_bridgeObjectRelease_n();
          v41 = v112;
          v42 = v121;
        }
        ++v42;
      }
      while (v42 != v41);
      swift_bridgeObjectRelease();
      v38 = v109;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v76 = v113;
    v77 = v110;
    v78 = (_QWORD *)swift_allocObject();
    result = 0;
    v78[2] = v38;
    v78[3] = v77;
    v78[4] = v76;
    return result;
  }
LABEL_13:
  v48 = sub_1A562ABBC(0, v118);
  v49 = *(_QWORD *)(v48 + 16);
  if (!v49)
  {
LABEL_48:
    swift_bridgeObjectRelease();
LABEL_49:
    v65 = (uint64_t)v117;
    goto LABEL_50;
  }
  v50 = 0;
  v113 = v48;
  v118 = v48 + 32;
  v131 = *(_QWORD *)(a2 + 16);
  v111 = v18;
  v114 = v49;
  while (!v131)
  {
LABEL_17:
    if (++v50 == v49)
      goto LABEL_48;
  }
  v121 = v50;
  v51 = *(_DWORD *)(v118 + 4 * v50);
  v52 = v123;
  v115 = (*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
  v53 = a2 + v115;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v54 = *(_QWORD *)(v52 + 72);
  v55 = v131;
  while (1)
  {
    sub_1A55034B8(v53, (uint64_t)v31, type metadata accessor for TaskHistory.Previous);
    sub_1A55034B8((uint64_t)v31, (uint64_t)v28, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() != 1)
      break;
    sub_1A55034FC((uint64_t)v28, type metadata accessor for TaskHistory.Previous);
LABEL_21:
    sub_1A55034FC((uint64_t)v31, type metadata accessor for TaskHistory.Previous);
    v53 += v54;
    if (!--v55)
    {
      a2 = v124;
LABEL_16:
      v49 = v114;
      v50 = v121;
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
  }
  v56 = *(_DWORD *)&v28[*(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797DD8) + 48)];
  sub_1A55034FC((uint64_t)v28, type metadata accessor for ClientCommand);
  if (v56 != v51)
    goto LABEL_21;
  sub_1A55034FC((uint64_t)v31, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease();
  v57 = *(_QWORD *)(v122 + 16);
  if (v57)
  {
    v58 = v116;
    v59 = v122 + ((*(unsigned __int8 *)(v116 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80));
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v126 = *(_QWORD *)(v58 + 72);
    v60 = (uint64_t)v132;
    v61 = v129;
    do
    {
      sub_1A55034B8(v59, v61, type metadata accessor for TaskHistory.Running);
      sub_1A55034B8(v61, v60, type metadata accessor for TaskHistory.Running);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1A55034FC(v60, type metadata accessor for TaskHistory.Running);
      }
      else
      {
        v62 = *((_DWORD *)v132 + 2);
        v63 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308);
        sub_1A55034FC((uint64_t)&v132[*(int *)(v63 + 64)], type metadata accessor for ClientCommand);
        v64 = v62 == v51;
        v60 = (uint64_t)v132;
        if (v64)
        {
          sub_1A55034FC(v129, type metadata accessor for TaskHistory.Running);
          a2 = v124;
          v23 = v128;
          v18 = v111;
          goto LABEL_16;
        }
      }
      v61 = v129;
      sub_1A55034FC(v129, type metadata accessor for TaskHistory.Running);
      v59 += v126;
      --v57;
    }
    while (v57);
    swift_bridgeObjectRelease();
    v65 = (uint64_t)v117;
    v23 = v128;
    v18 = v111;
  }
  else
  {
    v65 = (uint64_t)v117;
  }
  swift_bridgeObjectRelease();
  if ((*(_BYTE *)(v119 + 80) & 1) != 0 || *(_QWORD *)(v119 + 88))
  {
    v66 = sub_1A55B00A8(1, v120);
    v129 = *(_QWORD *)(v66 + 16);
    if (v129)
    {
      v67 = 0;
      v118 = v66;
      v68 = v66 + 32;
      v69 = v124 + v115;
      v126 = v66 + 32;
      v121 = v124 + v115;
      v70 = v134;
      do
      {
        v71 = *(_DWORD *)(v68 + 4 * (_QWORD)v67);
        v132 = v67 + 1;
        result = swift_bridgeObjectRetain_n();
        v73 = 0;
        do
        {
          v74 = v73 + 1;
          if (__OFADD__(v73, 1))
          {
LABEL_90:
            __break(1u);
            return result;
          }
          sub_1A55034B8(v69, v70, type metadata accessor for TaskHistory.Previous);
          sub_1A55034B8(v70, (uint64_t)v23, type metadata accessor for TaskHistory.Previous);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v75 = *((_DWORD *)v128 + 2);
            swift_release();
            v64 = v75 == v71;
            v23 = v128;
            if (v64)
            {
              sub_1A55034FC(v134, type metadata accessor for TaskHistory.Previous);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              goto LABEL_49;
            }
          }
          else
          {
            sub_1A55034FC((uint64_t)v23, type metadata accessor for TaskHistory.Previous);
          }
          result = sub_1A55034FC(v134, type metadata accessor for TaskHistory.Previous);
          ++v73;
          v69 += v54;
        }
        while (v74 != v131);
        swift_bridgeObjectRelease_n();
        v67 = v132;
        v68 = v126;
        v69 = v121;
      }
      while (v132 != (char *)v129);
    }
    swift_bridgeObjectRelease();
    *(_QWORD *)(swift_allocObject() + 16) = *(_QWORD *)v119;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return 1;
  }
LABEL_50:
  v79 = sub_1A55B00A8(1, v120);
  v80 = *(char **)(v79 + 16);
  if (!v80)
  {
LABEL_81:
    swift_bridgeObjectRelease();
    return 3;
  }
  v81 = 0;
  v126 = v79;
  v131 = v79 + 32;
  v82 = v124;
  v134 = *(_QWORD *)(v124 + 16);
  v128 = v80;
  while (!v134)
  {
LABEL_54:
    if (++v81 == v80)
      goto LABEL_81;
  }
  v132 = v81;
  v83 = *(_DWORD *)(v131 + 4 * (_QWORD)v81);
  v84 = v123;
  v129 = (*(unsigned __int8 *)(v123 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80);
  v85 = v82 + v129;
  swift_bridgeObjectRetain_n();
  v86 = *(_QWORD *)(v84 + 72);
  v87 = v134;
  while (2)
  {
    sub_1A55034B8(v85, v65, type metadata accessor for TaskHistory.Previous);
    sub_1A55034B8(v65, (uint64_t)v18, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_1A55034FC((uint64_t)v18, type metadata accessor for TaskHistory.Previous);
      goto LABEL_58;
    }
    v88 = *((_DWORD *)v18 + 2);
    swift_release();
    if (v88 != v83)
    {
LABEL_58:
      sub_1A55034FC(v65, type metadata accessor for TaskHistory.Previous);
      v85 += v86;
      if (!--v87)
      {
        v82 = v124;
LABEL_53:
        swift_bridgeObjectRelease_n();
        v80 = v128;
        v81 = v132;
        goto LABEL_54;
      }
      continue;
    }
    break;
  }
  sub_1A55034FC(v65, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease_n();
  v89 = *(_QWORD *)(v122 + 16);
  if (v89)
  {
    v90 = v116;
    v91 = v122 + ((*(unsigned __int8 *)(v116 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80));
    swift_bridgeObjectRetain_n();
    v92 = *(_QWORD *)(v90 + 72);
    v93 = (uint64_t)v130;
    v94 = v125;
    do
    {
      sub_1A55034B8(v91, v94, type metadata accessor for TaskHistory.Running);
      sub_1A55034B8(v94, v93, type metadata accessor for TaskHistory.Running);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v95 = *((_DWORD *)v130 + 1);
        swift_release();
        v64 = v95 == v83;
        v93 = (uint64_t)v130;
        v94 = v125;
        if (v64)
        {
          sub_1A55034FC(v125, type metadata accessor for TaskHistory.Running);
          v82 = v124;
          v65 = (uint64_t)v117;
          goto LABEL_53;
        }
      }
      else
      {
        sub_1A55034FC(v93, type metadata accessor for TaskHistory.Running);
        v94 = v125;
      }
      sub_1A55034FC(v94, type metadata accessor for TaskHistory.Running);
      v91 += v92;
      --v89;
    }
    while (v89);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v96 = sub_1A55B00A8(2, v120);
  v97 = (uint64_t)v127;
  v133 = *(_QWORD *)(v96 + 16);
  if (v133)
  {
    v98 = 0;
    v131 = v96;
    v99 = (char *)(v96 + 32);
    v100 = v124 + v129;
    v132 = (char *)(v96 + 32);
    v101 = v135;
LABEL_73:
    v102 = *(_DWORD *)&v99[4 * v98++];
    result = swift_bridgeObjectRetain_n();
    v103 = 0;
    v104 = v100;
    while (1)
    {
      v105 = v103 + 1;
      if (__OFADD__(v103, 1))
        break;
      sub_1A55034B8(v100, v101, type metadata accessor for TaskHistory.Previous);
      sub_1A55034B8(v101, v97, type metadata accessor for TaskHistory.Previous);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v106 = *((_DWORD *)v127 + 2);
        swift_release();
        v64 = v106 == v102;
        v97 = (uint64_t)v127;
        if (v64)
        {
          sub_1A55034FC(v135, type metadata accessor for TaskHistory.Previous);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          return 3;
        }
      }
      else
      {
        sub_1A55034FC(v97, type metadata accessor for TaskHistory.Previous);
      }
      result = sub_1A55034FC(v135, type metadata accessor for TaskHistory.Previous);
      ++v103;
      v100 += v86;
      if (v105 == v134)
      {
        swift_bridgeObjectRelease_n();
        v99 = v132;
        v100 = v104;
        if (v98 == v133)
          goto LABEL_87;
        goto LABEL_73;
      }
    }
    __break(1u);
    goto LABEL_90;
  }
LABEL_87:
  swift_bridgeObjectRelease();
  v107 = *(_QWORD *)(v119 + 8);
  if (!*(_QWORD *)(v107 + 16))
    return 3;
  *(_QWORD *)(swift_allocObject() + 16) = v107;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return 2;
}

uint64_t sub_1A5605464(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  int v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  unint64_t v41;
  os_log_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t);
  uint64_t v55;
  NSObject *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __uint64_t v60;
  uint64_t v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  char v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  NSObject *v109;
  os_log_type_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t result;
  __int128 v128;
  uint64_t v129;
  uint64_t (*v130)(uint64_t);
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t (*v134)(uint64_t);
  uint64_t v135;
  uint64_t v136;
  int v137;
  uint64_t v138;
  char v139;
  uint64_t v140;
  uint64_t v141;
  NSObject *v142;
  os_log_type_t v143;
  uint64_t v144;
  _QWORD *v145;
  uint64_t v146;
  unint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  os_log_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  _QWORD *v157;
  uint64_t v158;
  int v159;
  uint64_t v160;
  uint64_t v161;
  int v162;
  uint64_t v163;
  int v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  int v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  __int128 v174;
  int *v175;
  char *v176;
  char *v177;
  char *v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  os_log_t v183;
  uint64_t v184;
  void (*v185)(char *, uint64_t);
  uint64_t v186;
  uint64_t v187;
  os_log_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  int v198;
  uint64_t v199;
  char v200;
  char v201;
  char v202;
  char v203;
  char v204;
  char v205;
  char v206;
  char v207;
  char v208;
  uint64_t v209[2];
  char v210;
  uint64_t v211;
  uint64_t v212;
  unsigned __int8 v213;
  uint64_t v214;
  _DWORD *v215;
  char v216;
  char v217;
  char v218;
  char v219;
  char v220;
  char v221;
  uint64_t v222;
  char v223;
  uint64_t v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  char v230;
  uint64_t v231;
  char *v232;
  char v233;
  char v234;
  uint64_t v235;
  os_log_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  char v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  int v247;
  uint64_t v248;
  uint64_t v249;
  int v250;
  char v251;
  char v252;
  char v253;
  uint64_t v254;
  char v255;
  uint64_t v256;
  char *v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  char v262;
  uint64_t v263;
  __uint64_t v264;
  char v265;
  char v266;
  uint64_t v267;
  NSObject *v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  char v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  int v279;
  uint64_t v280;

  v3 = v2;
  v192 = a2;
  v180 = type metadata accessor for Task.Logger(0);
  MEMORY[0x1E0C80A78](v180);
  v179 = (char *)&v156 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v191 = (uint64_t)&v156 - v7;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v156 - v9;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v156 - v12;
  v181 = sub_1A594A764();
  v14 = *(_QWORD *)(v181 - 8);
  MEMORY[0x1E0C80A78](v181);
  v178 = (char *)&v156 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v193 = (char *)&v156 - v17;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v156 - v19;
  MEMORY[0x1E0C80A78](v21);
  v196 = (uint64_t)&v156 - v23;
  if (*(_QWORD *)(a1 + 96))
  {
    MEMORY[0x1E0C80A78](v22);
    *(&v156 - 2) = (uint64_t)v2;
    v24 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v25 = sub_1A56070C8(v24, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_1A56067C4, (uint64_t)(&v156 - 4));
    swift_bridgeObjectRelease();
  }
  else
  {
    v25 = 0;
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = v25;
  v26 = v2[11];
  v27 = v181;
  v194 = v14;
  if (v26)
  {
    v28 = v2[13];
    v195 = v2[12];
    v29 = v192;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v196, v192, v181);
    sub_1A55034B8(v29, (uint64_t)v13, type metadata accessor for Task.Logger);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v30 = sub_1A594A74C();
    v31 = sub_1A594C030();
    v32 = v31;
    if (os_log_type_enabled(v30, v31))
    {
      v33 = swift_slowAlloc();
      v190 = swift_slowAlloc();
      v215 = (_DWORD *)v190;
      *(_DWORD *)v33 = 68158979;
      LODWORD(v249) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v33 + 8) = 256;
      v34 = &v13[*(int *)(v180 + 20)];
      v35 = *(_QWORD *)v34;
      v36 = *((_QWORD *)v34 + 1);
      LODWORD(v189) = v32;
      v37 = *((_QWORD *)v34 + 2);
      LOBYTE(v249) = v35;
      sub_1A594C3CC();
      *(_WORD *)(v33 + 11) = 2082;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v188 = v30;
      v249 = sub_1A55791B0(v36, v37, (uint64_t *)&v215);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v13, type metadata accessor for Task.Logger);
      *(_WORD *)(v33 + 21) = 2160;
      v249 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v33 + 31) = 2085;
      v38 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v249 = MailboxName.init(_:)(v38);
      v250 = v39;
      v40 = sub_1A594B4A8();
      v249 = sub_1A55791B0(v40, v41, (uint64_t *)&v215);
      sub_1A594C3CC();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 41) = 2080;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v249 = sub_1A55791B0(v195, v28, (uint64_t *)&v215);
      sub_1A594C3CC();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      v42 = v188;
      _os_log_impl(&dword_1A4F90000, v188, (os_log_type_t)v189, "[%.*hhx-%{public}s] Server is namespaced: %{sensitive,mask.mailbox}s (%s)", (uint8_t *)v33, 0x33u);
      v43 = v190;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v43, -1, -1);
      MEMORY[0x1A85B1964](v33, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v194 + 8))(v196, v181);
      goto LABEL_12;
    }
    sub_1A55034FC((uint64_t)v13, type metadata accessor for Task.Logger);

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v54 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v55 = v196;
  }
  else
  {
    v44 = v192;
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v20, v192, v181);
    sub_1A55034B8(v44, (uint64_t)v10, type metadata accessor for Task.Logger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v45 = sub_1A594A74C();
    v46 = sub_1A594C030();
    v47 = v46;
    if (os_log_type_enabled(v45, v46))
    {
      v48 = swift_slowAlloc();
      LODWORD(v196) = v47;
      v49 = v48;
      v195 = swift_slowAlloc();
      v249 = v195;
      *(_DWORD *)v49 = 68158210;
      LODWORD(v215) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v49 + 8) = 256;
      v50 = &v10[*(int *)(v180 + 20)];
      v51 = *((_QWORD *)v50 + 1);
      v52 = *((_QWORD *)v50 + 2);
      LOBYTE(v215) = *(_QWORD *)v50;
      sub_1A594C3CC();
      *(_WORD *)(v49 + 11) = 2082;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v215 = (_DWORD *)sub_1A55791B0(v51, v52, &v249);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v10, type metadata accessor for Task.Logger);
      _os_log_impl(&dword_1A4F90000, v45, (os_log_type_t)v196, "[%.*hhx-%{public}s] Server isn't namespaced.", (uint8_t *)v49, 0x15u);
      v53 = v195;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v53, -1, -1);
      MEMORY[0x1A85B1964](v49, -1, -1);

      (*(void (**)(char *, uint64_t))(v194 + 8))(v20, v181);
      goto LABEL_12;
    }
    sub_1A55034FC((uint64_t)v10, type metadata accessor for Task.Logger);

    v54 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v55 = (uint64_t)v20;
  }
  v54(v55, v27);
LABEL_12:
  v57 = v3[11];
  v56 = v3[12];
  v58 = v3[13];
  v59 = *(_QWORD *)(a1 + 120);
  *(_QWORD *)(a1 + 120) = v57;
  *(_QWORD *)(a1 + 128) = v56;
  *(_QWORD *)(a1 + 136) = v58;
  sub_1A552CF80(v57);
  sub_1A55419EC(v59);
  *(_BYTE *)(a1 + 113) = 0;
  v60 = static MonotonicTime.now()();
  *(_QWORD *)(a1 + 104) = v60;
  *(_BYTE *)(a1 + 112) = 0;
  v61 = *(_QWORD *)a1;
  v62 = *(unsigned __int8 *)(a1 + 8);
  LODWORD(v196) = *(unsigned __int8 *)(a1 + 9);
  v63 = *(unsigned __int8 *)(a1 + 10);
  v64 = *(unsigned __int8 *)(a1 + 16);
  v65 = *(unsigned __int8 *)(a1 + 17);
  v66 = *(unsigned __int8 *)(a1 + 18);
  v67 = *(_QWORD *)(a1 + 24);
  v68 = *(unsigned __int8 *)(a1 + 32);
  v69 = *(_QWORD *)(a1 + 40);
  v70 = *(char **)(a1 + 48);
  v71 = *(_QWORD *)(a1 + 56);
  v72 = *(_QWORD *)(a1 + 64);
  v73 = *(_QWORD *)(a1 + 72);
  v74 = *(_QWORD *)(a1 + 80);
  v75 = *(unsigned __int8 *)(a1 + 88);
  v76 = *(_QWORD *)(a1 + 96);
  v161 = *(_QWORD *)(a1 + 144);
  v77 = *(_QWORD *)(a1 + 152);
  v157 = (_QWORD *)(a1 + 152);
  v78 = *(_QWORD *)(a1 + 160);
  v162 = *(unsigned __int8 *)(a1 + 168);
  v195 = *(_QWORD *)(a1 + 176);
  v79 = *(_QWORD *)(a1 + 184);
  v80 = *(_QWORD *)(a1 + 192);
  v160 = *(_QWORD *)(a1 + 200);
  v81 = *(_QWORD *)(a1 + 208);
  v159 = *(_DWORD *)(a1 + 216);
  v207 = 0;
  v206 = v162;
  v265 = 0;
  v273 = v162;
  v82 = *(_QWORD *)(a1 + 224);
  v208 = v62;
  v175 = (int *)v61;
  v249 = v61;
  v83 = v161;
  v164 = v62;
  LOBYTE(v250) = v62;
  BYTE1(v250) = v196;
  LODWORD(v189) = v63;
  BYTE2(v250) = v63;
  LODWORD(v186) = v64;
  v251 = v64;
  LODWORD(v185) = v65;
  v252 = v65;
  LODWORD(v174) = v66;
  v253 = v66;
  v184 = v67;
  v254 = v67;
  LODWORD(v183) = v68;
  v255 = v68;
  v182 = v69;
  v256 = v69;
  v176 = (char *)v60;
  v177 = v70;
  v257 = v70;
  v172 = v72;
  v173 = v71;
  v258 = v71;
  v259 = v72;
  v170 = v74;
  v171 = v73;
  v260 = v73;
  v261 = v74;
  v169 = v75;
  v262 = v75;
  v167 = v76;
  v168 = v79;
  v263 = v76;
  v264 = v60;
  v266 = 0;
  v190 = v57;
  v267 = v57;
  v187 = v58;
  v188 = v56;
  v268 = v56;
  v269 = v58;
  v270 = v161;
  v84 = v77;
  v271 = v77;
  v158 = v78;
  v272 = v78;
  v274 = v195;
  v275 = v79;
  v165 = v81;
  v166 = v80;
  v276 = v80;
  v85 = v160;
  v277 = v160;
  v278 = v81;
  v86 = v159;
  v279 = v159;
  v163 = v82;
  v280 = v82;
  v87 = sub_1A552B11C();
  v88 = sub_1A55497C8();
  v89 = v162;
  v90 = sub_1A5573548(v88, v87);
  if ((v89 & 1) != 0)
  {
    v215 = (_DWORD *)v83;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v91 = v192;
    sub_1A5515F10((uint64_t)&v215, v90, v192);
    sub_1A54E8FCC(v83, v84, v158, 1);
    swift_bridgeObjectRelease();
    v84 = 0;
    v92 = 0;
    v83 = (uint64_t)v215;
    *(_QWORD *)(a1 + 144) = v215;
    v93 = v157;
    *v157 = 0;
    v93[1] = 0;
    *(_BYTE *)(a1 + 168) = 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    v91 = v192;
    v92 = v158;
  }
  v203 = v89;
  v215 = v175;
  v205 = v164;
  v216 = v164;
  v217 = v196;
  v221 = v174;
  v226 = v173;
  v227 = v172;
  v228 = v171;
  v229 = v170;
  v230 = v169;
  v231 = v167;
  v204 = 0;
  v232 = v176;
  v233 = 0;
  v235 = v190;
  v236 = v188;
  v237 = v187;
  v238 = v83;
  v239 = v84;
  v240 = v92;
  v241 = v89;
  v242 = v195;
  v243 = v168;
  v244 = v166;
  v245 = v85;
  v246 = v165;
  v247 = v86;
  v248 = v163;
  v94 = v189;
  v218 = v189;
  v95 = v186;
  v219 = v186;
  v96 = (char)v185;
  v220 = (char)v185;
  v97 = v184;
  v222 = v184;
  v98 = (char)v183;
  v223 = (char)v183;
  v99 = v182;
  v224 = v182;
  v100 = (uint64_t)v177;
  v225 = v177;
  v234 = 0;
  v101 = sub_1A552B11C();
  v102 = *(_QWORD *)(v101 + 16);
  v195 = v101;
  v196 = v102;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v103 = sub_1A558E3A4();
  v104 = sub_1A558E7E0(v95, v96, v97, v98, v99, v94, v100, v103);
  v105 = v193;
  v106 = v194;
  v107 = v181;
  v188 = *(os_log_t *)(v194 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v188)(v193, v91, v181);
  v108 = v191;
  sub_1A55034B8(v91, v191, type metadata accessor for Task.Logger);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v109 = sub_1A594A74C();
  v110 = sub_1A594C030();
  if (os_log_type_enabled(v109, v110))
  {
    v111 = swift_slowAlloc();
    v190 = v104;
    v112 = v111;
    v113 = swift_slowAlloc();
    v209[0] = v113;
    *(_DWORD *)v112 = 68158722;
    LODWORD(v197) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v112 + 8) = 256;
    v114 = (_QWORD *)(v108 + *(int *)(v180 + 20));
    v115 = v114[1];
    v116 = v114[2];
    LOBYTE(v197) = *v114;
    sub_1A594C3CC();
    *(_WORD *)(v112 + 11) = 2082;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v197 = sub_1A55791B0(v115, v116, v209);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC(v108, type metadata accessor for Task.Logger);
    *(_WORD *)(v112 + 21) = 2048;
    v197 = v196;
    sub_1A594C3CC();
    *(_WORD *)(v112 + 31) = 2080;
    if ((v190 & 0x100000000) != 0)
      v117 = 0xD000000000000014;
    else
      v117 = 0x746C7561666564;
    if ((v190 & 0x100000000) != 0)
      v118 = 0x80000001A5A0E970;
    else
      v118 = 0xE700000000000000;
    v197 = sub_1A55791B0(v117, v118, v209);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A4F90000, v109, v110, "[%.*hhx-%{public}s] There are (still) %ld mailbox(es) to sync. Sync behavior: %s.", (uint8_t *)v112, 0x29u);
    v119 = MEMORY[0x1E0DEE9B8];
    swift_arrayDestroy();
    v107 = v181;
    MEMORY[0x1A85B1964](v113, -1, -1);
    MEMORY[0x1A85B1964](v112, -1, -1);

    v185 = *(void (**)(char *, uint64_t))(v194 + 8);
    v185(v193, v107);
    v120 = v178;
    v121 = (uint64_t)v179;
  }
  else
  {
    sub_1A55034FC(v108, type metadata accessor for Task.Logger);

    v185 = *(void (**)(char *, uint64_t))(v106 + 8);
    v185(v105, v107);
    v120 = v178;
    v121 = (uint64_t)v179;
    v119 = MEMORY[0x1E0DEE9B8];
  }
  sub_1A5553B48(4, v195, (uint64_t)v209);
  v123 = v209[0];
  v122 = v209[1];
  v124 = v210;
  v125 = v212;
  v196 = v211;
  LODWORD(v194) = v213;
  v126 = v214;
  swift_bridgeObjectRelease();
  v202 = v124;
  v201 = v194;
  v190 = v122;
  v191 = v123;
  result = sub_1A5552DE8(v123, v122, v124);
  if ((v124 & 1) == 0)
  {
    v129 = 0;
    v189 = v126 + 56;
    v176 = (char *)&v197 + 1;
    v177 = (char *)&v197 + 4;
    v175 = &v198;
    v130 = type metadata accessor for Task.Logger;
    *(_QWORD *)&v128 = 68158979;
    v174 = v128;
    v173 = v119 + 8;
    v131 = v190;
    v132 = v191;
    v186 = v126;
    v187 = v125;
    while ((v201 & 1) == 0)
    {
      if ((_DWORD)v131 != (_DWORD)v125)
      {
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
        break;
      }
      if (v132 == v196)
      {
        v154 = v131;
        sub_1A5529B00(v191, v190, v202);
        v155 = v196;
        sub_1A5529B00(v196, v125, 0);
        swift_bridgeObjectRelease();
        return sub_1A5529B00(v155, v154, 0);
      }
      if ((v202 & 1) != 0)
        goto LABEL_52;
      if (v132 < v191)
        goto LABEL_44;
      if ((_DWORD)v125 != (_DWORD)v190)
        goto LABEL_45;
      if (v132 >= v196)
        goto LABEL_46;
      if (v132 < 0 || v132 >= 1 << *(_BYTE *)(v126 + 32))
        goto LABEL_47;
      if (((*(_QWORD *)(v189 + (((unint64_t)v132 >> 3) & 0xFFFFFFFFFFFFF8)) >> v132) & 1) == 0)
        goto LABEL_48;
      if (*(_DWORD *)(v126 + 36) != (_DWORD)v125)
        goto LABEL_49;
      v133 = v107;
      v134 = v130;
      v135 = *(_QWORD *)(v126 + 48) + 16 * v132;
      v136 = *(_QWORD *)v135;
      v137 = *(_DWORD *)(v135 + 8);
      result = sub_1A558A15C(v132, v131, 0, v126);
      v200 = v139 & 1;
      v140 = v129 + 1;
      if (__OFADD__(v129, 1))
        goto LABEL_50;
      v132 = result;
      v194 = v138;
      v195 = v129;
      v141 = v192;
      ((void (*)(char *, uint64_t, uint64_t))v188)(v120, v192, v133);
      sub_1A55034B8(v141, v121, v134);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v142 = sub_1A594A74C();
      v143 = sub_1A594C030();
      LODWORD(v193) = v143;
      if (os_log_type_enabled(v142, v143))
      {
        v144 = swift_slowAlloc();
        v184 = swift_slowAlloc();
        v199 = v184;
        *(_DWORD *)v144 = v174;
        LODWORD(v197) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v144 + 8) = 256;
        v145 = (_QWORD *)(v121 + *(int *)(v180 + 20));
        v146 = v145[1];
        v147 = v145[2];
        LOBYTE(v197) = *v145;
        sub_1A594C3CC();
        *(_WORD *)(v144 + 11) = 2082;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v183 = v142;
        LODWORD(v182) = v137;
        v148 = (uint64_t)v179;
        v197 = sub_1A55791B0(v146, v147, &v199);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55034FC(v148, v134);
        *(_WORD *)(v144 + 21) = 2048;
        v197 = v140;
        sub_1A594C3CC();
        *(_WORD *)(v144 + 31) = 2160;
        v197 = 0x786F626C69616DLL;
        sub_1A594C3CC();
        *(_WORD *)(v144 + 41) = 2085;
        v197 = v136;
        v198 = v182;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v149 = sub_1A594B4A8();
        v197 = sub_1A55791B0(v149, v150, &v199);
        v121 = v148;
        v107 = v181;
        sub_1A594C3CC();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        v151 = v183;
        _os_log_impl(&dword_1A4F90000, v183, (os_log_type_t)v193, "[%.*hhx-%{public}s] [%ld] mailbox to sync: '%{sensitive,mask.mailbox}s'", (uint8_t *)v144, 0x33u);
        v152 = v184;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v152, -1, -1);
        v153 = v144;
        v120 = v178;
        MEMORY[0x1A85B1964](v153, -1, -1);

        result = ((uint64_t (*)(char *, uint64_t))v185)(v120, v107);
        v126 = v186;
        v130 = type metadata accessor for Task.Logger;
      }
      else
      {
        sub_1A55034FC(v121, v134);

        swift_bridgeObjectRelease_n();
        result = ((uint64_t (*)(char *, uint64_t))v185)(v120, v133);
        v126 = v186;
        v130 = v134;
        v107 = v133;
      }
      v131 = v194;
      v129 = v195 + 1;
      v125 = v187;
      if ((v200 & 1) != 0)
        break;
    }
  }
  __break(1u);
LABEL_52:
  __break(1u);
  return result;
}

uint64_t sub_1A5606658@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result;
  uint64_t v7;

  result = sub_1A56047FC(a1, a2, a3, a4);
  *a5 = result;
  a5[1] = v7;
  return result;
}

unint64_t sub_1A5606684(uint64_t a1, unint64_t a2, uint64_t a3, NSObject *a4, int a5, uint64_t a6)
{
  return sub_1A564CE34(a6, a2, a3, a4, a5);
}

uint64_t sub_1A56066A0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

unint64_t sub_1A56066D0()
{
  unint64_t result;

  result = qword_1EE7972B0;
  if (!qword_1EE7972B0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AA258, &type metadata for ListMailboxes.ActionID);
    atomic_store(result, (unint64_t *)&qword_1EE7972B0);
  }
  return result;
}

unint64_t sub_1A5606718()
{
  unint64_t result;

  result = qword_1EE7972B8;
  if (!qword_1EE7972B8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AA230, &type metadata for ListMailboxes.CommandID);
    atomic_store(result, (unint64_t *)&qword_1EE7972B8);
  }
  return result;
}

unint64_t sub_1A560675C(uint64_t a1)
{
  unint64_t result;

  result = sub_1A5606780();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A5606780()
{
  unint64_t result;

  result = qword_1EE7972C8;
  if (!qword_1EE7972C8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AA1EC, &type metadata for ListMailboxes);
    atomic_store(result, (unint64_t *)&qword_1EE7972C8);
  }
  return result;
}

uint64_t sub_1A56067C4(uint64_t a1, unsigned int a2)
{
  uint64_t v2;
  char v3;

  if (*(_QWORD *)(**(_QWORD **)(v2 + 16) + 16))
    sub_1A54FDC30(a1, a2);
  else
    v3 = 0;
  return v3 & 1;
}

uint64_t sub_1A56067FC(const void *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  _OWORD *v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  int v31;
  char v32;
  int v33;
  char v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  _QWORD *v40;
  void (*v41)(_QWORD *, uint64_t);
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[4];
  _OWORD v47[37];
  _BYTE v48[48];
  _BYTE v49[584];
  _BYTE v50[584];
  uint64_t v51;
  char v52;
  uint64_t v53;
  char v54;
  int v55;
  char v56;
  int v57;
  char v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  char v64;
  _BYTE v65[592];

  v2 = (uint64_t *)v1;
  sub_1A552316C(a1, v49);
  sub_1A552316C(v49, v65);
  sub_1A552316C(a1, v50);
  result = sub_1A5523B90((uint64_t)v50);
  switch((_DWORD)result)
  {
    case 0xA:
      v15 = sub_1A5524678((uint64_t)v50);
      v16 = *(_OWORD **)v15;
      if (*(_QWORD *)(*(_QWORD *)v15 + 16))
      {
        v17 = v16[3];
        v47[0] = v16[2];
        v47[1] = v17;
        v18 = v16[5];
        v47[2] = v16[4];
        v47[3] = v18;
        sub_1A5607238((uint64_t)v47);
        v19 = Namespace.init(_:)((uint64_t)v47);
        v21 = v20;
        v23 = v22;
      }
      else
      {
        v19 = 0;
        v21 = 0;
        v23 = 0;
      }
      result = sub_1A55419EC(v2[11]);
      v2[11] = v19;
      v2[12] = v21;
      v2[13] = v23;
      break;
    case 9:
      v24 = sub_1A5524678((uint64_t)v50);
      v25 = *(_QWORD *)v24;
      v26 = *(_DWORD *)(v24 + 8);
      v27 = *(_QWORD *)(v24 + 16);
      v28 = *(_BYTE *)(v24 + 24);
      v29 = *(_QWORD *)(v24 + 32);
      v30 = *(_BYTE *)(v24 + 40);
      v31 = *(_DWORD *)(v24 + 44);
      v32 = *(_BYTE *)(v24 + 48);
      v33 = *(_DWORD *)(v24 + 52);
      v34 = *(_BYTE *)(v24 + 56);
      v35 = *(_QWORD *)(v24 + 64);
      v36 = *(_BYTE *)(v24 + 72);
      v37 = *(_QWORD *)(v24 + 80);
      v38 = *(_BYTE *)(v24 + 88);
      v39 = *(_QWORD *)(v24 + 96);
      LOBYTE(v24) = *(_BYTE *)(v24 + 104);
      v51 = v27;
      v52 = v28;
      v53 = v29;
      v54 = v30;
      v55 = v31;
      v56 = v32;
      v57 = v33;
      v58 = v34;
      v59 = v35;
      v60 = v36;
      v61 = v37;
      v62 = v38;
      v63 = v39;
      v64 = v24;
      sub_1A552316C(v65, v47);
      sub_1A5524678((uint64_t)v47);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v41 = sub_1A5540080(v46, v25, v26);
      if (*v40)
      {
        v42 = v40;
        RemoteMailbox.Status.init(_:)((uint64_t)&v51, (uint64_t)v48);
        sub_1A55032A0((uint64_t)v48, (uint64_t)(v42 + 3), &qword_1EE7983C0);
      }
      v41(v46, 0);
      return sub_1A5529E00((uint64_t)a1);
    case 7:
      v5 = sub_1A5524678((uint64_t)v50);
      v6 = *(_QWORD *)(v5 + 8);
      v7 = *(unsigned int *)(v5 + 16);
      v45 = *(unsigned __int8 *)(v5 + 20);
      v8 = MEMORY[0x1E0DEE9D8];
      if ((*(_BYTE *)(v1 + 80) & 1) != 0 && !*(_QWORD *)(v1 + 88))
      {
        sub_1A552316C(v65, v47);
        sub_1A5524678((uint64_t)v47);
        swift_retain();
        swift_retain();
        swift_retain();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v43 = sub_1A5566034(v45);
        if (v44)
        {
          *(_QWORD *)(v1 + 88) = v8;
          *(_QWORD *)(v1 + 96) = v43;
          *(_QWORD *)(v1 + 104) = v44;
        }
      }
      else
      {
        sub_1A552316C(v65, v47);
        sub_1A5524678((uint64_t)v47);
        swift_retain();
        swift_retain();
        swift_retain();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      }
      v9 = *(_QWORD *)(v1 + 88);
      if (v9)
        v10 = *(_QWORD *)(v1 + 88);
      else
        v10 = v8;
      sub_1A552CF80(v9);
      v11 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v12 = Namespace.isNotes(_:)(v11, v7, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        swift_bridgeObjectRetain_n();
        v13 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        RemoteMailbox.init(attributes:path:)(v13, v6, v7 | (v45 << 32), (uint64_t)v47);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v51 = *(_QWORD *)v1;
        *(_QWORD *)v1 = 0x8000000000000000;
        sub_1A55B2808((uint64_t)v47, v6, v7, isUniquelyReferenced_nonNull_native);
        *(_QWORD *)v1 = v51;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      return sub_1A5529E00((uint64_t)a1);
  }
  return result;
}

unint64_t sub_1A5606B94(unint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t i;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  char v23;
  __int128 v24;
  _QWORD *v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  _BOOL8 v29;
  BOOL v30;
  uint64_t v31;
  char v32;
  char v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  _BYTE v46[25];
  _BYTE v47[8];
  _BYTE v48[16];

  if (*(_BYTE *)(v1 + 112) != 2 || ((result >> 59) & 0x1E | (result >> 2) & 1) != 3)
    return result;
  v3 = *(_QWORD *)((result & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
  v4 = *(_QWORD *)(v3 + 16);
  if (!v4)
    return result;
  v5 = (_QWORD *)v1;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  for (i = 32; ; i += 96)
  {
    v8 = *(_OWORD *)(v3 + i + 32);
    v9 = *(_OWORD *)(v3 + i + 48);
    v10 = *(_OWORD *)(v3 + i + 64);
    *(_OWORD *)&v46[9] = *(_OWORD *)(v3 + i + 73);
    *(_OWORD *)v46 = v10;
    v11 = *(_OWORD *)(v3 + i + 16);
    v42 = *(_OWORD *)(v3 + i);
    v43 = v11;
    v44 = v8;
    v45 = v9;
    v12 = *(unsigned int *)&v46[16];
    v13 = *((_QWORD *)&v10 + 1);
    sub_1A5522D94((uint64_t)&v42);
    if ((static MailboxOfInterest.LocalModification.__derived_enum_equals(_:_:)(v13, v12, 0, 0) & 1) == 0)
      goto LABEL_10;
    sub_1A55032A0((uint64_t)&v46[20], (uint64_t)v47, &qword_1EE7A0610);
    sub_1A55032A0((uint64_t)v47, (uint64_t)v48, &qword_1EE7A0610);
    if (v48[4] != 1)
      goto LABEL_10;
    v14 = *v5;
    if (!*(_QWORD *)(*v5 + 16))
      goto LABEL_10;
    v15 = sub_1A54FDC30(v43, DWORD2(v43));
    if ((v16 & 1) == 0)
      goto LABEL_10;
    v17 = *(_QWORD *)(v14 + 56) + 72 * v15;
    v18 = *(_QWORD *)(v17 + 40);
    v41 = *(_QWORD *)(v17 + 48);
    v19 = *(_QWORD *)(v17 + 56);
    v20 = *(_BYTE *)(v17 + 64);
    v21 = *(_BYTE *)(v17 + 65);
    if (!_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0())
      goto LABEL_10;
    swift_bridgeObjectRelease();
    if ((v21 & 1) != 0)
      goto LABEL_10;
    if ((v20 & 1) != 0)
      goto LABEL_10;
    v22 = MailboxOfInterest.highestModificationSequenceValue.getter();
    if ((v23 & 1) != 0)
      goto LABEL_10;
    if ((v22 | v19) < 0)
      break;
    if (v19 != v22)
      goto LABEL_10;
    v24 = v42;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = (_QWORD *)v5[1];
    v5[1] = 0x8000000000000000;
    v26 = sub_1A54FDC94(v24, *((uint64_t *)&v24 + 1));
    v28 = v25[2];
    v29 = (v27 & 1) == 0;
    v30 = __OFADD__(v28, v29);
    v31 = v28 + v29;
    if (v30)
      goto LABEL_33;
    v32 = v27;
    if (v25[3] < v31)
    {
      sub_1A55837D8(v31, isUniquelyReferenced_nonNull_native);
      v26 = sub_1A54FDC94(v24, *((uint64_t *)&v24 + 1));
      if ((BYTE8(v24) & 1) != (v33 & 1))
        goto LABEL_35;
LABEL_26:
      v34 = v25;
      if ((v32 & 1) == 0)
        goto LABEL_27;
      goto LABEL_8;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_26;
    v38 = v27;
    v39 = v26;
    sub_1A5550510();
    v26 = v39;
    LOBYTE(v39) = v38;
    v34 = v25;
    if ((v39 & 1) == 0)
    {
LABEL_27:
      v34[(v26 >> 6) + 8] |= 1 << v26;
      *(_OWORD *)(v34[6] + 16 * v26) = v24;
      v35 = v34[7] + 24 * v26;
      *(_DWORD *)v35 = 0;
      *(_BYTE *)(v35 + 4) = 1;
      *(_QWORD *)(v35 + 8) = v18;
      *(_BYTE *)(v35 + 16) = v41 & 1;
      v36 = v34[2];
      v30 = __OFADD__(v36, 1);
      v37 = v36 + 1;
      if (v30)
        goto LABEL_34;
      v34[2] = v37;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_9;
    }
LABEL_8:
    v7 = v34[7] + 24 * v26;
    *(_DWORD *)v7 = 0;
    *(_BYTE *)(v7 + 4) = 1;
    *(_QWORD *)(v7 + 8) = v18;
    *(_BYTE *)(v7 + 16) = v41 & 1;
LABEL_9:
    v5[1] = v34;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_10:
    sub_1A5522DE4((uint64_t)&v42);
    if (!--v4)
      return swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  result = sub_1A594CDF8();
  __break(1u);
  return result;
}

uint64_t sub_1A5606EB8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, _OWORD *))
{
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t *v25;
  uint64_t v26;
  _OWORD v27[4];
  __int16 v28;
  int64_t v29;

  v25 = (unint64_t *)result;
  v26 = 0;
  v6 = 0;
  v7 = a3 + 64;
  v8 = 1 << *(_BYTE *)(a3 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a3 + 64);
  v29 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v12 = v11 | (v6 << 6);
      goto LABEL_5;
    }
    v20 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v20 >= v29)
      return sub_1A5530818(v25, a2, v26, a3);
    v21 = *(_QWORD *)(v7 + 8 * v20);
    ++v6;
    if (!v21)
    {
      v6 = v20 + 1;
      if (v20 + 1 >= v29)
        return sub_1A5530818(v25, a2, v26, a3);
      v21 = *(_QWORD *)(v7 + 8 * v6);
      if (!v21)
      {
        v6 = v20 + 2;
        if (v20 + 2 >= v29)
          return sub_1A5530818(v25, a2, v26, a3);
        v21 = *(_QWORD *)(v7 + 8 * v6);
        if (!v21)
          break;
      }
    }
LABEL_20:
    v10 = (v21 - 1) & v21;
    v12 = __clz(__rbit64(v21)) + (v6 << 6);
LABEL_5:
    v13 = *(_QWORD *)(a3 + 48) + 16 * v12;
    v14 = *(_QWORD *)v13;
    v15 = *(unsigned int *)(v13 + 8);
    v16 = *(_QWORD *)(a3 + 56) + 72 * v12;
    v27[0] = *(_OWORD *)v16;
    v18 = *(_OWORD *)(v16 + 32);
    v17 = *(_OWORD *)(v16 + 48);
    v19 = *(_OWORD *)(v16 + 16);
    v28 = *(_WORD *)(v16 + 64);
    v27[2] = v18;
    v27[3] = v17;
    v27[1] = v19;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54FCA28((uint64_t)v27);
    LOBYTE(v15) = a4(v14, v15, v27);
    sub_1A54F81BC((uint64_t)v27);
    result = swift_bridgeObjectRelease();
    if ((v15 & 1) != 0)
    {
      *(unint64_t *)((char *)v25 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v26++, 1))
      {
        __break(1u);
        return sub_1A5530818(v25, a2, v26, a3);
      }
    }
  }
  v22 = v20 + 3;
  if (v22 >= v29)
    return sub_1A5530818(v25, a2, v26, a3);
  v21 = *(_QWORD *)(v7 + 8 * v22);
  if (v21)
  {
    v6 = v22;
    goto LABEL_20;
  }
  while (1)
  {
    v6 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v6 >= v29)
      return sub_1A5530818(v25, a2, v26, a3);
    v21 = *(_QWORD *)(v7 + 8 * v6);
    ++v22;
    if (v21)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1A56070C8(uint64_t isStackAllocationSafe, uint64_t (*a2)(uint64_t, uint64_t, _OWORD *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  char v7;
  unint64_t v8;
  size_t v9;
  uint64_t v10;
  void *v11;
  _QWORD v13[2];

  v6 = isStackAllocationSafe;
  v13[1] = *MEMORY[0x1E0C80C00];
  v7 = *(_BYTE *)(isStackAllocationSafe + 32);
  v8 = (unint64_t)((1 << v7) + 63) >> 6;
  v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    v10 = sub_1A5606EB8((uint64_t)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v8, v6, a2);
    if (v3)
      swift_willThrow();
    else
      return v10;
  }
  else
  {
    v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    a3 = sub_1A5606EB8((uint64_t)v11, v8, v6, a2);
    MEMORY[0x1A85B1964](v11, -1, -1);
  }
  return a3;
}

uint64_t sub_1A5607238(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t sub_1A5607298()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A56072BC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t storeEnumTagSinglePayload for ListMailboxes.CommandID(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A5607334 + 4 * byte_1A59AA1BF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A5607368 + 4 * byte_1A59AA1BA[v4]))();
}

uint64_t sub_1A5607368(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5607370(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5607378);
  return result;
}

uint64_t sub_1A5607384(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A560738CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A5607390(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5607398(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ListMailboxes.CommandID()
{
  return &type metadata for ListMailboxes.CommandID;
}

uint64_t storeEnumTagSinglePayload for ListMailboxes.ActionID(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A5607400 + 4 * byte_1A59AA1C9[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A5607434 + 4 * byte_1A59AA1C4[v4]))();
}

uint64_t sub_1A5607434(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A560743C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5607444);
  return result;
}

uint64_t sub_1A5607450(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5607458);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A560745C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5607464(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ListMailboxes.ActionID()
{
  return &type metadata for ListMailboxes.ActionID;
}

uint64_t sub_1A5607484(uint64_t a1)
{
  unint64_t v1;
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  int v8;
  char v9;
  uint64_t v10;
  int v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  BOOL v42;
  uint64_t v43;
  unint64_t v44;
  unsigned int v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unsigned int v50;
  uint64_t v51;
  unsigned int v52;
  uint64_t v53;
  unint64_t v54;
  unsigned int v55;
  __int128 v56;
  int v57;
  char v58;
  uint64_t v59;
  int v60;
  char v61;
  uint64_t v62;
  int v63;
  char v64;
  char v65;
  _QWORD v66[2];
  uint64_t v67;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 32123;
  if (v1 > 9)
  {
    v54 = sub_1A54E3414();
    swift_bridgeObjectRetain_n();
    v43 = a1;
    v20 = a1 + 84;
    v21 = 0xFFFFFFFFLL;
    v52 = -1;
    v44 = v1;
    do
    {
      v48 = v1;
      v22 = *(_QWORD *)(v20 - 44);
      v23 = *(unsigned int *)(v20 - 36);
      v24 = *(unsigned __int8 *)(v20 - 32);
      v25 = *(_QWORD *)(v20 - 28);
      v26 = *(unsigned int *)(v20 - 20);
      v55 = *(unsigned __int8 *)(v20 - 16);
      v51 = *(_QWORD *)(v20 - 12);
      v50 = *(_DWORD *)(v20 - 4);
      LODWORD(v53) = *(unsigned __int8 *)v20;
      v46 = v21 & 0xFFFFFF0000000000 | v23 | (v24 << 32);
      v27 = v54;
      MessageIdentifierSet.ranges.getter(v22, v46);
      v29 = (_BYTE *)v28;
      v31 = v30;
      v49 = HIDWORD(v30);
      v32 = v30 & 0xFFFFFFFFFFLL;
      if (!MessageIdentifierSet.RangeView.endIndex.getter(v28, v30 & 0xFFFFFFFFFFLL))
      {
LABEL_28:
        sub_1A54E4334(v22, v23, v24);
        sub_1A54E4334(v25, v26, v55);
        sub_1A54E4334(v51, v50, v53);
        sub_1A54E3458((uint64_t)v29, v31, v49);
        __break(1u);
        goto LABEL_29;
      }
      v20 += 56;
      sub_1A54E4334(v22, v23, v24);
      sub_1A54E4334(v25, v26, v55);
      sub_1A54E4334(v51, v50, v53);
      MessageIdentifierSet.RangeView.subscript.getter(0, (uint64_t)v29, v32);
      sub_1A54E3458((uint64_t)v29, v31, v49);
      sub_1A54E3458(v22, v23, v24);
      sub_1A54E3458(v25, v26, v55);
      sub_1A54E3458(v51, v50, v53);
      v33 = v52;
      if (v56 < v52)
        v33 = v56;
      v52 = v33;
      v21 = v46;
      v1 = v48 - 1;
    }
    while (v48 != 1);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRetain_n();
    v29 = (_BYTE *)(v43 + 84);
    v22 = 1;
    v23 = (uint64_t)&type metadata for UID;
    v35 = v54;
    while (1)
    {
      v32 = *(_QWORD *)(v29 - 44);
      v24 = *(v29 - 32);
      v53 = *(_QWORD *)(v29 - 28);
      v50 = *((_DWORD *)v29 - 5);
      v31 = *(v29 - 16);
      v51 = *(_QWORD *)(v29 - 12);
      v55 = *((_DWORD *)v29 - 1);
      LOBYTE(v54) = *v29;
      v20 = *((unsigned int *)v29 - 9);
      v47 = v34 & 0xFFFFFF0000000000 | v20 | (v24 << 32);
      MessageIdentifierSet.ranges.getter(v32, v47);
      v27 = v36;
      v48 = HIDWORD(v37);
      v49 = v37;
      v25 = v37 & 0xFFFFFFFFFFLL;
      if (!MessageIdentifierSet.RangeView.endIndex.getter(v36, v37 & 0xFFFFFFFFFFLL))
        break;
      v38 = MessageIdentifierSet.RangeView.endIndex.getter(v27, v25);
      v39 = v35;
      v26 = v38 - 1;
      if (__OFSUB__(v38, 1))
      {
        __break(1u);
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
      v45 = v22;
      v22 = v39;
      v40 = MessageIdentifierSet.RangeView.endIndex.getter(v27, v25);
      if (v26 < 0 || v26 >= v40)
        goto LABEL_27;
      v29 += 56;
      sub_1A54E4334(v32, v20, v24);
      sub_1A54E4334(v53, v50, v31);
      sub_1A54E4334(v51, v55, v54);
      v41 = v26;
      v35 = v22;
      MessageIdentifierSet.RangeView.subscript.getter(v41, v27, v25);
      sub_1A54E3458(v27, v49, v48);
      sub_1A54E3458(v32, v20, v24);
      sub_1A54E3458(v53, v50, v31);
      sub_1A54E3458(v51, v55, v54);
      if (DWORD1(v56) >= v45)
        v22 = v45;
      else
        v22 = DWORD1(v56);
      v42 = v44-- == 1;
      v34 = v47;
      if (v42)
      {
        swift_bridgeObjectRelease_n();
        *(_QWORD *)&v56 = 0;
        *((_QWORD *)&v56 + 1) = 0xE000000000000000;
        sub_1A594C924();
        sub_1A594B5F8();
        LODWORD(v66[0]) = v22;
        sub_1A594C924();
        return v56;
      }
    }
LABEL_29:
    sub_1A54E4334(v32, v20, v24);
    sub_1A54E4334(v53, v50, v31);
    sub_1A54E4334(v51, v55, v54);
    result = sub_1A54E3458(v27, v49, v48);
    __break(1u);
  }
  else
  {
    v67 = MEMORY[0x1E0DEE9D8];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54F4B4C(0, v1, 0);
    v3 = 0;
    v4 = v67;
    do
    {
      v5 = *(_DWORD *)(a1 + v3 + 48);
      v6 = *(_BYTE *)(a1 + v3 + 52);
      v7 = *(_QWORD *)(a1 + v3 + 56);
      v8 = *(_DWORD *)(a1 + v3 + 64);
      v9 = *(_BYTE *)(a1 + v3 + 68);
      v10 = *(_QWORD *)(a1 + v3 + 72);
      v11 = *(_DWORD *)(a1 + v3 + 80);
      v12 = *(_BYTE *)(a1 + v3 + 84);
      v13 = *(_BYTE *)(a1 + v3 + 85);
      v56 = *(_OWORD *)(a1 + v3 + 32);
      v57 = v5;
      v58 = v6;
      v59 = v7;
      v60 = v8;
      v61 = v9;
      v62 = v10;
      v63 = v11;
      v64 = v12;
      v65 = v13;
      sub_1A5610C78((uint64_t)&v56, v66);
      v14 = v66[0];
      v15 = v66[1];
      v67 = v4;
      v17 = *(_QWORD *)(v4 + 16);
      v16 = *(_QWORD *)(v4 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1A54F4B4C(v16 > 1, v17 + 1, 1);
        v4 = v67;
      }
      *(_QWORD *)(v4 + 16) = v17 + 1;
      v18 = v4 + 16 * v17;
      *(_QWORD *)(v18 + 32) = v14;
      *(_QWORD *)(v18 + 40) = v15;
      v3 += 56;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v56 = v4;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799A38);
    sub_1A54F70C0();
    sub_1A594B268();
    swift_release();
    *(_QWORD *)&v56 = 123;
    *((_QWORD *)&v56 + 1) = 0xE100000000000000;
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
    return v56;
  }
  return result;
}

void sub_1A5607AA8(uint64_t a1, unint64_t a2, uint64_t a3, void *a4, int a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  NSObject *v29;
  __n128 v30;
  uint64_t v31;
  unsigned int *i;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  int v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(NSObject *, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  NSObject *v88;
  os_log_type_t v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  unint64_t v96;
  int v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  NSObject *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char v129;
  NSObject *v130;
  os_log_type_t v131;
  int v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  unint64_t v137;
  int v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  NSObject *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char v151;
  char v152;
  uint64_t v153;
  char v154;
  char v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  _DWORD *v163;
  uint64_t v164;
  char *v165;
  char *v166;
  char *v167;
  NSObject *v168;
  uint64_t v169;
  NSObject *v170;
  uint64_t v171;
  uint64_t v172;
  unsigned int v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  int v178;
  uint64_t v179;
  uint64_t v180;
  unint64_t v181;
  uint64_t v182;
  void *v183;
  int v184;
  uint64_t v185;
  uint64_t v186;
  _DWORD v187[4];
  char *v188;

  v9 = v8;
  v185 = a7;
  v184 = a5;
  v182 = a3;
  v183 = a4;
  v181 = a2;
  v13 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v159 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v159 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v159 - v20;
  v22 = sub_1A594A764();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  MEMORY[0x1E0C80A78](v24);
  v30.n128_f64[0] = MEMORY[0x1E0C80A78](v25);
  v31 = *(_QWORD *)(a8 + 16);
  if (!v31)
    return;
  for (i = (unsigned int *)(a8 + 48); *((_QWORD *)i - 2) != a1; i += 14)
  {
    if (!--v31)
      return;
  }
  v165 = v21;
  v166 = v15;
  v163 = (_DWORD *)v13;
  v167 = v18;
  v168 = v29;
  v170 = v28;
  v164 = a1;
  v33 = *((_QWORD *)i - 1);
  v34 = *i;
  v35 = *((unsigned __int8 *)i + 4);
  v36 = *((_QWORD *)i + 1);
  v37 = i[4];
  v38 = *((unsigned __int8 *)i + 20);
  v39 = *((_QWORD *)i + 3);
  v40 = a6;
  v41 = i[8];
  v42 = *((unsigned __int8 *)i + 36);
  v175 = v33;
  v176 = v23;
  v169 = v9;
  v178 = v42;
  v173 = v41;
  v179 = v38;
  v180 = v35;
  v177 = v37;
  v174 = v27;
  v171 = v34;
  v172 = v39;
  if ((v40 & 1) != 0)
  {
    if ((*((_BYTE *)i + 37) & 1) != 0)
    {
      v34 = v171;
      v43 = v180;
      sub_1A54E4334(v33, v171, v180);
      v44 = v36;
      sub_1A54E4334(v36, v177, v179);
      sub_1A54E4334(v39, v173, v178);
    }
    else
    {
      v46 = v33;
      v47 = (char *)&v159 - v26;
      v48 = v185;
      v49 = v27;
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v23 + 16))((char *)&v159 - v26, v185, v27, v30);
      v50 = (uint64_t)v165;
      sub_1A55BAEB8(v48, (uint64_t)v165);
      v34 = v171;
      v43 = v180;
      sub_1A54E4334(v46, v171, v180);
      v44 = v36;
      sub_1A54E4334(v36, v177, v179);
      sub_1A54E4334(v39, v173, v178);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v51 = sub_1A594A74C();
      v52 = sub_1A594C018();
      v53 = v52;
      if (os_log_type_enabled(v51, v52))
      {
        v54 = swift_slowAlloc();
        v161 = (char *)swift_slowAlloc();
        v188 = v161;
        *(_DWORD *)v54 = 68159491;
        LODWORD(v186) = 2;
        v160 = (char *)&v186 + 4;
        sub_1A594C3CC();
        *(_WORD *)(v54 + 8) = 256;
        v55 = v50 + (int)v163[5];
        LOBYTE(v186) = *(_BYTE *)v55;
        sub_1A594C3CC();
        *(_WORD *)(v54 + 11) = 2082;
        v159 = v54 + 13;
        v56 = *(_QWORD *)(v55 + 8);
        v57 = *(_QWORD *)(v55 + 16);
        LODWORD(v162) = v53;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v186 = sub_1A55791B0(v56, v57, (uint64_t *)&v188);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v54 + 21) = 1040;
        LODWORD(v186) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v54 + 27) = 512;
        LOWORD(v186) = *(_WORD *)(v55 + 24);
        sub_1A594C3CC();
        *(_WORD *)(v54 + 31) = 2160;
        v186 = 0x786F626C69616DLL;
        sub_1A594C3CC();
        *(_WORD *)(v54 + 41) = 2085;
        v58 = *(_DWORD *)(v55 + 40);
        v186 = *(_QWORD *)(v55 + 32);
        v187[0] = v58;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v59 = sub_1A594B4A8();
        v186 = sub_1A55791B0(v59, v60, (uint64_t *)&v188);
        v43 = v180;
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55BAEFC(v50);
        *(_WORD *)(v54 + 51) = 2048;
        v186 = v164;
        sub_1A594C3CC();
        _os_log_impl(&dword_1A4F90000, v51, (os_log_type_t)v162, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Search completed for range #%ld, but server never sent a response. rdar://127003347", (uint8_t *)v54, 0x3Du);
        v61 = (uint64_t)v161;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v61, -1, -1);
        v62 = v54;
        v34 = v171;
        MEMORY[0x1A85B1964](v62, -1, -1);

        (*(void (**)(char *, uint64_t))(v176 + 8))(v47, v174);
      }
      else
      {
        sub_1A55BAEFC(v50);

        (*(void (**)(char *, uint64_t))(v176 + 8))(v47, v49);
      }
      v33 = v175;
    }
  }
  else
  {
    v45 = v42;
    sub_1A54E4334(v33, v34, v35);
    sub_1A54E4334(v36, v37, v38);
    sub_1A54E4334(v39, v41, v45);
    v44 = v36;
    v43 = v35;
  }
  v63 = sub_1A54E3414();
  v64 = v34;
  v65 = v33;
  v66 = v63;
  v161 = (char *)(v34 | (v43 << 32));
  MessageIdentifierSet.ranges.getter(v65, (uint64_t)v161);
  v68 = v67;
  v70 = v69;
  v71 = v69 & 0xFFFFFFFFFFLL;
  v72 = MessageIdentifierSet.RangeView.endIndex.getter(v67, v69 & 0xFFFFFFFFFFLL);
  if (MessageIdentifierSet.RangeView.endIndex.getter(v68, v71) < 0)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    return;
  }
  v73 = MessageIdentifierSet.RangeView.endIndex.getter(v68, v71);
  sub_1A54E3458(v68, v70, SBYTE4(v70));
  if (v72 < 0 || v73 < v72)
    goto LABEL_29;
  v165 = (char *)v66;
  v74 = *(void (**)(NSObject *, uint64_t, uint64_t))(v176 + 16);
  if ((unint64_t)v72 > 9)
  {
    v124 = v185;
    v74(v168, v185, v174);
    sub_1A55BAEB8(v124, (uint64_t)v166);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v125 = v64;
    sub_1A54E4334(v175, v64, v180);
    v126 = v177;
    sub_1A54E4334(v44, v177, v179);
    v127 = v172;
    v128 = v173;
    v162 = v44;
    v129 = v178;
    sub_1A54E4334(v172, v173, v178);
    v130 = sub_1A594A74C();
    v131 = sub_1A594C030();
    v132 = v131;
    v170 = v130;
    if (os_log_type_enabled(v130, v131))
    {
      v133 = swift_slowAlloc();
      v167 = (char *)swift_slowAlloc();
      v188 = v167;
      *(_DWORD *)v133 = 68159747;
      LODWORD(v186) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v133 + 8) = 256;
      v134 = (uint64_t)v166;
      v135 = &v166[v163[5]];
      LOBYTE(v186) = *v135;
      sub_1A594C3CC();
      *(_WORD *)(v133 + 11) = 2082;
      v136 = *((_QWORD *)v135 + 1);
      v137 = *((_QWORD *)v135 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v186 = sub_1A55791B0(v136, v137, (uint64_t *)&v188);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v133 + 21) = 1040;
      LODWORD(v186) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v133 + 27) = 512;
      LOWORD(v186) = *((_WORD *)v135 + 12);
      sub_1A594C3CC();
      *(_WORD *)(v133 + 31) = 2160;
      v186 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v133 + 41) = 2085;
      v138 = *((_DWORD *)v135 + 10);
      v186 = *((_QWORD *)v135 + 4);
      v187[0] = v138;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v139 = sub_1A594B4A8();
      v186 = sub_1A55791B0(v139, v140, (uint64_t *)&v188);
      v163 = v187;
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55BAEFC(v134);
      *(_WORD *)(v133 + 51) = 2048;
      v186 = v164;
      sub_1A594C3CC();
      *(_WORD *)(v133 + 61) = 2048;
      v164 = v133 + 63;
      v141 = v177;
      LOBYTE(v137) = v179;
      LODWORD(v166) = v132;
      v142 = v162;
      v165 = (char *)MessageIdentifierSet.count.getter(v162, v177 | (v179 << 32));
      v143 = v175;
      v144 = v171;
      LOBYTE(v135) = v180;
      sub_1A54E3458(v175, v171, v180);
      sub_1A54E3458(v142, v141, v137);
      v145 = v172;
      v146 = v173;
      LOBYTE(v134) = v178;
      sub_1A54E3458(v172, v173, v178);
      v186 = (uint64_t)v165;
      sub_1A594C3CC();
      sub_1A54E3458(v143, v144, (char)v135);
      sub_1A54E3458(v142, v177, v137);
      sub_1A54E3458(v145, v146, v134);
      v147 = v170;
      _os_log_impl(&dword_1A4F90000, v170, (os_log_type_t)v166, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Search completed for range #%ld. Got %ld UIDs.", (uint8_t *)v133, 0x47u);
      v148 = (uint64_t)v167;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v148, -1, -1);
      MEMORY[0x1A85B1964](v133, -1, -1);

    }
    else
    {
      v155 = v179;
      v154 = v180;
      v156 = v175;
      sub_1A54E3458(v175, v125, v180);
      v157 = v127;
      v158 = v162;
      sub_1A54E3458(v162, v126, v155);
      sub_1A54E3458(v157, v128, v129);
      sub_1A55BAEFC((uint64_t)v166);
      sub_1A54E3458(v156, v125, v154);
      sub_1A54E3458(v158, v126, v155);
      sub_1A54E3458(v157, v128, v129);

    }
    (*(void (**)(NSObject *, uint64_t))(v176 + 8))(v168, v174);
  }
  else
  {
    v75 = v185;
    v74(v170, v185, v174);
    sub_1A55BAEB8(v75, (uint64_t)v167);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v76 = v175;
    v77 = v64;
    v78 = v64;
    v79 = v180;
    sub_1A54E4334(v175, v78, v180);
    v80 = v177;
    v81 = v179;
    sub_1A54E4334(v44, v177, v179);
    v82 = v172;
    v83 = v173;
    v84 = v178;
    sub_1A54E4334(v172, v173, v178);
    sub_1A54E4334(v76, v77, v79);
    sub_1A54E4334(v44, v80, v81);
    sub_1A54E4334(v82, v83, v84);
    v85 = v77;
    v86 = v82;
    v87 = v44;
    sub_1A54E4334(v76, v85, v79);
    sub_1A54E4334(v44, v80, v81);
    sub_1A54E4334(v86, v83, v84);
    v88 = sub_1A594A74C();
    v89 = sub_1A594C030();
    v90 = v89;
    v168 = v88;
    if (os_log_type_enabled(v88, v89))
    {
      v91 = swift_slowAlloc();
      v162 = v44;
      v92 = v91;
      v166 = (char *)swift_slowAlloc();
      v188 = v166;
      *(_DWORD *)v92 = 68160003;
      LODWORD(v186) = 2;
      LODWORD(v160) = v90;
      sub_1A594C3CC();
      *(_WORD *)(v92 + 8) = 256;
      v93 = (uint64_t)v167;
      v94 = &v167[v163[5]];
      LOBYTE(v186) = *v94;
      sub_1A594C3CC();
      *(_WORD *)(v92 + 11) = 2082;
      v95 = *((_QWORD *)v94 + 1);
      v96 = *((_QWORD *)v94 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v186 = sub_1A55791B0(v95, v96, (uint64_t *)&v188);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v92 + 21) = 1040;
      LODWORD(v186) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v92 + 27) = 512;
      LOWORD(v186) = *((_WORD *)v94 + 12);
      sub_1A594C3CC();
      *(_WORD *)(v92 + 31) = 2160;
      v186 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v92 + 41) = 2085;
      v97 = *((_DWORD *)v94 + 10);
      v186 = *((_QWORD *)v94 + 4);
      v187[0] = v97;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v98 = sub_1A594B4A8();
      v186 = sub_1A55791B0(v98, v99, (uint64_t *)&v188);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55BAEFC(v93);
      v100 = v172;
      *(_WORD *)(v92 + 51) = 2048;
      v186 = v164;
      v163 = v187;
      sub_1A594C3CC();
      *(_WORD *)(v92 + 61) = 2082;
      v101 = v175;
      v102 = v171;
      LOBYTE(v94) = v180;
      sub_1A54E4334(v175, v171, v180);
      MessageIdentifierSet.debugDescription.getter();
      v104 = v103;
      v106 = v105;
      sub_1A54E3458(v101, v102, (char)v94);
      v186 = sub_1A55791B0(v104, v106, (uint64_t *)&v188);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      v107 = v102;
      sub_1A54E3458(v101, v102, (char)v94);
      v108 = v162;
      v109 = v177;
      v110 = v179;
      sub_1A54E3458(v162, v177, v179);
      v111 = v173;
      v112 = v178;
      sub_1A54E3458(v100, v173, v178);
      v113 = v107;
      LOBYTE(v107) = v180;
      sub_1A54E3458(v101, v113, v180);
      sub_1A54E3458(v108, v109, v110);
      v114 = v100;
      v115 = v111;
      sub_1A54E3458(v114, v111, v112);
      *(_WORD *)(v92 + 71) = 2048;
      v167 = (char *)(v92 + 73);
      v116 = v110;
      v117 = MessageIdentifierSet.count.getter(v108, v109 | (v110 << 32));
      v118 = v171;
      sub_1A54E3458(v101, v171, v107);
      sub_1A54E3458(v108, v109, v116);
      v119 = v172;
      v120 = v115;
      v121 = v115;
      LOBYTE(v115) = v178;
      sub_1A54E3458(v172, v121, v178);
      v186 = v117;
      sub_1A594C3CC();
      sub_1A54E3458(v101, v118, v180);
      sub_1A54E3458(v108, v109, v179);
      sub_1A54E3458(v119, v120, v115);
      v122 = v168;
      _os_log_impl(&dword_1A4F90000, v168, (os_log_type_t)v160, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Search completed for range #%ld %{public}s. Got %ld UIDs.", (uint8_t *)v92, 0x51u);
      v123 = (uint64_t)v166;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v123, -1, -1);
      MEMORY[0x1A85B1964](v92, -1, -1);

    }
    else
    {
      v149 = v175;
      v150 = v171;
      v151 = v180;
      sub_1A54E3458(v175, v171, v180);
      v152 = v179;
      sub_1A54E3458(v87, v80, v179);
      v153 = v172;
      sub_1A54E3458(v172, v83, v84);
      sub_1A55BAEFC((uint64_t)v167);
      sub_1A54E3458(v149, v150, v151);
      sub_1A54E3458(v87, v80, v152);
      sub_1A54E3458(v153, v83, v84);
      sub_1A54E3458(v149, v150, v151);
      sub_1A54E3458(v87, v80, v152);
      sub_1A54E3458(v153, v83, v84);
      sub_1A54E3458(v149, v150, v151);
      sub_1A54E3458(v87, v80, v152);
      sub_1A54E3458(v153, v83, v84);

    }
    (*(void (**)(NSObject *, uint64_t))(v176 + 8))(v170, v174);
  }
  sub_1A564DEAC(v185, v181, v182, v183, v184);
}

void sub_1A5608C50(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  NSObject *v35;
  BOOL v36;
  NSObject *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  NSObject *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  os_log_t v88;
  os_log_t v89;
  uint8_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  os_log_t v97;
  uint8_t *v98;
  uint64_t (*v99)(uint64_t, uint64_t, uint64_t);
  id v100;
  os_log_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint8_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  void (*v117)(uint64_t, uint64_t, uint64_t);
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint8_t *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint8_t *v157;
  uint64_t v158;
  uint64_t v159;
  os_log_t v160;
  _QWORD *v161;
  uint8_t *v162;
  uint64_t v163;
  NSObject *v164;
  uint64_t v165;
  os_log_t v166;
  uint8_t *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  os_log_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint8_t *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint8_t *v183;
  NSObject *v184;
  uint8_t *v185;
  uint64_t (*v186)(uint64_t, uint64_t, uint64_t);
  os_log_t v187;
  uint64_t v188;
  uint64_t v189;
  NSObject *v190;
  uint64_t v191;
  uint64_t (*v192)(uint64_t, uint64_t, uint64_t);
  uint64_t v193;
  uint64_t v194;
  unint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  char v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint8_t *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t inited;
  os_log_t v229;
  _QWORD *v230;
  uint64_t v231;
  os_log_t v232;
  uint64_t v233;
  uint64_t v234;
  os_log_t v235;
  uint8_t *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  os_log_t v240;
  uint64_t v241;
  NSObject *v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint8_t *v249;
  NSObject *v250;
  uint64_t v251;
  NSObject *v252;
  uint8_t *v253;
  uint64_t (*v254)(uint64_t, uint64_t, uint64_t);
  os_log_t v255;
  os_log_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t (*v260)(uint64_t, uint64_t, uint64_t);
  void (*v261)(NSObject *, uint64_t);
  NSObject *v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  objc_class *v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  unint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint8_t *v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  NSObject *v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  NSObject *v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  NSObject *v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  _QWORD *v308;
  uint64_t v309;
  uint64_t v310;
  uint8_t *v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  char *v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  os_log_t v328;
  NSObject *v329;
  uint64_t v330;
  os_log_t v331;
  uint8_t *v332;
  NSObject *v333;
  NSObject *v334;
  NSObject *v335;
  uint64_t v336;
  NSObject *v337;
  os_log_t v338;
  NSObject *v339;
  NSObject *v340;
  os_log_t v341;
  uint64_t v342;
  void (*v343)(uint64_t, uint64_t, uint64_t);
  uint64_t v344;
  unint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  __int128 v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint8_t *v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  NSObject *v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  NSObject *v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  os_log_t v379;
  uint64_t v380;
  uint64_t v381;
  uint8_t *v382;
  uint64_t v383;
  uint64_t v384;
  _QWORD *v385;
  uint8_t *v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint8_t *v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  os_log_t v394;
  uint64_t v395;
  NSObject *v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  NSObject *v400;
  uint64_t v401;
  NSObject *v402;
  uint64_t v403;
  os_log_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  os_log_t v408;
  uint8_t *v409;
  NSObject *v410;
  uint8_t *v411;
  uint64_t v412;
  NSObject *v413;
  os_log_t v414;
  NSObject *v415;
  NSObject *v416;
  NSObject *v417;
  os_log_t v418;
  os_log_t v419;
  uint64_t v420;
  uint64_t v421;
  unint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  __int128 v433;
  uint64_t v434;
  __int128 v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint8_t *v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  NSObject *v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  NSObject *v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint8_t *v456;
  uint64_t v457;
  uint8_t *v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  NSObject *v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  _QWORD *v470;
  uint8_t *v471;
  uint8_t *v472;
  uint64_t v473;
  os_log_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  os_log_t v479;
  os_log_t v480;
  uint64_t v481;
  NSObject *v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint8_t *v486;
  uint64_t v487;
  NSObject *v488;
  os_log_t v489;
  os_log_t v490;
  uint64_t v491;
  uint8_t *v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  NSObject *v497;
  uint8_t *v498;
  uint64_t v499;
  os_log_t v500;
  NSObject *v501;
  NSObject *v502;
  NSObject *v503;
  NSObject *v504;
  os_log_t v505;
  NSObject *v506;
  NSObject *v507;
  uint64_t v508;
  void (*v509)(os_log_t, uint64_t);
  os_log_t v510;
  char v511;
  unint64_t v512;
  uint64_t v513;
  uint64_t v514;
  uint64_t v515;
  uint64_t v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  uint64_t v535;
  uint64_t v536;
  uint64_t v537;
  NSObject *v538;
  uint64_t v539;
  _QWORD *v540;
  uint64_t v541;
  uint64_t v542;
  uint64_t v543;
  uint64_t v544;
  uint64_t v545;
  uint64_t v546;
  uint64_t v547;
  uint64_t v548;
  uint64_t v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  os_log_t v554;
  uint64_t v555;
  uint64_t v556;
  os_log_t v557;
  NSObject *v558;
  NSObject *v559;
  uint8_t *v560;
  NSObject *v561;
  NSObject *v562;
  NSObject *v563;
  uint64_t v564;
  NSObject *v565;
  uint64_t v566;
  uint64_t (*v567)(uint64_t, uint64_t, uint64_t);
  uint8_t *v568;
  uint64_t v569;
  NSObject *v570;
  NSObject *v571;
  uint64_t v572;
  uint64_t v573;
  uint64_t v574;
  uint8_t *v575;
  os_log_t v576;
  os_log_t v577;
  uint64_t v578;
  os_log_t v579;
  uint64_t v580;
  NSObject *v581;
  uint64_t v582;
  uint64_t v583;
  uint8_t *v584;
  uint64_t v585;
  uint64_t v586;
  uint64_t v587;
  uint8_t *v588;
  os_log_t v589;
  uint64_t v590;
  uint64_t v591;
  uint64_t v592;
  uint64_t v593;
  os_log_t v594;
  os_log_t v595;
  uint64_t v596;
  NSObject *v597;
  uint64_t v598;
  uint64_t v599;
  uint64_t v600;
  uint64_t v601;
  uint64_t v602;
  uint64_t v603;
  NSObject *v604;
  uint64_t v605;
  char *v606;
  uint64_t v607;
  uint64_t v608;
  id v609;
  uint64_t v610;
  uint64_t v611;
  uint64_t v612;
  uint64_t (*v613)(uint64_t, uint64_t, uint64_t);
  NSObject *v614;
  uint64_t v615;
  uint64_t v616;
  _QWORD v617[60];
  _QWORD v618[6];
  unsigned int v619;
  unsigned __int8 v620;
  _OWORD v621[2];
  _BYTE v622[21];
  __int128 v623;
  __int128 v624;
  _OWORD v625[3];

  v605 = a6;
  v609 = 0;
  v11 = type metadata accessor for MailboxTaskLogger(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v11);
  v14 = sub_1A594A764();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v567 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v606 = (char *)&v567 - v18;
  MEMORY[0x1E0C80A78](v19);
  MEMORY[0x1E0C80A78](v20);
  MEMORY[0x1E0C80A78](v21);
  MEMORY[0x1E0C80A78](v22);
  MEMORY[0x1E0C80A78]((char *)&v567 - v23);
  v31 = *(_QWORD *)(a5 + 16);
  v611 = v25;
  v612 = v26;
  v610 = v12;
  if (!v31)
  {
    v42 = *(_QWORD *)(a1 + 200);
    v43 = *(_BYTE *)(a1 + 208);
    v44 = v25;
    v45 = a4;
    v46 = v26;
    v607 = sub_1A55391A8(v42, v43);
    sub_1A552A19C(v42, v43);
    *(_QWORD *)(a1 + 200) = MEMORY[0x1E0DEE9D8];
    *(_BYTE *)(a1 + 208) = 0;
    (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v16, v45, v46);
    sub_1A55BAEB8(v45, (uint64_t)&v567 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
    v47 = (*(unsigned __int8 *)(v610 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v610 + 80);
    v48 = swift_allocObject();
    sub_1A5521E68((uint64_t)&v567 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v48 + v47);
    v49 = swift_allocObject();
    *(_QWORD *)(v49 + 16) = sub_1A56118A8;
    *(_QWORD *)(v49 + 24) = v48;
    v50 = swift_allocObject();
    *(_QWORD *)(v50 + 16) = sub_1A56127F0;
    *(_QWORD *)(v50 + 24) = v49;
    swift_retain();
    swift_retain();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    swift_release();
    v51 = swift_allocObject();
    *(_QWORD *)(v51 + 16) = sub_1A56118A8;
    *(_QWORD *)(v51 + 24) = v48;
    v52 = swift_allocObject();
    *(_QWORD *)(v52 + 16) = sub_1A56127F4;
    *(_QWORD *)(v52 + 24) = v51;
    v53 = swift_allocObject();
    *(_QWORD *)(v53 + 16) = sub_1A56118A8;
    *(_QWORD *)(v53 + 24) = v48;
    v54 = swift_allocObject();
    *(_QWORD *)(v54 + 16) = sub_1A56127F8;
    *(_QWORD *)(v54 + 24) = v53;
    swift_retain_n();
    swift_retain();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    swift_release();
    v55 = swift_allocObject();
    *(_QWORD *)(v55 + 16) = sub_1A56118A8;
    *(_QWORD *)(v55 + 24) = v48;
    v56 = swift_allocObject();
    *(_QWORD *)(v56 + 16) = sub_1A56127FC;
    *(_QWORD *)(v56 + 24) = v55;
    v57 = swift_allocObject();
    *(_QWORD *)(v57 + 16) = v607;
    v587 = (uint64_t)v16;
    v594 = (os_log_t)sub_1A594A74C();
    LODWORD(v593) = sub_1A594C030();
    v58 = swift_allocObject();
    *(_BYTE *)(v58 + 16) = 16;
    v59 = v58;
    v602 = swift_allocObject();
    *(_BYTE *)(v602 + 16) = 4;
    v596 = swift_allocObject();
    *(_BYTE *)(v596 + 16) = 0;
    v597 = swift_allocObject();
    LOBYTE(v597[2].isa) = 1;
    v60 = swift_allocObject();
    *(_QWORD *)(v60 + 16) = sub_1A56127EC;
    *(_QWORD *)(v60 + 24) = v50;
    v61 = swift_allocObject();
    v603 = v61;
    *(_QWORD *)(v61 + 16) = sub_1A5612A70;
    *(_QWORD *)(v61 + 24) = v60;
    v604 = swift_allocObject();
    LOBYTE(v604[2].isa) = 34;
    v606 = (char *)swift_allocObject();
    v606[16] = 8;
    v62 = swift_allocObject();
    *(_QWORD *)(v62 + 16) = sub_1A56127EC;
    *(_QWORD *)(v62 + 24) = v52;
    v63 = swift_allocObject();
    v605 = v63;
    *(_QWORD *)(v63 + 16) = sub_1A56127EC;
    *(_QWORD *)(v63 + 24) = v62;
    v607 = swift_allocObject();
    *(_BYTE *)(v607 + 16) = 16;
    v608 = swift_allocObject();
    *(_BYTE *)(v608 + 16) = 4;
    v610 = swift_allocObject();
    *(_BYTE *)(v610 + 16) = 0;
    v64 = swift_allocObject();
    *(_BYTE *)(v64 + 16) = 2;
    v65 = swift_allocObject();
    *(_QWORD *)(v65 + 16) = sub_1A56127EC;
    *(_QWORD *)(v65 + 24) = v54;
    v66 = swift_allocObject();
    *(_QWORD *)(v66 + 16) = sub_1A5612A74;
    *(_QWORD *)(v66 + 24) = v65;
    v67 = v66;
    v595 = (os_log_t)swift_allocObject();
    LOBYTE(v595[2].isa) = 112;
    v588 = (uint8_t *)swift_allocObject();
    v588[16] = 8;
    v68 = swift_allocObject();
    *(_QWORD *)(v68 + 16) = 0x786F626C69616DLL;
    v69 = swift_allocObject();
    v591 = v69;
    *(_QWORD *)(v69 + 16) = sub_1A5612818;
    *(_QWORD *)(v69 + 24) = v68;
    v592 = swift_allocObject();
    *(_BYTE *)(v592 + 16) = 37;
    v589 = (os_log_t)swift_allocObject();
    LOBYTE(v589[2].isa) = 8;
    v70 = swift_allocObject();
    *(_QWORD *)(v70 + 16) = sub_1A5612800;
    *(_QWORD *)(v70 + 24) = v56;
    v71 = swift_allocObject();
    v590 = v71;
    *(_QWORD *)(v71 + 16) = sub_1A56127EC;
    *(_QWORD *)(v71 + 24) = v70;
    v599 = swift_allocObject();
    *(_BYTE *)(v599 + 16) = 0;
    v601 = swift_allocObject();
    *(_BYTE *)(v601 + 16) = 8;
    v72 = swift_allocObject();
    *(_QWORD *)(v72 + 16) = sub_1A56123C8;
    *(_QWORD *)(v72 + 24) = v57;
    v73 = swift_allocObject();
    v600 = v73;
    *(_QWORD *)(v73 + 16) = sub_1A5612A78;
    *(_QWORD *)(v73 + 24) = v72;
    v598 = v64;
    __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7962F0);
    v74 = swift_allocObject();
    v584 = (uint8_t *)sub_1A5649928(v74, 24);
    *v75 = sub_1A561281C;
    v75[1] = v59;
    v76 = v59;
    v77 = v602;
    v75[2] = sub_1A561281C;
    v75[3] = v77;
    v75[4] = sub_1A5610F5C;
    v75[5] = 0;
    v79 = v596;
    v78 = v597;
    v75[6] = sub_1A561281C;
    v75[7] = v79;
    v75[8] = sub_1A561281C;
    v75[9] = v78;
    v80 = v603;
    v75[10] = sub_1A561280C;
    v75[11] = v80;
    v81 = (uint64_t)v604;
    v75[12] = sub_1A561281C;
    v75[13] = v81;
    v82 = v606;
    v75[14] = sub_1A561281C;
    v75[15] = v82;
    v83 = v605;
    v75[16] = sub_1A5612808;
    v75[17] = v83;
    v84 = v607;
    v75[18] = sub_1A561281C;
    v75[19] = v84;
    v85 = v608;
    v75[20] = sub_1A561281C;
    v75[21] = v85;
    v75[22] = sub_1A5612A6C;
    v75[23] = 0;
    v86 = v610;
    v75[24] = sub_1A561281C;
    v75[25] = v86;
    v75[26] = sub_1A561281C;
    v75[27] = v64;
    v75[28] = sub_1A5612810;
    v75[29] = v67;
    v87 = v67;
    v88 = v595;
    v75[30] = sub_1A561281C;
    v75[31] = v88;
    v90 = v588;
    v89 = v589;
    v75[32] = sub_1A561281C;
    v75[33] = v90;
    v92 = v591;
    v91 = v592;
    v75[34] = sub_1A5612814;
    v75[35] = v92;
    v75[36] = sub_1A561281C;
    v75[37] = v91;
    v75[38] = sub_1A561281C;
    v75[39] = v89;
    v93 = v590;
    v75[40] = sub_1A5612808;
    v75[41] = v93;
    v94 = v599;
    v75[42] = sub_1A561281C;
    v75[43] = v94;
    v95 = v601;
    v75[44] = sub_1A561281C;
    v75[45] = v95;
    v96 = v600;
    v75[46] = sub_1A5612814;
    v75[47] = v96;
    v585 = v76;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v586 = v87;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v97 = v594;
    swift_bridgeObjectRelease();
    if (!os_log_type_enabled(v97, (os_log_type_t)v593))
    {

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v611 + 8))(v587, v612);
      return;
    }
    v98 = (uint8_t *)sub_1A5578EF0();
    v99 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))swift_slowAlloc();
    v618[0] = 0;
    v583 = (uint64_t)v99;
    v584 = v98;
    v613 = v99;
    *(_WORD *)v98 = 2051;
    *(_QWORD *)&v621[0] = v98 + 2;
    *(_QWORD *)&v623 = sub_1A561281C;
    *((_QWORD *)&v623 + 1) = v585;
    v100 = v609;
    sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
    if (!v100)
    {
      swift_release();
      *(_QWORD *)&v623 = sub_1A561281C;
      *((_QWORD *)&v623 + 1) = v602;
      sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
      v101 = v595;
      v102 = v596;
      v103 = v610;
      v104 = v606;
      v105 = (uint64_t)v604;
      swift_release();
      *(_QWORD *)&v623 = sub_1A5610F5C;
      *((_QWORD *)&v623 + 1) = 0;
      sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
      *(_QWORD *)&v623 = sub_1A561281C;
      *((_QWORD *)&v623 + 1) = v102;
      sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
      swift_release();
      *(_QWORD *)&v623 = sub_1A561281C;
      *((_QWORD *)&v623 + 1) = v597;
      sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
      swift_release();
      *(_QWORD *)&v623 = sub_1A561280C;
      *((_QWORD *)&v623 + 1) = v603;
      sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
      swift_release();
      *(_QWORD *)&v623 = sub_1A561281C;
      *((_QWORD *)&v623 + 1) = v105;
      sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
      swift_release();
      *(_QWORD *)&v623 = sub_1A561281C;
      *((_QWORD *)&v623 + 1) = v104;
      sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
      swift_release();
      *(_QWORD *)&v623 = sub_1A5612808;
      *((_QWORD *)&v623 + 1) = v605;
      sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
      swift_release();
      *(_QWORD *)&v623 = sub_1A561281C;
      *((_QWORD *)&v623 + 1) = v607;
      sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
      swift_release();
      *(_QWORD *)&v623 = sub_1A561281C;
      *((_QWORD *)&v623 + 1) = v608;
      sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
      v106 = v588;
      swift_release();
      *(_QWORD *)&v623 = sub_1A5612A6C;
      *((_QWORD *)&v623 + 1) = 0;
      sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
      v107 = v591;
      *(_QWORD *)&v623 = sub_1A561281C;
      *((_QWORD *)&v623 + 1) = v103;
      sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
      swift_release();
      *(_QWORD *)&v623 = sub_1A561281C;
      *((_QWORD *)&v623 + 1) = v598;
      sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
      swift_release();
      *(_QWORD *)&v623 = sub_1A5612810;
      *((_QWORD *)&v623 + 1) = v586;
      sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
      swift_release();
      *(_QWORD *)&v623 = sub_1A561281C;
      *((_QWORD *)&v623 + 1) = v101;
      sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
      swift_release();
      *(_QWORD *)&v623 = sub_1A561281C;
      *((_QWORD *)&v623 + 1) = v106;
      sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
      swift_release();
      *(_QWORD *)&v623 = sub_1A5612814;
      *((_QWORD *)&v623 + 1) = v107;
      sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
      v108 = v601;
      v109 = v592;
      swift_release();
      *(_QWORD *)&v623 = sub_1A561281C;
      *((_QWORD *)&v623 + 1) = v109;
      sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
      swift_release();
      *(_QWORD *)&v623 = sub_1A561281C;
      *((_QWORD *)&v623 + 1) = v589;
      sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
      swift_release();
      *(_QWORD *)&v623 = sub_1A5612808;
      *((_QWORD *)&v623 + 1) = v590;
      sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
      swift_release();
      *(_QWORD *)&v623 = sub_1A561281C;
      *((_QWORD *)&v623 + 1) = v599;
      sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
      swift_release();
      *(_QWORD *)&v623 = sub_1A561281C;
      *((_QWORD *)&v623 + 1) = v108;
      sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
      swift_release();
      *(_QWORD *)&v623 = sub_1A5612814;
      *((_QWORD *)&v623 + 1) = v600;
      sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
      swift_release();
      _os_log_impl(&dword_1A4F90000, v594, (os_log_type_t)v593, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Local mailbox is empty. Removed %ld pending expunge.", v584, 0x3Du);
      v110 = v583;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v110, -1, -1);
      sub_1A5578F2C();
    }
    goto LABEL_216;
  }
  v597 = ((char *)&v567 - v27);
  v598 = v24;
  v607 = a4;
  v608 = v13;
  v595 = v30;
  v596 = v29;
  LODWORD(v602) = a3;
  v599 = a2;
  v603 = v28;
  v601 = a5;
  v32 = sub_1A560FB04(a5);
  v34 = v33;
  v35 = HIDWORD(v33);
  sub_1A54E3414();
  v36 = MessageIdentifierSet.isEmpty.getter(v32, v34 & 0xFFFFFFFFFFLL);
  v604 = ((char *)&v567 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v600 = a1;
  if (v36)
  {
    v37 = ((char *)&v567 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
    sub_1A54E3458(v32, v34, (char)v35);
    v38 = v611;
    v39 = v612;
    v40 = v601;
    v41 = v605;
  }
  else
  {
    v594 = v35;
    MessageIdentifierSet.ranges.getter(v32, v34 & 0xFFFFFFFFFFLL);
    v112 = v111;
    v114 = v113;
    v115 = HIDWORD(v113);
    v116 = sub_1A55453B8(v111, v113 & 0xFFFFFFFFFFLL);
    sub_1A54E3458(v112, v114, v115);
    v117 = *(void (**)(uint64_t, uint64_t, uint64_t))(v611 + 16);
    if (v116 > 19)
    {
      v193 = v607;
      v117(v598, v607, v612);
      v194 = (uint64_t)v604;
      sub_1A55BAEB8(v193, (uint64_t)v604);
      v195 = (*(unsigned __int8 *)(v610 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v610 + 80);
      v196 = swift_allocObject();
      sub_1A5521E68(v194, v196 + v195);
      v197 = swift_allocObject();
      *(_QWORD *)(v197 + 16) = sub_1A56118A8;
      *(_QWORD *)(v197 + 24) = v196;
      v198 = swift_allocObject();
      *(_QWORD *)(v198 + 16) = sub_1A56118AC;
      *(_QWORD *)(v198 + 24) = v197;
      swift_retain();
      swift_retain();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      swift_release();
      v199 = swift_allocObject();
      *(_QWORD *)(v199 + 16) = sub_1A56118A8;
      *(_QWORD *)(v199 + 24) = v196;
      v200 = swift_allocObject();
      *(_QWORD *)(v200 + 16) = sub_1A56118BC;
      *(_QWORD *)(v200 + 24) = v199;
      v201 = swift_allocObject();
      *(_QWORD *)(v201 + 16) = sub_1A56118A8;
      *(_QWORD *)(v201 + 24) = v196;
      v202 = swift_allocObject();
      *(_QWORD *)(v202 + 16) = sub_1A56118C4;
      *(_QWORD *)(v202 + 24) = v201;
      swift_retain_n();
      swift_retain();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      swift_release();
      v203 = swift_allocObject();
      *(_QWORD *)(v203 + 16) = sub_1A56118A8;
      *(_QWORD *)(v203 + 24) = v196;
      v204 = swift_allocObject();
      v584 = (uint8_t *)v204;
      *(_QWORD *)(v204 + 16) = sub_1A56118CC;
      *(_QWORD *)(v204 + 24) = v203;
      v205 = swift_allocObject();
      *(_QWORD *)(v205 + 16) = v32;
      *(_DWORD *)(v205 + 24) = v34;
      v206 = (char)v594;
      *(_BYTE *)(v205 + 28) = (_BYTE)v594;
      v207 = swift_allocObject();
      *(_QWORD *)(v207 + 16) = v32;
      *(_DWORD *)(v207 + 24) = v34;
      *(_BYTE *)(v207 + 28) = v206;
      v208 = swift_allocObject();
      v585 = v208;
      *(_QWORD *)(v208 + 16) = sub_1A56118E8;
      *(_QWORD *)(v208 + 24) = v207;
      sub_1A54E4334(v32, v34, v206);
      v576 = (os_log_t)sub_1A594A74C();
      LODWORD(v575) = sub_1A594C018();
      v577 = (os_log_t)swift_allocObject();
      LOBYTE(v577[2].isa) = 16;
      v209 = swift_allocObject();
      *(_BYTE *)(v209 + 16) = 4;
      v578 = swift_allocObject();
      *(_BYTE *)(v578 + 16) = 0;
      v579 = (os_log_t)swift_allocObject();
      LOBYTE(v579[2].isa) = 1;
      v210 = swift_allocObject();
      *(_QWORD *)(v210 + 16) = sub_1A56118B4;
      *(_QWORD *)(v210 + 24) = v198;
      v211 = swift_allocObject();
      v586 = v211;
      *(_QWORD *)(v211 + 16) = sub_1A5611964;
      *(_QWORD *)(v211 + 24) = v210;
      v587 = swift_allocObject();
      *(_BYTE *)(v587 + 16) = 34;
      v589 = (os_log_t)swift_allocObject();
      LOBYTE(v589[2].isa) = 8;
      v212 = swift_allocObject();
      *(_QWORD *)(v212 + 16) = sub_1A56118B4;
      *(_QWORD *)(v212 + 24) = v200;
      v213 = swift_allocObject();
      v588 = (uint8_t *)v213;
      *(_QWORD *)(v213 + 16) = sub_1A56118B4;
      *(_QWORD *)(v213 + 24) = v212;
      v590 = swift_allocObject();
      *(_BYTE *)(v590 + 16) = 16;
      v591 = swift_allocObject();
      *(_BYTE *)(v591 + 16) = 4;
      v592 = swift_allocObject();
      *(_BYTE *)(v592 + 16) = 0;
      v594 = (os_log_t)swift_allocObject();
      LOBYTE(v594[2].isa) = 2;
      v214 = swift_allocObject();
      *(_QWORD *)(v214 + 16) = sub_1A56118B4;
      *(_QWORD *)(v214 + 24) = v202;
      v215 = swift_allocObject();
      v593 = v215;
      *(_QWORD *)(v215 + 16) = sub_1A56119DC;
      *(_QWORD *)(v215 + 24) = v214;
      v597 = swift_allocObject();
      LOBYTE(v597[2].isa) = 112;
      v216 = swift_allocObject();
      *(_BYTE *)(v216 + 16) = 8;
      v217 = v216;
      v218 = swift_allocObject();
      *(_QWORD *)(v218 + 16) = 0x786F626C69616DLL;
      v219 = swift_allocObject();
      *(_QWORD *)(v219 + 16) = sub_1A5134394;
      *(_QWORD *)(v219 + 24) = v218;
      v580 = swift_allocObject();
      *(_BYTE *)(v580 + 16) = 37;
      v574 = swift_allocObject();
      *(_BYTE *)(v574 + 16) = 8;
      v220 = swift_allocObject();
      v221 = v584;
      *(_QWORD *)(v220 + 16) = sub_1A56118D4;
      *(_QWORD *)(v220 + 24) = v221;
      v222 = swift_allocObject();
      *(_QWORD *)(v222 + 16) = sub_1A56127EC;
      *(_QWORD *)(v222 + 24) = v220;
      v573 = swift_allocObject();
      *(_BYTE *)(v573 + 16) = 0;
      v583 = swift_allocObject();
      *(_BYTE *)(v583 + 16) = 8;
      v223 = swift_allocObject();
      *(_QWORD *)(v223 + 16) = sub_1A56118E0;
      *(_QWORD *)(v223 + 24) = v205;
      v224 = swift_allocObject();
      v582 = v224;
      *(_QWORD *)(v224 + 16) = sub_1A5611A64;
      *(_QWORD *)(v224 + 24) = v223;
      v584 = (uint8_t *)swift_allocObject();
      v584[16] = 34;
      v581 = swift_allocObject();
      LOBYTE(v581[2].isa) = 8;
      v225 = swift_allocObject();
      v226 = v585;
      *(_QWORD *)(v225 + 16) = sub_1A5611914;
      *(_QWORD *)(v225 + 24) = v226;
      v227 = swift_allocObject();
      v585 = v227;
      *(_QWORD *)(v227 + 16) = sub_1A56127EC;
      *(_QWORD *)(v227 + 24) = v225;
      __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7962F0);
      inited = swift_initStackObject();
      v568 = (uint8_t *)sub_1A5649928(inited, 27);
      v229 = v577;
      *v230 = sub_1A561192C;
      v230[1] = v229;
      v230[2] = sub_1A561281C;
      v230[3] = v209;
      v230[4] = sub_1A5610F5C;
      v230[5] = 0;
      v231 = v578;
      v232 = v579;
      v230[6] = sub_1A561281C;
      v230[7] = v231;
      v230[8] = sub_1A561281C;
      v230[9] = v232;
      v233 = v586;
      v230[10] = sub_1A561196C;
      v230[11] = v233;
      v234 = v587;
      v230[12] = sub_1A561281C;
      v230[13] = v234;
      v235 = v589;
      v230[14] = sub_1A561281C;
      v230[15] = v235;
      v236 = v588;
      v230[16] = sub_1A5611994;
      v230[17] = v236;
      v237 = v590;
      v230[18] = sub_1A561281C;
      v230[19] = v237;
      v238 = v591;
      v230[20] = sub_1A561281C;
      v230[21] = v238;
      v230[22] = sub_1A5612A6C;
      v230[23] = 0;
      v239 = v592;
      v230[24] = sub_1A561281C;
      v230[25] = v239;
      v240 = v594;
      v230[26] = sub_1A561281C;
      v230[27] = v240;
      v241 = v593;
      v230[28] = sub_1A56119E4;
      v230[29] = v241;
      v242 = v597;
      v230[30] = sub_1A561281C;
      v230[31] = v242;
      v230[32] = sub_1A561281C;
      v230[33] = v217;
      v243 = v217;
      v230[34] = sub_1A5611A1C;
      v230[35] = v219;
      v244 = v580;
      v230[36] = sub_1A561281C;
      v230[37] = v244;
      v246 = v573;
      v245 = v574;
      v230[38] = sub_1A561281C;
      v230[39] = v245;
      v230[40] = sub_1A5612808;
      v230[41] = v222;
      v230[42] = sub_1A561281C;
      v230[43] = v246;
      v247 = v583;
      v230[44] = sub_1A561281C;
      v230[45] = v247;
      v248 = v582;
      v230[46] = sub_1A5611A1C;
      v230[47] = v248;
      v249 = v584;
      v230[48] = sub_1A561281C;
      v230[49] = v249;
      v250 = v581;
      v230[50] = sub_1A561281C;
      v230[51] = v250;
      v251 = v585;
      v230[52] = sub_1A5612808;
      v230[53] = v251;
      swift_retain();
      v569 = v209;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v571 = v243;
      swift_retain();
      v570 = v219;
      swift_retain();
      swift_retain();
      swift_retain();
      v572 = v222;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v252 = v576;
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v252, (os_log_type_t)v575))
      {
        v253 = (uint8_t *)sub_1A5578EF0();
        v254 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))swift_slowAlloc();
        v618[0] = 0;
        v613 = v254;
        *(_WORD *)v253 = 2307;
        *(_QWORD *)&v621[0] = v253 + 2;
        *(_QWORD *)&v623 = sub_1A561192C;
        *((_QWORD *)&v623 + 1) = v577;
        v100 = v609;
        sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
        if (!v100)
        {
          v567 = v254;
          v568 = v253;
          swift_release();
          *(_QWORD *)&v623 = sub_1A561281C;
          *((_QWORD *)&v623 + 1) = v569;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          v255 = v589;
          v256 = v579;
          swift_release();
          *(_QWORD *)&v623 = sub_1A5610F5C;
          *((_QWORD *)&v623 + 1) = 0;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          *(_QWORD *)&v623 = sub_1A561281C;
          *((_QWORD *)&v623 + 1) = v578;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          swift_release();
          *(_QWORD *)&v623 = sub_1A561281C;
          *((_QWORD *)&v623 + 1) = v256;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          v257 = v592;
          swift_release();
          *(_QWORD *)&v623 = sub_1A561196C;
          *((_QWORD *)&v623 + 1) = v586;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          v258 = v591;
          swift_release();
          *(_QWORD *)&v623 = sub_1A561281C;
          *((_QWORD *)&v623 + 1) = v587;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          v259 = v580;
          swift_release();
          *(_QWORD *)&v623 = sub_1A561281C;
          *((_QWORD *)&v623 + 1) = v255;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          swift_release();
          *(_QWORD *)&v623 = sub_1A5611994;
          *((_QWORD *)&v623 + 1) = v588;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          swift_release();
          *(_QWORD *)&v623 = sub_1A561281C;
          *((_QWORD *)&v623 + 1) = v590;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          swift_release();
          *(_QWORD *)&v623 = sub_1A561281C;
          *((_QWORD *)&v623 + 1) = v258;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          swift_release();
          *(_QWORD *)&v623 = sub_1A5612A6C;
          *((_QWORD *)&v623 + 1) = 0;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          *(_QWORD *)&v623 = sub_1A561281C;
          *((_QWORD *)&v623 + 1) = v257;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          swift_release();
          *(_QWORD *)&v623 = sub_1A561281C;
          *((_QWORD *)&v623 + 1) = v594;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          swift_release();
          *(_QWORD *)&v623 = sub_1A56119E4;
          *((_QWORD *)&v623 + 1) = v593;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          swift_release();
          *(_QWORD *)&v623 = sub_1A561281C;
          *((_QWORD *)&v623 + 1) = v597;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          swift_release();
          *(_QWORD *)&v623 = sub_1A561281C;
          *((_QWORD *)&v623 + 1) = v571;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          swift_release();
          *(_QWORD *)&v623 = sub_1A5611A1C;
          *((_QWORD *)&v623 + 1) = v570;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          swift_release();
          *(_QWORD *)&v623 = sub_1A561281C;
          *((_QWORD *)&v623 + 1) = v259;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          swift_release();
          *(_QWORD *)&v623 = sub_1A561281C;
          *((_QWORD *)&v623 + 1) = v574;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          swift_release();
          *(_QWORD *)&v623 = sub_1A5612808;
          *((_QWORD *)&v623 + 1) = v572;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          swift_release();
          *(_QWORD *)&v623 = sub_1A561281C;
          *((_QWORD *)&v623 + 1) = v573;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          swift_release();
          *(_QWORD *)&v623 = sub_1A561281C;
          *((_QWORD *)&v623 + 1) = v583;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          swift_release();
          *(_QWORD *)&v623 = sub_1A5611A1C;
          *((_QWORD *)&v623 + 1) = v582;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          swift_release();
          *(_QWORD *)&v623 = sub_1A561281C;
          *((_QWORD *)&v623 + 1) = v584;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          swift_release();
          *(_QWORD *)&v623 = sub_1A561281C;
          *((_QWORD *)&v623 + 1) = v581;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          swift_release();
          *(_QWORD *)&v623 = sub_1A5612808;
          *((_QWORD *)&v623 + 1) = v585;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          v609 = 0;
          swift_release();
          _os_log_impl(&dword_1A4F90000, v576, (os_log_type_t)v575, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Removed %ld UIDs: ... %{public}s", v568, 0x47u);
          v260 = v567;
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v260, -1, -1);
          sub_1A5578F2C();
        }
        goto LABEL_216;
      }

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v38 = v611;
      v261 = *(void (**)(NSObject *, uint64_t))(v611 + 8);
      v262 = v598;
    }
    else
    {
      v118 = v607;
      v117((uint64_t)v597, v607, v612);
      v119 = (uint64_t)v604;
      sub_1A55BAEB8(v118, (uint64_t)v604);
      v120 = (*(unsigned __int8 *)(v610 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v610 + 80);
      v121 = swift_allocObject();
      sub_1A5521E68(v119, v121 + v120);
      v122 = swift_allocObject();
      *(_QWORD *)(v122 + 16) = sub_1A56118A8;
      *(_QWORD *)(v122 + 24) = v121;
      v123 = swift_allocObject();
      *(_QWORD *)(v123 + 16) = sub_1A56127F0;
      *(_QWORD *)(v123 + 24) = v122;
      swift_retain();
      swift_retain();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      swift_release();
      v124 = swift_allocObject();
      *(_QWORD *)(v124 + 16) = sub_1A56118A8;
      *(_QWORD *)(v124 + 24) = v121;
      v125 = swift_allocObject();
      *(_QWORD *)(v125 + 16) = sub_1A56127F4;
      *(_QWORD *)(v125 + 24) = v124;
      v126 = swift_allocObject();
      *(_QWORD *)(v126 + 16) = sub_1A56118A8;
      *(_QWORD *)(v126 + 24) = v121;
      v127 = swift_allocObject();
      *(_QWORD *)(v127 + 16) = sub_1A56127F8;
      *(_QWORD *)(v127 + 24) = v126;
      swift_retain_n();
      swift_retain();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      swift_release();
      v128 = swift_allocObject();
      *(_QWORD *)(v128 + 16) = sub_1A56118A8;
      *(_QWORD *)(v128 + 24) = v121;
      v129 = swift_allocObject();
      v586 = v129;
      *(_QWORD *)(v129 + 16) = sub_1A56127FC;
      *(_QWORD *)(v129 + 24) = v128;
      v130 = swift_allocObject();
      *(_QWORD *)(v130 + 16) = v32;
      *(_DWORD *)(v130 + 24) = v34;
      v131 = (char)v594;
      *(_BYTE *)(v130 + 28) = (_BYTE)v594;
      v132 = swift_allocObject();
      *(_QWORD *)(v132 + 16) = v32;
      *(_DWORD *)(v132 + 24) = v34;
      *(_BYTE *)(v132 + 28) = v131;
      v133 = swift_allocObject();
      v584 = (uint8_t *)v133;
      *(_QWORD *)(v133 + 16) = sub_1A5612194;
      *(_QWORD *)(v133 + 24) = v132;
      sub_1A54E4334(v32, v34, v131);
      v577 = (os_log_t)sub_1A594A74C();
      LODWORD(v576) = sub_1A594C018();
      v579 = (os_log_t)swift_allocObject();
      LOBYTE(v579[2].isa) = 16;
      v134 = swift_allocObject();
      *(_BYTE *)(v134 + 16) = 4;
      v135 = swift_allocObject();
      *(_BYTE *)(v135 + 16) = 0;
      v136 = (uint8_t *)v135;
      v581 = swift_allocObject();
      LOBYTE(v581[2].isa) = 1;
      v137 = swift_allocObject();
      *(_QWORD *)(v137 + 16) = sub_1A56127EC;
      *(_QWORD *)(v137 + 24) = v123;
      v138 = swift_allocObject();
      v580 = v138;
      *(_QWORD *)(v138 + 16) = sub_1A5612A70;
      *(_QWORD *)(v138 + 24) = v137;
      v587 = swift_allocObject();
      *(_BYTE *)(v587 + 16) = 34;
      v589 = (os_log_t)swift_allocObject();
      LOBYTE(v589[2].isa) = 8;
      v139 = swift_allocObject();
      *(_QWORD *)(v139 + 16) = sub_1A56127EC;
      *(_QWORD *)(v139 + 24) = v125;
      v140 = swift_allocObject();
      v588 = (uint8_t *)v140;
      *(_QWORD *)(v140 + 16) = sub_1A56127EC;
      *(_QWORD *)(v140 + 24) = v139;
      v590 = swift_allocObject();
      *(_BYTE *)(v590 + 16) = 16;
      v591 = swift_allocObject();
      *(_BYTE *)(v591 + 16) = 4;
      v592 = swift_allocObject();
      *(_BYTE *)(v592 + 16) = 0;
      v594 = (os_log_t)swift_allocObject();
      LOBYTE(v594[2].isa) = 2;
      v141 = swift_allocObject();
      *(_QWORD *)(v141 + 16) = sub_1A56127EC;
      *(_QWORD *)(v141 + 24) = v127;
      v142 = swift_allocObject();
      v593 = v142;
      *(_QWORD *)(v142 + 16) = sub_1A5612A74;
      *(_QWORD *)(v142 + 24) = v141;
      v598 = swift_allocObject();
      *(_BYTE *)(v598 + 16) = 112;
      v143 = swift_allocObject();
      *(_BYTE *)(v143 + 16) = 8;
      v144 = swift_allocObject();
      *(_QWORD *)(v144 + 16) = 0x786F626C69616DLL;
      v145 = swift_allocObject();
      *(_QWORD *)(v145 + 16) = sub_1A5612818;
      *(_QWORD *)(v145 + 24) = v144;
      v146 = v145;
      v147 = swift_allocObject();
      *(_BYTE *)(v147 + 16) = 37;
      v148 = v147;
      v572 = swift_allocObject();
      *(_BYTE *)(v572 + 16) = 8;
      v149 = swift_allocObject();
      v150 = v586;
      *(_QWORD *)(v149 + 16) = sub_1A5612800;
      *(_QWORD *)(v149 + 24) = v150;
      v151 = swift_allocObject();
      v574 = v151;
      *(_QWORD *)(v151 + 16) = sub_1A56127EC;
      *(_QWORD *)(v151 + 24) = v149;
      v573 = swift_allocObject();
      *(_BYTE *)(v573 + 16) = 0;
      v575 = (uint8_t *)swift_allocObject();
      v575[16] = 8;
      v152 = swift_allocObject();
      *(_QWORD *)(v152 + 16) = sub_1A56118E0;
      *(_QWORD *)(v152 + 24) = v130;
      v153 = swift_allocObject();
      v582 = v143;
      v583 = v153;
      *(_QWORD *)(v153 + 16) = sub_1A5612A78;
      *(_QWORD *)(v153 + 24) = v152;
      v154 = v134;
      v578 = v134;
      v155 = v143;
      v585 = swift_allocObject();
      *(_BYTE *)(v585 + 16) = 34;
      v586 = swift_allocObject();
      *(_BYTE *)(v586 + 16) = 8;
      v156 = swift_allocObject();
      v157 = v584;
      *(_QWORD *)(v156 + 16) = sub_1A5612804;
      *(_QWORD *)(v156 + 24) = v157;
      v158 = swift_allocObject();
      v584 = (uint8_t *)v158;
      *(_QWORD *)(v158 + 16) = sub_1A56127EC;
      *(_QWORD *)(v158 + 24) = v156;
      __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7962F0);
      v159 = swift_allocObject();
      v568 = (uint8_t *)sub_1A5649928(v159, 27);
      v160 = v579;
      *v161 = sub_1A561281C;
      v161[1] = v160;
      v161[2] = sub_1A561281C;
      v161[3] = v154;
      v161[4] = sub_1A5610F5C;
      v161[5] = 0;
      v161[6] = sub_1A561281C;
      v161[7] = v136;
      v162 = v136;
      v163 = v580;
      v164 = v581;
      v161[8] = sub_1A561281C;
      v161[9] = v164;
      v161[10] = sub_1A561280C;
      v161[11] = v163;
      v165 = v587;
      v161[12] = sub_1A561281C;
      v161[13] = v165;
      v166 = v589;
      v161[14] = sub_1A561281C;
      v161[15] = v166;
      v167 = v588;
      v161[16] = sub_1A5612808;
      v161[17] = v167;
      v168 = v590;
      v161[18] = sub_1A561281C;
      v161[19] = v168;
      v169 = v591;
      v161[20] = sub_1A561281C;
      v161[21] = v169;
      v161[22] = sub_1A5612A6C;
      v161[23] = 0;
      v170 = v592;
      v161[24] = sub_1A561281C;
      v161[25] = v170;
      v171 = v594;
      v161[26] = sub_1A561281C;
      v161[27] = v171;
      v172 = v593;
      v161[28] = sub_1A5612810;
      v161[29] = v172;
      v173 = v598;
      v161[30] = sub_1A561281C;
      v161[31] = v173;
      v161[32] = sub_1A561281C;
      v161[33] = v155;
      v161[34] = sub_1A5612814;
      v161[35] = v146;
      v174 = v146;
      v161[36] = sub_1A561281C;
      v161[37] = v148;
      v175 = v148;
      v176 = v572;
      v177 = v573;
      v161[38] = sub_1A561281C;
      v161[39] = v176;
      v178 = v574;
      v179 = v575;
      v161[40] = sub_1A5612808;
      v161[41] = v178;
      v161[42] = sub_1A561281C;
      v161[43] = v177;
      v161[44] = sub_1A561281C;
      v161[45] = v179;
      v180 = v583;
      v161[46] = sub_1A5612814;
      v161[47] = v180;
      v181 = v585;
      v161[48] = sub_1A561281C;
      v161[49] = v181;
      v182 = v586;
      v161[50] = sub_1A561281C;
      v161[51] = v182;
      v183 = v584;
      v161[52] = sub_1A5612808;
      v161[53] = v183;
      swift_retain();
      swift_retain();
      v570 = v162;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v571 = v174;
      swift_retain();
      v569 = v175;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v184 = v577;
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v184, (os_log_type_t)v576))
      {
        v185 = (uint8_t *)sub_1A5578EF0();
        v186 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))swift_slowAlloc();
        v618[0] = 0;
        v613 = v186;
        *(_WORD *)v185 = 2307;
        *(_QWORD *)&v621[0] = v185 + 2;
        *(_QWORD *)&v623 = sub_1A561281C;
        *((_QWORD *)&v623 + 1) = v579;
        v100 = v609;
        sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
        if (!v100)
        {
          v567 = v186;
          v568 = v185;
          swift_release();
          *(_QWORD *)&v623 = sub_1A561281C;
          *((_QWORD *)&v623 + 1) = v578;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          v187 = v594;
          v188 = v591;
          swift_release();
          *(_QWORD *)&v623 = sub_1A5610F5C;
          *((_QWORD *)&v623 + 1) = 0;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          v189 = v590;
          v190 = v581;
          *(_QWORD *)&v623 = sub_1A561281C;
          *((_QWORD *)&v623 + 1) = v570;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          swift_release();
          *(_QWORD *)&v623 = sub_1A561281C;
          *((_QWORD *)&v623 + 1) = v190;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          swift_release();
          *(_QWORD *)&v623 = sub_1A561280C;
          *((_QWORD *)&v623 + 1) = v580;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          swift_release();
          *(_QWORD *)&v623 = sub_1A561281C;
          *((_QWORD *)&v623 + 1) = v587;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          swift_release();
          *(_QWORD *)&v623 = sub_1A561281C;
          *((_QWORD *)&v623 + 1) = v589;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          swift_release();
          *(_QWORD *)&v623 = sub_1A5612808;
          *((_QWORD *)&v623 + 1) = v588;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          swift_release();
          *(_QWORD *)&v623 = sub_1A561281C;
          *((_QWORD *)&v623 + 1) = v189;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          swift_release();
          *(_QWORD *)&v623 = sub_1A561281C;
          *((_QWORD *)&v623 + 1) = v188;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          swift_release();
          *(_QWORD *)&v623 = sub_1A5612A6C;
          *((_QWORD *)&v623 + 1) = 0;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          *(_QWORD *)&v623 = sub_1A561281C;
          *((_QWORD *)&v623 + 1) = v592;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          swift_release();
          *(_QWORD *)&v623 = sub_1A561281C;
          *((_QWORD *)&v623 + 1) = v187;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          swift_release();
          *(_QWORD *)&v623 = sub_1A5612810;
          *((_QWORD *)&v623 + 1) = v593;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          swift_release();
          *(_QWORD *)&v623 = sub_1A561281C;
          *((_QWORD *)&v623 + 1) = v598;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          swift_release();
          *(_QWORD *)&v623 = sub_1A561281C;
          *((_QWORD *)&v623 + 1) = v582;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          swift_release();
          *(_QWORD *)&v623 = sub_1A5612814;
          *((_QWORD *)&v623 + 1) = v571;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          swift_release();
          *(_QWORD *)&v623 = sub_1A561281C;
          *((_QWORD *)&v623 + 1) = v569;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          swift_release();
          *(_QWORD *)&v623 = sub_1A561281C;
          *((_QWORD *)&v623 + 1) = v572;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          v191 = v585;
          swift_release();
          *(_QWORD *)&v623 = sub_1A5612808;
          *((_QWORD *)&v623 + 1) = v574;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          swift_release();
          *(_QWORD *)&v623 = sub_1A561281C;
          *((_QWORD *)&v623 + 1) = v573;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          swift_release();
          *(_QWORD *)&v623 = sub_1A561281C;
          *((_QWORD *)&v623 + 1) = v575;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          swift_release();
          *(_QWORD *)&v623 = sub_1A5612814;
          *((_QWORD *)&v623 + 1) = v583;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          swift_release();
          *(_QWORD *)&v623 = sub_1A561281C;
          *((_QWORD *)&v623 + 1) = v191;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          swift_release();
          *(_QWORD *)&v623 = sub_1A561281C;
          *((_QWORD *)&v623 + 1) = v586;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          swift_release();
          *(_QWORD *)&v623 = sub_1A5612808;
          *((_QWORD *)&v623 + 1) = v584;
          sub_1A5578EF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v623, (uint64_t)v621, (uint64_t)v618, (uint64_t)&v613);
          v609 = 0;
          swift_release();
          _os_log_impl(&dword_1A4F90000, v577, (os_log_type_t)v576, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Removed %ld UIDs: %{public}s", v568, 0x47u);
          v192 = v567;
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v192, -1, -1);
          sub_1A5578F2C();
        }
        goto LABEL_216;
      }

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v38 = v611;
      v261 = *(void (**)(NSObject *, uint64_t))(v611 + 8);
      v262 = v597;
    }
    v39 = v612;
    v261(v262, v612);
    v37 = v604;
    v41 = v605;
    v40 = v601;
  }
  v263 = v41;
  v264 = HIDWORD(v41) & 1;
  v265 = sub_1A560FCB4(v40, v41 | (unint64_t)(v264 << 32));
  if (v265 < 1)
    goto LABEL_95;
  v266 = (objc_class *)v265;
  sub_1A560FEBC(1109, v40, v263 | (v264 << 32), (uint64_t)v618);
  v267 = v618[1];
  v601 = v618[0];
  v605 = v618[5];
  v268 = v620;
  v269 = v619;
  sub_1A55BF29C((uint64_t)v618, (uint64_t)v621);
  if ((~*((_QWORD *)&v621[0] + 1) & 0xFF00000000) != 0)
  {
    v598 = v269 | (v268 << 32);
    v623 = v621[0];
    v624 = v621[1];
    v625[0] = *(_OWORD *)v622;
    *(_QWORD *)((char *)v625 + 13) = *(_QWORD *)&v622[13];
    v343 = *(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16);
    if ((unint64_t)v266 > 0x13)
    {
      v421 = v607;
      v343(v596, v607, v39);
      sub_1A55BAEB8(v421, (uint64_t)v37);
      v422 = (*(unsigned __int8 *)(v610 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v610 + 80);
      v423 = swift_allocObject();
      sub_1A5521E68((uint64_t)v37, v423 + v422);
      v424 = swift_allocObject();
      *(_QWORD *)(v424 + 16) = sub_1A56118A8;
      *(_QWORD *)(v424 + 24) = v423;
      v425 = swift_allocObject();
      *(_QWORD *)(v425 + 16) = sub_1A56127F0;
      *(_QWORD *)(v425 + 24) = v424;
      swift_retain();
      swift_retain();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      swift_release();
      v426 = swift_allocObject();
      *(_QWORD *)(v426 + 16) = sub_1A56118A8;
      *(_QWORD *)(v426 + 24) = v423;
      v427 = swift_allocObject();
      *(_QWORD *)(v427 + 16) = sub_1A56127F4;
      *(_QWORD *)(v427 + 24) = v426;
      v428 = swift_allocObject();
      *(_QWORD *)(v428 + 16) = sub_1A56118A8;
      *(_QWORD *)(v428 + 24) = v423;
      v429 = swift_allocObject();
      v597 = v429;
      *(_QWORD *)(v429 + 16) = sub_1A56127F8;
      *(_QWORD *)(v429 + 24) = v428;
      swift_retain_n();
      swift_retain();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      swift_release();
      v430 = swift_allocObject();
      *(_QWORD *)(v430 + 16) = sub_1A56118A8;
      *(_QWORD *)(v430 + 24) = v423;
      v431 = swift_allocObject();
      v584 = (uint8_t *)v431;
      *(_QWORD *)(v431 + 16) = sub_1A56127FC;
      *(_QWORD *)(v431 + 24) = v430;
      v585 = swift_allocObject();
      *(_QWORD *)(v585 + 16) = v266;
      v432 = swift_allocObject();
      v587 = v432;
      v433 = v624;
      *(_OWORD *)(v432 + 16) = v623;
      *(_OWORD *)(v432 + 32) = v433;
      *(_OWORD *)(v432 + 48) = v625[0];
      *(_QWORD *)(v432 + 61) = *(_QWORD *)((char *)v625 + 13);
      v434 = swift_allocObject();
      v435 = v624;
      *(_OWORD *)(v434 + 16) = v623;
      *(_OWORD *)(v434 + 32) = v435;
      *(_OWORD *)(v434 + 48) = v625[0];
      *(_QWORD *)(v434 + 61) = *(_QWORD *)((char *)v625 + 13);
      v436 = swift_allocObject();
      v586 = v436;
      *(_QWORD *)(v436 + 16) = sub_1A56118E8;
      *(_QWORD *)(v436 + 24) = v434;
      v437 = v598;
      v438 = v601;
      sub_1A54E4334(v601, v267, SBYTE4(v267));
      v439 = v605;
      sub_1A54E4334(v605, v437, SBYTE4(v437));
      sub_1A54E4334(v438, v267, SBYTE4(v267));
      sub_1A54E4334(v439, v437, SBYTE4(v437));
      v579 = (os_log_t)sub_1A594A74C();
      LODWORD(v578) = sub_1A594C018();
      v440 = swift_allocObject();
      *(_BYTE *)(v440 + 16) = 16;
      v441 = (uint8_t *)v440;
      v588 = (uint8_t *)swift_allocObject();
      v588[16] = 4;
      v442 = swift_allocObject();
      *(_BYTE *)(v442 + 16) = 0;
      v443 = v442;
      v444 = swift_allocObject();
      *(_BYTE *)(v444 + 16) = 1;
      v445 = swift_allocObject();
      *(_QWORD *)(v445 + 16) = sub_1A56127EC;
      *(_QWORD *)(v445 + 24) = v425;
      v446 = swift_allocObject();
      v589 = v446;
      v446[2].isa = (Class)sub_1A5612A70;
      v446[3].isa = (Class)v445;
      v590 = swift_allocObject();
      *(_BYTE *)(v590 + 16) = 34;
      v592 = swift_allocObject();
      *(_BYTE *)(v592 + 16) = 8;
      v447 = swift_allocObject();
      *(_QWORD *)(v447 + 16) = sub_1A56127EC;
      *(_QWORD *)(v447 + 24) = v427;
      v448 = swift_allocObject();
      v591 = v448;
      *(_QWORD *)(v448 + 16) = sub_1A56127EC;
      *(_QWORD *)(v448 + 24) = v447;
      v593 = swift_allocObject();
      *(_BYTE *)(v593 + 16) = 16;
      v594 = (os_log_t)swift_allocObject();
      LOBYTE(v594[2].isa) = 4;
      v595 = (os_log_t)swift_allocObject();
      LOBYTE(v595[2].isa) = 0;
      v598 = swift_allocObject();
      *(_BYTE *)(v598 + 16) = 2;
      v449 = swift_allocObject();
      v450 = v597;
      *(_QWORD *)(v449 + 16) = sub_1A56127EC;
      *(_QWORD *)(v449 + 24) = v450;
      v451 = swift_allocObject();
      v597 = v451;
      *(_QWORD *)(v451 + 16) = sub_1A5612A74;
      *(_QWORD *)(v451 + 24) = v449;
      v601 = swift_allocObject();
      *(_BYTE *)(v601 + 16) = 112;
      v605 = swift_allocObject();
      *(_BYTE *)(v605 + 16) = 8;
      v452 = swift_allocObject();
      *(_QWORD *)(v452 + 16) = 0x786F626C69616DLL;
      v453 = swift_allocObject();
      *(_QWORD *)(v453 + 16) = sub_1A5612818;
      *(_QWORD *)(v453 + 24) = v452;
      v454 = swift_allocObject();
      *(_BYTE *)(v454 + 16) = 37;
      v455 = swift_allocObject();
      *(_BYTE *)(v455 + 16) = 8;
      v456 = (uint8_t *)v455;
      v457 = swift_allocObject();
      v458 = v584;
      *(_QWORD *)(v457 + 16) = sub_1A5612800;
      *(_QWORD *)(v457 + 24) = v458;
      v459 = swift_allocObject();
      v580 = v459;
      *(_QWORD *)(v459 + 16) = sub_1A56127EC;
      *(_QWORD *)(v459 + 24) = v457;
      v576 = (os_log_t)swift_allocObject();
      LOBYTE(v576[2].isa) = 0;
      v581 = swift_allocObject();
      LOBYTE(v581[2].isa) = 8;
      v460 = swift_allocObject();
      v461 = v585;
      *(_QWORD *)(v460 + 16) = sub_1A5612820;
      *(_QWORD *)(v460 + 24) = v461;
      v462 = swift_allocObject();
      v577 = v462;
      v462[2].isa = (Class)sub_1A5612A78;
      v462[3].isa = (Class)v460;
      v582 = swift_allocObject();
      *(_BYTE *)(v582 + 16) = 0;
      v584 = (uint8_t *)swift_allocObject();
      v584[16] = 8;
      v463 = swift_allocObject();
      v464 = v587;
      *(_QWORD *)(v463 + 16) = sub_1A5611D2C;
      *(_QWORD *)(v463 + 24) = v464;
      v465 = swift_allocObject();
      v583 = v465;
      *(_QWORD *)(v465 + 16) = sub_1A5612A78;
      *(_QWORD *)(v465 + 24) = v463;
      v585 = swift_allocObject();
      *(_BYTE *)(v585 + 16) = 34;
      v587 = swift_allocObject();
      *(_BYTE *)(v587 + 16) = 8;
      v466 = swift_allocObject();
      v467 = v586;
      *(_QWORD *)(v466 + 16) = sub_1A5612804;
      *(_QWORD *)(v466 + 24) = v467;
      v468 = swift_allocObject();
      v586 = v468;
      *(_QWORD *)(v468 + 16) = sub_1A56127EC;
      *(_QWORD *)(v468 + 24) = v466;
      __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7962F0);
      v469 = swift_allocObject();
      v569 = sub_1A5649928(v469, 30);
      *v470 = sub_1A561281C;
      v470[1] = v441;
      v471 = v441;
      v472 = v588;
      v470[2] = sub_1A561281C;
      v470[3] = v472;
      v470[4] = sub_1A5610F5C;
      v470[5] = 0;
      v470[6] = sub_1A561281C;
      v470[7] = v443;
      v473 = v443;
      v470[8] = sub_1A561281C;
      v470[9] = v444;
      v474 = v589;
      v470[10] = sub_1A561280C;
      v470[11] = v474;
      v475 = v590;
      v470[12] = sub_1A561281C;
      v470[13] = v475;
      v476 = v592;
      v470[14] = sub_1A561281C;
      v470[15] = v476;
      v477 = v591;
      v470[16] = sub_1A5612808;
      v470[17] = v477;
      v478 = v593;
      v470[18] = sub_1A561281C;
      v470[19] = v478;
      v479 = v594;
      v470[20] = sub_1A561281C;
      v470[21] = v479;
      v470[22] = sub_1A5612A6C;
      v470[23] = 0;
      v480 = v595;
      v470[24] = sub_1A561281C;
      v470[25] = v480;
      v481 = v598;
      v470[26] = sub_1A561281C;
      v470[27] = v481;
      v482 = v597;
      v470[28] = sub_1A5612810;
      v470[29] = v482;
      v483 = v601;
      v470[30] = sub_1A561281C;
      v470[31] = v483;
      v484 = v605;
      v470[32] = sub_1A561281C;
      v470[33] = v484;
      v470[34] = sub_1A5612814;
      v470[35] = v453;
      v470[36] = sub_1A561281C;
      v470[37] = v454;
      v485 = v454;
      v470[38] = sub_1A561281C;
      v470[39] = v456;
      v486 = v456;
      v487 = v580;
      v488 = v581;
      v470[40] = sub_1A5612808;
      v470[41] = v487;
      v489 = v576;
      v490 = v577;
      v470[42] = sub_1A561281C;
      v470[43] = v489;
      v470[44] = sub_1A561281C;
      v470[45] = v488;
      v470[46] = sub_1A5612814;
      v470[47] = v490;
      v491 = v582;
      v470[48] = sub_1A561281C;
      v470[49] = v491;
      v492 = v584;
      v470[50] = sub_1A561281C;
      v470[51] = v492;
      v493 = v583;
      v470[52] = sub_1A5612814;
      v470[53] = v493;
      v494 = v585;
      v470[54] = sub_1A561281C;
      v470[55] = v494;
      v495 = v587;
      v470[56] = sub_1A561281C;
      v470[57] = v495;
      v496 = v586;
      v470[58] = sub_1A5612808;
      v470[59] = v496;
      v570 = v471;
      swift_retain();
      swift_retain();
      v571 = v473;
      swift_retain();
      v572 = v444;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v573 = v453;
      swift_retain();
      v574 = v485;
      swift_retain();
      v575 = v486;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v497 = v579;
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v497, (os_log_type_t)v578))
      {
        v498 = (uint8_t *)sub_1A5578EF0();
        v499 = swift_slowAlloc();
        v615 = v499;
        v616 = 0;
        *(_WORD *)v498 = 2563;
        v617[0] = v498 + 2;
        v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
        v614 = v570;
        v100 = v609;
        sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
        if (!v100)
        {
          v569 = v499;
          swift_release();
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
          v614 = v588;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          v500 = v595;
          v501 = v592;
          v502 = v590;
          v503 = v571;
          v570 = v498;
          swift_release();
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5610F5C;
          v614 = 0;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
          v614 = v503;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          swift_release();
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
          v614 = v572;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          swift_release();
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561280C;
          v614 = v589;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          swift_release();
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
          v614 = v502;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          swift_release();
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
          v614 = v501;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          swift_release();
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5612808;
          v614 = v591;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          v504 = v574;
          swift_release();
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
          v614 = v593;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          v505 = v594;
          swift_release();
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
          v614 = v505;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          swift_release();
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5612A6C;
          v614 = 0;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
          v614 = v500;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          swift_release();
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
          v614 = v598;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          swift_release();
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5612810;
          v614 = v597;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          swift_release();
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
          v614 = v601;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          swift_release();
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
          v614 = v605;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          v506 = v585;
          swift_release();
          v613 = sub_1A5612814;
          v614 = v573;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          swift_release();
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
          v614 = v504;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          swift_release();
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
          v614 = v575;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          v507 = v587;
          swift_release();
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5612808;
          v614 = v580;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          swift_release();
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
          v614 = v576;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          swift_release();
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
          v614 = v581;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          swift_release();
          v613 = sub_1A5612814;
          v614 = v577;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          swift_release();
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
          v614 = v582;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          swift_release();
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
          v614 = v584;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          swift_release();
          v613 = sub_1A5612814;
          v614 = v583;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          swift_release();
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
          v614 = v506;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          swift_release();
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
          v614 = v507;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          swift_release();
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5612808;
          v614 = v586;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          v609 = 0;
          swift_release();
          _os_log_impl(&dword_1A4F90000, v579, (os_log_type_t)v578, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Found %ld missing UIDs, adding %ld UIDs as missing: ... %{public}s", (uint8_t *)v570, 0x51u);
          v508 = v569;
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v508, -1, -1);
          sub_1A5578F2C();
        }
        goto LABEL_216;
      }

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v38 = v611;
      v509 = *(void (**)(os_log_t, uint64_t))(v611 + 8);
      v510 = (os_log_t)v596;
    }
    else
    {
      v344 = v607;
      v343((uint64_t)v595, v607, v39);
      sub_1A55BAEB8(v344, (uint64_t)v37);
      v345 = (*(unsigned __int8 *)(v610 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v610 + 80);
      v346 = swift_allocObject();
      sub_1A5521E68((uint64_t)v37, v346 + v345);
      v347 = swift_allocObject();
      *(_QWORD *)(v347 + 16) = sub_1A56118A8;
      *(_QWORD *)(v347 + 24) = v346;
      v348 = swift_allocObject();
      *(_QWORD *)(v348 + 16) = sub_1A56127F0;
      *(_QWORD *)(v348 + 24) = v347;
      swift_retain();
      swift_retain();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      swift_release();
      v349 = swift_allocObject();
      *(_QWORD *)(v349 + 16) = sub_1A56118A8;
      *(_QWORD *)(v349 + 24) = v346;
      v350 = swift_allocObject();
      *(_QWORD *)(v350 + 16) = sub_1A56127F4;
      *(_QWORD *)(v350 + 24) = v349;
      v351 = swift_allocObject();
      *(_QWORD *)(v351 + 16) = sub_1A56118A8;
      *(_QWORD *)(v351 + 24) = v346;
      v352 = swift_allocObject();
      v587 = v352;
      *(_QWORD *)(v352 + 16) = sub_1A56127F8;
      *(_QWORD *)(v352 + 24) = v351;
      swift_retain_n();
      swift_retain();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      swift_release();
      v353 = swift_allocObject();
      *(_QWORD *)(v353 + 16) = sub_1A56118A8;
      *(_QWORD *)(v353 + 24) = v346;
      v354 = swift_allocObject();
      *(_QWORD *)(v354 + 16) = sub_1A56127FC;
      *(_QWORD *)(v354 + 24) = v353;
      v589 = (os_log_t)swift_allocObject();
      v589[2].isa = v266;
      v355 = swift_allocObject();
      v356 = v624;
      *(_OWORD *)(v355 + 16) = v623;
      *(_OWORD *)(v355 + 32) = v356;
      *(_OWORD *)(v355 + 48) = v625[0];
      *(_QWORD *)(v355 + 61) = *(_QWORD *)((char *)v625 + 13);
      v357 = swift_allocObject();
      v588 = (uint8_t *)v357;
      *(_QWORD *)(v357 + 16) = sub_1A5611FA8;
      *(_QWORD *)(v357 + 24) = v355;
      v358 = v598;
      sub_1A54E4334(v601, v267, SBYTE4(v267));
      sub_1A54E4334(v605, v358, SBYTE4(v358));
      v581 = sub_1A594A74C();
      LODWORD(v580) = sub_1A594C018();
      v359 = swift_allocObject();
      *(_BYTE *)(v359 + 16) = 16;
      v360 = (uint8_t *)v359;
      v590 = swift_allocObject();
      *(_BYTE *)(v590 + 16) = 4;
      v582 = swift_allocObject();
      *(_BYTE *)(v582 + 16) = 0;
      v584 = (uint8_t *)swift_allocObject();
      v584[16] = 1;
      v361 = swift_allocObject();
      *(_QWORD *)(v361 + 16) = sub_1A56127EC;
      *(_QWORD *)(v361 + 24) = v348;
      v362 = swift_allocObject();
      v583 = v362;
      *(_QWORD *)(v362 + 16) = sub_1A5612A70;
      *(_QWORD *)(v362 + 24) = v361;
      v591 = swift_allocObject();
      *(_BYTE *)(v591 + 16) = 34;
      v593 = swift_allocObject();
      *(_BYTE *)(v593 + 16) = 8;
      v363 = swift_allocObject();
      *(_QWORD *)(v363 + 16) = sub_1A56127EC;
      *(_QWORD *)(v363 + 24) = v350;
      v364 = swift_allocObject();
      v592 = v364;
      *(_QWORD *)(v364 + 16) = sub_1A56127EC;
      *(_QWORD *)(v364 + 24) = v363;
      v594 = (os_log_t)swift_allocObject();
      LOBYTE(v594[2].isa) = 16;
      v596 = swift_allocObject();
      *(_BYTE *)(v596 + 16) = 4;
      v597 = swift_allocObject();
      LOBYTE(v597[2].isa) = 0;
      v601 = swift_allocObject();
      *(_BYTE *)(v601 + 16) = 2;
      v365 = swift_allocObject();
      v366 = v587;
      *(_QWORD *)(v365 + 16) = sub_1A56127EC;
      *(_QWORD *)(v365 + 24) = v366;
      v367 = swift_allocObject();
      v598 = v367;
      *(_QWORD *)(v367 + 16) = sub_1A5612A74;
      *(_QWORD *)(v367 + 24) = v365;
      v585 = swift_allocObject();
      *(_BYTE *)(v585 + 16) = 112;
      v368 = swift_allocObject();
      *(_BYTE *)(v368 + 16) = 8;
      v369 = v368;
      v370 = swift_allocObject();
      *(_QWORD *)(v370 + 16) = 0x786F626C69616DLL;
      v371 = swift_allocObject();
      v605 = v371;
      *(_QWORD *)(v371 + 16) = sub_1A5612818;
      *(_QWORD *)(v371 + 24) = v370;
      v372 = swift_allocObject();
      *(_BYTE *)(v372 + 16) = 37;
      v373 = v372;
      v374 = swift_allocObject();
      *(_BYTE *)(v374 + 16) = 8;
      v375 = swift_allocObject();
      *(_QWORD *)(v375 + 16) = sub_1A5612800;
      *(_QWORD *)(v375 + 24) = v354;
      v376 = swift_allocObject();
      *(_QWORD *)(v376 + 16) = sub_1A56127EC;
      *(_QWORD *)(v376 + 24) = v375;
      v377 = v376;
      v579 = (os_log_t)swift_allocObject();
      LOBYTE(v579[2].isa) = 0;
      v578 = swift_allocObject();
      *(_BYTE *)(v578 + 16) = 8;
      v378 = swift_allocObject();
      v379 = v589;
      *(_QWORD *)(v378 + 16) = sub_1A5612820;
      *(_QWORD *)(v378 + 24) = v379;
      v380 = swift_allocObject();
      v587 = v380;
      *(_QWORD *)(v380 + 16) = sub_1A5612A78;
      *(_QWORD *)(v380 + 24) = v378;
      v586 = swift_allocObject();
      *(_BYTE *)(v586 + 16) = 34;
      v589 = (os_log_t)swift_allocObject();
      LOBYTE(v589[2].isa) = 8;
      v381 = swift_allocObject();
      v382 = v588;
      *(_QWORD *)(v381 + 16) = sub_1A5612804;
      *(_QWORD *)(v381 + 24) = v382;
      v383 = swift_allocObject();
      v588 = (uint8_t *)v383;
      *(_QWORD *)(v383 + 16) = sub_1A56127EC;
      *(_QWORD *)(v383 + 24) = v381;
      __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7962F0);
      v384 = swift_allocObject();
      v573 = sub_1A5649928(v384, 27);
      *v385 = sub_1A561281C;
      v385[1] = v360;
      v386 = v360;
      v387 = v590;
      v385[2] = sub_1A561281C;
      v385[3] = v387;
      v385[4] = sub_1A5610F5C;
      v385[5] = 0;
      v388 = v582;
      v389 = v583;
      v385[6] = sub_1A561281C;
      v385[7] = v388;
      v390 = v584;
      v385[8] = sub_1A561281C;
      v385[9] = v390;
      v385[10] = sub_1A561280C;
      v385[11] = v389;
      v391 = v591;
      v385[12] = sub_1A561281C;
      v385[13] = v391;
      v392 = v593;
      v385[14] = sub_1A561281C;
      v385[15] = v392;
      v393 = v592;
      v385[16] = sub_1A5612808;
      v385[17] = v393;
      v394 = v594;
      v385[18] = sub_1A561281C;
      v385[19] = v394;
      v395 = v596;
      v385[20] = sub_1A561281C;
      v385[21] = v395;
      v385[22] = sub_1A5612A6C;
      v385[23] = 0;
      v396 = v597;
      v385[24] = sub_1A561281C;
      v385[25] = v396;
      v397 = v601;
      v385[26] = sub_1A561281C;
      v385[27] = v397;
      v398 = v598;
      v385[28] = sub_1A5612810;
      v385[29] = v398;
      v399 = v585;
      v385[30] = sub_1A561281C;
      v385[31] = v399;
      v385[32] = sub_1A561281C;
      v385[33] = v369;
      v400 = v369;
      v401 = v605;
      v385[34] = sub_1A5612814;
      v385[35] = v401;
      v385[36] = sub_1A561281C;
      v385[37] = v373;
      v402 = v373;
      v385[38] = sub_1A561281C;
      v385[39] = v374;
      v385[40] = sub_1A5612808;
      v385[41] = v377;
      v403 = v377;
      v405 = v578;
      v404 = v579;
      v385[42] = sub_1A561281C;
      v385[43] = v404;
      v385[44] = sub_1A561281C;
      v385[45] = v405;
      v406 = v587;
      v385[46] = sub_1A5612814;
      v385[47] = v406;
      v407 = v586;
      v385[48] = sub_1A561281C;
      v385[49] = v407;
      v408 = v589;
      v385[50] = sub_1A561281C;
      v385[51] = v408;
      v409 = v588;
      v385[52] = sub_1A5612808;
      v385[53] = v409;
      v575 = v386;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v576 = v400;
      swift_retain();
      swift_retain();
      v577 = v402;
      swift_retain();
      v574 = v374;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v410 = v581;
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v410, (os_log_type_t)v580))
      {
        v573 = v403;
        v411 = (uint8_t *)sub_1A5578EF0();
        v412 = swift_slowAlloc();
        v615 = v412;
        v616 = 0;
        *(_WORD *)v411 = 2307;
        v617[0] = v411 + 2;
        v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
        v614 = v575;
        v100 = v609;
        sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
        if (!v100)
        {
          v572 = v412;
          swift_release();
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
          v614 = v590;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          v413 = v596;
          v414 = v594;
          v415 = v591;
          v416 = v582;
          v575 = v411;
          swift_release();
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5610F5C;
          v614 = 0;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          v417 = v593;
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
          v614 = v416;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          swift_release();
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
          v614 = v584;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          swift_release();
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561280C;
          v614 = v583;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          swift_release();
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
          v614 = v415;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          swift_release();
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
          v614 = v417;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          swift_release();
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5612808;
          v614 = v592;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          swift_release();
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
          v614 = v414;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          swift_release();
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
          v614 = v413;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          swift_release();
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5612A6C;
          v614 = 0;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
          v614 = v597;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          swift_release();
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
          v614 = v601;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          swift_release();
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5612810;
          v614 = v598;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          swift_release();
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
          v614 = v585;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          swift_release();
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
          v614 = v576;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          swift_release();
          v613 = sub_1A5612814;
          v614 = v605;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          v418 = v577;
          swift_release();
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
          v614 = v418;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          swift_release();
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
          v614 = v574;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          v419 = v589;
          swift_release();
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5612808;
          v614 = v573;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          swift_release();
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
          v614 = v579;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          swift_release();
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
          v614 = v578;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          swift_release();
          v613 = sub_1A5612814;
          v614 = v587;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          swift_release();
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
          v614 = v586;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          swift_release();
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
          v614 = v419;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          swift_release();
          v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5612808;
          v614 = v588;
          sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
          v609 = 0;
          swift_release();
          _os_log_impl(&dword_1A4F90000, v581, (os_log_type_t)v580, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Found %ld missing UIDs: %{public}s", v575, 0x47u);
          v420 = v572;
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v420, -1, -1);
          sub_1A5578F2C();
        }
        goto LABEL_216;
      }

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v38 = v611;
      v509 = *(void (**)(os_log_t, uint64_t))(v611 + 8);
      v510 = v595;
    }
    v39 = v612;
    v509(v510, v612);
    v37 = v604;
    v270 = v607;
    v511 = v602;
    sub_1A5532248((uint64_t)&v623);
    sub_1A5611EC4((uint64_t)v618);
    if ((v511 & 1) == 0)
      goto LABEL_96;
  }
  else
  {
LABEL_95:
    v270 = v607;
    if ((v602 & 1) == 0)
    {
LABEL_96:
      v271 = v600;
      v272 = v599;
      sub_1A55391B4(v599);
      v607 = sub_1A55391A8(*(_QWORD *)(v271 + 200), *(_BYTE *)(v271 + 208));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16))(v603, v270, v39);
      sub_1A55BAEB8(v270, (uint64_t)v37);
      v273 = (*(unsigned __int8 *)(v610 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v610 + 80);
      v274 = swift_allocObject();
      sub_1A5521E68((uint64_t)v37, v274 + v273);
      v275 = swift_allocObject();
      *(_QWORD *)(v275 + 16) = sub_1A56118A8;
      *(_QWORD *)(v275 + 24) = v274;
      v276 = swift_allocObject();
      *(_QWORD *)(v276 + 16) = sub_1A56127F0;
      *(_QWORD *)(v276 + 24) = v275;
      swift_retain();
      swift_retain();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      swift_release();
      v277 = swift_allocObject();
      *(_QWORD *)(v277 + 16) = sub_1A56118A8;
      *(_QWORD *)(v277 + 24) = v274;
      v278 = swift_allocObject();
      *(_QWORD *)(v278 + 16) = sub_1A56127F4;
      *(_QWORD *)(v278 + 24) = v277;
      v279 = swift_allocObject();
      *(_QWORD *)(v279 + 16) = sub_1A56118A8;
      *(_QWORD *)(v279 + 24) = v274;
      v280 = swift_allocObject();
      *(_QWORD *)(v280 + 16) = sub_1A56127F8;
      *(_QWORD *)(v280 + 24) = v279;
      swift_retain_n();
      swift_retain();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      swift_release();
      v281 = swift_allocObject();
      *(_QWORD *)(v281 + 16) = sub_1A56118A8;
      *(_QWORD *)(v281 + 24) = v274;
      v282 = swift_allocObject();
      *(_QWORD *)(v282 + 16) = sub_1A56127FC;
      *(_QWORD *)(v282 + 24) = v281;
      v597 = swift_allocObject();
      v597[2].isa = (Class)v272;
      v598 = swift_allocObject();
      *(_QWORD *)(v598 + 16) = v607;
      v589 = (os_log_t)sub_1A594A74C();
      LODWORD(v588) = sub_1A594C030();
      v590 = swift_allocObject();
      *(_BYTE *)(v590 + 16) = 16;
      v600 = swift_allocObject();
      *(_BYTE *)(v600 + 16) = 4;
      v591 = swift_allocObject();
      *(_BYTE *)(v591 + 16) = 0;
      v592 = swift_allocObject();
      *(_BYTE *)(v592 + 16) = 1;
      v283 = swift_allocObject();
      *(_QWORD *)(v283 + 16) = sub_1A56127EC;
      *(_QWORD *)(v283 + 24) = v276;
      v284 = swift_allocObject();
      *(_QWORD *)(v284 + 16) = sub_1A5612A70;
      *(_QWORD *)(v284 + 24) = v283;
      v285 = (uint8_t *)v284;
      v601 = swift_allocObject();
      *(_BYTE *)(v601 + 16) = 34;
      v604 = swift_allocObject();
      LOBYTE(v604[2].isa) = 8;
      v286 = swift_allocObject();
      *(_QWORD *)(v286 + 16) = sub_1A56127EC;
      *(_QWORD *)(v286 + 24) = v278;
      v287 = swift_allocObject();
      v602 = v287;
      *(_QWORD *)(v287 + 16) = sub_1A56127EC;
      *(_QWORD *)(v287 + 24) = v286;
      v605 = swift_allocObject();
      *(_BYTE *)(v605 + 16) = 16;
      v606 = (char *)swift_allocObject();
      v606[16] = 4;
      v607 = swift_allocObject();
      *(_BYTE *)(v607 + 16) = 0;
      v610 = swift_allocObject();
      *(_BYTE *)(v610 + 16) = 2;
      v288 = swift_allocObject();
      *(_QWORD *)(v288 + 16) = sub_1A56127EC;
      *(_QWORD *)(v288 + 24) = v280;
      v289 = swift_allocObject();
      v608 = v289;
      *(_QWORD *)(v289 + 16) = sub_1A5612A74;
      *(_QWORD *)(v289 + 24) = v288;
      v596 = swift_allocObject();
      *(_BYTE *)(v596 + 16) = 112;
      v593 = swift_allocObject();
      *(_BYTE *)(v593 + 16) = 8;
      v290 = swift_allocObject();
      *(_QWORD *)(v290 + 16) = 0x786F626C69616DLL;
      v291 = swift_allocObject();
      v291[2].isa = (Class)sub_1A5612818;
      v291[3].isa = (Class)v290;
      v292 = swift_allocObject();
      *(_BYTE *)(v292 + 16) = 37;
      v293 = v292;
      v294 = swift_allocObject();
      *(_BYTE *)(v294 + 16) = 8;
      v295 = v294;
      v296 = swift_allocObject();
      *(_QWORD *)(v296 + 16) = sub_1A5612800;
      *(_QWORD *)(v296 + 24) = v282;
      v297 = swift_allocObject();
      v587 = v297;
      *(_QWORD *)(v297 + 16) = sub_1A56127EC;
      *(_QWORD *)(v297 + 24) = v296;
      v586 = swift_allocObject();
      *(_BYTE *)(v586 + 16) = 0;
      v585 = swift_allocObject();
      *(_BYTE *)(v585 + 16) = 8;
      v298 = swift_allocObject();
      v299 = v597;
      *(_QWORD *)(v298 + 16) = sub_1A5612820;
      *(_QWORD *)(v298 + 24) = v299;
      v300 = swift_allocObject();
      v599 = v300;
      *(_QWORD *)(v300 + 16) = sub_1A5612A78;
      *(_QWORD *)(v300 + 24) = v298;
      v595 = (os_log_t)swift_allocObject();
      LOBYTE(v595[2].isa) = 0;
      v597 = swift_allocObject();
      LOBYTE(v597[2].isa) = 8;
      v301 = swift_allocObject();
      v302 = v598;
      *(_QWORD *)(v301 + 16) = sub_1A5612820;
      *(_QWORD *)(v301 + 24) = v302;
      v303 = swift_allocObject();
      v598 = v303;
      *(_QWORD *)(v303 + 16) = sub_1A5612A78;
      *(_QWORD *)(v303 + 24) = v301;
      v304 = v291;
      v594 = v291;
      __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7962F0);
      v305 = swift_allocObject();
      v581 = sub_1A5649928(v305, 27);
      v306 = v590;
      v307 = v591;
      *v308 = sub_1A561281C;
      v308[1] = v306;
      v309 = v600;
      v308[2] = sub_1A561281C;
      v308[3] = v309;
      v308[4] = sub_1A5610F5C;
      v308[5] = 0;
      v308[6] = sub_1A561281C;
      v308[7] = v307;
      v310 = v592;
      v308[8] = sub_1A561281C;
      v308[9] = v310;
      v308[10] = sub_1A561280C;
      v308[11] = v285;
      v311 = v285;
      v312 = v601;
      v308[12] = sub_1A561281C;
      v308[13] = v312;
      v313 = (uint64_t)v604;
      v308[14] = sub_1A561281C;
      v308[15] = v313;
      v314 = v602;
      v308[16] = sub_1A5612808;
      v308[17] = v314;
      v315 = v605;
      v308[18] = sub_1A561281C;
      v308[19] = v315;
      v316 = v606;
      v308[20] = sub_1A561281C;
      v308[21] = v316;
      v308[22] = sub_1A5612A6C;
      v308[23] = 0;
      v317 = v607;
      v308[24] = sub_1A561281C;
      v308[25] = v317;
      v318 = v610;
      v308[26] = sub_1A561281C;
      v308[27] = v318;
      v319 = v608;
      v308[28] = sub_1A5612810;
      v308[29] = v319;
      v320 = v596;
      v308[30] = sub_1A561281C;
      v308[31] = v320;
      v321 = v593;
      v308[32] = sub_1A561281C;
      v308[33] = v321;
      v308[34] = sub_1A5612814;
      v308[35] = v304;
      v308[36] = sub_1A561281C;
      v308[37] = v293;
      v322 = v293;
      v308[38] = sub_1A561281C;
      v308[39] = v295;
      v323 = v295;
      v325 = v586;
      v324 = v587;
      v308[40] = sub_1A5612808;
      v308[41] = v324;
      v308[42] = sub_1A561281C;
      v308[43] = v325;
      v326 = v585;
      v308[44] = sub_1A561281C;
      v308[45] = v326;
      v327 = v599;
      v308[46] = sub_1A5612814;
      v308[47] = v327;
      v328 = v595;
      v308[48] = sub_1A561281C;
      v308[49] = v328;
      v329 = v597;
      v308[50] = sub_1A561281C;
      v308[51] = v329;
      v330 = v598;
      v308[52] = sub_1A5612814;
      v308[53] = v330;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v584 = v311;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v582 = v322;
      swift_retain();
      v583 = v323;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v331 = v589;
      swift_bridgeObjectRelease();
      if (!os_log_type_enabled(v331, (os_log_type_t)v588))
      {

        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v611 + 8))(v603, v612);
        return;
      }
      v332 = (uint8_t *)sub_1A5578EF0();
      v615 = swift_slowAlloc();
      v616 = 0;
      v580 = v615;
      v581 = v332;
      *(_WORD *)v332 = 2307;
      v617[0] = v332 + 2;
      v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
      v614 = v590;
      v100 = v609;
      sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
      if (!v100)
      {
        swift_release();
        v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
        v614 = v600;
        sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
        v333 = v596;
        v335 = v606;
        v334 = v607;
        v336 = (uint64_t)v604;
        v337 = v592;
        swift_release();
        v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5610F5C;
        v614 = 0;
        sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
        v338 = v594;
        v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
        v614 = v591;
        sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
        swift_release();
        v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
        v614 = v337;
        sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
        swift_release();
        v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561280C;
        v614 = v584;
        sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
        swift_release();
        v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
        v614 = v601;
        sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
        swift_release();
        v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
        v614 = v336;
        sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
        swift_release();
        v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5612808;
        v614 = v602;
        sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
        swift_release();
        v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
        v614 = v605;
        sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
        swift_release();
        v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
        v614 = v335;
        sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
        swift_release();
        v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5612A6C;
        v614 = 0;
        sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
        v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
        v614 = v334;
        sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
        swift_release();
        v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
        v614 = v610;
        sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
        swift_release();
        v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5612810;
        v614 = v608;
        sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
        swift_release();
        v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
        v614 = v333;
        sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
        swift_release();
        v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
        v614 = v593;
        sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
        swift_release();
        v613 = sub_1A5612814;
        v614 = v338;
        sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
        swift_release();
        v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
        v614 = v582;
        sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
        swift_release();
        v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
        v614 = v583;
        sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
        v339 = v585;
        swift_release();
        v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5612808;
        v614 = v587;
        sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
        v340 = v586;
        swift_release();
        v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
        v614 = v340;
        sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
        swift_release();
        v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
        v614 = v339;
        sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
        v341 = v595;
        swift_release();
        v613 = sub_1A5612814;
        v614 = v599;
        sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
        swift_release();
        v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
        v614 = v341;
        sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
        swift_release();
        v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
        v614 = v597;
        sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
        swift_release();
        v613 = sub_1A5612814;
        v614 = v598;
        sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
        swift_release();
        _os_log_impl(&dword_1A4F90000, v589, (os_log_type_t)v588, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Removed %ld pending expunge, %ld remaining.", (uint8_t *)v581, 0x47u);
        v342 = v580;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v342, -1, -1);
        sub_1A5578F2C();
      }
      goto LABEL_216;
    }
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v606, v270, v39);
  sub_1A55BAEB8(v270, (uint64_t)v37);
  v512 = (*(unsigned __int8 *)(v610 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v610 + 80);
  v513 = swift_allocObject();
  sub_1A5521E68((uint64_t)v37, v513 + v512);
  v514 = swift_allocObject();
  *(_QWORD *)(v514 + 16) = sub_1A56118A8;
  *(_QWORD *)(v514 + 24) = v513;
  v515 = swift_allocObject();
  *(_QWORD *)(v515 + 16) = sub_1A56127F0;
  *(_QWORD *)(v515 + 24) = v514;
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  swift_release();
  v516 = swift_allocObject();
  *(_QWORD *)(v516 + 16) = sub_1A56118A8;
  *(_QWORD *)(v516 + 24) = v513;
  v517 = swift_allocObject();
  *(_QWORD *)(v517 + 16) = sub_1A56127F4;
  *(_QWORD *)(v517 + 24) = v516;
  v518 = swift_allocObject();
  *(_QWORD *)(v518 + 16) = sub_1A56118A8;
  *(_QWORD *)(v518 + 24) = v513;
  v519 = swift_allocObject();
  *(_QWORD *)(v519 + 16) = sub_1A56127F8;
  *(_QWORD *)(v519 + 24) = v518;
  swift_retain_n();
  swift_retain();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  swift_release();
  v520 = swift_allocObject();
  *(_QWORD *)(v520 + 16) = sub_1A56118A8;
  *(_QWORD *)(v520 + 24) = v513;
  v521 = swift_allocObject();
  v602 = v521;
  *(_QWORD *)(v521 + 16) = sub_1A56127FC;
  *(_QWORD *)(v521 + 24) = v520;
  v595 = (os_log_t)sub_1A594A74C();
  LODWORD(v594) = sub_1A594C030();
  v597 = swift_allocObject();
  LOBYTE(v597[2].isa) = 16;
  v604 = swift_allocObject();
  LOBYTE(v604[2].isa) = 4;
  v598 = swift_allocObject();
  *(_BYTE *)(v598 + 16) = 0;
  v599 = swift_allocObject();
  *(_BYTE *)(v599 + 16) = 1;
  v522 = swift_allocObject();
  *(_QWORD *)(v522 + 16) = sub_1A56127EC;
  *(_QWORD *)(v522 + 24) = v515;
  v523 = swift_allocObject();
  *(_QWORD *)(v523 + 16) = sub_1A5612A70;
  *(_QWORD *)(v523 + 24) = v522;
  v524 = v523;
  v600 = swift_allocObject();
  *(_BYTE *)(v600 + 16) = 34;
  v608 = swift_allocObject();
  *(_BYTE *)(v608 + 16) = 8;
  v525 = swift_allocObject();
  *(_QWORD *)(v525 + 16) = sub_1A56127EC;
  *(_QWORD *)(v525 + 24) = v517;
  v526 = swift_allocObject();
  v607 = v526;
  *(_QWORD *)(v526 + 16) = sub_1A56127EC;
  *(_QWORD *)(v526 + 24) = v525;
  v603 = swift_allocObject();
  *(_BYTE *)(v603 + 16) = 16;
  v610 = swift_allocObject();
  *(_BYTE *)(v610 + 16) = 4;
  v592 = swift_allocObject();
  *(_BYTE *)(v592 + 16) = 0;
  v605 = swift_allocObject();
  *(_BYTE *)(v605 + 16) = 2;
  v527 = swift_allocObject();
  *(_QWORD *)(v527 + 16) = sub_1A56127EC;
  *(_QWORD *)(v527 + 24) = v519;
  v528 = swift_allocObject();
  *(_QWORD *)(v528 + 16) = sub_1A5612A74;
  *(_QWORD *)(v528 + 24) = v527;
  v529 = swift_allocObject();
  *(_BYTE *)(v529 + 16) = 112;
  v596 = swift_allocObject();
  *(_BYTE *)(v596 + 16) = 8;
  v530 = swift_allocObject();
  *(_QWORD *)(v530 + 16) = 0x786F626C69616DLL;
  v531 = swift_allocObject();
  v593 = v531;
  *(_QWORD *)(v531 + 16) = sub_1A5612818;
  *(_QWORD *)(v531 + 24) = v530;
  v532 = swift_allocObject();
  *(_BYTE *)(v532 + 16) = 37;
  v589 = (os_log_t)swift_allocObject();
  LOBYTE(v589[2].isa) = 8;
  v533 = swift_allocObject();
  v534 = v602;
  *(_QWORD *)(v533 + 16) = sub_1A5612800;
  *(_QWORD *)(v533 + 24) = v534;
  v535 = swift_allocObject();
  v601 = v528;
  v602 = v535;
  *(_QWORD *)(v535 + 16) = sub_1A56127EC;
  *(_QWORD *)(v535 + 24) = v533;
  v536 = v528;
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7962F0);
  v537 = swift_allocObject();
  v590 = sub_1A5649928(v537, 21);
  v538 = v597;
  v539 = v598;
  *v540 = sub_1A561281C;
  v540[1] = v538;
  v541 = (uint64_t)v604;
  v540[2] = sub_1A561281C;
  v540[3] = v541;
  v540[4] = sub_1A5610F5C;
  v540[5] = 0;
  v540[6] = sub_1A561281C;
  v540[7] = v539;
  v542 = v599;
  v540[8] = sub_1A561281C;
  v540[9] = v542;
  v540[10] = sub_1A561280C;
  v540[11] = v524;
  v543 = v524;
  v544 = v600;
  v540[12] = sub_1A561281C;
  v540[13] = v544;
  v545 = v608;
  v540[14] = sub_1A561281C;
  v540[15] = v545;
  v546 = v607;
  v540[16] = sub_1A5612808;
  v540[17] = v546;
  v547 = v603;
  v540[18] = sub_1A561281C;
  v540[19] = v547;
  v548 = v610;
  v540[20] = sub_1A561281C;
  v540[21] = v548;
  v540[22] = sub_1A5612A6C;
  v540[23] = 0;
  v549 = v592;
  v540[24] = sub_1A561281C;
  v540[25] = v549;
  v550 = v605;
  v540[26] = sub_1A561281C;
  v540[27] = v550;
  v540[28] = sub_1A5612810;
  v540[29] = v536;
  v540[30] = sub_1A561281C;
  v540[31] = v529;
  v551 = v596;
  v540[32] = sub_1A561281C;
  v540[33] = v551;
  v552 = v593;
  v540[34] = sub_1A5612814;
  v540[35] = v552;
  v540[36] = sub_1A561281C;
  v540[37] = v532;
  v553 = v532;
  v554 = v589;
  v540[38] = sub_1A561281C;
  v540[39] = v554;
  v555 = v602;
  v540[40] = sub_1A5612808;
  v540[41] = v555;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v591 = v543;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v556 = v596;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v557 = v595;
  swift_bridgeObjectRelease();
  if (!os_log_type_enabled(v557, (os_log_type_t)v594))
  {

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v611 + 8))(v606, v612);
    return;
  }
  v558 = v529;
  v559 = v556;
  v590 = v553;
  v560 = (uint8_t *)sub_1A5578EF0();
  v615 = swift_slowAlloc();
  v616 = 0;
  v587 = v615;
  v588 = v560;
  *(_WORD *)v560 = 1795;
  v617[0] = v560 + 2;
  v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
  v614 = v597;
  v100 = v609;
  sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
  if (!v100)
  {
    swift_release();
    v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
    v614 = v604;
    sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
    v561 = v603;
    v562 = v600;
    swift_release();
    v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5610F5C;
    v614 = 0;
    sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
    v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
    v614 = v598;
    sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
    v563 = v608;
    swift_release();
    v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
    v614 = v599;
    sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
    swift_release();
    v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561280C;
    v614 = v591;
    sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
    swift_release();
    v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
    v614 = v562;
    sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
    swift_release();
    v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
    v614 = v563;
    sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
    v564 = v605;
    swift_release();
    v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5612808;
    v614 = v607;
    sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
    v565 = v592;
    swift_release();
    v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
    v614 = v561;
    sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
    swift_release();
    v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
    v614 = v610;
    sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
    swift_release();
    v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5612A6C;
    v614 = 0;
    sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
    v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
    v614 = v565;
    sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
    swift_release();
    v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
    v614 = v564;
    sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
    swift_release();
    v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5612810;
    v614 = v601;
    sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
    swift_release();
    v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
    v614 = v558;
    sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
    swift_release();
    v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
    v614 = v559;
    sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
    swift_release();
    v613 = sub_1A5612814;
    v614 = v593;
    sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
    swift_release();
    v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
    v614 = v590;
    sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
    swift_release();
    v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A561281C;
    v614 = v554;
    sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
    swift_release();
    v613 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5612808;
    v614 = v602;
    sub_1A5578EF8(&v613, (uint64_t)v617, (uint64_t)&v616, (uint64_t)&v615);
    swift_release();
    _os_log_impl(&dword_1A4F90000, v595, (os_log_type_t)v594, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Did not remove any pending expunge.", v588, 0x33u);
    v566 = v587;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v566, -1, -1);
    sub_1A5578F2C();
  }
LABEL_216:

  __break(1u);
  __break(1u);
}

uint64_t sub_1A560FB04(uint64_t a1)
{
  unint64_t v2;
  uint64_t result;
  uint64_t v4;
  unsigned __int8 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;

  v2 = sub_1A54E3414();
  result = MessageIdentifierSet.init()(&type metadata for UID, v2);
  v24 = result;
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain_n();
    v5 = (unsigned __int8 *)(a1 + 84);
    do
    {
      v21 = *(_QWORD *)(v5 - 44);
      v6 = *(_QWORD *)(v5 - 28);
      v7 = *((unsigned int *)v5 - 5);
      v8 = *(v5 - 16);
      v9 = *(_QWORD *)(v5 - 12);
      v10 = *((unsigned int *)v5 - 1);
      v18 = v10;
      v11 = *v5;
      v19 = *(v5 - 32);
      v20 = *((_DWORD *)v5 - 9);
      sub_1A54E4334(v21, v20, v19);
      v17 = v7;
      sub_1A54E4334(v6, v7, v8);
      sub_1A54E4334(v9, v10, v11);
      v22 = v22 & 0xFFFFFF0000000000 | v7 | (v8 << 32);
      v23 = v23 & 0xFFFFFF0000000000 | v10 | (v11 << 32);
      MessageIdentifierSet.subtracting(_:)(v6, v22, v9, v23);
      v13 = v12;
      v15 = v14;
      v16 = HIDWORD(v14);
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
      MessageIdentifierSet.formUnion(_:)(v13, v15 & 0xFFFFFFFFFFLL);
      sub_1A54E3458(v13, v15, v16);
      sub_1A54E3458(v21, v20, v19);
      sub_1A54E3458(v6, v17, v8);
      sub_1A54E3458(v9, v18, v11);
      v5 += 56;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease_n();
    return v24;
  }
  return result;
}

uint64_t sub_1A560FCB4(uint64_t a1, unint64_t a2)
{
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;

  v29 = sub_1A56124E0(a2 | ((HIDWORD(a2) & 1) << 32));
  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v27 = v4;
    v28 = v4 & 0xFFFFFFFFFFLL;
    swift_bridgeObjectRetain_n();
    v6 = 0;
    v7 = (char *)(a1 + 84);
    while (1)
    {
      v31 = v5;
      v38 = *(_QWORD *)(v7 - 44);
      v8 = *(_QWORD *)(v7 - 28);
      v9 = *((unsigned int *)v7 - 5);
      v10 = *(v7 - 16);
      v11 = *(_QWORD *)(v7 - 12);
      v12 = *((unsigned int *)v7 - 1);
      v35 = v12;
      v13 = *v7;
      v33 = v11;
      v34 = *v7;
      v36 = *(v7 - 32);
      v37 = *((_DWORD *)v7 - 9);
      sub_1A54E4334(v38, v37, v36);
      v32 = v10;
      sub_1A54E4334(v8, v9, v10);
      sub_1A54E4334(v11, v12, v13);
      sub_1A54E3414();
      v30 = v2 & 0xFFFFFF0000000000 | v12 | (v13 << 32);
      v39 = v39 & 0xFFFFFF0000000000 | v9 | (v10 << 32);
      MessageIdentifierSet.subtracting(_:)(v11, v30, v8, v39);
      v15 = v14;
      v17 = v16;
      v18 = HIDWORD(v16);
      MessageIdentifierSet.subtracting(_:)(v29, v28, v14, v16 & 0xFFFFFFFFFFLL);
      v19 = v6;
      v21 = v20;
      v23 = v22;
      v24 = HIDWORD(v22);
      sub_1A54E3458(v15, v17, v18);
      v25 = MessageIdentifierSet.count.getter(v21, v23 & 0xFFFFFFFFFFLL);
      sub_1A54E3458(v21, v23, v24);
      sub_1A54E3458(v38, v37, v36);
      sub_1A54E3458(v8, v9, v32);
      result = sub_1A54E3458(v33, v35, v34);
      v6 = v19 + v25;
      if (__OFADD__(v19, v25))
        break;
      v7 += 56;
      v2 = v30;
      v5 = v31 - 1;
      if (v31 == 1)
      {
        swift_bridgeObjectRelease_n();
        v4 = v27;
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  else
  {
    v6 = 0;
LABEL_7:
    sub_1A54E3458(v29, v4, SBYTE4(v4));
    return v6;
  }
  return result;
}

uint64_t sub_1A560FEBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unsigned int v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int v16;
  unint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  unint64_t v119;
  unint64_t v120;
  unint64_t v121;
  uint64_t v122;
  unint64_t v123;
  unint64_t v124;
  char *v126;
  char v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  int v140;
  uint64_t v141;
  uint64_t v142;
  unsigned int v143;
  unsigned __int8 v144;
  unsigned int v145;
  char v146;
  unsigned int v147;
  char v148;
  unsigned int v149;
  char v150;
  uint64_t v151;
  int v152;
  char v153;

  v116 = sub_1A56124E0(a3 | ((HIDWORD(a3) & 1) << 32));
  v7 = v6;
  v8 = HIDWORD(v6);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v9 = MEMORY[0x1E0DEE9D8];
  v10 = sub_1A55C19FC(MEMORY[0x1E0DEE9D8]);
  v12 = v11;
  v13 = HIDWORD(v11);
  v14 = sub_1A55C19FC(v9);
  v16 = v15;
  v142 = v10;
  v17 = HIDWORD(v15);
  v143 = v12;
  v144 = v13;
  v145 = 0;
  v146 = 1;
  v147 = 0;
  v148 = 1;
  v149 = 0;
  v150 = 1;
  v151 = v14;
  v152 = v15;
  v153 = BYTE4(v15);
  v136 = *(_QWORD *)(a2 + 16);
  if (v136)
  {
    v94 = v8;
    v95 = v7;
    v96 = a4;
    v115 = v7 & 0xFFFFFFFFFFLL;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v18 = (char *)(a2 + 84);
    v19 = v136;
    while (1)
    {
      v24 = *(_QWORD *)(v18 - 44);
      v25 = *((unsigned int *)v18 - 9);
      v26 = *(v18 - 32);
      v135 = v26;
      v137 = v19;
      v27 = *(_QWORD *)(v18 - 28);
      v28 = *((unsigned int *)v18 - 5);
      v29 = *(v18 - 16);
      v138 = v29;
      v30 = *(_QWORD *)(v18 - 12);
      v31 = *((unsigned int *)v18 - 1);
      v126 = v18;
      v32 = *v18;
      v33 = *v18;
      v34 = v142;
      v35 = v143;
      v36 = v144;
      v133 = v24;
      v130 = v25;
      sub_1A54E4334(v24, v25, v26);
      sub_1A54E4334(v27, v28, v29);
      sub_1A54E4334(v30, v31, v32);
      v37 = sub_1A54E3414();
      v122 = v35;
      v38 = v134 & 0xFFFFFF0000000000 | v35;
      v39 = v36;
      v134 = v38 & 0xFFFFFF00FFFFFFFFLL | ((unint64_t)v36 << 32);
      v131 = v30;
      v132 = v27;
      v128 = v31;
      v129 = v28;
      v127 = v33;
      if (MessageIdentifierSet.count.getter(v34, v134) >= a1)
        break;
      v40 = v117 & 0xFFFFFF0000000000 | v31 | (v33 << 32);
      v81 = v138;
      v117 = v40;
      v118 = v118 & 0xFFFFFF0000000000 | v28 | (v138 << 32);
      MessageIdentifierSet.subtracting(_:)(v30, v40, v27, v118);
      v42 = v41;
      v44 = v43;
      v45 = HIDWORD(v43);
      v119 = v115 | v119 & 0xFFFFFF0000000000;
      v120 = v120 & 0xFFFFFF0000000000 | v43 & 0xFFFFFFFFFFLL;
      MessageIdentifierSet.subtracting(_:)(v116, v119, v41, v120);
      v47 = v46;
      v49 = v48;
      v50 = HIDWORD(v48);
      sub_1A54E3458(v42, v44, v45);
      v121 = v121 & 0xFFFFFF0000000000 | v49 & 0xFFFFFFFFFFLL;
      if (!MessageIdentifierSet.isEmpty.getter(v47, v121))
      {
        v51 = v49 & 0xFFFFFFFFFFLL;
        v113 = v49 & 0xFFFFFFFFFFLL | v113 & 0xFFFFFF0000000000;
        v52 = MessageIdentifierSet.count.getter(v47, v113);
        v114 = v114 & 0xFFFFFF0000000000 | v122 | (v39 << 32);
        result = MessageIdentifierSet.count.getter(v34, v114);
        if (__OFADD__(v52, result))
        {
          __break(1u);
LABEL_30:
          __break(1u);
LABEL_31:
          __break(1u);
          return result;
        }
        if (v52 + result > a1)
        {
          v112 = v51 | v112 & 0xFFFFFF0000000000;
          v54 = MessageIdentifierSet.count.getter(v47, v112);
          result = MessageIdentifierSet.count.getter(v34, v107 & 0xFFFFFF0000000000 | v122 | (v39 << 32));
          v55 = v54 + result;
          if (__OFADD__(v54, result))
            goto LABEL_30;
          result = v55 - a1;
          if (__OFSUB__(v55, a1))
            goto LABEL_31;
          v107 = v107 & 0xFFFFFF0000000000 | v122 | (v39 << 32);
          v105 = v51 | v105 & 0xFFFFFF0000000000;
          v56 = sub_1A55E1944(result, v47, v105);
          v58 = v57;
          v59 = HIDWORD(v57);
          sub_1A54E3458(v47, v49, v50);
          v106 = v106 & 0xFFFFFF0000000000 | v58 & 0xFFFFFFFFFFLL;
          MessageIdentifierSet.ranges.getter(v56, v106);
          v61 = v60;
          v63 = v62;
          v64 = HIDWORD(v62);
          v104 = v104 & 0xFFFFFF0000000000 | v62 & 0xFFFFFFFFFFLL;
          if (MessageIdentifierSet.RangeView.endIndex.getter(v60, v104))
          {
            v103 = v63 & 0xFFFFFFFFFFLL | v103 & 0xFFFFFF0000000000;
            MessageIdentifierSet.RangeView.subscript.getter(0, v61, v103);
            sub_1A54E3458(v61, v63, v64);
            v65 = v141;
            __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
            v102 = v58 & 0xFFFFFFFFFFLL | v102 & 0xFFFFFF0000000000;
            MessageIdentifierSet.formUnion(_:)(v56, v102);
            sub_1A54E3458(v56, v58, v59);
            v23 = v130;
            v101 = v115 | v101 & 0xFFFFFF0000000000;
            v22 = v133;
            v100 = v100 & 0xFFFFFF0000000000 | v130 | (v135 << 32);
            MessageIdentifierSet.subtracting(_:)(v116, v101, v133, v100);
            v67 = v66;
            v69 = v68;
            v124 = HIDWORD(v68);
            LODWORD(v139) = v65;
            v140 = -1;
            static MessageIdentifier.... infix(_:_:)();
            v139 = v141;
            MessageIdentifierSet.init(_:)((uint64_t)&v139, (uint64_t)&type metadata for UID, v37, v70);
            v72 = v71;
            v74 = v73;
            v75 = HIDWORD(v73);
            v98 = v98 & 0xFFFFFF0000000000 | v69 & 0xFFFFFFFFFFLL;
            v99 = v99 & 0xFFFFFF0000000000 | v73 & 0xFFFFFFFFFFLL;
            MessageIdentifierSet.intersection(_:)(v71, v99, v67, v98);
            v77 = v76;
            v79 = v78;
            v123 = HIDWORD(v78);
            v80 = v74;
            v21 = v135;
            sub_1A54E3458(v72, v80, v75);
            sub_1A54E3458(v67, v69, v124);
            v97 = v97 & 0xFFFFFF0000000000 | v79 & 0xFFFFFFFFFFLL;
            MessageIdentifierSet.formUnion(_:)(v77, v97);
            sub_1A54E3458(v77, v79, v123);
            v20 = v137;
            v81 = v138;
          }
          else
          {
            sub_1A54E3458(v61, v63, v64);
            sub_1A54E3458(v56, v58, v59);
            v21 = v135;
            v20 = v137;
            v22 = v133;
            v23 = v130;
            v81 = v138;
          }
          goto LABEL_4;
        }
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
        v108 = v51 | v108 & 0xFFFFFF0000000000;
        MessageIdentifierSet.formUnion(_:)(v47, v108);
        sub_1A54E3458(v47, v49, v50);
        v23 = v130;
        v21 = v135;
        v109 = v115 | v109 & 0xFFFFFF0000000000;
        v22 = v133;
        v110 = v110 & 0xFFFFFF0000000000 | v130 | (v135 << 32);
        MessageIdentifierSet.subtracting(_:)(v116, v109, v133, v110);
        v83 = v82;
        v85 = v84;
        v86 = HIDWORD(v84);
        v111 = v111 & 0xFFFFFF0000000000 | v84 & 0xFFFFFFFFFFLL;
        MessageIdentifierSet.formUnion(_:)(v82, v111);
        v81 = v138;
        sub_1A54E3458(v83, v85, v86);
        goto LABEL_14;
      }
      sub_1A54E3458(v47, v49, v50);
      v21 = v135;
      v20 = v137;
      v22 = v133;
      v23 = v130;
LABEL_4:
      v18 = v126 + 56;
      sub_1A54E3458(v22, v23, v21);
      sub_1A54E3458(v132, v129, v81);
      sub_1A54E3458(v131, v128, v127);
      v19 = v20 - 1;
      if (!v19)
      {
        swift_bridgeObjectRelease_n();
        result = sub_1A54E3458(v116, v95, v94);
        v10 = v142;
        v12 = v143;
        LOBYTE(v13) = v144;
        v87 = v151;
        v16 = v152;
        LOBYTE(v17) = v153;
        if (v146)
          v88 = 0x100000000;
        else
          v88 = 0;
        v89 = v88 | v145;
        if (v148)
          v90 = 0x100000000;
        else
          v90 = 0;
        v91 = v90 | v147;
        if (v150)
          v92 = 0x100000000;
        else
          v92 = 0;
        v93 = v92 | v149;
        a4 = v96;
        goto LABEL_28;
      }
    }
    v22 = v133;
    v23 = v130;
    v21 = v135;
    v81 = v138;
LABEL_14:
    v20 = v137;
    goto LABEL_4;
  }
  v87 = v14;
  swift_bridgeObjectRelease();
  result = sub_1A54E3458(v116, v7, v8);
  v89 = 0x100000000;
  v91 = 0x100000000;
  v93 = 0x100000000;
LABEL_28:
  *(_QWORD *)a4 = v10;
  *(_QWORD *)(a4 + 8) = v12 | ((unint64_t)v13 << 32);
  *(_QWORD *)(a4 + 16) = v89;
  *(_QWORD *)(a4 + 24) = v91;
  *(_QWORD *)(a4 + 32) = v93;
  *(_QWORD *)(a4 + 40) = v87;
  *(_DWORD *)(a4 + 48) = v16;
  *(_BYTE *)(a4 + 52) = v17;
  return result;
}

uint64_t sub_1A5610674()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[72];

  v1 = v0;
  sub_1A594CE64();
  sub_1A594CE88();
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(unsigned int *)(v0 + 16);
  v4 = *(unsigned __int8 *)(v0 + 20);
  sub_1A54E4334(*(_QWORD *)(v1 + 8), *(unsigned int *)(v1 + 16), *(_BYTE *)(v1 + 20));
  sub_1A54E3414();
  MessageIdentifierSetNonEmpty.hash(into:)((uint64_t)v12, v2, v3 | (v4 << 32));
  sub_1A54E3458(v2, v3, v4);
  v5 = *(_QWORD *)(v0 + 24);
  v6 = *(unsigned int *)(v0 + 32);
  v7 = *(unsigned __int8 *)(v0 + 36);
  sub_1A54E4334(*(_QWORD *)(v1 + 24), *(unsigned int *)(v1 + 32), *(_BYTE *)(v1 + 36));
  MessageIdentifierSet.hash(into:)((uint64_t)v12, v5, v6 | (v7 << 32));
  sub_1A54E3458(v5, v6, v7);
  v8 = *(_QWORD *)(v0 + 40);
  v9 = *(unsigned int *)(v0 + 48);
  v10 = *(unsigned __int8 *)(v0 + 52);
  sub_1A54E4334(*(_QWORD *)(v1 + 40), *(unsigned int *)(v1 + 48), *(_BYTE *)(v1 + 52));
  MessageIdentifierSet.hash(into:)((uint64_t)v12, v8, v9 | (v10 << 32));
  sub_1A54E3458(v8, v9, v10);
  sub_1A594CE94();
  return sub_1A594CED0();
}

uint64_t sub_1A56107B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(unsigned int *)(v1 + 16);
  v5 = *(unsigned __int8 *)(v1 + 20);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = *(unsigned int *)(v1 + 32);
  v8 = *(unsigned __int8 *)(v1 + 36);
  v12 = *(_QWORD *)(v1 + 40);
  v9 = *(unsigned int *)(v1 + 48);
  v10 = *(unsigned __int8 *)(v1 + 52);
  sub_1A594CE88();
  sub_1A54E4334(v3, v4, v5);
  sub_1A54E3414();
  MessageIdentifierSetNonEmpty.hash(into:)(a1, v3, v4 | (v5 << 32));
  sub_1A54E3458(v3, v4, v5);
  sub_1A54E4334(v6, v7, v8);
  MessageIdentifierSet.hash(into:)(a1, v6, v7 | (v8 << 32));
  sub_1A54E3458(v6, v7, v8);
  sub_1A54E4334(v12, v9, v10);
  MessageIdentifierSet.hash(into:)(a1, v12, v9 | (v10 << 32));
  sub_1A54E3458(v12, v9, v10);
  return sub_1A594CE94();
}

uint64_t sub_1A5610900()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  _BYTE v11[72];

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(unsigned int *)(v0 + 16);
  v3 = *(unsigned __int8 *)(v0 + 20);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(unsigned int *)(v0 + 32);
  v6 = *(unsigned __int8 *)(v0 + 36);
  v10 = *(_QWORD *)(v0 + 40);
  v7 = *(unsigned int *)(v0 + 48);
  v8 = *(unsigned __int8 *)(v0 + 52);
  sub_1A594CE64();
  sub_1A594CE88();
  sub_1A54E4334(v1, v2, v3);
  sub_1A54E3414();
  MessageIdentifierSetNonEmpty.hash(into:)((uint64_t)v11, v1, v2 | (v3 << 32));
  sub_1A54E3458(v1, v2, v3);
  sub_1A54E4334(v4, v5, v6);
  MessageIdentifierSet.hash(into:)((uint64_t)v11, v4, v5 | (v6 << 32));
  sub_1A54E3458(v4, v5, v6);
  sub_1A54E4334(v10, v7, v8);
  MessageIdentifierSet.hash(into:)((uint64_t)v11, v10, v7 | (v8 << 32));
  sub_1A54E3458(v10, v7, v8);
  sub_1A594CE94();
  return sub_1A594CED0();
}

uint64_t sub_1A5610A54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int32x2_t *v7;
  uint64_t v8;
  uint64_t v9;
  int32x2_t *v10;
  char v11;
  char v12;
  char v13;
  int32x2_t *v15;
  uint64_t v16;
  uint64_t v17;
  int32x2_t *v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int32x2_t *v23;
  uint64_t v24;
  int32x2_t *v25;

  if (*(_QWORD *)a1 != *(_QWORD *)a2)
    return 0;
  v24 = *(unsigned int *)(a1 + 32);
  v25 = *(int32x2_t **)(a1 + 24);
  v22 = *(unsigned __int8 *)(a1 + 36);
  v17 = *(unsigned int *)(a1 + 48);
  v18 = *(int32x2_t **)(a1 + 40);
  v16 = *(unsigned __int8 *)(a1 + 52);
  v19 = *(unsigned __int8 *)(a1 + 53);
  v23 = *(int32x2_t **)(a2 + 24);
  v21 = *(unsigned int *)(a2 + 32);
  v20 = *(unsigned __int8 *)(a2 + 36);
  v15 = *(int32x2_t **)(a2 + 40);
  v2 = *(unsigned int *)(a2 + 48);
  v3 = *(unsigned __int8 *)(a2 + 52);
  v4 = *(unsigned __int8 *)(a2 + 53);
  v5 = *(unsigned __int8 *)(a2 + 20);
  v6 = *(unsigned int *)(a2 + 16);
  v7 = *(int32x2_t **)(a2 + 8);
  v8 = *(unsigned __int8 *)(a1 + 20);
  v9 = *(unsigned int *)(a1 + 16);
  v10 = *(int32x2_t **)(a1 + 8);
  sub_1A54E3414();
  static MessageIdentifierSet.__derived_struct_equals(_:_:)(v10, v9 | (v8 << 32), v7, v6 | (v5 << 32));
  if ((v11 & 1) == 0)
    return 0;
  static MessageIdentifierSet.__derived_struct_equals(_:_:)(v25, v24 | (v22 << 32), v23, v21 | (v20 << 32));
  if ((v12 & 1) != 0
    && (static MessageIdentifierSet.__derived_struct_equals(_:_:)(v18, v17 | (v16 << 32), v15, v2 | (v3 << 32)),
        (v13 & 1) != 0))
  {
    return v19 ^ v4 ^ 1u;
  }
  else
  {
    return 0;
  }
}

_QWORD *sub_1A5610BB0@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_1A5610BC0(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_1A5610BCC()
{
  sub_1A594CE64();
  sub_1A594CE88();
  return sub_1A594CED0();
}

uint64_t sub_1A5610C10()
{
  return sub_1A594CE88();
}

uint64_t sub_1A5610C38()
{
  sub_1A594CE64();
  sub_1A594CE88();
  return sub_1A594CED0();
}

uint64_t sub_1A5610C78@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(unsigned int *)(a1 + 16);
  v4 = *(unsigned __int8 *)(a1 + 20);
  sub_1A54E3414();
  v16 = v3 | (v4 << 32);
  MessageIdentifierSet.ranges.getter(v2, v16);
  v6 = v5;
  v8 = v7;
  v9 = v7 & 0xFFFFFFFFFFLL;
  v10 = MessageIdentifierSet.RangeView.endIndex.getter(v5, v7 & 0xFFFFFFFFFFLL);
  if (MessageIdentifierSet.RangeView.endIndex.getter(v6, v9) < 0)
  {
    __break(1u);
LABEL_10:
    __break(1u);
LABEL_11:
    result = sub_1A54E3458(v6, v10, v8);
    __break(1u);
    goto LABEL_12;
  }
  v11 = MessageIdentifierSet.RangeView.endIndex.getter(v6, v9);
  sub_1A54E3458(v6, v8, SBYTE4(v8));
  if ((v10 & 0x8000000000000000) != 0 || v11 < (uint64_t)v10)
    goto LABEL_10;
  if (v10 <= 1)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
LABEL_8:
    result = sub_1A594C924();
    *a2 = 0;
    a2[1] = 0xE000000000000000;
    return result;
  }
  MessageIdentifierSet.count.getter(v2, v16);
  sub_1A594CC9C();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  MessageIdentifierSet.ranges.getter(v2, v16);
  v6 = v12;
  v10 = v13;
  v8 = HIDWORD(v13);
  v14 = v13 & 0xFFFFFFFFFFLL;
  if (!MessageIdentifierSet.RangeView.endIndex.getter(v12, v13 & 0xFFFFFFFFFFLL))
    goto LABEL_11;
  MessageIdentifierSet.RangeView.subscript.getter(0, v6, v14);
  sub_1A54E3458(v6, v10, v8);
  sub_1A594C924();
  sub_1A594B5F8();
  result = sub_1A5531838(v2, v16);
  if ((result & 0x100000000) == 0)
    goto LABEL_8;
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1A5610EFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  uint64_t v8;

  v3 = (char *)(a1 + *(int *)(type metadata accessor for MailboxTaskLogger(0) + 20));
  v4 = *v3;
  v6 = *((_QWORD *)v3 + 1);
  v5 = *((_QWORD *)v3 + 2);
  v7 = *((_WORD *)v3 + 12);
  v8 = *((_QWORD *)v3 + 4);
  LODWORD(v3) = *((_DWORD *)v3 + 10);
  *(_BYTE *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v6;
  *(_QWORD *)(a2 + 16) = v5;
  *(_WORD *)(a2 + 24) = v7;
  *(_QWORD *)(a2 + 32) = v8;
  *(_DWORD *)(a2 + 40) = (_DWORD)v3;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

_DWORD **sub_1A5610F5C(_DWORD **result)
{
  _DWORD *v1;

  v1 = *result;
  *v1 = 2;
  *result = v1 + 1;
  return result;
}

uint64_t sub_1A5610F70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, char a6)
{
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  int v34;
  unint64_t v35;
  uint64_t v36;
  int v37;
  char v38;
  _QWORD v40[2];
  uint64_t v41;
  int v42;
  char v43;

  if ((a6 & 1) != 0)
    v12 = 0;
  else
    v12 = FetchedWindow.upperBound.getter(a5);
  v40[0] = a1;
  v40[1] = a2;
  v41 = a3;
  v42 = a4;
  v43 = BYTE4(a4);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5503BA0(a3, a4);
  sub_1A552D7A0(v12 | ((unint64_t)(a6 & 1) << 32));
  v13 = a2;
  v14 = a4 | ((unint64_t)BYTE4(a4) << 32);
  if ((a6 & 1) != 0)
    v15 = 0;
  else
    v15 = FetchedWindow.lowerBound.getter(a5);
  LOBYTE(v40[0]) = a6 & 1;
  sub_1A552D8C4(v15 | ((unint64_t)(a6 & 1) << 32), a1, v13, v41, v14 & 0xFFFFFFFFFFLL);
  v17 = v16;
  v19 = v18;
  v21 = v20;
  swift_bridgeObjectRelease();
  sub_1A5503B8C(v41, v14);
  sub_1A5503B8C(v19, v21);
  if (*(_QWORD *)(v17 + 16))
  {
    v22 = *(_QWORD *)(v17 + 32);
    swift_bridgeObjectRelease();
    v40[0] = v22;
    v23 = sub_1A54E3414();
    MessageIdentifierSet.init(_:)((uint64_t)v40, (uint64_t)&type metadata for UID, v23, v24);
    v26 = v25;
    v28 = v27;
    v29 = HIDWORD(v27);
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8598);
    v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_1A59ABD10;
    v31 = MEMORY[0x1E0DEE9D8];
    v32 = sub_1A55C19FC(MEMORY[0x1E0DEE9D8]);
    v34 = v33;
    v35 = HIDWORD(v33);
    v36 = sub_1A55C19FC(v31);
    *(_QWORD *)(v30 + 32) = 0;
    *(_QWORD *)(v30 + 40) = v26;
    *(_DWORD *)(v30 + 48) = v28;
    *(_BYTE *)(v30 + 52) = v29;
    *(_QWORD *)(v30 + 56) = v32;
    *(_DWORD *)(v30 + 64) = v34;
    *(_BYTE *)(v30 + 68) = v35;
    *(_QWORD *)(v30 + 72) = v36;
    *(_DWORD *)(v30 + 80) = v37;
    *(_BYTE *)(v30 + 84) = v38;
    *(_BYTE *)(v30 + 85) = 0;
    if ((a6 & 1) == 0)
      FetchedWindow.upperBound.getter(a5);
  }
  else
  {
    swift_bridgeObjectRelease();
    if ((a6 & 1) == 0)
      FetchedWindow.upperBound.getter(a5);
    return MEMORY[0x1E0DEE9D8];
  }
  return v30;
}

_QWORD *sub_1A56111B4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, char a6)
{
  uint64_t v6;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t i;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  char v49;

  v6 = a4;
  v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v9 = HIDWORD(a4);
  if (*(_QWORD *)(a2 + 16))
  {
    if ((a6 & 1) != 0)
      v14 = 0;
    else
      v14 = FetchedWindow.upperBound.getter(a5);
    v45 = (_QWORD *)a1;
    v46 = a2;
    v47 = a3;
    v48 = v6;
    v42 = v9;
    v49 = v9;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v43 = a3;
    sub_1A5503BA0(a3, v6);
    LOBYTE(v44) = a6 & 1;
    sub_1A552D7A0(v14 | ((unint64_t)(a6 & 1) << 32));
    v15 = a2;
    v16 = a3;
    v17 = v6 | ((unint64_t)v9 << 32);
    if ((a6 & 1) != 0)
      v18 = 0;
    else
      v18 = FetchedWindow.lowerBound.getter(a5);
    LOBYTE(v45) = a6 & 1;
    sub_1A552D8C4(v18 | ((unint64_t)(a6 & 1) << 32), a1, v15, v16, v17 & 0xFFFFFFFFFFLL);
    v20 = v19;
    v22 = v21;
    v24 = v23;
    swift_bridgeObjectRelease();
    sub_1A5503B8C(v16, v17);
    sub_1A5503B8C(v22, v24);
    v25 = *(_QWORD *)(v20 + 16);
    if (v25)
    {
      v41 = v6;
      v45 = v8;
      sub_1A54F4C64(0, v25, 0);
      v27 = sub_1A54E3414();
      for (i = 0; i != v25; ++i)
      {
        v44 = *(_QWORD *)(v20 + 8 * i + 32);
        MessageIdentifierSet.init(_:)((uint64_t)&v44, (uint64_t)&type metadata for UID, v27, v26);
        v30 = v29;
        v32 = v31;
        v45 = v8;
        v34 = v8[2];
        v33 = v8[3];
        if (v34 >= v33 >> 1)
        {
          sub_1A54F4C64(v33 > 1, v34 + 1, 1);
          v8 = v45;
        }
        v8[2] = v34 + 1;
        v35 = &v8[2 * v34];
        v35[4] = v30;
        *((_DWORD *)v35 + 10) = v32;
        *((_BYTE *)v35 + 44) = BYTE4(v32);
      }
      swift_bridgeObjectRelease();
      v6 = v41;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    LOBYTE(v9) = v42;
    a3 = v43;
  }
  if (BYTE4(v6) != 255)
  {
    sub_1A5503BA0(a3, v6);
    sub_1A5503BA0(a3, v6);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v36 = v8;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v36 = sub_1A54F0794(0, v8[2] + 1, 1, v8);
    v38 = v36[2];
    v37 = v36[3];
    if (v38 >= v37 >> 1)
      v36 = sub_1A54F0794((_QWORD *)(v37 > 1), v38 + 1, 1, v36);
    v36[2] = v38 + 1;
    v39 = &v36[2 * v38];
    v39[4] = a3;
    *((_DWORD *)v39 + 10) = v6;
    *((_BYTE *)v39 + 44) = v9;
    sub_1A5503B8C(a3, v6);
    swift_bridgeObjectRelease();
    return v36;
  }
  return v8;
}

uint64_t destroy for MessagesToRemoveHelper.Range(uint64_t a1)
{
  sub_1A54E3458(*(_QWORD *)(a1 + 8), *(unsigned int *)(a1 + 16), *(_BYTE *)(a1 + 20));
  sub_1A54E3458(*(_QWORD *)(a1 + 24), *(unsigned int *)(a1 + 32), *(_BYTE *)(a1 + 36));
  return sub_1A54E3458(*(_QWORD *)(a1 + 40), *(unsigned int *)(a1 + 48), *(_BYTE *)(a1 + 52));
}

uint64_t initializeWithCopy for MessagesToRemoveHelper.Range(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;
  char v6;
  uint64_t v7;
  unsigned int v8;
  char v9;
  uint64_t v10;
  unsigned int v11;
  char v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_DWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 20);
  sub_1A54E4334(v4, v5, v6);
  *(_QWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 20) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_DWORD *)(a2 + 32);
  v9 = *(_BYTE *)(a2 + 36);
  sub_1A54E4334(v7, v8, v9);
  *(_QWORD *)(a1 + 24) = v7;
  *(_DWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 36) = v9;
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_DWORD *)(a2 + 48);
  v12 = *(_BYTE *)(a2 + 52);
  sub_1A54E4334(v10, v11, v12);
  *(_QWORD *)(a1 + 40) = v10;
  *(_DWORD *)(a1 + 48) = v11;
  *(_BYTE *)(a1 + 52) = v12;
  *(_BYTE *)(a1 + 53) = *(_BYTE *)(a2 + 53);
  return a1;
}

uint64_t assignWithCopy for MessagesToRemoveHelper.Range(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  unsigned int v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_DWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 20);
  sub_1A54E4334(v4, v5, v6);
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(unsigned int *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = v5;
  v9 = *(_BYTE *)(a1 + 20);
  *(_BYTE *)(a1 + 20) = v6;
  sub_1A54E3458(v7, v8, v9);
  v10 = *(_QWORD *)(a2 + 24);
  v11 = *(_DWORD *)(a2 + 32);
  v12 = *(_BYTE *)(a2 + 36);
  sub_1A54E4334(v10, v11, v12);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(unsigned int *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v10;
  *(_DWORD *)(a1 + 32) = v11;
  v15 = *(_BYTE *)(a1 + 36);
  *(_BYTE *)(a1 + 36) = v12;
  sub_1A54E3458(v13, v14, v15);
  v16 = *(_QWORD *)(a2 + 40);
  v17 = *(_DWORD *)(a2 + 48);
  v18 = *(_BYTE *)(a2 + 52);
  sub_1A54E4334(v16, v17, v18);
  v19 = *(_QWORD *)(a1 + 40);
  v20 = *(unsigned int *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = v16;
  *(_DWORD *)(a1 + 48) = v17;
  v21 = *(_BYTE *)(a1 + 52);
  *(_BYTE *)(a1 + 52) = v18;
  sub_1A54E3458(v19, v20, v21);
  *(_BYTE *)(a1 + 53) = *(_BYTE *)(a2 + 53);
  return a1;
}

uint64_t assignWithTake for MessagesToRemoveHelper.Range(uint64_t a1, uint64_t a2)
{
  int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  int v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  int v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v4 = *(_DWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 20);
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(unsigned int *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = v4;
  v8 = *(_BYTE *)(a1 + 20);
  *(_BYTE *)(a1 + 20) = v5;
  sub_1A54E3458(v6, v7, v8);
  v9 = *(_DWORD *)(a2 + 32);
  v10 = *(_BYTE *)(a2 + 36);
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(unsigned int *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = v9;
  v13 = *(_BYTE *)(a1 + 36);
  *(_BYTE *)(a1 + 36) = v10;
  sub_1A54E3458(v11, v12, v13);
  v14 = *(_DWORD *)(a2 + 48);
  v15 = *(_BYTE *)(a2 + 52);
  v16 = *(_QWORD *)(a1 + 40);
  v17 = *(unsigned int *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = v14;
  v18 = *(_BYTE *)(a1 + 52);
  *(_BYTE *)(a1 + 52) = v15;
  sub_1A54E3458(v16, v17, v18);
  *(_BYTE *)(a1 + 53) = *(_BYTE *)(a2 + 53);
  return a1;
}

uint64_t getEnumTagSinglePayload for MessagesToRemoveHelper.Range(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 54))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 53);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for MessagesToRemoveHelper.Range(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 52) = 0;
    *(_DWORD *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 54) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 54) = 0;
    if (a2)
      *(_BYTE *)(result + 53) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for MessagesToRemoveHelper.Range()
{
  return &type metadata for MessagesToRemoveHelper.Range;
}

ValueMetadata *type metadata accessor for MessagesToRemoveHelper.ActionID()
{
  return &type metadata for MessagesToRemoveHelper.ActionID;
}

uint64_t assignWithCopy for MessagesToRemoveHelper(uint64_t a1, uint64_t a2)
{
  int v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_DWORD *)(a1 + 8) = v4;
  return a1;
}

ValueMetadata *type metadata accessor for MessagesToRemoveHelper()
{
  return &type metadata for MessagesToRemoveHelper;
}

ValueMetadata *type metadata accessor for MessagesToRemoveHelper.CommandID()
{
  return &type metadata for MessagesToRemoveHelper.CommandID;
}

unint64_t sub_1A5611860()
{
  unint64_t result;

  result = qword_1EE7A8D28;
  if (!qword_1EE7A8D28)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AA3F4, &type metadata for MessagesToRemoveHelper.Range);
    atomic_store(result, (unint64_t *)&qword_1EE7A8D28);
  }
  return result;
}

uint64_t sub_1A56118AC()
{
  uint64_t v0;

  return sub_1A5502970(*(void (**)(uint64_t *__return_ptr))(v0 + 16));
}

uint64_t sub_1A56118B4()
{
  uint64_t v0;

  return sub_1A5130F00(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1A56118BC()
{
  uint64_t v0;

  return sub_1A55029CC(*(void (**)(_QWORD *__return_ptr))(v0 + 16));
}

uint64_t sub_1A56118C4()
{
  uint64_t v0;

  return sub_1A5502A1C(*(void (**)(uint64_t *__return_ptr))(v0 + 16));
}

uint64_t sub_1A56118CC()
{
  uint64_t v0;

  return sub_1A5502A78(*(void (**)(uint64_t *__return_ptr))(v0 + 16));
}

uint64_t sub_1A56118D4()
{
  uint64_t v0;

  return sub_1A5578F38(*(void (**)(void))(v0 + 16));
}

uint64_t sub_1A56118E8()
{
  uint64_t v0;

  return sub_1A55E1944(20, *(_QWORD *)(v0 + 16), *(unsigned int *)(v0 + 24) | ((unint64_t)*(unsigned __int8 *)(v0 + 28) << 32));
}

uint64_t sub_1A5611914()
{
  uint64_t v0;

  return sub_1A55F2B50(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1A561191C()
{
  return swift_deallocObject();
}

_BYTE **sub_1A561192C(_BYTE **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1A5578FC8(a1, a2, a3, *(_BYTE *)(v3 + 16));
}

uint64_t sub_1A5611934()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611944()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611954()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611964@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_1A5578FA0(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_1A561196C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1A5578FDC(a1, a2, a3, *(void (**)(uint64_t *__return_ptr))(v3 + 16));
}

uint64_t sub_1A5611974()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611984()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611994(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  return sub_1A5579140(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_1A561199C()
{
  return swift_deallocObject();
}

uint64_t sub_1A56119AC()
{
  return swift_deallocObject();
}

uint64_t sub_1A56119BC()
{
  return swift_deallocObject();
}

uint64_t sub_1A56119CC()
{
  return swift_deallocObject();
}

uint64_t sub_1A56119DC@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1A55567EC(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_1A56119E4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1A5579034(a1, a2, a3, *(void (**)(uint64_t *__return_ptr))(v3 + 16));
}

uint64_t sub_1A56119EC()
{
  return swift_deallocObject();
}

uint64_t sub_1A56119FC()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611A0C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611A1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1A557908C(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_1A5611A24()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611A34()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611A44()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611A54()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611A64@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1A5578F78(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_1A5611A6C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611A7C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611A90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MailboxTaskLogger(0) - 8) + 80);
  return sub_1A5610EFC(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t sub_1A5611AD0()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611AE0()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611AF0()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611B00()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611B10()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611B20()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611B30()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611B40()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611B50()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611B60()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611B70()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611B80()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611B90()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611BA0()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611BB0()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611BC4()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611BD4()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611BE4()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611BF4()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611C04()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611C14()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611C24()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611C34()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611C44()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611C54()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611C64()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611C74()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611C84()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611C94()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611CA4()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611CB4()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611CC4()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611CD4()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611CE4()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611CF4()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611D04()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611D18()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611D2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(unsigned int *)(v0 + 24);
  v3 = *(unsigned __int8 *)(v0 + 28);
  sub_1A54E3414();
  return MessageIdentifierSet.count.getter(v1, v2 | (v3 << 32));
}

uint64_t sub_1A5611D74()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611D84()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611D94()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611DA4()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611DB4()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611DC4()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611DD4()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611DE4()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611DF4()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611E04()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611E14()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611E24()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611E34()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611E44()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611E54()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611E64()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611E74()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611E84()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611E94()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611EA4()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611EB4()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611EC4(uint64_t a1)
{
  sub_1A5611F04(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(unsigned int *)(a1 + 48) | ((unint64_t)*(unsigned __int8 *)(a1 + 52) << 32));
  return a1;
}

uint64_t sub_1A5611F04(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v9;

  if ((~a2 & 0xFF00000000) != 0)
  {
    v9 = BYTE4(a7);
    sub_1A54E3458(result, a2, SBYTE4(a2));
    return sub_1A54E3458(a6, a7, v9);
  }
  return result;
}

uint64_t sub_1A5611F58()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_491Tm()
{
  uint64_t v0;

  sub_1A54E3458(*(_QWORD *)(v0 + 16), *(unsigned int *)(v0 + 24), *(_BYTE *)(v0 + 28));
  sub_1A54E3458(*(_QWORD *)(v0 + 56), *(unsigned int *)(v0 + 64), *(_BYTE *)(v0 + 68));
  return swift_deallocObject();
}

uint64_t sub_1A5611FA8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_1A54E4334(v1, *(unsigned int *)(v0 + 24), *(_BYTE *)(v0 + 28));
  return v1;
}

uint64_t sub_1A5611FEC()
{
  return swift_deallocObject();
}

uint64_t sub_1A5611FFC()
{
  return swift_deallocObject();
}

uint64_t sub_1A561200C()
{
  return swift_deallocObject();
}

uint64_t sub_1A561201C()
{
  return swift_deallocObject();
}

uint64_t sub_1A561202C()
{
  return swift_deallocObject();
}

uint64_t sub_1A561203C()
{
  return swift_deallocObject();
}

uint64_t sub_1A561204C()
{
  return swift_deallocObject();
}

uint64_t sub_1A561205C()
{
  return swift_deallocObject();
}

uint64_t sub_1A561206C()
{
  return swift_deallocObject();
}

uint64_t sub_1A561207C()
{
  return swift_deallocObject();
}

uint64_t sub_1A561208C()
{
  return swift_deallocObject();
}

uint64_t sub_1A561209C()
{
  return swift_deallocObject();
}

uint64_t sub_1A56120AC()
{
  return swift_deallocObject();
}

uint64_t sub_1A56120BC()
{
  return swift_deallocObject();
}

uint64_t sub_1A56120CC()
{
  return swift_deallocObject();
}

uint64_t sub_1A56120DC()
{
  return swift_deallocObject();
}

uint64_t sub_1A56120EC()
{
  return swift_deallocObject();
}

uint64_t sub_1A56120FC()
{
  return swift_deallocObject();
}

uint64_t sub_1A561210C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5612124()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(unsigned int *)(v0 + 24) | ((unint64_t)*(unsigned __int8 *)(v0 + 28) << 32);
  sub_1A54E3414();
  return MessageIdentifierSet.count.getter(v1, v2);
}

uint64_t objectdestroy_27Tm()
{
  uint64_t v0;

  sub_1A54E3458(*(_QWORD *)(v0 + 16), *(unsigned int *)(v0 + 24), *(_BYTE *)(v0 + 28));
  return swift_deallocObject();
}

uint64_t sub_1A5612194()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_1A54E4334(v1, *(unsigned int *)(v0 + 24), *(_BYTE *)(v0 + 28));
  return v1;
}

uint64_t sub_1A56121CC()
{
  return swift_deallocObject();
}

uint64_t sub_1A56121DC()
{
  return swift_deallocObject();
}

uint64_t sub_1A56121EC()
{
  return swift_deallocObject();
}

uint64_t sub_1A56121FC()
{
  return swift_deallocObject();
}

uint64_t sub_1A561220C()
{
  return swift_deallocObject();
}

uint64_t sub_1A561221C()
{
  return swift_deallocObject();
}

uint64_t sub_1A561222C()
{
  return swift_deallocObject();
}

uint64_t sub_1A561223C()
{
  return swift_deallocObject();
}

uint64_t sub_1A561224C()
{
  return swift_deallocObject();
}

uint64_t sub_1A561225C()
{
  return swift_deallocObject();
}

uint64_t sub_1A561226C()
{
  return swift_deallocObject();
}

uint64_t sub_1A561227C()
{
  return swift_deallocObject();
}

uint64_t sub_1A561228C()
{
  return swift_deallocObject();
}

uint64_t sub_1A561229C()
{
  return swift_deallocObject();
}

uint64_t sub_1A56122AC()
{
  return swift_deallocObject();
}

uint64_t sub_1A56122BC()
{
  return swift_deallocObject();
}

uint64_t sub_1A56122CC()
{
  return swift_deallocObject();
}

uint64_t sub_1A56122DC()
{
  return swift_deallocObject();
}

uint64_t sub_1A56122EC()
{
  return swift_deallocObject();
}

uint64_t objectdestroyTm_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MailboxTaskLogger(0) - 8) + 80);
  v2 = v0 + ((v1 + 16) & ~v1);
  v3 = sub_1A594A764();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A5612394()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A56123B8()
{
  return swift_deallocObject();
}

uint64_t sub_1A56123C8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_1A56123D0()
{
  return swift_deallocObject();
}

uint64_t sub_1A56123E0()
{
  return swift_deallocObject();
}

uint64_t sub_1A56123F0()
{
  return swift_deallocObject();
}

uint64_t sub_1A5612400()
{
  return swift_deallocObject();
}

uint64_t sub_1A5612410()
{
  return swift_deallocObject();
}

uint64_t sub_1A5612420()
{
  return swift_deallocObject();
}

uint64_t sub_1A5612430()
{
  return swift_deallocObject();
}

uint64_t sub_1A5612440()
{
  return swift_deallocObject();
}

uint64_t sub_1A5612450()
{
  return swift_deallocObject();
}

uint64_t sub_1A5612460()
{
  return swift_deallocObject();
}

uint64_t sub_1A5612470()
{
  return swift_deallocObject();
}

uint64_t sub_1A5612480()
{
  return swift_deallocObject();
}

uint64_t sub_1A5612490()
{
  return swift_deallocObject();
}

uint64_t sub_1A56124A0()
{
  return swift_deallocObject();
}

uint64_t sub_1A56124B0()
{
  return swift_deallocObject();
}

uint64_t sub_1A56124C0()
{
  return swift_deallocObject();
}

uint64_t sub_1A56124D0()
{
  return swift_deallocObject();
}

uint64_t sub_1A56124E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t inited;

  if ((a1 & 0x100000000) == 0 && (_DWORD)a1 == -1)
    return sub_1A55C19FC(MEMORY[0x1E0DEE9D8]);
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AF10);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A59ABD10;
  sub_1A54E3414();
  static MessageIdentifier.... infix(_:_:)();
  v1 = sub_1A55C19FC(inited);
  swift_setDeallocating();
  return v1;
}

uint64_t sub_1A56125FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;

  v4 = *(_QWORD **)a2;
  v5 = *(_QWORD *)(*(_QWORD *)a2 + 16);
  if (!v5)
    return 1;
  v9 = 0;
  v10 = 0;
  while (v4[v9 + 4] != a1)
  {
    ++v10;
    v9 += 7;
    if (v5 == v10)
      return 1;
  }
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1A554B7AC(v4);
    v4 = (_QWORD *)result;
  }
  if (v10 >= v4[2])
  {
    __break(1u);
  }
  else
  {
    BYTE5(v4[v9 + 10]) = 1;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
    MessageIdentifierSet.formUnion(_:)(a3, a4 & 0xFFFFFFFFFFLL);
    result = 0;
    *(_QWORD *)a2 = v4;
  }
  return result;
}

uint64_t sub_1A56126CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;

  v4 = *(_QWORD **)a2;
  v5 = *(_QWORD *)(*(_QWORD *)a2 + 16);
  if (!v5)
    return 1;
  v9 = 0;
  v10 = 0;
  while (v4[v9 + 4] != a1)
  {
    ++v10;
    v9 += 7;
    if (v5 == v10)
      return 1;
  }
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1A554B7AC(v4);
    v4 = (_QWORD *)result;
  }
  if (v10 >= v4[2])
  {
    __break(1u);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
    MessageIdentifierSet.formUnion(_:)(a3, a4 & 0xFFFFFFFFFFLL);
    result = 0;
    *(_QWORD *)a2 = v4;
  }
  return result;
}

ValueMetadata *type metadata accessor for MessagesToRemoveHelper.Index()
{
  return &type metadata for MessagesToRemoveHelper.Index;
}

unint64_t sub_1A56127A8()
{
  unint64_t result;

  result = qword_1EE7A8D30;
  if (!qword_1EE7A8D30)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AA464, &type metadata for MessagesToRemoveHelper.Index);
    atomic_store(result, (unint64_t *)&qword_1EE7A8D30);
  }
  return result;
}

uint64_t sub_1A5612A7C@<X0>(__int128 *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  int v16;
  __int128 v17;

  v5 = a2 & 1;
  *(_QWORD *)(a3 + 96) = sub_1A54F8ABC((uint64_t)&unk_1E4EF2470);
  *(_BYTE *)(a3 + 104) = 0;
  *(_QWORD *)(a3 + 112) = 0;
  *(_BYTE *)(a3 + 120) = 0;
  v6 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a3 + 128) = sub_1A561B454(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)(a3 + 136) = v7;
  *(_QWORD *)(a3 + 144) = v8;
  *(_QWORD *)(a3 + 152) = v9;
  *(_QWORD *)(a3 + 160) = v6;
  *(_QWORD *)(a3 + 168) = v6;
  v10 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(a3 + 176) = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(a3 + 184) = v10;
  v12 = a1[1];
  v17 = *a1;
  v11 = v17;
  v15 = *((_QWORD *)a1 + 3);
  v16 = *((_DWORD *)a1 + 8);
  *(_DWORD *)(a3 + 40) = v16;
  *(_OWORD *)(a3 + 24) = v12;
  *(_OWORD *)(a3 + 8) = v11;
  *(_QWORD *)(a3 + 48) = &type metadata for MoveAndCopyMessages;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54FCA28((uint64_t)&v15);
  sub_1A54FCA28((uint64_t)&v17);
  sub_1A550F734();
  sub_1A594C6B4();
  *(_BYTE *)(a3 + 105) = v5;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796240);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1A59ABD10;
  *(_QWORD *)(v13 + 32) = &type metadata for NotifyMessagesVanished;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594C6B4();
  sub_1A54F81BC((uint64_t)&v17);
  result = sub_1A54F81BC((uint64_t)&v15);
  *(_QWORD *)a3 = v13;
  return result;
}

uint64_t sub_1A5612BF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  int64_t v22;

  v4 = a1 + 56;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 56);
  v22 = (unint64_t)(v5 + 63) >> 6;
  result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v9 = 0;
  while (1)
  {
    if (v7)
    {
      v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v11 = v10 | (v9 << 6);
      goto LABEL_21;
    }
    v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v12 >= v22)
      goto LABEL_27;
    v13 = *(_QWORD *)(v4 + 8 * v12);
    ++v9;
    if (!v13)
    {
      v9 = v12 + 1;
      if (v12 + 1 >= v22)
        goto LABEL_27;
      v13 = *(_QWORD *)(v4 + 8 * v9);
      if (!v13)
      {
        v9 = v12 + 2;
        if (v12 + 2 >= v22)
          goto LABEL_27;
        v13 = *(_QWORD *)(v4 + 8 * v9);
        if (!v13)
        {
          v9 = v12 + 3;
          if (v12 + 3 >= v22)
            goto LABEL_27;
          v13 = *(_QWORD *)(v4 + 8 * v9);
          if (!v13)
          {
            v14 = v12 + 4;
            if (v14 >= v22)
            {
LABEL_27:
              swift_release();
              return 1;
            }
            v13 = *(_QWORD *)(v4 + 8 * v14);
            v9 = v14;
            if (!v13)
              break;
          }
        }
      }
    }
LABEL_20:
    v7 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v9 << 6);
LABEL_21:
    v15 = *(_QWORD *)(a2 + 24);
    if (!*(_QWORD *)(v15 + 16))
      goto LABEL_26;
    v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 24 * v11);
    v17 = *v16;
    v18 = v16[1];
    sub_1A54FA300(*v16, v18);
    sub_1A54FDDD4(v17, v18);
    if ((v20 & 1) == 0)
    {
      sub_1A54FA2A8(v17, v18);
LABEL_26:
      swift_release();
      return 0;
    }
    v21 = *(_BYTE *)(*(_QWORD *)(v15 + 56) + v19);
    result = sub_1A54FA2A8(v17, v18);
    if ((v21 & 1) == 0)
      goto LABEL_26;
  }
  while (1)
  {
    v9 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v9 >= v22)
      goto LABEL_27;
    v13 = *(_QWORD *)(v4 + 8 * v9);
    ++v14;
    if (v13)
      goto LABEL_20;
  }
LABEL_29:
  __break(1u);
  return result;
}

void sub_1A5612DE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X10 }
}

void sub_1A5612E20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  sub_1A594CE88();
  sub_1A54E3414();
  MessageIdentifierSet.hash(into:)(v3, a2, v2 & 0xFFFFFFFFFFLL);
}

uint64_t sub_1A5612E58()
{
  uint64_t v0;
  uint64_t v1;

  sub_1A594CE88();
  sub_1A594CE88();
  return sub_1A54F578C(v0, v1);
}

uint64_t sub_1A5612E84()
{
  return sub_1A594CE88();
}

uint64_t sub_1A5612E9C()
{
  uint64_t v0;
  uint64_t v1;

  sub_1A594CE88();
  sub_1A594CE88();
  return sub_1A54F5948(v0, v1);
}

void sub_1A5612EC8(uint64_t a1, uint64_t a2)
{
  sub_1A594CE64();
  __asm { BR              X10 }
}

uint64_t sub_1A5612F10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  sub_1A594CE88();
  sub_1A54E3414();
  MessageIdentifierSet.hash(into:)((uint64_t)&v3, v1, v0 & 0xFFFFFFFFFFLL);
  return sub_1A594CED0();
}

void sub_1A5612FC0()
{
  uint64_t *v0;

  sub_1A5612EC8(*v0, v0[1]);
}

void sub_1A5612FCC(uint64_t a1)
{
  uint64_t *v1;

  sub_1A5612DE8(a1, *v1, v1[1]);
}

void sub_1A5612FD8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_1A594CE64();
  __asm { BR              X10 }
}

uint64_t sub_1A5613018()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  sub_1A594CE88();
  sub_1A54E3414();
  MessageIdentifierSet.hash(into:)((uint64_t)&v3, v1, v0 & 0xFFFFFFFFFFLL);
  return sub_1A594CED0();
}

void sub_1A56130C8(uint64_t *a1)
{
  sub_1A561AAD0(*a1, a1[1]);
}

uint64_t sub_1A56130E4()
{
  uint64_t result;

  result = sub_1A54F8ABC((uint64_t)&unk_1E4E6C828);
  qword_1EE7F96B8 = result;
  return result;
}

uint64_t sub_1A5613108(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  _BYTE v32[200];

  v2 = v1;
  v4 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A594A764();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))(v11, a1, v7, v9);
  sub_1A55034B8(a1, (uint64_t)v6, type metadata accessor for MailboxTaskLogger);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  sub_1A550F95C(v2, (uint64_t)v32);
  v12 = sub_1A594A74C();
  v13 = sub_1A594C030();
  v14 = v13;
  if (os_log_type_enabled(v12, v13))
  {
    v15 = swift_slowAlloc();
    v27 = v14;
    v16 = v15;
    v26 = swift_slowAlloc();
    v31 = v26;
    *(_DWORD *)v16 = 68159491;
    LODWORD(v29) = 2;
    v28 = v7;
    sub_1A594C3CC();
    *(_WORD *)(v16 + 8) = 256;
    v17 = &v6[*(int *)(v4 + 20)];
    LOBYTE(v29) = *v17;
    sub_1A594C3CC();
    *(_WORD *)(v16 + 11) = 2082;
    v25 = v8;
    v19 = *((_QWORD *)v17 + 1);
    v18 = *((_QWORD *)v17 + 2);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v29 = sub_1A55791B0(v19, v18, &v31);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 21) = 1040;
    LODWORD(v29) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v16 + 27) = 512;
    LOWORD(v29) = *((_WORD *)v17 + 12);
    sub_1A594C3CC();
    *(_WORD *)(v16 + 31) = 2160;
    v29 = 0x786F626C69616DLL;
    sub_1A594C3CC();
    *(_WORD *)(v16 + 41) = 2085;
    v20 = *((_DWORD *)v17 + 10);
    v29 = *((_QWORD *)v17 + 4);
    v30 = v20;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v21 = sub_1A594B4A8();
    v29 = sub_1A55791B0(v21, v22, &v31);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC((uint64_t)v6, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v16 + 51) = 1024;
    LODWORD(v17) = (v32[105] & 1) == 0;
    sub_1A550FA2C((uint64_t)v32);
    LODWORD(v29) = (_DWORD)v17;
    sub_1A594C3CC();
    _os_log_impl(&dword_1A4F90000, v12, (os_log_type_t)v27, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task. Server supports move: %{BOOL}d", (uint8_t *)v16, 0x39u);
    v23 = v26;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v23, -1, -1);
    MEMORY[0x1A85B1964](v16, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v11, v28);
  }
  else
  {
    sub_1A550FA2C((uint64_t)v32);
    sub_1A55034FC((uint64_t)v6, type metadata accessor for MailboxTaskLogger);

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
}

uint64_t sub_1A5613514@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  _QWORD v41[2];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54[4];

  v41[1] = a4;
  v45 = a1;
  v43 = a5;
  v52 = type metadata accessor for TaskHistory.Running(0);
  v42 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v8 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v41 - v10;
  v12 = type metadata accessor for TaskHistory.Previous(0);
  v48 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v41 - v16;
  v18 = sub_1A55B0094(0, a3);
  v19 = *(_QWORD *)(v18 + 16);
  if (!v19)
  {
LABEL_24:
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  v20 = 0;
  v41[0] = v18;
  v46 = v18 + 32;
  v50 = *(_QWORD *)(a2 + 16);
  v47 = a2;
  v44 = v19;
  while (!v50)
  {
LABEL_5:
    if (++v20 == v19)
      goto LABEL_24;
  }
  v49 = v20;
  v53 = *(_DWORD *)(v46 + 4 * v20);
  v21 = v48;
  v22 = a2 + ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80));
  swift_bridgeObjectRetain_n();
  v23 = *(_QWORD *)(v21 + 72);
  v24 = v50;
  while (1)
  {
    sub_1A55034B8(v22, (uint64_t)v17, type metadata accessor for TaskHistory.Previous);
    sub_1A55034B8((uint64_t)v17, (uint64_t)v14, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() == 1)
      break;
    sub_1A55034FC((uint64_t)v14, type metadata accessor for TaskHistory.Previous);
LABEL_9:
    sub_1A55034FC((uint64_t)v17, type metadata accessor for TaskHistory.Previous);
    v22 += v23;
    if (!--v24)
    {
      a2 = v47;
LABEL_4:
      v19 = v44;
      v20 = v49;
      swift_bridgeObjectRelease_n();
      goto LABEL_5;
    }
  }
  v25 = (uint64_t)v11;
  v26 = *((_DWORD *)v14 + 2);
  swift_release();
  v27 = v26 == v53;
  v11 = (char *)v25;
  if (!v27)
    goto LABEL_9;
  sub_1A55034FC((uint64_t)v17, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease_n();
  v28 = *(_QWORD *)(v45 + 16);
  if (v28)
  {
    v29 = v42;
    v30 = v45 + ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80));
    swift_bridgeObjectRetain_n();
    v51 = *(_QWORD *)(v29 + 72);
    do
    {
      sub_1A55034B8(v30, (uint64_t)v11, type metadata accessor for TaskHistory.Running);
      sub_1A55034B8((uint64_t)v11, (uint64_t)v8, type metadata accessor for TaskHistory.Running);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v31 = *((_DWORD *)v8 + 1);
        swift_release();
        v27 = v31 == v53;
        v11 = (char *)v25;
        if (v27)
        {
          sub_1A55034FC(v25, type metadata accessor for TaskHistory.Running);
          a2 = v47;
          goto LABEL_4;
        }
      }
      else
      {
        sub_1A55034FC((uint64_t)v8, type metadata accessor for TaskHistory.Running);
      }
      sub_1A55034FC((uint64_t)v11, type metadata accessor for TaskHistory.Running);
      v30 += v51;
      --v28;
    }
    while (v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v32 = sub_1A5613908();
  if (v33 <= 0xFFFFFFFBFFFFFFFFLL)
  {
    v35 = v32;
    v36 = v33;
    v54[0] = v32;
    v54[1] = v33;
    v54[2] = v34;
    v37 = v43;
    sub_1A5613BBC(v54, v43);
    v38 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7978E0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v37, 0, 1, v38);
    return sub_1A561EBB8(v35, v36);
  }
LABEL_25:
  v40 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7978E0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v43, 1, 1, v40);
}

uint64_t sub_1A5613908()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;

  v1 = (uint64_t)v0;
  v2 = *v0;
  sub_1A5553CA0();
  swift_getKeyPath();
  swift_retain();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v3 = sub_1A561ADD8(v2);
  swift_release_n();
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v5 = (uint64_t *)(v3 + 48);
    while (1)
    {
      v10 = *(v5 - 2);
      v11 = *(v5 - 1);
      v12 = *v5;
      v13 = *(_QWORD *)(*(_QWORD *)(v1 + 24) + 16);
      sub_1A54FA300(v10, v11);
      if (!v13 || (sub_1A54FDDD4(v10, v11), (v14 & 1) == 0))
      {
        v6 = v1;
        v7 = *(_QWORD *)(v1 + 16);
        sub_1A54FA300(v10, v11);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v17 = v10;
        v8 = sub_1A5650808(v10, v11, v12, v7);
        v1 = v6;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v9 = sub_1A5612BF8(v8, v6);
        v10 = v17;
        swift_bridgeObjectRelease();
        sub_1A54FA2A8(v17, v11);
        if ((v9 & 1) != 0)
          break;
      }
      v5 += 3;
      sub_1A54FA2A8(v10, v11);
      if (!--v4)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    sub_1A54FA300(v17, v11);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *(_QWORD *)(v6 + 24);
    *(_QWORD *)(v6 + 24) = 0x8000000000000000;
    sub_1A55B2C34(0, v17, v11, v12, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v6 + 24) = v18;
    swift_bridgeObjectRelease();
    sub_1A54FA2A8(v17, v11);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_10:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v10;
}

void sub_1A5613BBC(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD v19[10];
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;

  v22 = a2;
  v20 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v20);
  MEMORY[0x1E0C80A78](v3);
  v19[8] = (char *)v19 - v4;
  MEMORY[0x1E0C80A78](v5);
  v19[9] = (char *)v19 - v6;
  MEMORY[0x1E0C80A78](v7);
  v19[7] = (char *)v19 - v8;
  v9 = sub_1A594A764();
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v12);
  v13 = type metadata accessor for ClientCommand(0);
  MEMORY[0x1E0C80A78](v13);
  v21 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a1;
  v16 = a1[1];
  v26 = a1[2];
  v24 = v15;
  v25 = v16;
  v17 = (char *)sub_1A5613D88 + 4 * word_1A59AA51C[v16 >> 62];
  v23 = v18;
  __asm { BR              X10 }
}

uint64_t sub_1A5613D88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  NSObject *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  const char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v5 = *(_QWORD *)(v4 - 112);
  v6 = HIDWORD(v5);
  *(_QWORD *)(v4 - 200) = v2;
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v8 = v0;
  v7(v3, v1, v0);
  v9 = *(_QWORD *)(v4 - 184);
  sub_1A55034B8(v1, v9, type metadata accessor for MailboxTaskLogger);
  v10 = *(_QWORD *)(v4 - 120);
  sub_1A54E4334(v10, v5, SBYTE4(v5));
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  sub_1A54FA300(v10, v5);
  sub_1A54E4334(v10, v5, SBYTE4(v5));
  v11 = sub_1A594A74C();
  v12 = sub_1A594C030();
  v13 = v12;
  if (os_log_type_enabled(v11, v12))
  {
    v14 = swift_slowAlloc();
    *(_QWORD *)(v4 - 176) = v11;
    v15 = v14;
    v16 = swift_slowAlloc();
    *(_QWORD *)(v4 - 168) = v16;
    *(_QWORD *)(v4 - 72) = v16;
    *(_DWORD *)v15 = 68159491;
    *(_DWORD *)(v4 - 96) = 2;
    *(_DWORD *)(v4 - 208) = v13;
    sub_1A594C3CC();
    *(_WORD *)(v15 + 8) = 256;
    v17 = *(int *)(*(_QWORD *)(v4 - 160) + 20);
    *(_QWORD *)(v4 - 192) = v8;
    *(_QWORD *)(v4 - 160) = v3;
    v18 = v9 + v17;
    *(_BYTE *)(v4 - 96) = *(_BYTE *)(v9 + v17);
    sub_1A594C3CC();
    *(_WORD *)(v15 + 11) = 2082;
    v19 = *(_QWORD *)(v18 + 8);
    v20 = *(_QWORD *)(v18 + 16);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    *(_QWORD *)(v4 - 96) = sub_1A55791B0(v19, v20, (uint64_t *)(v4 - 72));
    v10 = *(_QWORD *)(v4 - 120);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 21) = 1040;
    *(_DWORD *)(v4 - 96) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v15 + 27) = 512;
    *(_WORD *)(v4 - 96) = *(_WORD *)(v18 + 24);
    sub_1A594C3CC();
    *(_WORD *)(v15 + 31) = 2160;
    *(_QWORD *)(v4 - 96) = 0x786F626C69616DLL;
    sub_1A594C3CC();
    *(_WORD *)(v15 + 41) = 2085;
    v21 = *(_DWORD *)(v18 + 40);
    *(_QWORD *)(v4 - 96) = *(_QWORD *)(v18 + 32);
    *(_DWORD *)(v4 - 88) = v21;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v22 = sub_1A594B4A8();
    *(_QWORD *)(v4 - 96) = sub_1A55791B0(v22, v23, (uint64_t *)(v4 - 72));
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC(v9, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v15 + 51) = 2082;
    sub_1A54E4334(v10, *(_QWORD *)(v4 - 112), v6);
    sub_1A54E3414();
    MessageIdentifierSet.debugDescription.getter();
    v25 = v24;
    v27 = v26;
    sub_1A54FA2A8(v10, *(_QWORD *)(v4 - 112));
    *(_QWORD *)(v4 - 96) = sub_1A55791B0(v25, v27, (uint64_t *)(v4 - 72));
    v5 = *(_QWORD *)(v4 - 112);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A54FA2A8(v10, v5);
    sub_1A54FA2A8(v10, v5);
    v28 = *(NSObject **)(v4 - 176);
    _os_log_impl(&dword_1A4F90000, v28, (os_log_type_t)*(_DWORD *)(v4 - 208), "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Marking source messages %{public}s as deleted.", (uint8_t *)v15, 0x3Du);
    v29 = *(_QWORD *)(v4 - 168);
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v29, -1, -1);
    MEMORY[0x1A85B1964](v15, -1, -1);

    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v4 - 200) + 8))(*(_QWORD *)(v4 - 160), *(_QWORD *)(v4 - 192));
  }
  else
  {
    sub_1A55034FC(v9, type metadata accessor for MailboxTaskLogger);
    sub_1A54FA2A8(v10, v5);
    sub_1A54FA2A8(v10, v5);

    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 200) + 8))(v3, v8);
  }
  v30 = *(uint64_t **)(v4 - 144);
  v31 = *(_QWORD *)(v4 - 152);
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AF48);
  v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1A59ABD10;
  v33 = Flag.deleted.unsafeMutableAddressor();
  v34 = *((_QWORD *)v33 + 1);
  *(_QWORD *)(v32 + 32) = *(_QWORD *)v33;
  *(_QWORD *)(v32 + 40) = v34;
  *(_QWORD *)v31 = v10;
  *(_DWORD *)(v31 + 8) = v5;
  *(_BYTE *)(v31 + 12) = v6;
  *(_WORD *)(v31 + 16) = 256;
  *(_QWORD *)(v31 + 24) = v32;
  swift_storeEnumTagMultiPayload();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v35 = *(_QWORD *)(v4 - 104);
  v36 = (uint64_t)v30 + *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7978E0) + 48);
  *v30 = v10;
  v30[1] = v5;
  v30[2] = v35;
  sub_1A54E68A0(v31, v36);
  return sub_1A54FA300(v10, v5);
}

void sub_1A5614F84(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD v26[11];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v32 = a7;
  v33 = a6;
  v30 = a4;
  v28 = a5;
  v29 = a9;
  v27 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v27);
  v36 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v26[9] = (char *)v26 - v15;
  MEMORY[0x1E0C80A78](v16);
  v26[7] = (char *)v26 - v17;
  MEMORY[0x1E0C80A78](v18);
  v37 = sub_1A594A764();
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  MEMORY[0x1E0C80A78](v19);
  v26[10] = (char *)v26 - v20;
  MEMORY[0x1E0C80A78](v21);
  v26[8] = (char *)v26 - v22;
  MEMORY[0x1E0C80A78](v23);
  sub_1A54FA300(a1, a2);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v39 = *(_QWORD *)(v9 + 152);
  *(_QWORD *)(v9 + 152) = 0x8000000000000000;
  sub_1A55B2C34(1, a1, a2, a3, isUniquelyReferenced_nonNull_native);
  v31 = v9;
  *(_QWORD *)(v9 + 152) = v39;
  swift_bridgeObjectRelease();
  v38 = a1;
  sub_1A54FA2A8(a1, a2);
  v25 = (char *)&loc_1A5615180 + dword_1A5616EDC[a2 >> 62];
  v35 = a3;
  __asm { BR              X9 }
}

uint64_t sub_1A5615194()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int v14;
  unint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, _QWORD);
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  int v29;
  _BOOL4 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  int v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  NSObject *v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int32x2_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t, _QWORD);
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  NSObject *v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  int v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  int64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  int32x2_t *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  char v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  char v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  NSObject *v126;
  os_log_type_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  int v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  NSObject *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  NSObject *v150;
  os_log_type_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  int v158;
  uint64_t v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  unint64_t v169;
  NSObject *v170;
  uint64_t v171;
  unint64_t v172;
  _QWORD *v173;
  uint64_t result;
  unint64_t v175;
  unint64_t v176;
  _QWORD *v177;
  unint64_t v178;
  uint64_t v179;
  unint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  unsigned int *v188;
  unint64_t v189;
  BOOL v190;
  uint64_t v191;
  uint64_t v192;
  unsigned int *v193;
  unint64_t v194;
  uint64_t v195;
  uint64_t v196;
  _QWORD *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  NSObject *v202;
  uint64_t v203;
  unint64_t v204;
  unint64_t v205;
  uint64_t v206;
  uint64_t v207;
  unsigned int *v208;
  unint64_t v209;
  uint64_t v210;
  uint64_t v211;
  unsigned int *v212;
  unint64_t v213;
  uint64_t v214;
  uint64_t v215;

  v7 = v5;
  *(_QWORD *)(v6 - 272) = v2;
  *(_QWORD *)(v6 - 200) = v0;
  *(_QWORD *)(v6 - 280) = v0 & 0x3FFFFFFFFFFFFFFFLL;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v8 = v4;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v9 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v10 = sub_1A55FDDC0(v9);
  v12 = v11;
  v13 = HIDWORD(v11);
  v14 = *(_DWORD *)(v6 - 176);
  v15 = *(_QWORD *)(v6 - 192);
  v16 = *(_QWORD *)(v6 - 144);
  *(_QWORD *)(v6 - 288) = v8;
  if ((_BYTE)v14)
  {
    v17 = *(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v6 - 160) + 16);
    *(_QWORD *)(v6 - 296) = v1;
    v18 = v10;
    v19 = *(_QWORD *)(v6 - 208);
    v20 = v14;
    v17(v1, v19, *(_QWORD *)(v6 - 136));
    sub_1A55034B8(v19, v16, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    *(_DWORD *)(v6 - 248) = v20;
    if (v20 == 2)
      v21 = 0xE300000000000000;
    else
      v21 = 0xE200000000000000;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A55235A0(v15);
    v22 = *(_QWORD *)(v6 - 168);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v23 = *(_QWORD *)(v6 - 128);
    v24 = *(_QWORD *)(v6 - 200);
    sub_1A54FA300(v23, v24);
    sub_1A54E4334(v18, v12, v13);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A55235A0(v15);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    *(_QWORD *)(v6 - 200) = v24;
    sub_1A54FA300(v23, v24);
    *(_QWORD *)(v6 - 208) = v18;
    sub_1A54E4334(v18, v12, v13);
    *(_QWORD *)(v6 - 240) = v21;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A55235A0(v15);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v25 = *(_QWORD *)(v6 - 296);
    sub_1A559C2E8(v15, *(_QWORD *)(v6 - 216), v22, *(_DWORD *)(v6 - 176));
    v26 = v15;
    v27 = sub_1A594A74C();
    v28 = sub_1A594C018();
    v29 = v28;
    *(_QWORD *)(v6 - 176) = v27;
    v30 = os_log_type_enabled(v27, v28);
    *(_QWORD *)(v6 - 224) = v13;
    *(_QWORD *)(v6 - 304) = v12;
    if (v30)
    {
      v31 = 20302;
      if (*(_DWORD *)(v6 - 248) == 2)
        v31 = 4473154;
      *(_QWORD *)(v6 - 264) = v31;
      v32 = swift_slowAlloc();
      *(_DWORD *)(v6 - 256) = v29;
      v33 = v32;
      v34 = swift_slowAlloc();
      *(_QWORD *)(v6 - 248) = v34;
      *(_QWORD *)(v6 - 72) = v34;
      *(_DWORD *)v33 = 68160259;
      *(_DWORD *)(v6 - 104) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v33 + 8) = 256;
      v35 = *(_QWORD *)(v6 - 144) + *(int *)(*(_QWORD *)(v6 - 232) + 20);
      *(_BYTE *)(v6 - 104) = *(_BYTE *)v35;
      sub_1A594C3CC();
      *(_WORD *)(v33 + 11) = 2082;
      v36 = *(_QWORD *)(v35 + 8);
      v37 = *(_QWORD *)(v35 + 16);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      *(_QWORD *)(v6 - 104) = sub_1A55791B0(v36, v37, (uint64_t *)(v6 - 72));
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 21) = 1040;
      *(_DWORD *)(v6 - 104) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v33 + 27) = 512;
      *(_WORD *)(v6 - 104) = *(_WORD *)(v35 + 24);
      sub_1A594C3CC();
      *(_WORD *)(v33 + 31) = 2160;
      *(_QWORD *)(v6 - 104) = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v33 + 41) = 2085;
      v38 = *(_DWORD *)(v35 + 40);
      *(_QWORD *)(v6 - 104) = *(_QWORD *)(v35 + 32);
      *(_DWORD *)(v6 - 96) = v38;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v39 = sub_1A594B4A8();
      *(_QWORD *)(v6 - 104) = sub_1A55791B0(v39, v40, (uint64_t *)(v6 - 72));
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC(*(_QWORD *)(v6 - 144), type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v33 + 51) = 2082;
      v41 = *(_QWORD *)(v6 - 272);
      if ((_DWORD)v41 == 2)
        v42 = 1163284301;
      else
        v42 = 1498435395;
      *(_QWORD *)(v6 - 104) = sub_1A55791B0(v42, 0xE400000000000000, (uint64_t *)(v6 - 72));
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      v43 = *(_QWORD *)(v6 - 128);
      v44 = *(_QWORD *)(v6 - 200);
      sub_1A54FA2A8(v43, v44);
      sub_1A54FA2A8(v43, v44);
      *(_WORD *)(v33 + 61) = 2082;
      v45 = *(_QWORD *)(v6 - 208);
      sub_1A54E4334(v45, v12, *(_QWORD *)(v6 - 224));
      sub_1A54E3414();
      MessageIdentifierSet.debugDescription.getter();
      v47 = v46;
      v49 = v48;
      sub_1A54E3458(v45, v12, *(_QWORD *)(v6 - 224));
      *(_QWORD *)(v6 - 104) = sub_1A55791B0(v47, v49, (uint64_t *)(v6 - 72));
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A54E3458(v45, v12, *(_QWORD *)(v6 - 224));
      sub_1A54E3458(v45, v12, *(_QWORD *)(v6 - 224));
      *(_WORD *)(v33 + 71) = 2082;
      v50 = *(_QWORD *)(v6 - 240);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      *(_QWORD *)(v6 - 104) = sub_1A55791B0(*(_QWORD *)(v6 - 264), v50, (uint64_t *)(v6 - 72));
      sub_1A594C3CC();
      swift_bridgeObjectRelease_n();
      sub_1A5524084(v26);
      swift_bridgeObjectRelease();
      v51 = *(void **)(v6 - 168);
      swift_bridgeObjectRelease();
      sub_1A5524084(v26);
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 81) = 2080;
      sub_1A55235A0(v26);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      ResponseText.debugDescription.getter(v26, *(_QWORD *)(v6 - 216), v51);
      v53 = v52;
      v55 = v54;
      sub_1A5524084(v26);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v6 - 104) = sub_1A55791B0(v53, v55, (uint64_t *)(v6 - 72));
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A5524084(v26);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A5524084(v26);
      swift_bridgeObjectRelease();
      v56 = *(NSObject **)(v6 - 176);
      _os_log_impl(&dword_1A4F90000, v56, (os_log_type_t)*(_DWORD *)(v6 - 256), "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Server failed to %{public}s messages %{public}s: %{public}s %s", (uint8_t *)v33, 0x5Bu);
      v57 = *(_QWORD *)(v6 - 248);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v57, -1, -1);
      MEMORY[0x1A85B1964](v33, -1, -1);

      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v6 - 160) + 8))(*(_QWORD *)(v6 - 296), *(_QWORD *)(v6 - 136));
      v59 = *(_QWORD *)(v6 - 128);
      v58 = *(_QWORD *)(v6 - 120);
      v60 = *(_QWORD *)(v6 - 184);
      v61 = *(_QWORD *)(v6 - 280);
      if ((_DWORD)v41 != 2)
        goto LABEL_12;
    }
    else
    {
      sub_1A55034FC(*(_QWORD *)(v6 - 144), type metadata accessor for MailboxTaskLogger);
      v101 = *(_QWORD *)(v6 - 128);
      v102 = *(_QWORD *)(v6 - 200);
      sub_1A54FA2A8(v101, v102);
      sub_1A54FA2A8(v101, v102);
      v103 = *(_QWORD *)(v6 - 208);
      sub_1A54E3458(v103, v12, v13);
      sub_1A54E3458(v103, v12, v13);
      swift_bridgeObjectRelease();
      sub_1A5524084(v26);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A5524084(v26);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A5524084(v26);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A5524084(v26);

      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v6 - 160) + 8))(v25, *(_QWORD *)(v6 - 136));
      v59 = v101;
      v58 = *(_QWORD *)(v6 - 120);
      v60 = *(_QWORD *)(v6 - 184);
      v61 = *(_QWORD *)(v6 - 280);
      if (*(_QWORD *)(v6 - 272) != 2)
      {
LABEL_12:
        sub_1A54E3458(*(_QWORD *)(v6 - 208), *(_QWORD *)(v6 - 304), *(_QWORD *)(v6 - 224));
LABEL_29:
        v111 = sub_1A5619DE8(*(_QWORD *)(v6 - 288), 0, 1);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A54F2A14(v6 - 104, v59, v61);
LABEL_42:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_43;
      }
    }
    v104 = *(int32x2_t **)(v6 - 208);
    v105 = *(_QWORD *)(v6 - 304);
    v106 = *(_QWORD *)(v6 - 224);
    sub_1A54E4334((uint64_t)v104, v105, v106);
    v107 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v108 = sub_1A561AC04(v107, v104, v105 & 0xFFFFFFFFFFLL);
    v110 = v109;
    sub_1A54E3458((uint64_t)v104, v105, v106);
    sub_1A54E3458((uint64_t)v104, v105, v106);
    swift_bridgeObjectRelease();
    if ((v110 & 1) == 0)
    {
      sub_1A55A2AE8(v108);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v59 = *(_QWORD *)(v6 - 128);
    v60 = *(_QWORD *)(v6 - 184);
    goto LABEL_29;
  }
  v62 = v3;
  v63 = (int32x2_t *)v10;
  v64 = v11;
  if ((~v15 & 0xF000000000000007) != 0 && ((v15 >> 59) & 0x1E | (v15 >> 2) & 1) == 8)
  {
    *(_DWORD *)(v6 - 176) = *(_DWORD *)((v15 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
    v66 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
    v65 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
    v67 = *(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v6 - 160) + 16);
    *(_QWORD *)(v6 - 312) = v7;
    v68 = *(_QWORD *)(v6 - 208);
    v67(v7, v68, *(_QWORD *)(v6 - 136));
    sub_1A55034B8(v68, v62, type metadata accessor for MailboxTaskLogger);
    sub_1A55235A0(v15);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v59 = *(_QWORD *)(v6 - 128);
    v69 = *(_QWORD *)(v6 - 200);
    sub_1A54FA300(v59, v69);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    *(_QWORD *)(v6 - 200) = v69;
    sub_1A54FA300(v59, v69);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    *(_QWORD *)(v6 - 144) = v65;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    *(_QWORD *)(v6 - 208) = v63;
    v70 = v64;
    sub_1A54E4334((uint64_t)v63, v64, v13);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v71 = v62;
    v58 = *(_QWORD *)(v6 - 312);
    v72 = sub_1A594A74C();
    v73 = sub_1A594C00C();
    if (os_log_type_enabled(v72, (os_log_type_t)v73))
    {
      *(_QWORD *)(v6 - 256) = v72;
      *(_DWORD *)(v6 - 240) = v73;
      *(_QWORD *)(v6 - 216) = v66;
      v74 = swift_slowAlloc();
      v75 = swift_slowAlloc();
      *(_QWORD *)(v6 - 248) = v75;
      *(_QWORD *)(v6 - 72) = v75;
      *(_DWORD *)v74 = 68160259;
      *(_DWORD *)(v6 - 104) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v74 + 8) = 256;
      v76 = v71 + *(int *)(*(_QWORD *)(v6 - 232) + 20);
      *(_BYTE *)(v6 - 104) = *(_BYTE *)v76;
      sub_1A594C3CC();
      *(_WORD *)(v74 + 11) = 2082;
      *(_QWORD *)(v6 - 304) = v70;
      v77 = *(_QWORD *)(v76 + 8);
      v78 = *(_QWORD *)(v76 + 16);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      *(_QWORD *)(v6 - 104) = sub_1A55791B0(v77, v78, (uint64_t *)(v6 - 72));
      *(_QWORD *)(v6 - 224) = v13;
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v74 + 21) = 1040;
      *(_DWORD *)(v6 - 104) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v74 + 27) = 512;
      *(_WORD *)(v6 - 104) = *(_WORD *)(v76 + 24);
      sub_1A594C3CC();
      *(_WORD *)(v74 + 31) = 2160;
      *(_QWORD *)(v6 - 104) = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v74 + 41) = 2085;
      v79 = *(_DWORD *)(v76 + 40);
      *(_QWORD *)(v6 - 104) = *(_QWORD *)(v76 + 32);
      *(_DWORD *)(v6 - 96) = v79;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v80 = sub_1A594B4A8();
      *(_QWORD *)(v6 - 104) = sub_1A55791B0(v80, v81, (uint64_t *)(v6 - 72));
      sub_1A594C3CC();
      v59 = *(_QWORD *)(v6 - 128);
      swift_bridgeObjectRelease();
      sub_1A55034FC(v71, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v74 + 51) = 2082;
      if (*(_QWORD *)(v6 - 272) == 2)
        v82 = 1163284301;
      else
        v82 = 1498435395;
      *(_QWORD *)(v6 - 104) = sub_1A55791B0(v82, 0xE400000000000000, (uint64_t *)(v6 - 72));
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      v83 = *(_QWORD *)(v6 - 200);
      sub_1A54FA2A8(v59, v83);
      sub_1A54FA2A8(v59, v83);
      *(_WORD *)(v74 + 61) = 2082;
      v84 = *(_QWORD *)(v6 - 208);
      v85 = *(_QWORD *)(v6 - 304);
      v86 = *(_QWORD *)(v6 - 224);
      sub_1A54E4334(v84, v85, v86);
      sub_1A54E3414();
      MessageIdentifierSet.debugDescription.getter();
      v88 = v87;
      v90 = v89;
      sub_1A54E3458(v84, v85, v86);
      *(_QWORD *)(v6 - 104) = sub_1A55791B0(v88, v90, (uint64_t *)(v6 - 72));
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A54E3458(v84, v85, v86);
      sub_1A54E3458(v84, v85, v86);
      *(_QWORD *)(v6 - 152) = v74;
      *(_WORD *)(v74 + 71) = 2082;
      v91 = *(_QWORD *)(*(_QWORD *)(v6 - 144) + 16);
      v92 = MEMORY[0x1E0DEE9D8];
      if (v91)
      {
        *(_QWORD *)(v6 - 104) = MEMORY[0x1E0DEE9D8];
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A55C17B8(0, v91, 0);
        v93 = *(_QWORD *)(v6 - 144);
        v94 = 0;
        v92 = *(_QWORD *)(v6 - 104);
        do
        {
          *(_QWORD *)(v6 - 112) = *(_QWORD *)(v93 + 8 * v94 + 32);
          __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796E58);
          v95 = sub_1A594B490();
          v97 = v96;
          *(_QWORD *)(v6 - 104) = v92;
          v99 = *(_QWORD *)(v92 + 16);
          v98 = *(_QWORD *)(v92 + 24);
          if (v99 >= v98 >> 1)
          {
            sub_1A55C17B8((char *)(v98 > 1), v99 + 1, 1);
            v93 = *(_QWORD *)(v6 - 144);
            v92 = *(_QWORD *)(v6 - 104);
          }
          ++v94;
          *(_QWORD *)(v92 + 16) = v99 + 1;
          v100 = v92 + 16 * v99;
          *(_QWORD *)(v100 + 32) = v95;
          *(_QWORD *)(v100 + 40) = v97;
        }
        while (v91 != v94);
        swift_bridgeObjectRelease();
        v59 = *(_QWORD *)(v6 - 128);
        v60 = v93;
      }
      else
      {
        v60 = *(_QWORD *)(v6 - 144);
      }
      v202 = *(NSObject **)(v6 - 256);
      v203 = *(_QWORD *)(v6 - 152);
      *(_QWORD *)(v6 - 104) = v92;
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799A38);
      sub_1A54F70C0();
      v58 = v6 - 104;
      v173 = (_QWORD *)sub_1A594B268();
      v205 = v204;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v6 - 104) = sub_1A55791B0((uint64_t)v173, v205, (uint64_t *)(v6 - 72));
      sub_1A594C3CC();
      swift_bridgeObjectRelease_n();
      v181 = *(_QWORD *)(v6 - 216);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v203 + 81) = 1024;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v6 - 104) = *(_DWORD *)(v6 - 176);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A4F90000, v202, (os_log_type_t)*(_DWORD *)(v6 - 240), "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Server completed %{public}s of messages %{public}s with destination UIDs %{public}s and UIDValidity 0x%x", (uint8_t *)v203, 0x57u);
      v111 = *(_QWORD *)(v6 - 248);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v111, -1, -1);
      MEMORY[0x1A85B1964](v203, -1, -1);

      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v6 - 160) + 8))(*(_QWORD *)(v6 - 312), *(_QWORD *)(v6 - 136));
      v179 = *(_QWORD *)(v6 - 120);
      v180 = *(_QWORD *)(v6 - 184);
      v61 = *(_QWORD *)(v6 - 280);
    }
    else
    {
      v173 = *(_QWORD **)(v6 - 144);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A55034FC(v71, type metadata accessor for MailboxTaskLogger);
      v178 = *(_QWORD *)(v6 - 200);
      sub_1A54FA2A8(v59, v178);
      sub_1A54FA2A8(v59, v178);
      v111 = *(_QWORD *)(v6 - 208);
      sub_1A54E3458(v111, v70, v13);
      sub_1A54E3458(v111, v70, v13);

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      (*(void (**)(unint64_t, _QWORD))(*(_QWORD *)(v6 - 160) + 8))(v58, *(_QWORD *)(v6 - 136));
      v179 = *(_QWORD *)(v6 - 120);
      v180 = *(_QWORD *)(v6 - 184);
      v61 = *(_QWORD *)(v6 - 280);
      v181 = v66;
      v60 = (unint64_t)v173;
    }
    v206 = *(_QWORD *)(v181 + 16);
    if (v206)
    {
      v207 = 0;
      v208 = (unsigned int *)(v181 + 36);
      do
      {
        v209 = *v208 - (unint64_t)*(v208 - 1) + 1;
        v190 = __OFADD__(v207, v209);
        v207 += v209;
        if (v190)
        {
          __break(1u);
          goto LABEL_83;
        }
        v208 += 2;
        --v206;
      }
      while (v206);
      v210 = *(_QWORD *)(v60 + 16);
      if (!v210)
        goto LABEL_78;
      goto LABEL_70;
    }
    v207 = 0;
    v210 = *(_QWORD *)(v60 + 16);
    if (v210)
    {
LABEL_70:
      v211 = 0;
      v212 = (unsigned int *)(v60 + 36);
      while (1)
      {
        v213 = *v212 - (unint64_t)*(v212 - 1) + 1;
        v190 = __OFADD__(v211, v213);
        v211 += v213;
        if (v190)
          break;
        v212 += 2;
        if (!--v210)
        {
          if (v207 != v211)
            goto LABEL_79;
          goto LABEL_74;
        }
      }
LABEL_83:
      __break(1u);
LABEL_84:
      __break(1u);
LABEL_85:
      __break(1u);
      goto LABEL_86;
    }
LABEL_78:
    if (v207)
      goto LABEL_79;
LABEL_74:
    v214 = *(_QWORD *)(v6 - 288);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v197 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v198 = v181;
    v199 = v60;
    v200 = *(unsigned int *)(v6 - 176);
    v201 = v214;
    goto LABEL_75;
  }
  if (*(_QWORD *)(v6 - 272) != 2)
  {
    sub_1A55235A0(v15);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v113 = v13;
    v115 = v64;
    v114 = (uint64_t)v63;
    v121 = *(_QWORD *)(v6 - 240);
    goto LABEL_35;
  }
  *(_QWORD *)(v6 - 144) = *(_QWORD *)(v6 - 184) + 160;
  sub_1A55235A0(v15);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v112 = v12;
  v113 = v13;
  v114 = (uint64_t)v63;
  v115 = v112;
  sub_1A54E4334((uint64_t)v63, v112, v113);
  v116 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v117 = *(_QWORD *)(v6 - 120);
  v118 = sub_1A561AC04(v116, v63, v115 & 0xFFFFFFFFFFLL);
  v120 = v119;
  *(_QWORD *)(v6 - 120) = v117;
  sub_1A54E3458((uint64_t)v63, v115, v113);
  swift_bridgeObjectRelease();
  v121 = *(_QWORD *)(v6 - 240);
  if ((v120 & 1) != 0)
  {
LABEL_35:
    v145 = *(_QWORD *)(v6 - 160);
    v146 = *(_QWORD *)(v6 - 208);
    (*(void (**)(uint64_t, uint64_t, _QWORD))(v145 + 16))(v121, v146, *(_QWORD *)(v6 - 136));
    v147 = *(_QWORD *)(v6 - 248);
    sub_1A55034B8(v146, v147, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v148 = *(_QWORD *)(v6 - 128);
    v149 = *(_QWORD *)(v6 - 200);
    sub_1A54FA300(v148, v149);
    sub_1A54FA300(v148, v149);
    sub_1A54E4334(v114, v115, v113);
    v150 = sub_1A594A74C();
    v151 = sub_1A594C00C();
    *(_DWORD *)(v6 - 144) = v151;
    if (os_log_type_enabled(v150, v151))
    {
      v152 = swift_slowAlloc();
      *(_QWORD *)(v6 - 216) = v150;
      v153 = v152;
      v154 = swift_slowAlloc();
      *(_QWORD *)(v6 - 176) = v154;
      *(_QWORD *)(v6 - 72) = v154;
      *(_DWORD *)v153 = 68159747;
      *(_DWORD *)(v6 - 104) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v153 + 8) = 256;
      v155 = v147 + *(int *)(*(_QWORD *)(v6 - 232) + 20);
      *(_BYTE *)(v6 - 104) = *(_BYTE *)v155;
      sub_1A594C3CC();
      *(_WORD *)(v153 + 11) = 2082;
      *(_QWORD *)(v6 - 224) = v113;
      *(_QWORD *)(v6 - 304) = v115;
      *(_QWORD *)(v6 - 208) = v114;
      v156 = *(_QWORD *)(v155 + 8);
      v157 = *(_QWORD *)(v155 + 16);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      *(_QWORD *)(v6 - 104) = sub_1A55791B0(v156, v157, (uint64_t *)(v6 - 72));
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v153 + 21) = 1040;
      *(_DWORD *)(v6 - 104) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v153 + 27) = 512;
      *(_WORD *)(v6 - 104) = *(_WORD *)(v155 + 24);
      sub_1A594C3CC();
      *(_WORD *)(v153 + 31) = 2160;
      *(_QWORD *)(v6 - 104) = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v153 + 41) = 2085;
      v158 = *(_DWORD *)(v155 + 40);
      *(_QWORD *)(v6 - 104) = *(_QWORD *)(v155 + 32);
      *(_DWORD *)(v6 - 96) = v158;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v159 = sub_1A594B4A8();
      *(_QWORD *)(v6 - 104) = sub_1A55791B0(v159, v160, (uint64_t *)(v6 - 72));
      sub_1A594C3CC();
      v161 = *(_QWORD *)(v6 - 128);
      swift_bridgeObjectRelease();
      sub_1A55034FC(*(_QWORD *)(v6 - 248), type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v153 + 51) = 2082;
      if (*(_QWORD *)(v6 - 272) == 2)
        v162 = 1163284301;
      else
        v162 = 1498435395;
      *(_QWORD *)(v6 - 104) = sub_1A55791B0(v162, 0xE400000000000000, (uint64_t *)(v6 - 72));
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A54FA2A8(v161, v149);
      sub_1A54FA2A8(v161, v149);
      *(_WORD *)(v153 + 61) = 2082;
      v163 = *(_QWORD *)(v6 - 208);
      v164 = *(_QWORD *)(v6 - 304);
      v165 = *(_QWORD *)(v6 - 224);
      sub_1A54E4334(v163, v164, v165);
      sub_1A54E3414();
      MessageIdentifierSet.debugDescription.getter();
      v167 = v166;
      v169 = v168;
      sub_1A54E3458(v163, v164, v165);
      *(_QWORD *)(v6 - 104) = sub_1A55791B0(v167, v169, (uint64_t *)(v6 - 72));
      v59 = v161;
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A54E3458(v163, v164, v165);
      sub_1A54E3458(v163, v164, v165);
      v170 = *(NSObject **)(v6 - 216);
      _os_log_impl(&dword_1A4F90000, v170, (os_log_type_t)*(_DWORD *)(v6 - 144), "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Server completed %{public}s of messages %{public}s without destination UIDs", (uint8_t *)v153, 0x47u);
      v171 = *(_QWORD *)(v6 - 176);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v171, -1, -1);
      MEMORY[0x1A85B1964](v153, -1, -1);

      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v6 - 160) + 8))(*(_QWORD *)(v6 - 240), *(_QWORD *)(v6 - 136));
      v172 = *(_QWORD *)(v6 - 120);
      v60 = *(_QWORD *)(v6 - 184);
      v61 = *(_QWORD *)(v6 - 280);
    }
    else
    {
      sub_1A55034FC(v147, type metadata accessor for MailboxTaskLogger);
      sub_1A54FA2A8(v148, v149);
      sub_1A54FA2A8(v148, v149);
      sub_1A54E3458(v114, v115, v113);
      sub_1A54E3458(v114, v115, v113);

      (*(void (**)(_QWORD, _QWORD))(v145 + 8))(*(_QWORD *)(v6 - 240), *(_QWORD *)(v6 - 136));
      v172 = *(_QWORD *)(v6 - 120);
      v60 = *(_QWORD *)(v6 - 184);
      v61 = *(_QWORD *)(v6 - 280);
      v59 = v148;
    }
    v111 = sub_1A5619DE8(*(_QWORD *)(v6 - 288), 1, 1);
    v58 = v172;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54F2A14(v6 - 104, v59, v61);
    sub_1A5524084(*(_QWORD *)(v6 - 192));
    swift_bridgeObjectRelease();
    goto LABEL_42;
  }
  *(_QWORD *)(v6 - 152) = v118;
  v122 = *(_QWORD *)(v6 - 160);
  v123 = *(_QWORD *)(v6 - 256);
  v124 = *(_QWORD *)(v6 - 208);
  v60 = *(_QWORD *)(v6 - 136);
  (*(void (**)(uint64_t, uint64_t, unint64_t))(v122 + 16))(v123, v124, v60);
  v125 = *(_QWORD *)(v6 - 264);
  sub_1A55034B8(v124, v125, type metadata accessor for MailboxTaskLogger);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  sub_1A54E4334((uint64_t)v63, v115, v113);
  v126 = sub_1A594A74C();
  v127 = sub_1A594C00C();
  *(_DWORD *)(v6 - 176) = v127;
  if (os_log_type_enabled(v126, v127))
  {
    v128 = swift_slowAlloc();
    *(_QWORD *)(v6 - 208) = v126;
    v129 = v128;
    v130 = swift_slowAlloc();
    *(_QWORD *)(v6 - 200) = v130;
    *(_QWORD *)(v6 - 72) = v130;
    *(_DWORD *)v129 = 68159491;
    *(_DWORD *)(v6 - 104) = 2;
    *(_QWORD *)(v6 - 216) = v115 & 0xFFFFFFFFFFLL;
    sub_1A594C3CC();
    *(_WORD *)(v129 + 8) = 256;
    v131 = v125 + *(int *)(*(_QWORD *)(v6 - 232) + 20);
    *(_BYTE *)(v6 - 104) = *(_BYTE *)v131;
    sub_1A594C3CC();
    *(_WORD *)(v129 + 11) = 2082;
    *(_QWORD *)(v6 - 224) = v113;
    v132 = v115;
    v133 = *(_QWORD *)(v131 + 8);
    v134 = *(_QWORD *)(v131 + 16);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    *(_QWORD *)(v6 - 104) = sub_1A55791B0(v133, v134, (uint64_t *)(v6 - 72));
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v129 + 21) = 1040;
    *(_DWORD *)(v6 - 104) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v129 + 27) = 512;
    *(_WORD *)(v6 - 104) = *(_WORD *)(v131 + 24);
    sub_1A594C3CC();
    *(_WORD *)(v129 + 31) = 2160;
    *(_QWORD *)(v6 - 104) = 0x786F626C69616DLL;
    sub_1A594C3CC();
    *(_WORD *)(v129 + 41) = 2085;
    v135 = *(_DWORD *)(v131 + 40);
    *(_QWORD *)(v6 - 104) = *(_QWORD *)(v131 + 32);
    *(_DWORD *)(v6 - 96) = v135;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v136 = sub_1A594B4A8();
    *(_QWORD *)(v6 - 104) = sub_1A55791B0(v136, v137, (uint64_t *)(v6 - 72));
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC(*(_QWORD *)(v6 - 264), type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v129 + 51) = 2082;
    v138 = v115;
    v139 = *(_QWORD *)(v6 - 224);
    sub_1A54E4334((uint64_t)v63, v138, v139);
    sub_1A54E3414();
    MessageIdentifierSet.debugDescription.getter();
    v141 = v140;
    v60 = v142;
    sub_1A54E3458((uint64_t)v63, v132, v139);
    *(_QWORD *)(v6 - 104) = sub_1A55791B0(v141, v60, (uint64_t *)(v6 - 72));
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A54E3458((uint64_t)v63, v132, v139);
    sub_1A54E3458((uint64_t)v63, v132, v139);
    v143 = *(NSObject **)(v6 - 208);
    _os_log_impl(&dword_1A4F90000, v143, (os_log_type_t)*(_DWORD *)(v6 - 176), "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Server completed move of messages %{public}s with destination UIDs", (uint8_t *)v129, 0x3Du);
    v144 = *(_QWORD *)(v6 - 200);
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v144, -1, -1);
    MEMORY[0x1A85B1964](v129, -1, -1);

    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v6 - 160) + 8))(*(_QWORD *)(v6 - 256), *(_QWORD *)(v6 - 136));
  }
  else
  {
    sub_1A55034FC(v125, type metadata accessor for MailboxTaskLogger);
    sub_1A54E3458((uint64_t)v63, v115, v113);
    sub_1A54E3458((uint64_t)v63, v115, v113);

    (*(void (**)(uint64_t, unint64_t))(v122 + 8))(v123, v60);
  }
  v111 = *(_QWORD *)(v6 - 120);
  v58 = *(_QWORD *)(v6 - 184);
  v61 = *(_QWORD *)(v6 - 280);
  v173 = *(_QWORD **)(v6 - 144);
  v184 = sub_1A55A2AE8(*(_QWORD *)(v6 - 152));
  v185 = v182;
  v186 = *(_QWORD *)(v182 + 16);
  if (v186)
  {
    v187 = 0;
    v188 = (unsigned int *)(v182 + 36);
    v59 = *(_QWORD *)(v6 - 128);
    while (1)
    {
      v189 = *v188 - (unint64_t)*(v188 - 1) + 1;
      v190 = __OFADD__(v187, v189);
      v187 += v189;
      if (v190)
        goto LABEL_84;
      v188 += 2;
      if (!--v186)
        goto LABEL_55;
    }
  }
  v187 = 0;
  v59 = *(_QWORD *)(v6 - 128);
LABEL_55:
  v191 = *(_QWORD *)(v183 + 16);
  if (v191)
  {
    v192 = 0;
    v193 = (unsigned int *)(v183 + 36);
    while (1)
    {
      v194 = *v193 - (unint64_t)*(v193 - 1) + 1;
      v190 = __OFADD__(v192, v194);
      v192 += v194;
      if (v190)
        goto LABEL_85;
      v193 += 2;
      if (!--v191)
        goto LABEL_61;
    }
  }
  v192 = 0;
LABEL_61:
  v195 = v183;
  if (v187 != v192)
  {
LABEL_79:
    sub_1A561E990();
    swift_allocError();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_willThrow();
    goto LABEL_80;
  }
  v180 = v58;
  v196 = *(_QWORD *)(v6 - 288);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v197 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v198 = v185;
  v199 = v195;
  v200 = v184;
  v201 = v196;
  v179 = v111;
LABEL_75:
  v215 = sub_1A561C0A4(v197, v198, v199, v200, v201);
  v58 = v179;
  if (v179)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_80:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A5524084(*(_QWORD *)(v6 - 192));
    return swift_bridgeObjectRelease();
  }
  v111 = v215;
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  sub_1A5524084(*(_QWORD *)(v6 - 192));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  v60 = v180;
LABEL_43:
  v173 = *(_QWORD **)(v60 + 168);
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
LABEL_86:
    result = (uint64_t)sub_1A54F20E4(0, v173[2] + 1, 1, v173);
    v173 = (_QWORD *)result;
  }
  v176 = v173[2];
  v175 = v173[3];
  *(_QWORD *)(v6 - 120) = v58;
  if (v176 >= v175 >> 1)
  {
    result = (uint64_t)sub_1A54F20E4((_QWORD *)(v175 > 1), v176 + 1, 1, v173);
    v173 = (_QWORD *)result;
  }
  v173[2] = v176 + 1;
  v177 = &v173[3 * v176];
  v177[4] = v59;
  *((_DWORD *)v177 + 10) = v61;
  v177[6] = v111;
  *(_QWORD *)(v60 + 168) = v173;
  return result;
}

uint64_t sub_1A5616EEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v4 = sub_1A594A6EC();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A594A614();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  sub_1A594A5F0();
  sub_1A548779C();
  sub_1A594A680();
  sub_1A55034FC((uint64_t)v6, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  sub_1A55034FC((uint64_t)v9, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  return swift_release();
}

uint64_t sub_1A5617008(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unsigned int v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  ValueMetadata *v84;
  unint64_t v85;
  uint64_t v86;
  _QWORD v87[24];
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  __int128 v92;
  uint64_t v93;
  __int128 v94;
  int v95;

  v3 = v2;
  v79 = a1;
  v73 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v73);
  v74 = (uint64_t)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v77 = (uint64_t)&v72 - v7;
  v82 = sub_1A594A764();
  v80 = *(_QWORD *)(v82 - 8);
  MEMORY[0x1E0C80A78](v82);
  v75 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v78 = (uint64_t *)((char *)&v72 - v10);
  v11 = *(_QWORD *)(v2 + 152);
  v84 = &type metadata for MoveAndCopyMessages.CommandID;
  v85 = sub_1A5553CA0();
  swift_getKeyPath();
  swift_retain();
  v12 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v13 = sub_1A561ADD8(v12);
  swift_bridgeObjectRelease();
  swift_release_n();
  v14 = sub_1A5552BFC(v13);
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  LOBYTE(v13) = sub_1A561C374(v14, v11);
  v76 = 0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A550F95C(v3, (uint64_t)v87);
  v81 = a2;
  if ((v13 & 1) != 0)
  {
    v15 = *(_QWORD *)(v87[21] + 16);
    sub_1A550FA2C((uint64_t)v87);
    if (!v15)
      goto LABEL_8;
  }
  else
  {
    sub_1A550FA2C((uint64_t)v87);
  }
  v16 = v80;
  v17 = v78;
  v18 = v82;
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v80 + 16))(v78, a2, v82);
  v19 = v77;
  sub_1A55034B8(a2, v77, type metadata accessor for MailboxTaskLogger);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v20 = sub_1A594A74C();
  v21 = sub_1A594C018();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc();
    v72 = swift_slowAlloc();
    v86 = v72;
    *(_DWORD *)v22 = 68159235;
    LODWORD(v88) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v22 + 8) = 256;
    v23 = v19 + *(int *)(v73 + 20);
    LOBYTE(v88) = *(_BYTE *)v23;
    sub_1A594C3CC();
    *(_WORD *)(v22 + 11) = 2082;
    v25 = *(_QWORD *)(v23 + 8);
    v24 = *(_QWORD *)(v23 + 16);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v88 = sub_1A55791B0(v25, v24, &v86);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 21) = 1040;
    LODWORD(v88) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v22 + 27) = 512;
    LOWORD(v88) = *(_WORD *)(v23 + 24);
    sub_1A594C3CC();
    *(_WORD *)(v22 + 31) = 2160;
    v88 = 0x786F626C69616DLL;
    sub_1A594C3CC();
    *(_WORD *)(v22 + 41) = 2085;
    v26 = *(_DWORD *)(v23 + 40);
    v88 = *(_QWORD *)(v23 + 32);
    LODWORD(v89) = v26;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v27 = sub_1A594B4A8();
    v88 = sub_1A55791B0(v27, v28, &v86);
    a2 = v81;
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC(v77, type metadata accessor for MailboxTaskLogger);
    _os_log_impl(&dword_1A4F90000, v20, v21, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Task is completing, but not done.", (uint8_t *)v22, 0x33u);
    v29 = v72;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v29, -1, -1);
    MEMORY[0x1A85B1964](v22, -1, -1);

    (*(void (**)(_QWORD *, uint64_t))(v80 + 8))(v78, v82);
  }
  else
  {
    sub_1A55034FC(v19, type metadata accessor for MailboxTaskLogger);

    (*(void (**)(_QWORD *, uint64_t))(v16 + 8))(v17, v18);
  }
LABEL_8:
  v30 = *(_QWORD *)(v83 + 32);
  v31 = *(_DWORD *)(v83 + 40);
  MEMORY[0x1E0C80A78](&v72);
  *(&v72 - 2) = v33;
  *(&v72 - 1) = a2;
  v34 = v79;
  v35 = (_QWORD *)(v79 + 152);
  v36 = *(_QWORD *)(v79 + 152);
  v37 = *(_QWORD *)(v79 + 144);
  v38 = *(_QWORD *)(v79 + 160);
  v39 = *(unsigned __int8 *)(v79 + 168);
  if (v39 == 1)
  {
    v88 = *(_QWORD *)(v79 + 144);
    v78 = v32;
    v40 = (_QWORD *)(v79 + 152);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A551C6E4((uint64_t)&v88, v30, v31, 0, sub_1A561C568, &v72 - 4);
    sub_1A54E8FCC(v37, v36, v38, 1);
    v35 = v40;
    v36 = 0;
    v38 = 0;
    v37 = v88;
    *(_QWORD *)(v34 + 144) = v88;
    *v40 = 0;
    v40[1] = 0;
    *(_BYTE *)(v34 + 168) = 1;
  }
  v41 = v34;
  v42 = v83;
  if (*(_BYTE *)(v83 + 120) == 1)
  {
    v78 = v35;
    v44 = v80;
    v43 = v81;
    v45 = v75;
    v46 = v82;
    (*(void (**)(char *, uint64_t, uint64_t))(v80 + 16))(v75, v81, v82);
    v47 = v74;
    sub_1A55034B8(v43, v74, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v48 = sub_1A594A74C();
    v49 = sub_1A594C030();
    v50 = v49;
    if (os_log_type_enabled(v48, v49))
    {
      v51 = swift_slowAlloc();
      v77 = swift_slowAlloc();
      v86 = v77;
      *(_DWORD *)v51 = 68159235;
      LODWORD(v88) = 2;
      LODWORD(v72) = v50;
      sub_1A594C3CC();
      *(_WORD *)(v51 + 8) = 256;
      v52 = v47 + *(int *)(v73 + 20);
      LOBYTE(v88) = *(_BYTE *)v52;
      sub_1A594C3CC();
      *(_WORD *)(v51 + 11) = 2082;
      v53 = v44;
      v55 = *(_QWORD *)(v52 + 8);
      v54 = *(_QWORD *)(v52 + 16);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v88 = sub_1A55791B0(v55, v54, &v86);
      v41 = v79;
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v51 + 21) = 1040;
      LODWORD(v88) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v51 + 27) = 512;
      LOWORD(v88) = *(_WORD *)(v52 + 24);
      sub_1A594C3CC();
      *(_WORD *)(v51 + 31) = 2160;
      v88 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v51 + 41) = 2085;
      v56 = *(_DWORD *)(v52 + 40);
      v88 = *(_QWORD *)(v52 + 32);
      LODWORD(v89) = v56;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v57 = sub_1A594B4A8();
      v88 = sub_1A55791B0(v57, v58, &v86);
      v42 = v83;
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC(v74, type metadata accessor for MailboxTaskLogger);
      _os_log_impl(&dword_1A4F90000, v48, (os_log_type_t)v72, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Persistence has more messages to move/copy. Will mark as needing to re-run.", (uint8_t *)v51, 0x33u);
      v59 = v77;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v59, -1, -1);
      MEMORY[0x1A85B1964](v51, -1, -1);

      (*(void (**)(char *, uint64_t))(v53 + 8))(v75, v82);
    }
    else
    {
      sub_1A55034FC(v47, type metadata accessor for MailboxTaskLogger);

      (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v46);
    }
    v37 = *(_QWORD *)(v41 + 144);
    v36 = *(_QWORD *)(v41 + 152);
    v38 = *(_QWORD *)(v41 + 160);
    if (*(_BYTE *)(v41 + 168) == 1)
    {
      v60 = *(_DWORD *)(v42 + 40);
      v61 = *(_QWORD *)(v42 + 32);
      v88 = *(_QWORD *)(v41 + 144);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A551B950((uint64_t)&v88, v61, v60, 0);
      LOBYTE(v39) = 1;
      sub_1A54E8FCC(v37, v36, v38, 1);
      v36 = 0;
      v38 = 0;
      v37 = v88;
      *(_QWORD *)(v41 + 144) = v88;
      v62 = v78;
      *v78 = 0;
      v62[1] = 0;
      *(_BYTE *)(v41 + 168) = 1;
    }
    else
    {
      LOBYTE(v39) = 0;
    }
  }
  v63 = *(_QWORD *)(v41 + 192);
  v64 = *(_DWORD *)(v41 + 216);
  v88 = v37;
  v89 = v36;
  v90 = v38;
  v91 = v39;
  v92 = *(_OWORD *)(v41 + 176);
  v93 = v63;
  v94 = *(_OWORD *)(v41 + 200);
  v95 = v64;
  v65 = sub_1A5516730(*(_QWORD *)(v42 + 32), *(_DWORD *)(v42 + 40));
  v66 = *(_QWORD *)(v42 + 176);
  MEMORY[0x1E0C80A78](v65);
  v67 = v81;
  *(&v72 - 4) = v81;
  *(&v72 - 3) = v41;
  *(&v72 - 2) = v68;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5500DF8((void (*)(uint64_t *))sub_1A561C570, (uint64_t)(&v72 - 6), v66);
  v69 = swift_bridgeObjectRelease();
  v70 = *(_QWORD *)(v42 + 184);
  MEMORY[0x1E0C80A78](v69);
  *(&v72 - 4) = v67;
  *(&v72 - 3) = v41;
  *(&v72 - 2) = v65;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5500DF8((void (*)(uint64_t *))sub_1A561C58C, (uint64_t)(&v72 - 6), v70);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1A5617A00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  NSObject *v14;
  os_log_type_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  int v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  os_log_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;

  v6 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A594A764();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(a2 + 120) & 1) == 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))(v13, a3, v9, v11);
    sub_1A55034B8(a3, (uint64_t)v8, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v14 = sub_1A594A74C();
    v15 = sub_1A594C030();
    v16 = v15;
    if (os_log_type_enabled(v14, v15))
    {
      v17 = swift_slowAlloc();
      v30 = v16;
      v18 = v17;
      v29 = swift_slowAlloc();
      v34 = v29;
      *(_DWORD *)v18 = 68159235;
      LODWORD(v32) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v18 + 8) = 256;
      v19 = *(int *)(v6 + 20);
      v28 = v14;
      v20 = &v8[v19];
      LOBYTE(v32) = v8[v19];
      sub_1A594C3CC();
      *(_WORD *)(v18 + 11) = 2082;
      v31 = a1;
      v21 = *((_QWORD *)v20 + 1);
      v22 = *((_QWORD *)v20 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v32 = sub_1A55791B0(v21, v22, &v34);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 21) = 1040;
      LODWORD(v32) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v18 + 27) = 512;
      LOWORD(v32) = *((_WORD *)v20 + 12);
      sub_1A594C3CC();
      *(_WORD *)(v18 + 31) = 2160;
      v32 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v18 + 41) = 2085;
      v23 = *((_DWORD *)v20 + 10);
      v32 = *((_QWORD *)v20 + 4);
      v33 = v23;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v24 = sub_1A594B4A8();
      v32 = sub_1A55791B0(v24, v25, &v34);
      a1 = v31;
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v8, type metadata accessor for MailboxTaskLogger);
      v14 = v28;
      _os_log_impl(&dword_1A4F90000, v28, (os_log_type_t)v30, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Marking no more messages needing move or copy.", (uint8_t *)v18, 0x33u);
      v26 = v29;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v26, -1, -1);
      MEMORY[0x1A85B1964](v18, -1, -1);
    }
    else
    {
      sub_1A55034FC((uint64_t)v8, type metadata accessor for MailboxTaskLogger);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    *(_BYTE *)(a1 + 234) = 0;
  }
}

uint64_t sub_1A5617D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  unsigned int v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  os_log_t v33;
  uint64_t v34;
  uint64_t result;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int v42;
  int v43;
  os_log_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int v52;
  uint64_t v53;

  v8 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A594A764();
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)a1;
  v16 = *(_DWORD *)(a1 + 8);
  v49 = v18;
  v50 = v17;
  (*(void (**)(char *, uint64_t, double))(v18 + 16))(v14, a2, v12);
  sub_1A55034B8(a2, (uint64_t)v10, type metadata accessor for MailboxTaskLogger);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  swift_bridgeObjectRetain_n();
  v19 = sub_1A594A74C();
  v20 = sub_1A594C030();
  v21 = v20;
  if (os_log_type_enabled(v19, v20))
  {
    v22 = swift_slowAlloc();
    v42 = v16;
    v23 = v22;
    v45 = swift_slowAlloc();
    v53 = v45;
    *(_DWORD *)v23 = 68159747;
    LODWORD(v51) = 2;
    v47 = a4;
    v44 = v19;
    sub_1A594C3CC();
    *(_WORD *)(v23 + 8) = 256;
    v24 = *(int *)(v8 + 20);
    v43 = v21;
    v25 = &v10[v24];
    LOBYTE(v51) = v10[v24];
    sub_1A594C3CC();
    *(_WORD *)(v23 + 11) = 2082;
    v48 = a3;
    v26 = *((_QWORD *)v25 + 1);
    v27 = *((_QWORD *)v25 + 2);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v51 = sub_1A55791B0(v26, v27, &v53);
    v46 = v15;
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 21) = 1040;
    LODWORD(v51) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v23 + 27) = 512;
    LOWORD(v51) = *((_WORD *)v25 + 12);
    sub_1A594C3CC();
    *(_WORD *)(v23 + 31) = 2160;
    v51 = 0x786F626C69616DLL;
    sub_1A594C3CC();
    *(_WORD *)(v23 + 41) = 2085;
    v28 = *((_DWORD *)v25 + 10);
    v51 = *((_QWORD *)v25 + 4);
    v52 = v28;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v29 = sub_1A594B4A8();
    v51 = sub_1A55791B0(v29, v30, &v53);
    sub_1A594C3CC();
    a3 = v48;
    swift_bridgeObjectRelease();
    sub_1A55034FC((uint64_t)v10, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v23 + 51) = 2160;
    v51 = 0x786F626C69616DLL;
    v15 = v46;
    sub_1A594C3CC();
    *(_WORD *)(v23 + 61) = 2085;
    v51 = v15;
    LODWORD(v25) = v42;
    v52 = v42;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v31 = sub_1A594B4A8();
    v51 = sub_1A55791B0(v31, v32, &v53);
    a4 = v47;
    sub_1A594C3CC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v33 = v44;
    _os_log_impl(&dword_1A4F90000, v44, (os_log_type_t)v43, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Marking mailbox '%{sensitive,mask.mailbox}s' as needing to run find-missing-messages.", (uint8_t *)v23, 0x47u);
    v34 = v45;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v34, -1, -1);
    MEMORY[0x1A85B1964](v23, -1, -1);

    result = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v14, v50);
    v36 = v25;
  }
  else
  {
    sub_1A55034FC((uint64_t)v10, type metadata accessor for MailboxTaskLogger);

    swift_bridgeObjectRelease_n();
    result = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v14, v50);
    v36 = v16;
  }
  if (*(_BYTE *)(a3 + 168) == 1)
  {
    v38 = *(_QWORD *)(a3 + 152);
    v37 = *(_QWORD *)(a3 + 160);
    v51 = *(_QWORD *)(a3 + 144);
    v39 = v51;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5515CB8((uint64_t)&v51, v15, v36, a4, 12);
    result = sub_1A54E8FCC(v39, v38, v37, 1);
    v40 = v51;
    *(_QWORD *)(a3 + 152) = 0;
    *(_QWORD *)(a3 + 160) = 0;
    *(_QWORD *)(a3 + 144) = v40;
    *(_BYTE *)(a3 + 168) = 1;
  }
  return result;
}

uint64_t sub_1A561824C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  unsigned int v16;
  void (*v17)(_BYTE *, uint64_t, double);
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  unint64_t v31;
  os_log_t v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[12];
  int v40;
  os_log_t v41;
  uint64_t v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;

  v8 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v39[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_1A594A764();
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = &v39[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v45 = *(_QWORD *)a1;
  v46 = v15;
  v16 = *(_DWORD *)(a1 + 8);
  v17 = *(void (**)(_BYTE *, uint64_t, double))(v15 + 16);
  v47 = v18;
  v17(v14, a2, v12);
  sub_1A55034B8(a2, (uint64_t)v10, type metadata accessor for MailboxTaskLogger);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v19 = sub_1A594A74C();
  v20 = sub_1A594C030();
  v21 = v20;
  if (os_log_type_enabled(v19, v20))
  {
    v22 = swift_slowAlloc();
    v41 = v19;
    v23 = v22;
    v42 = swift_slowAlloc();
    v50 = v42;
    *(_DWORD *)v23 = 68159235;
    LODWORD(v48) = 2;
    v40 = v21;
    sub_1A594C3CC();
    *(_WORD *)(v23 + 8) = 256;
    v24 = *(int *)(v8 + 20);
    v44 = a4;
    v25 = &v10[v24];
    LOBYTE(v48) = v10[v24];
    sub_1A594C3CC();
    *(_WORD *)(v23 + 11) = 2082;
    v43 = v16;
    v26 = *((_QWORD *)v25 + 1);
    v27 = *((_QWORD *)v25 + 2);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v48 = sub_1A55791B0(v26, v27, &v50);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 21) = 1040;
    LODWORD(v48) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v23 + 27) = 512;
    LOWORD(v48) = *((_WORD *)v25 + 12);
    sub_1A594C3CC();
    *(_WORD *)(v23 + 31) = 2160;
    v48 = 0x786F626C69616DLL;
    sub_1A594C3CC();
    *(_WORD *)(v23 + 41) = 2085;
    v28 = *((_QWORD *)v25 + 4);
    v29 = *((_DWORD *)v25 + 10);
    a4 = v44;
    v48 = v28;
    v49 = v29;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v30 = sub_1A594B4A8();
    v48 = sub_1A55791B0(v30, v31, &v50);
    sub_1A594C3CC();
    v16 = v43;
    swift_bridgeObjectRelease();
    sub_1A55034FC((uint64_t)v10, type metadata accessor for MailboxTaskLogger);
    v32 = v41;
    _os_log_impl(&dword_1A4F90000, v41, (os_log_type_t)v40, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Marking mailbox as needing to run upload-messages.", (uint8_t *)v23, 0x33u);
    v33 = v42;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v33, -1, -1);
    MEMORY[0x1A85B1964](v23, -1, -1);

  }
  else
  {
    sub_1A55034FC((uint64_t)v10, type metadata accessor for MailboxTaskLogger);

  }
  result = (*(uint64_t (**)(_BYTE *, uint64_t))(v46 + 8))(v14, v47);
  if (*(_BYTE *)(a3 + 168) == 1)
  {
    v36 = *(_QWORD *)(a3 + 152);
    v35 = *(_QWORD *)(a3 + 160);
    v48 = *(_QWORD *)(a3 + 144);
    v37 = v48;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5515CB8((uint64_t)&v48, v45, v16, a4, 6);
    result = sub_1A54E8FCC(v37, v36, v35, 1);
    v38 = v48;
    *(_QWORD *)(a3 + 152) = 0;
    *(_QWORD *)(a3 + 160) = 0;
    *(_QWORD *)(a3 + 144) = v38;
    *(_BYTE *)(a3 + 168) = 1;
  }
  return result;
}

uint64_t sub_1A5618650@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = sub_1A561C5A8(a1, a2);
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_1A5618684(const void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A561C92C(a1, a6, a7);
}

void sub_1A5618690(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1A561D1F0(a1, a2, a3, a5, a6);
}

void sub_1A561869C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1A5614F84(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), a2, a3, a4, a5, a8, a7);
}

uint64_t sub_1A56186DC()
{
  return sub_1A561E534();
}

unint64_t sub_1A56186FC()
{
  return 0xD000000000000013;
}

uint64_t sub_1A5618718()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 16);
  sub_1A594CE64();
  sub_1A594CE88();
  sub_1A54E42B4(v1, v2);
  sub_1A5949F9C();
  sub_1A54E46E8(v1, v2);
  return sub_1A594CED0();
}

uint64_t sub_1A5618790()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 16);
  sub_1A594CE88();
  sub_1A54E42B4(v1, v2);
  sub_1A5949F9C();
  return sub_1A54E46E8(v1, v2);
}

uint64_t sub_1A56187E8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 16);
  sub_1A594CE64();
  sub_1A594CE88();
  sub_1A54E42B4(v1, v2);
  sub_1A5949F9C();
  sub_1A54E46E8(v1, v2);
  return sub_1A594CED0();
}

uint64_t sub_1A561885C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char v7;
  char v8;

  if (*a1 != *a2)
    return 0;
  v4 = *((_QWORD *)a2 + 1);
  v3 = *((_QWORD *)a2 + 2);
  v6 = *((_QWORD *)a1 + 1);
  v5 = *((_QWORD *)a1 + 2);
  sub_1A54E42B4(v6, v5);
  sub_1A54E42B4(v4, v3);
  sub_1A5535F44(v6, v5);
  v8 = v7;
  sub_1A54E46E8(v4, v3);
  sub_1A54E46E8(v6, v5);
  return v8 & 1;
}

uint64_t sub_1A56188F0(uint64_t a1, uint64_t a2)
{
  return sub_1A561892C(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1A54F5948);
}

uint64_t sub_1A56188FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A5618998(a1, a2, a3, sub_1A54F5948);
}

uint64_t sub_1A5618908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A56189F4(a1, a2, a3, (void (*)(_BYTE *, uint64_t))sub_1A54F5948);
}

uint64_t sub_1A5618914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A5618A5C(a1, a2, a3, a4, sub_1A54FAE90);
}

uint64_t sub_1A5618920(uint64_t a1, uint64_t a2)
{
  return sub_1A561892C(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1A54F578C);
}

uint64_t sub_1A561892C(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *, uint64_t))
{
  uint64_t v3;
  uint64_t v5;
  _BYTE v7[72];

  v5 = *(_QWORD *)(v3 + 16);
  sub_1A594CE64();
  sub_1A594CE88();
  a3(v7, v5);
  return sub_1A594CED0();
}

uint64_t sub_1A561898C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A5618998(a1, a2, a3, sub_1A54F578C);
}

uint64_t sub_1A5618998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v6;

  v6 = *(_QWORD *)(v4 + 16);
  sub_1A594CE88();
  return a4(a1, v6);
}

uint64_t sub_1A56189E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A56189F4(a1, a2, a3, (void (*)(_BYTE *, uint64_t))sub_1A54F578C);
}

uint64_t sub_1A56189F4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *, uint64_t))
{
  uint64_t v4;
  uint64_t v6;
  _BYTE v8[72];

  v6 = *(_QWORD *)(v4 + 16);
  sub_1A594CE64();
  sub_1A594CE88();
  a4(v8, v6);
  return sub_1A594CED0();
}

uint64_t sub_1A5618A50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A5618A5C(a1, a2, a3, a4, sub_1A54FB4E4);
}

uint64_t sub_1A5618A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;

  if ((*(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned int *)(a1 + 8) << 32)) == (*(unsigned int *)(a2 + 8) | ((unint64_t)*(unsigned int *)(a2 + 8) << 32))
    && (v5 = *(_QWORD *)(a1 + 16), v6 = *(_QWORD *)(a2 + 16), sub_1A54FF30C(*(_QWORD *)a1, *(_QWORD *)a2)))
  {
    return a5(v5, v6);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1A5618AD0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  char v4;
  _BYTE v6[72];

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_BYTE *)(v0 + 32);
  sub_1A594CE64();
  sub_1A594CE88();
  sub_1A54E42B4(v1, v2);
  sub_1A5949F9C();
  sub_1A54E46E8(v1, v2);
  MoveOrCopy.Result.hash(into:)((uint64_t)v6, v3, v4);
  return sub_1A594CED0();
}

uint64_t sub_1A5618B68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_BYTE *)(v1 + 32);
  sub_1A594CE88();
  sub_1A54E42B4(v3, v4);
  sub_1A5949F9C();
  sub_1A54E46E8(v3, v4);
  return MoveOrCopy.Result.hash(into:)(a1, v5, v6);
}

uint64_t sub_1A5618BE0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  char v4;
  _BYTE v6[72];

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_BYTE *)(v0 + 32);
  sub_1A594CE64();
  sub_1A594CE88();
  sub_1A54E42B4(v1, v2);
  sub_1A5949F9C();
  sub_1A54E46E8(v1, v2);
  MoveOrCopy.Result.hash(into:)((uint64_t)v6, v3, v4);
  return sub_1A594CED0();
}

uint64_t sub_1A5618C74(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;

  if (*a1 != *a2)
    return 0;
  v3 = *((_QWORD *)a1 + 2);
  v2 = *((_QWORD *)a1 + 3);
  v4 = a1[32];
  v6 = *((_QWORD *)a2 + 2);
  v5 = *((_QWORD *)a2 + 3);
  v7 = a2[32];
  v8 = *((_QWORD *)a2 + 1);
  v9 = *((_QWORD *)a1 + 1);
  sub_1A54E42B4(v9, v3);
  sub_1A54E42B4(v8, v6);
  sub_1A5535F44(v9, v3);
  v11 = v10;
  sub_1A54E46E8(v8, v6);
  sub_1A54E46E8(v9, v3);
  if ((v11 & 1) != 0)
    return static MoveOrCopy.Result.__derived_enum_equals(_:_:)(v2, v4, v5, v7);
  else
    return 0;
}

uint64_t sub_1A5618D50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  char *v6;
  unsigned int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t isUniquelyReferenced_nonNull_native;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  BOOL v20;
  int64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  size_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t result;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  v2 = a1 + 32;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v3 = 0;
  v4 = (char *)MEMORY[0x1E0DEE9D8];
  v5 = (char *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v6 = v5;
    v7 = (unsigned int *)(v2 + 8 * v3);
    v9 = *v7;
    v8 = v7[1];
    if (v8 < v9)
      goto LABEL_37;
    v10 = v8 - v9;
    v11 = v4;
    if (v8 - v9 != -1)
      break;
LABEL_7:
    v12 = *((_QWORD *)v11 + 2);
    v13 = *((_QWORD *)v6 + 2);
    v14 = v13 + v12;
    if (__OFADD__(v13, v12))
      goto LABEL_38;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if ((isUniquelyReferenced_nonNull_native & 1) != 0 && (v5 = v6, v14 <= *((_QWORD *)v6 + 3) >> 1))
    {
      if (*((_QWORD *)v11 + 2))
        goto LABEL_27;
    }
    else
    {
      if (v13 <= v14)
        v21 = v13 + v12;
      else
        v21 = v13;
      v5 = sub_1A54EF8E4((char *)isUniquelyReferenced_nonNull_native, v21, 1, v6);
      if (*((_QWORD *)v11 + 2))
      {
LABEL_27:
        v22 = *((_QWORD *)v5 + 2);
        if ((*((_QWORD *)v5 + 3) >> 1) - v22 < v12)
          goto LABEL_40;
        v23 = &v5[4 * v22 + 32];
        v24 = v11 + 32;
        v25 = 4 * v12;
        if (v11 + 32 < &v23[4 * v12] && v23 < &v24[v25])
          goto LABEL_44;
        memcpy(v23, v24, v25);
        if (v12)
        {
          v26 = *((_QWORD *)v5 + 2);
          v27 = __OFADD__(v26, v12);
          v28 = v26 + v12;
          if (v27)
            goto LABEL_41;
          *((_QWORD *)v5 + 2) = v28;
        }
        goto LABEL_4;
      }
    }
    if (v12)
      goto LABEL_39;
LABEL_4:
    ++v3;
    swift_release();
    swift_bridgeObjectRelease();
    if (v3 == v1)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v5;
    }
  }
  if (v10 < 0)
    goto LABEL_43;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AF38);
  v11 = (char *)swift_allocObject();
  v16 = _swift_stdlib_malloc_size_0(v11);
  v17 = 0;
  v18 = v16 - 32;
  if (v16 < 32)
    v18 = v16 - 29;
  *((_QWORD *)v11 + 2) = v8 - v9 + 1;
  *((_QWORD *)v11 + 3) = 2 * (v18 >> 2);
  while (2)
  {
    if ((_DWORD)v8 == (_DWORD)v9)
    {
      v19 = 0;
      goto LABEL_19;
    }
    v19 = v9 + 1;
    if ((_DWORD)v9 != -1)
    {
LABEL_19:
      *(_DWORD *)&v11[4 * v17 + 32] = v9;
      if (v10 == v17)
        goto LABEL_7;
      ++v17;
      v20 = (_DWORD)v8 == (_DWORD)v9;
      LODWORD(v9) = v19;
      if (v20)
        goto LABEL_42;
      continue;
    }
    break;
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5618FB0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t *))
{
  uint64_t v4;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v12;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v12 = a2;
  a4(a1, a3, 0, isUniquelyReferenced_nonNull_native, &v12);
  v10 = v12;
  swift_bridgeObjectRelease();
  if (v4)
    swift_bridgeObjectRelease();
  return v10;
}

void sub_1A5619038(void (*a1)(void))
{
  a1();
  __asm { BR              X12 }
}

uint64_t sub_1A5619088(uint64_t a1, unint64_t a2)
{
  sub_1A54FA2A8(a1, a2);
  return 0x4554454C4544;
}

uint64_t sub_1A56190C4()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1A56190E8()
{
  uint64_t v0;

  sub_1A5619038(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1A56190F4()
{
  unint64_t result;

  result = qword_1EE7A8D38;
  if (!qword_1EE7A8D38)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AA590, &type metadata for MoveAndCopyMessages.CommandID.Kind);
    atomic_store(result, (unint64_t *)&qword_1EE7A8D38);
  }
  return result;
}

uint64_t sub_1A5619138(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  int64_t v23;

  v22 = a4 + 56;
  v8 = 1 << *(_BYTE *)(a4 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a4 + 56);
  v23 = (unint64_t)(v8 + 63) >> 6;
  result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v12 = 0;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v12 << 6);
      goto LABEL_5;
    }
    v19 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v23)
      return swift_release();
    v20 = *(_QWORD *)(v22 + 8 * v19);
    ++v12;
    if (!v20)
    {
      v12 = v19 + 1;
      if (v19 + 1 >= v23)
        return swift_release();
      v20 = *(_QWORD *)(v22 + 8 * v12);
      if (!v20)
      {
        v12 = v19 + 2;
        if (v19 + 2 >= v23)
          return swift_release();
        v20 = *(_QWORD *)(v22 + 8 * v12);
        if (!v20)
        {
          v12 = v19 + 3;
          if (v19 + 3 >= v23)
            return swift_release();
          v20 = *(_QWORD *)(v22 + 8 * v12);
          if (!v20)
            break;
        }
      }
    }
LABEL_22:
    v10 = (v20 - 1) & v20;
    v14 = __clz(__rbit64(v20)) + (v12 << 6);
LABEL_5:
    v15 = (uint64_t *)(*(_QWORD *)(a4 + 48) + 24 * v14);
    v16 = *v15;
    v17 = v15[1];
    v18 = v15[2];
    sub_1A54FA300(*v15, v17);
    sub_1A5650444(a1, a2, a3, v16, v17, v18);
    result = sub_1A54FA2A8(v16, v17);
  }
  v21 = v19 + 4;
  if (v21 >= v23)
    return swift_release();
  v20 = *(_QWORD *)(v22 + 8 * v21);
  if (v20)
  {
    v12 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    v12 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v12 >= v23)
      return swift_release();
    v20 = *(_QWORD *)(v22 + 8 * v12);
    ++v21;
    if (v20)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1A561931C(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  _QWORD *v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  void *v29;
  id v30;
  char v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  __int128 v37;
  __int128 v38;
  unint64_t v39;
  id v40;

  v4 = *(_QWORD *)(a1 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (!v4)
  {
LABEL_18:
    swift_bridgeObjectRelease_n();
    return;
  }
  v5 = 0;
  v6 = 0;
  while (1)
  {
    if (v6 >= *(_QWORD *)(a1 + 16))
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      sub_1A594CDF8();
      __break(1u);
      goto LABEL_24;
    }
    v7 = *(unsigned __int8 *)(a1 + v5 + 32);
    v8 = *(unsigned int *)(a1 + v5 + 36);
    v9 = *(_QWORD *)(a1 + v5 + 40);
    v10 = *(unsigned int *)(a1 + v5 + 48);
    v12 = *(_QWORD *)(a1 + v5 + 56);
    v11 = *(_QWORD *)(a1 + v5 + 64);
    v34 = *(_QWORD *)(a1 + v5 + 72);
    v33 = *(_BYTE *)(a1 + v5 + 80);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54E42B4(v12, v11);
    if (!v9)
      goto LABEL_18;
    *(_QWORD *)&v37 = v7 | (v8 << 32);
    *((_QWORD *)&v37 + 1) = v9;
    *(_QWORD *)&v38 = v10;
    *((_QWORD *)&v38 + 1) = v12;
    v39 = v11;
    v36 = v11;
    v35 = v12;
    v13 = (_QWORD *)*a3;
    v15 = sub_1A54FE150((uint64_t)&v37);
    v16 = v13[2];
    v17 = (v14 & 1) == 0;
    v18 = v16 + v17;
    if (__OFADD__(v16, v17))
      goto LABEL_21;
    v19 = v14;
    if (v13[3] < v18)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v14 & 1) != 0)
        goto LABEL_16;
    }
    else
    {
      sub_1A5550F80();
      if ((v19 & 1) != 0)
        goto LABEL_16;
    }
LABEL_12:
    v22 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v15 >> 6) + 64) |= 1 << v15;
    v23 = v22[6] + 40 * v15;
    v24 = v38;
    *(_OWORD *)v23 = v37;
    *(_OWORD *)(v23 + 16) = v24;
    *(_QWORD *)(v23 + 32) = v39;
    v25 = v22[7] + 12 * v15;
    *(_QWORD *)v25 = v34;
    *(_BYTE *)(v25 + 8) = v33;
    v26 = v22[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
      goto LABEL_22;
    ++v6;
    v22[2] = v28;
    v5 += 56;
    a2 = 1;
    if (v4 == v6)
      goto LABEL_18;
  }
  sub_1A55848D0(v18, a2 & 1);
  v20 = sub_1A54FE150((uint64_t)&v37);
  if ((v19 & 1) != (v21 & 1))
    goto LABEL_23;
  v15 = v20;
  if ((v19 & 1) == 0)
    goto LABEL_12;
LABEL_16:
  v29 = (void *)swift_allocError();
  swift_willThrow();
  v40 = v29;
  v30 = v29;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A54E46E8(v35, v36);
    swift_bridgeObjectRelease();

    return;
  }
LABEL_24:
  sub_1A594C720();
  sub_1A594B5F8();
  sub_1A594C924();
  sub_1A594B5F8();
  sub_1A594C9C0();
  __break(1u);
}

unint64_t sub_1A561965C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  unint64_t result;
  char v17;
  uint64_t v18;
  _BOOL8 v19;
  BOOL v20;
  uint64_t v21;
  char v22;
  char v23;
  _QWORD *v24;
  uint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  char v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  char v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v7 = -1 << *(_BYTE *)(a1 + 32);
  v8 = ~v7;
  v9 = *(_QWORD *)(a1 + 64);
  v10 = -v7;
  v44 = a1;
  v45 = a1 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v46 = v8;
  v47 = 0;
  v48 = v11 & v9;
  v49 = a2;
  v50 = a3;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_retain();
  sub_1A5602478(&v41);
  v12 = v43;
  if (v43 >> 60 == 15)
    goto LABEL_16;
  v13 = v41;
  v14 = v42;
  v15 = (_QWORD *)*a5;
  result = sub_1A54FDC2C(v41);
  v18 = v15[2];
  v19 = (v17 & 1) == 0;
  v20 = __OFADD__(v18, v19);
  v21 = v18 + v19;
  if (v20)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v22 = v17;
  if (v15[3] < v21)
  {
    sub_1A5585174(v21, a4 & 1);
    result = sub_1A54FDC2C(v13);
    if ((v22 & 1) == (v23 & 1))
      goto LABEL_10;
LABEL_8:
    result = sub_1A594CDF8();
    __break(1u);
  }
  if ((a4 & 1) == 0)
  {
    v26 = result;
    sub_1A55514EC();
    result = v26;
    v24 = (_QWORD *)*a5;
    if ((v22 & 1) != 0)
      goto LABEL_11;
    goto LABEL_13;
  }
LABEL_10:
  v24 = (_QWORD *)*a5;
  if ((v22 & 1) != 0)
  {
LABEL_11:
    v25 = v24[7] + 16 * result;
    sub_1A54E46E8(*(_QWORD *)v25, *(_QWORD *)(v25 + 8));
    *(_QWORD *)v25 = v14;
    *(_QWORD *)(v25 + 8) = v12;
LABEL_15:
    sub_1A5602478(&v41);
    v12 = v43;
    if (v43 >> 60 == 15)
    {
LABEL_16:
      swift_release();
      swift_bridgeObjectRelease();
      sub_1A550F72C();
      return swift_release();
    }
    v22 = 1;
    while (1)
    {
      v13 = v41;
      v14 = v42;
      v31 = (_QWORD *)*a5;
      result = sub_1A54FDC2C(v41);
      v33 = v31[2];
      v34 = (v32 & 1) == 0;
      v20 = __OFADD__(v33, v34);
      v35 = v33 + v34;
      if (v20)
        goto LABEL_26;
      a4 = v32;
      if (v31[3] < v35)
      {
        sub_1A5585174(v35, 1);
        result = sub_1A54FDC2C(v13);
        if ((a4 & 1) != (v36 & 1))
          goto LABEL_8;
      }
      v37 = (_QWORD *)*a5;
      if ((a4 & 1) != 0)
      {
        v30 = v37[7] + 16 * result;
        sub_1A54E46E8(*(_QWORD *)v30, *(_QWORD *)(v30 + 8));
        *(_QWORD *)v30 = v14;
        *(_QWORD *)(v30 + 8) = v12;
      }
      else
      {
        v37[(result >> 6) + 8] |= 1 << result;
        *(_DWORD *)(v37[6] + 4 * result) = v13;
        v38 = (_QWORD *)(v37[7] + 16 * result);
        *v38 = v14;
        v38[1] = v12;
        v39 = v37[2];
        v20 = __OFADD__(v39, 1);
        v40 = v39 + 1;
        if (v20)
          goto LABEL_27;
        v37[2] = v40;
      }
      sub_1A5602478(&v41);
      v12 = v43;
      if (v43 >> 60 == 15)
        goto LABEL_16;
    }
  }
LABEL_13:
  v24[(result >> 6) + 8] |= 1 << result;
  *(_DWORD *)(v24[6] + 4 * result) = v13;
  v27 = (_QWORD *)(v24[7] + 16 * result);
  *v27 = v14;
  v27[1] = v12;
  v28 = v24[2];
  v20 = __OFADD__(v28, 1);
  v29 = v28 + 1;
  if (!v20)
  {
    v24[2] = v29;
    goto LABEL_15;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1A5619938(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  _BOOL8 v21;
  BOOL v22;
  uint64_t v23;
  char v24;
  char v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  _QWORD *v33;
  char v34;
  uint64_t v35;
  _BOOL8 v36;
  uint64_t v37;
  char v38;
  char v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unsigned int v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v8 = -1 << *(_BYTE *)(a1 + 32);
  v9 = ~v8;
  v10 = *(_QWORD *)(a1 + 64);
  v11 = -v8;
  v49 = a1;
  v50 = a1 + 64;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  else
    v12 = -1;
  v51 = v9;
  v52 = 0;
  v53 = v12 & v10;
  v54 = a2;
  v55 = a3;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_retain();
  sub_1A5602604((uint64_t)&v45);
  v13 = v46;
  if (v46 != 2)
  {
    v14 = v45;
    v15 = v47;
    v16 = v48;
    v17 = (_QWORD *)*a5;
    v18 = sub_1A54FDC2C(v45);
    v20 = v17[2];
    v21 = (v19 & 1) == 0;
    v22 = __OFADD__(v20, v21);
    v23 = v20 + v21;
    if (v22)
      goto LABEL_25;
    LOBYTE(v5) = v19;
    if (v17[3] < v23)
    {
      sub_1A558544C(v23, a4 & 1);
      v18 = sub_1A54FDC2C(v14);
      if ((v5 & 1) == (v24 & 1))
        goto LABEL_10;
LABEL_8:
      v18 = sub_1A594CDF8();
      __break(1u);
    }
    if ((a4 & 1) == 0)
      goto LABEL_27;
    while (1)
    {
LABEL_10:
      v25 = v13 & 1;
      v26 = (_QWORD *)*a5;
      if ((v5 & 1) != 0)
      {
        v27 = v26[7] + 24 * v18;
        sub_1A54E46E8(*(_QWORD *)(v27 + 8), *(_QWORD *)(v27 + 16));
        *(_BYTE *)v27 = v25;
        *(_QWORD *)(v27 + 8) = v15;
        *(_QWORD *)(v27 + 16) = v16;
      }
      else
      {
        v26[(v18 >> 6) + 8] |= 1 << v18;
        *(_DWORD *)(v26[6] + 4 * v18) = v14;
        v28 = v26[7] + 24 * v18;
        *(_BYTE *)v28 = v25;
        *(_QWORD *)(v28 + 8) = v15;
        *(_QWORD *)(v28 + 16) = v16;
        v29 = v26[2];
        v22 = __OFADD__(v29, 1);
        v30 = v29 + 1;
        if (v22)
          goto LABEL_26;
        v26[2] = v30;
      }
      sub_1A5602604((uint64_t)&v45);
      v13 = v46;
      if (v46 == 2)
        break;
      v16 = 24;
      while (1)
      {
        v14 = v45;
        v5 = v47;
        v15 = v48;
        v33 = (_QWORD *)*a5;
        v18 = sub_1A54FDC2C(v45);
        v35 = v33[2];
        v36 = (v34 & 1) == 0;
        v22 = __OFADD__(v35, v36);
        v37 = v35 + v36;
        if (v22)
          break;
        a4 = v34;
        if (v33[3] < v37)
        {
          sub_1A558544C(v37, 1);
          v18 = sub_1A54FDC2C(v14);
          if ((a4 & 1) != (v38 & 1))
            goto LABEL_8;
        }
        v39 = v13 & 1;
        v40 = (_QWORD *)*a5;
        if ((a4 & 1) != 0)
        {
          v32 = v40[7] + 24 * v18;
          sub_1A54E46E8(*(_QWORD *)(v32 + 8), *(_QWORD *)(v32 + 16));
          *(_BYTE *)v32 = v39;
          *(_QWORD *)(v32 + 8) = v5;
          *(_QWORD *)(v32 + 16) = v15;
        }
        else
        {
          v40[(v18 >> 6) + 8] |= 1 << v18;
          *(_DWORD *)(v40[6] + 4 * v18) = v14;
          v41 = v40[7] + 24 * v18;
          *(_BYTE *)v41 = v39;
          *(_QWORD *)(v41 + 8) = v5;
          *(_QWORD *)(v41 + 16) = v15;
          v42 = v40[2];
          v22 = __OFADD__(v42, 1);
          v43 = v42 + 1;
          if (v22)
            goto LABEL_26;
          v40[2] = v43;
        }
        sub_1A5602604((uint64_t)&v45);
        v13 = v46;
        if (v46 == 2)
          goto LABEL_15;
      }
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      v44 = v18;
      sub_1A5551698();
      v18 = v44;
    }
  }
LABEL_15:
  swift_release();
  swift_bridgeObjectRelease();
  sub_1A550F72C();
  return swift_release();
}

uint64_t sub_1A5619C30(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AB68);
  result = sub_1A594CA44();
  v3 = (_QWORD *)result;
  v4 = 0;
  v5 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = result + 64;
  if (!v8)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v11 | (v4 << 6); ; i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    v16 = *(_DWORD *)(*(_QWORD *)(a1 + 48) + 4 * i);
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * i);
    result = *v17;
    v18 = v17[1];
    *(_QWORD *)(v10 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(_DWORD *)(v3[6] + 4 * i) = v16;
    v19 = v3[7] + 24 * i;
    *(_BYTE *)v19 = 0;
    *(_QWORD *)(v19 + 8) = result;
    *(_QWORD *)(v19 + 16) = v18;
    v20 = v3[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v22;
    result = sub_1A54E42B4(result, v18);
    if (v8)
      goto LABEL_4;
LABEL_5:
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_24;
    if (v13 >= v9)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v4;
    if (!v14)
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v9)
        return (uint64_t)v3;
      v14 = *(_QWORD *)(v5 + 8 * v4);
      if (!v14)
      {
        v4 = v13 + 2;
        if (v13 + 2 >= v9)
          return (uint64_t)v3;
        v14 = *(_QWORD *)(v5 + 8 * v4);
        if (!v14)
          break;
      }
    }
LABEL_18:
    v8 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v9)
    return (uint64_t)v3;
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
  {
    v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v4 >= v9)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    ++v15;
    if (v14)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1A5619DE8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;
  _QWORD *v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  unint64_t i;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  int v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AB70);
  result = sub_1A594CA44();
  v7 = (_QWORD *)result;
  v8 = 0;
  v9 = a1 + 64;
  v10 = 1 << *(_BYTE *)(a1 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(a1 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  v14 = result + 64;
  v15 = a3 & 1;
  if (!v12)
    goto LABEL_5;
LABEL_4:
  v16 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (i = v16 | (v8 << 6); ; i = __clz(__rbit64(v19)) + (v8 << 6))
  {
    v21 = *(_DWORD *)(*(_QWORD *)(a1 + 48) + 4 * i);
    v22 = *(_QWORD *)(a1 + 56) + 24 * i;
    v23 = *(_BYTE *)v22;
    result = *(_QWORD *)(v22 + 8);
    v24 = *(_QWORD *)(v22 + 16);
    *(_QWORD *)(v14 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(_DWORD *)(v7[6] + 4 * i) = v21;
    v25 = v7[7] + 40 * i;
    *(_BYTE *)v25 = v23;
    *(_QWORD *)(v25 + 8) = result;
    *(_QWORD *)(v25 + 16) = v24;
    *(_QWORD *)(v25 + 24) = a2;
    *(_BYTE *)(v25 + 32) = v15;
    v26 = v7[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v7[2] = v28;
    result = sub_1A54E42B4(result, v24);
    if (v12)
      goto LABEL_4;
LABEL_5:
    v18 = v8 + 1;
    if (__OFADD__(v8, 1))
      goto LABEL_24;
    if (v18 >= v13)
      return (uint64_t)v7;
    v19 = *(_QWORD *)(v9 + 8 * v18);
    ++v8;
    if (!v19)
    {
      v8 = v18 + 1;
      if (v18 + 1 >= v13)
        return (uint64_t)v7;
      v19 = *(_QWORD *)(v9 + 8 * v8);
      if (!v19)
      {
        v8 = v18 + 2;
        if (v18 + 2 >= v13)
          return (uint64_t)v7;
        v19 = *(_QWORD *)(v9 + 8 * v8);
        if (!v19)
          break;
      }
    }
LABEL_18:
    v12 = (v19 - 1) & v19;
  }
  v20 = v18 + 3;
  if (v20 >= v13)
    return (uint64_t)v7;
  v19 = *(_QWORD *)(v9 + 8 * v20);
  if (v19)
  {
    v8 = v20;
    goto LABEL_18;
  }
  while (1)
  {
    v8 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v8 >= v13)
      return (uint64_t)v7;
    v19 = *(_QWORD *)(v9 + 8 * v8);
    ++v20;
    if (v19)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1A5619FC0(uint64_t isStackAllocationSafe, uint64_t (*a2)(char *, unint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  unint64_t v6;
  size_t v7;
  uint64_t v8;
  void *v9;
  _QWORD v11[2];

  v4 = isStackAllocationSafe;
  v11[1] = *MEMORY[0x1E0C80C00];
  v5 = *(_BYTE *)(isStackAllocationSafe + 32);
  v6 = (unint64_t)((1 << v5) + 63) >> 6;
  v7 = 8 * v6;
  if ((v5 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    v8 = a2((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v6, v4);
    swift_release();
    if (v2)
      swift_willThrow();
  }
  else
  {
    v9 = (void *)swift_slowAlloc();
    bzero(v9, v7);
    v8 = a2((char *)v9, v6, v4);
    swift_release();
    MEMORY[0x1A85B1964](v9, -1, -1);
  }
  return v8;
}

void sub_1A561A128(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;

  v6 = 0;
  v7 = 0;
  v8 = a3 + 56;
  v9 = 1 << *(_BYTE *)(a3 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v7 << 6);
      goto LABEL_5;
    }
    v15 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v15 >= v12)
      goto LABEL_24;
    v16 = *(_QWORD *)(v8 + 8 * v15);
    ++v7;
    if (!v16)
    {
      v7 = v15 + 1;
      if (v15 + 1 >= v12)
        goto LABEL_24;
      v16 = *(_QWORD *)(v8 + 8 * v7);
      if (!v16)
      {
        v7 = v15 + 2;
        if (v15 + 2 >= v12)
          goto LABEL_24;
        v16 = *(_QWORD *)(v8 + 8 * v7);
        if (!v16)
          break;
      }
    }
LABEL_20:
    v11 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v7 << 6);
LABEL_5:
    if (!(*(_QWORD *)(*(_QWORD *)(a3 + 48) + 24 * v14 + 8) >> 62))
    {
      *(unint64_t *)((char *)a1 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      if (__OFADD__(v6++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        sub_1A5588B94(a1, a2, v6, a3);
        return;
      }
    }
  }
  v17 = v15 + 3;
  if (v17 >= v12)
    goto LABEL_24;
  v16 = *(_QWORD *)(v8 + 8 * v17);
  if (v16)
  {
    v7 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    v7 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v7 >= v12)
      goto LABEL_24;
    v16 = *(_QWORD *)(v8 + 8 * v7);
    ++v17;
    if (v16)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
}

void sub_1A561A2A4(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;

  v6 = 0;
  v7 = 0;
  v8 = a3 + 56;
  v9 = 1 << *(_BYTE *)(a3 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v7 << 6);
      goto LABEL_5;
    }
    v15 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v15 >= v12)
      goto LABEL_24;
    v16 = *(_QWORD *)(v8 + 8 * v15);
    ++v7;
    if (!v16)
    {
      v7 = v15 + 1;
      if (v15 + 1 >= v12)
        goto LABEL_24;
      v16 = *(_QWORD *)(v8 + 8 * v7);
      if (!v16)
      {
        v7 = v15 + 2;
        if (v15 + 2 >= v12)
          goto LABEL_24;
        v16 = *(_QWORD *)(v8 + 8 * v7);
        if (!v16)
          break;
      }
    }
LABEL_20:
    v11 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v7 << 6);
LABEL_5:
    if (*(_QWORD *)(*(_QWORD *)(a3 + 48) + 24 * v14 + 8) >> 62 == 1)
    {
      *(unint64_t *)((char *)a1 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      if (__OFADD__(v6++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        sub_1A5588B94(a1, a2, v6, a3);
        return;
      }
    }
  }
  v17 = v15 + 3;
  if (v17 >= v12)
    goto LABEL_24;
  v16 = *(_QWORD *)(v8 + 8 * v17);
  if (v16)
  {
    v7 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    v7 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v7 >= v12)
      goto LABEL_24;
    v16 = *(_QWORD *)(v8 + 8 * v7);
    ++v17;
    if (v16)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_1A561A424(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) == 0)
    {
      if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
      {
        __break(1u);
LABEL_18:
        __break(1u);
        goto LABEL_19;
      }
      if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) == 0)
      {
LABEL_19:
        __break(1u);
        JUMPOUT(0x1A561AA5CLL);
      }
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
      {
        v5 = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * a1);
        swift_retain();
        return v5;
      }
      __break(1u);
    }
    if (sub_1A594C60C() == *(_DWORD *)(a4 + 36))
    {
      sub_1A594C618();
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797A18);
      swift_dynamicCast();
      swift_unknownObjectRelease();
      sub_1A594CE64();
      swift_beginAccess();
      __asm { BR              X10 }
    }
    goto LABEL_18;
  }
  if ((a3 & 1) == 0)
  {
    __break(1u);
    JUMPOUT(0x1A561AA6CLL);
  }
  if (a4 < 0)
    v4 = a4;
  else
    v4 = a4 & 0xFFFFFFFFFFFFFF8;
  MEMORY[0x1A85AEAB4](a1, a2, v4);
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797A18);
  swift_dynamicCast();
  v5 = v7;
  swift_unknownObjectRelease();
  return v5;
}

uint64_t sub_1A561AA98@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  unint64_t v3;
  uint64_t v4;

  v2 = *a1;
  v4 = *((_QWORD *)a1 + 1);
  v3 = *((_QWORD *)a1 + 2);
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v3;
  *(_DWORD *)a2 = v2;
  return sub_1A54E42B4(v4, v3);
}

uint64_t sub_1A561AAB0@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  unint64_t v3;
  uint64_t v4;

  v2 = *a1;
  v4 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  *(_BYTE *)(a2 + 8) = *((_BYTE *)a1 + 8);
  *(_QWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 24) = v3;
  *(_DWORD *)a2 = v2;
  return sub_1A54E42B4(v4, v3);
}

void sub_1A561AAD0(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

void sub_1A561AB18()
{
  int32x2_t *v0;
  int32x2_t *v1;
  unint64_t v2;
  uint64_t v3;

  if (!(v2 >> 62))
  {
    sub_1A54E3414();
    static MessageIdentifierSet.__derived_struct_equals(_:_:)(v1, v3 & 0xFFFFFFFFFFLL, v0, v2 & 0xFFFFFFFFFFLL);
  }
}

uint64_t sub_1A561AC04(uint64_t a1, int32x2_t *a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int32x2_t *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v21;
  unsigned int v22;
  char v23;
  uint64_t v24;

  v19 = *(_QWORD *)(a1 + 16);
  if (!v19)
    return 0;
  v18 = a1 + 32;
  v4 = sub_1A54E3414();
  v5 = 0;
  while (1)
  {
    v6 = *(_QWORD *)(v18 + 24 * v5 + 8);
    v7 = (int32x2_t *)MessageIdentifierSet.init()(&type metadata for UID, v4);
    v8 = v6;
    v10 = v9;
    v11 = HIDWORD(v9);
    v22 = v9;
    v23 = BYTE4(v9);
    v12 = *(_QWORD *)(v8 + 16);
    if (v12)
    {
      v13 = (uint64_t *)(v8 + 32);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      do
      {
        v14 = *v13++;
        v24 = v14;
        v24 = Range<>.init<A>(_:)((uint64_t)&v24, (uint64_t)&type metadata for UID, v4);
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7971B8);
        RangeSet.insert(contentsOf:)();
        --v12;
      }
      while (v12);
      v10 = v22;
      LOBYTE(v11) = v23;
    }
    else
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
    v21 = v21 & 0xFFFFFF0000000000 | v10 | ((unint64_t)v11 << 32);
    static MessageIdentifierSet.__derived_struct_equals(_:_:)(v7, v21, a2, a3 & 0xFFFFFFFFFFLL);
    v16 = v15;
    sub_1A54E3458((uint64_t)v7, v10, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) != 0)
      break;
    if (++v5 == v19)
      return 0;
  }
  return v5;
}

uint64_t sub_1A561ADC4(uint64_t a1)
{
  return sub_1A561ADD8(a1);
}

uint64_t sub_1A561ADD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  unsigned __int8 v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t (*v22)(_QWORD *, _QWORD);
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD v26[5];
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 v29;
  uint64_t v30;

  v1 = a1;
  v24 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
    v2 = sub_1A594C624();
  else
    v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v30 = MEMORY[0x1E0DEE9D8];
    sub_1A54F4F20(0, v2 & ~(v2 >> 63), 0);
    if (v24)
    {
      result = sub_1A594C5E8();
      v5 = 1;
    }
    else
    {
      result = sub_1A562A1FC(v1);
      v5 = v6 & 1;
    }
    v27 = result;
    v28 = v4;
    v29 = v5;
    if ((v2 & 0x8000000000000000) == 0)
    {
      v23 = v1;
      while (v2)
      {
        v13 = v27;
        v12 = v28;
        v14 = v29;
        v26[4] = sub_1A561A424(v27, v28, v29, v1);
        swift_getAtKeyPath();
        swift_release();
        v16 = v26[0];
        v15 = v26[1];
        v17 = v26[2];
        v18 = v30;
        result = swift_isUniquelyReferenced_nonNull_native();
        v25 = v2;
        if ((result & 1) == 0)
        {
          result = sub_1A54F4F20(0, *(_QWORD *)(v18 + 16) + 1, 1);
          v18 = v30;
        }
        v20 = *(_QWORD *)(v18 + 16);
        v19 = *(_QWORD *)(v18 + 24);
        if (v20 >= v19 >> 1)
        {
          result = sub_1A54F4F20(v19 > 1, v20 + 1, 1);
          v18 = v30;
        }
        *(_QWORD *)(v18 + 16) = v20 + 1;
        v21 = (_QWORD *)(v18 + 24 * v20);
        v21[4] = v16;
        v21[5] = v15;
        v21[6] = v17;
        if (v24)
        {
          v1 = v23;
          if ((v14 & 1) == 0)
            goto LABEL_25;
          if (sub_1A594C600())
            swift_isUniquelyReferenced_nonNull_native();
          __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8D50);
          v22 = (uint64_t (*)(_QWORD *, _QWORD))sub_1A594BC04();
          sub_1A594C660();
          result = v22(v26, 0);
          --v2;
          if (v25 == 1)
          {
LABEL_21:
            sub_1A5529B00(v27, v28, v29);
            return v30;
          }
        }
        else
        {
          v1 = v23;
          v7 = sub_1A558A15C(v13, v12, v14, v23);
          v9 = v8;
          v11 = v10;
          result = sub_1A5529B00(v13, v12, v14);
          v27 = v7;
          v28 = v9;
          v29 = v11 & 1;
          v2 = v25 - 1;
          if (v25 == 1)
            goto LABEL_21;
        }
      }
      __break(1u);
    }
    __break(1u);
LABEL_25:
    __break(1u);
  }
  return result;
}

uint64_t sub_1A561B05C(uint64_t a1, uint64_t a2, int a3)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  int64_t v12;
  unint64_t v13;
  int v14;
  unsigned __int8 *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  int64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  int v37;
  char v38;
  unsigned __int8 v39;
  uint64_t v40;
  char v41[4];
  int v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = MEMORY[0x1E0DEE9D8];
  if (!v3)
    return v4;
  v5 = a1;
  v47 = MEMORY[0x1E0DEE9D8];
  sub_1A54F52BC(0, v3, 0);
  v4 = v47;
  result = sub_1A5520D6C(v5);
  v8 = result;
  v9 = 0;
  v10 = v5 + 64;
  v27 = v5 + 80;
  v28 = v3;
  v29 = v7;
  v30 = v5 + 64;
  while ((v8 & 0x8000000000000000) == 0 && v8 < 1 << *(_BYTE *)(v5 + 32))
  {
    v13 = (unint64_t)v8 >> 6;
    if ((*(_QWORD *)(v10 + 8 * ((unint64_t)v8 >> 6)) & (1 << v8)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(v5 + 36) != v7)
      goto LABEL_24;
    v14 = *(_DWORD *)(*(_QWORD *)(v5 + 48) + 4 * v8);
    v15 = (unsigned __int8 *)(*(_QWORD *)(v5 + 56) + 40 * v8);
    v16 = v5;
    v18 = *((_QWORD *)v15 + 1);
    v17 = *((_QWORD *)v15 + 2);
    v40 = *((_QWORD *)v15 + 3);
    v39 = v15[32];
    MoveOrCopy.init(operation:sourceMessage:targetMailbox:targetMessage:)(*v15, v14, a2, a3, v18, v17, (uint64_t)v41);
    v37 = v42;
    v38 = v41[0];
    v36 = v43;
    v35 = v44;
    v33 = v46;
    v34 = v45;
    sub_1A54E42B4(v18, v17);
    v47 = v4;
    v19 = *(_QWORD *)(v4 + 16);
    v20 = *(_QWORD *)(v4 + 24);
    result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v19 >= v20 >> 1)
    {
      result = sub_1A54F52BC(v20 > 1, v19 + 1, 1);
      v4 = v47;
    }
    *(_QWORD *)(v4 + 16) = v19 + 1;
    v21 = v4 + 56 * v19;
    *(_BYTE *)(v21 + 32) = v38;
    *(_DWORD *)(v21 + 36) = v37;
    *(_QWORD *)(v21 + 40) = v36;
    *(_DWORD *)(v21 + 48) = v35;
    *(_QWORD *)(v21 + 56) = v34;
    *(_QWORD *)(v21 + 64) = v33;
    *(_QWORD *)(v21 + 72) = v40;
    *(_BYTE *)(v21 + 80) = v39;
    v11 = 1 << *(_BYTE *)(v16 + 32);
    if (v8 >= v11)
      goto LABEL_25;
    v10 = v30;
    v22 = *(_QWORD *)(v30 + 8 * v13);
    if ((v22 & (1 << v8)) == 0)
      goto LABEL_26;
    v5 = v16;
    v7 = v29;
    if (*(_DWORD *)(v16 + 36) != v29)
      goto LABEL_27;
    v23 = v22 & (-2 << (v8 & 0x3F));
    if (v23)
    {
      v11 = __clz(__rbit64(v23)) | v8 & 0xFFFFFFFFFFFFFFC0;
      v12 = v28;
    }
    else
    {
      v24 = v13 + 1;
      v25 = (unint64_t)(v11 + 63) >> 6;
      v12 = v28;
      if (v13 + 1 < v25)
      {
        v26 = *(_QWORD *)(v30 + 8 * v24);
        if (v26)
        {
LABEL_20:
          v11 = __clz(__rbit64(v26)) + (v24 << 6);
        }
        else
        {
          while (v25 - 2 != v13)
          {
            v26 = *(_QWORD *)(v27 + 8 * v13++);
            if (v26)
            {
              v24 = v13 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v9;
    v8 = v11;
    if (v9 == v12)
      return v4;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1A561B314(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;

  if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0 && sub_1A594CA38())
    v2 = sub_1A54F8DF0(MEMORY[0x1E0DEE9D8]);
  else
    v2 = MEMORY[0x1E0DEE9E8];
  v3 = MEMORY[0x1E0DEE9D8];
  sub_1A557303C(MEMORY[0x1E0DEE9D8]);
  sub_1A557303C(v3);
  v12 = v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v5 = (uint64_t *)(a1 + 48);
    do
    {
      v6 = *(v5 - 2);
      v7 = *(v5 - 1);
      v8 = *v5;
      v5 += 3;
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797A18);
      v9 = (_QWORD *)swift_allocObject();
      v9[2] = v6;
      v9[3] = v7;
      v9[4] = v8;
      sub_1A54FA300(v6, v7);
      sub_1A54FA300(v6, v7);
      sub_1A54F3960(&v11, (uint64_t)v9);
      swift_release();
      sub_1A54FA2A8(v6, v7);
      --v4;
    }
    while (v4);
    return v12;
  }
  return v2;
}

uint64_t sub_1A561B454(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;

  v2 = MEMORY[0x1E0DEE9D8];
  v3 = sub_1A561B314(MEMORY[0x1E0DEE9D8]);
  sub_1A5572F04(v2);
  v12 = v3;
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v5 = (uint64_t *)(a1 + 48);
    do
    {
      v6 = *(v5 - 2);
      v7 = *(v5 - 1);
      v8 = *v5;
      v5 += 3;
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797A18);
      v9 = (_QWORD *)swift_allocObject();
      v9[2] = v6;
      v9[3] = v7;
      v9[4] = v8;
      sub_1A54FA300(v6, v7);
      sub_1A54FA300(v6, v7);
      sub_1A54F3960(&v11, (uint64_t)v9);
      swift_release();
      sub_1A54FA2A8(v6, v7);
      --v4;
    }
    while (v4);
    return v12;
  }
  return v3;
}

uint64_t storeEnumTagSinglePayload for MoveAndCopyMessages.CommandID.Kind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A561B5B8 + 4 * byte_1A59AA531[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A561B5EC + 4 * byte_1A59AA52C[v4]))();
}

uint64_t sub_1A561B5EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A561B5F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A561B5FCLL);
  return result;
}

uint64_t sub_1A561B608(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A561B610);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A561B614(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A561B61C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MoveAndCopyMessages.CommandID.Kind()
{
  return &type metadata for MoveAndCopyMessages.CommandID.Kind;
}

ValueMetadata *type metadata accessor for MoveAndCopyMessages.Move()
{
  return &type metadata for MoveAndCopyMessages.Move;
}

ValueMetadata *type metadata accessor for MoveAndCopyMessages.Copy()
{
  return &type metadata for MoveAndCopyMessages.Copy;
}

uint64_t _s13IMAP2Behavior19MoveAndCopyMessagesV16CompletedCommandVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t _s13IMAP2Behavior19MoveAndCopyMessagesV16CompletedCommandVwca_0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13IMAP2Behavior19MoveAndCopyMessagesV16CompletedCommandVwta_0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for MoveAndCopyMessages.CompletedCommand()
{
  return &type metadata for MoveAndCopyMessages.CompletedCommand;
}

uint64_t destroy for MoveAndCopyMessages(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MoveAndCopyMessages(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v5 = a2 + 56;
  v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v8(a1 + 56, v5, v7);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_BYTE *)(a1 + 105) = *(_BYTE *)(a2 + 105);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  v9 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v9;
  v10 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v10;
  v11 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v11;
  v13 = *(_QWORD *)(a2 + 176);
  v12 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = v13;
  *(_QWORD *)(a1 + 184) = v12;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for MoveAndCopyMessages(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 56), (uint64_t *)(a2 + 56));
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_BYTE *)(a1 + 105) = *(_BYTE *)(a2 + 105);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy192_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  v5 = a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  result = (__n128)a2[8];
  v9 = a2[9];
  v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 128) = result;
  *(_OWORD *)(a1 + 144) = v9;
  return result;
}

uint64_t assignWithTake for MoveAndCopyMessages(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  __swift_destroy_boxed_opaque_existential_1(a1 + 56);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v4 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_BYTE *)(a1 + 105) = *(_BYTE *)(a2 + 105);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MoveAndCopyMessages(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 192))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MoveAndCopyMessages(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 192) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 192) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MoveAndCopyMessages()
{
  return &type metadata for MoveAndCopyMessages;
}

uint64_t destroy for MoveAndCopyMessages.CommandID(uint64_t a1)
{
  return sub_1A54FA2A8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

uint64_t *_s13IMAP2Behavior19MoveAndCopyMessagesV9CommandIDOwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  sub_1A54FA300(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  return a1;
}

uint64_t *assignWithCopy for MoveAndCopyMessages.CommandID(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  sub_1A54FA300(*a2, v4);
  v6 = *a1;
  v7 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  sub_1A54FA2A8(v6, v7);
  return a1;
}

uint64_t *assignWithTake for MoveAndCopyMessages.CommandID(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *a1;
  v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v3;
  sub_1A54FA2A8(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for MoveAndCopyMessages.CommandID(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x3FFFFFFD && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1073741821);
  v3 = (((*(_QWORD *)(a1 + 8) >> 34) >> 28) & 0xC0000003 | (4 * ((*(_QWORD *)(a1 + 8) >> 34) & 0xFFFFFFF))) ^ 0x3FFFFFFF;
  if (v3 >= 0x3FFFFFFC)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for MoveAndCopyMessages.CommandID(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3FFFFFFC)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 1073741821;
    if (a3 >= 0x3FFFFFFD)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x3FFFFFFD)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)(((-a2 >> 2) & 0xFFFFFFF) - (a2 << 28)) << 34;
      *(_QWORD *)(result + 16) = 0;
    }
  }
  return result;
}

uint64_t sub_1A561BEC0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 8) >> 62;
  if ((_DWORD)v1 == 3)
    return (*(_DWORD *)a1 + 3);
  else
    return v1;
}

_QWORD *sub_1A561BEDC(_QWORD *result, uint64_t a2)
{
  if (a2 < 3)
  {
    result[1] = result[1] & 0x3FFFFFFFFLL | (a2 << 62);
  }
  else
  {
    *result = (a2 - 3);
    *(_OWORD *)(result + 1) = xmmword_1A59ABE00;
  }
  return result;
}

ValueMetadata *type metadata accessor for MoveAndCopyMessages.CommandID()
{
  return &type metadata for MoveAndCopyMessages.CommandID;
}

unint64_t sub_1A561BF20()
{
  unint64_t result;

  result = qword_1EE7978D8;
  if (!qword_1EE7978D8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AA5E4, &type metadata for MoveAndCopyMessages.CommandID);
    atomic_store(result, (unint64_t *)&qword_1EE7978D8);
  }
  return result;
}

unint64_t sub_1A561BF68()
{
  unint64_t result;

  result = qword_1EE7978C8;
  if (!qword_1EE7978C8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AA690, &type metadata for MoveAndCopyMessages.ActionID);
    atomic_store(result, (unint64_t *)&qword_1EE7978C8);
  }
  return result;
}

unint64_t sub_1A561BFAC(uint64_t a1)
{
  unint64_t result;

  result = sub_1A561BFD0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A561BFD0()
{
  unint64_t result;

  result = qword_1EE7978E8[0];
  if (!qword_1EE7978E8[0])
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AA64C, &type metadata for MoveAndCopyMessages);
    atomic_store(result, qword_1EE7978E8);
  }
  return result;
}

unint64_t sub_1A561C018()
{
  unint64_t result;

  result = qword_1EE7A8D40;
  if (!qword_1EE7A8D40)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AA6B8, &type metadata for MoveAndCopyMessages.Copy);
    atomic_store(result, (unint64_t *)&qword_1EE7A8D40);
  }
  return result;
}

unint64_t sub_1A561C060()
{
  unint64_t result;

  result = qword_1EE7A8D48;
  if (!qword_1EE7A8D48)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AA720, &type metadata for MoveAndCopyMessages.Move);
    atomic_store(result, (unint64_t *)&qword_1EE7A8D48);
  }
  return result;
}

uint64_t sub_1A561C0A4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  char isUniquelyReferenced_nonNull_native;
  char v27;
  unint64_t v28;
  uint64_t v29;
  _BOOL8 v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;

  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v10 = sub_1A5618D50(a2);
  v11 = sub_1A5618D50(a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v46 = *(_QWORD *)(v10 + 16);
  if (v46)
  {
    v41 = v11;
    v12 = 0;
    v44 = a4 << 32;
    v45 = v10 + 32;
    v42 = v10;
    v43 = a5;
    while (v12 < *(_QWORD *)(v10 + 16))
    {
      if (v12 >= *(_QWORD *)(v11 + 16))
        goto LABEL_22;
      if (!*(_QWORD *)(a5 + 16))
        goto LABEL_23;
      v14 = *(unsigned int *)(v45 + 4 * v12);
      v15 = *(unsigned int *)(v11 + 4 * v12 + 32);
      v16 = sub_1A54FDC2C(v14);
      if ((v17 & 1) == 0)
        goto LABEL_24;
      if (!*(_QWORD *)(a5 + 16))
        goto LABEL_25;
      v18 = *(_BYTE *)(*(_QWORD *)(a5 + 56) + 24 * v16);
      v19 = sub_1A54FDC2C(v14);
      if ((v20 & 1) == 0)
        goto LABEL_26;
      v47 = v15;
      v21 = v18;
      v22 = *(_QWORD *)(a5 + 56) + 24 * v19;
      v23 = *(_QWORD *)(v22 + 8);
      v24 = *(_QWORD *)(v22 + 16);
      sub_1A54E42B4(v23, v24);
      v25 = a1;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v48 = a1;
      v28 = sub_1A54FDC2C(v14);
      v29 = a1[2];
      v30 = (v27 & 1) == 0;
      v31 = v29 + v30;
      if (__OFADD__(v29, v30))
        goto LABEL_27;
      v32 = v27;
      if (v25[3] >= v31)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1A5551320();
      }
      else
      {
        sub_1A5584E5C(v31, isUniquelyReferenced_nonNull_native);
        v33 = sub_1A54FDC2C(v14);
        if ((v32 & 1) != (v34 & 1))
          goto LABEL_29;
        v28 = v33;
      }
      v35 = v44 | v47;
      if ((v32 & 1) != 0)
      {
        a1 = v48;
        v13 = v48[7] + 40 * v28;
        sub_1A54E46E8(*(_QWORD *)(v13 + 8), *(_QWORD *)(v13 + 16));
        *(_BYTE *)v13 = v21;
        *(_QWORD *)(v13 + 8) = v23;
        *(_QWORD *)(v13 + 16) = v24;
        *(_QWORD *)(v13 + 24) = v35;
        *(_BYTE *)(v13 + 32) = 0;
      }
      else
      {
        v48[(v28 >> 6) + 8] |= 1 << v28;
        *(_DWORD *)(v48[6] + 4 * v28) = v14;
        v36 = v48[7] + 40 * v28;
        *(_BYTE *)v36 = v21;
        *(_QWORD *)(v36 + 8) = v23;
        *(_QWORD *)(v36 + 16) = v24;
        *(_QWORD *)(v36 + 24) = v35;
        *(_BYTE *)(v36 + 32) = 0;
        v37 = v48[2];
        v38 = __OFADD__(v37, 1);
        v39 = v37 + 1;
        if (v38)
          goto LABEL_28;
        a1 = v48;
        v48[2] = v39;
      }
      ++v12;
      swift_bridgeObjectRelease();
      v10 = v42;
      a5 = v43;
      v11 = v41;
      if (v46 == v12)
        goto LABEL_20;
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    result = sub_1A594CDF8();
    __break(1u);
  }
  else
  {
LABEL_20:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (uint64_t)a1;
  }
  return result;
}

uint64_t sub_1A561C374(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  int64_t v21;

  v4 = a1 + 56;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 56);
  v21 = (unint64_t)(v5 + 63) >> 6;
  result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v9 = 0;
  while (1)
  {
    if (v7)
    {
      v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v11 = v10 | (v9 << 6);
      if (!*(_QWORD *)(a2 + 16))
        goto LABEL_26;
      goto LABEL_22;
    }
    v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v12 >= v21)
      goto LABEL_27;
    v13 = *(_QWORD *)(v4 + 8 * v12);
    ++v9;
    if (!v13)
    {
      v9 = v12 + 1;
      if (v12 + 1 >= v21)
        goto LABEL_27;
      v13 = *(_QWORD *)(v4 + 8 * v9);
      if (!v13)
      {
        v9 = v12 + 2;
        if (v12 + 2 >= v21)
          goto LABEL_27;
        v13 = *(_QWORD *)(v4 + 8 * v9);
        if (!v13)
        {
          v9 = v12 + 3;
          if (v12 + 3 >= v21)
            goto LABEL_27;
          v13 = *(_QWORD *)(v4 + 8 * v9);
          if (!v13)
          {
            v14 = v12 + 4;
            if (v14 >= v21)
            {
LABEL_27:
              swift_release();
              return 1;
            }
            v13 = *(_QWORD *)(v4 + 8 * v14);
            v9 = v14;
            if (!v13)
              break;
          }
        }
      }
    }
LABEL_21:
    v7 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v9 << 6);
    if (!*(_QWORD *)(a2 + 16))
      goto LABEL_26;
LABEL_22:
    v15 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 24 * v11);
    v16 = *v15;
    v17 = v15[1];
    sub_1A54FA300(*v15, v17);
    sub_1A54FDDD4(v16, v17);
    if ((v19 & 1) == 0)
    {
      sub_1A54FA2A8(v16, v17);
LABEL_26:
      swift_release();
      return 0;
    }
    v20 = *(_BYTE *)(*(_QWORD *)(a2 + 56) + v18);
    result = sub_1A54FA2A8(v16, v17);
    if ((v20 & 1) == 0)
      goto LABEL_26;
  }
  while (1)
  {
    v9 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v9 >= v21)
      goto LABEL_27;
    v13 = *(_QWORD *)(v4 + 8 * v9);
    ++v14;
    if (v13)
      goto LABEL_21;
  }
LABEL_29:
  __break(1u);
  return result;
}

void sub_1A561C568(uint64_t a1)
{
  uint64_t v1;

  sub_1A5617A00(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1A561C570(uint64_t a1)
{
  uint64_t *v1;

  return sub_1A5617D84(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1A561C58C(uint64_t a1)
{
  uint64_t *v1;

  return sub_1A561824C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1A561C5A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v5 = type metadata accessor for TaskHistory.Previous(0);
  v40 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v35 - v9;
  v11 = sub_1A55B0094(0, a2);
  v12 = *(_QWORD *)(v11 + 16);
  if (!v12)
  {
    swift_bridgeObjectRelease();
LABEL_15:
    v31 = swift_allocObject();
    v32 = *(_DWORD *)(v2 + 40);
    *(_QWORD *)(v31 + 16) = *(_QWORD *)(v2 + 32);
    *(_DWORD *)(v31 + 24) = v32;
    *(_QWORD *)(v31 + 32) = 257;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return 0;
  }
  v35 = v11;
  v36 = v2;
  v13 = 0;
  v38 = v11 + 32;
  v41 = *(_QWORD *)(a1 + 16);
  v14 = a1;
  v39 = a1;
  v37 = v12;
  while (!v41)
  {
LABEL_4:
    if (++v13 == v12)
    {
      swift_bridgeObjectRelease();
      v2 = v36;
      goto LABEL_15;
    }
  }
  v15 = *(_DWORD *)(v38 + 4 * v13);
  v16 = v40;
  v17 = v14 + ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80));
  swift_bridgeObjectRetain_n();
  v18 = *(_QWORD *)(v16 + 72);
  v19 = v41;
  while (1)
  {
    sub_1A55034B8(v17, (uint64_t)v10, type metadata accessor for TaskHistory.Previous);
    sub_1A55034B8((uint64_t)v10, (uint64_t)v7, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() == 1)
      break;
    sub_1A55034FC((uint64_t)v7, type metadata accessor for TaskHistory.Previous);
LABEL_8:
    sub_1A55034FC((uint64_t)v10, type metadata accessor for TaskHistory.Previous);
    v17 += v18;
    if (!--v19)
    {
      v14 = v39;
      swift_bridgeObjectRelease_n();
      v12 = v37;
      goto LABEL_4;
    }
  }
  v20 = *((_DWORD *)v7 + 2);
  swift_release();
  if (v20 != v15)
    goto LABEL_8;
  sub_1A55034FC((uint64_t)v10, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease();
  v21 = 2;
  swift_bridgeObjectRelease_n();
  v22 = v36;
  v23 = *(_QWORD *)(v36 + 168);
  if (*(_QWORD *)(v23 + 16))
  {
    v24 = *(_DWORD *)(v23 + 40);
    v25 = *(_QWORD *)(v23 + 32);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A558DE28(0, 1);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v26 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v27 = sub_1A561B05C(v26, v25, v24);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v28 = swift_allocObject();
    v29 = *(_DWORD *)(v22 + 40);
    *(_QWORD *)(v28 + 16) = *(_QWORD *)(v22 + 32);
    *(_DWORD *)(v28 + 24) = v29;
    if (*(_QWORD *)(v27 + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79ABA0);
      v30 = sub_1A594CA5C();
    }
    else
    {
      v30 = MEMORY[0x1E0DEE9E0];
    }
    v42 = v30;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v33 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A561931C(v33, 1, &v42);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v28 + 32) = v42;
    return 1;
  }
  return v21;
}

uint64_t sub_1A561C92C(const void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  __int128 *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  int v23;
  _BOOL4 v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  __int128 v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  int64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  os_log_t v65;
  uint64_t v66;
  _QWORD *v67;
  unint64_t v68;
  unint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  _QWORD v72[3];
  uint64_t v73;
  int v74;
  os_log_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _OWORD v86[37];
  _BYTE v87[584];
  _BYTE v88[584];
  _BYTE v89[24];
  unint64_t v90;
  __int128 v91;
  uint64_t v92;
  uint64_t v93;
  _BYTE v94[600];

  sub_1A552316C(a1, v87);
  sub_1A552316C(v87, v94);
  v6 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A594A764();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A552316C(a1, v88);
  result = sub_1A5523B90((uint64_t)v88);
  if (!(_DWORD)result)
  {
    v14 = sub_1A5524678((uint64_t)v88);
    v15 = *(_QWORD *)(v14 + 16);
    *(_OWORD *)v89 = *(_OWORD *)v14;
    *(_QWORD *)&v89[16] = v15;
    sub_1A561E9D4((uint64_t)v89, (uint64_t)&v90);
    sub_1A561E9D4((uint64_t)&v90, (uint64_t)&v92);
    if ((~v92 & 0xF000000000000007) != 0)
    {
      sub_1A561EA1C(&v92, &v93);
      sub_1A561EA1C(&v93, &v91);
      v18 = v91;
      if (((v18 >> 59) & 0x1E | (v18 >> 2) & 1) == 8)
      {
        v81 = v3;
        *(_QWORD *)&v91 = v91 & 0xFFFFFFFFFFFFFFBLL;
        v80 = *(_DWORD *)((v18 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
        v20 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
        (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
        sub_1A55034B8(a3, (uint64_t)v8, type metadata accessor for MailboxTaskLogger);
        sub_1A561EA58((uint64_t)a1);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        v21 = v19;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        v22 = sub_1A594A74C();
        v23 = sub_1A594C00C();
        v24 = os_log_type_enabled(v22, (os_log_type_t)v23);
        v82 = v20;
        v83 = v21;
        if (v24)
        {
          v74 = v23;
          v75 = v22;
          v76 = v12;
          v77 = v10;
          v78 = v9;
          v25 = swift_slowAlloc();
          v73 = swift_slowAlloc();
          v85 = v73;
          *(_DWORD *)v25 = 68160003;
          LODWORD(v86[0]) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v25 + 8) = 256;
          v26 = &v8[*(int *)(v6 + 20)];
          LOBYTE(v86[0]) = *v26;
          sub_1A594C3CC();
          *(_WORD *)(v25 + 11) = 2082;
          v27 = *((_QWORD *)v26 + 1);
          v28 = *((_QWORD *)v26 + 2);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          *(_QWORD *)&v86[0] = sub_1A55791B0(v27, v28, &v85);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          *(_WORD *)(v25 + 21) = 1040;
          LODWORD(v86[0]) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v25 + 27) = 512;
          LOWORD(v86[0]) = *((_WORD *)v26 + 12);
          sub_1A594C3CC();
          *(_WORD *)(v25 + 31) = 2160;
          *(_QWORD *)&v86[0] = 0x786F626C69616DLL;
          sub_1A594C3CC();
          *(_WORD *)(v25 + 41) = 2085;
          v29 = *((_DWORD *)v26 + 10);
          *(_QWORD *)&v86[0] = *((_QWORD *)v26 + 4);
          DWORD2(v86[0]) = v29;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v30 = sub_1A594B4A8();
          *(_QWORD *)&v86[0] = sub_1A55791B0(v30, v31, &v85);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          sub_1A55034FC((uint64_t)v8, type metadata accessor for MailboxTaskLogger);
          v79 = v25;
          *(_WORD *)(v25 + 51) = 2082;
          v32 = *(_QWORD *)(v83 + 16);
          v33 = MEMORY[0x1E0DEE9D8];
          if (v32)
          {
            *(_QWORD *)&v86[0] = MEMORY[0x1E0DEE9D8];
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            sub_1A55C17B8(0, v32, 0);
            v34 = v83;
            v35 = 0;
            v33 = *(_QWORD *)&v86[0];
            do
            {
              v84 = *(_QWORD *)(v34 + 8 * v35 + 32);
              __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796E58);
              v36 = sub_1A594B490();
              v38 = v37;
              *(_QWORD *)&v86[0] = v33;
              v40 = *(_QWORD *)(v33 + 16);
              v39 = *(_QWORD *)(v33 + 24);
              if (v40 >= v39 >> 1)
              {
                sub_1A55C17B8((char *)(v39 > 1), v40 + 1, 1);
                v34 = v83;
                v33 = *(_QWORD *)&v86[0];
              }
              ++v35;
              *(_QWORD *)(v33 + 16) = v40 + 1;
              v41 = v33 + 16 * v40;
              *(_QWORD *)(v41 + 32) = v36;
              *(_QWORD *)(v41 + 40) = v38;
            }
            while (v32 != v35);
            swift_bridgeObjectRelease();
          }
          v45 = v79;
          *(_QWORD *)&v86[0] = v33;
          v46 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799A38);
          v72[1] = sub_1A54F70C0();
          v72[2] = v46;
          v47 = sub_1A594B268();
          v49 = v48;
          swift_bridgeObjectRelease();
          *(_QWORD *)&v86[0] = sub_1A55791B0(v47, v49, &v85);
          sub_1A594C3CC();
          v50 = v82;
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v45 + 61) = 2082;
          v51 = *(_QWORD *)(v50 + 16);
          v52 = MEMORY[0x1E0DEE9D8];
          if (v51)
          {
            *(_QWORD *)&v86[0] = MEMORY[0x1E0DEE9D8];
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            sub_1A55C17B8(0, v51, 0);
            v53 = v82;
            v54 = 0;
            v52 = *(_QWORD *)&v86[0];
            do
            {
              v84 = *(_QWORD *)(v53 + 8 * v54 + 32);
              __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796E58);
              v55 = sub_1A594B490();
              v57 = v56;
              *(_QWORD *)&v86[0] = v52;
              v59 = *(_QWORD *)(v52 + 16);
              v58 = *(_QWORD *)(v52 + 24);
              if (v59 >= v58 >> 1)
              {
                sub_1A55C17B8((char *)(v58 > 1), v59 + 1, 1);
                v53 = v82;
                v52 = *(_QWORD *)&v86[0];
              }
              ++v54;
              *(_QWORD *)(v52 + 16) = v59 + 1;
              v60 = v52 + 16 * v59;
              *(_QWORD *)(v60 + 32) = v55;
              *(_QWORD *)(v60 + 40) = v57;
            }
            while (v51 != v54);
            swift_bridgeObjectRelease();
          }
          v61 = v79;
          *(_QWORD *)&v86[0] = v52;
          v62 = sub_1A594B268();
          v64 = v63;
          swift_bridgeObjectRelease();
          *(_QWORD *)&v86[0] = sub_1A55791B0(v62, v64, &v85);
          sub_1A594C3CC();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v61 + 71) = 1024;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v43 = v80;
          LODWORD(v86[0]) = v80;
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v65 = v75;
          _os_log_impl(&dword_1A4F90000, v75, (os_log_type_t)v74, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Server moved messages %{public}s with destination UIDs %{public}s and UIDValidity 0x%x", (uint8_t *)v61, 0x4Du);
          v66 = v73;
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v66, -1, -1);
          MEMORY[0x1A85B1964](v61, -1, -1);

          (*(void (**)(char *, uint64_t))(v77 + 8))(v76, v78);
          v44 = v81;
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1A55034FC((uint64_t)v8, type metadata accessor for MailboxTaskLogger);

          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
          v43 = v80;
          v44 = v81;
        }
        v67 = *(_QWORD **)(v44 + 160);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v67 = sub_1A54F2448(0, v67[2] + 1, 1, v67);
        v69 = v67[2];
        v68 = v67[3];
        if (v69 >= v68 >> 1)
          v67 = sub_1A54F2448((_QWORD *)(v68 > 1), v69 + 1, 1, v67);
        v67[2] = v69 + 1;
        v70 = &v67[3 * v69];
        *((_DWORD *)v70 + 8) = v43;
        v71 = v82;
        v70[5] = v83;
        v70[6] = v71;
        sub_1A561EB40(&v90);
        *(_QWORD *)(v44 + 160) = v67;
        v42 = *(_OWORD *)&v89[8];
      }
      else
      {
        sub_1A561EA58((uint64_t)a1);
        sub_1A561EB40(&v90);
        v42 = *(_OWORD *)&v89[8];
      }
      v86[0] = v42;
      v17 = v86;
    }
    else
    {
      v91 = *(_OWORD *)&v89[8];
      sub_1A552316C(v94, v86);
      v16 = (unint64_t *)sub_1A5524678((uint64_t)v86);
      sub_1A55235A0(*v16);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v17 = &v91;
    }
    return sub_1A5503278((uint64_t)v17);
  }
  return result;
}

void sub_1A561D1F0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  os_log_t v40;
  _DWORD *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  int v51;
  uint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  unsigned int v55;
  char v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  unsigned int v68;
  char v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  _QWORD *v89;
  unsigned int v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  char v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  _QWORD *v99;
  unsigned int *v100;
  os_log_t v101;
  unsigned int v102;
  _DWORD *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  int v111;
  _DWORD *v112;
  unsigned int v113;
  char v114;
  uint64_t v115;
  unint64_t v116;
  unsigned int v117;
  uint64_t v118;
  unint64_t v119;
  unsigned int v120;
  char v121;
  uint64_t v122;
  unint64_t v123;

  v11 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v100 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1A594A764();
  MEMORY[0x1E0C80A78](v14);
  v109 = (char *)&v100 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (((a1 >> 59) & 0x1E | (a1 >> 2) & 1) != 0x10)
    return;
  v17 = a1 & 0xFFFFFFFFFFFFFFBLL;
  if ((*(unsigned int *)(v5 + 40) | ((unint64_t)*(unsigned int *)(v5 + 40) << 32)) != (*(unsigned int *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x18) | ((unint64_t)*(unsigned int *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x18) << 32)))
    return;
  v18 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
  v19 = *(unsigned __int8 *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
  v20 = *(_QWORD *)(v5 + 32);
  v21 = *(_QWORD *)(v17 + 16);
  v107 = v15;
  if (!sub_1A54FF30C(v20, v21))
    return;
  LODWORD(v104) = v19;
  v106 = v14;
  v108 = v5;
  v105 = v18;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v22 = sub_1A55B0094(0, a4);
  v23 = *(_QWORD *)(v22 + 16);
  if (!v23)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_BYTE *)(v108 + 120) = 1;
    return;
  }
  v24 = 0;
  while ((sub_1A55F3D24(*(_DWORD *)(v22 + 4 * v24 + 32), a2, a3) & 1) == 0)
  {
    if (v23 == ++v24)
      goto LABEL_8;
  }
  swift_bridgeObjectRelease();
  v25 = v107;
  v26 = v106;
  (*(void (**)(char *, uint64_t, uint64_t))(v107 + 16))(v109, a5, v106);
  sub_1A55034B8(a5, (uint64_t)v13, type metadata accessor for MailboxTaskLogger);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v27 = v105;
  swift_bridgeObjectRetain_n();
  v28 = sub_1A594A74C();
  v29 = sub_1A594C030();
  v30 = v29;
  if (os_log_type_enabled(v28, v29))
  {
    v31 = swift_slowAlloc();
    v103 = (_DWORD *)swift_slowAlloc();
    v112 = v103;
    *(_DWORD *)v31 = 68159491;
    LODWORD(v110) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v31 + 8) = 256;
    v32 = *(int *)(v11 + 20);
    v101 = v28;
    v33 = &v13[v32];
    LOBYTE(v110) = v13[v32];
    sub_1A594C3CC();
    *(_WORD *)(v31 + 11) = 2082;
    v102 = v30;
    v34 = *((_QWORD *)v33 + 1);
    v35 = *((_QWORD *)v33 + 2);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v110 = sub_1A55791B0(v34, v35, (uint64_t *)&v112);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 21) = 1040;
    LODWORD(v110) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v31 + 27) = 512;
    LOWORD(v110) = *((_WORD *)v33 + 12);
    sub_1A594C3CC();
    *(_WORD *)(v31 + 31) = 2160;
    v110 = 0x786F626C69616DLL;
    sub_1A594C3CC();
    *(_WORD *)(v31 + 41) = 2085;
    v36 = *((_DWORD *)v33 + 10);
    v110 = *((_QWORD *)v33 + 4);
    v111 = v36;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v37 = sub_1A594B4A8();
    v110 = sub_1A55791B0(v37, v38, (uint64_t *)&v112);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC((uint64_t)v13, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v31 + 51) = 2048;
    v39 = *(_QWORD *)(v105 + 16);
    swift_bridgeObjectRelease();
    v110 = v39;
    v27 = v105;
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    v40 = v101;
    _os_log_impl(&dword_1A4F90000, v101, (os_log_type_t)v102, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Persistence returned %ld moves / copies.", (uint8_t *)v31, 0x3Du);
    v41 = v103;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v41, -1, -1);
    MEMORY[0x1A85B1964](v31, -1, -1);

    (*(void (**)(char *, uint64_t))(v25 + 8))(v109, v106);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1A55034FC((uint64_t)v13, type metadata accessor for MailboxTaskLogger);

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v109, v26);
  }
  v42 = v108;
  if ((v104 & 1) == 0)
    *(_BYTE *)(v108 + 120) = 1;
  v43 = *(_QWORD *)(v27 + 16);
  if (!v43)
  {
LABEL_31:
    swift_bridgeObjectRelease();
    return;
  }
  v101 = (os_log_t)&v117;
  v106 = v42 + 128;
  v100 = &v120;
  v103 = &v113;
  v44 = (unint64_t *)(v27 + 64);
  while (1)
  {
    v45 = v108;
    v46 = *(_QWORD *)(v108 + 112);
    if (v46 > 256)
    {
      swift_bridgeObjectRelease();
      *(_BYTE *)(v45 + 120) = 1;
      return;
    }
    v47 = *((_DWORD *)v44 - 7);
    v48 = *(v44 - 3);
    v109 = (char *)*((unsigned int *)v44 - 4);
    v49 = *(v44 - 1);
    v50 = *v44;
    v51 = *((unsigned __int8 *)v44 - 32);
    *(_QWORD *)(v108 + 112) = v46 + 1;
    if (v51 == 1)
      break;
    if ((*(_BYTE *)(v45 + 105) & 1) != 0)
    {
      v107 = v43;
      v102 = v47;
      v120 = v47;
      v121 = 0;
      v104 = v49;
      v122 = v49;
      v123 = v50;
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AB68);
      v67 = (_QWORD *)sub_1A594CA5C();
      v68 = v120;
      v69 = v121;
      v71 = v122;
      v70 = v123;
      v72 = sub_1A54FDC2C(v120);
      if ((v73 & 1) != 0)
        goto LABEL_36;
      v67[(v72 >> 6) + 8] |= 1 << v72;
      *(_DWORD *)(v67[6] + 4 * v72) = v68;
      v74 = v67[7] + 24 * v72;
      *(_BYTE *)v74 = v69;
      *(_QWORD *)(v74 + 8) = v71;
      *(_QWORD *)(v74 + 16) = v70;
      v75 = v67[2];
      v63 = __OFADD__(v75, 1);
      v76 = v75 + 1;
      if (v63)
        goto LABEL_37;
      v67[2] = v76;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v77 = v104;
      v78 = v50;
      sub_1A54E42B4(v104, v50);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A54E42B4(v77, v50);
      sub_1A54E42B4(v71, v70);
      __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE797050);
      swift_arrayDestroy();
      v79 = (unint64_t)v109 | 0x4000000000000000;
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797A18);
      v80 = (_QWORD *)swift_allocObject();
      v80[2] = v48;
      v80[3] = v79;
      v80[4] = v67;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_retain();
      sub_1A54F3960(&v110, (uint64_t)v80);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      LODWORD(v110) = v102;
      sub_1A54E3414();
      MessageIdentifierSet.init(_:)();
      v82 = v81;
      v84 = v83;
      v85 = HIDWORD(v83);
      v86 = v83 & 0xFFFFFFFFFFLL;
      v87 = (_QWORD *)swift_allocObject();
      v87[2] = v82;
      v87[3] = v86;
      v87[4] = 0;
      sub_1A54E4334(v82, v84, v85);
      sub_1A54F3960(&v110, (uint64_t)v87);
      swift_bridgeObjectRelease();
      swift_release();
      sub_1A54E46E8(v104, v78);
      sub_1A54E3458(v82, v84, v85);
LABEL_17:
      v43 = v107;
      goto LABEL_18;
    }
    v117 = v47;
    v88 = v49;
    v118 = v49;
    v119 = v50;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8880);
    v89 = (_QWORD *)sub_1A594CA5C();
    v90 = v117;
    v91 = v118;
    v92 = v119;
    v93 = sub_1A54FDC2C(v117);
    if ((v94 & 1) != 0)
      goto LABEL_38;
    v89[(v93 >> 6) + 8] |= 1 << v93;
    *(_DWORD *)(v89[6] + 4 * v93) = v90;
    v95 = (uint64_t *)(v89[7] + 16 * v93);
    *v95 = v91;
    v95[1] = v92;
    v96 = v89[2];
    v63 = __OFADD__(v96, 1);
    v97 = v96 + 1;
    if (v63)
      goto LABEL_39;
    v89[2] = v97;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54E42B4(v88, v50);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54E42B4(v88, v50);
    sub_1A54E42B4(v91, v92);
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8D60);
    swift_arrayDestroy();
    v98 = (unint64_t)v109 | 0x8000000000000000;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797A18);
    v99 = (_QWORD *)swift_allocObject();
    v99[2] = v48;
    v99[3] = v98;
    v99[4] = v89;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_retain();
    sub_1A54F3960(&v110, (uint64_t)v99);
    swift_bridgeObjectRelease();
    swift_release();
    sub_1A54E46E8(v88, v50);
    swift_release();
    swift_bridgeObjectRelease();
LABEL_18:
    v44 += 5;
    if (!--v43)
      goto LABEL_31;
  }
  v107 = v43;
  v113 = v47;
  v114 = 1;
  v52 = v49;
  v115 = v49;
  v116 = v50;
  v53 = v50;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AB68);
  v54 = (_QWORD *)sub_1A594CA5C();
  v55 = v113;
  v56 = v114;
  v57 = v115;
  v58 = v116;
  v59 = sub_1A54FDC2C(v113);
  if ((v60 & 1) == 0)
  {
    v54[(v59 >> 6) + 8] |= 1 << v59;
    *(_DWORD *)(v54[6] + 4 * v59) = v55;
    v61 = v54[7] + 24 * v59;
    *(_BYTE *)v61 = v56;
    *(_QWORD *)(v61 + 8) = v57;
    *(_QWORD *)(v61 + 16) = v58;
    v62 = v54[2];
    v63 = __OFADD__(v62, 1);
    v64 = v62 + 1;
    if (v63)
      goto LABEL_35;
    v54[2] = v64;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54E42B4(v52, v53);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54E42B4(v52, v53);
    sub_1A54E42B4(v57, v58);
    __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE797050);
    swift_arrayDestroy();
    v65 = (unint64_t)v109 | 0x4000000000000000;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797A18);
    v66 = (_QWORD *)swift_allocObject();
    v66[2] = v48;
    v66[3] = v65;
    v66[4] = v54;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_retain();
    sub_1A54F3960(&v110, (uint64_t)v66);
    swift_bridgeObjectRelease();
    swift_release();
    sub_1A54E46E8(v52, v53);
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

void sub_1A561DD60(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int64_t v12;

  v3 = 1 << *(_BYTE *)(a3 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a3 + 56);
  v12 = (unint64_t)(v3 + 63) >> 6;
  if (v5)
  {
    v6 = __clz(__rbit64(v5));
    goto LABEL_15;
  }
  v7 = 1;
  if ((unint64_t)(v3 + 63) >> 6 > 1)
  {
    v8 = *(_QWORD *)(a3 + 64);
    if (v8)
    {
LABEL_14:
      v6 = __clz(__rbit64(v8)) + (v7 << 6);
LABEL_15:
      __asm { BR              X9 }
    }
    v9 = 2;
    if (v12 > 2)
    {
      v8 = *(_QWORD *)(a3 + 72);
      if (v8)
        goto LABEL_13;
      v9 = 3;
      if (v12 <= 3)
        goto LABEL_20;
      v8 = *(_QWORD *)(a3 + 80);
      if (v8)
      {
LABEL_13:
        v7 = v9;
        goto LABEL_14;
      }
      v9 = 4;
      if (v12 > 4)
      {
        v8 = *(_QWORD *)(a3 + 88);
        if (v8)
          goto LABEL_13;
        while (1)
        {
          v7 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            JUMPOUT(0x1A561E0A8);
          }
          if (v7 >= v12)
            break;
          v8 = *(_QWORD *)(a3 + 56 + 8 * v7);
          ++v9;
          if (v8)
            goto LABEL_14;
        }
      }
    }
  }
LABEL_20:
  swift_retain();
  sub_1A5588B94(a1, a2, 0, a3);
}

uint64_t sub_1A561E0CC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  char v7;
  unsigned int v8;
  unint64_t v9;
  size_t v10;
  uint64_t isStackAllocationSafe;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  _QWORD v17[2];

  v17[1] = *MEMORY[0x1E0C80C00];
  v7 = *(_BYTE *)(a1 + 32);
  v8 = v7 & 0x3F;
  v9 = (unint64_t)((1 << v7) + 63) >> 6;
  v10 = 8 * v9;
  sub_1A54FA300(a2, a3);
  isStackAllocationSafe = sub_1A54FA300(a2, a3);
  if (v8 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v17 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v10);
    sub_1A54FA300(a2, a3);
    sub_1A561DD60((_QWORD *)((char *)v17 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0)), v9, a1);
    v13 = v12;
    sub_1A54FA2A8(a2, a3);
    swift_release();
    if (v3)
      swift_willThrow();
    sub_1A54FA2A8(a2, a3);
    sub_1A54FA2A8(a2, a3);
  }
  else
  {
    v14 = (void *)swift_slowAlloc();
    bzero(v14, v10);
    sub_1A54FA300(a2, a3);
    sub_1A561DD60((unint64_t *)v14, v9, a1);
    v13 = v15;
    sub_1A54FA2A8(a2, a3);
    swift_release();
    MEMORY[0x1A85B1964](v14, -1, -1);
    sub_1A54FA2A8(a2, a3);
    sub_1A54FA2A8(a2, a3);
  }
  return v13;
}

void sub_1A561E320(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1A561E380()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (v2 >> 62)
    return 0;
  sub_1A54E3414();
  MessageIdentifierSet.union(_:)(v1, v2 & 0xFFFFFFFFFFLL, v0, v3 & 0xFFFFFFFFFFLL);
  return v4;
}

uint64_t sub_1A561E534()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v22;
  uint64_t v23;

  v1 = v0 + 128;
  sub_1A5553CA0();
  swift_getKeyPath();
  swift_retain();
  v2 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v3 = sub_1A561ADD8(v2);
  swift_bridgeObjectRelease();
  swift_release_n();
  v4 = sub_1A5552BFC(v3);
  swift_bridgeObjectRelease();
  sub_1A5619FC0(v4, (uint64_t (*)(char *, unint64_t, uint64_t))sub_1A561A2A4);
  swift_getKeyPath();
  swift_retain();
  v5 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v6 = sub_1A561ADD8(v5);
  swift_bridgeObjectRelease();
  swift_release_n();
  v7 = sub_1A5552BFC(v6);
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(v7 + 56);
  v9 = 1 << *(_BYTE *)(v7 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v22 = (unint64_t)(v9 + 63) >> 6;
  if ((v10 & v8) != 0)
  {
    v11 = __clz(__rbit64(v10 & v8));
    goto LABEL_15;
  }
  v12 = 1;
  if ((unint64_t)(v9 + 63) >> 6 > 1)
  {
    v13 = *(_QWORD *)(v7 + 64);
    if (v13)
    {
LABEL_14:
      v11 = __clz(__rbit64(v13)) + (v12 << 6);
LABEL_15:
      __asm { BR              X10 }
    }
    v14 = 2;
    if (v22 > 2)
    {
      v13 = *(_QWORD *)(v7 + 72);
      if (v13)
        goto LABEL_13;
      v14 = 3;
      if (v22 <= 3)
        goto LABEL_20;
      v13 = *(_QWORD *)(v7 + 80);
      if (v13)
      {
LABEL_13:
        v12 = v14;
        goto LABEL_14;
      }
      v14 = 4;
      if (v22 > 4)
      {
        v13 = *(_QWORD *)(v7 + 88);
        if (v13)
          goto LABEL_13;
        while (1)
        {
          v12 = v14 + 1;
          if (__OFADD__(v14, 1))
          {
            __break(1u);
            JUMPOUT(0x1A561E980);
          }
          if (v12 >= v22)
            break;
          v13 = *(_QWORD *)(v7 + 56 + 8 * v12);
          ++v14;
          if (v13)
            goto LABEL_14;
        }
      }
    }
  }
LABEL_20:
  swift_release();
  v15 = swift_release();
  MEMORY[0x1E0C80A78](v15);
  swift_getKeyPath();
  swift_retain();
  v16 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v17 = sub_1A561ADD8(v16);
  swift_bridgeObjectRelease();
  swift_release_n();
  v18 = sub_1A5552BFC(v17);
  swift_bridgeObjectRelease();
  v19 = sub_1A5619FC0(v18, (uint64_t (*)(char *, unint64_t, uint64_t))sub_1A561A128);
  if (*(_QWORD *)(v19 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797A18);
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1A59ABE10;
    *(_QWORD *)(v20 + 32) = 0;
    sub_1A54F3960(&v23, v20);
    swift_release();
    sub_1A5619138(0, 0xC000000000000000, 0, v19);
  }
  swift_release();
  return sub_1A564E9B0(v1);
}

unint64_t sub_1A561E990()
{
  unint64_t result;

  result = qword_1EE7A8D58;
  if (!qword_1EE7A8D58)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AA924, &type metadata for MoveAndCopyMessages.UIDPairs.CountMismatch);
    atomic_store(result, (unint64_t *)&qword_1EE7A8D58);
  }
  return result;
}

uint64_t sub_1A561E9D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE795BD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1A561EA1C(_QWORD *a1, _QWORD *a2)
{
  __swift_memcpy8_8_1(a2, a1);
  return a2;
}

uint64_t sub_1A561EA58(uint64_t a1)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  v19 = *(_OWORD *)(a1 + 480);
  v17 = *(_OWORD *)(a1 + 448);
  v18 = *(_OWORD *)(a1 + 464);
  v15 = *(_OWORD *)(a1 + 416);
  v16 = *(_OWORD *)(a1 + 432);
  v13 = *(_OWORD *)(a1 + 384);
  v14 = *(_OWORD *)(a1 + 400);
  v11 = *(_OWORD *)(a1 + 352);
  v12 = *(_OWORD *)(a1 + 368);
  v9 = *(_OWORD *)(a1 + 320);
  v10 = *(_OWORD *)(a1 + 336);
  v7 = *(_OWORD *)(a1 + 288);
  v8 = *(_OWORD *)(a1 + 304);
  v5 = *(_OWORD *)(a1 + 256);
  v6 = *(_OWORD *)(a1 + 272);
  v3 = *(_OWORD *)(a1 + 224);
  v4 = *(_OWORD *)(a1 + 240);
  sub_1A55231A8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_OWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    v3,
    *((uint64_t *)&v3 + 1),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    *(_QWORD *)(a1 + 496));
  return a1;
}

unint64_t *sub_1A561EB40(unint64_t *a1)
{
  sub_1A5524084(*a1);
  return a1;
}

uint64_t sub_1A561EB68()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A561EB8C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A561EBB8(uint64_t result, unint64_t a2)
{
  if (a2 <= 0xFFFFFFFBFFFFFFFFLL)
    return sub_1A54FA2A8(result, a2);
  return result;
}

ValueMetadata *type metadata accessor for MoveAndCopyMessages.UIDPairs.CountMismatch()
{
  return &type metadata for MoveAndCopyMessages.UIDPairs.CountMismatch;
}

uint64_t storeEnumTagSinglePayload for MoveAndCopyMessages.ActionID(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A561EC28 + 4 * byte_1A59AA545[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A561EC5C + 4 * byte_1A59AA540[v4]))();
}

uint64_t sub_1A561EC5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A561EC64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A561EC6CLL);
  return result;
}

uint64_t sub_1A561EC78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A561EC80);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A561EC84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A561EC8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MoveAndCopyMessages.ActionID()
{
  return &type metadata for MoveAndCopyMessages.ActionID;
}

uint64_t destroy for MoveAndCopyMessages.Copy.MessageInfo(uint64_t a1)
{
  return sub_1A54E46E8(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
}

uint64_t _s13IMAP2Behavior19MoveAndCopyMessagesV4CopyV11MessageInfoVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  sub_1A54E42B4(v3, v4);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  return a1;
}

uint64_t assignWithCopy for MoveAndCopyMessages.Copy.MessageInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  sub_1A54E42B4(v3, v4);
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  sub_1A54E46E8(v5, v6);
  return a1;
}

uint64_t assignWithTake for MoveAndCopyMessages.Copy.MessageInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_1A54E46E8(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for MoveAndCopyMessages.Copy.MessageInfo(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[24])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = v3 - 2;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for MoveAndCopyMessages.Copy.MessageInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for MoveAndCopyMessages.Copy.MessageInfo()
{
  return &type metadata for MoveAndCopyMessages.Copy.MessageInfo;
}

uint64_t initializeWithCopy for MoveAndCopyMessages.CompletedCommand.MessageInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  sub_1A54E42B4(v4, v5);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t assignWithCopy for MoveAndCopyMessages.CompletedCommand.MessageInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  sub_1A54E42B4(v4, v5);
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  sub_1A54E46E8(v6, v7);
  v8 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v8;
  return a1;
}

uint64_t assignWithTake for MoveAndCopyMessages.CompletedCommand.MessageInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_1A54E46E8(v4, v5);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for MoveAndCopyMessages.CompletedCommand.MessageInfo(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[33])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = v3 - 2;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for MoveAndCopyMessages.CompletedCommand.MessageInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for MoveAndCopyMessages.CompletedCommand.MessageInfo()
{
  return &type metadata for MoveAndCopyMessages.CompletedCommand.MessageInfo;
}

unint64_t sub_1A561EFC8()
{
  unint64_t result;

  result = qword_1EE7A8D68;
  if (!qword_1EE7A8D68)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AA814, &type metadata for MoveAndCopyMessages.CompletedCommand.MessageInfo);
    atomic_store(result, (unint64_t *)&qword_1EE7A8D68);
  }
  return result;
}

unint64_t sub_1A561F010()
{
  unint64_t result;

  result = qword_1EE7A8D70;
  if (!qword_1EE7A8D70)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AA87C, &type metadata for MoveAndCopyMessages.Copy.MessageInfo);
    atomic_store(result, (unint64_t *)&qword_1EE7A8D70);
  }
  return result;
}

uint64_t destroy for NewServerMessages(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_1A54E3458(*(_QWORD *)(a1 + 16), *(unsigned int *)(a1 + 24), *(_BYTE *)(a1 + 28));
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NewServerMessages(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(unsigned int *)(a2 + 24);
  v6 = *(_BYTE *)(a2 + 28);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54E4334(v4, v5, v6);
  *(_QWORD *)(a1 + 16) = v4;
  *(_DWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 28) = v6;
  *(_DWORD *)(a1 + 29) = *(_DWORD *)(a2 + 29);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for NewServerMessages(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_DWORD *)(a2 + 24);
  v6 = *(_BYTE *)(a2 + 28);
  sub_1A54E4334(v4, v5, v6);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(unsigned int *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_DWORD *)(a1 + 24) = v5;
  v9 = *(_BYTE *)(a1 + 28);
  *(_BYTE *)(a1 + 28) = v6;
  sub_1A54E3458(v7, v8, v9);
  *(_BYTE *)(a1 + 29) = *(_BYTE *)(a2 + 29);
  *(_BYTE *)(a1 + 30) = *(_BYTE *)(a2 + 30);
  *(_BYTE *)(a1 + 31) = *(_BYTE *)(a2 + 31);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for NewServerMessages(uint64_t a1, uint64_t a2)
{
  int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v4 = *(_DWORD *)(a2 + 24);
  v5 = *(_BYTE *)(a2 + 28);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(unsigned int *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = v4;
  v8 = *(_BYTE *)(a1 + 28);
  *(_BYTE *)(a1 + 28) = v5;
  sub_1A54E3458(v6, v7, v8);
  *(_BYTE *)(a1 + 29) = *(_BYTE *)(a2 + 29);
  *(_BYTE *)(a1 + 30) = *(_BYTE *)(a2 + 30);
  *(_BYTE *)(a1 + 31) = *(_BYTE *)(a2 + 31);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for NewServerMessages()
{
  return &type metadata for NewServerMessages;
}

uint64_t sub_1A561F2B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _OWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t *v8;
  uint64_t v9;

  if ((*(_BYTE *)(v1 + 33) & 1) == 0)
  {
    if ((*(_BYTE *)(v1 + 34) & 1) != 0)
    {
      v3 = &unk_1E4E6B018;
      goto LABEL_9;
    }
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AE80);
    v3 = (_OWORD *)swift_allocObject();
    v3[1] = xmmword_1A59ABDD0;
    *((_QWORD *)v3 + 4) = 7;
    *((_QWORD *)v3 + 5) = 0;
    *((_QWORD *)v3 + 6) = 0;
    *((_QWORD *)v3 + 7) = 0;
    *((_BYTE *)v3 + 68) = -64;
    *((_DWORD *)v3 + 16) = 0;
    *((_QWORD *)v3 + 9) = 2;
    *((_QWORD *)v3 + 10) = 0;
    *((_QWORD *)v3 + 11) = 0;
    *((_QWORD *)v3 + 12) = 0;
    *((_BYTE *)v3 + 108) = -64;
    *((_DWORD *)v3 + 26) = 0;
    *((_QWORD *)v3 + 14) = 5;
    *((_QWORD *)v3 + 15) = 0;
    *((_QWORD *)v3 + 16) = 0;
    *((_QWORD *)v3 + 17) = 0;
    *((_BYTE *)v3 + 148) = -64;
    *((_DWORD *)v3 + 36) = 0;
    *((_QWORD *)v3 + 19) = 1;
    *((_QWORD *)v3 + 20) = 0;
    *((_QWORD *)v3 + 21) = 0;
    *((_QWORD *)v3 + 22) = 0;
    *((_BYTE *)v3 + 188) = -64;
    *((_DWORD *)v3 + 46) = 0;
    v8 = SectionSpecifier.header.unsafeMutableAddressor();
    v9 = *v8;
    v6 = v8[1];
    v7 = *((_BYTE *)v8 + 16);
    *((_QWORD *)v3 + 24) = 1;
    *((_QWORD *)v3 + 25) = v9;
    *((_QWORD *)v3 + 26) = v6;
    *((_QWORD *)v3 + 27) = v7;
    *((_BYTE *)v3 + 228) = 33;
    *((_DWORD *)v3 + 56) = 0;
    *((_QWORD *)v3 + 29) = 11;
    *((_QWORD *)v3 + 30) = 0;
    *((_QWORD *)v3 + 31) = 0;
    *((_QWORD *)v3 + 32) = 0;
    *((_BYTE *)v3 + 268) = -64;
    *((_DWORD *)v3 + 66) = 0;
LABEL_8:
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A55DC724(v6, v7);
    goto LABEL_9;
  }
  if ((*(_BYTE *)(v1 + 34) & 1) == 0)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AE80);
    v3 = (_OWORD *)swift_allocObject();
    v3[1] = xmmword_1A59ABD70;
    *((_QWORD *)v3 + 4) = 7;
    *((_QWORD *)v3 + 5) = 0;
    *((_QWORD *)v3 + 6) = 0;
    *((_QWORD *)v3 + 7) = 0;
    *((_BYTE *)v3 + 68) = -64;
    *((_DWORD *)v3 + 16) = 0;
    *((_QWORD *)v3 + 9) = 2;
    *((_QWORD *)v3 + 10) = 0;
    *((_QWORD *)v3 + 11) = 0;
    *((_QWORD *)v3 + 12) = 0;
    *((_BYTE *)v3 + 108) = -64;
    *((_DWORD *)v3 + 26) = 0;
    *((_QWORD *)v3 + 14) = 5;
    *((_QWORD *)v3 + 15) = 0;
    *((_QWORD *)v3 + 16) = 0;
    *((_QWORD *)v3 + 17) = 0;
    *((_BYTE *)v3 + 148) = -64;
    *((_DWORD *)v3 + 36) = 0;
    *((_QWORD *)v3 + 19) = 1;
    *((_QWORD *)v3 + 20) = 0;
    *((_QWORD *)v3 + 21) = 0;
    *((_QWORD *)v3 + 22) = 0;
    *((_BYTE *)v3 + 188) = -64;
    *((_DWORD *)v3 + 46) = 0;
    v4 = SectionSpecifier.header.unsafeMutableAddressor();
    v5 = *v4;
    v6 = v4[1];
    v7 = *((_BYTE *)v4 + 16);
    *((_QWORD *)v3 + 24) = 1;
    *((_QWORD *)v3 + 25) = v5;
    *((_QWORD *)v3 + 26) = v6;
    *((_QWORD *)v3 + 27) = v7;
    *((_BYTE *)v3 + 228) = 33;
    *((_DWORD *)v3 + 56) = 0;
    goto LABEL_8;
  }
  v3 = &unk_1E4E6AF58;
LABEL_9:
  static ClientCommand.uidFetch(messages:items:)(*(_QWORD *)(v1 + 16), *(unsigned int *)(v1 + 24) | ((unint64_t)*(unsigned __int8 *)(v1 + 28) << 32), (uint64_t)v3, a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A561F49C(uint64_t a1, int a2, NSObject *a3)
{
  uint64_t v3;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _BOOL4 v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  uint64_t v50;
  NSObject *v51;
  NSObject *v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  int v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t (*v64)(NSObject *, uint64_t);
  NSObject *v65;
  uint64_t v66;
  _DWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  char *v79;
  NSObject *v80;
  uint64_t v81;
  uint64_t v82;
  _DWORD *v83;
  NSObject *v84;
  os_log_type_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  int v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  NSObject *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _DWORD *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  _DWORD *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  NSObject *v111;
  uint64_t v112;
  int v113;
  uint64_t v114;
  char v115[8];
  unsigned int v116;
  char v117;

  LODWORD(v109) = a2;
  v108 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v108);
  v7 = (char *)&v99 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v106 = (uint64_t)&v99 - v9;
  MEMORY[0x1E0C80A78](v10);
  v102 = (uint64_t)&v99 - v11;
  v12 = sub_1A594A764();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v111 = ((char *)&v99 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v15);
  v107 = (char *)&v99 - v16;
  MEMORY[0x1E0C80A78](v17);
  v103 = (char *)&v99 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798438);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for MessageMetadata(0);
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v101 = (_DWORD *)((char *)&v99 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v25);
  v100 = (uint64_t)&v99 - v26;
  MEMORY[0x1E0C80A78](v27);
  v105 = (_DWORD *)((char *)&v99 - v28);
  sub_1A55032A0(a1 + 8, (uint64_t)v115, &qword_1EE795BE8);
  sub_1A55032A0((uint64_t)v115, (uint64_t)&v116, &qword_1EE795BE8);
  if ((v117 & 1) != 0)
  {
    (*(void (**)(NSObject *, NSObject *, uint64_t))(v13 + 16))(v111, a3, v12);
    v29 = (uint64_t)v7;
    sub_1A55034B8((uint64_t)a3, (uint64_t)v7, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v30 = v13;
    v31 = sub_1A594A74C();
    v32 = sub_1A594C00C();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = swift_slowAlloc();
      v109 = swift_slowAlloc();
      v114 = v109;
      *(_DWORD *)v33 = 68159235;
      LODWORD(v112) = 2;
      v110 = v12;
      sub_1A594C3CC();
      *(_WORD *)(v33 + 8) = 256;
      v34 = v29 + *(int *)(v108 + 20);
      LOBYTE(v112) = *(_BYTE *)v34;
      sub_1A594C3CC();
      *(_WORD *)(v33 + 11) = 2082;
      v108 = v29;
      v35 = *(_QWORD *)(v34 + 8);
      v36 = *(_QWORD *)(v34 + 16);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v112 = sub_1A55791B0(v35, v36, &v114);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 21) = 1040;
      LODWORD(v112) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v33 + 27) = 512;
      LOWORD(v112) = *(_WORD *)(v34 + 24);
      sub_1A594C3CC();
      *(_WORD *)(v33 + 31) = 2160;
      v112 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v33 + 41) = 2085;
      v37 = *(_DWORD *)(v34 + 40);
      v112 = *(_QWORD *)(v34 + 32);
      v113 = v37;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v38 = sub_1A594B4A8();
      v112 = sub_1A55791B0(v38, v39, &v114);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC(v108, type metadata accessor for MailboxTaskLogger);
      _os_log_impl(&dword_1A4F90000, v31, v32, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] No Message UID found.", (uint8_t *)v33, 0x33u);
      v40 = v109;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v40, -1, -1);
      MEMORY[0x1A85B1964](v33, -1, -1);

      return (*(uint64_t (**)(NSObject *, uint64_t))(v30 + 8))(v111, v110);
    }
    sub_1A55034FC(v29, type metadata accessor for MailboxTaskLogger);

    v64 = *(uint64_t (**)(NSObject *, uint64_t))(v30 + 8);
    v65 = v111;
    return v64(v65, v12);
  }
  v110 = v12;
  v111 = a3;
  v104 = v13;
  v42 = v116 < v109;
  v43 = *(unsigned __int8 *)(v3 + 29);
  v44 = *(unsigned __int8 *)(v3 + 30);
  v45 = *(unsigned __int8 *)(v3 + 31);
  v46 = *(unsigned __int8 *)(v3 + 32);
  sub_1A5529C18(a1);
  if (v46)
    v47 = 0x1000000;
  else
    v47 = 0;
  if (v45)
    v48 = 0x10000;
  else
    v48 = 0;
  if (v44)
    v49 = 256;
  else
    v49 = 0;
  sub_1A5620228(a1, v42, v49 | v43 | v48 | v47, (uint64_t)v21);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
    sub_1A5510284((uint64_t)v21, &qword_1EE798438);
    v50 = v104;
    v51 = v107;
    v12 = v110;
    v52 = v111;
    (*(void (**)(char *, NSObject *, uint64_t))(v104 + 16))(v107, v111, v110);
    v53 = v106;
    sub_1A55034B8((uint64_t)v52, v106, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v54 = sub_1A594A74C();
    v55 = sub_1A594C00C();
    if (os_log_type_enabled(v54, v55))
    {
      v56 = swift_slowAlloc();
      v57 = swift_slowAlloc();
      v114 = v57;
      *(_DWORD *)v56 = 68159235;
      LODWORD(v112) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v56 + 8) = 256;
      v58 = v53 + *(int *)(v108 + 20);
      LOBYTE(v112) = *(_BYTE *)v58;
      sub_1A594C3CC();
      *(_WORD *)(v56 + 11) = 2082;
      v59 = *(_QWORD *)(v58 + 8);
      v60 = *(_QWORD *)(v58 + 16);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v112 = sub_1A55791B0(v59, v60, &v114);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v56 + 21) = 1040;
      LODWORD(v112) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v56 + 27) = 512;
      LOWORD(v112) = *(_WORD *)(v58 + 24);
      sub_1A594C3CC();
      *(_WORD *)(v56 + 31) = 2160;
      v112 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v56 + 41) = 2085;
      v61 = *(_DWORD *)(v58 + 40);
      v112 = *(_QWORD *)(v58 + 32);
      v113 = v61;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v62 = sub_1A594B4A8();
      v112 = sub_1A55791B0(v62, v63, &v114);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC(v106, type metadata accessor for MailboxTaskLogger);
      _os_log_impl(&dword_1A4F90000, v54, v55, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Ignoring message data.", (uint8_t *)v56, 0x33u);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v57, -1, -1);
      MEMORY[0x1A85B1964](v56, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v104 + 8))(v107, v110);
    }
    sub_1A55034FC(v53, type metadata accessor for MailboxTaskLogger);

    v64 = *(uint64_t (**)(NSObject *, uint64_t))(v50 + 8);
    v65 = v51;
    return v64(v65, v12);
  }
  v66 = (uint64_t)v21;
  v67 = v105;
  sub_1A54E3394(v66, (uint64_t)v105, type metadata accessor for MessageMetadata);
  v68 = *(_QWORD *)(v3 + 16);
  v69 = *(unsigned int *)(v3 + 24);
  v70 = *(unsigned __int8 *)(v3 + 28);
  LODWORD(v112) = *v67;
  v71 = sub_1A54E3414();
  MessageIdentifierSet.contains(_:)((uint64_t)&v112, v68, v69 | (v70 << 32));
  v72 = v104;
  if ((v73 & 1) != 0)
  {
    v74 = v100;
    sub_1A55034B8((uint64_t)v67, v100, type metadata accessor for MessageMetadata);
    v75 = *(_QWORD *)(v3 + 40);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v75 = sub_1A54F2314(0, *(_QWORD *)(v75 + 16) + 1, 1, v75);
    v77 = *(_QWORD *)(v75 + 16);
    v76 = *(_QWORD *)(v75 + 24);
    if (v77 >= v76 >> 1)
      v75 = sub_1A54F2314(v76 > 1, v77 + 1, 1, v75);
    *(_QWORD *)(v75 + 16) = v77 + 1;
    sub_1A54E3394(v74, v75+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(_QWORD *)(v23 + 72) * v77, type metadata accessor for MessageMetadata);
    *(_QWORD *)(v3 + 40) = v75;
    v78 = (uint64_t)v67;
  }
  else
  {
    v107 = (char *)(v69 | (v70 << 32));
    v109 = v71;
    v79 = v103;
    v80 = v111;
    v81 = v110;
    (*(void (**)(char *, NSObject *))(v104 + 16))(v103, v111);
    v82 = v102;
    sub_1A55034B8((uint64_t)v80, v102, type metadata accessor for MailboxTaskLogger);
    sub_1A54E4334(v68, v69, v70);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v83 = v101;
    sub_1A55034B8((uint64_t)v67, (uint64_t)v101, type metadata accessor for MessageMetadata);
    sub_1A54E4334(v68, v69, v70);
    v84 = sub_1A594A74C();
    v85 = sub_1A594C00C();
    v111 = v84;
    LODWORD(v106) = v85;
    if (os_log_type_enabled(v84, v85))
    {
      v86 = swift_slowAlloc();
      v100 = swift_slowAlloc();
      v114 = v100;
      *(_DWORD *)v86 = 68159747;
      LODWORD(v112) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v86 + 8) = 256;
      v87 = v82 + *(int *)(v108 + 20);
      LOBYTE(v112) = *(_BYTE *)v87;
      sub_1A594C3CC();
      *(_WORD *)(v86 + 11) = 2082;
      v88 = *(_QWORD *)(v87 + 8);
      v89 = *(_QWORD *)(v87 + 16);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v112 = sub_1A55791B0(v88, v89, &v114);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v86 + 21) = 1040;
      LODWORD(v112) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v86 + 27) = 512;
      LOWORD(v112) = *(_WORD *)(v87 + 24);
      sub_1A594C3CC();
      *(_WORD *)(v86 + 31) = 2160;
      v112 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v86 + 41) = 2085;
      v90 = *(_DWORD *)(v87 + 40);
      v112 = *(_QWORD *)(v87 + 32);
      v113 = v90;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v91 = sub_1A594B4A8();
      v112 = sub_1A55791B0(v91, v92, &v114);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC(v102, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v86 + 51) = 1024;
      LODWORD(v89) = *v101;
      sub_1A55034FC((uint64_t)v101, type metadata accessor for MessageMetadata);
      LODWORD(v112) = v89;
      sub_1A594C3CC();
      *(_WORD *)(v86 + 57) = 2082;
      sub_1A54E4334(v68, v69, v70);
      MessageIdentifierSet.debugDescription.getter();
      v94 = v93;
      v96 = v95;
      sub_1A54E3458(v68, v69, v70);
      v112 = sub_1A55791B0(v94, v96, &v114);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A54E3458(v68, v69, v70);
      sub_1A54E3458(v68, v69, v70);
      v97 = v111;
      _os_log_impl(&dword_1A4F90000, v111, (os_log_type_t)v106, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Ignoring UID %u outside of range-of-interest %{public}s.", (uint8_t *)v86, 0x43u);
      v98 = v100;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v98, -1, -1);
      MEMORY[0x1A85B1964](v86, -1, -1);

      (*(void (**)(char *, uint64_t))(v104 + 8))(v103, v110);
      v78 = (uint64_t)v105;
    }
    else
    {
      sub_1A55034FC((uint64_t)v83, type metadata accessor for MessageMetadata);

      sub_1A54E3458(v68, v69, v70);
      sub_1A54E3458(v68, v69, v70);
      sub_1A55034FC(v82, type metadata accessor for MailboxTaskLogger);
      (*(void (**)(char *, uint64_t))(v72 + 8))(v79, v81);
      v78 = (uint64_t)v67;
    }
  }
  return sub_1A55034FC(v78, type metadata accessor for MessageMetadata);
}

uint64_t sub_1A5620228@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  int v37;
  int v38;
  uint64_t v39;
  _BYTE v40[8];
  _BYTE v41[16];
  _BYTE v42[8];
  int v43;
  char v44;
  uint64_t v45;
  char v46;
  unsigned int v47;
  char v48;

  v37 = a2;
  v38 = a3;
  v39 = a4;
  v5 = sub_1A594AE60();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v33 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798F48);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v33 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE795D98);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v33 - v22;
  sub_1A55032A0(a1 + 8, (uint64_t)v42, &qword_1EE795BE8);
  sub_1A55032A0((uint64_t)v42, (uint64_t)&v43, &qword_1EE795BE8);
  if ((v44 & 1) != 0
    || (v36 = v43,
        sub_1A55032A0(a1 + 528, (uint64_t)v41, &qword_1EE796BC0),
        sub_1A55032A0((uint64_t)v41, (uint64_t)&v45, &qword_1EE796BC0),
        (v46 & 1) != 0)
    || (v24 = *(_QWORD *)(a1 + 512)) == 0
    || (v35 = v45,
        sub_1A55032A0(a1 + 540, (uint64_t)v40, &qword_1EE796310),
        sub_1A55032A0((uint64_t)v40, (uint64_t)&v47, &qword_1EE796310),
        (v48 & 1) != 0))
  {
    sub_1A5620944(a1);
    v25 = type metadata accessor for MessageMetadata(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v39, 1, 1, v25);
  }
  else
  {
    v37 &= 1u;
    v34 = v47;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A56205D4((uint64_t)v17);
    sub_1A54E330C((uint64_t)v17, (uint64_t)v14, &qword_1EE798F48);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 1, v5) == 1)
    {
      v27 = type metadata accessor for MessageMetadata.UnparsedHeader(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v23, 1, 1, v27);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v14, v5);
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
      MessageMetadata.UnparsedHeader.init(_:)(v8);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
      v28 = type metadata accessor for MessageMetadata.UnparsedHeader(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v23, 0, 1, v28);
    }
    sub_1A5510284((uint64_t)v17, &qword_1EE798F48);
    v29 = FlagDecoder.decode(_:)(v24, v38 & 0x1010101);
    swift_bridgeObjectRelease();
    v30 = *(_QWORD *)(a1 + 520);
    sub_1A54E330C((uint64_t)v23, (uint64_t)v20, &qword_1EE795D98);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v31 = v39;
    MessageMetadata.init(uid:internalDate:flags:gmailLabels:messageHeader:messageSize:indexingHint:)(v36, v35, v29 & 0xFFFFFFFF01010101, v30, (uint64_t)v20, v34, v37, v39);
    sub_1A5620944(a1);
    sub_1A5510284((uint64_t)v23, &qword_1EE795D98);
    v32 = type metadata accessor for MessageMetadata(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 0, 1, v32);
  }
}

uint64_t sub_1A56205D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  _QWORD *v25;
  char v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;

  v3 = type metadata accessor for MessageData.BodySection();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v38 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797D70);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797D48);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(v1 + 200);
  v45 = v16;
  v17 = *(_QWORD *)(v16 + 16);
  if (v17)
  {
    v38 = v12;
    v39 = v4;
    v40 = v3;
    v41 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    v18 = v16 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v19 = *(_QWORD *)(v4 + 72);
    v42 = a1;
    v43 = v19;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v44 = v6;
    do
    {
      sub_1A55034B8(v18, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodySection);
      v20 = *(_QWORD **)v9;
      v21 = *((_QWORD *)v9 + 1);
      v22 = v9[16];
      v23 = SectionSpecifier.header.unsafeMutableAddressor();
      v25 = (_QWORD *)*v23;
      v24 = v23[1];
      v26 = *((_BYTE *)v23 + 16);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A55DC724(v24, v26);
      static SectionSpecifier.__derived_struct_equals(_:_:)(v20, v21, v22, v25, v24, v26);
      v28 = v27;
      v29 = (uint64_t)v44;
      swift_bridgeObjectRelease();
      sub_1A55DC738(v24, v26);
      sub_1A55034B8((uint64_t)v9, v29, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodySection);
      if ((v28 & 1) != 0 && *(_BYTE *)(v29 + 24) == 1)
      {
        sub_1A55034FC(v29, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodySection);
        v12 = v38;
        sub_1A54E3394((uint64_t)v9, (uint64_t)v38, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodySection);
        v30 = 0;
        v15 = v41;
        a1 = v42;
        v4 = v39;
        v3 = v40;
        goto LABEL_9;
      }
      sub_1A55034FC(v29, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodySection);
      sub_1A55034FC((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodySection);
      v18 += v43;
      --v17;
    }
    while (v17);
    v30 = 1;
    v15 = v41;
    a1 = v42;
    v4 = v39;
    v3 = v40;
    v12 = v38;
  }
  else
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v30 = 1;
  }
LABEL_9:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v12, v30, 1, v3);
  sub_1A54F81BC((uint64_t)&v45);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v3) == 1)
  {
    v31 = &qword_1EE797D70;
    v32 = (uint64_t)v12;
LABEL_13:
    sub_1A5510284(v32, v31);
    v34 = sub_1A594AE60();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(a1, 1, 1, v34);
  }
  sub_1A54E330C((uint64_t)&v12[*(int *)(v3 + 24)], (uint64_t)v15, &qword_1EE797D48);
  sub_1A55034FC((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodySection);
  v33 = type metadata accessor for MessageData.BodyData();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v15, 1, v33) == 1)
  {
    v31 = &qword_1EE797D48;
    v32 = (uint64_t)v15;
    goto LABEL_13;
  }
  v36 = sub_1A594AE60();
  v37 = *(_QWORD *)(v36 - 8);
  (*(void (**)(uint64_t, char *, uint64_t))(v37 + 16))(a1, v15, v36);
  sub_1A55034FC((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for MessageData.BodyData);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(a1, 0, 1, v36);
}

uint64_t sub_1A5620944(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v25 = *(_QWORD *)(a1 + 208);
  v24 = *(_QWORD *)(a1 + 216);
  v23 = *(_QWORD *)(a1 + 224);
  v22 = *(_QWORD *)(a1 + 232);
  v21 = *(_QWORD *)(a1 + 240);
  v20 = *(_QWORD *)(a1 + 248);
  v19 = *(_QWORD *)(a1 + 256);
  v18 = *(_QWORD *)(a1 + 264);
  v12 = *(_OWORD *)(a1 + 272);
  v11 = *(_OWORD *)(a1 + 288);
  v10 = *(_OWORD *)(a1 + 304);
  v9 = *(_OWORD *)(a1 + 320);
  v7 = *(_OWORD *)(a1 + 352);
  v8 = *(_OWORD *)(a1 + 336);
  v2 = *(_QWORD *)(a1 + 368);
  v3 = *(_QWORD *)(a1 + 376);
  v4 = *(_BYTE *)(a1 + 384);
  v16 = *(_QWORD *)(a1 + 400);
  v17 = *(_QWORD *)(a1 + 392);
  v14 = *(_QWORD *)(a1 + 416);
  v15 = *(_QWORD *)(a1 + 408);
  v5 = *(_QWORD *)(a1 + 432);
  v13 = *(_QWORD *)(a1 + 424);
  sub_1A5524104(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_BYTE *)(a1 + 192));
  swift_bridgeObjectRelease();
  sub_1A5524104(v25, v24, v23, v22, v21, v20, v19, v18, v12, *((uint64_t *)&v12 + 1), v11, *((uint64_t *)&v11 + 1), v10, *((uint64_t *)&v10 + 1), v9, *((uint64_t *)&v9 + 1), v8, *((uint64_t *)&v8 + 1), v7,
    *((uint64_t *)&v7 + 1),
    v2,
    v3,
    v4);
  sub_1A55245C0(v17, v16, v15, v14, v13, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A5620B2C()
{
  uint64_t result;

  result = sub_1A54F8ABC((uint64_t)&unk_1E4E6D010);
  qword_1EE7F9910 = result;
  return result;
}

uint64_t sub_1A5620B50@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  __int128 v5;
  int v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  int v10;
  __int128 v11;

  *(_QWORD *)(a4 + 104) = 0xD000000000000016;
  *(_QWORD *)(a4 + 112) = 0x80000001A59AA980;
  *(_QWORD *)(a4 + 128) = MEMORY[0x1E0DEE9E8];
  *(_BYTE *)(a4 + 136) = 1;
  v5 = a1[1];
  v11 = *a1;
  v9 = *((_QWORD *)a1 + 3);
  v10 = *((_DWORD *)a1 + 8);
  v6 = v10;
  *(_OWORD *)a4 = v11;
  *(_OWORD *)(a4 + 16) = v5;
  *(_DWORD *)(a4 + 32) = v6;
  *(_QWORD *)(a4 + 88) = a2;
  *(_DWORD *)(a4 + 96) = a3;
  *(_BYTE *)(a4 + 100) = BYTE4(a3);
  *(_QWORD *)(a4 + 40) = &type metadata for NotifyMessagesVanished;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54FCA28((uint64_t)&v9);
  sub_1A54FCA28((uint64_t)&v11);
  sub_1A550F734();
  sub_1A594C6B4();
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796240);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1A59ABD10;
  *(_QWORD *)(v7 + 32) = &type metadata for MoveAndCopyMessages;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594C6B4();
  sub_1A54F81BC((uint64_t)&v11);
  result = sub_1A54F81BC((uint64_t)&v9);
  *(_QWORD *)(a4 + 120) = v7;
  return result;
}

uint64_t sub_1A5620CB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  char *v26;
  os_log_t v27;
  NSObject *v28;
  os_log_type_t v29;
  int v30;
  uint64_t v31;
  uint64_t isa_high;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  os_log_t v45;
  uint64_t v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  int v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  unint64_t v66;
  os_log_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  unint64_t v72;
  os_log_t v73;
  os_log_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83;

  v74 = (os_log_t)type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v74);
  v77 = (uint64_t)&v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v73 = (os_log_t)((char *)&v70 - v5);
  v6 = sub_1A594A764();
  v7 = *(_QWORD *)(v6 - 8);
  v79 = v6;
  v80 = v7;
  MEMORY[0x1E0C80A78](v6);
  v76 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v78 = (char *)&v70 - v10;
  v11 = *(_QWORD *)(v1 + 88);
  v12 = *(unsigned int *)(v1 + 96);
  v13 = *(unsigned __int8 *)(v1 + 100);
  v14 = sub_1A54E3414();
  v75 = v12 | (v13 << 32);
  MessageIdentifierSet.ranges.getter(v11, v75);
  v16 = v15;
  v18 = v17;
  v19 = v17 & 0xFFFFFFFFFFLL;
  v20 = MessageIdentifierSet.RangeView.endIndex.getter(v15, v17 & 0xFFFFFFFFFFLL);
  if (MessageIdentifierSet.RangeView.endIndex.getter(v16, v19) < 0)
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v72 = v14;
  v21 = MessageIdentifierSet.RangeView.endIndex.getter(v16, v19);
  v22 = v12;
  sub_1A54E4334(v11, v12, v13);
  sub_1A54E3458(v16, v18, SBYTE4(v18));
  if (v20 < 0 || v21 < v20)
    goto LABEL_17;
  v23 = (char *)v13;
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v80 + 16);
  if ((unint64_t)v20 <= 9)
  {
    v26 = v78;
    v25 = v79;
    v24(v78, a1, v79);
    v27 = v73;
    sub_1A55034B8(a1, (uint64_t)v73, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v13 = v22;
    sub_1A54E4334(v11, v22, (char)v23);
    sub_1A54E4334(v11, v22, (char)v23);
    sub_1A54E4334(v11, v22, (char)v23);
    v28 = sub_1A594A74C();
    v29 = sub_1A594C030();
    v30 = v29;
    if (os_log_type_enabled(v28, v29))
    {
      v31 = swift_slowAlloc();
      v77 = swift_slowAlloc();
      v83 = v77;
      *(_DWORD *)v31 = 68159747;
      LODWORD(v81) = 2;
      LODWORD(v76) = v30;
      sub_1A594C3CC();
      *(_WORD *)(v31 + 8) = 256;
      isa_high = SHIDWORD(v74[2].isa);
      v74 = v28;
      v33 = (uint64_t)v27;
      v34 = (char *)v27 + isa_high;
      LOBYTE(v81) = *v34;
      sub_1A594C3CC();
      *(_WORD *)(v31 + 11) = 2082;
      v35 = *((_QWORD *)v34 + 1);
      v36 = *((_QWORD *)v34 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v81 = sub_1A55791B0(v35, v36, &v83);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 21) = 1040;
      LODWORD(v81) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v31 + 27) = 512;
      LOWORD(v81) = *((_WORD *)v34 + 12);
      sub_1A594C3CC();
      *(_WORD *)(v31 + 31) = 2160;
      v81 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v31 + 41) = 2085;
      v37 = *((_DWORD *)v34 + 10);
      v81 = *((_QWORD *)v34 + 4);
      v82 = v37;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v38 = sub_1A594B4A8();
      v81 = sub_1A55791B0(v38, v39, &v83);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC(v33, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v31 + 51) = 2048;
      LOBYTE(v33) = (_BYTE)v23;
      v40 = MessageIdentifierSet.count.getter(v11, v75);
      sub_1A54E3458(v11, v13, (char)v23);
      v81 = v40;
      sub_1A594C3CC();
      sub_1A54E3458(v11, v13, (char)v23);
      *(_WORD *)(v31 + 61) = 2082;
      sub_1A54E4334(v11, v13, (char)v23);
      MessageIdentifierSet.debugDescription.getter();
      v42 = v41;
      v44 = v43;
      sub_1A54E3458(v11, v13, v33);
      v81 = sub_1A55791B0(v42, v44, &v83);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A54E3458(v11, v13, v33);
      sub_1A54E3458(v11, v13, v33);
      v45 = v74;
      _os_log_impl(&dword_1A4F90000, v74, (os_log_type_t)v76, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task. %ld UID(s) vanished: %{public}s", (uint8_t *)v31, 0x47u);
      v46 = v77;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v46, -1, -1);
      MEMORY[0x1A85B1964](v31, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v78, v79);
    }
    sub_1A54E3458(v11, v13, (char)v23);
    v69 = (uint64_t)v27;
    goto LABEL_14;
  }
  v26 = v76;
  v25 = v79;
  v24(v76, a1, v79);
  v48 = a1;
  v49 = v77;
  sub_1A55034B8(v48, v77, type metadata accessor for MailboxTaskLogger);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v13 = v22;
  sub_1A54E4334(v11, v22, (char)v23);
  sub_1A54E4334(v11, v22, (char)v23);
  sub_1A54E4334(v11, v22, (char)v23);
  v28 = sub_1A594A74C();
  v50 = sub_1A594C030();
  if (os_log_type_enabled(v28, (os_log_type_t)v50))
  {
    v71 = v50;
    v73 = v28;
    v51 = swift_slowAlloc();
    v70 = swift_slowAlloc();
    v83 = v70;
    *(_DWORD *)v51 = 68159747;
    LODWORD(v81) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v51 + 8) = 256;
    v52 = v49 + SHIDWORD(v74[2].isa);
    LOBYTE(v81) = *(_BYTE *)v52;
    sub_1A594C3CC();
    *(_WORD *)(v51 + 11) = 2082;
    v53 = *(_QWORD *)(v52 + 8);
    v54 = *(_QWORD *)(v52 + 16);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v81 = sub_1A55791B0(v53, v54, &v83);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v51 + 21) = 1040;
    LODWORD(v81) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v51 + 27) = 512;
    LOWORD(v81) = *(_WORD *)(v52 + 24);
    sub_1A594C3CC();
    *(_WORD *)(v51 + 31) = 2160;
    v81 = 0x786F626C69616DLL;
    sub_1A594C3CC();
    *(_WORD *)(v51 + 41) = 2085;
    v55 = *(_DWORD *)(v52 + 40);
    v81 = *(_QWORD *)(v52 + 32);
    v82 = v55;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v56 = sub_1A594B4A8();
    v81 = sub_1A55791B0(v56, v57, &v83);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC(v77, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v51 + 51) = 2048;
    v58 = v75;
    v59 = MessageIdentifierSet.count.getter(v11, v75);
    sub_1A54E3458(v11, v13, (char)v23);
    v81 = v59;
    sub_1A594C3CC();
    v78 = v23;
    sub_1A54E3458(v11, v13, (char)v23);
    *(_WORD *)(v51 + 61) = 2082;
    MessageIdentifierSet.ranges.getter(v11, v58);
    v18 = v60;
    v16 = v61;
    a1 = HIDWORD(v61);
    v62 = v61 & 0xFFFFFFFFFFLL;
    if (!MessageIdentifierSet.RangeView.endIndex.getter(v60, v61 & 0xFFFFFFFFFFLL))
    {
LABEL_19:
      sub_1A54E3458(v18, v16, a1);
      sub_1A54E3458(v11, v13, (char)v78);
      __break(1u);
      goto LABEL_20;
    }
    MessageIdentifierSet.RangeView.subscript.getter(0, v18, v62);
    sub_1A54E3458(v18, v16, a1);
    v18 = v81;
    v63 = sub_1A5531838(v11, v58);
    if ((v63 & 0x100000000) != 0)
    {
LABEL_20:
      result = sub_1A54E3458(v11, v13, (char)v78);
      __break(1u);
      return result;
    }
    v64 = (char)v78;
    if (v18 <= v63)
    {
      v81 = __PAIR64__(v63, v18);
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796E58);
      MessageIdentifierRange.debugDescription.getter();
      v81 = sub_1A55791B0(v65, v66, &v83);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A54E3458(v11, v13, v64);
      sub_1A54E3458(v11, v13, v64);
      v67 = v73;
      _os_log_impl(&dword_1A4F90000, v73, (os_log_type_t)v71, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task. %ld UID(s) vanished in range %{public}s.", (uint8_t *)v51, 0x47u);
      v68 = v70;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v68, -1, -1);
      MEMORY[0x1A85B1964](v51, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v76, v79);
    }
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  sub_1A54E3458(v11, v13, (char)v23);
  v69 = v49;
LABEL_14:
  sub_1A55034FC(v69, type metadata accessor for MailboxTaskLogger);
  sub_1A54E3458(v11, v13, (char)v23);
  sub_1A54E3458(v11, v13, (char)v23);
  sub_1A54E3458(v11, v13, (char)v23);

  return (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v26, v25);
}

uint64_t sub_1A5621790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void (*v33)(NSObject *, uint64_t, uint64_t);
  NSObject *v34;
  uint64_t v35;
  _BYTE *v36;
  NSObject *v37;
  os_log_type_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  unint64_t v44;
  int v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  NSObject *v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE *v56;
  NSObject *v57;
  NSObject *v58;
  int v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  unint64_t v63;
  int v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  os_log_type_t v74;
  uint64_t v75;
  unint64_t v76;
  os_log_t v77;
  uint64_t v78;
  _BYTE v79[12];
  int v80;
  uint64_t v81;
  os_log_t v82;
  unint64_t v83;
  _BYTE *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _BYTE *v88;
  NSObject *v89;
  uint64_t v90;
  int v91;
  uint64_t v92;

  v87 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v87);
  v89 = &v79[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v7);
  v88 = &v79[-v8];
  v9 = sub_1A594A764();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = &v79[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v13);
  v15 = &v79[-v14];
  v16 = *(_QWORD *)(a2 + 88);
  v17 = *(unsigned int *)(a2 + 96);
  v18 = *(unsigned __int8 *)(a2 + 100);
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
  MessageIdentifierSet.subtract(_:)(v16, v17 | (v18 << 32));
  v19 = *(_QWORD *)(a1 + 216);
  v20 = *(unsigned int *)(a1 + 224);
  v21 = *(unsigned __int8 *)(a1 + 228);
  sub_1A54E4334(v19, v20, v21);
  sub_1A54E3414();
  result = MessageIdentifierSetNonEmpty.init(set:)(v19, v20 | (v21 << 32));
  if (BYTE4(v23) != 255)
  {
    v24 = result;
    v25 = v23;
    v84 = v12;
    v85 = v9;
    v86 = v10;
    v83 = v23 & 0xFFFFFFFFFFLL;
    MessageIdentifierSet.ranges.getter(result, v23 & 0xFFFFFFFFFFLL);
    v27 = v26;
    v29 = v28;
    v30 = v28 & 0xFFFFFFFFFFLL;
    v31 = MessageIdentifierSet.RangeView.endIndex.getter(v26, v28 & 0xFFFFFFFFFFLL);
    if (MessageIdentifierSet.RangeView.endIndex.getter(v27, v30) < 0)
    {
      __break(1u);
    }
    else
    {
      v30 = MessageIdentifierSet.RangeView.endIndex.getter(v27, v30);
      sub_1A54E3458(v27, v29, SBYTE4(v29));
      if ((v31 & 0x8000000000000000) == 0 && v30 >= (uint64_t)v31)
      {
        v32 = v86;
        v33 = *(void (**)(NSObject *, uint64_t, uint64_t))(v86 + 16);
        if (v31 <= 9)
        {
          v34 = v15;
          v35 = v85;
          v33(v15, a3, v85);
          v36 = v88;
          sub_1A55034B8(a3, (uint64_t)v88, type metadata accessor for MailboxTaskLogger);
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          sub_1A5503BA0(v24, v25);
          sub_1A5503BA0(v24, v25);
          v84 = (_BYTE *)HIDWORD(v25);
          sub_1A54E4334(v24, v25, SBYTE4(v25));
          v37 = sub_1A594A74C();
          v38 = sub_1A594C030();
          v39 = v38;
          v89 = v37;
          if (os_log_type_enabled(v37, v38))
          {
            v40 = swift_slowAlloc();
            v82 = v34;
            v80 = v39;
            v41 = v40;
            v81 = swift_slowAlloc();
            v92 = v81;
            *(_DWORD *)v41 = 68159747;
            LODWORD(v90) = 2;
            sub_1A594C3CC();
            *(_WORD *)(v41 + 8) = 256;
            v42 = &v36[*(int *)(v87 + 20)];
            LOBYTE(v90) = *v42;
            sub_1A594C3CC();
            *(_WORD *)(v41 + 11) = 2082;
            v43 = *((_QWORD *)v42 + 1);
            v44 = *((_QWORD *)v42 + 2);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v90 = sub_1A55791B0(v43, v44, &v92);
            sub_1A594C3CC();
            swift_bridgeObjectRelease();
            *(_WORD *)(v41 + 21) = 1040;
            LODWORD(v90) = 2;
            sub_1A594C3CC();
            *(_WORD *)(v41 + 27) = 512;
            LOWORD(v90) = *((_WORD *)v42 + 12);
            sub_1A594C3CC();
            *(_WORD *)(v41 + 31) = 2160;
            v90 = 0x786F626C69616DLL;
            sub_1A594C3CC();
            *(_WORD *)(v41 + 41) = 2085;
            v45 = *((_DWORD *)v42 + 10);
            v90 = *((_QWORD *)v42 + 4);
            v91 = v45;
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v46 = sub_1A594B4A8();
            v90 = sub_1A55791B0(v46, v47, &v92);
            sub_1A594C3CC();
            swift_bridgeObjectRelease();
            sub_1A55034FC((uint64_t)v36, type metadata accessor for MailboxTaskLogger);
            *(_WORD *)(v41 + 51) = 2048;
            v48 = MessageIdentifierSet.count.getter(v24, v83);
            sub_1A5503B8C(v24, v25);
            v90 = v48;
            sub_1A594C3CC();
            sub_1A5503B8C(v24, v25);
            *(_WORD *)(v41 + 61) = 2082;
            sub_1A54E4334(v24, v25, (char)v84);
            MessageIdentifierSet.debugDescription.getter();
            v50 = v49;
            v52 = v51;
            sub_1A5503B8C(v24, v25);
            v90 = sub_1A55791B0(v50, v52, &v92);
            sub_1A594C3CC();
            swift_bridgeObjectRelease();
            sub_1A5503B8C(v24, v25);
            sub_1A5503B8C(v24, v25);
            v53 = v89;
            _os_log_impl(&dword_1A4F90000, v89, (os_log_type_t)v80, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Done. Still %ld vanished UID(s) remaining: %{public}s", (uint8_t *)v41, 0x47u);
            v54 = v81;
            swift_arrayDestroy();
            MEMORY[0x1A85B1964](v54, -1, -1);
            MEMORY[0x1A85B1964](v41, -1, -1);

            return (*(uint64_t (**)(os_log_t, uint64_t))(v86 + 8))(v82, v85);
          }
          else
          {
            sub_1A5503B8C(v24, v25);
            sub_1A55034FC((uint64_t)v36, type metadata accessor for MailboxTaskLogger);
            sub_1A5503B8C(v24, v25);
            sub_1A5503B8C(v24, v25);
            sub_1A54E3458(v24, v25, (char)v84);

            return (*(uint64_t (**)(NSObject *, uint64_t))(v32 + 8))(v34, v35);
          }
        }
        v56 = v84;
        v55 = v85;
        v33(v84, a3, v85);
        v57 = v89;
        sub_1A55034B8(a3, (uint64_t)v89, type metadata accessor for MailboxTaskLogger);
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        sub_1A5503BA0(v24, v25);
        sub_1A5503BA0(v24, v25);
        sub_1A54E4334(v24, v25, SBYTE4(v25));
        v58 = sub_1A594A74C();
        v59 = sub_1A594C030();
        if (!os_log_type_enabled(v58, (os_log_type_t)v59))
        {
          sub_1A5503B8C(v24, v25);
          sub_1A55034FC((uint64_t)v57, type metadata accessor for MailboxTaskLogger);
          sub_1A5503B8C(v24, v25);
          sub_1A5503B8C(v24, v25);
          sub_1A54E3458(v24, v25, SBYTE4(v25));

          return (*(uint64_t (**)(_BYTE *, uint64_t))(v32 + 8))(v56, v55);
        }
        LODWORD(v88) = v59;
        v82 = v58;
        v60 = swift_slowAlloc();
        v81 = swift_slowAlloc();
        v92 = v81;
        *(_DWORD *)v60 = 68159747;
        LODWORD(v90) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v60 + 8) = 256;
        v61 = (char *)v57 + *(int *)(v87 + 20);
        LOBYTE(v90) = *v61;
        sub_1A594C3CC();
        *(_WORD *)(v60 + 11) = 2082;
        v62 = *((_QWORD *)v61 + 1);
        v63 = *((_QWORD *)v61 + 2);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v90 = sub_1A55791B0(v62, v63, &v92);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v60 + 21) = 1040;
        LODWORD(v90) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v60 + 27) = 512;
        LOWORD(v90) = *((_WORD *)v61 + 12);
        sub_1A594C3CC();
        *(_WORD *)(v60 + 31) = 2160;
        v90 = 0x786F626C69616DLL;
        sub_1A594C3CC();
        *(_WORD *)(v60 + 41) = 2085;
        v64 = *((_DWORD *)v61 + 10);
        v90 = *((_QWORD *)v61 + 4);
        v91 = v64;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v65 = sub_1A594B4A8();
        v90 = sub_1A55791B0(v65, v66, &v92);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55034FC((uint64_t)v89, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v60 + 51) = 2048;
        v67 = v83;
        v68 = MessageIdentifierSet.count.getter(v24, v83);
        sub_1A5503B8C(v24, v25);
        v90 = v68;
        sub_1A594C3CC();
        sub_1A5503B8C(v24, v25);
        *(_WORD *)(v60 + 61) = 2082;
        MessageIdentifierSet.ranges.getter(v24, v67);
        v31 = v69;
        v30 = v70;
        v27 = HIDWORD(v70);
        v71 = v70 & 0xFFFFFFFFFFLL;
        if (!MessageIdentifierSet.RangeView.endIndex.getter(v69, v70 & 0xFFFFFFFFFFLL))
          goto LABEL_19;
        MessageIdentifierSet.RangeView.subscript.getter(0, v31, v71);
        sub_1A54E3458(v31, v30, v27);
        v31 = v90;
        v72 = sub_1A5531838(v24, v67);
        if ((v72 & 0x100000000) != 0)
        {
LABEL_20:
          result = sub_1A5503B8C(v24, v25);
          __break(1u);
          return result;
        }
        v73 = v86;
        v27 = (uint64_t)v84;
        v74 = v88;
        if (v31 <= v72)
        {
          v90 = __PAIR64__(v72, v31);
          __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796E58);
          MessageIdentifierRange.debugDescription.getter();
          v90 = sub_1A55791B0(v75, v76, &v92);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          sub_1A5503B8C(v24, v25);
          sub_1A5503B8C(v24, v25);
          v77 = v82;
          _os_log_impl(&dword_1A4F90000, v82, v74, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Done. Still %ld vanished UID(s) remaining in range %{public}s.", (uint8_t *)v60, 0x47u);
          v78 = v81;
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v78, -1, -1);
          MEMORY[0x1A85B1964](v60, -1, -1);

          return (*(uint64_t (**)(uint64_t, uint64_t))(v73 + 8))(v27, v85);
        }
LABEL_18:
        __break(1u);
LABEL_19:
        sub_1A54E3458(v31, v30, v27);
        sub_1A5503B8C(v24, v25);
        __break(1u);
        goto LABEL_20;
      }
    }
    __break(1u);
    goto LABEL_18;
  }
  return result;
}

uint64_t sub_1A5622298()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t sub_1A56222A0()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t sub_1A56222A8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 136);
}

unint64_t sub_1A56222B4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, unint64_t *a3@<X8>)
{
  unint64_t result;

  result = sub_1A56227C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A56222E8(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[5];
  uint64_t v11;

  v3 = *(_QWORD *)(v2 + 24);
  v4 = *(_DWORD *)(v2 + 32);
  v10[3] = a2;
  if (*(_BYTE *)(result + 168) == 1)
  {
    v5 = result;
    v7 = *(_QWORD *)(result + 152);
    v6 = *(_QWORD *)(result + 160);
    v11 = *(_QWORD *)(result + 144);
    v8 = v11;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A551C6E4((uint64_t)&v11, v3, v4, 0, (void (*)(uint64_t))sub_1A56227B8, v10);
    result = sub_1A54E8FCC(v8, v7, v6, 1);
    v9 = v11;
    *(_QWORD *)(v5 + 152) = 0;
    *(_QWORD *)(v5 + 160) = 0;
    *(_QWORD *)(v5 + 144) = v9;
    *(_BYTE *)(v5 + 168) = 1;
  }
  return result;
}

uint64_t sub_1A5622390()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 104);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t destroy for NotifyMessagesVanished(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 48);
  sub_1A54E3458(*(_QWORD *)(a1 + 88), *(unsigned int *)(a1 + 96), *(_BYTE *)(a1 + 100));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NotifyMessagesVanished(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v5 = a2 + 48;
  v6 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 72) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v8(a1 + 48, v5, v7);
  v9 = *(_QWORD *)(a2 + 88);
  v10 = *(_DWORD *)(a2 + 96);
  LOBYTE(v5) = *(_BYTE *)(a2 + 100);
  sub_1A54E4334(v9, v10, v5);
  *(_QWORD *)(a1 + 88) = v9;
  *(_DWORD *)(a1 + 96) = v10;
  *(_BYTE *)(a1 + 100) = v5;
  v11 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v11;
  v12 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v12;
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for NotifyMessagesVanished(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 48), (uint64_t *)(a2 + 48));
  v4 = *(_QWORD *)(a2 + 88);
  v5 = *(_DWORD *)(a2 + 96);
  v6 = *(_BYTE *)(a2 + 100);
  sub_1A54E4334(v4, v5, v6);
  v7 = *(_QWORD *)(a1 + 88);
  v8 = *(unsigned int *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = v4;
  *(_DWORD *)(a1 + 96) = v5;
  v9 = *(_BYTE *)(a1 + 100);
  *(_BYTE *)(a1 + 100) = v6;
  sub_1A54E3458(v7, v8, v9);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  return a1;
}

uint64_t assignWithTake for NotifyMessagesVanished(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  __swift_destroy_boxed_opaque_existential_1(a1 + 48);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  v5 = *(_QWORD *)(a2 + 88);
  v6 = *(_DWORD *)(a2 + 96);
  v7 = *(_BYTE *)(a2 + 100);
  v8 = *(_QWORD *)(a1 + 88);
  v9 = *(unsigned int *)(a1 + 96);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v5;
  *(_DWORD *)(a1 + 96) = v6;
  v10 = *(_BYTE *)(a1 + 100);
  *(_BYTE *)(a1 + 100) = v7;
  sub_1A54E3458(v8, v9, v10);
  v11 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v11;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  return a1;
}

ValueMetadata *type metadata accessor for NotifyMessagesVanished()
{
  return &type metadata for NotifyMessagesVanished;
}

unint64_t sub_1A562270C()
{
  unint64_t result;

  result = qword_1EE7A8D78;
  if (!qword_1EE7A8D78)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AA9FC, &type metadata for NotifyMessagesVanished.ActionID);
    atomic_store(result, (unint64_t *)&qword_1EE7A8D78);
  }
  return result;
}

unint64_t sub_1A5622750(uint64_t a1)
{
  unint64_t result;

  result = sub_1A5622774();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A5622774()
{
  unint64_t result;

  result = qword_1EE7A8D80;
  if (!qword_1EE7A8D80)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AA9B8, &type metadata for NotifyMessagesVanished);
    atomic_store(result, (unint64_t *)&qword_1EE7A8D80);
  }
  return result;
}

uint64_t sub_1A56227B8(uint64_t a1)
{
  uint64_t v1;

  return sub_1A5621790(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_1A56227C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v5 = type metadata accessor for TaskHistory.Previous(0);
  v33 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v27 - v9;
  v11 = sub_1A55B03C0(a2);
  v12 = *(_QWORD *)(v11 + 16);
  if (!v12)
  {
    swift_bridgeObjectRelease();
LABEL_13:
    v21 = swift_allocObject();
    v22 = *(_QWORD *)(v2 + 8);
    *(_QWORD *)(v21 + 16) = *(_QWORD *)v2;
    *(_QWORD *)(v21 + 24) = v22;
    v23 = *(_QWORD *)(v2 + 88);
    v24 = *(unsigned int *)(v2 + 96);
    *(_QWORD *)(v21 + 32) = v23;
    *(_DWORD *)(v21 + 40) = v24;
    v25 = *(_BYTE *)(v2 + 100);
    *(_BYTE *)(v21 + 44) = v25;
    v20 = v21 | 0x2000000000000004;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54E4334(v23, v24, v25);
    return v20;
  }
  v28 = v2;
  v29 = v11;
  v13 = 0;
  v31 = v11 + 32;
  v34 = *(_QWORD *)(a1 + 16);
  v32 = a1;
  v30 = v12;
  while (!v34)
  {
LABEL_4:
    if (++v13 == v12)
    {
      swift_bridgeObjectRelease();
      v2 = v28;
      goto LABEL_13;
    }
  }
  v14 = *(_DWORD *)(v31 + 4 * v13);
  v15 = v33;
  v16 = a1 + ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80));
  swift_bridgeObjectRetain_n();
  v17 = *(_QWORD *)(v15 + 72);
  v18 = v34;
  while (1)
  {
    sub_1A55034B8(v16, (uint64_t)v10, type metadata accessor for TaskHistory.Previous);
    sub_1A55034B8((uint64_t)v10, (uint64_t)v7, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() == 1)
      break;
    sub_1A55034FC((uint64_t)v7, type metadata accessor for TaskHistory.Previous);
LABEL_8:
    sub_1A55034FC((uint64_t)v10, type metadata accessor for TaskHistory.Previous);
    v16 += v17;
    if (!--v18)
    {
      a1 = v32;
      swift_bridgeObjectRelease_n();
      v12 = v30;
      goto LABEL_4;
    }
  }
  v19 = *((_DWORD *)v7 + 2);
  swift_release();
  if (v19 != v14)
    goto LABEL_8;
  sub_1A55034FC((uint64_t)v10, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return 0xF000000000000007;
}

uint64_t sub_1A5622A0C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1A54E3458(*(_QWORD *)(v0 + 32), *(unsigned int *)(v0 + 40), *(_BYTE *)(v0 + 44));
  return swift_deallocObject();
}

uint64_t storeEnumTagSinglePayload for NotifyMessagesVanished.ActionID(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A5622A80 + 4 * asc_1A59AA990[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A5622AA0 + 4 * byte_1A59AA995[v4]))();
}

_BYTE *sub_1A5622A80(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A5622AA0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A5622AA8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A5622AB0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A5622AB8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A5622AC0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for NotifyMessagesVanished.ActionID()
{
  return &type metadata for NotifyMessagesVanished.ActionID;
}

double sub_1A5622ADC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  _OWORD v13[4];
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _OWORD v19[2];

  v4 = *(_OWORD *)(a1 + 176);
  v19[0] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)((char *)v19 + 12) = *(_OWORD *)(a1 + 204);
  v5 = *(_OWORD *)(a1 + 144);
  v17 = *(_OWORD *)(a1 + 160);
  v18 = v4;
  v16 = v5;
  v6 = sub_1A5513210();
  v15 = *(_QWORD *)(a1 + 56);
  v7 = v15;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54FCA28((uint64_t)&v15);
  v8 = sub_1A562367C(v7, v6);
  swift_bridgeObjectRelease();
  sub_1A5623900(a1);
  swift_bridgeObjectRelease();
  v9 = sub_1A5552740(v8);
  swift_bridgeObjectRelease();
  sub_1A5622BDC(v9, (uint64_t)v13);
  if (*(_QWORD *)&v13[0])
  {
    v10 = v13[3];
    *(_OWORD *)(a2 + 32) = v13[2];
    *(_OWORD *)(a2 + 48) = v10;
    *(_QWORD *)(a2 + 64) = v14;
    v11 = v13[1];
    *(_OWORD *)a2 = v13[0];
    *(_OWORD *)(a2 + 16) = v11;
  }
  else
  {
    sub_1A56239D0((uint64_t)v13);
    *(_QWORD *)(a2 + 64) = 0;
    *(_QWORD *)&v11 = 0;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return *(double *)&v11;
}

double sub_1A5622BDC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;
  _QWORD v5[9];

  v5[0] = &type metadata for NotifySyncRequestCompletion;
  sub_1A594C6B4();
  v5[6] = 0xD00000000000001BLL;
  v5[7] = 0x80000001A59AAA60;
  if (*(_QWORD *)(a1 + 16))
  {
    v5[8] = a1;
    sub_1A5553524((uint64_t)v5, a2);
    sub_1A5553560((uint64_t)v5);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1A5553138((uint64_t)v5);
    swift_bridgeObjectRelease();
    *(_QWORD *)(a2 + 64) = 0;
    result = 0.0;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1A5622CA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[64];
  _BYTE v31[64];
  uint64_t v32;

  v2 = v1;
  v4 = type metadata accessor for Task.Logger(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A594A764();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))(v11, a1, v7, v9);
  sub_1A55034B8(a1, (uint64_t)v6, type metadata accessor for Task.Logger);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  sub_1A5553524(v2, (uint64_t)v31);
  sub_1A5553524(v2, (uint64_t)v30);
  v12 = sub_1A594A74C();
  v13 = sub_1A594C030();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v26 = swift_slowAlloc();
    v29 = v26;
    *(_DWORD *)v14 = 68158722;
    LODWORD(v28) = 2;
    v27 = v7;
    sub_1A594C3CC();
    *(_WORD *)(v14 + 8) = 256;
    v15 = &v6[*(int *)(v4 + 20)];
    v16 = *((_QWORD *)v15 + 1);
    v17 = *((_QWORD *)v15 + 2);
    LOBYTE(v28) = *(_QWORD *)v15;
    sub_1A594C3CC();
    *(_WORD *)(v14 + 11) = 2082;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v28 = sub_1A55791B0(v16, v17, &v29);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC((uint64_t)v6, type metadata accessor for Task.Logger);
    *(_WORD *)(v14 + 21) = 2048;
    v18 = *(_QWORD *)(v32 + 16);
    sub_1A5553560((uint64_t)v31);
    v28 = v18;
    sub_1A594C3CC();
    *(_WORD *)(v14 + 31) = 2082;
    v19 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v20 = sub_1A554AF40(v19);
    v22 = v21;
    swift_bridgeObjectRelease();
    v28 = sub_1A55791B0(v20, v22, &v29);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A5553560((uint64_t)v30);
    _os_log_impl(&dword_1A4F90000, v12, v13, "[%.*hhx-%{public}s] Created task to notify that %ld sync requests completed: %{public}s.", (uint8_t *)v14, 0x29u);
    v23 = v26;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v23, -1, -1);
    MEMORY[0x1A85B1964](v14, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v27);
  }
  else
  {
    sub_1A5553560((uint64_t)v31);
    sub_1A55034FC((uint64_t)v6, type metadata accessor for Task.Logger);
    sub_1A5553560((uint64_t)v30);

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
}

uint64_t sub_1A5622FEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  __int128 v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  unsigned int v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  unsigned __int8 *v27;
  uint64_t v28;
  unint64_t v29;
  __uint64_t v30;
  uint64_t v31;
  double v32;
  char *v33;
  uint64_t v34;
  NSObject *v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  unint64_t v42;
  _QWORD v44[2];
  __int128 v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t *v55;
  uint64_t v56;
  int64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  int64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66[2];

  v50 = type metadata accessor for Task.Logger(0);
  MEMORY[0x1E0C80A78](v50);
  v62 = (uint64_t)v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A594A764();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v59 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v2 + 64);
  v10 = *(_QWORD *)(v9 + 56);
  v56 = v9 + 56;
  v11 = 1 << *(_BYTE *)(v9 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v57 = (unint64_t)(v11 + 63) >> 6;
  v47 = (char *)&v65 + 4;
  v46 = (char *)&v65 + 1;
  v55 = v66;
  v63 = v9;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v14 = 0;
  *(_QWORD *)&v15 = 68158978;
  v45 = v15;
  v44[1] = MEMORY[0x1E0DEE9B8] + 8;
  v51 = a2;
  v48 = v6;
  v49 = a1;
  v60 = v7;
  while (1)
  {
    if (v13)
    {
      v16 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_21;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
      goto LABEL_37;
    if (v18 >= v57)
      return swift_release();
    v19 = *(_QWORD *)(v56 + 8 * v18);
    ++v14;
    if (!v19)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v57)
        return swift_release();
      v19 = *(_QWORD *)(v56 + 8 * v14);
      if (!v19)
      {
        v14 = v18 + 2;
        if (v18 + 2 >= v57)
          return swift_release();
        v19 = *(_QWORD *)(v56 + 8 * v14);
        if (!v19)
        {
          v20 = v18 + 3;
          if (v20 >= v57)
            return swift_release();
          v19 = *(_QWORD *)(v56 + 8 * v20);
          if (!v19)
          {
            while (1)
            {
              v14 = v20 + 1;
              if (__OFADD__(v20, 1))
                goto LABEL_40;
              if (v14 >= v57)
                return swift_release();
              v19 = *(_QWORD *)(v56 + 8 * v14);
              ++v20;
              if (v19)
                goto LABEL_20;
            }
          }
          v14 = v20;
        }
      }
    }
LABEL_20:
    v13 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_21:
    v21 = *(_DWORD *)(*(_QWORD *)(v63 + 48) + 4 * v17);
    v22 = sub_1A54FDC2C(v21);
    if ((v23 & 1) != 0)
    {
      v24 = v22;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v26 = *(_QWORD *)(a1 + 56);
      v66[0] = v26;
      *(_QWORD *)(a1 + 56) = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_1A55501A8();
        v26 = v66[0];
      }
      v27 = (unsigned __int8 *)(*(_QWORD *)(v26 + 56) + 24 * v24);
      v28 = *v27;
      v29 = *((_QWORD *)v27 + 2);
      v64 = *((_QWORD *)v27 + 1);
      sub_1A554E71C(v24, v26);
      *(_QWORD *)(a1 + 56) = v26;
      swift_bridgeObjectRelease();
      v30 = static MonotonicTime.now()();
      v31 = v30 - v29;
      if (v30 >= v29)
      {
        if ((uint64_t)(v30 - v29) < 0)
          goto LABEL_39;
      }
      else
      {
        if ((uint64_t)(v29 - v30) < 0)
          goto LABEL_38;
        v31 = v30 - v29;
      }
      v32 = (double)v31 / 1000000000.0;
      if ((~*(_QWORD *)&v32 & 0x7FF0000000000000) == 0)
      {
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        JUMPOUT(0x1A5623638);
      }
      if (v32 <= -9.22337204e18)
        goto LABEL_35;
      if (v32 >= 9.22337204e18)
        goto LABEL_36;
      v61 = v14;
      v58 = v28;
      v33 = v59;
      v34 = v60;
      (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v59, a2, v6);
      sub_1A55034B8(a2, v62, type metadata accessor for Task.Logger);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v35 = sub_1A594A74C();
      v36 = a2;
      v37 = sub_1A594C030();
      if (os_log_type_enabled(v35, (os_log_type_t)v37))
      {
        v54 = v37;
        v52 = (uint64_t)v32;
        v38 = swift_slowAlloc();
        v53 = swift_slowAlloc();
        v66[0] = v53;
        *(_DWORD *)v38 = v45;
        LODWORD(v65) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v38 + 8) = 256;
        v39 = v62;
        v40 = (_QWORD *)(v62 + *(int *)(v50 + 20));
        v41 = v40[1];
        v42 = v40[2];
        LOBYTE(v65) = *v40;
        sub_1A594C3CC();
        *(_WORD *)(v38 + 11) = 2082;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v65 = sub_1A55791B0(v41, v42, v66);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55034FC(v39, type metadata accessor for Task.Logger);
        *(_WORD *)(v38 + 21) = 1024;
        LODWORD(v65) = v21;
        sub_1A594C3CC();
        *(_WORD *)(v38 + 27) = 2082;
        __asm { BR              X8 }
      }
      sub_1A55034FC(v62, type metadata accessor for Task.Logger);

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v33, v6);
      a2 = v36;
      v14 = v61;
    }
  }
}

unint64_t sub_1A562364C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, unint64_t *a3@<X8>)
{
  unint64_t result;

  result = sub_1A5623C38(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A562367C(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;

  v3 = result;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(result + 64);
  v25 = (unint64_t)(v6 + 63) >> 6;
  v9 = a2 + 56;
  v10 = MEMORY[0x1E0DEE9D8];
  v23 = result + 64;
  v24 = result;
LABEL_5:
  while (v8)
  {
    v11 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v12 = v11 | (v4 << 6);
LABEL_22:
    v16 = *(_DWORD *)(*(_QWORD *)(v3 + 48) + 4 * v12);
    if (!*(_QWORD *)(a2 + 16))
      goto LABEL_29;
    sub_1A594CE64();
    sub_1A594CEAC();
    result = sub_1A594CED0();
    v17 = -1 << *(_BYTE *)(a2 + 32);
    v18 = result & ~v17;
    if (((*(_QWORD *)(v9 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      goto LABEL_29;
    v19 = *(_QWORD *)(a2 + 48);
    if (*(_DWORD *)(v19 + 4 * v18) != v16)
    {
      v20 = ~v17;
      while (1)
      {
        v18 = (v18 + 1) & v20;
        if (((*(_QWORD *)(v9 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
          break;
        if (*(_DWORD *)(v19 + 4 * v18) == v16)
          goto LABEL_5;
      }
LABEL_29:
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
        result = sub_1A54F4CF0(0, *(_QWORD *)(v10 + 16) + 1, 1);
      v22 = *(_QWORD *)(v10 + 16);
      v21 = *(_QWORD *)(v10 + 24);
      if (v22 >= v21 >> 1)
        result = sub_1A54F4CF0(v21 > 1, v22 + 1, 1);
      *(_QWORD *)(v10 + 16) = v22 + 1;
      *(_DWORD *)(v10 + 4 * v22 + 32) = v16;
      v5 = v23;
      v3 = v24;
    }
  }
  v13 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_36;
  }
  if (v13 >= v25)
    goto LABEL_34;
  v14 = *(_QWORD *)(v5 + 8 * v13);
  ++v4;
  if (v14)
    goto LABEL_21;
  v4 = v13 + 1;
  if (v13 + 1 >= v25)
    goto LABEL_34;
  v14 = *(_QWORD *)(v5 + 8 * v4);
  if (v14)
    goto LABEL_21;
  v4 = v13 + 2;
  if (v13 + 2 >= v25)
    goto LABEL_34;
  v14 = *(_QWORD *)(v5 + 8 * v4);
  if (v14)
    goto LABEL_21;
  v4 = v13 + 3;
  if (v13 + 3 >= v25)
    goto LABEL_34;
  v14 = *(_QWORD *)(v5 + 8 * v4);
  if (v14)
    goto LABEL_21;
  v15 = v13 + 4;
  if (v15 >= v25)
  {
LABEL_34:
    swift_release();
    return v10;
  }
  v14 = *(_QWORD *)(v5 + 8 * v15);
  v4 = v15;
  if (v14)
  {
LABEL_21:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v4 << 6);
    goto LABEL_22;
  }
  while (1)
  {
    v4 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v4 >= v25)
      goto LABEL_34;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    ++v15;
    if (v14)
      goto LABEL_21;
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1A5623900(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v2 = *(_QWORD *)(a1 + 120);
  v3 = *(_QWORD *)(a1 + 144);
  v4 = *(_QWORD *)(a1 + 152);
  v5 = *(_QWORD *)(a1 + 160);
  v6 = *(_BYTE *)(a1 + 168);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A55419EC(v2);
  sub_1A54E8FCC(v3, v4, v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A56239D0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797C70);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t destroy for NotifySyncRequestCompletion(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NotifySyncRequestCompletion(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 8, a2 + 8);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

_QWORD *assignWithCopy for NotifySyncRequestCompletion(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  __swift_assign_boxed_opaque_existential_1(a1 + 1, a2 + 1);
  a1[6] = a2[6];
  a1[7] = a2[7];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for NotifySyncRequestCompletion(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for NotifySyncRequestCompletion()
{
  return &type metadata for NotifySyncRequestCompletion;
}

unint64_t sub_1A5623B8C()
{
  unint64_t result;

  result = qword_1EE797C60;
  if (!qword_1EE797C60)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AAAE0, &type metadata for NotifySyncRequestCompletion.ActionID);
    atomic_store(result, (unint64_t *)&qword_1EE797C60);
  }
  return result;
}

unint64_t sub_1A5623BD0(uint64_t a1)
{
  unint64_t result;

  result = sub_1A5623BF4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A5623BF4()
{
  unint64_t result;

  result = qword_1EE797C68;
  if (!qword_1EE797C68)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AAA9C, &type metadata for NotifySyncRequestCompletion);
    atomic_store(result, (unint64_t *)&qword_1EE797C68);
  }
  return result;
}

unint64_t sub_1A5623C38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v5 = type metadata accessor for TaskHistory.Previous(0);
  v28 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v22 - v9;
  v11 = sub_1A55B00D0(a2);
  v12 = *(_QWORD *)(v11 + 16);
  if (!v12)
  {
    swift_bridgeObjectRelease();
LABEL_13:
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = *(_QWORD *)(v2 + 64);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return v20;
  }
  v23 = v2;
  v24 = v11;
  v13 = 0;
  v26 = v11 + 32;
  v29 = *(_QWORD *)(a1 + 16);
  v27 = a1;
  v25 = v12;
  while (!v29)
  {
LABEL_4:
    if (++v13 == v12)
    {
      swift_bridgeObjectRelease();
      v2 = v23;
      goto LABEL_13;
    }
  }
  v14 = *(_DWORD *)(v26 + 4 * v13);
  v15 = v28;
  v16 = a1 + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
  swift_bridgeObjectRetain_n();
  v17 = *(_QWORD *)(v15 + 72);
  v18 = v29;
  while (1)
  {
    sub_1A55034B8(v16, (uint64_t)v10, type metadata accessor for TaskHistory.Previous);
    sub_1A55034B8((uint64_t)v10, (uint64_t)v7, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() == 1)
      break;
    sub_1A55034FC((uint64_t)v7, type metadata accessor for TaskHistory.Previous);
LABEL_8:
    sub_1A55034FC((uint64_t)v10, type metadata accessor for TaskHistory.Previous);
    v16 += v17;
    if (!--v18)
    {
      a1 = v27;
      swift_bridgeObjectRelease_n();
      v12 = v25;
      goto LABEL_4;
    }
  }
  v19 = *((_DWORD *)v7 + 2);
  swift_release();
  if (v19 != v14)
    goto LABEL_8;
  sub_1A55034FC((uint64_t)v10, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return 0xF000000000000007;
}

uint64_t sub_1A5623E50()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t storeEnumTagSinglePayload for NotifySyncRequestCompletion.ActionID(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A5623EB4 + 4 * byte_1A59AAA70[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A5623ED4 + 4 * byte_1A59AAA75[v4]))();
}

_BYTE *sub_1A5623EB4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A5623ED4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A5623EDC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A5623EE4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A5623EEC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A5623EF4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for NotifySyncRequestCompletion.ActionID()
{
  return &type metadata for NotifySyncRequestCompletion.ActionID;
}

uint64_t sub_1A5623F10@<X0>(uint64_t result@<X0>, unsigned int a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  BOOL v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  BOOL v12;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  __int128 v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  int v47;
  unsigned int v48;
  int v49;

  v6 = result;
  v8 = (a3 & 1) == 0 || a2 == 1;
  v9 = v8;
  if (v8)
  {
    v10 = 0;
    v11 = 0;
    v12 = 1;
LABEL_22:
    *(_QWORD *)a6 = sub_1A5552638((uint64_t)&unk_1E4EF2288);
    *(_BYTE *)(a6 + 8) = 1;
    v38 = *(_QWORD *)(v6 + 24);
    v39 = *(_DWORD *)(v6 + 32);
    v40 = *(_OWORD *)(v6 + 16);
    *(_OWORD *)(a6 + 16) = *(_OWORD *)v6;
    *(_OWORD *)(a6 + 32) = v40;
    *(_DWORD *)(a6 + 48) = v39;
    *(_QWORD *)(a6 + 56) = &type metadata for PurgeMessagesOutsideWindowOfInterest;
    v46 = v38;
    v47 = v39;
    sub_1A550F734();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    result = sub_1A594C6B4();
    *(_QWORD *)(a6 + 104) = v11;
    *(_BYTE *)(a6 + 112) = v9;
    *(_QWORD *)(a6 + 116) = v10;
    *(_BYTE *)(a6 + 124) = v12;
    return result;
  }
  v49 = 1;
  if (a2 < 2)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v48 = a2 - 1;
  v15 = sub_1A54E3414();
  static MessageIdentifier.... infix(_:_:)();
  v11 = v46 | ((unint64_t)HIDWORD(v46) << 32);
  if ((a5 & 1) != 0)
  {
    v10 = 0;
    v12 = 1;
    goto LABEL_22;
  }
  v42 = v46 | ((unint64_t)HIDWORD(v46) << 32);
  v43 = v9;
  MessageIdentifierSet.init(_:)((uint64_t)&v46, (uint64_t)&type metadata for UID, v15, v16);
  v18 = v17;
  v20 = v19;
  v44 = HIDWORD(v19);
  v41 = a4;
  v46 = a4;
  MessageIdentifierSet.init(_:)((uint64_t)&v46, (uint64_t)&type metadata for UID, v15, v21);
  v23 = v22;
  v25 = v24;
  v26 = HIDWORD(v24);
  MessageIdentifierSet.subtracting(_:)(v18, v20 & 0xFFFFFFFFFFLL, v22, v24 & 0xFFFFFFFFFFLL);
  v28 = v27;
  v30 = v29;
  v45 = HIDWORD(v29);
  sub_1A54E3458(v18, v20, v44);
  sub_1A54E3458(v23, v25, v26);
  MessageIdentifierSet.ranges.getter(v28, v30 & 0xFFFFFFFFFFLL);
  v32 = v31;
  v34 = v33;
  v35 = HIDWORD(v33);
  sub_1A54E3458(v28, v30, v45);
  if (!MessageIdentifierSet.RangeView.endIndex.getter(v32, v34 & 0xFFFFFFFFFFLL))
  {
    sub_1A54E3458(v32, v34, v35);
    v10 = 1;
    v12 = 1;
LABEL_21:
    v9 = v43;
    v11 = v42;
    goto LABEL_22;
  }
  result = MessageIdentifierSet.RangeView.endIndex.getter(v32, v34 & 0xFFFFFFFFFFLL);
  v36 = result - 1;
  if (__OFSUB__(result, 1))
    goto LABEL_24;
  result = MessageIdentifierSet.RangeView.endIndex.getter(v32, v34 & 0xFFFFFFFFFFLL);
  if ((v36 & 0x8000000000000000) == 0 && v36 < result)
  {
    MessageIdentifierSet.RangeView.subscript.getter(v36, v32, v34 & 0xFFFFFFFFFFLL);
    sub_1A54E3458(v32, v34, v35);
    v37 = FetchedWindow.init(_:)(v46);
    v12 = static FetchedWindow.__derived_struct_equals(_:_:)(v41, v37);
    if (v12)
      v10 = 0;
    else
      v10 = v37;
    goto LABEL_21;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1A5624218()
{
  uint64_t result;

  result = sub_1A54F8ABC((uint64_t)&unk_1E4E6F8A8);
  qword_1EE7F9270 = result;
  return result;
}

uint64_t sub_1A562423C()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796240);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A59ABDD0;
  *(_QWORD *)(v0 + 32) = &type metadata for FindMissingMessages;
  sub_1A550F734();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594C6B4();
  *(_QWORD *)(v0 + 80) = &type metadata for FetchSearchResultMessages;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594C6B4();
  *(_QWORD *)(v0 + 128) = &type metadata for DetectChangesToMessages;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594C6B4();
  *(_QWORD *)(v0 + 176) = &type metadata for DetectChangesToMessagesInRecent;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594C6B4();
  *(_QWORD *)(v0 + 224) = &type metadata for DetectRemovedMessages;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594C6B4();
  *(_QWORD *)(v0 + 272) = &type metadata for DetectRemovedMessagesInRecent;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594C6B4();
  return v0;
}

uint64_t sub_1A56243E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  char *v16;
  NSObject *v17;
  os_log_type_t v18;
  int v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  os_log_t v44;
  uint64_t v45;
  uint64_t (*v46)(char *, uint64_t);
  char *v47;
  uint64_t v48;
  os_log_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;

  v3 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v48 - v7;
  v9 = sub_1A594A764();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v48 - v14;
  if ((*(_BYTE *)(v1 + 112) & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))(v12, a1, v9, v15);
    sub_1A55034B8(a1, (uint64_t)v5, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v17 = sub_1A594A74C();
    v18 = sub_1A594C030();
    v19 = v18;
    if (os_log_type_enabled(v17, v18))
    {
      v20 = swift_slowAlloc();
      v51 = swift_slowAlloc();
      v55 = v51;
      *(_DWORD *)v20 = 68159235;
      LODWORD(v53) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v20 + 8) = 256;
      v21 = &v5[*(int *)(v3 + 20)];
      LOBYTE(v53) = *v21;
      sub_1A594C3CC();
      *(_WORD *)(v20 + 11) = 2082;
      v50 = v19;
      v52 = v9;
      v22 = *((_QWORD *)v21 + 1);
      v23 = *((_QWORD *)v21 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v53 = sub_1A55791B0(v22, v23, &v55);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 21) = 1040;
      LODWORD(v53) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v20 + 27) = 512;
      LOWORD(v53) = *((_WORD *)v21 + 12);
      sub_1A594C3CC();
      *(_WORD *)(v20 + 31) = 2160;
      v53 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v20 + 41) = 2085;
      v24 = *((_DWORD *)v21 + 10);
      v53 = *((_QWORD *)v21 + 4);
      v54 = v24;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v25 = sub_1A594B4A8();
      v53 = sub_1A55791B0(v25, v26, &v55);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v5, type metadata accessor for MailboxTaskLogger);
      _os_log_impl(&dword_1A4F90000, v17, (os_log_type_t)v50, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task. Not purging any messages.", (uint8_t *)v20, 0x33u);
      v27 = v51;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v27, -1, -1);
      MEMORY[0x1A85B1964](v20, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v52);
    }
    sub_1A55034FC((uint64_t)v5, type metadata accessor for MailboxTaskLogger);

    v46 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
    v47 = v12;
  }
  else
  {
    v29 = *(_QWORD *)(v1 + 104);
    (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))((char *)&v48 - v14, a1, v9, v15);
    sub_1A55034B8(a1, (uint64_t)v8, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v30 = sub_1A594A74C();
    v31 = sub_1A594C030();
    v32 = v31;
    if (os_log_type_enabled(v30, v31))
    {
      v33 = swift_slowAlloc();
      v50 = v32;
      v34 = v33;
      v51 = swift_slowAlloc();
      v55 = v51;
      *(_DWORD *)v34 = 68159491;
      LODWORD(v53) = 2;
      v48 = v29;
      v49 = v30;
      sub_1A594C3CC();
      *(_WORD *)(v34 + 8) = 256;
      v35 = *(int *)(v3 + 20);
      v52 = v9;
      v36 = &v8[v35];
      LOBYTE(v53) = v8[v35];
      sub_1A594C3CC();
      *(_WORD *)(v34 + 11) = 2082;
      v38 = *((_QWORD *)v36 + 1);
      v37 = *((_QWORD *)v36 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v53 = sub_1A55791B0(v38, v37, &v55);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 21) = 1040;
      LODWORD(v53) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v34 + 27) = 512;
      LOWORD(v53) = *((_WORD *)v36 + 12);
      sub_1A594C3CC();
      *(_WORD *)(v34 + 31) = 2160;
      v53 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v34 + 41) = 2085;
      v39 = *((_DWORD *)v36 + 10);
      v53 = *((_QWORD *)v36 + 4);
      v54 = v39;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v40 = sub_1A594B4A8();
      v53 = sub_1A55791B0(v40, v41, &v55);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v8, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v34 + 51) = 2082;
      v53 = v48;
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796E58);
      MessageIdentifierRange.debugDescription.getter();
      v53 = sub_1A55791B0(v42, v43, &v55);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      v44 = v49;
      _os_log_impl(&dword_1A4F90000, v49, (os_log_type_t)v50, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task purging UIDs %{public}s", (uint8_t *)v34, 0x3Du);
      v45 = v51;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v45, -1, -1);
      MEMORY[0x1A85B1964](v34, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v16, v52);
    }
    sub_1A55034FC((uint64_t)v8, type metadata accessor for MailboxTaskLogger);

    v46 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
    v47 = v16;
  }
  return v46(v47, v9);
}

uint64_t sub_1A5624AB8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = sub_1A5624EF0(a1, a2);
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_1A5624AEC()
{
  return 0x73654D6567727550;
}

uint64_t initializeWithCopy for PurgeMessagesOutsideWindowOfInterest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v5 = a2 + 64;
  v6 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 88) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v8(a1 + 64, v5, v7);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 116) = *(_QWORD *)(a2 + 116);
  *(_BYTE *)(a1 + 124) = *(_BYTE *)(a2 + 124);
  return a1;
}

uint64_t assignWithCopy for PurgeMessagesOutsideWindowOfInterest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 64), (uint64_t *)(a2 + 64));
  v4 = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = v4;
  v5 = *(_QWORD *)(a2 + 116);
  *(_BYTE *)(a1 + 124) = *(_BYTE *)(a2 + 124);
  *(_QWORD *)(a1 + 116) = v5;
  return a1;
}

__n128 __swift_memcpy125_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_OWORD *)(a1 + 109) = *(__int128 *)((char *)a2 + 109);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for PurgeMessagesOutsideWindowOfInterest(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  __swift_destroy_boxed_opaque_existential_1(a1 + 64);
  v4 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  v5 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v5;
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 116) = *(_QWORD *)(a2 + 116);
  *(_BYTE *)(a1 + 124) = *(_BYTE *)(a2 + 124);
  return a1;
}

uint64_t getEnumTagSinglePayload for PurgeMessagesOutsideWindowOfInterest(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 125))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PurgeMessagesOutsideWindowOfInterest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 124) = 0;
    *(_DWORD *)(result + 120) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 125) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 125) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PurgeMessagesOutsideWindowOfInterest()
{
  return &type metadata for PurgeMessagesOutsideWindowOfInterest;
}

unint64_t sub_1A5624E44()
{
  unint64_t result;

  result = qword_1EE797C90;
  if (!qword_1EE797C90)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AABDC, &type metadata for PurgeMessagesOutsideWindowOfInterest.ActionID);
    atomic_store(result, (unint64_t *)&qword_1EE797C90);
  }
  return result;
}

unint64_t sub_1A5624E88(uint64_t a1)
{
  unint64_t result;

  result = sub_1A5624EAC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A5624EAC()
{
  unint64_t result;

  result = qword_1EE795D30;
  if (!qword_1EE795D30)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AAB98, &type metadata for PurgeMessagesOutsideWindowOfInterest);
    atomic_store(result, (unint64_t *)&qword_1EE795D30);
  }
  return result;
}

uint64_t sub_1A5624EF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  _BYTE v26[12];
  int v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v5 = type metadata accessor for TaskHistory.Previous(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v26[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v9);
  v11 = &v26[-v10];
  if ((*(_BYTE *)(v2 + 112) & 1) == 0)
  {
    v13 = *(_DWORD *)(v2 + 104);
    v30 = *(_DWORD *)(v2 + 108);
    v14 = sub_1A55B075C(0, a2);
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v27 = v13;
      v28 = v2;
      v29 = v14;
      v16 = 0;
      v33 = v14 + 32;
      v35 = *(_QWORD *)(a1 + 16);
      v34 = a1;
      v31 = v15;
      v32 = v6;
      do
      {
        if (v35)
        {
          v17 = *(_DWORD *)(v33 + 4 * v16);
          v18 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
          swift_bridgeObjectRetain_n();
          v19 = *(_QWORD *)(v6 + 72);
          v20 = v35;
          while (1)
          {
            sub_1A55034B8(v18, (uint64_t)v11, type metadata accessor for TaskHistory.Previous);
            sub_1A55034B8((uint64_t)v11, (uint64_t)v8, type metadata accessor for TaskHistory.Previous);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              v21 = *((_DWORD *)v8 + 2);
              swift_release();
              if (v21 == v17)
              {
                sub_1A55034FC((uint64_t)v11, type metadata accessor for TaskHistory.Previous);
                swift_bridgeObjectRelease();
                v12 = 2;
                swift_bridgeObjectRelease_n();
                return v12;
              }
            }
            else
            {
              sub_1A55034FC((uint64_t)v8, type metadata accessor for TaskHistory.Previous);
            }
            sub_1A55034FC((uint64_t)v11, type metadata accessor for TaskHistory.Previous);
            v18 += v19;
            if (!--v20)
            {
              a1 = v34;
              swift_bridgeObjectRelease_n();
              v15 = v31;
              v6 = v32;
              break;
            }
          }
        }
        ++v16;
      }
      while (v16 != v15);
      swift_bridgeObjectRelease();
      v2 = v28;
      v13 = v27;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v22 = swift_allocObject();
    v23 = *(_QWORD *)(v2 + 24);
    *(_QWORD *)(v22 + 16) = *(_QWORD *)(v2 + 16);
    *(_QWORD *)(v22 + 24) = v23;
    LODWORD(v23) = v30;
    *(_DWORD *)(v22 + 32) = v13;
    *(_DWORD *)(v22 + 36) = v23;
    v24 = *(_BYTE *)(v2 + 124);
    *(_QWORD *)(v22 + 40) = *(_QWORD *)(v2 + 116);
    *(_BYTE *)(v22 + 48) = v24;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return 0;
  }
  return 2;
}

uint64_t sub_1A5625158()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t storeEnumTagSinglePayload for PurgeMessagesOutsideWindowOfInterest.ActionID(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A56251C8 + 4 * byte_1A59AAB65[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A56251FC + 4 * byte_1A59AAB60[v4]))();
}

uint64_t sub_1A56251FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5625204(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A562520CLL);
  return result;
}

uint64_t sub_1A5625218(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5625220);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A5625224(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A562522C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PurgeMessagesOutsideWindowOfInterest.ActionID()
{
  return &type metadata for PurgeMessagesOutsideWindowOfInterest.ActionID;
}

double sub_1A5625248@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  int v16;
  __int128 v17;
  double result;
  char *v19;
  char *v20;
  _OWORD v21[2];
  int v22;
  uint64_t v23;
  char v24;
  ValueMetadata *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;

  v23 = sub_1A54F8ABC((uint64_t)&unk_1E4EF2328);
  v24 = 0;
  if ((a3 & 1) != 0)
  {
    v19 = &v32;
    v20 = &v33;
  }
  else
  {
    if ((a5 & 1) == 0)
    {
      v16 = *(_DWORD *)(a1 + 32);
      v17 = *(_OWORD *)(a1 + 16);
      v21[0] = *(_OWORD *)a1;
      v21[1] = v17;
      v22 = v16;
      v25 = &type metadata for QuickFlagChangesResync;
      sub_1A550F734();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A594C6B4();
      v26 = a2;
      v27 = a4;
      v28 = a6;
      v29 = a7 & 1;
      sub_1A550FFCC((uint64_t)v21, a8);
      sub_1A550FE14((uint64_t)v21);
      return result;
    }
    v19 = &v30;
    v20 = &v31;
  }
  swift_bridgeObjectRelease();
  *(_OWORD *)v20 = *(_OWORD *)a1;
  sub_1A54F81BC((uint64_t)v20);
  *(_QWORD *)v19 = *(_QWORD *)(a1 + 24);
  *((_DWORD *)v19 + 2) = *(_DWORD *)(a1 + 32);
  sub_1A54F81BC((uint64_t)v19);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a8 + 128) = 0;
  result = 0.0;
  *(_OWORD *)(a8 + 96) = 0u;
  *(_OWORD *)(a8 + 112) = 0u;
  *(_OWORD *)(a8 + 64) = 0u;
  *(_OWORD *)(a8 + 80) = 0u;
  *(_OWORD *)(a8 + 32) = 0u;
  *(_OWORD *)(a8 + 48) = 0u;
  *(_OWORD *)a8 = 0u;
  *(_OWORD *)(a8 + 16) = 0u;
  return result;
}

uint64_t sub_1A56253AC()
{
  uint64_t result;

  result = sub_1A54F8ABC((uint64_t)&unk_1E4E6DD28);
  qword_1EE7F96C0 = result;
  return result;
}

uint64_t sub_1A56253D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  os_log_t v27;
  uint64_t v28;
  os_log_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  _QWORD v38[17];
  _QWORD v39[17];
  _BYTE v40[104];
  uint64_t v41;

  v2 = v1;
  v4 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A594A764();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))(v11, a1, v7, v9);
  sub_1A55034B8(a1, (uint64_t)v6, type metadata accessor for MailboxTaskLogger);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  sub_1A550FFCC(v2, (uint64_t)v40);
  sub_1A550FFCC(v2, (uint64_t)v39);
  sub_1A550FFCC(v2, (uint64_t)v38);
  v12 = sub_1A594A74C();
  v13 = sub_1A594C030();
  v14 = v13;
  if (os_log_type_enabled(v12, v13))
  {
    v15 = swift_slowAlloc();
    v33 = v14;
    v16 = v15;
    v32 = swift_slowAlloc();
    v37 = v32;
    *(_DWORD *)v16 = 68160003;
    LODWORD(v35) = 2;
    v30 = v12;
    sub_1A594C3CC();
    *(_WORD *)(v16 + 8) = 256;
    v17 = *(int *)(v4 + 20);
    v34 = v7;
    v18 = &v6[v17];
    LOBYTE(v35) = v6[v17];
    sub_1A594C3CC();
    *(_WORD *)(v16 + 11) = 2082;
    v31 = v8;
    v20 = *((_QWORD *)v18 + 1);
    v19 = *((_QWORD *)v18 + 2);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v35 = sub_1A55791B0(v20, v19, &v37);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 21) = 1040;
    LODWORD(v35) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v16 + 27) = 512;
    LOWORD(v35) = *((_WORD *)v18 + 12);
    sub_1A594C3CC();
    *(_WORD *)(v16 + 31) = 2160;
    v35 = 0x786F626C69616DLL;
    sub_1A594C3CC();
    *(_WORD *)(v16 + 41) = 2085;
    v21 = *((_DWORD *)v18 + 10);
    v35 = *((_QWORD *)v18 + 4);
    v36 = v21;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v22 = sub_1A594B4A8();
    v35 = sub_1A55791B0(v22, v23, &v37);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC((uint64_t)v6, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v16 + 51) = 2048;
    v24 = v41;
    sub_1A550FE14((uint64_t)v40);
    v35 = v24;
    sub_1A594C3CC();
    *(_WORD *)(v16 + 61) = 2048;
    v25 = *(_QWORD *)(v39[15] + 16);
    sub_1A550FE14((uint64_t)v39);
    v35 = v25;
    sub_1A594C3CC();
    *(_WORD *)(v16 + 71) = 2048;
    v26 = v38[14];
    sub_1A550FE14((uint64_t)v38);
    v35 = v26;
    sub_1A594C3CC();
    v27 = v30;
    _os_log_impl(&dword_1A4F90000, v30, (os_log_type_t)v33, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task. highest-mod-seq local: %llu, changes without UID: %ld, server: %llu", (uint8_t *)v16, 0x51u);
    v28 = v32;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v28, -1, -1);
    MEMORY[0x1A85B1964](v16, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v11, v34);
  }
  else
  {
    sub_1A550FE14((uint64_t)v38);
    sub_1A550FE14((uint64_t)v39);
    sub_1A550FE14((uint64_t)v40);
    sub_1A55034FC((uint64_t)v6, type metadata accessor for MailboxTaskLogger);

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
}

uint64_t sub_1A5625820@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  int v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE v43[8];

  v7 = type metadata accessor for TaskHistory.Previous(0);
  v41 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v36 - v11;
  if (v3[13] < v3[14] || *(_QWORD *)(v3[15] + 16))
  {
    v13 = sub_1A562AF64(a2);
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v36[1] = v3;
      v36[2] = v13;
      v37 = a3;
      v15 = 0;
      v39 = v13 + 32;
      v42 = *(_QWORD *)(a1 + 16);
      v40 = a1;
      v38 = v14;
      do
      {
        if (v42)
        {
          v16 = *(_DWORD *)(v39 + 4 * v15);
          v17 = v41;
          v18 = a1 + ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80));
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v19 = *(_QWORD *)(v17 + 72);
          v20 = v42;
          while (1)
          {
            sub_1A55034B8(v18, (uint64_t)v12, type metadata accessor for TaskHistory.Previous);
            sub_1A55034B8((uint64_t)v12, (uint64_t)v9, type metadata accessor for TaskHistory.Previous);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              sub_1A55034FC((uint64_t)v9, type metadata accessor for TaskHistory.Previous);
            }
            else
            {
              v21 = *(_DWORD *)&v9[*(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797DD8) + 48)];
              sub_1A55034FC((uint64_t)v9, type metadata accessor for ClientCommand);
              if (v21 == v16)
              {
                sub_1A55034FC((uint64_t)v12, type metadata accessor for TaskHistory.Previous);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v22 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797AB8);
                return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v37, 1, 1, v22);
              }
            }
            sub_1A55034FC((uint64_t)v12, type metadata accessor for TaskHistory.Previous);
            v18 += v19;
            if (!--v20)
            {
              a1 = v40;
              swift_bridgeObjectRelease();
              v14 = v38;
              break;
            }
          }
        }
        ++v15;
      }
      while (v15 != v14);
      swift_bridgeObjectRelease();
      a3 = v37;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v24 = sub_1A54E3414();
    static MessageIdentifierRange.all.getter();
    MessageIdentifierSet.init(_:)((uint64_t)v43, (uint64_t)&type metadata for UID, v24, v25);
    v27 = v26;
    v29 = v28;
    v30 = HIDWORD(v28);
    ClientCommand.FetchData.init(items:changedSince:)();
    *(_QWORD *)a3 = v27;
    *(_DWORD *)(a3 + 8) = v29;
    *(_BYTE *)(a3 + 12) = v30;
    *(_QWORD *)(a3 + 16) = v31;
    *(_QWORD *)(a3 + 24) = v32;
    *(_BYTE *)(a3 + 32) = v33 & 1;
    type metadata accessor for ClientCommand(0);
    swift_storeEnumTagMultiPayload();
    v34 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797AB8);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(a3, 0, 1, v34);
  }
  else
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797AB8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(a3, 1, 1, v35);
  }
}

void sub_1A5625B54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[5];
  uint64_t v14;

  v2 = *(_QWORD *)(v1 + 104);
  v3 = *(_QWORD *)(v1 + 112);
  if ((v3 | v2) < 0)
  {
    __break(1u);
  }
  else if (v3 != v2)
  {
    v5 = *(_QWORD *)(v1 + 24);
    v6 = *(_DWORD *)(v1 + 32);
    MEMORY[0x1E0C80A78](a1);
    v13[2] = v1;
    v13[3] = v7;
    if (*(_BYTE *)(v8 + 168) == 1)
    {
      v10 = *(_QWORD *)(a1 + 152);
      v9 = *(_QWORD *)(a1 + 160);
      v14 = *(_QWORD *)(a1 + 144);
      v11 = v14;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A551C6E4((uint64_t)&v14, v5, v6, 0, (void (*)(uint64_t))sub_1A5626514, v13);
      sub_1A54E8FCC(v11, v10, v9, 1);
      v12 = v14;
      *(_QWORD *)(a1 + 152) = 0;
      *(_QWORD *)(a1 + 160) = 0;
      *(_QWORD *)(a1 + 144) = v12;
      *(_BYTE *)(a1 + 168) = 1;
    }
  }
}

uint64_t sub_1A5625C40(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_BYTE *, uint64_t, uint64_t);
  NSObject *v19;
  os_log_type_t v20;
  int v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v34[12];
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;

  v38 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v38);
  v7 = &v34[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_1A594A764();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = &v34[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v40 = a2;
  v12 = *(_QWORD *)(a2 + 120);
  v13 = a1[23];
  v14 = a1[24];
  __swift_mutable_project_boxed_opaque_existential_1_0((uint64_t)(a1 + 20), v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v12, v13, v14);
  v15 = a1[23];
  v16 = a1[24];
  v41 = a1 + 20;
  __swift_project_boxed_opaque_existential_1_0(a1 + 20, v15);
  (*(void (**)(uint64_t, uint64_t))(v16 + 40))(v15, v16);
  v37 = *(_QWORD *)(v17 + 16);
  swift_release();
  swift_release();
  swift_release();
  v39 = v9;
  v18 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16);
  v42 = v8;
  v18(v11, a3, v8);
  sub_1A55034B8(a3, (uint64_t)v7, type metadata accessor for MailboxTaskLogger);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v19 = sub_1A594A74C();
  v20 = sub_1A594C030();
  v21 = v20;
  if (os_log_type_enabled(v19, v20))
  {
    v22 = swift_slowAlloc();
    v36 = swift_slowAlloc();
    v45 = v36;
    *(_DWORD *)v22 = 68159491;
    LODWORD(v43) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v22 + 8) = 256;
    v23 = &v7[*(int *)(v38 + 20)];
    LOBYTE(v43) = *v23;
    sub_1A594C3CC();
    *(_WORD *)(v22 + 11) = 2082;
    v35 = v21;
    v38 = a3;
    v24 = *((_QWORD *)v23 + 1);
    v25 = *((_QWORD *)v23 + 2);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v43 = sub_1A55791B0(v24, v25, &v45);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 21) = 1040;
    LODWORD(v43) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v22 + 27) = 512;
    LOWORD(v43) = *((_WORD *)v23 + 12);
    sub_1A594C3CC();
    *(_WORD *)(v22 + 31) = 2160;
    v43 = 0x786F626C69616DLL;
    sub_1A594C3CC();
    *(_WORD *)(v22 + 41) = 2085;
    v26 = *((_DWORD *)v23 + 10);
    v43 = *((_QWORD *)v23 + 4);
    v44 = v26;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v27 = sub_1A594B4A8();
    v43 = sub_1A55791B0(v27, v28, &v45);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC((uint64_t)v7, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v22 + 51) = 2048;
    v43 = v37;
    a3 = v38;
    sub_1A594C3CC();
    _os_log_impl(&dword_1A4F90000, v19, (os_log_type_t)v35, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Number of changes to-be-sent to the persistence: %ld.", (uint8_t *)v22, 0x3Du);
    v29 = v36;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v29, -1, -1);
    MEMORY[0x1A85B1964](v22, -1, -1);
  }
  else
  {
    sub_1A55034FC((uint64_t)v7, type metadata accessor for MailboxTaskLogger);
  }

  (*(void (**)(_BYTE *, uint64_t))(v39 + 8))(v11, v42);
  v30 = *(_QWORD *)(v40 + 112);
  v32 = a1[23];
  v31 = a1[24];
  __swift_mutable_project_boxed_opaque_existential_1_0((uint64_t)v41, v32);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 64))(v30, a3, v32, v31);
}

void sub_1A56260AC(_QWORD *a1@<X8>)
{
  *a1 = 0xF000000000000007;
}

unint64_t sub_1A56260BC()
{
  return 0xD000000000000016;
}

uint64_t destroy for QuickFlagChangesResync(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 64);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for QuickFlagChangesResync(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v5 = a2 + 64;
  v6 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 88) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v8(a1 + 64, v5, v7);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for QuickFlagChangesResync(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 64), (uint64_t *)(a2 + 64));
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  return a1;
}

__n128 __swift_memcpy129_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for QuickFlagChangesResync(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  __swift_destroy_boxed_opaque_existential_1(a1 + 64);
  v4 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  return a1;
}

uint64_t getEnumTagSinglePayload for QuickFlagChangesResync(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 129))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for QuickFlagChangesResync(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 128) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 129) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 129) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for QuickFlagChangesResync()
{
  return &type metadata for QuickFlagChangesResync;
}

unint64_t sub_1A5626468()
{
  unint64_t result;

  result = qword_1EE797AB0;
  if (!qword_1EE797AB0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AACBC, &type metadata for QuickFlagChangesResync.CommandID);
    atomic_store(result, (unint64_t *)&qword_1EE797AB0);
  }
  return result;
}

unint64_t sub_1A56264AC(uint64_t a1)
{
  unint64_t result;

  result = sub_1A56264D0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A56264D0()
{
  unint64_t result;

  result = qword_1EE797AC0;
  if (!qword_1EE797AC0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AAC78, &type metadata for QuickFlagChangesResync);
    atomic_store(result, (unint64_t *)&qword_1EE797AC0);
  }
  return result;
}

uint64_t sub_1A5626514(_QWORD *a1)
{
  uint64_t v1;

  return sub_1A5625C40(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t storeEnumTagSinglePayload for QuickFlagChangesResync.CommandID(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A562655C + 4 * byte_1A59AAC50[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A562657C + 4 * byte_1A59AAC55[v4]))();
}

_BYTE *sub_1A562655C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A562657C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A5626584(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A562658C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A5626594(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A562659C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for QuickFlagChangesResync.CommandID()
{
  return &type metadata for QuickFlagChangesResync.CommandID;
}

void sub_1A56265B8()
{
  qword_1EE7F9248 = MEMORY[0x1E0DEE9E8];
}

uint64_t destroy for ReSyncMailbox(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1(a1 + 64);
}

uint64_t initializeWithCopy for ReSyncMailbox(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  __int128 v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v5 = a2 + 64;
  v6 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 88) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v8(a1 + 64, v5, v7);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 108) = *(_BYTE *)(a2 + 108);
  v9 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v9;
  *(_WORD *)(a1 + 144) = *(_WORD *)(a2 + 144);
  return a1;
}

uint64_t assignWithCopy for ReSyncMailbox(uint64_t a1, uint64_t a2)
{
  int v4;
  __int128 v5;
  __int128 v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 64), (uint64_t *)(a2 + 64));
  v4 = *(_DWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 108) = *(_BYTE *)(a2 + 108);
  *(_DWORD *)(a1 + 104) = v4;
  v5 = *(_OWORD *)(a2 + 112);
  v6 = *(_OWORD *)(a2 + 128);
  *(_WORD *)(a1 + 144) = *(_WORD *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v5;
  *(_OWORD *)(a1 + 128) = v6;
  return a1;
}

__n128 __swift_memcpy146_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  result = *(__n128 *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 128);
  *(_WORD *)(a1 + 144) = *(_WORD *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for ReSyncMailbox(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  __swift_destroy_boxed_opaque_existential_1(a1 + 64);
  v4 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 108) = *(_BYTE *)(a2 + 108);
  v5 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v5;
  *(_WORD *)(a1 + 144) = *(_WORD *)(a2 + 144);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReSyncMailbox(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 146))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReSyncMailbox(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 144) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 146) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 146) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReSyncMailbox()
{
  return &type metadata for ReSyncMailbox;
}

uint64_t sub_1A5626948(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  unint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  _BYTE v34[104];
  int v35;
  char v36;

  v2 = v1;
  v4 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A594A764();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))(v11, a1, v7, v9);
  sub_1A55034B8(a1, (uint64_t)v6, type metadata accessor for MailboxTaskLogger);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  sub_1A551070C(v2, (uint64_t)v34);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v12 = sub_1A594A74C();
  v13 = sub_1A594C030();
  v14 = v13;
  if (os_log_type_enabled(v12, v13))
  {
    v15 = swift_slowAlloc();
    v29 = v14;
    v16 = v15;
    v28 = swift_slowAlloc();
    v33 = v28;
    *(_DWORD *)v16 = 68159491;
    LODWORD(v31) = 2;
    v30 = v7;
    sub_1A594C3CC();
    *(_WORD *)(v16 + 8) = 256;
    v17 = &v6[*(int *)(v4 + 20)];
    LOBYTE(v31) = *v17;
    sub_1A594C3CC();
    *(_WORD *)(v16 + 11) = 2082;
    v27 = v8;
    v19 = *((_QWORD *)v17 + 1);
    v18 = *((_QWORD *)v17 + 2);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v31 = sub_1A55791B0(v19, v18, &v33);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 21) = 1040;
    LODWORD(v31) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v16 + 27) = 512;
    LOWORD(v31) = *((_WORD *)v17 + 12);
    sub_1A594C3CC();
    *(_WORD *)(v16 + 31) = 2160;
    v31 = 0x786F626C69616DLL;
    sub_1A594C3CC();
    *(_WORD *)(v16 + 41) = 2085;
    v20 = *((_DWORD *)v17 + 10);
    v31 = *((_QWORD *)v17 + 4);
    v32 = v20;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v21 = sub_1A594B4A8();
    v31 = sub_1A55791B0(v21, v22, &v33);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC((uint64_t)v6, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v16 + 51) = 1024;
    if (v36)
      v23 = 0;
    else
      v23 = v35;
    sub_1A55107D4((uint64_t)v34);
    LODWORD(v31) = v23;
    sub_1A594C3CC();
    _os_log_impl(&dword_1A4F90000, v12, (os_log_type_t)v29, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task. Local UID validity: 0x%x", (uint8_t *)v16, 0x39u);
    v24 = v28;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v24, -1, -1);
    MEMORY[0x1A85B1964](v16, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v11, v30);
  }
  else
  {
    sub_1A55107D4((uint64_t)v34);
    sub_1A55034FC((uint64_t)v6, type metadata accessor for MailboxTaskLogger);

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
}

void sub_1A5626D58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  NSObject *v17;
  os_log_type_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  unint64_t v28;
  int v29;
  os_log_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  os_log_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  int v41;
  char v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  char v46;

  v4 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A594A764();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v2 + 145) & 1) == 0)
  {
    v11 = *(_BYTE *)(v2 + 144);
    v12 = *(_QWORD *)(v2 + 136);
    v13 = *(_DWORD *)(v2 + 128);
    v15 = *(_QWORD *)(v2 + 112);
    v14 = *(_QWORD *)(v2 + 120);
    v41 = v15;
    v42 = BYTE4(v15) & 1;
    v43 = v14;
    v44 = v13 & 1;
    v45 = v12;
    v46 = v11 & 1;
    sub_1A551CE14(*(_QWORD *)(v2 + 24), *(_DWORD *)(v2 + 32), (uint64_t)&v41);
    if ((*(_BYTE *)(v2 + 108) & 1) == 0)
    {
      v16 = *(_DWORD *)(v2 + 104);
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
      sub_1A55034B8(a2, (uint64_t)v6, type metadata accessor for MailboxTaskLogger);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v17 = sub_1A594A74C();
      v18 = sub_1A594C018();
      v19 = v18;
      if (os_log_type_enabled(v17, v18))
      {
        v20 = swift_slowAlloc();
        v37 = v19;
        v21 = v20;
        v36 = swift_slowAlloc();
        v40 = v36;
        *(_DWORD *)v21 = 68159747;
        LODWORD(v38) = 2;
        v34 = v16;
        sub_1A594C3CC();
        *(_WORD *)(v21 + 8) = 256;
        v22 = *(int *)(v4 + 20);
        v35 = v17;
        v23 = &v6[v22];
        LOBYTE(v38) = v6[v22];
        sub_1A594C3CC();
        *(_WORD *)(v21 + 11) = 2082;
        v33 = v15;
        v25 = *((_QWORD *)v23 + 1);
        v24 = *((_QWORD *)v23 + 2);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v38 = sub_1A55791B0(v25, v24, &v40);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v21 + 21) = 1040;
        LODWORD(v38) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v21 + 27) = 512;
        LOWORD(v38) = *((_WORD *)v23 + 12);
        sub_1A594C3CC();
        *(_WORD *)(v21 + 31) = 2160;
        v38 = 0x786F626C69616DLL;
        sub_1A594C3CC();
        *(_WORD *)(v21 + 41) = 2085;
        v26 = *((_DWORD *)v23 + 10);
        v38 = *((_QWORD *)v23 + 4);
        v39 = v26;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v27 = sub_1A594B4A8();
        v38 = sub_1A55791B0(v27, v28, &v40);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55034FC((uint64_t)v6, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v21 + 51) = 1024;
        LODWORD(v38) = v34;
        sub_1A594C3CC();
        *(_WORD *)(v21 + 57) = 1024;
        if ((v33 & 0x100000000) != 0)
          v29 = 0;
        else
          v29 = v33;
        LODWORD(v38) = v29;
        sub_1A594C3CC();
        v30 = v35;
        _os_log_impl(&dword_1A4F90000, v35, (os_log_type_t)v37, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Did delete all existing local messages due to validity change: 0x%x → 0x%x", (uint8_t *)v21, 0x3Fu);
        v31 = v36;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v31, -1, -1);
        MEMORY[0x1A85B1964](v21, -1, -1);

      }
      else
      {
        sub_1A55034FC((uint64_t)v6, type metadata accessor for MailboxTaskLogger);

      }
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
  }
}

unint64_t sub_1A5627198@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X4>, unint64_t *a4@<X8>)
{
  unint64_t result;

  result = sub_1A5627298(a1, a2, a3);
  *a4 = result;
  return result;
}

uint64_t sub_1A56271D0()
{
  return 0x636E79732D6552;
}

unint64_t sub_1A56271EC()
{
  unint64_t result;

  result = qword_1EE7972D8;
  if (!qword_1EE7972D8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AAD9C, &type metadata for ReSyncMailbox.ActionID);
    atomic_store(result, (unint64_t *)&qword_1EE7972D8);
  }
  return result;
}

unint64_t sub_1A5627230(uint64_t a1)
{
  unint64_t result;

  result = sub_1A5627254();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A5627254()
{
  unint64_t result;

  result = qword_1EE7972E0;
  if (!qword_1EE7972E0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AAD58, &type metadata for ReSyncMailbox);
    atomic_store(result, (unint64_t *)&qword_1EE7972E0);
  }
  return result;
}

unint64_t sub_1A5627298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unsigned __int8 v15;
  char v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  char v46;

  v7 = type metadata accessor for TaskHistory.Previous(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v37 - v12;
  v14 = *(unsigned int *)(a3 + 16);
  v15 = *(_BYTE *)(a3 + 20);
  v16 = *(_BYTE *)(v3 + 108);
  if ((v15 & 1) != 0)
  {
    if ((*(_BYTE *)(v3 + 108) & 1) != 0)
      return 0xF000000000000007;
  }
  else
  {
    if ((_DWORD)v14 != *(_DWORD *)(v3 + 104))
      v16 = 1;
    if ((v16 & 1) == 0)
      return 0xF000000000000007;
  }
  v17 = *(_QWORD *)(a3 + 24);
  v18 = *(_BYTE *)(a3 + 32);
  LOBYTE(v44) = *(_BYTE *)(a3 + 20);
  MailboxMetadata.init(validity:fetchedWindow:highestModificationSequenceValue:)(v14 | ((unint64_t)v15 << 32), 0, 1, v17, v18, (uint64_t)&v44);
  if (*(_BYTE *)(v3 + 145) == 1)
  {
    v19 = v46;
    v20 = *((_QWORD *)&v45 + 1);
    v21 = v45;
    v22 = *((_QWORD *)&v44 + 1);
    v23 = 0x100000000;
    if (!BYTE4(v44))
      v23 = 0;
    *(_QWORD *)(v3 + 112) = v23 | v44;
    *(_QWORD *)(v3 + 120) = v22;
    *(_QWORD *)(v3 + 128) = v21;
    *(_QWORD *)(v3 + 136) = v20;
    *(_BYTE *)(v3 + 144) = v19;
    *(_BYTE *)(v3 + 145) = 0;
  }
  v24 = sub_1A55B00F8(a2);
  v25 = *(_QWORD *)(v24 + 16);
  if (v25)
  {
    v26 = 0;
    v37 = v24;
    v41 = v24 + 32;
    v43 = *(_QWORD *)(a1 + 16);
    v39 = v8;
    v40 = v3;
    v42 = a1;
    v38 = v25;
    do
    {
      if (v43)
      {
        v27 = *(_DWORD *)(v41 + 4 * v26);
        v28 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
        swift_bridgeObjectRetain_n();
        v29 = *(_QWORD *)(v8 + 72);
        v30 = v43;
        while (1)
        {
          sub_1A55034B8(v28, (uint64_t)v13, type metadata accessor for TaskHistory.Previous);
          sub_1A55034B8((uint64_t)v13, (uint64_t)v10, type metadata accessor for TaskHistory.Previous);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v31 = *((_DWORD *)v10 + 2);
            swift_release();
            if (v31 == v27)
            {
              sub_1A55034FC((uint64_t)v13, type metadata accessor for TaskHistory.Previous);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              return 0xF000000000000007;
            }
          }
          else
          {
            sub_1A55034FC((uint64_t)v10, type metadata accessor for TaskHistory.Previous);
          }
          sub_1A55034FC((uint64_t)v13, type metadata accessor for TaskHistory.Previous);
          v28 += v29;
          if (!--v30)
          {
            a1 = v42;
            swift_bridgeObjectRelease_n();
            v8 = v39;
            v3 = v40;
            v25 = v38;
            break;
          }
        }
      }
      ++v26;
    }
    while (v26 != v25);
  }
  swift_bridgeObjectRelease();
  v33 = swift_allocObject();
  v34 = *(_QWORD *)(v3 + 8);
  *(_QWORD *)(v33 + 16) = *(_QWORD *)v3;
  *(_QWORD *)(v33 + 24) = v34;
  v35 = v45;
  *(_OWORD *)(v33 + 32) = v44;
  *(_OWORD *)(v33 + 48) = v35;
  *(_BYTE *)(v33 + 64) = v46;
  v32 = v33 | 0x1000000000000000;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v32;
}

uint64_t sub_1A5627550()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t storeEnumTagSinglePayload for ReSyncMailbox.ActionID(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A56275B4 + 4 * byte_1A59AAD30[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A56275D4 + 4 * byte_1A59AAD35[v4]))();
}

_BYTE *sub_1A56275B4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A56275D4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A56275DC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A56275E4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A56275EC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A56275F4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ReSyncMailbox.ActionID()
{
  return &type metadata for ReSyncMailbox.ActionID;
}

ValueMetadata *type metadata accessor for RenameMailboxes()
{
  return &type metadata for RenameMailboxes;
}

uint64_t sub_1A5627620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A5627F20(a1, a2, a3, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_1A54F4FAC);
}

uint64_t sub_1A562763C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A5628228(a1, a2, a3, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_1A54F4FE4);
}

uint64_t sub_1A5627658(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A5628228(a1, a2, a3, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_1A54F5000);
}

uint64_t sub_1A5627674(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(int *);
  uint64_t v19;
  int v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v18 = (uint64_t (*)(int *))result;
  v17 = *(_QWORD *)(a3 + 16);
  if (v17)
  {
    v3 = 0;
    v4 = (_QWORD *)(a3 + 64);
    v5 = MEMORY[0x1E0DEE9D8];
    v16 = a3;
    while (v3 < *(_QWORD *)(a3 + 16))
    {
      v6 = *((_DWORD *)v4 - 8);
      v7 = *(v4 - 3);
      v8 = *(v4 - 2);
      v10 = *(v4 - 1);
      v9 = *v4;
      v20 = v6;
      v21 = v7;
      v22 = v8;
      v23 = v10;
      v24 = v9;
      sub_1A55CA998(v7, v8);
      v11 = v18(&v20);
      if (v19)
      {
        sub_1A55CAA00(v7, v8);
        swift_release();
        goto LABEL_16;
      }
      if ((v11 & 1) != 0)
      {
        result = swift_isUniquelyReferenced_nonNull_native();
        v25 = v5;
        if ((result & 1) == 0)
        {
          result = sub_1A54F501C(0, *(_QWORD *)(v5 + 16) + 1, 1);
          v5 = v25;
        }
        v13 = *(_QWORD *)(v5 + 16);
        v12 = *(_QWORD *)(v5 + 24);
        v14 = v13 + 1;
        if (v13 >= v12 >> 1)
        {
          result = sub_1A54F501C(v12 > 1, v13 + 1, 1);
          v14 = v13 + 1;
          v5 = v25;
        }
        *(_QWORD *)(v5 + 16) = v14;
        v15 = v5 + 40 * v13;
        *(_DWORD *)(v15 + 32) = v6;
        *(_QWORD *)(v15 + 40) = v7;
        *(_QWORD *)(v15 + 48) = v8;
        *(_QWORD *)(v15 + 56) = v10;
        *(_QWORD *)(v15 + 64) = v9;
      }
      else
      {
        result = sub_1A55CAA00(v7, v8);
      }
      ++v3;
      v4 += 5;
      a3 = v16;
      if (v17 == v3)
        goto LABEL_16;
    }
    __break(1u);
  }
  else
  {
    v5 = MEMORY[0x1E0DEE9D8];
LABEL_16:
    swift_bridgeObjectRelease();
    return v5;
  }
  return result;
}

uint64_t sub_1A5627828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A5627F20(a1, a2, a3, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_1A54F5134);
}

uint64_t sub_1A5627844(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(int *);
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t (*v14)(int *);
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;

  v4 = a3;
  v16 = *(_QWORD *)(a3 + 16);
  if (v16)
  {
    v5 = (uint64_t (*)(int *))result;
    v6 = 0;
    v7 = (_QWORD *)(a3 + 40);
    v8 = MEMORY[0x1E0DEE9D8];
    v14 = (uint64_t (*)(int *))result;
    while (v6 < *(_QWORD *)(v4 + 16))
    {
      v12 = *((_DWORD *)v7 - 2);
      v13 = *v7;
      v17 = v12;
      v18 = v13;
      result = v5(&v17);
      if (v3)
      {
        swift_release();
        goto LABEL_14;
      }
      if ((result & 1) != 0)
      {
        result = swift_isUniquelyReferenced_nonNull_native();
        v19 = v8;
        if ((result & 1) == 0)
        {
          result = sub_1A54F5150(0, *(_QWORD *)(v8 + 16) + 1, 1);
          v8 = v19;
        }
        v10 = *(_QWORD *)(v8 + 16);
        v9 = *(_QWORD *)(v8 + 24);
        if (v10 >= v9 >> 1)
        {
          result = sub_1A54F5150(v9 > 1, v10 + 1, 1);
          v8 = v19;
        }
        *(_QWORD *)(v8 + 16) = v10 + 1;
        v11 = v8 + 16 * v10;
        *(_DWORD *)(v11 + 32) = v12;
        *(_QWORD *)(v11 + 40) = v13;
        v4 = a3;
        v5 = v14;
      }
      ++v6;
      v7 += 2;
      if (v16 == v6)
        goto LABEL_14;
    }
    __break(1u);
  }
  else
  {
    v8 = MEMORY[0x1E0DEE9D8];
LABEL_14:
    swift_bridgeObjectRelease();
    return v8;
  }
  return result;
}

uint64_t sub_1A56279A4(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(int *);
  unint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int v12;
  char v13;
  uint64_t (*v14)(int *);
  uint64_t v16;
  int v17;
  char v18;
  uint64_t v19;

  v4 = a3;
  v16 = *(_QWORD *)(a3 + 16);
  if (v16)
  {
    v5 = (uint64_t (*)(int *))result;
    v6 = 0;
    v7 = (_BYTE *)(a3 + 36);
    v8 = MEMORY[0x1E0DEE9D8];
    v14 = (uint64_t (*)(int *))result;
    while (v6 < *(_QWORD *)(v4 + 16))
    {
      v12 = *((_DWORD *)v7 - 1);
      v13 = *v7;
      v17 = v12;
      v18 = v13;
      result = v5(&v17);
      if (v3)
      {
        swift_release();
        goto LABEL_14;
      }
      if ((result & 1) != 0)
      {
        result = swift_isUniquelyReferenced_nonNull_native();
        v19 = v8;
        if ((result & 1) == 0)
        {
          result = sub_1A54F5188(0, *(_QWORD *)(v8 + 16) + 1, 1);
          v8 = v19;
        }
        v10 = *(_QWORD *)(v8 + 16);
        v9 = *(_QWORD *)(v8 + 24);
        if (v10 >= v9 >> 1)
        {
          result = sub_1A54F5188(v9 > 1, v10 + 1, 1);
          v8 = v19;
        }
        *(_QWORD *)(v8 + 16) = v10 + 1;
        v11 = v8 + 8 * v10;
        *(_DWORD *)(v11 + 32) = v12;
        *(_BYTE *)(v11 + 36) = v13;
        v4 = a3;
        v5 = v14;
      }
      ++v6;
      v7 += 8;
      if (v16 == v6)
        goto LABEL_14;
    }
    __break(1u);
  }
  else
  {
    v8 = MEMORY[0x1E0DEE9D8];
LABEL_14:
    swift_bridgeObjectRelease();
    return v8;
  }
  return result;
}

uint64_t sub_1A5627B04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A5627F20(a1, a2, a3, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_1A54F51DC);
}

uint64_t sub_1A5627B20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A5628228(a1, a2, a3, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_1A54F51F8);
}

uint64_t sub_1A5627B3C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t *v6;
  uint64_t v7;
  int v8;
  unint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t (*v18)(int *);
  int v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;

  v4 = a3;
  v18 = (uint64_t (*)(int *))result;
  v17 = *(_QWORD *)(a3 + 16);
  if (v17)
  {
    v5 = 0;
    v6 = (unint64_t *)(a3 + 48);
    v7 = MEMORY[0x1E0DEE9D8];
    while (v5 < *(_QWORD *)(v4 + 16))
    {
      v8 = *((_DWORD *)v6 - 4);
      v10 = *(v6 - 1);
      v9 = *v6;
      v19 = v8;
      v20 = v10;
      v21 = v9;
      sub_1A55B0AF0(v10, v9);
      v11 = v18(&v19);
      if (v3)
      {
        sub_1A55B0B08(v10, v9);
        swift_release();
        goto LABEL_15;
      }
      if ((v11 & 1) != 0)
      {
        result = swift_isUniquelyReferenced_nonNull_native();
        v22 = v7;
        if ((result & 1) == 0)
        {
          result = sub_1A54F5214(0, *(_QWORD *)(v7 + 16) + 1, 1);
          v7 = v22;
        }
        v13 = *(_QWORD *)(v7 + 16);
        v12 = *(_QWORD *)(v7 + 24);
        v14 = v13 + 1;
        if (v13 >= v12 >> 1)
        {
          result = sub_1A54F5214(v12 > 1, v13 + 1, 1);
          v14 = v13 + 1;
          v7 = v22;
        }
        *(_QWORD *)(v7 + 16) = v14;
        v15 = v7 + 24 * v13;
        *(_DWORD *)(v15 + 32) = v8;
        *(_QWORD *)(v15 + 40) = v10;
        *(_QWORD *)(v15 + 48) = v9;
        v4 = a3;
      }
      else
      {
        result = sub_1A55B0B08(v10, v9);
      }
      ++v5;
      v6 += 3;
      if (v17 == v5)
        goto LABEL_15;
    }
    __break(1u);
  }
  else
  {
    v7 = MEMORY[0x1E0DEE9D8];
LABEL_15:
    swift_bridgeObjectRelease();
    return v7;
  }
  return result;
}

uint64_t sub_1A5627CC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A5627D6C(a1, a2, a3, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_1A54F5230);
}

uint64_t sub_1A5627CE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A5627F20(a1, a2, a3, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_1A54F524C);
}

uint64_t sub_1A5627CFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A5628228(a1, a2, a3, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_1A54F5268);
}

uint64_t sub_1A5627D18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A5627D6C(a1, a2, a3, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_1A54F5284);
}

uint64_t sub_1A5627D34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A5628228(a1, a2, a3, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_1A54F52A0);
}

uint64_t sub_1A5627D50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A5627D6C(a1, a2, a3, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_1A54F52D8);
}

uint64_t sub_1A5627D6C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(BOOL, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  char v15;
  uint64_t v18;
  uint64_t (*v19)(int *);
  int v20;
  uint64_t v21;
  char v22;
  uint64_t v23;

  v5 = a3;
  v19 = (uint64_t (*)(int *))result;
  v18 = *(_QWORD *)(a3 + 16);
  if (v18)
  {
    v6 = 0;
    v7 = (_BYTE *)(a3 + 48);
    v8 = MEMORY[0x1E0DEE9D8];
    while (v6 < *(_QWORD *)(v5 + 16))
    {
      v13 = *((_DWORD *)v7 - 4);
      v14 = *((_QWORD *)v7 - 1);
      v15 = *v7;
      v20 = v13;
      v21 = v14;
      v22 = v15;
      result = v19(&v20);
      if (v4)
      {
        swift_release();
        goto LABEL_14;
      }
      if ((result & 1) != 0)
      {
        result = swift_isUniquelyReferenced_nonNull_native();
        v23 = v8;
        if ((result & 1) == 0)
        {
          result = a4(0, *(_QWORD *)(v8 + 16) + 1, 1);
          v8 = v23;
        }
        v10 = *(_QWORD *)(v8 + 16);
        v9 = *(_QWORD *)(v8 + 24);
        v11 = v10 + 1;
        if (v10 >= v9 >> 1)
        {
          result = a4(v9 > 1, v10 + 1, 1);
          v11 = v10 + 1;
          v8 = v23;
        }
        *(_QWORD *)(v8 + 16) = v11;
        v12 = v8 + 24 * v10;
        *(_DWORD *)(v12 + 32) = v13;
        *(_QWORD *)(v12 + 40) = v14;
        *(_BYTE *)(v12 + 48) = v15;
        v5 = a3;
      }
      ++v6;
      v7 += 24;
      if (v18 == v6)
        goto LABEL_14;
    }
    __break(1u);
  }
  else
  {
    v8 = MEMORY[0x1E0DEE9D8];
LABEL_14:
    swift_bridgeObjectRelease();
    return v8;
  }
  return result;
}

uint64_t sub_1A5627EE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A5628228(a1, a2, a3, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_1A54F52F4);
}

uint64_t sub_1A5627F04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A5627F20(a1, a2, a3, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_1A54F5310);
}

uint64_t sub_1A5627F20(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(BOOL, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(int *);
  unint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int v13;
  char v14;
  uint64_t (*v16)(int *);
  uint64_t v18;
  int v19;
  char v20;
  uint64_t v21;

  v5 = a3;
  v18 = *(_QWORD *)(a3 + 16);
  if (v18)
  {
    v6 = (uint64_t (*)(int *))result;
    v7 = 0;
    v8 = (_BYTE *)(a3 + 36);
    v9 = MEMORY[0x1E0DEE9D8];
    v16 = (uint64_t (*)(int *))result;
    while (v7 < *(_QWORD *)(v5 + 16))
    {
      v13 = *((_DWORD *)v8 - 1);
      v14 = *v8;
      v19 = v13;
      v20 = v14;
      result = v6(&v19);
      if (v4)
      {
        swift_release();
        goto LABEL_14;
      }
      if ((result & 1) != 0)
      {
        result = swift_isUniquelyReferenced_nonNull_native();
        v21 = v9;
        if ((result & 1) == 0)
        {
          result = a4(0, *(_QWORD *)(v9 + 16) + 1, 1);
          v9 = v21;
        }
        v11 = *(_QWORD *)(v9 + 16);
        v10 = *(_QWORD *)(v9 + 24);
        if (v11 >= v10 >> 1)
        {
          result = a4(v10 > 1, v11 + 1, 1);
          v9 = v21;
        }
        *(_QWORD *)(v9 + 16) = v11 + 1;
        v12 = v9 + 8 * v11;
        *(_DWORD *)(v12 + 32) = v13;
        *(_BYTE *)(v12 + 36) = v14;
        v5 = a3;
        v6 = v16;
      }
      ++v7;
      v8 += 8;
      if (v18 == v7)
        goto LABEL_14;
    }
    __break(1u);
  }
  else
  {
    v9 = MEMORY[0x1E0DEE9D8];
LABEL_14:
    swift_bridgeObjectRelease();
    return v9;
  }
  return result;
}

uint64_t sub_1A562808C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A5628228(a1, a2, a3, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_1A54F532C);
}

uint64_t sub_1A56280A8(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  char v14;
  uint64_t v16;
  uint64_t (*v17)(_DWORD *);
  _DWORD v18[2];
  char v19;
  uint64_t v20;

  v4 = a3;
  v17 = (uint64_t (*)(_DWORD *))result;
  v16 = *(_QWORD *)(a3 + 16);
  if (v16)
  {
    v5 = 0;
    v6 = (_BYTE *)(a3 + 40);
    v7 = MEMORY[0x1E0DEE9D8];
    while (v5 < *(_QWORD *)(v4 + 16))
    {
      v12 = *((_DWORD *)v6 - 2);
      v13 = *((_DWORD *)v6 - 1);
      v14 = *v6;
      v18[0] = v12;
      v18[1] = v13;
      v19 = v14;
      result = v17(v18);
      if (v3)
      {
        swift_release();
        goto LABEL_14;
      }
      if ((result & 1) != 0)
      {
        result = swift_isUniquelyReferenced_nonNull_native();
        v20 = v7;
        if ((result & 1) == 0)
        {
          result = sub_1A54F5348(0, *(_QWORD *)(v7 + 16) + 1, 1);
          v7 = v20;
        }
        v9 = *(_QWORD *)(v7 + 16);
        v8 = *(_QWORD *)(v7 + 24);
        v10 = v9 + 1;
        if (v9 >= v8 >> 1)
        {
          result = sub_1A54F5348(v8 > 1, v9 + 1, 1);
          v10 = v9 + 1;
          v7 = v20;
        }
        *(_QWORD *)(v7 + 16) = v10;
        v11 = v7 + 12 * v9;
        *(_DWORD *)(v11 + 32) = v12;
        *(_DWORD *)(v11 + 36) = v13;
        *(_BYTE *)(v11 + 40) = v14;
        v4 = a3;
      }
      ++v5;
      v6 += 12;
      if (v16 == v5)
        goto LABEL_14;
    }
    __break(1u);
  }
  else
  {
    v7 = MEMORY[0x1E0DEE9D8];
LABEL_14:
    swift_bridgeObjectRelease();
    return v7;
  }
  return result;
}

uint64_t sub_1A562820C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A5628228(a1, a2, a3, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_1A54F5364);
}

uint64_t sub_1A5628228(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(BOOL, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v6;
  uint64_t (*v7)(int *);
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int v12;
  uint64_t (*v14)(int *);
  int v15;
  uint64_t v16;

  v6 = *(_QWORD *)(a3 + 16);
  if (v6)
  {
    v7 = (uint64_t (*)(int *))result;
    v8 = 0;
    v9 = MEMORY[0x1E0DEE9D8];
    v14 = (uint64_t (*)(int *))result;
    while (v8 < *(_QWORD *)(a3 + 16))
    {
      v12 = *(_DWORD *)(a3 + 4 * v8 + 32);
      v15 = v12;
      result = v7(&v15);
      if (v4)
      {
        swift_release();
        goto LABEL_14;
      }
      if ((result & 1) != 0)
      {
        result = swift_isUniquelyReferenced_nonNull_native();
        v16 = v9;
        if ((result & 1) == 0)
        {
          result = a4(0, *(_QWORD *)(v9 + 16) + 1, 1);
          v9 = v16;
        }
        v11 = *(_QWORD *)(v9 + 16);
        v10 = *(_QWORD *)(v9 + 24);
        if (v11 >= v10 >> 1)
        {
          result = a4(v10 > 1, v11 + 1, 1);
          v9 = v16;
        }
        *(_QWORD *)(v9 + 16) = v11 + 1;
        *(_DWORD *)(v9 + 4 * v11 + 32) = v12;
        v7 = v14;
      }
      if (v6 == ++v8)
        goto LABEL_14;
    }
    __break(1u);
  }
  else
  {
    v9 = MEMORY[0x1E0DEE9D8];
LABEL_14:
    swift_bridgeObjectRelease();
    return v9;
  }
  return result;
}

uint64_t sub_1A5628374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A5627F20(a1, a2, a3, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_1A54F5380);
}

uint64_t sub_1A5628390(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unsigned int *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t (*v20)(int *);
  int v21;
  uint64_t v22;
  int v23;
  char v24;
  uint64_t v25;

  v4 = a3;
  v20 = (uint64_t (*)(int *))result;
  v19 = *(_QWORD *)(a3 + 16);
  if (v19)
  {
    v5 = 0;
    v6 = (unsigned int *)(a3 + 48);
    v7 = MEMORY[0x1E0DEE9D8];
    while (v5 < *(_QWORD *)(v4 + 16))
    {
      v8 = *(v6 - 4);
      v9 = *((_QWORD *)v6 - 1);
      v10 = *((unsigned __int8 *)v6 + 4);
      v11 = *v6;
      v12 = v11 | (v10 << 32);
      v21 = v8;
      v22 = v9;
      v24 = v10;
      v23 = v11;
      sub_1A55F8484(v9, v12);
      v13 = v20(&v21);
      if (v3)
      {
        sub_1A55F8474(v9, v12);
        swift_release();
        goto LABEL_15;
      }
      if ((v13 & 1) != 0)
      {
        result = swift_isUniquelyReferenced_nonNull_native();
        v25 = v7;
        if ((result & 1) == 0)
        {
          result = sub_1A54F539C(0, *(_QWORD *)(v7 + 16) + 1, 1);
          v7 = v25;
        }
        v15 = *(_QWORD *)(v7 + 16);
        v14 = *(_QWORD *)(v7 + 24);
        v16 = v7;
        if (v15 >= v14 >> 1)
        {
          result = sub_1A54F539C(v14 > 1, v15 + 1, 1);
          v16 = v25;
        }
        *(_QWORD *)(v16 + 16) = v15 + 1;
        v17 = v16 + 24 * v15;
        *(_DWORD *)(v17 + 32) = v8;
        *(_QWORD *)(v17 + 40) = v9;
        *(_BYTE *)(v17 + 52) = BYTE4(v12);
        *(_DWORD *)(v17 + 48) = v12;
        v4 = a3;
        v7 = v16;
      }
      else
      {
        result = sub_1A55F8474(v9, v12);
      }
      ++v5;
      v6 += 6;
      if (v19 == v5)
        goto LABEL_15;
    }
    __break(1u);
  }
  else
  {
    v7 = MEMORY[0x1E0DEE9D8];
LABEL_15:
    swift_bridgeObjectRelease();
    return v7;
  }
  return result;
}

uint64_t sub_1A5628538(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  unsigned __int8 *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t (*v17)(int *);
  uint64_t v18;
  int v19;
  uint64_t v20;
  int v21;
  char v22;
  uint64_t v23;

  v3 = a3;
  v17 = (uint64_t (*)(int *))result;
  v16 = *(_QWORD *)(a3 + 16);
  if (v16)
  {
    v4 = 0;
    v5 = (unsigned __int8 *)(a3 + 52);
    v6 = MEMORY[0x1E0DEE9D8];
    while (v4 < *(_QWORD *)(v3 + 16))
    {
      v7 = *((_DWORD *)v5 - 5);
      v8 = *(_QWORD *)(v5 - 12);
      v9 = *((unsigned int *)v5 - 1);
      v10 = *v5;
      v19 = v7;
      v20 = v8;
      v21 = v9;
      v22 = v10;
      j___s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0(v8, v9, v10);
      v11 = v17(&v19);
      if (v18)
      {
        j__swift_bridgeObjectRelease(v8, v9, v10);
        swift_release();
        goto LABEL_15;
      }
      if ((v11 & 1) != 0)
      {
        result = swift_isUniquelyReferenced_nonNull_native();
        v23 = v6;
        if ((result & 1) == 0)
        {
          result = sub_1A54F53D4(0, *(_QWORD *)(v6 + 16) + 1, 1);
          v6 = v23;
        }
        v13 = *(_QWORD *)(v6 + 16);
        v12 = *(_QWORD *)(v6 + 24);
        if (v13 >= v12 >> 1)
        {
          result = sub_1A54F53D4(v12 > 1, v13 + 1, 1);
          v6 = v23;
        }
        *(_QWORD *)(v6 + 16) = v13 + 1;
        v14 = v6 + 24 * v13;
        *(_DWORD *)(v14 + 32) = v7;
        *(_QWORD *)(v14 + 40) = v8;
        *(_DWORD *)(v14 + 48) = v9;
        *(_BYTE *)(v14 + 52) = v10;
        v3 = a3;
      }
      else
      {
        result = j__swift_bridgeObjectRelease(v8, v9, v10);
      }
      ++v4;
      v5 += 24;
      if (v16 == v4)
        goto LABEL_15;
    }
    __break(1u);
  }
  else
  {
    v6 = MEMORY[0x1E0DEE9D8];
LABEL_15:
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

uint64_t sub_1A56286E8(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t (*v18)(int *);
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = a3;
  v18 = (uint64_t (*)(int *))result;
  v17 = *(_QWORD *)(a3 + 16);
  if (v17)
  {
    v5 = 0;
    v6 = (_QWORD *)(a3 + 48);
    v7 = MEMORY[0x1E0DEE9D8];
    while (v5 < *(_QWORD *)(v4 + 16))
    {
      v8 = *((_DWORD *)v6 - 4);
      v10 = *(v6 - 1);
      v9 = *v6;
      v19 = v8;
      v20 = v10;
      v21 = v9;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v11 = v18(&v19);
      if (v3)
      {
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      if ((v11 & 1) != 0)
      {
        result = swift_isUniquelyReferenced_nonNull_native();
        v22 = v7;
        if ((result & 1) == 0)
        {
          result = sub_1A54F53F0(0, *(_QWORD *)(v7 + 16) + 1, 1);
          v7 = v22;
        }
        v13 = *(_QWORD *)(v7 + 16);
        v12 = *(_QWORD *)(v7 + 24);
        v14 = v13 + 1;
        if (v13 >= v12 >> 1)
        {
          result = sub_1A54F53F0(v12 > 1, v13 + 1, 1);
          v14 = v13 + 1;
          v7 = v22;
        }
        *(_QWORD *)(v7 + 16) = v14;
        v15 = v7 + 24 * v13;
        *(_DWORD *)(v15 + 32) = v8;
        *(_QWORD *)(v15 + 40) = v10;
        *(_QWORD *)(v15 + 48) = v9;
        v4 = a3;
      }
      else
      {
        result = swift_bridgeObjectRelease();
      }
      ++v5;
      v6 += 3;
      if (v17 == v5)
        goto LABEL_16;
    }
    __break(1u);
  }
  else
  {
    v7 = MEMORY[0x1E0DEE9D8];
LABEL_16:
    swift_bridgeObjectRelease();
    return v7;
  }
  return result;
}

uint64_t sub_1A5628868(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  char v14;
  uint64_t v16;
  uint64_t (*v17)(_DWORD *);
  _DWORD v18[2];
  char v19;
  uint64_t v20;

  v4 = a3;
  v17 = (uint64_t (*)(_DWORD *))result;
  v16 = *(_QWORD *)(a3 + 16);
  if (v16)
  {
    v5 = 0;
    v6 = (_BYTE *)(a3 + 40);
    v7 = MEMORY[0x1E0DEE9D8];
    while (v5 < *(_QWORD *)(v4 + 16))
    {
      v12 = *((_DWORD *)v6 - 2);
      v13 = *((_DWORD *)v6 - 1);
      v14 = *v6;
      v18[0] = v12;
      v18[1] = v13;
      v19 = v14;
      result = v17(v18);
      if (v3)
      {
        swift_release();
        goto LABEL_14;
      }
      if ((result & 1) != 0)
      {
        result = swift_isUniquelyReferenced_nonNull_native();
        v20 = v7;
        if ((result & 1) == 0)
        {
          result = sub_1A54F540C(0, *(_QWORD *)(v7 + 16) + 1, 1);
          v7 = v20;
        }
        v9 = *(_QWORD *)(v7 + 16);
        v8 = *(_QWORD *)(v7 + 24);
        v10 = v9 + 1;
        if (v9 >= v8 >> 1)
        {
          result = sub_1A54F540C(v8 > 1, v9 + 1, 1);
          v10 = v9 + 1;
          v7 = v20;
        }
        *(_QWORD *)(v7 + 16) = v10;
        v11 = v7 + 12 * v9;
        *(_DWORD *)(v11 + 32) = v12;
        *(_DWORD *)(v11 + 36) = v13;
        *(_BYTE *)(v11 + 40) = v14;
        v4 = a3;
      }
      ++v5;
      v6 += 12;
      if (v16 == v5)
        goto LABEL_14;
    }
    __break(1u);
  }
  else
  {
    v7 = MEMORY[0x1E0DEE9D8];
LABEL_14:
    swift_bridgeObjectRelease();
    return v7;
  }
  return result;
}

uint64_t sub_1A56289CC(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t (*v18)(int *);
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = a3;
  v18 = (uint64_t (*)(int *))result;
  v17 = *(_QWORD *)(a3 + 16);
  if (v17)
  {
    v5 = 0;
    v6 = (_QWORD *)(a3 + 48);
    v7 = MEMORY[0x1E0DEE9D8];
    while (v5 < *(_QWORD *)(v4 + 16))
    {
      v8 = *((_DWORD *)v6 - 4);
      v10 = *(v6 - 1);
      v9 = *v6;
      v19 = v8;
      v20 = v10;
      v21 = v9;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v11 = v18(&v19);
      if (v3)
      {
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      if ((v11 & 1) != 0)
      {
        result = swift_isUniquelyReferenced_nonNull_native();
        v22 = v7;
        if ((result & 1) == 0)
        {
          result = sub_1A54F5428(0, *(_QWORD *)(v7 + 16) + 1, 1);
          v7 = v22;
        }
        v13 = *(_QWORD *)(v7 + 16);
        v12 = *(_QWORD *)(v7 + 24);
        v14 = v13 + 1;
        if (v13 >= v12 >> 1)
        {
          result = sub_1A54F5428(v12 > 1, v13 + 1, 1);
          v14 = v13 + 1;
          v7 = v22;
        }
        *(_QWORD *)(v7 + 16) = v14;
        v15 = v7 + 24 * v13;
        *(_DWORD *)(v15 + 32) = v8;
        *(_QWORD *)(v15 + 40) = v10;
        *(_QWORD *)(v15 + 48) = v9;
        v4 = a3;
      }
      else
      {
        result = swift_bridgeObjectRelease();
      }
      ++v5;
      v6 += 3;
      if (v17 == v5)
        goto LABEL_16;
    }
    __break(1u);
  }
  else
  {
    v7 = MEMORY[0x1E0DEE9D8];
LABEL_16:
    swift_bridgeObjectRelease();
    return v7;
  }
  return result;
}

uint64_t sub_1A5628B50(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void (*v10)(_QWORD *@<X8>);
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  unsigned __int8 *v29;
  uint64_t v30;
  unsigned __int8 *v31;
  int v32;
  int v33;
  int v34;
  uint64_t v35;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v37;
  char v38;
  unint64_t v39;
  uint64_t v40;
  _BOOL8 v41;
  uint64_t v42;
  char v43;
  unint64_t v44;
  char v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  int64_t v50;
  uint64_t v51;
  _OWORD v52[11];
  _OWORD v53[11];
  uint64_t v54;

  if (*(_BYTE *)(v1 + 24) != 1)
    return result;
  v2 = v1;
  v3 = result;
  v47 = (_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)v1;
  v6 = *(_QWORD *)(v2 + 8);
  v54 = v5;
  v49 = result + 64;
  v7 = 1 << *(_BYTE *)(result + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(result + 64);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A55212D0(v5, v6, v4, 1);
  v10 = 0;
  v11 = 0;
  v12 = (unint64_t)(v7 + 63) >> 6;
  v51 = v2;
  v48 = v3;
LABEL_6:
  v13 = v5 + 32;
  while (1)
  {
LABEL_7:
    while (v9)
    {
      v14 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v15 = v14 | (v11 << 6);
      v16 = *(_QWORD *)(v5 + 16);
      if (v16)
        goto LABEL_26;
    }
    v17 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
      goto LABEL_61;
    }
    if (v17 >= v12)
      goto LABEL_56;
    v18 = *(_QWORD *)(v49 + 8 * v17);
    ++v11;
    if (v18)
      goto LABEL_25;
    v11 = v17 + 1;
    if (v17 + 1 >= v12)
      goto LABEL_56;
    v18 = *(_QWORD *)(v49 + 8 * v11);
    if (v18)
      goto LABEL_25;
    v11 = v17 + 2;
    if (v17 + 2 >= v12)
      goto LABEL_56;
    v18 = *(_QWORD *)(v49 + 8 * v11);
    if (v18)
      goto LABEL_25;
    v11 = v17 + 3;
    if (v17 + 3 >= v12)
      goto LABEL_56;
    v18 = *(_QWORD *)(v49 + 8 * v11);
    if (v18)
      goto LABEL_25;
    v19 = v17 + 4;
    if (v19 >= v12)
    {
LABEL_56:
      swift_release();
      sub_1A54E8FCC(*(_QWORD *)v2, *(_QWORD *)(v2 + 8), *(_QWORD *)(v2 + 16), *(_BYTE *)(v2 + 24));
      result = sub_1A55113D8((uint64_t)v10);
      *(_QWORD *)v2 = v5;
      *v47 = 0;
      v47[1] = 0;
      *(_BYTE *)(v2 + 24) = 1;
      return result;
    }
    v18 = *(_QWORD *)(v49 + 8 * v19);
    if (!v18)
      break;
    v11 = v19;
LABEL_25:
    v9 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v11 << 6);
    v16 = *(_QWORD *)(v5 + 16);
    if (v16)
    {
LABEL_26:
      v20 = 0;
      v21 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v15);
      v22 = *v21;
      v23 = v21[1];
      v24 = *v21 + 37;
      while (1)
      {
        v25 = (uint64_t *)(v13 + 176 * v20);
        if (v25[1] == v23)
        {
          v26 = *v25;
          v27 = *(_QWORD *)(v26 + 16);
          if (v27 == *(_QWORD *)(v22 + 16))
          {
            if (v27)
              v28 = v26 == v22;
            else
              v28 = 1;
            if (v28)
              goto LABEL_47;
            if (*(unsigned __int8 *)(v26 + 32) == *(unsigned __int8 *)(v22 + 32))
            {
              if (v27 == 1)
                goto LABEL_47;
              if (*(unsigned __int8 *)(v26 + 33) == *(unsigned __int8 *)(v22 + 33))
              {
                if (v27 == 2)
                  goto LABEL_47;
                if (*(unsigned __int8 *)(v26 + 34) == *(unsigned __int8 *)(v22 + 34))
                {
                  if (v27 == 3)
                    goto LABEL_47;
                  if (*(unsigned __int8 *)(v26 + 35) == *(unsigned __int8 *)(v22 + 35))
                  {
                    if (v27 == 4)
                      goto LABEL_47;
                    if (*(unsigned __int8 *)(v26 + 36) == *(unsigned __int8 *)(v22 + 36))
                      break;
                  }
                }
              }
            }
          }
        }
LABEL_27:
        if (++v20 == v16)
          goto LABEL_7;
      }
      v29 = (unsigned __int8 *)(v26 + 37);
      v30 = v27 - 5;
      v31 = (unsigned __int8 *)v24;
      while (v30)
      {
        v33 = *v29++;
        v32 = v33;
        v34 = *v31++;
        --v30;
        if (v32 != v34)
          goto LABEL_27;
      }
LABEL_47:
      if (v20 >= v16)
        goto LABEL_59;
      v50 = v11;
      v35 = *(_QWORD *)(v13 + 176 * v20 + 136);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A55113D8((uint64_t)v10);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v53[0] = *(_QWORD *)(v2 + 32);
      v37 = *(_QWORD *)&v53[0];
      *(_QWORD *)(v2 + 32) = 0x8000000000000000;
      v39 = sub_1A54FDC94(v22, v23);
      v40 = *(_QWORD *)(v37 + 16);
      v41 = (v38 & 1) == 0;
      v42 = v40 + v41;
      if (__OFADD__(v40, v41))
        goto LABEL_60;
      v43 = v38;
      if (*(_QWORD *)(v37 + 24) >= v42)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1A554F2E8();
          v37 = *(_QWORD *)&v53[0];
        }
      }
      else
      {
        sub_1A5581268(v42, isUniquelyReferenced_nonNull_native);
        v37 = *(_QWORD *)&v53[0];
        v44 = sub_1A54FDC94(v22, v23);
        if ((v43 & 1) != (v45 & 1))
          goto LABEL_62;
        v39 = v44;
      }
      *(_QWORD *)(v51 + 32) = v37;
      swift_bridgeObjectRelease();
      v46 = *(_QWORD **)(v51 + 32);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      if ((v43 & 1) == 0)
      {
        sub_1A55B24E0(v39, v22, v23, MEMORY[0x1E0DEE9E8], v46);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      }
      swift_bridgeObjectRelease();
      sub_1A5511938(v35);
      swift_bridgeObjectRelease();
      sub_1A55A2550(v20, v52);
      v53[8] = v52[8];
      v53[9] = v52[9];
      v53[10] = v52[10];
      v53[4] = v52[4];
      v53[5] = v52[5];
      v53[6] = v52[6];
      v53[7] = v52[7];
      v53[0] = v52[0];
      v53[1] = v52[1];
      v53[2] = v52[2];
      v53[3] = v52[3];
      sub_1A54E31EC((uint64_t)v53);
      v5 = v54;
      v10 = sub_1A5628FC8;
      v11 = v50;
      v2 = v51;
      v12 = (unint64_t)(v7 + 63) >> 6;
      v3 = v48;
      goto LABEL_6;
    }
  }
  while (1)
  {
    v11 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v11 >= v12)
      goto LABEL_56;
    v18 = *(_QWORD *)(v49 + 8 * v11);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_61:
  __break(1u);
LABEL_62:
  result = sub_1A594CDF8();
  __break(1u);
  return result;
}

void sub_1A5628FC8(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x1E0DEE9E8];
}

uint64_t sub_1A5628FD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  int v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(_BYTE *, uint64_t);
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _BYTE *v39;
  _BYTE v40[4];
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  _BYTE v50[48];
  _QWORD v51[3];
  int v52;

  v3 = type metadata accessor for Task.Logger(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v40[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v8 = &v40[-v7];
  v9 = sub_1A594A764();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = &v40[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v13);
  v15 = &v40[-v14];
  v16 = *(_QWORD *)(v1 + 48);
  if (*(_QWORD *)(v16 + 16) == 1
    && (sub_1A5640EDC(v16, (uint64_t)v50), sub_1A562B05C((uint64_t)v50, (uint64_t)v51), v51[0]))
  {
    v17 = v51[2];
    LODWORD(v43) = v52;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 16))(v15, a1, v9);
    sub_1A55034B8(a1, (uint64_t)v8, type metadata accessor for Task.Logger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v18 = sub_1A594A74C();
    v19 = sub_1A594C030();
    v20 = v19;
    if (os_log_type_enabled(v18, v19))
    {
      v21 = swift_slowAlloc();
      v42 = swift_slowAlloc();
      v46 = v42;
      *(_DWORD *)v21 = 68158723;
      LODWORD(v47) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v21 + 8) = 256;
      v22 = &v8[*(int *)(v3 + 20)];
      v41 = v20;
      v23 = v22[1];
      v24 = v22[2];
      LOBYTE(v47) = *v22;
      sub_1A594C3CC();
      *(_WORD *)(v21 + 11) = 2082;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v44 = v10;
      v47 = sub_1A55791B0(v23, v24, &v46);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v8, type metadata accessor for Task.Logger);
      *(_WORD *)(v21 + 21) = 2160;
      v47 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v21 + 31) = 2085;
      v47 = v17;
      v48 = v43;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v25 = sub_1A594B4A8();
      v47 = sub_1A55791B0(v25, v26, &v46);
      sub_1A594C3CC();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A4F90000, v18, (os_log_type_t)v41, "[%.*hhx-%{public}s] Created task for '%{sensitive,mask.mailbox}s'", (uint8_t *)v21, 0x29u);
      v27 = v42;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v27, -1, -1);
      MEMORY[0x1A85B1964](v21, -1, -1);

      v28 = *(uint64_t (**)(_BYTE *, uint64_t))(v44 + 8);
    }
    else
    {
      sub_1A55034FC((uint64_t)v8, type metadata accessor for Task.Logger);

      swift_bridgeObjectRelease_n();
      v28 = *(uint64_t (**)(_BYTE *, uint64_t))(v10 + 8);
    }
    v39 = v15;
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
    sub_1A55034B8(a1, (uint64_t)v5, type metadata accessor for Task.Logger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    sub_1A55533BC(v1, (uint64_t)&v47);
    v29 = sub_1A594A74C();
    v30 = sub_1A594C030();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = swift_slowAlloc();
      v32 = swift_slowAlloc();
      v46 = v32;
      *(_DWORD *)v31 = 68158466;
      LODWORD(v45) = 2;
      v43 = v9;
      sub_1A594C3CC();
      *(_WORD *)(v31 + 8) = 256;
      v33 = (uint64_t *)&v5[*(int *)(v3 + 20)];
      v34 = *v33;
      v35 = v33[1];
      v44 = v10;
      v36 = v33[2];
      LOBYTE(v45) = v34;
      sub_1A594C3CC();
      *(_WORD *)(v31 + 11) = 2082;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v45 = sub_1A55791B0(v35, v36, &v46);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v5, type metadata accessor for Task.Logger);
      *(_WORD *)(v31 + 21) = 2048;
      v37 = *(_QWORD *)(v49 + 16);
      sub_1A55533F8((uint64_t)&v47);
      v45 = v37;
      sub_1A594C3CC();
      _os_log_impl(&dword_1A4F90000, v29, v30, "[%.*hhx-%{public}s] Created task for %ld mailboxes.", (uint8_t *)v31, 0x1Fu);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v32, -1, -1);
      MEMORY[0x1A85B1964](v31, -1, -1);

      return (*(uint64_t (**)(_BYTE *, uint64_t))(v44 + 8))(v12, v43);
    }
    sub_1A55533F8((uint64_t)&v47);
    sub_1A55034FC((uint64_t)v5, type metadata accessor for Task.Logger);

    v28 = *(uint64_t (**)(_BYTE *, uint64_t))(v10 + 8);
    v39 = v12;
  }
  return v28(v39, v9);
}

void sub_1A56295E4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, NSObject *a5, int a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  Class isa;
  uint64_t v18;
  NSObject *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  void *v29;
  void *v30;
  NSObject *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  NSObject *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char *v50;
  Class v51;
  void (*v52)(char *, uint64_t, NSObject *);
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  int v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  NSObject *v84;
  Class v85;
  void *v86;
  uint64_t v87;
  int v88;
  char *v89;

  LODWORD(v85) = a6;
  v84 = a5;
  v77 = type metadata accessor for Task.Logger(0);
  MEMORY[0x1E0C80A78](v77);
  v79 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v74 = (uint64_t)&v74 - v15;
  v16 = sub_1A594A764();
  isa = v16[-1].isa;
  MEMORY[0x1E0C80A78](v16);
  v19 = ((char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v20);
  v78 = (char *)&v74 - v21;
  v83 = v7;
  v22 = *(_QWORD *)(v7 + 48);
  if (!*(_QWORD *)(v22 + 16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v81 = a1;
  v82 = a2;
  v23 = sub_1A54FDC94(a1, a2);
  if ((v24 & 1) == 0)
  {
LABEL_14:
    __break(1u);
    return;
  }
  v25 = *(_QWORD *)(v22 + 56) + 32 * v23;
  v26 = *(_QWORD *)v25;
  v27 = *(_DWORD *)(v25 + 8);
  v28 = *(_QWORD *)(v25 + 16);
  LODWORD(v25) = *(_DWORD *)(v25 + 24);
  v75 = v27;
  v76 = v25;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v29 = v86;
  sub_1A564CE34(a7, a3, a4, v84, (int)v85);
  v30 = v29;
  v80 = v28;
  if (v29)
  {
    v31 = v16;
    (*((void (**)(NSObject *, uint64_t, NSObject *))isa + 2))(v19, a7, v16);
    v32 = a7;
    v33 = (uint64_t)v79;
    sub_1A55034B8(v32, (uint64_t)v79, type metadata accessor for Task.Logger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v34 = v26;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v35 = sub_1A594A74C();
    v36 = sub_1A594C018();
    v37 = v36;
    if (os_log_type_enabled(v35, v36))
    {
      v38 = swift_slowAlloc();
      LODWORD(v74) = v37;
      v39 = v38;
      v78 = (char *)swift_slowAlloc();
      v89 = v78;
      *(_DWORD *)v39 = 68159235;
      LODWORD(v87) = 2;
      v84 = v19;
      sub_1A594C3CC();
      *(_WORD *)(v39 + 8) = 256;
      v40 = (_QWORD *)(v33 + *(int *)(v77 + 20));
      v86 = v29;
      v41 = v40[1];
      v42 = v33;
      v43 = v40[2];
      LOBYTE(v87) = *v40;
      sub_1A594C3CC();
      *(_WORD *)(v39 + 11) = 2082;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v85 = isa;
      v87 = sub_1A55791B0(v41, v43, (uint64_t *)&v89);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC(v42, type metadata accessor for Task.Logger);
      *(_WORD *)(v39 + 21) = 2160;
      v87 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v39 + 31) = 2085;
      v87 = v34;
      v88 = v75;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v44 = v31;
      v45 = sub_1A594B4A8();
      v87 = sub_1A55791B0(v45, v46, (uint64_t *)&v89);
      sub_1A594C3CC();
      v47 = v80;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 41) = 2160;
      v87 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v39 + 51) = 2085;
      v87 = v47;
      v88 = v76;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v48 = sub_1A594B4A8();
      v87 = sub_1A55791B0(v48, v49, (uint64_t *)&v89);
      v30 = v86;
      sub_1A594C3CC();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A4F90000, v35, (os_log_type_t)v74, "[%.*hhx-%{public}s] Failed to rename '%{sensitive,mask.mailbox}s' to '%{sensitive,mask.mailbox}s'.", (uint8_t *)v39, 0x3Du);
      v50 = v78;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v50, -1, -1);
      MEMORY[0x1A85B1964](v39, -1, -1);

      (*((void (**)(NSObject *, NSObject *))v85 + 1))(v84, v44);
    }
    else
    {
      sub_1A55034FC(v33, type metadata accessor for Task.Logger);

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      (*((void (**)(NSObject *, NSObject *))isa + 1))(v19, v31);
    }
    v71 = v81;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54F2C18(&v87, v71, v82);

    swift_bridgeObjectRelease();
  }
  else
  {
    v51 = isa;
    v52 = (void (*)(char *, uint64_t, NSObject *))*((_QWORD *)isa + 2);
    v53 = v78;
    v52(v78, a7, v16);
    v54 = a7;
    v55 = v74;
    sub_1A55034B8(v54, v74, type metadata accessor for Task.Logger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v56 = v26;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v57 = sub_1A594A74C();
    v58 = sub_1A594C030();
    if (os_log_type_enabled(v57, v58))
    {
      v59 = swift_slowAlloc();
      v84 = v16;
      v60 = v59;
      v79 = (char *)swift_slowAlloc();
      v89 = v79;
      *(_DWORD *)v60 = 68159235;
      LODWORD(v87) = 2;
      v85 = v51;
      sub_1A594C3CC();
      *(_WORD *)(v60 + 8) = 256;
      v61 = (uint64_t *)(v55 + *(int *)(v77 + 20));
      v62 = *v61;
      v63 = v61[1];
      v86 = 0;
      v64 = v61[2];
      LOBYTE(v87) = v62;
      sub_1A594C3CC();
      *(_WORD *)(v60 + 11) = 2082;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v87 = sub_1A55791B0(v63, v64, (uint64_t *)&v89);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC(v55, type metadata accessor for Task.Logger);
      *(_WORD *)(v60 + 21) = 2160;
      v87 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v60 + 31) = 2085;
      v87 = v56;
      v88 = v75;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v65 = sub_1A594B4A8();
      v87 = sub_1A55791B0(v65, v66, (uint64_t *)&v89);
      sub_1A594C3CC();
      v67 = v80;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v60 + 41) = 2160;
      v87 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v60 + 51) = 2085;
      v87 = v67;
      v88 = v76;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v68 = sub_1A594B4A8();
      v87 = sub_1A55791B0(v68, v69, (uint64_t *)&v89);
      sub_1A594C3CC();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A4F90000, v57, v58, "[%.*hhx-%{public}s] Did rename '%{sensitive,mask.mailbox}s' to '%{sensitive,mask.mailbox}s'.", (uint8_t *)v60, 0x3Du);
      v70 = (uint64_t)v79;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v70, -1, -1);
      MEMORY[0x1A85B1964](v60, -1, -1);

      (*((void (**)(char *, NSObject *))v85 + 1))(v78, v84);
    }
    else
    {
      sub_1A55034FC(v55, type metadata accessor for Task.Logger);

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      (*((void (**)(char *, NSObject *))v51 + 1))(v53, v16);
    }
    v72 = v81;
    v73 = v82;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54F2C18(&v87, v72, v73);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1A5629EE4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  char *v14;
  uint64_t v16;
  _BYTE v17[48];
  _QWORD v18[3];
  int v19;
  uint64_t v20;
  int v21;

  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v6 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A562A7DC(v6, a1, a2, (uint64_t)v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A562B05C((uint64_t)v17, (uint64_t)v18);
  v7 = v18[0];
  if (v18[0])
  {
    v8 = v18[1];
    v9 = v18[2];
    v10 = v19;
    v11 = v20;
    v12 = v21;
    v13 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8DA0);
    v14 = (char *)a3 + *(int *)(v13 + 48);
    *(_QWORD *)v14 = v9;
    *((_DWORD *)v14 + 2) = v10;
    *((_QWORD *)v14 + 2) = v11;
    *((_DWORD *)v14 + 6) = v12;
    type metadata accessor for ClientCommand(0);
    swift_storeEnumTagMultiPayload();
    *a3 = v7;
    a3[1] = v8;
    return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a3, 0, 1, v13);
  }
  else
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8DA0);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a3, 1, 1, v16);
  }
}

uint64_t sub_1A562A048@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = sub_1A562AF8C();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

void sub_1A562A070(uint64_t *a1, unint64_t a2, uint64_t a3, NSObject *a4, int a5, uint64_t a6)
{
  sub_1A56295E4(*a1, a1[1], a2, a3, a4, a5, a6);
}

uint64_t sub_1A562A0A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;

  v2 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5628B50(v2);
  result = swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 113) = 1;
  return result;
}

unint64_t sub_1A562A0E8()
{
  return 0xD000000000000010;
}

unint64_t sub_1A562A108()
{
  unint64_t result;

  result = qword_1EE7A8D88;
  if (!qword_1EE7A8D88)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AAE78, &type metadata for RenameMailboxes.ActionID);
    atomic_store(result, (unint64_t *)&qword_1EE7A8D88);
  }
  return result;
}

unint64_t sub_1A562A150()
{
  unint64_t result;

  result = qword_1EE798458;
  if (!qword_1EE798458)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for OpaqueMailboxID, &type metadata for OpaqueMailboxID);
    atomic_store(result, (unint64_t *)&qword_1EE798458);
  }
  return result;
}

unint64_t sub_1A562A194(uint64_t a1)
{
  unint64_t result;

  result = sub_1A562A1B8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A562A1B8()
{
  unint64_t result;

  result = qword_1EE7A8D90;
  if (!qword_1EE7A8D90)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AAE34, &type metadata for RenameMailboxes);
    atomic_store(result, (unint64_t *)&qword_1EE7A8D90);
  }
  return result;
}

uint64_t sub_1A562A200(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 72);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_1A562A288(unint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = v2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a1 & 0x8000000000000000) != 0 || (v7 = *v3, 1 << *(_BYTE *)(*v3 + 32) <= (uint64_t)a1))
  {
    __break(1u);
    goto LABEL_8;
  }
  if (((*(_QWORD *)(v7 + ((a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) == 0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (*(_DWORD *)(v7 + 36) != a2)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v10 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
LABEL_10:
    sub_1A557D2F4();
    v7 = v10;
  }
  v8 = *(_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * a1);
  sub_1A554D288(a1);
  *v3 = v10;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1A562A36C(unint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = v2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a1 & 0x8000000000000000) != 0 || (v7 = *v3, 1 << *(_BYTE *)(*v3 + 32) <= (uint64_t)a1))
  {
    __break(1u);
    goto LABEL_8;
  }
  if (((*(_QWORD *)(v7 + ((a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) == 0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (*(_DWORD *)(v7 + 36) != a2)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v10 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
LABEL_10:
    sub_1A557D498();
    v7 = v10;
  }
  v8 = *(_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * a1);
  sub_1A554D0DC(a1);
  *v3 = v10;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1A562A44C(unint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = v2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a1 & 0x8000000000000000) != 0 || (v7 = *v3, 1 << *(_BYTE *)(*v3 + 32) <= (uint64_t)a1))
  {
    __break(1u);
    goto LABEL_8;
  }
  if (((*(_QWORD *)(v7 + ((a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) == 0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (*(_DWORD *)(v7 + 36) != a2)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v10 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
LABEL_10:
    sub_1A557E078();
    v7 = v10;
  }
  v8 = *(_QWORD *)(*(_QWORD *)(v7 + 48) + 24 * a1);
  sub_1A554D920(a1);
  *v3 = v10;
  swift_bridgeObjectRelease();
  return v8;
}

BOOL sub_1A562A538(uint64_t a1, _QWORD *a2)
{
  return *(_QWORD *)(a1 + 8) == *a2;
}

BOOL sub_1A562A54C(uint64_t a1, uint64_t a2)
{
  return sub_1A562B33C(*(_QWORD *)(a1 + 8), *(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned __int8 *)(a1 + 20) << 32), *(_QWORD *)a2, *(unsigned int *)(a2 + 8) | ((unint64_t)*(unsigned __int8 *)(a2 + 12) << 32));
}

uint64_t sub_1A562A5A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  _QWORD v12[4];
  uint64_t v13;
  uint64_t v14;
  int v15;
  char v16;

  v14 = a1;
  v15 = a2;
  v16 = BYTE4(a2) & 1;
  v12[2] = &v14;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v4 = sub_1A5628538((uint64_t)sub_1A562B0F0, (uint64_t)v12, a3);
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v13 = MEMORY[0x1E0DEE9D8];
    sub_1A54F4F58(0, v5, 0);
    v6 = v13;
    v7 = *(_QWORD *)(v13 + 16);
    v8 = 32;
    do
    {
      v9 = *(_DWORD *)(v4 + v8);
      v13 = v6;
      v10 = *(_QWORD *)(v6 + 24);
      if (v7 >= v10 >> 1)
      {
        sub_1A54F4F58(v10 > 1, v7 + 1, 1);
        v6 = v13;
      }
      *(_QWORD *)(v6 + 16) = v7 + 1;
      *(_DWORD *)(v6 + 4 * v7 + 32) = v9;
      v8 += 24;
      ++v7;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v6;
}

uint64_t sub_1A562A6C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  _QWORD v12[4];
  uint64_t v13;
  _QWORD v14[2];

  v14[0] = a1;
  v14[1] = a2;
  v12[2] = v14;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v4 = sub_1A56289CC((uint64_t)sub_1A562B0A4, (uint64_t)v12, a3);
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v13 = MEMORY[0x1E0DEE9D8];
    sub_1A54F4F58(0, v5, 0);
    v6 = v13;
    v7 = *(_QWORD *)(v13 + 16);
    v8 = 32;
    do
    {
      v9 = *(_DWORD *)(v4 + v8);
      v13 = v6;
      v10 = *(_QWORD *)(v6 + 24);
      if (v7 >= v10 >> 1)
      {
        sub_1A54F4F58(v10 > 1, v7 + 1, 1);
        v6 = v13;
      }
      *(_QWORD *)(v6 + 16) = v7 + 1;
      *(_DWORD *)(v6 + 4 * v7 + 32) = v9;
      v8 += 24;
      ++v7;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v6;
}

uint64_t sub_1A562A7DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v40 = a4;
  v46 = a3;
  v6 = type metadata accessor for TaskHistory.Previous(0);
  v54 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 64);
  v41 = a1 + 64;
  v10 = 1 << *(_BYTE *)(a1 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v9;
  v42 = (unint64_t)(v10 + 63) >> 6;
  v47 = a1;
  result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v14 = 0;
  v53 = a2;
  if (v12)
    goto LABEL_4;
LABEL_5:
  v16 = v14 + 1;
  if (__OFADD__(v14, 1))
  {
    __break(1u);
LABEL_38:
    __break(1u);
    return result;
  }
  if (v16 >= v42)
    goto LABEL_36;
  v17 = *(_QWORD *)(v41 + 8 * v16);
  ++v14;
  if (!v17)
  {
    v14 = v16 + 1;
    if (v16 + 1 >= v42)
      goto LABEL_36;
    v17 = *(_QWORD *)(v41 + 8 * v14);
    if (!v17)
    {
      v14 = v16 + 2;
      if (v16 + 2 >= v42)
        goto LABEL_36;
      v17 = *(_QWORD *)(v41 + 8 * v14);
      if (!v17)
      {
        v14 = v16 + 3;
        if (v16 + 3 >= v42)
          goto LABEL_36;
        v17 = *(_QWORD *)(v41 + 8 * v14);
        if (!v17)
        {
          v18 = v16 + 4;
          if (v18 < v42)
          {
            v17 = *(_QWORD *)(v41 + 8 * v18);
            v14 = v18;
            if (!v17)
            {
              while (1)
              {
                v14 = v18 + 1;
                if (__OFADD__(v18, 1))
                  goto LABEL_38;
                if (v14 >= v42)
                  goto LABEL_36;
                v17 = *(_QWORD *)(v41 + 8 * v14);
                ++v18;
                if (v17)
                  goto LABEL_19;
              }
            }
            goto LABEL_19;
          }
LABEL_36:
          result = swift_release();
          v20 = 0;
          v36 = 0;
          v34 = 0;
          v37 = 0;
          v35 = 0;
          v38 = 0;
          v33 = v40;
          goto LABEL_35;
        }
      }
    }
  }
LABEL_19:
  v49 = (v17 - 1) & v17;
  for (i = __clz(__rbit64(v17)) + (v14 << 6); ; i = __clz(__rbit64(v12)) | (v14 << 6))
  {
    v19 = (uint64_t *)(*(_QWORD *)(v47 + 48) + 16 * i);
    v20 = *v19;
    v21 = v19[1];
    v22 = *(_QWORD *)(v47 + 56) + 32 * i;
    v23 = *(_QWORD *)v22;
    v44 = *(unsigned int *)(v22 + 8);
    v24 = *(_QWORD *)(v22 + 16);
    v43 = *(_DWORD *)(v22 + 24);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v52 = v23;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v51 = v24;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v45 = v21;
    v25 = sub_1A562A6C4(v20, v21, v46);
    v57 = *(_QWORD *)(v25 + 16);
    if (!v57)
      break;
    v50 = v20;
    v48 = v14;
    v26 = 0;
    v55 = v25;
    v56 = v25 + 32;
    v58 = *(_QWORD *)(a2 + 16);
    while (!v58)
    {
LABEL_23:
      if (++v26 == v57)
      {
        swift_release();
        result = swift_bridgeObjectRelease();
        v20 = v50;
        goto LABEL_34;
      }
    }
    v27 = *(_DWORD *)(v56 + 4 * v26);
    v28 = v54;
    v29 = a2 + ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80));
    swift_bridgeObjectRetain_n();
    v30 = *(_QWORD *)(v28 + 72);
    v31 = v58;
    while (1)
    {
      sub_1A55034B8(v29, (uint64_t)v8, type metadata accessor for TaskHistory.Previous);
      if (swift_getEnumCaseMultiPayload() != 1)
        break;
      sub_1A55034FC((uint64_t)v8, type metadata accessor for TaskHistory.Previous);
LABEL_27:
      v29 += v30;
      if (!--v31)
      {
        a2 = v53;
        swift_bridgeObjectRelease_n();
        goto LABEL_23;
      }
    }
    v32 = *(_DWORD *)&v8[*(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797DD8) + 48)];
    sub_1A55034FC((uint64_t)v8, type metadata accessor for ClientCommand);
    if (v32 != v27)
      goto LABEL_27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a2 = v53;
    result = swift_bridgeObjectRelease_n();
    v14 = v48;
    v12 = v49;
    if (!v49)
      goto LABEL_5;
LABEL_4:
    v49 = (v12 - 1) & v12;
  }
  swift_release();
  result = swift_bridgeObjectRelease();
LABEL_34:
  v33 = v40;
  v35 = v51;
  v34 = v52;
  v37 = v44;
  v36 = v45;
  v38 = v43;
LABEL_35:
  *(_QWORD *)v33 = v20;
  *(_QWORD *)(v33 + 8) = v36;
  *(_QWORD *)(v33 + 16) = v34;
  *(_QWORD *)(v33 + 24) = v37;
  *(_QWORD *)(v33 + 32) = v35;
  *(_DWORD *)(v33 + 40) = v38;
  return result;
}

uint64_t sub_1A562ABBC(char a1, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  int v8;
  unint64_t v9;
  _QWORD v11[3];
  uint64_t v12;
  char v13;

  v13 = a1 & 1;
  v11[2] = &v13;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v3 = sub_1A5627F20((uint64_t)sub_1A55B0A50, (uint64_t)v11, a2, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_1A54F4F74);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    sub_1A54F4F58(0, v4, 0);
    v5 = v12;
    v6 = *(_QWORD *)(v12 + 16);
    v7 = 32;
    do
    {
      v8 = *(_DWORD *)(v3 + v7);
      v12 = v5;
      v9 = *(_QWORD *)(v5 + 24);
      if (v6 >= v9 >> 1)
      {
        sub_1A54F4F58(v9 > 1, v6 + 1, 1);
        v5 = v12;
      }
      *(_QWORD *)(v5 + 16) = v6 + 1;
      *(_DWORD *)(v5 + 4 * v6 + 32) = v8;
      v7 += 8;
      ++v6;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v5;
}

uint64_t sub_1A562ACE0(uint64_t a1)
{
  return sub_1A562AD08(a1, (uint64_t)OUTLINED_FUNCTION_56, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_1A54F5070);
}

uint64_t sub_1A562ACF4(uint64_t a1)
{
  return sub_1A562AD08(a1, (uint64_t)OUTLINED_FUNCTION_56, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_1A54F508C);
}

uint64_t sub_1A562AD08(uint64_t a1, uint64_t a2, uint64_t (*a3)(BOOL, uint64_t, uint64_t))
{
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;

  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v6 = sub_1A5628228(a2, (uint64_t)&v14, a1, a3);
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    v15 = MEMORY[0x1E0DEE9D8];
    sub_1A54F4F58(0, v7, 0);
    v8 = 0;
    v9 = v15;
    v10 = *(_QWORD *)(v15 + 16);
    do
    {
      v11 = *(_DWORD *)(v6 + 4 * v8 + 32);
      v15 = v9;
      v12 = *(_QWORD *)(v9 + 24);
      if (v10 >= v12 >> 1)
      {
        sub_1A54F4F58(v12 > 1, v10 + 1, 1);
        v9 = v15;
      }
      ++v8;
      *(_QWORD *)(v9 + 16) = v10 + 1;
      *(_DWORD *)(v9 + 4 * v10++ + 32) = v11;
    }
    while (v7 != v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v9;
}

uint64_t sub_1A562AE1C(uint64_t a1)
{
  return sub_1A562AD08(a1, (uint64_t)OUTLINED_FUNCTION_56, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_1A54F50A8);
}

uint64_t sub_1A562AE30(char a1, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  int v8;
  unint64_t v9;
  _QWORD v11[3];
  uint64_t v12;
  char v13;

  v13 = a1;
  v11[2] = &v13;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v3 = sub_1A5627F20((uint64_t)sub_1A55B09F8, (uint64_t)v11, a2, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_1A54F50E0);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    sub_1A54F4F58(0, v4, 0);
    v5 = v12;
    v6 = *(_QWORD *)(v12 + 16);
    v7 = 32;
    do
    {
      v8 = *(_DWORD *)(v3 + v7);
      v12 = v5;
      v9 = *(_QWORD *)(v5 + 24);
      if (v6 >= v9 >> 1)
      {
        sub_1A54F4F58(v9 > 1, v6 + 1, 1);
        v5 = v12;
      }
      *(_QWORD *)(v5 + 16) = v6 + 1;
      *(_DWORD *)(v5 + 4 * v6 + 32) = v8;
      v7 += 8;
      ++v6;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v5;
}

uint64_t sub_1A562AF50(uint64_t a1)
{
  return sub_1A562AD08(a1, (uint64_t)OUTLINED_FUNCTION_56, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_1A54F50FC);
}

uint64_t sub_1A562AF64(uint64_t a1)
{
  return sub_1A562AD08(a1, (uint64_t)OUTLINED_FUNCTION_56, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_1A54F516C);
}

uint64_t sub_1A562AF78(uint64_t a1)
{
  return sub_1A562AD08(a1, (uint64_t)OUTLINED_FUNCTION_56, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_1A54F51A4);
}

uint64_t sub_1A562AF8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 64);
  if (!*(_QWORD *)(v1 + 16))
    return 0;
  v2 = sub_1A558A0BC(v1);
  v4 = v3;
  v6 = v5 & 1;
  v7 = sub_1A562A36C(v2, v3);
  v9 = v8;
  sub_1A5529B00(v2, v4, v6);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v7;
  *(_QWORD *)(v10 + 24) = v9;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v7;
}

uint64_t sub_1A562B038()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A562B05C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8D98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL sub_1A562B0A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;

  v2 = *(uint64_t **)(v1 + 16);
  return *(_QWORD *)(a1 + 16) == v2[1] && sub_1A54FF30C(*(_QWORD *)(a1 + 8), *v2);
}

BOOL sub_1A562B0F0(uint64_t a1)
{
  uint64_t v1;

  return sub_1A562A54C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1A562B10C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  int v8;
  unint64_t v9;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  v13 = a1;
  v11[2] = &v13;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v3 = sub_1A5627844((uint64_t)sub_1A562B38C, (uint64_t)v11, a2);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    sub_1A54F4F58(0, v4, 0);
    v5 = v12;
    v6 = *(_QWORD *)(v12 + 16);
    v7 = 32;
    do
    {
      v8 = *(_DWORD *)(v3 + v7);
      v12 = v5;
      v9 = *(_QWORD *)(v5 + 24);
      if (v6 >= v9 >> 1)
      {
        sub_1A54F4F58(v9 > 1, v6 + 1, 1);
        v5 = v12;
      }
      *(_QWORD *)(v5 + 16) = v6 + 1;
      *(_DWORD *)(v5 + 4 * v6 + 32) = v8;
      v7 += 16;
      ++v6;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v5;
}

uint64_t sub_1A562B224(char a1, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  int v8;
  unint64_t v9;
  _QWORD v11[3];
  uint64_t v12;
  char v13;

  v13 = a1;
  v11[2] = &v13;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v3 = sub_1A56279A4((uint64_t)sub_1A55B0CF4, (uint64_t)v11, a2);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    sub_1A54F4F58(0, v4, 0);
    v5 = v12;
    v6 = *(_QWORD *)(v12 + 16);
    v7 = 32;
    do
    {
      v8 = *(_DWORD *)(v3 + v7);
      v12 = v5;
      v9 = *(_QWORD *)(v5 + 24);
      if (v6 >= v9 >> 1)
      {
        sub_1A54F4F58(v9 > 1, v6 + 1, 1);
        v5 = v12;
      }
      *(_QWORD *)(v5 + 16) = v6 + 1;
      *(_DWORD *)(v5 + 4 * v6 + 32) = v8;
      v7 += 8;
      ++v6;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v5;
}

BOOL sub_1A562B33C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((a2 & 0x100000000) != 0)
  {
    if ((a4 & 0x100000000) == 0)
      return 0;
  }
  else if ((a4 & 0x100000000) != 0)
  {
    return 0;
  }
  return a2 == a4 && sub_1A54FF30C(a1, a3);
}

BOOL sub_1A562B38C(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(a1 + 8) == **(_QWORD **)(v1 + 16);
}

void sub_1A562B3A4(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1A562B3F0()
{
  int32x2_t *v0;
  int32x2_t *v1;
  unint64_t v2;
  uint64_t v3;
  char v4;

  if (v2 >> 62)
    return 0;
  sub_1A54E3414();
  static MessageIdentifierSet.__derived_struct_equals(_:_:)(v1, v3 & 0xFFFFFFFFFFLL, v0, v2 & 0xFFFFFFFFFFLL);
  return v4 & 1;
}

ValueMetadata *type metadata accessor for RenameMailboxes.ActionID()
{
  return &type metadata for RenameMailboxes.ActionID;
}

uint64_t sub_1A562B4F0()
{
  uint64_t result;

  result = sub_1A54F8ABC((uint64_t)&unk_1E4E68470);
  qword_1EE7F9680 = result;
  return result;
}

uint64_t sub_1A562B514(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  int v11;
  NSObject *v12;
  os_log_type_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;

  v3 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A594A764();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_DWORD *)(v1 + 8);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))(v10, a1, v6, v8);
  sub_1A55034B8(a1, (uint64_t)v5, type metadata accessor for MailboxTaskLogger);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v12 = sub_1A594A74C();
  v13 = sub_1A594C030();
  v14 = v13;
  if (os_log_type_enabled(v12, v13))
  {
    v15 = swift_slowAlloc();
    v28 = swift_slowAlloc();
    v33 = v28;
    *(_DWORD *)v15 = 68159491;
    LODWORD(v31) = 2;
    v30 = v7;
    sub_1A594C3CC();
    *(_WORD *)(v15 + 8) = 256;
    v16 = *(int *)(v3 + 20);
    v29 = v6;
    v17 = &v5[v16];
    LOBYTE(v31) = v5[v16];
    sub_1A594C3CC();
    *(_WORD *)(v15 + 11) = 2082;
    v26 = v11;
    v27 = v14;
    v19 = *((_QWORD *)v17 + 1);
    v18 = *((_QWORD *)v17 + 2);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v31 = sub_1A55791B0(v19, v18, &v33);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 21) = 1040;
    LODWORD(v31) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v15 + 27) = 512;
    LOWORD(v31) = *((_WORD *)v17 + 12);
    sub_1A594C3CC();
    *(_WORD *)(v15 + 31) = 2160;
    v31 = 0x786F626C69616DLL;
    sub_1A594C3CC();
    *(_WORD *)(v15 + 41) = 2085;
    v20 = *((_DWORD *)v17 + 10);
    v31 = *((_QWORD *)v17 + 4);
    v32 = v20;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v21 = sub_1A594B4A8();
    v31 = sub_1A55791B0(v21, v22, &v33);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC((uint64_t)v5, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v15 + 51) = 1024;
    LODWORD(v31) = v26;
    sub_1A594C3CC();
    _os_log_impl(&dword_1A4F90000, v12, (os_log_type_t)v27, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task for search #%u.", (uint8_t *)v15, 0x39u);
    v23 = v28;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v23, -1, -1);
    MEMORY[0x1A85B1964](v15, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v10, v29);
  }
  else
  {
    sub_1A55034FC((uint64_t)v5, type metadata accessor for MailboxTaskLogger);

    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
}

uint64_t sub_1A562B8B0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unint64_t *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  __int16 v27;
  __int16 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  unint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;

  v7 = type metadata accessor for TaskHistory.Previous(0);
  v37 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v30 - v11;
  v13 = sub_1A562ACF4(a2);
  v14 = *(_QWORD *)(v13 + 16);
  if (v14)
  {
    v31 = v3;
    v32 = v13;
    v33 = a3;
    v15 = 0;
    v35 = v13 + 32;
    v38 = *(_QWORD *)(a1 + 16);
    v36 = a1;
    v34 = v14;
    do
    {
      if (v38)
      {
        v16 = *(_DWORD *)(v35 + 4 * v15);
        v17 = v37;
        v18 = a1 + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80));
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v19 = *(_QWORD *)(v17 + 72);
        v20 = v38;
        while (1)
        {
          sub_1A55034B8(v18, (uint64_t)v12, type metadata accessor for TaskHistory.Previous);
          sub_1A55034B8((uint64_t)v12, (uint64_t)v9, type metadata accessor for TaskHistory.Previous);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            sub_1A55034FC((uint64_t)v9, type metadata accessor for TaskHistory.Previous);
          }
          else
          {
            v21 = *(_DWORD *)&v9[*(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797DD8) + 48)];
            sub_1A55034FC((uint64_t)v9, type metadata accessor for ClientCommand);
            if (v21 == v16)
            {
              sub_1A55034FC((uint64_t)v12, type metadata accessor for TaskHistory.Previous);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              a3 = v33;
              goto LABEL_14;
            }
          }
          sub_1A55034FC((uint64_t)v12, type metadata accessor for TaskHistory.Previous);
          v18 += v19;
          if (!--v20)
          {
            a1 = v36;
            swift_bridgeObjectRelease();
            v14 = v34;
            break;
          }
        }
      }
      ++v15;
    }
    while (v15 != v14);
    swift_bridgeObjectRelease();
    a3 = v33;
    v3 = v31;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  result = sub_1A562BB84();
  if ((~result & 0xF000000000000007) == 0)
  {
LABEL_14:
    v23 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7972F8);
    return (*(uint64_t (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a3, 1, 1, v23);
  }
  v24 = *v3 - 1;
  if (__OFSUB__(*v3, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v24 > 0xFFFFFFFFLL)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if ((unint64_t)v24 > 0x7FFFFFFFFFFFFFFELL)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v25 = *v3;
  if (HIDWORD(*v3))
  {
LABEL_28:
    __break(1u);
    return result;
  }
  v26 = result;
  v27 = *((unsigned __int8 *)v3 + 145);
  if (*((_BYTE *)v3 + 146))
    v28 = 256;
  else
    v28 = 0;
  v39 = 0;
  sub_1A5652260(v28 | v27, result, v25, a3);
  sub_1A562DA58(v26);
  v29 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7972F8);
  return (*(uint64_t (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(a3, 0, 1, v29);
}

unint64_t sub_1A562BB84()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v27;
  char v28[8];

  if (!*(_QWORD *)(*(_QWORD *)(v0 + 128) + 16))
  {
    v18 = *(_QWORD *)(v0 + 120);
    v19 = v18;
LABEL_6:
    sub_1A54E42F8(v19);
    return v18;
  }
  v1 = sub_1A54E3414();
  static MessageIdentifierRange.all.getter();
  MessageIdentifierSet.init(_:)((uint64_t)v28, (uint64_t)&type metadata for UID, v1, v2);
  v4 = v3;
  v6 = v5;
  v7 = HIDWORD(v5);
  v8 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v9 = sub_1A55C19FC(v8);
  v11 = v10;
  swift_bridgeObjectRelease();
  MessageIdentifierSet.subtracting(_:)(v9, v11 & 0xFFFFFFFFFFLL, v4, v6 & 0xFFFFFFFFFFLL);
  v13 = v12;
  v15 = v14;
  sub_1A54E3458(v9, v11, SBYTE4(v11));
  sub_1A54E3458(v4, v6, v7);
  v16 = MessageIdentifierSetNonEmpty.init(set:)(v13, v15 & 0xFFFFFFFFFFLL);
  if ((~v17 & 0xFF00000000) != 0)
  {
    v20 = v16;
    v21 = v17;
    v22 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AF80);
    v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1A59ABD40;
    v24 = swift_allocObject();
    *(_QWORD *)(v24 + 16) = v20;
    *(_BYTE *)(v24 + 28) = BYTE4(v21);
    *(_DWORD *)(v24 + 24) = v21;
    v25 = v24 | 0xA000000000000000;
    v19 = *(_QWORD *)(v27 + 120);
    *(_QWORD *)(v23 + 32) = v25;
    *(_QWORD *)(v23 + 40) = v19;
    *(_QWORD *)(v22 + 16) = v23;
    v18 = v22 | 0xC000000000000000;
    goto LABEL_6;
  }
  return 0xF000000000000007;
}

uint64_t sub_1A562BD38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  _BYTE *v13;
  NSObject *v14;
  os_log_type_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  unint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _BYTE v28[4];
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;

  v3 = v2;
  v6 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v28[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_1A594A764();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = &v28[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v10 + 16))(v13, a2, v9, v11);
  sub_1A55034B8(a2, (uint64_t)v8, type metadata accessor for MailboxTaskLogger);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v14 = sub_1A594A74C();
  v15 = sub_1A594C018();
  v16 = v15;
  if (os_log_type_enabled(v14, v15))
  {
    v17 = swift_slowAlloc();
    v32 = v9;
    v18 = v17;
    v31 = swift_slowAlloc();
    v36 = v31;
    *(_DWORD *)v18 = 68159235;
    LODWORD(v34) = 2;
    v29 = v16;
    sub_1A594C3CC();
    *(_WORD *)(v18 + 8) = 256;
    v19 = *(int *)(v6 + 20);
    v33 = a1;
    v20 = &v8[v19];
    LOBYTE(v34) = v8[v19];
    sub_1A594C3CC();
    *(_WORD *)(v18 + 11) = 2082;
    v30 = v10;
    v22 = *((_QWORD *)v20 + 1);
    v21 = *((_QWORD *)v20 + 2);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v34 = sub_1A55791B0(v22, v21, &v36);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 21) = 1040;
    LODWORD(v34) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v18 + 27) = 512;
    LOWORD(v34) = *((_WORD *)v20 + 12);
    sub_1A594C3CC();
    *(_WORD *)(v18 + 31) = 2160;
    v34 = 0x786F626C69616DLL;
    sub_1A594C3CC();
    *(_WORD *)(v18 + 41) = 2085;
    v23 = *((_DWORD *)v20 + 10);
    v34 = *((_QWORD *)v20 + 4);
    v35 = v23;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v24 = sub_1A594B4A8();
    v34 = sub_1A55791B0(v24, v25, &v36);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC((uint64_t)v8, type metadata accessor for MailboxTaskLogger);
    _os_log_impl(&dword_1A4F90000, v14, (os_log_type_t)v29, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] User search did fail.", (uint8_t *)v18, 0x33u);
    v26 = v31;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v26, -1, -1);
    MEMORY[0x1A85B1964](v18, -1, -1);

    (*(void (**)(_BYTE *, uint64_t))(v30 + 8))(v13, v32);
  }
  else
  {
    sub_1A55034FC((uint64_t)v8, type metadata accessor for MailboxTaskLogger);

    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v13, v9);
  }
  return sub_1A5516F70(*(unsigned int *)(v3 + 8), *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 152), *(unsigned int *)(v3 + 160) | ((unint64_t)*(unsigned __int8 *)(v3 + 164) << 32));
}

void sub_1A562C0F0(const void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1A562CA88(a1, a2, a3, a4, a6, a7);
}

void sub_1A562C0FC(uint64_t a1, unint64_t a2, uint64_t a3, void *a4, char a5, uint64_t a6, uint64_t a7)
{
  sub_1A562D194(a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1A562C128()
{
  uint64_t v0;

  return sub_1A5516F70(*(unsigned int *)(v0 + 8), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 152), *(unsigned int *)(v0 + 160) | ((unint64_t)*(unsigned __int8 *)(v0 + 164) << 32));
}

uint64_t sub_1A562C168()
{
  return 0x614D686372616553;
}

uint64_t sub_1A562C18C()
{
  sub_1A594CE64();
  sub_1A594CEAC();
  sub_1A594CE88();
  return sub_1A594CED0();
}

uint64_t sub_1A562C1E8()
{
  sub_1A594CEAC();
  return sub_1A594CE88();
}

uint64_t sub_1A562C224()
{
  sub_1A594CE64();
  sub_1A594CEAC();
  sub_1A594CE88();
  return sub_1A594CED0();
}

BOOL sub_1A562C27C(uint64_t a1, uint64_t a2)
{
  return *(_DWORD *)a1 == *(_DWORD *)a2
      && (*(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned int *)(a1 + 16) << 32)) == (*(unsigned int *)(a2 + 16) | ((unint64_t)*(unsigned int *)(a2 + 16) << 32))
      && sub_1A54FF30C(*(_QWORD *)(a1 + 8), *(_QWORD *)(a2 + 8));
}

uint64_t sub_1A562C2D8(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for SearchMailbox.SearchID(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for SearchMailbox.SearchID(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for SearchMailbox.SearchID()
{
  return &type metadata for SearchMailbox.SearchID;
}

uint64_t destroy for SearchMailbox(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 64);
  swift_bridgeObjectRelease();
  sub_1A54E472C(*(_QWORD *)(a1 + 120));
  result = swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 164) != 255)
  {
    v3 = *(unsigned int *)(a1 + 160) | ((unint64_t)*(unsigned __int8 *)(a1 + 164) << 32);
    return sub_1A54E3458(*(_QWORD *)(a1 + 152), v3, SBYTE4(v3));
  }
  return result;
}

uint64_t initializeWithCopy for SearchMailbox(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  unsigned __int8 v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v5 = a2 + 64;
  v6 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 88) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v8(a1 + 64, v5, v7);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  v9 = *(_QWORD *)(a2 + 120);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54E42F8(v9);
  v10 = *(_QWORD *)(a2 + 128);
  v11 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 120) = v9;
  *(_QWORD *)(a1 + 128) = v10;
  *(_QWORD *)(a1 + 136) = v11;
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *(_WORD *)(a1 + 145) = *(_WORD *)(a2 + 145);
  v12 = (uint64_t *)(a2 + 152);
  v13 = *(_BYTE *)(a2 + 164);
  v14 = *(unsigned int *)(a2 + 160);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v13 == 255)
  {
    *(_QWORD *)(a1 + 152) = *v12;
    *(_QWORD *)(a1 + 157) = *(uint64_t *)((char *)v12 + 5);
  }
  else
  {
    v15 = v14 & 0xFFFFFF00FFFFFFFFLL | ((unint64_t)v13 << 32);
    v16 = *v12;
    sub_1A54E4334(v16, v15, SBYTE4(v15));
    *(_QWORD *)(a1 + 152) = v16;
    *(_DWORD *)(a1 + 160) = v15;
    *(_BYTE *)(a1 + 164) = BYTE4(v15);
  }
  return a1;
}

uint64_t assignWithCopy for SearchMailbox(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 64), (uint64_t *)(a2 + 64));
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  v4 = *(_QWORD *)(a2 + 120);
  sub_1A54E42F8(v4);
  v5 = *(_QWORD *)(a1 + 120);
  *(_QWORD *)(a1 + 120) = v4;
  sub_1A54E472C(v5);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = v6;
  *(_BYTE *)(a1 + 145) = *(_BYTE *)(a2 + 145);
  *(_BYTE *)(a1 + 146) = *(_BYTE *)(a2 + 146);
  v7 = (uint64_t *)(a1 + 152);
  v8 = (uint64_t *)(a2 + 152);
  v9 = *(unsigned int *)(a2 + 160) | ((unint64_t)*(unsigned __int8 *)(a2 + 164) << 32);
  if (*(unsigned __int8 *)(a1 + 164) == 255)
  {
    if (BYTE4(v9) == 255)
    {
      v10 = *v8;
      *(_QWORD *)(a1 + 157) = *(uint64_t *)((char *)v8 + 5);
      *v7 = v10;
    }
    else
    {
      v12 = *v8;
      sub_1A54E4334(*v8, v9, SBYTE4(v9));
      *(_QWORD *)(a1 + 152) = v12;
      *(_DWORD *)(a1 + 160) = v9;
      *(_BYTE *)(a1 + 164) = BYTE4(v9);
    }
  }
  else if (BYTE4(v9) == 255)
  {
    sub_1A552AB80(a1 + 152);
    v11 = *(uint64_t *)((char *)v8 + 5);
    *v7 = *v8;
    *(_QWORD *)(a1 + 157) = v11;
  }
  else
  {
    v13 = *v8;
    sub_1A54E4334(*v8, v9, SBYTE4(v9));
    v14 = *(_QWORD *)(a1 + 152);
    v15 = *(unsigned int *)(a1 + 160);
    *(_QWORD *)(a1 + 152) = v13;
    *(_DWORD *)(a1 + 160) = v9;
    v16 = *(_BYTE *)(a1 + 164);
    *(_BYTE *)(a1 + 164) = BYTE4(v9);
    sub_1A54E3458(v14, v15, v16);
  }
  return a1;
}

__n128 __swift_memcpy165_8_0(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[9];
  *(_QWORD *)(a1 + 157) = *(_QWORD *)((char *)a2 + 157);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for SearchMailbox(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  unsigned __int8 v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  __swift_destroy_boxed_opaque_existential_1(a1 + 64);
  v4 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  v5 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  v6 = *(_QWORD *)(a1 + 120);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  sub_1A54E472C(v6);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *(_BYTE *)(a1 + 145) = *(_BYTE *)(a2 + 145);
  *(_BYTE *)(a1 + 146) = *(_BYTE *)(a2 + 146);
  v7 = (_QWORD *)(a2 + 152);
  v8 = *(_BYTE *)(a1 + 164);
  if (v8 != 255)
  {
    v9 = *(unsigned int *)(a2 + 160) | ((unint64_t)*(unsigned __int8 *)(a2 + 164) << 32);
    if (HIDWORD(v9) <= 0xFE)
    {
      v10 = *(unsigned int *)(a1 + 160);
      v11 = *(_QWORD *)(a1 + 152);
      *(_QWORD *)(a1 + 152) = *v7;
      *(_DWORD *)(a1 + 160) = v9;
      *(_BYTE *)(a1 + 164) = BYTE4(v9);
      sub_1A54E3458(v11, v10, v8);
      return a1;
    }
    sub_1A552AB80(a1 + 152);
  }
  *(_QWORD *)(a1 + 152) = *v7;
  *(_QWORD *)(a1 + 157) = *(_QWORD *)(a2 + 157);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchMailbox(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 165))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchMailbox(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 164) = 0;
    *(_DWORD *)(result + 160) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 165) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 165) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchMailbox()
{
  return &type metadata for SearchMailbox;
}

unint64_t sub_1A562C994()
{
  unint64_t result;

  result = qword_1EE7972F0;
  if (!qword_1EE7972F0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AAF20, &type metadata for SearchMailbox.CommandID);
    atomic_store(result, (unint64_t *)&qword_1EE7972F0);
  }
  return result;
}

unint64_t sub_1A562C9D8(uint64_t a1)
{
  unint64_t result;

  result = sub_1A562C9FC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A562C9FC()
{
  unint64_t result;

  result = qword_1EE797300[0];
  if (!qword_1EE797300[0])
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AAEDC, &type metadata for SearchMailbox);
    atomic_store(result, qword_1EE797300);
  }
  return result;
}

unint64_t sub_1A562CA44()
{
  unint64_t result;

  result = qword_1EE7A8DA8;
  if (!qword_1EE7A8DA8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AAF48, &type metadata for SearchMailbox.SearchID);
    atomic_store(result, (unint64_t *)&qword_1EE7A8DA8);
  }
  return result;
}

void sub_1A562CA88(const void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  int v26;
  _BYTE *v27;
  uint64_t v28;
  unint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  _OWORD *v32;
  _BYTE *v33;
  unint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  unint64_t v53;
  uint64_t v54;
  os_log_t v55;
  uint64_t v56;
  uint64_t v57;
  NSObject *v58;
  unsigned __int8 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unsigned int v67;
  _BYTE v68[12];
  int v69;
  os_log_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE *v76;
  _BYTE *v77;
  uint64_t v78;
  int v79;
  _OWORD v80[36];
  uint64_t v81;
  unsigned int v82;
  unsigned __int8 v83;
  uint64_t v84[2];
  _BYTE v85[584];
  _BYTE v86[584];
  _BYTE v87[600];

  v75 = a6;
  sub_1A552316C(a1, v85);
  sub_1A552316C(v85, v87);
  v11 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v11);
  v76 = &v68[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_1A594A764();
  v78 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v77 = &v68[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = sub_1A562ACF4(a4);
  v16 = *(_QWORD *)(v15 + 16);
  if (!v16)
  {
LABEL_5:
    swift_bridgeObjectRelease();
    return;
  }
  v73 = v13;
  v74 = v6;
  v17 = 0;
  while ((sub_1A55E5990(*(_DWORD *)(v15 + 4 * v17 + 32), a2, a3) & 1) == 0)
  {
    if (v16 == ++v17)
      goto LABEL_5;
  }
  swift_bridgeObjectRelease();
  v18 = v74;
  if ((*(_BYTE *)(v74 + 146) & 1) != 0)
  {
    sub_1A552316C(a1, v86);
    if (sub_1A5523B90((uint64_t)v86) != 11)
      return;
    v19 = *(_QWORD *)sub_1A5524678((uint64_t)v86);
    v20 = sub_1A54E3414();
    v21 = MessageIdentifierSet.init()(&type metadata for UID, v20);
    v81 = v21;
    v82 = v22;
    v83 = BYTE4(v22);
    v23 = *(_QWORD *)(v19 + 16);
    if (v23)
    {
      v24 = (int *)(v19 + 32);
      sub_1A552316C(v87, v80);
      sub_1A5524678((uint64_t)v80);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v25 = v73;
      do
      {
        v26 = *v24++;
        v79 = v26;
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
        MessageIdentifierSet.insert(_:)();
        --v23;
      }
      while (v23);
      sub_1A5529E00((uint64_t)a1);
      v27 = (_BYTE *)v81;
      v28 = v82;
      v29 = v83;
      v30 = v76;
      v31 = v25;
    }
    else
    {
      v28 = v22;
      v29 = HIDWORD(v22);
      v31 = v73;
      v30 = v76;
      v27 = (_BYTE *)v21;
    }
    v36 = v77;
    v35 = v78;
  }
  else
  {
    sub_1A552316C(a1, v86);
    if (sub_1A5523B90((uint64_t)v86) != 12)
      return;
    v32 = (_OWORD *)sub_1A5524678((uint64_t)v86);
    v80[0] = *v32;
    v80[1] = v32[1];
    v80[2] = v32[2];
    ExtendedSearchResponse.matchedUIDs.getter();
    if ((~v34 & 0xFF00000000) == 0)
      return;
    v27 = v33;
    v28 = v34;
    v29 = HIDWORD(v34);
    v31 = v73;
    v36 = v77;
    v35 = v78;
    v30 = v76;
  }
  v72 = *(_DWORD *)(v18 + 8);
  v37 = v75;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v35 + 16))(v36, v75, v31);
  sub_1A55034B8(v37, (uint64_t)v30, type metadata accessor for MailboxTaskLogger);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  sub_1A54E4334((uint64_t)v27, v28, v29);
  v75 = v29;
  sub_1A54E4334((uint64_t)v27, v28, v29);
  v38 = sub_1A594A74C();
  v39 = sub_1A594C030();
  v40 = v39;
  if (os_log_type_enabled(v38, v39))
  {
    v41 = swift_slowAlloc();
    v76 = v27;
    v42 = v41;
    v71 = swift_slowAlloc();
    v84[0] = v71;
    *(_DWORD *)v42 = 68159747;
    LODWORD(v81) = 2;
    v43 = v28;
    sub_1A594C3CC();
    *(_WORD *)(v42 + 8) = 256;
    v44 = *(int *)(v11 + 20);
    v70 = v38;
    v45 = &v30[v44];
    LOBYTE(v81) = v30[v44];
    sub_1A594C3CC();
    *(_WORD *)(v42 + 11) = 2082;
    v69 = v40;
    v46 = (uint64_t)v30;
    v47 = *((_QWORD *)v45 + 1);
    v48 = *((_QWORD *)v45 + 2);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v81 = sub_1A55791B0(v47, v48, v84);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v42 + 21) = 1040;
    LODWORD(v81) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v42 + 27) = 512;
    LOWORD(v81) = *((_WORD *)v45 + 12);
    sub_1A594C3CC();
    *(_WORD *)(v42 + 31) = 2160;
    v81 = 0x786F626C69616DLL;
    sub_1A594C3CC();
    *(_WORD *)(v42 + 41) = 2085;
    v49 = *((_DWORD *)v45 + 10);
    v81 = *((_QWORD *)v45 + 4);
    v82 = v49;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v50 = sub_1A594B4A8();
    v81 = sub_1A55791B0(v50, v51, v84);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC(v46, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v42 + 51) = 2048;
    sub_1A54E3414();
    v52 = v75;
    v53 = v28 | ((unint64_t)v75 << 32);
    v54 = MessageIdentifierSet.count.getter((uint64_t)v76, v53);
    sub_1A54E3458((uint64_t)v76, v28, v52);
    v81 = v54;
    sub_1A594C3CC();
    sub_1A54E3458((uint64_t)v76, v28, v52);
    *(_WORD *)(v42 + 61) = 1024;
    LODWORD(v81) = v72;
    sub_1A594C3CC();
    v55 = v70;
    _os_log_impl(&dword_1A4F90000, v70, (os_log_type_t)v69, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Search returned %ld UIDs for search #%u.", (uint8_t *)v42, 0x43u);
    v56 = v71;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v56, -1, -1);
    v57 = v42;
    v27 = v76;
    v18 = v74;
    MEMORY[0x1A85B1964](v57, -1, -1);

    (*(void (**)(_BYTE *, uint64_t))(v78 + 8))(v77, v73);
  }
  else
  {
    v58 = v38;
    v59 = v75;
    sub_1A54E3458((uint64_t)v27, v28, v75);
    sub_1A55034FC((uint64_t)v30, type metadata accessor for MailboxTaskLogger);
    sub_1A54E3458((uint64_t)v27, v28, v59);

    (*(void (**)(_BYTE *, uint64_t))(v78 + 8))(v36, v31);
    v53 = v28 | ((unint64_t)v59 << 32);
    v52 = v59;
    v43 = v28;
  }
  v60 = sub_1A55E1944(*(_QWORD *)v18, (uint64_t)v27, v53);
  v62 = v61;
  sub_1A54E3458((uint64_t)v27, v43, v52);
  sub_1A54E3414();
  v63 = MessageIdentifierSetNonEmpty.init(set:)(v60, v62 & 0xFFFFFFFFFFLL);
  v65 = v64;
  v67 = *(_DWORD *)(v18 + 160);
  v66 = v18 + 160;
  sub_1A5503B8C(*(_QWORD *)(v66 - 8), v67 | ((unint64_t)*(unsigned __int8 *)(v66 + 4) << 32));
  *(_QWORD *)(v66 - 8) = v63;
  *(_BYTE *)(v66 + 4) = BYTE4(v65);
  *(_DWORD *)v66 = v65;
}

void sub_1A562D194(unint64_t a1, uint64_t a2, void *a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  os_log_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t, double);
  NSObject *v46;
  os_log_type_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  unint64_t v54;
  int v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  os_log_t v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t);
  char *v65;
  char *v66;
  os_log_t v67;
  os_log_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;

  v72 = a2;
  v10 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v66 - v14;
  v16 = sub_1A594A764();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v19);
  v24 = (char *)&v66 - v20;
  if (a4)
  {
    if (a4 == 1)
    {
      v25 = v21;
      v26 = v22;
      (*(void (**)(char *, uint64_t, uint64_t, double))(v22 + 16))((char *)&v66 - v20, a6, v21, v23);
      sub_1A55034B8(a6, (uint64_t)v15, type metadata accessor for MailboxTaskLogger);
      sub_1A55235A0(a1);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      sub_1A55235A0(a1);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A55235A0(a1);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v27 = sub_1A594A74C();
      v28 = sub_1A594C018();
      v29 = v28;
      if (os_log_type_enabled(v27, v28))
      {
        v30 = swift_slowAlloc();
        v71 = v26;
        v31 = v30;
        v69 = swift_slowAlloc();
        v75 = v69;
        *(_DWORD *)v31 = 68159491;
        LODWORD(v73) = 2;
        v66 = (char *)&v73 + 4;
        sub_1A594C3CC();
        *(_WORD *)(v31 + 8) = 256;
        v32 = *(int *)(v10 + 20);
        v68 = v27;
        v33 = &v15[v32];
        LOBYTE(v73) = v15[v32];
        sub_1A594C3CC();
        *(_WORD *)(v31 + 11) = 2082;
        v70 = v25;
        v34 = *((_QWORD *)v33 + 1);
        v35 = *((_QWORD *)v33 + 2);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v73 = sub_1A55791B0(v34, v35, &v75);
        LODWORD(v67) = v29;
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v31 + 21) = 1040;
        LODWORD(v73) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v31 + 27) = 512;
        LOWORD(v73) = *((_WORD *)v33 + 12);
        sub_1A594C3CC();
        *(_WORD *)(v31 + 31) = 2160;
        v73 = 0x786F626C69616DLL;
        sub_1A594C3CC();
        *(_WORD *)(v31 + 41) = 2085;
        v36 = *((_DWORD *)v33 + 10);
        v73 = *((_QWORD *)v33 + 4);
        v74 = v36;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v37 = sub_1A594B4A8();
        v73 = sub_1A55791B0(v37, v38, &v75);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55034FC((uint64_t)v15, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v31 + 51) = 2080;
        sub_1A55235A0(a1);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        ResponseText.debugDescription.getter(a1, v72, a3);
        v40 = v39;
        v42 = v41;
        sub_1A5524084(a1);
        swift_bridgeObjectRelease();
        v73 = sub_1A55791B0(v40, v42, &v75);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A5524084(a1);
        swift_bridgeObjectRelease();
        sub_1A5524084(a1);
        swift_bridgeObjectRelease();
        v43 = v68;
        _os_log_impl(&dword_1A4F90000, v68, (os_log_type_t)v67, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] User search failed with NO %s.", (uint8_t *)v31, 0x3Du);
        v44 = v69;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v44, -1, -1);
        MEMORY[0x1A85B1964](v31, -1, -1);

        sub_1A5524084(a1);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v71 + 8))(v24, v70);
        return;
      }
      sub_1A5524084(a1);
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v15, type metadata accessor for MailboxTaskLogger);
      sub_1A5524084(a1);
      swift_bridgeObjectRelease();
      sub_1A5524084(a1);

      swift_bridgeObjectRelease();
      v64 = *(void (**)(char *, uint64_t))(v26 + 8);
      v65 = v24;
    }
    else
    {
      v45 = *(void (**)(char *, uint64_t, uint64_t, double))(v22 + 16);
      v25 = v21;
      v71 = v22;
      v45(v18, a6, v21, v23);
      sub_1A55034B8(a6, (uint64_t)v12, type metadata accessor for MailboxTaskLogger);
      sub_1A55235A0(a1);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      sub_1A55235A0(a1);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A55235A0(a1);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v46 = sub_1A594A74C();
      v47 = sub_1A594C018();
      v48 = v47;
      if (os_log_type_enabled(v46, v47))
      {
        v49 = swift_slowAlloc();
        LODWORD(v68) = v48;
        v50 = v49;
        v69 = swift_slowAlloc();
        v75 = v69;
        *(_DWORD *)v50 = 68159491;
        LODWORD(v73) = 2;
        v66 = (char *)&v73 + 4;
        sub_1A594C3CC();
        *(_WORD *)(v50 + 8) = 256;
        v51 = *(int *)(v10 + 20);
        v67 = v46;
        v52 = &v12[v51];
        LOBYTE(v73) = v12[v51];
        sub_1A594C3CC();
        *(_WORD *)(v50 + 11) = 2082;
        v70 = v25;
        v53 = *((_QWORD *)v52 + 1);
        v54 = *((_QWORD *)v52 + 2);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v73 = sub_1A55791B0(v53, v54, &v75);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v50 + 21) = 1040;
        LODWORD(v73) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v50 + 27) = 512;
        LOWORD(v73) = *((_WORD *)v52 + 12);
        sub_1A594C3CC();
        *(_WORD *)(v50 + 31) = 2160;
        v73 = 0x786F626C69616DLL;
        sub_1A594C3CC();
        *(_WORD *)(v50 + 41) = 2085;
        v55 = *((_DWORD *)v52 + 10);
        v73 = *((_QWORD *)v52 + 4);
        v74 = v55;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v56 = sub_1A594B4A8();
        v73 = sub_1A55791B0(v56, v57, &v75);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55034FC((uint64_t)v12, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v50 + 51) = 2080;
        sub_1A55235A0(a1);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        ResponseText.debugDescription.getter(a1, v72, a3);
        v59 = v58;
        v61 = v60;
        sub_1A5524084(a1);
        swift_bridgeObjectRelease();
        v73 = sub_1A55791B0(v59, v61, &v75);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A5524084(a1);
        swift_bridgeObjectRelease();
        sub_1A5524084(a1);
        swift_bridgeObjectRelease();
        v62 = v67;
        _os_log_impl(&dword_1A4F90000, v67, (os_log_type_t)v68, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] User search failed with BAD %s.", (uint8_t *)v50, 0x3Du);
        v63 = v69;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v63, -1, -1);
        MEMORY[0x1A85B1964](v50, -1, -1);

        sub_1A5524084(a1);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v71 + 8))(v18, v70);
        return;
      }
      sub_1A5524084(a1);
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v12, type metadata accessor for MailboxTaskLogger);
      sub_1A5524084(a1);
      swift_bridgeObjectRelease();
      sub_1A5524084(a1);

      swift_bridgeObjectRelease();
      v64 = *(void (**)(char *, uint64_t))(v71 + 8);
      v65 = v18;
    }
    v64(v65, v25);
  }
}

unint64_t sub_1A562DA58(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return sub_1A54E472C(result);
  return result;
}

uint64_t sub_1A562DA6C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A562DA90()
{
  uint64_t v0;
  unint64_t v1;

  if (*(unsigned __int8 *)(v0 + 28) != 255)
  {
    v1 = *(unsigned int *)(v0 + 24) | ((unint64_t)*(unsigned __int8 *)(v0 + 28) << 32);
    sub_1A54E3458(*(_QWORD *)(v0 + 16), v1, SBYTE4(v1));
  }
  return swift_deallocObject();
}

uint64_t storeEnumTagSinglePayload for SearchMailbox.CommandID(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A562DB10 + 4 * asc_1A59AAEAC[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A562DB30 + 4 * byte_1A59AAEB1[v4]))();
}

_BYTE *sub_1A562DB10(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A562DB30(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A562DB38(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A562DB40(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A562DB48(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A562DB50(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SearchMailbox.CommandID()
{
  return &type metadata for SearchMailbox.CommandID;
}

uint64_t sub_1A562DB6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;
  uint64_t *v7;
  _QWORD *v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;

  v22 = *(_QWORD *)(a3 + 16);
  if (v22)
  {
    v21 = *(_QWORD *)(a2 + 16);
    swift_retain();
    swift_retain();
    result = swift_retain();
    v6 = 0;
    v7 = (uint64_t *)(a3 + 40);
    v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    while (v21 != v6)
    {
      v9 = *(_DWORD *)(a2 + 4 * v6 + 32);
      v10 = *(v7 - 1);
      v11 = *v7;
      swift_bridgeObjectRetain_n();
      v12 = MessageFlagUpdate.init(message:flags:gmailLabels:)(v9, v10, v11);
      v14 = v13;
      v16 = v15;
      sub_1A562FDC0(v12, v13, v15);
      swift_bridgeObjectRelease();
      if (v16 == 1)
      {
        result = swift_bridgeObjectRelease();
      }
      else
      {
        sub_1A562FDD4(v12, v14, v16);
        swift_bridgeObjectRelease();
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_1A54F1FAC(0, v8[2] + 1, 1, v8);
          v8 = (_QWORD *)result;
        }
        v18 = v8[2];
        v17 = v8[3];
        if (v18 >= v17 >> 1)
        {
          result = (uint64_t)sub_1A54F1FAC((_QWORD *)(v17 > 1), v18 + 1, 1, v8);
          v8 = (_QWORD *)result;
        }
        v8[2] = v18 + 1;
        v19 = &v8[3 * v18];
        *((_DWORD *)v19 + 8) = v12;
        *((_QWORD *)&v20 + 1) = v14;
        *(_QWORD *)&v20 = v12;
        *(_QWORD *)((char *)v19 + 36) = v20 >> 32;
        v19[6] = v16;
      }
      ++v6;
      v7 += 2;
      if (v22 == v6)
      {
        swift_release();
        swift_release();
        swift_release();
        return (uint64_t)v8;
      }
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

uint64_t sub_1A562DD28()
{
  uint64_t result;

  result = sub_1A54F8ABC((uint64_t)&unk_1E4E6AE08);
  qword_1EE7F9690 = result;
  return result;
}

int64_t sub_1A562DD4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  int64_t result;
  char v10;
  _QWORD *v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  char v14;
  uint64_t v15;

  v8 = *(_QWORD *)(a4 + 112);
  if (!*(_QWORD *)(v8 + 16) || (result = sub_1A54FDC2C(a1), (v10 & 1) == 0))
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A555F508(0, 1);
    sub_1A555F508(a2, a3);
    goto LABEL_7;
  }
  v11 = (_QWORD *)(*(_QWORD *)(v8 + 56) + 16 * result);
  v12 = v11[1];
  if (*v11 == 2)
  {
    if (a2 != 2)
      goto LABEL_7;
  }
  else
  {
    if (a2 == 2)
      goto LABEL_7;
    result = static FlagsUpdate.__derived_struct_equals(_:_:)(*v11 & 0xFFFFFFFF01010101, a2 & 0xFFFFFFFF01010101);
    if ((result & 1) == 0)
      goto LABEL_7;
  }
  if (!v12)
  {
    if (!a3)
      return result;
    swift_bridgeObjectRelease();
LABEL_7:
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v15 = *(_QWORD *)(a4 + 112);
    *(_QWORD *)(a4 + 112) = 0x8000000000000000;
    sub_1A55B2DAC(a2, a3, a1, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(a4 + 112) = v15;
    swift_bridgeObjectRelease();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return sub_1A5555830(a2, a3, a1);
  }
  if (!a3)
    goto LABEL_7;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v14 = sub_1A54ED14C(v12, a3);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v14 & 1) == 0)
    goto LABEL_7;
  return result;
}

uint64_t sub_1A562DECC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  char *v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  unsigned int v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t, __n128);
  char *v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  int v71;
  uint64_t v72;
  unint64_t v73;
  char *v74;
  NSObject *v75;
  os_log_type_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  unint64_t v82;
  int v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  uint64_t v87;
  unsigned int v88;
  uint64_t v89;
  char v90;
  char *v91;
  uint64_t v92;
  NSObject *v93;
  os_log_type_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  int v101;
  uint64_t v102;
  unint64_t v103;
  char *v105;
  int v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  int v120;
  uint64_t v121;
  uint64_t v122;
  int v123;
  uint64_t v124;
  uint64_t v125;
  char v126;

  v3 = v2;
  v117 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v117);
  v7 = (char *)&v105 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v114 = (uint64_t)&v105 - v9;
  MEMORY[0x1E0C80A78](v10);
  v110 = (uint64_t)&v105 - v11;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v105 - v13;
  v15 = sub_1A594A764();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v116 = (char *)&v105 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v115 = (char *)&v105 - v19;
  MEMORY[0x1E0C80A78](v20);
  v111 = (char *)&v105 - v21;
  v24.n128_f64[0] = MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v105 - v23;
  v125 = 0;
  v126 = 1;
  v26 = *(_BYTE *)(a1 + 168) == 1;
  v118 = v27;
  if (v26)
  {
    v28 = *(_QWORD *)(a1 + 152);
    v112 = *(_QWORD *)(a1 + 160);
    v113 = a2;
    v29 = v16;
    v31 = (char *)&v105 - v23;
    v32 = v7;
    v33 = *(_DWORD *)(v3 + 48);
    v34 = v14;
    v35 = *(_QWORD *)(v3 + 40);
    v122 = *(_QWORD *)(a1 + 144);
    v30 = v122;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v36 = v35;
    v14 = v34;
    v37 = v33;
    v7 = v32;
    v25 = v31;
    sub_1A551B5D0((uint64_t)&v122, v36, v37, 0, (uint64_t)&v125);
    v38 = v30;
    v16 = v29;
    v39 = v28;
    v15 = v118;
    a2 = v113;
    sub_1A54E8FCC(v38, v39, v112, 1);
    v40 = v122;
    *(_QWORD *)(a1 + 152) = 0;
    *(_QWORD *)(a1 + 160) = 0;
    *(_QWORD *)(a1 + 144) = v40;
    *(_BYTE *)(a1 + 168) = 1;
  }
  v41 = a1 + 144;
  if (*(_QWORD *)(*(_QWORD *)(v3 + 112) + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v16 + 16))(v25, a2, v15, v24);
    sub_1A55034B8(a2, (uint64_t)v14, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    sub_1A55101C0(v3, (uint64_t)&v122);
    v42 = sub_1A594A74C();
    v43 = sub_1A594C030();
    v44 = v43;
    if (os_log_type_enabled(v42, v43))
    {
      v45 = swift_slowAlloc();
      v112 = v41;
      v46 = v45;
      v108 = swift_slowAlloc();
      v121 = v108;
      *(_DWORD *)v46 = 68159491;
      LODWORD(v119) = 2;
      v106 = v44;
      sub_1A594C3CC();
      *(_WORD *)(v46 + 8) = 256;
      v47 = *(int *)(v117 + 20);
      v105 = v14;
      v109 = v7;
      v48 = &v14[v47];
      LOBYTE(v119) = v14[v47];
      sub_1A594C3CC();
      *(_WORD *)(v46 + 11) = 2082;
      v113 = v3;
      v107 = v25;
      v49 = *((_QWORD *)v48 + 1);
      v50 = *((_QWORD *)v48 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v119 = sub_1A55791B0(v49, v50, &v121);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v46 + 21) = 1040;
      LODWORD(v119) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v46 + 27) = 512;
      LOWORD(v119) = *((_WORD *)v48 + 12);
      sub_1A594C3CC();
      *(_WORD *)(v46 + 31) = 2160;
      v119 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v46 + 41) = 2085;
      v51 = *((_QWORD *)v48 + 4);
      v52 = *((_DWORD *)v48 + 10);
      v7 = v109;
      v119 = v51;
      v120 = v52;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v53 = sub_1A594B4A8();
      v119 = sub_1A55791B0(v53, v54, &v121);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v105, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v46 + 51) = 2048;
      v55 = *(_QWORD *)(v124 + 16);
      sub_1A5510250((uint64_t)&v122);
      v119 = v55;
      v15 = v118;
      v3 = v113;
      sub_1A594C3CC();
      _os_log_impl(&dword_1A4F90000, v42, (os_log_type_t)v106, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Sent %ld changes to the persistence.", (uint8_t *)v46, 0x3Du);
      v56 = v108;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v56, -1, -1);
      v57 = v46;
      v41 = v112;
      MEMORY[0x1A85B1964](v57, -1, -1);

      (*(void (**)(char *, uint64_t))(v16 + 8))(v107, v15);
    }
    else
    {
      sub_1A5510250((uint64_t)&v122);
      sub_1A55034FC((uint64_t)v14, type metadata accessor for MailboxTaskLogger);

      (*(void (**)(char *, uint64_t))(v16 + 8))(v25, v15);
    }
  }
  v58 = v125;
  if (v126 != 1)
  {
    v74 = v116;
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v16 + 16))(v116, a2, v15, v24);
    sub_1A55034B8(a2, (uint64_t)v7, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v75 = sub_1A594A74C();
    v76 = sub_1A594C030();
    if (os_log_type_enabled(v75, v76))
    {
      v77 = swift_slowAlloc();
      v112 = v41;
      v78 = v77;
      v115 = (char *)swift_slowAlloc();
      v119 = (uint64_t)v115;
      *(_DWORD *)v78 = 68159491;
      LODWORD(v122) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v78 + 8) = 256;
      v79 = *(int *)(v117 + 20);
      v109 = v7;
      v80 = &v7[v79];
      LOBYTE(v122) = *v80;
      sub_1A594C3CC();
      *(_WORD *)(v78 + 11) = 2082;
      v113 = v3;
      v117 = v16;
      v81 = *((_QWORD *)v80 + 1);
      v82 = *((_QWORD *)v80 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v122 = sub_1A55791B0(v81, v82, &v119);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v78 + 21) = 1040;
      LODWORD(v122) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v78 + 27) = 512;
      LOWORD(v122) = *((_WORD *)v80 + 12);
      sub_1A594C3CC();
      *(_WORD *)(v78 + 31) = 2160;
      v122 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v78 + 41) = 2085;
      v83 = *((_DWORD *)v80 + 10);
      v122 = *((_QWORD *)v80 + 4);
      v123 = v83;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v84 = sub_1A594B4A8();
      v122 = sub_1A55791B0(v84, v85, &v119);
      v3 = v113;
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v109, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v78 + 51) = 2048;
      v122 = v58;
      sub_1A594C3CC();
      _os_log_impl(&dword_1A4F90000, v75, v76, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Updating local HIGHESTMODSEQ to %llu.", (uint8_t *)v78, 0x3Du);
      v86 = v115;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v86, -1, -1);
      MEMORY[0x1A85B1964](v78, -1, -1);

      (*(void (**)(char *, uint64_t))(v117 + 8))(v116, v118);
    }
    else
    {
      sub_1A55034FC((uint64_t)v7, type metadata accessor for MailboxTaskLogger);

      (*(void (**)(char *, uint64_t))(v16 + 8))(v74, v15);
    }
    v87 = *(_QWORD *)(v3 + 40);
    v88 = *(_DWORD *)(v3 + 48);
    v89 = v58;
    v90 = 0;
    return sub_1A551CC48(v89, v90, v87, v88);
  }
  v59 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v16 + 16);
  if (v125)
  {
    v60 = v115;
    v59(v115, a2, v15, v24);
    v61 = v114;
    sub_1A55034B8(a2, v114, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v62 = sub_1A594A74C();
    v63 = sub_1A594C030();
    if (os_log_type_enabled(v62, v63))
    {
      v64 = swift_slowAlloc();
      v112 = v41;
      v65 = v64;
      v66 = swift_slowAlloc();
      v119 = v66;
      *(_DWORD *)v65 = 68159235;
      LODWORD(v122) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v65 + 8) = 256;
      v67 = *(int *)(v117 + 20);
      v117 = v16;
      v68 = v61 + v67;
      LOBYTE(v122) = *(_BYTE *)(v61 + v67);
      sub_1A594C3CC();
      *(_WORD *)(v65 + 11) = 2082;
      v113 = v3;
      v69 = *(_QWORD *)(v68 + 8);
      v70 = *(_QWORD *)(v68 + 16);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v122 = sub_1A55791B0(v69, v70, &v119);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v65 + 21) = 1040;
      LODWORD(v122) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v65 + 27) = 512;
      LOWORD(v122) = *(_WORD *)(v68 + 24);
      sub_1A594C3CC();
      *(_WORD *)(v65 + 31) = 2160;
      v122 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v65 + 41) = 2085;
      v71 = *(_DWORD *)(v68 + 40);
      v122 = *(_QWORD *)(v68 + 32);
      v123 = v71;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v72 = sub_1A594B4A8();
      v122 = sub_1A55791B0(v72, v73, &v119);
      v3 = v113;
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC(v114, type metadata accessor for MailboxTaskLogger);
      _os_log_impl(&dword_1A4F90000, v62, v63, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Clearing local HIGHESTMODSEQ.", (uint8_t *)v65, 0x33u);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v66, -1, -1);
      MEMORY[0x1A85B1964](v65, -1, -1);

      (*(void (**)(char *, uint64_t))(v117 + 8))(v115, v118);
    }
    else
    {
      sub_1A55034FC(v61, type metadata accessor for MailboxTaskLogger);

      (*(void (**)(char *, uint64_t))(v16 + 8))(v60, v15);
    }
    v87 = *(_QWORD *)(v3 + 40);
    v88 = *(_DWORD *)(v3 + 48);
    v89 = 0;
    v90 = 1;
    return sub_1A551CC48(v89, v90, v87, v88);
  }
  v91 = v111;
  v59(v111, a2, v15, v24);
  v92 = v110;
  sub_1A55034B8(a2, v110, type metadata accessor for MailboxTaskLogger);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v93 = sub_1A594A74C();
  v94 = sub_1A594C030();
  if (os_log_type_enabled(v93, v94))
  {
    v95 = swift_slowAlloc();
    v96 = swift_slowAlloc();
    v119 = v96;
    *(_DWORD *)v95 = 68159235;
    LODWORD(v122) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v95 + 8) = 256;
    v97 = *(int *)(v117 + 20);
    v117 = v16;
    v98 = v92 + v97;
    LOBYTE(v122) = *(_BYTE *)(v92 + v97);
    sub_1A594C3CC();
    *(_WORD *)(v95 + 11) = 2082;
    v99 = *(_QWORD *)(v98 + 8);
    v100 = *(_QWORD *)(v98 + 16);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v122 = sub_1A55791B0(v99, v100, &v119);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v95 + 21) = 1040;
    LODWORD(v122) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v95 + 27) = 512;
    LOWORD(v122) = *(_WORD *)(v98 + 24);
    sub_1A594C3CC();
    *(_WORD *)(v95 + 31) = 2160;
    v122 = 0x786F626C69616DLL;
    sub_1A594C3CC();
    *(_WORD *)(v95 + 41) = 2085;
    v101 = *(_DWORD *)(v98 + 40);
    v122 = *(_QWORD *)(v98 + 32);
    v123 = v101;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v102 = sub_1A594B4A8();
    v122 = sub_1A55791B0(v102, v103, &v119);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC(v110, type metadata accessor for MailboxTaskLogger);
    _os_log_impl(&dword_1A4F90000, v93, v94, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] No change to local HIGHESTMODSEQ.", (uint8_t *)v95, 0x33u);
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v96, -1, -1);
    MEMORY[0x1A85B1964](v95, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v117 + 8))(v111, v118);
  }
  else
  {
    sub_1A55034FC(v92, type metadata accessor for MailboxTaskLogger);

    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v91, v15);
  }
}

uint64_t sub_1A562EDF4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, NSObject *a3@<X4>, uint64_t a4@<X5>, uint64_t *a5@<X8>)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = sub_1A562F34C(a1, a2, a3, a4);
  *a5 = result;
  a5[1] = v7;
  a5[2] = v8;
  return result;
}

unint64_t sub_1A562EE30()
{
  return 0xD000000000000010;
}

uint64_t sub_1A562EE4C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a3 + 16);
  if (v4)
  {
    v8 = *(_QWORD *)(a2 + 16);
    swift_retain();
    swift_retain();
    result = swift_retain();
    v10 = 0;
    v11 = (uint64_t *)(a3 + 40);
    while (v8 != v10)
    {
      v12 = *(unsigned int *)(a2 + 4 * v10++ + 32);
      v14 = *(v11 - 1);
      v13 = *v11;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      a4(v12, v14, v13);
      result = swift_bridgeObjectRelease();
      v11 += 2;
      if (v4 == v10)
      {
        swift_release();
        swift_release();
        return swift_release();
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t destroy for UpdateLocalFlags(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 64);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for UpdateLocalFlags(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v5 = a2 + 64;
  v6 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 88) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v8(a1 + 64, v5, v7);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v9 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v9;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for UpdateLocalFlags(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 64), (uint64_t *)(a2 + 64));
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  return a1;
}

__n128 __swift_memcpy128_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t assignWithTake for UpdateLocalFlags(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  __swift_destroy_boxed_opaque_existential_1(a1 + 64);
  v4 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  return a1;
}

uint64_t getEnumTagSinglePayload for DisplayPart.Attachment(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 128))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DisplayPart.Attachment(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 128) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 128) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for UpdateLocalFlags()
{
  return &type metadata for UpdateLocalFlags;
}

unint64_t sub_1A562F2A0()
{
  unint64_t result;

  result = qword_1EE7977F8;
  if (!qword_1EE7977F8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AB058, &type metadata for UpdateLocalFlags.ActionID);
    atomic_store(result, (unint64_t *)&qword_1EE7977F8);
  }
  return result;
}

unint64_t sub_1A562F2E4(uint64_t a1)
{
  unint64_t result;

  result = sub_1A562F308();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A562F308()
{
  unint64_t result;

  result = qword_1EE797800;
  if (!qword_1EE797800)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AB014, &type metadata for UpdateLocalFlags);
    atomic_store(result, (unint64_t *)&qword_1EE797800);
  }
  return result;
}

uint64_t sub_1A562F34C(uint64_t a1, uint64_t a2, NSObject *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t isa;
  Class v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  uint64_t v42;
  unint64_t v43;
  os_log_t v44;
  uint64_t v45;
  os_log_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  _QWORD *p_isa;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  BOOL v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t result;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  Class v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  os_log_t v86;
  uint64_t v87;
  uint64_t v88;
  NSObject *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t v103[2];
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;

  v5 = v4;
  v88 = a4;
  v91 = a2;
  v100 = a1;
  v85 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v85);
  v90 = (uint64_t)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A594A764();
  v94 = *(_QWORD *)(v8 - 8);
  v95 = v8;
  MEMORY[0x1E0C80A78](v8);
  v93 = (char *)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TaskHistory.Previous(0);
  v98 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v85 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v85 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v85 - v20;
  v104 = 0;
  v105 = MEMORY[0x1E0DEE9D8];
  v106 = MEMORY[0x1E0DEE9D8];
  isa = (uint64_t)a3[23].isa;
  v23 = a3[24].isa;
  v89 = a3;
  v86 = a3 + 20;
  __swift_project_boxed_opaque_existential_1_0(&a3[20].isa, isa);
  v24 = (*((uint64_t (**)(uint64_t, Class))v23 + 5))(isa, v23);
  v101 = v5;
  v102 = &v104;
  sub_1A562EE4C(v24, v25, v26, (void (*)(uint64_t, uint64_t, uint64_t))sub_1A562FD68);
  v87 = 0;
  swift_release();
  swift_release();
  swift_release();
  v27 = v104;
  v28 = v105;
  v29 = v106;
  v30 = *(NSObject **)(v106 + 16);
  v96 = v105;
  v97 = v104;
  v99 = v106;
  if (!v30)
  {
    v46 = v86;
    v47 = sub_1A55B0224(*(_QWORD *)(v5 + 120), 0, v91);
    v48 = *(_QWORD *)(v47 + 16);
    if (v48)
    {
      v49 = 0;
      v90 = v47;
      v92 = v5;
      v93 = (char *)(v47 + 32);
      v95 = *(_QWORD *)(v100 + 16);
      v50 = v89;
      p_isa = &v46->isa;
      v91 = v48;
      do
      {
        if (v95)
        {
          v94 = v49;
          v52 = *(_DWORD *)&v93[4 * v49];
          v53 = v98;
          v54 = v100 + ((*(unsigned __int8 *)(v98 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80));
          swift_bridgeObjectRetain_n();
          v55 = *(_QWORD *)(v53 + 72);
          v56 = v95;
          do
          {
            sub_1A55034B8(v54, (uint64_t)v21, type metadata accessor for TaskHistory.Previous);
            sub_1A55034B8((uint64_t)v21, (uint64_t)v18, type metadata accessor for TaskHistory.Previous);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              v57 = *((_DWORD *)v18 + 2);
              swift_release();
              v58 = v57 == v52;
              p_isa = &v46->isa;
              if (v58)
              {
                sub_1A55034FC((uint64_t)v21, type metadata accessor for TaskHistory.Previous);
                swift_release();
                swift_release();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();
                swift_release();
                return 0;
              }
            }
            else
            {
              sub_1A55034FC((uint64_t)v18, type metadata accessor for TaskHistory.Previous);
            }
            sub_1A55034FC((uint64_t)v21, type metadata accessor for TaskHistory.Previous);
            v54 += v55;
            --v56;
          }
          while (v56);
          swift_bridgeObjectRelease_n();
          v50 = v89;
          v48 = v91;
          v49 = v94;
        }
        ++v49;
      }
      while (v49 != v48);
      swift_bridgeObjectRelease();
      v5 = v92;
    }
    else
    {
      swift_bridgeObjectRelease();
      v50 = v89;
      p_isa = &v46->isa;
    }
    v77 = (uint64_t)v50[23].isa;
    v78 = v50[24].isa;
    __swift_project_boxed_opaque_existential_1_0(p_isa, v77);
    v79 = (*((uint64_t (**)(uint64_t, Class))v78 + 9))(v77, v78);
    LOBYTE(v77) = v80;
    swift_release();
    swift_release();
    swift_release();
    if ((v77 & 1) != 0)
    {
      if (!v79)
        return 0;
      v59 = *(_QWORD *)(v5 + 120);
      v83 = swift_allocObject();
      v84 = *(_DWORD *)(v5 + 48);
      *(_QWORD *)(v83 + 16) = *(_QWORD *)(v5 + 40);
      *(_DWORD *)(v83 + 24) = v84;
      *(_QWORD *)(v83 + 32) = 0;
      *(_BYTE *)(v83 + 40) = 1;
    }
    else
    {
      v59 = *(_QWORD *)(v5 + 120);
      v81 = swift_allocObject();
      v82 = *(_DWORD *)(v5 + 48);
      *(_QWORD *)(v81 + 16) = *(_QWORD *)(v5 + 40);
      *(_DWORD *)(v81 + 24) = v82;
      *(_QWORD *)(v81 + 32) = v79;
      *(_BYTE *)(v81 + 40) = 0;
    }
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return v59;
  }
  v89 = v30;
  v92 = v5;
  v31 = v88;
  (*(void (**)(char *, uint64_t, uint64_t))(v94 + 16))(v93, v88, v95);
  v32 = v90;
  sub_1A55034B8(v31, v90, type metadata accessor for MailboxTaskLogger);
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  v33 = sub_1A594A74C();
  v34 = sub_1A594C030();
  v35 = v34;
  if (os_log_type_enabled(v33, v34))
  {
    v36 = swift_slowAlloc();
    v88 = swift_slowAlloc();
    v103[0] = v88;
    *(_DWORD *)v36 = 68159491;
    LODWORD(v104) = 2;
    v86 = v33;
    sub_1A594C3CC();
    *(_WORD *)(v36 + 8) = 256;
    v37 = *(int *)(v85 + 20);
    LODWORD(v85) = v35;
    v38 = v32 + v37;
    LOBYTE(v104) = *(_BYTE *)(v32 + v37);
    sub_1A594C3CC();
    *(_WORD *)(v36 + 11) = 2082;
    v39 = *(_QWORD *)(v38 + 8);
    v40 = *(_QWORD *)(v38 + 16);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v104 = sub_1A55791B0(v39, v40, v103);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v36 + 21) = 1040;
    LODWORD(v104) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v36 + 27) = 512;
    LOWORD(v104) = *(_WORD *)(v38 + 24);
    v29 = v99;
    sub_1A594C3CC();
    *(_WORD *)(v36 + 31) = 2160;
    v104 = 0x786F626C69616DLL;
    sub_1A594C3CC();
    *(_WORD *)(v36 + 41) = 2085;
    v41 = *(_DWORD *)(v38 + 40);
    v104 = *(_QWORD *)(v38 + 32);
    LODWORD(v105) = v41;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v42 = sub_1A594B4A8();
    v104 = sub_1A55791B0(v42, v43, v103);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC(v90, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v36 + 51) = 2048;
    swift_release();
    swift_release();
    swift_release();
    v104 = (uint64_t)v89;
    v28 = v96;
    v27 = v97;
    sub_1A594C3CC();
    swift_release();
    swift_release();
    swift_release();
    v44 = v86;
    _os_log_impl(&dword_1A4F90000, v86, (os_log_type_t)v85, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Got %ld flag/label changes.", (uint8_t *)v36, 0x3Du);
    v45 = v88;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v45, -1, -1);
    MEMORY[0x1A85B1964](v36, -1, -1);

  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    sub_1A55034FC(v32, type metadata accessor for MailboxTaskLogger);

    swift_release();
    swift_release();
    swift_release();
  }
  (*(void (**)(char *, uint64_t))(v94 + 8))(v93, v95);
  v60 = sub_1A55B0224(*(_QWORD *)(v92 + 120), 0, v91);
  v61 = *(_QWORD *)(v60 + 16);
  if (!v61)
  {
    swift_bridgeObjectRelease();
    v70 = v92;
    goto LABEL_31;
  }
  v62 = 0;
  v91 = v60;
  v95 = v60 + 32;
  v63 = *(char **)(v100 + 16);
  v93 = v63;
  v94 = v61;
  while (!v63)
  {
LABEL_21:
    if (++v62 == v61)
    {
      swift_bridgeObjectRelease();
      v70 = v92;
      v28 = v96;
      v27 = v97;
LABEL_31:
      v74 = sub_1A562DB6C(v27, v28, v29);
      swift_release_n();
      swift_release_n();
      swift_release_n();
      v75 = (_QWORD *)swift_allocObject();
      v76 = *(_QWORD *)(v70 + 24);
      v75[2] = *(_QWORD *)(v70 + 16);
      v75[3] = v76;
      v75[4] = v74;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      return 0;
    }
  }
  v64 = *(_DWORD *)(v95 + 4 * v62);
  v65 = v98;
  v66 = v100 + ((*(unsigned __int8 *)(v98 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80));
  swift_bridgeObjectRetain_n();
  v67 = *(_QWORD *)(v65 + 72);
  while (1)
  {
    sub_1A55034B8(v66, (uint64_t)v15, type metadata accessor for TaskHistory.Previous);
    sub_1A55034B8((uint64_t)v15, (uint64_t)v12, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() == 1)
      break;
    sub_1A55034FC((uint64_t)v12, type metadata accessor for TaskHistory.Previous);
LABEL_25:
    sub_1A55034FC((uint64_t)v15, type metadata accessor for TaskHistory.Previous);
    v66 += v67;
    if (!--v63)
    {
      swift_bridgeObjectRelease_n();
      v29 = v99;
      v63 = v93;
      v61 = v94;
      goto LABEL_21;
    }
  }
  v68 = *((_DWORD *)v12 + 2);
  swift_release();
  if (v68 != v64)
    goto LABEL_25;
  sub_1A55034FC((uint64_t)v15, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease_n();
  v70 = v92;
  v71 = *(_QWORD *)(v92 + 120);
  v72 = __OFADD__(v71, 1);
  v73 = v71 + 1;
  if (!v72)
  {
    *(_QWORD *)(v92 + 120) = v73;
    v28 = v96;
    v27 = v97;
    v29 = v99;
    goto LABEL_31;
  }
  __break(1u);
  return result;
}

int64_t sub_1A562FD68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1A562DD4C(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

uint64_t sub_1A562FD70()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A562FD9C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A562FDC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3 != 1)
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return result;
}

uint64_t sub_1A562FDD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3 != 1)
    return swift_bridgeObjectRelease();
  return result;
}

ValueMetadata *type metadata accessor for UpdateLocalFlags.ActionID()
{
  return &type metadata for UpdateLocalFlags.ActionID;
}

double sub_1A562FDF8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;
  uint64_t v5;
  _QWORD v6[8];

  v6[0] = &type metadata for UpdateServerUnreadCount;
  sub_1A594C6B4();
  v6[6] = 0xD000000000000017;
  v6[7] = 0x80000001A59AB080;
  if (*(_QWORD *)(a1 + 16))
  {
    v5 = a1;
    sub_1A5553470((uint64_t)&v5, a2);
    sub_1A55534AC((uint64_t)&v5);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1A5553138((uint64_t)v6);
    swift_bridgeObjectRelease();
    *(_QWORD *)(a2 + 64) = 0;
    result = 0.0;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

ValueMetadata *type metadata accessor for UpdateServerUnreadCount.Update()
{
  return &type metadata for UpdateServerUnreadCount.Update;
}

uint64_t destroy for UpdateServerUnreadCount(uint64_t a1)
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for UpdateServerUnreadCount(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = a1 + 16;
  v5 = a2 + 16;
  v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v8(v4, v5, v7);
  v9 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v9;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

_QWORD *assignWithCopy for UpdateServerUnreadCount(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  __swift_assign_boxed_opaque_existential_1(a1 + 2, a2 + 2);
  a1[7] = a2[7];
  a1[8] = a2[8];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for UpdateServerUnreadCount(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for UpdateServerUnreadCount()
{
  return &type metadata for UpdateServerUnreadCount;
}

uint64_t sub_1A5630070(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  if (a1[1] != a2[1])
    return 0;
  v2 = a2[2];
  v3 = a1[2];
  return sub_1A54FF30C(*a1, *a2) & (v3 == v2);
}

uint64_t sub_1A56300C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[9];

  v2 = v1;
  v4 = type metadata accessor for Task.Logger(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A594A764();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))(v11, a1, v7, v9);
  sub_1A55034B8(a1, (uint64_t)v6, type metadata accessor for Task.Logger);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  sub_1A5553470(v2, (uint64_t)v24);
  v12 = sub_1A594A74C();
  v13 = sub_1A594C030();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v21 = swift_slowAlloc();
    v23 = v21;
    *(_DWORD *)v14 = 68158466;
    LODWORD(v22) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v14 + 8) = 256;
    v15 = &v6[*(int *)(v4 + 20)];
    v16 = *((_QWORD *)v15 + 1);
    v17 = *((_QWORD *)v15 + 2);
    LOBYTE(v22) = *(_QWORD *)v15;
    sub_1A594C3CC();
    *(_WORD *)(v14 + 11) = 2082;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v22 = sub_1A55791B0(v16, v17, &v23);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC((uint64_t)v6, type metadata accessor for Task.Logger);
    *(_WORD *)(v14 + 21) = 2048;
    v18 = *(_QWORD *)(v24[0] + 16);
    sub_1A55534AC((uint64_t)v24);
    v22 = v18;
    sub_1A594C3CC();
    _os_log_impl(&dword_1A4F90000, v12, v13, "[%.*hhx-%{public}s] Updating local server unread count for %ld mailboxes.", (uint8_t *)v14, 0x1Fu);
    v19 = v21;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v19, -1, -1);
    MEMORY[0x1A85B1964](v14, -1, -1);
  }
  else
  {
    sub_1A55534AC((uint64_t)v24);
    sub_1A55034FC((uint64_t)v6, type metadata accessor for Task.Logger);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_1A5630380(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  __int128 *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t result;
  uint64_t v39;
  unint64_t v40;
  uint64_t (*v41)(uint64_t);
  __int128 v42;
  char *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  unsigned __int8 *v56;
  uint64_t v57;
  unsigned __int8 *v58;
  int v59;
  int v60;
  int v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t *v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t (*v73)(uint64_t);
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  NSObject *v89;
  os_log_type_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t *v102;
  _QWORD *v103;
  uint64_t v104;
  __int128 v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;

  v109 = a2;
  v106 = type metadata accessor for Task.Logger(0);
  MEMORY[0x1E0C80A78](v106);
  v4 = (char *)&v99 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v99 - v6;
  v117 = sub_1A594A764();
  v8 = *(_QWORD *)(v117 - 8);
  MEMORY[0x1E0C80A78](v117);
  v101 = (char *)&v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v112 = (char *)&v99 - v11;
  v12 = 0;
  v13 = 0;
  v14 = *(_QWORD *)(a1 + 152);
  v55 = *(_BYTE *)(a1 + 168) == 1;
  v110 = a1;
  v114 = v7;
  v103 = (_QWORD *)(a1 + 152);
  if (v55)
  {
    v15 = *(_QWORD *)(a1 + 144);
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = v14;
      v119 = *(_QWORD *)(a1 + 160);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v18 = *(_OWORD *)(v15 + 160);
      v129 = *(_OWORD *)(v15 + 144);
      v130 = v18;
      v19 = *(_OWORD *)(v15 + 192);
      v131 = *(_OWORD *)(v15 + 176);
      v132 = v19;
      v20 = *(_OWORD *)(v15 + 96);
      v125 = *(_OWORD *)(v15 + 80);
      v126 = v20;
      v21 = *(_OWORD *)(v15 + 128);
      v127 = *(_OWORD *)(v15 + 112);
      v128 = v21;
      v22 = *(_OWORD *)(v15 + 48);
      v122 = *(_OWORD *)(v15 + 32);
      v23 = *(_OWORD *)(v15 + 64);
      v123 = v22;
      v124 = v23;
      v13 = *((_QWORD *)&v122 + 1);
      v12 = v122;
      v24 = DWORD2(v22);
      sub_1A54E3150((uint64_t)&v122);
      v25 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      LOBYTE(v24) = MailboxName.isInbox.getter(v25, v24);
      swift_bridgeObjectRelease();
      if ((v24 & 1) != 0)
      {
LABEL_8:
        sub_1A54E8FCC(v15, v17, v119, 1);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A54E31EC((uint64_t)&v122);
      }
      else
      {
        v26 = (__int128 *)(v15 + 208);
        while (1)
        {
          sub_1A54E31EC((uint64_t)&v122);
          if (!--v16)
            break;
          v27 = *v26;
          v28 = v26[2];
          v123 = v26[1];
          v124 = v28;
          v122 = v27;
          v29 = v26[3];
          v30 = v26[4];
          v31 = v26[6];
          v127 = v26[5];
          v128 = v31;
          v125 = v29;
          v126 = v30;
          v32 = v26[7];
          v33 = v26[8];
          v34 = v26[10];
          v131 = v26[9];
          v132 = v34;
          v129 = v32;
          v130 = v33;
          v13 = *((_QWORD *)&v122 + 1);
          v12 = v122;
          v35 = DWORD2(v123);
          sub_1A54E3150((uint64_t)&v122);
          v36 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          LOBYTE(v35) = MailboxName.isInbox.getter(v36, v35);
          swift_bridgeObjectRelease();
          v26 += 11;
          a1 = v110;
          if ((v35 & 1) != 0)
            goto LABEL_8;
        }
        sub_1A54E8FCC(v15, v17, v119, 1);
        v12 = 0;
        v13 = 0;
      }
      v7 = v114;
    }
    else
    {
      v12 = 0;
      v13 = 0;
    }
  }
  v37 = *v102;
  v116 = *(_QWORD *)(*v102 + 16);
  if (v116)
  {
    v107 = v13;
    v100 = v4;
    v115 = v37 + 32;
    result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v39 = 0;
    v40 = 0;
    v111 = v12;
    v41 = type metadata accessor for Task.Logger;
    *(_QWORD *)&v42 = 68158722;
    v105 = v42;
    v104 = MEMORY[0x1E0DEE9B8] + 8;
    v108 = v8;
    v43 = v112;
    v113 = v37;
    while (1)
    {
      if (v40 >= *(_QWORD *)(v37 + 16))
      {
        __break(1u);
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
        return result;
      }
      v44 = (uint64_t *)(v115 + 24 * v40);
      v45 = *v44;
      v46 = v44[1];
      v118 = v44[2];
      v55 = *(_BYTE *)(a1 + 168) == 1;
      v119 = v39;
      if (v55)
      {
        v47 = *(_QWORD **)(a1 + 144);
        v48 = v47[2];
        if (v48)
        {
          v49 = 0;
          v50 = *(_QWORD *)(a1 + 152);
          v51 = *(_QWORD *)(a1 + 160);
          while (1)
          {
            v52 = &v47[22 * v49 + 4];
            if (v52[1] == v46)
            {
              v53 = *v52;
              v54 = *(_QWORD *)(v53 + 16);
              if (v54 == *(_QWORD *)(v45 + 16))
              {
                if (v54)
                  v55 = v53 == v45;
                else
                  v55 = 1;
                if (v55)
                  goto LABEL_44;
                if (*(unsigned __int8 *)(v53 + 32) == *(unsigned __int8 *)(v45 + 32))
                {
                  if (v54 == 1)
                    goto LABEL_44;
                  if (*(unsigned __int8 *)(v53 + 33) == *(unsigned __int8 *)(v45 + 33))
                  {
                    if (v54 == 2)
                      goto LABEL_44;
                    if (*(unsigned __int8 *)(v53 + 34) == *(unsigned __int8 *)(v45 + 34))
                    {
                      if (v54 == 3)
                        goto LABEL_44;
                      if (*(unsigned __int8 *)(v53 + 35) == *(unsigned __int8 *)(v45 + 35))
                        break;
                    }
                  }
                }
              }
            }
LABEL_21:
            if (++v49 == v48)
            {
              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
              goto LABEL_51;
            }
          }
          v56 = (unsigned __int8 *)(v53 + 36);
          v57 = v54 - 4;
          v58 = (unsigned __int8 *)(v45 + 36);
          while (v57)
          {
            v60 = *v56++;
            v59 = v60;
            v61 = *v58++;
            --v57;
            if (v59 != v61)
              goto LABEL_21;
          }
LABEL_44:
          sub_1A55212D0(*(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), *(_QWORD *)(a1 + 160), 1);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          result = swift_isUniquelyReferenced_nonNull_native();
          v62 = v47;
          if ((result & 1) == 0)
          {
            result = (uint64_t)sub_1A554B6F8(v47);
            v62 = (_QWORD *)result;
          }
          if (v49 >= v62[2])
            goto LABEL_70;
          v63 = &v62[22 * v49];
          if (!*((_BYTE *)v63 + 200))
          {
            v65 = v63[24];
            v64 = v63 + 24;
            if (v118 == v65)
            {
              *v64 = v118;
              *((_BYTE *)v64 + 8) = 1;
            }
          }
          sub_1A54E8FCC((uint64_t)v47, v50, v51, 1);
          *(_QWORD *)(a1 + 144) = v62;
          v66 = v103;
          *v103 = 0;
          v66[1] = 0;
          *(_BYTE *)(a1 + 168) = 1;
          v8 = v108;
LABEL_51:
          v7 = v114;
          v43 = v112;
          v39 = v119;
          v37 = v113;
          if (v119 < 5)
            goto LABEL_55;
        }
        else
        {
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v43 = v112;
          if (v39 < 5)
            goto LABEL_55;
        }
      }
      else
      {
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        if (v39 < 5)
          goto LABEL_55;
      }
      if (!v111 || v46 != v107 || !sub_1A54FF30C(v45, v111))
      {
        result = swift_bridgeObjectRelease();
        goto LABEL_15;
      }
LABEL_55:
      v67 = v109;
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v43, v109, v117);
      sub_1A55034B8(v67, (uint64_t)v7, v41);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      swift_bridgeObjectRetain_n();
      v68 = sub_1A594A74C();
      v69 = sub_1A594C030();
      if (os_log_type_enabled(v68, v69))
      {
        v70 = swift_slowAlloc();
        v71 = swift_slowAlloc();
        *(_QWORD *)&v122 = v71;
        *(_DWORD *)v70 = v105;
        *(_DWORD *)(v70 + 4) = 2;
        *(_WORD *)(v70 + 8) = 256;
        v72 = &v7[*(int *)(v106 + 20)];
        v73 = v41;
        v74 = *((_QWORD *)v72 + 1);
        v75 = *((_QWORD *)v72 + 2);
        *(_BYTE *)(v70 + 10) = *(_QWORD *)v72;
        *(_WORD *)(v70 + 11) = 2082;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v76 = v74;
        v77 = v117;
        *(_QWORD *)(v70 + 13) = sub_1A55791B0(v76, v75, (uint64_t *)&v122);
        swift_bridgeObjectRelease();
        sub_1A55034FC((uint64_t)v114, v73);
        *(_WORD *)(v70 + 21) = 2048;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v70 + 23) = v118;
        swift_bridgeObjectRelease();
        *(_WORD *)(v70 + 31) = 2080;
        v78 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v79 = OpaqueMailboxID.description.getter(v78);
        v81 = v80;
        swift_bridgeObjectRelease();
        v82 = v79;
        v7 = v114;
        *(_QWORD *)(v70 + 33) = sub_1A55791B0(v82, v81, (uint64_t *)&v122);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A4F90000, v68, v69, "[%.*hhx-%{public}s] Did store server unread count %ld (aka. UNSEEN) for %s.", (uint8_t *)v70, 0x29u);
        swift_arrayDestroy();
        v83 = v71;
        v84 = v108;
        MEMORY[0x1A85B1964](v83, -1, -1);
        v85 = v70;
        v43 = v112;
        MEMORY[0x1A85B1964](v85, -1, -1);

        v86 = v84;
        result = (*(uint64_t (**)(char *, uint64_t))(v84 + 8))(v43, v77);
        v41 = v73;
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1A55034FC((uint64_t)v7, v41);

        swift_bridgeObjectRelease_n();
        v86 = v8;
        result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v43, v117);
      }
      v39 = v119 + 1;
      a1 = v110;
      v37 = v113;
      if (__OFADD__(v119, 1))
        goto LABEL_69;
      v8 = v86;
LABEL_15:
      if (++v40 == v116)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v37 = *v102;
        v4 = v100;
        goto LABEL_62;
      }
    }
  }
  swift_bridgeObjectRelease();
  v39 = 0;
LABEL_62:
  result = (uint64_t)v101;
  if (v39 < *(_QWORD *)(v37 + 16))
  {
    v87 = v109;
    v88 = v101;
    (*(void (**)(void))(v8 + 16))();
    sub_1A55034B8(v87, (uint64_t)v4, type metadata accessor for Task.Logger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    sub_1A5553470((uint64_t)v102, (uint64_t)&v122);
    v89 = sub_1A594A74C();
    v90 = sub_1A594C030();
    if (os_log_type_enabled(v89, v90))
    {
      v91 = swift_slowAlloc();
      v119 = swift_slowAlloc();
      v121 = v119;
      *(_DWORD *)v91 = 68158466;
      LODWORD(v120) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v91 + 8) = 256;
      v92 = &v4[*(int *)(v106 + 20)];
      v93 = *((_QWORD *)v92 + 1);
      v94 = *((_QWORD *)v92 + 2);
      LOBYTE(v120) = *(_QWORD *)v92;
      sub_1A594C3CC();
      *(_WORD *)(v91 + 11) = 2082;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v95 = v39;
      v120 = sub_1A55791B0(v93, v94, &v121);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      result = sub_1A55034FC((uint64_t)v4, type metadata accessor for Task.Logger);
      *(_WORD *)(v91 + 21) = 2048;
      v96 = *(_QWORD *)(v122 + 16);
      v97 = v96 - v39;
      if (__OFSUB__(v96, v95))
        goto LABEL_71;
      sub_1A55534AC((uint64_t)&v122);
      v120 = v97;
      sub_1A594C3CC();
      _os_log_impl(&dword_1A4F90000, v89, v90, "[%.*hhx-%{public}s] Did store server unread counts for %ld more mailboxes.", (uint8_t *)v91, 0x1Fu);
      v98 = v119;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v98, -1, -1);
      MEMORY[0x1A85B1964](v91, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v101, v117);
    }
    else
    {
      sub_1A55534AC((uint64_t)&v122);
      sub_1A55034FC((uint64_t)v4, type metadata accessor for Task.Logger);

      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v88, v117);
    }
  }
  return result;
}

uint64_t sub_1A5630EB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A55530FC(v1 + 8, a1);
}

uint64_t sub_1A5630EC0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = sub_1A5631244(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A5630EF0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

unint64_t sub_1A5630F20()
{
  unint64_t result;

  result = qword_1EE797B08;
  if (!qword_1EE797B08)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AB104, &type metadata for UpdateServerUnreadCount.ActionID);
    atomic_store(result, (unint64_t *)&qword_1EE797B08);
  }
  return result;
}

unint64_t sub_1A5630F64(uint64_t a1)
{
  unint64_t result;

  result = sub_1A5630F88();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A5630F88()
{
  unint64_t result;

  result = qword_1EE795C18[0];
  if (!qword_1EE795C18[0])
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AB0C0, &type metadata for UpdateServerUnreadCount);
    atomic_store(result, qword_1EE795C18);
  }
  return result;
}

uint64_t sub_1A5630FCC(uint64_t result, char a2, _QWORD *a3)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *i;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  _QWORD *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v6 = (_QWORD *)_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v7 = v6[4];
    v8 = v6[5];
    v46 = v6;
    v9 = v6[6];
    v10 = (_QWORD *)*a3;
    v11 = sub_1A54FDC94(v7, v8);
    v13 = v10[2];
    v14 = (v12 & 1) == 0;
    v15 = v13 + v14;
    if (__OFADD__(v13, v14))
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v16 = v11;
    v17 = v12;
    v18 = v10[3];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v18 < v15)
    {
      sub_1A558410C(v15, a2 & 1);
      v19 = sub_1A54FDC94(v7, v8);
      if ((v17 & 1) != (v20 & 1))
      {
LABEL_28:
        result = sub_1A594CDF8();
        __break(1u);
        return result;
      }
      v16 = v19;
      v21 = (_QWORD *)*a3;
      if ((v17 & 1) == 0)
        goto LABEL_12;
LABEL_9:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v21[7] + 8 * v16) = v9;
      v22 = v3 - 1;
      if (v3 == 1)
        return swift_bridgeObjectRelease();
LABEL_16:
      for (i = v46 + 9; ; i += 3)
      {
        v28 = *(i - 2);
        v29 = *(i - 1);
        v30 = *i;
        v31 = (_QWORD *)*a3;
        v32 = sub_1A54FDC94(v28, v29);
        v34 = v31[2];
        v35 = (v33 & 1) == 0;
        v36 = v34 + v35;
        if (__OFADD__(v34, v35))
          break;
        v37 = v32;
        v38 = v33;
        v39 = v31[3];
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        if (v39 < v36)
        {
          sub_1A558410C(v36, 1);
          v40 = sub_1A54FDC94(v28, v29);
          if ((v38 & 1) != (v41 & 1))
            goto LABEL_28;
          v37 = v40;
        }
        v42 = (_QWORD *)*a3;
        if ((v38 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          *(_QWORD *)(v42[7] + 8 * v37) = v30;
        }
        else
        {
          v42[(v37 >> 6) + 8] |= 1 << v37;
          v43 = (uint64_t *)(v42[6] + 16 * v37);
          *v43 = v28;
          v43[1] = v29;
          *(_QWORD *)(v42[7] + 8 * v37) = v30;
          v44 = v42[2];
          v25 = __OFADD__(v44, 1);
          v45 = v44 + 1;
          if (v25)
            goto LABEL_27;
          v42[2] = v45;
        }
        if (!--v22)
          return swift_bridgeObjectRelease();
      }
      goto LABEL_26;
    }
    if ((a2 & 1) != 0)
    {
      v21 = (_QWORD *)*a3;
      if ((v17 & 1) != 0)
        goto LABEL_9;
    }
    else
    {
      sub_1A5550A7C();
      v21 = (_QWORD *)*a3;
      if ((v17 & 1) != 0)
        goto LABEL_9;
    }
LABEL_12:
    v21[(v16 >> 6) + 8] |= 1 << v16;
    v23 = (uint64_t *)(v21[6] + 16 * v16);
    *v23 = v7;
    v23[1] = v8;
    *(_QWORD *)(v21[7] + 8 * v16) = v9;
    v24 = v21[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
    {
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v21[2] = v26;
    v22 = v3 - 1;
    if (v3 == 1)
      return swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_1A5631244(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[2];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;

  v5 = type metadata accessor for TaskHistory.Previous(0);
  v36 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v32 - v9;
  v11 = sub_1A55B00BC(a2);
  v12 = *(_QWORD *)(v11 + 16);
  if (v12)
  {
    v32[0] = v2;
    v32[1] = v11;
    v13 = 0;
    v34 = v11 + 32;
    *(_QWORD *)&v37 = *(_QWORD *)(a1 + 16);
    v35 = a1;
    v33 = v12;
    do
    {
      if ((_QWORD)v37)
      {
        v14 = *(_DWORD *)(v34 + 4 * v13);
        v15 = v36;
        v16 = a1 + ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80));
        swift_bridgeObjectRetain_n();
        v17 = *(_QWORD *)(v15 + 72);
        v18 = v37;
        while (1)
        {
          sub_1A55034B8(v16, (uint64_t)v10, type metadata accessor for TaskHistory.Previous);
          sub_1A55034B8((uint64_t)v10, (uint64_t)v7, type metadata accessor for TaskHistory.Previous);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v19 = *((_DWORD *)v7 + 2);
            swift_release();
            if (v19 == v14)
            {
              sub_1A55034FC((uint64_t)v10, type metadata accessor for TaskHistory.Previous);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              return 0xF000000000000007;
            }
          }
          else
          {
            sub_1A55034FC((uint64_t)v7, type metadata accessor for TaskHistory.Previous);
          }
          sub_1A55034FC((uint64_t)v10, type metadata accessor for TaskHistory.Previous);
          v16 += v17;
          if (!--v18)
          {
            a1 = v35;
            swift_bridgeObjectRelease_n();
            v12 = v33;
            break;
          }
        }
      }
      ++v13;
    }
    while (v13 != v12);
    swift_bridgeObjectRelease();
    v2 = (uint64_t *)v32[0];
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v21 = *v2;
  v22 = *(_QWORD *)(*v2 + 16);
  v23 = MEMORY[0x1E0DEE9D8];
  if (v22)
  {
    v38 = MEMORY[0x1E0DEE9D8];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54F4FC8(0, v22, 0);
    v23 = v38;
    v24 = (_OWORD *)(v21 + 40);
    do
    {
      v25 = *((_QWORD *)v24 - 1);
      v37 = *v24;
      v38 = v23;
      v27 = *(_QWORD *)(v23 + 16);
      v26 = *(_QWORD *)(v23 + 24);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      if (v27 >= v26 >> 1)
      {
        sub_1A54F4FC8(v26 > 1, v27 + 1, 1);
        v23 = v38;
      }
      *(_QWORD *)(v23 + 16) = v27 + 1;
      v28 = v23 + 24 * v27;
      *(_QWORD *)(v28 + 32) = v25;
      *(_OWORD *)(v28 + 40) = v37;
      v24 = (_OWORD *)((char *)v24 + 24);
      --v22;
    }
    while (v22);
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(v23 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79ABB8);
    v29 = sub_1A594CA5C();
  }
  else
  {
    v29 = MEMORY[0x1E0DEE9E0];
  }
  v38 = v29;
  sub_1A5630FCC(v23, 1, &v38);
  swift_bridgeObjectRelease();
  v30 = v38;
  v31 = swift_allocObject();
  *(_QWORD *)(v31 + 16) = v30;
  return v31 | 0x3000000000000004;
}

uint64_t sub_1A5631574()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t storeEnumTagSinglePayload for UpdateServerUnreadCount.ActionID(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A56315D8 + 4 * asc_1A59AB090[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A56315F8 + 4 * byte_1A59AB095[v4]))();
}

_BYTE *sub_1A56315D8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A56315F8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A5631600(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A5631608(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A5631610(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A5631618(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for UpdateServerUnreadCount.ActionID()
{
  return &type metadata for UpdateServerUnreadCount.ActionID;
}

uint64_t sub_1A5631634(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  char v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  __int128 v29;
  uint64_t v30;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v30 = MEMORY[0x1E0DEE9D8];
  sub_1A54F50C4(0, v1, 0);
  v2 = v30;
  result = sub_1A5520D6C(a1);
  v6 = result;
  v7 = 0;
  v8 = a1 + 64;
  v24 = v1;
  v25 = v5;
  v26 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != v5)
      goto LABEL_24;
    v27 = v7;
    v29 = *(_OWORD *)(*(_QWORD *)(a1 + 48) + 16 * v6);
    v12 = *(_QWORD *)(a1 + 56) + 16 * v6;
    v13 = *(_QWORD *)v12;
    v14 = *(_DWORD *)(v12 + 8);
    v15 = *(_BYTE *)(v12 + 12);
    sub_1A54E4334(*(_QWORD *)v12, v14, v15);
    v17 = *(_QWORD *)(v30 + 16);
    v16 = *(_QWORD *)(v30 + 24);
    v28 = v17 + 1;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v17 >= v16 >> 1)
      result = sub_1A54F50C4(v16 > 1, v28, 1);
    *(_QWORD *)(v30 + 16) = v28;
    v18 = v30 + 32 * v17;
    *(_QWORD *)(v18 + 32) = v13;
    *(_DWORD *)(v18 + 40) = v14;
    *(_BYTE *)(v18 + 44) = v15;
    *(_OWORD *)(v18 + 48) = v29;
    v9 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = a1 + 64;
    v19 = *(_QWORD *)(v26 + 8 * v11);
    if ((v19 & (1 << v6)) == 0)
      goto LABEL_26;
    v5 = v25;
    if (*(_DWORD *)(a1 + 36) != v25)
      goto LABEL_27;
    v20 = v19 & (-2 << (v6 & 0x3F));
    if (v20)
    {
      v9 = __clz(__rbit64(v20)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v24;
    }
    else
    {
      v21 = v11 + 1;
      v22 = (unint64_t)(v9 + 63) >> 6;
      v10 = v24;
      if (v11 + 1 < v22)
      {
        v23 = *(_QWORD *)(v26 + 8 * v21);
        if (v23)
        {
LABEL_20:
          v9 = __clz(__rbit64(v23)) + (v21 << 6);
        }
        else
        {
          while (v22 - 2 != v11)
          {
            v23 = *(_QWORD *)(a1 + 80 + 8 * v11++);
            if (v23)
            {
              v21 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    v7 = v27 + 1;
    v6 = v9;
    if (v27 + 1 == v10)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1A5631888(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A555C1D0(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1A563632C(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1A56318F0()
{
  uint64_t result;

  result = sub_1A54F8ABC((uint64_t)&unk_1E4E6B4C0);
  qword_1EE7F9698 = result;
  return result;
}

uint64_t sub_1A5631914(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  char v26;
  char v27;
  uint64_t v28;
  unsigned int v29;
  unsigned int v30;

  v2 = *(_QWORD *)a1;
  v3 = *(unsigned int *)(a1 + 8);
  v4 = *(_BYTE *)(a1 + 12);
  v5 = *(_QWORD *)a2;
  v28 = *(unsigned int *)(a2 + 8);
  v27 = *(_BYTE *)(a2 + 12);
  sub_1A54E3414();
  MessageIdentifierSet.startIndex.getter();
  v7 = v6;
  v9 = v8;
  MessageIdentifierSet.endIndex.getter();
  v12 = v7 == v11 && v9 == v10;
  v13 = v12;
  v26 = v13;
  if (v12)
  {
    v14 = 0;
  }
  else
  {
    sub_1A54E4334(v2, v3, v4);
    MessageIdentifierSet.subscript.getter();
    sub_1A54E3458(v2, v3, v4);
    v14 = v30;
  }
  MessageIdentifierSet.startIndex.getter();
  v16 = v15;
  v18 = v17;
  MessageIdentifierSet.endIndex.getter();
  v21 = v16 == v20 && v18 == v19;
  v22 = !v21;
  if (v21)
  {
    v23 = 0;
  }
  else
  {
    sub_1A54E4334(v5, v28, v27);
    MessageIdentifierSet.subscript.getter();
    sub_1A54E3458(v5, v28, v27);
    v23 = v29;
  }
  if (v14 < v23)
    v24 = v22;
  else
    v24 = 0;
  if ((v26 & 1) != 0)
    return v22;
  else
    return v24;
}

uint64_t sub_1A5631AC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, _BYTE *a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;
  __int16 v27;
  uint64_t v28;
  uint64_t v29;
  __int16 v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  _BYTE *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _BYTE *v83;
  uint64_t v84;
  uint64_t v85;
  _OWORD v86[5];
  char v87;

  v7 = v6;
  v80 = a1;
  v81 = a3;
  v83 = a6;
  v84 = a2;
  v10 = type metadata accessor for TaskHistory.Previous(0);
  v82 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v73 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v73 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v73 - v20;
  v22 = *(_OWORD *)(a4 + 88);
  v86[2] = *(_OWORD *)(a4 + 72);
  v86[3] = v22;
  v86[4] = *(_OWORD *)(a4 + 104);
  v87 = *(_BYTE *)(a4 + 120);
  v23 = *(_OWORD *)(a4 + 56);
  v86[0] = *(_OWORD *)(a4 + 40);
  v86[1] = v23;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v85 = sub_1A5638D34((uint64_t)v86, a5);
  v25 = v24;
  v27 = v26;
  v29 = v28;
  swift_bridgeObjectRelease();
  if (v29)
  {
    v30 = v27;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
    v31 = v85;
    MessageIdentifierSet.formUnion(_:)(v85, v25 & 0xFFFFFFFFFFLL);
    v32 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797830);
    v33 = v83;
    v34 = &v83[*(int *)(v32 + 48)];
    *v83 = 0;
    *(_QWORD *)v34 = v31;
    *((_DWORD *)v34 + 2) = v25;
    v34[12] = BYTE4(v25);
    v34[16] = v30;
    v34[17] = HIBYTE(v30) & 1;
    *((_QWORD *)v34 + 3) = v29;
    type metadata accessor for ClientCommand(0);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v33, 0, 1, v32);
  }
  v36 = *(_QWORD *)(v7 + 208);
  v37 = *(unsigned int *)(v7 + 216);
  v77 = v7;
  v38 = *(unsigned __int8 *)(v7 + 220);
  v76 = sub_1A54E3414();
  v39 = MessageIdentifierSet.isEmpty.getter(v36, v37 | (v38 << 32));
  v40 = v84;
  if (v39)
    goto LABEL_15;
  v41 = sub_1A562AE30(2, v81);
  v42 = *(_QWORD *)(v41 + 16);
  if (!v42)
  {
LABEL_36:
    swift_bridgeObjectRelease();
    v71 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797830);
    v72 = v83;
    *v83 = 2;
    type metadata accessor for ClientCommand(0);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56))(v72, 0, 1, v71);
  }
  v43 = 0;
  v73 = v41;
  v78 = v41 + 32;
  v44 = *(_QWORD *)(v40 + 16);
  v45 = v82;
  v75 = v42;
  v74 = v44;
  while (!v44)
  {
LABEL_7:
    if (++v43 == v42)
      goto LABEL_36;
  }
  v79 = v43;
  LODWORD(v85) = *(_DWORD *)(v78 + 4 * v43);
  v46 = v40 + ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80));
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v47 = *(_QWORD *)(v45 + 72);
  while (1)
  {
    sub_1A55034B8(v46, (uint64_t)v21, type metadata accessor for TaskHistory.Previous);
    sub_1A55034B8((uint64_t)v21, (uint64_t)v18, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() != 1)
      break;
    sub_1A55034FC((uint64_t)v18, type metadata accessor for TaskHistory.Previous);
LABEL_11:
    sub_1A55034FC((uint64_t)v21, type metadata accessor for TaskHistory.Previous);
    v46 += v47;
    if (!--v44)
    {
      v40 = v84;
      swift_bridgeObjectRelease();
      v45 = v82;
      v42 = v75;
      v43 = v79;
      v44 = v74;
      goto LABEL_7;
    }
  }
  v48 = *(_DWORD *)&v18[*(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797DD8) + 48)];
  sub_1A55034FC((uint64_t)v18, type metadata accessor for ClientCommand);
  if (v48 != (_DWORD)v85)
    goto LABEL_11;
  sub_1A55034FC((uint64_t)v21, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease();
  v40 = v84;
  swift_bridgeObjectRelease();
LABEL_15:
  v49 = sub_1A562AE30(1, v81);
  v50 = *(_QWORD *)(v49 + 16);
  if (v50)
  {
    v51 = 0;
    v75 = v49;
    v85 = v49 + 32;
    v52 = *(_QWORD *)(v40 + 16);
    v78 = v52;
    v79 = v50;
    do
    {
      if (v52)
      {
        v53 = *(_DWORD *)(v85 + 4 * v51);
        v54 = v82;
        v55 = v40 + ((*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80));
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v56 = *(_QWORD *)(v54 + 72);
        while (1)
        {
          sub_1A55034B8(v55, (uint64_t)v15, type metadata accessor for TaskHistory.Previous);
          sub_1A55034B8((uint64_t)v15, (uint64_t)v12, type metadata accessor for TaskHistory.Previous);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            sub_1A55034FC((uint64_t)v12, type metadata accessor for TaskHistory.Previous);
          }
          else
          {
            v57 = *(_DWORD *)&v12[*(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797DD8) + 48)];
            sub_1A55034FC((uint64_t)v12, type metadata accessor for ClientCommand);
            if (v57 == v53)
            {
              sub_1A55034FC((uint64_t)v15, type metadata accessor for TaskHistory.Previous);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v58 = v83;
              goto LABEL_27;
            }
          }
          sub_1A55034FC((uint64_t)v15, type metadata accessor for TaskHistory.Previous);
          v55 += v56;
          if (!--v52)
          {
            v40 = v84;
            swift_bridgeObjectRelease();
            v52 = v78;
            v50 = v79;
            break;
          }
        }
      }
      ++v51;
    }
    while (v51 != v50);
  }
  swift_bridgeObjectRelease();
  v58 = v83;
  v60 = v80;
  v59 = v81;
  v61 = v77;
  v62 = *(_QWORD *)(v77 + 192);
  v63 = *(unsigned int *)(v77 + 200) | ((unint64_t)*(unsigned __int8 *)(v77 + 204) << 32);
  if (MessageIdentifierSet.isEmpty.getter(v62, v63))
  {
LABEL_27:
    v64 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797830);
    return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v58, 1, 1, v64);
  }
  else
  {
    if ((*(_BYTE *)(v61 + 185) & 1) != 0)
    {
      v65 = &unk_1E4E6B220;
    }
    else
    {
      v66 = sub_1A562AE30(0, v59);
      v67 = *(_QWORD *)(v66 + 16);
      if (v67)
      {
        v68 = 0;
        while ((sub_1A55E5990(*(_DWORD *)(v66 + 4 * v68 + 32), v60, v84) & 1) == 0)
        {
          if (v67 == ++v68)
            goto LABEL_34;
        }
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
LABEL_34:
      swift_bridgeObjectRelease();
      v65 = &unk_1E4E6B290;
    }
    v69 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797830);
    v70 = (uint64_t)&v58[*(int *)(v69 + 48)];
    *v58 = 1;
    static ClientCommand.uidFetch(messages:items:)(v62, v63, (uint64_t)v65, v70);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 56))(v58, 0, 1, v69);
  }
}

uint64_t sub_1A5632134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  int v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  BOOL v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  int v120;
  uint64_t v121;
  _QWORD *v122;
  uint64_t v123;
  uint64_t result;
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  int v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  NSObject *v137;
  uint64_t v138;
  int v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  int v144;
  uint64_t v145;
  uint64_t v146;
  NSObject *v147;
  os_log_t v148;
  int v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  int v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  os_log_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  int v165;
  uint64_t v166;
  uint64_t v167;
  NSObject *v168;
  int v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  uint64_t v174;
  unint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  NSObject *v185;
  void (*v186)(char *, uint64_t, uint64_t);
  BOOL v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  NSObject *v194;
  os_log_type_t v195;
  int v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  unint64_t v200;
  int v201;
  uint64_t v202;
  unint64_t v203;
  uint64_t v204;
  uint64_t v205;
  unint64_t v206;
  unint64_t v207;
  uint64_t v208;
  os_log_t v209;
  char *v210;
  uint64_t v211;
  NSObject *v212;
  os_log_type_t v213;
  int v214;
  uint64_t v215;
  uint64_t v216;
  char v217;
  uint64_t v218;
  int v219;
  uint64_t v220;
  unint64_t v221;
  uint64_t v222;
  os_log_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  unint64_t v230;
  uint64_t v231;
  os_log_t v232;
  char *v233;
  uint64_t v234;
  uint64_t (*v235)(uint64_t);
  uint64_t (*v236)(uint64_t);
  void (*v237)(_QWORD *@<X8>);
  int v238;
  uint64_t v239;
  NSObject *v240;
  os_log_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  int v245;
  NSObject *v246;
  os_log_t v247;
  uint64_t v248;
  uint64_t v249;
  int v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  int v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  int v261;
  uint64_t v262;
  int v263;
  NSObject *v264;
  os_log_t v265;
  uint64_t v266;
  int v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  NSObject *v271;
  int v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  int v279;
  uint64_t v280;
  BOOL v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  os_log_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  int v291;
  uint64_t v292;
  uint64_t v293;
  NSObject *v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  int v298;
  uint64_t v299;
  unint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  void (*v310)(char *, uint64_t, uint64_t);
  uint64_t v311;
  uint64_t v312;
  char *v313;
  uint64_t v314;
  NSObject *v315;
  os_log_type_t v316;
  int v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  unint64_t v324;
  uint64_t v325;
  int v326;
  uint64_t v327;
  unint64_t v328;
  uint64_t v329;
  uint64_t v330;
  unint64_t v331;
  unint64_t v332;
  os_log_t v333;
  uint64_t v334;
  void (*v335)(char *, uint64_t);
  uint64_t *v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  _QWORD *v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t *v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  char v350;
  char v351;
  char isUniquelyReferenced_nonNull_native;
  char v353;
  unint64_t v354;
  uint64_t v355;
  _BOOL8 v356;
  uint64_t v357;
  char v358;
  uint64_t v359;
  char v360;
  char *v361;
  uint64_t v362;
  uint64_t v363;
  NSObject *v364;
  os_log_type_t v365;
  int v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  unint64_t v371;
  uint64_t v372;
  int v373;
  uint64_t v374;
  unint64_t v375;
  uint64_t v376;
  os_log_t v377;
  uint64_t v378;
  char *v379;
  uint64_t v380;
  uint64_t v381;
  os_log_type_t v382;
  int v383;
  uint64_t v384;
  char *v385;
  uint64_t v386;
  unint64_t v387;
  int v388;
  uint64_t v389;
  unint64_t v390;
  unint64_t v391;
  _QWORD *v392;
  uint64_t v393;
  uint64_t v394;
  _QWORD *v395;
  _QWORD *v396;
  uint64_t v397;
  uint64_t (*v398)(uint64_t);
  char *v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  unint64_t v403;
  unint64_t v404;
  unint64_t v405;
  uint64_t v406;
  uint64_t v407;
  char *v408;
  char *v409;
  char *v410;
  char *v411;
  char *v412;
  uint64_t v413;
  char *v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  char *v419;
  uint64_t v420;
  char *v421;
  uint64_t v422;
  uint64_t v423;
  unint64_t v424;
  uint64_t v425;
  unint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  char *v431;
  uint64_t v432;
  char *v433;
  uint64_t v434;
  uint64_t v435;
  char *v436;
  char *v437;
  char *v438;
  uint64_t v439;
  char *v440;
  uint64_t v441;
  char *v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  char *isa;
  uint64_t v447;
  char *v448;
  os_log_t v449;
  os_log_t v450;
  NSObject *v451;
  uint64_t v452;
  unint64_t v453;
  os_log_t v454;
  unint64_t v455;
  uint64_t v456;
  int v457;
  _QWORD *v458;

  v416 = a6;
  v427 = a3;
  v428 = a1;
  v9 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (uint64_t (*)(uint64_t))((char *)&v398 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v12);
  v407 = (uint64_t)&v398 - v13;
  MEMORY[0x1E0C80A78](v14);
  v411 = (char *)&v398 - v15;
  MEMORY[0x1E0C80A78](v16);
  v413 = (uint64_t)&v398 - v17;
  MEMORY[0x1E0C80A78](v18);
  v412 = (char *)&v398 - v19;
  v418 = sub_1A594A764();
  v420 = *(_QWORD *)(v418 - 8);
  MEMORY[0x1E0C80A78](v418);
  v21 = (char *)&v398 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v408 = (char *)&v398 - v23;
  MEMORY[0x1E0C80A78](v24);
  v409 = (char *)&v398 - v25;
  MEMORY[0x1E0C80A78](v26);
  v410 = (char *)&v398 - v27;
  MEMORY[0x1E0C80A78](v28);
  v414 = (char *)&v398 - v29;
  v447 = type metadata accessor for TaskHistory.Running(0);
  v423 = *(_QWORD *)(v447 - 8);
  MEMORY[0x1E0C80A78](v447);
  v438 = (char *)&v398 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v31);
  v432 = (uint64_t)&v398 - v32;
  MEMORY[0x1E0C80A78](v33);
  v431 = (char *)&v398 - v34;
  MEMORY[0x1E0C80A78](v35);
  v430 = (uint64_t)&v398 - v36;
  MEMORY[0x1E0C80A78](v37);
  isa = (char *)&v398 - v38;
  MEMORY[0x1E0C80A78](v39);
  v435 = (uint64_t)&v398 - v40;
  MEMORY[0x1E0C80A78](v41);
  v448 = (char *)&v398 - v42;
  MEMORY[0x1E0C80A78](v43);
  v437 = (char *)&v398 - v44;
  v453 = type metadata accessor for TaskHistory.Previous(0);
  v425 = *(_QWORD *)(v453 - 8);
  MEMORY[0x1E0C80A78](v453);
  MEMORY[0x1E0C80A78](v45);
  v434 = (uint64_t)&v398 - v46;
  MEMORY[0x1E0C80A78](v47);
  v433 = (char *)&v398 - v48;
  MEMORY[0x1E0C80A78](v49);
  v439 = (uint64_t)&v398 - v50;
  MEMORY[0x1E0C80A78](v51);
  v419 = (char *)&v398 - v52;
  MEMORY[0x1E0C80A78](v53);
  v445 = (uint64_t)&v398 - v54;
  MEMORY[0x1E0C80A78](v55);
  v442 = (char *)&v398 - v56;
  MEMORY[0x1E0C80A78](v57);
  v449 = (os_log_t)((char *)&v398 - v58);
  MEMORY[0x1E0C80A78](v59);
  v436 = (char *)&v398 - v60;
  MEMORY[0x1E0C80A78](v61);
  v443 = (uint64_t)&v398 - v62;
  MEMORY[0x1E0C80A78](v63);
  v421 = (char *)&v398 - v64;
  MEMORY[0x1E0C80A78](v65);
  v450 = (os_log_t)((char *)&v398 - v66);
  MEMORY[0x1E0C80A78](v67);
  v440 = (char *)&v398 - v68;
  MEMORY[0x1E0C80A78](v69);
  v444 = (uint64_t)&v398 - v70;
  MEMORY[0x1E0C80A78](v71);
  v73 = (char *)&v398 - v72;
  MEMORY[0x1E0C80A78](v74);
  v76 = (char *)&v398 - v75;
  MEMORY[0x1E0C80A78](v77);
  v79 = (char *)&v398 - v78;
  MEMORY[0x1E0C80A78](v80);
  v83 = (char *)&v398 - v82;
  if (!*(_BYTE *)(v6 + 234))
  {
    *(_BYTE *)(v6 + 234) = 1;
    v122 = (_QWORD *)swift_allocObject();
    v123 = *(_QWORD *)(v6 + 8);
    v122[2] = *(_QWORD *)v6;
    v122[3] = v123;
    v122[4] = 1;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return 0;
  }
  v429 = v81;
  v415 = a4;
  v84 = sub_1A55B0238(1, a4);
  v85 = *(_QWORD *)(v84 + 16);
  if (!v85)
  {
    swift_bridgeObjectRelease();
LABEL_32:
    v125 = (_QWORD *)swift_allocObject();
    v126 = *(_QWORD *)(v6 + 8);
    v125[2] = *(_QWORD *)v6;
    v125[3] = v126;
    v125[4] = 733;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return 1;
  }
  v398 = v11;
  v399 = v21;
  v400 = v9;
  v424 = v6;
  v86 = 0;
  v406 = v84;
  v422 = v84 + 32;
  v451 = *(NSObject **)(a2 + 16);
  v441 = a2;
  v417 = v85;
  while (!v451)
  {
LABEL_5:
    if (++v86 == v85)
    {
      swift_bridgeObjectRelease();
      v6 = v424;
      goto LABEL_32;
    }
  }
  v87 = *(_DWORD *)(v422 + 4 * v86);
  v88 = v425;
  v426 = (*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80);
  v89 = a2 + v426;
  swift_bridgeObjectRetain_n();
  v452 = *(_QWORD *)(v88 + 72);
  v90 = (uint64_t)v451;
  while (1)
  {
    sub_1A55034B8(v89, (uint64_t)v83, type metadata accessor for TaskHistory.Previous);
    sub_1A55034B8((uint64_t)v83, (uint64_t)v79, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() == 1)
      break;
    sub_1A55034FC((uint64_t)v79, type metadata accessor for TaskHistory.Previous);
LABEL_9:
    sub_1A55034FC((uint64_t)v83, type metadata accessor for TaskHistory.Previous);
    v89 += v452;
    if (!--v90)
    {
      a2 = v441;
      swift_bridgeObjectRelease_n();
      v85 = v417;
      goto LABEL_5;
    }
  }
  v91 = *((_DWORD *)v79 + 2);
  swift_release();
  if (v91 != v87)
    goto LABEL_9;
  sub_1A55034FC((uint64_t)v83, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease();
  v92 = v441;
  swift_bridgeObjectRelease_n();
  v93 = v424;
  v94 = *(_QWORD *)(v424 + 208);
  v95 = *(unsigned int *)(v424 + 216);
  v96 = *(unsigned __int8 *)(v424 + 220);
  v97 = *(_QWORD *)(v424 + 192);
  v98 = *(unsigned int *)(v424 + 200);
  v99 = *(unsigned __int8 *)(v424 + 204);
  v100 = sub_1A54E3414();
  v101 = v98 | (v99 << 32);
  v102 = v100;
  MessageIdentifierSet.subtracting(_:)(v97, v101, v94, v95 | (v96 << 32));
  v406 = v103;
  v405 = v104;
  v403 = HIDWORD(v104);
  v105 = sub_1A562AE30(1, v427);
  v106 = *(_QWORD *)(v105 + 16);
  v404 = v102;
  v402 = v106;
  if (!v106)
  {
    swift_bridgeObjectRelease();
    v425 = 0;
LABEL_46:
    v140 = (uint64_t)v433;
    goto LABEL_47;
  }
  v107 = 0;
  v401 = v105;
  v422 = v105 + 32;
  v417 = v92 + v426;
  v108 = v402;
  while (2)
  {
    v109 = *(_DWORD *)(v422 + 4 * v107);
    v425 = v107 + 1;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v110 = v417;
    v111 = (uint64_t)v451;
LABEL_17:
    sub_1A55034B8(v110, (uint64_t)v76, type metadata accessor for TaskHistory.Previous);
    sub_1A55034B8((uint64_t)v76, (uint64_t)v73, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1A55034FC((uint64_t)v73, type metadata accessor for TaskHistory.Previous);
      goto LABEL_16;
    }
    v112 = *(_DWORD *)&v73[*(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797DD8) + 48)];
    sub_1A55034FC((uint64_t)v73, type metadata accessor for ClientCommand);
    v113 = v112 == v109;
    v114 = (uint64_t)v448;
    if (!v113)
    {
LABEL_16:
      sub_1A55034FC((uint64_t)v76, type metadata accessor for TaskHistory.Previous);
      v110 += v452;
      if (!--v111)
      {
LABEL_28:
        swift_bridgeObjectRelease();
        v107 = v425;
        if (v425 == v108)
        {
          swift_bridgeObjectRelease();
          v425 = 0;
          v92 = v441;
          goto LABEL_46;
        }
        continue;
      }
      goto LABEL_17;
    }
    break;
  }
  sub_1A55034FC((uint64_t)v76, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease();
  v115 = *(_QWORD *)(v428 + 16);
  if (v115)
  {
    v116 = v423;
    v117 = v428 + ((*(unsigned __int8 *)(v423 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v423 + 80));
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v118 = *(_QWORD *)(v116 + 72);
    v119 = (uint64_t)v437;
    do
    {
      sub_1A55034B8(v117, v119, type metadata accessor for TaskHistory.Running);
      sub_1A55034B8(v119, v114, type metadata accessor for TaskHistory.Running);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1A55034FC(v114, type metadata accessor for TaskHistory.Running);
      }
      else
      {
        v120 = *((_DWORD *)v448 + 2);
        v121 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308);
        sub_1A55034FC((uint64_t)&v448[*(int *)(v121 + 64)], type metadata accessor for ClientCommand);
        v113 = v120 == v109;
        v114 = (uint64_t)v448;
        if (v113)
        {
          sub_1A55034FC((uint64_t)v437, type metadata accessor for TaskHistory.Running);
          v93 = v424;
          v108 = v402;
          goto LABEL_28;
        }
      }
      v119 = (uint64_t)v437;
      sub_1A55034FC((uint64_t)v437, type metadata accessor for TaskHistory.Running);
      v117 += v118;
      --v115;
    }
    while (v115);
    swift_bridgeObjectRelease();
    v92 = v441;
  }
  else
  {
    v92 = v441;
  }
  swift_bridgeObjectRelease();
  v127 = sub_1A55B0238(3, v415);
  v448 = *(char **)(v127 + 16);
  if (v448)
  {
    v128 = 0;
    v425 = 0;
    v437 = (char *)v127;
    v129 = v127 + 32;
    v130 = v92 + v426;
    v131 = (uint64_t)v440;
    do
    {
      v132 = v129;
      v133 = *(_DWORD *)(v129 + 4 * (_QWORD)v128++);
      swift_bridgeObjectRetain_n();
      v134 = 0;
      v135 = v130;
      v136 = v130;
      do
      {
        v137 = (v134 + 1);
        if (__OFADD__(v134, 1))
        {
          __break(1u);
LABEL_224:
          __break(1u);
LABEL_225:
          swift_bridgeObjectRelease();
          v93 = v424;
LABEL_186:
          if (*(_BYTE *)(v93 + 184) != 1)
            goto LABEL_189;
          v337 = *(_QWORD *)(v93 + 176);
          v338 = *(_QWORD *)(v93 + 120);
          v340 = *(_QWORD *)(v93 + 104);
          v339 = *(_QWORD *)(v93 + 112);
          sub_1A5637DF4(v340, v339, v338);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          swift_unknownObjectRetain();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A550FCDC(v340, v339, v338);
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          v341 = (_QWORD *)sub_1A558B96C(MEMORY[0x1E0DEE9D8]);
          v458 = v341;
          v342 = *(_QWORD *)(v337 + 16);
          v451 = v337;
          v237 = 0;
          if (v342)
          {
            v343 = v405 & 0xFFFFFFFFFFLL;
            v344 = (uint64_t *)(v337 + 56);
            v452 = v405 & 0xFFFFFFFFFFLL;
            do
            {
              v345 = *((unsigned int *)v344 - 6);
              v346 = *v344;
              v347 = *(_QWORD *)(v424 + 192);
              v348 = *(unsigned int *)(v424 + 200);
              v349 = *(unsigned __int8 *)(v424 + 204);
              LODWORD(v456) = *((_DWORD *)v344 - 6);
              v93 = v93 & 0xFFFFFF0000000000 | v348 | (v349 << 32);
              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
              MessageIdentifierSet.contains(_:)((uint64_t)&v456, v347, v93);
              if ((v350 & 1) != 0
                || (LODWORD(v456) = v345,
                    v453 = v453 & 0xFFFFFF0000000000 | v343,
                    MessageIdentifierSet.contains(_:)((uint64_t)&v456, v406, v453),
                    (v351 & 1) != 0))
              {
                swift_bridgeObjectRelease();
              }
              else
              {
                sub_1A55113D8((uint64_t)v237);
                isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                v341 = v458;
                v456 = (uint64_t)v458;
                v354 = sub_1A54FDC2C(v345);
                v355 = v341[2];
                v356 = (v353 & 1) == 0;
                v357 = v355 + v356;
                if (__OFADD__(v355, v356))
                  goto LABEL_227;
                v358 = v353;
                if (v341[3] >= v357)
                {
                  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                  {
                    sub_1A5550DDC();
                    v341 = (_QWORD *)v456;
                  }
                }
                else
                {
                  sub_1A5584600(v357, isUniquelyReferenced_nonNull_native);
                  v341 = (_QWORD *)v456;
                  v359 = sub_1A54FDC2C(v345);
                  if ((v358 & 1) != (v360 & 1))
                    goto LABEL_232;
                  v354 = v359;
                }
                v458 = v341;
                swift_bridgeObjectRelease();
                _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                if ((v358 & 1) == 0)
                  sub_1A55B25DC(v354, v345, MEMORY[0x1E0DEE9E8], v341);
                swift_bridgeObjectRelease();
                sub_1A5511BFC(v346);
                v237 = sub_1A5628FC8;
                v343 = v452;
              }
              v344 += 4;
              --v342;
            }
            while (v342);
          }
          swift_bridgeObjectRelease();
          sub_1A54E3458(v406, v405, v403);
          if (!v341[2])
          {
            swift_bridgeObjectRelease();
            sub_1A55113D8((uint64_t)v237);
            return 5;
          }
          v239 = v420;
          v234 = (uint64_t)v399;
          v381 = v416;
          v235 = (uint64_t (*)(uint64_t))v418;
          (*(void (**)(char *, uint64_t, uint64_t))(v420 + 16))(v399, v416, v418);
          v236 = v398;
          sub_1A55034B8(v381, (uint64_t)v398, type metadata accessor for MailboxTaskLogger);
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          v240 = sub_1A594A74C();
          v382 = sub_1A594C030();
          v383 = v382;
          if (os_log_type_enabled(v240, v382))
          {
            v384 = swift_slowAlloc();
            v453 = swift_slowAlloc();
            v455 = v453;
            *(_DWORD *)v384 = 68159491;
            LODWORD(v456) = 2;
            LODWORD(v452) = v383;
            sub_1A594C3CC();
            *(_WORD *)(v384 + 8) = 256;
            v385 = (char *)v236 + *(int *)(v400 + 20);
            LOBYTE(v456) = *v385;
            sub_1A594C3CC();
            *(_WORD *)(v384 + 11) = 2082;
            v386 = *((_QWORD *)v385 + 1);
            v387 = *((_QWORD *)v385 + 2);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v456 = sub_1A55791B0(v386, v387, (uint64_t *)&v455);
            sub_1A594C3CC();
            swift_bridgeObjectRelease();
            *(_WORD *)(v384 + 21) = 1040;
            LODWORD(v456) = 2;
            sub_1A594C3CC();
            *(_WORD *)(v384 + 27) = 512;
            LOWORD(v456) = *((_WORD *)v385 + 12);
            sub_1A594C3CC();
            *(_WORD *)(v384 + 31) = 2160;
            v456 = 0x786F626C69616DLL;
            sub_1A594C3CC();
            *(_WORD *)(v384 + 41) = 2085;
            v388 = *((_DWORD *)v385 + 10);
            v456 = *((_QWORD *)v385 + 4);
            v457 = v388;
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v389 = sub_1A594B4A8();
            v456 = sub_1A55791B0(v389, v390, (uint64_t *)&v455);
            sub_1A594C3CC();
            swift_bridgeObjectRelease();
            sub_1A55034FC((uint64_t)v236, type metadata accessor for MailboxTaskLogger);
            *(_WORD *)(v384 + 51) = 2048;
            swift_beginAccess();
            v456 = v458[2];
            sub_1A594C3CC();
            _os_log_impl(&dword_1A4F90000, v240, (os_log_type_t)v452, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Did upload flags for %ld messages", (uint8_t *)v384, 0x3Du);
            v391 = v453;
            swift_arrayDestroy();
            MEMORY[0x1A85B1964](v391, -1, -1);
            MEMORY[0x1A85B1964](v384, -1, -1);

            (*(void (**)(char *, uint64_t))(v420 + 8))(v399, v418);
LABEL_220:
            v395 = (_QWORD *)v424;
            v396 = (_QWORD *)swift_allocObject();
            v397 = v395[1];
            v396[2] = *v395;
            v396[3] = v397;
            swift_beginAccess();
            v396[4] = v458;
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            sub_1A55113D8((uint64_t)v237);
            return 2;
          }
LABEL_219:
          sub_1A55034FC((uint64_t)v236, type metadata accessor for MailboxTaskLogger);

          (*(void (**)(uint64_t, uint64_t (*)(uint64_t)))(v239 + 8))(v234, v235);
          goto LABEL_220;
        }
        v138 = v444;
        sub_1A55034B8(v136, v444, type metadata accessor for TaskHistory.Previous);
        sub_1A55034B8(v138, v131, type metadata accessor for TaskHistory.Previous);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v139 = *((_DWORD *)v440 + 2);
          swift_release();
          v113 = v139 == v133;
          v131 = (uint64_t)v440;
          if (v113)
          {
            sub_1A55034FC(v444, type metadata accessor for TaskHistory.Previous);
            swift_bridgeObjectRelease();
            v92 = v441;
            swift_bridgeObjectRelease_n();
            v93 = v424;
            goto LABEL_46;
          }
        }
        else
        {
          sub_1A55034FC(v131, type metadata accessor for TaskHistory.Previous);
        }
        sub_1A55034FC(v444, type metadata accessor for TaskHistory.Previous);
        ++v134;
        v136 += v452;
      }
      while (v137 != v451);
      v92 = v441;
      swift_bridgeObjectRelease_n();
      v129 = v132;
      v130 = v135;
    }
    while (v128 != v448);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v425 = 0;
  }
  v170 = v406;
  v171 = v405;
  sub_1A54E4334(v406, v405, v403);
  v172 = MessageIdentifierSetNonEmpty.init(set:)(v170, v171 & 0xFFFFFFFFFFLL);
  v93 = v424;
  v140 = (uint64_t)v433;
  if (BYTE4(v173) != 255)
  {
    v174 = v172;
    v175 = v173;
    sub_1A54E3458(v406, v405, v403);
    v453 = v175;
    v176 = v175 & 0xFFFFFFFFFFLL;
    MessageIdentifierSet.ranges.getter(v174, v175 & 0xFFFFFFFFFFLL);
    v178 = v177;
    v180 = v179;
    v181 = v179 & 0xFFFFFFFFFFLL;
    v182 = MessageIdentifierSet.RangeView.endIndex.getter(v177, v179 & 0xFFFFFFFFFFLL);
    if ((MessageIdentifierSet.RangeView.endIndex.getter(v178, v181) & 0x8000000000000000) == 0)
    {
      v452 = v174;
      v183 = MessageIdentifierSet.RangeView.endIndex.getter(v178, v181);
      sub_1A54E3458(v178, v180, SBYTE4(v180));
      if ((v182 & 0x8000000000000000) == 0 && v183 >= v182)
      {
        v184 = v453;
        v185 = HIDWORD(v453);
        v186 = *(void (**)(char *, uint64_t, uint64_t))(v420 + 16);
        v187 = (unint64_t)v182 > 0x13;
        v188 = v418;
        v189 = v416;
        v190 = v414;
        v191 = (uint64_t)v412;
        v192 = v413;
        if (v187)
        {
          v210 = v410;
          v186(v410, v416, v418);
          sub_1A55034B8(v189, v192, type metadata accessor for MailboxTaskLogger);
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          v211 = v452;
          sub_1A5503BA0(v452, v184);
          sub_1A54E4334(v211, v184, SBYTE4(v184));
          v212 = sub_1A594A74C();
          v213 = sub_1A594C030();
          v214 = v213;
          if (os_log_type_enabled(v212, v213))
          {
            v215 = swift_slowAlloc();
            v450 = (os_log_t)swift_slowAlloc();
            v454 = v450;
            *(_DWORD *)v215 = 68159491;
            LODWORD(v456) = 2;
            LODWORD(v449) = v214;
            sub_1A594C3CC();
            *(_WORD *)(v215 + 8) = 256;
            v216 = v192 + *(int *)(v400 + 20);
            LOBYTE(v456) = *(_BYTE *)v216;
            sub_1A594C3CC();
            *(_WORD *)(v215 + 11) = 2082;
            v451 = v176;
            v217 = (char)v185;
            v218 = *(_QWORD *)(v216 + 8);
            v185 = *(NSObject **)(v216 + 16);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v456 = sub_1A55791B0(v218, (unint64_t)v185, (uint64_t *)&v454);
            sub_1A594C3CC();
            LOBYTE(v185) = v217;
            swift_bridgeObjectRelease();
            *(_WORD *)(v215 + 21) = 1040;
            LODWORD(v456) = 2;
            sub_1A594C3CC();
            *(_WORD *)(v215 + 27) = 512;
            LOWORD(v456) = *(_WORD *)(v216 + 24);
            sub_1A594C3CC();
            *(_WORD *)(v215 + 31) = 2160;
            v456 = 0x786F626C69616DLL;
            sub_1A594C3CC();
            *(_WORD *)(v215 + 41) = 2085;
            v219 = *(_DWORD *)(v216 + 40);
            v456 = *(_QWORD *)(v216 + 32);
            v457 = v219;
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v220 = sub_1A594B4A8();
            v456 = sub_1A55791B0(v220, v221, (uint64_t *)&v454);
            sub_1A594C3CC();
            v93 = v424;
            swift_bridgeObjectRelease();
            sub_1A55034FC(v413, type metadata accessor for MailboxTaskLogger);
            *(_WORD *)(v215 + 51) = 2048;
            v222 = MessageIdentifierSet.count.getter(v211, (uint64_t)v451);
            sub_1A5503B8C(v211, v453);
            v456 = v222;
            v184 = v453;
            sub_1A594C3CC();
            sub_1A5503B8C(v211, v184);
            _os_log_impl(&dword_1A4F90000, v212, (os_log_type_t)v449, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Failed to delete %ld messages after uploading flag changes", (uint8_t *)v215, 0x3Du);
            v223 = v450;
            swift_arrayDestroy();
            MEMORY[0x1A85B1964](v223, -1, -1);
            MEMORY[0x1A85B1964](v215, -1, -1);

            (*(void (**)(char *, uint64_t))(v420 + 8))(v410, v418);
          }
          else
          {
            sub_1A5503B8C(v211, v184);
            sub_1A55034FC(v192, type metadata accessor for MailboxTaskLogger);
            sub_1A5503B8C(v211, v184);

            (*(void (**)(char *, uint64_t))(v420 + 8))(v210, v188);
          }
          v193 = v211;
        }
        else
        {
          v186(v414, v416, v418);
          sub_1A55034B8(v189, v191, type metadata accessor for MailboxTaskLogger);
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          v193 = v452;
          sub_1A5503BA0(v452, v184);
          sub_1A5503BA0(v193, v184);
          sub_1A5503BA0(v193, v184);
          sub_1A54E4334(v193, v184, SBYTE4(v184));
          v194 = sub_1A594A74C();
          v195 = sub_1A594C030();
          v196 = v195;
          if (os_log_type_enabled(v194, v195))
          {
            v197 = swift_slowAlloc();
            v449 = (os_log_t)swift_slowAlloc();
            v454 = v449;
            *(_DWORD *)v197 = 68159747;
            LODWORD(v456) = 2;
            LODWORD(v448) = v196;
            sub_1A594C3CC();
            *(_WORD *)(v197 + 8) = 256;
            v198 = v191 + *(int *)(v400 + 20);
            LOBYTE(v456) = *(_BYTE *)v198;
            sub_1A594C3CC();
            *(_WORD *)(v197 + 11) = 2082;
            v450 = v185;
            v451 = v176;
            v199 = *(_QWORD *)(v198 + 8);
            v200 = *(_QWORD *)(v198 + 16);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v456 = sub_1A55791B0(v199, v200, (uint64_t *)&v454);
            sub_1A594C3CC();
            swift_bridgeObjectRelease();
            *(_WORD *)(v197 + 21) = 1040;
            LODWORD(v456) = 2;
            sub_1A594C3CC();
            *(_WORD *)(v197 + 27) = 512;
            LOWORD(v456) = *(_WORD *)(v198 + 24);
            sub_1A594C3CC();
            *(_WORD *)(v197 + 31) = 2160;
            v456 = 0x786F626C69616DLL;
            sub_1A594C3CC();
            *(_WORD *)(v197 + 41) = 2085;
            v201 = *(_DWORD *)(v198 + 40);
            v456 = *(_QWORD *)(v198 + 32);
            v457 = v201;
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v202 = sub_1A594B4A8();
            v456 = sub_1A55791B0(v202, v203, (uint64_t *)&v454);
            sub_1A594C3CC();
            swift_bridgeObjectRelease();
            sub_1A55034FC(v191, type metadata accessor for MailboxTaskLogger);
            *(_WORD *)(v197 + 51) = 2048;
            v185 = MessageIdentifierSet.count.getter(v193, (uint64_t)v451);
            sub_1A5503B8C(v193, v453);
            v456 = (uint64_t)v185;
            LOBYTE(v185) = (_BYTE)v450;
            sub_1A594C3CC();
            sub_1A5503B8C(v193, v453);
            *(_WORD *)(v197 + 61) = 2082;
            sub_1A54E4334(v193, v453, (char)v185);
            MessageIdentifierSet.debugDescription.getter();
            v205 = v204;
            v207 = v206;
            sub_1A5503B8C(v452, v453);
            v208 = v205;
            v193 = v452;
            v456 = sub_1A55791B0(v208, v207, (uint64_t *)&v454);
            v184 = v453;
            v93 = v424;
            sub_1A594C3CC();
            swift_bridgeObjectRelease();
            sub_1A5503B8C(v193, v184);
            sub_1A5503B8C(v193, v184);
            _os_log_impl(&dword_1A4F90000, v194, (os_log_type_t)v448, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Failed to delete %ld messages with UIDs %{public}s after uploading flag changes", (uint8_t *)v197, 0x47u);
            v209 = v449;
            swift_arrayDestroy();
            MEMORY[0x1A85B1964](v209, -1, -1);
            MEMORY[0x1A85B1964](v197, -1, -1);

            (*(void (**)(char *, uint64_t))(v420 + 8))(v414, v418);
          }
          else
          {
            sub_1A5503B8C(v193, v184);
            sub_1A55034FC(v191, type metadata accessor for MailboxTaskLogger);
            sub_1A5503B8C(v193, v184);
            sub_1A5503B8C(v193, v184);
            sub_1A54E3458(v193, v184, SBYTE4(v184));

            (*(void (**)(char *, uint64_t))(v420 + 8))(v190, v188);
          }
        }
        v224 = swift_allocObject();
        v225 = *(_QWORD *)(v93 + 8);
        *(_QWORD *)(v224 + 16) = *(_QWORD *)v93;
        *(_QWORD *)(v224 + 24) = v225;
        *(_QWORD *)(v224 + 32) = v193;
        *(_DWORD *)(v224 + 40) = v184;
        *(_BYTE *)(v224 + 44) = (_BYTE)v185;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        return 3;
      }
LABEL_229:
      __break(1u);
LABEL_230:
      __break(1u);
      goto LABEL_231;
    }
LABEL_228:
    __break(1u);
    goto LABEL_229;
  }
LABEL_47:
  v141 = sub_1A562AE30(1, v427);
  v437 = *(char **)(v141 + 16);
  if (!v437)
  {
    swift_bridgeObjectRelease();
    goto LABEL_100;
  }
  v142 = 0;
  v422 = v141;
  v444 = v141 + 32;
  v440 = (char *)(v92 + v426);
  v143 = (uint64_t)v421;
  while (2)
  {
    v144 = *(_DWORD *)(v444 + 4 * (_QWORD)v142);
    v448 = v142 + 1;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v145 = 0;
    v146 = (uint64_t)v440;
LABEL_52:
    v147 = (v145 + 1);
    if (__OFADD__(v145, 1))
    {
      __break(1u);
      goto LABEL_97;
    }
    v148 = v450;
    sub_1A55034B8(v146, (uint64_t)v450, type metadata accessor for TaskHistory.Previous);
    sub_1A55034B8((uint64_t)v148, v143, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1A55034FC(v143, type metadata accessor for TaskHistory.Previous);
      goto LABEL_51;
    }
    v149 = *(_DWORD *)(v143 + *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797DD8) + 48));
    sub_1A55034FC(v143, type metadata accessor for ClientCommand);
    v113 = v149 == v144;
    v150 = (uint64_t)isa;
    if (!v113)
    {
LABEL_51:
      sub_1A55034FC((uint64_t)v450, type metadata accessor for TaskHistory.Previous);
      ++v145;
      v146 += v452;
      if (v147 == v451)
      {
LABEL_64:
        swift_bridgeObjectRelease();
        v142 = v448;
        if (v448 == v437)
        {
          swift_bridgeObjectRelease();
          v93 = v424;
          v92 = v441;
          goto LABEL_78;
        }
        continue;
      }
      goto LABEL_52;
    }
    break;
  }
  sub_1A55034FC((uint64_t)v450, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease();
  v151 = *(_QWORD *)(v428 + 16);
  if (!v151)
  {
LABEL_97:
    v92 = v441;
    goto LABEL_67;
  }
  v152 = v423;
  v153 = v428 + ((*(unsigned __int8 *)(v423 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v423 + 80));
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v154 = *(_QWORD *)(v152 + 72);
  v155 = v435;
  do
  {
    sub_1A55034B8(v153, v155, type metadata accessor for TaskHistory.Running);
    sub_1A55034B8(v155, v150, type metadata accessor for TaskHistory.Running);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1A55034FC(v150, type metadata accessor for TaskHistory.Running);
    }
    else
    {
      v156 = *((_DWORD *)isa + 2);
      v157 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308);
      sub_1A55034FC((uint64_t)&isa[*(int *)(v157 + 64)], type metadata accessor for ClientCommand);
      v113 = v156 == v144;
      v150 = (uint64_t)isa;
      if (v113)
      {
        sub_1A55034FC(v435, type metadata accessor for TaskHistory.Running);
        v143 = (uint64_t)v421;
        goto LABEL_64;
      }
    }
    v155 = v435;
    sub_1A55034FC(v435, type metadata accessor for TaskHistory.Running);
    v153 += v154;
    --v151;
  }
  while (v151);
  swift_bridgeObjectRelease();
  v92 = v441;
LABEL_67:
  swift_bridgeObjectRelease();
  v158 = sub_1A55B0238(4, v415);
  v159 = (uint64_t)v436;
  v450 = *(os_log_t *)(v158 + 16);
  if (!v450)
  {
LABEL_99:
    swift_bridgeObjectRelease();
    v93 = v424;
    v226 = *(_QWORD *)(v424 + 192);
    v227 = *(unsigned int *)(v424 + 200);
    v228 = *(unsigned __int8 *)(v424 + 204);
    sub_1A54E4334(v226, v227, *(_BYTE *)(v424 + 204));
    v229 = MessageIdentifierSetNonEmpty.init(set:)(v226, v227 | (v228 << 32));
    v140 = (uint64_t)v433;
    if (BYTE4(v230) == 255)
      goto LABEL_100;
    v299 = v229;
    v300 = v230;
    sub_1A54E3458(v406, v405, v403);
    MessageIdentifierSet.ranges.getter(v299, v300 & 0xFFFFFFFFFFLL);
    v302 = v301;
    v304 = v303;
    v305 = v303 & 0xFFFFFFFFFFLL;
    v306 = MessageIdentifierSet.RangeView.endIndex.getter(v301, v303 & 0xFFFFFFFFFFLL);
    if (MessageIdentifierSet.RangeView.endIndex.getter(v302, v305) < 0)
      goto LABEL_230;
    v307 = MessageIdentifierSet.RangeView.endIndex.getter(v302, v305);
    sub_1A54E3458(v302, v304, SBYTE4(v304));
    if (v306 < 0 || v307 < v306)
    {
LABEL_231:
      __break(1u);
LABEL_232:
      result = sub_1A594CDF8();
      __break(1u);
      return result;
    }
    v308 = HIDWORD(v300);
    v309 = v420;
    v310 = *(void (**)(char *, uint64_t, uint64_t))(v420 + 16);
    v311 = v418;
    v312 = (uint64_t)v411;
    if ((unint64_t)v306 > 0x13)
    {
      v361 = v408;
      v362 = v416;
      v310(v408, v416, v418);
      v363 = v407;
      sub_1A55034B8(v362, v407, type metadata accessor for MailboxTaskLogger);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      sub_1A5503BA0(v299, v300);
      sub_1A54E4334(v299, v300, SBYTE4(v300));
      v364 = sub_1A594A74C();
      v365 = sub_1A594C030();
      v366 = v365;
      if (os_log_type_enabled(v364, v365))
      {
        v367 = swift_slowAlloc();
        LODWORD(v452) = v366;
        v368 = v367;
        v369 = swift_slowAlloc();
        v451 = v369;
        *(_DWORD *)v368 = 68159491;
        LODWORD(v456) = 2;
        v453 = v300 & 0xFFFFFFFFFFLL;
        v454 = (os_log_t)v369;
        sub_1A594C3CC();
        *(_WORD *)(v368 + 8) = 256;
        v370 = v363 + *(int *)(v400 + 20);
        LOBYTE(v456) = *(_BYTE *)v370;
        sub_1A594C3CC();
        *(_WORD *)(v368 + 11) = 2082;
        v450 = v364;
        v372 = *(_QWORD *)(v370 + 8);
        v371 = *(_QWORD *)(v370 + 16);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v456 = sub_1A55791B0(v372, v371, (uint64_t *)&v454);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v368 + 21) = 1040;
        LODWORD(v456) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v368 + 27) = 512;
        LOWORD(v456) = *(_WORD *)(v370 + 24);
        sub_1A594C3CC();
        *(_WORD *)(v368 + 31) = 2160;
        v456 = 0x786F626C69616DLL;
        sub_1A594C3CC();
        *(_WORD *)(v368 + 41) = 2085;
        v373 = *(_DWORD *)(v370 + 40);
        v456 = *(_QWORD *)(v370 + 32);
        v457 = v373;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v374 = sub_1A594B4A8();
        v456 = sub_1A55791B0(v374, v375, (uint64_t *)&v454);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55034FC(v407, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v368 + 51) = 2048;
        v376 = MessageIdentifierSet.count.getter(v299, v453);
        sub_1A5503B8C(v299, v300);
        v456 = v376;
        sub_1A594C3CC();
        sub_1A5503B8C(v299, v300);
        v377 = v450;
        _os_log_impl(&dword_1A4F90000, v450, (os_log_type_t)v452, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Removing %ld deleted messages after uploading flag changes", (uint8_t *)v368, 0x3Du);
        v378 = (uint64_t)v451;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v378, -1, -1);
        MEMORY[0x1A85B1964](v368, -1, -1);

        v335 = *(void (**)(char *, uint64_t))(v420 + 8);
        v336 = (uint64_t *)&v440;
        goto LABEL_206;
      }
      sub_1A5503B8C(v299, v300);
      sub_1A55034FC(v363, type metadata accessor for MailboxTaskLogger);
      sub_1A5503B8C(v299, v300);

      v335 = *(void (**)(char *, uint64_t))(v309 + 8);
      v379 = v361;
    }
    else
    {
      v313 = v409;
      v314 = v416;
      v310(v409, v416, v418);
      sub_1A55034B8(v314, v312, type metadata accessor for MailboxTaskLogger);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      sub_1A5503BA0(v299, v300);
      sub_1A5503BA0(v299, v300);
      sub_1A5503BA0(v299, v300);
      sub_1A54E4334(v299, v300, SBYTE4(v300));
      v315 = sub_1A594A74C();
      v316 = sub_1A594C030();
      v317 = v316;
      if (os_log_type_enabled(v315, v316))
      {
        v318 = swift_slowAlloc();
        LODWORD(v450) = v317;
        v319 = v318;
        v320 = swift_slowAlloc();
        v451 = v320;
        *(_DWORD *)v319 = 68159747;
        LODWORD(v456) = 2;
        v453 = v300 & 0xFFFFFFFFFFLL;
        v454 = (os_log_t)v320;
        sub_1A594C3CC();
        *(_WORD *)(v319 + 8) = 256;
        v321 = *(int *)(v400 + 20);
        v449 = v315;
        v322 = v312;
        v323 = v312 + v321;
        LOBYTE(v456) = *(_BYTE *)v323;
        sub_1A594C3CC();
        *(_WORD *)(v319 + 11) = 2082;
        v452 = HIDWORD(v300);
        v325 = *(_QWORD *)(v323 + 8);
        v324 = *(_QWORD *)(v323 + 16);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v456 = sub_1A55791B0(v325, v324, (uint64_t *)&v454);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v319 + 21) = 1040;
        LODWORD(v456) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v319 + 27) = 512;
        LOWORD(v456) = *(_WORD *)(v323 + 24);
        sub_1A594C3CC();
        *(_WORD *)(v319 + 31) = 2160;
        v456 = 0x786F626C69616DLL;
        sub_1A594C3CC();
        *(_WORD *)(v319 + 41) = 2085;
        v326 = *(_DWORD *)(v323 + 40);
        v456 = *(_QWORD *)(v323 + 32);
        v457 = v326;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v327 = sub_1A594B4A8();
        v456 = sub_1A55791B0(v327, v328, (uint64_t *)&v454);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55034FC(v322, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v319 + 51) = 2048;
        v308 = MessageIdentifierSet.count.getter(v299, v453);
        sub_1A5503B8C(v299, v300);
        v456 = v308;
        LOBYTE(v308) = v452;
        sub_1A594C3CC();
        sub_1A5503B8C(v299, v300);
        *(_WORD *)(v319 + 61) = 2082;
        sub_1A54E4334(v299, v300, v308);
        MessageIdentifierSet.debugDescription.getter();
        v330 = v329;
        v332 = v331;
        sub_1A5503B8C(v299, v300);
        v456 = sub_1A55791B0(v330, v332, (uint64_t *)&v454);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A5503B8C(v299, v300);
        sub_1A5503B8C(v299, v300);
        v333 = v449;
        _os_log_impl(&dword_1A4F90000, v449, (os_log_type_t)v450, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Removing %ld deleted messages with UIDs %{public}s after uploading flag changes", (uint8_t *)v319, 0x47u);
        v334 = (uint64_t)v451;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v334, -1, -1);
        MEMORY[0x1A85B1964](v319, -1, -1);

        v335 = *(void (**)(char *, uint64_t))(v420 + 8);
        v336 = &v441;
LABEL_206:
        v379 = (char *)*(v336 - 32);
        v380 = v418;
LABEL_214:
        v335(v379, v380);
        v392 = (_QWORD *)v424;
        v393 = swift_allocObject();
        v394 = v392[1];
        *(_QWORD *)(v393 + 16) = *v392;
        *(_QWORD *)(v393 + 24) = v394;
        *(_QWORD *)(v393 + 32) = v299;
        *(_DWORD *)(v393 + 40) = v300;
        *(_BYTE *)(v393 + 44) = v308;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        return 4;
      }
      sub_1A5503B8C(v299, v300);
      sub_1A55034FC(v312, type metadata accessor for MailboxTaskLogger);
      sub_1A5503B8C(v299, v300);
      sub_1A5503B8C(v299, v300);
      sub_1A54E3458(v299, v300, SBYTE4(v300));

      v335 = *(void (**)(char *, uint64_t))(v309 + 8);
      v379 = v313;
    }
    v380 = v311;
    goto LABEL_214;
  }
  v160 = 0;
  v448 = (char *)v158;
  v161 = v158 + 32;
  v162 = v92 + v426;
  v163 = v443;
  while (2)
  {
    v164 = v161;
    v165 = *(_DWORD *)(v161 + 4 * (_QWORD)v160);
    v160 = (os_log_t)((char *)v160 + 1);
    swift_bridgeObjectRetain_n();
    v166 = 0;
    v167 = v162;
LABEL_73:
    v168 = (v166 + 1);
    if (__OFADD__(v166, 1))
      goto LABEL_224;
    sub_1A55034B8(v162, v163, type metadata accessor for TaskHistory.Previous);
    sub_1A55034B8(v163, v159, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_1A55034FC(v159, type metadata accessor for TaskHistory.Previous);
      goto LABEL_72;
    }
    v169 = *((_DWORD *)v436 + 2);
    swift_release();
    v113 = v169 == v165;
    v159 = (uint64_t)v436;
    if (!v113)
    {
LABEL_72:
      sub_1A55034FC(v443, type metadata accessor for TaskHistory.Previous);
      ++v166;
      v162 += v452;
      if (v168 == v451)
      {
        v92 = v441;
        swift_bridgeObjectRelease_n();
        v161 = v164;
        v162 = v167;
        if (v160 == v450)
          goto LABEL_99;
        continue;
      }
      goto LABEL_73;
    }
    break;
  }
  sub_1A55034FC(v443, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease();
  v92 = v441;
  swift_bridgeObjectRelease_n();
  v93 = v424;
LABEL_78:
  v140 = (uint64_t)v433;
LABEL_100:
  v231 = sub_1A562AE30(0, v427);
  v450 = *(os_log_t *)(v231 + 16);
  if (!v450)
  {
    swift_bridgeObjectRelease();
    v253 = v428;
LABEL_132:
    v263 = *(_BYTE *)(v93 + 184) == 1
        && !*(_QWORD *)(v93 + 120)
        && *(_QWORD *)(v93 + 160) == *(_QWORD *)(v93 + 168) >> 1;
    goto LABEL_137;
  }
  v232 = 0;
  v444 = v231;
  v233 = (char *)(v231 + 32);
  v234 = v92 + v426;
  v235 = type metadata accessor for TaskHistory.Previous;
  v236 = type metadata accessor for ClientCommand;
  v237 = (void (*)(_QWORD *@<X8>))v442;
  v448 = (char *)(v231 + 32);
  isa = (char *)(v92 + v426);
  while (2)
  {
    v238 = *(_DWORD *)&v233[4 * (_QWORD)v232];
    v232 = (os_log_t)((char *)v232 + 1);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v239 = 0;
LABEL_106:
    v240 = (v239 + 1);
    if (__OFADD__(v239, 1))
    {
      __break(1u);
      goto LABEL_219;
    }
    v241 = v449;
    sub_1A55034B8(v234, (uint64_t)v449, type metadata accessor for TaskHistory.Previous);
    sub_1A55034B8((uint64_t)v241, (uint64_t)v237, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1A55034FC((uint64_t)v237, type metadata accessor for TaskHistory.Previous);
      goto LABEL_105;
    }
    v242 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797DD8);
    v243 = (uint64_t)v237;
    v244 = v242;
    v245 = *(_DWORD *)(v243 + *(int *)(v242 + 48));
    sub_1A55034FC(v243, type metadata accessor for ClientCommand);
    if (v245 != v238)
    {
LABEL_105:
      sub_1A55034FC((uint64_t)v449, type metadata accessor for TaskHistory.Previous);
      ++v239;
      v234 += v452;
      v237 = (void (*)(_QWORD *@<X8>))v442;
      if (v240 == v451)
      {
        v92 = v441;
        swift_bridgeObjectRelease();
        v233 = v448;
        v234 = (uint64_t)isa;
        if (v232 == v450)
        {
          swift_bridgeObjectRelease();
          v93 = v424;
          v253 = v428;
LABEL_131:
          v140 = (uint64_t)v433;
          goto LABEL_132;
        }
        continue;
      }
      goto LABEL_106;
    }
    break;
  }
  sub_1A55034FC((uint64_t)v449, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease();
  v92 = v441;
  swift_bridgeObjectRelease();
  v246 = sub_1A562AE30(0, v427);
  isa = (char *)v246[2].isa;
  if (isa)
  {
    v247 = 0;
    v444 = (uint64_t)v246;
    v449 = v246 + 4;
    v448 = (char *)(v92 + v426);
    v140 = (uint64_t)v433;
    v248 = (uint64_t)v419;
    v249 = v445;
    while (2)
    {
      v250 = *((_DWORD *)&v449->isa + (_QWORD)v247);
      v450 = (os_log_t)((char *)&v247->isa + 1);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v251 = 0;
      v252 = (uint64_t)v448;
      do
      {
        v253 = v251 + 1;
        if (__OFADD__(v251, 1))
        {
          __break(1u);
LABEL_130:
          swift_bridgeObjectRelease();
          v93 = v424;
          v92 = v441;
          goto LABEL_131;
        }
        sub_1A55034B8(v252, v249, type metadata accessor for TaskHistory.Previous);
        sub_1A55034B8(v249, v248, type metadata accessor for TaskHistory.Previous);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          sub_1A55034FC(v248, type metadata accessor for TaskHistory.Previous);
        }
        else
        {
          v254 = *(_DWORD *)(v248 + *(int *)(v244 + 48));
          sub_1A55034FC(v248, type metadata accessor for ClientCommand);
          v113 = v254 == v250;
          v140 = (uint64_t)v433;
          if (v113)
          {
            sub_1A55034FC(v445, type metadata accessor for TaskHistory.Previous);
            swift_bridgeObjectRelease();
            v253 = v428;
            v255 = *(_QWORD *)(v428 + 16);
            if (v255)
            {
              v256 = v423;
              v257 = v428
                   + ((*(unsigned __int8 *)(v423 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v423 + 80));
              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
              v258 = *(_QWORD *)(v256 + 72);
              v259 = (uint64_t)v431;
              v260 = v430;
              do
              {
                sub_1A55034B8(v257, v260, type metadata accessor for TaskHistory.Running);
                sub_1A55034B8(v260, v259, type metadata accessor for TaskHistory.Running);
                if (swift_getEnumCaseMultiPayload() == 1)
                {
                  sub_1A55034FC(v259, type metadata accessor for TaskHistory.Running);
                }
                else
                {
                  v261 = *((_DWORD *)v431 + 2);
                  v262 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308);
                  sub_1A55034FC((uint64_t)&v431[*(int *)(v262 + 64)], type metadata accessor for ClientCommand);
                  v113 = v261 == v250;
                  v259 = (uint64_t)v431;
                  if (v113)
                  {
                    sub_1A55034FC(v430, type metadata accessor for TaskHistory.Running);
                    v140 = (uint64_t)v433;
                    v248 = (uint64_t)v419;
                    goto LABEL_126;
                  }
                }
                v260 = v430;
                sub_1A55034FC(v430, type metadata accessor for TaskHistory.Running);
                v257 += v258;
                --v255;
              }
              while (v255);
              swift_bridgeObjectRelease();
              v253 = v428;
            }
            goto LABEL_130;
          }
        }
        sub_1A55034FC(v445, type metadata accessor for TaskHistory.Previous);
        ++v251;
        v252 += v452;
      }
      while (v253 != v451);
LABEL_126:
      swift_bridgeObjectRelease();
      v247 = v450;
      if (v450 != (os_log_t)isa)
        continue;
      break;
    }
    swift_bridgeObjectRelease();
    v263 = 0;
    v93 = v424;
    v92 = v441;
    v253 = v428;
  }
  else
  {
    swift_bridgeObjectRelease();
    v263 = 0;
    v93 = v424;
    v253 = v428;
    v140 = (uint64_t)v433;
  }
LABEL_137:
  v264 = sub_1A562AE30(1, v427);
  isa = (char *)v264[2].isa;
  if (!isa)
  {
    swift_bridgeObjectRelease();
LABEL_160:
    v281 = MessageIdentifierSet.isEmpty.getter(*(_QWORD *)(v93 + 192), *(unsigned int *)(v93 + 200) | ((unint64_t)*(unsigned __int8 *)(v93 + 204) << 32));
    if ((v263 & 1) == 0 || !v281)
      goto LABEL_189;
LABEL_162:
    v282 = sub_1A562AE30(1, v427);
    v283 = *(_QWORD *)(v282 + 16);
    if (v283)
    {
      v284 = 0;
      v285 = v425;
      while ((sub_1A55E5990(*(_DWORD *)(v282 + 4 * v284 + 32), v253, v92) & 1) == 0)
      {
        if (v283 == ++v284)
          goto LABEL_168;
      }
      swift_bridgeObjectRelease();
      goto LABEL_189;
    }
    v285 = v425;
LABEL_168:
    v425 = v285;
    swift_bridgeObjectRelease();
    v286 = sub_1A55B0238(2, v415);
    v450 = *(os_log_t *)(v286 + 16);
    if (!v450)
    {
      swift_bridgeObjectRelease();
      goto LABEL_186;
    }
    v287 = 0;
    v288 = v286 + 32;
    v289 = v92 + v426;
LABEL_171:
    v290 = v288;
    v291 = *(_DWORD *)(v288 + 4 * (_QWORD)v287);
    v287 = (os_log_t)((char *)v287 + 1);
    swift_bridgeObjectRetain_n();
    v292 = 0;
    v293 = v289;
    while (1)
    {
      v294 = (v292 + 1);
      if (__OFADD__(v292, 1))
        break;
      v295 = v434;
      sub_1A55034B8(v289, v434, type metadata accessor for TaskHistory.Previous);
      v296 = v295;
      v297 = v429;
      sub_1A55034B8(v296, v429, type metadata accessor for TaskHistory.Previous);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v298 = *(_DWORD *)(v297 + 8);
        swift_release();
        if (v298 == v291)
        {
          sub_1A55034FC(v434, type metadata accessor for TaskHistory.Previous);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          goto LABEL_189;
        }
      }
      else
      {
        sub_1A55034FC(v297, type metadata accessor for TaskHistory.Previous);
      }
      sub_1A55034FC(v434, type metadata accessor for TaskHistory.Previous);
      ++v292;
      v289 += v452;
      if (v294 == v451)
      {
        swift_bridgeObjectRelease_n();
        v288 = v290;
        v289 = v293;
        if (v287 == v450)
          goto LABEL_225;
        goto LABEL_171;
      }
    }
    __break(1u);
LABEL_227:
    __break(1u);
    goto LABEL_228;
  }
  LODWORD(v445) = v263;
  v265 = 0;
  v444 = (uint64_t)v264;
  v449 = v264 + 4;
  v448 = (char *)(v92 + v426);
  v266 = v439;
  while (2)
  {
    v267 = *((_DWORD *)&v449->isa + (_QWORD)v265);
    v450 = (os_log_t)((char *)&v265->isa + 1);
    v268 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v269 = 0;
    v270 = (uint64_t)v448;
LABEL_142:
    v271 = (v269 + 1);
    if (__OFADD__(v269, 1))
    {
      __break(1u);
      goto LABEL_216;
    }
    sub_1A55034B8(v270, v266, type metadata accessor for TaskHistory.Previous);
    sub_1A55034B8(v266, v140, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1A55034FC(v140, type metadata accessor for TaskHistory.Previous);
      goto LABEL_141;
    }
    v272 = *(_DWORD *)(v140 + *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797DD8) + 48));
    sub_1A55034FC(v140, type metadata accessor for ClientCommand);
    v113 = v272 == v267;
    v266 = v439;
    if (!v113)
    {
LABEL_141:
      v268 = sub_1A55034FC(v266, type metadata accessor for TaskHistory.Previous);
      ++v269;
      v270 += v452;
      if (v271 == v451)
      {
LABEL_154:
        swift_bridgeObjectRelease();
        v265 = v450;
        if (v450 != (os_log_t)isa)
          continue;
        swift_bridgeObjectRelease();
        v93 = v424;
        v92 = v441;
        v253 = v428;
        LOBYTE(v263) = v445;
        goto LABEL_160;
      }
      goto LABEL_142;
    }
    break;
  }
  sub_1A55034FC(v439, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease();
  v268 = v428;
  v273 = *(_QWORD *)(v428 + 16);
  if (!v273)
  {
LABEL_216:
    v253 = v268;
    goto LABEL_157;
  }
  v274 = v423;
  v275 = v428 + ((*(unsigned __int8 *)(v423 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v423 + 80));
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v276 = *(_QWORD *)(v274 + 72);
  v277 = (uint64_t)v438;
  v278 = v432;
  do
  {
    sub_1A55034B8(v275, v278, type metadata accessor for TaskHistory.Running);
    sub_1A55034B8(v278, v277, type metadata accessor for TaskHistory.Running);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1A55034FC(v277, type metadata accessor for TaskHistory.Running);
    }
    else
    {
      v279 = *((_DWORD *)v438 + 2);
      v280 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308);
      sub_1A55034FC((uint64_t)&v438[*(int *)(v280 + 64)], type metadata accessor for ClientCommand);
      v113 = v279 == v267;
      v277 = (uint64_t)v438;
      if (v113)
      {
        sub_1A55034FC(v432, type metadata accessor for TaskHistory.Running);
        v140 = (uint64_t)v433;
        v266 = v439;
        goto LABEL_154;
      }
    }
    v278 = v432;
    sub_1A55034FC(v432, type metadata accessor for TaskHistory.Running);
    v275 += v276;
    --v273;
  }
  while (v273);
  swift_bridgeObjectRelease();
  v253 = v428;
LABEL_157:
  swift_bridgeObjectRelease();
  v93 = v424;
  v92 = v441;
  if ((v445 & 1) != 0)
    goto LABEL_162;
LABEL_189:
  sub_1A54E3458(v406, v405, v403);
  return 5;
}

uint64_t sub_1A5635504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  char *v23;
  char v24;
  void (*v25)(char *, uint64_t, uint64_t, double);
  NSObject *v26;
  os_log_type_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  uint64_t result;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  int v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  int v71;
  void (*v72)(char *, uint64_t, uint64_t, double);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  int v82;
  uint64_t v83;

  v6 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v6);
  v76 = (uint64_t)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v70 - v9;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v70 - v12;
  v14 = sub_1A594A764();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v80 = (char *)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v70 - v18;
  v22 = MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v70 - v21;
  v79 = a2;
  v24 = *(_BYTE *)(a2 + 233);
  v25 = *(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16);
  v74 = v6;
  if ((v24 & 1) != 0)
  {
    v25(v19, a3, v14, v22);
    sub_1A55034B8(a3, (uint64_t)v10, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v26 = sub_1A594A74C();
    v27 = sub_1A594C030();
    v28 = v27;
    if (os_log_type_enabled(v26, v27))
    {
      v29 = swift_slowAlloc();
      v75 = a3;
      v71 = v28;
      v30 = v29;
      v70 = swift_slowAlloc();
      v83 = v70;
      *(_DWORD *)v30 = 68159235;
      LODWORD(v81) = 2;
      v78 = a1;
      sub_1A594C3CC();
      *(_WORD *)(v30 + 8) = 256;
      v31 = *(int *)(v6 + 20);
      v72 = v25;
      v32 = &v10[v31];
      LOBYTE(v81) = v10[v31];
      sub_1A594C3CC();
      *(_WORD *)(v30 + 11) = 2082;
      v73 = v15;
      v77 = v14;
      v34 = *((_QWORD *)v32 + 1);
      v33 = *((_QWORD *)v32 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v81 = sub_1A55791B0(v34, v33, &v83);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 21) = 1040;
      LODWORD(v81) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v30 + 27) = 512;
      LOWORD(v81) = *((_WORD *)v32 + 12);
      sub_1A594C3CC();
      *(_WORD *)(v30 + 31) = 2160;
      v81 = 0x786F626C69616DLL;
      v15 = v73;
      sub_1A594C3CC();
      *(_WORD *)(v30 + 41) = 2085;
      v35 = *((_QWORD *)v32 + 4);
      v36 = *((_DWORD *)v32 + 10);
      v25 = v72;
      v81 = v35;
      v82 = v36;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v37 = sub_1A594B4A8();
      v81 = sub_1A55791B0(v37, v38, &v83);
      v14 = v77;
      sub_1A594C3CC();
      a1 = v78;
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v10, type metadata accessor for MailboxTaskLogger);
      _os_log_impl(&dword_1A4F90000, v26, (os_log_type_t)v71, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Persistence has more flag changes to upload. Will mark as needing to re-run.", (uint8_t *)v30, 0x33u);
      v39 = v70;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v39, -1, -1);
      a3 = v75;
      MEMORY[0x1A85B1964](v30, -1, -1);
    }
    else
    {
      sub_1A55034FC((uint64_t)v10, type metadata accessor for MailboxTaskLogger);
    }

    v53 = *(void (**)(char *, uint64_t))(v15 + 8);
    v53(v19, v14);
    sub_1A554B85C(7u);
    result = sub_1A54F3290(&v81, 7);
  }
  else
  {
    v25((char *)&v70 - v21, a3, v14, v22);
    v75 = a3;
    sub_1A55034B8(a3, (uint64_t)v13, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v40 = sub_1A594A74C();
    v41 = sub_1A594C030();
    v42 = v41;
    if (os_log_type_enabled(v40, v41))
    {
      v43 = swift_slowAlloc();
      v73 = swift_slowAlloc();
      v83 = v73;
      *(_DWORD *)v43 = 68159235;
      LODWORD(v81) = 2;
      v78 = a1;
      sub_1A594C3CC();
      *(_WORD *)(v43 + 8) = 256;
      v44 = *(int *)(v6 + 20);
      v72 = v25;
      v45 = &v13[v44];
      LOBYTE(v81) = v13[v44];
      sub_1A594C3CC();
      *(_WORD *)(v43 + 11) = 2082;
      v71 = v42;
      v77 = v14;
      v47 = *((_QWORD *)v45 + 1);
      v46 = *((_QWORD *)v45 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v81 = sub_1A55791B0(v47, v46, &v83);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 21) = 1040;
      LODWORD(v81) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v43 + 27) = 512;
      LOWORD(v81) = *((_WORD *)v45 + 12);
      sub_1A594C3CC();
      *(_WORD *)(v43 + 31) = 2160;
      v81 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v43 + 41) = 2085;
      v48 = *((_QWORD *)v45 + 4);
      v49 = *((_DWORD *)v45 + 10);
      v25 = v72;
      v81 = v48;
      v82 = v49;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v50 = sub_1A594B4A8();
      v81 = sub_1A55791B0(v50, v51, &v83);
      v14 = v77;
      sub_1A594C3CC();
      a1 = v78;
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v13, type metadata accessor for MailboxTaskLogger);
      _os_log_impl(&dword_1A4F90000, v40, (os_log_type_t)v71, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Marking no more flag changes pending upload.", (uint8_t *)v43, 0x33u);
      v52 = v73;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v52, -1, -1);
      MEMORY[0x1A85B1964](v43, -1, -1);
    }
    else
    {
      sub_1A55034FC((uint64_t)v13, type metadata accessor for MailboxTaskLogger);
    }

    v53 = *(void (**)(char *, uint64_t))(v15 + 8);
    result = ((uint64_t (*)(char *, uint64_t))v53)(v23, v14);
    *(_BYTE *)(a1 + 233) = 0;
    a3 = v75;
  }
  if (*(_BYTE *)(v79 + 234) == 3)
  {
    ((void (*)(char *, uint64_t, uint64_t))v25)(v80, a3, v14);
    v55 = a3;
    v56 = v76;
    sub_1A55034B8(v55, v76, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v57 = sub_1A594A74C();
    v58 = sub_1A594C030();
    v59 = v58;
    if (os_log_type_enabled(v57, v58))
    {
      v60 = swift_slowAlloc();
      LODWORD(v79) = v59;
      v61 = v60;
      v62 = swift_slowAlloc();
      v77 = v14;
      v63 = v62;
      v83 = v62;
      *(_DWORD *)v61 = 68159235;
      LODWORD(v81) = 2;
      v78 = a1;
      sub_1A594C3CC();
      *(_WORD *)(v61 + 8) = 256;
      v64 = v56 + *(int *)(v74 + 20);
      LOBYTE(v81) = *(_BYTE *)v64;
      sub_1A594C3CC();
      *(_WORD *)(v61 + 11) = 2082;
      v73 = v15;
      v65 = *(_QWORD *)(v64 + 8);
      v66 = *(_QWORD *)(v64 + 16);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v81 = sub_1A55791B0(v65, v66, &v83);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v61 + 21) = 1040;
      LODWORD(v81) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v61 + 27) = 512;
      LOWORD(v81) = *(_WORD *)(v64 + 24);
      sub_1A594C3CC();
      *(_WORD *)(v61 + 31) = 2160;
      v81 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v61 + 41) = 2085;
      v67 = *(_DWORD *)(v64 + 40);
      v81 = *(_QWORD *)(v64 + 32);
      v82 = v67;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v68 = sub_1A594B4A8();
      v81 = sub_1A55791B0(v68, v69, &v83);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC(v56, type metadata accessor for MailboxTaskLogger);
      _os_log_impl(&dword_1A4F90000, v57, (os_log_type_t)v79, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Marking flag changes upload as “has dependencies”.", (uint8_t *)v61, 0x33u);
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v63, -1, -1);
      MEMORY[0x1A85B1964](v61, -1, -1);

      (*(void (**)(char *, uint64_t))(v73 + 8))(v80, v77);
    }
    else
    {
      sub_1A55034FC(v56, type metadata accessor for MailboxTaskLogger);

      v53(v80, v14);
    }
    return sub_1A54F3290(&v81, 7);
  }
  return result;
}

uint64_t sub_1A5635EFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1A5632134(a1, a2, a3, a4, a5, a6);
  *a7 = result;
  a7[1] = v9;
  return result;
}

void sub_1A5635F20(const void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1A5639458(a1, a2, a3, a4);
}

double sub_1A5635F2C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1A5639620(a1, a2, a3, a5, a6);
}

uint64_t sub_1A5635F38(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[5];
  uint64_t v11;

  v3 = *(_QWORD *)(v2 + 24);
  v4 = *(_DWORD *)(v2 + 32);
  v10[3] = a2;
  if (*(_BYTE *)(result + 168) == 1)
  {
    v5 = result;
    v7 = *(_QWORD *)(result + 152);
    v6 = *(_QWORD *)(result + 160);
    v11 = *(_QWORD *)(result + 144);
    v8 = v11;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A551C6E4((uint64_t)&v11, v3, v4, 0, (void (*)(uint64_t))sub_1A56385D4, v10);
    result = sub_1A54E8FCC(v8, v7, v6, 1);
    v9 = v11;
    *(_QWORD *)(v5 + 152) = 0;
    *(_QWORD *)(v5 + 160) = 0;
    *(_QWORD *)(v5 + 144) = v9;
    *(_BYTE *)(v5 + 168) = 1;
  }
  return result;
}

unint64_t sub_1A5635FE0()
{
  return 0xD000000000000011;
}

uint64_t sub_1A5635FFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t i;
  _BOOL8 v5;
  BOOL v6;
  uint64_t v7;
  _BOOL8 v8;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
    return 0;
  result = 0;
  for (i = v1 + 56; ; i += 32)
  {
    v5 = *(_QWORD *)(*(_QWORD *)(i - 8) + 16) != 0;
    v6 = __OFADD__(result, v5);
    v7 = result + v5;
    if (v6)
      break;
    v8 = *(_QWORD *)(*(_QWORD *)i + 16) != 0;
    result = v7 + v8;
    if (__OFADD__(v7, v8))
      goto LABEL_9;
    if (!--v2)
      return result;
  }
  __break(1u);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1A5636060(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t inited;
  uint64_t v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  _QWORD *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  _QWORD *v35;

  v4 = 256;
  if (!*(_BYTE *)(a1 + 5))
    v4 = 0;
  v5 = v4 | *(unsigned __int8 *)(a1 + 4);
  v6 = 0x10000;
  if (!*(_BYTE *)(a1 + 6))
    v6 = 0;
  v7 = 0x1000000;
  if (!*(_BYTE *)(a1 + 7))
    v7 = 0;
  v8 = v5 | v6 | v7;
  v9 = 0x100000000;
  if (!*(_BYTE *)(a1 + 8))
    v9 = 0;
  v10 = 0x10000000000;
  if (!*(_BYTE *)(a1 + 9))
    v10 = 0;
  v11 = FlagEncoder.encode(_:)(v8 | v9 | v10 | ((unint64_t)*(unsigned __int8 *)(a1 + 10) << 48) | ((unint64_t)*(unsigned __int8 *)(a1 + 11) << 56), *(_QWORD *)(a1 + 12));
  v13 = v12;
  v14 = (uint64_t *)Flag.deleted.unsafeMutableAddressor();
  v15 = *v14;
  v16 = v14[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  LOBYTE(v17) = sub_1A54EA0B8(v15, v16, v11);
  swift_bridgeObjectRelease();
  if ((v17 & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AF48);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A59ABD10;
    v19 = v14[1];
    *(_QWORD *)(inited + 32) = *v14;
    *(_QWORD *)(inited + 40) = v19;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v17 = sub_1A54F6E78(inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_bridgeObjectRelease();
    v20 = MEMORY[0x1E0DEE9E8];
    v11 = v17;
  }
  else
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v20 = v13;
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v22 = (_QWORD *)*a3;
  v35 = (_QWORD *)*a3;
  *a3 = 0x8000000000000000;
  v24 = sub_1A54FE0C4(v11, v20);
  v25 = v22[2];
  v26 = (v23 & 1) == 0;
  v27 = v25 + v26;
  if (__OFADD__(v25, v26))
  {
    __break(1u);
    goto LABEL_23;
  }
  LOBYTE(v17) = v23;
  if (v22[3] >= v27)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_19;
LABEL_23:
    sub_1A55519F8();
    goto LABEL_19;
  }
  sub_1A5585A1C(v27, isUniquelyReferenced_nonNull_native);
  v28 = sub_1A54FE0C4(v11, v20);
  if ((v17 & 1) != (v29 & 1))
  {
    result = sub_1A594CDF8();
    __break(1u);
    return result;
  }
  v24 = v28;
LABEL_19:
  *a3 = v35;
  swift_bridgeObjectRelease();
  v30 = (_QWORD *)*a3;
  if ((v17 & 1) == 0)
  {
    v31 = sub_1A54E3414();
    v32 = MessageIdentifierSet.init()(&type metadata for UID, v31);
    sub_1A55B2668(v24, v11, v20, v32, v33 & 0xFFFFFFFFFFLL, v30);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
  MessageIdentifierSet.insert(_:)();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A563632C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  char v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  BOOL v51;
  int v52;
  unsigned int v53;
  uint64_t v54;
  char v55;
  BOOL v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  char *v63;
  uint64_t *v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  BOOL v76;
  unint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  BOOL v86;
  uint64_t v87;
  char v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  BOOL v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  unint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  unint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t *__dst;
  unint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unsigned int v132;
  __int128 *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  int v138;
  char v139;
  uint64_t v140;
  char v141;
  uint64_t v142;
  unint64_t v143;
  unint64_t v144;
  unint64_t v145;
  unint64_t v146;
  uint64_t v147;

  v3 = a1[1];
  result = sub_1A594CC78();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_149;
    if (v3)
      return sub_1A5636CB8(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_156;
  v121 = result;
  v122 = v3;
  v119 = a1;
  if (v3 < 2)
  {
    v8 = (char *)MEMORY[0x1E0DEE9D8];
    __dst = (uint64_t *)(MEMORY[0x1E0DEE9D8] + 32);
    v120 = MEMORY[0x1E0DEE9D8];
    if (v3 != 1)
    {
      v62 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      goto LABEL_113;
    }
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_1A594BA18();
    *(_QWORD *)(v7 + 16) = v6;
    v120 = v7;
    __dst = (uint64_t *)(v7 + 32);
  }
  v9 = 0;
  v131 = *a1;
  v118 = *a1 + 24;
  v8 = (char *)MEMORY[0x1E0DEE9D8];
  v10 = v122;
  do
  {
    v11 = sub_1A56370EC(&v147, v131, v10, v9);
    if (v1)
      goto LABEL_124;
    v12 = v147;
    if ((v11 & 1) != 0)
    {
      if (v147 < v9)
        goto LABEL_147;
      if (v9 < v147)
      {
        v13 = 32 * v147;
        v14 = 32 * v9;
        v15 = v147;
        v16 = v9;
        do
        {
          if (v16 != --v15)
          {
            if (!v131)
              goto LABEL_154;
            v17 = (_OWORD *)(v131 + v14);
            v18 = *(_QWORD *)(v131 + v14);
            v19 = v131 + v13;
            v20 = *(_DWORD *)(v131 + v14 + 8);
            v21 = *(_BYTE *)(v131 + v14 + 12);
            v22 = *(_OWORD *)(v131 + v14 + 16);
            v23 = *(_OWORD *)(v131 + v13 - 16);
            *v17 = *(_OWORD *)(v131 + v13 - 32);
            v17[1] = v23;
            *(_QWORD *)(v19 - 32) = v18;
            *(_DWORD *)(v19 - 24) = v20;
            *(_BYTE *)(v19 - 20) = v21;
            *(_OWORD *)(v19 - 16) = v22;
          }
          ++v16;
          v13 -= 32;
          v14 += 32;
        }
        while (v16 < v15);
      }
    }
    if (v12 >= v122)
      goto LABEL_63;
    if (__OFSUB__(v12, v9))
      goto LABEL_148;
    if (v12 - v9 >= v121)
      goto LABEL_63;
    if (__OFADD__(v9, v121))
      goto LABEL_150;
    if (v9 + v121 >= v122)
      v24 = v122;
    else
      v24 = v9 + v121;
    if (v24 < v9)
    {
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
LABEL_155:
      __break(1u);
LABEL_156:
      result = sub_1A594C9B4();
      __break(1u);
      return result;
    }
    if (v12 == v24)
      goto LABEL_63;
    v117 = v8;
    v25 = v118 + 32 * v12;
    v26 = v131;
    v123 = v24;
    v124 = v9;
    sub_1A54E3414();
    while (2)
    {
      v27 = v26 + 32 * v12;
      v28 = *(_QWORD *)v27;
      v29 = *(_DWORD *)(v27 + 8);
      v30 = *(_BYTE *)(v27 + 12);
      v134 = v9;
      v125 = v25;
      v129 = v12;
      while (1)
      {
        v136 = *(unsigned int *)(v25 - 48);
        v137 = *(_QWORD *)(v25 - 56);
        v135 = *(unsigned __int8 *)(v25 - 44);
        v133 = (__int128 *)(v25 - 56);
        v31 = v29;
        v32 = v30;
        v143 = v143 & 0xFFFFFF0000000000 | v29 | ((unint64_t)v30 << 32);
        v33 = v28;
        MessageIdentifierSet.startIndex.getter();
        v35 = v34;
        v37 = v36;
        v144 = v144 & 0xFFFFFF0000000000 | v31 & 0xFFFFFF00FFFFFFFFLL | ((unint64_t)v30 << 32);
        MessageIdentifierSet.endIndex.getter();
        v40 = v35 == v39 && v37 == v38;
        v41 = v40;
        v139 = v41;
        v142 = v33;
        v141 = v30;
        v140 = v31;
        if (v40)
        {
          sub_1A54E4334(v33, v31, v30);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v44 = v136;
          v43 = v137;
          v42 = v135;
          sub_1A54E4334(v137, v136, v135);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v132 = 0;
        }
        else
        {
          sub_1A54E4334(v33, v31, v30);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v42 = v135;
          sub_1A54E4334(v137, v136, v135);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v128 = v128 & 0xFFFFFF0000000000 | v31 | (v32 << 32);
          MessageIdentifierSet.subscript.getter();
          v132 = v147;
          v43 = v137;
          v44 = v136;
        }
        MessageIdentifierSet.startIndex.getter();
        v46 = v45;
        v48 = v47;
        v145 = v145 & 0xFFFFFF0000000000 | v44 & 0xFFFFFF00FFFFFFFFLL | ((unint64_t)v42 << 32);
        MessageIdentifierSet.endIndex.getter();
        v51 = v46 == v50 && v48 == v49;
        v52 = !v51;
        v138 = v52;
        v146 = v146 & 0xFFFFFF0000000000 | v44 & 0xFFFFFF00FFFFFFFFLL | ((unint64_t)v42 << 32);
        if (v51)
        {
          v53 = 0;
          v26 = v131;
        }
        else
        {
          sub_1A54E4334(v43, v44, v42);
          v26 = v131;
          v127 = v127 & 0xFFFFFF0000000000 | v44 | (v42 << 32);
          MessageIdentifierSet.subscript.getter();
          sub_1A54E3458(v43, v44, v42);
          v53 = v147;
        }
        sub_1A54E3458(v43, v44, v42);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v139 & 1) != 0)
        {
          v54 = v129;
          v55 = v141;
          v56 = v138;
          goto LABEL_58;
        }
        v54 = v129;
        v55 = v141;
        if (!v138)
          break;
        v56 = v132 < v53;
LABEL_58:
        sub_1A54E3458(v142, v140, v55);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!v56)
          goto LABEL_34;
        if (!v26)
          goto LABEL_152;
        v58 = *v133;
        v57 = *(_OWORD *)(v25 - 40);
        *(_QWORD *)(v25 - 32) = *(_QWORD *)v25;
        v25 -= 32;
        v28 = *(_QWORD *)(v25 + 8);
        v29 = *(_DWORD *)(v25 + 16);
        v30 = *(_BYTE *)(v25 + 20);
        v59 = *(_QWORD *)(v25 + 24);
        v133[2] = v58;
        v133[3] = v57;
        *(_QWORD *)(v25 - 24) = v28;
        *(_DWORD *)(v25 - 16) = v29;
        *(_BYTE *)(v25 - 12) = v30;
        *(_QWORD *)(v25 - 8) = v59;
        if (v54 == ++v134)
          goto LABEL_34;
      }
      sub_1A54E3458(v142, v140, v141);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_34:
      v12 = v54 + 1;
      v9 = v124;
      v25 = v125 + 32;
      if (v12 != v123)
        continue;
      break;
    }
    v12 = v123;
    v8 = v117;
LABEL_63:
    if (v12 < v9)
      goto LABEL_146;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v8 = sub_1A5589B40(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
    v61 = *((_QWORD *)v8 + 2);
    v60 = *((_QWORD *)v8 + 3);
    v62 = v61 + 1;
    if (v61 >= v60 >> 1)
      v8 = sub_1A5589B40((char *)(v60 > 1), v61 + 1, 1, v8);
    *((_QWORD *)v8 + 2) = v62;
    v63 = v8 + 32;
    v64 = (uint64_t *)&v8[16 * v61 + 32];
    *v64 = v9;
    v64[1] = v12;
    v130 = v12;
    if (v61)
    {
      while (2)
      {
        v65 = v62 - 1;
        if (v62 >= 4)
        {
          v70 = &v63[16 * v62];
          v71 = *((_QWORD *)v70 - 8);
          v72 = *((_QWORD *)v70 - 7);
          v76 = __OFSUB__(v72, v71);
          v73 = v72 - v71;
          if (v76)
            goto LABEL_131;
          v75 = *((_QWORD *)v70 - 6);
          v74 = *((_QWORD *)v70 - 5);
          v76 = __OFSUB__(v74, v75);
          v68 = v74 - v75;
          v69 = v76;
          if (v76)
            goto LABEL_132;
          v77 = v62 - 2;
          v78 = &v63[16 * v62 - 32];
          v80 = *(_QWORD *)v78;
          v79 = *((_QWORD *)v78 + 1);
          v76 = __OFSUB__(v79, v80);
          v81 = v79 - v80;
          if (v76)
            goto LABEL_134;
          v76 = __OFADD__(v68, v81);
          v82 = v68 + v81;
          if (v76)
            goto LABEL_137;
          if (v82 >= v73)
          {
            v100 = &v63[16 * v65];
            v102 = *(_QWORD *)v100;
            v101 = *((_QWORD *)v100 + 1);
            v76 = __OFSUB__(v101, v102);
            v103 = v101 - v102;
            if (v76)
              goto LABEL_141;
            v93 = v68 < v103;
          }
          else
          {
LABEL_82:
            if ((v69 & 1) != 0)
              goto LABEL_133;
            v77 = v62 - 2;
            v83 = &v63[16 * v62 - 32];
            v85 = *(_QWORD *)v83;
            v84 = *((_QWORD *)v83 + 1);
            v86 = __OFSUB__(v84, v85);
            v87 = v84 - v85;
            v88 = v86;
            if (v86)
              goto LABEL_136;
            v89 = &v63[16 * v65];
            v91 = *(_QWORD *)v89;
            v90 = *((_QWORD *)v89 + 1);
            v76 = __OFSUB__(v90, v91);
            v92 = v90 - v91;
            if (v76)
              goto LABEL_139;
            if (__OFADD__(v87, v92))
              goto LABEL_140;
            if (v87 + v92 < v68)
              goto LABEL_94;
            v93 = v68 < v92;
          }
          if (v93)
            v65 = v77;
        }
        else
        {
          if (v62 == 3)
          {
            v67 = *((_QWORD *)v8 + 4);
            v66 = *((_QWORD *)v8 + 5);
            v76 = __OFSUB__(v66, v67);
            v68 = v66 - v67;
            v69 = v76;
            goto LABEL_82;
          }
          v94 = *((_QWORD *)v8 + 4);
          v95 = *((_QWORD *)v8 + 5);
          v76 = __OFSUB__(v95, v94);
          v87 = v95 - v94;
          v88 = v76;
LABEL_94:
          if ((v88 & 1) != 0)
            goto LABEL_135;
          v96 = &v63[16 * v65];
          v98 = *(_QWORD *)v96;
          v97 = *((_QWORD *)v96 + 1);
          v76 = __OFSUB__(v97, v98);
          v99 = v97 - v98;
          if (v76)
            goto LABEL_138;
          if (v99 < v87)
            goto LABEL_110;
        }
        v104 = v65 - 1;
        if (v65 - 1 >= v62)
        {
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
          goto LABEL_151;
        }
        if (!v131)
          goto LABEL_153;
        v105 = &v63[16 * v104];
        v106 = *(_QWORD *)v105;
        v107 = &v63[16 * v65];
        v108 = *((_QWORD *)v107 + 1);
        sub_1A5637500((uint64_t *)(v131 + 32 * *(_QWORD *)v105), (uint64_t *)(v131 + 32 * *(_QWORD *)v107), v131 + 32 * v108, __dst);
        if (v108 < v106)
          goto LABEL_128;
        if (v65 > *((_QWORD *)v8 + 2))
          goto LABEL_129;
        *(_QWORD *)v105 = v106;
        *(_QWORD *)&v63[16 * v104 + 8] = v108;
        v109 = *((_QWORD *)v8 + 2);
        if (v65 >= v109)
          goto LABEL_130;
        v62 = v109 - 1;
        memmove(&v63[16 * v65], v107 + 16, 16 * (v109 - 1 - v65));
        *((_QWORD *)v8 + 2) = v109 - 1;
        if (v109 <= 2)
          goto LABEL_110;
        continue;
      }
    }
    v62 = 1;
LABEL_110:
    v10 = v122;
    v9 = v130;
  }
  while (v130 < v122);
LABEL_113:
  if (v62 >= 2)
  {
    v110 = *v119;
    do
    {
      v111 = v62 - 2;
      if (v62 < 2)
        goto LABEL_142;
      if (!v110)
        goto LABEL_155;
      v112 = v8;
      v113 = *(_QWORD *)&v8[16 * v111 + 32];
      v114 = *(_QWORD *)&v8[16 * v62 + 24];
      sub_1A5637500((uint64_t *)(v110 + 32 * v113), (uint64_t *)(v110 + 32 * *(_QWORD *)&v8[16 * v62 + 16]), v110 + 32 * v114, __dst);
      if (v1)
        break;
      if (v114 < v113)
        goto LABEL_143;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v112 = sub_1A558A0A4((uint64_t)v8);
      if (v111 >= *((_QWORD *)v112 + 2))
        goto LABEL_144;
      v115 = &v112[16 * v111 + 32];
      *(_QWORD *)v115 = v113;
      *((_QWORD *)v115 + 1) = v114;
      v116 = *((_QWORD *)v112 + 2);
      if (v62 > v116)
        goto LABEL_145;
      v8 = v112;
      memmove(&v112[16 * v62 + 16], &v112[16 * v62 + 32], 16 * (v116 - v62));
      *((_QWORD *)v112 + 2) = v116 - 1;
      v62 = v116 - 1;
    }
    while (v116 > 2);
  }
LABEL_124:
  swift_bridgeObjectRelease();
  *(_QWORD *)(v120 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A5636CB8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  _BOOL4 v31;
  unsigned int v32;
  BOOL v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int v44;
  __int128 *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  _BOOL4 v51;
  BOOL v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unsigned int v59;
  unsigned int v60;

  v38 = result;
  if (a3 != a2)
  {
    v4 = a3;
    v5 = *a4;
    sub_1A54E3414();
    v42 = v5;
    v7 = v5 + 32 * v4 + 24;
LABEL_6:
    v9 = v42 + 32 * v4;
    v10 = *(_QWORD *)v9;
    v11 = *(_DWORD *)(v9 + 8);
    v12 = *(_BYTE *)(v9 + 12);
    v46 = v38;
    v39 = v7;
    v43 = v4;
    while (1)
    {
      v50 = *(_QWORD *)(v7 - 56);
      v49 = *(unsigned int *)(v7 - 48);
      v47 = *(unsigned __int8 *)(v7 - 44);
      v45 = (__int128 *)(v7 - 56);
      v13 = v11;
      v55 = v6 & 0xFFFFFF0000000000 | v11 | ((unint64_t)v12 << 32);
      MessageIdentifierSet.startIndex.getter();
      v15 = v14;
      v17 = v16;
      v56 = v56 & 0xFFFFFF0000000000 | v13 & 0xFFFFFF00FFFFFFFFLL | ((unint64_t)v12 << 32);
      MessageIdentifierSet.endIndex.getter();
      v20 = v15 == v19 && v17 == v18;
      v21 = v20;
      v52 = v21;
      v53 = v13;
      v54 = v10;
      v48 = v12;
      if (v20)
      {
        sub_1A54E4334(v10, v13, v12);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v22 = v47;
        sub_1A54E4334(v50, v49, v47);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v44 = 0;
      }
      else
      {
        sub_1A54E4334(v10, v13, v12);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v22 = v47;
        sub_1A54E4334(v50, v49, v47);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v41 = v41 & 0xFFFFFF0000000000 | v13 | ((unint64_t)v12 << 32);
        MessageIdentifierSet.subscript.getter();
        v44 = v60;
      }
      v58 = v58 & 0xFFFFFF0000000000 | v49 & 0xFFFFFF00FFFFFFFFLL | ((unint64_t)v22 << 32);
      v23 = v50;
      MessageIdentifierSet.startIndex.getter();
      v25 = v24;
      v27 = v26;
      v57 = v57 & 0xFFFFFF0000000000 | v49 & 0xFFFFFF00FFFFFFFFLL | ((unint64_t)v22 << 32);
      MessageIdentifierSet.endIndex.getter();
      v30 = v25 == v29 && v27 == v28;
      v31 = !v30;
      v51 = v31;
      if (v30)
      {
        v32 = 0;
      }
      else
      {
        sub_1A54E4334(v23, v49, v22);
        v40 = v40 & 0xFFFFFF0000000000 | v49 | (v22 << 32);
        MessageIdentifierSet.subscript.getter();
        sub_1A54E3458(v23, v49, v22);
        v32 = v59;
      }
      sub_1A54E3458(v23, v49, v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v52)
      {
        v8 = v43;
        v33 = v51;
      }
      else
      {
        if (!v51)
        {
          sub_1A54E3458(v54, v13, v48);
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease();
          v8 = v43;
          v6 = v55;
LABEL_5:
          v4 = v8 + 1;
          v7 = v39 + 32;
          if (v4 == a2)
            return result;
          goto LABEL_6;
        }
        v33 = v44 < v32;
        v8 = v43;
      }
      sub_1A54E3458(v54, v53, v48);
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      v6 = v55;
      if (!v33)
        goto LABEL_5;
      if (!v42)
        break;
      v35 = *v45;
      v34 = *(_OWORD *)(v7 - 40);
      *(_QWORD *)(v7 - 32) = *(_QWORD *)v7;
      v7 -= 32;
      v10 = *(_QWORD *)(v7 + 8);
      v11 = *(_DWORD *)(v7 + 16);
      v12 = *(_BYTE *)(v7 + 20);
      v36 = *(_QWORD *)(v7 + 24);
      v45[2] = v35;
      v45[3] = v34;
      *(_QWORD *)(v7 - 24) = v10;
      *(_DWORD *)(v7 - 16) = v11;
      *(_BYTE *)(v7 - 12) = v12;
      *(_QWORD *)(v7 - 8) = v36;
      if (v8 == ++v46)
        goto LABEL_5;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1A56370EC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t *v10;
  int v11;
  char v12;
  uint64_t *v13;
  int v14;
  char v15;
  int v16;
  unint64_t v18;
  unsigned __int8 *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  _BOOL4 v43;
  unsigned int v44;
  _BOOL4 v45;
  _BOOL4 v46;
  unint64_t v47;
  unint64_t v48;
  int v49;
  unint64_t v50;
  unsigned __int8 *v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  char v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  char v66;
  __int128 v67;
  uint64_t v68;
  int v69;
  char v70;
  __int128 v71;
  unint64_t v72;

  v7 = a4 + 1;
  v63 = a3;
  if (a4 + 1 >= a3)
  {
    LOBYTE(v5) = 0;
  }
  else
  {
    v10 = (uint64_t *)(a2 + 32 * v7);
    v11 = *((_DWORD *)v10 + 2);
    v12 = *((_BYTE *)v10 + 12);
    v68 = *v10;
    v69 = v11;
    v70 = v12;
    v71 = *((_OWORD *)v10 + 1);
    v13 = (uint64_t *)(a2 + 32 * a4);
    v14 = *((_DWORD *)v13 + 2);
    v15 = *((_BYTE *)v13 + 12);
    v64 = *v13;
    v65 = v14;
    v66 = v15;
    v67 = *((_OWORD *)v13 + 1);
    v16 = sub_1A5631914((uint64_t)&v68, (uint64_t)&v64);
    if (v4)
      return v5 & 1;
    v5 = v16;
    v62 = a4 + 2;
    if (a4 + 2 < v63)
    {
      v72 = sub_1A54E3414();
      v19 = (unsigned __int8 *)(a2 + 32 * a4 + 44);
      v20 = v19;
      v49 = v5;
      while (1)
      {
        v21 = *(_QWORD *)(v19 + 20);
        v22 = *((unsigned int *)v19 + 7);
        v23 = v20[32];
        v51 = v20 + 32;
        v55 = *(_QWORD *)(v19 - 12);
        v54 = *((unsigned int *)v19 - 1);
        v24 = *v19;
        v50 = v18 & 0xFFFFFF0000000000 | v22 & 0xFFFFFF00FFFFFFFFLL | (v23 << 32);
        MessageIdentifierSet.startIndex.getter();
        v26 = v25;
        v28 = v27;
        v59 = v59 & 0xFFFFFF0000000000 | v22 & 0xFFFFFF00FFFFFFFFLL | ((unint64_t)v23 << 32);
        MessageIdentifierSet.endIndex.getter();
        v31 = v26 == v30 && v28 == v29;
        v32 = v31;
        v56 = v32;
        v58 = v21;
        v57 = v23;
        v53 = v22;
        if (v31)
        {
          sub_1A54E4334(v21, v22, v23);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v34 = v54;
          v35 = v55;
          sub_1A54E4334(v55, v54, v24);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v52 = 0;
        }
        else
        {
          v33 = v23 << 32;
          sub_1A54E4334(v21, v22, v23);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v34 = v54;
          sub_1A54E4334(v55, v54, v24);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v48 = v48 & 0xFFFFFF0000000000 | v22 | v33;
          MessageIdentifierSet.subscript.getter();
          v52 = v68;
          v35 = v55;
        }
        v61 = v61 & 0xFFFFFF0000000000 | v34 & 0xFFFFFF00FFFFFFFFLL | ((unint64_t)v24 << 32);
        MessageIdentifierSet.startIndex.getter();
        v37 = v36;
        v39 = v38;
        v60 = v60 & 0xFFFFFF0000000000 | v34 & 0xFFFFFF00FFFFFFFFLL | ((unint64_t)v24 << 32);
        MessageIdentifierSet.endIndex.getter();
        v42 = v37 == v41 && v39 == v40;
        v43 = !v42;
        if (v42)
        {
          v44 = 0;
        }
        else
        {
          sub_1A54E4334(v35, v34, v24);
          v47 = v47 & 0xFFFFFF0000000000 | v34 | (v24 << 32);
          MessageIdentifierSet.subscript.getter();
          sub_1A54E3458(v35, v34, v24);
          v44 = v68;
        }
        sub_1A54E3458(v35, v34, v24);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v45 = v52 < v44 && v43;
        v46 = v56 ? v43 : v45;
        sub_1A54E3458(v58, v53, v57);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        LOBYTE(v5) = v49;
        if (((v49 ^ v46) & 1) != 0)
          break;
        v20 = v51;
        v19 = v51;
        ++v62;
        v18 = v50;
        if (v63 == v62)
          goto LABEL_6;
      }
      v63 = v62;
      goto LABEL_6;
    }
    v7 = a4 + 2;
  }
  v63 = v7;
LABEL_6:
  *a1 = v63;
  return v5 & 1;
}

uint64_t sub_1A5637500(uint64_t *__src, uint64_t *a2, unint64_t a3, uint64_t *__dst)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  int v36;
  unsigned int v37;
  char v38;
  BOOL v39;
  uint64_t *v40;
  __int128 v41;
  __int128 v42;
  BOOL v43;
  char *v44;
  unint64_t v45;
  uint64_t *v46;
  uint64_t *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  BOOL v70;
  char v71;
  unsigned int v72;
  uint64_t *v73;
  char v74;
  char v75;
  uint64_t *v76;
  uint64_t *v77;
  __int128 v78;
  char *v79;
  __int128 v80;
  uint64_t result;
  unint64_t v82;
  unint64_t v83;
  char *v84;
  unint64_t v85;
  uint64_t *v86;
  unint64_t v87;
  unsigned int v88;
  char *v89;
  uint64_t v90;
  unsigned int v91;
  uint64_t v92;
  char v94;
  unint64_t v95;
  uint64_t v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  int v101;
  char v102;
  char v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  uint64_t *v112;
  unint64_t v113;
  uint64_t *v114;
  uint64_t *v115;
  char *v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t *v119;
  unsigned int v120;
  char *v121;
  uint64_t *v122;
  uint64_t *v123;

  v4 = __dst;
  v5 = a2;
  v6 = __src;
  v7 = (char *)a2 - (char *)__src;
  v8 = (char *)a2 - (char *)__src + 31;
  if ((char *)a2 - (char *)__src >= 0)
    v8 = (char *)a2 - (char *)__src;
  v9 = v8 >> 5;
  v10 = a3 - (_QWORD)a2;
  v11 = a3 - (_QWORD)a2 + 31;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v11 = a3 - (_QWORD)a2;
  v12 = v11 >> 5;
  v123 = __src;
  v122 = __dst;
  if (v9 >= v11 >> 5)
  {
    if (v10 >= -31)
    {
      if (__dst != a2 || &a2[4 * v12] <= __dst)
        memmove(__dst, a2, 32 * v12);
      v44 = (char *)&v4[4 * v12];
      v121 = v44;
      v123 = v5;
      if (v6 < v5 && v10 >= 32)
      {
        sub_1A54E3414();
        v45 = a3;
        v46 = (uint64_t *)(a3 - 32);
        v47 = v5;
        v114 = v6;
        v116 = (char *)v4;
        do
        {
          v119 = v46;
          v110 = (unint64_t)v44;
          v112 = v5;
          v48 = v44 - 32;
          v49 = *((_QWORD *)v44 - 4);
          v50 = *((unsigned int *)v44 - 6);
          v51 = *(v44 - 20);
          v84 = v48;
          v53 = *(v47 - 4);
          v52 = v47 - 4;
          v118 = v53;
          v92 = *((unsigned int *)v52 + 2);
          v90 = *((unsigned __int8 *)v52 + 12);
          v86 = v52;
          v104 = v45 & 0xFFFFFF0000000000 | v50 & 0xFFFFFF00FFFFFFFFLL | ((unint64_t)v51 << 32);
          MessageIdentifierSet.startIndex.getter();
          v55 = v54;
          v57 = v56;
          v105 = v105 & 0xFFFFFF0000000000 | v50 & 0xFFFFFF00FFFFFFFFLL | ((unint64_t)v51 << 32);
          MessageIdentifierSet.endIndex.getter();
          v60 = v55 == v59 && v57 == v58;
          v61 = v60;
          v94 = v61;
          v97 = v51;
          v99 = v50;
          if (v60)
          {
            sub_1A54E4334(v49, v50, v51);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v62 = v90;
            v63 = v92;
            sub_1A54E4334(v118, v92, v90);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v88 = 0;
          }
          else
          {
            sub_1A54E4334(v49, v50, v51);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v62 = v90;
            v63 = v92;
            sub_1A54E4334(v118, v92, v90);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v82 = v82 & 0xFFFFFF0000000000 | v50 | (v51 << 32);
            MessageIdentifierSet.subscript.getter();
            v88 = v120;
          }
          v107 = v107 & 0xFFFFFF0000000000 | v63 & 0xFFFFFF00FFFFFFFFLL | ((unint64_t)v62 << 32);
          MessageIdentifierSet.startIndex.getter();
          v65 = v64;
          v67 = v66;
          v109 = v109 & 0xFFFFFF0000000000 | v63 & 0xFFFFFF00FFFFFFFFLL | ((unint64_t)v62 << 32);
          MessageIdentifierSet.endIndex.getter();
          v70 = v65 == v69 && v67 == v68;
          v71 = !v70;
          if (v70)
          {
            v72 = 0;
          }
          else
          {
            sub_1A54E4334(v118, v63, v62);
            v83 = v83 & 0xFFFFFF0000000000 | v63 | (v62 << 32);
            MessageIdentifierSet.subscript.getter();
            sub_1A54E3458(v118, v63, v62);
            v72 = v120;
          }
          v73 = v119 + 4;
          sub_1A54E3458(v118, v63, v62);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v88 < v72)
            v74 = v71;
          else
            v74 = 0;
          if ((v94 & 1) != 0)
            v75 = v71;
          else
            v75 = v74;
          sub_1A54E3458(v49, v99, v97);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v75 & 1) != 0)
          {
            v76 = v114;
            v77 = v119;
            v47 = v86;
            if (v73 != v112 || v119 >= v112)
            {
              v78 = *((_OWORD *)v86 + 1);
              *(_OWORD *)v119 = *(_OWORD *)v86;
              *((_OWORD *)v119 + 1) = v78;
            }
            v123 = v86;
            v79 = v116;
            v44 = (char *)v110;
          }
          else
          {
            v44 = v84;
            v121 = v84;
            v76 = v114;
            v77 = v119;
            if ((unint64_t)v73 < v110 || (unint64_t)v119 >= v110 || v73 != (uint64_t *)v110)
            {
              v80 = *((_OWORD *)v84 + 1);
              *(_OWORD *)v119 = *(_OWORD *)v84;
              *((_OWORD *)v119 + 1) = v80;
            }
            v47 = v112;
            v79 = v116;
          }
          v45 = v104;
          if (v47 <= v76)
            break;
          v46 = v77 - 4;
          v5 = v47;
        }
        while (v44 > v79);
      }
LABEL_91:
      sub_1A5589EEC((void **)&v123, (const void **)&v122, &v121);
      return 1;
    }
  }
  else if (v7 >= -31)
  {
    if (__dst != __src || &__src[4 * v9] <= __dst)
      memmove(__dst, __src, 32 * v9);
    v89 = (char *)&v4[4 * v9];
    v121 = v89;
    if ((unint64_t)v5 < a3 && v7 >= 32)
    {
      sub_1A54E3414();
      while (1)
      {
        v14 = *v5;
        v15 = *((unsigned int *)v5 + 2);
        v16 = *((unsigned __int8 *)v5 + 12);
        v98 = *((unsigned int *)v4 + 2);
        v100 = *v4;
        v96 = *((unsigned __int8 *)v4 + 12);
        v115 = v4;
        v95 = v13 & 0xFFFFFF0000000000 | v15 & 0xFFFFFF00FFFFFFFFLL | (v16 << 32);
        MessageIdentifierSet.startIndex.getter();
        v18 = v17;
        v20 = v19;
        v117 = v117 & 0xFFFFFF0000000000 | v15 & 0xFFFFFF00FFFFFFFFLL | ((unint64_t)v16 << 32);
        MessageIdentifierSet.endIndex.getter();
        v23 = v18 == v22 && v20 == v21;
        v24 = v23;
        v102 = v24;
        v106 = v15;
        v108 = v14;
        v103 = v16;
        if (v23)
        {
          sub_1A54E4334(v14, v15, v16);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v28 = v98;
          v27 = v100;
          v25 = v96;
          sub_1A54E4334(v100, v98, v96);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v91 = 0;
          v26 = v113;
        }
        else
        {
          sub_1A54E4334(v14, v15, v16);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v25 = v96;
          sub_1A54E4334(v100, v98, v96);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v87 = v87 & 0xFFFFFF0000000000 | v15 | (v16 << 32);
          MessageIdentifierSet.subscript.getter();
          v91 = v120;
          v26 = v113;
          v27 = v100;
          v28 = v98;
        }
        v113 = v26 & 0xFFFFFF0000000000 | v28 & 0xFFFFFF00FFFFFFFFLL | ((unint64_t)v25 << 32);
        MessageIdentifierSet.startIndex.getter();
        v30 = v29;
        v32 = v31;
        MessageIdentifierSet.endIndex.getter();
        v35 = v30 == v34 && v32 == v33;
        v36 = !v35;
        v101 = v36;
        v111 = v111 & 0xFFFFFF0000000000 | v28 & 0xFFFFFF00FFFFFFFFLL | ((unint64_t)v25 << 32);
        if (v35)
        {
          v37 = 0;
        }
        else
        {
          sub_1A54E4334(v27, v28, v25);
          v85 = v85 & 0xFFFFFF0000000000 | v28 | (v25 << 32);
          MessageIdentifierSet.subscript.getter();
          sub_1A54E3458(v27, v28, v25);
          v37 = v120;
        }
        sub_1A54E3458(v27, v28, v25);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v102 & 1) != 0)
        {
          v38 = v103;
          v39 = v101;
        }
        else
        {
          v38 = v103;
          if (!v101)
          {
            sub_1A54E3458(v108, v106, v103);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_41:
            if (v6 != v115)
            {
              v42 = *((_OWORD *)v115 + 1);
              *(_OWORD *)v6 = *(_OWORD *)v115;
              *((_OWORD *)v6 + 1) = v42;
            }
            v4 = v115 + 4;
            v122 = v115 + 4;
            v40 = v5;
            goto LABEL_44;
          }
          v39 = v91 < v37;
        }
        sub_1A54E3458(v108, v106, v38);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!v39)
          goto LABEL_41;
        v40 = v5 + 4;
        v4 = v115;
        if (v6 < v5 || v6 >= v40 || v6 != v5)
        {
          v41 = *((_OWORD *)v5 + 1);
          *(_OWORD *)v6 = *(_OWORD *)v5;
          *((_OWORD *)v6 + 1) = v41;
        }
LABEL_44:
        v6 += 4;
        if (v4 < (uint64_t *)v89)
        {
          v5 = v40;
          v43 = (unint64_t)v40 >= a3;
          v13 = v95;
          if (!v43)
            continue;
        }
        v123 = v6;
        goto LABEL_91;
      }
    }
    goto LABEL_91;
  }
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5637D90(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a11)
  {
    if (a11 != 1)
      return result;
    sub_1A5637DF4(result, a2, a3);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_unknownObjectRetain();
  }
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t sub_1A5637DF4(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    sub_1A54E4334(result, a2, SBYTE4(a2));
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return result;
}

uint64_t destroy for UploadFlagChanges(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 64);
  sub_1A550FC70(*(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), *(_QWORD *)(a1 + 160), *(_QWORD *)(a1 + 168), *(_QWORD *)(a1 + 176), *(_BYTE *)(a1 + 184));
  sub_1A54E3458(*(_QWORD *)(a1 + 192), *(unsigned int *)(a1 + 200), *(_BYTE *)(a1 + 204));
  return sub_1A54E3458(*(_QWORD *)(a1 + 208), *(unsigned int *)(a1 + 216), *(_BYTE *)(a1 + 220));
}

uint64_t initializeWithCopy for UploadFlagChanges(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  char v22;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v5 = a2 + 64;
  v6 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 88) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v8(a1 + 64, v5, v7);
  v9 = *(_QWORD *)(a2 + 104);
  v10 = *(_QWORD *)(a2 + 112);
  v11 = *(_QWORD *)(a2 + 120);
  v12 = *(_QWORD *)(a2 + 128);
  v13 = *(_QWORD *)(a2 + 136);
  v14 = *(_QWORD *)(a2 + 144);
  v15 = *(_QWORD *)(a2 + 152);
  v16 = *(_QWORD *)(a2 + 160);
  v20 = *(_QWORD *)(a2 + 168);
  v21 = *(_QWORD *)(a2 + 176);
  v22 = *(_BYTE *)(a2 + 184);
  sub_1A5637D90(v9, v10, v11, v12, v13, v14, v15, v16, v20, v21, v22);
  *(_QWORD *)(a1 + 104) = v9;
  *(_QWORD *)(a1 + 112) = v10;
  *(_QWORD *)(a1 + 120) = v11;
  *(_QWORD *)(a1 + 128) = v12;
  *(_QWORD *)(a1 + 136) = v13;
  *(_QWORD *)(a1 + 144) = v14;
  *(_QWORD *)(a1 + 152) = v15;
  *(_QWORD *)(a1 + 160) = v16;
  *(_QWORD *)(a1 + 168) = v20;
  *(_QWORD *)(a1 + 176) = v21;
  *(_BYTE *)(a1 + 184) = v22;
  *(_BYTE *)(a1 + 185) = *(_BYTE *)(a2 + 185);
  v17 = *(_QWORD *)(a2 + 192);
  LODWORD(v10) = *(_DWORD *)(a2 + 200);
  LOBYTE(v11) = *(_BYTE *)(a2 + 204);
  sub_1A54E4334(v17, v10, v11);
  *(_QWORD *)(a1 + 192) = v17;
  *(_DWORD *)(a1 + 200) = v10;
  *(_BYTE *)(a1 + 204) = v11;
  v18 = *(_QWORD *)(a2 + 208);
  LODWORD(v10) = *(_DWORD *)(a2 + 216);
  LOBYTE(v11) = *(_BYTE *)(a2 + 220);
  sub_1A54E4334(v18, v10, v11);
  *(_QWORD *)(a1 + 208) = v18;
  *(_DWORD *)(a1 + 216) = v10;
  *(_BYTE *)(a1 + 220) = v11;
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  *(_WORD *)(a1 + 233) = *(_WORD *)(a2 + 233);
  return a1;
}

uint64_t assignWithCopy for UploadFlagChanges(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  char v35;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 64), (uint64_t *)(a2 + 64));
  v4 = *(_QWORD *)(a2 + 104);
  v5 = *(_QWORD *)(a2 + 112);
  v6 = *(_QWORD *)(a2 + 120);
  v7 = *(_QWORD *)(a2 + 128);
  v8 = *(_QWORD *)(a2 + 136);
  v9 = *(_QWORD *)(a2 + 144);
  v10 = *(_QWORD *)(a2 + 152);
  v11 = *(_QWORD *)(a2 + 160);
  v33 = *(_QWORD *)(a2 + 168);
  v34 = *(_QWORD *)(a2 + 176);
  v35 = *(_BYTE *)(a2 + 184);
  sub_1A5637D90(v4, v5, v6, v7, v8, v9, v10, v11, v33, v34, v35);
  v12 = *(_QWORD *)(a1 + 104);
  v13 = *(_QWORD *)(a1 + 112);
  v14 = *(_QWORD *)(a1 + 120);
  v15 = *(_QWORD *)(a1 + 128);
  v16 = *(_QWORD *)(a1 + 136);
  v17 = *(_QWORD *)(a1 + 144);
  v18 = *(_QWORD *)(a1 + 152);
  v19 = *(_QWORD *)(a1 + 160);
  v20 = *(_QWORD *)(a1 + 168);
  v21 = *(_QWORD *)(a1 + 176);
  v22 = *(_BYTE *)(a1 + 184);
  *(_QWORD *)(a1 + 104) = v4;
  *(_QWORD *)(a1 + 112) = v5;
  *(_QWORD *)(a1 + 120) = v6;
  *(_QWORD *)(a1 + 128) = v7;
  *(_QWORD *)(a1 + 136) = v8;
  *(_QWORD *)(a1 + 144) = v9;
  *(_QWORD *)(a1 + 152) = v10;
  *(_QWORD *)(a1 + 160) = v11;
  *(_QWORD *)(a1 + 168) = v33;
  *(_QWORD *)(a1 + 176) = v34;
  *(_BYTE *)(a1 + 184) = v35;
  sub_1A550FC70(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
  *(_BYTE *)(a1 + 185) = *(_BYTE *)(a2 + 185);
  v23 = *(_QWORD *)(a2 + 192);
  LODWORD(v5) = *(_DWORD *)(a2 + 200);
  LOBYTE(v6) = *(_BYTE *)(a2 + 204);
  sub_1A54E4334(v23, v5, v6);
  v24 = *(_QWORD *)(a1 + 192);
  v25 = *(unsigned int *)(a1 + 200);
  *(_QWORD *)(a1 + 192) = v23;
  *(_DWORD *)(a1 + 200) = v5;
  v26 = *(_BYTE *)(a1 + 204);
  *(_BYTE *)(a1 + 204) = v6;
  sub_1A54E3458(v24, v25, v26);
  v27 = *(_QWORD *)(a2 + 208);
  LODWORD(v5) = *(_DWORD *)(a2 + 216);
  LOBYTE(v6) = *(_BYTE *)(a2 + 220);
  sub_1A54E4334(v27, v5, v6);
  v28 = *(_QWORD *)(a1 + 208);
  v29 = *(unsigned int *)(a1 + 216);
  *(_QWORD *)(a1 + 208) = v27;
  *(_DWORD *)(a1 + 216) = v5;
  v30 = *(_BYTE *)(a1 + 220);
  *(_BYTE *)(a1 + 220) = v6;
  sub_1A54E3458(v28, v29, v30);
  v31 = *(_QWORD *)(a2 + 224);
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  *(_QWORD *)(a1 + 224) = v31;
  *(_BYTE *)(a1 + 233) = *(_BYTE *)(a2 + 233);
  *(_BYTE *)(a1 + 234) = *(_BYTE *)(a2 + 234);
  return a1;
}

__n128 __swift_memcpy235_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __n128 result;
  __int128 v11;
  __int128 v12;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  v7 = a2[7];
  v8 = a2[8];
  v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  result = (__n128)a2[11];
  v11 = a2[12];
  v12 = a2[13];
  *(_OWORD *)(a1 + 219) = *(__int128 *)((char *)a2 + 219);
  *(_OWORD *)(a1 + 192) = v11;
  *(_OWORD *)(a1 + 208) = v12;
  *(__n128 *)(a1 + 176) = result;
  return result;
}

uint64_t assignWithTake for UploadFlagChanges(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  int v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  int v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  __swift_destroy_boxed_opaque_existential_1(a1 + 64);
  v4 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v5 = *(_BYTE *)(a2 + 184);
  v6 = *(_QWORD *)(a1 + 104);
  v7 = *(_QWORD *)(a1 + 112);
  v8 = *(_QWORD *)(a1 + 120);
  v9 = *(_QWORD *)(a1 + 128);
  v10 = *(_QWORD *)(a1 + 136);
  v11 = *(_QWORD *)(a1 + 144);
  v12 = *(_QWORD *)(a1 + 152);
  v13 = *(_QWORD *)(a1 + 160);
  v14 = *(_QWORD *)(a1 + 168);
  v15 = *(_QWORD *)(a1 + 176);
  v16 = *(_BYTE *)(a1 + 184);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_BYTE *)(a1 + 184) = v5;
  sub_1A550FC70(v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16);
  *(_BYTE *)(a1 + 185) = *(_BYTE *)(a2 + 185);
  v17 = *(_DWORD *)(a2 + 200);
  v18 = *(_BYTE *)(a2 + 204);
  v19 = *(_QWORD *)(a1 + 192);
  v20 = *(unsigned int *)(a1 + 200);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_DWORD *)(a1 + 200) = v17;
  v21 = *(_BYTE *)(a1 + 204);
  *(_BYTE *)(a1 + 204) = v18;
  sub_1A54E3458(v19, v20, v21);
  v22 = *(_DWORD *)(a2 + 216);
  v23 = *(_BYTE *)(a2 + 220);
  v24 = *(_QWORD *)(a1 + 208);
  v25 = *(unsigned int *)(a1 + 216);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_DWORD *)(a1 + 216) = v22;
  v26 = *(_BYTE *)(a1 + 220);
  *(_BYTE *)(a1 + 220) = v23;
  sub_1A54E3458(v24, v25, v26);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  *(_BYTE *)(a1 + 233) = *(_BYTE *)(a2 + 233);
  *(_BYTE *)(a1 + 234) = *(_BYTE *)(a2 + 234);
  return a1;
}

uint64_t getEnumTagSinglePayload for UploadFlagChanges(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 235))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UploadFlagChanges(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 234) = 0;
    *(_WORD *)(result + 232) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 235) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 235) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for UploadFlagChanges()
{
  return &type metadata for UploadFlagChanges;
}

unint64_t sub_1A56384E0()
{
  unint64_t result;

  result = qword_1EE797820;
  if (!qword_1EE797820)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AB240, &type metadata for UploadFlagChanges.ActionID);
    atomic_store(result, (unint64_t *)&qword_1EE797820);
  }
  return result;
}

unint64_t sub_1A5638528()
{
  unint64_t result;

  result = qword_1EE797828;
  if (!qword_1EE797828)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AB218, &type metadata for UploadFlagChanges.CommandID);
    atomic_store(result, (unint64_t *)&qword_1EE797828);
  }
  return result;
}

unint64_t sub_1A563856C(uint64_t a1)
{
  unint64_t result;

  result = sub_1A5638590();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A5638590()
{
  unint64_t result;

  result = qword_1EE797838;
  if (!qword_1EE797838)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AB1D4, &type metadata for UploadFlagChanges);
    atomic_store(result, (unint64_t *)&qword_1EE797838);
  }
  return result;
}

uint64_t sub_1A56385D4(uint64_t a1)
{
  uint64_t v1;

  return sub_1A5635504(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1A56385DC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint8_t *v25;
  unint64_t v26;
  uint8_t *v27;
  int v28;
  uint64_t v29;
  unint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  unint64_t v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint8_t *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  __int128 v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint8_t *v49;
  char *v50;
  int *v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61[2];

  v57 = a1;
  v48 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v48);
  v58 = (uint64_t)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_1A594A764();
  v3 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v55 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = (char *)&v59 + 4;
  v51 = &v60;
  v46 = (char *)&v59 + 2;
  v47 = (char *)&v59 + 1;
  *(_QWORD *)&v5 = 68159491;
  v45 = v5;
  v44 = MEMORY[0x1E0DEE9B8] + 8;
  v53 = v3;
  v54 = v1;
  while (1)
  {
    v7 = *v1;
    v6 = v1[1];
    v8 = v1[2];
    if (v8)
    {
      v9 = HIDWORD(v6);
      *(_OWORD *)v1 = 0u;
      *((_OWORD *)v1 + 1) = 0u;
      swift_bridgeObjectRelease();
      v10 = v7;
      v11 = v6;
      v12 = MEMORY[0x1E0DEE9E8];
      v7 = 0;
      v6 = 0;
    }
    else
    {
      v13 = v1[7];
      v14 = (unint64_t)v1[8] >> 1;
      if (v13 == v14)
        return;
      if (v13 >= v14)
      {
        __break(1u);
        return;
      }
      v15 = v1[6] + 32 * v13;
      v10 = *(_QWORD *)v15;
      v11 = *(unsigned int *)(v15 + 8);
      LOBYTE(v9) = *(_BYTE *)(v15 + 12);
      v8 = *(_QWORD *)(v15 + 16);
      v12 = *(_QWORD *)(v15 + 24);
      v1[7] = v13 + 1;
      sub_1A54E4334(v10, v11, v9);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
    v16 = *(_QWORD *)(v12 + 16);
    if (*(_QWORD *)(v8 + 16))
      break;
    if (v16)
      goto LABEL_18;
    v17 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v18 = v55;
    v19 = v56;
    v20 = v57;
    v17(v55, v57, v56);
    v21 = v58;
    sub_1A55034B8(v20, v58, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    sub_1A54E4334(v10, v11, v9);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54E4334(v10, v11, v9);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v22 = sub_1A594A74C();
    v23 = sub_1A594C030();
    if (os_log_type_enabled(v22, v23))
    {
      v52 = (uint8_t *)swift_slowAlloc();
      v42 = swift_slowAlloc();
      v61[0] = v42;
      *(_DWORD *)v52 = v45;
      LODWORD(v59) = 2;
      sub_1A594C3CC();
      *((_WORD *)v52 + 4) = 256;
      v49 = (uint8_t *)(v21 + *(int *)(v48 + 20));
      LOBYTE(v59) = *v49;
      sub_1A594C3CC();
      v25 = v52;
      *(_WORD *)(v52 + 11) = 2082;
      v41 = v25 + 13;
      v26 = *((_QWORD *)v49 + 2);
      v40 = *((_QWORD *)v49 + 1);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v59 = sub_1A55791B0(v40, v26, v61);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      v27 = v52;
      *(_WORD *)(v52 + 21) = 1040;
      LODWORD(v59) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v27 + 27) = 512;
      LOWORD(v59) = *((_WORD *)v49 + 12);
      sub_1A594C3CC();
      *(_WORD *)(v27 + 31) = 2160;
      v59 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v27 + 41) = 2085;
      v41 = v27 + 43;
      v28 = *((_DWORD *)v49 + 10);
      v59 = *((_QWORD *)v49 + 4);
      v60 = v28;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v29 = sub_1A594B4A8();
      v59 = sub_1A55791B0(v29, v30, v61);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC(v58, type metadata accessor for MailboxTaskLogger);
      v31 = v52;
      *(_WORD *)(v52 + 51) = 2080;
      v49 = v31 + 53;
      sub_1A54E3414();
      v43 = v43 & 0xFFFFFF0000000000 | v11 | ((unint64_t)v9 << 32);
      MessageIdentifierSet.debugDescription.getter();
      v59 = sub_1A55791B0(v32, v33, v61);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A54E3458(v10, v11, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E3458(v10, v11, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v34 = v23;
      v35 = v52;
      _os_log_impl(&dword_1A4F90000, v22, v34, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] No flag changes for messages %s", v52, 0x3Du);
      v36 = v42;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v36, -1, -1);
      MEMORY[0x1A85B1964](v35, -1, -1);

    }
    else
    {
      sub_1A55034FC(v21, type metadata accessor for MailboxTaskLogger);
      sub_1A54E3458(v10, v11, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E3458(v10, v11, v9);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_1A54E3458(v10, v11, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v24 = v53;
    (*(void (**)(char *, uint64_t))(v53 + 8))(v18, v19);
    v1 = v54;
    v3 = v24;
  }
  if (v16)
  {
    sub_1A54E4334(v10, v11, v9);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A550FCDC(v7, v6, 0);
    *v1 = v10;
    v1[1] = v11 | ((unint64_t)v9 << 32);
    v1[2] = v8;
    v1[3] = v12;
    sub_1A54E4334(v10, v11, v9);
    v37 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A550CC40(v37);
    swift_bridgeObjectRelease();
    sub_1A54E3458(v10, v11, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
LABEL_18:
  sub_1A54E4334(v10, v11, v9);
  v38 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A550CC40(v38);
  swift_bridgeObjectRelease();
  sub_1A54E3458(v10, v11, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_1A5638D34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  int v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  os_log_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  os_log_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76[3];
  __int128 v77;
  __int128 v78;
  _OWORD v79[3];
  _OWORD v80[2];
  uint64_t v81;
  __int128 v82;
  __int128 v83;
  _OWORD v84[2];
  __int128 v85;
  __int128 v86;
  uint64_t v87;

  v3 = v2;
  v6 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A594A764();
  MEMORY[0x1E0C80A78](v9);
  v13 = *(_QWORD *)v3;
  v14 = *(_QWORD *)(v3 + 8);
  v15 = *(_QWORD *)(v3 + 16);
  v16 = *(_QWORD *)(v3 + 24);
  v17 = *(_QWORD *)(v3 + 32);
  v18 = *(NSObject **)(v3 + 40);
  v19 = *(_QWORD *)(v3 + 48);
  v74 = *(_QWORD *)(v3 + 56);
  v20 = *(_QWORD *)(v3 + 64);
  v21 = *(_QWORD *)(v3 + 72);
  if (!*(_BYTE *)(v3 + 80))
  {
    v61 = v6;
    v62 = v8;
    v65 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    v66 = v12;
    v67 = v10;
    v68 = v20;
    v69 = v15;
    v70 = v16;
    v71 = v17;
    v72 = v18;
    v73 = v19;
    sub_1A5637D90(v13, v14, v15, v16, v17, (uint64_t)v18, v19, v74, v20, v21, 0);
    sub_1A563A33C(a1);
    *(_QWORD *)&v80[0] = sub_1A5573144(MEMORY[0x1E0DEE9D8]);
    v22 = *(_QWORD *)(v13 + 16);
    v63 = v13;
    v64 = a2;
    if (v22)
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v23 = (_QWORD *)(v13 + 56);
      do
      {
        v24 = *v23;
        v25 = *(_QWORD *)((char *)v23 - 12);
        v26 = *((_WORD *)v23 - 7);
        v27 = *((_BYTE *)v23 - 15);
        v28 = *((_BYTE *)v23 - 16);
        v29 = *((_BYTE *)v23 - 17);
        v30 = *((_BYTE *)v23 - 18);
        v31 = *((_BYTE *)v23 - 19);
        v32 = *((_BYTE *)v23 - 20);
        LODWORD(v84[0]) = *((_DWORD *)v23 - 6);
        BYTE4(v84[0]) = v32;
        BYTE5(v84[0]) = v31;
        BYTE6(v84[0]) = v30;
        BYTE7(v84[0]) = v29;
        BYTE8(v84[0]) = v28;
        BYTE9(v84[0]) = v27;
        WORD5(v84[0]) = v26;
        *(_QWORD *)((char *)v84 + 12) = v25;
        *((_QWORD *)&v84[1] + 1) = v24;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A5636060((uint64_t)v84, a1, v80);
        swift_bridgeObjectRelease();
        v23 += 4;
        --v22;
      }
      while (v22);
      v13 = v63;
      sub_1A550FC70(v63, v14, v69, v70, v71, (uint64_t)v72, v73, v74, v68, v21, 0);
      sub_1A563A3C4(a1);
      a2 = v64;
    }
    else
    {
      sub_1A563A3C4(a1);
    }
    v34 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v35 = sub_1A5631634(v34);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v84[0] = v35;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5631888((uint64_t *)v84);
    v36 = *(_QWORD *)&v84[0];
    v37 = (2 * *(_QWORD *)(*(_QWORD *)&v84[0] + 16)) | 1;
    memset(v84, 0, sizeof(v84));
    *(_QWORD *)&v85 = v36;
    *((_QWORD *)&v85 + 1) = v36;
    v86 = (unint64_t)(v36 + 32);
    v87 = v37;
    swift_retain();
    swift_bridgeObjectRelease();
    sub_1A550FC70(v13, v14, v69, v70, v71, (uint64_t)v72, v73, v74, v68, v21, 0);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v79[2] = v87;
    v79[0] = v85;
    v79[1] = v86;
    v77 = v84[0];
    v78 = v84[1];
    if (*(_QWORD *)(v36 + 16) || sub_1A5635FFC())
    {
      v38 = v65;
      v39 = v66;
      v40 = v67;
      (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v65, a2, v67);
      v41 = (uint64_t)v62;
      sub_1A55034B8(a2, (uint64_t)v62, type metadata accessor for MailboxTaskLogger);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v42 = sub_1A594A74C();
      v43 = sub_1A594C030();
      LODWORD(v74) = v43;
      if (os_log_type_enabled(v42, v43))
      {
        v44 = swift_slowAlloc();
        v73 = swift_slowAlloc();
        v76[0] = v73;
        *(_DWORD *)v44 = 68159747;
        LODWORD(v80[0]) = 2;
        v72 = v42;
        sub_1A594C3CC();
        *(_WORD *)(v44 + 8) = 256;
        v45 = v41 + *(int *)(v61 + 20);
        LOBYTE(v80[0]) = *(_BYTE *)v45;
        sub_1A594C3CC();
        *(_WORD *)(v44 + 11) = 2082;
        v46 = *(_QWORD *)(v45 + 8);
        v47 = *(_QWORD *)(v45 + 16);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        *(_QWORD *)&v80[0] = sub_1A55791B0(v46, v47, v76);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v44 + 21) = 1040;
        LODWORD(v80[0]) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v44 + 27) = 512;
        LOWORD(v80[0]) = *(_WORD *)(v45 + 24);
        sub_1A594C3CC();
        *(_WORD *)(v44 + 31) = 2160;
        *(_QWORD *)&v80[0] = 0x786F626C69616DLL;
        sub_1A594C3CC();
        *(_WORD *)(v44 + 41) = 2085;
        v48 = *(_DWORD *)(v45 + 40);
        *(_QWORD *)&v80[0] = *(_QWORD *)(v45 + 32);
        DWORD2(v80[0]) = v48;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v49 = sub_1A594B4A8();
        *(_QWORD *)&v80[0] = sub_1A55791B0(v49, v50, v76);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55034FC(v41, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v44 + 51) = 2048;
        swift_beginAccess();
        v51 = *(_QWORD *)&v79[0];
        *(_QWORD *)&v80[0] = *(_QWORD *)(*(_QWORD *)&v79[0] + 16);
        sub_1A594C3CC();
        *(_WORD *)(v44 + 61) = 2048;
        v80[0] = v77;
        v80[1] = v78;
        v81 = v51;
        v82 = *(_OWORD *)((char *)v79 + 8);
        v83 = *(_OWORD *)((char *)&v79[1] + 8);
        v75 = sub_1A5635FFC();
        a2 = v64;
        sub_1A594C3CC();
        v52 = v72;
        _os_log_impl(&dword_1A4F90000, v72, (os_log_type_t)v74, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Grouped the local flag changes into %ld message sets. Expecting %ld commands.", (uint8_t *)v44, 0x47u);
        v53 = v73;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v53, -1, -1);
        MEMORY[0x1A85B1964](v44, -1, -1);

        (*(void (**)(char *, uint64_t))(v66 + 8))(v65, v67);
        v21 = v63;
        goto LABEL_16;
      }
      sub_1A55034FC(v41, type metadata accessor for MailboxTaskLogger);

      (*(void (**)(char *, uint64_t))(v39 + 8))(v38, v40);
    }
    v21 = v13;
    goto LABEL_16;
  }
  if (*(_BYTE *)(v3 + 80) == 1)
  {
    *(_QWORD *)&v77 = v13;
    *((_QWORD *)&v77 + 1) = v14;
    *(_QWORD *)&v78 = v15;
    *((_QWORD *)&v78 + 1) = v16;
    *(_QWORD *)&v79[0] = v17;
    *((_QWORD *)&v79[0] + 1) = v18;
    *(_QWORD *)&v79[1] = v19;
    *((_QWORD *)&v79[1] + 1) = v74;
    *(_QWORD *)&v79[2] = v20;
LABEL_16:
    swift_beginAccess();
    sub_1A56385DC(a2);
    v33 = v54;
    swift_endAccess();
    v55 = *(_QWORD *)&v79[1];
    v56 = v78;
    v57 = *(_OWORD *)((char *)&v79[1] + 8);
    v58 = v79[0];
    *(_OWORD *)v3 = v77;
    *(_OWORD *)(v3 + 16) = v56;
    *(_OWORD *)(v3 + 32) = v58;
    *(_QWORD *)(v3 + 48) = v55;
    *(_OWORD *)(v3 + 56) = v57;
    *(_QWORD *)(v3 + 72) = v21;
    *(_BYTE *)(v3 + 80) = 1;
    return v33;
  }
  return 0;
}

void sub_1A5639458(const void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  const void *v14;
  _BYTE v15[584];
  _BYTE __dst[584];
  _BYTE v17[8];
  _BYTE v18[8];
  int v19;
  char v20;
  uint64_t v21;

  v8 = sub_1A562AE30(0, a4);
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    v10 = 0;
    while ((sub_1A55E5990(*(_DWORD *)(v8 + 4 * v10 + 32), a2, a3) & 1) == 0)
    {
      if (v9 == ++v10)
        goto LABEL_5;
    }
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    v11 = sub_1A562AE30(1, a4);
    v12 = *(_QWORD *)(v11 + 16);
    if (!v12)
    {
LABEL_9:
      swift_bridgeObjectRelease();
      return;
    }
    v13 = 0;
    while ((sub_1A55E5990(*(_DWORD *)(v11 + 4 * v13 + 32), a2, a3) & 1) == 0)
    {
      if (v12 == ++v13)
        goto LABEL_9;
    }
  }
  swift_bridgeObjectRelease();
  sub_1A552316C(a1, v15);
  if (sub_1A5523B90((uint64_t)v15) == 19)
  {
    v14 = (const void *)sub_1A5524678((uint64_t)v15);
    memcpy(__dst, v14, sizeof(__dst));
    sub_1A55032A0((uint64_t)&__dst[512], (uint64_t)v17, (uint64_t *)&unk_1EE7A0EF0);
    sub_1A55032A0((uint64_t)v17, (uint64_t)&v21, (uint64_t *)&unk_1EE7A0EF0);
    if (v21)
    {
      sub_1A55032A0((uint64_t)&__dst[8], (uint64_t)v18, &qword_1EE795BE8);
      sub_1A55032A0((uint64_t)v18, (uint64_t)&v19, &qword_1EE795BE8);
      if ((v20 & 1) == 0)
      {
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
        MessageIdentifierSet.remove(_:)();
      }
    }
  }
}

double sub_1A5639620(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double result;
  char *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  int v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  os_log_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  int v67;
  BOOL v68;
  uint64_t v69;
  char *v70;
  unint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  os_log_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  int v120;
  uint64_t v121;
  int v122;
  uint64_t v123;
  unsigned int v124;
  char v125;

  v10 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v112 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v112 - v14;
  v16 = sub_1A594A764();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v112 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v19);
  v24 = (char *)&v112 - v20;
  v25 = (a1 >> 59) & 0x1E | (a1 >> 2) & 1;
  if (v25 != 14)
  {
    if (v25 == 15)
    {
      v26 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      v27 = *(unsigned int *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
      v28 = *(_BYTE *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x2C);
      v118 = v28;
      v29 = v21;
      v30 = v22;
      (*(void (**)(char *, uint64_t, uint64_t, double))(v22 + 16))((char *)&v112 - v20, a5, v21, result);
      sub_1A55034B8(a5, (uint64_t)v15, type metadata accessor for MailboxTaskLogger);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      sub_1A54E4334(v26, v27, v28);
      sub_1A54E4334(v26, v27, v28);
      v31 = sub_1A594A74C();
      v32 = sub_1A594C030();
      v33 = v32;
      if (os_log_type_enabled(v31, v32))
      {
        v34 = swift_slowAlloc();
        v115 = swift_slowAlloc();
        v123 = v115;
        *(_DWORD *)v34 = 68159491;
        LODWORD(v121) = 2;
        v117 = v29;
        sub_1A594C3CC();
        *(_WORD *)(v34 + 8) = 256;
        v35 = *(int *)(v10 + 20);
        v116 = v30;
        v36 = &v15[v35];
        LOBYTE(v121) = v15[v35];
        sub_1A594C3CC();
        *(_WORD *)(v34 + 11) = 2082;
        LODWORD(v114) = v33;
        v113 = v31;
        v37 = *((_QWORD *)v36 + 1);
        v38 = *((_QWORD *)v36 + 2);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v121 = sub_1A55791B0(v37, v38, &v123);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v34 + 21) = 1040;
        LODWORD(v121) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v34 + 27) = 512;
        LOWORD(v121) = *((_WORD *)v36 + 12);
        sub_1A594C3CC();
        *(_WORD *)(v34 + 31) = 2160;
        v121 = 0x786F626C69616DLL;
        sub_1A594C3CC();
        *(_WORD *)(v34 + 41) = 2085;
        v39 = *((_DWORD *)v36 + 10);
        v121 = *((_QWORD *)v36 + 4);
        v122 = v39;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v40 = sub_1A594B4A8();
        v121 = sub_1A55791B0(v40, v41, &v123);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55034FC((uint64_t)v15, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v34 + 51) = 2048;
        sub_1A54E3414();
        LOBYTE(v36) = v118;
        v42 = v27 | (v118 << 32);
        v43 = MessageIdentifierSet.count.getter(v26, v42);
        sub_1A54E3458(v26, v27, (char)v36);
        v121 = v43;
        sub_1A594C3CC();
        sub_1A54E3458(v26, v27, (char)v36);
        v44 = v113;
        _os_log_impl(&dword_1A4F90000, v113, (os_log_type_t)v114, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] %ld messages have flag changes after copy", (uint8_t *)v34, 0x3Du);
        v45 = v115;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v45, -1, -1);
        MEMORY[0x1A85B1964](v34, -1, -1);

        (*(void (**)(char *, uint64_t))(v116 + 8))(v24, v117);
      }
      else
      {
        v54 = v118;
        sub_1A54E3458(v26, v27, v118);
        sub_1A55034FC((uint64_t)v15, type metadata accessor for MailboxTaskLogger);
        sub_1A54E3458(v26, v27, v54);

        (*(void (**)(char *, uint64_t))(v30 + 8))(v24, v29);
        v42 = v27 | (v54 << 32);
      }
      sub_1A54E3414();
      if (MessageIdentifierSet.isEmpty.getter(v26, v42))
        v55 = 2;
      else
        v55 = 3;
      *(_BYTE *)(v119 + 234) = v55;
    }
    return result;
  }
  v46 = a1 & 0xFFFFFFFFFFFFFFBLL;
  if (*(_QWORD *)(v119 + 8) != *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x18))
    return result;
  v47 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
  v48 = *(unsigned __int8 *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
  v49 = *(_QWORD *)v119;
  v50 = *(_QWORD *)(v46 + 16);
  v116 = v22;
  v117 = v21;
  if (!sub_1A54FF30C(v49, v50))
    return result;
  LODWORD(v115) = v48;
  v118 = v47;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v51 = sub_1A55B0238(1, a4);
  v52 = *(_QWORD *)(v51 + 16);
  if (!v52)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_BYTE *)(v119 + 233) = 1;
    return result;
  }
  v53 = 0;
  while ((sub_1A55F3D24(*(_DWORD *)(v51 + 4 * v53 + 32), a2, a3) & 1) == 0)
  {
    if (v52 == ++v53)
      goto LABEL_11;
  }
  swift_bridgeObjectRelease();
  v56 = v119;
  if ((v115 & 1) == 0)
    *(_BYTE *)(v119 + 233) = 1;
  v57 = v118;
  if (*(_QWORD *)(v118 + 16) >= 0x2DDuLL)
    v58 = 733;
  else
    v58 = *(_QWORD *)(v118 + 16);
  sub_1A594CD68();
  swift_unknownObjectRetain_n();
  v59 = swift_dynamicCastClass();
  if (!v59)
  {
    swift_bridgeObjectRelease();
    v59 = MEMORY[0x1E0DEE9D8];
  }
  v60 = *(_QWORD *)(v59 + 16);
  swift_release();
  if (v60 == v58)
  {
    v61 = swift_dynamicCastClass();
    if (!v61)
    {
      swift_bridgeObjectRelease();
      v61 = MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    v61 = sub_1A550CD4C(v57, v57 + 32, 0, (2 * v58) | 1);
  }
  swift_bridgeObjectRelease();
  v62 = *(_QWORD *)(v61 + 16);
  *(_QWORD *)(v56 + 224) = v62;
  *(_BYTE *)(v56 + 232) = 0;
  v64 = v116;
  v63 = v117;
  (*(void (**)(char *, uint64_t, uint64_t))(v116 + 16))(v18, a5, v117);
  sub_1A55034B8(a5, (uint64_t)v12, type metadata accessor for MailboxTaskLogger);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  swift_bridgeObjectRetain_n();
  v65 = sub_1A594A74C();
  v66 = sub_1A594C030();
  v67 = v66;
  v68 = os_log_type_enabled(v65, v66);
  v118 = v61;
  if (v68)
  {
    v69 = swift_slowAlloc();
    v115 = swift_slowAlloc();
    v123 = v115;
    *(_DWORD *)v69 = 68159491;
    LODWORD(v121) = 2;
    v114 = v62;
    sub_1A594C3CC();
    *(_WORD *)(v69 + 8) = 256;
    v70 = &v12[*(int *)(v10 + 20)];
    LOBYTE(v121) = *v70;
    sub_1A594C3CC();
    *(_WORD *)(v69 + 11) = 2082;
    LODWORD(v113) = v67;
    v72 = *((_QWORD *)v70 + 1);
    v71 = *((_QWORD *)v70 + 2);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v121 = sub_1A55791B0(v72, v71, &v123);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v69 + 21) = 1040;
    LODWORD(v121) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v69 + 27) = 512;
    LOWORD(v121) = *((_WORD *)v70 + 12);
    sub_1A594C3CC();
    *(_WORD *)(v69 + 31) = 2160;
    v121 = 0x786F626C69616DLL;
    sub_1A594C3CC();
    *(_WORD *)(v69 + 41) = 2085;
    v73 = *((_DWORD *)v70 + 10);
    v121 = *((_QWORD *)v70 + 4);
    v122 = v73;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v74 = sub_1A594B4A8();
    v121 = sub_1A55791B0(v74, v75, &v123);
    v61 = v118;
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC((uint64_t)v12, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v69 + 51) = 2048;
    swift_release();
    v121 = v114;
    sub_1A594C3CC();
    swift_release();
    _os_log_impl(&dword_1A4F90000, v65, (os_log_type_t)v113, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Received local flag changes for %ld messages.", (uint8_t *)v69, 0x3Du);
    v76 = v115;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v76, -1, -1);
    MEMORY[0x1A85B1964](v69, -1, -1);

    (*(void (**)(char *, uint64_t))(v116 + 8))(v18, v117);
  }
  else
  {
    swift_release();
    sub_1A55034FC((uint64_t)v12, type metadata accessor for MailboxTaskLogger);

    swift_release();
    (*(void (**)(char *, uint64_t))(v64 + 8))(v18, v63);
  }
  v77 = sub_1A54E3414();
  v78 = MessageIdentifierSet.init()(&type metadata for UID, v77);
  v80 = v79;
  v81 = HIDWORD(v79);
  v123 = v78;
  v124 = v79;
  v125 = BYTE4(v79);
  v82 = *(_QWORD *)(v61 + 16);
  if (v82)
  {
    swift_bridgeObjectRetain_n();
    v83 = 0;
    while (1)
    {
      v84 = v61 + 32 + 32 * v83;
      v85 = *(_DWORD *)v84;
      v86 = *(_QWORD *)(v84 + 12);
      v87 = 256;
      if (!*(_BYTE *)(v84 + 5))
        v87 = 0;
      v88 = v87 | *(unsigned __int8 *)(v84 + 4);
      v89 = 0x10000;
      if (!*(_BYTE *)(v84 + 6))
        v89 = 0;
      if (*(_BYTE *)(v84 + 7))
        v90 = 0x1000000;
      else
        v90 = 0;
      if (*(_BYTE *)(v84 + 8))
        v91 = 0x100000000;
      else
        v91 = 0;
      if (*(_BYTE *)(v84 + 9))
        v92 = 0x10000000000;
      else
        v92 = 0;
      v93 = v88 | v89 | v90 | v91 | v92 | ((unint64_t)*(unsigned __int8 *)(v84 + 10) << 48) | ((unint64_t)*(unsigned __int8 *)(v84 + 11) << 56);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v94 = FlagsWithModifications.locallyModified.getter(v93, v86);
      if (*(_QWORD *)(v94 + 16))
      {
        sub_1A594CE64();
        sub_1A594CE88();
        v95 = sub_1A594CED0();
        v96 = -1 << *(_BYTE *)(v94 + 32);
        v97 = v95 & ~v96;
        if (((*(_QWORD *)(v94 + 56 + ((v97 >> 3) & 0xFFFFFFFFFFFFF8)) >> v97) & 1) != 0)
        {
          v98 = *(_QWORD *)(v94 + 48);
          if (*(_BYTE *)(v98 + v97) == 1)
          {
LABEL_54:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v120 = v85;
            __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
            MessageIdentifierSet.insert(_:)();
            goto LABEL_34;
          }
          v99 = ~v96;
          while (1)
          {
            v97 = (v97 + 1) & v99;
            if (((*(_QWORD *)(v94 + 56 + ((v97 >> 3) & 0xFFFFFFFFFFFFF8)) >> v97) & 1) == 0)
              break;
            if (*(_BYTE *)(v98 + v97) == 1)
              goto LABEL_54;
          }
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_34:
      if (++v83 == v82)
      {
        swift_release();
        v100 = v123;
        v80 = v124;
        LOBYTE(v81) = v125;
        goto LABEL_57;
      }
    }
  }
  v100 = v78;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_57:
  v101 = v119;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
  MessageIdentifierSet.formUnion(_:)(v100, v80 | ((unint64_t)v81 << 32));
  sub_1A54E3458(v100, v80, v81);
  v102 = *(_QWORD *)(v101 + 112);
  v103 = *(_QWORD *)(v101 + 104);
  v116 = *(_QWORD *)(v101 + 120);
  v117 = v102;
  v104 = *(_QWORD *)(v101 + 128);
  v105 = *(_QWORD *)(v101 + 144);
  v114 = *(_QWORD *)(v101 + 136);
  v115 = v104;
  v106 = *(_QWORD *)(v101 + 152);
  v107 = *(_QWORD *)(v101 + 160);
  v108 = *(_QWORD *)(v101 + 168);
  v109 = *(_QWORD *)(v101 + 176);
  v110 = *(_BYTE *)(v101 + 184);
  if (v110)
  {
    v111 = v118;
    swift_release();
    sub_1A550FC70(v103, v117, v116, v115, v114, v105, v106, v107, v108, v109, v110);
    *(_QWORD *)(v101 + 104) = v111;
  }
  else
  {
    v121 = v103;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54EBC90(v118);
    swift_release();
    sub_1A550FC70(v103, v117, v116, v115, v114, v105, v106, v107, v108, v109, 0);
    *(_QWORD *)(v101 + 104) = v121;
  }
  result = 0.0;
  *(_OWORD *)(v101 + 112) = 0u;
  *(_OWORD *)(v101 + 128) = 0u;
  *(_OWORD *)(v101 + 144) = 0u;
  *(_OWORD *)(v101 + 160) = 0u;
  *(_OWORD *)(v101 + 169) = 0u;
  return result;
}

uint64_t sub_1A563A2B8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A563A2DC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A563A308()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1A54E3458(*(_QWORD *)(v0 + 32), *(unsigned int *)(v0 + 40), *(_BYTE *)(v0 + 44));
  return swift_deallocObject();
}

uint64_t sub_1A563A33C(uint64_t a1)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t sub_1A563A3C4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t destroy for UploadFlagChanges.EncodedFlags(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 16))
  {
    sub_1A54E3458(*(_QWORD *)a1, *(unsigned int *)(a1 + 8), *(_BYTE *)(a1 + 12));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t initializeWithCopy for UploadFlagChanges.EncodedFlags(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  char v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 16);
  if (v4)
  {
    v5 = *(_QWORD *)a2;
    v6 = *(_DWORD *)(a2 + 8);
    v7 = *(_BYTE *)(a2 + 12);
    sub_1A54E4334(*(_QWORD *)a2, v6, v7);
    *(_QWORD *)a1 = v5;
    *(_DWORD *)(a1 + 8) = v6;
    *(_BYTE *)(a1 + 12) = v7;
    v8 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = v4;
    *(_QWORD *)(a1 + 24) = v8;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    v9 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v9;
  }
  v10 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v10;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_unknownObjectRetain();
  return a1;
}

uint64_t assignWithCopy for UploadFlagChanges.EncodedFlags(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  unsigned int v12;
  char v13;
  __int128 v14;
  __int128 v15;

  v4 = *(_QWORD *)(a2 + 16);
  if (*(_QWORD *)(a1 + 16))
  {
    if (v4)
    {
      v5 = *(_QWORD *)a2;
      v6 = *(_DWORD *)(a2 + 8);
      v7 = *(_BYTE *)(a2 + 12);
      sub_1A54E4334(*(_QWORD *)a2, v6, v7);
      v8 = *(_QWORD *)a1;
      v9 = *(unsigned int *)(a1 + 8);
      *(_QWORD *)a1 = v5;
      *(_DWORD *)(a1 + 8) = v6;
      v10 = *(_BYTE *)(a1 + 12);
      *(_BYTE *)(a1 + 12) = v7;
      sub_1A54E3458(v8, v9, v10);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1A563A6A8(a1);
      v14 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v14;
    }
  }
  else if (v4)
  {
    v11 = *(_QWORD *)a2;
    v12 = *(_DWORD *)(a2 + 8);
    v13 = *(_BYTE *)(a2 + 12);
    sub_1A54E4334(*(_QWORD *)a2, v12, v13);
    *(_QWORD *)a1 = v11;
    *(_DWORD *)(a1 + 8) = v12;
    *(_BYTE *)(a1 + 12) = v13;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    v15 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v15;
  }
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  return a1;
}

uint64_t sub_1A563A6A8(uint64_t a1)
{
  _s18SectionDataRequestVwxx(a1);
  return a1;
}

uint64_t assignWithTake for UploadFlagChanges.EncodedFlags(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  __int128 v10;

  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 16);
  if (!v4)
  {
    sub_1A563A6A8(a1);
LABEL_5:
    v10 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v10;
    goto LABEL_6;
  }
  v5 = *(_DWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 12);
  v7 = *(_QWORD *)a1;
  v8 = *(unsigned int *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = v5;
  v9 = *(_BYTE *)(a1 + 12);
  *(_BYTE *)(a1 + 12) = v6;
  sub_1A54E3458(v7, v8, v9);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
LABEL_6:
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for UploadFlagChanges.EncodedFlags(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UploadFlagChanges.EncodedFlags(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for UploadFlagChanges.EncodedFlags()
{
  return &type metadata for UploadFlagChanges.EncodedFlags;
}

ValueMetadata *type metadata accessor for UploadFlagChanges.EncodedFlags.Element()
{
  return &type metadata for UploadFlagChanges.EncodedFlags.Element;
}

uint64_t storeEnumTagSinglePayload for UploadFlagChanges.CommandID(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A563A89C + 4 * byte_1A59AB1A5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A563A8D0 + 4 * byte_1A59AB1A0[v4]))();
}

uint64_t sub_1A563A8D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A563A8D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A563A8E0);
  return result;
}

uint64_t sub_1A563A8EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A563A8F4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A563A8F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A563A900(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UploadFlagChanges.CommandID()
{
  return &type metadata for UploadFlagChanges.CommandID;
}

uint64_t getEnumTagSinglePayload for ContentTransferEncoding(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for UploadFlagChanges.ActionID(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1A563A9F8 + 4 * byte_1A59AB1AF[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1A563AA2C + 4 * byte_1A59AB1AA[v4]))();
}

uint64_t sub_1A563AA2C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A563AA34(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A563AA3CLL);
  return result;
}

uint64_t sub_1A563AA48(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A563AA50);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1A563AA54(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A563AA5C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UploadFlagChanges.ActionID()
{
  return &type metadata for UploadFlagChanges.ActionID;
}

uint64_t storeEnumTagSinglePayload for UploadFlagChanges.DependencyStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A563AAC4 + 4 * byte_1A59AB1B9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A563AAF8 + 4 * byte_1A59AB1B4[v4]))();
}

uint64_t sub_1A563AAF8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A563AB00(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A563AB08);
  return result;
}

uint64_t sub_1A563AB14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A563AB1CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A563AB20(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A563AB28(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UploadFlagChanges.DependencyStatus()
{
  return &type metadata for UploadFlagChanges.DependencyStatus;
}

uint64_t destroy for UploadFlagChanges.FlagsToUpload(uint64_t a1)
{
  return sub_1A550FC70(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
}

uint64_t initializeWithCopy for UploadFlagChanges.FlagsToUpload(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v13 = *(_QWORD *)(a2 + 72);
  v14 = *(_BYTE *)(a2 + 80);
  sub_1A5637D90(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v13;
  *(_BYTE *)(a1 + 80) = v14;
  return a1;
}

uint64_t assignWithCopy for UploadFlagChanges.FlagsToUpload(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v24;
  char v25;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v24 = *(_QWORD *)(a2 + 72);
  v25 = *(_BYTE *)(a2 + 80);
  sub_1A5637D90(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v24, v25);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_QWORD *)(a1 + 64);
  v21 = *(_QWORD *)(a1 + 72);
  v22 = *(_BYTE *)(a1 + 80);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v24;
  *(_BYTE *)(a1 + 80) = v25;
  sub_1A550FC70(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for UploadFlagChanges.FlagsToUpload(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  __int128 v15;
  __int128 v16;

  v3 = *(_BYTE *)(a2 + 80);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_QWORD *)(a1 + 64);
  v13 = *(_QWORD *)(a1 + 72);
  v14 = *(_BYTE *)(a1 + 80);
  v15 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v15;
  v16 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v16;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = v3;
  sub_1A550FC70(v4, v6, v5, v7, v8, v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for UploadFlagChanges.FlagsToUpload(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 81))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 80);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AuthenticatedURLRump(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 80) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 81) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 81) = 0;
    if (a2)
      *(_BYTE *)(result + 80) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A563AE28(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 80) <= 1u)
    return *(unsigned __int8 *)(a1 + 80);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1A563AE40(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)(result + 72) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 80) = a2;
  return result;
}

ValueMetadata *type metadata accessor for UploadFlagChanges.FlagsToUpload()
{
  return &type metadata for UploadFlagChanges.FlagsToUpload;
}

unint64_t sub_1A563AE84()
{
  unint64_t result;

  result = qword_1EE7A8DB0;
  if (!qword_1EE7A8DB0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AB2F0, &type metadata for UploadFlagChanges.DependencyStatus);
    atomic_store(result, (unint64_t *)&qword_1EE7A8DB0);
  }
  return result;
}

unint64_t sub_1A563AECC()
{
  unint64_t result;

  result = qword_1EE7A8DB8;
  if (!qword_1EE7A8DB8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AB3C8, &type metadata for UploadMessages.ActionID.Kind);
    atomic_store(result, (unint64_t *)&qword_1EE7A8DB8);
  }
  return result;
}

uint64_t sub_1A563AF10@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;

  v2 = v1[2];
  v3 = v1[3] >> 1;
  if (v2 == v3)
  {
    *(_OWORD *)a1 = xmmword_1A59ABD50;
  }
  else if (v2 < v3)
  {
    v4 = (uint64_t *)(v1[1] + 16 * v2);
    v5 = *v4;
    v6 = v4[1];
    v1[2] = v2 + 1;
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v6;
    return sub_1A54E42B4(v5, v6);
  }
  else
  {
    __break(1u);
  }
  return result;
}

BOOL sub_1A563AF54(uint64_t *a1, uint64_t *a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;

  v2 = a1[1];
  v3 = a2[1];
  if (v2 >> 60 == 11)
    return v3 >> 60 == 11;
  if (v2 >> 60 == 15)
    return v3 >> 60 == 15;
  if (((v3 >> 60) | 4) == 0xF)
    return 0;
  v5 = *a1;
  v6 = *a2;
  sub_1A55B0AF0(*a1, v2);
  sub_1A55B0AF0(v6, v3);
  sub_1A5535F44(v5, v2);
  v8 = v7;
  sub_1A55B0B08(v6, v3);
  sub_1A55B0B08(v5, v2);
  return v8 & 1;
}

uint64_t sub_1A563B028()
{
  uint64_t result;

  result = sub_1A54F8ABC((uint64_t)&unk_1E4E6A100);
  qword_1EE7F9688 = result;
  return result;
}

uint64_t sub_1A563B04C(uint64_t a1, uint64_t a2)
{
  return sub_1A563D4F0(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8) | (unsigned __int16)(*(unsigned __int8 *)(a1 + 9) << 8), *(_QWORD *)a2, *(unsigned __int8 *)(a2 + 8) | (unsigned __int16)(*(unsigned __int8 *)(a2 + 9) << 8));
}

uint64_t sub_1A563B07C(uint64_t a1, uint64_t a2)
{
  return sub_1A563D570(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(unsigned __int8 *)(a1 + 24) | (unsigned __int16)(*(unsigned __int8 *)(a1 + 25) << 8), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(unsigned __int8 *)(a2 + 24) | (unsigned __int16)(*(unsigned __int8 *)(a2 + 25) << 8));
}

uint64_t sub_1A563B0B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, _QWORD *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  char v52;

  v46 = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797728);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for UploadMessages.PendingUpload(0);
  v12 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1A562AE1C(a3);
  v16 = *(_QWORD *)(v15 + 16);
  if (v16)
  {
    v17 = 0;
    while ((sub_1A55E5990(*(_DWORD *)(v15 + 4 * v17 + 32), a1, a2) & 1) == 0)
    {
      if (v16 == ++v17)
        goto LABEL_5;
    }
    swift_bridgeObjectRelease();
    v24 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797750);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v46, 1, 1, v24);
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    v18 = type metadata accessor for UploadMessages(0);
    v19 = v45;
    v20 = v45 + *(int *)(v18 + 40);
    sub_1A54E330C(v20, (uint64_t)v11, &qword_1EE797728);
    v21 = v44;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v44) == 1)
    {
      sub_1A5510284((uint64_t)v11, &qword_1EE797728);
      v22 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797750);
      return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v46, 1, 1, v22);
    }
    else
    {
      sub_1A56408C4((uint64_t)v11, (uint64_t)v14);
      sub_1A5510284(v20, &qword_1EE797728);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v20, 1, 1, v21);
      v25 = *(_OWORD *)(a4 + 88);
      v49 = *(_OWORD *)(a4 + 72);
      v50 = v25;
      v51 = *(_OWORD *)(a4 + 104);
      v52 = *(_BYTE *)(a4 + 120);
      v26 = *(_OWORD *)(a4 + 56);
      v47 = *(_OWORD *)(a4 + 40);
      v48 = v26;
      v27 = 256;
      if (!v14[17])
        v27 = 0;
      v28 = v27 | v14[16];
      v29 = 0x10000;
      if (!v14[18])
        v29 = 0;
      v30 = 0x1000000;
      if (!v14[19])
        v30 = 0;
      v31 = v28 | v29 | v30;
      v32 = 0x100000000;
      if (!v14[20])
        v32 = 0;
      v33 = 0x10000000000;
      if (!v14[21])
        v33 = 0;
      v34 = FlagEncoder.encode(_:)(v31 | v32 | v33 | ((unint64_t)v14[22] << 48) | ((unint64_t)v14[23] << 56), 2);
      swift_bridgeObjectRelease();
      v35 = *(_QWORD *)v14;
      v36 = *((_QWORD *)v14 + 1);
      v37 = v19 + *(int *)(v18 + 44);
      sub_1A5524FD4(*(_QWORD *)v37, *(_QWORD *)(v37 + 8));
      *(_QWORD *)v37 = v35;
      *(_QWORD *)(v37 + 8) = v36;
      v38 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796820);
      v39 = v46;
      v40 = (uint64_t)v46 + *(int *)(v38 + 64);
      v41 = *(int *)(v38 + 80);
      v42 = *(_DWORD *)(v19 + 32);
      *v46 = *(_QWORD *)(v19 + 24);
      *((_DWORD *)v39 + 2) = v42;
      v39[2] = v34;
      sub_1A5640810((uint64_t)&v14[*(int *)(v21 + 24)], v40);
      *(_OWORD *)((char *)v39 + v41) = *(_OWORD *)&v14[*(int *)(v21 + 28)];
      type metadata accessor for ClientCommand(0);
      swift_storeEnumTagMultiPayload();
      v43 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797750);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v39, 0, 1, v43);
      return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
  }
}

void sub_1A563B42C(unint64_t a1, uint64_t a2, void *a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  os_log_t v41;
  os_log_type_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  unint64_t v48;
  int v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  os_log_t v74;
  uint64_t v75;
  uint64_t v76;
  NSObject *v77;
  os_log_type_t v78;
  _BOOL4 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  int v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  void *v92;
  NSObject *v93;
  os_log_type_t v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  unint64_t v100;
  int v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  NSObject *v112;
  os_log_type_t v113;
  int v114;
  uint64_t v115;
  char *v116;
  unint64_t v117;
  uint64_t v118;
  int v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  NSObject *v127;
  os_log_type_t v128;
  int v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  int v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  unint64_t v144;
  unint64_t v145;
  _QWORD *v146;
  unint64_t v147;
  unint64_t v148;
  uint64_t v149;
  char v150;
  unint64_t v151;
  unint64_t v152;
  unint64_t v153;
  _QWORD *v154;
  uint64_t v155;
  char v156;
  unint64_t v157;
  unint64_t v158;
  unint64_t v159;
  _QWORD *v160;
  unint64_t v161;
  uint64_t v162;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v164;
  unint64_t v165;
  _QWORD *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  os_log_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  unint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  unint64_t v180;
  void *v181;
  uint64_t v182;
  int v183;
  uint64_t v184;

  v181 = a3;
  v177 = a6;
  v173 = a2;
  v180 = a1;
  v174 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v174);
  v9 = (char *)&v167 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v167 - v11;
  MEMORY[0x1E0C80A78](v13);
  v170 = (uint64_t)&v167 - v14;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v167 - v16;
  MEMORY[0x1E0C80A78](v18);
  v172 = (uint64_t)&v167 - v19;
  v20 = sub_1A594A764();
  v178 = *(_QWORD *)(v20 - 8);
  v179 = v20;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v167 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v167 - v24;
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v167 - v27;
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v167 - v30;
  MEMORY[0x1E0C80A78](v32);
  v171 = (os_log_t)((char *)&v167 - v33);
  v34 = type metadata accessor for UploadMessages(0);
  v35 = (uint64_t *)(v6 + *(int *)(v34 + 44));
  v36 = v35[1];
  v175 = v6;
  v176 = v36;
  if (v36 >> 60 != 15)
  {
    v168 = *v35;
    *(_OWORD *)v35 = xmmword_1A59ABD50;
    v169 = v34;
    if (!a4)
    {
      v58 = v180;
      if ((~v180 & 0xF000000000000007) != 0 && ((v180 >> 59) & 0x1E | (v180 >> 2) & 1) == 7)
      {
        v59 = *(_DWORD *)((v180 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        v60 = *(_QWORD *)((v180 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
        v61 = *(unsigned int *)((v180 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
        v62 = *(_BYTE *)((v180 & 0xFFFFFFFFFFFFFFBLL) + 0x24);
        sub_1A54E3414();
        MessageIdentifierSet.startIndex.getter();
        v64 = v63;
        v66 = v65;
        MessageIdentifierSet.endIndex.getter();
        if (v64 == v68 && v66 == v67)
        {
          __break(1u);
          return;
        }
        sub_1A54E4334(v60, v61, v62);
        sub_1A55235A0(v180);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        MessageIdentifierSet.subscript.getter();
        sub_1A54E3458(v60, v61, v62);
        LODWORD(v184) = v182;
        UIDValidityWith.init(uidValidity:value:)(v59, (uint64_t)&v184, (uint64_t)&type metadata for UID, v69, &v182);
        v70 = v182;
        v71 = HIDWORD(v182);
        v72 = v177;
        v73 = v178;
        v74 = v171;
        v75 = v179;
        (*(void (**)(os_log_t, uint64_t, uint64_t))(v178 + 16))(v171, v177, v179);
        v76 = v172;
        sub_1A55034B8(v72, v172, type metadata accessor for MailboxTaskLogger);
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        v77 = sub_1A594A74C();
        v78 = sub_1A594C030();
        v79 = os_log_type_enabled(v77, v78);
        v170 = v70;
        v173 = v71;
        if (v79)
        {
          v80 = swift_slowAlloc();
          v177 = swift_slowAlloc();
          v184 = v177;
          *(_DWORD *)v80 = 68159491;
          LODWORD(v182) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v80 + 8) = 256;
          v81 = v76 + *(int *)(v174 + 20);
          LOBYTE(v182) = *(_BYTE *)v81;
          sub_1A594C3CC();
          *(_WORD *)(v80 + 11) = 2082;
          v82 = *(_QWORD *)(v81 + 8);
          v83 = *(_QWORD *)(v81 + 16);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v182 = sub_1A55791B0(v82, v83, &v184);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          *(_WORD *)(v80 + 21) = 1040;
          LODWORD(v182) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v80 + 27) = 512;
          LOWORD(v182) = *(_WORD *)(v81 + 24);
          sub_1A594C3CC();
          *(_WORD *)(v80 + 31) = 2160;
          v182 = 0x786F626C69616DLL;
          sub_1A594C3CC();
          *(_WORD *)(v80 + 41) = 2085;
          v84 = *(_DWORD *)(v81 + 40);
          v182 = *(_QWORD *)(v81 + 32);
          v183 = v84;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v85 = sub_1A594B4A8();
          v182 = sub_1A55791B0(v85, v86, &v184);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          sub_1A55034FC(v172, type metadata accessor for MailboxTaskLogger);
          *(_WORD *)(v80 + 51) = 1024;
          LODWORD(v182) = v173;
          sub_1A594C3CC();
          _os_log_impl(&dword_1A4F90000, v77, v78, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] APPEND succeeded with UID %u.", (uint8_t *)v80, 0x39u);
          v87 = v177;
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v87, -1, -1);
          MEMORY[0x1A85B1964](v80, -1, -1);

          (*(void (**)(os_log_t, uint64_t))(v178 + 8))(v171, v179);
        }
        else
        {
          sub_1A55034FC(v76, type metadata accessor for MailboxTaskLogger);

          (*(void (**)(os_log_t, uint64_t))(v73 + 8))(v74, v75);
        }
        v139 = v175;
        v161 = v176;
        v162 = v168;
        v142 = *(int *)(v169 + 56);
        v143 = *(_QWORD **)(v175 + v142);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v151 = v180;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v143 = sub_1A54F1EA0(0, v143[2] + 1, 1, v143);
        v165 = v143[2];
        v164 = v143[3];
        if (v165 >= v164 >> 1)
          v143 = sub_1A54F1EA0((_QWORD *)(v164 > 1), v165 + 1, 1, v143);
        v143[2] = v165 + 1;
        v166 = &v143[4 * v165];
        v166[4] = v162;
        v166[5] = v161;
        v166[6] = v170 | (v173 << 32);
        *((_WORD *)v166 + 28) = 0;
      }
      else
      {
        v109 = v177;
        v110 = v178;
        v111 = v179;
        (*(void (**)(char *, uint64_t, uint64_t))(v178 + 16))(v31, v177, v179);
        sub_1A55034B8(v109, (uint64_t)v17, type metadata accessor for MailboxTaskLogger);
        sub_1A55235A0(v58);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        v112 = sub_1A594A74C();
        v113 = sub_1A594C030();
        v114 = v113;
        if (os_log_type_enabled(v112, v113))
        {
          v115 = swift_slowAlloc();
          v177 = swift_slowAlloc();
          v184 = v177;
          *(_DWORD *)v115 = 68159235;
          LODWORD(v182) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v115 + 8) = 256;
          v116 = &v17[*(int *)(v174 + 20)];
          LOBYTE(v182) = *v116;
          sub_1A594C3CC();
          *(_WORD *)(v115 + 11) = 2082;
          LODWORD(v174) = v114;
          v118 = *((_QWORD *)v116 + 1);
          v117 = *((_QWORD *)v116 + 2);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v182 = sub_1A55791B0(v118, v117, &v184);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          *(_WORD *)(v115 + 21) = 1040;
          LODWORD(v182) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v115 + 27) = 512;
          LOWORD(v182) = *((_WORD *)v116 + 12);
          sub_1A594C3CC();
          *(_WORD *)(v115 + 31) = 2160;
          v182 = 0x786F626C69616DLL;
          sub_1A594C3CC();
          *(_WORD *)(v115 + 41) = 2085;
          v119 = *((_DWORD *)v116 + 10);
          v182 = *((_QWORD *)v116 + 4);
          v183 = v119;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v120 = sub_1A594B4A8();
          v182 = sub_1A55791B0(v120, v121, &v184);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          sub_1A55034FC((uint64_t)v17, type metadata accessor for MailboxTaskLogger);
          _os_log_impl(&dword_1A4F90000, v112, (os_log_type_t)v174, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] APPEND succeeded without UIDValidity.", (uint8_t *)v115, 0x33u);
          v122 = v177;
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v122, -1, -1);
          MEMORY[0x1A85B1964](v115, -1, -1);

          (*(void (**)(char *, uint64_t))(v178 + 8))(v31, v179);
        }
        else
        {
          sub_1A55034FC((uint64_t)v17, type metadata accessor for MailboxTaskLogger);

          (*(void (**)(char *, uint64_t))(v110 + 8))(v31, v111);
        }
        v139 = v175;
        v148 = v176;
        v149 = v168;
        v142 = *(int *)(v169 + 56);
        v143 = *(_QWORD **)(v175 + v142);
        sub_1A54E42B4(v168, v176);
        v150 = swift_isUniquelyReferenced_nonNull_native();
        v151 = v180;
        if ((v150 & 1) == 0)
          v143 = sub_1A54F1EA0(0, v143[2] + 1, 1, v143);
        v153 = v143[2];
        v152 = v143[3];
        if (v153 >= v152 >> 1)
          v143 = sub_1A54F1EA0((_QWORD *)(v152 > 1), v153 + 1, 1, v143);
        v143[2] = v153 + 1;
        v154 = &v143[4 * v153];
        v154[4] = v149;
        v154[5] = v148;
        v154[6] = 0;
        *((_WORD *)v154 + 28) = 1;
        sub_1A5524FD4(v149, v148);
      }
      sub_1A5524084(v151);
      goto LABEL_48;
    }
    if (a4 == 1)
    {
      v37 = v180;
      if ((~v180 & 0xF000000000000007) != 0 && v180 == 0x8000000000000028)
      {
        v123 = v177;
        v124 = v178;
        v125 = v179;
        (*(void (**)(char *, uint64_t, uint64_t))(v178 + 16))(v28, v177, v179);
        v126 = v170;
        sub_1A55034B8(v123, v170, type metadata accessor for MailboxTaskLogger);
        sub_1A55235A0(0x8000000000000028);
        sub_1A55235A0(0x8000000000000028);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        v127 = sub_1A594A74C();
        v128 = sub_1A594C030();
        v129 = v128;
        if (os_log_type_enabled(v127, v128))
        {
          v130 = swift_slowAlloc();
          LODWORD(v180) = v129;
          v131 = v130;
          v177 = swift_slowAlloc();
          v184 = v177;
          *(_DWORD *)v131 = 68159235;
          LODWORD(v182) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v131 + 8) = 256;
          v132 = v126 + *(int *)(v174 + 20);
          LOBYTE(v182) = *(_BYTE *)v132;
          sub_1A594C3CC();
          *(_WORD *)(v131 + 11) = 2082;
          v133 = *(_QWORD *)(v132 + 8);
          v134 = *(_QWORD *)(v132 + 16);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v182 = sub_1A55791B0(v133, v134, &v184);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          *(_WORD *)(v131 + 21) = 1040;
          LODWORD(v182) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v131 + 27) = 512;
          LOWORD(v182) = *(_WORD *)(v132 + 24);
          sub_1A594C3CC();
          *(_WORD *)(v131 + 31) = 2160;
          v182 = 0x786F626C69616DLL;
          sub_1A594C3CC();
          *(_WORD *)(v131 + 41) = 2085;
          v135 = *(_DWORD *)(v132 + 40);
          v182 = *(_QWORD *)(v132 + 32);
          v183 = v135;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v136 = sub_1A594B4A8();
          v182 = sub_1A55791B0(v136, v137, &v184);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          sub_1A55034FC(v126, type metadata accessor for MailboxTaskLogger);
          _os_log_impl(&dword_1A4F90000, v127, (os_log_type_t)v180, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] APPEND failed with “No, try create”.", (uint8_t *)v131, 0x33u);
          v138 = v177;
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v138, -1, -1);
          MEMORY[0x1A85B1964](v131, -1, -1);

          (*(void (**)(char *, uint64_t))(v178 + 8))(v28, v179);
        }
        else
        {
          sub_1A55034FC(v126, type metadata accessor for MailboxTaskLogger);

          (*(void (**)(char *, uint64_t))(v124 + 8))(v28, v125);
        }
        v139 = v175;
        v155 = v168;
        v142 = *(int *)(v169 + 52);
        v143 = *(_QWORD **)(v175 + v142);
        v156 = swift_isUniquelyReferenced_nonNull_native();
        v157 = v176;
        if ((v156 & 1) == 0)
          v143 = sub_1A54F09F4(0, v143[2] + 1, 1, v143);
        v159 = v143[2];
        v158 = v143[3];
        if (v159 >= v158 >> 1)
          v143 = sub_1A54F09F4((_QWORD *)(v158 > 1), v159 + 1, 1, v143);
        v143[2] = v159 + 1;
        v160 = &v143[2 * v159];
        v160[4] = v155;
        v160[5] = v157;
        v147 = 0x8000000000000028;
LABEL_28:
        sub_1A5524084(v147);
LABEL_48:
        swift_bridgeObjectRelease();
        *(_QWORD *)(v139 + v142) = v143;
        return;
      }
      v38 = v177;
      v39 = v178;
      v40 = v179;
      (*(void (**)(char *, uint64_t, uint64_t))(v178 + 16))(v25, v177, v179);
      sub_1A55034B8(v38, (uint64_t)v12, type metadata accessor for MailboxTaskLogger);
      sub_1A55235A0(v37);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      sub_1A55235A0(v37);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A55235A0(v37);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v41 = (os_log_t)sub_1A594A74C();
      v42 = sub_1A594C030();
      v43 = v42;
      if (!os_log_type_enabled(v41, v42))
      {
        sub_1A55034FC((uint64_t)v12, type metadata accessor for MailboxTaskLogger);
        sub_1A5524084(v37);
        swift_bridgeObjectRelease();
        sub_1A5524084(v37);

        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v39 + 8))(v25, v40);
        goto LABEL_23;
      }
      v44 = swift_slowAlloc();
      LODWORD(v171) = v43;
      v45 = v44;
      v172 = swift_slowAlloc();
      v184 = v172;
      *(_DWORD *)v45 = 68159491;
      LODWORD(v182) = 2;
      v177 = (uint64_t)v25;
      sub_1A594C3CC();
      *(_WORD *)(v45 + 8) = 256;
      v46 = &v12[*(int *)(v174 + 20)];
      LOBYTE(v182) = *v46;
      sub_1A594C3CC();
      *(_WORD *)(v45 + 11) = 2082;
      v47 = *((_QWORD *)v46 + 1);
      v48 = *((_QWORD *)v46 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v182 = sub_1A55791B0(v47, v48, &v184);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v45 + 21) = 1040;
      LODWORD(v182) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v45 + 27) = 512;
      LOWORD(v182) = *((_WORD *)v46 + 12);
      sub_1A594C3CC();
      *(_WORD *)(v45 + 31) = 2160;
      v182 = 0x786F626C69616DLL;
      v37 = v180;
      sub_1A594C3CC();
      *(_WORD *)(v45 + 41) = 2085;
      v49 = *((_DWORD *)v46 + 10);
      v182 = *((_QWORD *)v46 + 4);
      v183 = v49;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v50 = sub_1A594B4A8();
      v182 = sub_1A55791B0(v50, v51, &v184);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v12, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v45 + 51) = 2080;
      sub_1A55235A0(v37);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      ResponseText.debugDescription.getter(v37, v173, v181);
      v53 = v52;
      v55 = v54;
      sub_1A5524084(v37);
      swift_bridgeObjectRelease();
      v182 = sub_1A55791B0(v53, v55, &v184);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A5524084(v37);
      swift_bridgeObjectRelease();
      sub_1A5524084(v37);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A4F90000, v41, (os_log_type_t)v171, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] APPEND failed: %s", (uint8_t *)v45, 0x3Du);
      v56 = v172;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v56, -1, -1);
      v57 = v45;
    }
    else
    {
      v88 = v177;
      v89 = v178;
      v90 = v22;
      v91 = v179;
      (*(void (**)(char *, uint64_t, uint64_t))(v178 + 16))(v22, v177, v179);
      sub_1A55034B8(v88, (uint64_t)v9, type metadata accessor for MailboxTaskLogger);
      v37 = v180;
      sub_1A55235A0(v180);
      v92 = v181;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      sub_1A55235A0(v37);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A55235A0(v37);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v93 = sub_1A594A74C();
      v94 = sub_1A594C030();
      v95 = v94;
      if (!os_log_type_enabled(v93, v94))
      {
        sub_1A55034FC((uint64_t)v9, type metadata accessor for MailboxTaskLogger);
        sub_1A5524084(v37);
        swift_bridgeObjectRelease();
        sub_1A5524084(v37);

        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v89 + 8))(v90, v91);
        goto LABEL_23;
      }
      v96 = swift_slowAlloc();
      v177 = (uint64_t)v90;
      v171 = v93;
      v97 = v96;
      v172 = swift_slowAlloc();
      v184 = v172;
      *(_DWORD *)v97 = 68159491;
      LODWORD(v182) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v97 + 8) = 256;
      v98 = &v9[*(int *)(v174 + 20)];
      LOBYTE(v182) = *v98;
      sub_1A594C3CC();
      *(_WORD *)(v97 + 11) = 2082;
      v99 = *((_QWORD *)v98 + 1);
      v100 = *((_QWORD *)v98 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v182 = sub_1A55791B0(v99, v100, &v184);
      LODWORD(v174) = v95;
      sub_1A594C3CC();
      v37 = v180;
      swift_bridgeObjectRelease();
      *(_WORD *)(v97 + 21) = 1040;
      LODWORD(v182) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v97 + 27) = 512;
      LOWORD(v182) = *((_WORD *)v98 + 12);
      sub_1A594C3CC();
      *(_WORD *)(v97 + 31) = 2160;
      v182 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v97 + 41) = 2085;
      v101 = *((_DWORD *)v98 + 10);
      v182 = *((_QWORD *)v98 + 4);
      v183 = v101;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v102 = sub_1A594B4A8();
      v182 = sub_1A55791B0(v102, v103, &v184);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v9, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v97 + 51) = 2080;
      sub_1A55235A0(v37);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      ResponseText.debugDescription.getter(v37, v173, v92);
      v105 = v104;
      v107 = v106;
      sub_1A5524084(v37);
      swift_bridgeObjectRelease();
      v182 = sub_1A55791B0(v105, v107, &v184);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A5524084(v37);
      swift_bridgeObjectRelease();
      sub_1A5524084(v37);
      swift_bridgeObjectRelease();
      v41 = v171;
      _os_log_impl(&dword_1A4F90000, v171, (os_log_type_t)v174, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] APPEND failed: %s", (uint8_t *)v97, 0x3Du);
      v108 = v172;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v108, -1, -1);
      v57 = v97;
    }
    MEMORY[0x1A85B1964](v57, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v178 + 8))(v177, v179);
LABEL_23:
    v139 = v175;
    v140 = v176;
    v141 = v168;
    v142 = *(int *)(v169 + 56);
    v143 = *(_QWORD **)(v175 + v142);
    sub_1A54E42B4(v168, v176);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v143 = sub_1A54F1EA0(0, v143[2] + 1, 1, v143);
    v145 = v143[2];
    v144 = v143[3];
    if (v145 >= v144 >> 1)
      v143 = sub_1A54F1EA0((_QWORD *)(v144 > 1), v145 + 1, 1, v143);
    v143[2] = v145 + 1;
    v146 = &v143[4 * v145];
    v146[4] = v141;
    v146[5] = v140;
    v146[6] = 0;
    *((_WORD *)v146 + 28) = 256;
    sub_1A5524FD4(v141, v140);
    v147 = v37;
    goto LABEL_28;
  }
}

uint64_t sub_1A563CA14(uint64_t result, unint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;

  if (((a2 >> 60) | 4) != 0xF)
  {
    v4 = result;
    v5 = type metadata accessor for UploadMessages(0);
    v6 = *(_QWORD *)(v2 + *(int *)(v5 + 48));
    sub_1A54E42B4(v4, a2);
    if ((sub_1A54EA298(v4, a2, v6) & 1) != 0)
    {
      v7 = *(int *)(v5 + 56);
      v8 = *(_QWORD **)(v2 + v7);
      sub_1A54E42B4(v4, a2);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v8 = sub_1A54F1EA0(0, v8[2] + 1, 1, v8);
      v9 = v8[2];
      v10 = v8[3];
      v11 = v9 + 1;
      if (v9 >= v10 >> 1)
      {
        v16 = v9 + 1;
        v13 = v8;
        v14 = v8[2];
        v15 = sub_1A54F1EA0((_QWORD *)(v10 > 1), v9 + 1, 1, v13);
        v9 = v14;
        v11 = v16;
        v8 = v15;
      }
      v8[2] = v11;
      v12 = &v8[4 * v9];
      v12[4] = v4;
      v12[5] = a2;
      v12[6] = 0;
      *((_WORD *)v12 + 28) = 256;
      result = sub_1A55B0B08(v4, a2);
      *(_QWORD *)(v2 + v7) = v8;
    }
    else
    {
      return sub_1A55B0B08(v4, a2);
    }
  }
  return result;
}

uint64_t sub_1A563CB48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  unint64_t v37;
  os_log_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  unint64_t v50;
  int v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  os_log_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;

  v59 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v59);
  v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v60 = (uint64_t)&v55 - v9;
  v10 = sub_1A594A764();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v61 = (char *)&v55 - v15;
  v16 = type metadata accessor for UploadMessages(0);
  v17 = *(_QWORD *)(a2 + *(int *)(v16 + 52));
  v18 = *(_QWORD *)(v17 + 16);
  v63 = v13;
  v64 = a2;
  v65 = v7;
  if (v18)
  {
    v62 = a3;
    v19 = v11;
    v20 = v10;
    v21 = a1;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v22 = (unint64_t *)(v17 + 40);
    do
    {
      v24 = *(v22 - 1);
      v23 = *v22;
      sub_1A54E42B4(v24, *v22);
      sub_1A54F33AC(&v67, v24, v23);
      sub_1A54E46E8(v67, v68);
      v22 += 2;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease();
    a1 = v21;
    v10 = v20;
    v11 = v19;
    a3 = v62;
    v13 = v63;
    a2 = v64;
    v7 = v65;
  }
  v25 = *(int *)(v16 + 60);
  if ((*(_BYTE *)(a2 + v25) & 1) == 0)
    goto LABEL_10;
  v26 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v61, a3, v10);
  v27 = v60;
  sub_1A55034B8(a3, v60, type metadata accessor for MailboxTaskLogger);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v28 = sub_1A594A74C();
  v29 = sub_1A594C030();
  v58 = v29;
  if (os_log_type_enabled(v28, v29))
  {
    v30 = swift_slowAlloc();
    v57 = v25;
    v31 = v30;
    v56 = swift_slowAlloc();
    v66 = v56;
    *(_DWORD *)v31 = 68159235;
    LODWORD(v67) = 2;
    v55 = v28;
    sub_1A594C3CC();
    *(_WORD *)(v31 + 8) = 256;
    v32 = v27 + *(int *)(v59 + 20);
    LOBYTE(v67) = *(_BYTE *)v32;
    sub_1A594C3CC();
    *(_WORD *)(v31 + 11) = 2082;
    v62 = a3;
    v34 = *(_QWORD *)(v32 + 8);
    v33 = *(_QWORD *)(v32 + 16);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v67 = sub_1A55791B0(v34, v33, &v66);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 21) = 1040;
    LODWORD(v67) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v31 + 27) = 512;
    LOWORD(v67) = *(_WORD *)(v32 + 24);
    sub_1A594C3CC();
    *(_WORD *)(v31 + 31) = 2160;
    v67 = 0x786F626C69616DLL;
    a3 = v62;
    sub_1A594C3CC();
    *(_WORD *)(v31 + 41) = 2085;
    v35 = *(_DWORD *)(v32 + 40);
    v67 = *(_QWORD *)(v32 + 32);
    LODWORD(v68) = v35;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v36 = sub_1A594B4A8();
    v67 = sub_1A55791B0(v36, v37, &v66);
    sub_1A594C3CC();
    v7 = v65;
    swift_bridgeObjectRelease();
    sub_1A55034FC(v60, type metadata accessor for MailboxTaskLogger);
    v38 = v55;
    _os_log_impl(&dword_1A4F90000, v55, (os_log_type_t)v58, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Persistence has more messages to upload. Will mark as needing to re-run.", (uint8_t *)v31, 0x33u);
    v39 = v56;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v39, -1, -1);
    v40 = v31;
    v25 = v57;
    MEMORY[0x1A85B1964](v40, -1, -1);

    (*(void (**)(char *, uint64_t))(v11 + 8))(v61, v10);
  }
  else
  {
    sub_1A55034FC(v27, type metadata accessor for MailboxTaskLogger);

    (*(void (**)(char *, uint64_t))(v11 + 8))(v26, v10);
  }
  sub_1A554B85C(6u);
  result = sub_1A54F3290(&v67, 6);
  if ((*(_BYTE *)(v64 + v25) & 1) == 0)
  {
LABEL_10:
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a3, v10);
    sub_1A55034B8(a3, (uint64_t)v7, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v42 = sub_1A594A74C();
    v43 = sub_1A594C030();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = swift_slowAlloc();
      v45 = swift_slowAlloc();
      v64 = a1;
      v46 = v45;
      v66 = v45;
      *(_DWORD *)v44 = 68159235;
      LODWORD(v67) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v44 + 8) = 256;
      v47 = *(int *)(v59 + 20);
      v62 = v11;
      v48 = &v7[v47];
      LOBYTE(v67) = v7[v47];
      sub_1A594C3CC();
      *(_WORD *)(v44 + 11) = 2082;
      v61 = (char *)v10;
      v49 = *((_QWORD *)v48 + 1);
      v50 = *((_QWORD *)v48 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v67 = sub_1A55791B0(v49, v50, &v66);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v44 + 21) = 1040;
      LODWORD(v67) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v44 + 27) = 512;
      LOWORD(v67) = *((_WORD *)v48 + 12);
      sub_1A594C3CC();
      *(_WORD *)(v44 + 31) = 2160;
      v67 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v44 + 41) = 2085;
      v51 = *((_DWORD *)v48 + 10);
      v67 = *((_QWORD *)v48 + 4);
      LODWORD(v68) = v51;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v52 = sub_1A594B4A8();
      v67 = sub_1A55791B0(v52, v53, &v66);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v65, type metadata accessor for MailboxTaskLogger);
      _os_log_impl(&dword_1A4F90000, v42, v43, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Removing all messages pending upload.", (uint8_t *)v44, 0x33u);
      swift_arrayDestroy();
      v54 = v46;
      a1 = v64;
      MEMORY[0x1A85B1964](v54, -1, -1);
      MEMORY[0x1A85B1964](v44, -1, -1);

      result = (*(uint64_t (**)(char *, char *))(v62 + 8))(v63, v61);
    }
    else
    {
      sub_1A55034FC((uint64_t)v7, type metadata accessor for MailboxTaskLogger);

      result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    }
    *(_BYTE *)(a1 + 232) = 0;
  }
  return result;
}

uint64_t sub_1A563D2B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = sub_1A563F6D8(a1, a2, a3, a4);
  *a5 = result;
  a5[1] = v7;
  a5[2] = v8;
  return result;
}

void sub_1A563D2E4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1A563FF2C(a1, a2, a3, a5, a6);
}

void sub_1A563D2F0(uint64_t a1, unint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1A563B42C(a2, a3, a4, a5, a5, a7);
}

uint64_t sub_1A563D318(uint64_t a1)
{
  return sub_1A563CA14(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

uint64_t sub_1A563D334(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[5];
  uint64_t v11;

  v3 = *(_QWORD *)(v2 + 24);
  v4 = *(_DWORD *)(v2 + 32);
  v10[3] = a2;
  if (*(_BYTE *)(result + 168) == 1)
  {
    v5 = result;
    v7 = *(_QWORD *)(result + 152);
    v6 = *(_QWORD *)(result + 160);
    v11 = *(_QWORD *)(result + 144);
    v8 = v11;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A551C6E4((uint64_t)&v11, v3, v4, 0, (void (*)(uint64_t))sub_1A563F6D0, v10);
    result = sub_1A54E8FCC(v8, v7, v6, 1);
    v9 = v11;
    *(_QWORD *)(v5 + 152) = 0;
    *(_QWORD *)(v5 + 160) = 0;
    *(_QWORD *)(v5 + 144) = v9;
    *(_BYTE *)(v5 + 168) = 1;
  }
  return result;
}

uint64_t sub_1A563D3DC()
{
  return 0x654D64616F6C7055;
}

uint64_t sub_1A563D400@<X0>(uint64_t a1@<X8>)
{
  _QWORD **v1;
  _QWORD *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char v9;
  char v10;

  v3 = *v1;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) != 0)
  {
    v5 = v3[2];
    if (v5)
    {
LABEL_3:
      v6 = v5 - 1;
      v7 = &v3[4 * v6];
      v8 = v7[6];
      v9 = *((_BYTE *)v7 + 56);
      v10 = *((_BYTE *)v7 + 57);
      *(_OWORD *)a1 = *((_OWORD *)v7 + 2);
      *(_QWORD *)(a1 + 16) = v8;
      *(_BYTE *)(a1 + 24) = v9;
      *(_BYTE *)(a1 + 25) = v10;
      v3[2] = v6;
      *v1 = v3;
      return result;
    }
  }
  else
  {
    result = (uint64_t)sub_1A554B798(v3);
    v3 = (_QWORD *)result;
    v5 = *(_QWORD *)(result + 16);
    if (v5)
      goto LABEL_3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A563D484()
{
  unint64_t *v0;
  unint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *v0;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v0 = v1;
  if (!(_DWORD)result || (v1 & 0x8000000000000000) != 0 || (v1 & 0x4000000000000000) != 0)
    sub_1A554B7E8(v1);
  v3 = v1 & 0xFFFFFFFFFFFFFF8;
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    v5 = v4 - 1;
    v6 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 8 * v5 + 0x20);
    *(_QWORD *)(v3 + 16) = v5;
    sub_1A594B988();
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A563D4F0(uint64_t a1, __int16 a2, uint64_t a3, __int16 a4)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  if (a2 & 0x100 | a4 & 0x100)
    return (unsigned __int16)(a2 & 0x100 & a4 & 0x100) >> 8;
  if ((a2 & 1) != 0)
  {
    if ((a4 & 1) == 0)
      return 0;
  }
  else
  {
    v7 = a1;
    v8 = 0;
    if ((a4 & 1) != 0)
      return 0;
    v6 = a3;
    v5 = sub_1A5640B60();
    if ((static UIDValidityWith<A>.__derived_struct_equals(_:_:)(&v7, &v6, (uint64_t)&type metadata for UID, v5) & 1) == 0)
      return 0;
  }
  return 1;
}

uint64_t sub_1A563D570(uint64_t a1, unint64_t a2, uint64_t a3, __int16 a4, uint64_t a5, unint64_t a6, uint64_t a7, __int16 a8)
{
  char v16;
  char v17;
  unint64_t v18;
  uint64_t v20;
  uint64_t v21;
  char v22;

  sub_1A54E42B4(a1, a2);
  sub_1A54E42B4(a5, a6);
  sub_1A5535F44(a1, a2);
  v17 = v16;
  sub_1A54E46E8(a5, a6);
  sub_1A54E46E8(a1, a2);
  if ((v17 & 1) == 0)
    return 0;
  if ((a4 & 0x100) != 0)
    return (a8 & 0x100) != 0;
  if ((a8 & 0x100) != 0)
    return 0;
  if ((a4 & 1) != 0)
    return (a8 & 1) != 0;
  v21 = a3;
  v22 = 0;
  if ((a8 & 1) == 0)
  {
    v20 = a7;
    v18 = sub_1A5640B60();
    if ((static UIDValidityWith<A>.__derived_struct_equals(_:_:)(&v21, &v20, (uint64_t)&type metadata for UID, v18) & 1) != 0)
      return 1;
  }
  return 0;
}

uint64_t *sub_1A563D670(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  unint64_t v20;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *a2;
    v8 = a2[1];
    sub_1A54E42B4(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    a1[2] = a2[2];
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_1A594A0EC();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796460);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v16 = *(int *)(a3 + 28);
    v17 = (uint64_t *)((char *)a1 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    v19 = *v18;
    v20 = v18[1];
    sub_1A54E42B4(*v18, v20);
    *v17 = v19;
    v17[1] = v20;
  }
  return a1;
}

uint64_t sub_1A563D79C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1A54E46E8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1A594A0EC();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return sub_1A54E46E8(*(_QWORD *)(a1 + *(int *)(a2 + 28)), *(_QWORD *)(a1 + *(int *)(a2 + 28) + 8));
}

uint64_t *sub_1A563D824(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;

  v6 = *a2;
  v7 = a2[1];
  sub_1A54E42B4(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  a1[2] = a2[2];
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1A594A0EC();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796460);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v14 = *(int *)(a3 + 28);
  v15 = (uint64_t *)((char *)a1 + v14);
  v16 = (uint64_t *)((char *)a2 + v14);
  v17 = *v16;
  v18 = v16[1];
  sub_1A54E42B4(*v16, v18);
  *v15 = v17;
  v15[1] = v18;
  return a1;
}

uint64_t sub_1A563D924(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  sub_1A54E42B4(*(_QWORD *)a2, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  sub_1A54E46E8(v8, v9);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  *(_BYTE *)(a1 + 19) = *(_BYTE *)(a2 + 19);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_BYTE *)(a1 + 21) = *(_BYTE *)(a2 + 21);
  *(_BYTE *)(a1 + 22) = *(_BYTE *)(a2 + 22);
  *(_BYTE *)(a1 + 23) = *(_BYTE *)(a2 + 23);
  v10 = *(int *)(a3 + 24);
  v11 = (void *)(a1 + v10);
  v12 = (void *)(a2 + v10);
  v13 = sub_1A594A0EC();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 24))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796460);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_7:
  v19 = *(int *)(a3 + 28);
  v20 = (uint64_t *)(a1 + v19);
  v21 = (uint64_t *)(a2 + v19);
  v22 = *v21;
  v23 = v21[1];
  sub_1A54E42B4(*v21, v23);
  v24 = *v20;
  v25 = v20[1];
  *v20 = v22;
  v20[1] = v23;
  sub_1A54E46E8(v24, v25);
  return a1;
}

uint64_t sub_1A563DAB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_1A594A0EC();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796460);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_OWORD *)(a1 + *(int *)(a3 + 28)) = *(_OWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1A563DB98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;

  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1A54E46E8(v6, v7);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  *(_BYTE *)(a1 + 19) = *(_BYTE *)(a2 + 19);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_BYTE *)(a1 + 21) = *(_BYTE *)(a2 + 21);
  *(_WORD *)(a1 + 22) = *(_WORD *)(a2 + 22);
  v8 = *(int *)(a3 + 24);
  v9 = (void *)(a1 + v8);
  v10 = (void *)(a2 + v8);
  v11 = sub_1A594A0EC();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796460);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  v17 = *(int *)(a3 + 28);
  v18 = *(_QWORD *)(a1 + v17);
  v19 = *(_QWORD *)(a1 + v17 + 8);
  *(_OWORD *)(a1 + v17) = *(_OWORD *)(a2 + v17);
  sub_1A54E46E8(v18, v19);
  return a1;
}

uint64_t sub_1A563DD0C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A563DD18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 16);
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796460);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v10);
  }
}

uint64_t sub_1A563DD98()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A563DDA4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 16) = a2 + 1;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796460);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for UploadMessages.PendingUpload(uint64_t a1)
{
  return sub_1A55A1A0C(a1, (uint64_t *)&unk_1EE797718);
}

void sub_1A563DE2C()
{
  unint64_t v0;

  sub_1A563F244(319, &qword_1EE7964A8, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1A563DEB8(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t *v8;
  __int128 v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(uint64_t *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *__dst;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_DWORD *)(a1 + 32) = *((_DWORD *)a2 + 8);
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
    *(_QWORD *)(a1 + 56) = a2[7];
    v8 = a2 + 8;
    v9 = *(_OWORD *)(a2 + 11);
    *(_OWORD *)(a1 + 88) = v9;
    v10 = v9;
    v11 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v9 - 8);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v11(a1 + 64, v8, v10);
    v12 = a2[14];
    *(_QWORD *)(a1 + 104) = a2[13];
    *(_QWORD *)(a1 + 112) = v12;
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 15);
    *(_QWORD *)(a1 + 136) = a2[17];
    v13 = a3[10];
    v14 = (_QWORD *)(a1 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    v16 = type metadata accessor for UploadMessages.PendingUpload(0);
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v17 + 48);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_unknownObjectRetain();
    if (v18(v15, 1, v16))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797728);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      v20 = *v15;
      v21 = v15[1];
      sub_1A54E42B4(*v15, v21);
      *v14 = v20;
      v14[1] = v21;
      v14[2] = v15[2];
      v22 = *(int *)(v16 + 24);
      __dst = (char *)v14 + v22;
      v23 = (char *)v15 + v22;
      v24 = sub_1A594A0EC();
      v25 = *(_QWORD *)(v24 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
      {
        v26 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796460);
        memcpy(__dst, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(__dst, v23, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v24);
      }
      v27 = *(int *)(v16 + 28);
      v28 = (_QWORD *)((char *)v14 + v27);
      v29 = (uint64_t *)((char *)v15 + v27);
      v30 = *v29;
      v31 = v29[1];
      sub_1A54E42B4(*v29, v31);
      *v28 = v30;
      v28[1] = v31;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    v32 = a3[11];
    v33 = a1 + v32;
    v34 = (uint64_t *)((char *)a2 + v32);
    v35 = v34[1];
    if (v35 >> 60 == 15)
    {
      *(_OWORD *)v33 = *(_OWORD *)v34;
    }
    else
    {
      v36 = *v34;
      sub_1A54E42B4(*v34, v34[1]);
      *(_QWORD *)v33 = v36;
      *(_QWORD *)(v33 + 8) = v35;
    }
    v37 = a3[13];
    *(_QWORD *)(a1 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
    *(_QWORD *)(a1 + v37) = *(uint64_t *)((char *)a2 + v37);
    v38 = a3[15];
    *(_QWORD *)(a1 + a3[14]) = *(uint64_t *)((char *)a2 + a3[14]);
    *(_BYTE *)(a1 + v38) = *((_BYTE *)a2 + v38);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return a1;
}

uint64_t sub_1A563E180(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 64);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  v4 = a1 + *(int *)(a2 + 40);
  v5 = type metadata accessor for UploadMessages.PendingUpload(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    sub_1A54E46E8(*(_QWORD *)v4, *(_QWORD *)(v4 + 8));
    v6 = v4 + *(int *)(v5 + 24);
    v7 = sub_1A594A0EC();
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    sub_1A54E46E8(*(_QWORD *)(v4 + *(int *)(v5 + 28)), *(_QWORD *)(v4 + *(int *)(v5 + 28) + 8));
  }
  v9 = (uint64_t *)(a1 + *(int *)(a2 + 44));
  v10 = v9[1];
  if (v10 >> 60 != 15)
    sub_1A54E46E8(*v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A563E2B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *__dst;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v7 = a2 + 64;
  v8 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 88) = v8;
  v9 = v8;
  v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v10(a1 + 64, v7, v9);
  v11 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v11;
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  v12 = a3[10];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v15 = type metadata accessor for UploadMessages.PendingUpload(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_unknownObjectRetain();
  if (v17(v14, 1, v15))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797728);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v19 = *v14;
    v20 = v14[1];
    sub_1A54E42B4(*v14, v20);
    *v13 = v19;
    v13[1] = v20;
    v13[2] = v14[2];
    v21 = *(int *)(v15 + 24);
    __dst = (char *)v13 + v21;
    v22 = (char *)v14 + v21;
    v23 = sub_1A594A0EC();
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796460);
      memcpy(__dst, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(__dst, v22, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v23);
    }
    v26 = *(int *)(v15 + 28);
    v27 = (_QWORD *)((char *)v13 + v26);
    v28 = (uint64_t *)((char *)v14 + v26);
    v29 = *v28;
    v30 = v28[1];
    sub_1A54E42B4(*v28, v30);
    *v27 = v29;
    v27[1] = v30;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = (uint64_t *)(a2 + v31);
  v34 = v33[1];
  if (v34 >> 60 == 15)
  {
    *(_OWORD *)v32 = *(_OWORD *)v33;
  }
  else
  {
    v35 = *v33;
    sub_1A54E42B4(*v33, v33[1]);
    *(_QWORD *)v32 = v35;
    *(_QWORD *)(v32 + 8) = v34;
  }
  v36 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_QWORD *)(a1 + v36) = *(_QWORD *)(a2 + v36);
  v37 = a3[15];
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  *(_BYTE *)(a1 + v37) = *(_BYTE *)(a2 + v37);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t sub_1A563E54C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t (*v30)(char *, uint64_t, uint64_t);
  int v31;
  size_t v32;
  void *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v55;
  char *__dst;
  void *__dsta;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 64), (uint64_t *)(a2 + 64));
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  v6 = a3[10];
  v7 = (uint64_t *)(a1 + v6);
  v8 = a2 + v6;
  v9 = type metadata accessor for UploadMessages.PendingUpload(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11((uint64_t *)v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_1A55034FC((uint64_t)v7, type metadata accessor for UploadMessages.PendingUpload);
      goto LABEL_7;
    }
    v22 = *(_QWORD *)v8;
    v23 = *(_QWORD *)(v8 + 8);
    sub_1A54E42B4(*(_QWORD *)v8, v23);
    v24 = *v7;
    v25 = v7[1];
    *v7 = v22;
    v7[1] = v23;
    sub_1A54E46E8(v24, v25);
    *((_BYTE *)v7 + 16) = *(_BYTE *)(v8 + 16);
    *((_BYTE *)v7 + 17) = *(_BYTE *)(v8 + 17);
    *((_BYTE *)v7 + 18) = *(_BYTE *)(v8 + 18);
    *((_BYTE *)v7 + 19) = *(_BYTE *)(v8 + 19);
    *((_BYTE *)v7 + 20) = *(_BYTE *)(v8 + 20);
    *((_BYTE *)v7 + 21) = *(_BYTE *)(v8 + 21);
    *((_BYTE *)v7 + 22) = *(_BYTE *)(v8 + 22);
    *((_BYTE *)v7 + 23) = *(_BYTE *)(v8 + 23);
    v26 = *(int *)(v9 + 24);
    v27 = (char *)v7 + v26;
    v28 = (char *)(v8 + v26);
    v29 = sub_1A594A0EC();
    v55 = *(_QWORD *)(v29 - 8);
    v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 48);
    __dsta = v27;
    LODWORD(v27) = v30(v27, 1, v29);
    v31 = v30(v28, 1, v29);
    if ((_DWORD)v27)
    {
      if (!v31)
      {
        (*(void (**)(void *, char *, uint64_t))(v55 + 16))(__dsta, v28, v29);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v55 + 56))(__dsta, 0, 1, v29);
        goto LABEL_18;
      }
      v32 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796460) - 8) + 64);
      v33 = __dsta;
    }
    else
    {
      if (!v31)
      {
        (*(void (**)(void *, char *, uint64_t))(v55 + 24))(__dsta, v28, v29);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v55 + 8))(__dsta, v29);
      v32 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796460) - 8) + 64);
      v33 = __dsta;
    }
    memcpy(v33, v28, v32);
LABEL_18:
    v39 = *(int *)(v9 + 28);
    v40 = (uint64_t *)((char *)v7 + v39);
    v41 = (uint64_t *)(v8 + v39);
    v42 = *v41;
    v43 = v41[1];
    sub_1A54E42B4(*v41, v43);
    v44 = *v40;
    v45 = v40[1];
    *v40 = v42;
    v40[1] = v43;
    sub_1A54E46E8(v44, v45);
    goto LABEL_19;
  }
  if (v13)
  {
LABEL_7:
    v21 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797728);
    memcpy(v7, (const void *)v8, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_19;
  }
  v14 = *(_QWORD *)v8;
  v15 = *(_QWORD *)(v8 + 8);
  sub_1A54E42B4(*(_QWORD *)v8, v15);
  *v7 = v14;
  v7[1] = v15;
  v7[2] = *(_QWORD *)(v8 + 16);
  v16 = *(int *)(v9 + 24);
  __dst = (char *)v7 + v16;
  v17 = (const void *)(v8 + v16);
  v18 = sub_1A594A0EC();
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796460);
    memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v19 + 16))(__dst, v17, v18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
  }
  v34 = *(int *)(v9 + 28);
  v35 = (uint64_t *)((char *)v7 + v34);
  v36 = (uint64_t *)(v8 + v34);
  v37 = *v36;
  v38 = v36[1];
  sub_1A54E42B4(*v36, v38);
  *v35 = v37;
  v35[1] = v38;
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_19:
  v46 = a3[11];
  v47 = (uint64_t *)(a1 + v46);
  v48 = (uint64_t *)(a2 + v46);
  v49 = *(_QWORD *)(a2 + v46 + 8);
  if (*(_QWORD *)(a1 + v46 + 8) >> 60 != 15)
  {
    if (v49 >> 60 != 15)
    {
      v51 = *v48;
      sub_1A54E42B4(v51, v49);
      v52 = *v47;
      v53 = v47[1];
      *v47 = v51;
      v47[1] = v49;
      sub_1A54E46E8(v52, v53);
      goto LABEL_26;
    }
    sub_1A563EA24((uint64_t)v47);
    goto LABEL_24;
  }
  if (v49 >> 60 == 15)
  {
LABEL_24:
    *(_OWORD *)v47 = *(_OWORD *)v48;
    goto LABEL_26;
  }
  v50 = *v48;
  sub_1A54E42B4(v50, v49);
  *v47 = v50;
  v47[1] = v49;
LABEL_26:
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  return a1;
}

uint64_t sub_1A563EA24(uint64_t a1)
{
  destroy for OpaquePersistedMessageIdentifier(a1);
  return a1;
}

uint64_t sub_1A563EA58(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *__dst;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  v7 = *(_OWORD *)(a2 + 128);
  v8 = a3[10];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  v11 = type metadata accessor for UploadMessages.PendingUpload(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797728);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v9 = *(_OWORD *)v10;
    v9[2] = v10[2];
    v14 = *(int *)(v11 + 24);
    __dst = (char *)v9 + v14;
    v15 = (char *)v10 + v14;
    v16 = sub_1A594A0EC();
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796460);
      memcpy(__dst, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(__dst, v15, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
    }
    *(_OWORD *)((char *)v9 + *(int *)(v11 + 28)) = *(_OWORD *)((char *)v10 + *(int *)(v11 + 28));
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v19 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v19) = *(_QWORD *)(a2 + v19);
  v20 = a3[14];
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  *(_QWORD *)(a1 + v20) = *(_QWORD *)(a2 + v20);
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  return a1;
}

uint64_t sub_1A563EC38(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, uint64_t);
  int v29;
  size_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v42;
  char *__dst;
  void *__dsta;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  __swift_destroy_boxed_opaque_existential_1(a1 + 64);
  v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  v7 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  v8 = a3[10];
  v9 = (uint64_t *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v11 = type metadata accessor for UploadMessages.PendingUpload(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (v15)
    {
      sub_1A55034FC((uint64_t)v9, type metadata accessor for UploadMessages.PendingUpload);
      goto LABEL_7;
    }
    v22 = *v9;
    v23 = v9[1];
    *(_OWORD *)v9 = *(_OWORD *)v10;
    sub_1A54E46E8(v22, v23);
    *((_BYTE *)v9 + 16) = *((_BYTE *)v10 + 16);
    *((_BYTE *)v9 + 17) = *((_BYTE *)v10 + 17);
    *((_BYTE *)v9 + 18) = *((_BYTE *)v10 + 18);
    *((_BYTE *)v9 + 19) = *((_BYTE *)v10 + 19);
    *((_BYTE *)v9 + 20) = *((_BYTE *)v10 + 20);
    *((_BYTE *)v9 + 21) = *((_BYTE *)v10 + 21);
    *((_WORD *)v9 + 11) = *((_WORD *)v10 + 11);
    v24 = *(int *)(v11 + 24);
    v25 = (char *)v9 + v24;
    v26 = (char *)v10 + v24;
    v27 = sub_1A594A0EC();
    v42 = *(_QWORD *)(v27 - 8);
    v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 48);
    __dsta = v25;
    LODWORD(v25) = v28(v25, 1, v27);
    v29 = v28(v26, 1, v27);
    if ((_DWORD)v25)
    {
      if (!v29)
      {
        (*(void (**)(void *, char *, uint64_t))(v42 + 32))(__dsta, v26, v27);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v42 + 56))(__dsta, 0, 1, v27);
        goto LABEL_18;
      }
      v30 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796460) - 8) + 64);
      v31 = __dsta;
    }
    else
    {
      if (!v29)
      {
        (*(void (**)(void *, char *, uint64_t))(v42 + 40))(__dsta, v26, v27);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v42 + 8))(__dsta, v27);
      v30 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796460) - 8) + 64);
      v31 = __dsta;
    }
    memcpy(v31, v26, v30);
LABEL_18:
    v32 = *(int *)(v11 + 28);
    v33 = *(uint64_t *)((char *)v9 + v32);
    v34 = *(uint64_t *)((char *)v9 + v32 + 8);
    *(_OWORD *)((char *)v9 + v32) = *(_OWORD *)((char *)v10 + v32);
    sub_1A54E46E8(v33, v34);
    goto LABEL_19;
  }
  if (v15)
  {
LABEL_7:
    v21 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797728);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_19;
  }
  *(_OWORD *)v9 = *(_OWORD *)v10;
  v9[2] = v10[2];
  v16 = *(int *)(v11 + 24);
  __dst = (char *)v9 + v16;
  v17 = (char *)v10 + v16;
  v18 = sub_1A594A0EC();
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796460);
    memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(__dst, v17, v18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
  }
  *(_OWORD *)((char *)v9 + *(int *)(v11 + 28)) = *(_OWORD *)((char *)v10 + *(int *)(v11 + 28));
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_19:
  v35 = a3[11];
  v36 = (uint64_t *)(a1 + v35);
  v37 = (uint64_t *)(a2 + v35);
  v38 = *(_QWORD *)(a1 + v35 + 8);
  if (v38 >> 60 != 15)
  {
    v39 = v37[1];
    if (v39 >> 60 != 15)
    {
      v40 = *v36;
      *v36 = *v37;
      v36[1] = v39;
      sub_1A54E46E8(v40, v38);
      goto LABEL_24;
    }
    sub_1A563EA24((uint64_t)v36);
  }
  *(_OWORD *)v36 = *(_OWORD *)v37;
LABEL_24:
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  return a1;
}

uint64_t sub_1A563F058()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A563F064(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797728);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 40)], a2, v8);
  }
}

uint64_t sub_1A563F0E4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1A563F0F0(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797728);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 40)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for UploadMessages(uint64_t a1)
{
  return sub_1A55A1A0C(a1, qword_1EE797760);
}

void sub_1A563F17C()
{
  unint64_t v0;

  sub_1A563F244(319, &qword_1EE797730, (void (*)(uint64_t))type metadata accessor for UploadMessages.PendingUpload);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1A563F244(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1A594C354();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t *destroy for UploadMessages.ActionID(uint64_t *result)
{
  unint64_t v1;

  v1 = result[1];
  if ((v1 & 0x3000000000000000) == 0)
    return (uint64_t *)sub_1A54E46E8(*result, v1);
  return result;
}

uint64_t _s13IMAP2Behavior14UploadMessagesV8ActionIDOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  if ((v3 & 0x3000000000000000) != 0)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v4 = *a2;
    sub_1A54E42B4(*a2, a2[1]);
    *(_QWORD *)a1 = v4;
    *(_QWORD *)(a1 + 8) = v3;
  }
  return a1;
}

uint64_t *assignWithCopy for UploadMessages.ActionID(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v4 = a1[1];
  v5 = a2[1];
  v6 = v5 & 0x3000000000000000;
  if ((v4 & 0x3000000000000000) == 0)
  {
    if (!v6)
    {
      v9 = *a2;
      sub_1A54E42B4(v9, v5);
      v10 = *a1;
      v11 = a1[1];
      *a1 = v9;
      a1[1] = v5;
      sub_1A54E46E8(v10, v11);
      return a1;
    }
    sub_1A54E46E8(*a1, v4);
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  v7 = *a2;
  sub_1A54E42B4(v7, v5);
  *a1 = v7;
  a1[1] = v5;
  return a1;
}

uint64_t *assignWithTake for UploadMessages.ActionID(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v4 = a1[1];
  if ((v4 & 0x3000000000000000) == 0)
  {
    v5 = a2[1];
    if ((v5 & 0x3000000000000000) == 0)
    {
      v7 = *a1;
      *a1 = *a2;
      a1[1] = v5;
      sub_1A54E46E8(v7, v4);
      return a1;
    }
    sub_1A54E46E8(*a1, v4);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  return a1;
}

uint64_t getEnumTagSinglePayload for UploadMessages.ActionID(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xB && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 11);
  v3 = *(_QWORD *)(a1 + 8) >> 60;
  if (((4 * (_DWORD)v3) & 0xC) != 0)
    v4 = 16 - ((4 * v3) & 0xC | (v3 >> 2));
  else
    v4 = 0;
  if (v4 >= 3)
    return v4 - 2;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for UploadMessages.ActionID(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xA)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 11;
    if (a3 >= 0xB)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xB)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)((4 * (14 - a2)) | ((14 - a2) >> 2)) << 60;
    }
  }
  return result;
}

uint64_t sub_1A563F4A0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 8) >> 60;
  if (((4 * (_DWORD)v1) & 0xC) != 0)
    return 16 - ((4 * (_DWORD)v1) & 0xC | (v1 >> 2));
  else
    return 0;
}

_QWORD *sub_1A563F4C8(_QWORD *result, unsigned int a2)
{
  if (a2 > 0xC)
  {
    *result = a2 - 13;
    result[1] = 0;
  }
  else if (a2)
  {
    *result = 0;
    result[1] = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
  }
  return result;
}

ValueMetadata *type metadata accessor for UploadMessages.ActionID()
{
  return &type metadata for UploadMessages.ActionID;
}

uint64_t storeEnumTagSinglePayload for UploadMessages.ActionID.Kind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A563F554 + 4 * byte_1A59AB39D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A563F588 + 4 * byte_1A59AB398[v4]))();
}

uint64_t sub_1A563F588(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A563F590(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A563F598);
  return result;
}

uint64_t sub_1A563F5A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A563F5ACLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A563F5B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A563F5B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UploadMessages.ActionID.Kind()
{
  return &type metadata for UploadMessages.ActionID.Kind;
}

unint64_t sub_1A563F5D8()
{
  unint64_t result;

  result = qword_1EE797740;
  if (!qword_1EE797740)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AB518, &type metadata for UploadMessages.ActionID);
    atomic_store(result, (unint64_t *)&qword_1EE797740);
  }
  return result;
}

unint64_t sub_1A563F620()
{
  unint64_t result;

  result = qword_1EE797748;
  if (!qword_1EE797748)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AB584, &type metadata for UploadMessages.CommandID);
    atomic_store(result, (unint64_t *)&qword_1EE797748);
  }
  return result;
}

unint64_t sub_1A563F664(uint64_t a1)
{
  unint64_t result;

  result = sub_1A563F688();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A563F688()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE797758;
  if (!qword_1EE797758)
  {
    v1 = type metadata accessor for UploadMessages(255);
    result = MEMORY[0x1A85B1874](&unk_1A59AB540, v1);
    atomic_store(result, (unint64_t *)&qword_1EE797758);
  }
  return result;
}

uint64_t sub_1A563F6D0(uint64_t a1)
{
  uint64_t v1;

  return sub_1A563CB48(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1A563F6D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  BOOL v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  char v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t result;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  unint64_t v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  __int16 v110;

  v104 = a4;
  v97 = a1;
  v98 = a3;
  v100 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797728);
  MEMORY[0x1E0C80A78](v5);
  v95 = (char *)&v87 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = type metadata accessor for TaskHistory.Running(0);
  v7 = *(_QWORD *)(v105 - 8);
  MEMORY[0x1E0C80A78](v105);
  v9 = (char *)&v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v87 - v11;
  v13 = type metadata accessor for TaskHistory.Previous(0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v87 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v87 - v18;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v87 - v21;
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v87 - v24;
  v26 = type metadata accessor for UploadMessages(0);
  v27 = *(int *)(v26 + 56);
  v99 = v4;
  v28 = v4 + v27;
  if (*(_QWORD *)(*(_QWORD *)v28 + 16))
  {
    sub_1A563D400((uint64_t)&v107);
    v29 = v108;
    if (v108 >> 60 == 15)
    {
      sub_1A55A2898(*(_QWORD *)(*(_QWORD *)v28 + 16) - 1, (uint64_t)&v107);
      v30 = v107;
      v29 = v108;
      if ((v110 & 0x100) == 0)
      {
        v31 = v109;
        v32 = v110;
LABEL_34:
        v59 = v32 & 1;
        v60 = swift_allocObject();
        v61 = *(_DWORD *)(v99 + 32);
        *(_QWORD *)(v60 + 16) = *(_QWORD *)(v99 + 24);
        *(_DWORD *)(v60 + 24) = v61;
        *(_QWORD *)(v60 + 32) = v30;
        *(_QWORD *)(v60 + 40) = v29;
        *(_QWORD *)(v60 + 48) = v31;
        *(_BYTE *)(v60 + 56) = v59;
LABEL_36:
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        return 0;
      }
    }
    else
    {
      v32 = v110;
      v30 = v107;
      if ((v110 & 0x100) == 0)
      {
        v31 = v109;
        goto LABEL_34;
      }
    }
    v62 = v99;
    v63 = swift_allocObject();
    v64 = *(_DWORD *)(v62 + 32);
    *(_QWORD *)(v63 + 16) = *(_QWORD *)(v62 + 24);
    *(_DWORD *)(v63 + 24) = v64;
    *(_QWORD *)(v63 + 32) = v30;
    *(_QWORD *)(v63 + 40) = v29;
    goto LABEL_36;
  }
  v93 = v14;
  v106 = v13;
  v101 = v9;
  v102 = v12;
  v103 = v7;
  v89 = v26;
  v33 = sub_1A55B010C(0, 0xB000000000000000, v98);
  v34 = *(_QWORD *)(v33 + 16);
  if (v34)
  {
    v35 = 0;
    v88 = v33;
    v92 = v33 + 32;
    v36 = v100;
    v37 = *(_QWORD *)(v100 + 16);
    v38 = v104;
    v39 = v93;
    v96 = v37;
    v90 = v34;
    do
    {
      if (v37)
      {
        v94 = v35;
        v40 = *(_DWORD *)(v92 + 4 * v35);
        v91 = (*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
        v41 = v36 + v91;
        swift_bridgeObjectRetain_n();
        v42 = *(_QWORD *)(v39 + 72);
        do
        {
          sub_1A55034B8(v41, (uint64_t)v25, type metadata accessor for TaskHistory.Previous);
          sub_1A55034B8((uint64_t)v25, (uint64_t)v22, type metadata accessor for TaskHistory.Previous);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v43 = *((_DWORD *)v22 + 2);
            swift_release();
            if (v43 == v40)
            {
              sub_1A55034FC((uint64_t)v25, type metadata accessor for TaskHistory.Previous);
              swift_bridgeObjectRelease();
              v44 = v100;
              swift_bridgeObjectRelease_n();
              v45 = sub_1A55B010C(0, 0xB000000000000000, v98);
              v90 = *(_QWORD *)(v45 + 16);
              if (!v90)
              {
LABEL_49:
                swift_bridgeObjectRelease();
                return 0;
              }
              v46 = 0;
              v88 = v45;
              v92 = v44 + v91;
              v93 = v45 + 32;
              v47 = (uint64_t)v102;
LABEL_17:
              LODWORD(v104) = *(_DWORD *)(v93 + 4 * v46);
              v94 = v46 + 1;
              swift_bridgeObjectRetain_n();
              v48 = v92;
              v49 = v96;
              while (1)
              {
                sub_1A55034B8(v48, (uint64_t)v19, type metadata accessor for TaskHistory.Previous);
                sub_1A55034B8((uint64_t)v19, (uint64_t)v16, type metadata accessor for TaskHistory.Previous);
                if (swift_getEnumCaseMultiPayload() == 1)
                {
                  v50 = *((_DWORD *)v16 + 2);
                  swift_release();
                  v51 = v50 == (_DWORD)v104;
                  v52 = v103;
                  if (v51)
                  {
                    sub_1A55034FC((uint64_t)v19, type metadata accessor for TaskHistory.Previous);
                    swift_bridgeObjectRelease_n();
                    v53 = *(_QWORD *)(v97 + 16);
                    if (v53)
                    {
                      v54 = v97
                          + ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80));
                      swift_bridgeObjectRetain_n();
                      v55 = *(_QWORD *)(v52 + 72);
                      do
                      {
                        sub_1A55034B8(v54, v47, type metadata accessor for TaskHistory.Running);
                        v56 = v47;
                        v57 = (uint64_t)v101;
                        sub_1A55034B8(v56, (uint64_t)v101, type metadata accessor for TaskHistory.Running);
                        if (swift_getEnumCaseMultiPayload() == 1)
                        {
                          v58 = *(_DWORD *)(v57 + 4);
                          swift_release();
                          if (v58 == (_DWORD)v104)
                          {
                            v47 = (uint64_t)v102;
                            sub_1A55034FC((uint64_t)v102, type metadata accessor for TaskHistory.Running);
                            goto LABEL_30;
                          }
                        }
                        else
                        {
                          sub_1A55034FC(v57, type metadata accessor for TaskHistory.Running);
                        }
                        v47 = (uint64_t)v102;
                        sub_1A55034FC((uint64_t)v102, type metadata accessor for TaskHistory.Running);
                        v54 += v55;
                        --v53;
                      }
                      while (v53);
                      swift_bridgeObjectRelease();
                      v75 = v97;
                      swift_bridgeObjectRelease();
                    }
                    else
                    {
                      v75 = v97;
                    }
                    swift_bridgeObjectRelease();
                    v76 = sub_1A55F3C0C(2, v98);
                    v77 = *(_QWORD *)(v76 + 16);
                    v78 = v99;
                    v79 = v100;
                    v80 = (uint64_t)v95;
                    if (v77)
                    {
                      v81 = 0;
                      while ((sub_1A55F3D24(*(_DWORD *)(v76 + 4 * v81 + 32), v75, v79) & 1) == 0)
                      {
                        if (v77 == ++v81)
                          goto LABEL_46;
                      }
                      goto LABEL_49;
                    }
LABEL_46:
                    swift_bridgeObjectRelease();
                    sub_1A54E330C(v78 + *(int *)(v89 + 40), v80, &qword_1EE797728);
                    v82 = type metadata accessor for UploadMessages.PendingUpload(0);
                    v83 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 48))(v80, 1, v82);
                    sub_1A5510284(v80, &qword_1EE797728);
                    if (v83 == 1)
                    {
                      sub_1A563AF10((uint64_t)&v107);
                      v84 = v108;
                      if (v108 >> 60 != 15)
                      {
                        v65 = v107;
                        sub_1A54E42B4(v107, v108);
                        sub_1A54F33AC(&v107, v65, v84);
                        sub_1A54E46E8(v107, v108);
                        v85 = swift_allocObject();
                        v86 = *(_DWORD *)(v78 + 32);
                        *(_QWORD *)(v85 + 16) = *(_QWORD *)(v78 + 24);
                        *(_DWORD *)(v85 + 24) = v86;
                        *(_QWORD *)(v85 + 32) = v65;
                        *(_QWORD *)(v85 + 40) = v84;
                        sub_1A5524FC0(v65, v84);
                        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                        return v65;
                      }
                    }
                    return 0;
                  }
                }
                else
                {
                  sub_1A55034FC((uint64_t)v16, type metadata accessor for TaskHistory.Previous);
                }
                sub_1A55034FC((uint64_t)v19, type metadata accessor for TaskHistory.Previous);
                v48 += v42;
                if (!--v49)
                {
LABEL_30:
                  swift_bridgeObjectRelease_n();
                  v46 = v94;
                  if (v94 != v90)
                    goto LABEL_17;
                  goto LABEL_49;
                }
              }
            }
          }
          else
          {
            sub_1A55034FC((uint64_t)v22, type metadata accessor for TaskHistory.Previous);
          }
          sub_1A55034FC((uint64_t)v25, type metadata accessor for TaskHistory.Previous);
          v41 += v42;
          --v37;
        }
        while (v37);
        v36 = v100;
        swift_bridgeObjectRelease_n();
        v37 = v96;
        v38 = v104;
        v39 = v93;
        v35 = v94;
        v34 = v90;
      }
      ++v35;
    }
    while (v35 != v34);
    result = swift_bridgeObjectRelease();
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v38 = v104;
  }
  v67 = *(_QWORD *)(*(_QWORD *)(v38 + 152) + 16);
  v68 = v67 + 7;
  if (!__OFADD__(v67, 7))
  {
    if (v68 > 99)
      return 0;
    v69 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v70 = sub_1A550CC54(v69);
    swift_bridgeObjectRelease();
    v71 = *(int *)(v89 + 52);
    v72 = v99;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v72 + v71) = v70;
    v73 = swift_allocObject();
    v74 = *(_DWORD *)(v72 + 32);
    *(_QWORD *)(v73 + 16) = *(_QWORD *)(v72 + 24);
    *(_DWORD *)(v73 + 24) = v74;
    *(_QWORD *)(v73 + 32) = v68;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return 0;
  }
  __break(1u);
  return result;
}

void sub_1A563FF2C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  int v35;
  int v36;
  int v37;
  uint64_t *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  int v48;
  uint64_t v49;
  char *v50;
  unint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  unint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t *v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t *v73;
  _QWORD *v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  char v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  unint64_t v85;
  int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;

  v10 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796460);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1A594A764();
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v84 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (a1 >> 59) & 0x1E | (a1 >> 2) & 1;
  if (v21 == 13)
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796848);
    v31 = swift_projectBox();
    if ((*(unsigned int *)(v95 + 32) | ((unint64_t)*(unsigned int *)(v95 + 32) << 32)) == (*(unsigned int *)(v31 + 8) | ((unint64_t)*(unsigned int *)(v31 + 8) << 32)))
    {
      v32 = v31;
      v34 = *(_QWORD *)(v31 + 16);
      v33 = *(_QWORD *)(v31 + 24);
      LODWORD(v93) = *(unsigned __int8 *)(v31 + 32);
      LODWORD(v92) = *(unsigned __int8 *)(v31 + 33);
      v35 = *(unsigned __int8 *)(v31 + 34);
      v90 = *(unsigned __int8 *)(v31 + 35);
      LODWORD(v91) = v35;
      v36 = *(unsigned __int8 *)(v31 + 36);
      v88 = *(unsigned __int8 *)(v31 + 37);
      v89 = v36;
      v37 = *(unsigned __int8 *)(v31 + 38);
      v86 = *(unsigned __int8 *)(v31 + 39);
      v87 = v37;
      v38 = (uint64_t *)(v31 + *(int *)(v30 + 96));
      v39 = v38[1];
      v94 = *v38;
      if (sub_1A54FF30C(*(_QWORD *)(v95 + 24), *(_QWORD *)v31))
      {
        sub_1A54E330C(v32 + *(int *)(v30 + 80), (uint64_t)v12, &qword_1EE796460);
        sub_1A54E42B4(v34, v33);
        sub_1A54E42B4(v34, v33);
        v85 = v39;
        sub_1A54E42B4(v94, v39);
        v40 = sub_1A55B010C(v34, v33, a4);
        v41 = *(_QWORD *)(v40 + 16);
        if (v41)
        {
          v42 = 0;
          while ((sub_1A55F3D24(*(_DWORD *)(v40 + 4 * v42 + 32), a2, a3) & 1) == 0)
          {
            if (v41 == ++v42)
              goto LABEL_16;
          }
          swift_bridgeObjectRelease();
          sub_1A54E46E8(v34, v33);
          v57 = type metadata accessor for UploadMessages(0);
          v58 = v95;
          sub_1A554BC90(v34, v33, &v97);
          sub_1A5524FD4(v97, *((unint64_t *)&v97 + 1));
          v59 = v58 + *(int *)(v57 + 40);
          sub_1A5510284(v59, &qword_1EE797728);
          v60 = type metadata accessor for UploadMessages.PendingUpload(0);
          sub_1A5640810((uint64_t)v12, v59 + *(int *)(v60 + 24));
          *(_QWORD *)v59 = v34;
          *(_QWORD *)(v59 + 8) = v33;
          *(_BYTE *)(v59 + 16) = v93;
          *(_BYTE *)(v59 + 17) = v92;
          *(_BYTE *)(v59 + 18) = v91;
          *(_BYTE *)(v59 + 19) = v90;
          *(_BYTE *)(v59 + 20) = v89;
          *(_BYTE *)(v59 + 21) = v88;
          *(_BYTE *)(v59 + 22) = v87;
          *(_BYTE *)(v59 + 23) = v86;
          v61 = (_QWORD *)(v59 + *(int *)(v60 + 28));
          v62 = v85;
          *v61 = v94;
          v61[1] = v62;
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v59, 0, 1, v60);
        }
        else
        {
LABEL_16:
          swift_bridgeObjectRelease();
          sub_1A54E46E8(v34, v33);
          sub_1A5510284((uint64_t)v12, &qword_1EE796460);
          sub_1A54E46E8(v34, v33);
          sub_1A54E46E8(v94, v85);
        }
      }
    }
  }
  else if (v21 == 12)
  {
    v22 = a1 & 0xFFFFFFFFFFFFFFBLL;
    if ((*(unsigned int *)(v95 + 32) | ((unint64_t)*(unsigned int *)(v95 + 32) << 32)) == (*(unsigned int *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x18) | ((unint64_t)*(unsigned int *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x18) << 32)))
    {
      v23 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      v24 = *(unsigned __int8 *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
      v25 = *(_QWORD *)(v95 + 24);
      v26 = *(_QWORD *)(v22 + 16);
      v93 = v18;
      v94 = v17;
      if (sub_1A54FF30C(v25, v26))
      {
        LODWORD(v91) = v24;
        v92 = v23;
        v27 = sub_1A55B010C(0, 0xB000000000000000, a4);
        v28 = *(_QWORD *)(v27 + 16);
        if (v28)
        {
          v29 = 0;
          while ((sub_1A55F3D24(*(_DWORD *)(v27 + 4 * v29 + 32), a2, a3) & 1) == 0)
          {
            if (v28 == ++v29)
              goto LABEL_9;
          }
          swift_bridgeObjectRelease();
          if ((v91 & 1) == 0)
            *(_BYTE *)(v95 + *(int *)(type metadata accessor for UploadMessages(0) + 60)) = 1;
          v43 = v92;
          if (*(_QWORD *)(*(_QWORD *)(v95 + 104) + 16))
          {
            v45 = v93;
            v44 = v94;
            (*(void (**)(char *, uint64_t, uint64_t))(v93 + 16))(v20, a5, v94);
            sub_1A55034B8(a5, (uint64_t)v15, type metadata accessor for MailboxTaskLogger);
            OUTLINED_FUNCTION_53();
            OUTLINED_FUNCTION_53();
            OUTLINED_FUNCTION_53();
            OUTLINED_FUNCTION_53();
            OUTLINED_FUNCTION_53();
            OUTLINED_FUNCTION_53();
            v46 = sub_1A594A74C();
            v47 = sub_1A594C018();
            v48 = v47;
            if (os_log_type_enabled(v46, v47))
            {
              v49 = swift_slowAlloc();
              v91 = swift_slowAlloc();
              v96 = v91;
              *(_DWORD *)v49 = 68159235;
              LODWORD(v97) = 2;
              sub_1A594C3CC();
              *(_WORD *)(v49 + 8) = 256;
              v50 = &v15[*(int *)(v13 + 20)];
              LOBYTE(v97) = *v50;
              sub_1A594C3CC();
              *(_WORD *)(v49 + 11) = 2082;
              v90 = v48;
              v52 = *((_QWORD *)v50 + 1);
              v51 = *((_QWORD *)v50 + 2);
              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
              *(_QWORD *)&v97 = sub_1A55791B0(v52, v51, &v96);
              sub_1A594C3CC();
              swift_bridgeObjectRelease();
              *(_WORD *)(v49 + 21) = 1040;
              LODWORD(v97) = 2;
              sub_1A594C3CC();
              *(_WORD *)(v49 + 27) = 512;
              LOWORD(v97) = *((_WORD *)v50 + 12);
              sub_1A594C3CC();
              *(_WORD *)(v49 + 31) = 2160;
              *(_QWORD *)&v97 = 0x786F626C69616DLL;
              sub_1A594C3CC();
              *(_WORD *)(v49 + 41) = 2085;
              v53 = *((_DWORD *)v50 + 10);
              *(_QWORD *)&v97 = *((_QWORD *)v50 + 4);
              DWORD2(v97) = v53;
              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
              v54 = sub_1A594B4A8();
              *(_QWORD *)&v97 = sub_1A55791B0(v54, v55, &v96);
              sub_1A594C3CC();
              v43 = v92;
              swift_bridgeObjectRelease();
              sub_1A55034FC((uint64_t)v15, type metadata accessor for MailboxTaskLogger);
              _os_log_impl(&dword_1A4F90000, v46, (os_log_type_t)v90, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Unexpectedly received multiple .uploadMessages", (uint8_t *)v49, 0x33u);
              v56 = v91;
              swift_arrayDestroy();
              MEMORY[0x1A85B1964](v56, -1, -1);
              MEMORY[0x1A85B1964](v49, -1, -1);

              (*(void (**)(char *, uint64_t))(v93 + 8))(v20, v94);
            }
            else
            {
              sub_1A55034FC((uint64_t)v15, type metadata accessor for MailboxTaskLogger);

              (*(void (**)(char *, uint64_t))(v45 + 8))(v20, v44);
            }
          }
          v63 = v95;
          v64 = *(_QWORD **)(v95 + 104);
          v65 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v66 = sub_1A55526A8(v65);
          swift_bridgeObjectRelease();
          v96 = v66;
          v67 = *(_QWORD *)(v63 + *(int *)(type metadata accessor for UploadMessages(0) + 52));
          v68 = *(_QWORD *)(v67 + 16);
          if (v68)
          {
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v69 = (unint64_t *)(v67 + 40);
            do
            {
              v70 = *(v69 - 1);
              v71 = *v69;
              sub_1A54E42B4(v70, *v69);
              sub_1A54F33AC((uint64_t *)&v97, v70, v71);
              sub_1A54E46E8(v97, *((unint64_t *)&v97 + 1));
              v69 += 2;
              --v68;
            }
            while (v68);
            swift_bridgeObjectRelease();
            v43 = v92;
          }
          v72 = *(_QWORD *)(v43 + 16);
          if (v72)
          {
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v73 = (unint64_t *)(v43 + 40);
            do
            {
              v75 = *(v73 - 1);
              v76 = *v73;
              v77 = v96;
              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
              v78 = sub_1A54EA298(v75, v76, v77);
              swift_bridgeObjectRelease();
              if ((v78 & 1) == 0)
              {
                v79 = v64[2];
                if (v79 < 7)
                {
                  sub_1A54E42B4(v75, v76);
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                    v64 = sub_1A54F09F4(0, v79 + 1, 1, v64);
                  v81 = v64[2];
                  v80 = v64[3];
                  if (v81 >= v80 >> 1)
                    v64 = sub_1A54F09F4((_QWORD *)(v80 > 1), v81 + 1, 1, v64);
                  v64[2] = v81 + 1;
                  v74 = &v64[2 * v81];
                  v74[4] = v75;
                  v74[5] = v76;
                  *(_QWORD *)(v95 + 104) = v64;
                  sub_1A54E42B4(v75, v76);
                  sub_1A54F33AC((uint64_t *)&v97, v75, v76);
                  sub_1A54E46E8(v97, *((unint64_t *)&v97 + 1));
                }
              }
              v73 += 2;
              --v72;
            }
            while (v72);
            swift_bridgeObjectRelease();
          }
          v82 = (2 * v64[2]) | 1;
          v83 = (_QWORD *)v95;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          swift_unknownObjectRelease();
          v83[14] = v64;
          v83[15] = v64 + 4;
          v83[16] = 0;
          v83[17] = v82;
          swift_bridgeObjectRelease();
        }
        else
        {
LABEL_9:
          swift_bridgeObjectRelease();
          *(_BYTE *)(v95 + *(int *)(type metadata accessor for UploadMessages(0) + 60)) = 1;
        }
      }
    }
  }
}

uint64_t sub_1A5640810(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5640858()
{
  return objectdestroyTm_3();
}

uint64_t sub_1A5640860()
{
  return objectdestroyTm_3();
}

uint64_t objectdestroyTm_3()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1A54E46E8(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  return swift_deallocObject();
}

uint64_t sub_1A56408A0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A56408C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UploadMessages.PendingUpload(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for UploadMessages.CommandID(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A5640948 + 4 * byte_1A59AB3A2[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A5640968 + 4 * byte_1A59AB3A7[v4]))();
}

_BYTE *sub_1A5640948(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A5640968(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A5640970(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A5640978(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A5640980(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A5640988(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for UploadMessages.CommandID()
{
  return &type metadata for UploadMessages.CommandID;
}

uint64_t initializeWithCopy for UploadMessages.CompletedUpload(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  sub_1A54E42B4(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  return a1;
}

uint64_t assignWithCopy for UploadMessages.CompletedUpload(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  sub_1A54E42B4(*(_QWORD *)a2, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  sub_1A54E46E8(v6, v7);
  v8 = *(_QWORD *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v8;
  return a1;
}

__n128 __swift_memcpy26_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 10) = *(_OWORD *)(a2 + 10);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for UploadMessages.CompletedUpload(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1A54E46E8(v4, v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for UploadMessages.CompletedUpload(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xD && *(_BYTE *)(a1 + 26))
    return (*(_DWORD *)a1 + 13);
  v3 = (((*(_QWORD *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for UploadMessages.CompletedUpload(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_WORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 13;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 26) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 26) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UploadMessages.CompletedUpload()
{
  return &type metadata for UploadMessages.CompletedUpload;
}

unint64_t sub_1A5640B60()
{
  unint64_t result;

  result = qword_1EE796FE0;
  if (!qword_1EE796FE0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for UID, &type metadata for UID);
    atomic_store(result, (unint64_t *)&qword_1EE796FE0);
  }
  return result;
}

uint64_t __swift_memcpy10_4(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for UploadMessages.CompletedUpload.Status(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 10))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for UploadMessages.CompletedUpload.Status(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_WORD *)(result + 8) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 10) = v3;
  return result;
}

uint64_t sub_1A5640C04(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1A5640C20(uint64_t result, int a2)
{
  if (a2)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    *(_DWORD *)(result + 4) = 0;
    *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    *(_BYTE *)(result + 9) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for UploadMessages.CompletedUpload.Status()
{
  return &type metadata for UploadMessages.CompletedUpload.Status;
}

uint64_t sub_1A5640C54(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(result + 16);
  if (v4)
  {
    v8 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0() + 40;
    do
    {
      v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 - 8);
      swift_retain();
      v9(a2, a3, a4);
      swift_release();
      v8 += 16;
      --v4;
    }
    while (v4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

double sub_1A5640CE8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  __int16 v9;
  uint64_t v10;
  uint64_t v11;
  double result;

  if (*(_QWORD *)(a1 + 16))
  {
    v2 = *(_DWORD *)(a1 + 32);
    v3 = *(_BYTE *)(a1 + 36);
    v4 = *(_BYTE *)(a1 + 37);
    v5 = *(_BYTE *)(a1 + 38);
    v6 = *(_BYTE *)(a1 + 39);
    v7 = *(_BYTE *)(a1 + 40);
    v8 = *(_BYTE *)(a1 + 41);
    v9 = *(_WORD *)(a1 + 42);
    v10 = *(_QWORD *)(a1 + 44);
    v11 = *(_QWORD *)(a1 + 56);
    *(_DWORD *)a2 = v2;
    *(_BYTE *)(a2 + 4) = v3;
    *(_BYTE *)(a2 + 5) = v4;
    *(_BYTE *)(a2 + 6) = v5;
    *(_BYTE *)(a2 + 7) = v6;
    *(_BYTE *)(a2 + 8) = v7;
    *(_BYTE *)(a2 + 9) = v8;
    *(_WORD *)(a2 + 10) = v9;
    *(_QWORD *)(a2 + 12) = v10;
    *(_QWORD *)(a2 + 24) = v11;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

double sub_1A5640D50@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  double result;

  if (*(_QWORD *)(a1 + 16))
  {
    v2 = *(_DWORD *)(a1 + 36);
    v3 = *(_QWORD *)(a1 + 40);
    v4 = *(_DWORD *)(a1 + 48);
    v5 = *(_QWORD *)(a1 + 56);
    v6 = *(_QWORD *)(a1 + 64);
    *(_BYTE *)a2 = *(_BYTE *)(a1 + 32);
    *(_DWORD *)(a2 + 4) = v2;
    *(_QWORD *)(a2 + 8) = v3;
    *(_DWORD *)(a2 + 16) = v4;
    *(_QWORD *)(a2 + 24) = v5;
    *(_QWORD *)(a2 + 32) = v6;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54E42B4(v5, v6);
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1A5640DC0(uint64_t a1)
{
  uint64_t result;
  int v3;
  char v4;
  uint64_t v5;

  result = sub_1A5520CE0(a1);
  if ((v4 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
    return 0;
  else
    return sub_1A5649A24((uint64_t)&v5, result, v3, 0, a1);
}

_BYTE *sub_1A5640E50(uint64_t a1)
{
  _BYTE *result;
  int v3;
  char v4;
  char v5;

  result = (_BYTE *)sub_1A5520CE0(a1);
  if ((v4 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == (_BYTE *)(1 << *(_BYTE *)(a1 + 32)))
    return 0;
  else
    return sub_1A5649AC8(&v5, (uint64_t)result, v3, 0, a1);
}

uint64_t sub_1A5640EDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  int v15;

  result = sub_1A5520CE0(a1);
  if ((v6 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v5)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
  {
    result = 0;
    v7 = 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v11 = 0;
  }
  else
  {
    result = sub_1A5649B4C((uint64_t)&v12, result, v5, 0, a1);
    v8 = v12;
    v9 = v13;
    v10 = v14;
    v11 = v15;
  }
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v7;
  *(_QWORD *)(a2 + 16) = v8;
  *(_QWORD *)(a2 + 24) = v9;
  *(_QWORD *)(a2 + 32) = v10;
  *(_DWORD *)(a2 + 40) = v11;
  return result;
}

unint64_t sub_1A5640F90(unint64_t result, uint64_t a2)
{
  unsigned __int8 v2;

  if ((result & 0x100000000) != 0)
  {
    if ((a2 & 0x100000000) == 0)
      goto LABEL_10;
LABEL_7:
    LODWORD(result) = 0;
    v2 = 1;
    return result | ((unint64_t)v2 << 32);
  }
  if ((a2 & 0x100000000) != 0)
  {
LABEL_5:
    v2 = 0;
    return result | ((unint64_t)v2 << 32);
  }
  if (a2 == result)
    goto LABEL_7;
  if (result < a2)
    goto LABEL_5;
  __break(1u);
LABEL_10:
  __break(1u);
  return result;
}

double sub_1A5640FE4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  __int16 v10;
  uint64_t v11;
  uint64_t v12;
  double result;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v3 = a1 + 32 * v2;
    v4 = *(_BYTE *)(v3 + 4);
    v5 = *(_BYTE *)(v3 + 5);
    v6 = *(_BYTE *)(v3 + 6);
    v7 = *(_BYTE *)(v3 + 7);
    v8 = *(_BYTE *)(v3 + 8);
    v9 = *(_BYTE *)(v3 + 9);
    v10 = *(_WORD *)(v3 + 10);
    v11 = *(_QWORD *)(v3 + 12);
    v12 = *(_QWORD *)(v3 + 24);
    *(_DWORD *)a2 = *(_DWORD *)v3;
    *(_BYTE *)(a2 + 4) = v4;
    *(_BYTE *)(a2 + 5) = v5;
    *(_BYTE *)(a2 + 6) = v6;
    *(_BYTE *)(a2 + 7) = v7;
    *(_BYTE *)(a2 + 8) = v8;
    *(_BYTE *)(a2 + 9) = v9;
    *(_WORD *)(a2 + 10) = v10;
    *(_QWORD *)(a2 + 12) = v11;
    *(_QWORD *)(a2 + 24) = v12;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

double sub_1A5641050@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t *v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  double result;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v3 = (uint64_t *)(a1 + 40 * v2);
    v4 = *((_DWORD *)v3 - 1);
    v5 = *v3;
    v6 = *((_DWORD *)v3 + 2);
    v7 = v3[2];
    v8 = v3[3];
    *(_BYTE *)a2 = *((_BYTE *)v3 - 8);
    *(_DWORD *)(a2 + 4) = v4;
    *(_QWORD *)(a2 + 8) = v5;
    *(_DWORD *)(a2 + 16) = v6;
    *(_QWORD *)(a2 + 24) = v7;
    *(_QWORD *)(a2 + 32) = v8;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54E42B4(v7, v8);
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

unint64_t sub_1A56410C4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t result;
  unsigned __int8 v6;

  if ((a1 & 0x100000000) != 0)
  {
    if ((a2 & 0x100000000) != 0)
      goto LABEL_12;
  }
  else if ((a2 & 0x100000000) == 0 && a2 == a1)
  {
    goto LABEL_12;
  }
  result = sub_1A56499D8(a2 | ((unint64_t)(BYTE4(a2) & 1) << 32), a1 | ((HIDWORD(a1) & 1) << 32), a2 | ((unint64_t)(BYTE4(a2) & 1) << 32), a3);
  if ((result & 0x100000000) != 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if ((a1 & 0x100000000) == 0)
  {
    if (result >= a1)
    {
      v6 = 0;
      if ((a2 & 0x100000000) != 0 || result < a2)
        return result | ((unint64_t)v6 << 32);
      __break(1u);
LABEL_12:
      LODWORD(result) = 0;
      v6 = 1;
      return result | ((unint64_t)v6 << 32);
    }
    __break(1u);
    goto LABEL_15;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t Update.Kind.hash(into:)()
{
  return sub_1A594CE88();
}

BOOL static Update.Kind.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t Update.Kind.hashValue.getter()
{
  sub_1A594CE64();
  sub_1A594CE88();
  return sub_1A594CED0();
}

uint64_t Update.kind.getter(unint64_t a1)
{
  return 0x201u >> ((a1 >> 59) & 0x18);
}

unint64_t sub_1A5641214()
{
  unint64_t result;

  result = qword_1EE7A8DC0;
  if (!qword_1EE7A8DC0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for Update.Kind, &type metadata for Update.Kind);
    atomic_store(result, (unint64_t *)&qword_1EE7A8DC0);
  }
  return result;
}

_QWORD *_s10SinglepartV4KindOwCP(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t _s10SinglepartV4KindOwxx()
{
  return swift_release();
}

_QWORD *_s10SinglepartV4KindOwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *_s10SinglepartV4KindOwta(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Update(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7E && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 126);
  v3 = (((*(_QWORD *)a1 >> 57) >> 5) | (4 * ((*(_QWORD *)a1 >> 57) & 0x18 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7D)
    v3 = -1;
  return v3 + 1;
}

uint64_t _s10SinglepartV4KindOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7D)
  {
    *(_QWORD *)result = a2 - 126;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1A56413B4(_QWORD *a1)
{
  uint64_t v1;

  v1 = *a1 >> 62;
  if (v1 <= 1)
    return v1;
  else
    return (*a1 >> 3) + 2;
}

_QWORD *sub_1A56413D0(_QWORD *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t *sub_1A56413E0(unint64_t *result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  if (a2 < 2)
  {
    v2 = *result & 0xFFFFFFFFFFFFFF8;
    v3 = a2 << 62;
  }
  else
  {
    v2 = 8 * (a2 - 2);
    v3 = 0x8000000000000000;
  }
  *result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for Update()
{
  return &type metadata for Update;
}

uint64_t storeEnumTagSinglePayload for Update.Kind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A5641468 + 4 * byte_1A59AB665[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A564149C + 4 * byte_1A59AB660[v4]))();
}

uint64_t sub_1A564149C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A56414A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A56414ACLL);
  return result;
}

uint64_t sub_1A56414B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A56414C0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A56414C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A56414CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Update.Kind()
{
  return &type metadata for Update.Kind;
}

uint64_t sub_1A56414E8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  NSObject *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint8_t *v96;
  os_signpost_id_t v97;
  _QWORD v99[36];
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  _BYTE *v107;

  v5 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796460);
  MEMORY[0x1E0C80A78](v5);
  v99[9] = (char *)v99 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A594A65C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v99[35] = (char *)v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v99[25] = (char *)v99 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v99[34] = (char *)v99 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v99[32] = (char *)v99 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v99[33] = (char *)v99 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v99[30] = (char *)v99 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v99[28] = (char *)v99 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v99[29] = (char *)v99 - v24;
  v25 = MEMORY[0x1E0C80A78](v23);
  v99[27] = (char *)v99 - v26;
  v27 = MEMORY[0x1E0C80A78](v25);
  v99[23] = (char *)v99 - v28;
  v29 = MEMORY[0x1E0C80A78](v27);
  v99[26] = (char *)v99 - v30;
  v31 = MEMORY[0x1E0C80A78](v29);
  v99[21] = (char *)v99 - v32;
  v33 = MEMORY[0x1E0C80A78](v31);
  v99[20] = (char *)v99 - v34;
  v35 = MEMORY[0x1E0C80A78](v33);
  v36 = MEMORY[0x1E0C80A78](v35);
  v99[22] = (char *)v99 - v37;
  v38 = MEMORY[0x1E0C80A78](v36);
  v39 = MEMORY[0x1E0C80A78](v38);
  v99[24] = (char *)v99 - v40;
  v41 = MEMORY[0x1E0C80A78](v39);
  v99[10] = (char *)v99 - v42;
  v43 = MEMORY[0x1E0C80A78](v41);
  v99[31] = (char *)v99 - v44;
  MEMORY[0x1E0C80A78](v43);
  v46 = (char *)v99 - v45;
  v47 = sub_1A594A62C();
  v48 = *(_QWORD *)(v47 - 8);
  v102 = v47;
  v103 = v48;
  v49 = MEMORY[0x1E0C80A78](v47);
  v99[19] = (char *)v99 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = MEMORY[0x1E0C80A78](v49);
  v99[14] = (char *)v99 - v52;
  v53 = MEMORY[0x1E0C80A78](v51);
  v99[8] = (char *)v99 - v54;
  v55 = MEMORY[0x1E0C80A78](v53);
  v99[17] = (char *)v99 - v56;
  v57 = MEMORY[0x1E0C80A78](v55);
  v99[18] = (char *)v99 - v58;
  v59 = MEMORY[0x1E0C80A78](v57);
  v99[15] = (char *)v99 - v60;
  v61 = MEMORY[0x1E0C80A78](v59);
  v99[6] = (char *)v99 - v62;
  v63 = MEMORY[0x1E0C80A78](v61);
  v99[7] = (char *)v99 - v64;
  v65 = MEMORY[0x1E0C80A78](v63);
  v99[5] = (char *)v99 - v66;
  v67 = MEMORY[0x1E0C80A78](v65);
  v99[12] = (char *)v99 - v68;
  v69 = MEMORY[0x1E0C80A78](v67);
  v99[4] = (char *)v99 - v70;
  v71 = MEMORY[0x1E0C80A78](v69);
  v99[3] = (char *)v99 - v72;
  v73 = MEMORY[0x1E0C80A78](v71);
  v99[2] = (char *)v99 - v74;
  v75 = MEMORY[0x1E0C80A78](v73);
  v99[11] = (char *)v99 - v76;
  v77 = MEMORY[0x1E0C80A78](v75);
  v99[1] = (char *)v99 - v78;
  v79 = MEMORY[0x1E0C80A78](v77);
  v99[13] = (char *)v99 - v80;
  v81 = MEMORY[0x1E0C80A78](v79);
  v82 = MEMORY[0x1E0C80A78](v81);
  v99[16] = (char *)v99 - v83;
  v84 = MEMORY[0x1E0C80A78](v82);
  v86 = (char *)v99 - v85;
  MEMORY[0x1E0C80A78](v84);
  v104 = (char *)v99 - v87;
  OSSignpostID.init(engine:kind:idA:idB:)();
  if ((a3 & 1) != 0)
  {
    v100 = v8;
    v101 = v7;
    __asm { BR              X10 }
  }
  v88 = tracingSignposter.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v46, v88, v7);
  v89 = swift_allocObject();
  *(_DWORD *)(v89 + 16) = a2;
  v90 = sub_1A594A650();
  LODWORD(v100) = sub_1A594C150();
  v91 = swift_allocObject();
  *(_BYTE *)(v91 + 16) = 0;
  v92 = swift_allocObject();
  *(_BYTE *)(v92 + 16) = 4;
  v93 = swift_allocObject();
  *(_QWORD *)(v93 + 16) = sub_1A564B9F0;
  *(_QWORD *)(v93 + 24) = v89;
  v94 = swift_allocObject();
  *(_QWORD *)(v94 + 16) = sub_1A564B9E4;
  *(_QWORD *)(v94 + 24) = v93;
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7962F0);
  v95 = swift_allocObject();
  *(_OWORD *)(v95 + 16) = xmmword_1A59ABDA0;
  *(_QWORD *)(v95 + 32) = sub_1A561281C;
  *(_QWORD *)(v95 + 40) = v91;
  *(_QWORD *)(v95 + 48) = sub_1A561281C;
  *(_QWORD *)(v95 + 56) = v92;
  *(_QWORD *)(v95 + 64) = sub_1A564B9E8;
  *(_QWORD *)(v95 + 72) = v94;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if ((sub_1A594C318() & 1) != 0)
  {
    (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v86, v104, v102);
    v96 = (uint8_t *)sub_1A5578EF0();
    v105 = 0;
    v106 = 0;
    *(_WORD *)v96 = 256;
    v107 = v96 + 2;
    sub_1A5578FC8(&v107, (uint64_t)&v106, (uint64_t)&v105, *(_BYTE *)(v91 + 16));
    swift_release();
    sub_1A5578FC8(&v107, (uint64_t)&v106, (uint64_t)&v105, *(_BYTE *)(v92 + 16));
    swift_release();
    sub_1A5578FD8(&v107, &v106, &v105, *(_QWORD *)(v94 + 16), *(_QWORD *)(v94 + 24));
    swift_release();
    v97 = sub_1A594A620();
    _os_signpost_emit_with_name_impl(&dword_1A4F90000, v90, (os_signpost_type_t)v100, v97, "PersistenceEvent.actionDidComplete", "ID %u", v96, 8u);
    sub_1A5578F2C();
  }
  swift_release();
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v8 + 8))(v46, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v103 + 8))(v104, v102);
}

uint64_t sub_1A5648AA4(uint64_t a1)
{
  int64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    sub_1A54F4B4C(0, v1, 0);
    v3 = a1 + 32;
    do
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v4 = sub_1A594B490();
      v6 = v5;
      v8 = *(_QWORD *)(v12 + 16);
      v7 = *(_QWORD *)(v12 + 24);
      if (v8 >= v7 >> 1)
        sub_1A54F4B4C(v7 > 1, v8 + 1, 1);
      *(_QWORD *)(v12 + 16) = v8 + 1;
      v9 = v12 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v4;
      *(_QWORD *)(v9 + 40) = v6;
      v3 += 8;
      --v1;
    }
    while (v1);
  }
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799A38);
  sub_1A54F70C0();
  v10 = sub_1A594B268();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1A5648BD8(_QWORD *a1, uint64_t a2, uint64_t a3, unint64_t a4, int a5, uint64_t a6, unint64_t a7, uint64_t a8, unint64_t a9)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  unint64_t v41;
  void *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  _QWORD *v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60[3];

  v57 = a7;
  v49 = a6;
  v52 = a5;
  v51 = a3;
  v53 = a2;
  v54 = a1;
  v60[1] = *MEMORY[0x1E0C80C00];
  v56 = sub_1A594A62C();
  v11 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796460);
  v15 = MEMORY[0x1E0C80A78](v14);
  v50 = (uint64_t)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v42 - v17;
  v19 = sub_1A594A65C();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = tracingSignposter.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v22, v23, v19);
  sub_1A564B0E0(v57, (uint64_t)v18);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54E42B4(a8, a9);
  v57 = a4;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54E42B4(a8, a9);
  v24 = (void *)sub_1A594A650();
  v48 = sub_1A594C150();
  if ((sub_1A594C318() & 1) != 0)
  {
    v42 = v24;
    v43 = v18;
    v55 = a9;
    v46 = v11;
    v47 = a8;
    v44 = v20;
    v45 = v13;
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v51, v56);
    v25 = swift_slowAlloc();
    v26 = (_QWORD *)swift_slowAlloc();
    v27 = swift_slowAlloc();
    v60[0] = v27;
    *(_DWORD *)v25 = 141559555;
    v58 = 0x786F626C69616DLL;
    sub_1A594C3CC();
    *(_WORD *)(v25 + 12) = 2085;
    v58 = v57;
    v59 = v52;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v28 = sub_1A594B4A8();
    v58 = sub_1A55791B0(v28, v29, v60);
    sub_1A594C3CC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 22) = 1040;
    v30 = (uint64_t)v54;
    v31 = v53 - (_QWORD)v54;
    if (!v54)
      v31 = 0;
    if (v31 < (uint64_t)0xFFFFFFFF80000000)
    {
      __break(1u);
    }
    else if (v31 <= 0x7FFFFFFF)
    {
      v53 = v27;
      LODWORD(v58) = v31;
      sub_1A594C3CC();
      *(_WORD *)(v25 + 28) = 2096;
      if (v30)
      {
        v57 = v55 >> 62;
        v58 = v30;
        sub_1A594C3CC();
        *(_WORD *)(v25 + 38) = 2112;
        v32 = sub_1A5649280(v49 & 0xFFFF010101010101);
        v58 = v32;
        sub_1A594C3CC();
        v54 = v26;
        *v26 = v32;
        *(_WORD *)(v25 + 48) = 2048;
        v33 = (uint64_t)v43;
        v34 = v50;
        sub_1A564B0E0((uint64_t)v43, v50);
        v35 = sub_1A594A0EC();
        v36 = *(_QWORD *)(v35 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35) == 1)
        {
          sub_1A559F3F8(v34);
          v37 = 0;
        }
        else
        {
          sub_1A594A044();
          v37 = v38;
          (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v34, v35);
        }
        v58 = v37;
        sub_1A594C3CC();
        sub_1A559F3F8(v33);
        *(_WORD *)(v25 + 58) = 2048;
        __asm { BR              X10 }
      }
      v40 = v47;
      v41 = v55;
      sub_1A54E46E8(v47, v55);
      sub_1A54E46E8(v40, v41);
      sub_1A559F3F8((uint64_t)v43);
      sub_1A594C9B4();
      __break(1u);
      JUMPOUT(0x1A5649270);
    }
    __break(1u);
    JUMPOUT(0x1A56491ECLL);
  }
  sub_1A54E46E8(a8, a9);
  swift_bridgeObjectRelease_n();
  sub_1A559F3F8((uint64_t)v18);
  sub_1A54E46E8(a8, a9);

  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, v19);
}

uint64_t sub_1A5649280(unint64_t a1)
{
  _QWORD *v2;
  unint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;

  if ((a1 & 1) == 0)
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if ((a1 & 0x100) == 0)
      goto LABEL_12;
    goto LABEL_7;
  }
  v2 = sub_1A54EFEA0(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v4 = v2[2];
  v3 = v2[3];
  if (v4 >= v3 >> 1)
    v2 = sub_1A54EFEA0((_QWORD *)(v3 > 1), v4 + 1, 1, v2);
  v2[2] = v4 + 1;
  v5 = &v2[2 * v4];
  v5[4] = 0x646165726E75;
  v5[5] = 0xE600000000000000;
  if ((a1 & 0x100) != 0)
  {
LABEL_7:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v2 = sub_1A54EFEA0(0, v2[2] + 1, 1, v2);
    v7 = v2[2];
    v6 = v2[3];
    if (v7 >= v6 >> 1)
      v2 = sub_1A54EFEA0((_QWORD *)(v6 > 1), v7 + 1, 1, v2);
    v2[2] = v7 + 1;
    v8 = &v2[2 * v7];
    v8[4] = 0x646574656C6564;
    v8[5] = 0xE700000000000000;
  }
LABEL_12:
  if ((a1 & 0x10000) != 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v2 = sub_1A54EFEA0(0, v2[2] + 1, 1, v2);
    v10 = v2[2];
    v9 = v2[3];
    if (v10 >= v9 >> 1)
      v2 = sub_1A54EFEA0((_QWORD *)(v9 > 1), v10 + 1, 1, v2);
    v2[2] = v10 + 1;
    v11 = &v2[2 * v10];
    v11[4] = 0x6465726577736E61;
    v11[5] = 0xE800000000000000;
    if ((a1 & 0x1000000) == 0)
    {
LABEL_14:
      if ((a1 & 0x100000000) == 0)
        goto LABEL_15;
      goto LABEL_29;
    }
  }
  else if ((a1 & 0x1000000) == 0)
  {
    goto LABEL_14;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A54EFEA0(0, v2[2] + 1, 1, v2);
  v13 = v2[2];
  v12 = v2[3];
  if (v13 >= v12 >> 1)
    v2 = sub_1A54EFEA0((_QWORD *)(v12 > 1), v13 + 1, 1, v2);
  v2[2] = v13 + 1;
  v14 = &v2[2 * v13];
  v14[4] = 0x7466617264;
  v14[5] = 0xE500000000000000;
  if ((a1 & 0x100000000) == 0)
  {
LABEL_15:
    if ((a1 & 0x10000000000) == 0)
      goto LABEL_16;
    goto LABEL_34;
  }
LABEL_29:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A54EFEA0(0, v2[2] + 1, 1, v2);
  v16 = v2[2];
  v15 = v2[3];
  if (v16 >= v15 >> 1)
    v2 = sub_1A54EFEA0((_QWORD *)(v15 > 1), v16 + 1, 1, v2);
  v2[2] = v16 + 1;
  v17 = &v2[2 * v16];
  v17[4] = 0x6564726177726F66;
  v17[5] = 0xE900000000000064;
  if ((a1 & 0x10000000000) == 0)
  {
LABEL_16:
    if ((a1 & 0xFF000000000000) == 0)
      goto LABEL_17;
    goto LABEL_39;
  }
LABEL_34:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A54EFEA0(0, v2[2] + 1, 1, v2);
  v19 = v2[2];
  v18 = v2[3];
  if (v19 >= v18 >> 1)
    v2 = sub_1A54EFEA0((_QWORD *)(v18 > 1), v19 + 1, 1, v2);
  v2[2] = v19 + 1;
  v20 = &v2[2 * v19];
  v20[4] = 0x7463657269646572;
  v20[5] = 0xEA00000000006465;
  if ((a1 & 0xFF000000000000) == 0)
  {
LABEL_17:
    if (!HIBYTE(a1))
      goto LABEL_49;
    goto LABEL_44;
  }
LABEL_39:
  v21 = sub_1A594B490();
  v23 = v22;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A54EFEA0(0, v2[2] + 1, 1, v2);
  v25 = v2[2];
  v24 = v2[3];
  if (v25 >= v24 >> 1)
    v2 = sub_1A54EFEA0((_QWORD *)(v24 > 1), v25 + 1, 1, v2);
  v2[2] = v25 + 1;
  v26 = &v2[2 * v25];
  v26[4] = v21;
  v26[5] = v23;
  if (HIBYTE(a1))
  {
LABEL_44:
    v27 = sub_1A594B490();
    v29 = v28;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v2 = sub_1A54EFEA0(0, v2[2] + 1, 1, v2);
    v31 = v2[2];
    v30 = v2[3];
    if (v31 >= v30 >> 1)
      v2 = sub_1A54EFEA0((_QWORD *)(v30 > 1), v31 + 1, 1, v2);
    v2[2] = v31 + 1;
    v32 = &v2[2 * v31];
    v32[4] = v27;
    v32[5] = v29;
  }
LABEL_49:
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799A38);
  sub_1A54F70C0();
  sub_1A594B268();
  swift_bridgeObjectRelease();
  v33 = sub_1A594B3F4();
  swift_bridgeObjectRelease();
  return v33;
}

void sub_1A564974C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_1A56497A8()
{
  uint64_t (*v0)(uint64_t *, char *);
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int16 v5;
  char v6;
  char v7;
  char v8;
  char v9;

  v4 = v1;
  v5 = v2;
  v6 = BYTE2(v2);
  v7 = BYTE3(v2);
  v8 = BYTE4(v2);
  v9 = BYTE5(v2);
  return v0(&v4, (char *)&v4 + BYTE6(v2));
}

uint64_t sub_1A5649928(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 16) = a2;
  *(_QWORD *)(result + 24) = 2 * a2;
  return result;
}

uint64_t sub_1A5649938(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t result;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  result = sub_1A5949BE8();
  v7 = result;
  if (result)
  {
    result = sub_1A5949C0C();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v7 += a1 - result;
  }
  v8 = __OFSUB__(a2, a1);
  v9 = a2 - a1;
  if (v8)
  {
    __break(1u);
    goto LABEL_13;
  }
  v10 = sub_1A5949C00();
  if (v10 >= v9)
    v11 = v9;
  else
    v11 = v10;
  v12 = v7 + v11;
  if (v7)
    v13 = v12;
  else
    v13 = 0;
  return a3(v7, v13);
}

unint64_t sub_1A56499D8(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;

  if ((result & 0x100000000) != 0)
  {
    v4 = HIDWORD(a4);
    if (HIDWORD(a4) >= a4)
      return v4;
  }
  else
  {
    if (a4 >= result)
    {
      __break(1u);
    }
    else if ((result & 0xFFFFFFFE) != 0)
    {
      return (result - 1);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5649A24(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (a2 < 0 || 1 << *(_BYTE *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a5 + (((unint64_t)a2 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    v5 = *(_QWORD *)(*(_QWORD *)(a5 + 48) + 16 * a2);
    v6 = *(_QWORD *)(a5 + 56) + 16 * a2;
    v7 = *(_QWORD *)v6;
    LODWORD(v6) = *(_DWORD *)(v6 + 8);
    *(_QWORD *)result = v7;
    *(_DWORD *)(result + 8) = v6;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return v5;
  }
LABEL_8:
  __break(1u);
  return result;
}

_BYTE *sub_1A5649AC8(_BYTE *result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  if (a2 < 0 || 1 << *(_BYTE *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a5 + (((unint64_t)a2 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    *result = *(_BYTE *)(*(_QWORD *)(a5 + 56) + a2);
    return (_BYTE *)_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1A5649B4C(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  if (a2 < 0 || 1 << *(_BYTE *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a5 + (((unint64_t)a2 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    v5 = *(_QWORD *)(*(_QWORD *)(a5 + 48) + 16 * a2);
    v6 = *(_QWORD *)(a5 + 56) + 32 * a2;
    v7 = *(_QWORD *)v6;
    v8 = *(_DWORD *)(v6 + 8);
    v9 = *(_QWORD *)(v6 + 16);
    LODWORD(v6) = *(_DWORD *)(v6 + 24);
    *(_QWORD *)result = v7;
    *(_DWORD *)(result + 8) = v8;
    *(_QWORD *)(result + 16) = v9;
    *(_DWORD *)(result + 24) = v6;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return v5;
  }
LABEL_8:
  __break(1u);
  return result;
}

void sub_1A5649C04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[9];
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;

  v30 = sub_1A594A65C();
  v32 = *(_QWORD *)(v30 - 8);
  v4 = MEMORY[0x1E0C80A78](v30);
  v28[5] = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  v7 = MEMORY[0x1E0C80A78](v6);
  v28[0] = (char *)v28 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v28[2] = (char *)v28 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v28[1] = (char *)v28 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v28[6] = (char *)v28 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v16 = MEMORY[0x1E0C80A78](v15);
  v28[7] = (char *)v28 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v28[4] = (char *)v28 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  MEMORY[0x1E0C80A78](v20);
  v29 = sub_1A594A62C();
  v33 = *(_QWORD *)(v29 - 8);
  v21 = MEMORY[0x1E0C80A78](v29);
  v22 = MEMORY[0x1E0C80A78](v21);
  v28[3] = (char *)v28 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v25 = MEMORY[0x1E0C80A78](v24);
  v28[8] = (char *)v28 - v26;
  MEMORY[0x1E0C80A78](v25);
  v31 = (char *)v28 - v27;
  OSSignpostID.init(engine:kind:connectionID:)();
  __asm { BR              X10 }
}

uint64_t sub_1A5649E88()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_signpost_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint8_t *v10;
  os_signpost_id_t v11;
  void (*v12)(uint64_t, uint64_t);

  v2 = tracingSignposter.unsafeMutableAddressor();
  v3 = v0[12];
  v4 = v0[10];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v2, v4);
  v5 = sub_1A594A650();
  v6 = sub_1A594C150();
  if ((sub_1A594C318() & 1) != 0)
  {
    v8 = v0[8];
    v7 = v0[9];
    v9 = v0[11];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[13] + 16))(v8, v9, v7);
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    v11 = sub_1A594A620();
    _os_signpost_emit_with_name_impl(&dword_1A4F90000, v5, v6, v11, "ConnectionEvent.connectionDidAuthenticate", "", v10, 2u);
    MEMORY[0x1A85B1964](v10, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v0[12] + 8))(v1, v4);
    v12 = *(void (**)(uint64_t, uint64_t))(v0[13] + 8);
    v12(v9, v7);
    return ((uint64_t (*)(uint64_t, uint64_t))v12)(v8, v7);
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v4);
    return (*(uint64_t (**)(_QWORD, _QWORD))(v0[13] + 8))(v0[11], v0[9]);
  }
}

uint64_t sub_1A564AD34(uint64_t a1)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t sub_1A564AD7C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A564ADA0()
{
  return swift_deallocObject();
}

uint64_t sub_1A564ADB4()
{
  uint64_t v0;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v0 + 16))();
  if ((result & 0x100000000) != 0)
    return 0;
  else
    return result;
}

uint64_t sub_1A564ADDC()
{
  return swift_deallocObject();
}

uint64_t sub_1A564ADEC()
{
  return swift_deallocObject();
}

uint64_t sub_1A564ADFC()
{
  return swift_deallocObject();
}

uint64_t sub_1A564AE0C()
{
  return swift_deallocObject();
}

uint64_t sub_1A564AE1C()
{
  return swift_deallocObject();
}

void sub_1A564AE2C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
}

uint64_t sub_1A564AE38()
{
  return swift_deallocObject();
}

uint64_t sub_1A564AE48()
{
  return swift_deallocObject();
}

uint64_t sub_1A564AE58()
{
  return swift_deallocObject();
}

uint64_t sub_1A564AE68()
{
  return swift_deallocObject();
}

uint64_t sub_1A564AE78()
{
  return swift_deallocObject();
}

uint64_t sub_1A564AE88()
{
  return swift_deallocObject();
}

uint64_t sub_1A564AE98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1A5578FD8(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_1A564AEA0()
{
  return swift_deallocObject();
}

uint64_t sub_1A564AEB0()
{
  return swift_deallocObject();
}

uint64_t sub_1A564AEC0()
{
  return swift_deallocObject();
}

uint64_t sub_1A564AED0()
{
  return swift_deallocObject();
}

uint64_t sub_1A564AEE0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1A564AF00@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

uint64_t sub_1A564AF28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return sub_1A54E46E8(a4, a5);
  }
  return result;
}

uint64_t sub_1A564AF60()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A564AF8C()
{
  return swift_deallocObject();
}

uint64_t sub_1A564AF9C()
{
  return swift_deallocObject();
}

uint64_t sub_1A564AFAC()
{
  return swift_deallocObject();
}

uint64_t sub_1A564AFBC()
{
  return swift_deallocObject();
}

uint64_t sub_1A564AFCC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A564AFF0()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B000()
{
  return swift_deallocObject();
}

unint64_t sub_1A564B010()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 16) | ((unint64_t)*(unsigned __int8 *)(v0 + 20) << 32);
}

uint64_t sub_1A564B030()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B040()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B050()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B060()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B070()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B080()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B090()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B0A0()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B0B0()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B0C0()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B0D0()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B0E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A564B128(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = 0x10000000000;
  if (!*(_BYTE *)(v2 + 41))
    v3 = 0;
  v4 = 0x100000000;
  if (!*(_BYTE *)(v2 + 40))
    v4 = 0;
  v5 = 0x1000000;
  if (!*(_BYTE *)(v2 + 39))
    v5 = 0;
  v6 = 0x10000;
  if (!*(_BYTE *)(v2 + 38))
    v6 = 0;
  v7 = 256;
  if (!*(_BYTE *)(v2 + 37))
    v7 = 0;
  return sub_1A5648BD8(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_DWORD *)(v2 + 32), v7 | *(unsigned __int8 *)(v2 + 36) | v6 | v5 | v4 | v3 | ((unint64_t)*(unsigned __int8 *)(v2 + 42) << 48) | ((unint64_t)*(unsigned __int8 *)(v2 + 43) << 56), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64));
}

uint64_t sub_1A564B1D0()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B1E0()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_1A564B1E8()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B1F8()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B208()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B218()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B228()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B238()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B248()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B258()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B268()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B278()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B288()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B298()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 16);
}

uint64_t sub_1A564B2A0()
{
  uint64_t v0;

  return sub_1A5648AA4(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1A564B2A8()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B2B8()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B2C8()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B2D8()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B2E8()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B2F8()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B308()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B318()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B328()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B338()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B348()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B358()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B368()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 16))
    return 2;
  else
    return 1;
}

uint64_t sub_1A564B37C()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B38C()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B39C()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B3AC()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B3BC()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B3CC()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B3E0()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B3F0()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B400()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B410()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B420()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B430()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B440()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B458()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B468()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B478()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B488()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B498()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B4A8()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B4BC()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B4CC()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B4DC()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B4EC()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B4FC()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B50C()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B51C()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B52C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 24);
  *a1 = *(_QWORD *)(v1 + 16);
  a1[1] = v2;
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t sub_1A564B538()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v3);
  v1 = OpaqueMailboxID.description.getter(v3);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1A564B590()
{
  return swift_deallocObject();
}

void sub_1A564B5A0()
{
  uint64_t v0;

  (*(void (**)(void))(v0 + 16))();
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796E58);
  MessageIdentifierRange.debugDescription.getter();
}

uint64_t sub_1A564B5E0()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B5F0()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B600()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B610()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B620()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t sub_1A564B648()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B658()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B668()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B678()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B688()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B698()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B6A8()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B6B8()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B6C8()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B6D8()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B6E8()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B6FC()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16);
}

uint64_t objectdestroy_839Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A564B738()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + 24) + 16);
}

uint64_t sub_1A564B744()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B754()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B764()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B774()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B784()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B794()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B7A4()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B7B4()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B7C4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A564B7E8()
{
  uint64_t v0;

  return 0x5040301u >> (8 * *(_BYTE *)(v0 + 16));
}

uint64_t sub_1A564B800()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1)
    return *(_QWORD *)(v1 + 16);
  else
    return 0;
}

uint64_t sub_1A564B818()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B828()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B838()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B848()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B858()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B868()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B878()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B888()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B898()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B8A8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16) + 1;
}

uint64_t sub_1A564B8B4()
{
  return swift_deallocObject();
}

BOOL sub_1A564B8C4()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + 17) & 1) == 0;
}

uint64_t sub_1A564B8D4()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B8E4()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 18);
}

uint64_t sub_1A564B8EC()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B8FC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t sub_1A564B904()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B914()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B924()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B934()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B944()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A564B968()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B978()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B988()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B998()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B9A8()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B9B8()
{
  return swift_deallocObject();
}

uint64_t sub_1A564B9C8()
{
  return swift_deallocObject();
}

uint64_t sub_1A564BC54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;

  if (*(_DWORD *)a1 != *(_DWORD *)a2)
    return 0;
  v3 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  sub_1A54E42B4(v7, v3);
  sub_1A54E42B4(v6, v5);
  sub_1A5535F44(v7, v3);
  v9 = v8;
  sub_1A54E46E8(v6, v5);
  sub_1A54E46E8(v7, v3);
  if ((v9 & 1) != 0)
    return static DownloadRequest.Kind.__derived_enum_equals(_:_:)(v2, v4);
  else
    return 0;
}

uint64_t _s21UserInitiatedDownloadVwxx(uint64_t a1)
{
  sub_1A54E46E8(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
  return swift_bridgeObjectRelease();
}

uint64_t _s21UserInitiatedDownloadVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  sub_1A54E42B4(v4, v5);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t _s21UserInitiatedDownloadVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  sub_1A54E42B4(v4, v5);
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  sub_1A54E46E8(v6, v7);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s21UserInitiatedDownloadVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_1A54E46E8(v4, v5);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s21UserInitiatedDownloadVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s21UserInitiatedDownloadVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

ValueMetadata *_s21UserInitiatedDownloadVMa()
{
  return &_s21UserInitiatedDownloadVN;
}

uint64_t sub_1A564BF0C(__int128 *a1, __int128 *a2)
{
  __int128 v4[3];
  __int128 v5[3];

  sub_1A564C6E8(a1, v4);
  sub_1A564C6E8(a2, v5);
  return sub_1A564C1D8(v4, v5) & 1;
}

uint64_t sub_1A564BF54(uint64_t a1, uint64_t a2)
{
  int32x2_t *v2;
  uint64_t v3;
  char v4;
  int32x2_t *v5;
  uint64_t v6;
  char v7;
  char v8;

  v2 = *(int32x2_t **)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_BYTE *)(a1 + 24);
  v5 = *(int32x2_t **)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  static SearchKey.__derived_enum_equals(_:_:)(*(_QWORD *)a1);
  if ((v8 & 1) != 0)
    return static SearchRequest.RangesToExclude.__derived_struct_equals(_:_:)(v2, v3, v4, v5, v6, v7);
  else
    return 0;
}

BOOL sub_1A564BFD4(__int128 *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;
  _OWORD v8[2];

  v2 = a1[1];
  v5 = *a1;
  v6[0] = v2;
  *(_OWORD *)((char *)v6 + 13) = *(__int128 *)((char *)a1 + 29);
  v3 = a2[1];
  v7 = *a2;
  v8[0] = v3;
  *(_OWORD *)((char *)v8 + 13) = *(__int128 *)((char *)a2 + 29);
  return sub_1A564C074((uint64_t)&v5, (uint64_t)&v7);
}

uint64_t sub_1A564C01C(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[2];
  _OWORD v6[2];
  _OWORD v7[2];
  _OWORD v8[2];

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v6[0] = *(_OWORD *)(a1 + 32);
  *(_QWORD *)((char *)v6 + 13) = *(_QWORD *)(a1 + 45);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v8[0] = *(_OWORD *)(a2 + 32);
  *(_QWORD *)((char *)v8 + 13) = *(_QWORD *)(a2 + 45);
  return sub_1A564C450((uint64_t)v5, (uint64_t)v7) & 1;
}

BOOL sub_1A564C074(uint64_t a1, uint64_t a2)
{
  int32x2_t *v4;
  uint64_t v5;
  uint64_t v6;
  int32x2_t *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  unint64_t v12;
  int32x2_t *v13;
  unint64_t v14;
  int32x2_t *v15;
  char v16;
  char v17;

  v4 = *(int32x2_t **)a1;
  v5 = *(unsigned int *)(a1 + 8);
  v6 = *(unsigned __int8 *)(a1 + 12);
  v7 = *(int32x2_t **)a2;
  v8 = *(unsigned int *)(a2 + 8);
  v9 = *(unsigned __int8 *)(a2 + 12);
  sub_1A54E3414();
  static MessageIdentifierSet.__derived_struct_equals(_:_:)(v4, v5 | (v6 << 32), v7, v8 | (v9 << 32));
  if ((v10 & 1) == 0)
    return 0;
  static MessageIdentifierSet.__derived_struct_equals(_:_:)(*(int32x2_t **)(a1 + 16), *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int8 *)(a1 + 28) << 32), *(int32x2_t **)(a2 + 16), *(unsigned int *)(a2 + 24) | ((unint64_t)*(unsigned __int8 *)(a2 + 28) << 32));
  if ((v11 & 1) == 0)
    return 0;
  v12 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned __int8 *)(a2 + 44) << 32);
  if (*(unsigned __int8 *)(a1 + 44) != 255)
  {
    if (BYTE4(v12) == 255)
      return 0;
    v13 = *(int32x2_t **)(a1 + 32);
    v14 = *(unsigned int *)(a1 + 40) | ((unint64_t)*(unsigned __int8 *)(a1 + 44) << 32);
    v15 = *(int32x2_t **)(a2 + 32);
    sub_1A5503BA0((uint64_t)v15, v12);
    sub_1A5503BA0((uint64_t)v13, v14);
    static MessageIdentifierSet.__derived_struct_equals(_:_:)(v13, v14, v15, v12 & 0xFFFFFFFFFFLL);
    v17 = v16;
    sub_1A5503B8C((uint64_t)v15, v12);
    sub_1A5503B8C((uint64_t)v13, v14);
    return (v17 & 1) != 0;
  }
  return BYTE4(v12) == 255;
}

uint64_t sub_1A564C1D8(__int128 *a1, __int128 *a2)
{
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  char v6;
  __int128 v7;
  uint64_t v8;
  char v9;
  char v10;
  int32x2_t *v12;
  uint64_t v13;
  uint64_t v14;
  int32x2_t *v15;
  int32x2_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int32x2_t *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  int32x2_t *v29;
  int32x2_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int32x2_t *v34;
  __int128 v35;
  int32x2_t *v36;
  uint64_t v37;
  int32x2_t *v38;
  unsigned int v39;
  unsigned __int8 v40;
  __int128 v41;
  int32x2_t *v42;
  uint64_t v43;
  int32x2_t *v44;
  unsigned int v45;
  unsigned __int8 v46;

  sub_1A564C6E8(a1, &v41);
  v3 = v43;
  if (v43 < 0)
  {
    v43 &= ~0x8000000000000000;
    v12 = (int32x2_t *)v41;
    v13 = DWORD2(v41);
    v14 = BYTE12(v41);
    v15 = v42;
    v16 = v44;
    v17 = v46;
    v18 = v45;
    sub_1A564C6E8(a2, &v35);
    v19 = v37;
    if (v37 < 0)
    {
      v33 = v17;
      v30 = v16;
      v37 &= ~0x8000000000000000;
      v20 = (int32x2_t *)v35;
      v21 = DWORD2(v35);
      v22 = BYTE12(v35);
      v34 = v36;
      v29 = v38;
      v32 = v40;
      v31 = v39;
      sub_1A54E3414();
      static MessageIdentifierSet.__derived_struct_equals(_:_:)(v12, v13 | (v14 << 32), v20, v21 | (v22 << 32));
      if ((v23 & 1) != 0)
      {
        static MessageIdentifierSet.__derived_struct_equals(_:_:)(v15, v3 & 0xFFFFFFFFFFLL, v34, v19 & 0xFFFFFFFFFFLL);
        if ((v24 & 1) != 0)
        {
          v25 = v18 | (v33 << 32);
          v26 = v31 | (v32 << 32);
          if (BYTE4(v25) == 255)
          {
            if (BYTE4(v26) == 255)
              return 1;
          }
          else if (BYTE4(v26) != 255)
          {
            sub_1A5503BA0((uint64_t)v29, v31 | (v32 << 32));
            sub_1A5503BA0((uint64_t)v30, v25);
            static MessageIdentifierSet.__derived_struct_equals(_:_:)(v30, v25 & 0xFFFFFFFFFFLL, v29, v26 & 0xFFFFFFFFFFLL);
            v28 = v27;
            sub_1A5503B8C((uint64_t)v29, v26);
            sub_1A5503B8C((uint64_t)v30, v25);
            if ((v28 & 1) != 0)
              return 1;
          }
        }
      }
    }
  }
  else
  {
    v4 = v41;
    v5 = (uint64_t)v42;
    sub_1A564C6E8(a2, &v35);
    v6 = v37;
    if ((v37 & 0x8000000000000000) == 0)
    {
      v7 = v35;
      v8 = (uint64_t)v36;
      sub_1A54E42F8(v4);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A54E42F8(v7);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      static SearchKey.__derived_enum_equals(_:_:)(v4);
      if ((v9 & 1) != 0)
      {
        v10 = static SearchRequest.RangesToExclude.__derived_struct_equals(_:_:)(*((int32x2_t **)&v4 + 1), v5, v3 & 1, *((int32x2_t **)&v7 + 1), v8, v6 & 1);
        sub_1A54E472C(v7);
        swift_bridgeObjectRelease();
        sub_1A54E472C(v4);
        swift_bridgeObjectRelease();
        if ((v10 & 1) != 0)
          return 1;
      }
      else
      {
        sub_1A54E472C(v7);
        swift_bridgeObjectRelease();
        sub_1A54E472C(v4);
        swift_bridgeObjectRelease();
      }
    }
  }
  return 0;
}

uint64_t sub_1A564C450(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  char v6;
  __int128 v7;
  uint64_t v8;
  char v9;
  char v10;
  int32x2_t *v12;
  uint64_t v13;
  uint64_t v14;
  int32x2_t *v15;
  int32x2_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int32x2_t *v20;
  uint64_t v21;
  int32x2_t *v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  int32x2_t *v30;
  uint64_t v31;
  uint64_t v32;
  int32x2_t *v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36[3];
  __int128 v37[3];
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  int32x2_t *v41;
  unsigned int v42;
  unsigned __int8 v43;
  __int128 v44;
  int32x2_t *v45;
  uint64_t v46;
  int32x2_t *v47;
  unsigned int v48;
  unsigned __int8 v49;

  if (*(_DWORD *)a1 == *(_DWORD *)a2)
  {
    sub_1A564C6E8((__int128 *)(a1 + 8), v37);
    sub_1A564C6E8((__int128 *)(a2 + 8), v36);
    sub_1A564C6E8(v37, &v38);
    v3 = v40;
    if (v40 < 0)
    {
      v40 &= ~0x8000000000000000;
      v12 = (int32x2_t *)v38;
      v13 = DWORD2(v38);
      v14 = BYTE12(v38);
      v15 = (int32x2_t *)v39;
      v16 = v41;
      v17 = v43;
      v18 = v42;
      sub_1A564C6E8(v36, &v44);
      v19 = v46;
      if (v46 < 0)
      {
        v46 &= ~0x8000000000000000;
        v34 = v18;
        v35 = v17;
        v20 = (int32x2_t *)v44;
        v21 = DWORD2(v44);
        v22 = v15;
        v23 = BYTE12(v44);
        v32 = v49;
        v33 = v45;
        v30 = v47;
        v31 = v48;
        sub_1A54E3414();
        static MessageIdentifierSet.__derived_struct_equals(_:_:)(v12, v13 | (v14 << 32), v20, v21 | (v23 << 32));
        if ((v24 & 1) != 0)
        {
          static MessageIdentifierSet.__derived_struct_equals(_:_:)(v22, v3 & 0xFFFFFFFFFFLL, v33, v19 & 0xFFFFFFFFFFLL);
          if ((v25 & 1) != 0)
          {
            v26 = v34 | (v35 << 32);
            v27 = v31 | (v32 << 32);
            if (BYTE4(v26) == 255)
            {
              if (BYTE4(v27) == 255)
                return 1;
            }
            else if (BYTE4(v27) != 255)
            {
              sub_1A5503BA0((uint64_t)v30, v31 | (v32 << 32));
              sub_1A5503BA0((uint64_t)v16, v26);
              static MessageIdentifierSet.__derived_struct_equals(_:_:)(v16, v26 & 0xFFFFFFFFFFLL, v30, v27 & 0xFFFFFFFFFFLL);
              v29 = v28;
              sub_1A5503B8C((uint64_t)v30, v27);
              sub_1A5503B8C((uint64_t)v16, v26);
              if ((v29 & 1) != 0)
                return 1;
            }
          }
        }
      }
    }
    else
    {
      v4 = v38;
      v5 = v39;
      sub_1A564C6E8(v36, &v44);
      v6 = v46;
      if ((v46 & 0x8000000000000000) == 0)
      {
        v7 = v44;
        v8 = (uint64_t)v45;
        sub_1A54E42F8(v4);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A54E42F8(v7);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        static SearchKey.__derived_enum_equals(_:_:)(v4);
        if ((v9 & 1) != 0)
        {
          v10 = static SearchRequest.RangesToExclude.__derived_struct_equals(_:_:)(*((int32x2_t **)&v4 + 1), v5, v3 & 1, *((int32x2_t **)&v7 + 1), v8, v6 & 1);
          sub_1A54E472C(v7);
          swift_bridgeObjectRelease();
          sub_1A54E472C(v4);
          swift_bridgeObjectRelease();
          if ((v10 & 1) != 0)
            return 1;
        }
        else
        {
          sub_1A54E472C(v7);
          swift_bridgeObjectRelease();
          sub_1A54E472C(v4);
          swift_bridgeObjectRelease();
        }
      }
    }
  }
  return 0;
}

_OWORD *sub_1A564C6E8(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_OWORD *)((char *)a2 + 29) = *(__int128 *)((char *)a1 + 29);
  *a2 = v2;
  a2[1] = v3;
  return a2;
}

ValueMetadata *_s19UserInitiatedSearchV13FetchMessagesVMa()
{
  return &_s19UserInitiatedSearchV13FetchMessagesVN;
}

uint64_t _s19UserInitiatedSearchV5StateOwxx(uint64_t a1)
{
  return sub_1A5503B08(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(unsigned int *)(a1 + 40) | ((unint64_t)*(unsigned __int8 *)(a1 + 44) << 32));
}

uint64_t _s19UserInitiatedSearchV5StateOwcp(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(unsigned __int8 *)(a2 + 44);
  v9 = *(unsigned int *)(a2 + 40);
  sub_1A550F160(*(_QWORD *)a2, v4, v5, v6, v7, v9 | (v8 << 32));
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 44) = v8;
  *(_DWORD *)(a1 + 40) = v9;
  return a1;
}

uint64_t _s19UserInitiatedSearchV5StateOwca(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(unsigned __int8 *)(a2 + 44);
  v9 = *(unsigned int *)(a2 + 40);
  sub_1A550F160(*(_QWORD *)a2, v4, v5, v6, v7, v9 | (v8 << 32));
  v10 = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(unsigned int *)(a1 + 40) | ((unint64_t)*(unsigned __int8 *)(a1 + 44) << 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_DWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 44) = v8;
  sub_1A5503B08(v10, v11, v12, v13, v14, v15);
  return a1;
}

uint64_t _s19UserInitiatedSearchV5StateOwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  int v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __int128 v12;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_BYTE *)(a2 + 44);
  v5 = *(_DWORD *)(a2 + 40);
  v6 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(unsigned int *)(a1 + 40) | ((unint64_t)*(unsigned __int8 *)(a1 + 44) << 32);
  v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v12;
  *(_QWORD *)(a1 + 32) = v3;
  *(_DWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 44) = v4;
  sub_1A5503B08(v6, v8, v7, v9, v10, v11);
  return a1;
}

uint64_t _s19UserInitiatedSearchV5StateOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x3FFFFFFF && *(_BYTE *)(a1 + 45))
    return (*(_DWORD *)a1 + 0x3FFFFFFF);
  v3 = (((*(_QWORD *)(a1 + 24) >> 34) >> 29) & 0xC0000001 | (2
                                                                         * ((*(_QWORD *)(a1 + 24) >> 34) & 0x1FFFFFFF))) ^ 0x3FFFFFFF;
  if (v3 >= 0x3FFFFFFE)
    v3 = -1;
  return v3 + 1;
}

uint64_t _s19UserInitiatedSearchV5StateOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3FFFFFFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 44) = 0;
    *(_DWORD *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 0x3FFFFFFF;
    if (a3 >= 0x3FFFFFFF)
      *(_BYTE *)(result + 45) = 1;
  }
  else
  {
    if (a3 >= 0x3FFFFFFF)
      *(_BYTE *)(result + 45) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 0;
      *(_QWORD *)(result + 24) = (unint64_t)(((-a2 >> 1) & 0x1FFFFFFF) - (a2 << 29)) << 34;
      *(_QWORD *)(result + 32) = 0;
      *(_BYTE *)(result + 44) = 0;
      *(_DWORD *)(result + 40) = 0;
    }
  }
  return result;
}

uint64_t sub_1A564C98C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 24) = *(_QWORD *)(result + 24) & 0x3FFFFFFFFLL | (a2 << 63);
  return result;
}

ValueMetadata *_s19UserInitiatedSearchV5StateOMa()
{
  return &_s19UserInitiatedSearchV5StateON;
}

uint64_t _s19UserInitiatedSearchVwxx(uint64_t a1)
{
  return sub_1A5503B08(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(unsigned int *)(a1 + 48) | ((unint64_t)*(unsigned __int8 *)(a1 + 52) << 32));
}

uint64_t _s19UserInitiatedSearchVwcp(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(unsigned __int8 *)(a2 + 52);
  v9 = *(unsigned int *)(a2 + 48);
  sub_1A550F160(v3, v4, v5, v6, v7, v9 | (v8 << 32));
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 52) = v8;
  *(_DWORD *)(a1 + 48) = v9;
  return a1;
}

uint64_t _s19UserInitiatedSearchVwca(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(unsigned __int8 *)(a2 + 52);
  v9 = *(unsigned int *)(a2 + 48);
  sub_1A550F160(v3, v4, v5, v6, v7, v9 | (v8 << 32));
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 40);
  v15 = *(unsigned int *)(a1 + 48) | ((unint64_t)*(unsigned __int8 *)(a1 + 52) << 32);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_DWORD *)(a1 + 48) = v9;
  *(_BYTE *)(a1 + 52) = v8;
  sub_1A5503B08(v10, v11, v12, v13, v14, v15);
  return a1;
}

uint64_t _s19UserInitiatedSearchVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  int v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 40);
  v4 = *(_BYTE *)(a2 + 52);
  v5 = *(_DWORD *)(a2 + 48);
  v6 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(unsigned int *)(a1 + 48) | ((unint64_t)*(unsigned __int8 *)(a1 + 52) << 32);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v3;
  *(_DWORD *)(a1 + 48) = v5;
  *(_BYTE *)(a1 + 52) = v4;
  sub_1A5503B08(v6, v8, v7, v9, v10, v11);
  return a1;
}

uint64_t _s19UserInitiatedSearchVwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x3FFFFFFF && *(_BYTE *)(a1 + 53))
    return (*(_DWORD *)a1 + 0x3FFFFFFF);
  v3 = (((*(_QWORD *)(a1 + 32) >> 34) >> 29) & 0xC0000001 | (2
                                                                         * ((*(_QWORD *)(a1 + 32) >> 34) & 0x1FFFFFFF))) ^ 0x3FFFFFFF;
  if (v3 >= 0x3FFFFFFE)
    v3 = -1;
  return v3 + 1;
}

uint64_t _s19UserInitiatedSearchVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 52) = 0;
    *(_DWORD *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 0x3FFFFFFF;
    if (a3 >= 0x3FFFFFFF)
      *(_BYTE *)(result + 53) = 1;
  }
  else
  {
    if (a3 >= 0x3FFFFFFF)
      *(_BYTE *)(result + 53) = 0;
    if (a2)
    {
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 0;
      *(_QWORD *)(result + 24) = 0;
      *(_QWORD *)(result + 32) = (unint64_t)(((-a2 >> 1) & 0x1FFFFFFF) - (a2 << 29)) << 34;
      *(_QWORD *)(result + 40) = 0;
      *(_BYTE *)(result + 52) = 0;
      *(_DWORD *)(result + 48) = 0;
    }
  }
  return result;
}

ValueMetadata *_s19UserInitiatedSearchVMa()
{
  return &_s19UserInitiatedSearchVN;
}

uint64_t _s19UserInitiatedSearchV5QueryVwxx(unint64_t *a1)
{
  sub_1A54E472C(*a1);
  return swift_bridgeObjectRelease();
}

uint64_t _s19UserInitiatedSearchV5QueryVwcp(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)a2;
  sub_1A54E42F8(*(_QWORD *)a2);
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t _s19UserInitiatedSearchV5QueryVwca(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)a2;
  sub_1A54E42F8(*(_QWORD *)a2);
  v5 = *(_QWORD *)a1;
  *(_QWORD *)a1 = v4;
  sub_1A54E472C(v5);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  return a1;
}

uint64_t _s19UserInitiatedSearchV5QueryVwta(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  sub_1A54E472C(v4);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t _s19UserInitiatedSearchV5QueryVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s19UserInitiatedSearchV5QueryVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s19UserInitiatedSearchV5QueryVMa()
{
  return &_s19UserInitiatedSearchV5QueryVN;
}

unint64_t sub_1A564CE34(uint64_t a1, unint64_t a2, uint64_t a3, NSObject *a4, int a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  os_log_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  os_log_t v39;
  uint64_t v40;
  NSObject *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  os_log_t v47;
  NSObject *v48;
  NSObject *v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  os_log_t v60;
  NSObject *v61;
  os_log_type_t v62;
  int v63;
  uint64_t v64;
  os_log_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  NSObject *v71;
  os_log_t v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  NSObject *v86;
  NSObject *v87;
  void (*v88)(NSObject *, uint64_t, uint64_t);
  NSObject *v89;
  uint64_t v90;
  NSObject *v91;
  os_log_type_t v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  os_log_t v103;
  NSObject *v104;
  char v105;
  uint64_t v106;
  os_log_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  os_log_t v111;
  void (*v112)(NSObject *, uint64_t);
  NSObject *v113;
  uint64_t v114;
  uint64_t v116;
  uint64_t *v117;
  int v118;
  os_log_t v119;
  NSObject *v120;
  NSObject *v121;
  uint64_t v122;
  unint64_t v123;
  os_log_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  int v128;
  uint64_t v129;
  uint64_t v130;
  int v131;
  NSObject *v132;
  uint64_t v133;

  v129 = a3;
  v9 = sub_1A594A764();
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  v12 = ((char *)&v116 - v11);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v116 - v14;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v116 - v19;
  if ((_BYTE)a5)
  {
    v128 = a5;
    v127 = v17;
    if (a5 == 1)
    {
      v21 = v17;
      v22 = a1 + *(int *)(type metadata accessor for Task.Logger(0) + 20);
      v23 = *(NSObject **)(v22 + 8);
      v123 = *(_QWORD *)v22;
      v124 = v23;
      v24 = *(_QWORD *)(v22 + 16);
      v25 = *(_QWORD *)(v22 + 32);
      v26 = *(_DWORD *)(v22 + 40);
      v125 = *(_QWORD *)(v22 + 24);
      v126 = v24;
      if ((v125 & 0x8000000000000000) == 0)
      {
        v27 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
        v122 = v9;
        v27(v20, a1, v9);
        v28 = v123;
        v29 = v124;
        v31 = v125;
        v30 = v126;
        sub_1A559C124(v123, (uint64_t)v124, v126, v125);
        sub_1A559C124(v28, (uint64_t)v29, v30, v31);
        sub_1A55235A0(a2);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        sub_1A55235A0(a2);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A55235A0(a2);
        v121 = a4;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v32 = sub_1A594A74C();
        v33 = sub_1A594C018();
        v34 = v33;
        if (os_log_type_enabled(v32, v33))
        {
          v35 = swift_slowAlloc();
          v119 = v32;
          v36 = v35;
          v120 = swift_slowAlloc();
          v130 = (uint64_t)v120;
          *(_DWORD *)v36 = 68158466;
          LODWORD(v132) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v36 + 8) = 256;
          v118 = v34;
          v37 = v123;
          LOBYTE(v132) = v123;
          sub_1A594C3CC();
          *(_WORD *)(v36 + 11) = 2082;
          v38 = v126;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v39 = v124;
          v132 = sub_1A55791B0((uint64_t)v124, v38, &v130);
          v117 = &v133;
          sub_1A594C3CC();
          v40 = v125;
          sub_1A559C154(v37, (uint64_t)v39, v38, v125);
          sub_1A559C154(v37, (uint64_t)v39, v38, v40);
          swift_bridgeObjectRelease();
          *(_WORD *)(v36 + 21) = 2080;
          sub_1A55235A0(a2);
          v41 = v121;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v42 = v129;
          ResponseText.debugDescription.getter(a2, v129, v41);
          v44 = v43;
          v46 = v45;
          sub_1A5524084(a2);
          swift_bridgeObjectRelease();
          v132 = sub_1A55791B0(v44, v46, &v130);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          sub_1A5524084(a2);
          swift_bridgeObjectRelease();
          sub_1A5524084(a2);
          swift_bridgeObjectRelease();
          v47 = v119;
          _os_log_impl(&dword_1A4F90000, v119, (os_log_type_t)v118, "[%.*hhx-%{public}s] Received 'NO %s'", (uint8_t *)v36, 0x1Fu);
          v48 = v120;
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v48, -1, -1);
          MEMORY[0x1A85B1964](v36, -1, -1);

          (*(void (**)(char *, uint64_t))(v127 + 8))(v20, v122);
LABEL_14:
          v105 = v128;
LABEL_22:
          sub_1A564DE68();
          swift_allocError();
          *(_QWORD *)v114 = a2;
          *(_QWORD *)(v114 + 8) = v42;
          *(_QWORD *)(v114 + 16) = v41;
          *(_BYTE *)(v114 + 24) = v105;
          sub_1A55235A0(a2);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          swift_willThrow();
          sub_1A5524084(a2);
          swift_bridgeObjectRelease();
          return a2;
        }
        v106 = v123;
        v107 = v124;
        v109 = v125;
        v108 = v126;
        sub_1A559C154(v123, (uint64_t)v124, v126, v125);
        sub_1A559C154(v106, (uint64_t)v107, v108, v109);
        sub_1A5524084(a2);
        v41 = v121;
        swift_bridgeObjectRelease();
        sub_1A5524084(a2);

        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v127 + 8))(v20, v122);
LABEL_21:
        v105 = v128;
        v42 = v129;
        goto LABEL_22;
      }
      v73 = a1;
      v58 = v9;
      (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v15, v73, v9);
      sub_1A559C124(v123, (uint64_t)v124, v126, v125);
      sub_1A55235A0(a2);
      v41 = a4;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      sub_1A55235A0(a2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A55235A0(a2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v74 = sub_1A594A74C();
      v75 = sub_1A594C018();
      v76 = v75;
      if (os_log_type_enabled(v74, v75))
      {
        v77 = swift_slowAlloc();
        v120 = v74;
        v78 = v77;
        v121 = swift_slowAlloc();
        v132 = v121;
        *(_DWORD *)v78 = 68159491;
        LODWORD(v130) = 2;
        v122 = v58;
        sub_1A594C3CC();
        *(_WORD *)(v78 + 8) = 256;
        LOBYTE(v130) = v123;
        sub_1A594C3CC();
        *(_WORD *)(v78 + 11) = 2082;
        LODWORD(v123) = v26;
        v79 = v126;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v130 = sub_1A55791B0((uint64_t)v124, v79, (uint64_t *)&v132);
        LODWORD(v124) = v76;
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v78 + 21) = 1040;
        LODWORD(v130) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v78 + 27) = 512;
        LOWORD(v130) = v125;
        sub_1A594C3CC();
        *(_WORD *)(v78 + 31) = 2160;
        v130 = 0x786F626C69616DLL;
        sub_1A594C3CC();
        *(_WORD *)(v78 + 41) = 2085;
        v130 = v25;
        v131 = v123;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v80 = sub_1A594B4A8();
        v130 = sub_1A55791B0(v80, v81, (uint64_t *)&v132);
        sub_1A594C3CC();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v78 + 51) = 2080;
        sub_1A55235A0(a2);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v42 = v129;
        ResponseText.debugDescription.getter(a2, v129, v41);
        v83 = v82;
        v85 = v84;
        sub_1A5524084(a2);
        swift_bridgeObjectRelease();
        v130 = sub_1A55791B0(v83, v85, (uint64_t *)&v132);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A5524084(a2);
        swift_bridgeObjectRelease();
        sub_1A5524084(a2);
        swift_bridgeObjectRelease();
        v86 = v120;
        _os_log_impl(&dword_1A4F90000, v120, (os_log_type_t)v124, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Received 'NO %s'", (uint8_t *)v78, 0x3Du);
        v87 = v121;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v87, -1, -1);
        MEMORY[0x1A85B1964](v78, -1, -1);

        (*(void (**)(char *, uint64_t))(v127 + 8))(v15, v122);
        goto LABEL_14;
      }
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      sub_1A5524084(a2);
      swift_bridgeObjectRelease();
      sub_1A5524084(a2);

      swift_bridgeObjectRelease();
      v112 = *(void (**)(NSObject *, uint64_t))(v127 + 8);
      v113 = v15;
LABEL_20:
      v112(v113, v58);
      goto LABEL_21;
    }
    v123 = a2;
    v49 = v18;
    v50 = v17;
    v51 = a1 + *(int *)(type metadata accessor for Task.Logger(0) + 20);
    v53 = *(_QWORD *)v51;
    v52 = *(NSObject **)(v51 + 8);
    v55 = *(_QWORD *)(v51 + 16);
    v54 = *(_QWORD *)(v51 + 24);
    v56 = *(_QWORD *)(v51 + 32);
    LODWORD(v126) = *(_DWORD *)(v51 + 40);
    v124 = v52;
    v125 = v54;
    if (v54 < 0)
    {
      v88 = *(void (**)(NSObject *, uint64_t, uint64_t))(v50 + 16);
      v89 = v49;
      v90 = a1;
      v58 = v9;
      v88(v49, v90, v9);
      sub_1A559C124(v53, (uint64_t)v124, v55, v125);
      a2 = v123;
      sub_1A55235A0(v123);
      v41 = a4;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      sub_1A55235A0(a2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A55235A0(a2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v121 = v89;
      v91 = sub_1A594A74C();
      v92 = sub_1A594C018();
      v93 = v92;
      if (os_log_type_enabled(v91, v92))
      {
        v94 = swift_slowAlloc();
        LODWORD(v119) = v93;
        v95 = v94;
        v120 = swift_slowAlloc();
        v132 = v120;
        *(_DWORD *)v95 = 68159491;
        LODWORD(v130) = 2;
        v122 = v58;
        sub_1A594C3CC();
        *(_WORD *)(v95 + 8) = 256;
        LOBYTE(v130) = v53;
        sub_1A594C3CC();
        *(_WORD *)(v95 + 11) = 2082;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v130 = sub_1A55791B0((uint64_t)v124, v55, (uint64_t *)&v132);
        v124 = v91;
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v95 + 21) = 1040;
        LODWORD(v130) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v95 + 27) = 512;
        LOWORD(v130) = v125;
        sub_1A594C3CC();
        *(_WORD *)(v95 + 31) = 2160;
        v130 = 0x786F626C69616DLL;
        sub_1A594C3CC();
        *(_WORD *)(v95 + 41) = 2085;
        v130 = v56;
        v131 = v126;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v96 = sub_1A594B4A8();
        v130 = sub_1A55791B0(v96, v97, (uint64_t *)&v132);
        sub_1A594C3CC();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v95 + 51) = 2080;
        sub_1A55235A0(a2);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v98 = v129;
        ResponseText.debugDescription.getter(a2, v129, a4);
        v100 = v99;
        v102 = v101;
        sub_1A5524084(a2);
        swift_bridgeObjectRelease();
        v130 = sub_1A55791B0(v100, v102, (uint64_t *)&v132);
        sub_1A594C3CC();
        v42 = v98;
        swift_bridgeObjectRelease();
        sub_1A5524084(a2);
        swift_bridgeObjectRelease();
        sub_1A5524084(a2);
        swift_bridgeObjectRelease();
        v103 = v124;
        _os_log_impl(&dword_1A4F90000, v124, (os_log_type_t)v119, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Received 'BAD %s'", (uint8_t *)v95, 0x3Du);
        v104 = v120;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v104, -1, -1);
        MEMORY[0x1A85B1964](v95, -1, -1);

        goto LABEL_13;
      }
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      sub_1A5524084(a2);
      swift_bridgeObjectRelease();
      sub_1A5524084(a2);

    }
    else
    {
      v57 = a1;
      v58 = v9;
      (*(void (**)(NSObject *, uint64_t, uint64_t))(v50 + 16))(v12, v57, v9);
      v60 = v124;
      v59 = v125;
      sub_1A559C124(v53, (uint64_t)v124, v55, v125);
      sub_1A559C124(v53, (uint64_t)v60, v55, v59);
      a2 = v123;
      sub_1A55235A0(v123);
      v41 = a4;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      sub_1A55235A0(a2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A55235A0(a2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v121 = v12;
      v61 = sub_1A594A74C();
      v62 = sub_1A594C018();
      v63 = v62;
      v120 = v61;
      if (os_log_type_enabled(v61, v62))
      {
        v64 = swift_slowAlloc();
        v119 = (os_log_t)swift_slowAlloc();
        v130 = (uint64_t)v119;
        *(_DWORD *)v64 = 68158466;
        LODWORD(v132) = 2;
        v122 = v58;
        v118 = v63;
        sub_1A594C3CC();
        *(_WORD *)(v64 + 8) = 256;
        LOBYTE(v132) = v53;
        sub_1A594C3CC();
        *(_WORD *)(v64 + 11) = 2082;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v65 = v124;
        v132 = sub_1A55791B0((uint64_t)v124, v55, &v130);
        v117 = &v133;
        sub_1A594C3CC();
        v66 = v125;
        sub_1A559C154(v53, (uint64_t)v65, v55, v125);
        sub_1A559C154(v53, (uint64_t)v65, v55, v66);
        swift_bridgeObjectRelease();
        *(_WORD *)(v64 + 21) = 2080;
        sub_1A55235A0(a2);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v42 = v129;
        ResponseText.debugDescription.getter(a2, v129, v41);
        v68 = v67;
        v70 = v69;
        sub_1A5524084(a2);
        swift_bridgeObjectRelease();
        v132 = sub_1A55791B0(v68, v70, &v130);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A5524084(a2);
        swift_bridgeObjectRelease();
        sub_1A5524084(a2);
        swift_bridgeObjectRelease();
        v71 = v120;
        _os_log_impl(&dword_1A4F90000, v120, (os_log_type_t)v118, "[%.*hhx-%{public}s] Received 'BAD %s'", (uint8_t *)v64, 0x1Fu);
        v72 = v119;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v72, -1, -1);
        MEMORY[0x1A85B1964](v64, -1, -1);

LABEL_13:
        (*(void (**)(NSObject *, uint64_t))(v127 + 8))(v121, v122);
        goto LABEL_14;
      }
      v111 = v124;
      v110 = v125;
      sub_1A559C154(v53, (uint64_t)v124, v55, v125);
      sub_1A559C154(v53, (uint64_t)v111, v55, v110);
      sub_1A5524084(a2);
      swift_bridgeObjectRelease();
      sub_1A5524084(a2);

    }
    swift_bridgeObjectRelease();
    v112 = *(void (**)(NSObject *, uint64_t))(v127 + 8);
    v113 = v121;
    goto LABEL_20;
  }
  return a2;
}

unint64_t sub_1A564DE68()
{
  unint64_t result;

  result = qword_1EE7A8DC8;
  if (!qword_1EE7A8DC8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AB8C0, &_s5ErrorVN_0);
    atomic_store(result, (unint64_t *)&qword_1EE7A8DC8);
  }
  return result;
}

unint64_t sub_1A564DEAC(uint64_t a1, unint64_t a2, uint64_t a3, void *a4, int a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  int v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  os_log_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  unint64_t v55;
  int v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  os_log_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD v67[2];
  char *v68;
  os_log_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  int v77;
  uint64_t v78;

  v74 = a3;
  v9 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v67 - v13;
  v15 = sub_1A594A764();
  MEMORY[0x1E0C80A78](v15);
  v21 = MEMORY[0x1E0C80A78](v16);
  v22 = (char *)v67 - v17;
  v75 = a5;
  if ((_BYTE)a5)
  {
    if (a5 == 1)
    {
      v23 = v18;
      v24 = v19;
      (*(void (**)(char *, uint64_t, uint64_t, double))(v19 + 16))((char *)v67 - v17, a1, v18, v21);
      sub_1A55BAEB8(a1, (uint64_t)v14);
      sub_1A55235A0(a2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      sub_1A55235A0(a2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A55235A0(a2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v25 = sub_1A594A74C();
      v26 = sub_1A594C018();
      v27 = v26;
      if (os_log_type_enabled(v25, v26))
      {
        v28 = swift_slowAlloc();
        v73 = v24;
        v29 = v28;
        v71 = swift_slowAlloc();
        v78 = v71;
        *(_DWORD *)v29 = 68159491;
        LODWORD(v76) = 2;
        v68 = (char *)&v76 + 4;
        sub_1A594C3CC();
        *(_WORD *)(v29 + 8) = 256;
        v30 = *(int *)(v9 + 20);
        LODWORD(v70) = v27;
        v31 = &v14[v30];
        LOBYTE(v76) = v14[v30];
        sub_1A594C3CC();
        *(_WORD *)(v29 + 11) = 2082;
        v72 = v23;
        v32 = *((_QWORD *)v31 + 1);
        v33 = *((_QWORD *)v31 + 2);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v76 = sub_1A55791B0(v32, v33, &v78);
        v69 = v25;
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v29 + 21) = 1040;
        LODWORD(v76) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v29 + 27) = 512;
        LOWORD(v76) = *((_WORD *)v31 + 12);
        sub_1A594C3CC();
        *(_WORD *)(v29 + 31) = 2160;
        v76 = 0x786F626C69616DLL;
        sub_1A594C3CC();
        *(_WORD *)(v29 + 41) = 2085;
        v34 = *((_DWORD *)v31 + 10);
        v76 = *((_QWORD *)v31 + 4);
        v77 = v34;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v35 = sub_1A594B4A8();
        v76 = sub_1A55791B0(v35, v36, &v78);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55BAEFC((uint64_t)v14);
        *(_WORD *)(v29 + 51) = 2080;
        sub_1A55235A0(a2);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v37 = v74;
        ResponseText.debugDescription.getter(a2, v74, a4);
        v39 = v38;
        v41 = v40;
        sub_1A5524084(a2);
        swift_bridgeObjectRelease();
        v76 = sub_1A55791B0(v39, v41, &v78);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A5524084(a2);
        swift_bridgeObjectRelease();
        sub_1A5524084(a2);
        swift_bridgeObjectRelease();
        v42 = v69;
        _os_log_impl(&dword_1A4F90000, v69, (os_log_type_t)v70, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Received 'NO %s'", (uint8_t *)v29, 0x3Du);
        v43 = v71;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v43, -1, -1);
        MEMORY[0x1A85B1964](v29, -1, -1);

        (*(void (**)(char *, uint64_t))(v73 + 8))(v22, v72);
LABEL_11:
        sub_1A564E77C();
        swift_allocError();
        *(_QWORD *)v65 = a2;
        *(_QWORD *)(v65 + 8) = v37;
        *(_QWORD *)(v65 + 16) = a4;
        *(_BYTE *)(v65 + 24) = v75;
        sub_1A55235A0(a2);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_willThrow();
        sub_1A5524084(a2);
        swift_bridgeObjectRelease();
        return a2;
      }
      sub_1A55BAEFC((uint64_t)v14);
      sub_1A5524084(a2);
      swift_bridgeObjectRelease();
      sub_1A5524084(a2);

      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v22, v23);
    }
    else
    {
      v44 = v20;
      v45 = v18;
      v46 = v19;
      (*(void (**)(uint64_t, uint64_t, uint64_t, double))(v19 + 16))(v20, a1, v18, v21);
      sub_1A55BAEB8(a1, (uint64_t)v11);
      sub_1A55235A0(a2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      sub_1A55235A0(a2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A55235A0(a2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v71 = v44;
      v47 = sub_1A594A74C();
      v48 = sub_1A594C018();
      v49 = v48;
      if (os_log_type_enabled(v47, v48))
      {
        v50 = swift_slowAlloc();
        v73 = v46;
        v51 = v50;
        v70 = swift_slowAlloc();
        v78 = v70;
        *(_DWORD *)v51 = 68159491;
        LODWORD(v76) = 2;
        v67[1] = (char *)&v76 + 4;
        sub_1A594C3CC();
        *(_WORD *)(v51 + 8) = 256;
        v52 = *(int *)(v9 + 20);
        v69 = v47;
        v53 = &v11[v52];
        LOBYTE(v76) = v11[v52];
        sub_1A594C3CC();
        *(_WORD *)(v51 + 11) = 2082;
        v72 = v45;
        v54 = *((_QWORD *)v53 + 1);
        v55 = *((_QWORD *)v53 + 2);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v76 = sub_1A55791B0(v54, v55, &v78);
        LODWORD(v68) = v49;
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v51 + 21) = 1040;
        LODWORD(v76) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v51 + 27) = 512;
        LOWORD(v76) = *((_WORD *)v53 + 12);
        sub_1A594C3CC();
        *(_WORD *)(v51 + 31) = 2160;
        v76 = 0x786F626C69616DLL;
        sub_1A594C3CC();
        *(_WORD *)(v51 + 41) = 2085;
        v56 = *((_DWORD *)v53 + 10);
        v76 = *((_QWORD *)v53 + 4);
        v77 = v56;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v57 = sub_1A594B4A8();
        v76 = sub_1A55791B0(v57, v58, &v78);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55BAEFC((uint64_t)v11);
        *(_WORD *)(v51 + 51) = 2080;
        sub_1A55235A0(a2);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v37 = v74;
        ResponseText.debugDescription.getter(a2, v74, a4);
        v60 = v59;
        v62 = v61;
        sub_1A5524084(a2);
        swift_bridgeObjectRelease();
        v76 = sub_1A55791B0(v60, v62, &v78);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A5524084(a2);
        swift_bridgeObjectRelease();
        sub_1A5524084(a2);
        swift_bridgeObjectRelease();
        v63 = v69;
        _os_log_impl(&dword_1A4F90000, v69, (os_log_type_t)v68, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Received 'BAD %s'", (uint8_t *)v51, 0x3Du);
        v64 = v70;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v64, -1, -1);
        MEMORY[0x1A85B1964](v51, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v71, v72);
        goto LABEL_11;
      }
      sub_1A55BAEFC((uint64_t)v11);
      sub_1A5524084(a2);
      swift_bridgeObjectRelease();
      sub_1A5524084(a2);

      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v71, v45);
    }
    v37 = v74;
    goto LABEL_11;
  }
  return a2;
}

unint64_t sub_1A564E77C()
{
  unint64_t result;

  result = qword_1EE7A8DD0[0];
  if (!qword_1EE7A8DD0[0])
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AB880, &_s5ErrorVN);
    atomic_store(result, qword_1EE7A8DD0);
  }
  return result;
}

unint64_t _s5ErrorVwxx(uint64_t a1)
{
  return sub_1A559C31C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

ValueMetadata *_s5ErrorVMa()
{
  return &_s5ErrorVN;
}

uint64_t _s5ErrorVwcp_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1A559C2E8(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t _s5ErrorVwca_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1A559C2E8(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_1A559C31C(v7, v8, v9, v10);
  return a1;
}

uint64_t _s5ErrorVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_1A559C31C(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for CommandCompletionResponse(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CommandCompletionResponse(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

ValueMetadata *_s5ErrorVMa_0()
{
  return &_s5ErrorVN_0;
}

uint64_t sub_1A564E9B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  int32x2_t *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  BOOL v36;
  int32x2_t v37;
  char v38;
  int32x2_t v39;
  int64_t v40;
  int32x2_t *v41;
  uint64_t v42;
  unsigned __int8 *v43;
  int v44;
  int v45;
  int v46;
  int32x2_t *v47;
  uint64_t v48;
  unsigned __int8 *v49;
  int v50;
  int v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *inited;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  _QWORD *v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  char v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int32x2_t *v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v99;
  int64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108[2];
  uint64_t v109;
  uint64_t v110;

  sub_1A5553CA0();
  swift_getKeyPath();
  swift_retain();
  v1 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v2 = sub_1A561ADC4(v1);
  swift_bridgeObjectRelease();
  swift_release_n();
  v3 = sub_1A5552BFC(v2);
  swift_bridgeObjectRelease();
  v110 = v3;
  if (!*(_QWORD *)(v3 + 16))
    return swift_bridgeObjectRelease();
  while (2)
  {
    v4 = sub_1A558A0B8(v3);
    v6 = v5;
    v8 = v7 & 1;
    v9 = (int32x2_t *)sub_1A562A44C(v4, v5);
    v11 = v10;
    v13 = v12;
    v93 = v12;
    sub_1A5529B00(v4, v6, v8);
    v102 = sub_1A5650F7C((uint64_t)v9, v11, v13, *(_QWORD *)(a1 + 16));
    MEMORY[0x1E0C80A78](v102);
    swift_getKeyPath();
    swift_retain();
    v14 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v15 = sub_1A561ADC4(v14);
    v16 = v11;
    swift_bridgeObjectRelease();
    swift_release_n();
    v17 = sub_1A5552BFC(v15);
    result = swift_bridgeObjectRelease();
    v19 = 0;
    v20 = v17 + 56;
    v21 = -1 << *(_BYTE *)(v17 + 32);
    if (-v21 < 64)
      v22 = ~(-1 << -(char)v21);
    else
      v22 = -1;
    v23 = v22 & *(_QWORD *)(v17 + 56);
    v24 = (unint64_t)(63 - v21) >> 6;
    v25 = v11 >> 62;
    v92 = v11 & 0xFFFFFFFFFFLL;
    v89 = (int32x2_t *)((char *)v9 + 36);
    v101 = (uint64_t)v9;
    v100 = v24;
    v99 = v11 >> 62;
    v97 = v11;
    v96 = v17;
    v95 = v17 + 56;
    while (1)
    {
      v27 = v19;
      if (!v23)
        break;
      v28 = __clz(__rbit64(v23));
      v23 &= v23 - 1;
      v29 = v28 | (v19 << 6);
LABEL_19:
      v32 = *(_QWORD *)(v17 + 48) + 24 * v29;
      v26 = *(_QWORD *)v32;
      v33 = *(_QWORD *)(v32 + 8);
      v34 = *(_QWORD *)(v32 + 16);
      v35 = v33 >> 62;
      if ((_DWORD)v25 == 3)
      {
        v36 = v33 >> 62 == 3 && v33 == 0xC000000000000000;
        if (!v36 || v34 | v26)
        {
          v105 = v23;
          goto LABEL_73;
        }
      }
      else
      {
        v105 = v23;
        if (!(_DWORD)v25)
        {
          if (!v35)
          {
            sub_1A54E4334(v26, v33, SBYTE4(v33));
            sub_1A54E3414();
            v90 = v90 & 0xFFFFFF0000000000 | v92;
            v91 = v91 & 0xFFFFFF0000000000 | v33 & 0xFFFFFFFFFFLL;
            static MessageIdentifierSet.__derived_struct_equals(_:_:)(v9, v90, (int32x2_t *)v26, v91);
            if ((v38 & 1) != 0)
              goto LABEL_7;
            goto LABEL_75;
          }
          goto LABEL_73;
        }
        if ((_DWORD)v25 != 1)
        {
          if (v35 != 2)
            goto LABEL_73;
          if (v16 == v33)
          {
            v39 = v9[2];
            if (*(_QWORD *)&v39 == *(_QWORD *)(v26 + 16))
            {
              if (!*(_QWORD *)&v39 || v9 == (int32x2_t *)v26)
                goto LABEL_52;
              if (v9[4].u8[0] == *(unsigned __int8 *)(v26 + 32))
              {
                if (*(_QWORD *)&v39 == 1)
                  goto LABEL_52;
                if (v9[4].u8[1] == *(unsigned __int8 *)(v26 + 33))
                {
                  if (*(_QWORD *)&v39 == 2)
                    goto LABEL_52;
                  if (v9[4].u8[2] == *(unsigned __int8 *)(v26 + 34))
                  {
                    if (*(_QWORD *)&v39 == 3)
                      goto LABEL_52;
                    if (v9[4].u8[3] == *(unsigned __int8 *)(v26 + 35))
                    {
                      v41 = (int32x2_t *)(v26 + 36);
                      v42 = *(_QWORD *)&v39 - 4;
                      v43 = (unsigned __int8 *)v89;
                      while (v42)
                      {
                        v45 = *v43++;
                        v44 = v45;
                        v46 = v41->u8[0];
                        v41 = (int32x2_t *)((char *)v41 + 1);
                        --v42;
                        if (v44 != v46)
                          goto LABEL_73;
                      }
LABEL_52:
                      sub_1A54FA300(v26, v33);
                      if ((sub_1A54FB4E4(v93, v34) & 1) != 0)
                        goto LABEL_7;
                      goto LABEL_75;
                    }
                  }
                }
              }
            }
          }
LABEL_74:
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_75;
        }
        if (v35 == 1)
        {
          if (v16 == v33)
          {
            v37 = v9[2];
            if (*(_QWORD *)&v37 == *(_QWORD *)(v26 + 16))
            {
              if (!*(_QWORD *)&v37 || v9 == (int32x2_t *)v26)
                goto LABEL_40;
              if (v9[4].u8[0] == *(unsigned __int8 *)(v26 + 32))
              {
                if (*(_QWORD *)&v37 == 1)
                  goto LABEL_40;
                if (v9[4].u8[1] == *(unsigned __int8 *)(v26 + 33))
                {
                  if (*(_QWORD *)&v37 == 2)
                    goto LABEL_40;
                  if (v9[4].u8[2] == *(unsigned __int8 *)(v26 + 34))
                  {
                    if (*(_QWORD *)&v37 == 3)
                      goto LABEL_40;
                    if (v9[4].u8[3] == *(unsigned __int8 *)(v26 + 35))
                    {
                      v47 = (int32x2_t *)(v26 + 36);
                      v48 = *(_QWORD *)&v37 - 4;
                      v49 = (unsigned __int8 *)v89;
                      while (v48)
                      {
                        v51 = *v49++;
                        v50 = v51;
                        v52 = v47->u8[0];
                        v47 = (int32x2_t *)((char *)v47 + 1);
                        --v48;
                        if (v50 != v52)
                          goto LABEL_73;
                      }
LABEL_40:
                      sub_1A54FA300(v26, v33);
                      if ((sub_1A54FAE90(v93, v34) & 1) != 0)
                        goto LABEL_7;
                      goto LABEL_75;
                    }
                  }
                }
              }
            }
          }
          goto LABEL_74;
        }
LABEL_73:
        sub_1A54FA300(v26, v33);
LABEL_75:
        v54 = *(_QWORD *)(a1 + 8);
        v53 = *(_QWORD *)(a1 + 16);
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797A18);
        inited = (_QWORD *)swift_initStackObject();
        inited[2] = v26;
        inited[3] = v33;
        inited[4] = v34;
        v56 = *(_QWORD *)(v53 + 16);
        v103 = v26;
        v104 = v34;
        sub_1A54FA300(v26, v33);
        v94 = v54;
        v106 = v53;
        if (v56 && (sub_1A54FDEE8((uint64_t)inited), (v58 & 1) != 0))
        {
          v59 = *(_QWORD *)(*(_QWORD *)(v53 + 56) + 8 * v57);
          swift_setDeallocating();
          v60 = inited[2];
          v61 = inited[3];
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v62 = sub_1A54FA2A8(v60, v61);
        }
        else if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0 && sub_1A594CA38())
        {
          v59 = sub_1A54F8DF0(MEMORY[0x1E0DEE9D8]);
          swift_setDeallocating();
          v62 = sub_1A54FA2A8(inited[2], inited[3]);
        }
        else
        {
          swift_setDeallocating();
          v62 = sub_1A54FA2A8(inited[2], inited[3]);
          v59 = MEMORY[0x1E0DEE9E8];
        }
        MEMORY[0x1E0C80A78](v62);
        swift_getKeyPath();
        swift_retain();
        v63 = sub_1A561ADD8(v59);
        swift_bridgeObjectRelease();
        swift_release_n();
        v64 = sub_1A594BBD4();
        v109 = v64;
        v65 = *(_QWORD *)(v63 + 16);
        if (v65)
        {
          v66 = v63 + 48;
          do
          {
            v68 = *(_QWORD *)(v66 - 16);
            v67 = *(_QWORD *)(v66 - 8);
            v66 += 24;
            sub_1A54FA300(v68, v67);
            sub_1A54F4044((uint64_t)v108, v68, v67);
            sub_1A54FA2A8(v108[0], v108[1]);
            --v65;
          }
          while (v65);
          swift_bridgeObjectRelease();
          v69 = v109;
        }
        else
        {
          v69 = v64;
          swift_bridgeObjectRelease();
        }
        v16 = v97;
        v9 = (int32x2_t *)v101;
        v70 = sub_1A54EE150(v102, v69);
        swift_bridgeObjectRelease();
        if ((v70 & 1) != 0)
        {
          v71 = (_QWORD *)swift_allocObject();
          v71[2] = v101;
          v71[3] = v97;
          v71[4] = v93;
          v72 = swift_initStackObject();
          v26 = v103;
          *(_QWORD *)(v72 + 16) = v103;
          *(_QWORD *)(v72 + 24) = v33;
          *(_QWORD *)(v72 + 32) = v104;
          sub_1A54FA300(v103, v33);
          sub_1A54FA300(v101, v97);
          LOBYTE(v72) = sub_1A565080C((uint64_t)v71, v72, v106);
          sub_1A54FA2A8(v103, v33);
          swift_release();
          if ((v72 & 1) != 0)
          {
            v17 = v96;
            v20 = v95;
          }
          else
          {
            v73 = (_QWORD *)swift_allocObject();
            v73[2] = v103;
            v73[3] = v33;
            v73[4] = v104;
            v74 = (_QWORD *)swift_initStackObject();
            v74[2] = v101;
            v74[3] = v97;
            v74[4] = v93;
            sub_1A54FA300(v103, v33);
            sub_1A54FA300(v101, v97);
            v75 = sub_1A565080C((uint64_t)v73, (uint64_t)v74, v106);
            sub_1A54FA2A8(v101, v97);
            swift_release();
            if ((v75 & 1) != 0)
            {
              v9 = (int32x2_t *)v101;
              v17 = v96;
              v20 = v95;
            }
            else
            {
              sub_1A561E320(v101, v97);
              if (v77 <= 0xFFFFFFFBFFFFFFFFLL)
              {
                v79 = v77;
                v107 = v76;
                v80 = v78;
                swift_bridgeObjectRelease();
                v81 = sub_1A5650F7C(v101, v97, v93, v94);
                v82 = sub_1A5650F7C(v103, v33, v104, v94);
                v83 = sub_1A557382C(v82, v81);
                sub_1A564FBBC(v101, v97, v93);
                sub_1A564FBBC(v103, v33, v104);
                v84 = (_QWORD *)swift_allocObject();
                v84[2] = v107;
                v84[3] = v79;
                v84[4] = v80;
                sub_1A54FA300(v107, v79);
                sub_1A54F3960(v108, (uint64_t)v84);
                swift_release();
                sub_1A5650208(v83, v107, v79, v80);
                swift_bridgeObjectRelease();
                sub_1A5619138(v107, v79, v80, v102);
                v85 = swift_bridgeObjectRelease();
                MEMORY[0x1E0C80A78](v85);
                swift_getKeyPath();
                swift_retain();
                v86 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                v87 = sub_1A561ADC4(v86);
                swift_bridgeObjectRelease();
                swift_release_n();
                v88 = sub_1A5552BFC(v87);
                swift_bridgeObjectRelease();
                sub_1A561EBB8(v107, v79);
                sub_1A54FA2A8(v103, v33);
                sub_1A550F72C();
                sub_1A54FA2A8(v101, v97);
                v110 = v88;
                goto LABEL_95;
              }
              v9 = (int32x2_t *)v101;
              v17 = v96;
              v20 = v95;
              v26 = v103;
            }
          }
        }
        else
        {
          v17 = v96;
          v20 = v95;
          v26 = v103;
        }
LABEL_7:
        result = sub_1A54FA2A8(v26, v33);
        v24 = v100;
        LODWORD(v25) = v99;
        v23 = v105;
      }
    }
    ++v19;
    if (__OFADD__(v27, 1))
    {
      __break(1u);
LABEL_100:
      __break(1u);
      return result;
    }
    if (v19 >= v24)
      goto LABEL_94;
    v30 = *(_QWORD *)(v20 + 8 * v19);
    if (v30)
    {
LABEL_18:
      v23 = (v30 - 1) & v30;
      v29 = __clz(__rbit64(v30)) + (v19 << 6);
      goto LABEL_19;
    }
    v31 = v27 + 2;
    if (v27 + 2 >= v24)
      goto LABEL_94;
    v30 = *(_QWORD *)(v20 + 8 * v31);
    if (v30)
      goto LABEL_17;
    v31 = v27 + 3;
    if (v27 + 3 >= v24)
      goto LABEL_94;
    v30 = *(_QWORD *)(v20 + 8 * v31);
    if (v30)
    {
LABEL_17:
      v19 = v31;
      goto LABEL_18;
    }
    v40 = v27 + 4;
    if (v27 + 4 < v24)
    {
      v30 = *(_QWORD *)(v20 + 8 * v40);
      v19 += 3;
      if (!v30)
      {
        while (1)
        {
          v19 = v40 + 1;
          if (__OFADD__(v40, 1))
            goto LABEL_100;
          if (v19 >= v24)
            goto LABEL_94;
          v30 = *(_QWORD *)(v20 + 8 * v19);
          ++v40;
          if (v30)
            goto LABEL_18;
        }
      }
      goto LABEL_18;
    }
LABEL_94:
    swift_bridgeObjectRelease();
    sub_1A550F72C();
    sub_1A54FA2A8((uint64_t)v9, v16);
LABEL_95:
    v3 = v110;
    if (*(_QWORD *)(v110 + 16))
      continue;
    return swift_bridgeObjectRelease();
  }
}

unint64_t sub_1A564F694()
{
  _QWORD *v0;
  unint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (!(*v0 >> 62))
  {
    if (*(_QWORD *)((*v0 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
    return 0;
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v3 = sub_1A594CA38();
  swift_bridgeObjectRelease();
  if (!v3)
    return 0;
LABEL_3:
  result = sub_1A563D484();
  if (!result)
  {
    if (*v0 >> 62)
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v4 = sub_1A594CA38();
      swift_bridgeObjectRelease();
      result = v4 - 1;
      if (!__OFSUB__(v4, 1))
        return sub_1A55A2BD4(result);
    }
    else
    {
      v2 = *(_QWORD *)((*v0 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = v2 - 1;
      if (!__OFSUB__(v2, 1))
        return sub_1A55A2BD4(result);
    }
    __break(1u);
  }
  return result;
}

BOOL sub_1A564F75C(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_1A564F76C()
{
  return sub_1A594CE88();
}

uint64_t _s13IMAP2Protocol13ClientCommandO15EncodingOptionsV011MessageBodyE0O9hashValueSivg_0()
{
  sub_1A594CE64();
  sub_1A594CE88();
  return sub_1A594CED0();
}

BOOL sub_1A564F7D4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A564F75C(*a1, *a2);
}

uint64_t sub_1A564F7E8()
{
  return _s13IMAP2Protocol13ClientCommandO15EncodingOptionsV011MessageBodyE0O9hashValueSivg_0();
}

uint64_t sub_1A564F7F8()
{
  return sub_1A564F76C();
}

uint64_t sub_1A564F808()
{
  sub_1A594CE64();
  sub_1A564F76C();
  return sub_1A594CED0();
}

uint64_t sub_1A564F84C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1A594B9F4();
  v5 = sub_1A565208C(v4, a1, a2);
  swift_bridgeObjectRelease();
  type metadata accessor for DependencyGraph.State(255, a1, a2, v6);
  swift_getTupleTypeMetadata2();
  sub_1A594B9F4();
  sub_1A594AFEC();
  return v5;
}

uint64_t sub_1A564F904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;

  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5651A08(a1, a2, a3, a4, a6, a7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14 = type metadata accessor for DependencyGraph.State(0, a6, a7, v13);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  MEMORY[0x1A85B1874](&unk_1A59ABA00, v14);
  sub_1A594B0F4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A564F9E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;

  if ((sub_1A5651B10(a1, a2, a3, a5, a6, a7, a9, a10) & 1) == 0)
    return 0;
  v11 = type metadata accessor for DependencyGraph.State(0, a9, a10, v10);
  MEMORY[0x1A85B1874](&unk_1A59ABA40, v11);
  return sub_1A594B100();
}

uint64_t sub_1A564FA8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _BYTE v13[72];

  sub_1A594CE64();
  sub_1A564F904((uint64_t)v13, a1, a2, a3, a4, a5, a6);
  return sub_1A594CED0();
}

uint64_t sub_1A564FB08(uint64_t a1)
{
  uint64_t *v1;

  return sub_1A564FA8C(*v1, v1[1], v1[2], v1[3], *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

uint64_t sub_1A564FB1C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1A564F904(a1, *v2, v2[1], v2[2], v2[3], *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

uint64_t sub_1A564FB30(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  _BYTE v5[72];

  sub_1A594CE64();
  sub_1A564F904((uint64_t)v5, *v2, v2[1], v2[2], v2[3], *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
  return sub_1A594CED0();
}

uint64_t sub_1A564FB78(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1A564F9E8(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3], *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24)) & 1;
}

uint64_t sub_1A564FBBC(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  uint64_t v29;
  void (*v30)(_QWORD *, uint64_t);
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  unint64_t v49;
  uint64_t v50;
  void (*v51)(_QWORD *, uint64_t);
  _QWORD *v52;
  uint64_t v54;
  _QWORD v55[9];
  _QWORD v56[6];

  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797A18);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  sub_1A54FA300(a1, a2);
  sub_1A554C21C((uint64_t)v8);
  swift_release();
  v9 = *(_QWORD *)(v4 + 8);
  v10 = *(_QWORD *)(v9 + 16);
  swift_retain();
  v11 = MEMORY[0x1E0DEE9D8];
  if (v10 && (sub_1A54FDEE8((uint64_t)v8), (v13 & 1) != 0))
  {
    v14 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v12);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    if ((v11 & 0xC000000000000000) != 0)
    {
LABEL_78:
      if (sub_1A594CA38())
      {
        v14 = sub_1A54F8DF0(MEMORY[0x1E0DEE9D8]);
        goto LABEL_6;
      }
    }
    v14 = MEMORY[0x1E0DEE9E8];
  }
LABEL_6:
  swift_release();
  if ((v14 & 0xC000000000000001) != 0)
  {
    sub_1A594C5F4();
    sub_1A56513E8();
    sub_1A594BC64();
    v14 = v55[4];
    v15 = v55[5];
    v16 = v55[6];
    v17 = v55[7];
    v18 = v55[8];
  }
  else
  {
    v17 = 0;
    v19 = -1 << *(_BYTE *)(v14 + 32);
    v15 = v14 + 56;
    v16 = ~v19;
    v20 = -v19;
    if (v20 < 64)
      v21 = ~(-1 << v20);
    else
      v21 = -1;
    v18 = v21 & *(_QWORD *)(v14 + 56);
  }
  v22 = (unint64_t)(v16 + 64) >> 6;
  v54 = v4 + 16;
  while (v14 < 0)
  {
    v25 = sub_1A594C648();
    if (!v25)
      goto LABEL_38;
    v55[0] = v25;
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v26 = v56[0];
    swift_unknownObjectRelease();
    v24 = v17;
    v4 = v18;
    if (!v26)
      goto LABEL_38;
LABEL_36:
    swift_retain();
    v30 = sub_1A55400F8(v56, v26);
    if (*v31)
    {
      sub_1A554C21C((uint64_t)v8);
      v30(v56, 0);
      swift_release_n();
      swift_release();
    }
    else
    {
      v30(v56, 0);
      swift_release_n();
    }
    v17 = v24;
    v18 = v4;
  }
  if (v18)
  {
    v4 = (v18 - 1) & v18;
    v23 = __clz(__rbit64(v18)) | (v17 << 6);
    v24 = v17;
    goto LABEL_35;
  }
  v27 = v17 + 1;
  if (__OFADD__(v17, 1))
  {
    __break(1u);
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  if (v27 >= v22)
    goto LABEL_38;
  v28 = *(_QWORD *)(v15 + 8 * v27);
  v24 = v17 + 1;
  if (v28)
    goto LABEL_34;
  v24 = v17 + 2;
  if (v17 + 2 >= v22)
    goto LABEL_38;
  v28 = *(_QWORD *)(v15 + 8 * v24);
  if (v28)
    goto LABEL_34;
  v24 = v17 + 3;
  if (v17 + 3 >= v22)
    goto LABEL_38;
  v28 = *(_QWORD *)(v15 + 8 * v24);
  if (v28)
    goto LABEL_34;
  v24 = v17 + 4;
  if (v17 + 4 >= v22)
    goto LABEL_38;
  v28 = *(_QWORD *)(v15 + 8 * v24);
  if (v28)
  {
LABEL_34:
    v4 = (v28 - 1) & v28;
    v23 = __clz(__rbit64(v28)) + (v24 << 6);
LABEL_35:
    v26 = *(_QWORD *)(*(_QWORD *)(v14 + 48) + 8 * v23);
    swift_retain();
    if (!v26)
      goto LABEL_38;
    goto LABEL_36;
  }
  v29 = v17 + 5;
  while (v22 != v29)
  {
    v28 = *(_QWORD *)(v15 + 8 * v29++);
    if (v28)
    {
      v24 = v29 - 1;
      goto LABEL_34;
    }
  }
LABEL_38:
  sub_1A550F72C();
  sub_1A55407E4((uint64_t)v8);
  swift_bridgeObjectRelease();
  v32 = *(_QWORD *)v54;
  v33 = *(_QWORD *)(*(_QWORD *)v54 + 16);
  swift_retain();
  if (v33 && (sub_1A54FDEE8((uint64_t)v8), (v35 & 1) != 0))
  {
    v36 = *(_QWORD *)(*(_QWORD *)(v32 + 56) + 8 * v34);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0 && sub_1A594CA38())
  {
    v36 = sub_1A54F8DF0(MEMORY[0x1E0DEE9D8]);
  }
  else
  {
    v36 = MEMORY[0x1E0DEE9E8];
  }
  swift_release();
  if ((v36 & 0xC000000000000001) != 0)
  {
    sub_1A594C5F4();
    sub_1A56513E8();
    sub_1A594BC64();
    v36 = v56[0];
    v37 = v56[1];
    v38 = v56[2];
    v4 = v56[3];
    v39 = v56[4];
  }
  else
  {
    v4 = 0;
    v40 = -1 << *(_BYTE *)(v36 + 32);
    v37 = v36 + 56;
    v38 = ~v40;
    v41 = -v40;
    if (v41 < 64)
      v42 = ~(-1 << v41);
    else
      v42 = -1;
    v39 = v42 & *(_QWORD *)(v36 + 56);
  }
  v43 = (unint64_t)(v38 + 64) >> 6;
  while (2)
  {
    if (v36 < 0)
    {
      if (!sub_1A594C648())
        goto LABEL_75;
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v47 = v55[0];
      swift_unknownObjectRelease();
      v46 = v4;
      v44 = v39;
      if (!v47)
        goto LABEL_75;
      goto LABEL_73;
    }
    if (v39)
    {
      v44 = (v39 - 1) & v39;
      v45 = __clz(__rbit64(v39)) | (v4 << 6);
      v46 = v4;
LABEL_72:
      v47 = *(_QWORD *)(*(_QWORD *)(v36 + 48) + 8 * v45);
      swift_retain();
      if (!v47)
        goto LABEL_75;
LABEL_73:
      swift_retain();
      v51 = sub_1A55400F8(v55, v47);
      if (*v52)
      {
        sub_1A554C21C((uint64_t)v8);
        v51(v55, 0);
        swift_release_n();
        swift_release();
      }
      else
      {
        v51(v55, 0);
        swift_release_n();
      }
      v4 = v46;
      v39 = v44;
      continue;
    }
    break;
  }
  v48 = v4 + 1;
  if (__OFADD__(v4, 1))
    goto LABEL_77;
  if (v48 >= v43)
    goto LABEL_75;
  v49 = *(_QWORD *)(v37 + 8 * v48);
  v46 = v4 + 1;
  if (v49)
    goto LABEL_71;
  v46 = v4 + 2;
  if (v4 + 2 >= v43)
    goto LABEL_75;
  v49 = *(_QWORD *)(v37 + 8 * v46);
  if (v49)
    goto LABEL_71;
  v46 = v4 + 3;
  if (v4 + 3 >= v43)
    goto LABEL_75;
  v49 = *(_QWORD *)(v37 + 8 * v46);
  if (v49)
    goto LABEL_71;
  v46 = v4 + 4;
  if (v4 + 4 >= v43)
    goto LABEL_75;
  v49 = *(_QWORD *)(v37 + 8 * v46);
  if (v49)
  {
LABEL_71:
    v44 = (v49 - 1) & v49;
    v45 = __clz(__rbit64(v49)) + (v46 << 6);
    goto LABEL_72;
  }
  v50 = v4 + 5;
  while (v43 != v50)
  {
    v49 = *(_QWORD *)(v37 + 8 * v50++);
    if (v49)
    {
      v46 = v50 - 1;
      goto LABEL_71;
    }
  }
LABEL_75:
  sub_1A550F72C();
  sub_1A55407E4((uint64_t)v8);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A5650208(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  int64_t v23;

  v22 = a1 + 56;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a1 + 56);
  v23 = (unint64_t)(v8 + 63) >> 6;
  result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v12 = 0;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v12 << 6);
      goto LABEL_5;
    }
    v19 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v23)
      return swift_release();
    v20 = *(_QWORD *)(v22 + 8 * v19);
    ++v12;
    if (!v20)
    {
      v12 = v19 + 1;
      if (v19 + 1 >= v23)
        return swift_release();
      v20 = *(_QWORD *)(v22 + 8 * v12);
      if (!v20)
      {
        v12 = v19 + 2;
        if (v19 + 2 >= v23)
          return swift_release();
        v20 = *(_QWORD *)(v22 + 8 * v12);
        if (!v20)
        {
          v12 = v19 + 3;
          if (v19 + 3 >= v23)
            return swift_release();
          v20 = *(_QWORD *)(v22 + 8 * v12);
          if (!v20)
            break;
        }
      }
    }
LABEL_22:
    v10 = (v20 - 1) & v20;
    v14 = __clz(__rbit64(v20)) + (v12 << 6);
LABEL_5:
    v15 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 24 * v14);
    v16 = *v15;
    v17 = v15[1];
    v18 = v15[2];
    sub_1A54FA300(*v15, v17);
    sub_1A5650444(v16, v17, v18, a2, a3, a4);
    result = sub_1A54FA2A8(v16, v17);
  }
  v21 = v19 + 4;
  if (v21 >= v23)
    return swift_release();
  v20 = *(_QWORD *)(v22 + 8 * v21);
  if (v20)
  {
    v12 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    v12 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v12 >= v23)
      return swift_release();
    v20 = *(_QWORD *)(v22 + 8 * v12);
    ++v21;
    if (v20)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1A56503E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v4 = sub_1A5651128(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
  v6 = v5;
  v8 = v7;
  v10 = v9;
  result = swift_bridgeObjectRelease();
  *a3 = v4;
  a3[1] = v6;
  a3[2] = v8;
  a3[3] = v10;
  return result;
}

uint64_t sub_1A5650444(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  _BOOL8 v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  _QWORD *v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  char v37;
  unint64_t v38;
  char v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t result;
  uint64_t v43;

  v7 = v6;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797A18);
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a1;
  v14[3] = a2;
  v14[4] = a3;
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a4;
  v15[3] = a5;
  v15[4] = a6;
  v16 = *(_QWORD *)(v7 + 16);
  v17 = a1;
  v18 = (uint64_t)v15;
  sub_1A54FA300(v17, a2);
  sub_1A54FA300(a4, a5);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  LOBYTE(a2) = sub_1A565080C(v18, (uint64_t)v14, v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  swift_retain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v43 = *(_QWORD *)(v7 + 16);
  v20 = v43;
  *(_QWORD *)(v7 + 16) = 0x8000000000000000;
  sub_1A54FDEE8((uint64_t)v14);
  a3 = v22;
  v23 = *(_QWORD *)(v20 + 16);
  v24 = (v21 & 1) == 0;
  v25 = v23 + v24;
  if (__OFADD__(v23, v24))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  LOBYTE(v16) = v21;
  a6 = v7;
  if (*(_QWORD *)(v20 + 24) >= v25)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      goto LABEL_25;
  }
  else
  {
    sub_1A5584C70(v25, isUniquelyReferenced_nonNull_native);
    v20 = v43;
    sub_1A54FDEE8((uint64_t)v14);
    if ((v16 & 1) != (v27 & 1))
      goto LABEL_30;
    a3 = v26;
  }
  while (1)
  {
    *(_QWORD *)(a6 + 16) = v20;
    swift_bridgeObjectRelease();
    v28 = *(_QWORD **)(a6 + 16);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if ((v16 & 1) == 0)
    {
      if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0 && sub_1A594CA38())
        v29 = sub_1A54F8DF0(MEMORY[0x1E0DEE9D8]);
      else
        v29 = MEMORY[0x1E0DEE9E8];
      sub_1A55B2620(a3, (uint64_t)v14, v29, v28);
      swift_retain();
    }
    swift_bridgeObjectRelease();
    sub_1A54F3960(&v43, v18);
    LOBYTE(v16) = v43;
    swift_release();
    swift_release();
    swift_retain();
    swift_retain();
    v30 = swift_isUniquelyReferenced_nonNull_native();
    v43 = *(_QWORD *)(a6 + 8);
    v31 = v43;
    *(_QWORD *)(a6 + 8) = 0x8000000000000000;
    sub_1A54FDEE8(v18);
    a3 = v33;
    v34 = *(_QWORD *)(v31 + 16);
    v35 = (v32 & 1) == 0;
    v36 = v34 + v35;
    if (!__OFADD__(v34, v35))
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    sub_1A5551178();
    v20 = v43;
  }
  v37 = v32;
  if (*(_QWORD *)(v31 + 24) >= v36)
  {
    if ((v30 & 1) == 0)
    {
      sub_1A5551178();
      v31 = v43;
    }
    goto LABEL_17;
  }
  sub_1A5584C70(v36, v30);
  v31 = v43;
  sub_1A54FDEE8(v18);
  if ((v37 & 1) != (v39 & 1))
  {
LABEL_30:
    result = sub_1A594CDF8();
    __break(1u);
    return result;
  }
  a3 = v38;
LABEL_17:
  *(_QWORD *)(a6 + 8) = v31;
  swift_bridgeObjectRelease();
  v40 = *(_QWORD **)(a6 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if ((v37 & 1) == 0)
  {
    if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0 && sub_1A594CA38())
      v41 = sub_1A54F8DF0(MEMORY[0x1E0DEE9D8]);
    else
      v41 = MEMORY[0x1E0DEE9E8];
    sub_1A55B2620(a3, v18, v41, v40);
    swift_retain();
  }
  swift_bridgeObjectRelease();
  sub_1A54F3960(&v43, (uint64_t)v14);
  swift_release();
  swift_release_n();
  return swift_release();
}

uint64_t sub_1A565080C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;

  v5 = MEMORY[0x1E0DEE9D8];
  if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0)
    goto LABEL_41;
  while (1)
  {
    __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE79B3A0);
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1A59ABE60;
    *(_QWORD *)(v6 + 32) = a1;
    v29 = v6;
    sub_1A594B988();
    swift_retain();
    v7 = sub_1A564F694();
    if (!v7)
      break;
    v25 = a3;
    while (1)
    {
      a1 = *(_QWORD *)(a3 + 16);
      v8 = v7;
      swift_retain();
      if (a1 && (sub_1A54FDEE8(v8), (v10 & 1) != 0))
      {
        v11 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v9);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      }
      else
      {
        v11 = MEMORY[0x1E0DEE9E8];
        if ((v5 & 0xC000000000000000) != 0 && sub_1A594CA38())
          v11 = sub_1A54F8DF0(v5);
      }
      swift_release();
      if ((v11 & 0xC000000000000001) != 0)
      {
        a1 = sub_1A594C5F4();
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797A18);
        sub_1A56513E8();
        sub_1A594BC64();
        v11 = v29;
        v27 = v30;
        v12 = v31;
        a3 = v32;
        v5 = v33;
      }
      else
      {
        a3 = 0;
        v13 = -1 << *(_BYTE *)(v11 + 32);
        v27 = v11 + 56;
        v14 = ~v13;
        v15 = -v13;
        v16 = v15 < 64 ? ~(-1 << v15) : -1;
        v5 = v16 & *(_QWORD *)(v11 + 56);
        v12 = v14;
      }
      v26 = (unint64_t)(v12 + 64) >> 6;
      if ((v11 & 0x8000000000000000) == 0)
        break;
      if (sub_1A594C648())
      {
        swift_unknownObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797A18);
        swift_dynamicCast();
        v18 = v28;
        swift_unknownObjectRelease();
        if (v28)
        {
LABEL_38:
          swift_beginAccess();
          v23 = *(_QWORD *)(v18 + 24);
          swift_beginAccess();
          __asm { BR              X9 }
        }
      }
LABEL_4:
      sub_1A550F72C();
      swift_release();
      v7 = sub_1A564F694();
      a3 = v25;
      v5 = MEMORY[0x1E0DEE9D8];
      if (!v7)
        goto LABEL_39;
    }
    if (v5)
    {
      v17 = __clz(__rbit64(v5)) | (a3 << 6);
LABEL_37:
      v18 = *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * v17);
      swift_retain();
      if (v18)
        goto LABEL_38;
      goto LABEL_4;
    }
    v19 = a3 + 1;
    if (!__OFADD__(a3, 1))
    {
      if (v19 >= v26)
        goto LABEL_4;
      v20 = *(_QWORD *)(v27 + 8 * v19);
      v21 = a3 + 1;
      if (!v20)
      {
        v21 = a3 + 2;
        if (a3 + 2 >= v26)
          goto LABEL_4;
        v20 = *(_QWORD *)(v27 + 8 * v21);
        if (!v20)
        {
          v21 = a3 + 3;
          if (a3 + 3 >= v26)
            goto LABEL_4;
          v20 = *(_QWORD *)(v27 + 8 * v21);
          if (!v20)
          {
            v21 = a3 + 4;
            if (a3 + 4 >= v26)
              goto LABEL_4;
            v20 = *(_QWORD *)(v27 + 8 * v21);
            if (!v20)
            {
              v22 = a3 + 5;
              do
              {
                if (v26 == v22)
                  goto LABEL_4;
                v20 = *(_QWORD *)(v27 + 8 * v22++);
              }
              while (!v20);
              v21 = v22 - 1;
            }
          }
        }
      }
      v17 = __clz(__rbit64(v20)) + (v21 << 6);
      goto LABEL_37;
    }
    __break(1u);
LABEL_41:
    if (sub_1A594CA38())
      sub_1A54F8DF0(MEMORY[0x1E0DEE9D8]);
  }
LABEL_39:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1A5650F7C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *inited;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797A18);
  inited = (_QWORD *)swift_initStackObject();
  inited[2] = a1;
  inited[3] = a2;
  inited[4] = a3;
  v9 = *(_QWORD *)(a4 + 16);
  sub_1A54FA300(a1, a2);
  if (v9 && (sub_1A54FDEE8((uint64_t)inited), (v11 & 1) != 0))
  {
    v12 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v10);
    swift_setDeallocating();
    v13 = inited[2];
    v14 = inited[3];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v15 = v13;
    v16 = v14;
  }
  else
  {
    if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) == 0 || !sub_1A594CA38())
    {
      swift_setDeallocating();
      v17 = sub_1A54FA2A8(inited[2], inited[3]);
      v12 = MEMORY[0x1E0DEE9E8];
      goto LABEL_7;
    }
    v12 = sub_1A54F8DF0(MEMORY[0x1E0DEE9D8]);
    swift_setDeallocating();
    v15 = inited[2];
    v16 = inited[3];
  }
  v17 = sub_1A54FA2A8(v15, v16);
LABEL_7:
  MEMORY[0x1E0C80A78](v17);
  sub_1A5553CA0();
  swift_getKeyPath();
  swift_retain();
  v18 = sub_1A561ADD8(v12);
  swift_bridgeObjectRelease();
  swift_release_n();
  v19 = sub_1A5552BFC(v18);
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_1A5651128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t i;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a2 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](a1);
  v10 = sub_1A564F84C(v8, v9);
  v24 = v10;
  v25 = v11;
  v26 = v12;
  v27 = v13;
  if (!MEMORY[0x1A85ADF2C](a1, a2))
    return v10;
  for (i = 0; ; ++i)
  {
    v15 = sub_1A594BA24();
    sub_1A594B9A0();
    if ((v15 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))((char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * i, a2);
      v17 = i + 1;
      if (__OFADD__(i, 1))
        goto LABEL_10;
      goto LABEL_5;
    }
    result = sub_1A594C780();
    if (v7 != 8)
      break;
    v23 = result;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(&v22 - 2, &v23, a2);
    swift_unknownObjectRelease();
    v17 = i + 1;
    if (__OFADD__(i, 1))
    {
LABEL_10:
      __break(1u);
      return v24;
    }
LABEL_5:
    v18 = type metadata accessor for DependencyGraph(0, a2, a3, v16);
    v20 = type metadata accessor for DirectedAcyclicGraph(0, *(_QWORD *)(v18 + 16), *(_QWORD *)(v18 + 24), v19);
    sub_1A56514A8((uint64_t)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v20);
    (*(void (**)(char *, uint64_t))(v6 + 8))((char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
    if (v17 == MEMORY[0x1A85ADF2C](a1, a2))
      return v24;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DependencyGraph(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DependencyGraph);
}

uint64_t type metadata accessor for DependencyGraph.State(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DependencyGraph.State);
}

uint64_t sub_1A5651304()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1A565130C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A5651358 + 4 * byte_1A59AB905[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A565138C + 4 * byte_1A59AB900[v4]))();
}

uint64_t sub_1A565138C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5651394(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A565139CLL);
  return result;
}

uint64_t sub_1A56513A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A56513B0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A56513B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A56513BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1A56513C8()
{
  JUMPOUT(0x1A85B1874);
}

void sub_1A56513D8()
{
  JUMPOUT(0x1A85B1874);
}

unint64_t sub_1A56513E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE7A8E58[0];
  if (!qword_1EE7A8E58[0])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract_0(&qword_1EE797A18);
    result = MEMORY[0x1A85B1874](&unk_1A59ABB30, v1);
    atomic_store(result, qword_1EE7A8E58);
  }
  return result;
}

uint64_t sub_1A5651438()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1A56514A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DirectedAcyclicGraph.Node(0, v3, *(_QWORD *)(v7 + 24), v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  v10 = swift_allocObject();
  (*(void (**)(uint64_t, char *))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v10 + 80) - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)v10 + 96), v6);
  v12 = v10;
  MEMORY[0x1A85B1874](&unk_1A59ABB30, v9);
  sub_1A594BCC4();
  sub_1A594BC34();
  return swift_release();
}

uint64_t sub_1A56515A4(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v2 + 80) - 8) + 32))(v2 + *(_QWORD *)(*(_QWORD *)v2 + 96), a1);
  return v2;
}

uint64_t sub_1A56515F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(_BYTE *, uint64_t, uint64_t);
  uint64_t v14;
  char v15;
  void (*v16)(_BYTE *, uint64_t);
  _BYTE v18[24];

  v4 = *(_QWORD *)(v2 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v8);
  v10 = &v18[-v9];
  v12 = v11 + *(_QWORD *)(*(_QWORD *)v11 + 96);
  swift_beginAccess();
  v13 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16);
  v13(v10, v12, v4);
  v14 = a2 + *(_QWORD *)(*(_QWORD *)a2 + 96);
  swift_beginAccess();
  v13(v7, v14, v4);
  v15 = sub_1A594B37C();
  v16 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
  v16(v7, v4);
  v16(v10, v4);
  return v15 & 1;
}

uint64_t sub_1A5651724(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 80);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t)v1 + *(_QWORD *)(v2 + 96);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  sub_1A594B154();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1A56517E0()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 96));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DirectedAcyclicGraph.Node(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DirectedAcyclicGraph.Node);
}

uint64_t sub_1A5651828()
{
  _BYTE v1[72];

  sub_1A594CE64();
  sub_1A5651724((uint64_t)v1);
  return sub_1A594CED0();
}

uint64_t sub_1A5651864()
{
  return sub_1A5651828();
}

uint64_t sub_1A5651884(uint64_t a1)
{
  return sub_1A5651724(a1);
}

uint64_t sub_1A56518A4()
{
  _BYTE v1[72];

  sub_1A594CE64();
  sub_1A5651724((uint64_t)v1);
  return sub_1A594CED0();
}

uint64_t sub_1A56518E0(uint64_t *a1, uint64_t *a2)
{
  return sub_1A56515F8(*a1, *a2);
}

uint64_t sub_1A56518EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = type metadata accessor for DirectedAcyclicGraph.Node(0, a1, a2, a4);
  v5 = sub_1A594B9F4();
  if (MEMORY[0x1A85ADF44](v5, v4))
  {
    v6 = MEMORY[0x1A85B1874](&unk_1A59ABB30, v4);
    v7 = sub_1A5651D84(v5, v4, v6);
  }
  else
  {
    v7 = MEMORY[0x1E0DEE9E8];
  }
  swift_bridgeObjectRelease();
  MEMORY[0x1A85B1874](&unk_1A59ABB30, v4);
  sub_1A594BCC4();
  swift_getTupleTypeMetadata2();
  sub_1A594B9F4();
  sub_1A594AFEC();
  sub_1A594B9F4();
  sub_1A594AFEC();
  return v7;
}

uint64_t sub_1A5651A08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for DirectedAcyclicGraph.Node(0, a5, a6, a4);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  MEMORY[0x1A85B1874](&unk_1A59ABB30, v6);
  sub_1A594BBF8();
  swift_bridgeObjectRelease();
  v7 = sub_1A594BCC4();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  MEMORY[0x1A85B1874](MEMORY[0x1E0DEB3C0], v7);
  sub_1A594B0F4();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B0F4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A5651B10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;

  v8 = type metadata accessor for DirectedAcyclicGraph.Node(0, a7, a8, a4);
  MEMORY[0x1A85B1874](&unk_1A59ABB30, v8);
  if ((sub_1A594BBEC() & 1) != 0
    && (v9 = sub_1A594BCC4(), MEMORY[0x1A85B1874](MEMORY[0x1E0DEB3C8], v9), (sub_1A594B100() & 1) != 0))
  {
    return sub_1A594B100();
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1A5651C14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _BYTE v11[72];

  sub_1A594CE64();
  sub_1A5651A08((uint64_t)v11, a1, a2, a3, a4, a5);
  return sub_1A594CED0();
}

uint64_t sub_1A5651C88(uint64_t a1)
{
  uint64_t *v1;

  return sub_1A5651C14(*v1, v1[1], v1[2], *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

uint64_t sub_1A5651C9C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1A5651A08(a1, *v2, v2[1], v2[2], *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

uint64_t sub_1A5651CB0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  _BYTE v5[72];

  sub_1A594CE64();
  sub_1A5651A08((uint64_t)v5, *v2, v2[1], v2[2], *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
  return sub_1A594CED0();
}

uint64_t sub_1A5651CF8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1A5651B10(*a1, a1[1], a1[2], *a2, a2[1], a2[2], *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_1A5651D1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v4 = sub_1A565208C(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
  v6 = v5;
  v8 = v7;
  result = swift_bridgeObjectRelease();
  *a3 = v4;
  a3[1] = v6;
  a3[2] = v8;
  return result;
}

void sub_1A5651D74()
{
  JUMPOUT(0x1A85B1874);
}

uint64_t sub_1A5651D84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(char *, unint64_t, uint64_t);
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;

  v5 = a1;
  v45 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v44 = (char *)&v37 - v9;
  v37 = v10;
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v37 - v13;
  if (MEMORY[0x1A85ADEB4](v12))
  {
    sub_1A594C6F0();
    v15 = sub_1A594C6E4();
  }
  else
  {
    v15 = MEMORY[0x1E0DEE9E8];
  }
  v40 = MEMORY[0x1A85ADF44](v5, a2);
  if (!v40)
    return v15;
  v16 = 0;
  v43 = v15 + 56;
  v38 = v14;
  v39 = v5;
  while (1)
  {
    v17 = sub_1A594BA24();
    sub_1A594B9A0();
    if ((v17 & 1) != 0)
    {
      v18 = *(void (**)(char *, unint64_t, uint64_t))(v45 + 16);
      v18(v14, v5+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(_QWORD *)(v45 + 72) * v16, a2);
      v19 = __OFADD__(v16, 1);
      v20 = v16 + 1;
      if (v19)
        goto LABEL_20;
    }
    else
    {
      result = sub_1A594C780();
      if (v37 != 8)
        goto LABEL_23;
      v46 = result;
      v18 = *(void (**)(char *, unint64_t, uint64_t))(v45 + 16);
      v18(v14, (unint64_t)&v46, a2);
      swift_unknownObjectRelease();
      v19 = __OFADD__(v16, 1);
      v20 = v16 + 1;
      if (v19)
      {
LABEL_20:
        __break(1u);
        return v15;
      }
    }
    v21 = v45;
    v41 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
    v42 = v20;
    v41(v44, v14, a2);
    v22 = sub_1A594B148();
    v23 = -1 << *(_BYTE *)(v15 + 32);
    v24 = v22 & ~v23;
    v25 = v24 >> 6;
    v26 = *(_QWORD *)(v43 + 8 * (v24 >> 6));
    v27 = 1 << v24;
    v28 = *(_QWORD *)(v21 + 72);
    if (((1 << v24) & v26) != 0)
    {
      v29 = ~v23;
      do
      {
        v18(v7, *(_QWORD *)(v15 + 48) + v28 * v24, a2);
        v30 = a3;
        v31 = sub_1A594B37C();
        v32 = *(void (**)(char *, uint64_t))(v45 + 8);
        v32(v7, a2);
        if ((v31 & 1) != 0)
        {
          v32(v44, a2);
          a3 = v30;
          v14 = v38;
          v5 = v39;
          goto LABEL_7;
        }
        v24 = (v24 + 1) & v29;
        v25 = v24 >> 6;
        v26 = *(_QWORD *)(v43 + 8 * (v24 >> 6));
        v27 = 1 << v24;
        a3 = v30;
      }
      while ((v26 & (1 << v24)) != 0);
      v14 = v38;
      v5 = v39;
    }
    v33 = v44;
    *(_QWORD *)(v43 + 8 * v25) = v27 | v26;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v41)(*(_QWORD *)(v15 + 48) + v28 * v24, v33, a2);
    v35 = *(_QWORD *)(v15 + 16);
    v19 = __OFADD__(v35, 1);
    v36 = v35 + 1;
    if (v19)
      break;
    *(_QWORD *)(v15 + 16) = v36;
LABEL_7:
    v16 = v42;
    if (v42 == v40)
      return v15;
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1A565208C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t i;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = *(_QWORD *)(a2 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](a1);
  v11 = sub_1A56518EC(v8, v9, v9, v10);
  v21 = v11;
  v22 = v12;
  v23 = v13;
  if (!MEMORY[0x1A85ADF2C](a1, a2))
    return v11;
  for (i = 0; ; ++i)
  {
    v15 = sub_1A594BA24();
    sub_1A594B9A0();
    if ((v15 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))((char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * i, a2);
      v17 = i + 1;
      if (__OFADD__(i, 1))
        goto LABEL_10;
      goto LABEL_5;
    }
    result = sub_1A594C780();
    if (v7 != 8)
      break;
    v20 = result;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(&v20 - 2, &v20, a2);
    swift_unknownObjectRelease();
    v17 = i + 1;
    if (__OFADD__(i, 1))
    {
LABEL_10:
      __break(1u);
      return v21;
    }
LABEL_5:
    v18 = type metadata accessor for DirectedAcyclicGraph(0, a2, a3, v16);
    sub_1A56514A8((uint64_t)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v18);
    (*(void (**)(char *, uint64_t))(v6 + 8))((char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
    if (v17 == MEMORY[0x1A85ADF2C](a1, a2))
      return v21;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DirectedAcyclicGraph(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DirectedAcyclicGraph);
}

uint64_t sub_1A5652248()
{
  return swift_allocateGenericValueMetadata();
}

void sub_1A5652250()
{
  JUMPOUT(0x1A85B1874);
}

unint64_t sub_1A5652260@<X0>(__int16 a1@<W0>, unint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X8>)
{
  uint64_t v6;
  uint64_t v8;

  if ((a1 & 0x100) != 0)
  {
    *a4 = a2;
    type metadata accessor for ClientCommand(0);
  }
  else
  {
    if ((a1 & 1) != 0 || (a3 & 0x100000000) != 0)
    {
      *a4 = a2;
      a4[1] = (unint64_t)&unk_1E4E71700;
    }
    else
    {
      sub_1A5534BE4();
      static MessageIdentifier.... infix(_:_:)();
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AEF0);
      v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_1A59ABD10;
      *(_QWORD *)(v6 + 40) = 0;
      *(_QWORD *)(v6 + 48) = 0;
      *(_QWORD *)(v6 + 32) = v8;
      *(_QWORD *)(v6 + 55) = 0;
      *a4 = a2;
      a4[1] = v6;
    }
    type metadata accessor for ClientCommand(0);
  }
  swift_storeEnumTagMultiPayload();
  return sub_1A54E42F8(a2);
}

void sub_1A5652350(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799EE8) - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_1A555C1E4(v3);
  v4 = v3[2];
  v5[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_1A56549BC(v5);
  *a1 = v3;
}

uint64_t sub_1A56523D4(NSObject *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _DWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unsigned int *v51;
  uint64_t v52;
  os_log_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  _BOOL4 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  int v69;
  uint64_t v70;
  unint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  int v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t result;
  unint64_t v80;
  unsigned int v81;
  unsigned int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  unsigned int *v89;
  unsigned int *v90;
  os_log_t v91;
  Class isa;
  uint64_t v93;
  uint64_t v94;
  unsigned int *v95;
  BOOL v96;
  char *v97;
  os_log_t v98;
  Class v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unsigned int v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  NSObject *v112;
  os_log_type_t v113;
  int v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  int v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  void (*v127)(uint64_t, uint64_t);
  os_log_t v128;
  _DWORD *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  unint64_t v136;
  unint64_t v137;
  unsigned int v138;
  Class v139;
  char *v140;
  uint64_t v141;
  unsigned int v142;
  _DWORD *v143;
  _DWORD *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unsigned int v148;
  unint64_t v149;
  Class v150;
  unsigned int v151;
  uint64_t v152;
  uint64_t v153;
  _DWORD *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  unsigned int v159;
  uint64_t v160;
  BOOL v161;
  uint64_t v162;
  uint64_t v163;
  unsigned int *v164;
  uint64_t v165;
  unsigned int v166;
  uint64_t v167;
  unsigned int *v168;
  uint64_t v169;
  unsigned int *v170;
  NSObject *v171;
  uint64_t v172;
  uint64_t v173;
  unsigned int v174;
  uint64_t v175;
  _DWORD *v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  unsigned int v181;
  uint64_t v182;
  uint64_t v183;
  _DWORD *v184;
  _DWORD *v185;
  _DWORD *v186;
  uint64_t v187;
  unsigned int *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  unsigned int v196;
  _DWORD *v197;
  char *v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  char *v208;
  char *v209;
  unint64_t v210;
  uint64_t v211;
  os_log_t v212;
  uint64_t v213;
  _DWORD *v214;
  uint64_t v215;
  char *v216;
  uint64_t v217;
  unint64_t v218;
  int v219;
  unsigned int v220;
  _DWORD *v221;

  v204 = a3;
  v212 = a1;
  v205 = sub_1A594AE60();
  v209 = *(char **)(v205 - 8);
  MEMORY[0x1E0C80A78](v205);
  v207 = (char *)&v183 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v203 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v203);
  v206 = (uint64_t)&v183 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v199 = (uint64_t)&v183 - v7;
  v211 = sub_1A594A764();
  v213 = *(_QWORD *)(v211 - 8);
  MEMORY[0x1E0C80A78](v211);
  v208 = (char *)&v183 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v200 = (char *)&v183 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798F48);
  MEMORY[0x1E0C80A78](v11);
  v198 = (char *)&v183 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v215 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799F18);
  v202 = *(_QWORD *)(v215 - 8);
  MEMORY[0x1E0C80A78](v215);
  v14 = (char *)&v183 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v183 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v183 - v19;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v183 - v22;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v183 - v25;
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v183 - v28;
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)&v183 - v31;
  MEMORY[0x1E0C80A78](v33);
  v35 = (_DWORD *)((char *)&v183 - v34);
  v36 = sub_1A594A26C();
  v37 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  MEMORY[0x1E0C80A78](v38);
  MEMORY[0x1E0C80A78](v39);
  MEMORY[0x1E0C80A78](v40);
  MEMORY[0x1E0C80A78](v41);
  MEMORY[0x1E0C80A78](v42);
  HIDWORD(v50) = -1431655765 * a2;
  LODWORD(v50) = -1431655765 * a2;
  if ((v50 >> 17) > 0x2AAA)
  {
    type metadata accessor for SegmentResequencer.Error(0);
    sub_1A55E1698(&qword_1EE7A8EE0, type metadata accessor for SegmentResequencer.Error, (uint64_t)&unk_1A59ABCD0);
    swift_allocError();
    *v51 = a2;
LABEL_17:
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  v195 = (char *)&v183 - v46;
  v193 = v45;
  v187 = v44;
  v188 = (unsigned int *)v32;
  v184 = v14;
  v196 = a2;
  v216 = v29;
  v186 = v26;
  v191 = v37;
  v214 = v23;
  v185 = v20;
  v189 = v49;
  v52 = v211;
  v197 = v17;
  v190 = v48;
  v194 = v47;
  v192 = v43;
  v53 = v212;
  if (_s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0() > 393216)
  {
    v54 = v208;
    v55 = v204;
    v56 = v52;
    (*(void (**)(char *, uint64_t, uint64_t))(v213 + 16))(v208, v204, v52);
    v57 = v206;
    sub_1A55BAEB8(v55, v206);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v58 = v209;
    v59 = v207;
    v60 = v205;
    (*((void (**)(char *, os_log_t, uint64_t))v209 + 2))(v207, v53, v205);
    v61 = sub_1A594A74C();
    v62 = sub_1A594C018();
    LODWORD(v216) = v62;
    v63 = os_log_type_enabled(v61, v62);
    v64 = v203;
    if (v63)
    {
      v65 = swift_slowAlloc();
      v215 = swift_slowAlloc();
      v221 = (_DWORD *)v215;
      *(_DWORD *)v65 = 68159747;
      LODWORD(v217) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v65 + 8) = 256;
      v66 = v57 + *(int *)(v64 + 20);
      LOBYTE(v217) = *(_BYTE *)v66;
      sub_1A594C3CC();
      *(_WORD *)(v65 + 11) = 2082;
      v67 = *(_QWORD *)(v66 + 8);
      v68 = *(_QWORD *)(v66 + 16);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v217 = sub_1A55791B0(v67, v68, (uint64_t *)&v221);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v65 + 21) = 1040;
      LODWORD(v217) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v65 + 27) = 512;
      LOWORD(v217) = *(_WORD *)(v66 + 24);
      sub_1A594C3CC();
      *(_WORD *)(v65 + 31) = 2160;
      v217 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v65 + 41) = 2085;
      v69 = *(_DWORD *)(v66 + 40);
      v217 = *(_QWORD *)(v66 + 32);
      LODWORD(v218) = v69;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v70 = sub_1A594B4A8();
      v217 = sub_1A55791B0(v70, v71, (uint64_t *)&v221);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC(v206, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v65 + 51) = 2048;
      v72 = v207;
      v73 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
      (*((void (**)(char *, uint64_t))v209 + 1))(v72, v60);
      v217 = v73;
      sub_1A594C3CC();
      *(_WORD *)(v65 + 61) = 1024;
      LODWORD(v217) = 393216;
      sub_1A594C3CC();
      _os_log_impl(&dword_1A4F90000, v61, (os_log_type_t)v216, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Data length %ld > %u (segment length).", (uint8_t *)v65, 0x43u);
      v74 = v215;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v74, -1, -1);
      MEMORY[0x1A85B1964](v65, -1, -1);

      (*(void (**)(char *, uint64_t))(v213 + 8))(v208, v211);
    }
    else
    {
      (*((void (**)(char *, uint64_t))v58 + 1))(v59, v60);
      sub_1A55034FC(v57, type metadata accessor for MailboxTaskLogger);

      (*(void (**)(char *, uint64_t))(v213 + 8))(v54, v56);
    }
    type metadata accessor for SegmentResequencer.Error(0);
    sub_1A55E1698(&qword_1EE7A8EE0, type metadata accessor for SegmentResequencer.Error, (uint64_t)&unk_1A59ABCD0);
    swift_allocError();
    *v86 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
    goto LABEL_17;
  }
  v75 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
  if ((v75 & 0x8000000000000000) != 0)
    goto LABEL_87;
  v76 = v75;
  v77 = v196;
  v78 = v193;
  if (HIDWORD(v75))
    goto LABEL_87;
  result = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
  v80 = v210;
  if (result >= 393216)
    goto LABEL_36;
  v81 = *(_DWORD *)(v210 + 8);
  if (!*(_BYTE *)(v210 + 12))
  {
    if (!v76)
      goto LABEL_36;
    v87 = type metadata accessor for SegmentResequencer.Error(0);
    sub_1A55E1698(&qword_1EE7A8EE0, type metadata accessor for SegmentResequencer.Error, (uint64_t)&unk_1A59ABCD0);
    v88 = swift_allocError();
    v90 = v89;
    if (v81 <= v77)
    {
      *v89 = v81;
      v89[1] = v77;
      swift_storeEnumTagMultiPayload();
      return swift_willThrow();
    }
    v201 = v88;
    v91 = *(os_log_t *)v80;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594A260();
    isa = v91[2].isa;
    if (isa)
    {
      v216 = (char *)v87;
      v93 = (uint64_t)v91
          + ((*(unsigned __int8 *)(v202 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v202 + 80));
      v78 = *(_QWORD *)(v202 + 72);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v80 = (unint64_t)v195;
      while (1)
      {
        sub_1A54E330C(v93, (uint64_t)v35, &qword_1EE799F18);
        if (v35[1] < *v35)
          break;
        sub_1A594A218();
        sub_1A5510284((uint64_t)v35, &qword_1EE799F18);
        v93 += v78;
        isa = (Class)((char *)isa - 1);
        if (!isa)
        {
          swift_bridgeObjectRelease();
          v77 = v196;
          goto LABEL_26;
        }
      }
LABEL_81:
      __break(1u);
      goto LABEL_82;
    }
LABEL_26:
    v94 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8EE8) + 48);
    (*(void (**)(unsigned int *, char *, uint64_t))(v191 + 32))(v90, v195, v192);
    swift_bridgeObjectRelease();
    if (!__CFADD__(v77, v76))
    {
      v95 = (unsigned int *)((char *)v90 + v94);
      *v95 = v77;
      v95[1] = v77 + v76;
      swift_storeEnumTagMultiPayload();
      return swift_willThrow();
    }
    goto LABEL_86;
  }
  if (*(_BYTE *)(v210 + 12) == 1)
  {
    if (v76)
    {
      v82 = v77 + v76;
      if (!__CFADD__(v77, v76))
      {
        if (v81 < v82)
        {
          type metadata accessor for SegmentResequencer.Error(0);
          sub_1A55E1698(&qword_1EE7A8EE0, type metadata accessor for SegmentResequencer.Error, (uint64_t)&unk_1A59ABCD0);
          swift_allocError();
          v84 = v83;
          v85 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
          *(_DWORD *)v84 = v81;
          *(_DWORD *)(v84 + 4) = v77;
          *(_QWORD *)(v84 + 8) = v85;
          goto LABEL_17;
        }
        goto LABEL_30;
      }
      __break(1u);
      goto LABEL_85;
    }
    if (v81 <= v77)
      goto LABEL_36;
    v96 = 1;
LABEL_34:
    v82 = v77;
    goto LABEL_35;
  }
  if (!v76)
  {
    v96 = v77 != 0;
    goto LABEL_34;
  }
  v82 = v77 + v76;
  if (__CFADD__(v77, v76))
  {
LABEL_85:
    __break(1u);
LABEL_86:
    __break(1u);
LABEL_87:
    result = sub_1A594C9B4();
    __break(1u);
    return result;
  }
LABEL_30:
  v96 = 0;
LABEL_35:
  *(_DWORD *)(v210 + 8) = v82;
  *(_BYTE *)(v80 + 12) = v96;
LABEL_36:
  v97 = (char *)(v77 + v76);
  if (!__CFADD__(v77, v76))
  {
    if (!v76)
      goto LABEL_50;
    v98 = *(os_log_t *)v80;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594A260();
    v99 = v98[2].isa;
    v100 = v213;
    v208 = v97;
    if (!v99)
    {
LABEL_43:
      v103 = v191;
      v104 = v192;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v191 + 32))(v194, v78, v192);
      swift_bridgeObjectRelease();
      v105 = v196;
      if ((sub_1A594A23C() & 1) != 0)
      {
        v106 = v187;
        sub_1A594A1D0();
        v107 = v190;
        sub_1A594A1DC();
        v216 = *(char **)(v103 + 8);
        ((void (*)(uint64_t, uint64_t))v216)(v106, v104);
        v108 = v200;
        v109 = v204;
        (*(void (**)(char *, uint64_t, uint64_t))(v100 + 16))(v200, v204, v52);
        v110 = v199;
        sub_1A55BAEB8(v109, v199);
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        v111 = v189;
        v215 = *(_QWORD *)(v103 + 16);
        ((void (*)(uint64_t, uint64_t, uint64_t))v215)(v189, v107, v104);
        v112 = sub_1A594A74C();
        v113 = sub_1A594C018();
        v114 = v113;
        if (os_log_type_enabled(v112, v113))
        {
          v115 = swift_slowAlloc();
          v212 = v112;
          v116 = v115;
          v214 = (_DWORD *)swift_slowAlloc();
          v221 = v214;
          *(_DWORD *)v116 = 68159747;
          LODWORD(v217) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v116 + 8) = 256;
          v117 = *(int *)(v203 + 20);
          LODWORD(v210) = v114;
          v118 = v110 + v117;
          LOBYTE(v217) = *(_BYTE *)(v110 + v117);
          sub_1A594C3CC();
          *(_WORD *)(v116 + 11) = 2082;
          v119 = *(_QWORD *)(v118 + 8);
          v120 = *(_QWORD *)(v118 + 16);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v217 = sub_1A55791B0(v119, v120, (uint64_t *)&v221);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          *(_WORD *)(v116 + 21) = 1040;
          LODWORD(v217) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v116 + 27) = 512;
          LOWORD(v217) = *(_WORD *)(v118 + 24);
          sub_1A594C3CC();
          *(_WORD *)(v116 + 31) = 2160;
          v217 = 0x786F626C69616DLL;
          sub_1A594C3CC();
          *(_WORD *)(v116 + 41) = 2085;
          v121 = *(_DWORD *)(v118 + 40);
          v217 = *(_QWORD *)(v118 + 32);
          LODWORD(v218) = v121;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v122 = sub_1A594B4A8();
          v217 = sub_1A55791B0(v122, v123, (uint64_t *)&v221);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          sub_1A55034FC(v110, type metadata accessor for MailboxTaskLogger);
          *(_WORD *)(v116 + 51) = 2080;
          v219 = (int)v208;
          v220 = v196;
          v217 = 0;
          v218 = 0xE000000000000000;
          sub_1A594C924();
          sub_1A594B5F8();
          sub_1A594C924();
          v217 = sub_1A55791B0(v217, v218, (uint64_t *)&v221);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          *(_WORD *)(v116 + 61) = 2080;
          sub_1A55E1698(&qword_1EE7A8EF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB13A0], MEMORY[0x1E0CB13F0]);
          v124 = v189;
          v125 = sub_1A594CC9C();
          v217 = sub_1A55791B0(v125, v126, (uint64_t *)&v221);
          v105 = v196;
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          v127 = (void (*)(uint64_t, uint64_t))v216;
          ((void (*)(uint64_t, uint64_t))v216)(v124, v104);
          v128 = v212;
          _os_log_impl(&dword_1A4F90000, v212, (os_log_type_t)v210, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Received bytes in range %s -- some of which have previously been received: %s", (uint8_t *)v116, 0x47u);
          v129 = v214;
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v129, -1, -1);
          MEMORY[0x1A85B1964](v116, -1, -1);

          (*(void (**)(char *, uint64_t))(v213 + 8))(v200, v211);
        }
        else
        {
          sub_1A55034FC(v110, type metadata accessor for MailboxTaskLogger);
          v127 = (void (*)(uint64_t, uint64_t))v216;
          ((void (*)(uint64_t, uint64_t))v216)(v111, v104);

          (*(void (**)(char *, uint64_t))(v100 + 8))(v108, v52);
        }
        type metadata accessor for SegmentResequencer.Error(0);
        sub_1A55E1698(&qword_1EE7A8EE0, type metadata accessor for SegmentResequencer.Error, (uint64_t)&unk_1A59ABCD0);
        swift_allocError();
        v163 = v162;
        v164 = (unsigned int *)(v162 + *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8EE8) + 48));
        v165 = v194;
        ((void (*)(uint64_t, uint64_t, uint64_t))v215)(v163, v194, v104);
        v166 = v208;
        *v164 = v105;
        v164[1] = v166;
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        v127(v190, v104);
        return ((uint64_t (*)(uint64_t, uint64_t))v127)(v165, v104);
      }
      v130 = v209;
      v131 = (uint64_t)v198;
      v132 = v205;
      (*((void (**)(char *, os_log_t, uint64_t))v209 + 2))(v198, v212, v205);
      (*((void (**)(uint64_t, _QWORD, uint64_t, uint64_t))v130 + 7))(v131, 0, 1, v132);
      v78 = (uint64_t)v188;
      v133 = (uint64_t)v188 + *(int *)(v215 + 48);
      *v188 = v105;
      *(_DWORD *)(v78 + 4) = (_DWORD)v97;
      sub_1A55032A0(v131, v133, &qword_1EE798F48);
      v80 = *(_QWORD *)v210;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        goto LABEL_47;
      goto LABEL_83;
    }
    v101 = (uint64_t)v98
         + ((*(unsigned __int8 *)(v202 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v202 + 80));
    v102 = *(_QWORD *)(v202 + 72);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    while (1)
    {
      sub_1A54E330C(v101, (uint64_t)v35, &qword_1EE799F18);
      if (v35[1] < *v35)
        break;
      v80 = v78;
      sub_1A594A218();
      sub_1A5510284((uint64_t)v35, &qword_1EE799F18);
      v101 += v102;
      v99 = (Class)((char *)v99 - 1);
      if (!v99)
      {
        swift_bridgeObjectRelease();
        v100 = v213;
        LODWORD(v97) = (_DWORD)v208;
        goto LABEL_43;
      }
    }
    __break(1u);
    goto LABEL_81;
  }
LABEL_82:
  __break(1u);
LABEL_83:
  v80 = sub_1A54F1B74(0, *(_QWORD *)(v80 + 16) + 1, 1, v80);
LABEL_47:
  v134 = v202;
  v136 = *(_QWORD *)(v80 + 16);
  v135 = *(_QWORD *)(v80 + 24);
  if (v136 >= v135 >> 1)
    v80 = sub_1A54F1B74(v135 > 1, v136 + 1, 1, v80);
  *(_QWORD *)(v80 + 16) = v136 + 1;
  sub_1A55032A0(v78, v80+ ((*(unsigned __int8 *)(v134 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v134 + 80))+ *(_QWORD *)(v134 + 72) * v136, &qword_1EE799F18);
  v137 = v210;
  *(_QWORD *)v210 = v80;
  v80 = v137;
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v191 + 8))(v194, v192);
LABEL_50:
  if (*(_BYTE *)(v80 + 12) != 1)
    return result;
  v138 = *(_DWORD *)(v80 + 8);
  v212 = *(os_log_t *)v80;
  v139 = v212[2].isa;
  if (!v139)
  {
    v149 = v210;
    if (v138)
      return result;
LABEL_68:
    *(_DWORD *)(v149 + 8) = v138;
    *(_BYTE *)(v149 + 12) = 0;
    return result;
  }
  LODWORD(v211) = v138;
  v208 = (char *)((*(unsigned __int8 *)(v202 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v202 + 80));
  v140 = &v208[(_QWORD)v212];
  v141 = *(_QWORD *)(v202 + 72);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v142 = 0;
  v209 = v140;
  v143 = v186;
  v144 = v216;
  do
  {
    sub_1A54E330C((uint64_t)v140, (uint64_t)v144, &qword_1EE799F18);
    v145 = *(int *)(v215 + 48);
    v146 = (uint64_t)v143 + v145;
    v147 = (uint64_t)v144 + v145;
    LODWORD(v145) = *v144;
    v148 = *((_DWORD *)v216 + 1);
    *v143 = v145;
    v143[1] = v148;
    sub_1A54E330C(v147, v146, &qword_1EE798F48);
    if (v148 > v142)
      v142 = v148;
    v144 = v216;
    sub_1A5510284(v146, &qword_1EE798F48);
    sub_1A5510284((uint64_t)v144, &qword_1EE799F18);
    v140 += v141;
    v139 = (Class)((char *)v139 - 1);
  }
  while (v139);
  result = swift_bridgeObjectRelease();
  v138 = v211;
  v149 = v210;
  if (v142 == (_DWORD)v211)
    goto LABEL_68;
  v150 = v212[2].isa;
  v213 = v141;
  if (!v150)
  {
    if ((_DWORD)v211)
      return result;
LABEL_72:
    v167 = type metadata accessor for SegmentResequencer.Error(0);
    sub_1A55E1698(&qword_1EE7A8EE0, type metadata accessor for SegmentResequencer.Error, (uint64_t)&unk_1A59ABCD0);
    v169 = swift_allocError();
    v170 = v168;
    v171 = *(NSObject **)v149;
    v172 = *(_QWORD *)(*(_QWORD *)v149 + 16);
    if (v172)
    {
      v214 = v168;
      v216 = (char *)v167;
      v201 = v169;
      v173 = (uint64_t)&v208[(_QWORD)v171];
      v212 = v171;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v174 = 0;
      v175 = v215;
      v176 = v184;
      v177 = (uint64_t)v197;
      do
      {
        sub_1A54E330C(v173, v177, &qword_1EE799F18);
        v178 = *(int *)(v175 + 48);
        v179 = (char *)v176 + v178;
        v180 = (uint64_t)v197 + v178;
        v181 = v197[1];
        *v176 = *v197;
        v176[1] = v181;
        sub_1A54E330C(v180, (uint64_t)v176 + v178, &qword_1EE798F48);
        if (v181 > v174)
          v174 = v181;
        v182 = (uint64_t)v179;
        v177 = (uint64_t)v197;
        sub_1A5510284(v182, &qword_1EE798F48);
        sub_1A5510284(v177, &qword_1EE799F18);
        v173 += v213;
        --v172;
      }
      while (v172);
      swift_bridgeObjectRelease();
      v138 = v211;
      v170 = v214;
    }
    else
    {
      v174 = 0;
    }
    *v170 = v174;
    v170[1] = v138;
    goto LABEL_17;
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v151 = 0;
  v152 = (uint64_t)v214;
  v153 = v215;
  v154 = v185;
  v155 = (uint64_t)v209;
  do
  {
    sub_1A54E330C(v155, v152, &qword_1EE799F18);
    v156 = *(int *)(v153 + 48);
    v157 = (char *)v154 + v156;
    v158 = (uint64_t)v214 + v156;
    v159 = v214[1];
    *v154 = *v214;
    v154[1] = v159;
    sub_1A54E330C(v158, (uint64_t)v154 + v156, &qword_1EE798F48);
    if (v159 > v151)
      v151 = v159;
    v160 = (uint64_t)v157;
    v152 = (uint64_t)v214;
    sub_1A5510284(v160, &qword_1EE798F48);
    sub_1A5510284(v152, &qword_1EE799F18);
    v155 += v213;
    v150 = (Class)((char *)v150 - 1);
  }
  while (v150);
  result = swift_bridgeObjectRelease();
  v138 = v211;
  v161 = v151 >= v211;
  v149 = v210;
  if (v161)
    goto LABEL_72;
  return result;
}

uint64_t type metadata accessor for SegmentResequencer.Error(uint64_t a1)
{
  return sub_1A55A1A0C(a1, (uint64_t *)&unk_1EE7A8F00);
}

uint64_t sub_1A56539B4@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _DWORD *v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t result;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t, uint64_t);
  char *v81;
  void (*v82)(char *, char *, uint64_t);
  int64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t *v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  unint64_t *v96;
  uint64_t v97;
  unint64_t *v98;
  void (*v99)(uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  char isUniquelyReferenced_nonNull_native;
  char *v104;
  _QWORD v105[3];
  char *v106;
  char *v107;
  char *v108;
  char *v109;
  char *v110;
  char *v111;
  unint64_t *v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  _DWORD *v117;
  uint64_t v118;
  _QWORD *v119;
  char *v120;
  uint64_t *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  _DWORD *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;

  v3 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798F48);
  MEMORY[0x1E0C80A78](v3);
  v111 = (char *)v105 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v109 = (char *)v105 - v6;
  MEMORY[0x1E0C80A78](v7);
  v107 = (char *)v105 - v8;
  v9 = sub_1A594AE60();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v120 = (char *)v105 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v124 = (char *)v105 - v13;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v105 - v15;
  v131 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799F18);
  v123 = *(_QWORD *)(v131 - 8);
  MEMORY[0x1E0C80A78](v131);
  v126 = (_DWORD *)((char *)v105 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v105 - v19;
  v130 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799EE8);
  v113 = *(_QWORD *)(v130 - 8);
  MEMORY[0x1E0C80A78](v130);
  v121 = (_QWORD *)((char *)v105 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v22);
  v108 = (char *)v105 - v23;
  MEMORY[0x1E0C80A78](v24);
  v115 = (uint64_t)v105 - v25;
  MEMORY[0x1E0C80A78](v26);
  v129 = (_QWORD *)((char *)v105 - v27);
  MEMORY[0x1E0C80A78](v28);
  v122 = (uint64_t)v105 - v29;
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)v105 - v31;
  v33 = *(_QWORD *)v1;
  v34 = *(unsigned int *)(v1 + 8);
  v112 = (unint64_t *)v1;
  v35 = v34 | ((unint64_t)*(unsigned __int8 *)(v1 + 12) << 32);
  v36 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v125 = sub_1A565434C(v36, v35);
  v116 = v37;
  LODWORD(v35) = v38;
  swift_bridgeObjectRelease();
  if ((_DWORD)v35 != 1)
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(a1, 1, 1, v9);
  v110 = v16;
  v128 = v10;
  v106 = a1;
  v39 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v132 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v40 = *(_QWORD **)(v33 + 16);
  v41 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v119 = v40;
  v127 = v9;
  if (v40)
  {
    v117 = v20;
    v105[1] = v105;
    v42 = 0;
    v43 = (*(unsigned __int8 *)(v123 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80);
    v105[2] = v41;
    v44 = v41 + v43;
    v118 = *(_QWORD *)(v123 + 72);
    v114 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v45 = v130;
      v46 = (uint64_t)v129 + *(int *)(v130 + 48);
      sub_1A54E330C(v44, v46, &qword_1EE799F18);
      v47 = v122;
      v48 = v122 + *(int *)(v45 + 48);
      *(_QWORD *)v122 = v42;
      sub_1A55032A0(v46, v48, &qword_1EE799F18);
      sub_1A55032A0(v47, (uint64_t)v32, &qword_1EE799EE8);
      v49 = &v32[*(int *)(v45 + 48)];
      v50 = *(unsigned int *)v49;
      LODWORD(v45) = *((_DWORD *)v49 + 1);
      v51 = v131;
      v52 = *(int *)(v131 + 48);
      v53 = (uint64_t)v117;
      v54 = (uint64_t)v117 + v52;
      *v117 = v50;
      *(_DWORD *)(v53 + 4) = v45;
      sub_1A54E330C((uint64_t)&v49[v52], v53 + v52, &qword_1EE798F48);
      v55 = *(int *)(v51 + 48);
      v56 = v126;
      v57 = (uint64_t)v126 + v55;
      *v126 = v50;
      v56[1] = v45;
      sub_1A54E330C(v54, (uint64_t)v56 + v55, &qword_1EE798F48);
      sub_1A5510284(v57, &qword_1EE798F48);
      if (v125 > v50)
      {
        sub_1A5510284(v53, &qword_1EE799F18);
      }
      else
      {
        sub_1A5510284(v53, &qword_1EE799F18);
        if (v116 > v50)
        {
          sub_1A55032A0((uint64_t)v32, v115, &qword_1EE799EE8);
          v58 = v114;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            sub_1A54F51C0(0, v58[2] + 1, 1);
          v59 = v132;
          v61 = v132[2];
          v60 = v132[3];
          if (v61 >= v60 >> 1)
          {
            sub_1A54F51C0(v60 > 1, v61 + 1, 1);
            v59 = v132;
          }
          v59[2] = v61 + 1;
          v62 = (*(unsigned __int8 *)(v113 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v113 + 80);
          v114 = v59;
          sub_1A55032A0(v115, (uint64_t)v59 + v62 + *(_QWORD *)(v113 + 72) * v61, &qword_1EE799EE8);
          goto LABEL_6;
        }
      }
      sub_1A5510284((uint64_t)v32, &qword_1EE799EE8);
LABEL_6:
      v42 = (_QWORD *)((char *)v42 + 1);
      v44 += v118;
      if (v119 == v42)
      {
        v64 = v132;
        v9 = v127;
        goto LABEL_17;
      }
    }
  }
  v64 = v39;
LABEL_17:
  swift_bridgeObjectRelease();
  v132 = v64;
  swift_retain();
  sub_1A5652350(&v132);
  swift_release();
  v65 = v132;
  sub_1A594AE24();
  v66 = v65[2];
  v119 = v65;
  if (v66)
  {
    v67 = (uint64_t)v65 + ((*(unsigned __int8 *)(v113 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v113 + 80));
    v122 = *(_QWORD *)(v113 + 72);
    swift_retain();
    v68 = &qword_1EE798F48;
    v69 = (uint64_t)v109;
    v70 = (uint64_t)v107;
    v71 = (uint64_t)v108;
    while (1)
    {
      v125 = v66;
      sub_1A54E330C(v67, v71, &qword_1EE799EE8);
      v72 = *(int *)(v130 + 48);
      v73 = v131;
      v74 = *(int *)(v131 + 48);
      v75 = (uint64_t)v129 + v72 + v74;
      sub_1A54E330C(v71 + v72 + v74, v75, v68);
      v76 = (uint64_t)v126 + *(int *)(v73 + 48);
      sub_1A55032A0(v75, v76, v68);
      sub_1A55032A0(v76, v70, v68);
      v77 = v68;
      sub_1A54E330C(v70, v69, v68);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v128 + 48))(v69, 1, v127) == 1)
        break;
      v79 = v127;
      v78 = v128;
      v80 = *(void (**)(char *, uint64_t, uint64_t))(v128 + 32);
      v81 = v120;
      v80(v120, v69, v127);
      sub_1A594AE30();
      (*(void (**)(char *, uint64_t))(v78 + 8))(v81, v79);
      v68 = v77;
      sub_1A5510284(v70, v77);
      sub_1A5510284(v71, &qword_1EE799EE8);
      v67 += v122;
      v66 = v125 - 1;
      if (v125 == 1)
      {
        v65 = v119;
        swift_release();
        v9 = v127;
        v82 = (void (*)(char *, char *, uint64_t))v80;
        v80(v110, (uint64_t)v124, v127);
        goto LABEL_23;
      }
    }
  }
  else
  {
    v82 = *(void (**)(char *, char *, uint64_t))(v128 + 32);
    v82(v110, v124, v9);
LABEL_23:
    v83 = v65[2];
    if (v83)
    {
      v132 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      sub_1A54F4BD8(0, v83, 0);
      v84 = (uint64_t)v65
          + ((*(unsigned __int8 *)(v113 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v113 + 80));
      v126 = *(_DWORD **)(v113 + 72);
      v85 = v132;
      do
      {
        v86 = v129;
        sub_1A54E330C(v84, (uint64_t)v129, &qword_1EE799EE8);
        v87 = *(int *)(v130 + 48);
        v88 = (uint64_t *)((char *)v121 + v87);
        v89 = *(int *)(v131 + 48);
        v90 = (uint64_t)v121 + v87 + v89;
        v91 = (uint64_t *)((char *)v86 + v87);
        v92 = *v86;
        *v121 = *v86;
        *v88 = *v91;
        sub_1A54E330C((uint64_t)v91 + v89, v90, &qword_1EE798F48);
        sub_1A5510284(v90, &qword_1EE798F48);
        sub_1A5510284((uint64_t)v86, &qword_1EE799EE8);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1A54F4BD8(0, v85[2] + 1, 1);
          v85 = v132;
        }
        v94 = v85[2];
        v93 = v85[3];
        if (v94 >= v93 >> 1)
        {
          sub_1A54F4BD8(v93 > 1, v94 + 1, 1);
          v85 = v132;
        }
        v85[2] = v94 + 1;
        v85[v94 + 4] = v92;
        v84 += (uint64_t)v126;
        --v83;
      }
      while (v83);
      swift_release();
      v9 = v127;
    }
    else
    {
      swift_release();
      v85 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    v95 = v85[2];
    v96 = v112;
    v97 = (uint64_t)v111;
    if (!v95)
    {
LABEL_41:
      swift_bridgeObjectRelease();
      v104 = v106;
      v82(v106, v110, v9);
      return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v128 + 56))(v104, 0, 1, v9);
    }
    v98 = v85 + 4;
    v99 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v128 + 56);
    while (1)
    {
      v101 = *v98++;
      v100 = v101;
      v99(v97, 1, 1, v9);
      v102 = *v96;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v96 = v102;
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v100 & 0x8000000000000000) != 0)
          goto LABEL_40;
      }
      else
      {
        v102 = sub_1A554B770(v102);
        *v96 = v102;
        if ((v100 & 0x8000000000000000) != 0)
        {
LABEL_40:
          __break(1u);
          goto LABEL_41;
        }
      }
      if (v100 >= *(_QWORD *)(v102 + 16))
        break;
      sub_1A5654974(v97, v102+ ((*(unsigned __int8 *)(v123 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80))+ *(_QWORD *)(v123 + 72) * v100+ *(int *)(v131 + 48));
      if (!--v95)
        goto LABEL_41;
    }
    __break(1u);
  }
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1A565434C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _DWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  void (*v38)(char *, uint64_t);
  void (*v39)(_QWORD *, _QWORD);
  uint64_t *v40;
  uint64_t v41;
  unint64_t v42;
  char *v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t result;
  void (*v57)(_QWORD *, _QWORD);
  unint64_t *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t);
  uint64_t v69;
  char *v70;
  uint64_t v71;
  _QWORD v72[4];
  uint64_t v73;

  v71 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799F18);
  v67 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v5 = (_DWORD *)((char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v6);
  v8 = (_DWORD *)((char *)&v59 - v7);
  v9 = sub_1A594A248();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v59 - v14;
  v16 = sub_1A594A26C();
  v68 = *(void (**)(char *, uint64_t))(v16 - 8);
  v69 = v16;
  MEMORY[0x1E0C80A78](v16);
  MEMORY[0x1E0C80A78](v17);
  v70 = (char *)&v59 - v18;
  MEMORY[0x1E0C80A78](v19);
  MEMORY[0x1E0C80A78](v20);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v59 - v22;
  MEMORY[0x1E0C80A78](v24);
  v29 = (char *)&v59 - v28;
  if ((a2 & 0xFFFFFFFFFFLL) == 0)
    return 0;
  v66 = v10;
  v60 = v27;
  v61 = v26;
  v62 = v25;
  v63 = v12;
  v59 = a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594A260();
  v30 = *(_QWORD *)(a1 + 16);
  v31 = a1;
  if (v30)
  {
    v64 = v9;
    v65 = a1;
    v32 = a1 + ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80));
    v33 = *(_QWORD *)(v67 + 72);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v34 = v30;
    while (1)
    {
      sub_1A54E330C(v32, (uint64_t)v8, &qword_1EE799F18);
      if (v8[1] < *v8)
        break;
      sub_1A594A218();
      sub_1A5510284((uint64_t)v8, &qword_1EE799F18);
      v32 += v33;
      if (!--v34)
      {
        v31 = v65;
        swift_bridgeObjectRelease();
        v9 = v64;
        goto LABEL_7;
      }
    }
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
LABEL_7:
  v35 = v68;
  v36 = v69;
  v37 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v68 + 4);
  v37(v29, v23, v69);
  swift_bridgeObjectRelease();
  sub_1A594A254();
  v38 = (void (*)(char *, uint64_t))*((_QWORD *)v35 + 1);
  v38(v29, v36);
  sub_1A55E1698(&qword_1EE796518, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1358], MEMORY[0x1E0CB1378]);
  sub_1A594BD60();
  sub_1A594BDB4();
  if (v73 == v72[0])
  {
    (*(void (**)(char *, uint64_t))(v66 + 8))(v15, v9);
    return 0;
  }
  v39 = (void (*)(_QWORD *, _QWORD))sub_1A594BED4();
  v41 = *v40;
  v42 = v40[1];
  v39(v72, 0);
  v43 = v15;
  v44 = *(void (**)(char *, uint64_t))(v66 + 8);
  v44(v43, v9);
  if (v41)
    return 0;
  v68 = v44;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594A260();
  if (v30)
  {
    v45 = v31 + ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80));
    v46 = v31;
    v47 = *(_QWORD *)(v67 + 72);
    v65 = v46;
    v66 = v42;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    do
    {
      sub_1A54E330C(v45, (uint64_t)v5, &qword_1EE799F18);
      v48 = (char *)v5 + *(int *)(v71 + 48);
      v49 = sub_1A594AE60();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 48))(v48, 1, v49) != 1)
      {
        if (v5[1] < *v5)
          goto LABEL_29;
        sub_1A594A218();
      }
      sub_1A5510284((uint64_t)v5, &qword_1EE799F18);
      v45 += v47;
      --v30;
    }
    while (v30);
    swift_bridgeObjectRelease();
    v42 = v66;
  }
  v50 = v60;
  v51 = v69;
  v37(v60, v70, v69);
  swift_bridgeObjectRelease();
  v52 = v62;
  sub_1A594A1D0();
  v53 = v61;
  sub_1A594A1DC();
  v38(v52, v51);
  v38(v50, v51);
  v54 = v63;
  sub_1A594A254();
  v38(v53, v51);
  sub_1A594BD60();
  sub_1A594BDB4();
  if (v73 != v72[0])
  {
    v57 = (void (*)(_QWORD *, _QWORD))sub_1A594BED4();
    v42 = *v58;
    v57(v72, 0);
    v68(v54, v9);
    return v42;
  }
  v55 = v59;
  v68(v54, v9);
  if ((v55 & 0xFF00000000) == 0 && v42 == v55)
    return 0;
  if ((v42 & 0x8000000000000000) == 0 && !HIDWORD(v42))
    return v42;
LABEL_30:
  result = sub_1A594C9B4();
  __break(1u);
  return result;
}

BOOL sub_1A5654950(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

double sub_1A5654968@<D0>(_QWORD *a1@<X8>)
{
  double *v1;
  double result;

  result = *v1;
  *a1 = *(_QWORD *)v1;
  return result;
}

uint64_t sub_1A5654974(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798F48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1A56549BC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint32x2_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint32x2_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint32x2_t *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint32x2_t *v45;
  uint32x2_t v46;
  __int128 v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint32x2_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint32x2_t *v57;
  uint32x2_t v58;
  uint64_t v59;
  uint32x2_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint32x2_t *v63;
  uint32x2_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint32x2_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint32x2_t v91;
  uint64_t v92;
  uint32x2_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint32x2_t *v96;
  uint32x2_t v97;
  uint64_t v98;
  uint64_t v99;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v101;
  unint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  BOOL v117;
  unint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  BOOL v127;
  uint64_t v128;
  char v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  BOOL v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  unint64_t v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  unint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  uint64_t *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  _QWORD *v172;
  _QWORD *v173;
  _QWORD *v174;
  _QWORD *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  __int128 v180;
  uint64_t v181;
  uint64_t v182;

  v2 = v1;
  v177 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799EE8);
  v168 = *(_QWORD *)(v177 - 8);
  MEMORY[0x1E0C80A78](v177);
  v164 = (uint64_t)&v158 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v178 = (uint64_t)&v158 - v6;
  MEMORY[0x1E0C80A78](v7);
  v173 = (uint64_t *)((char *)&v158 - v8);
  MEMORY[0x1E0C80A78](v9);
  v172 = (uint64_t *)((char *)&v158 - v10);
  MEMORY[0x1E0C80A78](v11);
  v175 = (uint64_t *)((char *)&v158 - v12);
  MEMORY[0x1E0C80A78](v13);
  v174 = (uint64_t *)((char *)&v158 - v14);
  v15 = a1[1];
  v16 = sub_1A594CC78();
  if (v16 >= v15)
  {
    if (v15 < 0)
      goto LABEL_137;
    if (v15)
      sub_1A5655610(0, v15, 1, a1);
    return;
  }
  if (v15 >= 0)
    v17 = v15;
  else
    v17 = v15 + 1;
  if (v15 < -1)
    goto LABEL_145;
  v161 = v16;
  if (v15 < 2)
  {
    v21 = (char *)MEMORY[0x1E0DEE9D8];
    v166 = MEMORY[0x1E0DEE9D8]
         + ((*(unsigned __int8 *)(v168 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v168 + 80));
    v160 = MEMORY[0x1E0DEE9D8];
    if (v15 != 1)
    {
      v23 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_103:
      if (v23 >= 2)
      {
        v152 = *a1;
        do
        {
          v153 = v23 - 2;
          if (v23 < 2)
            goto LABEL_132;
          if (!v152)
            goto LABEL_144;
          v154 = *(_QWORD *)&v21[16 * v153 + 32];
          v155 = *(_QWORD *)&v21[16 * v23 + 24];
          sub_1A5655948(v152 + *(_QWORD *)(v168 + 72) * v154, v152 + *(_QWORD *)(v168 + 72) * *(_QWORD *)&v21[16 * v23 + 16], v152 + *(_QWORD *)(v168 + 72) * v155, v166);
          if (v2)
            break;
          if (v155 < v154)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v21 = sub_1A558A0A4((uint64_t)v21);
          if (v153 >= *((_QWORD *)v21 + 2))
            goto LABEL_134;
          v156 = &v21[16 * v153 + 32];
          *(_QWORD *)v156 = v154;
          *((_QWORD *)v156 + 1) = v155;
          v157 = *((_QWORD *)v21 + 2);
          if (v23 > v157)
            goto LABEL_135;
          memmove(&v21[16 * v23 + 16], &v21[16 * v23 + 32], 16 * (v157 - v23));
          *((_QWORD *)v21 + 2) = v157 - 1;
          v23 = v157 - 1;
        }
        while (v157 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v160 + 16) = 0;
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    v18 = v17 >> 1;
    v19 = sub_1A594BA18();
    *(_QWORD *)(v19 + 16) = v18;
    v20 = *(unsigned __int8 *)(v168 + 80);
    v160 = v19;
    v166 = v19 + ((v20 + 32) & ~v20);
  }
  v22 = 0;
  v21 = (char *)MEMORY[0x1E0DEE9D8];
  v167 = a1;
  while (1)
  {
    v24 = v22;
    v25 = v22 + 1;
    if (v22 + 1 < v15)
    {
      v26 = *a1;
      v27 = *(_QWORD *)(v168 + 72);
      v182 = v27;
      v176 = v22 + 1;
      v28 = v174;
      sub_1A54E330C(v26 + v27 * v25, (uint64_t)v174, &qword_1EE799EE8);
      v165 = v24;
      v181 = v15;
      sub_1A54E330C(v26 + v27 * v24, (uint64_t)v175, &qword_1EE799EE8);
      v29 = v177;
      v30 = *(int *)(v177 + 48);
      v31 = v172;
      v32 = (uint32x2_t *)((char *)v172 + v30);
      v33 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799F18);
      v34 = *(int *)(v33 + 48);
      v35 = (uint64_t)v32 + v34;
      *v31 = *v28;
      v36 = (uint64_t)v28 + v30 + v34;
      v37 = *(uint32x2_t *)((char *)v28 + v30);
      *v32 = v37;
      v38 = v26;
      v39 = v35;
      sub_1A54E330C(v36, v35, &qword_1EE798F48);
      v40 = *(int *)(v29 + 48);
      v41 = (uint32x2_t *)((char *)v173 + v40);
      v179 = v33;
      v42 = *(int *)(v33 + 48);
      v43 = (uint64_t)v173 + v40 + v42;
      v44 = v175;
      v45 = (uint32x2_t *)((char *)v175 + v40);
      *v173 = *v175;
      v46 = *v45;
      *v41 = *v45;
      sub_1A54E330C((uint64_t)v45 + v42, v43, &qword_1EE798F48);
      *(uint32x2_t *)&v47 = vcgt_u32(v46, v37);
      v180 = v47;
      sub_1A5510284(v43, &qword_1EE798F48);
      sub_1A5510284(v39, &qword_1EE798F48);
      v15 = v181;
      v24 = v165;
      sub_1A5510284((uint64_t)v44, &qword_1EE799EE8);
      sub_1A5510284((uint64_t)v174, &qword_1EE799EE8);
      v25 = v24 + 2;
      v170 = v38;
      if (v24 + 2 < v15)
      {
        v162 = v21;
        v159 = v2;
        v176 *= v182;
        v171 = v182 * v25;
        while (1)
        {
          v48 = v25;
          v49 = v174;
          sub_1A54E330C(v38 + v171, (uint64_t)v174, &qword_1EE799EE8);
          v50 = v175;
          sub_1A54E330C(v38 + v176, (uint64_t)v175, &qword_1EE799EE8);
          v51 = v177;
          v52 = *(int *)(v177 + 48);
          v53 = (uint32x2_t *)((char *)v172 + v52);
          v54 = v179;
          v55 = *(int *)(v179 + 48);
          v56 = (uint64_t)v172 + v52 + v55;
          v57 = (uint32x2_t *)((char *)v49 + v52);
          *v172 = *v49;
          v58 = *v57;
          *v53 = *v57;
          sub_1A54E330C((uint64_t)v57 + v55, v56, &qword_1EE798F48);
          v59 = *(int *)(v51 + 48);
          v60 = (uint32x2_t *)((char *)v173 + v59);
          v61 = *(int *)(v54 + 48);
          v62 = (uint64_t)v173 + v59 + v61;
          v63 = (uint32x2_t *)((char *)v50 + v59);
          *v173 = *v50;
          v64 = *v63;
          *v60 = *v63;
          sub_1A54E330C((uint64_t)v63 + v61, v62, &qword_1EE798F48);
          sub_1A5510284(v62, &qword_1EE798F48);
          sub_1A5510284(v56, &qword_1EE798F48);
          sub_1A5510284((uint64_t)v50, &qword_1EE799EE8);
          sub_1A5510284((uint64_t)v49, &qword_1EE799EE8);
          if ((veor_s8(*(int8x8_t *)&v180, (int8x8_t)vcge_u32(v58, v64)).u8[0] & 1) == 0)
            break;
          v25 = v48 + 1;
          v38 += v182;
          v15 = v181;
          if (v181 == v48 + 1)
          {
            v25 = v181;
            v2 = v159;
            v21 = v162;
            v24 = v165;
            goto LABEL_22;
          }
        }
        v2 = v159;
        v25 = v48;
        v21 = v162;
        v24 = v165;
        v15 = v181;
      }
LABEL_22:
      a1 = v167;
      if ((v180 & 1) != 0)
      {
        if (v25 < v24)
          goto LABEL_138;
        if (v24 < v25)
        {
          v162 = v21;
          v65 = 0;
          v66 = v182;
          v67 = v182 * (v25 - 1);
          v68 = v25 * v182;
          v69 = v24;
          v70 = v24 * v182;
          do
          {
            if (v69 != v25 + v65 - 1)
            {
              v72 = v170;
              if (!v170)
                goto LABEL_143;
              v73 = v170 + v70;
              *(_QWORD *)&v180 = v170 + v67;
              sub_1A55032A0(v170 + v70, v164, &qword_1EE799EE8);
              if (v70 < v67 || v73 >= v72 + v68)
              {
                v71 = v180;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                v71 = v180;
                if (v70 != v67)
                  swift_arrayInitWithTakeBackToFront();
              }
              sub_1A55032A0(v164, v71, &qword_1EE799EE8);
              v66 = v182;
            }
            ++v69;
            --v65;
            v67 -= v66;
            v68 -= v66;
            v70 += v66;
          }
          while (v69 < v25 + v65);
          a1 = v167;
          v21 = v162;
          v24 = v165;
          v15 = v181;
        }
      }
    }
    if (v25 < v15)
    {
      if (__OFSUB__(v25, v24))
        goto LABEL_136;
      if (v25 - v24 < v161)
        break;
    }
LABEL_54:
    if (v25 < v24)
      goto LABEL_131;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v176 = v25;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v21 = sub_1A5589B40(0, *((_QWORD *)v21 + 2) + 1, 1, v21);
    v102 = *((_QWORD *)v21 + 2);
    v101 = *((_QWORD *)v21 + 3);
    v23 = v102 + 1;
    if (v102 >= v101 >> 1)
      v21 = sub_1A5589B40((char *)(v101 > 1), v102 + 1, 1, v21);
    *((_QWORD *)v21 + 2) = v23;
    v103 = v21 + 32;
    v104 = &v21[16 * v102 + 32];
    v105 = v176;
    *(_QWORD *)v104 = v24;
    *((_QWORD *)v104 + 1) = v105;
    if (v102)
    {
      while (1)
      {
        v106 = v23 - 1;
        if (v23 >= 4)
        {
          v111 = &v103[16 * v23];
          v112 = *((_QWORD *)v111 - 8);
          v113 = *((_QWORD *)v111 - 7);
          v117 = __OFSUB__(v113, v112);
          v114 = v113 - v112;
          if (v117)
            goto LABEL_120;
          v116 = *((_QWORD *)v111 - 6);
          v115 = *((_QWORD *)v111 - 5);
          v117 = __OFSUB__(v115, v116);
          v109 = v115 - v116;
          v110 = v117;
          if (v117)
            goto LABEL_121;
          v118 = v23 - 2;
          v119 = &v103[16 * v23 - 32];
          v121 = *(_QWORD *)v119;
          v120 = *((_QWORD *)v119 + 1);
          v117 = __OFSUB__(v120, v121);
          v122 = v120 - v121;
          if (v117)
            goto LABEL_123;
          v117 = __OFADD__(v109, v122);
          v123 = v109 + v122;
          if (v117)
            goto LABEL_126;
          if (v123 >= v114)
          {
            v141 = &v103[16 * v106];
            v143 = *(_QWORD *)v141;
            v142 = *((_QWORD *)v141 + 1);
            v117 = __OFSUB__(v142, v143);
            v144 = v142 - v143;
            if (v117)
              goto LABEL_130;
            v134 = v109 < v144;
            goto LABEL_91;
          }
        }
        else
        {
          if (v23 != 3)
          {
            v135 = *((_QWORD *)v21 + 4);
            v136 = *((_QWORD *)v21 + 5);
            v117 = __OFSUB__(v136, v135);
            v128 = v136 - v135;
            v129 = v117;
            goto LABEL_85;
          }
          v108 = *((_QWORD *)v21 + 4);
          v107 = *((_QWORD *)v21 + 5);
          v117 = __OFSUB__(v107, v108);
          v109 = v107 - v108;
          v110 = v117;
        }
        if ((v110 & 1) != 0)
          goto LABEL_122;
        v118 = v23 - 2;
        v124 = &v103[16 * v23 - 32];
        v126 = *(_QWORD *)v124;
        v125 = *((_QWORD *)v124 + 1);
        v127 = __OFSUB__(v125, v126);
        v128 = v125 - v126;
        v129 = v127;
        if (v127)
          goto LABEL_125;
        v130 = &v103[16 * v106];
        v132 = *(_QWORD *)v130;
        v131 = *((_QWORD *)v130 + 1);
        v117 = __OFSUB__(v131, v132);
        v133 = v131 - v132;
        if (v117)
          goto LABEL_128;
        if (__OFADD__(v128, v133))
          goto LABEL_129;
        if (v128 + v133 >= v109)
        {
          v134 = v109 < v133;
LABEL_91:
          if (v134)
            v106 = v118;
          goto LABEL_93;
        }
LABEL_85:
        if ((v129 & 1) != 0)
          goto LABEL_124;
        v137 = &v103[16 * v106];
        v139 = *(_QWORD *)v137;
        v138 = *((_QWORD *)v137 + 1);
        v117 = __OFSUB__(v138, v139);
        v140 = v138 - v139;
        if (v117)
          goto LABEL_127;
        if (v140 < v128)
          goto LABEL_14;
LABEL_93:
        v145 = v106 - 1;
        if (v106 - 1 >= v23)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!*v167)
          goto LABEL_142;
        v146 = v21;
        v147 = &v103[16 * v145];
        v148 = *(_QWORD *)v147;
        v149 = &v103[16 * v106];
        v150 = *((_QWORD *)v149 + 1);
        sub_1A5655948(*v167 + *(_QWORD *)(v168 + 72) * *(_QWORD *)v147, *v167 + *(_QWORD *)(v168 + 72) * *(_QWORD *)v149, *v167 + *(_QWORD *)(v168 + 72) * v150, v166);
        if (v2)
          goto LABEL_114;
        if (v150 < v148)
          goto LABEL_117;
        if (v106 > *((_QWORD *)v146 + 2))
          goto LABEL_118;
        *(_QWORD *)v147 = v148;
        *(_QWORD *)&v103[16 * v145 + 8] = v150;
        v151 = *((_QWORD *)v146 + 2);
        if (v106 >= v151)
          goto LABEL_119;
        v21 = v146;
        v23 = v151 - 1;
        memmove(&v103[16 * v106], v149 + 16, 16 * (v151 - 1 - v106));
        *((_QWORD *)v146 + 2) = v151 - 1;
        if (v151 <= 2)
          goto LABEL_14;
      }
    }
    v23 = 1;
LABEL_14:
    a1 = v167;
    v15 = v167[1];
    v22 = v176;
    if (v176 >= v15)
      goto LABEL_103;
  }
  if (__OFADD__(v24, v161))
    goto LABEL_139;
  if (v24 + v161 >= v15)
    v74 = v15;
  else
    v74 = v24 + v161;
  if (v74 >= v24)
  {
    if (v25 != v74)
    {
      v165 = v24;
      v162 = v21;
      v159 = v2;
      v75 = *(_QWORD *)(v168 + 72);
      v76 = v75 * (v25 - 1);
      v169 = v75;
      v77 = v25 * v75;
      v163 = v74;
      do
      {
        v79 = 0;
        v80 = v165;
        v176 = v25;
        v170 = v77;
        v171 = v76;
        while (1)
        {
          v181 = v80;
          v81 = *a1;
          *(_QWORD *)&v180 = v77 + v79;
          v82 = v174;
          sub_1A54E330C(v77 + v79 + v81, (uint64_t)v174, &qword_1EE799EE8);
          v179 = v76 + v79;
          v83 = v175;
          sub_1A54E330C(v76 + v79 + v81, (uint64_t)v175, &qword_1EE799EE8);
          v84 = a1;
          v85 = v177;
          v86 = *(int *)(v177 + 48);
          v87 = v172;
          v88 = (uint32x2_t *)((char *)v172 + v86);
          v89 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799F18);
          v90 = *(int *)(v89 + 48);
          v182 = (uint64_t)v88 + v90;
          *v87 = *v82;
          v91 = *(uint32x2_t *)((char *)v82 + v86);
          *v88 = v91;
          sub_1A54E330C((uint64_t)v82 + v86 + v90, (uint64_t)v88 + v90, &qword_1EE798F48);
          v92 = *(int *)(v85 + 48);
          v93 = (uint32x2_t *)((char *)v173 + v92);
          v94 = *(int *)(v89 + 48);
          v95 = (uint64_t)v173 + v92 + v94;
          v96 = (uint32x2_t *)((char *)v83 + v92);
          *v173 = *v83;
          v97 = *v96;
          *v93 = *v96;
          sub_1A54E330C((uint64_t)v96 + v94, v95, &qword_1EE798F48);
          sub_1A5510284(v95, &qword_1EE798F48);
          sub_1A5510284(v182, &qword_1EE798F48);
          sub_1A5510284((uint64_t)v83, &qword_1EE799EE8);
          sub_1A5510284((uint64_t)v82, &qword_1EE799EE8);
          if ((vcgt_u32(v97, v91).u8[0] & 1) == 0)
            break;
          v98 = *v84;
          if (!*v84)
            goto LABEL_141;
          a1 = v84;
          v77 = v170;
          v76 = v171;
          v99 = v98 + v171 + v79;
          sub_1A55032A0(v98 + v170 + v79, v178, &qword_1EE799EE8);
          swift_arrayInitWithTakeFrontToBack();
          sub_1A55032A0(v178, v99, &qword_1EE799EE8);
          v79 -= v169;
          v80 = v181 + 1;
          v78 = v176;
          if (v176 == v181 + 1)
            goto LABEL_47;
        }
        a1 = v84;
        v78 = v176;
        v77 = v170;
        v76 = v171;
LABEL_47:
        v25 = v78 + 1;
        v76 += v169;
        v77 += v169;
      }
      while (v25 != v163);
      v25 = v163;
      v2 = v159;
      v21 = v162;
      v24 = v165;
    }
    goto LABEL_54;
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  sub_1A594C9B4();
  __break(1u);
}

void sub_1A5655610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint32x2_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint32x2_t v30;
  uint64_t v31;
  uint64_t v32;
  uint32x2_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint32x2_t *v36;
  uint32x2_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  char *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;

  v54 = a4;
  v42 = a1;
  v50 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799EE8);
  MEMORY[0x1E0C80A78](v50);
  v51 = (uint64_t)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v46 = (uint64_t *)((char *)&v40 - v8);
  MEMORY[0x1E0C80A78](v9);
  v45 = (char *)&v40 - v10;
  MEMORY[0x1E0C80A78](v11);
  v44 = (uint64_t *)((char *)&v40 - v12);
  MEMORY[0x1E0C80A78](v13);
  v43 = (uint64_t *)((char *)&v40 - v15);
  v49 = a3;
  v41 = a2;
  if (a3 != a2)
  {
    v16 = *(_QWORD *)(v14 + 72);
    v17 = v16 * (v49 - 1);
    v47 = v16;
    v18 = v16 * v49;
LABEL_5:
    v19 = 0;
    v55 = v42;
    v48 = v17;
    while (1)
    {
      v20 = *v54;
      v53 = v18 + v19;
      v21 = v43;
      sub_1A54E330C(v18 + v19 + v20, (uint64_t)v43, &qword_1EE799EE8);
      v52 = v17 + v19;
      v22 = v44;
      sub_1A54E330C(v17 + v19 + v20, (uint64_t)v44, &qword_1EE799EE8);
      v23 = v50;
      v24 = *(int *)(v50 + 48);
      v25 = v18;
      v26 = v45;
      v27 = (uint32x2_t *)&v45[v24];
      v28 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799F18);
      v29 = *(int *)(v28 + 48);
      *v26 = *v21;
      v18 = v25;
      v30 = *(uint32x2_t *)((char *)v21 + v24);
      *v27 = v30;
      v31 = (uint64_t)v27 + v29;
      sub_1A54E330C((uint64_t)v21 + v24 + v29, v31, &qword_1EE798F48);
      v32 = *(int *)(v23 + 48);
      v17 = v48;
      v33 = (uint32x2_t *)((char *)v46 + v32);
      v34 = *(int *)(v28 + 48);
      v35 = (uint64_t)v46 + v32 + v34;
      v36 = (uint32x2_t *)((char *)v22 + v32);
      *v46 = *v22;
      v37 = *v36;
      *v33 = *v36;
      sub_1A54E330C((uint64_t)v36 + v34, v35, &qword_1EE798F48);
      sub_1A5510284(v35, &qword_1EE798F48);
      sub_1A5510284(v31, &qword_1EE798F48);
      sub_1A5510284((uint64_t)v22, &qword_1EE799EE8);
      sub_1A5510284((uint64_t)v21, &qword_1EE799EE8);
      if ((vcgt_u32(v37, v30).u8[0] & 1) == 0)
      {
LABEL_4:
        v17 += v47;
        v18 = v25 + v47;
        if (++v49 == v41)
          return;
        goto LABEL_5;
      }
      v38 = *v54;
      if (!*v54)
        break;
      v39 = v38 + v17 + v19;
      sub_1A55032A0(v38 + v25 + v19, v51, &qword_1EE799EE8);
      swift_arrayInitWithTakeFrontToBack();
      sub_1A55032A0(v51, v39, &qword_1EE799EE8);
      v19 -= v47;
      if (v49 == ++v55)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_1A5655948(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint32x2_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint32x2_t v34;
  uint64_t v35;
  uint32x2_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint32x2_t *v39;
  uint32x2_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint32x2_t *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint32x2_t v59;
  uint64_t v60;
  uint32x2_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint32x2_t *v64;
  uint32x2_t v65;
  BOOL v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t result;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  char *v79;
  _QWORD *v80;
  char *v81;
  _QWORD *v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;

  v83 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799EE8);
  MEMORY[0x1E0C80A78](v83);
  v82 = (uint64_t *)((char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v9);
  v81 = (char *)&v72 - v10;
  MEMORY[0x1E0C80A78](v11);
  v80 = (uint64_t *)((char *)&v72 - v12);
  MEMORY[0x1E0C80A78](v13);
  v79 = (char *)&v72 - v14;
  v16 = *(_QWORD *)(v15 + 72);
  if (!v16)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (a2 - a1 == 0x8000000000000000 && v16 == -1)
    goto LABEL_62;
  v17 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v16 == -1)
    goto LABEL_63;
  v18 = (uint64_t)(a2 - a1) / v16;
  v86 = a1;
  v85 = a4;
  v19 = v17 / v16;
  if (v18 >= v17 / v16)
  {
    if ((v19 & 0x8000000000000000) == 0)
    {
      v21 = v19 * v16;
      if (a4 < a2 || a2 + v21 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v46 = a4 + v21;
      v84 = a4 + v21;
      v86 = a2;
      if (v21 >= 1 && a1 < a2)
      {
        v48 = -v16;
        v74 = v48;
        v75 = a4;
        v73 = a1;
        v50 = v79;
        v49 = v80;
        v51 = v83;
        do
        {
          v77 = a2;
          v78 = a3 + v48;
          sub_1A54E330C(v46 + v48, (uint64_t)v50, &qword_1EE799EE8);
          v76 = a2 + v48;
          sub_1A54E330C(a2 + v48, (uint64_t)v49, &qword_1EE799EE8);
          v52 = *(int *)(v51 + 48);
          v53 = v81;
          v54 = (uint32x2_t *)&v81[v52];
          v55 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799F18);
          v56 = *(int *)(v55 + 48);
          v57 = a3;
          v58 = (uint64_t)v54 + v56;
          *v53 = *v50;
          v59 = *(uint32x2_t *)((char *)v50 + v52);
          *v54 = v59;
          sub_1A54E330C((uint64_t)v50 + v52 + v56, (uint64_t)v54 + v56, &qword_1EE798F48);
          v60 = *(int *)(v51 + 48);
          v61 = (uint32x2_t *)((char *)v82 + v60);
          v62 = *(int *)(v55 + 48);
          v63 = (uint64_t)v82 + v60 + v62;
          v64 = (uint32x2_t *)((char *)v49 + v60);
          *v82 = *v49;
          v65 = *v64;
          *v61 = *v64;
          sub_1A54E330C((uint64_t)v64 + v62, v63, &qword_1EE798F48);
          sub_1A5510284(v63, &qword_1EE798F48);
          sub_1A5510284(v58, &qword_1EE798F48);
          sub_1A5510284((uint64_t)v49, &qword_1EE799EE8);
          sub_1A5510284((uint64_t)v50, &qword_1EE799EE8);
          if ((vcgt_u32(v65, v59).u8[0] & 1) != 0)
          {
            v48 = v74;
            a3 = v78;
            if (v57 < v77 || v78 >= v77)
            {
              v67 = v76;
              swift_arrayInitWithTakeFrontToBack();
              v68 = v75;
              v69 = v73;
            }
            else
            {
              v66 = v57 == v77;
              v68 = v75;
              v67 = v76;
              v69 = v73;
              if (!v66)
                swift_arrayInitWithTakeBackToFront();
            }
            v86 += v48;
          }
          else
          {
            v67 = v77;
            a3 = v78;
            v70 = v84;
            v84 += v74;
            v48 = v74;
            if (v57 < v70 || v78 >= v70)
            {
              swift_arrayInitWithTakeFrontToBack();
              v68 = v75;
            }
            else
            {
              v68 = v75;
              if (v57 != v70)
                swift_arrayInitWithTakeBackToFront();
            }
            v69 = v73;
          }
          v46 = v84;
          if (v84 <= v68)
            break;
          a2 = v67;
        }
        while (v67 > v69);
      }
      goto LABEL_60;
    }
  }
  else if ((v18 & 0x8000000000000000) == 0)
  {
    v20 = v18 * v16;
    if (a4 < a1 || a1 + v20 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v78 = a4 + v20;
    v84 = a4 + v20;
    if (v20 >= 1 && a2 < a3)
    {
      v76 = v16;
      v77 = a3;
      v23 = v79;
      do
      {
        sub_1A54E330C(a2, (uint64_t)v23, &qword_1EE799EE8);
        v24 = a4;
        v25 = v80;
        sub_1A54E330C(v24, (uint64_t)v80, &qword_1EE799EE8);
        v26 = v83;
        v27 = *(int *)(v83 + 48);
        v28 = a2;
        v29 = v81;
        v30 = (uint32x2_t *)&v81[v27];
        v31 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799F18);
        v32 = *(int *)(v31 + 48);
        v33 = (uint64_t)v30 + v32;
        *v29 = *v23;
        v34 = *(uint32x2_t *)((char *)v23 + v27);
        *v30 = v34;
        sub_1A54E330C((uint64_t)v23 + v27 + v32, (uint64_t)v30 + v32, &qword_1EE798F48);
        v35 = *(int *)(v26 + 48);
        v36 = (uint32x2_t *)((char *)v82 + v35);
        v37 = *(int *)(v31 + 48);
        v38 = (uint64_t)v82 + v35 + v37;
        v39 = (uint32x2_t *)((char *)v25 + v35);
        *v82 = *v25;
        v40 = *v39;
        *v36 = *v39;
        sub_1A54E330C((uint64_t)v39 + v37, v38, &qword_1EE798F48);
        sub_1A5510284(v38, &qword_1EE798F48);
        sub_1A5510284(v33, &qword_1EE798F48);
        sub_1A5510284((uint64_t)v25, &qword_1EE799EE8);
        sub_1A5510284((uint64_t)v23, &qword_1EE799EE8);
        v41 = v86;
        if ((vcgt_u32(v40, v34).u8[0] & 1) != 0)
        {
          v42 = v76;
          v43 = v28 + v76;
          if (v86 < v28 || v86 >= v43)
          {
            swift_arrayInitWithTakeFrontToBack();
            v44 = v77;
          }
          else
          {
            v44 = v77;
            if (v86 == v28)
              v41 = v28;
            else
              swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          v42 = v76;
          v45 = v85 + v76;
          if (v86 < v85 || v86 >= v45)
          {
            swift_arrayInitWithTakeFrontToBack();
            v44 = v77;
          }
          else
          {
            v44 = v77;
            if (v86 != v85)
              swift_arrayInitWithTakeBackToFront();
          }
          v85 = v45;
          v43 = v28;
        }
        v86 = v41 + v42;
        a4 = v85;
        if (v85 >= v78)
          break;
        a2 = v43;
      }
      while (v43 < v44);
    }
LABEL_60:
    sub_1A5589F94(&v86, &v85, (uint64_t *)&v84);
    return 1;
  }
LABEL_64:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t getEnumTagSinglePayload for SegmentResequencer.ByteCount(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 5))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 4);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SegmentResequencer.ByteCount(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 5) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 5) = 0;
    if (a2)
      *(_BYTE *)(result + 4) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A5656048(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 4) <= 1u)
    return *(unsigned __int8 *)(a1 + 4);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1A5656060(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_DWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 4) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SegmentResequencer.ByteCount()
{
  return &type metadata for SegmentResequencer.ByteCount;
}

ValueMetadata *type metadata accessor for SegmentResequencer()
{
  return &type metadata for SegmentResequencer;
}

_QWORD *__swift_memcpy8_4_0(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for SegmentResequencer.SegmentRange()
{
  return &type metadata for SegmentResequencer.SegmentRange;
}

uint64_t *sub_1A56560B4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_1A594AE60();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_1A565617C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_1A594AE60();
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

void *sub_1A56561E4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1A594AE60();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_1A5656288(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_1A594AE60();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *sub_1A5656378(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1A594AE60();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_1A565641C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_1A594AE60();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t sub_1A565650C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A5656518(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_1A594AE60();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t sub_1A5656564()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A5656570(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = sub_1A594AE60();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1A56565C0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1A594AE60();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_1A56565F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A594AE60();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

uint64_t type metadata accessor for SegmentResequencer.PopResult(uint64_t a1)
{
  return sub_1A55A1A0C(a1, (uint64_t *)&unk_1EE797840);
}

uint64_t sub_1A565664C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A594AE60();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1A56566A0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      v11 = sub_1A594A26C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      v12 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8EF8);
      *(_DWORD *)((char *)a1 + *(int *)(v12 + 48)) = *(_DWORD *)((char *)a2 + *(int *)(v12 + 48));
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 2)
    {
      v8 = sub_1A594A26C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8EE8);
      *(uint64_t *)((char *)a1 + *(int *)(v9 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v9 + 48));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
  }
  return a1;
}

uint64_t sub_1A56567C0(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((result & 0xFFFFFFFE) == 2)
  {
    v3 = sub_1A594A26C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

char *sub_1A5656810(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    v9 = sub_1A594A26C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    v10 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8EF8);
    *(_DWORD *)&a1[*(int *)(v10 + 48)] = *(_DWORD *)&a2[*(int *)(v10 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 2)
  {
    v7 = sub_1A594A26C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8EE8);
    *(_QWORD *)&a1[*(int *)(v8 + 48)] = *(_QWORD *)&a2[*(int *)(v8 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_1A5656908(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_1A55034FC((uint64_t)a1, type metadata accessor for SegmentResequencer.Error);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      v9 = sub_1A594A26C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      v10 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8EF8);
      *(_DWORD *)&a1[*(int *)(v10 + 48)] = *(_DWORD *)&a2[*(int *)(v10 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 2)
    {
      v7 = sub_1A594A26C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8EE8);
      *(_QWORD *)&a1[*(int *)(v8 + 48)] = *(_QWORD *)&a2[*(int *)(v8 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

char *sub_1A5656A18(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    v9 = sub_1A594A26C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    v10 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8EF8);
    *(_DWORD *)&a1[*(int *)(v10 + 48)] = *(_DWORD *)&a2[*(int *)(v10 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 2)
  {
    v7 = sub_1A594A26C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8EE8);
    *(_QWORD *)&a1[*(int *)(v8 + 48)] = *(_QWORD *)&a2[*(int *)(v8 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_1A5656B10(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_1A55034FC((uint64_t)a1, type metadata accessor for SegmentResequencer.Error);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      v9 = sub_1A594A26C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      v10 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8EF8);
      *(_DWORD *)&a1[*(int *)(v10 + 48)] = *(_DWORD *)&a2[*(int *)(v10 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 2)
    {
      v7 = sub_1A594A26C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8EE8);
      *(_QWORD *)&a1[*(int *)(v8 + 48)] = *(_QWORD *)&a2[*(int *)(v8 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1A5656C20()
{
  uint64_t result;
  unint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  const char *v8;
  void *v9;
  const char *v10;

  v4 = MEMORY[0x1E0DE9D30] + 64;
  v5 = MEMORY[0x1E0DE9D38] + 64;
  result = sub_1A594A26C();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v6 = &v3;
    swift_getTupleTypeLayout2();
    v7 = &v2;
    v8 = "\b";
    v9 = &unk_1A59ABC58;
    v10 = "\b";
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void MessageIdentifierSet.suffix(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t TupleTypeMetadata2;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  char v46;
  uint64_t v47;
  unsigned int v48;
  unsigned __int8 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned __int8 v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  void (*v78)(char *, char *, uint64_t);
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  unsigned int (*v83)(char *, uint64_t, uint64_t);
  char *v84;
  uint64_t v85;
  void (*v86)(char *, char *, uint64_t);
  char *v87;
  char *v88;
  char *v89;
  char *v90;
  char v91;
  void (*v92)(char *, uint64_t);
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  char *v98;
  char *v99;
  void (*v100)(char *, char *, uint64_t);
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  void (*v117)(uint64_t, uint64_t);
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  char *v126;
  char *v127;
  unint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD v148[2];
  unint64_t v149;
  unsigned int v150;
  unsigned __int8 v151;
  uint64_t v152;
  uint64_t v153;
  unsigned int v154;
  unsigned __int8 v155;
  uint64_t v156;
  int v157;
  char v158;
  _QWORD v159[2];

  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v12 = (char *)&v118 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v118 - v14;
  v135 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](v16);
  v127 = (char *)&v118 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v126 = (char *)&v118 - v19;
  v20 = sub_1A594C354();
  MEMORY[0x1E0C80A78](v20);
  v130 = (char *)&v118 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v136 = (char *)&v118 - v23;
  v24 = *(_QWORD *)(a5 + 48);
  v125 = *(_QWORD *)(v24 + 8);
  v25 = sub_1A594B364();
  v132 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v124 = (char *)&v118 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v131 = (char *)&v118 - v28;
  v29 = sub_1A565769C();
  v129 = v24;
  v159[0] = v24;
  v159[1] = v29;
  v128 = v29;
  v141 = MEMORY[0x1A85B1874](MEMORY[0x1E0DEA500], v25, v159);
  v134 = sub_1A594CE58();
  v30 = *(_QWORD *)(v134 - 8);
  MEMORY[0x1E0C80A78](v134);
  v133 = (char *)&v118 - v31;
  v146 = a5;
  v32 = a5;
  v33 = a1;
  v35 = type metadata accessor for MessageIdentifierRange(0, a4, v32, v34);
  v144 = *(_QWORD *)(v35 - 8);
  v145 = v35;
  MEMORY[0x1E0C80A78](v35);
  MEMORY[0x1E0C80A78](v36);
  v139 = (char *)&v118 - v37;
  MEMORY[0x1E0C80A78](v38);
  v40 = (char *)&v118 - v39;
  MEMORY[0x1E0C80A78](v41);
  v140 = (char *)&v118 - v43;
  if (v33 < 0)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (!v33)
  {
    MessageIdentifierSet.init()(a4, v146);
    return;
  }
  v138 = v33;
  v120 = v42;
  v121 = v30;
  v122 = v15;
  v123 = TupleTypeMetadata2;
  v44 = v146;
  v156 = MessageIdentifierSet.init()(a4, v146);
  v157 = v45;
  v158 = v46;
  MessageIdentifierSet.ranges.getter(a2, a3 & 0xFFFFFFFFFFLL);
  v153 = v47;
  v154 = v48;
  v155 = v49;
  v51 = type metadata accessor for MessageIdentifierSet.RangeView(0, a4, v44, v50);
  MEMORY[0x1A85B1874](&protocol conformance descriptor for MessageIdentifierSet<A>.RangeView, v51);
  v137 = v51;
  sub_1A594B250();
  v52 = v149;
  v53 = v150;
  v54 = v151;
  v152 = MessageIdentifierSet.RangeView.endIndex.getter(v149, v150 | ((unint64_t)v151 << 32));
  v153 = v52;
  v154 = v53;
  v155 = v54;
  if (v152)
  {
    v119 = v12;
    v55 = 0;
    v56 = v138;
    while (1)
    {
      MEMORY[0x1A85B1874](&protocol conformance descriptor for MessageIdentifierSet<A>.RangeView, v137);
      sub_1A594BD30();
      v152 = v149;
      v57 = v140;
      v143 = v143 & 0xFFFFFF0000000000 | v53 | ((unint64_t)v54 << 32);
      MessageIdentifierSet.RangeView.subscript.getter(v149, v52, v143);
      (*(void (**)(char *, char *, uint64_t))(v144 + 32))(v40, v57, v145);
      v58 = sub_1A594BE20();
      if (__OFADD__(v55, v58))
      {
        __break(1u);
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
      if (v55 + v58 > v56)
        break;
      v59 = sub_1A594BE20();
      v60 = __OFADD__(v55, v59);
      v61 = v55 + v59;
      if (v60)
        goto LABEL_20;
      v142 = v61;
      v62 = v25;
      v64 = v144;
      v63 = v145;
      v65 = (uint64_t)v139;
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v139, v40, v145);
      v66 = v146;
      MessageIdentifierSet.init(_:)(v65, a4, v146, v67);
      v69 = v68;
      v71 = v70;
      v72 = HIDWORD(v70);
      type metadata accessor for MessageIdentifierSet(0, a4, v66, v73);
      MessageIdentifierSet.formUnion(_:)(v69, v71 & 0xFFFFFFFFFFLL);
      sub_1A54E3458(v69, v71, v72);
      v74 = v63;
      v56 = v138;
      (*(void (**)(char *, uint64_t))(v64 + 8))(v40, v74);
      if (v142 >= v56)
      {
        v75 = v153;
        v76 = v154;
        v77 = v155;
        goto LABEL_18;
      }
      v52 = v153;
      v53 = v154;
      v54 = v155;
      v25 = v62;
      v55 = v142;
      if (!v152)
        goto LABEL_10;
    }
    if (__OFSUB__(v56, v55))
      goto LABEL_22;
    v78 = *(void (**)(char *, char *, uint64_t))(v132 + 16);
    v143 = (unint64_t)v40;
    v78(v131, v40, v25);
    v148[0] = v129;
    v148[1] = v128;
    v79 = MEMORY[0x1A85B1874](MEMORY[0x1E0DEA4D8], v25, v148);
    sub_1A594B22C();
    v80 = v134;
    MEMORY[0x1A85B1874](MEMORY[0x1E0DEDE48], v134);
    v81 = v136;
    sub_1A594BE2C();
    v82 = v81;
    v83 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v135 + 48);
    if (v83(v82, 1, a4) == 1)
      goto LABEL_24;
    v147 = v79;
    MEMORY[0x1A85B1874](MEMORY[0x1E0DEDE28], v80, &v147);
    v84 = v130;
    sub_1A594B208();
    if (v83(v84, 1, a4) == 1)
      goto LABEL_25;
    sub_1A54E3458(v52, v53, v54);
    v85 = v135;
    v86 = *(void (**)(char *, char *, uint64_t))(v135 + 16);
    v87 = v126;
    v88 = v136;
    v86(v126, v136, a4);
    v89 = v127;
    v86(v127, v84, a4);
    v90 = v84;
    v91 = sub_1A594B298();
    v92 = *(void (**)(char *, uint64_t))(v85 + 8);
    v92(v89, a4);
    v92(v87, a4);
    if ((v91 & 1) != 0)
    {
      v93 = v88;
      v94 = v85;
      v95 = v123;
      v96 = v122;
      v97 = &v122[*(int *)(v123 + 48)];
      v86(v122, v93, a4);
      v86(v97, v90, a4);
      v98 = v119;
      v99 = &v119[*(int *)(v95 + 48)];
      v86(v119, v96, a4);
      v86(v99, v97, a4);
      v100 = *(void (**)(char *, char *, uint64_t))(v94 + 32);
      v101 = v131;
      v100(v131, v98, a4);
      v92(v99, a4);
      v102 = &v98[*(int *)(v95 + 48)];
      v100(v98, v96, a4);
      v100(v102, v97, a4);
      v100(&v101[*(int *)(v25 + 36)], v102, a4);
      v92(v98, a4);
      v103 = (uint64_t)v124;
      (*(void (**)(char *, char *, uint64_t))(v132 + 32))(v124, v101, v25);
      v92(v130, a4);
      v92(v136, a4);
      v104 = v120;
      v105 = v146;
      MessageIdentifierRange.init(_:)(v103, v120);
      v106 = v144;
      v107 = (uint64_t)v139;
      v108 = a4;
      v109 = v145;
      (*(void (**)(char *, uint64_t, uint64_t))(v144 + 16))(v139, v104, v145);
      MessageIdentifierSet.init(_:)(v107, v108, v105, v110);
      v112 = v111;
      v114 = v113;
      v115 = HIDWORD(v113);
      type metadata accessor for MessageIdentifierSet(0, v108, v105, v116);
      MessageIdentifierSet.formUnion(_:)(v112, v114 & 0xFFFFFFFFFFLL);
      sub_1A54E3458(v112, v114, v115);
      v117 = *(void (**)(uint64_t, uint64_t))(v106 + 8);
      v117(v104, v109);
      (*(void (**)(char *, uint64_t))(v121 + 8))(v133, v134);
      v117(v143, v109);
      return;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return;
  }
LABEL_10:
  v75 = v52;
  v76 = v53;
  v77 = v54;
LABEL_18:
  sub_1A54E3458(v75, v76, v77);
}

unint64_t sub_1A565769C()
{
  unint64_t result;

  result = qword_1EE7A4180;
  if (!qword_1EE7A4180)
  {
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEDC88], MEMORY[0x1E0DEDC60]);
    atomic_store(result, (unint64_t *)&qword_1EE7A4180);
  }
  return result;
}

void MessageIdentifierSetNonEmpty.suffix(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  MessageIdentifierSet.suffix(_:)(a1, a2, a3 & 0xFFFFFFFFFFLL, a4, a5);
}

void *Base64.EncodingOptions.base64UrlAlphabet.unsafeMutableAddressor()
{
  return &static Base64.EncodingOptions.base64UrlAlphabet;
}

uint64_t static Base64.EncodingOptions.base64UrlAlphabet.getter()
{
  return 1;
}

void *Base64.EncodingOptions.omitPaddingCharacter.unsafeMutableAddressor()
{
  return &static Base64.EncodingOptions.omitPaddingCharacter;
}

uint64_t static Base64.EncodingOptions.omitPaddingCharacter.getter()
{
  return 2;
}

void sub_1A5657728(uint64_t *a1@<X8>)
{
  *a1 = OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1A5657748(_QWORD *a1)
{
  _QWORD *v1;

  return sub_1A565ABB4(*a1, *v1);
}

uint64_t sub_1A5657754(uint64_t a1, uint64_t a2)
{
  return a2 | a1;
}

void sub_1A565775C(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  *a2 = sub_1A56582EC(*a1, *v2);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1A5657784(uint64_t a1, uint64_t a2)
{
  return a2 ^ a1;
}

BOOL sub_1A565778C(_QWORD *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & a2;
  if (v3 != a2)
    *v2 |= a2;
  *a1 = a2;
  return v3 != a2;
}

uint64_t sub_1A56577B8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = *v1 & a1;
  if (result)
    *v1 &= ~a1;
  return result;
}

uint64_t sub_1A56577DC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *v1 |= a1;
  return v2 & a1;
}

uint64_t sub_1A56577F4(uint64_t result)
{
  _QWORD *v1;

  *v1 |= result;
  return result;
}

uint64_t sub_1A5657804(_QWORD *a1)
{
  return sub_1A565AB9C(*a1);
}

uint64_t sub_1A565780C(uint64_t result)
{
  _QWORD *v1;

  *v1 ^= result;
  return result;
}

uint64_t sub_1A565781C(uint64_t a1, uint64_t a2)
{
  return a2 & ~a1;
}

uint64_t sub_1A5657824(_QWORD *a1)
{
  _QWORD *v1;

  return sub_1A565ABB8(*a1, *v1);
}

BOOL sub_1A5657830(uint64_t a1, uint64_t a2)
{
  return (a2 & a1) == 0;
}

BOOL sub_1A565783C(uint64_t a1)
{
  return a1 == 0;
}

uint64_t sub_1A5657848()
{
  return sub_1A594C5B8();
}

uint64_t sub_1A5657860(uint64_t result)
{
  _QWORD *v1;

  *v1 &= ~result;
  return result;
}

BOOL sub_1A5657870(uint64_t *a1, uint64_t *a2)
{
  return sub_1A565831C(*a1, *a2);
}

uint64_t sub_1A565787C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = 0;
    v3 = (uint64_t *)(a1 + 32);
    do
    {
      v5 = *v3++;
      v4 = v5;
      if ((v5 & ~v2) == 0)
        v4 = 0;
      v2 |= v4;
      --v1;
    }
    while (v1);
  }
  else
  {
    v2 = 0;
  }
  swift_bridgeObjectRelease();
  return v2;
}

void *Base64.DecodingOptions.base64UrlAlphabet.unsafeMutableAddressor()
{
  return &static Base64.DecodingOptions.base64UrlAlphabet;
}

uint64_t static Base64.DecodingOptions.base64UrlAlphabet.getter()
{
  return 1;
}

void *Base64.DecodingOptions.omitPaddingCharacter.unsafeMutableAddressor()
{
  return &static Base64.DecodingOptions.omitPaddingCharacter;
}

uint64_t static Base64.DecodingOptions.omitPaddingCharacter.getter()
{
  return 2;
}

_QWORD *sub_1A56578FC@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1A5657908@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t result;

  result = sub_1A5657754(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_1A5657934@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t result;

  result = sub_1A5657784(*a1, *v2);
  *a2 = result;
  return result;
}

BOOL sub_1A5657960(_QWORD *a1, uint64_t *a2)
{
  return sub_1A565778C(a1, *a2);
}

uint64_t sub_1A5657968@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  char v4;

  result = sub_1A56577B8(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_1A5657998@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  char v4;

  result = sub_1A56577DC(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_1A56579C8(uint64_t *a1)
{
  return sub_1A56577F4(*a1);
}

uint64_t sub_1A56579D0(uint64_t *a1)
{
  return sub_1A56582F4(*a1);
}

uint64_t sub_1A56579D8(uint64_t *a1)
{
  return sub_1A565780C(*a1);
}

uint64_t sub_1A56579E0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t result;

  result = sub_1A565781C(*a1, *v2);
  *a2 = result;
  return result;
}

BOOL sub_1A5657A0C(uint64_t *a1)
{
  uint64_t *v1;

  return sub_1A5658304(*a1, *v1);
}

BOOL sub_1A5657A18(uint64_t *a1)
{
  uint64_t *v1;

  return sub_1A5657830(*a1, *v1);
}

BOOL sub_1A5657A24(uint64_t *a1)
{
  uint64_t *v1;

  return sub_1A5658310(*a1, *v1);
}

BOOL sub_1A5657A30()
{
  uint64_t *v0;

  return sub_1A565783C(*v0);
}

uint64_t sub_1A5657A38(uint64_t *a1)
{
  return sub_1A5657860(*a1);
}

uint64_t sub_1A5657A40@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1A565787C(a1);
  *a2 = result;
  return result;
}

uint64_t String.init<A>(base64Encoding:options:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  static Base64.encodeString<A>(bytes:options:)();
  v6 = v5;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a1, a3);
  return v6;
}

void variable initialization expression of EncodeBuffer.stopPoints()
{
  sub_1A567D650(MEMORY[0x1E0DEE9D8]);
}

uint64_t variable initialization expression of FramingParser.state()
{
  return 1;
}

uint64_t variable initialization expression of FramingParser.buffer()
{
  if (qword_1EE796BD0 != -1)
    swift_once();
  return swift_retain();
}

double sub_1A5657B40(uint64_t a1)
{
  double result;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0xFFFFFFFE00000000;
  result = 0.0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 512;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_QWORD *)(a1 + 184) = 0;
  return result;
}

double variable initialization expression of AuthenticatedURLRump.expire@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 41) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_BYTE *)(a1 + 57) = 1;
  return result;
}

double variable initialization expression of BodyStructure.DispositionAndLanguage.disposition@<D0>(_OWORD *a1@<X8>)
{
  *((_QWORD *)a1 + 4) = 0;
  return OUTLINED_FUNCTION_7_3(a1);
}

void variable initialization expression of BodyStructure.DispositionAndLanguage.language()
{
  OUTLINED_FUNCTION_4_2();
}

double variable initialization expression of BodyStructure.Multipart.extension@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

double variable initialization expression of BodyStructure.Singlepart.extension@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 0.0;
  *(_OWORD *)a1 = xmmword_1A59ABD60;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_QWORD *)(a1 + 80) = 0;
  return result;
}

double variable initialization expression of BodyStructure.Singlepart.Extension.dispositionAndLanguage@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 0.0;
  *(_OWORD *)a1 = xmmword_1A59ABD60;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_QWORD *)(a1 + 64) = 0;
  return result;
}

void variable initialization expression of ExtendedSearchOptions.sourceOptions()
{
  OUTLINED_FUNCTION_4_2();
}

void variable initialization expression of IMAPServer.userAuthenticationMechanism()
{
  OUTLINED_FUNCTION_4_2();
}

uint64_t variable initialization expression of MailboxStatus.uidValidity()
{
  return 0x100000000;
}

uint64_t variable initialization expression of MessagePath.range()
{
  return 0;
}

uint64_t variable initialization expression of NetworkPath.command@<X0>(uint64_t a1@<X8>)
{
  _BYTE v3[192];

  sub_1A5657B40((uint64_t)v3);
  return sub_1A55032A0((uint64_t)v3, a1, &qword_1EE7A90D0);
}

double variable initialization expression of ExtendedSearchResponse.correlator@<D0>(_OWORD *a1@<X8>)
{
  *((_BYTE *)a1 + 32) = 0;
  return OUTLINED_FUNCTION_7_3(a1);
}

unint64_t variable initialization expression of ResponseText.code()
{
  return 0xF000000000000007;
}

uint64_t variable initialization expression of SearchCorrelator.mailbox()
{
  return 0;
}

uint64_t variable initialization expression of QResyncParameter.knownUIDs()
{
  return 0;
}

void variable initialization expression of QResyncParameter.sequenceMatchData()
{
  OUTLINED_FUNCTION_4_2();
}

uint64_t variable initialization expression of ChannelHandlerContext.responses()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t variable initialization expression of SynchronizedCommand.commandPart@<X0>(uint64_t a1@<X8>)
{
  _BYTE v3[136];

  sub_1A5657D88((uint64_t)v3);
  return sub_1A55032A0((uint64_t)v3, a1, &qword_1EE7A90D8);
}

double sub_1A5657D88(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_QWORD *)(a1 + 96) = 0xFFFFFFFF00000000;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  return result;
}

uint64_t variable initialization expression of CommandParser.mode()
{
  return 0;
}

uint64_t variable initialization expression of CommandParser.synchronisingLiteralParser()
{
  return 0;
}

uint64_t variable initialization expression of RangeSet._ranges()
{
  return OUTLINED_FUNCTION_72_3();
}

unint64_t sub_1A5657DF4()
{
  unint64_t result;

  result = qword_1EE7A90E0;
  if (!qword_1EE7A90E0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for Base64.EncodingOptions, &type metadata for Base64.EncodingOptions);
    atomic_store(result, (unint64_t *)&qword_1EE7A90E0);
  }
  return result;
}

unint64_t sub_1A5657E34()
{
  unint64_t result;

  result = qword_1EE7A90E8;
  if (!qword_1EE7A90E8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for Base64.EncodingOptions, &type metadata for Base64.EncodingOptions);
    atomic_store(result, (unint64_t *)&qword_1EE7A90E8);
  }
  return result;
}

unint64_t sub_1A5657E74()
{
  unint64_t result;

  result = qword_1EE7A90F0;
  if (!qword_1EE7A90F0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for Base64.EncodingOptions, &type metadata for Base64.EncodingOptions);
    atomic_store(result, (unint64_t *)&qword_1EE7A90F0);
  }
  return result;
}

unint64_t sub_1A5657EB4()
{
  unint64_t result;

  result = qword_1EE7A90F8;
  if (!qword_1EE7A90F8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for Base64.EncodingOptions, &type metadata for Base64.EncodingOptions);
    atomic_store(result, (unint64_t *)&qword_1EE7A90F8);
  }
  return result;
}

unint64_t sub_1A5657EF4()
{
  unint64_t result;

  result = qword_1EE7A9100;
  if (!qword_1EE7A9100)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for Base64.DecodingOptions, &type metadata for Base64.DecodingOptions);
    atomic_store(result, (unint64_t *)&qword_1EE7A9100);
  }
  return result;
}

unint64_t sub_1A5657F34()
{
  unint64_t result;

  result = qword_1EE7A9108;
  if (!qword_1EE7A9108)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for Base64.DecodingOptions, &type metadata for Base64.DecodingOptions);
    atomic_store(result, (unint64_t *)&qword_1EE7A9108);
  }
  return result;
}

unint64_t sub_1A5657F74()
{
  unint64_t result;

  result = qword_1EE7A9110;
  if (!qword_1EE7A9110)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for Base64.DecodingOptions, &type metadata for Base64.DecodingOptions);
    atomic_store(result, (unint64_t *)&qword_1EE7A9110);
  }
  return result;
}

unint64_t sub_1A5657FB4()
{
  unint64_t result;

  result = qword_1EE7A9118;
  if (!qword_1EE7A9118)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for Base64.DecodingOptions, &type metadata for Base64.DecodingOptions);
    atomic_store(result, (unint64_t *)&qword_1EE7A9118);
  }
  return result;
}

void type metadata accessor for Base64()
{
  OUTLINED_FUNCTION_3_1();
}

void type metadata accessor for Base64.EncodingOptions()
{
  OUTLINED_FUNCTION_3_1();
}

void type metadata accessor for Base64.DecodingOptions()
{
  OUTLINED_FUNCTION_3_1();
}

void *__swift_memcpy128_8_0(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x80uLL);
}

uint64_t sub_1A5658020(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 128))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1A5658040(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 128) = v3;
  return result;
}

void type metadata accessor for sockaddr_storage(uint64_t a1)
{
  sub_1A5658218(a1, &qword_1EE7A9120);
}

void *__swift_memcpy106_1(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x6AuLL);
}

uint64_t sub_1A56580A8(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 106))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1A56580C8(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 104) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 106) = v3;
  return result;
}

void type metadata accessor for sockaddr_un(uint64_t a1)
{
  sub_1A5658218(a1, &qword_1EE7A9128);
}

__n128 __swift_memcpy28_4(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 12) = *(_OWORD *)(a2 + 12);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_1A5658138(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 28))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1A5658158(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 28) = v3;
  return result;
}

void type metadata accessor for sockaddr_in6(uint64_t a1)
{
  sub_1A5658218(a1, &qword_1EE7A9130);
}

__n128 __swift_memcpy16_4_0(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for sockaddr_in(uint64_t a1)
{
  sub_1A5658218(a1, &qword_1EE7A9138);
}

__n128 __swift_memcpy16_1(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for sockaddr(uint64_t a1)
{
  sub_1A5658218(a1, &qword_1EE7A9140);
}

void type metadata accessor for in6_addr(uint64_t a1)
{
  sub_1A5658218(a1, &qword_1EE7A9148);
}

void type metadata accessor for in_addr(uint64_t a1)
{
  sub_1A5658218(a1, &qword_1EE7A9150);
}

void type metadata accessor for in6_addr.__Unnamed_union___u6_addr(uint64_t a1)
{
  sub_1A5658218(a1, &qword_1EE7A9158);
}

void sub_1A5658218(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t OUTLINED_FUNCTION_0_8()
{
  return 0;
}

double OUTLINED_FUNCTION_7_3@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_1A56582EC(uint64_t a1, uint64_t a2)
{
  return a2 & a1;
}

uint64_t sub_1A56582F4(uint64_t result)
{
  _QWORD *v1;

  *v1 &= result;
  return result;
}

BOOL sub_1A5658304(uint64_t a1, uint64_t a2)
{
  return (a2 & ~a1) == 0;
}

BOOL sub_1A5658310(uint64_t a1, uint64_t a2)
{
  return (a1 & ~a2) == 0;
}

BOOL sub_1A565831C(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

void sub_1A5658328(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A5658378(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1A5658428 + 4 * byte_1A59AC7D3[a2]))(0x544E45434552);
}

void sub_1A5658428(uint64_t a1)
{
  uint64_t v1;

  if (a1 != 0x544E45434552 || v1 != 0xE600000000000000)
    OUTLINED_FUNCTION_3_2();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_8_1();
}

void sub_1A56584EC(char a1, char a2)
{
  char v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;

  if (a1)
  {
    OUTLINED_FUNCTION_20();
    if (v2)
      v4 = 45;
    else
      v4 = 0;
    if (v2)
      v5 = v3;
    else
      v5 = 0xE000000000000000;
  }
  else
  {
    v5 = 0xE100000000000000;
    v4 = 43;
  }
  if (a2)
  {
    OUTLINED_FUNCTION_20();
    if (v6)
      v8 = 45;
    else
      v8 = 0;
    if (v6)
      v9 = v7;
    else
      v9 = 0xE000000000000000;
  }
  else
  {
    v9 = 0xE100000000000000;
    v8 = 43;
  }
  if (v4 != v8 || v5 != v9)
    OUTLINED_FUNCTION_3_2();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_8_1();
}

void sub_1A5658580(char a1, char a2)
{
  char v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;

  if (a1)
  {
    OUTLINED_FUNCTION_20();
    if (v2)
      v4 = 49;
    else
      v4 = 0x7974696E69666E69;
    if (v2)
      v5 = v3;
    else
      v5 = 0xE800000000000000;
  }
  else
  {
    v5 = 0xE100000000000000;
    v4 = 48;
  }
  if (a2)
  {
    OUTLINED_FUNCTION_20();
    if (v6)
      v8 = 49;
    else
      v8 = 0x7974696E69666E69;
    if (v6)
      v9 = v7;
    else
      v9 = 0xE800000000000000;
  }
  else
  {
    v9 = 0xE100000000000000;
    v8 = 48;
  }
  if (v4 != v8 || v5 != v9)
    OUTLINED_FUNCTION_3_2();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_8_1();
}

uint64_t _s12NIOIMAPCore210CapabilityV11ContextKindV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4)
    return 1;
  else
    return sub_1A594CD38();
}

BOOL sub_1A5658650(int a1, int a2)
{
  return a1 == a2;
}

void static Base64.encodeString<A>(bytes:options:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v0);
  if (__OFADD__(OUTLINED_FUNCTION_2_3(), 2))
  {
    __break(1u);
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  OUTLINED_FUNCTION_0_9();
  if (!v2)
    goto LABEL_10;
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_15_0();
  if (v4)
    return;
  OUTLINED_FUNCTION_7_4();
  if (__OFADD__(*(_QWORD *)(OUTLINED_FUNCTION_14() + 16), 2))
    goto LABEL_11;
  OUTLINED_FUNCTION_6_2();
  if (v2)
  {
    MEMORY[0x1E0C80A78](4 * v3);
    sub_1A594B574();
    OUTLINED_FUNCTION_9_2();
    return;
  }
LABEL_12:
  __break(1u);
}

uint64_t static Base64.decode(string:options:)(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[2];
  uint64_t v17;

  v5 = v3;
  v7 = a2;
  v8 = a1;
  if ((a2 & 0x1000000000000000) != 0)
  {
    OUTLINED_FUNCTION_16_0();
    v8 = sub_1A565A574();
    v4 = v14;
    OUTLINED_FUNCTION_9_2();
    v7 = v4;
LABEL_12:
    v13 = static Base64.decode(string:options:)(v8, v7, a3);
    if (!v5)
    {
      v4 = v13;
      OUTLINED_FUNCTION_9_2();
      return v4;
    }
    goto LABEL_8;
  }
  if ((a2 & 0x2000000000000000) != 0)
  {
    v16[0] = a1;
    v16[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    OUTLINED_FUNCTION_16_0();
    v10 = v16;
    v11 = HIBYTE(v7) & 0xF;
  }
  else
  {
    if ((a1 & 0x1000000000000000) != 0)
    {
      v9 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
      v4 = a1 & 0xFFFFFFFFFFFFLL;
    }
    else
    {
      v9 = sub_1A594C7D4();
      v4 = v15;
    }
    OUTLINED_FUNCTION_16_0();
    v10 = (_QWORD *)v9;
    v11 = v4;
  }
  sub_1A56593A8((uint64_t)v10, v11, a3, &v17);
  if (!v5)
  {
    OUTLINED_FUNCTION_9_2();
    v4 = v17;
    if (v17)
      return v4;
    OUTLINED_FUNCTION_16_0();
    goto LABEL_12;
  }
LABEL_8:
  OUTLINED_FUNCTION_9_2();
  return v4;
}

void *Base64.encodePaddingCharacter.unsafeMutableAddressor()
{
  return &static Base64.encodePaddingCharacter;
}

uint64_t static Base64.encodePaddingCharacter.getter()
{
  return 61;
}

void sub_1A56588D8()
{
  static Base64.encoding0 = (uint64_t)&unk_1E4E65AB8;
}

uint64_t *Base64.encoding0.unsafeMutableAddressor()
{
  if (qword_1EE797110 != -1)
    swift_once();
  return &static Base64.encoding0;
}

uint64_t static Base64.encoding0.getter()
{
  return sub_1A565A53C(&qword_1EE797110);
}

void sub_1A5658948()
{
  static Base64.encoding1 = (uint64_t)&unk_1E4E65BD8;
}

uint64_t *Base64.encoding1.unsafeMutableAddressor()
{
  if (qword_1EE797118 != -1)
    swift_once();
  return &static Base64.encoding1;
}

uint64_t static Base64.encoding1.getter()
{
  return sub_1A565A53C(&qword_1EE797118);
}

void sub_1A56589B8()
{
  static Base64.encoding0url = (uint64_t)&unk_1E4E64718;
}

uint64_t *Base64.encoding0url.unsafeMutableAddressor()
{
  if (qword_1EE7A8F10 != -1)
    swift_once();
  return &static Base64.encoding0url;
}

uint64_t static Base64.encoding0url.getter()
{
  return sub_1A565A53C(&qword_1EE7A8F10);
}

void sub_1A5658A28()
{
  static Base64.encoding1url = (uint64_t)&unk_1E4E64838;
}

uint64_t *Base64.encoding1url.unsafeMutableAddressor()
{
  if (qword_1EE7A8F18 != -1)
    swift_once();
  return &static Base64.encoding1url;
}

uint64_t static Base64.encoding1url.getter()
{
  return sub_1A565A53C(&qword_1EE7A8F18);
}

void sub_1A5658A98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (__OFADD__(*(_QWORD *)(a1 + 16), 2))
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  OUTLINED_FUNCTION_6_2();
  if (!v6)
    goto LABEL_11;
  v7 = 4 * v5;
  if (4 * v5 < 0)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v4 >= 3)
  {
    v1 = sub_1A594BA18();
    v8 = v1;
    *(_QWORD *)(v1 + 16) = v7;
  }
  else
  {
    v8 = MEMORY[0x1E0DEE9D8];
  }
  v9 = 0;
  OUTLINED_FUNCTION_11_0(v1, v2, v8 + 32, v3, &v9);
  if (v7 >= v9)
  {
    *(_QWORD *)(v8 + 16) = v9;
    return;
  }
LABEL_13:
  __break(1u);
}

void sub_1A5658B54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 24);
  v1 = *(_QWORD *)(a1 + 32);
  if (v1 < v2)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (__OFSUB__(v1, v2))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (__OFADD__(v1 - v2, 2))
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  OUTLINED_FUNCTION_0_9();
  if (!v4)
    goto LABEL_15;
  v5 = 4 * v3;
  v6 = swift_beginAccess();
  if (v5 < 0)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v5)
  {
    v6 = sub_1A594BA18();
    v9 = v6;
    *(_QWORD *)(v6 + 16) = v5;
  }
  else
  {
    v9 = MEMORY[0x1E0DEE9D8];
  }
  v10 = 0;
  OUTLINED_FUNCTION_11_0(v6, v7, v9 + 32, v8, &v10);
  if (v5 >= v10)
  {
    *(_QWORD *)(v9 + 16) = v10;
    return;
  }
LABEL_17:
  __break(1u);
}

void static Base64.encodeBytes<A>(bytes:options:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v0);
  if (__OFADD__(OUTLINED_FUNCTION_2_3(), 2))
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_0_9();
  if (!v2)
    goto LABEL_8;
  MEMORY[0x1E0C80A78](v1);
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796020);
  OUTLINED_FUNCTION_15_0();
  if (!v4)
  {
    OUTLINED_FUNCTION_7_4();
    v3 = OUTLINED_FUNCTION_14();
    sub_1A5658A98(v3);
    OUTLINED_FUNCTION_9_2();
  }
}

void sub_1A5658D3C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;

  if (a3 < 0)
  {
    __break(1u);
  }
  else
  {
    if (a3)
    {
      v10 = sub_1A594BA18();
      *(_QWORD *)(v10 + 16) = a3;
    }
    else
    {
      v10 = MEMORY[0x1E0DEE9D8];
    }
    v11 = 0;
    static Base64._encodeChromium(input:buffer:length:options:)(a1, a2, v10 + 32, a3, &v11, a4);
    if (v11 <= a3)
    {
      *(_QWORD *)(v10 + 16) = v11;
      *a5 = v10;
      OUTLINED_FUNCTION_1_1();
      return;
    }
  }
  __break(1u);
}

uint64_t static Base64._encodeChromium(input:buffer:length:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, char a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  if ((a6 & 1) != 0)
  {
    if (qword_1EE7A8F10 != -1)
      swift_once();
    v12 = static Base64.encoding0url;
    v15 = qword_1EE7A8F18;
    OUTLINED_FUNCTION_4_3();
    if (v15 != -1)
      swift_once();
    v14 = &static Base64.encoding1url;
  }
  else
  {
    if (qword_1EE797110 != -1)
      swift_once();
    v12 = static Base64.encoding0;
    v13 = qword_1EE797118;
    OUTLINED_FUNCTION_4_3();
    if (v13 != -1)
      swift_once();
    v14 = &static Base64.encoding1;
  }
  v16 = *v14;
  OUTLINED_FUNCTION_13_0();
  sub_1A5659010(v12 + 32, *(_QWORD *)(v12 + 16), v16 + 32, *(_QWORD *)(v16 + 16), a1, a2, a3, a4, (a6 & 2) != 0, a5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A5658F48@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1A594B574();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A5658F90@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A5658F48(a1);
}

uint64_t sub_1A5658FA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v7;

  v7 = a3;
  static Base64._encodeChromium(input:buffer:length:options:)(a4, a5, a1, a2, &v7, a6);
  return v7;
}

uint64_t sub_1A5658FF4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1A5658FA8(a1, a2, v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_1A5659010(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, _QWORD *a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 *v16;
  unint64_t v17;
  unint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  int64_t v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  BOOL v26;

  v10 = 3 * (a6 / 3);
  v11 = a6 % 3;
  if (v10 > 0)
  {
    v12 = 0;
    v13 = 0;
    do
    {
      if (__OFADD__(v13, 3))
        v14 = 0x7FFFFFFFFFFFFFFFLL;
      else
        v14 = v13 + 3;
      v15 = v13 + 2;
      if (__OFADD__(v13, 2))
      {
        __break(1u);
LABEL_43:
        __break(1u);
        goto LABEL_44;
      }
      v16 = (unsigned __int8 *)(a5 + v13);
      v17 = v16[1];
      LODWORD(v16) = *v16;
      v18 = *(unsigned __int8 *)(a5 + v15);
      v19 = (_BYTE *)(a7 + v12);
      *v19 = *(_BYTE *)(result + v16);
      v19[1] = *(_BYTE *)(a3 + ((v17 >> 4) & 0xFFFFFFFFFFFFFFCFLL | (16 * (v16 & 3))));
      v19[2] = *(_BYTE *)(a3 + ((v18 >> 6) & 0xFFFFFFFFFFFFFFC3 | (4 * (v17 & 0xF))));
      v19[3] = *(_BYTE *)(a3 + v18);
      v20 = v12 + 4;
      if (__OFADD__(v12, 4))
        goto LABEL_43;
      v12 += 4;
      v13 = v14;
    }
    while (v14 < v10);
    if (v11 > 0)
      goto LABEL_13;
    goto LABEL_41;
  }
  if (v11 < 1)
  {
LABEL_40:
    v20 = 0;
    goto LABEL_41;
  }
  v20 = 0;
LABEL_13:
  v21 = v10 + 1;
  if (v10 + 1 >= a6)
    v22 = 0;
  else
    v22 = *(unsigned __int8 *)(a5 + v21);
  v23 = v10 + 2;
  if (__OFADD__(v10, 2))
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  v24 = *(unsigned __int8 *)(a5 + v10);
  LOBYTE(v10) = a9;
  if (v23 < a6)
  {
    v25 = *(unsigned __int8 *)(a5 + v23);
    *(_BYTE *)(a7 + v20) = *(_BYTE *)(result + v24);
    if (v21 >= a6)
      goto LABEL_33;
    if (__OFADD__(v20, 1))
    {
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
    v21 = (v22 >> 4) & 0xFFFFFFCF | (16 * (v24 & 3));
    *(_BYTE *)(a7 + v20 + 1) = *(_BYTE *)(a3 + v21);
    if (__OFADD__(v20, 2))
    {
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
    v24 = (v25 >> 6) & 0xFFFFFFFFFFFFFFC3 | (4 * (v22 & 0xF));
    *(_BYTE *)(a7 + v20 + 2) = *(_BYTE *)(a3 + v24);
    v10 = v20 + 3;
    if (__OFADD__(v20, 3))
    {
LABEL_49:
      __break(1u);
      goto LABEL_50;
    }
    v22 = *(unsigned __int8 *)(a3 + v25);
    *(_BYTE *)(a7 + v10) = v22;
    v26 = __OFADD__(v20, 4);
    v20 += 4;
    if (!v26)
      goto LABEL_41;
    __break(1u);
  }
  *(_BYTE *)(a7 + v20) = *(_BYTE *)(result + v24);
  if (v21 < a6)
  {
    if (__OFADD__(v20, 1))
    {
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
    *(_BYTE *)(a7 + v20 + 1) = *(_BYTE *)(a3 + ((v22 >> 4) & 0xFFFFFFCF | (16 * (v24 & 3))));
    v24 = v20 + 2;
    if (__OFADD__(v20, 2))
    {
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
    *(_BYTE *)(a7 + v24) = *(_BYTE *)(a3 + 4 * (v22 & 0xF));
    v26 = __OFADD__(v20, 3);
    v20 += 3;
    if (v26)
    {
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
    if ((v10 & 1) != 0)
      goto LABEL_41;
    LOBYTE(v10) = 61;
    *(_BYTE *)(a7 + v20) = 61;
    v26 = __OFADD__(v20++, 1);
    if (!v26)
      goto LABEL_41;
    __break(1u);
  }
LABEL_33:
  if (__OFADD__(v20, 1))
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  *(_BYTE *)(a7 + v20 + 1) = *(_BYTE *)(a3 + 16 * (v24 & 3));
  v26 = __OFADD__(v20, 2);
  v20 += 2;
  if (v26)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  if ((v10 & 1) != 0)
  {
LABEL_41:
    *a10 = v20;
    return result;
  }
  *(_BYTE *)(a7 + v20) = 61;
  if (!__OFADD__(v20, 1))
  {
    *(_BYTE *)(a7 + v20 + 1) = 61;
    v26 = __OFADD__(v20, 2);
    v20 += 2;
    if (!v26)
      goto LABEL_41;
    __break(1u);
    goto LABEL_40;
  }
LABEL_53:
  __break(1u);
  return result;
}

void static Base64.withUnsafeEncodingTablesAsBufferPointers<A>(options:_:)()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_18();
  if ((v0 & 1) == 0)
  {
    if (qword_1EE797110 != -1)
      swift_once();
    v1 = qword_1EE797118;
    OUTLINED_FUNCTION_4_3();
    if (v1 == -1)
      goto LABEL_9;
LABEL_10:
    swift_once();
    goto LABEL_9;
  }
  if (qword_1EE7A8F10 != -1)
    swift_once();
  v2 = qword_1EE7A8F18;
  OUTLINED_FUNCTION_4_3();
  if (v2 != -1)
    goto LABEL_10;
LABEL_9:
  v3 = OUTLINED_FUNCTION_13_0();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_1_1();
}

uint64_t sub_1A5659368()
{
  return sub_1A594BA0C();
}

uint64_t sub_1A56593A8@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (a2 < 1)
    goto LABEL_7;
  if (__OFADD__(a2, 3))
  {
    __break(1u);
    goto LABEL_16;
  }
  v8 = result;
  v9 = 3 * ((unint64_t)(a2 + 3) >> 2);
  v10 = sub_1A594BA18();
  *(_QWORD *)(v10 + 16) = v9;
  v11 = v10 + 32;
  if (!v8)
  {
    v14 = 0;
    result = sub_1A5659BB4(a3, -1, 0, 0, v11, v9, &v14);
    v12 = v14;
    v13 = v9 < v14;
    if (!v4)
      goto LABEL_13;
    if (v9 >= v14)
    {
LABEL_10:
      *(_QWORD *)(v10 + 16) = v12;
      return swift_bridgeObjectRelease();
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v14 = 0;
  result = static Base64._decodeChromium(from:into:length:options:)(v8, a2, v11, v9, &v14, a3);
  v12 = v14;
  v13 = v9 < v14;
  if (v4)
  {
    if (v9 < v14)
    {
      __break(1u);
LABEL_7:
      *a4 = MEMORY[0x1E0DEE9D8];
      return result;
    }
    goto LABEL_10;
  }
  if (v9 >= v14)
    goto LABEL_14;
  __break(1u);
LABEL_13:
  if (!v13)
  {
LABEL_14:
    *(_QWORD *)(v10 + 16) = v12;
    *a4 = v10;
    return result;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t static Base64._decodeChromium(from:into:length:options:)(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, char a6)
{
  _WORD *v6;

  if ((a6 & 2) != 0)
  {
    if (a2 % 4 == 1)
      goto LABEL_3;
  }
  else if (a2 % 4 >= 1)
  {
LABEL_3:
    sub_1A565A5FC();
    OUTLINED_FUNCTION_21();
    *v6 = 256;
    return swift_willThrow();
  }
  if (__OFADD__(a2, 3))
  {
    __break(1u);
  }
  else if (3 * ((a2 + 3) / 4) <= a4)
  {
    return sub_1A5659BB4(a6, (__PAIR128__(a2 / 4, a2 % 4) - 1) >> 64, result, a2, a3, a4, a5);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A565959C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
    return MEMORY[0x1E0DEE9D8];
  sub_1A5659864(a1 + 32, v5, a2, &v8);
  if (!v2)
  {
    v3 = v8;
    if (!v8)
    {
      v7 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v3 = sub_1A565959C(v7, a2);
      swift_bridgeObjectRelease();
    }
  }
  return v3;
}

void sub_1A5659640(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1[3];
  v2 = a1[4];
  v4 = v2 - v3;
  if (v2 < v3)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (__OFSUB__(v2, v3))
  {
LABEL_7:
    __break(1u);
    return;
  }
  if (v4 >= 1)
  {
    v6 = *a1;
    v7 = *((unsigned __int16 *)a1 + 10);
    v8 = *((unsigned __int8 *)a1 + 22);
    swift_beginAccess();
    sub_1A5659864(*(_QWORD *)(v6 + 24) + (v8 | (v7 << 8)) + v3, v4, a2, &v9);
  }
}

uint64_t *static Base64.decode<A>(bytes:options:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t *v15;

  v7 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A594BD78();
  if (v10 < 1)
    return (uint64_t *)MEMORY[0x1E0DEE9D8];
  MEMORY[0x1E0C80A78](v10);
  v11 = &v14 - 4;
  *(&v14 - 2) = a2;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796020);
  sub_1A594B754();
  if (!v3)
  {
    v11 = v15;
    if (!v15)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, a3);
      v12 = sub_1A594BB08();
      v11 = (uint64_t *)sub_1A565959C(v12, a2);
      OUTLINED_FUNCTION_9_2();
    }
  }
  return v11;
}

void sub_1A5659864(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = a2 + 3;
  if (__OFADD__(a2, 3))
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v6 < -3)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v10 = 3 * (v6 / 4);
  if (v6 < 4)
  {
    v11 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v11 = sub_1A594BA18();
    *(_QWORD *)(v11 + 16) = v10;
  }
  v12 = 0;
  static Base64._decodeChromium(from:into:length:options:)(a1, a2, v11 + 32, v10, &v12, a3);
  if (v4)
  {
    if (v10 >= v12)
    {
      *(_QWORD *)(v11 + 16) = v12;
      OUTLINED_FUNCTION_19();
LABEL_11:
      OUTLINED_FUNCTION_1_1();
      return;
    }
    goto LABEL_14;
  }
  if (v10 >= v12)
  {
    *(_QWORD *)(v11 + 16) = v12;
    *a4 = v11;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

_BYTE *sub_1A5659944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, _QWORD *a14)
{
  uint64_t v14;
  unsigned __int8 *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *result;
  _BYTE *v34;
  unsigned int v35;
  uint64_t v36;
  __int16 v37;
  __int16 v38;
  uint64_t v39;

  v39 = *MEMORY[0x1E0C80C00];
  v36 = 0;
  if (a9 >= 1)
  {
    v14 = 0;
    v15 = (unsigned __int8 *)(a10 + 3);
    v16 = a9;
    while (v14 != 0x6000000000000000)
    {
      v17 = *(v15 - 3);
      v18 = *(_DWORD *)(a3 + 4 * *(v15 - 2)) | *(_DWORD *)(a1 + 4 * v17) | *(_DWORD *)(a5 + 4 * *(v15 - 1)) | *(_DWORD *)(a7 + 4 * *v15);
      if (v18 >= 0x1FFFFFF)
        goto LABEL_22;
      *(_BYTE *)(a12 + v14) = v18;
      if (__OFADD__(v14, 1))
        goto LABEL_24;
      *(_BYTE *)(a12 + v14 + 1) = BYTE1(v18);
      if (__OFADD__(v14, 2))
        goto LABEL_25;
      *(_BYTE *)(a12 + v14 + 2) = BYTE2(v18);
      v19 = v14 + 3;
      if (__OFADD__(v14, 3))
        goto LABEL_26;
      v14 += 3;
      v15 += 4;
      if (!--v16)
      {
        v36 = v19;
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
  }
LABEL_10:
  OUTLINED_FUNCTION_6_2();
  if (!v27)
    goto LABEL_27;
  v28 = 4 * v26;
  v17 = *(unsigned __int8 *)(v25 + 4 * v26);
  v29 = *(unsigned __int8 *)(v25 + ((4 * v26) | 1));
  v38 = 256;
  v37 = 256;
  if ((v28 | 2) >= a11 || (v30 = *(unsigned __int8 *)(v25 + (v28 | 2)), v30 == 61))
    v30 = 65;
  else
    v38 = v30;
  v31 = v28 | 3;
  if (v31 >= a11 || (v32 = *(unsigned __int8 *)(v25 + v31), v32 == 61))
    v32 = 65;
  else
    v37 = v32;
  v35 = *(_DWORD *)(v22 + 4 * v29) | *(_DWORD *)(v20 + 4 * v17) | *(_DWORD *)(v23 + 4 * v30) | *(_DWORD *)(v24 + 4 * v32);
  if (v35 >= 0x1FFFFFF)
  {
LABEL_22:
    sub_1A565A5FC();
    OUTLINED_FUNCTION_21();
    *v34 = v17;
    v34[1] = 0;
    return (_BYTE *)swift_willThrow();
  }
  else
  {
    result = sub_1A5659B54(&v35, v21, a13, &v36, (uint64_t)&v38, (uint64_t)&v37);
    *a14 = v36;
  }
  return result;
}

void *Base64.badCharacter.unsafeMutableAddressor()
{
  return &static Base64.badCharacter;
}

_BYTE *sub_1A5659B54(_BYTE *result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;

  v6 = *a4;
  *(_BYTE *)(a2 + v6) = *result;
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
  {
    __break(1u);
    goto LABEL_10;
  }
  *a4 = v8;
  if ((*(_BYTE *)(a5 + 1) & 1) != 0)
    goto LABEL_5;
  *(_BYTE *)(a2 + v8) = result[1];
  v7 = __OFADD__(v8++, 1);
  if (v7)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  *a4 = v8;
LABEL_5:
  if ((*(_BYTE *)(a6 + 1) & 1) != 0)
    return result;
  *(_BYTE *)(a2 + v8) = result[2];
  v7 = __OFADD__(v8, 1);
  v9 = v8 + 1;
  if (v7)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  *a4 = v9;
  return result;
}

uint64_t sub_1A5659BB4(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if ((a1 & 1) != 0)
  {
    if (qword_1EE7A8F40 != -1)
      swift_once();
    v11 = static Base64.decoding0url;
    v18 = qword_1EE7A8F48;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v18 != -1)
      swift_once();
    v13 = static Base64.decoding1url;
    v19 = qword_1EE7A8F50;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v19 != -1)
      swift_once();
    v15 = static Base64.decoding2url;
    v20 = qword_1EE7A8F58;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v20 != -1)
      swift_once();
    v17 = &static Base64.decoding3url;
  }
  else
  {
    if (qword_1EE7A8F20 != -1)
      swift_once();
    v11 = static Base64.decoding0;
    v12 = qword_1EE7A8F28;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v12 != -1)
      swift_once();
    v13 = static Base64.decoding1;
    v14 = qword_1EE7A8F30;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v14 != -1)
      swift_once();
    v15 = static Base64.decoding2;
    v16 = qword_1EE7A8F38;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v16 != -1)
      swift_once();
    v17 = &static Base64.decoding3;
  }
  v21 = *v17;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A565A2B8(v13 + 32, *(_QWORD *)(v13 + 16), v15, v21, v11 + 32, *(_QWORD *)(v11 + 16), a2, a3, a4, a5, a6, a7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t static Base64.withUnsafeDecodingTablesAsBufferPointers<A>(options:_:)()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_18();
  if ((v0 & 1) == 0)
  {
    if (qword_1EE7A8F20 != -1)
      swift_once();
    v1 = qword_1EE7A8F28;
    OUTLINED_FUNCTION_4_3();
    if (v1 != -1)
      swift_once();
    v2 = qword_1EE7A8F30;
    OUTLINED_FUNCTION_13_0();
    if (v2 != -1)
      swift_once();
    v3 = qword_1EE7A8F38;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v3 == -1)
      goto LABEL_17;
LABEL_18:
    swift_once();
    goto LABEL_17;
  }
  if (qword_1EE7A8F40 != -1)
    swift_once();
  v4 = qword_1EE7A8F48;
  OUTLINED_FUNCTION_4_3();
  if (v4 != -1)
    swift_once();
  v5 = qword_1EE7A8F50;
  OUTLINED_FUNCTION_13_0();
  if (v5 != -1)
    swift_once();
  v6 = qword_1EE7A8F58;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v6 != -1)
    goto LABEL_18;
LABEL_17:
  v7 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_19();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t *Base64.decoding0url.unsafeMutableAddressor()
{
  if (qword_1EE7A8F40 != -1)
    swift_once();
  return &static Base64.decoding0url;
}

uint64_t *Base64.decoding0.unsafeMutableAddressor()
{
  if (qword_1EE7A8F20 != -1)
    swift_once();
  return &static Base64.decoding0;
}

uint64_t *Base64.decoding1url.unsafeMutableAddressor()
{
  if (qword_1EE7A8F48 != -1)
    swift_once();
  return &static Base64.decoding1url;
}

uint64_t *Base64.decoding1.unsafeMutableAddressor()
{
  if (qword_1EE7A8F28 != -1)
    swift_once();
  return &static Base64.decoding1;
}

uint64_t *Base64.decoding2url.unsafeMutableAddressor()
{
  if (qword_1EE7A8F50 != -1)
    swift_once();
  return &static Base64.decoding2url;
}

uint64_t *Base64.decoding2.unsafeMutableAddressor()
{
  if (qword_1EE7A8F30 != -1)
    swift_once();
  return &static Base64.decoding2;
}

uint64_t *Base64.decoding3url.unsafeMutableAddressor()
{
  if (qword_1EE7A8F58 != -1)
    swift_once();
  return &static Base64.decoding3url;
}

uint64_t *Base64.decoding3.unsafeMutableAddressor()
{
  if (qword_1EE7A8F38 != -1)
    swift_once();
  return &static Base64.decoding3;
}

uint64_t sub_1A565A274()
{
  return sub_1A594BA0C();
}

_BYTE *sub_1A565A2B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, _QWORD *a12)
{
  return sub_1A5659944(a5, a6, a1, a2, a3 + 32, *(_QWORD *)(a3 + 16), a4 + 32, *(_QWORD *)(a4 + 16), a7, a8, a9, a10, a11, a12);
}

uint64_t sub_1A565A320()
{
  return sub_1A594BA0C();
}

uint64_t sub_1A565A368()
{
  return sub_1A594BA0C();
}

uint64_t static Base64.badCharacter.getter()
{
  return 0x1FFFFFFLL;
}

void sub_1A565A3BC()
{
  static Base64.decoding0 = (uint64_t)&unk_1E4E64A38;
}

uint64_t static Base64.decoding0.getter()
{
  return sub_1A565A53C(&qword_1EE7A8F20);
}

void sub_1A565A3EC()
{
  static Base64.decoding1 = (uint64_t)&unk_1E4E64E58;
}

uint64_t static Base64.decoding1.getter()
{
  return sub_1A565A53C(&qword_1EE7A8F28);
}

void sub_1A565A41C()
{
  static Base64.decoding2 = (uint64_t)&unk_1E4E65278;
}

uint64_t static Base64.decoding2.getter()
{
  return sub_1A565A53C(&qword_1EE7A8F30);
}

void sub_1A565A44C()
{
  static Base64.decoding3 = (uint64_t)&unk_1E4E65698;
}

uint64_t static Base64.decoding3.getter()
{
  return sub_1A565A53C(&qword_1EE7A8F38);
}

void sub_1A565A47C()
{
  static Base64.decoding0url = (uint64_t)&unk_1E4E63698;
}

uint64_t static Base64.decoding0url.getter()
{
  return sub_1A565A53C(&qword_1EE7A8F40);
}

void sub_1A565A4AC()
{
  static Base64.decoding1url = (uint64_t)&unk_1E4E63AB8;
}

uint64_t static Base64.decoding1url.getter()
{
  return sub_1A565A53C(&qword_1EE7A8F48);
}

void sub_1A565A4DC()
{
  static Base64.decoding2url = (uint64_t)&unk_1E4E63ED8;
}

uint64_t static Base64.decoding2url.getter()
{
  return sub_1A565A53C(&qword_1EE7A8F50);
}

void sub_1A565A50C()
{
  static Base64.decoding3url = (uint64_t)&unk_1E4E642F8;
}

uint64_t static Base64.decoding3url.getter()
{
  return sub_1A565A53C(&qword_1EE7A8F58);
}

uint64_t sub_1A565A53C(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t sub_1A565A574()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_1A565A738();
  v4 = sub_1A565A76C(v0, v1, v2, v3);
  OUTLINED_FUNCTION_17();
  return v4;
}

void sub_1A565A5C8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  sub_1A5658D3C(a1, a2, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), a3);
}

uint64_t sub_1A565A5E0()
{
  return sub_1A5659368();
}

unint64_t sub_1A565A5FC()
{
  unint64_t result;

  result = qword_1EE797108;
  if (!qword_1EE797108)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for Base64.DecodingError, &type metadata for Base64.DecodingError);
    atomic_store(result, (unint64_t *)&qword_1EE797108);
  }
  return result;
}

void sub_1A565A638(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  sub_1A5659864(a1, a2, *(_QWORD *)(v3 + 16), a3);
}

uint64_t sub_1A565A650()
{
  return sub_1A565A274();
}

uint64_t sub_1A565A670()
{
  return sub_1A565A320();
}

uint64_t sub_1A565A6A0()
{
  return sub_1A565A368();
}

uint64_t sub_1A565A6D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v2 + 24))(*(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 80), a1, a2);
}

uint64_t sub_1A565A708(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, _QWORD, uint64_t, uint64_t))(v2 + 24))(*(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), a1, a2);
}

uint64_t sub_1A565A738()
{
  return sub_1A594B718();
}

uint64_t sub_1A565A76C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD v15[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_1A565A8B0(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      sub_1A56D8FF8(v9, 0);
      v12 = v11;
      v13 = sub_1A565A99C((unint64_t)v15, v11 + 32, v10, a1, a2, a3, a4);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      if (v13 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v12 = MEMORY[0x1E0DEE9D8];
    }
    v14 = MEMORY[0x1A85AD9BC](v12 + 32, *(_QWORD *)(v12 + 16));
    swift_release();
    return v14;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x1A85AD9BCLL);
LABEL_9:
      sub_1A594C7D4();
      goto LABEL_12;
    }
    v15[0] = a3;
    v15[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1A85AD9BC]((char *)v15 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_1A565A8B0(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_1A56C83D0(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_1A56C83D0(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_1A594B664();
  }
  __break(1u);
  return result;
}

unint64_t sub_1A565A99C(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
    goto LABEL_38;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_35:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    result = v12;
    if ((v12 & 0xC) == v15)
      result = sub_1A56C83D0(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_1A594B670();
      v19 = result;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_1A594C7D4();
        v19 = *(_BYTE *)(result + v18);
      }
    }
    if ((v12 & 0xC) == v15)
    {
      result = sub_1A56C83D0(v12, a6, a7);
      v12 = result;
      if ((a7 & 0x1000000000000000) == 0)
      {
LABEL_27:
        v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_31;
      }
    }
    else if ((a7 & 0x1000000000000000) == 0)
    {
      goto LABEL_27;
    }
    if (v23 <= v12 >> 16)
      goto LABEL_37;
    v12 = sub_1A594B64C();
LABEL_31:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_35;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_35;
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1A565ABA0(uint64_t a1, uint64_t a2)
{
  return sub_1A5658FF4(a1, a2);
}

uint64_t OUTLINED_FUNCTION_2_3()
{
  return sub_1A594BD78();
}

uint64_t OUTLINED_FUNCTION_3_2()
{
  return sub_1A594CD38();
}

uint64_t OUTLINED_FUNCTION_4_3()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t OUTLINED_FUNCTION_7_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v0, v1);
}

uint64_t OUTLINED_FUNCTION_9_2()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_11_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  return static Base64._encodeChromium(input:buffer:length:options:)(v8, v6, a3, v7, a5, v5);
}

uint64_t OUTLINED_FUNCTION_12_0()
{
  return sub_1A594BA0C();
}

uint64_t OUTLINED_FUNCTION_13_0()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t OUTLINED_FUNCTION_14()
{
  return sub_1A594BB08();
}

uint64_t OUTLINED_FUNCTION_15_0()
{
  return sub_1A594B754();
}

uint64_t OUTLINED_FUNCTION_16_0()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t OUTLINED_FUNCTION_17()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_19()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_21()
{
  return swift_allocError();
}

uint64_t OUTLINED_FUNCTION_22()
{
  return swift_bridgeObjectRelease();
}

BOOL static Base64.DecodingError.__derived_enum_equals(_:_:)(__int16 a1, __int16 a2)
{
  if ((a1 & 0x100) != 0)
  {
    if ((_BYTE)a1)
    {
      if (a1 == 1)
      {
        if ((a2 & 0x100) == 0 || a2 != 1)
          return 0;
      }
      else if ((a2 & 0x100) == 0 || a2 <= 1u)
      {
        return 0;
      }
    }
    else if ((a2 & 0x100) == 0 || (_BYTE)a2)
    {
      return 0;
    }
    return 1;
  }
  else
  {
    if ((a2 & 0x100) != 0)
      return 0;
    return a1 == a2;
  }
}

BOOL sub_1A565AD90(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static Base64.DecodingError.__derived_enum_equals(_:_:)(*a1 | (a1[1] << 8), *a2 | (a2[1] << 8));
}

_WORD *__swift_memcpy2_1_0(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t _s13DecodingErrorOwet(uint64_t a1, int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;

  if (!a2)
    return 0;
  v2 = a2 + 0xFFFF;
  if ((a2 + 0xFFFF) <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (v2 < 0xFF0000)
    v3 = 1;
  if (v2 >= 0x10000)
    v4 = v3;
  else
    v4 = 0;
  return ((uint64_t (*)(void))((char *)&loc_1A565AE08 + 4 * byte_1A59AC7E0[v4]))();
}

uint64_t _s13DecodingErrorOwst(_WORD *a1, int a2, int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 0xFFFF;
  if ((a3 + 0xFFFF) <= 0xFFFEFFFF)
    v4 = 2;
  else
    v4 = 4;
  if (v3 < 0xFF0000)
    v4 = 1;
  if (v3 >= 0x10000)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3)
    v5 = v5;
  else
    v5 = 0;
  if (!a2)
    return ((uint64_t (*)(void))((char *)sub_1A565AECC + 4 * byte_1A59AC7EA[v5]))();
  *a1 = a2 - 1;
  return ((uint64_t (*)(void))((char *)sub_1A565AEAC + 4 * byte_1A59AC7E5[v5]))();
}

uint64_t sub_1A565AEAC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1A565AECC(uint64_t result)
{
  *(_BYTE *)(result + 2) = 0;
  return result;
}

uint64_t sub_1A565AED4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1A565AEDC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1A565AEE4(uint64_t result)
{
  *(_WORD *)(result + 2) = 0;
  return result;
}

uint64_t sub_1A565AEEC(uint64_t result)
{
  *(_DWORD *)(result + 2) = 0;
  return result;
}

uint64_t sub_1A565AEF8(unsigned __int8 *a1)
{
  if (a1[1])
    return (*a1 | (a1[1] << 8)) - 255;
  else
    return 0;
}

_BYTE *sub_1A565AF18(_BYTE *result, int a2)
{
  unsigned int v2;

  if (a2)
  {
    *result = a2 - 1;
    v2 = ((a2 - 1) >> 8) + 1;
  }
  else
  {
    LOBYTE(v2) = 0;
  }
  result[1] = v2;
  return result;
}

ValueMetadata *type metadata accessor for Base64.DecodingError()
{
  return &type metadata for Base64.DecodingError;
}

void sub_1A565AF50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1A565AF5C(a1, a2, a3, a4);
}

void sub_1A565AF5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  Swift::Int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  Swift::Int v18;
  Swift::Int v19;
  char v20;
  char v21;
  int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  Swift::Int v26;
  uint64_t v27;
  char v28;
  Swift::Int v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  Swift::Int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  __int16 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  Swift::Int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  Swift::Int v62;
  unsigned int v63;
  unsigned int v64;
  int v65;
  Swift::Int v66;
  char v67;
  Swift::Int v68;
  Swift::Int v69;
  int v70;
  Swift::Int v71;
  char v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD v85[3];
  _BYTE __dst[96];
  uint64_t v87;
  _QWORD v88[4];
  int v89;
  __int16 v90;
  char v91;
  uint64_t v92;
  _QWORD v93[3];
  _QWORD v94[2];
  uint64_t v95;
  _QWORD v96[4];
  int v97;
  __int16 v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  __int16 v103;
  char v104;
  uint64_t v105;
  _QWORD v106[3];
  Swift::String v107;
  Swift::String v108;
  Swift::String v109;

  OUTLINED_FUNCTION_276();
  v11 = v6 + 8;
  v12 = *(unsigned int *)(v6 + 20);
  v83 = v13;
  v84 = *(_QWORD *)(v13 + 16);
  v82 = v8;
  v73 = v9;
  v74 = v10;
  v72 = v14;
  if (v84)
  {
    LODWORD(v4) = v7;
    OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_12_1();
    OUTLINED_FUNCTION_3_3();
    v15 = OUTLINED_FUNCTION_160();
    OUTLINED_FUNCTION_24(v15, v16, v17);
    v19 = v18;
    v21 = v20;
    v75 = v5;
    OUTLINED_FUNCTION_9_2();
    if ((v21 & 1) != 0)
    {
      v107._countAndFlagsBits = OUTLINED_FUNCTION_263();
      v19 = OUTLINED_FUNCTION_57(v107, v12);
    }
    OUTLINED_FUNCTION_5_1();
    OUTLINED_FUNCTION_15_1();
    v22 = *(_DWORD *)(v6 + 20);
    v23 = v82;
    v24 = v73;
    v25 = v74;
    if (__CFADD__(v22, (_DWORD)v19))
      goto LABEL_63;
    v26 = v19;
    *(_DWORD *)(v6 + 20) = v22 + v19;
    if ((v72 & 1) == 0)
      goto LABEL_14;
  }
  else
  {
    v25 = v10;
    v24 = v9;
    v23 = v8;
    v27 = OUTLINED_FUNCTION_92();
    if ((v28 & 1) == 0)
      goto LABEL_47;
  }
  v29 = v26;
  OUTLINED_FUNCTION_129();
  if ((v30 & 1) != 0)
    OUTLINED_FUNCTION_51(40);
  OUTLINED_FUNCTION_154();
  if (v32)
    goto LABEL_66;
  *(_DWORD *)(v6 + 20) = v4;
  v26 = v29 + v31;
  if (__OFADD__(v29, v31))
  {
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
    return;
  }
  if (!v84)
  {
LABEL_43:
    v4 = v4;
    OUTLINED_FUNCTION_9_3(41, 0xE100000000000000, v11);
    if ((v67 & 1) != 0)
      OUTLINED_FUNCTION_51(41);
    OUTLINED_FUNCTION_154();
    if (v32)
      goto LABEL_68;
    *(_DWORD *)(v6 + 20) = v4;
    goto LABEL_47;
  }
  v75 = v5;
LABEL_14:
  v71 = v26;
  v78 = v23 & 0xFFFFFFFFFFFFFFLL;
  v77 = (char *)v85 + (HIBYTE(v23) & 0xF);
  v76 = (v23 & 0xFFFFFFFFFFFFFFFLL) + 32;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v33 = 0;
  v34 = 0;
  do
  {
    v35 = *(_QWORD *)(v83 + 8 * v33 + 32);
    if (v35 < 0)
    {
      v39 = *(_QWORD *)(v35 + 16);
      v38 = *(_QWORD *)(v35 + 24);
      v40 = *(_DWORD *)(v35 + 32);
      v41 = *(_WORD *)(v35 + 36);
      v43 = *(_QWORD *)(v35 + 40);
      v42 = *(_QWORD *)(v35 + 48);
      v44 = *(unsigned int *)(v35 + 56);
      v45 = *(unsigned __int8 *)(v35 + 62);
      v46 = *(unsigned __int16 *)(v35 + 60) | (v45 << 16);
      v5 = *(_QWORD *)(v35 + 64);
      v47 = *(_BYTE *)(v35 + 38);
      v95 = 0;
      v96[0] = 0;
      *(_QWORD *)((char *)v96 + 7) = 0;
      v96[2] = v43;
      v96[3] = v42;
      v80 = v44;
      v81 = v42;
      v97 = v44;
      v99 = v45;
      v98 = v46;
      v100 = v39;
      v101 = v38;
      v104 = v47;
      v103 = v41;
      v102 = v40;
      v105 = 0;
      v106[0] = 0;
      *(_QWORD *)((char *)v106 + 7) = 0;
      OUTLINED_FUNCTION_87();
      OUTLINED_FUNCTION_69();
      OUTLINED_FUNCTION_87();
      OUTLINED_FUNCTION_155();
      OUTLINED_FUNCTION_247((uint64_t)&v95);
      v49 = v48;
      OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_5_1();
      v50 = OUTLINED_FUNCTION_69();
      v51 = sub_1A565AF5C(v50, 0, 0xE000000000000000, 0, 0xE000000000000000, 0, 0xE000000000000000, 0, v6);
      OUTLINED_FUNCTION_55();
      v52 = __OFADD__(v49, v51);
      v53 = v49 + v51;
      if (v52)
        goto LABEL_59;
      v87 = 0;
      v88[0] = 0;
      *(_QWORD *)((char *)v88 + 7) = 0;
      v88[2] = v43;
      v88[3] = v81;
      v89 = v80;
      v91 = (v80 | (unint64_t)(v46 << 32)) >> 48;
      v90 = (v80 | (unint64_t)(v46 << 32)) >> 32;
      v92 = 0;
      v93[0] = 0;
      *(_QWORD *)((char *)v93 + 7) = 0;
      v93[2] = 0;
      v94[0] = 0;
      *(_QWORD *)((char *)v94 + 7) = 0;
      OUTLINED_FUNCTION_3_3();
      OUTLINED_FUNCTION_247((uint64_t)&v87);
      v55 = v54;
      OUTLINED_FUNCTION_55();
      OUTLINED_FUNCTION_15_1();
      swift_release_n();
      v52 = __OFADD__(v53, v55);
      v37 = v53 + v55;
      if (v52)
        goto LABEL_60;
      v11 = v6 + 8;
      v23 = v82;
    }
    else
    {
      memcpy(__dst, (const void *)(v35 + 16), 0x5FuLL);
      OUTLINED_FUNCTION_0_10();
      sub_1A566668C((uint64_t)__dst);
      OUTLINED_FUNCTION_247((uint64_t)__dst);
      v37 = v36;
      sub_1A56666E0((uint64_t)__dst);
    }
    v52 = __OFADD__(v34, v37);
    v56 = v34 + v37;
    if (v52)
    {
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
      goto LABEL_61;
    }
    v4 = *(unsigned int *)(v6 + 20);
    if (v33 >= v84 - 1)
    {
      swift_release();
      v62 = 0;
    }
    else
    {
      v5 = *(_QWORD *)(v6 + 8);
      if ((v23 & 0x1000000000000000) != 0)
      {
        OUTLINED_FUNCTION_11_1();
        OUTLINED_FUNCTION_12_1();
        OUTLINED_FUNCTION_192();
        v62 = OUTLINED_FUNCTION_57(v108, v66);
        OUTLINED_FUNCTION_15_1();
        OUTLINED_FUNCTION_36();
      }
      else
      {
        if ((v23 & 0x2000000000000000) != 0)
        {
          v85[0] = a4;
          v85[1] = v78;
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_12_1();
          OUTLINED_FUNCTION_42();
          v60 = v85;
          v61 = (uint64_t)v77;
        }
        else
        {
          v57 = a4 & 0xFFFFFFFFFFFFLL;
          v58 = v76;
          if ((a4 & 0x1000000000000000) == 0)
            v58 = OUTLINED_FUNCTION_233();
          if (v58)
            v59 = v58 + v57;
          else
            v59 = 0;
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_12_1();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v60 = (_QWORD *)v58;
          v61 = v59;
          v23 = v82;
        }
        OUTLINED_FUNCTION_262((uint64_t)v60, v61, v4);
        v64 = v63;
        OUTLINED_FUNCTION_15_1();
        OUTLINED_FUNCTION_36();
        OUTLINED_FUNCTION_38();
        v62 = v64;
      }
      swift_release();
      v65 = *(_DWORD *)(v6 + 20);
      v4 = (v65 + v62);
      if (__CFADD__(v65, (_DWORD)v62))
        goto LABEL_58;
      *(_DWORD *)(v6 + 20) = v4;
    }
    v52 = __OFADD__(v56, v62);
    v34 = v56 + v62;
    if (v52)
      goto LABEL_57;
    ++v33;
  }
  while (v84 != v33);
  swift_bridgeObjectRelease();
  v26 = v71 + v34;
  if (__OFADD__(v71, v34))
    goto LABEL_64;
  if ((v72 & 1) != 0)
  {
    v24 = v73;
    v25 = v74;
    LOBYTE(v5) = v75;
    goto LABEL_43;
  }
  v27 = 0;
  v24 = v73;
  v25 = v74;
LABEL_47:
  v68 = v26 + v27;
  if (__OFADD__(v26, v27))
  {
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  if (v84)
  {
    OUTLINED_FUNCTION_82();
    OUTLINED_FUNCTION_0_10();
    OUTLINED_FUNCTION_1_2();
    OUTLINED_FUNCTION_149(v24, v25, v6 + 8, v4);
    OUTLINED_FUNCTION_80();
    if ((v5 & 1) != 0)
    {
      OUTLINED_FUNCTION_227();
      v4 = OUTLINED_FUNCTION_35(v109, v69);
    }
    OUTLINED_FUNCTION_2_4();
    OUTLINED_FUNCTION_4_4();
    OUTLINED_FUNCTION_211();
    if (v32)
      goto LABEL_65;
    *(_DWORD *)(v6 + 20) = v70;
  }
  else
  {
    v4 = 0;
  }
  if (__OFADD__(v68, v4))
    goto LABEL_62;
}

#error "1A565B6DC: call analysis failed (funcsize=206)"

void sub_1A565B800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  Swift::Int v17;
  Swift::Int v18;
  char v19;
  char v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  Swift::Int v24;
  unsigned int v25;
  char v26;
  uint64_t v27;
  BOOL v28;
  BOOL v29;
  uint64_t v30;
  Swift::Int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  Swift::Int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  char *v49;
  uint64_t v50;
  int v51;
  int v52;
  int v53;
  Swift::Int v54;
  int v55;
  uint64_t v56;
  Swift::Int v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  _QWORD *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  Swift::Int v70;
  unsigned int v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  Swift::Int v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  Swift::Int v85;
  Swift::Int v86;
  Swift::Int v87;
  Swift::Int v88;
  char v89;
  char v90;
  int v91;
  Swift::Int v92;
  char v94;
  uint64_t v95;
  char *v96;
  uint64_t v98;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  int v108;
  unint64_t v109;
  uint64_t v110;
  int v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int v116;
  char v117;
  Swift::String v118;
  Swift::String v119;
  Swift::String v120;
  Swift::String v121;

  v9 = a9;
  v10 = a9 + 8;
  v11 = *(unsigned int *)(a9 + 20);
  OUTLINED_FUNCTION_120();
  v100 = v14;
  v95 = v12;
  v94 = v13;
  if (v14)
  {
    OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_30();
    v15 = OUTLINED_FUNCTION_215();
    OUTLINED_FUNCTION_24(v15, v16, v10);
    v18 = v17;
    v20 = v19;
    OUTLINED_FUNCTION_9_2();
    if ((v20 & 1) != 0)
    {
      v118._countAndFlagsBits = OUTLINED_FUNCTION_215();
      v18 = OUTLINED_FUNCTION_88(v118, v11);
    }
    OUTLINED_FUNCTION_48();
    OUTLINED_FUNCTION_23();
    v10 = a9 + 8;
    v21 = *(_DWORD *)(a9 + 20);
    LODWORD(v11) = v21 + v18;
    v22 = v95;
    if (__CFADD__(v21, (_DWORD)v18))
      goto LABEL_79;
    *(_DWORD *)(a9 + 20) = v11;
    if ((v94 & 1) == 0)
      goto LABEL_13;
  }
  else
  {
    v22 = v12;
    v18 = 0;
    v23 = 0;
    v24 = 0;
    v25 = v11;
    if ((v13 & 1) == 0)
      goto LABEL_62;
  }
  OUTLINED_FUNCTION_8_2(40, 0xE100000000000000, v10);
  if ((v26 & 1) != 0)
    OUTLINED_FUNCTION_81(40);
  OUTLINED_FUNCTION_99();
  if (v28)
    goto LABEL_82;
  *(_DWORD *)(a9 + 20) = v11;
  v29 = __OFADD__(v18, v27);
  v18 += v27;
  if (v29)
  {
LABEL_83:
    __break(1u);
LABEL_84:
    __break(1u);
    return;
  }
  v25 = v11;
  v24 = v18;
  if (!v100)
  {
LABEL_57:
    OUTLINED_FUNCTION_8_2(41, 0xE100000000000000, v10);
    if ((v84 & 1) != 0)
      OUTLINED_FUNCTION_81(41);
    OUTLINED_FUNCTION_275();
    if (v28)
      goto LABEL_84;
    *(_DWORD *)(v9 + 20) = v25;
    goto LABEL_62;
  }
LABEL_13:
  v92 = v18;
  v101 = v10;
  v30 = 0;
  v31 = 0;
  v35 = OUTLINED_FUNCTION_78() + 48;
  v25 = v11;
  do
  {
    v36 = *(_QWORD *)(v35 - 16);
    v37 = *(_QWORD *)(v35 - 8);
    v38 = *(_QWORD *)v35;
    v39 = *(_QWORD *)(v35 + 8);
    v40 = *(_QWORD *)(v35 + 16);
    v41 = *(_QWORD *)(v35 + 24);
    v42 = *(_QWORD *)(v35 + 32);
    v43 = *(unsigned int *)(v35 + 40) | ((unint64_t)*(unsigned __int8 *)(v35 + 44) << 32);
    v102 = v43;
    v103 = v41;
    v104 = v36;
    v105 = *(_QWORD *)v35;
    if (v39 >> 62)
    {
      if (v39 >> 62 == 1)
      {
        v108 = v36;
        v109 = v37;
        v110 = v38;
        v111 = v39;
        v112 = BYTE4(v39);
        v113 = v40;
        v114 = v41;
        v115 = v42;
        v116 = v43;
        v117 = BYTE4(v43);
        OUTLINED_FUNCTION_76(v36, v32, v38, v33, v40, v41, v34, v43);
        sub_1A5702090((uint64_t)&v108);
      }
      else
      {
        v50 = OUTLINED_FUNCTION_171((__n128)xmmword_1A59ABF30);
        OUTLINED_FUNCTION_85(v50, (unint64_t)&v106 | 9);
        v51 = *(_DWORD *)(v9 + 20);
        v28 = __CFADD__(v51, (_DWORD)v44);
        v52 = v51 + v44;
        if (v28)
          goto LABEL_74;
        v44 = v44;
        *(_DWORD *)(v9 + 20) = v52;
      }
    }
    else
    {
      if ((v37 & 0x1000000000000000) != 0)
      {
        OUTLINED_FUNCTION_76(v36, v32, v38, v33, v40, v41, v34, v43);
        v120._countAndFlagsBits = OUTLINED_FUNCTION_265();
        v54 = OUTLINED_FUNCTION_110(v120, v25);
      }
      else
      {
        if ((v37 & 0x2000000000000000) != 0)
        {
          v106 = *(_QWORD *)(v35 - 16);
          v107 = v37 & 0xFFFFFFFFFFFFFFLL;
          OUTLINED_FUNCTION_76(v36, v32, v38, v33, v40, v41, v34, v43);
          OUTLINED_FUNCTION_42();
          v48 = &v106;
          v49 = (char *)&v106 + (HIBYTE(v37) & 0xF);
        }
        else
        {
          if ((v36 & 0x1000000000000000) != 0)
          {
            v45 = (v37 & 0xFFFFFFFFFFFFFFFLL) + 32;
            v46 = v36 & 0xFFFFFFFFFFFFLL;
          }
          else
          {
            v82 = *(_QWORD *)(v35 + 16);
            v83 = sub_1A594C7D4();
            v43 = v102;
            v41 = v103;
            v40 = v82;
            v45 = v83;
            v36 = v104;
            v38 = v105;
          }
          v47 = v45 + v46;
          if (!v45)
            v47 = 0;
          v96 = (char *)v47;
          OUTLINED_FUNCTION_76(v36, v46, v38, v33, v40, v41, v34, v43);
          OUTLINED_FUNCTION_42();
          v48 = (_QWORD *)v45;
          v49 = v96;
        }
        OUTLINED_FUNCTION_85((uint64_t)v48, (uint64_t)v49);
        LODWORD(v54) = v53;
        OUTLINED_FUNCTION_38();
        v54 = v54;
      }
      v55 = *(_DWORD *)(v9 + 20);
      if (__CFADD__(v55, (_DWORD)v54))
        goto LABEL_75;
      *(_DWORD *)(v9 + 20) = v55 + v54;
      if ((v39 & 0xFFFFFFFFFFFFLL) >> 40 <= 0xFE)
      {
        v106 = v105;
        LODWORD(v107) = v39;
        BYTE4(v107) = BYTE4(v39);
        BYTE5(v107) = ((unsigned __int16)((v39 & 0xFFFFFFFFFFFFLL) >> 32) >> 8) & 1;
        sub_1A570551C((uint64_t)&v106, v9);
      }
      else
      {
        v56 = 0;
      }
      v29 = __OFADD__(v54, v56);
      v44 = v54 + v56;
      if (v29)
        goto LABEL_76;
    }
    v57 = v31 + v44;
    if (__OFADD__(v31, v44))
    {
      __break(1u);
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
      goto LABEL_77;
    }
    v25 = *(_DWORD *)(v9 + 20);
    if (v30 >= v100 - 1)
    {
      v63 = OUTLINED_FUNCTION_224();
      sub_1A56669A0(v63, v64, v65, v66, v67, v68, v42, v69);
      v70 = 0;
    }
    else
    {
      v98 = v42;
      if ((a5 & 0x1000000000000000) != 0)
      {
        OUTLINED_FUNCTION_17_0();
        OUTLINED_FUNCTION_18_0();
        OUTLINED_FUNCTION_277();
        v70 = OUTLINED_FUNCTION_110(v119, v81);
        OUTLINED_FUNCTION_19_0();
        OUTLINED_FUNCTION_23();
      }
      else
      {
        if ((a5 & 0x2000000000000000) != 0)
        {
          v106 = a4;
          v107 = a5 & 0xFFFFFFFFFFFFFFLL;
          OUTLINED_FUNCTION_69();
          OUTLINED_FUNCTION_17_0();
          OUTLINED_FUNCTION_18_0();
          v61 = &v106;
          v62 = (char *)&v106 + (HIBYTE(a5) & 0xF);
        }
        else
        {
          v58 = a4 & 0xFFFFFFFFFFFFLL;
          v59 = (a5 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((a4 & 0x1000000000000000) == 0)
            v59 = OUTLINED_FUNCTION_108();
          if (v59)
            v60 = (char *)(v59 + v58);
          else
            v60 = 0;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          OUTLINED_FUNCTION_17_0();
          OUTLINED_FUNCTION_18_0();
          v61 = (_QWORD *)v59;
          v62 = v60;
        }
        OUTLINED_FUNCTION_85((uint64_t)v61, (uint64_t)v62);
        v72 = v71;
        OUTLINED_FUNCTION_19_0();
        OUTLINED_FUNCTION_23();
        OUTLINED_FUNCTION_55();
        v70 = v72;
      }
      v73 = OUTLINED_FUNCTION_224();
      sub_1A56669A0(v73, v74, v75, v76, v77, v78, v98, v79);
      v9 = a9;
      v80 = *(_DWORD *)(a9 + 20);
      v25 = v80 + v70;
      if (__CFADD__(v80, (_DWORD)v70))
        goto LABEL_73;
      *(_DWORD *)(a9 + 20) = v25;
    }
    v31 = v57 + v70;
    if (__OFADD__(v57, v70))
      goto LABEL_72;
    ++v30;
    v35 += 64;
  }
  while (v100 != v30);
  OUTLINED_FUNCTION_77();
  v24 = v92 + v31;
  if (__OFADD__(v92, v31))
    goto LABEL_80;
  v22 = v95;
  if ((v94 & 1) != 0)
  {
    v10 = v101;
    goto LABEL_57;
  }
  v23 = 0;
  v10 = v101;
LABEL_62:
  v85 = v24 + v23;
  if (__OFADD__(v24, v23))
  {
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }
  if (v100)
  {
    v86 = v25;
    OUTLINED_FUNCTION_13_0();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_0_10();
    OUTLINED_FUNCTION_181(v22, (unint64_t)a7, v10);
    v88 = v87;
    v90 = v89;
    OUTLINED_FUNCTION_19();
    if ((v90 & 1) != 0)
    {
      v121._countAndFlagsBits = v22;
      v121._object = a7;
      v88 = OUTLINED_FUNCTION_86(v121, v86);
    }
    OUTLINED_FUNCTION_4_4();
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_218();
    if (v28)
      goto LABEL_81;
    *(_DWORD *)(v9 + 20) = v91;
  }
  else
  {
    v88 = 0;
  }
  if (__OFADD__(v85, v88))
    goto LABEL_78;
}

void sub_1A565BDA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,__int16 a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  _BYTE *v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  Swift::Int v55;
  Swift::Int v56;
  char v57;
  Swift::Int v58;
  uint64_t v59;
  _BYTE *v60;
  BOOL v61;
  Swift::Int v62;
  Swift::Int v63;
  uint64_t v64;
  Swift::Int v65;
  char v66;
  int v67;
  unsigned int v68;
  Swift::Int v69;
  uint64_t v70;
  uint64_t v71;
  Swift::Int v72;
  int v73;
  __int16 v74;
  char v75;
  uint64_t v76;
  BOOL v77;
  Swift::Int v78;
  Swift::Int v79;
  Swift::Int v80;
  Swift::Int v81;
  char v82;
  char v83;
  int v84;
  int v85;
  uint64_t v86;
  Swift::Int v87;
  Swift::Int v88;
  char v89;
  int v90;
  int v91;
  Swift::Int v92;
  char v93;
  char v94;
  int v95;
  int v96;
  uint64_t v97;
  char v98;
  _BYTE *v99;
  Swift::Int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  uint64_t v105;
  uint64_t v106;
  Swift::String v107;
  Swift::String v108;
  Swift::String v109;
  Swift::String v110;

  OUTLINED_FUNCTION_130();
  a39 = v41;
  a40 = v46;
  v97 = v47;
  v103 = v48;
  v104 = v49;
  v50 = a41;
  v51 = *(_DWORD *)(a41 + 20);
  v99 = v44;
  v105 = *(_QWORD *)(v52 + 16);
  v106 = a41 + 8;
  v98 = v45;
  if (v105)
  {
    v53 = v43;
    v54 = v42;
    OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_3_3();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_22_0(v54, v53);
    v56 = v55;
    LOBYTE(v54) = v57;
    OUTLINED_FUNCTION_72();
    if ((v54 & 1) != 0)
    {
      v107._countAndFlagsBits = OUTLINED_FUNCTION_190();
      v56 = OUTLINED_FUNCTION_147(v107, v58);
    }
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_5_1();
    OUTLINED_FUNCTION_162();
    v60 = v99;
    if (v61)
    {
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
    v100 = v56;
    *(_DWORD *)(v50 + 20) = v51;
    if ((v98 & 1) == 0)
      goto LABEL_14;
  }
  else
  {
    v60 = v44;
    v100 = 0;
    v62 = 0;
    v63 = 0;
    v59 = 0;
    if ((v45 & 1) == 0)
      goto LABEL_40;
  }
  v64 = v59;
  OUTLINED_FUNCTION_22_0(40, 0xE100000000000000);
  if ((v66 & 1) != 0)
  {
    v108._countAndFlagsBits = 40;
    v108._object = (void *)0xE100000000000000;
    v65 = OUTLINED_FUNCTION_147(v108, v51);
  }
  v67 = *(_DWORD *)(v50 + 20);
  v61 = __CFADD__(v67, (_DWORD)v65);
  v68 = v67 + v65;
  if (v61)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  *(_DWORD *)(v50 + 20) = v68;
  v69 = v100 + v65;
  if (!__OFADD__(v100, v65))
  {
    if (!v64)
    {
      v71 = v97;
LABEL_29:
      v88 = v68;
      OUTLINED_FUNCTION_22_0(41, 0xE100000000000000);
      if ((v89 & 1) != 0)
      {
        v110._countAndFlagsBits = 41;
        v110._object = (void *)0xE100000000000000;
        v87 = OUTLINED_FUNCTION_147(v110, v88);
      }
      v90 = *(_DWORD *)(v50 + 20);
      v61 = __CFADD__(v90, (_DWORD)v87);
      v91 = v90 + v87;
      if (v61)
        goto LABEL_51;
      *(_DWORD *)(v50 + 20) = v91;
      goto LABEL_33;
    }
    v59 = v64;
    v100 += v65;
LABEL_14:
    v64 = v59;
    v70 = v59 - 1;
    v71 = 0;
    v72 = 0;
    v60 = (_BYTE *)(OUTLINED_FUNCTION_146() + 54);
    v101 = v70;
    v102 = v50;
    do
    {
      v73 = *(_DWORD *)(v60 - 6);
      v74 = *((_WORD *)v60 - 1);
      v75 = *v60;
      a24 = *(_QWORD *)(v60 - 22);
      a25 = *(_QWORD *)(v60 - 14);
      a26 = v73;
      a27 = v74;
      a28 = v75;
      OUTLINED_FUNCTION_3_3();
      sub_1A56B5B10((uint64_t)&a24, v50);
      v77 = __OFADD__(v72, v76);
      v78 = v72 + v76;
      if (v77)
      {
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }
      v79 = *(unsigned int *)(v50 + 20);
      if (v71 >= v70)
      {
        OUTLINED_FUNCTION_5_1();
        v81 = 0;
        v86 = v64;
      }
      else
      {
        OUTLINED_FUNCTION_90();
        OUTLINED_FUNCTION_11_1();
        OUTLINED_FUNCTION_12_1();
        sub_1A56814E0(v103, (unint64_t)v104, v106, v79);
        v81 = v80;
        v83 = v82;
        OUTLINED_FUNCTION_52();
        if ((v83 & 1) != 0)
        {
          v109._countAndFlagsBits = v103;
          v109._object = v104;
          v81 = OUTLINED_FUNCTION_147(v109, v79);
        }
        OUTLINED_FUNCTION_5_1();
        swift_release();
        swift_release();
        v70 = v101;
        v50 = v102;
        v84 = *(_DWORD *)(v102 + 20);
        v61 = __CFADD__(v84, (_DWORD)v81);
        v85 = v84 + v81;
        v86 = v105;
        if (v61)
          goto LABEL_44;
        *(_DWORD *)(v102 + 20) = v85;
      }
      v77 = __OFADD__(v78, v81);
      v72 = v78 + v81;
      if (v77)
        goto LABEL_43;
      v60 += 24;
      ++v71;
      v64 = v86;
    }
    while (v86 != v71);
    OUTLINED_FUNCTION_128();
    v69 = v100 + v72;
    if (__OFADD__(v100, v72))
      goto LABEL_48;
    if ((v98 & 1) != 0)
    {
      OUTLINED_FUNCTION_173();
      goto LABEL_29;
    }
    OUTLINED_FUNCTION_173();
LABEL_33:
    v62 = v69 + v87;
    if (__OFADD__(v69, v87))
    {
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    if (v64)
    {
      OUTLINED_FUNCTION_42();
      OUTLINED_FUNCTION_1_2();
      OUTLINED_FUNCTION_12_1();
      OUTLINED_FUNCTION_22_0(v71, (unint64_t)v60);
      v63 = v92;
      v94 = v93;
      OUTLINED_FUNCTION_38();
      if ((v94 & 1) != 0)
        v63 = OUTLINED_FUNCTION_33(v71, (uint64_t)v60);
      OUTLINED_FUNCTION_5_1();
      OUTLINED_FUNCTION_2_4();
      v95 = *(_DWORD *)(v50 + 20);
      v61 = __CFADD__(v95, (_DWORD)v63);
      v96 = v95 + v63;
      if (v61)
        goto LABEL_52;
      *(_DWORD *)(v50 + 20) = v96;
    }
    else
    {
      v63 = 0;
    }
LABEL_40:
    if (!__OFADD__(v62, v63))
    {
      OUTLINED_FUNCTION_43();
      return;
    }
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
}

void sub_1A565C11C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,int a26,__int16 a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  Swift::Int v54;
  Swift::Int v55;
  char v56;
  char v57;
  Swift::Int v58;
  int v59;
  Swift::Int v60;
  Swift::Int v61;
  Swift::Int v62;
  char v63;
  int v64;
  unsigned int v65;
  BOOL v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  Swift::Int v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  __int16 v74;
  char v75;
  uint64_t v76;
  unsigned int v77;
  BOOL v78;
  uint64_t v79;
  Swift::Int v80;
  uint64_t v81;
  unint64_t v82;
  Swift::Int v83;
  Swift::Int v84;
  char v85;
  char v86;
  Swift::String v87;
  Swift::Int v88;
  int v89;
  Swift::Int v90;
  char v91;
  int v92;
  uint64_t v93;
  unint64_t v94;
  Swift::Int v95;
  char v96;
  char v97;
  int v98;
  int v99;
  char v100;
  Swift::Int v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  Swift::String v106;
  Swift::String v107;
  Swift::String v108;
  Swift::String v109;

  OUTLINED_FUNCTION_65();
  a42 = v44;
  a43 = v46;
  v47 = a44;
  v48 = a44 + 8;
  v49 = *(_DWORD *)(a44 + 20);
  v102 = v50;
  v103 = a44;
  v105 = *(_QWORD *)(v50 + 16);
  v100 = v45;
  if (v105)
  {
    OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_17_0();
    v51 = OUTLINED_FUNCTION_190();
    OUTLINED_FUNCTION_9_3(v51, v52, v53);
    v55 = v54;
    v57 = v56;
    OUTLINED_FUNCTION_72();
    if ((v57 & 1) != 0)
    {
      OUTLINED_FUNCTION_222();
      v55 = OUTLINED_FUNCTION_104(v106, v58);
    }
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_40();
    v47 = v103;
    v59 = *(_DWORD *)(v103 + 20);
    v49 = v59 + v55;
    if (__CFADD__(v59, (_DWORD)v55))
    {
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
      goto LABEL_54;
    }
    v101 = v55;
    *(_DWORD *)(v103 + 20) = v49;
    if ((v100 & 1) == 0)
      goto LABEL_13;
  }
  else
  {
    v101 = 0;
    v60 = 0;
    v61 = 0;
    if ((v45 & 1) == 0)
      goto LABEL_42;
  }
  OUTLINED_FUNCTION_9_3(40, 0xE100000000000000, v48);
  if ((v63 & 1) != 0)
  {
    v107._countAndFlagsBits = 40;
    v107._object = (void *)0xE100000000000000;
    v62 = OUTLINED_FUNCTION_104(v107, v49);
  }
  v64 = *(_DWORD *)(v47 + 20);
  v65 = v64 + v62;
  if (__CFADD__(v64, (_DWORD)v62))
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  *(_DWORD *)(v47 + 20) = v65;
  v66 = __OFADD__(v101, v62);
  v101 += v62;
  if (!v66)
  {
    if (!v105)
    {
LABEL_30:
      OUTLINED_FUNCTION_9_3(41, 0xE100000000000000, v48);
      if ((v91 & 1) != 0)
      {
        v108._countAndFlagsBits = 41;
        v108._object = (void *)0xE100000000000000;
        v90 = OUTLINED_FUNCTION_104(v108, v65);
      }
      v92 = *(_DWORD *)(v47 + 20);
      v65 = v92 + v90;
      if (__CFADD__(v92, (_DWORD)v90))
        goto LABEL_56;
      *(_DWORD *)(v47 + 20) = v65;
      goto LABEL_35;
    }
LABEL_13:
    v104 = v48;
    OUTLINED_FUNCTION_206();
    v67 = v102;
    OUTLINED_FUNCTION_27();
    v68 = 0;
    v69 = 0;
    v70 = 0;
    do
    {
      if (*(_DWORD *)(v67 + v68 + 44) < *(_DWORD *)(v67 + v68 + 40))
      {
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
        goto LABEL_50;
      }
      OUTLINED_FUNCTION_193();
      if (!v78)
        goto LABEL_45;
      if (v77 < v72)
        goto LABEL_46;
      a23 = *(_QWORD *)(v76 + 32);
      a24 = v71;
      a25 = v72;
      a26 = v73;
      a27 = v74;
      a28 = v75;
      a29 = v71;
      a30 = v72;
      OUTLINED_FUNCTION_39();
      sub_1A56BA79C((uint64_t)&a23);
      v80 = v70 + v79;
      if (__OFADD__(v70, v79))
        goto LABEL_47;
      v65 = *(_DWORD *)(v47 + 20);
      if (v69 >= a20)
      {
        OUTLINED_FUNCTION_40();
        v84 = 0;
      }
      else
      {
        OUTLINED_FUNCTION_27();
        OUTLINED_FUNCTION_1_2();
        OUTLINED_FUNCTION_30();
        v81 = OUTLINED_FUNCTION_270();
        OUTLINED_FUNCTION_9_3(v81, v82, v104);
        v84 = v83;
        v86 = v85;
        OUTLINED_FUNCTION_17();
        if ((v86 & 1) != 0)
        {
          OUTLINED_FUNCTION_204();
          v84 = ByteBuffer._setStringSlowpath(_:at:)(v87, v88);
        }
        OUTLINED_FUNCTION_40();
        OUTLINED_FUNCTION_48();
        swift_release();
        v67 = v102;
        v47 = v103;
        v89 = *(_DWORD *)(v103 + 20);
        v65 = v89 + v84;
        if (__CFADD__(v89, (_DWORD)v84))
          goto LABEL_49;
        *(_DWORD *)(v103 + 20) = v65;
      }
      v66 = __OFADD__(v80, v84);
      v70 = v80 + v84;
      if (v66)
        goto LABEL_48;
      ++v69;
      v68 += 24;
    }
    while (v105 != v69);
    OUTLINED_FUNCTION_17();
    v66 = __OFADD__(v101, v70);
    v101 += v70;
    if (v66)
      goto LABEL_53;
    if ((v100 & 1) != 0)
    {
      v48 = v104;
      goto LABEL_30;
    }
    v90 = 0;
    v48 = v104;
LABEL_35:
    v60 = v101 + v90;
    if (__OFADD__(v101, v90))
    {
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
    if (v105)
    {
      OUTLINED_FUNCTION_4_3();
      OUTLINED_FUNCTION_0_10();
      OUTLINED_FUNCTION_17_0();
      v93 = OUTLINED_FUNCTION_212();
      OUTLINED_FUNCTION_9_3(v93, v94, v48);
      v61 = v95;
      v97 = v96;
      OUTLINED_FUNCTION_41();
      if ((v97 & 1) != 0)
      {
        v109._countAndFlagsBits = OUTLINED_FUNCTION_212();
        v61 = OUTLINED_FUNCTION_35(v109, v65);
      }
      OUTLINED_FUNCTION_23();
      OUTLINED_FUNCTION_4_4();
      v98 = *(_DWORD *)(v103 + 20);
      v78 = __CFADD__(v98, (_DWORD)v61);
      v99 = v98 + v61;
      if (v78)
        goto LABEL_57;
      *(_DWORD *)(v103 + 20) = v99;
    }
    else
    {
      v61 = 0;
    }
LABEL_42:
    if (!__OFADD__(v60, v61))
    {
      OUTLINED_FUNCTION_21_0();
      return;
    }
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
}

void sub_1A565C4AC()
{
  sub_1A565C4B8();
}

void sub_1A565C4B8()
{
  Swift::UInt32 v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  Swift::Int v13;
  char v14;
  char v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  Swift::Int v19;
  Swift::UInt32 v20;
  Swift::Int v21;
  char v22;
  int v23;
  BOOL v24;
  Swift::Int v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  Swift::Int v32;
  Swift::Int v33;
  char v34;
  char v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  OUTLINED_FUNCTION_225();
  v37 = v3;
  OUTLINED_FUNCTION_223();
  v42 = v8;
  v9 = *(_QWORD *)(v8 + 16);
  v38 = v6;
  v40 = v9;
  v39 = v7;
  if (v9)
  {
    v10 = v5;
    v11 = v4;
    OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_0_10();
    OUTLINED_FUNCTION_39();
    v41 = v11;
    OUTLINED_FUNCTION_6_3(v11, v10);
    v13 = v12;
    v15 = v14;
    OUTLINED_FUNCTION_72();
    if ((v15 & 1) != 0)
      v13 = OUTLINED_FUNCTION_28(v41, v10);
    OUTLINED_FUNCTION_40();
    OUTLINED_FUNCTION_4_4();
    v16 = *(_DWORD *)(v2 + 20);
    v0 = v16 + v13;
    v9 = v40;
    if (__CFADD__(v16, (_DWORD)v13))
    {
LABEL_29:
      __break(1u);
      JUMPOUT(0x1A565C918);
    }
    *(_DWORD *)(v2 + 20) = v0;
    if ((v39 & 1) == 0)
      goto LABEL_13;
  }
  else
  {
    v17 = v6;
    v13 = 0;
    v18 = 0;
    v19 = 0;
    v20 = v0;
    if ((v7 & 1) == 0)
      goto LABEL_18;
  }
  OUTLINED_FUNCTION_100(40, 0xE100000000000000, v1, v0);
  if ((v22 & 1) != 0)
    v21 = OUTLINED_FUNCTION_10_0(40);
  v23 = *(_DWORD *)(v2 + 20);
  if (__CFADD__(v23, (_DWORD)v21))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  *(_DWORD *)(v2 + 20) = v23 + v21;
  v24 = __OFADD__(v13, v21);
  v25 = v13 + v21;
  if (v24)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v20 = v23 + v21;
  v19 = v25;
  if (v9)
  {
LABEL_13:
    v26 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    ((void (*)(uint64_t))((char *)&loc_1A565C640 + dword_1A565C92C[*(unsigned __int8 *)(v42 + 32)]))(v26);
    return;
  }
  OUTLINED_FUNCTION_100(41, 0xE100000000000000, v1, v20);
  if ((v27 & 1) != 0)
    OUTLINED_FUNCTION_10_0(41);
  OUTLINED_FUNCTION_99();
  v17 = v38;
  if (v28)
  {
LABEL_33:
    __break(1u);
    JUMPOUT(0x1A565C92CLL);
  }
  *(_DWORD *)(v2 + 20) = v20;
LABEL_18:
  v29 = v19 + v18;
  if (__OFADD__(v19, v18))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v40)
  {
    OUTLINED_FUNCTION_13_0();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_1_2();
    v30 = OUTLINED_FUNCTION_255();
    OUTLINED_FUNCTION_100(v30, v31, v1, v20);
    v33 = v32;
    v35 = v34;
    OUTLINED_FUNCTION_19();
    if ((v35 & 1) != 0)
      v33 = OUTLINED_FUNCTION_33(v17, v37);
    OUTLINED_FUNCTION_2_4();
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_219();
    if (!v28)
    {
      *(_DWORD *)(v2 + 20) = v36;
      goto LABEL_25;
    }
    __break(1u);
    goto LABEL_31;
  }
  v33 = 0;
LABEL_25:
  if (__OFADD__(v29, v33))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  OUTLINED_FUNCTION_63();
}

void sub_1A565C948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  Swift::UInt32 v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  Swift::Int v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  void *v61;
  uint64_t v62;
  Swift::Int v63;
  char v64;
  char v65;
  Swift::Int v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  int v70;
  char v71;
  uint64_t v72;
  char v73;
  BOOL v74;
  uint64_t v75;
  uint64_t v76;
  Swift::Int v77;
  uint64_t v78;
  Swift::Int v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  Swift::UInt32 v86;
  Swift::Int v87;
  unsigned int v88;
  unsigned int v89;
  int v90;
  char v91;
  Swift::Int v92;
  Swift::Int v93;
  uint64_t v94;
  unint64_t v95;
  Swift::Int v96;
  Swift::Int v97;
  char v98;
  char v99;
  int v100;
  uint64_t v101;
  void *v102;
  Swift::Int v103;
  Swift::Int v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  Swift::String v111;
  Swift::String v112;

  OUTLINED_FUNCTION_62();
  a43 = v46;
  a44 = v49;
  v101 = v50;
  v102 = v51;
  v53 = v52;
  v109 = v54;
  v55 = a45;
  v56 = a45 + 8;
  v57 = *(unsigned int *)(a45 + 20);
  v106 = v58;
  v59 = *(_QWORD *)(v58 + 16);
  v107 = a45 + 8;
  v108 = v59;
  v105 = v60;
  if (v59)
  {
    v61 = v48;
    v62 = v47;
    OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_3_3();
    OUTLINED_FUNCTION_24(v62, (unint64_t)v61, v56);
    v103 = v63;
    v65 = v64;
    OUTLINED_FUNCTION_9_2();
    if ((v65 & 1) != 0)
    {
      v111._countAndFlagsBits = v62;
      v111._object = v61;
      v66 = OUTLINED_FUNCTION_53_0(v111, v57);
      OUTLINED_FUNCTION_5_1();
      OUTLINED_FUNCTION_48();
    }
    else
    {
      OUTLINED_FUNCTION_5_1();
      OUTLINED_FUNCTION_48();
      v66 = v103;
    }
    v70 = *(_DWORD *)(v55 + 20);
    LODWORD(v57) = v70 + v66;
    if (__CFADD__(v70, (_DWORD)v66))
    {
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
      goto LABEL_59;
    }
    *(_DWORD *)(v55 + 20) = v57;
    v68 = v107;
    if ((v105 & 1) == 0)
      goto LABEL_14;
  }
  else
  {
    v66 = 0;
    v67 = OUTLINED_FUNCTION_92();
    v68 = v56;
    if ((v69 & 1) == 0)
      goto LABEL_41;
  }
  v45 = v57;
  OUTLINED_FUNCTION_9_3(40, 0xE100000000000000, v68);
  if ((v71 & 1) != 0)
    OUTLINED_FUNCTION_34(40, 0xE100000000000000);
  OUTLINED_FUNCTION_89();
  if (v73)
    goto LABEL_58;
  *(_DWORD *)(v55 + 20) = v57;
  v74 = __OFADD__(v66, v72);
  v66 += v72;
  if (!v74)
  {
    if (v59)
    {
LABEL_14:
      v104 = v66;
      v75 = v106 + 32;
      v110 = v59 - 1;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v76 = 0;
      v77 = 0;
      do
      {
        sub_1A5666B28(v75, (uint64_t)&a27);
        sub_1A5666BBC((uint64_t)&a27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1A5666B64);
        sub_1A56C66E0((uint64_t)&a27);
        v79 = v77 + v78;
        if (__OFADD__(v77, v78))
        {
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
          goto LABEL_53;
        }
        v45 = *(_DWORD *)(v55 + 20);
        if (v76 >= v110)
        {
          sub_1A5666BBC((uint64_t)&a27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1A5666BFC);
          v87 = 0;
        }
        else
        {
          if ((v53 & 0x1000000000000000) != 0)
          {
            OUTLINED_FUNCTION_3_3();
            OUTLINED_FUNCTION_11_1();
            v87 = OUTLINED_FUNCTION_34(v109, v53);
            OUTLINED_FUNCTION_36();
            OUTLINED_FUNCTION_5_1();
          }
          else
          {
            if ((v53 & 0x2000000000000000) != 0)
            {
              OUTLINED_FUNCTION_3_3();
              OUTLINED_FUNCTION_11_1();
              OUTLINED_FUNCTION_29();
              OUTLINED_FUNCTION_189();
            }
            else
            {
              v80 = (v53 & 0xFFFFFFFFFFFFFFFLL) + 32;
              if ((v109 & 0x1000000000000000) == 0)
                v80 = OUTLINED_FUNCTION_172();
              OUTLINED_FUNCTION_205();
              if (v82)
                v83 = 0;
              else
                v83 = v81;
              OUTLINED_FUNCTION_3_3();
              OUTLINED_FUNCTION_11_1();
              OUTLINED_FUNCTION_29();
              v84 = v80;
              v85 = v83;
              v86 = v45;
              v68 = v107;
            }
            OUTLINED_FUNCTION_124(v84, v85, v86);
            v89 = v88;
            OUTLINED_FUNCTION_36();
            OUTLINED_FUNCTION_5_1();
            OUTLINED_FUNCTION_37();
            v87 = v89;
          }
          sub_1A5666BBC((uint64_t)&a27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1A5666BFC);
          v90 = *(_DWORD *)(v55 + 20);
          v45 = v90 + v87;
          v59 = v108;
          if (__CFADD__(v90, (_DWORD)v87))
            goto LABEL_52;
          *(_DWORD *)(v55 + 20) = v45;
        }
        v77 = v79 + v87;
        if (__OFADD__(v79, v87))
          goto LABEL_51;
        ++v76;
        v75 += 40;
      }
      while (v59 != v76);
      OUTLINED_FUNCTION_242();
      v66 = v104 + v77;
      if (__OFADD__(v104, v77))
        goto LABEL_56;
      if ((v105 & 1) != 0)
        goto LABEL_36;
      v67 = 0;
      goto LABEL_41;
    }
LABEL_36:
    OUTLINED_FUNCTION_9_3(41, 0xE100000000000000, v68);
    if ((v91 & 1) != 0)
      OUTLINED_FUNCTION_34(41, 0xE100000000000000);
    OUTLINED_FUNCTION_89();
    if (v73)
      goto LABEL_60;
    *(_DWORD *)(v55 + 20) = v45;
LABEL_41:
    v92 = v66 + v67;
    if (__OFADD__(v66, v67))
    {
LABEL_53:
      __break(1u);
    }
    else
    {
      if (v59)
      {
        v93 = v45;
        OUTLINED_FUNCTION_13_0();
        OUTLINED_FUNCTION_0_10();
        OUTLINED_FUNCTION_1_2();
        v94 = OUTLINED_FUNCTION_255();
        OUTLINED_FUNCTION_75(v94, v95, v107);
        v97 = v96;
        v99 = v98;
        OUTLINED_FUNCTION_19();
        if ((v99 & 1) != 0)
        {
          v112._countAndFlagsBits = v101;
          v112._object = v102;
          v97 = OUTLINED_FUNCTION_14_0(v112, v93);
        }
        OUTLINED_FUNCTION_2_4();
        OUTLINED_FUNCTION_4_4();
        OUTLINED_FUNCTION_140();
        if (v73)
          goto LABEL_57;
        *(_DWORD *)(v55 + 20) = v100;
      }
      else
      {
        v97 = 0;
      }
      if (!__OFADD__(v92, v97))
      {
        OUTLINED_FUNCTION_20_0();
        return;
      }
    }
    __break(1u);
    goto LABEL_55;
  }
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
}

#error "1A565D0E0: call analysis failed (funcsize=385)"

void sub_1A565D30C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, char a8, uint64_t a9)
{
  Swift::Int v9;
  uint64_t v11;
  Swift::UInt32 v12;
  Swift::Int v15;
  Swift::Int v16;
  char v17;
  Swift::Int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  Swift::UInt32 v23;
  char v24;
  Swift::Int v25;
  char v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  Swift::Int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  Swift::Int v41;
  Swift::Int v42;
  char v43;
  char v44;
  uint64_t v45;
  int v46;
  BOOL v47;
  unsigned int v48;
  unsigned int v49;
  Swift::Int v50;
  Swift::Int v51;
  uint64_t *v52;
  uint64_t v53;
  Swift::Int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int v58;
  int v59;
  int v60;
  char v61;
  BOOL v62;
  Swift::Int v63;
  Swift::Int v64;
  Swift::Int v65;
  char v66;
  char v67;
  int v68;
  int v69;
  void *v70;
  Swift::Int v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v79;
  Swift::Int v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  int v85;
  int v86;
  unsigned int v87;
  __int16 v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  Swift::String v92;
  Swift::String v93;
  Swift::String v94;
  Swift::String v95;
  Swift::String v96;

  v11 = a9 + 8;
  v12 = *(_DWORD *)(a9 + 20);
  v79 = *(_QWORD *)(a1 + 16);
  if (v79)
  {
    OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_0_10();
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_9_3(a2, a3, v11);
    v16 = v15;
    LOBYTE(a2) = v17;
    OUTLINED_FUNCTION_17();
    if ((a2 & 1) != 0)
    {
      OUTLINED_FUNCTION_204();
      v16 = OUTLINED_FUNCTION_14_0(v92, v18);
    }
    OUTLINED_FUNCTION_40();
    OUTLINED_FUNCTION_4_4();
    OUTLINED_FUNCTION_153();
    v12 = v20 + v16;
    v21 = a6;
    if (__CFADD__(v20, (_DWORD)v16))
      goto LABEL_74;
    v73 = v16;
    *(_DWORD *)(v19 + 20) = v12;
    if ((a8 & 1) == 0)
      goto LABEL_13;
  }
  else
  {
    v21 = a6;
    v73 = 0;
    v22 = OUTLINED_FUNCTION_179();
    v23 = v12;
    if ((v24 & 1) == 0)
      goto LABEL_54;
  }
  OUTLINED_FUNCTION_177(40);
  if ((v26 & 1) != 0)
  {
    v93._countAndFlagsBits = 40;
    v93._object = (void *)0xE100000000000000;
    v25 = OUTLINED_FUNCTION_14_0(v93, v12);
  }
  v27 = *(_DWORD *)(a9 + 20);
  v12 = v27 + v25;
  if (__CFADD__(v27, (_DWORD)v25))
    goto LABEL_77;
  *(_DWORD *)(a9 + 20) = v12;
  v9 = v73 + v25;
  if (__OFADD__(v73, v25))
  {
LABEL_78:
    __break(1u);
  }
  else
  {
    v23 = v27 + v25;
    v73 += v25;
    if (v79)
    {
LABEL_13:
      v70 = a7;
      OUTLINED_FUNCTION_186();
      OUTLINED_FUNCTION_145();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v28 = 0;
      v29 = 0;
      v30 = 0;
      v23 = v12;
      while (1)
      {
        v31 = a1 + v28;
        v33 = *(unsigned int *)(a1 + v28 + 40);
        v32 = *(unsigned int *)(a1 + v28 + 44);
        if (v32 < v33)
        {
          __break(1u);
LABEL_64:
          __break(1u);
LABEL_65:
          __break(1u);
LABEL_66:
          __break(1u);
LABEL_67:
          __break(1u);
LABEL_68:
          __break(1u);
LABEL_69:
          __break(1u);
LABEL_70:
          __break(1u);
LABEL_71:
          __break(1u);
          goto LABEL_72;
        }
        v80 = v30;
        v34 = *(_QWORD *)(v31 + 32);
        v35 = *(_DWORD *)(v31 + 48);
        v36 = *(unsigned __int16 *)(v31 + 52);
        v37 = *(unsigned __int8 *)(v31 + 54);
        v81 = v34;
        if ((_DWORD)v32 == (_DWORD)v33
          || (OUTLINED_FUNCTION_176(), v34 = v81, *(_BYTE *)(*(_QWORD *)(v81 + 24) + (v37 | (v36 << 8)) + v33) != 92))
        {
          if (v32 < v33)
            goto LABEL_66;
          v48 = v37 | ((_DWORD)v36 << 8);
          v47 = v35 >= v48;
          v49 = v35 - v48;
          if (!v47)
            goto LABEL_67;
          if (v49 < v32)
            goto LABEL_68;
          v84 = v34;
          v85 = v33;
          v86 = v32;
          v87 = v35;
          v88 = v36;
          v89 = v37;
          v90 = v33;
          v91 = v32;
          OUTLINED_FUNCTION_253();
          v38 = a9;
          sub_1A56BA79C((uint64_t)&v84);
          v42 = v50;
        }
        else
        {
          v38 = a9;
          if (*(_BYTE *)a9 == 1)
          {
            v82 = 91;
            v83 = 0xE100000000000000;
            OUTLINED_FUNCTION_253();
            sub_1A594CC9C();
            sub_1A594B5F8();
            OUTLINED_FUNCTION_41();
            OUTLINED_FUNCTION_141();
            v40 = v82;
            v39 = (void *)v83;
            OUTLINED_FUNCTION_4_3();
            OUTLINED_FUNCTION_264(v40, (unint64_t)v39, a9 + 8);
            v42 = v41;
            v44 = v43;
            OUTLINED_FUNCTION_41();
            if ((v44 & 1) != 0)
            {
              v94._countAndFlagsBits = v40;
              v94._object = v39;
              v42 = OUTLINED_FUNCTION_104(v94, v23);
            }
            OUTLINED_FUNCTION_41();
            v38 = a9;
            v45 = a5;
            OUTLINED_FUNCTION_200();
            if (v47)
              goto LABEL_70;
            *(_DWORD *)(a9 + 20) = v46;
            goto LABEL_28;
          }
          OUTLINED_FUNCTION_253();
          v56 = OUTLINED_FUNCTION_265();
          OUTLINED_FUNCTION_240(v56, v57, v23);
          v59 = *(_DWORD *)(a9 + 20);
          v47 = __CFADD__(v59, v58);
          v60 = v59 + v58;
          if (v47)
            goto LABEL_71;
          v42 = v58;
          *(_DWORD *)(a9 + 20) = v60;
        }
        v45 = a5;
LABEL_28:
        v51 = v80 + v42;
        if (__OFADD__(v80, v42))
          goto LABEL_64;
        v23 = *(_DWORD *)(v38 + 20);
        if (v29 >= v79 - 1)
        {
          OUTLINED_FUNCTION_234();
          v54 = 0;
        }
        else
        {
          if ((v45 & 0x1000000000000000) != 0)
          {
            OUTLINED_FUNCTION_12_1();
            OUTLINED_FUNCTION_39();
            v54 = OUTLINED_FUNCTION_33(a4, v45);
            OUTLINED_FUNCTION_234();
            OUTLINED_FUNCTION_40();
            OUTLINED_FUNCTION_15_1();
          }
          else
          {
            if ((v45 & 0x2000000000000000) != 0)
            {
              v82 = a4;
              v83 = v75;
              OUTLINED_FUNCTION_69();
              OUTLINED_FUNCTION_12_1();
              OUTLINED_FUNCTION_39();
              v52 = &v82;
              v53 = v74;
            }
            else
            {
              if ((a4 & 0x1000000000000000) == 0)
                OUTLINED_FUNCTION_108();
              OUTLINED_FUNCTION_69();
              OUTLINED_FUNCTION_12_1();
              OUTLINED_FUNCTION_39();
              v52 = (uint64_t *)OUTLINED_FUNCTION_265();
            }
            OUTLINED_FUNCTION_240((uint64_t)v52, v53, v23);
            LODWORD(v54) = v55;
            OUTLINED_FUNCTION_234();
            OUTLINED_FUNCTION_40();
            OUTLINED_FUNCTION_15_1();
            OUTLINED_FUNCTION_55();
            v54 = v54;
          }
          OUTLINED_FUNCTION_245();
          if (v47)
            goto LABEL_69;
          *(_DWORD *)(v38 + 20) = v23;
        }
        v30 = v51 + v54;
        if (__OFADD__(v51, v54))
          goto LABEL_65;
        ++v29;
        v28 += 24;
        if (v79 == v29)
        {
          OUTLINED_FUNCTION_239();
          v9 = v73 + v30;
          if (!__OFADD__(v73, v30))
          {
            if ((a8 & 1) != 0)
            {
              a7 = v70;
              v21 = a6;
              v11 = a9 + 8;
              break;
            }
            v22 = 0;
            a7 = v70;
            v21 = a6;
            v11 = a9 + 8;
LABEL_54:
            v62 = __OFADD__(v9, v22);
            v63 = v9 + v22;
            if (v62)
            {
LABEL_72:
              __break(1u);
            }
            else
            {
              if (v79)
              {
                OUTLINED_FUNCTION_42();
                OUTLINED_FUNCTION_0_10();
                OUTLINED_FUNCTION_12_1();
                OUTLINED_FUNCTION_264(v21, (unint64_t)a7, v11);
                v65 = v64;
                v67 = v66;
                OUTLINED_FUNCTION_38();
                if ((v67 & 1) != 0)
                {
                  v96._countAndFlagsBits = v21;
                  v96._object = a7;
                  v65 = OUTLINED_FUNCTION_14_0(v96, v23);
                }
                OUTLINED_FUNCTION_15_1();
                OUTLINED_FUNCTION_4_4();
                v68 = *(_DWORD *)(a9 + 20);
                v47 = __CFADD__(v68, (_DWORD)v65);
                v69 = v68 + v65;
                if (!v47)
                {
                  *(_DWORD *)(a9 + 20) = v69;
                  goto LABEL_61;
                }
LABEL_76:
                __break(1u);
LABEL_77:
                __break(1u);
                goto LABEL_78;
              }
              v65 = 0;
LABEL_61:
              if (!__OFADD__(v63, v65))
              {
                OUTLINED_FUNCTION_119();
                return;
              }
            }
            __break(1u);
LABEL_74:
            __break(1u);
          }
          __break(1u);
          goto LABEL_76;
        }
      }
    }
    OUTLINED_FUNCTION_177(41);
    if ((v61 & 1) != 0)
    {
      v95._countAndFlagsBits = 41;
      v95._object = (void *)0xE100000000000000;
      OUTLINED_FUNCTION_14_0(v95, v23);
    }
    OUTLINED_FUNCTION_199();
    if (!v47)
    {
      *(_DWORD *)(a9 + 20) = v23;
      goto LABEL_54;
    }
  }
  __break(1u);
}

void sub_1A565D86C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  Swift::Int v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  Swift::Int v55;
  char v56;
  void *v57;
  uint64_t v58;
  Swift::Int v59;
  Swift::Int v60;
  uint64_t v61;
  char v62;
  char v63;
  Swift::String v64;
  unint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  Swift::UInt32 v69;
  char v70;
  char v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  BOOL v75;
  uint64_t v76;
  uint64_t v77;
  Swift::Int v78;
  uint64_t *v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  Swift::Int v83;
  char v84;
  Swift::Int v85;
  Swift::Int v86;
  int v87;
  Swift::Int v88;
  char v89;
  uint64_t v90;
  BOOL v91;
  Swift::Int v92;
  uint64_t v93;
  unint64_t v94;
  Swift::Int v95;
  char v96;
  Swift::Int v97;
  uint64_t v98;
  int v99;
  Swift::Int v100;
  Swift::Int v101;
  uint64_t v102;
  uint64_t v103;
  unsigned int v104;
  unsigned int v105;
  Swift::Int v106;
  unsigned int v107;
  int v108;
  Swift::Int v109;
  char v110;
  uint64_t v111;
  int v112;
  Swift::Int v113;
  Swift::Int v114;
  uint64_t v115;
  unint64_t v116;
  Swift::Int v117;
  Swift::Int v118;
  char v119;
  char v120;
  int v121;
  int v122;
  Swift::Int v123;
  uint64_t v124;
  void *v125;
  char v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  Swift::String v135;
  Swift::String v136;
  Swift::String v137;
  Swift::String v138;
  Swift::String v139;
  Swift::String v140;

  OUTLINED_FUNCTION_79();
  a41 = v44;
  a42 = v47;
  v124 = v48;
  v125 = v49;
  v130 = v50;
  v129 = v51;
  v53 = v52;
  v54 = a43 + 8;
  v55 = *(unsigned int *)(a43 + 20);
  v134 = a43;
  v131 = *(_QWORD *)(v52 + 16);
  v126 = v56;
  if (v131)
  {
    v57 = v46;
    v58 = v45;
    OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_18_0();
    sub_1A56814E0(v58, (unint64_t)v57, v54, v55);
    v60 = v59;
    v61 = v54;
    v63 = v62;
    OUTLINED_FUNCTION_72();
    if ((v63 & 1) != 0)
    {
      v64._countAndFlagsBits = v58;
      v64._object = v57;
      v60 = ByteBuffer._setStringSlowpath(_:at:)(v64, v55);
    }
    OUTLINED_FUNCTION_19_0();
    OUTLINED_FUNCTION_23();
    v54 = v61;
    v65 = v130;
    OUTLINED_FUNCTION_153();
    LODWORD(v55) = v67 + v60;
    if (__CFADD__(v67, (_DWORD)v60))
    {
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
      goto LABEL_72;
    }
    *(_DWORD *)(v66 + 20) = v55;
    if ((v126 & 1) == 0)
      goto LABEL_13;
  }
  else
  {
    v60 = 0;
    v68 = OUTLINED_FUNCTION_152();
    v69 = v55;
    v65 = v130;
    if ((v70 & 1) == 0)
      goto LABEL_49;
  }
  OUTLINED_FUNCTION_8_2(40, 0xE100000000000000, v54);
  if ((v71 & 1) != 0)
  {
    v135._countAndFlagsBits = 40;
    v135._object = (void *)0xE100000000000000;
    OUTLINED_FUNCTION_35(v135, v55);
  }
  OUTLINED_FUNCTION_153();
  if (__CFADD__(v73, (_DWORD)v72))
    goto LABEL_71;
  *(_DWORD *)(v74 + 20) = v73 + v72;
  v75 = __OFADD__(v60, v72);
  v60 += v72;
  if (!v75)
  {
    v69 = v73 + v72;
    v43 = v60;
    if (v131)
    {
LABEL_13:
      v123 = v60;
      v132 = v54;
      OUTLINED_FUNCTION_206();
      v127 = (char *)&a27 + (HIBYTE(v65) & 0xF);
      v128 = v65 & 0xFFFFFFFFFFFFFFLL;
      OUTLINED_FUNCTION_4_3();
      v76 = v53;
      v77 = 0;
      v78 = 0;
      v79 = (uint64_t *)(v76 + 48);
      v80 = v134;
      do
      {
        v82 = *(v79 - 2);
        v81 = *(v79 - 1);
        v133 = *v79;
        OUTLINED_FUNCTION_184();
        OUTLINED_FUNCTION_9_3(v82, v81, v132);
        if ((v84 & 1) != 0)
        {
          OUTLINED_FUNCTION_222();
          v83 = OUTLINED_FUNCTION_14_0(v136, v85);
        }
        v86 = v83;
        v87 = *(_DWORD *)(v80 + 20);
        v88 = (v87 + v83);
        if (__CFADD__(v87, (_DWORD)v83))
        {
          __break(1u);
LABEL_59:
          __break(1u);
LABEL_60:
          __break(1u);
LABEL_61:
          __break(1u);
LABEL_62:
          __break(1u);
LABEL_63:
          __break(1u);
LABEL_64:
          __break(1u);
LABEL_65:
          __break(1u);
          goto LABEL_66;
        }
        *(_DWORD *)(v80 + 20) = v88;
        OUTLINED_FUNCTION_9_3(32, 0xE100000000000000, v132);
        if ((v89 & 1) != 0)
        {
          v137._countAndFlagsBits = 32;
          v137._object = (void *)0xE100000000000000;
          OUTLINED_FUNCTION_35(v137, v88);
        }
        OUTLINED_FUNCTION_210();
        if (v91)
          goto LABEL_59;
        *(_DWORD *)(v80 + 20) = v132;
        v92 = v86 + v90;
        if (__OFADD__(v86, v90))
          goto LABEL_60;
        a27 = v133;
        v93 = sub_1A594CC9C();
        OUTLINED_FUNCTION_113(v93, v94, v132);
        if ((v96 & 1) != 0)
          v95 = OUTLINED_FUNCTION_125(v93);
        v97 = v95;
        OUTLINED_FUNCTION_52();
        OUTLINED_FUNCTION_153();
        v69 = v99 + v97;
        if (__CFADD__(v99, (_DWORD)v97))
          goto LABEL_61;
        *(_DWORD *)(v98 + 20) = v69;
        v100 = v92 + v97;
        if (__OFADD__(v92, v97))
          goto LABEL_62;
        v101 = v78 + v100;
        if (__OFADD__(v78, v100))
          goto LABEL_63;
        if (v77 >= a20)
        {
          swift_bridgeObjectRelease();
          v106 = 0;
          v80 = v134;
        }
        else
        {
          v80 = v134;
          if ((v130 & 0x1000000000000000) != 0)
          {
            OUTLINED_FUNCTION_11_1();
            OUTLINED_FUNCTION_0_10();
            OUTLINED_FUNCTION_222();
            v106 = OUTLINED_FUNCTION_229(v138, v109);
            OUTLINED_FUNCTION_17();
            OUTLINED_FUNCTION_4_4();
            OUTLINED_FUNCTION_36();
          }
          else
          {
            if ((v130 & 0x2000000000000000) != 0)
            {
              a27 = v129;
              a28 = v128;
              OUTLINED_FUNCTION_11_1();
              OUTLINED_FUNCTION_0_10();
              OUTLINED_FUNCTION_184();
              OUTLINED_FUNCTION_111((uint64_t)&a27, (uint64_t)v127, v69);
              v105 = v107;
            }
            else
            {
              if ((v129 & 0x1000000000000000) == 0)
                sub_1A594C7D4();
              OUTLINED_FUNCTION_11_1();
              OUTLINED_FUNCTION_0_10();
              OUTLINED_FUNCTION_184();
              v102 = OUTLINED_FUNCTION_270();
              OUTLINED_FUNCTION_111(v102, v103, v69);
              v105 = v104;
            }
            OUTLINED_FUNCTION_17();
            OUTLINED_FUNCTION_4_4();
            OUTLINED_FUNCTION_36();
            OUTLINED_FUNCTION_72();
            v106 = v105;
          }
          v108 = *(_DWORD *)(v134 + 20);
          v69 = v108 + v106;
          if (__CFADD__(v108, (_DWORD)v106))
            goto LABEL_65;
          *(_DWORD *)(v134 + 20) = v69;
        }
        v78 = v101 + v106;
        if (__OFADD__(v101, v106))
          goto LABEL_64;
        v79 += 3;
        ++v77;
      }
      while (v131 != v77);
      OUTLINED_FUNCTION_128();
      v43 = v123 + v78;
      if (__OFADD__(v123, v78))
        goto LABEL_69;
      if ((v126 & 1) != 0)
      {
        v54 = v132;
        goto LABEL_44;
      }
      v68 = 0;
      v54 = v132;
      goto LABEL_49;
    }
LABEL_44:
    OUTLINED_FUNCTION_8_2(41, 0xE100000000000000, v54);
    if ((v110 & 1) != 0)
    {
      v139._countAndFlagsBits = 41;
      v139._object = (void *)0xE100000000000000;
      OUTLINED_FUNCTION_35(v139, v69);
    }
    OUTLINED_FUNCTION_153();
    v69 = v112 + v68;
    if (__CFADD__(v112, (_DWORD)v68))
      goto LABEL_73;
    *(_DWORD *)(v111 + 20) = v69;
LABEL_49:
    v113 = v43 + v68;
    if (__OFADD__(v43, v68))
    {
LABEL_66:
      __break(1u);
    }
    else
    {
      if (v131)
      {
        v114 = v69;
        OUTLINED_FUNCTION_13_0();
        OUTLINED_FUNCTION_17_0();
        OUTLINED_FUNCTION_0_10();
        v115 = OUTLINED_FUNCTION_255();
        OUTLINED_FUNCTION_75(v115, v116, v54);
        v118 = v117;
        v120 = v119;
        OUTLINED_FUNCTION_19();
        if ((v120 & 1) != 0)
        {
          v140._countAndFlagsBits = v124;
          v140._object = v125;
          v118 = OUTLINED_FUNCTION_14_0(v140, v114);
        }
        OUTLINED_FUNCTION_4_4();
        OUTLINED_FUNCTION_23();
        v121 = *(_DWORD *)(v134 + 20);
        v91 = __CFADD__(v121, (_DWORD)v118);
        v122 = v121 + v118;
        if (v91)
          goto LABEL_70;
        *(_DWORD *)(v134 + 20) = v122;
      }
      else
      {
        v118 = 0;
      }
      if (!__OFADD__(v113, v118))
      {
        OUTLINED_FUNCTION_32();
        return;
      }
    }
    __break(1u);
    goto LABEL_68;
  }
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
}

void sub_1A565DD54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  uint64_t v39;
  Swift::Int v40;
  uint64_t v41;
  void *v42;
  char v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  Swift::Int v48;
  Swift::Int v49;
  char v50;
  char v51;
  int v52;
  Swift::Int v53;
  Swift::Int v54;
  Swift::Int v55;
  char v56;
  uint64_t v57;
  int v58;
  Swift::Int v59;
  Swift::Int v60;
  uint64_t v61;
  Swift::Int v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  Swift::Int v68;
  uint64_t v69;
  unint64_t v70;
  Swift::Int v71;
  Swift::Int v72;
  char v73;
  char v74;
  Swift::String v75;
  int v76;
  Swift::Int v77;
  char v78;
  int v79;
  uint64_t v80;
  unint64_t v81;
  Swift::Int v82;
  char v83;
  char v84;
  Swift::Int v85;
  int v86;
  BOOL v87;
  int v88;
  char v89;
  Swift::Int v90;
  uint64_t v91;
  Swift::String v92;
  Swift::String v93;
  Swift::String v94;
  Swift::String v95;

  OUTLINED_FUNCTION_130();
  v39 = a39 + 8;
  v40 = *(unsigned int *)(a39 + 20);
  OUTLINED_FUNCTION_120();
  v91 = v44;
  v89 = v43;
  if (v44)
  {
    v45 = v42;
    v46 = v41;
    OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_17_0();
    v47 = v46;
    OUTLINED_FUNCTION_9_3(v46, (unint64_t)v45, v39);
    v49 = v48;
    v51 = v50;
    OUTLINED_FUNCTION_52();
    if ((v51 & 1) != 0)
    {
      v92._countAndFlagsBits = v47;
      v92._object = v45;
      v49 = OUTLINED_FUNCTION_14_0(v92, v40);
    }
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_40();
    v52 = *(_DWORD *)(a39 + 20);
    LODWORD(v40) = v52 + v49;
    if (__CFADD__(v52, (_DWORD)v49))
    {
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
      goto LABEL_50;
    }
    v90 = v49;
    *(_DWORD *)(a39 + 20) = v40;
    if ((v89 & 1) == 0)
      goto LABEL_14;
  }
  else
  {
    v90 = 0;
    v53 = 0;
    v54 = 0;
    if ((v43 & 1) == 0)
      goto LABEL_40;
  }
  OUTLINED_FUNCTION_9_3(40, 0xE100000000000000, v39);
  if ((v56 & 1) != 0)
  {
    v93._countAndFlagsBits = 40;
    v93._object = (void *)0xE100000000000000;
    v55 = OUTLINED_FUNCTION_14_0(v93, v40);
  }
  v57 = a39;
  v58 = *(_DWORD *)(a39 + 20);
  LODWORD(v59) = v58 + v55;
  if (__CFADD__(v58, (_DWORD)v55))
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  *(_DWORD *)(a39 + 20) = v59;
  v60 = v90 + v55;
  if (!__OFADD__(v90, v55))
  {
    if (!v91)
    {
LABEL_28:
      OUTLINED_FUNCTION_9_3(41, 0xE100000000000000, v39);
      if ((v78 & 1) != 0)
      {
        v94._countAndFlagsBits = 41;
        v94._object = (void *)0xE100000000000000;
        v77 = OUTLINED_FUNCTION_14_0(v94, v59);
      }
      v79 = *(_DWORD *)(v57 + 20);
      if (__CFADD__(v79, (_DWORD)v77))
        goto LABEL_52;
      *(_DWORD *)(v57 + 20) = v79 + v77;
      goto LABEL_33;
    }
    v90 += v55;
LABEL_14:
    OUTLINED_FUNCTION_206();
    v61 = 0;
    v62 = 0;
    v63 = OUTLINED_FUNCTION_78() + 54;
    do
    {
      if (*(_DWORD *)(v63 - 10) < *(_DWORD *)(v63 - 14))
      {
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
      OUTLINED_FUNCTION_176();
      OUTLINED_FUNCTION_39();
      OUTLINED_FUNCTION_202();
      v64 = sub_1A594B538();
      sub_1A56BA418(v64, v65);
      v67 = v66;
      OUTLINED_FUNCTION_52();
      v68 = v62 + v67;
      if (__OFADD__(v62, v67))
        goto LABEL_43;
      v59 = *(unsigned int *)(a39 + 20);
      if (v61 >= a20)
      {
        OUTLINED_FUNCTION_40();
        v72 = 0;
      }
      else
      {
        OUTLINED_FUNCTION_27();
        OUTLINED_FUNCTION_155();
        OUTLINED_FUNCTION_0_10();
        v69 = OUTLINED_FUNCTION_182();
        OUTLINED_FUNCTION_181(v69, v70, a39 + 8);
        v72 = v71;
        v74 = v73;
        OUTLINED_FUNCTION_17();
        if ((v74 & 1) != 0)
        {
          v75._countAndFlagsBits = OUTLINED_FUNCTION_182();
          v72 = ByteBuffer._setStringSlowpath(_:at:)(v75, v59);
        }
        OUTLINED_FUNCTION_40();
        OUTLINED_FUNCTION_4_4();
        swift_release();
        v76 = *(_DWORD *)(a39 + 20);
        LODWORD(v59) = v76 + v72;
        if (__CFADD__(v76, (_DWORD)v72))
          goto LABEL_45;
        *(_DWORD *)(a39 + 20) = v59;
      }
      v62 = v68 + v72;
      if (__OFADD__(v68, v72))
        goto LABEL_44;
      ++v61;
      v63 += 24;
    }
    while (v91 != v61);
    OUTLINED_FUNCTION_77();
    v60 = v90 + v62;
    if (__OFADD__(v90, v62))
      goto LABEL_49;
    v57 = a39;
    if ((v89 & 1) != 0)
    {
      v39 = a39 + 8;
      goto LABEL_28;
    }
    v77 = 0;
    v39 = a39 + 8;
LABEL_33:
    v53 = v60 + v77;
    if (__OFADD__(v60, v77))
    {
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
    if (v91)
    {
      OUTLINED_FUNCTION_42();
      OUTLINED_FUNCTION_39();
      OUTLINED_FUNCTION_0_10();
      v80 = OUTLINED_FUNCTION_273();
      OUTLINED_FUNCTION_9_3(v80, v81, v39);
      v54 = v82;
      v84 = v83;
      OUTLINED_FUNCTION_38();
      if ((v84 & 1) != 0)
      {
        OUTLINED_FUNCTION_192();
        v54 = OUTLINED_FUNCTION_14_0(v95, v85);
      }
      OUTLINED_FUNCTION_4_4();
      OUTLINED_FUNCTION_40();
      v86 = *(_DWORD *)(a39 + 20);
      v87 = __CFADD__(v86, (_DWORD)v54);
      v88 = v86 + v54;
      if (v87)
        goto LABEL_53;
      *(_DWORD *)(a39 + 20) = v88;
    }
    else
    {
      v54 = 0;
    }
LABEL_40:
    if (!__OFADD__(v53, v54))
    {
      OUTLINED_FUNCTION_43();
      return;
    }
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
}

void sub_1A565E0E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,int a33,int a34,__int16 a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  uint64_t v52;
  char v53;
  uint64_t v54;
  void *v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  Swift::Int v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  Swift::Int v65;
  Swift::Int v66;
  uint64_t v67;
  char v68;
  char v69;
  Swift::Int v70;
  Swift::Int v71;
  Swift::UInt32 v72;
  uint64_t v73;
  Swift::String v74;
  int v75;
  Swift::Int v76;
  char v77;
  int v78;
  BOOL v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  Swift::Int v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  __int16 v88;
  char v89;
  _QWORD *v90;
  unsigned int v91;
  BOOL v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  Swift::Int v97;
  char v98;
  int v99;
  Swift::Int v100;
  Swift::Int v101;
  Swift::Int v102;
  char v103;
  char v104;
  int v105;
  Swift::Int v106;
  Swift::Int v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  Swift::UInt32 v113;
  Swift::Int v114;
  unsigned int v115;
  unsigned int v116;
  int v117;
  char v118;
  int v119;
  Swift::Int v120;
  Swift::Int v121;
  Swift::Int v122;
  char v123;
  char v124;
  int v125;
  int v126;
  void *v127;
  Swift::Int v128;
  uint64_t v129;
  char v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  Swift::String v140;

  OUTLINED_FUNCTION_208();
  a50 = v52;
  a51 = v54;
  v56 = v55;
  v129 = v57;
  v134 = v58;
  v133 = v59;
  v60 = a52 + 8;
  v61 = *(unsigned int *)(a52 + 20);
  v139 = a52;
  v135 = v62;
  v136 = *(_QWORD *)(v62 + 16);
  v130 = v53;
  if (v136)
  {
    OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_12_1();
    OUTLINED_FUNCTION_18_0();
    v63 = OUTLINED_FUNCTION_270();
    sub_1A56814E0(v63, v64, v60, v61);
    v66 = v65;
    v67 = v60;
    v69 = v68;
    OUTLINED_FUNCTION_17();
    if ((v69 & 1) != 0)
    {
      v74._countAndFlagsBits = OUTLINED_FUNCTION_270();
      v70 = ByteBuffer._setStringSlowpath(_:at:)(v74, v61);
      OUTLINED_FUNCTION_19_0();
      OUTLINED_FUNCTION_15_1();
      v60 = v67;
    }
    else
    {
      OUTLINED_FUNCTION_19_0();
      OUTLINED_FUNCTION_15_1();
      v60 = v67;
      v70 = v66;
    }
    v73 = v139;
    v75 = *(_DWORD *)(v139 + 20);
    if (__CFADD__(v75, (_DWORD)v70))
    {
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
LABEL_77:
      __break(1u);
LABEL_78:
      __break(1u);
      goto LABEL_79;
    }
    *(_DWORD *)(v139 + 20) = v75 + v70;
    if ((v130 & 1) == 0)
      goto LABEL_14;
  }
  else
  {
    v70 = 0;
    v71 = 0;
    v72 = *(_DWORD *)(a52 + 20);
    v73 = a52;
    if ((v53 & 1) == 0)
      goto LABEL_54;
  }
  OUTLINED_FUNCTION_9_3(40, 0xE100000000000000, v60);
  if ((v77 & 1) != 0)
    v76 = OUTLINED_FUNCTION_44(40);
  v78 = *(_DWORD *)(v73 + 20);
  if (__CFADD__(v78, (_DWORD)v76))
    goto LABEL_78;
  *(_DWORD *)(v73 + 20) = v78 + v76;
  v79 = __OFADD__(v70, v76);
  v70 += v76;
  if (!v79)
  {
    if (v136)
    {
LABEL_14:
      v127 = v56;
      v128 = v70;
      OUTLINED_FUNCTION_206();
      OUTLINED_FUNCTION_186();
      v131 = (char *)&a28 + v80;
      v132 = v81;
      OUTLINED_FUNCTION_143();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v82 = 0;
      v83 = 0;
      v84 = 0;
      v137 = v60;
      do
      {
        if (*(_DWORD *)(v135 + v82 + 44) < *(_DWORD *)(v135 + v82 + 40))
        {
          __break(1u);
LABEL_64:
          __break(1u);
LABEL_65:
          __break(1u);
LABEL_66:
          __break(1u);
LABEL_67:
          __break(1u);
LABEL_68:
          __break(1u);
LABEL_69:
          __break(1u);
LABEL_70:
          __break(1u);
LABEL_71:
          __break(1u);
LABEL_72:
          __break(1u);
          goto LABEL_73;
        }
        OUTLINED_FUNCTION_193();
        if (!v92)
          goto LABEL_64;
        if (v91 < v86)
          goto LABEL_65;
        v93 = v90[7];
        v94 = v90[8];
        a31 = v90[4];
        a32 = v85;
        a33 = v86;
        a34 = v87;
        a35 = v88;
        a36 = v89;
        a37 = v85;
        a38 = v86;
        OUTLINED_FUNCTION_87();
        OUTLINED_FUNCTION_4_3();
        sub_1A56BA79C((uint64_t)&a31);
        v96 = v95;
        swift_release();
        OUTLINED_FUNCTION_9_3(32, 0xE100000000000000, v60);
        if ((v98 & 1) != 0)
          v97 = OUTLINED_FUNCTION_44(32);
        v99 = *(_DWORD *)(v73 + 20);
        if (__CFADD__(v99, (_DWORD)v97))
          goto LABEL_66;
        *(_DWORD *)(v73 + 20) = v99 + v97;
        v100 = v96 + v97;
        if (__OFADD__(v96, v97))
          goto LABEL_67;
        v138 = v82;
        OUTLINED_FUNCTION_4_3();
        OUTLINED_FUNCTION_9_3(v93, v94, v60);
        v102 = v101;
        v104 = v103;
        OUTLINED_FUNCTION_41();
        if ((v104 & 1) != 0)
          v102 = OUTLINED_FUNCTION_34(v93, v94);
        v105 = *(_DWORD *)(v139 + 20);
        v72 = v105 + v102;
        if (__CFADD__(v105, (_DWORD)v102))
          goto LABEL_68;
        *(_DWORD *)(v139 + 20) = v72;
        v106 = v100 + v102;
        if (__OFADD__(v100, v102))
          goto LABEL_69;
        v107 = v84 + v106;
        if (__OFADD__(v84, v106))
          goto LABEL_70;
        if (v83 >= a20)
        {
          OUTLINED_FUNCTION_41();
          OUTLINED_FUNCTION_221();
          v114 = 0;
          v73 = v139;
        }
        else
        {
          v73 = v139;
          if ((v134 & 0x1000000000000000) != 0)
          {
            OUTLINED_FUNCTION_11_1();
            OUTLINED_FUNCTION_18_0();
            v114 = OUTLINED_FUNCTION_33(v133, v134);
            OUTLINED_FUNCTION_41();
            OUTLINED_FUNCTION_221();
            OUTLINED_FUNCTION_19_0();
            OUTLINED_FUNCTION_36();
          }
          else
          {
            if ((v134 & 0x2000000000000000) != 0)
            {
              a28 = v133;
              a29 = v132;
              OUTLINED_FUNCTION_29();
              OUTLINED_FUNCTION_11_1();
              OUTLINED_FUNCTION_18_0();
              v111 = &a28;
              v112 = (uint64_t)v131;
              v113 = v72;
            }
            else
            {
              v108 = a14;
              v109 = a15;
              if ((v133 & 0x1000000000000000) == 0)
                v109 = sub_1A594C7D4();
              if (v109)
                v110 = v109 + v108;
              else
                v110 = 0;
              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
              OUTLINED_FUNCTION_11_1();
              OUTLINED_FUNCTION_18_0();
              v111 = (_QWORD *)v109;
              v112 = v110;
              v113 = v72;
            }
            ByteBuffer._setBytes(_:at:)((uint64_t)v111, v112, v113);
            v116 = v115;
            OUTLINED_FUNCTION_41();
            OUTLINED_FUNCTION_221();
            OUTLINED_FUNCTION_19_0();
            OUTLINED_FUNCTION_36();
            OUTLINED_FUNCTION_37();
            v114 = v116;
          }
          v117 = *(_DWORD *)(v139 + 20);
          v72 = v117 + v114;
          if (__CFADD__(v117, (_DWORD)v114))
            goto LABEL_72;
          *(_DWORD *)(v139 + 20) = v72;
        }
        v84 = v107 + v114;
        if (__OFADD__(v107, v114))
          goto LABEL_71;
        ++v83;
        v60 = v137;
        v82 = v138 + 40;
      }
      while (v136 != v83);
      OUTLINED_FUNCTION_195();
      v70 = v128 + v84;
      if (__OFADD__(v128, v84))
        goto LABEL_76;
      if ((v130 & 1) != 0)
      {
        v56 = v127;
        goto LABEL_49;
      }
      v71 = 0;
      v56 = v127;
      goto LABEL_54;
    }
LABEL_49:
    OUTLINED_FUNCTION_9_3(41, 0xE100000000000000, v60);
    if ((v118 & 1) != 0)
      v71 = OUTLINED_FUNCTION_44(41);
    v119 = *(_DWORD *)(v73 + 20);
    v72 = v119 + v71;
    if (__CFADD__(v119, (_DWORD)v71))
      goto LABEL_80;
    *(_DWORD *)(v73 + 20) = v72;
LABEL_54:
    v79 = __OFADD__(v70, v71);
    v120 = v70 + v71;
    if (v79)
    {
LABEL_73:
      __break(1u);
    }
    else
    {
      if (v136)
      {
        OUTLINED_FUNCTION_42();
        OUTLINED_FUNCTION_39();
        OUTLINED_FUNCTION_1_2();
        OUTLINED_FUNCTION_75(v129, (unint64_t)v56, v60);
        v122 = v121;
        v124 = v123;
        OUTLINED_FUNCTION_38();
        if ((v124 & 1) != 0)
        {
          v140._countAndFlagsBits = v129;
          v140._object = v56;
          v122 = OUTLINED_FUNCTION_14_0(v140, v72);
        }
        OUTLINED_FUNCTION_2_4();
        OUTLINED_FUNCTION_40();
        v125 = *(_DWORD *)(v73 + 20);
        v92 = __CFADD__(v125, (_DWORD)v122);
        v126 = v125 + v122;
        if (v92)
          goto LABEL_77;
        *(_DWORD *)(v73 + 20) = v126;
      }
      else
      {
        v122 = 0;
      }
      if (!__OFADD__(v120, v122))
      {
        OUTLINED_FUNCTION_58();
        return;
      }
    }
    __break(1u);
    goto LABEL_75;
  }
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
}

void sub_1A565E5C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  Swift::UInt32 v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  Swift::Int v54;
  uint64_t v55;
  char v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  Swift::Int v60;
  Swift::Int v61;
  char v62;
  char v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  Swift::Int v68;
  char v69;
  Swift::Int v70;
  int v71;
  BOOL v72;
  uint64_t v73;
  Swift::Int v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  Swift::Int v80;
  uint64_t v81;
  _QWORD *v82;
  char *v83;
  Swift::UInt32 v84;
  Swift::Int v85;
  unsigned int v86;
  unsigned int v87;
  int v88;
  Swift::String v89;
  Swift::Int v90;
  char v91;
  Swift::Int v92;
  int v93;
  Swift::Int v94;
  Swift::Int v95;
  Swift::Int v96;
  char v97;
  char v98;
  int v99;
  BOOL v100;
  int v101;
  Swift::Int v102;
  unint64_t v103;
  char v104;
  uint64_t v105;
  Swift::UInt32 v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  Swift::String v112;
  Swift::String v113;
  Swift::String v114;

  OUTLINED_FUNCTION_79();
  a41 = v44;
  a42 = v48;
  v103 = v49;
  v109 = v50;
  v110 = v51;
  v52 = a43;
  v53 = a43 + 8;
  v54 = *(unsigned int *)(a43 + 20);
  v111 = *(_QWORD *)(v55 + 16);
  v104 = v56;
  v105 = v47;
  if (v111)
  {
    v57 = v46;
    v58 = v45;
    OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_1_2();
    OUTLINED_FUNCTION_3_3();
    v59 = v53;
    sub_1A56814E0(v58, (unint64_t)v57, v53, v54);
    v61 = v60;
    v63 = v62;
    OUTLINED_FUNCTION_9_2();
    if ((v63 & 1) != 0)
    {
      v112._countAndFlagsBits = v58;
      v112._object = v57;
      v61 = OUTLINED_FUNCTION_57(v112, v54);
    }
    OUTLINED_FUNCTION_5_1();
    OUTLINED_FUNCTION_2_4();
    v53 = v59;
    v64 = *(_DWORD *)(v52 + 20);
    LODWORD(v54) = v64 + v61;
    v65 = v105;
    if (__CFADD__(v64, (_DWORD)v61))
    {
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
      goto LABEL_56;
    }
    *(_DWORD *)(v52 + 20) = v54;
    if ((v104 & 1) == 0)
      goto LABEL_13;
  }
  else
  {
    v65 = v47;
    v61 = 0;
    v66 = OUTLINED_FUNCTION_92();
    if ((v67 & 1) == 0)
      goto LABEL_38;
  }
  OUTLINED_FUNCTION_105(40, 0xE100000000000000, v53, v54);
  if ((v69 & 1) != 0)
  {
    v113._countAndFlagsBits = OUTLINED_FUNCTION_150();
    v68 = OUTLINED_FUNCTION_14_0(v113, v70);
  }
  v71 = *(_DWORD *)(v52 + 20);
  if (__CFADD__(v71, (_DWORD)v68))
    goto LABEL_55;
  *(_DWORD *)(v52 + 20) = v71 + v68;
  v72 = __OFADD__(v61, v68);
  v61 += v68;
  if (!v72)
  {
    if (v111)
    {
LABEL_13:
      v102 = v61;
      v108 = v53;
      OUTLINED_FUNCTION_142();
      v73 = 0;
      v74 = 0;
      v75 = OUTLINED_FUNCTION_146() + 48;
      v107 = v52;
      do
      {
        OUTLINED_FUNCTION_107();
        sub_1A5666DE4();
        v76 = OUTLINED_FUNCTION_107();
        v79 = EncodeBuffer.writeCustomCommandPayload(_:)(v76, v77, v78);
        v80 = v74 + v79;
        if (__OFADD__(v74, v79))
        {
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
          goto LABEL_50;
        }
        v43 = *(_DWORD *)(v52 + 20);
        if (v73 >= v111 - 1)
        {
          OUTLINED_FUNCTION_216();
          v85 = 0;
        }
        else
        {
          if ((v110 & 0x1000000000000000) != 0)
          {
            OUTLINED_FUNCTION_18_0();
            OUTLINED_FUNCTION_30();
            OUTLINED_FUNCTION_277();
            v89._countAndFlagsBits = v109;
            v85 = ByteBuffer._setStringSlowpath(_:at:)(v89, v90);
            OUTLINED_FUNCTION_48();
            swift_release();
          }
          else
          {
            if ((v110 & 0x2000000000000000) != 0)
            {
              a27 = v109;
              a28 = v110 & 0xFFFFFFFFFFFFFFLL;
              OUTLINED_FUNCTION_69();
              OUTLINED_FUNCTION_18_0();
              OUTLINED_FUNCTION_30();
              v82 = &a27;
              v83 = (char *)&a27 + (HIBYTE(v110) & 0xF);
              v84 = v43;
            }
            else
            {
              v106 = *(_DWORD *)(v52 + 20);
              v81 = a16;
              if ((v109 & 0x1000000000000000) == 0)
                v81 = OUTLINED_FUNCTION_108();
              OUTLINED_FUNCTION_241();
              OUTLINED_FUNCTION_69();
              OUTLINED_FUNCTION_18_0();
              OUTLINED_FUNCTION_30();
              v82 = (_QWORD *)v81;
              v83 = a19;
              v84 = v106;
            }
            ByteBuffer._setBytes(_:at:)((uint64_t)v82, (uint64_t)v83, v84);
            v87 = v86;
            OUTLINED_FUNCTION_48();
            OUTLINED_FUNCTION_19_0();
            OUTLINED_FUNCTION_55();
            v85 = v87;
          }
          OUTLINED_FUNCTION_216();
          v52 = v107;
          v88 = *(_DWORD *)(v107 + 20);
          v43 = v88 + v85;
          if (__CFADD__(v88, (_DWORD)v85))
            goto LABEL_49;
          *(_DWORD *)(v107 + 20) = v43;
        }
        v74 = v80 + v85;
        if (__OFADD__(v80, v85))
          goto LABEL_48;
        v75 += 24;
        ++v73;
      }
      while (v111 != v73);
      OUTLINED_FUNCTION_128();
      v61 = v102 + v74;
      if (__OFADD__(v102, v74))
        goto LABEL_53;
      v65 = v105;
      if ((v104 & 1) != 0)
      {
        v53 = v108;
        goto LABEL_33;
      }
      v66 = 0;
      v53 = v108;
      goto LABEL_38;
    }
LABEL_33:
    OUTLINED_FUNCTION_8_2(41, 0xE100000000000000, v53);
    if ((v91 & 1) != 0)
    {
      v114._countAndFlagsBits = OUTLINED_FUNCTION_135();
      v66 = OUTLINED_FUNCTION_14_0(v114, v92);
    }
    v93 = *(_DWORD *)(v52 + 20);
    v43 = v93 + v66;
    if (__CFADD__(v93, (_DWORD)v66))
      goto LABEL_57;
    *(_DWORD *)(v52 + 20) = v43;
LABEL_38:
    v94 = v61 + v66;
    if (__OFADD__(v61, v66))
    {
LABEL_50:
      __break(1u);
    }
    else
    {
      if (v111)
      {
        OUTLINED_FUNCTION_29();
        OUTLINED_FUNCTION_0_10();
        OUTLINED_FUNCTION_1_2();
        OUTLINED_FUNCTION_105(v65, v103, v53, v43);
        v96 = v95;
        v98 = v97;
        OUTLINED_FUNCTION_37();
        if ((v98 & 1) != 0)
          v96 = OUTLINED_FUNCTION_279(v65, v103);
        OUTLINED_FUNCTION_2_4();
        OUTLINED_FUNCTION_4_4();
        v99 = *(_DWORD *)(v52 + 20);
        v100 = __CFADD__(v99, (_DWORD)v96);
        v101 = v99 + v96;
        if (v100)
          goto LABEL_54;
        *(_DWORD *)(v52 + 20) = v101;
      }
      else
      {
        v96 = 0;
      }
      if (!__OFADD__(v94, v96))
      {
        OUTLINED_FUNCTION_32();
        return;
      }
    }
    __break(1u);
    goto LABEL_52;
  }
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
}

void sub_1A565E9A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  int v7;
  Swift::Int v8;
  char v9;
  Swift::Int v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  unint64_t v18;
  uint64_t v19;
  Swift::Int v20;
  Swift::Int v21;
  char v22;
  char v23;
  int v24;
  int v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  Swift::Int v29;
  char v30;
  Swift::Int v31;
  char v32;
  int v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  void *v43;
  uint64_t v44;
  Swift::Int v45;
  Swift::Int v46;
  uint64_t v47;
  char v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  BOOL v55;
  int v56;
  uint64_t *v57;
  char *v58;
  Swift::UInt32 v59;
  int v60;
  Swift::Int v61;
  int v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  Swift::Int v66;
  uint64_t v67;
  char v68;
  char v69;
  int v70;
  Swift::Int v71;
  uint64_t *v72;
  uint64_t v73;
  Swift::UInt32 v74;
  Swift::Int v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  unint64_t v83;
  char v84;
  int v85;
  Swift::Int v86;
  int v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  int v104;
  char v105;
  uint64_t v106;
  Swift::Int v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  Swift::String v112;
  Swift::String v113;
  Swift::String v114;
  Swift::String v115;

  v89 = a7;
  v97 = a4;
  OUTLINED_FUNCTION_223();
  v90 = v16;
  v91 = v15;
  v98 = v8;
  v99 = v14;
  v100 = *(_QWORD *)(v16 + 16);
  HIDWORD(v92) = v17;
  if (v100)
  {
    v18 = v13;
    v19 = v12;
    OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_0_10();
    OUTLINED_FUNCTION_12_1();
    OUTLINED_FUNCTION_6_3(v19, v18);
    v21 = v20;
    v23 = v22;
    OUTLINED_FUNCTION_72();
    if ((v23 & 1) != 0)
      v21 = OUTLINED_FUNCTION_28(v19, v18);
    OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_4_4();
    v24 = *(_DWORD *)(v11 + 20);
    v25 = v24 + v21;
    v26 = v91;
    v27 = v99;
    if (__CFADD__(v24, (_DWORD)v21))
      goto LABEL_83;
    *(_DWORD *)(v11 + 20) = v25;
    if ((v92 & 0x100000000) == 0)
      goto LABEL_13;
  }
  else
  {
    v26 = v15;
    v27 = v14;
    v21 = 0;
    v28 = OUTLINED_FUNCTION_152();
    LODWORD(v29) = v7;
    if ((v30 & 1) == 0)
      goto LABEL_65;
  }
  OUTLINED_FUNCTION_9_3(40, 0xE100000000000000, v8);
  if ((v32 & 1) != 0)
    v31 = OUTLINED_FUNCTION_51(40);
  v33 = *(_DWORD *)(v11 + 20);
  v25 = v33 + v31;
  if (__CFADD__(v33, (_DWORD)v31))
    goto LABEL_86;
  *(_DWORD *)(v11 + 20) = v25;
  v34 = __OFADD__(v21, v31);
  v21 += v31;
  if (v34)
  {
LABEL_87:
    __break(1u);
  }
  else
  {
    LODWORD(v29) = v33 + v31;
    v10 = v21;
    if (v100)
    {
LABEL_13:
      v88 = v21;
      v35 = v100;
      v101 = v100 - 1;
      v95 = (char *)&v110 + (HIBYTE(v27) & 0xF);
      v96 = v27 & 0xFFFFFFFFFFFFFFLL;
      OUTLINED_FUNCTION_143();
      v36 = 0;
      v8 = 0;
      v38 = (char *)(OUTLINED_FUNCTION_146() + 62);
      LODWORD(v29) = v25;
      v102 = v11;
      v39 = v98;
      while (1)
      {
        v107 = v8;
        v40 = *(_QWORD *)(v38 - 30);
        v41 = *(_QWORD *)(v38 - 22);
        v42 = *(unsigned int *)(v38 - 6) | ((unint64_t)*((unsigned __int16 *)v38 - 1) << 32);
        v108 = v42;
        v109 = *(_QWORD *)(v38 - 14);
        v106 = v40;
        v105 = *v38;
        if (*v38)
        {
          if (*v38 != 1)
          {
            if ((v41 & 0x1000000000000000) != 0)
            {
              OUTLINED_FUNCTION_101(v40, v41, v37, v42);
              v114._countAndFlagsBits = v40;
              v114._object = (void *)v41;
              v39 = v98;
              v61 = OUTLINED_FUNCTION_57(v114, v29);
            }
            else
            {
              if ((v41 & 0x2000000000000000) != 0)
              {
                v110 = *(_QWORD *)(v38 - 30);
                v111 = v41 & 0xFFFFFFFFFFFFFFLL;
                OUTLINED_FUNCTION_101(v40, v41, v37, v42);
                OUTLINED_FUNCTION_13_0();
                v57 = &v110;
                v58 = (char *)&v110 + (HIBYTE(v41) & 0xF);
                v39 = v98;
                v59 = v29;
              }
              else
              {
                if ((v40 & 0x1000000000000000) == 0)
                  sub_1A594C7D4();
                OUTLINED_FUNCTION_197();
                sub_1A5666D44(v40, v41, v109, v108, 2);
                OUTLINED_FUNCTION_13_0();
                v57 = (uint64_t *)OUTLINED_FUNCTION_266();
              }
              OUTLINED_FUNCTION_262((uint64_t)v57, (uint64_t)v58, v59);
              LODWORD(v61) = v60;
              OUTLINED_FUNCTION_19();
              v61 = v61;
            }
            OUTLINED_FUNCTION_218();
            if (v55)
              goto LABEL_78;
            *(_DWORD *)(v11 + 20) = v62;
            if (BYTE5(v108) == 255)
            {
              v63 = 0;
            }
            else
            {
              v110 = v109;
              LODWORD(v111) = v108;
              WORD2(v111) = WORD2(v108) & 0x1FF;
              sub_1A570551C((uint64_t)&v110, v11);
            }
            v46 = v61 + v63;
            if (__OFADD__(v61, v63))
              goto LABEL_79;
            goto LABEL_40;
          }
          v103 = *(_QWORD *)(v38 - 22);
          v110 = 0x204854504544;
          v111 = 0xE600000000000000;
          sub_1A594B5F8();
          OUTLINED_FUNCTION_19();
          v65 = v110;
          v64 = v111;
          OUTLINED_FUNCTION_13_0();
          OUTLINED_FUNCTION_96(v65, v64, v39);
          v46 = v66;
          v67 = v39;
          v69 = v68;
          OUTLINED_FUNCTION_19();
          if ((v69 & 1) != 0)
            v46 = OUTLINED_FUNCTION_213();
          OUTLINED_FUNCTION_19();
          v39 = v67;
          v11 = v102;
          v41 = v103;
          v70 = *(_DWORD *)(v102 + 20);
          v55 = __CFADD__(v70, (_DWORD)v46);
          v56 = v70 + v46;
          if (v55)
            goto LABEL_80;
        }
        else
        {
          v103 = *(_QWORD *)(v38 - 22);
          v110 = 0x20455A495358414DLL;
          v111 = 0xE800000000000000;
          sub_1A594CC9C();
          sub_1A594B5F8();
          OUTLINED_FUNCTION_19();
          v44 = v110;
          v43 = (void *)v111;
          OUTLINED_FUNCTION_13_0();
          OUTLINED_FUNCTION_96(v44, (unint64_t)v43, v39);
          v46 = v45;
          v47 = v39;
          v49 = v48;
          OUTLINED_FUNCTION_19();
          if ((v49 & 1) != 0)
          {
            v112._countAndFlagsBits = v44;
            v112._object = v43;
            v46 = OUTLINED_FUNCTION_104(v112, v29);
          }
          OUTLINED_FUNCTION_19();
          v39 = v47;
          v11 = v102;
          v41 = v103;
          v54 = *(_DWORD *)(v102 + 20);
          v55 = __CFADD__(v54, (_DWORD)v46);
          v56 = v54 + v46;
          v35 = v100;
          if (v55)
            goto LABEL_77;
        }
        *(_DWORD *)(v11 + 20) = v56;
LABEL_40:
        v34 = __OFADD__(v107, v46);
        v71 = v107 + v46;
        if (v34)
        {
          __break(1u);
LABEL_75:
          __break(1u);
LABEL_76:
          __break(1u);
LABEL_77:
          __break(1u);
LABEL_78:
          __break(1u);
LABEL_79:
          __break(1u);
LABEL_80:
          __break(1u);
          goto LABEL_81;
        }
        v29 = *(unsigned int *)(v11 + 20);
        if (v36 >= v101)
        {
          OUTLINED_FUNCTION_220(v106, v41, v109, v108, v50, v51, v52, v53, v88, (uint64_t)v89, v90, v91, v92, v93, v94, (uint64_t)v95, v96, v97, v98,
            v99,
            v100,
            v101,
            v102,
            v103,
            v104,
            v105);
          v75 = 0;
        }
        else
        {
          if ((v99 & 0x1000000000000000) != 0)
          {
            OUTLINED_FUNCTION_3_3();
            OUTLINED_FUNCTION_18_0();
            v113._countAndFlagsBits = v97;
            v113._object = (void *)v99;
            v75 = OUTLINED_FUNCTION_57(v113, v29);
            OUTLINED_FUNCTION_19_0();
            OUTLINED_FUNCTION_5_1();
          }
          else
          {
            if ((v99 & 0x2000000000000000) != 0)
            {
              v110 = v97;
              v111 = v96;
              OUTLINED_FUNCTION_3_3();
              OUTLINED_FUNCTION_18_0();
              OUTLINED_FUNCTION_90();
              v72 = &v110;
              v73 = (uint64_t)v95;
              v74 = v29;
            }
            else
            {
              if ((v97 & 0x1000000000000000) == 0)
                OUTLINED_FUNCTION_272();
              OUTLINED_FUNCTION_197();
              OUTLINED_FUNCTION_3_3();
              OUTLINED_FUNCTION_18_0();
              OUTLINED_FUNCTION_90();
              v72 = (uint64_t *)OUTLINED_FUNCTION_266();
            }
            OUTLINED_FUNCTION_262((uint64_t)v72, v73, v74);
            LODWORD(v75) = v76;
            OUTLINED_FUNCTION_19_0();
            OUTLINED_FUNCTION_5_1();
            OUTLINED_FUNCTION_52();
            v75 = v75;
          }
          OUTLINED_FUNCTION_220(v106, v41, v109, v108, v77, v78, v79, v80, v88, (uint64_t)v89, v90, v91, v92, v93, v94, (uint64_t)v95, v96, v97, v98,
            v99,
            v100,
            v101,
            v102,
            v103,
            v104,
            v105);
          v11 = v102;
          v81 = *(_DWORD *)(v102 + 20);
          LODWORD(v29) = v81 + v75;
          v35 = v100;
          if (__CFADD__(v81, (_DWORD)v75))
            goto LABEL_76;
          *(_DWORD *)(v102 + 20) = v29;
        }
        v34 = __OFADD__(v71, v75);
        v8 = v71 + v75;
        if (v34)
          goto LABEL_75;
        v38 += 32;
        if (v35 == ++v36)
        {
          OUTLINED_FUNCTION_128();
          v10 = v88 + v8;
          if (!__OFADD__(v88, v8))
          {
            if ((v92 & 0x100000000) != 0)
            {
              v26 = v91;
              break;
            }
            v28 = 0;
            v26 = v91;
LABEL_65:
            v86 = v10 + v28;
            if (__OFADD__(v10, v28))
            {
LABEL_81:
              __break(1u);
            }
            else
            {
              if (v100)
              {
                OUTLINED_FUNCTION_29();
                OUTLINED_FUNCTION_0_10();
                OUTLINED_FUNCTION_1_2();
                OUTLINED_FUNCTION_96(v26, (unint64_t)v89, v98);
                OUTLINED_FUNCTION_31();
                if ((v9 & 1) != 0)
                {
                  v115._countAndFlagsBits = v26;
                  v115._object = v89;
                  v8 = OUTLINED_FUNCTION_35(v115, v29);
                }
                OUTLINED_FUNCTION_2_4();
                OUTLINED_FUNCTION_4_4();
                OUTLINED_FUNCTION_218();
                if (!v55)
                {
                  *(_DWORD *)(v11 + 20) = v87;
                  goto LABEL_72;
                }
LABEL_85:
                __break(1u);
LABEL_86:
                __break(1u);
                goto LABEL_87;
              }
              v8 = 0;
LABEL_72:
              if (!__OFADD__(v86, v8))
              {
                OUTLINED_FUNCTION_131();
                return;
              }
            }
            __break(1u);
LABEL_83:
            __break(1u);
          }
          __break(1u);
          goto LABEL_85;
        }
      }
    }
    v8 = v29;
    v82 = OUTLINED_FUNCTION_170();
    OUTLINED_FUNCTION_9_3(v82, v83, v98);
    if ((v84 & 1) != 0)
      v28 = OUTLINED_FUNCTION_51(41);
    v85 = *(_DWORD *)(v11 + 20);
    LODWORD(v29) = v85 + v28;
    if (!__CFADD__(v85, (_DWORD)v28))
    {
      *(_DWORD *)(v11 + 20) = v29;
      goto LABEL_65;
    }
  }
  __break(1u);
}

#error "1A565F47C: call analysis failed (funcsize=317)"

#error "1A565F710: call analysis failed (funcsize=203)"

void sub_1A565F834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, char a8, uint64_t a9)
{
  uint64_t v9;
  Swift::Int v10;
  uint64_t v11;
  Swift::UInt32 v12;
  uint64_t v14;
  unint64_t v15;
  Swift::Int v16;
  Swift::Int v17;
  char v18;
  char v19;
  Swift::Int v20;
  char v21;
  int v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  Swift::UInt32 v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  Swift::Int v30;
  char v31;
  Swift::Int v32;
  int v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  Swift::Int v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  Swift::Int v50;
  uint64_t v51;
  unint64_t v52;
  Swift::Int v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  Swift::Int v57;
  int v58;
  BOOL v59;
  int v60;
  uint64_t v61;
  unint64_t v62;
  BOOL v64;
  uint64_t v65;
  int v66;
  int v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  int v71;
  Swift::Int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unsigned int v76;
  unsigned int v77;
  Swift::Int v78;
  unsigned int v79;
  int v80;
  char v81;
  Swift::Int v82;
  int v83;
  Swift::Int v84;
  Swift::Int v85;
  Swift::Int v86;
  Swift::Int v87;
  char v88;
  char v89;
  int v90;
  int v91;
  char v92;
  Swift::Int v93;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD v107[4];
  char v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  Swift::String v112;
  Swift::String v113;
  Swift::String v114;
  Swift::String v115;

  v9 = a9;
  v11 = a9 + 8;
  v10 = *(_QWORD *)(a9 + 8);
  v12 = *(_DWORD *)(a9 + 20);
  v101 = *(_QWORD *)(a1 + 16);
  if (v101)
  {
    OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_0_10();
    OUTLINED_FUNCTION_30();
    v14 = OUTLINED_FUNCTION_215();
    OUTLINED_FUNCTION_8_2(v14, v15, a9 + 8);
    v17 = v16;
    v19 = v18;
    OUTLINED_FUNCTION_9_2();
    if ((v19 & 1) != 0)
    {
      v112._countAndFlagsBits = OUTLINED_FUNCTION_160();
      v17 = OUTLINED_FUNCTION_14_0(v112, v20);
    }
    OUTLINED_FUNCTION_48();
    OUTLINED_FUNCTION_4_4();
    v21 = a8;
    v9 = a9;
    v22 = *(_DWORD *)(a9 + 20);
    v12 = v22 + v17;
    v24 = a7;
    v23 = a6;
    if (__CFADD__(v22, (_DWORD)v17))
      goto LABEL_86;
    *(_DWORD *)(a9 + 20) = v12;
    v11 = a9 + 8;
    if ((v21 & 1) == 0)
      goto LABEL_13;
  }
  else
  {
    v24 = a7;
    v23 = a6;
    v17 = 0;
    v25 = OUTLINED_FUNCTION_152();
    v26 = v12;
    v21 = v27;
    if ((v27 & 1) == 0)
      goto LABEL_67;
  }
  v28 = OUTLINED_FUNCTION_158();
  OUTLINED_FUNCTION_196(v28, v29, v11, v12);
  if ((v31 & 1) != 0)
  {
    v113._countAndFlagsBits = OUTLINED_FUNCTION_150();
    v30 = OUTLINED_FUNCTION_50(v113, v32);
  }
  v33 = *(_DWORD *)(v9 + 20);
  v12 = v33 + v30;
  if (__CFADD__(v33, (_DWORD)v30))
    goto LABEL_89;
  *(_DWORD *)(v9 + 20) = v12;
  v34 = __OFADD__(v17, v30);
  v17 += v30;
  if (v34)
  {
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    return;
  }
  v26 = v33 + v30;
  v10 = v17;
  if (!v101)
  {
LABEL_62:
    OUTLINED_FUNCTION_196(41, 0xE100000000000000, v11, v26);
    if ((v81 & 1) != 0)
    {
      v114._countAndFlagsBits = OUTLINED_FUNCTION_135();
      v25 = OUTLINED_FUNCTION_50(v114, v82);
    }
    v83 = *(_DWORD *)(v9 + 20);
    v26 = v83 + v25;
    if (__CFADD__(v83, (_DWORD)v25))
      goto LABEL_91;
    *(_DWORD *)(v9 + 20) = v26;
    goto LABEL_67;
  }
LABEL_13:
  v93 = v17;
  v92 = v21;
  OUTLINED_FUNCTION_186();
  v97 = v36 + v35;
  v98 = v37;
  v96 = (v38 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v39 = 0;
  v40 = 0;
  v41 = (uint64_t *)(_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0() + 48);
  v26 = v12;
  do
  {
    v43 = *(v41 - 2);
    v42 = *(v41 - 1);
    v44 = *v41;
    v45 = v41[1];
    v47 = v41[2];
    v46 = v41[3];
    v48 = v41[4];
    v49 = v41[5];
    v103 = *v41;
    v104 = v43;
    if (v47 >> 62)
    {
      if (v47 >> 62 == 1)
      {
        v107[0] = *(v41 - 2);
        v107[1] = v42;
        v107[2] = v44;
        v107[3] = v45;
        v108 = v47 & 1;
        v109 = v46;
        v110 = v48;
        v111 = v49;
        sub_1A5666914(v43, v42, v44, v45, v47, v46, v48, v49);
        sub_1A56E4930(v107);
      }
      else
      {
        v62 = v46 | v48 | v49;
        if (v47 == 0x8000000000000000 && (v44 | v42 | v43 | v45 | v62) == 0)
        {
          v68 = OUTLINED_FUNCTION_171((__n128)xmmword_1A59ABF60);
          OUTLINED_FUNCTION_115(v68, (unint64_t)&v105 | 0xA);
          v69 = *(_DWORD *)(v9 + 20);
          v59 = __CFADD__(v69, (_DWORD)v50);
          v67 = v69 + v50;
          if (v59)
            goto LABEL_81;
        }
        else
        {
          v64 = v47 == 0x8000000000000000 && v43 == 1;
          if (!v64 || v44 | v42 | v45 | v62)
          {
            v70 = OUTLINED_FUNCTION_171((__n128)xmmword_1A59ABF40);
            OUTLINED_FUNCTION_115(v70, (unint64_t)&v105 | 0xB);
            v71 = *(_DWORD *)(v9 + 20);
            v59 = __CFADD__(v71, (_DWORD)v50);
            v67 = v71 + v50;
            if (v59)
              goto LABEL_83;
          }
          else
          {
            v65 = OUTLINED_FUNCTION_171((__n128)xmmword_1A59ABF50);
            OUTLINED_FUNCTION_115(v65, (uint64_t)&v106);
            v66 = *(_DWORD *)(v9 + 20);
            v59 = __CFADD__(v66, (_DWORD)v50);
            v67 = v66 + v50;
            if (v59)
              goto LABEL_82;
          }
        }
        v50 = v50;
        *(_DWORD *)(v9 + 20) = v67;
      }
    }
    else
    {
      v102 = *(v41 - 1);
      OUTLINED_FUNCTION_82();
      v51 = OUTLINED_FUNCTION_194();
      OUTLINED_FUNCTION_196(v51, v52, v11, v26);
      if ((v54 & 1) != 0)
      {
        v55 = OUTLINED_FUNCTION_194();
        v53 = OUTLINED_FUNCTION_34(v55, v56);
      }
      v57 = v53;
      v58 = *(_DWORD *)(v9 + 20);
      v59 = __CFADD__(v58, (_DWORD)v53);
      v60 = v58 + v53;
      if (v59)
        goto LABEL_79;
      *(_DWORD *)(v9 + 20) = v60;
      OUTLINED_FUNCTION_66();
      sub_1A565C4B8();
      v34 = __OFADD__(v57, v61);
      v50 = v57 + v61;
      if (v34)
        goto LABEL_80;
      v42 = v102;
    }
    v72 = v40 + v50;
    if (__OFADD__(v40, v50))
    {
      __break(1u);
LABEL_77:
      __break(1u);
LABEL_78:
      __break(1u);
LABEL_79:
      __break(1u);
LABEL_80:
      __break(1u);
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
      goto LABEL_84;
    }
    v26 = *(_DWORD *)(v9 + 20);
    if (v39 >= v101 - 1)
    {
      OUTLINED_FUNCTION_187(v104, v42, v103);
      v78 = 0;
    }
    else
    {
      if ((a5 & 0x1000000000000000) != 0)
      {
        OUTLINED_FUNCTION_11_1();
        OUTLINED_FUNCTION_1_2();
        v78 = OUTLINED_FUNCTION_34(a4, a5);
        OUTLINED_FUNCTION_2_4();
        OUTLINED_FUNCTION_36();
      }
      else
      {
        if ((a5 & 0x2000000000000000) != 0)
        {
          v105 = a4;
          v106 = v98;
          OUTLINED_FUNCTION_27();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_1_2();
          OUTLINED_FUNCTION_115((uint64_t)&v105, v97);
          v77 = v79;
        }
        else
        {
          v73 = a4 & 0xFFFFFFFFFFFFLL;
          v74 = v96;
          if ((a4 & 0x1000000000000000) == 0)
            v74 = sub_1A594C7D4();
          if (v74)
            v75 = v74 + v73;
          else
            v75 = 0;
          OUTLINED_FUNCTION_27();
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_1_2();
          ByteBuffer._setBytes(_:at:)(v74, v75, v26);
          v77 = v76;
          v9 = a9;
        }
        OUTLINED_FUNCTION_2_4();
        OUTLINED_FUNCTION_36();
        OUTLINED_FUNCTION_17();
        v78 = v77;
      }
      OUTLINED_FUNCTION_187(v104, v42, v103);
      v80 = *(_DWORD *)(v9 + 20);
      v26 = v80 + v78;
      if (__CFADD__(v80, (_DWORD)v78))
        goto LABEL_78;
      *(_DWORD *)(v9 + 20) = v26;
    }
    v40 = v72 + v78;
    if (__OFADD__(v72, v78))
      goto LABEL_77;
    v41 += 8;
    ++v39;
    v11 = a9 + 8;
  }
  while (v101 != v39);
  swift_bridgeObjectRelease();
  v10 = v93 + v40;
  if (__OFADD__(v93, v40))
    goto LABEL_87;
  v23 = a6;
  if ((v92 & 1) != 0)
  {
    v24 = a7;
    goto LABEL_62;
  }
  v25 = 0;
  v24 = a7;
LABEL_67:
  v84 = v10 + v25;
  if (__OFADD__(v10, v25))
  {
LABEL_84:
    __break(1u);
LABEL_85:
    __break(1u);
LABEL_86:
    __break(1u);
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
    goto LABEL_90;
  }
  if (v101)
  {
    v85 = v26;
    OUTLINED_FUNCTION_82();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_0_10();
    OUTLINED_FUNCTION_196(v23, (unint64_t)v24, a9 + 8, v26);
    v87 = v86;
    v89 = v88;
    OUTLINED_FUNCTION_19();
    if ((v89 & 1) != 0)
    {
      v115._countAndFlagsBits = v23;
      v115._object = v24;
      v87 = OUTLINED_FUNCTION_14_0(v115, v85);
    }
    OUTLINED_FUNCTION_4_4();
    OUTLINED_FUNCTION_23();
    v90 = *(_DWORD *)(v9 + 20);
    v59 = __CFADD__(v90, (_DWORD)v87);
    v91 = v90 + v87;
    if (v59)
      goto LABEL_88;
    *(_DWORD *)(v9 + 20) = v91;
  }
  else
  {
    v87 = 0;
  }
  if (__OFADD__(v84, v87))
    goto LABEL_85;
}

void sub_1A565FDFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, int a8, uint64_t a9)
{
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  Swift::Int v13;
  Swift::Int v14;
  char v15;
  char v16;
  Swift::Int v17;
  int v18;
  Swift::Int v19;
  Swift::Int v20;
  uint64_t v21;
  unint64_t v22;
  Swift::Int v23;
  char v24;
  Swift::Int v25;
  int v26;
  BOOL v27;
  Swift::UInt32 v28;
  uint64_t v29;
  Swift::Int v30;
  uint64_t *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  BOOL v52;
  int v53;
  uint64_t v54;
  int v55;
  Swift::Int v56;
  uint64_t v57;
  Swift::Int v58;
  Swift::Int v59;
  char v60;
  char v61;
  Swift::Int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  unint64_t v83;
  char v84;
  Swift::Int v85;
  uint64_t v86;
  Swift::Int v87;
  uint64_t v88;
  unint64_t v89;
  Swift::Int v90;
  char v91;
  char v92;
  int v93;
  uint64_t (*v94)(uint64_t, uint64_t, uint64_t, uint64_t, char);
  uint64_t (*v95)(uint64_t, uint64_t, unint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  __n128 v102;
  __n128 v103;
  __int16 *v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char v118;
  __int16 v119;
  _QWORD v120[4];
  char v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  Swift::String v125;
  Swift::String v126;
  Swift::String v127;
  Swift::String v128;
  Swift::String v129;

  v99 = a6;
  v107 = a4;
  v108 = a5;
  v10 = a9;
  v115 = a9 + 8;
  v100 = a1;
  v113 = *(_QWORD *)(a1 + 16);
  HIDWORD(v101) = a8;
  if (v113)
  {
    OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_0_10();
    OUTLINED_FUNCTION_12_1();
    v11 = OUTLINED_FUNCTION_215();
    OUTLINED_FUNCTION_8_2(v11, v12, v115);
    v14 = v13;
    v16 = v15;
    v114 = 0;
    OUTLINED_FUNCTION_9_2();
    if ((v16 & 1) != 0)
    {
      v125._countAndFlagsBits = OUTLINED_FUNCTION_160();
      v14 = OUTLINED_FUNCTION_110(v125, v17);
    }
    OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_4_4();
    v18 = *(_DWORD *)(a9 + 20);
    if (__CFADD__(v18, (_DWORD)v14))
    {
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
      goto LABEL_57;
    }
    *(_DWORD *)(a9 + 20) = v18 + v14;
    if ((v101 & 0x100000000) == 0)
      goto LABEL_13;
  }
  else
  {
    v14 = 0;
    v19 = 0;
    v20 = 0;
    if ((a8 & 1) == 0)
      goto LABEL_46;
  }
  v21 = OUTLINED_FUNCTION_158();
  OUTLINED_FUNCTION_8_2(v21, v22, v115);
  v114 = 0;
  if ((v24 & 1) != 0)
  {
    v126._countAndFlagsBits = OUTLINED_FUNCTION_150();
    v23 = OUTLINED_FUNCTION_110(v126, v25);
  }
  v26 = *(_DWORD *)(a9 + 20);
  if (__CFADD__(v26, (_DWORD)v23))
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  *(_DWORD *)(a9 + 20) = v26 + v23;
  v27 = __OFADD__(v14, v23);
  v14 += v23;
  if (v27)
  {
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  v28 = v26 + v23;
  if (!v113)
  {
LABEL_34:
    v82 = OUTLINED_FUNCTION_170();
    OUTLINED_FUNCTION_8_2(v82, v83, v115);
    if ((v84 & 1) != 0)
    {
      v128._countAndFlagsBits = OUTLINED_FUNCTION_135();
      OUTLINED_FUNCTION_110(v128, v85);
    }
    OUTLINED_FUNCTION_275();
    if (!v52)
    {
      *(_DWORD *)(v10 + 20) = v28;
      goto LABEL_39;
    }
    goto LABEL_59;
  }
LABEL_13:
  v97 = (uint64_t)a7;
  v98 = v14;
  v112 = v113 - 1;
  v105 = (unint64_t)&v118 | 0xB;
  v104 = &v119;
  v29 = 0;
  v30 = 0;
  v31 = (uint64_t *)(_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0() + 48);
  v103 = (__n128)xmmword_1A59ABF40;
  v102 = (__n128)xmmword_1A59ABF70;
  v33 = v107;
  v32 = v108;
  v106 = a9;
  do
  {
    v34 = *(v31 - 2);
    v35 = *(v31 - 1);
    v36 = *v31;
    v37 = v31[1];
    v39 = v31[2];
    v38 = v31[3];
    v40 = v31[4];
    v41 = v31[5];
    v117 = v34;
    if (v39 == 254)
    {
      v54 = OUTLINED_FUNCTION_171(v103);
      OUTLINED_FUNCTION_85(v54, v105);
      v55 = *(_DWORD *)(v10 + 20);
      v52 = __CFADD__(v55, (_DWORD)v43);
      v53 = v55 + v43;
      if (v52)
        goto LABEL_52;
      goto LABEL_20;
    }
    if (v39 == 255)
    {
      v42 = OUTLINED_FUNCTION_171(v102);
      OUTLINED_FUNCTION_85(v42, (uint64_t)v104);
      v51 = *(_DWORD *)(v10 + 20);
      v52 = __CFADD__(v51, (_DWORD)v43);
      v53 = v51 + v43;
      if (v52)
        goto LABEL_51;
LABEL_20:
      v43 = v43;
      *(_DWORD *)(v10 + 20) = v53;
      goto LABEL_22;
    }
    v120[0] = *(v31 - 2);
    v120[1] = v35;
    v120[2] = v36;
    v120[3] = v37;
    v121 = v39 & 1;
    v122 = v38;
    v123 = v40;
    v124 = v41;
    v94 = sub_1A56667EC;
    v95 = sub_1A5666818;
    sub_1A566696C(v34, v35, v36, v37, v39);
    sub_1A56E4930(v120);
LABEL_22:
    v56 = v30 + v43;
    if (__OFADD__(v30, v43))
    {
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
    v116 = v40;
    v28 = *(_DWORD *)(v10 + 20);
    if (v29 >= v112)
    {
      v77 = OUTLINED_FUNCTION_183(v43, v44, v45, v46, v47, v48, v49, v50, (uint64_t)v94, (uint64_t)v95, v96, v97, v98, v99, v100, v101, v102.n128_i64[0], v102.n128_i64[1], v103.n128_i64[0],
              v103.n128_i64[1],
              (uint64_t)v104,
              v105,
              v106,
              v107,
              v108,
              v109,
              v110,
              v112,
              v113,
              v114,
              v115,
              v40,
              v117);
      sub_1A566696C(v77, v78, v79, v80, v81);
      v59 = 0;
    }
    else
    {
      v111 = v41;
      v57 = *(_QWORD *)(v10 + 8);
      OUTLINED_FUNCTION_27();
      OUTLINED_FUNCTION_11_1();
      OUTLINED_FUNCTION_12_1();
      OUTLINED_FUNCTION_9_3(v33, v32, v115);
      v59 = v58;
      v61 = v60;
      OUTLINED_FUNCTION_17();
      if ((v61 & 1) != 0)
      {
        OUTLINED_FUNCTION_204();
        v59 = OUTLINED_FUNCTION_110(v127, v62);
      }
      OUTLINED_FUNCTION_15_1();
      v63 = OUTLINED_FUNCTION_221();
      v71 = OUTLINED_FUNCTION_183(v63, v64, v65, v66, v67, v68, v69, v70, (uint64_t)v94, (uint64_t)v95, v96, v97, v98, v99, v100, v101, v102.n128_i64[0], v102.n128_i64[1], v103.n128_i64[0],
              v103.n128_i64[1],
              (uint64_t)v104,
              v105,
              v106,
              v107,
              v108,
              v57,
              v111,
              v112,
              v113,
              v114,
              v115,
              v116,
              v117);
      sub_1A566696C(v71, v72, v73, v74, v75);
      v10 = v106;
      v76 = *(_DWORD *)(v106 + 20);
      v28 = v76 + v59;
      if (__CFADD__(v76, (_DWORD)v59))
        goto LABEL_50;
      *(_DWORD *)(v106 + 20) = v28;
      v33 = v107;
      v32 = v108;
    }
    v30 = v56 + v59;
    if (__OFADD__(v56, v59))
      goto LABEL_49;
    v31 += 8;
    ++v29;
  }
  while (v113 != v29);
  OUTLINED_FUNCTION_242();
  v14 = v98 + v30;
  if (__OFADD__(v98, v30))
    goto LABEL_56;
  if ((v101 & 0x100000000) != 0)
  {
    a7 = (void *)v97;
    goto LABEL_34;
  }
  v86 = 0;
  a7 = (void *)v97;
LABEL_39:
  v19 = v14 + v86;
  if (__OFADD__(v14, v86))
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  if (!v113)
  {
    v20 = 0;
LABEL_46:
    if (!__OFADD__(v19, v20))
      return;
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  v87 = v28;
  OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_12_1();
  v88 = OUTLINED_FUNCTION_255();
  sub_1A56814E0(v88, v89, v115, v28);
  v20 = v90;
  v92 = v91;
  OUTLINED_FUNCTION_19();
  if ((v92 & 1) != 0)
  {
    v129._countAndFlagsBits = v99;
    v129._object = a7;
    v20 = OUTLINED_FUNCTION_110(v129, v87);
  }
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_218();
  if (!v52)
  {
    *(_DWORD *)(v10 + 20) = v93;
    goto LABEL_46;
  }
LABEL_60:
  __break(1u);
}

void sub_1A5660268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  Swift::UInt32 v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  Swift::Int v12;
  uint64_t v13;
  char v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  Swift::Int v20;
  char v21;
  char v22;
  uint64_t v23;
  Swift::Int v24;
  Swift::Int v25;
  void *v26;
  uint64_t v27;
  char v28;
  int v29;
  Swift::Int v30;
  char v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  Swift::Int v35;
  Swift::Int v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  BOOL v51;
  Swift::Int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned int v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  Swift::Int v61;
  uint64_t v62;
  uint64_t v63;
  Swift::UInt32 v64;
  unsigned int v65;
  int v66;
  Swift::String v67;
  Swift::Int v68;
  Swift::Int v69;
  char v70;
  Swift::Int v71;
  Swift::Int v72;
  char v73;
  char v74;
  int v75;
  int v76;
  Swift::Int v77;
  Swift::Int v78;
  char v79;
  void *v80;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  Swift::Int v88;
  char v89;
  Swift::Int v90;
  Swift::Int v91;
  _QWORD v92[2];
  int v93;
  __int16 v94;
  char v95;
  uint64_t v96;
  unint64_t v97;
  Swift::String v98;
  Swift::String v99;

  OUTLINED_FUNCTION_276();
  v11 = v7 + 8;
  v12 = *(unsigned int *)(v7 + 20);
  v88 = *(_QWORD *)(v13 + 16);
  v79 = v14;
  v80 = v10;
  if (v88)
  {
    v15 = v9;
    v16 = v8;
    OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_1_2();
    OUTLINED_FUNCTION_3_3();
    OUTLINED_FUNCTION_227();
    OUTLINED_FUNCTION_24(v17, v18, v19);
    v77 = v20;
    v22 = v21;
    OUTLINED_FUNCTION_94();
    if ((v22 & 1) != 0)
    {
      v98._countAndFlagsBits = v16;
      v98._object = v15;
      v25 = OUTLINED_FUNCTION_86(v98, v12);
      OUTLINED_FUNCTION_5_1();
      OUTLINED_FUNCTION_2_4();
      v23 = a6;
      v24 = v88;
    }
    else
    {
      OUTLINED_FUNCTION_5_1();
      OUTLINED_FUNCTION_2_4();
      v23 = a6;
      v24 = v88;
      v25 = v77;
    }
    v29 = *(_DWORD *)(v7 + 20);
    LODWORD(v12) = v29 + v25;
    v26 = v80;
    if (__CFADD__(v29, (_DWORD)v25))
    {
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
    *(_DWORD *)(v7 + 20) = v12;
    if ((v79 & 1) == 0)
      goto LABEL_14;
  }
  else
  {
    v26 = v10;
    v25 = 0;
    v27 = OUTLINED_FUNCTION_92();
    v23 = a6;
    v24 = 0;
    if ((v28 & 1) == 0)
      goto LABEL_48;
  }
  v30 = v25;
  OUTLINED_FUNCTION_149(40, 0xE100000000000000, v7 + 8, v12);
  if ((v31 & 1) != 0)
    OUTLINED_FUNCTION_81(40);
  OUTLINED_FUNCTION_154();
  if (v33)
    goto LABEL_67;
  *(_DWORD *)(v7 + 20) = v6;
  v25 += v32;
  if (!__OFADD__(v30, v32))
  {
    if (v24)
    {
LABEL_14:
      v78 = v25;
      v85 = v7 + 8;
      v90 = v24 - 1;
      OUTLINED_FUNCTION_186();
      OUTLINED_FUNCTION_144();
      v82 = v34;
      v35 = 0;
      v36 = 0;
      v37 = (char *)(OUTLINED_FUNCTION_146() + 55);
      v83 = v7;
      do
      {
        v38 = *(_QWORD *)(v37 - 23);
        v39 = *(_QWORD *)(v37 - 15);
        v40 = *(unsigned int *)(v37 - 7) | ((unint64_t)(*(unsigned __int16 *)(v37 - 3) | (*(v37 - 1) << 16)) << 32);
        v41 = *v37;
        if ((*v37 & 1) != 0)
        {
          v42 = OUTLINED_FUNCTION_107();
          sub_1A56667D4(v42, v43, v44, 1);
          OUTLINED_FUNCTION_66();
          v46 = sub_1A5660268(v45);
        }
        else
        {
          if (HIDWORD(v39) < v39)
            goto LABEL_58;
          v47 = BYTE6(v40) | (WORD2(v40) << 8);
          if (*(_DWORD *)(v37 - 7) < v47)
            goto LABEL_59;
          if (HIDWORD(v39) > *(_DWORD *)(v37 - 7) - v47)
            goto LABEL_60;
          v92[0] = *(_QWORD *)(v37 - 23);
          v92[1] = v39;
          v93 = v40;
          v94 = WORD2(v40);
          v95 = BYTE6(v40);
          v96 = v39;
          v97 = HIDWORD(v39);
          v48 = OUTLINED_FUNCTION_107();
          sub_1A56667D4(v48, v49, v50, 0);
          sub_1A56BA79C((uint64_t)v92);
        }
        v51 = __OFADD__(v36, v46);
        v52 = v36 + v46;
        if (v51)
        {
          __break(1u);
LABEL_57:
          __break(1u);
LABEL_58:
          __break(1u);
LABEL_59:
          __break(1u);
LABEL_60:
          __break(1u);
LABEL_61:
          __break(1u);
          goto LABEL_62;
        }
        v6 = *(_DWORD *)(v7 + 20);
        if (v35 >= v90)
        {
          v58 = OUTLINED_FUNCTION_107();
          sub_1A56667E0(v58, v59, v60, v41);
          v61 = 0;
        }
        else
        {
          v89 = v41;
          if ((a5 & 0x1000000000000000) != 0)
          {
            OUTLINED_FUNCTION_18_0();
            OUTLINED_FUNCTION_1_2();
            OUTLINED_FUNCTION_192();
            v67._countAndFlagsBits = a4;
            v61 = ByteBuffer._setStringSlowpath(_:at:)(v67, v68);
            OUTLINED_FUNCTION_2_4();
            OUTLINED_FUNCTION_19_0();
          }
          else
          {
            if ((a5 & 0x2000000000000000) != 0)
            {
              OUTLINED_FUNCTION_82();
              OUTLINED_FUNCTION_30();
              OUTLINED_FUNCTION_1_2();
              OUTLINED_FUNCTION_189();
              ByteBuffer._setBytes(_:at:)(v62, v63, v64);
              v57 = v65;
            }
            else
            {
              v53 = a4 & 0xFFFFFFFFFFFFLL;
              v54 = v82;
              if ((a4 & 0x1000000000000000) == 0)
                v54 = sub_1A594C7D4();
              v55 = v54 + v53;
              if (!v54)
                v55 = 0;
              v84 = v55;
              OUTLINED_FUNCTION_82();
              OUTLINED_FUNCTION_30();
              OUTLINED_FUNCTION_1_2();
              ByteBuffer._setBytes(_:at:)(v54, v84, v6);
              v57 = v56;
              v7 = v83;
            }
            OUTLINED_FUNCTION_2_4();
            OUTLINED_FUNCTION_48();
            OUTLINED_FUNCTION_94();
            v61 = v57;
          }
          sub_1A56667E0(v38, v39, v40, v89);
          v66 = *(_DWORD *)(v7 + 20);
          v6 = v66 + v61;
          v24 = v88;
          if (__CFADD__(v66, (_DWORD)v61))
            goto LABEL_61;
          *(_DWORD *)(v7 + 20) = v6;
        }
        v51 = __OFADD__(v52, v61);
        v36 = v52 + v61;
        if (v51)
          goto LABEL_57;
        ++v35;
        v37 += 24;
      }
      while (v24 != v35);
      OUTLINED_FUNCTION_128();
      v25 = v78 + v36;
      if (__OFADD__(v78, v36))
        goto LABEL_65;
      v26 = v80;
      v23 = a6;
      if ((v79 & 1) != 0)
      {
        v69 = v78 + v36;
        v11 = v85;
        goto LABEL_44;
      }
      v27 = 0;
      v11 = v85;
      goto LABEL_48;
    }
    v69 = v30 + v32;
LABEL_44:
    OUTLINED_FUNCTION_8_2(41, 0xE100000000000000, v11);
    if ((v70 & 1) != 0)
      OUTLINED_FUNCTION_81(41);
    v25 = v69;
    OUTLINED_FUNCTION_154();
    if (v33)
      goto LABEL_69;
    *(_DWORD *)(v7 + 20) = v6;
LABEL_48:
    v71 = v25 + v27;
    if (__OFADD__(v25, v27))
    {
LABEL_62:
      __break(1u);
    }
    else
    {
      if (v24)
      {
        v91 = v25 + v27;
        OUTLINED_FUNCTION_228();
        OUTLINED_FUNCTION_13_0();
        OUTLINED_FUNCTION_0_10();
        OUTLINED_FUNCTION_1_2();
        OUTLINED_FUNCTION_149(v23, (unint64_t)v26, v11, v6);
        v24 = v72;
        v74 = v73;
        OUTLINED_FUNCTION_19();
        if ((v74 & 1) != 0)
        {
          v99._countAndFlagsBits = v23;
          v99._object = v26;
          v24 = OUTLINED_FUNCTION_86(v99, v6);
        }
        OUTLINED_FUNCTION_2_4();
        OUTLINED_FUNCTION_4_4();
        v75 = *(_DWORD *)(v7 + 20);
        v33 = __CFADD__(v75, (_DWORD)v24);
        v76 = v75 + v24;
        if (v33)
          goto LABEL_66;
        *(_DWORD *)(v7 + 20) = v76;
        v71 = v91;
      }
      if (!__OFADD__(v71, v24))
      {
        OUTLINED_FUNCTION_118();
        return;
      }
    }
    __break(1u);
    goto LABEL_64;
  }
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
}

void sub_1A5660724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  Swift::Int v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  unint64_t v59;
  uint64_t v60;
  Swift::Int v61;
  Swift::Int v62;
  char v63;
  char v64;
  int v65;
  unint64_t v66;
  uint64_t v67;
  char v68;
  Swift::Int v69;
  char v70;
  int v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  Swift::Int v77;
  char *v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  Swift::Int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  Swift::Int v88;
  uint64_t v89;
  unint64_t v90;
  Swift::Int v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  Swift::Int v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  Swift::Int v101;
  char v102;
  Swift::Int v103;
  uint64_t v104;
  int v105;
  BOOL v106;
  int v107;
  Swift::Int v108;
  int v109;
  int v110;
  int v111;
  char v112;
  uint64_t v113;
  Swift::Int v114;
  Swift::Int v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unsigned int v119;
  unsigned int v120;
  Swift::Int v121;
  unsigned int v122;
  int v123;
  uint64_t v124;
  uint64_t v125;
  char v126;
  int v127;
  Swift::Int v128;
  int v129;
  int v130;
  Swift::Int v131;
  uint64_t v132;
  unint64_t v133;
  char v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  Swift::Int v141;
  uint64_t v142;
  char v143;
  uint64_t v144;
  uint64_t v145;
  Swift::String v146;

  OUTLINED_FUNCTION_62();
  a43 = v45;
  a44 = v49;
  v51 = v50;
  v135 = v53;
  v136 = v52;
  v54 = 0;
  v55 = a45;
  v56 = a45 + 8;
  v133 = v48;
  v137 = a45;
  v138 = *(_QWORD *)(v57 + 16);
  v132 = v50;
  v134 = v58;
  if (v138)
  {
    v59 = v47;
    v60 = v46;
    OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_1_2();
    OUTLINED_FUNCTION_12_1();
    OUTLINED_FUNCTION_113(v60, v59, v56);
    v62 = v61;
    v64 = v63;
    OUTLINED_FUNCTION_52();
    if ((v64 & 1) != 0)
      v62 = OUTLINED_FUNCTION_125(v60);
    OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_2_4();
    v55 = v137;
    v65 = *(_DWORD *)(v137 + 20);
    v66 = v133;
    if (__CFADD__(v65, (_DWORD)v62))
    {
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
      goto LABEL_83;
    }
    *(_DWORD *)(v137 + 20) = v65 + v62;
    if ((v134 & 1) == 0)
      goto LABEL_13;
  }
  else
  {
    v66 = v48;
    v62 = 0;
    v67 = OUTLINED_FUNCTION_179();
    if ((v68 & 1) == 0)
      goto LABEL_64;
  }
  OUTLINED_FUNCTION_6_3(40, 0xE100000000000000);
  if ((v70 & 1) != 0)
    v69 = OUTLINED_FUNCTION_10_0(40);
  v71 = *(_DWORD *)(v55 + 20);
  if (__CFADD__(v71, (_DWORD)v69))
    goto LABEL_84;
  *(_DWORD *)(v55 + 20) = v71 + v69;
  v72 = __OFADD__(v62, v69);
  v62 += v69;
  if (!v72)
  {
    v51 = v62;
    if (v138)
    {
LABEL_13:
      v131 = v62;
      OUTLINED_FUNCTION_206();
      v73 = OUTLINED_FUNCTION_146();
      v76 = 0;
      v77 = 0;
      v78 = (char *)(v73 + 62);
      v139 = v56;
      do
      {
        v79 = *(_QWORD *)(v78 - 30);
        v80 = *(_QWORD *)(v78 - 22);
        v81 = *(_QWORD *)(v78 - 14);
        v82 = *(unsigned int *)(v78 - 6) | ((unint64_t)*((unsigned __int16 *)v78 - 1) << 32);
        v145 = v82;
        v144 = v80;
        v143 = *v78;
        if (*v78 == 1)
        {
          if ((v80 & 0x1000000000000000) != 0)
          {
            OUTLINED_FUNCTION_95(v73, v74, v75, v82);
            v124 = OUTLINED_FUNCTION_180();
            v88 = OUTLINED_FUNCTION_33(v124, v125);
          }
          else
          {
            v140 = v54;
            v83 = v77;
            if ((v80 & 0x2000000000000000) != 0)
            {
              a29 = *(_QWORD *)(v78 - 30);
              a30 = v80 & 0xFFFFFFFFFFFFFFLL;
              OUTLINED_FUNCTION_95(v73, v74, v75, v82);
              OUTLINED_FUNCTION_29();
              OUTLINED_FUNCTION_178((uint64_t)&a29, (uint64_t)&a29 + (HIBYTE(v80) & 0xF));
              LODWORD(v88) = v109;
            }
            else
            {
              if ((v79 & 0x1000000000000000) != 0)
              {
                v84 = (v80 & 0xFFFFFFFFFFFFFFFLL) + 32;
                v85 = v79 & 0xFFFFFFFFFFFFLL;
              }
              else
              {
                OUTLINED_FUNCTION_180();
                v73 = sub_1A594C7D4();
                v82 = v145;
                v84 = v73;
              }
              if (v84)
                v86 = v84 + v85;
              else
                v86 = 0;
              OUTLINED_FUNCTION_95(v73, v85, v75, v82);
              OUTLINED_FUNCTION_29();
              OUTLINED_FUNCTION_178(v84, v86);
              LODWORD(v88) = v87;
              v55 = v137;
            }
            OUTLINED_FUNCTION_37();
            v88 = v88;
            v77 = v83;
            v54 = v140;
          }
          v110 = *(_DWORD *)(v55 + 20);
          v106 = __CFADD__(v110, (_DWORD)v88);
          v111 = v110 + v88;
          if (v106)
            goto LABEL_76;
          *(_DWORD *)(v55 + 20) = v111;
          OUTLINED_FUNCTION_188();
          if (!v112 && v106)
          {
            v113 = 0;
          }
          else
          {
            a29 = v81;
            LODWORD(a30) = v104;
            BYTE4(a30) = BYTE4(v104);
            BYTE5(a30) = BYTE5(v104) & 1;
            sub_1A570551C((uint64_t)&a29, v55);
            v104 = v145;
          }
          v108 = v88 + v113;
          if (__OFADD__(v88, v113))
            goto LABEL_77;
        }
        else
        {
          v141 = v77;
          v89 = OUTLINED_FUNCTION_117();
          OUTLINED_FUNCTION_22_0(v89, v90);
          if ((v92 & 1) != 0)
          {
            v93 = OUTLINED_FUNCTION_117();
            v91 = OUTLINED_FUNCTION_33(v93, v94);
          }
          v95 = v91;
          v96 = *(_DWORD *)(v55 + 20);
          if (__CFADD__(v96, (_DWORD)v91))
            goto LABEL_73;
          *(_DWORD *)(v55 + 20) = v96 + v91;
          v97 = v79;
          a29 = v79;
          v98 = sub_1A594CC9C();
          v100 = v99;
          v56 = v139;
          OUTLINED_FUNCTION_114(v98, v99, v139);
          if ((v102 & 1) != 0)
            v101 = OUTLINED_FUNCTION_102(v98, v100);
          v103 = v101;
          OUTLINED_FUNCTION_94();
          v104 = v145;
          v55 = v137;
          v105 = *(_DWORD *)(v137 + 20);
          v106 = __CFADD__(v105, (_DWORD)v103);
          v107 = v105 + v103;
          if (v106)
            goto LABEL_74;
          *(_DWORD *)(v137 + 20) = v107;
          v108 = v95 + v103;
          if (__OFADD__(v95, v103))
            goto LABEL_75;
          v79 = v97;
          v77 = v141;
        }
        v114 = v77 + v108;
        if (__OFADD__(v77, v108))
        {
          __break(1u);
LABEL_72:
          __break(1u);
LABEL_73:
          __break(1u);
LABEL_74:
          __break(1u);
LABEL_75:
          __break(1u);
LABEL_76:
          __break(1u);
LABEL_77:
          __break(1u);
LABEL_78:
          __break(1u);
          goto LABEL_79;
        }
        v115 = *(unsigned int *)(v55 + 20);
        if (v76 >= a20)
        {
          v73 = sub_1A5666C8C(v79, v144, v81, v104, v143);
          v121 = 0;
        }
        else
        {
          v142 = v54;
          if ((v135 & 0x1000000000000000) != 0)
          {
            v116 = v79;
            OUTLINED_FUNCTION_3_3();
            OUTLINED_FUNCTION_30();
            v146._countAndFlagsBits = v136;
            v146._object = (void *)v135;
            v121 = OUTLINED_FUNCTION_229(v146, v115);
            OUTLINED_FUNCTION_48();
            OUTLINED_FUNCTION_5_1();
          }
          else
          {
            v116 = v79;
            if ((v135 & 0x2000000000000000) != 0)
            {
              a29 = v136;
              a30 = v135 & 0xFFFFFFFFFFFFFFLL;
              OUTLINED_FUNCTION_3_3();
              OUTLINED_FUNCTION_30();
              OUTLINED_FUNCTION_16_0();
              OUTLINED_FUNCTION_111((uint64_t)&a29, (uint64_t)&a29 + (HIBYTE(v135) & 0xF), v115);
              v120 = v122;
            }
            else
            {
              if ((v136 & 0x1000000000000000) == 0)
                sub_1A594C7D4();
              OUTLINED_FUNCTION_205();
              OUTLINED_FUNCTION_3_3();
              OUTLINED_FUNCTION_30();
              OUTLINED_FUNCTION_16_0();
              v117 = OUTLINED_FUNCTION_212();
              OUTLINED_FUNCTION_111(v117, v118, v115);
              v120 = v119;
              v55 = v137;
            }
            OUTLINED_FUNCTION_48();
            OUTLINED_FUNCTION_5_1();
            OUTLINED_FUNCTION_52();
            v121 = v120;
          }
          v73 = sub_1A5666C8C(v116, v144, v81, v145, v143);
          v123 = *(_DWORD *)(v55 + 20);
          if (__CFADD__(v123, (_DWORD)v121))
            goto LABEL_78;
          *(_DWORD *)(v55 + 20) = v123 + v121;
          v56 = v139;
          v54 = v142;
        }
        v77 = v114 + v121;
        if (__OFADD__(v114, v121))
          goto LABEL_72;
        v78 += 32;
        ++v76;
      }
      while (v138 != v76);
      OUTLINED_FUNCTION_128();
      v51 = v131 + v77;
      if (__OFADD__(v131, v77))
        goto LABEL_82;
      if ((v134 & 1) != 0)
      {
        v66 = v133;
        goto LABEL_59;
      }
      v67 = 0;
      v66 = v133;
      goto LABEL_64;
    }
LABEL_59:
    OUTLINED_FUNCTION_22_0(41, 0xE100000000000000);
    if ((v126 & 1) != 0)
      v67 = OUTLINED_FUNCTION_33(41, 0xE100000000000000);
    v127 = *(_DWORD *)(v55 + 20);
    if (__CFADD__(v127, (_DWORD)v67))
      goto LABEL_86;
    *(_DWORD *)(v55 + 20) = v127 + v67;
LABEL_64:
    v72 = __OFADD__(v51, v67);
    v128 = v51 + v67;
    if (v72)
    {
LABEL_79:
      __break(1u);
    }
    else
    {
      if (v138)
      {
        OUTLINED_FUNCTION_13_0();
        OUTLINED_FUNCTION_18_0();
        OUTLINED_FUNCTION_1_2();
        OUTLINED_FUNCTION_96(v132, v66, v56);
        OUTLINED_FUNCTION_31();
        OUTLINED_FUNCTION_2_4();
        OUTLINED_FUNCTION_19_0();
        v129 = *(_DWORD *)(v55 + 20);
        v106 = __CFADD__(v129, (_DWORD)v56);
        v130 = v129 + v56;
        if (v106)
        {
LABEL_83:
          __break(1u);
LABEL_84:
          __break(1u);
          goto LABEL_85;
        }
        *(_DWORD *)(v55 + 20) = v130;
      }
      else
      {
        v56 = 0;
      }
      if (!__OFADD__(v128, v56))
      {
        OUTLINED_FUNCTION_20_0();
        return;
      }
    }
    __break(1u);
    goto LABEL_81;
  }
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
}

void sub_1A5660CE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,__int16 a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::Int v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  Swift::Int v62;
  Swift::Int v63;
  char v64;
  char v65;
  uint64_t v66;
  Swift::Int v67;
  Swift::UInt32 v68;
  int v69;
  Swift::Int v70;
  char v71;
  int v72;
  BOOL v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  Swift::Int v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  Swift::Int v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  Swift::UInt32 v90;
  Swift::Int v91;
  unsigned int v92;
  unsigned int v93;
  int v94;
  Swift::String v95;
  Swift::Int v96;
  char v97;
  int v98;
  Swift::Int v99;
  uint64_t v100;
  unint64_t v101;
  Swift::Int v102;
  Swift::Int v103;
  char v104;
  char v105;
  int v106;
  BOOL v107;
  int v108;
  Swift::Int v109;
  char v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  Swift::UInt32 v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  Swift::Int v118;
  uint64_t v119;
  uint64_t v120;
  Swift::String v121;
  Swift::String v122;
  Swift::String v123;
  Swift::String v124;

  OUTLINED_FUNCTION_208();
  a49 = v51;
  a50 = v53;
  v116 = v54;
  v117 = v55;
  v56 = a51;
  v57 = a51 + 8;
  v58 = *(unsigned int *)(a51 + 20);
  v119 = *(_QWORD *)(v59 + 16);
  v120 = a51;
  v110 = v52;
  if (v119)
  {
    OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_0_10();
    OUTLINED_FUNCTION_18_0();
    v60 = OUTLINED_FUNCTION_273();
    OUTLINED_FUNCTION_181(v60, v61, v57);
    v63 = v62;
    v65 = v64;
    OUTLINED_FUNCTION_38();
    if ((v65 & 1) != 0)
    {
      v121._countAndFlagsBits = OUTLINED_FUNCTION_273();
      v66 = v57;
      v56 = v120;
      v63 = OUTLINED_FUNCTION_35(v121, v58);
    }
    else
    {
      v66 = v57;
    }
    OUTLINED_FUNCTION_19_0();
    OUTLINED_FUNCTION_4_4();
    v69 = *(_DWORD *)(v56 + 20);
    LODWORD(v58) = v69 + v63;
    if (__CFADD__(v69, (_DWORD)v63))
    {
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
      goto LABEL_57;
    }
    *(_DWORD *)(v56 + 20) = v58;
    v57 = v66;
    if ((v110 & 1) == 0)
      goto LABEL_14;
  }
  else
  {
    v63 = 0;
    v67 = 0;
    v68 = *(_DWORD *)(a51 + 20);
    if ((v52 & 1) == 0)
      goto LABEL_39;
  }
  OUTLINED_FUNCTION_105(40, 0xE100000000000000, v57, v58);
  if ((v71 & 1) != 0)
  {
    v122._countAndFlagsBits = 40;
    v122._object = (void *)0xE100000000000000;
    v70 = OUTLINED_FUNCTION_35(v122, v58);
  }
  v72 = *(_DWORD *)(v120 + 20);
  v68 = v72 + v70;
  if (__CFADD__(v72, (_DWORD)v70))
    goto LABEL_56;
  *(_DWORD *)(v120 + 20) = v68;
  v73 = __OFADD__(v63, v70);
  v63 += v70;
  if (!v73)
  {
    if (v119)
    {
LABEL_14:
      v109 = v63;
      v115 = v57;
      OUTLINED_FUNCTION_186();
      v112 = (char *)&a29 + v74;
      v113 = v75;
      v111 = (v76 & 0xFFFFFFFFFFFFFFFLL) + 32;
      v77 = 0;
      v78 = 0;
      v79 = (char *)(OUTLINED_FUNCTION_146() + 62);
      do
      {
        v80 = *(_QWORD *)(v79 - 22);
        v81 = *(_QWORD *)(v79 - 14);
        v82 = *((unsigned __int16 *)v79 - 1);
        v83 = *(unsigned int *)(v79 - 6);
        v84 = *v79;
        a32 = *(_QWORD *)(v79 - 30);
        a33 = v80;
        a34 = v81;
        a36 = v82;
        a35 = v83;
        a37 = v84;
        sub_1A5666CC4(a32, v80, v81, v83 | (v82 << 32), v84);
        sub_1A56FF8A8((uint64_t)&a32, v120);
        v86 = v78 + v85;
        if (__OFADD__(v78, v85))
        {
          __break(1u);
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
          goto LABEL_51;
        }
        v68 = *(_DWORD *)(v120 + 20);
        if (v77 >= v119 - 1)
        {
          OUTLINED_FUNCTION_136();
          v91 = 0;
        }
        else
        {
          v118 = v78 + v85;
          if ((v117 & 0x1000000000000000) != 0)
          {
            OUTLINED_FUNCTION_251();
            OUTLINED_FUNCTION_0_10();
            OUTLINED_FUNCTION_204();
            v95._countAndFlagsBits = v116;
            v91 = ByteBuffer._setStringSlowpath(_:at:)(v95, v96);
            OUTLINED_FUNCTION_4_4();
            swift_release();
          }
          else
          {
            if ((v117 & 0x2000000000000000) != 0)
            {
              a29 = v116;
              a30 = v113;
              OUTLINED_FUNCTION_251();
              OUTLINED_FUNCTION_0_10();
              OUTLINED_FUNCTION_27();
              v88 = &a29;
              v89 = (uint64_t)v112;
              v90 = v68;
            }
            else
            {
              v114 = *(_DWORD *)(v120 + 20);
              v87 = v111;
              if ((v116 & 0x1000000000000000) == 0)
                v87 = sub_1A594C7D4();
              OUTLINED_FUNCTION_241();
              OUTLINED_FUNCTION_0_10();
              OUTLINED_FUNCTION_17_0();
              OUTLINED_FUNCTION_27();
              v88 = (_QWORD *)v87;
              v89 = a19;
              v90 = v114;
            }
            ByteBuffer._setBytes(_:at:)((uint64_t)v88, v89, v90);
            v93 = v92;
            OUTLINED_FUNCTION_4_4();
            swift_release();
            OUTLINED_FUNCTION_17();
            v91 = v93;
          }
          OUTLINED_FUNCTION_136();
          v94 = *(_DWORD *)(v120 + 20);
          v68 = v94 + v91;
          v86 = v118;
          if (__CFADD__(v94, (_DWORD)v91))
            goto LABEL_50;
          *(_DWORD *)(v120 + 20) = v68;
        }
        v73 = __OFADD__(v86, v91);
        v78 = v86 + v91;
        if (v73)
          goto LABEL_49;
        v79 += 32;
        ++v77;
      }
      while (v119 != v77);
      OUTLINED_FUNCTION_128();
      v63 = v109 + v78;
      if (__OFADD__(v109, v78))
        goto LABEL_54;
      if ((v110 & 1) != 0)
      {
        v57 = v115;
        goto LABEL_34;
      }
      v67 = 0;
      v57 = v115;
      goto LABEL_39;
    }
LABEL_34:
    OUTLINED_FUNCTION_105(41, 0xE100000000000000, v57, v68);
    if ((v97 & 1) != 0)
    {
      v123._countAndFlagsBits = 41;
      v123._object = (void *)0xE100000000000000;
      v67 = OUTLINED_FUNCTION_35(v123, v68);
    }
    v98 = *(_DWORD *)(v120 + 20);
    v68 = v98 + v67;
    if (__CFADD__(v98, (_DWORD)v67))
      goto LABEL_58;
    *(_DWORD *)(v120 + 20) = v68;
LABEL_39:
    v99 = v63 + v67;
    if (__OFADD__(v63, v67))
    {
LABEL_51:
      __break(1u);
    }
    else
    {
      if (v119)
      {
        OUTLINED_FUNCTION_16_0();
        OUTLINED_FUNCTION_1_2();
        OUTLINED_FUNCTION_30();
        v100 = OUTLINED_FUNCTION_263();
        OUTLINED_FUNCTION_105(v100, v101, v57, v68);
        v103 = v102;
        v105 = v104;
        OUTLINED_FUNCTION_9_2();
        if ((v105 & 1) != 0)
        {
          v124._countAndFlagsBits = OUTLINED_FUNCTION_263();
          v103 = OUTLINED_FUNCTION_35(v124, v68);
        }
        OUTLINED_FUNCTION_48();
        OUTLINED_FUNCTION_2_4();
        v106 = *(_DWORD *)(v120 + 20);
        v107 = __CFADD__(v106, (_DWORD)v103);
        v108 = v106 + v103;
        if (v107)
          goto LABEL_55;
        *(_DWORD *)(v120 + 20) = v108;
      }
      else
      {
        v103 = 0;
      }
      if (!__OFADD__(v99, v103))
      {
        OUTLINED_FUNCTION_58();
        return;
      }
    }
    __break(1u);
    goto LABEL_53;
  }
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
}

void sub_1A566112C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  void *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  Swift::Int v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  Swift::Int v58;
  Swift::Int v59;
  char v60;
  char v61;
  void *v62;
  char v63;
  uint64_t v64;
  char v65;
  char v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  Swift::Int v72;
  unsigned __int8 *v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  Swift::Int v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  unsigned int v81;
  unsigned int v82;
  Swift::Int v83;
  uint64_t v84;
  uint64_t v85;
  Swift::UInt32 v86;
  unsigned int v87;
  int v88;
  char v89;
  uint64_t v90;
  Swift::Int v91;
  Swift::Int v92;
  Swift::Int v93;
  Swift::Int v94;
  char v95;
  char v96;
  int v97;
  Swift::Int v98;
  uint64_t v99;
  char v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  Swift::String v108;
  Swift::String v109;
  Swift::String v110;

  OUTLINED_FUNCTION_79();
  v99 = v47;
  v107 = v48;
  v106 = v49;
  v50 = a43;
  v51 = a43 + 8;
  v52 = *(unsigned int *)(a43 + 20);
  v101 = v46;
  v54 = *(_QWORD *)(v53 + 16);
  v105 = v54;
  v100 = v55;
  if (v54)
  {
    v43 = v45;
    v56 = v44;
    OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_1_2();
    OUTLINED_FUNCTION_3_3();
    v57 = v56;
    OUTLINED_FUNCTION_24(v56, v43, v51);
    v59 = v58;
    v61 = v60;
    OUTLINED_FUNCTION_9_2();
    if ((v61 & 1) != 0)
    {
      v108._countAndFlagsBits = v57;
      v108._object = (void *)v43;
      v59 = OUTLINED_FUNCTION_57(v108, v52);
    }
    OUTLINED_FUNCTION_5_1();
    OUTLINED_FUNCTION_2_4();
    OUTLINED_FUNCTION_162();
    v54 = v105;
    v62 = v101;
    if (v63)
    {
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
      goto LABEL_58;
    }
    *(_DWORD *)(a43 + 20) = v52;
    if ((v100 & 1) == 0)
      goto LABEL_13;
  }
  else
  {
    v62 = v46;
    v59 = 0;
    v64 = OUTLINED_FUNCTION_92();
    if ((v65 & 1) == 0)
      goto LABEL_40;
  }
  OUTLINED_FUNCTION_129();
  if ((v66 & 1) != 0)
    OUTLINED_FUNCTION_51(40);
  OUTLINED_FUNCTION_275();
  if (v63)
    goto LABEL_57;
  *(_DWORD *)(a43 + 20) = v43;
  v68 = __OFADD__(v59, v67);
  v59 += v67;
  if (!v68)
  {
    if (v54)
    {
LABEL_13:
      v98 = v59;
      v69 = v54 - 1;
      OUTLINED_FUNCTION_144();
      v102 = v70;
      v71 = 0;
      v72 = 0;
      v73 = (unsigned __int8 *)(OUTLINED_FUNCTION_78() + 40);
      v104 = v54 - 1;
      do
      {
        v74 = *((_QWORD *)v73 - 1);
        v75 = *v73;
        sub_1A5666DBC(v74, *v73);
        sub_1A56E3F0C(v74, v75);
        v68 = __OFADD__(v72, v76);
        v77 = v72 + v76;
        if (v68)
        {
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
          goto LABEL_52;
        }
        v43 = *(unsigned int *)(v50 + 20);
        if (v71 >= v69)
        {
          OUTLINED_FUNCTION_267();
          v83 = 0;
        }
        else
        {
          if ((v107 & 0x1000000000000000) != 0)
          {
            OUTLINED_FUNCTION_0_10();
            OUTLINED_FUNCTION_11_1();
            v109._countAndFlagsBits = v106;
            v109._object = (void *)v107;
            v83 = OUTLINED_FUNCTION_229(v109, v43);
            OUTLINED_FUNCTION_15_1();
            OUTLINED_FUNCTION_4_4();
          }
          else
          {
            if ((v107 & 0x2000000000000000) != 0)
            {
              OUTLINED_FUNCTION_0_10();
              OUTLINED_FUNCTION_11_1();
              OUTLINED_FUNCTION_4_3();
              OUTLINED_FUNCTION_189();
              OUTLINED_FUNCTION_111(v84, v85, v86);
              v82 = v87;
            }
            else
            {
              v78 = v102;
              if ((v106 & 0x1000000000000000) == 0)
                v78 = sub_1A594C7D4();
              OUTLINED_FUNCTION_205();
              if (v80)
                v79 = 0;
              v103 = v79;
              OUTLINED_FUNCTION_0_10();
              OUTLINED_FUNCTION_11_1();
              OUTLINED_FUNCTION_4_3();
              OUTLINED_FUNCTION_111(v78, v103, v43);
              v82 = v81;
              v50 = a43;
            }
            OUTLINED_FUNCTION_36();
            OUTLINED_FUNCTION_4_4();
            OUTLINED_FUNCTION_41();
            v83 = v82;
          }
          OUTLINED_FUNCTION_267();
          v88 = *(_DWORD *)(v50 + 20);
          LODWORD(v43) = v88 + v83;
          v54 = v105;
          v69 = v104;
          if (__CFADD__(v88, (_DWORD)v83))
            goto LABEL_51;
          *(_DWORD *)(v50 + 20) = v43;
        }
        v68 = __OFADD__(v77, v83);
        v72 = v77 + v83;
        if (v68)
          goto LABEL_50;
        v73 += 16;
        ++v71;
      }
      while (v54 != v71);
      OUTLINED_FUNCTION_77();
      v59 = v98 + v72;
      if (__OFADD__(v98, v72))
        goto LABEL_55;
      if ((v100 & 1) != 0)
      {
        v62 = v101;
        v51 = a43 + 8;
        goto LABEL_35;
      }
      v64 = 0;
      v62 = v101;
      v51 = a43 + 8;
      goto LABEL_40;
    }
LABEL_35:
    OUTLINED_FUNCTION_9_3(41, 0xE100000000000000, v51);
    if ((v89 & 1) != 0)
      OUTLINED_FUNCTION_51(41);
    OUTLINED_FUNCTION_275();
    if (v63)
      goto LABEL_59;
    *(_DWORD *)(v50 + 20) = v43;
LABEL_40:
    v90 = v51;
    v91 = v59 + v64;
    if (__OFADD__(v59, v64))
    {
LABEL_52:
      __break(1u);
    }
    else
    {
      if (v54)
      {
        v92 = v43;
        OUTLINED_FUNCTION_42();
        OUTLINED_FUNCTION_0_10();
        OUTLINED_FUNCTION_1_2();
        OUTLINED_FUNCTION_149(v99, (unint64_t)v62, v90, v43);
        v94 = v93;
        v96 = v95;
        OUTLINED_FUNCTION_38();
        if ((v96 & 1) != 0)
        {
          v110._countAndFlagsBits = v99;
          v110._object = v62;
          v94 = OUTLINED_FUNCTION_35(v110, v92);
        }
        OUTLINED_FUNCTION_2_4();
        OUTLINED_FUNCTION_4_4();
        OUTLINED_FUNCTION_218();
        if (v63)
          goto LABEL_56;
        *(_DWORD *)(v50 + 20) = v97;
      }
      else
      {
        v94 = 0;
      }
      if (!__OFADD__(v91, v94))
      {
        OUTLINED_FUNCTION_32();
        return;
      }
    }
    __break(1u);
    goto LABEL_54;
  }
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
}

