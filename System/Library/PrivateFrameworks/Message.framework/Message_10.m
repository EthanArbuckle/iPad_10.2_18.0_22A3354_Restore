ValueMetadata *type metadata accessor for FetchModificationResponse()
{
  return &type metadata for FetchModificationResponse;
}

uint64_t OUTLINED_FUNCTION_0_55()
{
  return 0x2820514553444F4DLL;
}

void sub_1A56C775C(uint64_t a1)
{
  uint64_t v1;
  Swift::Int v3;
  Swift::Int v4;
  char v5;
  Swift::String v6;
  int v7;
  BOOL v8;
  int v9;

  if (*(_QWORD *)(a1 + 16))
  {
    v3 = *(unsigned int *)(v1 + 20);
    sub_1A56814E0(32, 0xE100000000000000, v1 + 8, *(_DWORD *)(v1 + 20));
    if ((v5 & 1) != 0)
    {
      v6._countAndFlagsBits = 32;
      v6._object = (void *)0xE100000000000000;
      v4 = ByteBuffer._setStringSlowpath(_:at:)(v6, v3);
    }
    v7 = *(_DWORD *)(v1 + 20);
    v8 = __CFADD__(v7, (_DWORD)v4);
    v9 = v7 + v4;
    if (v8)
    {
      __break(1u);
    }
    else
    {
      *(_DWORD *)(v1 + 20) = v9;
      if (__OFADD__(v4, sub_1A565CD04(a1, 0, 0xE000000000000000, 32, 0xE100000000000000, 0, 0xE000000000000000, 1, v1)))
      {
        __break(1u);
      }
    }
  }
}

void FetchModifier.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (!BYTE6(a5))
  {
    OUTLINED_FUNCTION_2_21();
    sub_1A594CEB8();
    return;
  }
  if (BYTE6(a5) == 1)
  {
    OUTLINED_FUNCTION_3_19();
    sub_1A594CE88();
    sub_1A594CEAC();
    sub_1A594CEAC();
    return;
  }
  sub_1A594CE88();
  sub_1A594B1D8();
  if (BYTE5(a5) == 255)
  {
    sub_1A594CE94();
    return;
  }
  sub_1A594CE94();
  if ((a5 & 0x10000000000) != 0)
  {
    OUTLINED_FUNCTION_3_19();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    OUTLINED_FUNCTION_126_1();
    sub_1A569428C();
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_2_21();
  if ((~a5 & 0xFF00000000) == 0)
  {
    OUTLINED_FUNCTION_3_19();
LABEL_11:
    sub_1A56667BC(a4, a5);
    return;
  }
  OUTLINED_FUNCTION_2_21();
  v7 = OUTLINED_FUNCTION_126_1();
  sub_1A56B6298(v7, v8, v9);
}

uint64_t static FetchModifier.__derived_enum_equals(_:_:)(uint64_t result, uint64_t a2, int32x2_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, int32x2_t *a7, uint64_t a8)
{
  BOOL v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;

  if (BYTE6(a4))
  {
    if (BYTE6(a4) != 1)
    {
      if (BYTE6(a8) != 2)
        return 0;
      v12 = result == a5 && a2 == a6;
      if (!v12 && (sub_1A594CD38() & 1) == 0)
        return 0;
      if (BYTE5(a4) == 255)
      {
        if (BYTE5(a8) != 255)
          return 0;
      }
      else
      {
        if (BYTE5(a8) == 255)
          return 0;
        if ((a4 & 0x10000000000) != 0)
        {
          if ((a8 & 0x10000000000) == 0)
            return 0;
          sub_1A5689E98();
          if ((v14 & 1) == 0)
            return 0;
        }
        else
        {
          if ((a8 & 0x10000000000) != 0)
            return 0;
          v13 = a8 & 0xFF00000000;
          if ((~a4 & 0xFF00000000) != 0)
          {
            if (v13 == 0xFF00000000)
              return 0;
            v15 = OUTLINED_FUNCTION_126_1();
            sub_1A566676C(v15, v16);
            sub_1A566676C((uint64_t)a3, a4);
            sub_1A56B614C(a3, a4 & 0xFFFFFFFFFFLL, a7, a8 & 0xFFFFFFFFFFLL);
            v18 = v17;
            v19 = OUTLINED_FUNCTION_126_1();
            sub_1A56667BC(v19, v20);
            sub_1A56667BC((uint64_t)a3, a4);
            if ((v18 & 1) == 0)
              return 0;
          }
          else if (v13 != 0xFF00000000)
          {
            return 0;
          }
        }
      }
      return 1;
    }
    if (BYTE6(a8) == 1)
    {
      if ((a2 & 1) != 0)
      {
        if ((a6 & 1) == 0)
          return 0;
      }
      else if ((a6 & 1) != 0)
      {
        return 0;
      }
      if (a5 == result)
        return 1;
    }
    return 0;
  }
  if (BYTE6(a8))
    return 0;
  if (((a5 | result) & 0x8000000000000000) == 0)
    return a5 == result;
  __break(1u);
  return result;
}

uint64_t FetchModifier.hashValue.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _BYTE v9[72];

  sub_1A594CE64();
  FetchModifier.hash(into:)((uint64_t)v9, a1, a2, a3, a4 & 0xFFFFFFFFFFFFFFLL);
  return sub_1A594CED0();
}

uint64_t sub_1A56C7B24()
{
  uint64_t v0;

  return FetchModifier.hashValue.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(unsigned int *)(v0 + 24) | ((unint64_t)*(unsigned __int16 *)(v0 + 28) << 32) | ((unint64_t)*(unsigned __int8 *)(v0 + 30) << 48));
}

void sub_1A56C7B44(uint64_t a1)
{
  uint64_t v1;

  FetchModifier.hash(into:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(unsigned int *)(v1 + 24) | ((unint64_t)*(unsigned __int16 *)(v1 + 28) << 32) | ((unint64_t)*(unsigned __int8 *)(v1 + 30) << 48));
}

uint64_t sub_1A56C7B64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _BYTE v7[72];

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(unsigned int *)(v0 + 24) | ((unint64_t)*(unsigned __int16 *)(v0 + 28) << 32);
  v5 = *(unsigned __int8 *)(v0 + 30);
  sub_1A594CE64();
  FetchModifier.hash(into:)((uint64_t)v7, v1, v2, v3, v4 | (v5 << 48));
  return sub_1A594CED0();
}

uint64_t sub_1A56C7BD4(uint64_t a1, uint64_t a2)
{
  return static FetchModifier.__derived_enum_equals(_:_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(int32x2_t **)(a1 + 16), *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int16 *)(a1 + 28) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 30) << 48), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(int32x2_t **)(a2 + 16), *(unsigned int *)(a2 + 24) | ((unint64_t)*(unsigned __int16 *)(a2 + 28) << 32) | ((unint64_t)*(unsigned __int8 *)(a2 + 30) << 48));
}

unint64_t sub_1A56C7C1C()
{
  unint64_t result;

  result = qword_1EE7A97D8;
  if (!qword_1EE7A97D8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for FetchModifier, &type metadata for FetchModifier);
    atomic_store(result, (unint64_t *)&qword_1EE7A97D8);
  }
  return result;
}

uint64_t destroy for FetchModifier(uint64_t a1)
{
  return sub_1A56C7C78(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int16 *)(a1 + 28) << 32), *(_BYTE *)(a1 + 30));
}

uint64_t sub_1A56C7C78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if (a5 == 2)
  {
    swift_bridgeObjectRelease();
    return sub_1A56667BC(a3, a4);
  }
  return result;
}

uint64_t initializeWithCopy for FetchModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(unsigned __int16 *)(a2 + 28);
  v7 = *(unsigned int *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 30);
  sub_1A5691DD8(*(_QWORD *)a2, v4, v5, v7 | (v6 << 32), v8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_WORD *)(a1 + 28) = v6;
  *(_DWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 30) = v8;
  return a1;
}

uint64_t assignWithCopy for FetchModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(unsigned __int16 *)(a2 + 28);
  v7 = *(unsigned int *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 30);
  sub_1A5691DD8(*(_QWORD *)a2, v4, v5, v7 | (v6 << 32), v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int16 *)(a1 + 28) << 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_DWORD *)(a1 + 24) = v7;
  *(_WORD *)(a1 + 28) = v6;
  v13 = *(_BYTE *)(a1 + 30);
  *(_BYTE *)(a1 + 30) = v8;
  sub_1A56C7C78(v9, v10, v11, v12, v13);
  return a1;
}

uint64_t assignWithTake for FetchModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int16 v4;
  int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_WORD *)(a2 + 28);
  v5 = *(_DWORD *)(a2 + 24);
  v6 = *(_BYTE *)(a2 + 30);
  v7 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v10 = *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int16 *)(a1 + 28) << 32);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_DWORD *)(a1 + 24) = v5;
  *(_WORD *)(a1 + 28) = v4;
  v11 = *(_BYTE *)(a1 + 30);
  *(_BYTE *)(a1 + 30) = v6;
  sub_1A56C7C78(v7, v9, v8, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchReturnOption(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 31))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 30);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchReturnOption(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 30) = 0;
    *(_WORD *)(result + 28) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 31) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 31) = 0;
    if (a2)
      *(_BYTE *)(result + 30) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A56C7EC4(uint64_t result, char a2)
{
  *(_BYTE *)(result + 30) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FetchModifier()
{
  return &type metadata for FetchModifier;
}

uint64_t sub_1A56C7EDC(uint64_t result, uint64_t a2)
{
  if (BYTE4(a2) == 1)
  {
LABEL_5:
    if (*(_QWORD *)(result + 16))
      return *(_QWORD *)(result + 32);
    return 0;
  }
  if (BYTE4(a2) == 2)
    return 0;
  if (result >= (int)a2)
  {
    __break(1u);
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

void sub_1A56C7F20()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  __int16 v3;

  v1 = v0[3];
  v2 = v0[4];
  if (v1 != v2)
  {
    if (v1 < v2)
    {
      sub_1A566FE08(v0[3], 0, *v0, v0[1]);
      if ((v3 & 0x100) == 0)
        return;
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t sub_1A56C7FA0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
    return sub_1A594B6E8();
  else
    return 0;
}

uint64_t sub_1A56C7FE0(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  unsigned __int8 v4;
  unsigned __int8 *v5;

  if ((a2 & 0x2000000000000000) != 0)
    v3 = HIBYTE(a2) & 0xF;
  else
    v3 = a1 & 0xFFFFFFFFFFFFLL;
  if (v3)
  {
    v4 = a1;
    if ((a2 & 0x1000000000000000) != 0)
    {
      v4 = sub_1A594B670();
    }
    else if ((a2 & 0x2000000000000000) == 0)
    {
      if ((a1 & 0x1000000000000000) != 0)
        v5 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v5 = (unsigned __int8 *)sub_1A594C7D4();
      v4 = *v5;
    }
  }
  else
  {
    v4 = 0;
  }
  return v4 | ((v3 == 0) << 8);
}

uint64_t static Flag.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_1A594B4B4();
  v2 = v1;
  if (v0 == sub_1A594B4B4() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1A594CD38();
  OUTLINED_FUNCTION_17();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t Flag.hash(into:)()
{
  sub_1A594B4B4();
  sub_1A594B1D8();
  return swift_bridgeObjectRelease();
}

uint64_t Flag.hashValue.getter()
{
  _BYTE v1[72];
  _BYTE __dst[72];

  sub_1A594CEDC();
  OUTLINED_FUNCTION_182();
  sub_1A594B4B4();
  sub_1A594B1D8();
  OUTLINED_FUNCTION_17();
  memcpy(__dst, v1, sizeof(__dst));
  return sub_1A594CEC4();
}

uint64_t sub_1A56C81A8()
{
  return Flag.hashValue.getter();
}

uint64_t sub_1A56C81B0()
{
  return Flag.hash(into:)();
}

uint64_t sub_1A56C81B8()
{
  sub_1A594CE64();
  sub_1A594B4B4();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  return sub_1A594CED0();
}

uint64_t sub_1A56C8218()
{
  return static Flag.== infix(_:_:)();
}

const char *Flag.answered.unsafeMutableAddressor()
{
  return "\\Answered";
}

uint64_t static Flag.answered.getter()
{
  return 0x65726577736E415CLL;
}

const char *Flag.flagged.unsafeMutableAddressor()
{
  return "\\Flagged";
}

uint64_t static Flag.flagged.getter()
{
  return OUTLINED_FUNCTION_2_40(0x6767616C465CLL);
}

const char *Flag.deleted.unsafeMutableAddressor()
{
  return "\\Deleted";
}

uint64_t static Flag.deleted.getter()
{
  return OUTLINED_FUNCTION_2_40(0x74656C65445CLL);
}

const char *Flag.seen.unsafeMutableAddressor()
{
  return "\\Seen";
}

uint64_t static Flag.seen.getter()
{
  return 0x6E6565535CLL;
}

const char *Flag.draft.unsafeMutableAddressor()
{
  return "\\Draft";
}

uint64_t static Flag.draft.getter()
{
  return 0x74666172445CLL;
}

uint64_t static Flag.keyword(_:)()
{
  OUTLINED_FUNCTION_0_56();
  return OUTLINED_FUNCTION_182();
}

uint64_t static Flag.extension(_:)()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v7;

  OUTLINED_FUNCTION_0_56();
  v0 = OUTLINED_FUNCTION_182();
  v2 = sub_1A56C7FA0(v0, v1);
  v4 = v3;
  result = OUTLINED_FUNCTION_17();
  if (v4)
  {
    if (v2 != 92 || v4 != 0xE100000000000000)
    {
      v7 = sub_1A594CD38();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
      {
LABEL_9:
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        return OUTLINED_FUNCTION_182();
      }
      __break(1u);
    }
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

unint64_t sub_1A56C8384()
{
  unint64_t result;

  result = qword_1EE7970B0;
  if (!qword_1EE7970B0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for Flag, &type metadata for Flag);
    atomic_store(result, (unint64_t *)&qword_1EE7970B0);
  }
  return result;
}

ValueMetadata *type metadata accessor for Flag()
{
  return &type metadata for Flag;
}

uint64_t sub_1A56C83D0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v6 = sub_1A594B694();
    OUTLINED_FUNCTION_1_38(v6);
    return v7 | 4;
  }
  else
  {
    v3 = MEMORY[0x1A85ADAD0](15, a1 >> 16);
    OUTLINED_FUNCTION_1_38(v3);
    return v4 | 8;
  }
}

uint64_t OUTLINED_FUNCTION_0_56()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

unint64_t OUTLINED_FUNCTION_1_38(uint64_t a1)
{
  char v1;

  return a1 & 0xFFFFFFFFFFFFFFFCLL | v1 & 3;
}

uint64_t OUTLINED_FUNCTION_2_40(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0x6465000000000000;
}

unint64_t sub_1A56C845C(unint64_t a1, unint64_t a2)
{
  unint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t result;
  unint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  _QWORD v13[2];
  uint64_t v14;

  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
    return 1;
  v5 = (a1 >> 59) & 1;
  if ((a2 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  v6 = 4 << v5;
  v14 = a2 & 0xFFFFFFFFFFFFFFLL;
  v7 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v8 = 15;
  while (1)
  {
    result = v8;
    if ((v8 & 0xC) == v6)
      result = sub_1A56C83D0(v8, a1, a2);
    v10 = result >> 16;
    if (result >> 16 >= v2)
      break;
    if ((a2 & 0x1000000000000000) != 0)
    {
      result = sub_1A594B670();
      v11 = result;
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      v13[0] = a1;
      v13[1] = v14;
      v11 = *((_BYTE *)v13 + v10);
    }
    else
    {
      result = v7;
      if ((a1 & 0x1000000000000000) == 0)
        result = sub_1A594C7D4();
      v11 = *(_BYTE *)(result + v10);
    }
    if ((v8 & 0xC) == v6)
    {
      result = sub_1A56C83D0(v8, a1, a2);
      v8 = result;
      if ((a2 & 0x1000000000000000) == 0)
      {
LABEL_19:
        v8 = (v8 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_24;
      }
    }
    else if ((a2 & 0x1000000000000000) == 0)
    {
      goto LABEL_19;
    }
    if (v2 <= v8 >> 16)
      goto LABEL_35;
    v8 = sub_1A594B64C();
LABEL_24:
    v12 = v11 - 32;
    if (v11 < 0x20u)
      return 0;
    result = 0;
    if (v12 <= 0x3D)
    {
      if (v12 == 61)
        goto LABEL_30;
      if (((1 << (v11 - 32)) & 0x1000000000000725) != 0)
        return result;
    }
    if (v11 == 123)
      return result;
    if ((v11 & 0x80) != 0)
      return 0;
LABEL_30:
    if (4 * v2 == v8 >> 14)
      return 1;
  }
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t static Flag.Keyword.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_1A594B4B4();
  v2 = v1;
  if (v0 == sub_1A594B4B4() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1A594CD38();
  OUTLINED_FUNCTION_17();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

unint64_t Flag.Keyword.init(_:)(unint64_t a1, unint64_t a2)
{
  unint64_t v2;

  v2 = a1;
  if ((sub_1A56C845C(a1, a2) & 1) == 0)
  {
    OUTLINED_FUNCTION_17();
    return 0;
  }
  return v2;
}

uint64_t Flag.Keyword.hash(into:)()
{
  sub_1A594B4B4();
  sub_1A594B1D8();
  return swift_bridgeObjectRelease();
}

uint64_t Flag.Keyword.hashValue.getter()
{
  sub_1A594CE64();
  sub_1A594B4B4();
  sub_1A594B1D8();
  OUTLINED_FUNCTION_17();
  return sub_1A594CED0();
}

uint64_t sub_1A56C87A4()
{
  return Flag.Keyword.hashValue.getter();
}

uint64_t sub_1A56C87AC()
{
  return Flag.Keyword.hash(into:)();
}

uint64_t sub_1A56C87B4()
{
  return static Flag.Keyword.== infix(_:_:)();
}

const char *Flag.Keyword.forwarded.unsafeMutableAddressor()
{
  return "$Forwarded";
}

void static Flag.Keyword.forwarded.getter()
{
  OUTLINED_FUNCTION_1_39();
}

const char *Flag.Keyword.junk.unsafeMutableAddressor()
{
  return "$Junk";
}

uint64_t static Flag.Keyword.junk.getter()
{
  return 0x6B6E754A24;
}

const char *Flag.Keyword.notJunk.unsafeMutableAddressor()
{
  return "$NotJunk";
}

uint64_t static Flag.Keyword.notJunk.getter()
{
  return 0x6B6E754A746F4E24;
}

const char *Flag.Keyword.unregistered_redirected.unsafeMutableAddressor()
{
  return "Redirected";
}

void static Flag.Keyword.unregistered_redirected.getter()
{
  OUTLINED_FUNCTION_1_39();
}

const char *Flag.Keyword.unregistered_forwarded.unsafeMutableAddressor()
{
  return "Forwarded";
}

uint64_t static Flag.Keyword.unregistered_forwarded.getter()
{
  return 0x6564726177726F46;
}

const char *Flag.Keyword.unregistered_junk.unsafeMutableAddressor()
{
  return "Junk";
}

uint64_t static Flag.Keyword.unregistered_junk.getter()
{
  return 1802401098;
}

const char *Flag.Keyword.unregistered_notJunk.unsafeMutableAddressor()
{
  return "NotJunk";
}

uint64_t static Flag.Keyword.unregistered_notJunk.getter()
{
  return 0x6B6E754A746F4ELL;
}

const char *Flag.Keyword.colorBit0.unsafeMutableAddressor()
{
  return "$MailFlagBit0";
}

void static Flag.Keyword.colorBit0.getter()
{
  OUTLINED_FUNCTION_0_57();
  OUTLINED_FUNCTION_3_31();
}

const char *Flag.Keyword.colorBit1.unsafeMutableAddressor()
{
  return "$MailFlagBit1";
}

void static Flag.Keyword.colorBit1.getter()
{
  OUTLINED_FUNCTION_0_57();
  OUTLINED_FUNCTION_3_31();
}

const char *Flag.Keyword.colorBit2.unsafeMutableAddressor()
{
  return "$MailFlagBit2";
}

void static Flag.Keyword.colorBit2.getter()
{
  OUTLINED_FUNCTION_0_57();
  OUTLINED_FUNCTION_3_31();
}

const char *Flag.Keyword.mdnSent.unsafeMutableAddressor()
{
  return "$MDNSent";
}

uint64_t static Flag.Keyword.mdnSent.getter()
{
  return 0x746E65534E444D24;
}

unint64_t sub_1A56C893C()
{
  unint64_t result;

  result = qword_1EE7A97E0;
  if (!qword_1EE7A97E0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for Flag.Keyword, &type metadata for Flag.Keyword);
    atomic_store(result, (unint64_t *)&qword_1EE7A97E0);
  }
  return result;
}

unint64_t sub_1A56C897C()
{
  unint64_t result;

  result = qword_1EE7A97E8;
  if (!qword_1EE7A97E8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for Flag, &type metadata for Flag);
    atomic_store(result, (unint64_t *)&qword_1EE7A97E8);
  }
  return result;
}

uint64_t sub_1A56C89B8@<X0>(Swift::String *a1@<X0>, NIOIMAPCore2::Flag *a2@<X8>)
{
  uint64_t result;
  NIOIMAPCore2::Flag v4;

  v4 = Flag.init(stringLiteral:)(*a1);
  result = v4.stringValue._countAndFlagsBits;
  *a2 = v4;
  return result;
}

unint64_t sub_1A56C89E8()
{
  unint64_t result;

  result = qword_1EE7A97F0;
  if (!qword_1EE7A97F0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for Flag, &type metadata for Flag);
    atomic_store(result, (unint64_t *)&qword_1EE7A97F0);
  }
  return result;
}

ValueMetadata *type metadata accessor for Flag.Keyword()
{
  return &type metadata for Flag.Keyword;
}

uint64_t OUTLINED_FUNCTION_0_57()
{
  return 0x616C466C69614D24;
}

uint64_t PermanentFlag.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a3)
    return sub_1A594CE88();
  sub_1A594CE88();
  OUTLINED_FUNCTION_0_58();
  OUTLINED_FUNCTION_1_40();
  return swift_bridgeObjectRelease();
}

uint64_t static PermanentFlag.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = (a2 | a4) == 0;
  if (a2 && a4)
  {
    v5 = sub_1A594B4B4();
    v7 = v6;
    if (v5 == sub_1A594B4B4() && v7 == v8)
      v4 = 1;
    else
      v4 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v4 & 1;
}

uint64_t PermanentFlag.hashValue.getter(uint64_t a1, uint64_t a2)
{
  sub_1A594CE64();
  sub_1A594CE88();
  if (a2)
  {
    OUTLINED_FUNCTION_0_58();
    OUTLINED_FUNCTION_1_40();
    swift_bridgeObjectRelease();
  }
  return sub_1A594CED0();
}

uint64_t sub_1A56C8BF0()
{
  uint64_t *v0;

  return PermanentFlag.hashValue.getter(*v0, v0[1]);
}

uint64_t sub_1A56C8BF8(uint64_t a1)
{
  uint64_t *v1;

  return PermanentFlag.hash(into:)(a1, *v1, v1[1]);
}

uint64_t sub_1A56C8C00()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_1A594CE64();
  sub_1A594CE88();
  if (v1)
  {
    sub_1A594B4B4();
    sub_1A594B1D8();
    swift_bridgeObjectRelease();
  }
  return sub_1A594CED0();
}

unint64_t sub_1A56C8C88()
{
  unint64_t result;

  result = qword_1EE796978;
  if (!qword_1EE796978)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for PermanentFlag, &type metadata for PermanentFlag);
    atomic_store(result, (unint64_t *)&qword_1EE796978);
  }
  return result;
}

uint64_t sub_1A56C8CC4(uint64_t *a1, uint64_t *a2)
{
  return static PermanentFlag.__derived_enum_equals(_:_:)(*a1, a1[1], *a2, a2[1]);
}

uint64_t getEnumTagSinglePayload for PermanentFlag(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PermanentFlag(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

_QWORD *sub_1A56C8D7C(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for PermanentFlag()
{
  return &type metadata for PermanentFlag;
}

uint64_t OUTLINED_FUNCTION_0_58()
{
  return sub_1A594B4B4();
}

uint64_t OUTLINED_FUNCTION_1_40()
{
  return sub_1A594B1D8();
}

BOOL static StoreData.__derived_enum_equals(_:_:)(unint64_t a1, uint64_t a2, unint64_t a3)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v18;
  char v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v25;
  char v26;

  if ((a1 & 0x8000000000000000) != 0)
  {
    if ((a3 & 0x8000000000000000) != 0)
    {
      if ((_BYTE)a1)
      {
        OUTLINED_FUNCTION_20();
        if (v9)
          v11 = 45;
        else
          v11 = 0;
        if (v9)
          v12 = v10;
        else
          v12 = 0xE000000000000000;
      }
      else
      {
        v12 = 0xE100000000000000;
        v11 = 43;
      }
      if ((_BYTE)a3)
      {
        OUTLINED_FUNCTION_20();
        if (v20)
          v22 = 45;
        else
          v22 = 0;
        if (v20)
          v23 = v21;
        else
          v23 = 0xE000000000000000;
      }
      else
      {
        v23 = 0xE100000000000000;
        v22 = 43;
      }
      if (v11 == v22 && v12 == v23)
      {
        OUTLINED_FUNCTION_13_16();
        if ((_DWORD)a1 != (_DWORD)a3)
          return 0;
      }
      else
      {
        v25 = OUTLINED_FUNCTION_27_11();
        OUTLINED_FUNCTION_72();
        OUTLINED_FUNCTION_38();
        if ((v25 & 1) == 0 || ((a1 >> 8) & 1) != ((a3 >> 8) & 1))
          return 0;
      }
      sub_1A568AC8C();
      if ((v26 & 1) != 0)
        return 1;
    }
  }
  else if ((a3 & 0x8000000000000000) == 0)
  {
    if ((_BYTE)a1)
    {
      OUTLINED_FUNCTION_20();
      if (v5)
        v7 = 45;
      else
        v7 = 0;
      if (v5)
        v8 = v6;
      else
        v8 = 0xE000000000000000;
    }
    else
    {
      v8 = 0xE100000000000000;
      v7 = 43;
    }
    if ((_BYTE)a3)
    {
      OUTLINED_FUNCTION_20();
      if (v13)
        v15 = 45;
      else
        v15 = 0;
      if (v13)
        v16 = v14;
      else
        v16 = 0xE000000000000000;
    }
    else
    {
      v16 = 0xE100000000000000;
      v15 = 43;
    }
    if (v7 != v15 || v8 != v16)
    {
      v18 = OUTLINED_FUNCTION_27_11();
      OUTLINED_FUNCTION_72();
      OUTLINED_FUNCTION_38();
      if ((v18 & 1) == 0 || ((a1 >> 8) & 1) != ((a3 >> 8) & 1))
        return 0;
LABEL_35:
      sub_1A568E1F8();
      return (v19 & 1) != 0;
    }
    OUTLINED_FUNCTION_13_16();
    if ((_DWORD)a1 == (_DWORD)a3)
      goto LABEL_35;
  }
  return 0;
}

NIOIMAPCore2::StoreOperation_optional __swiftcall StoreOperation.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v1;

  v1 = sub_1A594CB28();
  swift_bridgeObjectRelease();
  if (v1 >= 3)
    return (NIOIMAPCore2::StoreOperation_optional)3;
  else
    return (NIOIMAPCore2::StoreOperation_optional)v1;
}

uint64_t StoreOperation.rawValue.getter(char a1)
{
  char v1;

  if (!a1)
    return 43;
  OUTLINED_FUNCTION_20();
  if (v1)
    return 45;
  else
    return 0;
}

void sub_1A56C8FDC(char *a1, char *a2)
{
  sub_1A56584EC(*a1, *a2);
}

NIOIMAPCore2::StoreOperation_optional sub_1A56C8FE8@<W0>(Swift::String *a1@<X0>, NIOIMAPCore2::StoreOperation_optional *a2@<X8>)
{
  NIOIMAPCore2::StoreOperation_optional result;

  result.value = StoreOperation.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t sub_1A56C9014@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = StoreOperation.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_1A56C903C()
{
  sub_1A56F9F54();
}

uint64_t sub_1A56C9044()
{
  return sub_1A56A0584();
}

void sub_1A56C904C()
{
  sub_1A56FA0A0();
}

void StoreData.hash(into:)()
{
  unsigned int v0;
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_9_4();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  if (v4 < 0)
  {
    sub_1A594CE88();
    if (v5)
      OUTLINED_FUNCTION_20();
    else
      OUTLINED_FUNCTION_34_11();
    OUTLINED_FUNCTION_3_32();
    OUTLINED_FUNCTION_52();
    sub_1A594CE94();
    v8 = *(_QWORD *)(v3 + 16);
    sub_1A594CE88();
    if (v8)
    {
      v9 = v3 + 54;
      while (1)
      {
        OUTLINED_FUNCTION_18_16();
        OUTLINED_FUNCTION_176();
        if (v1 < v0)
          break;
        v9 += 24;
        OUTLINED_FUNCTION_14_13();
        if (!--v8)
          goto LABEL_13;
      }
      __break(1u);
    }
    else
    {
LABEL_13:
      OUTLINED_FUNCTION_2_6();
    }
  }
  else
  {
    sub_1A594CE88();
    if (v5)
      OUTLINED_FUNCTION_20();
    else
      OUTLINED_FUNCTION_34_11();
    OUTLINED_FUNCTION_3_32();
    OUTLINED_FUNCTION_52();
    sub_1A594CE94();
    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_21_17(v7);
    sub_1A567FE60();
  }
}

uint64_t static StoreFlags.__derived_struct_equals(_:_:)(int a1, uint64_t a2, unsigned __int16 a3, uint64_t a4)
{
  return sub_1A56C9188(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1A568E1F8);
}

uint64_t static StoreGmailLabels.__derived_struct_equals(_:_:)(int a1, uint64_t a2, unsigned __int16 a3, uint64_t a4)
{
  return sub_1A56C9188(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1A568AC8C);
}

uint64_t sub_1A56C9188(int a1, uint64_t a2, unsigned __int16 a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  int v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  unsigned int v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v18;

  v8 = a3;
  v9 = a1;
  if ((_BYTE)a1)
  {
    if (a1 == 1)
      v10 = 45;
    else
      v10 = 0;
    if (v9 == 1)
      v11 = 0xE100000000000000;
    else
      v11 = 0xE000000000000000;
  }
  else
  {
    v11 = 0xE100000000000000;
    v10 = 43;
  }
  v12 = a3;
  v13 = 0xE100000000000000;
  v14 = 45;
  if (a3 != 1)
  {
    v14 = 0;
    v13 = 0xE000000000000000;
  }
  if ((_BYTE)a3)
    v15 = v14;
  else
    v15 = 43;
  if (v8)
    v16 = v13;
  else
    v16 = 0xE100000000000000;
  if (v10 == v15 && v11 == v16)
  {
    swift_bridgeObjectRelease_n();
    if (((a1 ^ v12) & 0x100) == 0)
      return a5(a2, a4);
  }
  else
  {
    v18 = sub_1A594CD38();
    OUTLINED_FUNCTION_52();
    OUTLINED_FUNCTION_72();
    if ((v18 & 1) != 0 && (((a1 ^ v12) >> 8) & 1) == 0)
      return a5(a2, a4);
  }
  return 0;
}

void StoreData.hashValue.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  _BYTE v8[72];

  OUTLINED_FUNCTION_31_11();
  if ((a1 & 0x8000000000000000) == 0)
  {
    sub_1A594CE88();
    if ((_BYTE)a1)
      OUTLINED_FUNCTION_20();
    OUTLINED_FUNCTION_10_18();
    OUTLINED_FUNCTION_9_2();
    OUTLINED_FUNCTION_30_12();
    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_21_17((uint64_t)v8);
    sub_1A567FE60();
LABEL_11:
    sub_1A594CED0();
    OUTLINED_FUNCTION_8_17();
    return;
  }
  sub_1A594CE88();
  if ((_BYTE)a1)
    OUTLINED_FUNCTION_20();
  OUTLINED_FUNCTION_10_18();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_30_12();
  v4 = *(_QWORD *)(a2 + 16);
  sub_1A594CE88();
  if (!v4)
    goto LABEL_11;
  v5 = a2 + 54;
  while (1)
  {
    v6 = *(_DWORD *)(v5 - 14);
    v7 = *(_DWORD *)(v5 - 10);
    OUTLINED_FUNCTION_176();
    if (v7 < v6)
      break;
    v5 += 24;
    OUTLINED_FUNCTION_23_14();
    if (!--v4)
      goto LABEL_11;
  }
  __break(1u);
}

void sub_1A56C93E8()
{
  uint64_t *v0;

  StoreData.hashValue.getter(*v0, v0[1]);
}

void sub_1A56C93F0()
{
  StoreData.hash(into:)();
}

uint64_t sub_1A56C93F8()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1A594CE64();
  sub_1A594CE88();
  if (v1 < 0)
    StoreGmailLabels.hash(into:)();
  else
    StoreFlags.hash(into:)((uint64_t)v3, v1);
  return sub_1A594CED0();
}

BOOL sub_1A56C9474(uint64_t a1, unint64_t *a2)
{
  return static StoreData.__derived_enum_equals(_:_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *a2);
}

uint64_t StoreGmailLabels.operation.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

double (*StoreGmailLabels.operation.modify())(_QWORD)
{
  return nullsub_1;
}

double (*StoreGmailLabels.silent.modify())(_QWORD)
{
  return nullsub_1;
}

double (*StoreGmailLabels.gmailLabels.modify())(_QWORD)
{
  return nullsub_1;
}

void StoreGmailLabels.hash(into:)()
{
  unsigned int v0;
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_9_4();
  v3 = v2;
  if (v4)
    OUTLINED_FUNCTION_20();
  else
    OUTLINED_FUNCTION_34_11();
  OUTLINED_FUNCTION_3_32();
  OUTLINED_FUNCTION_52();
  sub_1A594CE94();
  v5 = *(_QWORD *)(v3 + 16);
  sub_1A594CE88();
  if (v5)
  {
    v6 = v3 + 54;
    while (1)
    {
      OUTLINED_FUNCTION_18_16();
      OUTLINED_FUNCTION_176();
      if (v1 < v0)
        break;
      v6 += 24;
      OUTLINED_FUNCTION_14_13();
      if (!--v5)
        goto LABEL_8;
    }
    __break(1u);
  }
  else
  {
LABEL_8:
    OUTLINED_FUNCTION_2_6();
  }
}

void StoreGmailLabels.hashValue.getter(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;

  OUTLINED_FUNCTION_31_11();
  if (a1)
    OUTLINED_FUNCTION_20();
  OUTLINED_FUNCTION_10_18();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_30_12();
  v4 = *(_QWORD *)(a2 + 16);
  sub_1A594CE88();
  if (v4)
  {
    v5 = a2 + 54;
    while (1)
    {
      v6 = *(_DWORD *)(v5 - 14);
      v7 = *(_DWORD *)(v5 - 10);
      OUTLINED_FUNCTION_176();
      if (v7 < v6)
        break;
      v5 += 24;
      OUTLINED_FUNCTION_23_14();
      if (!--v4)
        goto LABEL_7;
    }
    __break(1u);
  }
  else
  {
LABEL_7:
    sub_1A594CED0();
    OUTLINED_FUNCTION_8_17();
  }
}

void sub_1A56C9640()
{
  uint64_t v0;

  StoreGmailLabels.hashValue.getter(*(_BYTE *)v0, *(_QWORD *)(v0 + 8));
}

void sub_1A56C9660()
{
  StoreGmailLabels.hash(into:)();
}

void sub_1A56C9680(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A56C98DC(a1, a2, a3, (void (*)(_BYTE *, _QWORD, uint64_t))StoreGmailLabels.hash(into:));
}

uint64_t sub_1A56C968C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1A56C9940(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))static StoreGmailLabels.__derived_struct_equals(_:_:));
}

void static StoreFlags.add(silent:list:)()
{
  OUTLINED_FUNCTION_0_56();
  OUTLINED_FUNCTION_1();
}

void static StoreFlags.remove(silent:list:)()
{
  OUTLINED_FUNCTION_0_56();
  OUTLINED_FUNCTION_1();
}

void static StoreFlags.replace(silent:list:)()
{
  OUTLINED_FUNCTION_0_56();
  OUTLINED_FUNCTION_1();
}

uint64_t StoreFlags.operation.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

double (*StoreFlags.operation.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t StoreFlags.silent.getter(unsigned int a1)
{
  return (a1 >> 8) & 1;
}

uint64_t StoreFlags.silent.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

double (*StoreFlags.silent.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t StoreFlags.flags.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

double (*StoreFlags.flags.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t StoreFlags.hash(into:)(uint64_t a1, char a2)
{
  if (a2)
    OUTLINED_FUNCTION_20();
  else
    OUTLINED_FUNCTION_34_11();
  OUTLINED_FUNCTION_3_32();
  OUTLINED_FUNCTION_52();
  sub_1A594CE94();
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_21_17(a1);
  return swift_bridgeObjectRelease();
}

void StoreFlags.hashValue.getter(char a1)
{
  _BYTE v2[72];

  sub_1A594CE64();
  if (a1)
    OUTLINED_FUNCTION_20();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  sub_1A594CE94();
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_21_17((uint64_t)v2);
  swift_bridgeObjectRelease();
  sub_1A594CED0();
  OUTLINED_FUNCTION_7_12();
}

void sub_1A56C9890()
{
  char *v0;

  StoreFlags.hashValue.getter(*v0);
}

uint64_t sub_1A56C98B0(uint64_t a1)
{
  char *v1;

  return StoreFlags.hash(into:)(a1, *v1);
}

void sub_1A56C98D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A56C98DC(a1, a2, a3, (void (*)(_BYTE *, _QWORD, uint64_t))StoreFlags.hash(into:));
}

void sub_1A56C98DC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *, _QWORD, uint64_t))
{
  unsigned __int8 *v4;
  unsigned int v6;
  int v7;
  uint64_t v8;
  int v9;
  _BYTE v10[72];

  v6 = *v4;
  v7 = v4[1];
  v8 = *((_QWORD *)v4 + 1);
  sub_1A594CE64();
  if (v7)
    v9 = 256;
  else
    v9 = 0;
  a4(v10, v9 | v6, v8);
  sub_1A594CED0();
  OUTLINED_FUNCTION_7_12();
}

uint64_t sub_1A56C9934(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1A56C9940(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))static StoreFlags.__derived_struct_equals(_:_:));
}

uint64_t sub_1A56C9940(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, _QWORD, _QWORD))
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;

  v5 = *((_QWORD *)a1 + 1);
  if (a1[1])
    v6 = 256;
  else
    v6 = 0;
  v7 = v6 | *a1;
  if (a2[1])
    v8 = 256;
  else
    v8 = 0;
  return a5(v7, v5, v8 | *a2, *((_QWORD *)a2 + 1));
}

void sub_1A56C997C()
{
  uint64_t v0;
  uint64_t v1;
  Swift::Int v2;
  Swift::Int v3;
  char v4;
  char v5;
  int v6;
  BOOL v7;
  int v8;

  OUTLINED_FUNCTION_9_4();
  v1 = v0;
  OUTLINED_FUNCTION_35_10();
  OUTLINED_FUNCTION_38();
  sub_1A594B5F8();
  OUTLINED_FUNCTION_28_10();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_29_10();
  OUTLINED_FUNCTION_11_14();
  OUTLINED_FUNCTION_9_25();
  v3 = v2;
  v5 = v4;
  OUTLINED_FUNCTION_72();
  if ((v5 & 1) != 0)
    v3 = OUTLINED_FUNCTION_16_15();
  OUTLINED_FUNCTION_72();
  v6 = *(_DWORD *)(v1 + 20);
  v7 = __CFADD__(v6, (_DWORD)v3);
  v8 = v6 + v3;
  if (v7)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_1_41(v8);
    if (!__OFADD__(v3, j__OUTLINED_FUNCTION_74()))
    {
      OUTLINED_FUNCTION_2_6();
      return;
    }
  }
  __break(1u);
}

#error "1A56C9B50: call analysis failed (funcsize=58)"

unint64_t sub_1A56C9B70()
{
  unint64_t result;

  result = qword_1EE7A97F8;
  if (!qword_1EE7A97F8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for StoreOperation, &type metadata for StoreOperation);
    atomic_store(result, (unint64_t *)&qword_1EE7A97F8);
  }
  return result;
}

unint64_t sub_1A56C9BB0()
{
  unint64_t result;

  result = qword_1EE7A9800;
  if (!qword_1EE7A9800)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for StoreData, &type metadata for StoreData);
    atomic_store(result, (unint64_t *)&qword_1EE7A9800);
  }
  return result;
}

unint64_t sub_1A56C9BF0()
{
  unint64_t result;

  result = qword_1EE7A9808;
  if (!qword_1EE7A9808)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for StoreGmailLabels, &type metadata for StoreGmailLabels);
    atomic_store(result, (unint64_t *)&qword_1EE7A9808);
  }
  return result;
}

unint64_t sub_1A56C9C30()
{
  unint64_t result;

  result = qword_1EE7A9810;
  if (!qword_1EE7A9810)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for StoreFlags, &type metadata for StoreFlags);
    atomic_store(result, (unint64_t *)&qword_1EE7A9810);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for StoreOperation(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 2) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v5 = v6 - 3;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for StoreOperation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A56C9D40 + 4 * byte_1A59B1255[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A56C9D74 + 4 * asc_1A59B1250[v4]))();
}

uint64_t sub_1A56C9D74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A56C9D7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A56C9D84);
  return result;
}

uint64_t sub_1A56C9D90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A56C9D98);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A56C9D9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A56C9DA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for StoreOperation()
{
  OUTLINED_FUNCTION_3_1();
}

_QWORD *initializeBufferWithCopyOfBuffer for StoreData(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  OUTLINED_FUNCTION_266_0();
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t destroy for StoreData()
{
  return sub_1A567FE60();
}

_QWORD *assignWithCopy for StoreData(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  OUTLINED_FUNCTION_266_0();
  *a1 = v3;
  a1[1] = v4;
  sub_1A567FE60();
  return a1;
}

_OWORD *assignWithTake for StoreData(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  sub_1A567FE60();
  return a1;
}

uint64_t getEnumTagSinglePayload for StoreData(uint64_t a1, int a2)
{
  unsigned int v2;
  int v3;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 16))
    {
      v3 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = (*(_QWORD *)a1 >> 3) & 0xFFFFFFC0 | (*(_QWORD *)a1 >> 2);
      if (v2 > 0x80000000)
        v3 = ~v2;
      else
        v3 = -1;
    }
  }
  else
  {
    v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for StoreData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (8 * -a2) & 0x7FFFFFE00 | (4 * (-a2 & 0x3FLL));
      *(_QWORD *)(result + 8) = 0;
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t *sub_1A56C9F14(uint64_t *result, uint64_t a2)
{
  *result = *result & 0x103 | (a2 << 63);
  return result;
}

void type metadata accessor for StoreData()
{
  OUTLINED_FUNCTION_3_1();
}

void type metadata accessor for StoreGmailLabels()
{
  OUTLINED_FUNCTION_3_1();
}

void _s12NIOIMAPCore210StoreFlagsVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_1();
}

void _s12NIOIMAPCore210StoreFlagsVwca_0(_BYTE *a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_26_8(a1, a2);
  *(_QWORD *)(v2 + 8) = *(_QWORD *)(v3 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_1();
}

void _s12NIOIMAPCore210StoreFlagsVwta_0(_BYTE *a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_26_8(a1, a2);
  *(_QWORD *)(v2 + 8) = *(_QWORD *)(v3 + 8);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_1();
}

void type metadata accessor for StoreFlags()
{
  OUTLINED_FUNCTION_3_1();
}

uint64_t OUTLINED_FUNCTION_1_41@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v2 + 20) = a1;
  return v1;
}

uint64_t OUTLINED_FUNCTION_3_32()
{
  return sub_1A594B1D8();
}

void OUTLINED_FUNCTION_9_25()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::UInt32 v3;

  sub_1A56814E0(v1, v0, v2, v3);
}

uint64_t OUTLINED_FUNCTION_10_18()
{
  return sub_1A594B1D8();
}

uint64_t OUTLINED_FUNCTION_11_14()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t OUTLINED_FUNCTION_13_16()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_14_13()
{
  return sub_1A594CE70();
}

Swift::Int OUTLINED_FUNCTION_16_15()
{
  void *v0;
  uint64_t v1;
  Swift::Int v2;
  Swift::String v3;

  v3._countAndFlagsBits = v1;
  v3._object = v0;
  return ByteBuffer._setStringSlowpath(_:at:)(v3, v2);
}

void OUTLINED_FUNCTION_21_17(uint64_t a1)
{
  uint64_t v1;

  sub_1A5695F10(a1, v1);
}

uint64_t OUTLINED_FUNCTION_23_14()
{
  return sub_1A594CE70();
}

_BYTE *OUTLINED_FUNCTION_26_8(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  result[1] = a2[1];
  return result;
}

uint64_t OUTLINED_FUNCTION_27_11()
{
  return sub_1A594CD38();
}

uint64_t OUTLINED_FUNCTION_28_10()
{
  return sub_1A594B5F8();
}

uint64_t OUTLINED_FUNCTION_29_10()
{
  return sub_1A594B5F8();
}

uint64_t OUTLINED_FUNCTION_30_12()
{
  return sub_1A594CE94();
}

uint64_t OUTLINED_FUNCTION_31_11()
{
  return sub_1A594CE64();
}

uint64_t OUTLINED_FUNCTION_35_10()
{
  return sub_1A594B5F8();
}

uint64_t FullAuthenticatedURL.networkMessagePath.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A56CA178(v1, a1);
}

uint64_t sub_1A56CA178(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for NetworkMessagePath(a2, a1);
  return a2;
}

uint64_t FullAuthenticatedURL.networkMessagePath.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1A56CA1BC(a1, v1);
}

uint64_t sub_1A56CA1BC(uint64_t a1, uint64_t a2)
{
  assignWithTake for NetworkMessagePath(a2, a1);
  return a2;
}

double (*FullAuthenticatedURL.networkMessagePath.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FullAuthenticatedURL.authenticatedURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A56CA214(v1 + 136, a1);
}

uint64_t sub_1A56CA214(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for AuthenticatedURL(a2, a1);
  return a2;
}

uint64_t FullAuthenticatedURL.authenticatedURL.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1A56CA258(a1, v1 + 136);
}

uint64_t sub_1A56CA258(uint64_t a1, uint64_t a2)
{
  assignWithTake for AuthenticatedURL(a2, a1);
  return a2;
}

double (*FullAuthenticatedURL.authenticatedURL.modify())(_QWORD)
{
  return nullsub_1;
}

__n128 FullAuthenticatedURL.init(networkMessagePath:authenticatedURL:)@<Q0>(const void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  char v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __n128 result;
  __n128 v13;

  v5 = *(_QWORD *)(a2 + 48);
  v6 = *(_BYTE *)(a2 + 56);
  v7 = *(_BYTE *)(a2 + 57);
  v8 = *(_BYTE *)(a2 + 80);
  v13 = *(__n128 *)(a2 + 88);
  v9 = *(_QWORD *)(a2 + 104);
  v10 = *(_QWORD *)(a2 + 112);
  OUTLINED_FUNCTION_0_59((void *)a3, a1);
  v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a3 + 136) = *(_OWORD *)a2;
  *(_OWORD *)(a3 + 152) = v11;
  *(_OWORD *)(a3 + 168) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a3 + 184) = v5;
  *(_BYTE *)(a3 + 192) = v6;
  *(_BYTE *)(a3 + 193) = v7 & 1;
  *(_OWORD *)(a3 + 200) = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a3 + 216) = v8;
  result = v13;
  *(__n128 *)(a3 + 224) = v13;
  *(_QWORD *)(a3 + 240) = v9;
  *(_QWORD *)(a3 + 248) = v10;
  return result;
}

uint64_t FullAuthenticatedURL.hash(into:)(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  _BYTE __dst[120];
  uint64_t v6[8];
  uint64_t v7;
  _BYTE v8[72];
  _OWORD v9[2];
  _OWORD v10[2];

  OUTLINED_FUNCTION_0_59(v6, v1);
  v3 = v1[1];
  v9[0] = *v1;
  v9[1] = v3;
  v10[0] = v1[2];
  *(_OWORD *)((char *)v10 + 9) = *(_OWORD *)((char *)v1 + 41);
  sub_1A56CA6CC(v6);
  sub_1A56CA764((uint64_t *)v9);
  IMAPServer.hash(into:)(a1);
  sub_1A56CA7A0((uint64_t *)v9);
  OUTLINED_FUNCTION_1_42(v8, &v7);
  sub_1A56CA818((uint64_t)v8);
  MessagePath.hash(into:)();
  sub_1A56CA84C((uint64_t)v8);
  sub_1A56CA880(v6);
  memcpy(__dst, (char *)v1 + 136, sizeof(__dst));
  sub_1A56CA8DC((uint64_t)__dst);
  AuthenticatedURL.hash(into:)();
  return sub_1A56CA92C((uint64_t)__dst);
}

uint64_t static FullAuthenticatedURL.__derived_struct_equals(_:_:)(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;
  __int128 v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  BOOL v17;
  _BYTE v19[88];
  _BYTE __dst[82];
  _BYTE v21[64];
  uint64_t v22;
  _BYTE v23[72];
  _OWORD v24[2];
  _OWORD v25[2];
  _BYTE v26[64];
  uint64_t v27;
  _BYTE v28[72];
  _OWORD v29[2];
  _OWORD v30[2];

  OUTLINED_FUNCTION_0_59(v26, a1);
  OUTLINED_FUNCTION_0_59(v21, a2);
  v4 = a1[1];
  v29[0] = *a1;
  v29[1] = v4;
  v30[0] = a1[2];
  *(_OWORD *)((char *)v30 + 9) = *(_OWORD *)((char *)a1 + 41);
  v5 = a2[1];
  v24[0] = *a2;
  v24[1] = v5;
  v25[0] = a2[2];
  *(_OWORD *)((char *)v25 + 9) = *(_OWORD *)((char *)a2 + 41);
  if ((static IMAPServer.__derived_struct_equals(_:_:)((uint64_t)v29, (uint64_t)v24) & 1) == 0)
    return 0;
  OUTLINED_FUNCTION_1_42(v28, &v27);
  OUTLINED_FUNCTION_1_42(v23, &v22);
  if ((static MessagePath.__derived_struct_equals(_:_:)((uint64_t)v28, (uint64_t)v23) & 1) == 0)
    return 0;
  v6 = (char *)a1 + 136;
  v7 = *((_QWORD *)a1 + 28);
  v8 = *((_QWORD *)a1 + 29);
  v10 = *((_QWORD *)a1 + 30);
  v9 = *((_QWORD *)a1 + 31);
  v11 = (char *)a2 + 136;
  v12 = *((_QWORD *)a2 + 28);
  v13 = *((_QWORD *)a2 + 29);
  v15 = *((_QWORD *)a2 + 30);
  v14 = *((_QWORD *)a2 + 31);
  memcpy(__dst, v6, 0x51uLL);
  memcpy(v19, v11, 0x51uLL);
  if (!static AuthenticatedURLRump.__derived_struct_equals(_:_:)((uint64_t)__dst, (uint64_t)v19))
    return 0;
  v16 = v7 == v12 && v8 == v13;
  if ((v16 || (sub_1A594CD38() & 1) != 0)
    && (v10 == v15 ? (v17 = v9 == v14) : (v17 = 0), v17 || (sub_1A594CD38() & 1) != 0))
  {
    return 1;
  }
  else
  {
    return 0;
  }
}

uint64_t FullAuthenticatedURL.hashValue.getter()
{
  _OWORD *v0;
  __int128 v1;
  uint64_t v3;
  _BYTE __dst[120];
  uint64_t v5[8];
  uint64_t v6;
  _BYTE v7[72];
  _OWORD v8[2];
  _OWORD v9[2];

  sub_1A594CE64();
  OUTLINED_FUNCTION_0_59(v5, v0);
  v1 = v0[1];
  v8[0] = *v0;
  v8[1] = v1;
  v9[0] = v0[2];
  *(_OWORD *)((char *)v9 + 9) = *(_OWORD *)((char *)v0 + 41);
  sub_1A56CA6CC(v5);
  sub_1A56CA764((uint64_t *)v8);
  IMAPServer.hash(into:)((uint64_t)&v3);
  sub_1A56CA7A0((uint64_t *)v8);
  OUTLINED_FUNCTION_1_42(v7, &v6);
  sub_1A56CA818((uint64_t)v7);
  MessagePath.hash(into:)();
  sub_1A56CA84C((uint64_t)v7);
  sub_1A56CA880(v5);
  memcpy(__dst, (char *)v0 + 136, sizeof(__dst));
  sub_1A56CA8DC((uint64_t)__dst);
  AuthenticatedURL.hash(into:)();
  sub_1A56CA92C((uint64_t)__dst);
  return sub_1A594CED0();
}

uint64_t sub_1A56CA690()
{
  _BYTE v1[72];

  sub_1A594CE64();
  FullAuthenticatedURL.hash(into:)((uint64_t)v1);
  return sub_1A594CED0();
}

uint64_t *sub_1A56CA6CC(uint64_t *a1)
{
  sub_1A56CA728(*a1, a1[1], a1[2], a1[3]);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t sub_1A56CA728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a2 != 1)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return sub_1A56664E0(a3, a4);
  }
  return result;
}

uint64_t *sub_1A56CA764(uint64_t *a1)
{
  sub_1A56CA728(*a1, a1[1], a1[2], a1[3]);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t *sub_1A56CA7A0(uint64_t *a1)
{
  sub_1A56CA7DC(*a1, a1[1], a1[2], a1[3]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A56CA7DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    return sub_1A555F508(a3, a4);
  }
  return result;
}

uint64_t sub_1A56CA818(uint64_t a1)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t sub_1A56CA84C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t *sub_1A56CA880(uint64_t *a1)
{
  sub_1A56CA7DC(*a1, a1[1], a1[2], a1[3]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A56CA8DC(uint64_t a1)
{
  sub_1A5688348(*(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t sub_1A56CA92C(uint64_t a1)
{
  sub_1A5687BD4(*(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1A56CA980()
{
  unint64_t result;

  result = qword_1EE7A9818;
  if (!qword_1EE7A9818)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for FullAuthenticatedURL, &type metadata for FullAuthenticatedURL);
    atomic_store(result, (unint64_t *)&qword_1EE7A9818);
  }
  return result;
}

uint64_t destroy for FullAuthenticatedURL(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 24) != 1)
      swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A5687BD4(*(_QWORD *)(a1 + 200), *(_QWORD *)(a1 + 208), *(_BYTE *)(a1 + 216));
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FullAuthenticatedURL(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a2 + 8);
  if (v4 == 1)
  {
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    v6 = (_OWORD *)(a2 + 16);
    v7 = *(_QWORD *)(a2 + 24);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v7 == 1)
    {
      *(_OWORD *)(a1 + 16) = *v6;
    }
    else
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)v6;
      *(_QWORD *)(a1 + 24) = v7;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
  }
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v9 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v9;
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 84) = *(_BYTE *)(a2 + 84);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  v10 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v10;
  *(_WORD *)(a1 + 128) = *(_WORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 178) = *(_OWORD *)(a2 + 178);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  v11 = *(_QWORD *)(a2 + 200);
  v12 = *(_QWORD *)(a2 + 208);
  v13 = *(_BYTE *)(a2 + 216);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5688348(v11, v12, v13);
  *(_QWORD *)(a1 + 200) = v11;
  *(_QWORD *)(a1 + 208) = v12;
  *(_BYTE *)(a1 + 216) = v13;
  v14 = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = v14;
  v15 = *(_QWORD *)(a2 + 240);
  v16 = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = v15;
  *(_QWORD *)(a1 + 248) = v16;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for FullAuthenticatedURL(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;

  v4 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8) != 1)
  {
    if (v4 == 1)
    {
      sub_1A56CAE04(a1);
      v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      goto LABEL_15;
    }
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_bridgeObjectRelease();
    v8 = *(_QWORD *)(a2 + 24);
    if (*(_QWORD *)(a1 + 24) == 1)
    {
      if (v8 != 1)
        goto LABEL_10;
    }
    else
    {
      if (v8 != 1)
      {
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
      sub_1A56CADD0(a1 + 16);
    }
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    goto LABEL_15;
  }
  if (v4 != 1)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    v7 = *(_QWORD *)(a2 + 24);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v7 == 1)
    {
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      goto LABEL_15;
    }
LABEL_10:
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    goto LABEL_15;
  }
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
LABEL_15:
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v10 = *(_DWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 84) = *(_BYTE *)(a2 + 84);
  *(_DWORD *)(a1 + 80) = v10;
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v11 = *(_OWORD *)(a2 + 112);
  *(_WORD *)(a1 + 128) = *(_WORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = v11;
  v12 = *(_OWORD *)(a2 + 136);
  v13 = *(_OWORD *)(a2 + 152);
  v14 = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 178) = *(_OWORD *)(a2 + 178);
  *(_OWORD *)(a1 + 168) = v14;
  *(_OWORD *)(a1 + 152) = v13;
  *(_OWORD *)(a1 + 136) = v12;
  v15 = *(_QWORD *)(a2 + 200);
  v16 = *(_QWORD *)(a2 + 208);
  v17 = *(_BYTE *)(a2 + 216);
  sub_1A5688348(v15, v16, v17);
  v18 = *(_QWORD *)(a1 + 200);
  v19 = *(_QWORD *)(a1 + 208);
  *(_QWORD *)(a1 + 200) = v15;
  *(_QWORD *)(a1 + 208) = v16;
  v20 = *(_BYTE *)(a1 + 216);
  *(_BYTE *)(a1 + 216) = v17;
  sub_1A5687BD4(v18, v19, v20);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A56CADD0(uint64_t a1)
{
  destroy for SyncRequest();
  return a1;
}

uint64_t sub_1A56CAE04(uint64_t a1)
{
  destroy for UserAuthenticationMechanism(a1);
  return a1;
}

void *__swift_memcpy256_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x100uLL);
}

uint64_t assignWithTake for FullAuthenticatedURL(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;

  if (*(_QWORD *)(a1 + 8) == 1)
    goto LABEL_4;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 == 1)
  {
    sub_1A56CAE04(a1);
LABEL_4:
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    goto LABEL_10;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v6 = (_QWORD *)(a2 + 16);
  if (*(_QWORD *)(a1 + 24) != 1)
  {
    v7 = *(_QWORD *)(a2 + 24);
    if (v7 != 1)
    {
      *(_QWORD *)(a1 + 16) = *v6;
      *(_QWORD *)(a1 + 24) = v7;
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    sub_1A56CADD0(a1 + 16);
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)v6;
LABEL_10:
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v9 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v9;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 84) = *(_BYTE *)(a2 + 84);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  v10 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v10;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_WORD *)(a1 + 128) = *(_WORD *)(a2 + 128);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 178) = *(_OWORD *)(a2 + 178);
  v11 = *(_BYTE *)(a2 + 216);
  v12 = *(_QWORD *)(a1 + 200);
  v13 = *(_QWORD *)(a1 + 208);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  v14 = *(_BYTE *)(a1 + 216);
  *(_BYTE *)(a1 + 216) = v11;
  sub_1A5687BD4(v12, v13, v14);
  v15 = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = v15;
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = v16;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IMAPURL(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 256))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 40);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IMAPURL(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 248) = 0;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 256) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 256) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FullAuthenticatedURL()
{
  return &type metadata for FullAuthenticatedURL;
}

void *OUTLINED_FUNCTION_0_59(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x82uLL);
}

void *OUTLINED_FUNCTION_1_42(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x42uLL);
}

uint64_t static FullDateTime.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  BOOL v3;

  if (*(_QWORD *)a1 != *(_QWORD *)a2)
    return 0;
  if (*(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8) || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24) && *(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32);
  if (!v3 || *(_QWORD *)(a1 + 40) != *(_QWORD *)(a2 + 40))
    return 0;
  if ((*(_BYTE *)(a1 + 56) & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 56) & 1) == 0)
      return 0;
  }
  else if ((*(_BYTE *)(a2 + 56) & 1) != 0 || *(_QWORD *)(a1 + 48) != *(_QWORD *)(a2 + 48))
  {
    return 0;
  }
  return 1;
}

uint64_t FullDateTime.date.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t FullDateTime.date.setter(uint64_t result, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  *v3 = result;
  v3[1] = a2;
  v3[2] = a3;
  return result;
}

double (*FullDateTime.date.modify())(_QWORD)
{
  return nullsub_1;
}

__n128 FullDateTime.time.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  __n128 result;
  __int128 v4;

  v2 = *(_BYTE *)(v1 + 56);
  result = *(__n128 *)(v1 + 24);
  v4 = *(_OWORD *)(v1 + 40);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v2;
  return result;
}

__n128 FullDateTime.time.setter(uint64_t a1)
{
  uint64_t v1;
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v3;
  *(_BYTE *)(v1 + 56) = *(_BYTE *)(a1 + 32);
  return result;
}

double (*FullDateTime.time.modify())(_QWORD)
{
  return nullsub_1;
}

void __swiftcall FullDateTime.init(date:time:)(NIOIMAPCore2::FullDateTime *__return_ptr retstr, NIOIMAPCore2::FullDate date, NIOIMAPCore2::FullTime *time)
{
  __int128 v3;
  Swift::Bool is_nil;

  v3 = *(_OWORD *)&time->second;
  *(_OWORD *)&retstr->time.hour = *(_OWORD *)&time->hour;
  is_nil = time->fraction.is_nil;
  retstr->date = date;
  *(_OWORD *)&retstr->time.second = v3;
  retstr->time.fraction.is_nil = is_nil;
}

uint64_t FullDateTime.hash(into:)()
{
  uint64_t v0;
  char v1;

  sub_1A594CE88();
  OUTLINED_FUNCTION_0_60();
  OUTLINED_FUNCTION_15_21();
  v1 = *(_BYTE *)(v0 + 56);
  sub_1A594CE88();
  OUTLINED_FUNCTION_15_21();
  sub_1A594CE88();
  if ((v1 & 1) != 0)
    return OUTLINED_FUNCTION_35_3();
  OUTLINED_FUNCTION_30_2();
  return OUTLINED_FUNCTION_0_60();
}

BOOL static FullDate.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return a1 == a4 && a2 == a5 && a3 == a6;
}

uint64_t static FullTime.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  char v2;

  if (*(_QWORD *)a1 != *(_QWORD *)a2
    || *(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8)
    || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
  {
    return 0;
  }
  v2 = *(_BYTE *)(a2 + 32);
  if ((*(_BYTE *)(a1 + 32) & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 32) & 1) == 0)
      return 0;
  }
  else
  {
    if (*(_QWORD *)(a1 + 24) != *(_QWORD *)(a2 + 24))
      v2 = 1;
    if ((v2 & 1) != 0)
      return 0;
  }
  return 1;
}

void FullDateTime.hashValue.getter()
{
  OUTLINED_FUNCTION_15_10();
  FullDateTime.hash(into:)();
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_8_7();
}

uint64_t sub_1A56CB2AC()
{
  sub_1A594CE64();
  FullDateTime.hash(into:)();
  return sub_1A594CED0();
}

uint64_t FullDate.month.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t FullDate.day.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

NIOIMAPCore2::FullDate __swiftcall FullDate.init(year:month:day:)(Swift::Int year, Swift::Int month, Swift::Int day)
{
  NIOIMAPCore2::FullDate result;

  if ((unint64_t)(month - 13) < 0xFFFFFFFFFFFFFFF4 || (unint64_t)(day - 32) < 0xFFFFFFFFFFFFFFE1)
    __break(1u);
  result.day = day;
  result.month = month;
  result.year = year;
  return result;
}

uint64_t FullDate.hash(into:)()
{
  sub_1A594CE88();
  sub_1A594CE88();
  return OUTLINED_FUNCTION_0_60();
}

uint64_t FullDate.hashValue.getter()
{
  OUTLINED_FUNCTION_15_10();
  OUTLINED_FUNCTION_15_21();
  sub_1A594CE88();
  OUTLINED_FUNCTION_0_60();
  return OUTLINED_FUNCTION_24_3();
}

uint64_t sub_1A56CB3B0()
{
  return FullDate.hashValue.getter();
}

uint64_t sub_1A56CB3BC()
{
  return FullDate.hash(into:)();
}

BOOL sub_1A56CB3C8(uint64_t *a1, uint64_t *a2)
{
  return static FullDate.__derived_struct_equals(_:_:)(*a1, a1[1], a1[2], *a2, a2[1], a2[2]);
}

uint64_t FullTime.hour.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t FullTime.hour.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

double (*FullTime.hour.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FullTime.minute.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t FullTime.minute.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

double (*FullTime.minute.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FullTime.second.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t FullTime.second.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

double (*FullTime.second.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FullTime.fraction.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t FullTime.fraction.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = result;
  *(_BYTE *)(v2 + 32) = a2 & 1;
  return result;
}

double (*FullTime.fraction.modify())(_QWORD)
{
  return nullsub_1;
}

void __swiftcall FullTime.init(hour:minute:second:fraction:)(NIOIMAPCore2::FullTime *__return_ptr retstr, Swift::Int hour, Swift::Int minute, Swift::Int second, Swift::Int_optional fraction)
{
  retstr->hour = hour;
  retstr->minute = minute;
  retstr->second = second;
  retstr->fraction.value = fraction.value;
  retstr->fraction.is_nil = fraction.is_nil;
}

uint64_t FullTime.hash(into:)()
{
  uint64_t v0;

  sub_1A594CE88();
  sub_1A594CE88();
  sub_1A594CE88();
  if (*(_BYTE *)(v0 + 32) == 1)
    return OUTLINED_FUNCTION_35_3();
  OUTLINED_FUNCTION_30_2();
  return OUTLINED_FUNCTION_0_60();
}

void FullTime.hashValue.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_15_10();
  OUTLINED_FUNCTION_13_17();
  OUTLINED_FUNCTION_13_17();
  OUTLINED_FUNCTION_13_17();
  if (*(_BYTE *)(v0 + 32) == 1)
  {
    OUTLINED_FUNCTION_35_3();
  }
  else
  {
    OUTLINED_FUNCTION_30_2();
    OUTLINED_FUNCTION_0_60();
  }
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_8_7();
}

uint64_t sub_1A56CB54C()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 32);
  sub_1A594CE64();
  sub_1A594CE88();
  sub_1A594CE88();
  sub_1A594CE88();
  sub_1A594CE94();
  if (v1 != 1)
    sub_1A594CE88();
  return sub_1A594CED0();
}

unint64_t sub_1A56CB5EC()
{
  unint64_t result;

  result = qword_1EE7A9820;
  if (!qword_1EE7A9820)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for FullDateTime, &type metadata for FullDateTime);
    atomic_store(result, (unint64_t *)&qword_1EE7A9820);
  }
  return result;
}

unint64_t sub_1A56CB62C()
{
  unint64_t result;

  result = qword_1EE7A9828;
  if (!qword_1EE7A9828)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for FullDate, &type metadata for FullDate);
    atomic_store(result, (unint64_t *)&qword_1EE7A9828);
  }
  return result;
}

unint64_t sub_1A56CB66C()
{
  unint64_t result;

  result = qword_1EE7A9830;
  if (!qword_1EE7A9830)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for FullTime, &type metadata for FullTime);
    atomic_store(result, (unint64_t *)&qword_1EE7A9830);
  }
  return result;
}

void type metadata accessor for FullDateTime()
{
  OUTLINED_FUNCTION_3_1();
}

void type metadata accessor for FullDate()
{
  OUTLINED_FUNCTION_3_1();
}

__n128 __swift_memcpy33_8_0(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for MailboxMetadata(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MailboxMetadata(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 33) = v3;
  return result;
}

void type metadata accessor for FullTime()
{
  OUTLINED_FUNCTION_3_1();
}

uint64_t sub_1A56CB734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  Swift::Int v7;
  uint64_t v8;
  void *v9;
  void *v10;
  Swift::Int v11;
  Swift::Int v12;
  char v13;
  Swift::String v14;
  uint64_t result;
  int v16;
  BOOL v17;
  int v18;

  v4 = v3;
  v7 = *(unsigned int *)(v4 + 20);
  v8 = sub_1A56CBA78(a1, 4);
  v10 = v9;
  OUTLINED_FUNCTION_1_43(a2);
  OUTLINED_FUNCTION_1_43(a3);
  OUTLINED_FUNCTION_82_0();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_5_24();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A56814E0(v8, (unint64_t)v10, v4 + 8, v7);
  v12 = v11;
  LOBYTE(a2) = v13;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    v14._countAndFlagsBits = v8;
    v14._object = v10;
    v12 = ByteBuffer._setStringSlowpath(_:at:)(v14, v7);
  }
  result = swift_bridgeObjectRelease();
  v16 = *(_DWORD *)(v4 + 20);
  v17 = __CFADD__(v16, (_DWORD)v12);
  v18 = v16 + v12;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(v4 + 20) = v18;
    return v12;
  }
  return result;
}

uint64_t sub_1A56CB868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  Swift::UInt32 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Swift::Int v32;
  Swift::Int v33;
  char v34;
  char v35;
  uint64_t result;
  int v37;
  Swift::UInt32 v38;
  Swift::Int v39;
  Swift::Int v40;
  char v41;
  char v42;
  int v43;
  BOOL v44;
  int v45;

  v5 = v4;
  v7 = HIDWORD(*(_QWORD *)(v4 + 16));
  v8 = *(_QWORD *)a1;
  OUTLINED_FUNCTION_6_25(a1, a2, a3, a4);
  v9 = OUTLINED_FUNCTION_1_43(v8);
  v11 = v10;
  v14 = OUTLINED_FUNCTION_7_19(v9, v10, v12, v13);
  v15 = *(_QWORD *)(a1 + 8);
  OUTLINED_FUNCTION_6_25(v14, v16, v17, v18);
  v19 = OUTLINED_FUNCTION_1_43(v15);
  v23 = OUTLINED_FUNCTION_7_19(v19, v20, v21, v22);
  v24 = *(_QWORD *)(a1 + 16);
  OUTLINED_FUNCTION_6_25(v23, v25, v26, v27);
  v28 = OUTLINED_FUNCTION_1_43(v24);
  OUTLINED_FUNCTION_7_19(v28, v29, v30, v31);
  OUTLINED_FUNCTION_82_0();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_5_24();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A56814E0(v9, v11, v5 + 8, v7);
  v33 = v32;
  v35 = v34;
  swift_bridgeObjectRelease();
  if ((v35 & 1) != 0)
    v33 = OUTLINED_FUNCTION_8_18(v9, v11);
  result = swift_bridgeObjectRelease();
  v37 = *(_DWORD *)(v5 + 20);
  v38 = v37 + v33;
  if (__CFADD__(v37, (_DWORD)v33))
  {
    __break(1u);
    goto LABEL_13;
  }
  *(_DWORD *)(v5 + 20) = v38;
  if ((*(_BYTE *)(a1 + 32) & 1) != 0)
  {
    v39 = 0;
  }
  else
  {
    sub_1A594CC9C();
    sub_1A594B5F8();
    OUTLINED_FUNCTION_52();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A56814E0(46, 0xE100000000000000, v5 + 8, v38);
    v39 = v40;
    v42 = v41;
    OUTLINED_FUNCTION_52();
    if ((v42 & 1) != 0)
      v39 = OUTLINED_FUNCTION_8_18(46, 0xE100000000000000);
    result = OUTLINED_FUNCTION_52();
    v43 = *(_DWORD *)(v5 + 20);
    v44 = __CFADD__(v43, (_DWORD)v39);
    v45 = v43 + v39;
    if (v44)
      goto LABEL_14;
    *(_DWORD *)(v5 + 20) = v45;
  }
  result = v33 + v39;
  if (__OFADD__(v33, v39))
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
  return result;
}

uint64_t sub_1A56CBA78(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = sub_1A594CC9C();
  if (sub_1A594B5A4() >= a2)
    return v3;
  result = sub_1A594B5A4();
  if (!__OFSUB__(a2, result))
  {
    v5 = MEMORY[0x1A85ADB48](48, 0xE100000000000000, a2 - result);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_52();
    return v5;
  }
  __break(1u);
  return result;
}

uint64_t OUTLINED_FUNCTION_0_60()
{
  return sub_1A594CE88();
}

uint64_t OUTLINED_FUNCTION_1_43(uint64_t a1)
{
  return sub_1A56CBA78(a1, 2);
}

uint64_t OUTLINED_FUNCTION_5_24()
{
  return sub_1A594B5F8();
}

uint64_t OUTLINED_FUNCTION_6_25(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  return sub_1A56BFF80((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_7_19(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  return sub_1A56BFFB4((uint64_t)va);
}

Swift::Int OUTLINED_FUNCTION_8_18(uint64_t a1, uint64_t a2)
{
  Swift::Int v2;

  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v2);
}

uint64_t OUTLINED_FUNCTION_13_17()
{
  return sub_1A594CE88();
}

uint64_t OUTLINED_FUNCTION_15_21()
{
  return sub_1A594CE88();
}

void sub_1A56CBB7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  Swift::Int v4;
  int v5;
  char v6;
  Swift::String v7;
  int v8;
  BOOL v9;
  int v10;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_1A5665D3C();
  }
  else
  {
    v4 = *(unsigned int *)(v3 + 20);
    sub_1A56814E0(4999502, 0xE300000000000000, v3 + 8, *(_DWORD *)(v3 + 20));
    if ((v6 & 1) != 0)
    {
      v7._countAndFlagsBits = 4999502;
      v7._object = (void *)0xE300000000000000;
      v5 = ByteBuffer._setStringSlowpath(_:at:)(v7, v4);
    }
    v8 = *(_DWORD *)(v3 + 20);
    v9 = __CFADD__(v8, v5);
    v10 = v8 + v5;
    if (v9)
      __break(1u);
    else
      *(_DWORD *)(v3 + 20) = v10;
  }
}

uint64_t IMAPServer.userAuthenticationMechanism.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = OUTLINED_FUNCTION_9_18();
  sub_1A56CA728(v0, v1, v2, v3);
  return OUTLINED_FUNCTION_9_18();
}

void IMAPServer.userAuthenticationMechanism.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  sub_1A56CA7DC(*v4, v4[1], v4[2], v4[3]);
  *v4 = a1;
  v4[1] = a2;
  v4[2] = a3;
  v4[3] = a4;
  OUTLINED_FUNCTION_17_1();
}

double (*IMAPServer.userAuthenticationMechanism.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t IMAPServer.host.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t IMAPServer.host.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

double (*IMAPServer.host.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t IMAPServer.port.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t IMAPServer.port.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = result;
  *(_BYTE *)(v2 + 56) = a2 & 1;
  return result;
}

double (*IMAPServer.port.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t IMAPServer.init(userAuthenticationMechanism:host:port:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>)
{
  *(_QWORD *)a9 = result;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_BYTE *)(a9 + 56) = a8 & 1;
  return result;
}

void IMAPServer.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 8);
  if (v4 == 1)
  {
    sub_1A594CE94();
  }
  else
  {
    v6 = *(_QWORD *)(v2 + 16);
    v5 = *(_QWORD *)(v2 + 24);
    v7 = *(_QWORD *)v2;
    sub_1A594CE94();
    v8 = OUTLINED_FUNCTION_6_26();
    sub_1A56CA728(v8, v9, v10, v11);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A56664E0(v6, v5);
    UserAuthenticationMechanism.hash(into:)(a1, v7, v4, v6, v5);
    swift_bridgeObjectRelease();
    sub_1A555F508(v6, v5);
    v12 = OUTLINED_FUNCTION_6_26();
    sub_1A56CA7DC(v12, v13, v14, v15);
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  if (*(_BYTE *)(v2 + 56) == 1)
  {
    sub_1A594CE94();
  }
  else
  {
    sub_1A594CE94();
    sub_1A594CE88();
  }
  OUTLINED_FUNCTION_17_1();
}

uint64_t static IMAPServer.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  char v11;
  uint64_t result;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v31;
  char v33;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a2 + 8);
  v9 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  if (v4 == 1)
  {
    if (v7 == 1)
      goto LABEL_3;
    goto LABEL_12;
  }
  if (v7 == 1)
  {
LABEL_12:
    v14 = OUTLINED_FUNCTION_4_28();
    sub_1A56CA728(v14, v15, v16, v17);
    v18 = OUTLINED_FUNCTION_2_41();
    sub_1A56CA728(v18, v19, v20, v21);
    v22 = OUTLINED_FUNCTION_4_28();
    sub_1A56CA7DC(v22, v23, v24, v25);
    v26 = OUTLINED_FUNCTION_2_41();
    sub_1A56CA7DC(v26, v27, v28, v29);
    return 0;
  }
  if (v4)
  {
    if (!v7)
      return 0;
    if (*(_QWORD *)a1 != *(_QWORD *)a2 || v4 != v7)
    {
      v31 = OUTLINED_FUNCTION_1_16();
      result = 0;
      if ((v31 & 1) == 0)
        return result;
    }
  }
  else if (v7)
  {
    return 0;
  }
  if (v6 == 1)
  {
    if (v8 != 1)
      return 0;
  }
  else
  {
    if (v8 == 1)
      return 0;
    if (v6)
    {
      if (v8)
      {
        if (v5 != v9 || v6 != v8)
        {
          v33 = OUTLINED_FUNCTION_1_16();
          result = 0;
          if ((v33 & 1) == 0)
            return result;
        }
        goto LABEL_3;
      }
      return 0;
    }
    if (v8)
      return 0;
  }
LABEL_3:
  v10 = *(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40);
  if (v10 || (v11 = OUTLINED_FUNCTION_1_16(), result = 0, (v11 & 1) != 0))
  {
    v13 = *(_BYTE *)(a2 + 56);
    if ((*(_BYTE *)(a1 + 56) & 1) != 0)
    {
      if ((*(_BYTE *)(a2 + 56) & 1) != 0)
        return 1;
    }
    else
    {
      if (*(_QWORD *)(a1 + 48) != *(_QWORD *)(a2 + 48))
        v13 = 1;
      if ((v13 & 1) == 0)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t IMAPServer.hashValue.getter()
{
  _BYTE v1[72];

  sub_1A594CE64();
  IMAPServer.hash(into:)((uint64_t)v1);
  return sub_1A594CED0();
}

uint64_t sub_1A56CC014()
{
  _BYTE v1[72];

  sub_1A594CE64();
  IMAPServer.hash(into:)((uint64_t)v1);
  return sub_1A594CED0();
}

uint64_t sub_1A56CC050(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  Swift::Int v22;
  Swift::Int v23;
  char v24;
  Swift::String v25;
  Swift::Int v26;
  uint64_t result;
  int v28;
  Swift::Int v29;
  Swift::Int v30;
  Swift::Int v31;
  Swift::Int v32;
  char v33;
  char v34;
  Swift::String v35;
  int v36;
  BOOL v37;
  int v38;
  _OWORD v39[3];
  uint64_t v40;

  v2 = v1;
  v4 = *(_OWORD *)(v1 + 16);
  v39[0] = *(_OWORD *)v1;
  v39[1] = v4;
  v39[2] = *(_OWORD *)(v1 + 32);
  v40 = *(_QWORD *)(v1 + 48);
  sub_1A56BFF80((uint64_t)v39);
  v5 = OUTLINED_FUNCTION_0_61();
  sub_1A56CA728(v5, v6, v7, v8);
  v9 = OUTLINED_FUNCTION_0_61();
  sub_1A56662D8(v9, v10, v11, v12, v13, v1);
  v15 = v14;
  sub_1A56BFFB4((uint64_t)v39);
  v16 = OUTLINED_FUNCTION_0_61();
  sub_1A56CA7DC(v16, v17, v18, v19);
  v21 = *(_QWORD *)(a1 + 32);
  v20 = *(void **)(a1 + 40);
  v22 = *(unsigned int *)(v1 + 20);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A56814E0(v21, (unint64_t)v20, v1 + 8, v22);
  if ((v24 & 1) != 0)
  {
    v25._countAndFlagsBits = v21;
    v25._object = v20;
    v23 = ByteBuffer._setStringSlowpath(_:at:)(v25, v22);
  }
  v26 = v23;
  result = swift_bridgeObjectRelease();
  v28 = *(_DWORD *)(v2 + 20);
  v29 = (v28 + v26);
  if (__CFADD__(v28, (_DWORD)v26))
  {
    __break(1u);
    goto LABEL_14;
  }
  *(_DWORD *)(v2 + 20) = v29;
  v30 = v15 + v26;
  if (__OFADD__(v15, v26))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if ((*(_BYTE *)(a1 + 56) & 1) != 0)
  {
    v31 = 0;
  }
  else
  {
    sub_1A594CC9C();
    sub_1A594B5F8();
    OUTLINED_FUNCTION_72();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A56814E0(58, 0xE100000000000000, v2 + 8, v29);
    v31 = v32;
    v34 = v33;
    OUTLINED_FUNCTION_72();
    if ((v34 & 1) != 0)
    {
      v35._countAndFlagsBits = 58;
      v35._object = (void *)0xE100000000000000;
      v31 = ByteBuffer._setStringSlowpath(_:at:)(v35, v29);
    }
    result = OUTLINED_FUNCTION_72();
    v36 = *(_DWORD *)(v2 + 20);
    v37 = __CFADD__(v36, (_DWORD)v31);
    v38 = v36 + v31;
    if (v37)
      goto LABEL_16;
    *(_DWORD *)(v2 + 20) = v38;
  }
  result = v30 + v31;
  if (__OFADD__(v30, v31))
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
  }
  return result;
}

unint64_t sub_1A56CC218()
{
  unint64_t result;

  result = qword_1EE7A9838;
  if (!qword_1EE7A9838)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for IMAPServer, &type metadata for IMAPServer);
    atomic_store(result, (unint64_t *)&qword_1EE7A9838);
  }
  return result;
}

uint64_t destroy for IMAPServer(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 24) != 1)
      swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for IMAPServer(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  if (v4 == 1)
  {
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    v6 = (_OWORD *)(a2 + 16);
    v7 = *(_QWORD *)(a2 + 24);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v7 == 1)
    {
      *(_OWORD *)(a1 + 16) = *v6;
    }
    else
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)v6;
      *(_QWORD *)(a1 + 24) = v7;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
  }
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for IMAPServer(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8) != 1)
  {
    if (v4 == 1)
    {
      sub_1A56CAE04(a1);
      v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      goto LABEL_15;
    }
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_bridgeObjectRelease();
    v8 = *(_QWORD *)(a2 + 24);
    if (*(_QWORD *)(a1 + 24) == 1)
    {
      if (v8 != 1)
        goto LABEL_10;
    }
    else
    {
      if (v8 != 1)
      {
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
      sub_1A56CADD0(a1 + 16);
    }
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    goto LABEL_15;
  }
  if (v4 != 1)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    v7 = *(_QWORD *)(a2 + 24);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v7 == 1)
    {
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      goto LABEL_15;
    }
LABEL_10:
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    goto LABEL_15;
  }
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
LABEL_15:
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v9;
  return a1;
}

uint64_t assignWithTake for IMAPServer(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  if (*(_QWORD *)(a1 + 8) == 1)
    goto LABEL_4;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 == 1)
  {
    sub_1A56CAE04(a1);
LABEL_4:
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    goto LABEL_10;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v6 = (_QWORD *)(a2 + 16);
  if (*(_QWORD *)(a1 + 24) != 1)
  {
    v7 = *(_QWORD *)(a2 + 24);
    if (v7 != 1)
    {
      *(_QWORD *)(a1 + 16) = *v6;
      *(_QWORD *)(a1 + 24) = v7;
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    sub_1A56CADD0(a1 + 16);
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)v6;
LABEL_10:
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for IMAPServer(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 57))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 40);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IMAPServer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 57) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for IMAPServer()
{
  return &type metadata for IMAPServer;
}

uint64_t OUTLINED_FUNCTION_0_61()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_2_41()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_4_28()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_6_26()
{
  uint64_t v0;

  return v0;
}

uint64_t IMAPURL.server.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A56CC654(v1, a1);
}

uint64_t sub_1A56CC654(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for IMAPServer(a2, a1);
  return a2;
}

uint64_t IMAPURL.server.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1A56CC698(a1, v1);
}

uint64_t sub_1A56CC698(uint64_t a1, uint64_t a2)
{
  assignWithTake for IMAPServer(a2, a1);
  return a2;
}

double (*IMAPURL.server.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t IMAPURL.command.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A5687904(v1 + 64, a1);
}

uint64_t IMAPURL.command.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1A56CC6F8(a1, v1 + 64);
}

uint64_t sub_1A56CC6F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A90D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

double (*IMAPURL.command.modify())(_QWORD)
{
  return nullsub_1;
}

void *IMAPURL.init(server:query:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  char v8;
  _BYTE v10[192];
  _BYTE v11[192];
  _OWORD __src[16];

  sub_1A56879A8(a2, (uint64_t)v10);
  sub_1A56879A8((uint64_t)v10, (uint64_t)v11);
  v6 = *(_OWORD *)(a1 + 16);
  v5 = *(_OWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 48);
  v8 = *(_BYTE *)(a1 + 56);
  __src[0] = *(_OWORD *)a1;
  __src[1] = v6;
  __src[2] = v5;
  *(_QWORD *)&__src[3] = v7;
  BYTE8(__src[3]) = v8 & 1;
  sub_1A56879A8((uint64_t)v11, (uint64_t)&__src[4]);
  return memcpy(a3, __src, 0x100uLL);
}

_QWORD *IMAPURL.hash(into:)(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  _QWORD v5[24];
  _OWORD v6[2];
  _OWORD v7[2];
  _BYTE v8[192];
  _QWORD v9[24];
  _BYTE v10[192];

  v3 = v1[1];
  v6[0] = *v1;
  v6[1] = v3;
  v7[0] = v1[2];
  *(_OWORD *)((char *)v7 + 9) = *(_OWORD *)((char *)v1 + 41);
  sub_1A56CA764((uint64_t *)v6);
  IMAPServer.hash(into:)(a1);
  sub_1A56CA7A0((uint64_t *)v6);
  sub_1A56879A8((uint64_t)(v1 + 4), (uint64_t)v9);
  sub_1A56879A8((uint64_t)v9, (uint64_t)v10);
  if (sub_1A5687CDC((uint64_t)v10) == 1)
    return (_QWORD *)sub_1A594CE94();
  sub_1A56879A8((uint64_t)v9, (uint64_t)v5);
  sub_1A5687D00(v5, v8);
  sub_1A594CE94();
  sub_1A56880FC(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A56881F8);
  URLCommand.hash(into:)();
  return sub_1A56880FC(v9, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A56879F0);
}

BOOL static IMAPURL.__derived_struct_equals(_:_:)(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;
  __int128 v5;
  BOOL v6;
  _BYTE v8[192];
  _BYTE v9[192];
  _BYTE v10[192];
  _BYTE v11[192];
  uint64_t v12;
  _QWORD v13[24];
  _QWORD v14[24];
  _BYTE v15[192];
  _OWORD v16[2];
  _OWORD v17[2];
  _OWORD v18[2];
  _OWORD v19[2];
  _BYTE v20[192];

  v4 = a1[1];
  v18[0] = *a1;
  v18[1] = v4;
  v19[0] = a1[2];
  *(_OWORD *)((char *)v19 + 9) = *(_OWORD *)((char *)a1 + 41);
  v5 = a2[1];
  v16[0] = *a2;
  v16[1] = v5;
  v17[0] = a2[2];
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)a2 + 41);
  if ((static IMAPServer.__derived_struct_equals(_:_:)((uint64_t)v18, (uint64_t)v16) & 1) == 0)
    return 0;
  sub_1A56879A8((uint64_t)(a1 + 4), (uint64_t)v13);
  sub_1A56879A8((uint64_t)(a2 + 4), (uint64_t)v14);
  sub_1A56879A8((uint64_t)v13, (uint64_t)v15);
  if (sub_1A5687CDC((uint64_t)v15) == 1)
  {
    sub_1A56879A8((uint64_t)v14, (uint64_t)v11);
    if (sub_1A5687CDC((uint64_t)v11) == 1)
      return 1;
    goto LABEL_6;
  }
  sub_1A56879A8((uint64_t)v14, (uint64_t)v10);
  if (sub_1A5687CDC((uint64_t)v10) == 1)
  {
LABEL_6:
    sub_1A56879A8((uint64_t)v13, (uint64_t)v11);
    sub_1A56879A8((uint64_t)v14, (uint64_t)&v12);
    OUTLINED_FUNCTION_2_42(v13);
    OUTLINED_FUNCTION_2_42(v14);
    sub_1A5688360((uint64_t)v11);
    return 0;
  }
  sub_1A56879A8((uint64_t)v13, (uint64_t)v8);
  sub_1A5687D00(v8, v20);
  sub_1A56879A8((uint64_t)v14, (uint64_t)v9);
  sub_1A5687D00(v9, v11);
  OUTLINED_FUNCTION_2_42(v13);
  OUTLINED_FUNCTION_2_42(v14);
  v6 = static URLCommand.__derived_enum_equals(_:_:)(v20, v11);
  sub_1A56880FC(v14, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A56879F0);
  sub_1A56880FC(v13, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A56879F0);
  return v6;
}

uint64_t IMAPURL.hashValue.getter()
{
  _BYTE v1[72];

  sub_1A594CE64();
  IMAPURL.hash(into:)((uint64_t)v1);
  return sub_1A594CED0();
}

uint64_t sub_1A56CCABC()
{
  const void *v0;
  _BYTE v2[256];

  memcpy(v2, v0, sizeof(v2));
  return IMAPURL.hashValue.getter();
}

_QWORD *sub_1A56CCAF4(uint64_t a1)
{
  const void *v1;
  _BYTE v4[256];

  memcpy(v4, v1, sizeof(v4));
  return IMAPURL.hash(into:)(a1);
}

uint64_t sub_1A56CCB3C()
{
  const void *v0;
  _BYTE v2[72];
  _BYTE __dst[256];

  memcpy(__dst, v0, sizeof(__dst));
  sub_1A594CE64();
  IMAPURL.hash(into:)((uint64_t)v2);
  return sub_1A594CED0();
}

BOOL sub_1A56CCB98(void *__src, const void *a2)
{
  _OWORD v4[16];
  _OWORD __dst[16];

  memcpy(v4, __src, sizeof(v4));
  memcpy(__dst, a2, sizeof(__dst));
  return static IMAPURL.__derived_struct_equals(_:_:)(v4, __dst);
}

void sub_1A56CCBEC(_OWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  Swift::UInt32 v5;
  uint64_t v6;
  unint64_t v7;
  Swift::Int v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  int v13;
  BOOL v14;
  int v15;
  __int128 v16;
  uint64_t v17;
  BOOL v18;
  Swift::Int v19;
  Swift::Int v20;
  char v21;
  int v22;
  int v23;
  Swift::Int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  char v30;
  int v31;
  char v32;
  char v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::Int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE v65[192];
  _BYTE v66[192];
  _BYTE v67[192];
  _BYTE v68[200];
  _OWORD v69[2];
  _OWORD v70[2];
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  __int16 v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  _QWORD v81[2];
  int v82;
  char v83;
  int v84;
  __int128 v85;
  __int128 v86;
  char v87;
  char v88;

  v2 = v1;
  v4 = v1 + 8;
  v5 = *(_DWORD *)(v1 + 20);
  v6 = OUTLINED_FUNCTION_1_44();
  sub_1A56814E0(v6, v7, v4, v5);
  if ((v9 & 1) != 0)
  {
    v10 = OUTLINED_FUNCTION_1_44();
    v8 = OUTLINED_FUNCTION_1_25(v10, v11);
  }
  v12 = v8;
  v13 = *(_DWORD *)(v2 + 20);
  v14 = __CFADD__(v13, (_DWORD)v8);
  v15 = v13 + v8;
  if (v14)
  {
    __break(1u);
    goto LABEL_21;
  }
  *(_DWORD *)(v2 + 20) = v15;
  v16 = a1[1];
  v69[0] = *a1;
  v69[1] = v16;
  v70[0] = a1[2];
  *(_OWORD *)((char *)v70 + 9) = *(_OWORD *)((char *)a1 + 41);
  v17 = sub_1A56CC050((uint64_t)v69);
  v18 = __OFADD__(v12, v17);
  v19 = v12 + v17;
  if (v18)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  sub_1A56814E0(47, 0xE100000000000000, v4, *(_DWORD *)(v2 + 20));
  if ((v21 & 1) != 0)
    v20 = OUTLINED_FUNCTION_1_25(47, 0xE100000000000000);
  v22 = *(_DWORD *)(v2 + 20);
  v14 = __CFADD__(v22, (_DWORD)v20);
  v23 = v22 + v20;
  if (v14)
    goto LABEL_22;
  *(_DWORD *)(v2 + 20) = v23;
  v18 = __OFADD__(v19, v20);
  v24 = v19 + v20;
  if (v18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_1A56879A8((uint64_t)(a1 + 4), (uint64_t)v67);
  sub_1A56879A8((uint64_t)v67, (uint64_t)v68);
  if (sub_1A5687CDC((uint64_t)v68) == 1)
  {
    v25 = 0;
  }
  else
  {
    sub_1A56879A8((uint64_t)v67, (uint64_t)v65);
    sub_1A5687D00(v65, v66);
    v26 = sub_1A56CD968((uint64_t)v66);
    v27 = sub_1A56CD974((uint64_t)v66);
    v28 = *(_QWORD *)(v27 + 8);
    v29 = *(_DWORD *)(v27 + 16);
    v30 = *(_BYTE *)(v27 + 20);
    if (v26 == 1)
    {
      v58 = v24;
      v31 = *(_DWORD *)(v27 + 24);
      v32 = *(_BYTE *)(v27 + 64);
      v33 = *(_BYTE *)(v27 + 65);
      v81[0] = *(_QWORD *)v27;
      v81[1] = v28;
      v82 = v29;
      v83 = v30;
      v84 = v31;
      v34 = *(_OWORD *)(v27 + 48);
      v85 = *(_OWORD *)(v27 + 32);
      v86 = v34;
      v87 = v32;
      v88 = v33;
      v35 = *(_QWORD *)(v27 + 72);
      v36 = *(_QWORD *)(v27 + 80);
      v37 = *(_QWORD *)(v27 + 88);
      v38 = *(_QWORD *)(v27 + 96);
      v39 = *(_QWORD *)(v27 + 104);
      v63 = *(_QWORD *)(v27 + 120);
      v64 = *(_QWORD *)(v27 + 112);
      v61 = *(_QWORD *)(v27 + 136);
      v62 = *(_QWORD *)(v27 + 128);
      v59 = *(_QWORD *)(v27 + 152);
      v60 = *(_QWORD *)(v27 + 144);
      v40 = *(void **)(v27 + 168);
      v57 = *(_QWORD *)(v27 + 160);
      v41 = *(void **)(v27 + 184);
      v56 = *(_QWORD *)(v27 + 176);
      swift_retain();
      v42 = swift_retain();
      OUTLINED_FUNCTION_0_62(v42, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5688168);
      sub_1A56DF6CC((uint64_t)v81);
      v44 = v43;
      if (v40)
      {
        v54 = v43;
        v71 = v35;
        v72 = v36;
        v73 = v37;
        *(_QWORD *)&v74 = v38;
        *((_QWORD *)&v74 + 1) = v39;
        v75 = v64;
        v76 = v63;
        v77 = v62 & 0x1FF;
        v78 = v61;
        v79 = v60;
        v80 = v59;
        swift_retain();
        swift_retain();
        sub_1A5688300(v35, v36, v37, v38, v39, v64, v63, v62, v61, v60, v59, v57, (uint64_t)v40);
        sub_1A5698D54((uint64_t)&v71);
        v55 = v45;
        sub_1A5699790(v57, v40, v56, v41);
        v47 = v46;
        sub_1A5687B8C(v35, v36, v37, v38, v39, v64, v63, v62, v61, v60, v59, v57, (uint64_t)v40);
        swift_release();
        swift_release();
        swift_release();
        v48 = swift_release();
        OUTLINED_FUNCTION_0_62(v48, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A56879F0);
        v49 = v55 + v47;
        if (__OFADD__(v55, v47))
        {
LABEL_26:
          __break(1u);
          return;
        }
        v44 = v54;
      }
      else
      {
        swift_release();
        v53 = swift_release();
        OUTLINED_FUNCTION_0_62(v53, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A56879F0);
        v49 = 0;
      }
      v24 = v58;
      v25 = v44 + v49;
      if (__OFADD__(v44, v49))
      {
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
    }
    else
    {
      v71 = *(_QWORD *)v27;
      v72 = v28;
      LODWORD(v73) = v29;
      BYTE4(v73) = v30;
      v74 = *(_OWORD *)(v27 + 24);
      swift_retain();
      v50 = swift_retain();
      OUTLINED_FUNCTION_0_62(v50, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5688168);
      sub_1A56C232C((uint64_t)&v71);
      v25 = v51;
      swift_release();
      v52 = swift_release();
      OUTLINED_FUNCTION_0_62(v52, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A56879F0);
    }
  }
  if (__OFADD__(v24, v25))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
}

unint64_t sub_1A56CD008()
{
  unint64_t result;

  result = qword_1EE7A9840;
  if (!qword_1EE7A9840)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for IMAPURL, &type metadata for IMAPURL);
    atomic_store(result, (unint64_t *)&qword_1EE7A9840);
  }
  return result;
}

uint64_t destroy for IMAPURL(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  if (*(_QWORD *)(a1 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 24) != 1)
      swift_bridgeObjectRelease();
  }
  result = swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(a1 + 80);
  v4 = *(_QWORD *)(a1 + 128);
  if (v3 < 0xFFFFFFFE00000000 || (v4 & 0xFFFFFFFFFFFFFE00) != 0x200)
    return sub_1A5687A80(*(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), v3, *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), v4, *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), *(_QWORD *)(a1 + 160), *(_QWORD *)(a1 + 168), *(_QWORD *)(a1 + 176), *(_QWORD *)(a1 + 184), *(_QWORD *)(a1 + 192), *(_QWORD *)(a1 + 200), *(_QWORD *)(a1 + 208),
             *(_OWORD *)(a1 + 216),
             *(_QWORD *)(a1 + 224),
             *(_QWORD *)(a1 + 232));
  return result;
}

uint64_t initializeWithCopy for IMAPURL(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v4 = *(_QWORD *)(a2 + 8);
  if (v4 == 1)
  {
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    v6 = (_OWORD *)(a2 + 16);
    v7 = *(_QWORD *)(a2 + 24);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v7 == 1)
    {
      *(_OWORD *)(a1 + 16) = *v6;
    }
    else
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)v6;
      *(_QWORD *)(a1 + 24) = v7;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
  }
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v9 = *(_QWORD *)(a2 + 80);
  v10 = *(_QWORD *)(a2 + 128);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v9 >= 0xFFFFFFFE00000000 && (v10 & 0xFFFFFFFFFFFFFE00) == 0x200)
  {
    memcpy((void *)(a1 + 64), (const void *)(a2 + 64), 0xC0uLL);
  }
  else
  {
    v11 = *(_QWORD *)(a2 + 88);
    v12 = *(_QWORD *)(a2 + 96);
    v13 = *(_QWORD *)(a2 + 104);
    v14 = *(_QWORD *)(a2 + 112);
    v15 = *(_QWORD *)(a2 + 120);
    v21 = *(_QWORD *)(a2 + 136);
    v22 = *(_QWORD *)(a2 + 144);
    v23 = *(_QWORD *)(a2 + 152);
    v24 = *(_QWORD *)(a2 + 160);
    v25 = *(_QWORD *)(a2 + 168);
    v26 = *(_QWORD *)(a2 + 176);
    v27 = *(_QWORD *)(a2 + 184);
    v28 = *(_QWORD *)(a2 + 192);
    v29 = *(_QWORD *)(a2 + 200);
    v30 = *(_QWORD *)(a2 + 208);
    v31 = *(_QWORD *)(a2 + 216);
    v32 = *(_QWORD *)(a2 + 224);
    v33 = *(_QWORD *)(a2 + 232);
    v34 = *(_QWORD *)(a2 + 240);
    v35 = *(_QWORD *)(a2 + 248);
    v16 = *(_QWORD *)(a2 + 64);
    v17 = *(_QWORD *)(a2 + 72);
    v18 = v13;
    v19 = v14;
    sub_1A56881F8(v16, v17, v9, v11, v12, v13, v14, v15, v10, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30,
      v31,
      v32,
      v33);
    *(_QWORD *)(a1 + 64) = v16;
    *(_QWORD *)(a1 + 72) = v17;
    *(_QWORD *)(a1 + 80) = v9;
    *(_QWORD *)(a1 + 88) = v11;
    *(_QWORD *)(a1 + 96) = v12;
    *(_QWORD *)(a1 + 104) = v18;
    *(_QWORD *)(a1 + 112) = v19;
    *(_QWORD *)(a1 + 120) = v15;
    *(_QWORD *)(a1 + 128) = v10;
    *(_QWORD *)(a1 + 136) = v21;
    *(_QWORD *)(a1 + 144) = v22;
    *(_QWORD *)(a1 + 152) = v23;
    *(_QWORD *)(a1 + 160) = v24;
    *(_QWORD *)(a1 + 168) = v25;
    *(_QWORD *)(a1 + 176) = v26;
    *(_QWORD *)(a1 + 184) = v27;
    *(_QWORD *)(a1 + 192) = v28;
    *(_QWORD *)(a1 + 200) = v29;
    *(_QWORD *)(a1 + 208) = v30;
    *(_QWORD *)(a1 + 216) = v31;
    *(_QWORD *)(a1 + 224) = v32;
    *(_QWORD *)(a1 + 232) = v33;
    *(_QWORD *)(a1 + 240) = v34;
    *(_QWORD *)(a1 + 248) = v35;
  }
  return a1;
}

uint64_t assignWithCopy for IMAPURL(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  v4 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8) == 1)
  {
    if (v4 == 1)
    {
      v5 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v5;
      goto LABEL_15;
    }
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    v7 = *(_QWORD *)(a2 + 24);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v7 == 1)
    {
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      goto LABEL_15;
    }
    goto LABEL_10;
  }
  if (v4 == 1)
  {
    sub_1A56CAE04(a1);
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    goto LABEL_15;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 24) == 1)
  {
    if (v8 != 1)
    {
LABEL_10:
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v8 == 1)
  {
    sub_1A56CADD0(a1 + 16);
LABEL_13:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    goto LABEL_15;
  }
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
LABEL_15:
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v9;
  v10 = *(_QWORD *)(a2 + 80);
  v11 = *(_QWORD *)(a2 + 128);
  v13 = v10 > 0xFFFFFFFDFFFFFFFFLL && (v11 & 0xFFFFFFFFFFFFFE00) == 512;
  if (*(_QWORD *)(a1 + 80) < 0xFFFFFFFE00000000 || (*(_QWORD *)(a1 + 128) & 0xFFFFFFFFFFFFFE00) != 0x200)
  {
    if (!v13)
    {
      v23 = *(_QWORD *)(a2 + 64);
      v24 = *(_QWORD *)(a2 + 72);
      v25 = *(_QWORD *)(a2 + 88);
      v26 = *(_QWORD *)(a2 + 96);
      v27 = *(_QWORD *)(a2 + 112);
      v28 = *(_QWORD *)(a2 + 120);
      v53 = *(_QWORD *)(a2 + 136);
      v55 = *(_QWORD *)(a2 + 144);
      v57 = *(_QWORD *)(a2 + 152);
      v59 = *(_QWORD *)(a2 + 160);
      v61 = *(_QWORD *)(a2 + 168);
      v63 = *(_QWORD *)(a2 + 176);
      v65 = *(_QWORD *)(a2 + 184);
      v67 = *(_QWORD *)(a2 + 192);
      v69 = *(_QWORD *)(a2 + 200);
      v71 = *(_QWORD *)(a2 + 208);
      v73 = *(_QWORD *)(a2 + 216);
      v75 = *(_QWORD *)(a2 + 224);
      v77 = *(_QWORD *)(a2 + 232);
      v79 = *(_QWORD *)(a2 + 240);
      v81 = *(_QWORD *)(a2 + 248);
      v29 = *(_QWORD *)(a2 + 104);
      sub_1A56881F8(v23, v24, v10, v25, v26, v29, v27, v28, v11, v53, v55, v57, v59, v61, v63, v65, v67, v69, v71,
        v73,
        v75,
        v77);
      v30 = *(_QWORD *)(a1 + 64);
      v31 = *(_QWORD *)(a1 + 72);
      *(_QWORD *)(a1 + 64) = v23;
      *(_QWORD *)(a1 + 72) = v24;
      v32 = *(_QWORD *)(a1 + 80);
      v33 = *(_QWORD *)(a1 + 88);
      *(_QWORD *)(a1 + 80) = v10;
      *(_QWORD *)(a1 + 88) = v25;
      v34 = *(_QWORD *)(a1 + 96);
      v35 = *(_QWORD *)(a1 + 104);
      *(_QWORD *)(a1 + 96) = v26;
      *(_QWORD *)(a1 + 104) = v29;
      v36 = *(_QWORD *)(a1 + 112);
      v37 = *(_QWORD *)(a1 + 120);
      *(_QWORD *)(a1 + 112) = v27;
      *(_QWORD *)(a1 + 120) = v28;
      v38 = *(_OWORD *)(a1 + 128);
      v39 = *(_OWORD *)(a1 + 144);
      *(_QWORD *)(a1 + 128) = v11;
      *(_QWORD *)(a1 + 136) = v53;
      *(_QWORD *)(a1 + 144) = v55;
      *(_QWORD *)(a1 + 152) = v57;
      v40 = *(_OWORD *)(a1 + 160);
      v41 = *(_OWORD *)(a1 + 176);
      *(_QWORD *)(a1 + 160) = v59;
      *(_QWORD *)(a1 + 168) = v61;
      *(_QWORD *)(a1 + 176) = v63;
      *(_QWORD *)(a1 + 184) = v65;
      v42 = *(_OWORD *)(a1 + 192);
      v43 = *(_OWORD *)(a1 + 208);
      *(_QWORD *)(a1 + 192) = v67;
      *(_QWORD *)(a1 + 200) = v69;
      *(_QWORD *)(a1 + 208) = v71;
      *(_QWORD *)(a1 + 216) = v73;
      v44 = *(_OWORD *)(a1 + 224);
      *(_QWORD *)(a1 + 224) = v75;
      *(_QWORD *)(a1 + 232) = v77;
      *(_QWORD *)(a1 + 240) = v79;
      *(_QWORD *)(a1 + 248) = v81;
      sub_1A5687A80(v30, v31, v32, v33, v34, v35, v36, v37, v38, *((uint64_t *)&v38 + 1), v39, *((uint64_t *)&v39 + 1), v40, *((uint64_t *)&v40 + 1), v41, *((uint64_t *)&v41 + 1), v42, *((uint64_t *)&v42 + 1), v43,
        BYTE8(v43),
        v44,
        *((uint64_t *)&v44 + 1));
      return a1;
    }
    sub_1A5688A24((uint64_t *)(a1 + 64));
    goto LABEL_27;
  }
  if (v13)
  {
LABEL_27:
    memcpy((void *)(a1 + 64), (const void *)(a2 + 64), 0xC0uLL);
    return a1;
  }
  v14 = *(_QWORD *)(a2 + 88);
  v15 = *(_QWORD *)(a2 + 96);
  v16 = *(_QWORD *)(a2 + 104);
  v17 = *(_QWORD *)(a2 + 112);
  v18 = *(_QWORD *)(a2 + 120);
  v52 = *(_QWORD *)(a2 + 136);
  v54 = *(_QWORD *)(a2 + 144);
  v56 = *(_QWORD *)(a2 + 152);
  v58 = *(_QWORD *)(a2 + 160);
  v60 = *(_QWORD *)(a2 + 168);
  v62 = *(_QWORD *)(a2 + 176);
  v64 = *(_QWORD *)(a2 + 184);
  v66 = *(_QWORD *)(a2 + 192);
  v68 = *(_QWORD *)(a2 + 200);
  v70 = *(_QWORD *)(a2 + 208);
  v72 = *(_QWORD *)(a2 + 216);
  v74 = *(_QWORD *)(a2 + 224);
  v76 = *(_QWORD *)(a2 + 232);
  v78 = *(_QWORD *)(a2 + 240);
  v80 = *(_QWORD *)(a2 + 248);
  v51 = *(_OWORD *)(a2 + 224);
  v50 = *(_OWORD *)(a2 + 208);
  v49 = *(_OWORD *)(a2 + 192);
  v48 = *(_OWORD *)(a2 + 176);
  v47 = *(_OWORD *)(a2 + 160);
  v46 = *(_OWORD *)(a2 + 144);
  v19 = *(_QWORD *)(a2 + 64);
  v20 = *(_QWORD *)(a2 + 72);
  v21 = v16;
  v22 = v17;
  sub_1A56881F8(v19, v20, v10, v14, v15, v16, v17, v18, v11, v52, v46, *((uint64_t *)&v46 + 1), v47, *((uint64_t *)&v47 + 1), v48, *((uint64_t *)&v48 + 1), v49, *((uint64_t *)&v49 + 1), v50,
    BYTE8(v50),
    v51,
    *((uint64_t *)&v51 + 1));
  *(_QWORD *)(a1 + 64) = v19;
  *(_QWORD *)(a1 + 72) = v20;
  *(_QWORD *)(a1 + 80) = v10;
  *(_QWORD *)(a1 + 88) = v14;
  *(_QWORD *)(a1 + 96) = v15;
  *(_QWORD *)(a1 + 104) = v21;
  *(_QWORD *)(a1 + 112) = v22;
  *(_QWORD *)(a1 + 120) = v18;
  *(_QWORD *)(a1 + 128) = v11;
  *(_QWORD *)(a1 + 136) = v52;
  *(_QWORD *)(a1 + 144) = v54;
  *(_QWORD *)(a1 + 152) = v56;
  *(_QWORD *)(a1 + 160) = v58;
  *(_QWORD *)(a1 + 168) = v60;
  *(_QWORD *)(a1 + 176) = v62;
  *(_QWORD *)(a1 + 184) = v64;
  *(_QWORD *)(a1 + 192) = v66;
  *(_QWORD *)(a1 + 200) = v68;
  *(_QWORD *)(a1 + 208) = v70;
  *(_QWORD *)(a1 + 216) = v72;
  *(_QWORD *)(a1 + 224) = v74;
  *(_QWORD *)(a1 + 232) = v76;
  *(_QWORD *)(a1 + 240) = v78;
  *(_QWORD *)(a1 + 248) = v80;
  return a1;
}

uint64_t assignWithTake for IMAPURL(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;

  if (*(_QWORD *)(a1 + 8) == 1)
    goto LABEL_4;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 == 1)
  {
    sub_1A56CAE04(a1);
LABEL_4:
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    goto LABEL_10;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v6 = (_QWORD *)(a2 + 16);
  if (*(_QWORD *)(a1 + 24) != 1)
  {
    v7 = *(_QWORD *)(a2 + 24);
    if (v7 != 1)
    {
      *(_QWORD *)(a1 + 16) = *v6;
      *(_QWORD *)(a1 + 24) = v7;
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    sub_1A56CADD0(a1 + 16);
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)v6;
LABEL_10:
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v9 = *(_QWORD *)(a1 + 80);
  v10 = *(_QWORD *)(a1 + 128);
  v11 = *(_QWORD *)(a2 + 80);
  v12 = *(_QWORD *)(a2 + 128);
  if (v9 < 0xFFFFFFFE00000000 || (v10 & 0xFFFFFFFFFFFFFE00) != 0x200)
  {
    if (v11 < 0xFFFFFFFE00000000 || (v12 & 0xFFFFFFFFFFFFFE00) != 0x200)
    {
      v13 = *(_QWORD *)(a2 + 120);
      v14 = *(_QWORD *)(a2 + 248);
      v15 = *(_QWORD *)(a1 + 64);
      v16 = *(_QWORD *)(a1 + 72);
      v17 = *(_QWORD *)(a1 + 88);
      v18 = *(_QWORD *)(a1 + 96);
      v19 = *(_QWORD *)(a1 + 104);
      v20 = *(_QWORD *)(a1 + 112);
      v21 = *(_QWORD *)(a1 + 120);
      v22 = *(_OWORD *)(a1 + 136);
      v23 = *(_OWORD *)(a1 + 152);
      v24 = *(_OWORD *)(a1 + 168);
      v25 = *(_OWORD *)(a1 + 184);
      v26 = *(_OWORD *)(a1 + 200);
      v27 = *(_OWORD *)(a1 + 216);
      v28 = *(_OWORD *)(a1 + 232);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 80) = v11;
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 120) = v13;
      *(_QWORD *)(a1 + 128) = v12;
      *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
      *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
      *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
      *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
      *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
      *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
      *(_QWORD *)(a1 + 248) = v14;
      sub_1A5687A80(v15, v16, v9, v17, v18, v19, v20, v21, v10, v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25, *((uint64_t *)&v25 + 1), v26, *((uint64_t *)&v26 + 1),
        v27,
        *((uint64_t *)&v27 + 1),
        v28);
      return a1;
    }
    sub_1A5688A24((uint64_t *)(a1 + 64));
  }
  memcpy((void *)(a1 + 64), (const void *)(a2 + 64), 0xC0uLL);
  return a1;
}

ValueMetadata *type metadata accessor for IMAPURL()
{
  return &type metadata for IMAPURL;
}

uint64_t sub_1A56CD968(uint64_t a1)
{
  return *(_QWORD *)(a1 + 64) >> 63;
}

uint64_t sub_1A56CD974(uint64_t result)
{
  *(_QWORD *)(result + 64) &= ~0x8000000000000000;
  return result;
}

_QWORD *OUTLINED_FUNCTION_0_62(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  return sub_1A56880FC(&STACK[0x268], a2);
}

uint64_t OUTLINED_FUNCTION_1_44()
{
  return 0x2F2F3A70616D69;
}

_QWORD *OUTLINED_FUNCTION_2_42(_QWORD *a1)
{
  void (*v1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);

  return sub_1A56880FC(a1, v1);
}

uint64_t IMAPURLAuthenticationMechanism.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a3)
    return sub_1A594CE88();
  sub_1A594CE88();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_0_23();
  return swift_bridgeObjectRelease();
}

uint64_t static IMAPURLAuthenticationMechanism.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a2)
    return a4 == 0;
  if (!a4)
    return 0;
  if (a1 == a3 && a2 == a4)
    return 1;
  else
    return sub_1A594CD38();
}

uint64_t IMAPURLAuthenticationMechanism.hashValue.getter(uint64_t a1, uint64_t a2)
{
  sub_1A594CE64();
  sub_1A594CE88();
  if (a2)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    OUTLINED_FUNCTION_0_23();
    swift_bridgeObjectRelease();
  }
  return sub_1A594CED0();
}

uint64_t sub_1A56CDAC0()
{
  uint64_t *v0;

  return IMAPURLAuthenticationMechanism.hashValue.getter(*v0, v0[1]);
}

uint64_t sub_1A56CDAC8(uint64_t a1)
{
  uint64_t *v1;

  return IMAPURLAuthenticationMechanism.hash(into:)(a1, *v1, v1[1]);
}

uint64_t sub_1A56CDAD0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_1A594CE64();
  sub_1A594CE88();
  if (v1)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594B1D8();
    swift_bridgeObjectRelease();
  }
  return sub_1A594CED0();
}

unint64_t sub_1A56CDB4C()
{
  unint64_t result;

  result = qword_1EE7A9848;
  if (!qword_1EE7A9848)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for IMAPURLAuthenticationMechanism, &type metadata for IMAPURLAuthenticationMechanism);
    atomic_store(result, (unint64_t *)&qword_1EE7A9848);
  }
  return result;
}

uint64_t sub_1A56CDB88(uint64_t *a1, uint64_t *a2)
{
  return static IMAPURLAuthenticationMechanism.__derived_enum_equals(_:_:)(*a1, a1[1], *a2, a2[1]);
}

ValueMetadata *type metadata accessor for IMAPURLAuthenticationMechanism()
{
  return &type metadata for IMAPURLAuthenticationMechanism;
}

void sub_1A56CDBAC(uint64_t a1, void *a2)
{
  uint64_t v2;
  Swift::Int v5;
  uint64_t v6;
  unint64_t v7;
  Swift::Int v8;
  char v9;
  Swift::String v10;
  Swift::Int v11;
  int v12;
  Swift::Int v13;
  Swift::Int v14;
  Swift::Int v15;
  char v16;
  char v17;
  Swift::String v18;
  int v19;
  BOOL v20;
  int v21;
  Swift::Int v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  char v26;
  Swift::String v27;
  int v28;
  int v29;

  if (!a2)
    goto LABEL_11;
  v5 = *(unsigned int *)(v2 + 20);
  v6 = OUTLINED_FUNCTION_1_45();
  sub_1A56814E0(v6, v7, v2 + 8, v5);
  if ((v9 & 1) != 0)
  {
    v10._countAndFlagsBits = OUTLINED_FUNCTION_1_45();
    v8 = ByteBuffer._setStringSlowpath(_:at:)(v10, v5);
  }
  v11 = v8;
  v12 = *(_DWORD *)(v2 + 20);
  v13 = (v12 + v8);
  if (__CFADD__(v12, (_DWORD)v8))
  {
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    return;
  }
  *(_DWORD *)(v2 + 20) = v13;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A56814E0(a1, (unint64_t)a2, v2 + 8, v13);
  v15 = v14;
  v17 = v16;
  swift_bridgeObjectRelease();
  if ((v17 & 1) != 0)
  {
    v18._countAndFlagsBits = a1;
    v18._object = a2;
    v15 = ByteBuffer._setStringSlowpath(_:at:)(v18, v13);
  }
  v19 = *(_DWORD *)(v2 + 20);
  v20 = __CFADD__(v19, (_DWORD)v15);
  v21 = v19 + v15;
  if (v20)
    goto LABEL_16;
  *(_DWORD *)(v2 + 20) = v21;
  if (__OFADD__(v11, v15))
  {
    __break(1u);
LABEL_11:
    v22 = *(unsigned int *)(v2 + 20);
    v23 = OUTLINED_FUNCTION_0_63();
    sub_1A56814E0(v23, v24, v2 + 8, v22);
    if ((v26 & 1) != 0)
    {
      v27._countAndFlagsBits = OUTLINED_FUNCTION_0_63();
      v25 = ByteBuffer._setStringSlowpath(_:at:)(v27, v22);
    }
    v28 = *(_DWORD *)(v2 + 20);
    v20 = __CFADD__(v28, v25);
    v29 = v28 + v25;
    if (!v20)
    {
      *(_DWORD *)(v2 + 20) = v29;
      return;
    }
    goto LABEL_17;
  }
}

uint64_t OUTLINED_FUNCTION_0_63()
{
  return 0x2A3D485455413BLL;
}

uint64_t OUTLINED_FUNCTION_1_45()
{
  return 0x3D485455413BLL;
}

uint64_t sub_1A56CDD08()
{
  if (qword_1EE796BD0 != -1)
    swift_once();
  static InitialResponse.empty = static ByteBufferAllocator.zeroCapacityWithDefaultAllocator;
  qword_1EE7F9F28 = qword_1EE7F9218;
  dword_1EE7F9F30 = dword_1EE7F9220;
  word_1EE7F9F34 = word_1EE7F9224;
  byte_1EE7F9F36 = byte_1EE7F9226;
  return swift_retain();
}

uint64_t *InitialResponse.empty.unsafeMutableAddressor()
{
  if (qword_1EE7A9090 != -1)
    swift_once();
  return &static InitialResponse.empty;
}

uint64_t static InitialResponse.empty.getter()
{
  if (qword_1EE7A9090 != -1)
    swift_once();
  OUTLINED_FUNCTION_176();
  return swift_retain();
}

uint64_t static InitialResponse.empty.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_1EE7A9090 != -1)
    swift_once();
  swift_beginAccess();
  static InitialResponse.empty = a1;
  qword_1EE7F9F28 = a2;
  dword_1EE7F9F30 = a3;
  word_1EE7F9F34 = WORD2(a3);
  byte_1EE7F9F36 = BYTE6(a3);
  return swift_release();
}

uint64_t (*static InitialResponse.empty.modify())()
{
  if (qword_1EE7A9090 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t InitialResponse.data.getter()
{
  return swift_retain();
}

uint64_t InitialResponse.data.setter(uint64_t a1, unint64_t a2, unint64_t a3)
{
  uint64_t v3;
  int v4;
  int v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t result;

  v4 = a3;
  v5 = a2;
  v7 = HIDWORD(a2);
  v8 = HIDWORD(a3);
  v9 = HIWORD(a3);
  result = swift_release();
  *(_QWORD *)v3 = a1;
  *(_DWORD *)(v3 + 8) = v5;
  *(_DWORD *)(v3 + 12) = v7;
  *(_DWORD *)(v3 + 16) = v4;
  *(_WORD *)(v3 + 20) = v8;
  *(_BYTE *)(v3 + 22) = v9;
  return result;
}

double (*InitialResponse.data.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t InitialResponse.hash(into:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unsigned int v3;
  unint64_t v4;
  uint64_t result;

  v3 = a3;
  v4 = HIDWORD(a3);
  result = OUTLINED_FUNCTION_176();
  if (v4 >= v3)
    return sub_1A594CE70();
  __break(1u);
  return result;
}

uint64_t static InitialResponse.__derived_struct_equals(_:_:)(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  BOOL v6;

  if (HIDWORD(a2) < a2)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (HIDWORD(a5) < a5)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  result = HIDWORD(a2) - (_DWORD)a2 == HIDWORD(a5) - (_DWORD)a5
        && ((a3 & 0xFFFFFFFFFFFFFFLL) == (a6 & 0xFFFFFFFFFFFFFFLL) ? (v6 = result == a4) : (v6 = 0),
            v6 || (swift_retain(), (sub_1A566B918() & 1) != 0));
  return result;
}

uint64_t InitialResponse.hashValue.getter(uint64_t a1, unint64_t a2)
{
  unsigned int v2;
  unint64_t v3;
  uint64_t result;

  v2 = a2;
  v3 = HIDWORD(a2);
  sub_1A594CE64();
  result = OUTLINED_FUNCTION_176();
  if (v3 < v2)
  {
    __break(1u);
  }
  else
  {
    sub_1A594CE70();
    return sub_1A594CED0();
  }
  return result;
}

uint64_t sub_1A56CE1B8()
{
  uint64_t v0;

  return InitialResponse.hashValue.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
}

uint64_t sub_1A56CE1D4(uint64_t a1)
{
  uint64_t v1;

  return InitialResponse.hash(into:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8));
}

unint64_t sub_1A56CE1F4()
{
  unint64_t result;

  result = qword_1EE7A9850;
  if (!qword_1EE7A9850)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for InitialResponse, &type metadata for InitialResponse);
    atomic_store(result, (unint64_t *)&qword_1EE7A9850);
  }
  return result;
}

uint64_t sub_1A56CE230(uint64_t a1, uint64_t a2)
{
  return static InitialResponse.__derived_struct_equals(_:_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned __int16 *)(a1 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 22) << 48), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(unsigned int *)(a2 + 16) | ((unint64_t)*(unsigned __int16 *)(a2 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a2 + 22) << 48));
}

ValueMetadata *type metadata accessor for InitialResponse()
{
  return &type metadata for InitialResponse;
}

uint64_t InternetMessageDate.hash(into:)()
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_2_22();
  return swift_bridgeObjectRelease();
}

uint64_t static InternetMessageDate.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4)
    return 1;
  else
    return sub_1A594CD38();
}

uint64_t InternetMessageDate.hashValue.getter()
{
  sub_1A594CE64();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_2_22();
  swift_bridgeObjectRelease();
  return sub_1A594CED0();
}

uint64_t sub_1A56CE32C()
{
  return InternetMessageDate.hashValue.getter();
}

uint64_t sub_1A56CE334()
{
  return InternetMessageDate.hash(into:)();
}

uint64_t sub_1A56CE33C(uint64_t *a1, uint64_t *a2)
{
  return static InternetMessageDate.__derived_struct_equals(_:_:)(*a1, a1[1], *a2, a2[1]);
}

unint64_t sub_1A56CE35C()
{
  unint64_t result;

  result = qword_1EE7A9858;
  if (!qword_1EE7A9858)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for InternetMessageDate, &type metadata for InternetMessageDate);
    atomic_store(result, (unint64_t *)&qword_1EE7A9858);
  }
  return result;
}

unint64_t sub_1A56CE39C()
{
  unint64_t result;

  result = qword_1EE7A9860;
  if (!qword_1EE7A9860)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for InternetMessageDate, &type metadata for InternetMessageDate);
    atomic_store(result, (unint64_t *)&qword_1EE7A9860);
  }
  return result;
}

uint64_t sub_1A56CE3D8@<X0>(Swift::String *a1@<X0>, NIOIMAPCore2::InternetMessageDate *a2@<X8>)
{
  uint64_t result;
  NIOIMAPCore2::InternetMessageDate v4;

  v4 = InternetMessageDate.init(stringLiteral:)(*a1);
  result = v4.value._countAndFlagsBits;
  *a2 = v4;
  return result;
}

unint64_t sub_1A56CE408()
{
  unint64_t result;

  result = qword_1EE7A9868[0];
  if (!qword_1EE7A9868[0])
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for InternetMessageDate, &type metadata for InternetMessageDate);
    atomic_store(result, qword_1EE7A9868);
  }
  return result;
}

ValueMetadata *type metadata accessor for InternetMessageDate()
{
  return &type metadata for InternetMessageDate;
}

void KeyValue.init(key:value:)(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
  type metadata accessor for KeyValue();
}

uint64_t sub_1A56CE4B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v3 + *(int *)(a1 + 52), v2, v1);
}

void type metadata accessor for KeyValue()
{
  JUMPOUT(0x1A85B17CCLL);
}

uint64_t static KeyValue.__derived_struct_equals(_:_:)()
{
  if ((sub_1A594B37C() & 1) != 0)
    type metadata accessor for KeyValue();
  return 0;
}

uint64_t KeyValue.key.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_0_64(*(_QWORD *)(a1 + 16), a2);
}

uint64_t KeyValue.key.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_1_46(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40), a1);
}

double (*KeyValue.key.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t KeyValue.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_0_64(*(_QWORD *)(a1 + 24), a2);
}

uint64_t KeyValue.value.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_1_46(v2 + *(int *)(a2 + 52), *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 40), a1);
}

double (*KeyValue.value.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t KeyValue.hash(into:)()
{
  sub_1A594B154();
  return sub_1A594B154();
}

uint64_t KeyValue.hashValue.getter()
{
  sub_1A594CE64();
  KeyValue.hash(into:)();
  return sub_1A594CED0();
}

uint64_t sub_1A56CE690()
{
  sub_1A594CE64();
  KeyValue.hash(into:)();
  return sub_1A594CED0();
}

void sub_1A56CE6D0()
{
  JUMPOUT(0x1A85B1874);
}

uint64_t sub_1A56CE6E0()
{
  return static KeyValue.__derived_struct_equals(_:_:)();
}

uint64_t sub_1A56CE6F0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1A56CE77C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = v8;
  v10 = *(_QWORD *)(v6 + 64) + v8;
  v11 = *(_DWORD *)(v6 + 80) | v8;
  v12 = v11;
  v13 = v11 & 0x100000;
  if (v12 > 7 || v13 != 0 || (v10 & (unint64_t)~v9) + *(_QWORD *)(v7 + 64) > 0x18)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v12 + 16) & ~v12));
    swift_retain();
  }
  else
  {
    v17 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v10) & v17, ((unint64_t)a2 + v10) & v17, v5);
  }
  return v4;
}

uint64_t sub_1A56CE84C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((*(_QWORD *)(v4 + 64) + a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
}

uint64_t sub_1A56CE8A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1A56CE910(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1A56CE97C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1A56CE9E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1A56CEA54(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(v6 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = v12 + v13;
  v15 = a2 - v11;
  if (a2 <= v11)
    goto LABEL_23;
  v16 = (v14 & ~v13) + *(_QWORD *)(v9 + 64);
  v17 = 8 * v16;
  if (v16 <= 3)
  {
    v19 = ((v15 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      v18 = *(_DWORD *)(a1 + v16);
      if (!v18)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 > 0xFF)
    {
      v18 = *(unsigned __int16 *)(a1 + v16);
      if (!*(_WORD *)(a1 + v16))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v8 >= v10)
        {
          v10 = v8;
        }
        else
        {
          a1 = (v14 + a1) & ~v13;
          v5 = v6;
        }
        return __swift_getEnumTagSinglePayload(a1, v10, v5);
      }
      return 0;
    }
  }
  v18 = *(unsigned __int8 *)(a1 + v16);
  if (!*(_BYTE *)(a1 + v16))
    goto LABEL_23;
LABEL_14:
  v20 = (v18 - 1) << v17;
  if (v16 > 3)
    v20 = 0;
  if (!(_DWORD)v16)
    return v11 + v20 + 1;
  if (v16 <= 3)
    v21 = v16;
  else
    v21 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1A56CEB30 + 4 * byte_1A59B19E8[v21 - 1]))();
}

void sub_1A56CEBA4(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v12 = ((a3 - v7 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v12))
      {
        v10 = 4u;
      }
      else if (v12 >= 0x100)
      {
        v10 = 2;
      }
      else
      {
        v10 = v12 > 1;
      }
    }
    else
    {
      v10 = 1u;
    }
  }
  else
  {
    v10 = 0u;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v13 = v11 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v13;
          *((_BYTE *)a1 + 2) = BYTE2(v13);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v13;
        }
        else
        {
          *(_BYTE *)a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

uint64_t OUTLINED_FUNCTION_0_64@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a1 - 8) + 16))(a2);
}

uint64_t OUTLINED_FUNCTION_1_46@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X3>, uint64_t a3@<X8>)
{
  return a2(a1, a3);
}

uint64_t LastCommandMessageID.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16))(v10, v12, a2, v8);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v3) == 1)
    return sub_1A594CE88();
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v10, v3);
  sub_1A594CE88();
  sub_1A594B154();
  return OUTLINED_FUNCTION_1_47(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
}

uint64_t static LastCommandMessageID.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t CommandMessageID;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t TupleTypeMetadata2;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char v18;
  char v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t);
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;

  v26 = *(_QWORD *)(a3 - 8);
  v27 = a2;
  MEMORY[0x1E0C80A78](a1);
  v24 = v6;
  v25 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  CommandMessageID = type metadata accessor for LastCommandMessageID(0, v7, v6, v6);
  v9 = *(_QWORD *)(CommandMessageID - 8);
  MEMORY[0x1E0C80A78](CommandMessageID);
  v11 = (char *)&v24 - v10;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v13 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v15 = (char *)&v24 - v14;
  v17 = (char *)&v24 + *(int *)(v16 + 48) - v14;
  OUTLINED_FUNCTION_2_43((uint64_t)&v24 - v14, a1);
  OUTLINED_FUNCTION_2_43((uint64_t)v17, v27);
  OUTLINED_FUNCTION_0_65((uint64_t)v15);
  if (v19)
  {
    v18 = 1;
    OUTLINED_FUNCTION_0_65((uint64_t)v17);
    if (v19)
      goto LABEL_10;
    goto LABEL_9;
  }
  OUTLINED_FUNCTION_2_43((uint64_t)v11, (uint64_t)v15);
  OUTLINED_FUNCTION_0_65((uint64_t)v17);
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v11, a3);
LABEL_9:
    v18 = 0;
    v9 = v13;
    goto LABEL_10;
  }
  v21 = v25;
  v20 = v26;
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v25, v17, a3);
  v18 = sub_1A594B37C();
  v22 = *(void (**)(char *, uint64_t))(v20 + 8);
  v22(v21, a3);
  v22(v11, a3);
LABEL_10:
  OUTLINED_FUNCTION_1_47(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
  return v18 & 1;
}

uint64_t type metadata accessor for LastCommandMessageID(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LastCommandMessageID);
}

uint64_t LastCommandMessageID.hashValue.getter(uint64_t a1)
{
  _BYTE v3[72];

  sub_1A594CE64();
  LastCommandMessageID.hash(into:)((uint64_t)v3, a1);
  return sub_1A594CED0();
}

uint64_t sub_1A56CF0EC(uint64_t a1, uint64_t a2)
{
  _BYTE v4[72];

  sub_1A594CE64();
  LastCommandMessageID.hash(into:)((uint64_t)v4, a2);
  return sub_1A594CED0();
}

void sub_1A56CF12C()
{
  JUMPOUT(0x1A85B1874);
}

uint64_t sub_1A56CF13C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static LastCommandMessageID.__derived_enum_equals(_:_:)(a1, a2, *(_QWORD *)(a3 + 16));
}

uint64_t sub_1A56CF148()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1A56CF1A0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  if (*(_DWORD *)(v6 + 84))
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  if (*(_DWORD *)(v6 + 80) > 7u || (v7 & 0x100000) != 0 || v8 > 0x18)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v7 + 16) & ~(unint64_t)v7));
    swift_retain();
  }
  else if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, *(_QWORD *)(a3 + 16)))
  {
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
  }
  return a1;
}

uint64_t sub_1A56CF270(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a2 + 16);
  result = __swift_getEnumTagSinglePayload(a1, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return result;
}

void *sub_1A56CF2BC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int EnumTagSinglePayload;
  uint64_t v7;
  int v8;
  size_t v9;
  size_t v10;

  v5 = *(_QWORD *)(a3 + 16);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5);
  v7 = *(_QWORD *)(v5 - 8);
  if (EnumTagSinglePayload)
  {
    v8 = *(_DWORD *)(v7 + 84);
    v9 = *(_QWORD *)(v7 + 64);
    if (v8)
      v10 = v9;
    else
      v10 = v9 + 1;
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v5);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
  }
  return a1;
}

void *sub_1A56CF34C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int EnumTagSinglePayload;
  int v7;
  uint64_t v8;
  size_t v9;

  v5 = *(_QWORD *)(a3 + 16);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v5);
  v7 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5);
  v8 = *(_QWORD *)(v5 - 8);
  if (EnumTagSinglePayload)
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(a1, a2, v5);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
      return a1;
    }
  }
  else
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 24))(a1, a2, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v8 + 84))
    v9 = *(_QWORD *)(v8 + 64);
  else
    v9 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(a1, a2, v9);
  return a1;
}

void *sub_1A56CF424(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int EnumTagSinglePayload;
  uint64_t v7;
  int v8;
  size_t v9;
  size_t v10;

  v5 = *(_QWORD *)(a3 + 16);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5);
  v7 = *(_QWORD *)(v5 - 8);
  if (EnumTagSinglePayload)
  {
    v8 = *(_DWORD *)(v7 + 84);
    v9 = *(_QWORD *)(v7 + 64);
    if (v8)
      v10 = v9;
    else
      v10 = v9 + 1;
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v5);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
  }
  return a1;
}

void *sub_1A56CF4B4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int EnumTagSinglePayload;
  int v7;
  uint64_t v8;
  size_t v9;

  v5 = *(_QWORD *)(a3 + 16);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v5);
  v7 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5);
  v8 = *(_QWORD *)(v5 - 8);
  if (EnumTagSinglePayload)
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(a1, a2, v5);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
      return a1;
    }
  }
  else
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 40))(a1, a2, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v8 + 84))
    v9 = *(_QWORD *)(v8 + 64);
  else
    v9 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(a1, a2, v9);
  return a1;
}

uint64_t sub_1A56CF58C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  char v10;
  int v11;
  unsigned int v12;
  int v13;
  unsigned int EnumTagSinglePayload;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = v6 - 1;
  if (!(_DWORD)v6)
    v7 = 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (!(_DWORD)v6)
    ++v8;
  if (!a2)
    return 0;
  v9 = a2 - v7;
  if (a2 > v7)
  {
    v10 = 8 * v8;
    if (v8 > 3)
      goto LABEL_8;
    v12 = ((v9 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v12))
    {
      v11 = *(_DWORD *)(a1 + v8);
      if (v11)
        goto LABEL_15;
    }
    else
    {
      if (v12 <= 0xFF)
      {
        if (v12 < 2)
          goto LABEL_22;
LABEL_8:
        v11 = *(unsigned __int8 *)(a1 + v8);
        if (!*(_BYTE *)(a1 + v8))
          goto LABEL_22;
LABEL_15:
        v13 = (v11 - 1) << v10;
        if (v8 > 3)
          v13 = 0;
        if ((_DWORD)v8)
        {
          if (v8 > 3)
            LODWORD(v8) = 4;
          __asm { BR              X12 }
        }
        return v7 + v13 + 1;
      }
      v11 = *(unsigned __int16 *)(a1 + v8);
      if (*(_WORD *)(a1 + v8))
        goto LABEL_15;
    }
  }
LABEL_22:
  if (v6 < 2)
    return 0;
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, v6, v4);
  if (EnumTagSinglePayload >= 2)
    return EnumTagSinglePayload - 1;
  else
    return 0;
}

void sub_1A56CF6B8(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  size_t v10;
  size_t v11;
  char v12;
  BOOL v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;

  v6 = 0u;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = v8 - 1;
  if (!v8)
    v9 = 0;
  v10 = *(_QWORD *)(v7 + 64);
  if (v8)
    v11 = v10;
  else
    v11 = v10 + 1;
  v12 = 8 * v11;
  v13 = a3 >= v9;
  v14 = a3 - v9;
  if (v14 != 0 && v13)
  {
    if (v11 <= 3)
    {
      v15 = ((v14 + ~(-1 << v12)) >> v12) + 1;
      if (HIWORD(v15))
      {
        v6 = 4u;
      }
      else if (v15 >= 0x100)
      {
        v6 = 2;
      }
      else
      {
        v6 = v15 > 1;
      }
    }
    else
    {
      v6 = 1u;
    }
  }
  if (v9 < a2)
  {
    v16 = ~v9 + a2;
    if (v11 < 4)
    {
      if ((_DWORD)v11)
      {
        v17 = v16 & ~(-1 << v12);
        bzero(a1, v11);
        if ((_DWORD)v11 == 3)
        {
          *a1 = v17;
          *((_BYTE *)a1 + 2) = BYTE2(v17);
        }
        else if ((_DWORD)v11 == 2)
        {
          *a1 = v17;
        }
        else
        {
          *(_BYTE *)a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v16;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

void sub_1A56CF84C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_1A56CF854()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

uint64_t sub_1A56CF878(uint64_t a1, uint64_t a2)
{
  return __swift_getEnumTagSinglePayload(a1, 1, *(_QWORD *)(a2 + 16));
}

uint64_t sub_1A56CF884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, 1, *(_QWORD *)(a3 + 16));
}

uint64_t OUTLINED_FUNCTION_0_65(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_1_47@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_2_43(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

void static LastCommandSet.__derived_enum_equals(_:_:)(int32x2_t *a1, uint64_t a2, int32x2_t *a3, uint64_t a4)
{
  if ((a2 & 0xFF00000000) != 0xFF00000000 && (a4 & 0xFF00000000) != 0xFF00000000)
    static MessageIdentifierSetNonEmpty.__derived_struct_equals(_:_:)(a1, a2 & 0xFFFFFFFFFFLL, a3, a4 & 0xFFFFFFFFFFLL);
}

void LastCommandSet.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((~a3 & 0xFF00000000) != 0)
  {
    sub_1A594CE88();
    MessageIdentifierSetNonEmpty.hash(into:)(a1, a2, a3 & 0xFFFFFFFFFFLL);
  }
  else
  {
    sub_1A594CE88();
  }
}

uint64_t LastCommandSet.hashValue.getter(uint64_t a1, uint64_t a2)
{
  _BYTE v5[72];

  sub_1A594CE64();
  LastCommandSet.hash(into:)((uint64_t)v5, a1, a2 & 0xFFFFFFFFFFLL);
  return sub_1A594CED0();
}

uint64_t sub_1A56CF9E0()
{
  uint64_t v0;

  return LastCommandSet.hashValue.getter(*(_QWORD *)v0, *(unsigned int *)(v0 + 8) | ((unint64_t)*(unsigned __int8 *)(v0 + 12) << 32));
}

void sub_1A56CF9FC(uint64_t a1)
{
  uint64_t v1;

  LastCommandSet.hash(into:)(a1, *(_QWORD *)v1, *(unsigned int *)(v1 + 8) | ((unint64_t)*(unsigned __int8 *)(v1 + 12) << 32));
}

uint64_t sub_1A56CFA18()
{
  uint64_t v0;
  _BYTE v2[72];

  sub_1A594CE64();
  LastCommandSet.hash(into:)((uint64_t)v2, *(_QWORD *)v0, *(unsigned int *)(v0 + 8) | ((unint64_t)*(unsigned __int8 *)(v0 + 12) << 32));
  return sub_1A594CED0();
}

void sub_1A56CFA68(uint64_t a1, uint64_t a2)
{
  static LastCommandSet.__derived_enum_equals(_:_:)(*(int32x2_t **)a1, *(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned __int8 *)(a1 + 12) << 32), *(int32x2_t **)a2, *(unsigned int *)(a2 + 8) | ((unint64_t)*(unsigned __int8 *)(a2 + 12) << 32));
}

uint64_t static LastCommandSet.range(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v7 = type metadata accessor for MessageIdentifierRange(0, a2, a3, a4);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v14 - v9;
  (*(void (**)(char *, uint64_t, double))(v11 + 16))((char *)&v14 - v9, a1, v8);
  return MessageIdentifierSetNonEmpty.init(range:)((uint64_t)v10, a2, a3, v12);
}

void sub_1A56CFB24()
{
  JUMPOUT(0x1A85B1874);
}

uint64_t sub_1A56CFB38(uint64_t result)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(result + 12);
  if (v1 <= 2)
    return sub_1A54E3458(*(_QWORD *)result, *(unsigned int *)(result + 8), v1);
  return result;
}

uint64_t sub_1A56CFB58(uint64_t a1, uint64_t *a2)
{
  unsigned int v3;
  uint64_t v4;
  unsigned int v5;

  v3 = *((unsigned __int8 *)a2 + 12);
  if (v3 > 2)
  {
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 5) = *(uint64_t *)((char *)a2 + 5);
  }
  else
  {
    v4 = *a2;
    v5 = *((_DWORD *)a2 + 2);
    sub_1A54E4334(*a2, v5, v3);
    *(_QWORD *)a1 = v4;
    *(_DWORD *)(a1 + 8) = v5;
    *(_BYTE *)(a1 + 12) = v3;
  }
  return a1;
}

uint64_t sub_1A56CFBC4(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;

  v4 = *(unsigned __int8 *)(a1 + 12);
  v5 = *(unsigned __int8 *)(a2 + 12);
  if (v4 > 2)
  {
    if (v5 <= 2)
    {
      v11 = *(_QWORD *)a2;
      v12 = *(_DWORD *)(a2 + 8);
      sub_1A54E4334(*(_QWORD *)a2, v12, v5);
      *(_QWORD *)a1 = v11;
      *(_DWORD *)(a1 + 8) = v12;
      *(_BYTE *)(a1 + 12) = v5;
      return a1;
    }
LABEL_7:
    v13 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 5) = *(_QWORD *)(a2 + 5);
    *(_QWORD *)a1 = v13;
    return a1;
  }
  if (v5 > 2)
  {
    sub_1A54E3458(*(_QWORD *)a1, *(unsigned int *)(a1 + 8), v4);
    goto LABEL_7;
  }
  v6 = *(_QWORD *)a2;
  v7 = *(_DWORD *)(a2 + 8);
  sub_1A54E4334(*(_QWORD *)a2, v7, v5);
  v8 = *(_QWORD *)a1;
  v9 = *(unsigned int *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_DWORD *)(a1 + 8) = v7;
  v10 = *(_BYTE *)(a1 + 12);
  *(_BYTE *)(a1 + 12) = v5;
  sub_1A54E3458(v8, v9, v10);
  return a1;
}

_QWORD *__swift_memcpy13_8_1(_QWORD *result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_QWORD *)((char *)result + 5) = *(uint64_t *)((char *)a2 + 5);
  *result = v2;
  return result;
}

uint64_t sub_1A56CFCA0(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(unsigned __int8 *)(a1 + 12);
  if (v4 > 2)
    goto LABEL_5;
  v5 = *(unsigned __int8 *)(a2 + 12);
  if (v5 > 2)
  {
    sub_1A54E3458(*(_QWORD *)a1, *(unsigned int *)(a1 + 8), v4);
LABEL_5:
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 5) = *(_QWORD *)(a2 + 5);
    return a1;
  }
  v6 = *(_DWORD *)(a2 + 8);
  v7 = *(_QWORD *)a1;
  v8 = *(unsigned int *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 12) = v5;
  sub_1A54E3458(v7, v8, v4);
  return a1;
}

uint64_t sub_1A56CFD1C(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  unsigned int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 13))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 12);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  if (v4 + 1 >= 2)
    return v4;
  else
    return 0;
}

uint64_t sub_1A56CFD64(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 5) = 0;
    *(_DWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 13) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 13) = 0;
    if (a2)
      *(_BYTE *)(result + 12) = ~(_BYTE)a2;
  }
  return result;
}

uint64_t sub_1A56CFDAC(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 12);
  if (v1 > 2)
    return (v1 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_1A56CFDC0(uint64_t result, unsigned int a2)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 12) = 0;
    *(_DWORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
  }
  else if (a2)
  {
    *(_BYTE *)(result + 12) = -(char)a2;
  }
  return result;
}

uint64_t type metadata accessor for LastCommandSet(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LastCommandSet);
}

void sub_1A56CFDF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  Swift::Int v5;
  uint64_t v6;
  unint64_t v7;
  Swift::Int v8;
  char v9;
  Swift::String v10;
  Swift::Int v11;
  int v12;
  Swift::Int v13;
  Swift::Int v14;
  char v15;
  Swift::String v16;
  int v17;
  BOOL v18;
  int v19;
  Swift::Int v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  Swift::Int v24;
  Swift::Int v25;
  char v26;
  Swift::String v27;
  int v28;
  int v29;

  v2 = v1;
  v4 = v1 + 8;
  v5 = *(unsigned int *)(v2 + 20);
  v6 = OUTLINED_FUNCTION_0_66();
  sub_1A56814E0(v6, v7, v4, v5);
  if ((v9 & 1) != 0)
  {
    v10._countAndFlagsBits = OUTLINED_FUNCTION_0_66();
    v8 = ByteBuffer._setStringSlowpath(_:at:)(v10, v5);
  }
  v11 = v8;
  v12 = *(_DWORD *)(v2 + 20);
  v13 = (v12 + v8);
  if (__CFADD__(v12, (_DWORD)v8))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  *(_DWORD *)(v2 + 20) = v13;
  sub_1A56814E0(40, 0xE100000000000000, v4, v13);
  if ((v15 & 1) != 0)
  {
    v16._countAndFlagsBits = 40;
    v16._object = (void *)0xE100000000000000;
    v14 = ByteBuffer._setStringSlowpath(_:at:)(v16, v13);
  }
  v17 = *(_DWORD *)(v2 + 20);
  v18 = __CFADD__(v17, (_DWORD)v14);
  v19 = v17 + v14;
  if (v18)
    goto LABEL_18;
  *(_DWORD *)(v2 + 20) = v19;
  v20 = v11 + v14;
  if (__OFADD__(v11, v14))
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (*(_QWORD *)(a1 + 16))
  {
    swift_retain();
    swift_retain();
    sub_1A565F834(a1, 0, 0xE000000000000000, 32, 0xE100000000000000, 0, (void *)0xE000000000000000, 0, v2);
    v22 = v21;
    swift_release();
    swift_release();
  }
  else
  {
    v22 = 0;
  }
  v23 = v20 + v22;
  if (__OFADD__(v20, v22))
    goto LABEL_20;
  v24 = *(unsigned int *)(v2 + 20);
  sub_1A56814E0(41, 0xE100000000000000, v4, *(_DWORD *)(v2 + 20));
  if ((v26 & 1) != 0)
  {
    v27._countAndFlagsBits = 41;
    v27._object = (void *)0xE100000000000000;
    v25 = ByteBuffer._setStringSlowpath(_:at:)(v27, v24);
  }
  v28 = *(_DWORD *)(v2 + 20);
  v18 = __CFADD__(v28, (_DWORD)v25);
  v29 = v28 + v25;
  if (v18)
    goto LABEL_21;
  *(_DWORD *)(v2 + 20) = v29;
  if (__OFADD__(v23, v25))
LABEL_22:
    __break(1u);
}

uint64_t OUTLINED_FUNCTION_0_66()
{
  return 0x204E5255544552;
}

uint64_t sub_1A56CFF98(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  char v14;
  char v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v26;
  char v27;
  _BYTE v28[40];
  _BYTE v29[40];
  _QWORD v30[4];
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;

  sub_1A56D08B0((uint64_t)a1, (uint64_t)v29);
  sub_1A56D08B0(a2, (uint64_t)v28);
  v4 = sub_1A56D08B0((uint64_t)v29, (uint64_t)v30);
  v6 = v30[0];
  v7 = v30[1];
  if ((v31 & 1) == 0)
  {
    result = OUTLINED_FUNCTION_12_17(v4, v5);
    if ((v36 & 1) == 0)
    {
      if (v6 == v32 && v7 == v33)
        goto LABEL_19;
      goto LABEL_18;
    }
    return 0;
  }
  v8 = v30[2];
  v9 = v30[3];
  result = OUTLINED_FUNCTION_12_17(v4, v5);
  if ((v36 & 1) == 0)
    return 0;
  v11 = v34;
  v12 = v35;
  v13 = v6 == v32 && v7 == v33;
  if (v13 || (v14 = sub_1A594CD38(), result = 0, (v14 & 1) != 0))
  {
    if (v8 == v11 && v9 == v12)
      goto LABEL_19;
LABEL_18:
    v17 = sub_1A594CD38();
    result = 0;
    if ((v17 & 1) == 0)
      return result;
LABEL_19:
    v19 = a1[5];
    v18 = a1[6];
    v20 = a1[7];
    v21 = *(_QWORD *)(a2 + 48);
    v22 = *(_QWORD *)(a2 + 56);
    if (HIBYTE(v20) == 255)
    {
      if (HIBYTE(v22) == 255)
        return 1;
      goto LABEL_23;
    }
    if (HIBYTE(v22) == 255)
    {
LABEL_23:
      v23 = OUTLINED_FUNCTION_1_48();
      sub_1A56668A4(v23, v24, v20);
      OUTLINED_FUNCTION_8_19();
      return 0;
    }
    if ((v20 & 0x100000000000000) == 0)
    {
      if ((v22 & 0x100000000000000) != 0)
        return 0;
      if (HIDWORD(v18) < v18)
      {
        __break(1u);
      }
      else if (HIDWORD(v21) >= v21)
      {
        if (HIDWORD(v18) - (_DWORD)v18 != HIDWORD(v21) - (_DWORD)v21)
          return 0;
        if ((v20 & 0xFFFFFFFFFFFFFFLL) == (v22 & 0xFFFFFFFFFFFFFFLL) && v19 == *(_QWORD *)(a2 + 40))
          return 1;
        sub_1A5666818(*(_QWORD *)(a2 + 40), *(_QWORD *)(a2 + 48), *(_QWORD *)(a2 + 56));
        OUTLINED_FUNCTION_1_48();
        v26 = sub_1A566B918();
LABEL_38:
        v27 = v26;
        OUTLINED_FUNCTION_8_19();
        sub_1A56668A4(v19, v18, v20);
        return (v27 & 1) != 0;
      }
      __break(1u);
      return result;
    }
    if ((v22 & 0x100000000000000) == 0)
      return 0;
    sub_1A5666818(*(_QWORD *)(a2 + 40), *(_QWORD *)(a2 + 48), *(_QWORD *)(a2 + 56));
    sub_1A5666818(v19, v18, v20);
    sub_1A568AAF8();
    goto LABEL_38;
  }
  return result;
}

uint64_t *ListSelectBaseOption.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  _OWORD *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  _OWORD v27[4];
  _OWORD v28[3];
  __int128 v29;
  _BYTE v30[96];

  v2 = v1;
  v4 = OUTLINED_FUNCTION_14_14(a1, &v22);
  v5 = v23;
  v6 = v24;
  v7 = v25;
  v8 = v26;
  OUTLINED_FUNCTION_14_14((uint64_t)v4, v27);
  OUTLINED_FUNCTION_5_25();
  if (v9)
    return (uint64_t *)OUTLINED_FUNCTION_2_21();
  v28[0] = v27[0];
  v28[1] = v27[1];
  v28[2] = v27[2];
  v29 = v27[3];
  OUTLINED_FUNCTION_3_19();
  sub_1A56D08B0((uint64_t)v28, (uint64_t)v30);
  OUTLINED_FUNCTION_10_19();
  if ((v30[72] & 1) != 0)
  {
    v11 = OUTLINED_FUNCTION_3_19();
    OUTLINED_FUNCTION_0_67(v11, v12, v13, v14, v5 & 1);
    sub_1A5666818(v6, v7, v8);
    sub_1A594B1D8();
  }
  else
  {
    v15 = OUTLINED_FUNCTION_2_21();
    OUTLINED_FUNCTION_0_67(v15, v16, v17, v18, v5 & 1);
    sub_1A5666818(v6, v7, v8);
  }
  sub_1A594B1D8();
  v19 = *((_QWORD *)&v29 + 1);
  if (HIBYTE(*((_QWORD *)&v29 + 1)) == 255)
  {
    sub_1A594CE94();
  }
  else
  {
    sub_1A594CE94();
    OUTLINED_FUNCTION_2_44();
    OUTLINED_FUNCTION_13_18(a1, v20, v21, v19 & 0xFFFFFFFFFFFFFFLL | ((unint64_t)(HIBYTE(v19) & 1) << 56));
    OUTLINED_FUNCTION_7_20();
  }
  return sub_1A56D08EC(v2, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1A5666868, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A56668A4);
}

uint64_t static ListSelectBaseOption.__derived_enum_equals(_:_:)(__int128 *a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  char v6;
  _OWORD v8[4];
  _OWORD v9[4];
  _OWORD v10[4];
  _OWORD v11[4];

  sub_1A56D0898(a1, v10);
  OUTLINED_FUNCTION_5_25();
  if (v6)
  {
    OUTLINED_FUNCTION_4_29(v4, v11);
    OUTLINED_FUNCTION_5_25();
    if (v6)
      v5 = 1;
    else
      v5 = 0;
  }
  else
  {
    v11[0] = v10[0];
    v11[1] = v10[1];
    v11[2] = v10[2];
    v11[3] = v10[3];
    OUTLINED_FUNCTION_4_29(v4, v8);
    OUTLINED_FUNCTION_5_25();
    if (v6)
    {
      v5 = 0;
    }
    else
    {
      v9[0] = v8[0];
      v9[1] = v8[1];
      v9[2] = v8[2];
      v9[3] = v8[3];
      OUTLINED_FUNCTION_11_15((uint64_t *)a1);
      OUTLINED_FUNCTION_11_15(a2);
      v5 = sub_1A56CFF98(v11, (uint64_t)v9);
      OUTLINED_FUNCTION_9_26(a2);
      OUTLINED_FUNCTION_9_26((uint64_t *)a1);
    }
  }
  return v5 & 1;
}

uint64_t ListSelectBaseOption.hashValue.getter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v21[72];
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  _OWORD v27[4];
  _OWORD v28[3];
  __int128 v29;
  _BYTE v30[96];

  v2 = v1;
  OUTLINED_FUNCTION_4_29(a1, &v22);
  v4 = v23;
  v3 = v24;
  v5 = v25;
  v6 = v26;
  v7 = sub_1A594CE64();
  OUTLINED_FUNCTION_14_14(v7, v27);
  OUTLINED_FUNCTION_5_25();
  if (v8)
  {
    OUTLINED_FUNCTION_2_21();
  }
  else
  {
    v28[0] = v27[0];
    v28[1] = v27[1];
    v28[2] = v27[2];
    v29 = v27[3];
    OUTLINED_FUNCTION_3_19();
    sub_1A56D08B0((uint64_t)v28, (uint64_t)v30);
    OUTLINED_FUNCTION_10_19();
    if ((v30[72] & 1) != 0)
    {
      v9 = OUTLINED_FUNCTION_3_19();
      OUTLINED_FUNCTION_0_67(v9, v10, v11, v12, v4 & 1);
      sub_1A5666818(v3, v5, v6);
      sub_1A594B1D8();
    }
    else
    {
      v13 = OUTLINED_FUNCTION_2_21();
      OUTLINED_FUNCTION_0_67(v13, v14, v15, v16, v4 & 1);
      sub_1A5666818(v3, v5, v6);
    }
    sub_1A594B1D8();
    v17 = *((_QWORD *)&v29 + 1);
    if (HIBYTE(*((_QWORD *)&v29 + 1)) == 255)
    {
      sub_1A594CE94();
    }
    else
    {
      sub_1A594CE94();
      OUTLINED_FUNCTION_2_44();
      OUTLINED_FUNCTION_13_18((uint64_t)v21, v18, v19, v17 & 0xFFFFFFFFFFFFFFLL | ((unint64_t)(HIBYTE(v17) & 1) << 56));
      OUTLINED_FUNCTION_7_20();
    }
    sub_1A56D08EC(v2, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1A5666868, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A56668A4);
  }
  return sub_1A594CED0();
}

uint64_t sub_1A56D0620()
{
  __int128 *v0;
  _OWORD *v1;
  _OWORD v3[4];

  v1 = sub_1A56D0898(v0, v3);
  return ListSelectBaseOption.hashValue.getter((uint64_t)v1);
}

uint64_t *sub_1A56D0654(uint64_t a1)
{
  _OWORD v3[4];

  OUTLINED_FUNCTION_4_29(a1, v3);
  return ListSelectBaseOption.hash(into:)(a1);
}

uint64_t sub_1A56D068C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unint64_t v8;
  unint64_t v9;
  _BYTE v11[72];

  v2 = *v0;
  v1 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  v5 = v0[4];
  v6 = v0[5];
  v7 = ~*((_DWORD *)v0 + 8);
  v9 = v0[6];
  v8 = v0[7];
  sub_1A594CE64();
  if ((_BYTE)v7)
  {
    sub_1A594CE88();
    sub_1A594CE88();
    if ((v5 & 1) != 0)
    {
      sub_1A56667EC(v2, v1, v4, v3, 1);
      sub_1A5666818(v6, v9, v8);
      sub_1A594B1D8();
    }
    else
    {
      sub_1A56667EC(v2, v1, v4, v3, 0);
      sub_1A5666818(v6, v9, v8);
    }
    sub_1A594B1D8();
    sub_1A594CE94();
    if (HIBYTE(v8) != 255)
    {
      sub_1A56667D4(v6, v9, v8, HIBYTE(v8) & 1);
      OptionValueComp.hash(into:)((uint64_t)v11, v6, v9, v8 & 0xFFFFFFFFFFFFFFLL | ((unint64_t)(HIBYTE(v8) & 1) << 56));
      sub_1A56668A4(v6, v9, v8);
    }
    sub_1A568072C(v2, v1, v4, v3, v5, v6, v9, v8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1A5666868, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A56668A4);
  }
  else
  {
    sub_1A594CE88();
  }
  return sub_1A594CED0();
}

uint64_t sub_1A56D0850(__int128 *a1, __int128 *a2)
{
  __int128 v4[4];
  uint64_t v5[8];

  sub_1A56D0898(a1, v4);
  sub_1A56D0898(a2, v5);
  return static ListSelectBaseOption.__derived_enum_equals(_:_:)(v4, v5) & 1;
}

_OWORD *sub_1A56D0898(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[3];
  a2[2] = a1[2];
  a2[3] = v4;
  *a2 = v2;
  a2[1] = v3;
  return a2;
}

uint64_t sub_1A56D08B0(uint64_t a1, uint64_t a2)
{
  __swift_memcpy33_8_0(a2, a1);
  return a2;
}

uint64_t *sub_1A56D08EC(uint64_t *a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD), uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  sub_1A568072C(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a2, a3);
  return a1;
}

unint64_t sub_1A56D093C()
{
  unint64_t result;

  result = qword_1EE7A99F0;
  if (!qword_1EE7A99F0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ListSelectBaseOption, &type metadata for ListSelectBaseOption);
    atomic_store(result, (unint64_t *)&qword_1EE7A99F0);
  }
  return result;
}

uint64_t destroy for ListSelectBaseOption(uint64_t result)
{
  unsigned int v1;
  uint64_t *v2;
  unint64_t v3;

  v1 = *(unsigned __int8 *)(result + 32);
  if (v1 <= 1)
  {
    v2 = (uint64_t *)result;
    result = sub_1A5666868(*(_QWORD *)result, v2[1], v2[2], v2[3], v1 != 0);
    v3 = v2[7];
    if (HIBYTE(v3) != 255)
      return sub_1A56667E0(v2[5], v2[6], v3, HIBYTE(v3) & 1);
  }
  return result;
}

uint64_t initializeWithCopy for ListSelectBaseOption(uint64_t a1, uint64_t *a2)
{
  unsigned int v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *((unsigned __int8 *)a2 + 32);
  if (v4 > 1)
  {
    v11 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v11;
    v12 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v12;
  }
  else
  {
    v5 = v4 != 0;
    v6 = *a2;
    v7 = a2[1];
    v8 = a2[2];
    v9 = a2[3];
    sub_1A56667EC(*a2, v7, v8, v9, v4 != 0);
    *(_QWORD *)a1 = v6;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 24) = v9;
    *(_BYTE *)(a1 + 32) = v5;
    v10 = a2[7];
    if (HIBYTE(v10) == 255)
    {
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
      *(_QWORD *)(a1 + 56) = a2[7];
    }
    else
    {
      v14 = a2[5];
      v13 = a2[6];
      sub_1A56667D4(v14, v13, v10, HIBYTE(v10) & 1);
      *(_QWORD *)(a1 + 40) = v14;
      *(_QWORD *)(a1 + 48) = v13;
      *(_BYTE *)(a1 + 62) = BYTE6(v10);
      *(_WORD *)(a1 + 60) = WORD2(v10);
      *(_DWORD *)(a1 + 56) = v10;
      *(_BYTE *)(a1 + 63) = HIBYTE(v10) & 1;
    }
  }
  return a1;
}

uint64_t assignWithCopy for ListSelectBaseOption(uint64_t a1, __int128 *a2)
{
  unsigned int v4;
  unsigned int v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  __int128 *v16;
  __int128 *v17;
  unint64_t v18;
  __int128 v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  unint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;

  v4 = *(unsigned __int8 *)(a1 + 32);
  v5 = *((unsigned __int8 *)a2 + 32);
  if (v4 > 1)
  {
    if (v5 <= 1)
    {
      v20 = v5 != 0;
      v21 = *(_QWORD *)a2;
      v22 = *((_QWORD *)a2 + 1);
      v23 = *((_QWORD *)a2 + 2);
      v24 = *((_QWORD *)a2 + 3);
      sub_1A56667EC(*(_QWORD *)a2, v22, v23, v24, v5 != 0);
      *(_QWORD *)a1 = v21;
      *(_QWORD *)(a1 + 8) = v22;
      *(_QWORD *)(a1 + 16) = v23;
      *(_QWORD *)(a1 + 24) = v24;
      *(_BYTE *)(a1 + 32) = v20;
      v18 = *((_QWORD *)a2 + 7);
      if (HIBYTE(v18) == 255)
      {
        v25 = *(__int128 *)((char *)a2 + 40);
        *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
        *(_OWORD *)(a1 + 40) = v25;
        return a1;
      }
      goto LABEL_12;
    }
LABEL_11:
    v27 = *a2;
    v28 = a2[1];
    v29 = a2[3];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v29;
    *(_OWORD *)a1 = v27;
    *(_OWORD *)(a1 + 16) = v28;
    return a1;
  }
  if (v5 > 1)
  {
    sub_1A5666868(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v4 & 1);
    v26 = *(_QWORD *)(a1 + 56);
    if (HIBYTE(v26) != 255)
      sub_1A56667E0(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), v26, HIBYTE(v26) & 1);
    goto LABEL_11;
  }
  v6 = v5 != 0;
  v7 = *(_QWORD *)a2;
  v8 = *((_QWORD *)a2 + 1);
  v9 = *((_QWORD *)a2 + 2);
  v10 = *((_QWORD *)a2 + 3);
  sub_1A56667EC(*(_QWORD *)a2, v8, v9, v10, v5 != 0);
  v11 = *(_QWORD *)a1;
  v12 = *(_QWORD *)(a1 + 8);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 24);
  v15 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v8;
  *(_QWORD *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 24) = v10;
  *(_BYTE *)(a1 + 32) = v6;
  sub_1A5666868(v11, v12, v13, v14, v15);
  v16 = (__int128 *)(a1 + 40);
  v17 = (__int128 *)((char *)a2 + 40);
  v18 = *((_QWORD *)a2 + 7);
  if (*(unsigned __int8 *)(a1 + 63) == 255)
  {
    if (HIBYTE(v18) == 255)
    {
      v19 = *v17;
      *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
      *v16 = v19;
      return a1;
    }
LABEL_12:
    v31 = *((_QWORD *)a2 + 5);
    v30 = *((_QWORD *)a2 + 6);
    sub_1A56667D4(v31, v30, v18, HIBYTE(v18) & 1);
    *(_QWORD *)(a1 + 40) = v31;
    *(_QWORD *)(a1 + 48) = v30;
    *(_BYTE *)(a1 + 62) = BYTE6(v18);
    *(_WORD *)(a1 + 60) = WORD2(v18);
    *(_DWORD *)(a1 + 56) = v18;
    *(_BYTE *)(a1 + 63) = HIBYTE(v18) & 1;
    return a1;
  }
  if (HIBYTE(v18) == 255)
  {
    sub_1A56D0D08(a1 + 40);
    v32 = *((_QWORD *)a2 + 7);
    *v16 = *v17;
    *(_QWORD *)(a1 + 56) = v32;
  }
  else
  {
    v34 = *((_QWORD *)a2 + 5);
    v33 = *((_QWORD *)a2 + 6);
    sub_1A56667D4(v34, v33, v18, HIBYTE(v18) & 1);
    v35 = *(_QWORD *)(a1 + 40);
    v36 = *(_QWORD *)(a1 + 48);
    v37 = *(unsigned int *)(a1 + 56) | ((unint64_t)(*(unsigned __int16 *)(a1 + 60) | (*(unsigned __int8 *)(a1 + 62) << 16)) << 32);
    v38 = *(_BYTE *)(a1 + 63);
    *(_QWORD *)(a1 + 40) = v34;
    *(_QWORD *)(a1 + 48) = v33;
    *(_DWORD *)(a1 + 56) = v18;
    *(_WORD *)(a1 + 60) = WORD2(v18);
    *(_BYTE *)(a1 + 62) = BYTE6(v18);
    *(_BYTE *)(a1 + 63) = HIBYTE(v18) & 1;
    sub_1A56667E0(v35, v36, v37, v38);
  }
  return a1;
}

uint64_t sub_1A56D0D08(uint64_t a1)
{
  destroy for OptionValueComp(a1);
  return a1;
}

uint64_t assignWithTake for ListSelectBaseOption(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  _OWORD *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v19;
  uint64_t v20;

  v4 = *(unsigned __int8 *)(a1 + 32);
  if (v4 > 1)
  {
LABEL_9:
    v16 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v16;
    v17 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v17;
    return a1;
  }
  v5 = *(unsigned __int8 *)(a2 + 32);
  v6 = v4 & 1;
  if (v5 > 1)
  {
    sub_1A5666868(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v6);
    v15 = *(_QWORD *)(a1 + 56);
    if (HIBYTE(v15) != 255)
      sub_1A56667E0(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), v15, HIBYTE(v15) & 1);
    goto LABEL_9;
  }
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  *(_BYTE *)(a1 + 32) = v5 != 0;
  sub_1A5666868(v7, v8, v9, v10, v6);
  v12 = (_OWORD *)(a2 + 40);
  v13 = *(_QWORD *)(a1 + 56);
  if (HIBYTE(v13) != 255)
  {
    v14 = *(_QWORD *)(a2 + 56);
    if (HIBYTE(v14) != 255)
    {
      v19 = *(_QWORD *)(a1 + 40);
      v20 = *(_QWORD *)(a1 + 48);
      *(_OWORD *)(a1 + 40) = *v12;
      *(_DWORD *)(a1 + 56) = v14;
      *(_BYTE *)(a1 + 62) = BYTE6(v14);
      *(_WORD *)(a1 + 60) = WORD2(v14);
      *(_BYTE *)(a1 + 63) = HIBYTE(v14) & 1;
      sub_1A56667E0(v19, v20, v13, HIBYTE(v13) & 1);
      return a1;
    }
    sub_1A56D0D08(a1 + 40);
  }
  *(_OWORD *)(a1 + 40) = *v12;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for ListSelectBaseOption(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  unsigned int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  if (v4 + 1 >= 2)
    return v4;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ListSelectBaseOption(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 64) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = ~(_BYTE)a2;
  }
  return result;
}

uint64_t sub_1A56D0EE8(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 32);
  if (v1 > 1)
    return (v1 ^ 0xFF) + 1;
  else
    return 0;
}

double sub_1A56D0EFC(uint64_t a1, unsigned int a2)
{
  double result;

  if (a2 > 0xFE)
  {
    *(_QWORD *)(a1 + 56) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 - 255;
  }
  else if (a2)
  {
    *(_BYTE *)(a1 + 32) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ListSelectBaseOption()
{
  return &type metadata for ListSelectBaseOption;
}

uint64_t OUTLINED_FUNCTION_0_67(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  return sub_1A56667EC(v8, v7, v6, v5, a5);
}

uint64_t OUTLINED_FUNCTION_1_48()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1A5666818(v5, v4, v3);
  sub_1A5666818(v2, v1, v0);
  return v2;
}

uint64_t OUTLINED_FUNCTION_2_44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  return sub_1A56667D4(v2, v1, v0, v3);
}

_OWORD *OUTLINED_FUNCTION_4_29(uint64_t a1, _OWORD *a2)
{
  __int128 *v2;

  return sub_1A56D0898(v2, a2);
}

uint64_t OUTLINED_FUNCTION_7_20()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_1A56668A4(v2, v1, v0);
}

uint64_t OUTLINED_FUNCTION_8_19()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_1A56668A4(v2, v1, v0);
}

uint64_t *OUTLINED_FUNCTION_9_26(uint64_t *a1)
{
  void (*v1)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD);
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);

  return sub_1A56D08EC(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_10_19()
{
  uint64_t v0;

  return sub_1A56D08B0(v0 - 176, v0 - 136);
}

uint64_t *OUTLINED_FUNCTION_11_15(uint64_t *a1)
{
  void (*v1)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD);
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);

  return sub_1A56D08EC(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_12_17(uint64_t a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  return sub_1A56D08B0((uint64_t)va, v2 - 120);
}

uint64_t OUTLINED_FUNCTION_13_18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v5;

  return OptionValueComp.hash(into:)(a1, v5, v4, a4);
}

_OWORD *OUTLINED_FUNCTION_14_14(uint64_t a1, _OWORD *a2)
{
  __int128 *v2;

  return sub_1A56D0898(v2, a2);
}

uint64_t *ListSelectIndependentOption.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _OWORD v16[2];
  __int128 v17;
  __int128 v18;
  _OWORD v19[3];
  __int128 v20;
  _BYTE v21[96];

  v2 = v1;
  v4 = OUTLINED_FUNCTION_14_14(a1, &v12);
  v5 = v13;
  v6 = v14;
  v7 = v15;
  OUTLINED_FUNCTION_14_14((uint64_t)v4, v16);
  if (v17 == 254 || v17 == 255)
    return (uint64_t *)sub_1A594CE88();
  v19[0] = v16[0];
  v19[1] = v16[1];
  v19[2] = v17;
  v20 = v18;
  OUTLINED_FUNCTION_3_19();
  sub_1A56D08B0((uint64_t)v19, (uint64_t)v21);
  OUTLINED_FUNCTION_10_19();
  if ((v21[72] & 1) != 0)
  {
    OUTLINED_FUNCTION_3_19();
    OUTLINED_FUNCTION_0_68();
    sub_1A5666818(v5, v6, v7);
    sub_1A594B1D8();
  }
  else
  {
    sub_1A594CE88();
    OUTLINED_FUNCTION_0_68();
    sub_1A5666818(v5, v6, v7);
  }
  sub_1A594B1D8();
  v9 = *((_QWORD *)&v20 + 1);
  if (HIBYTE(*((_QWORD *)&v20 + 1)) == 255)
  {
    sub_1A594CE94();
  }
  else
  {
    sub_1A594CE94();
    OUTLINED_FUNCTION_2_44();
    OUTLINED_FUNCTION_13_18(a1, v10, v11, v9 & 0xFFFFFFFFFFFFFFLL | ((unint64_t)(HIBYTE(v9) & 1) << 56));
    OUTLINED_FUNCTION_7_20();
  }
  return sub_1A56D1764(v2, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1A5666868, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A56668A4);
}

uint64_t static ListSelectIndependentOption.__derived_enum_equals(_:_:)(__int128 *a1, uint64_t *a2)
{
  _OWORD *v4;
  char v5;
  _OWORD v7[2];
  __int128 v8;
  __int128 v9;
  _OWORD v10[4];
  _OWORD v11[2];
  __int128 v12;
  __int128 v13;
  _OWORD v14[2];
  __int128 v15;
  __int128 v16;

  v4 = sub_1A56D0898(a1, v11);
  if (v12 == 254)
  {
    OUTLINED_FUNCTION_14_14((uint64_t)v4, v14);
    if (v15 != 254)
      goto LABEL_8;
  }
  else
  {
    if (v12 != 255)
    {
      v14[0] = v11[0];
      v14[1] = v11[1];
      v15 = v12;
      v16 = v13;
      OUTLINED_FUNCTION_14_14((uint64_t)v4, v7);
      if ((~(_BYTE)v8 & 0xFE) != 0)
      {
        v10[0] = v7[0];
        v10[1] = v7[1];
        v10[2] = v8;
        v10[3] = v9;
        OUTLINED_FUNCTION_8_20((uint64_t *)a1);
        OUTLINED_FUNCTION_8_20(a2);
        v5 = sub_1A56CFF98(v14, (uint64_t)v10);
        OUTLINED_FUNCTION_5_26(a2);
        OUTLINED_FUNCTION_5_26((uint64_t *)a1);
        return v5 & 1;
      }
      goto LABEL_8;
    }
    OUTLINED_FUNCTION_14_14((uint64_t)v4, v14);
    if ((_BYTE)v15 != 0xFF)
    {
LABEL_8:
      v5 = 0;
      return v5 & 1;
    }
  }
  v5 = 1;
  return v5 & 1;
}

uint64_t ListSelectIndependentOption.hashValue.getter()
{
  __int128 *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[72];
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _OWORD v15[2];
  __int128 v16;
  __int128 v17;
  _OWORD v18[3];
  __int128 v19;
  _BYTE v20[96];

  v1 = (uint64_t *)v0;
  sub_1A56D0898(v0, &v11);
  v2 = v12;
  v3 = v13;
  v4 = v14;
  v5 = sub_1A594CE64();
  OUTLINED_FUNCTION_14_14(v5, v15);
  if (v16 == 254 || v16 == 255)
  {
    sub_1A594CE88();
  }
  else
  {
    v18[0] = v15[0];
    v18[1] = v15[1];
    v18[2] = v16;
    v19 = v17;
    OUTLINED_FUNCTION_3_19();
    sub_1A56D08B0((uint64_t)v18, (uint64_t)v20);
    OUTLINED_FUNCTION_10_19();
    if ((v20[72] & 1) != 0)
    {
      OUTLINED_FUNCTION_3_19();
      OUTLINED_FUNCTION_0_68();
      sub_1A5666818(v2, v3, v4);
      sub_1A594B1D8();
    }
    else
    {
      sub_1A594CE88();
      OUTLINED_FUNCTION_0_68();
      sub_1A5666818(v2, v3, v4);
    }
    sub_1A594B1D8();
    v6 = *((_QWORD *)&v19 + 1);
    if (HIBYTE(*((_QWORD *)&v19 + 1)) == 255)
    {
      sub_1A594CE94();
    }
    else
    {
      sub_1A594CE94();
      OUTLINED_FUNCTION_2_44();
      OUTLINED_FUNCTION_13_18((uint64_t)v10, v7, v8, v6 & 0xFFFFFFFFFFFFFFLL | ((unint64_t)(HIBYTE(v6) & 1) << 56));
      OUTLINED_FUNCTION_7_20();
    }
    sub_1A56D1764(v1, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1A5666868, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A56668A4);
  }
  return sub_1A594CED0();
}

uint64_t sub_1A56D14DC()
{
  __int128 *v0;
  _OWORD v2[4];

  sub_1A56D0898(v0, v2);
  return ListSelectIndependentOption.hashValue.getter();
}

uint64_t *sub_1A56D1510(uint64_t a1)
{
  __int128 *v1;
  _OWORD v4[4];

  sub_1A56D0898(v1, v4);
  return ListSelectIndependentOption.hash(into:)(a1);
}

uint64_t sub_1A56D154C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _BYTE v10[72];

  v2 = *v0;
  v1 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  v6 = v0[4];
  v5 = v0[5];
  v8 = v0[6];
  v7 = v0[7];
  sub_1A594CE64();
  if (v6 == 254 || v6 == 255)
  {
    sub_1A594CE88();
  }
  else
  {
    sub_1A594CE88();
    sub_1A594CE88();
    if ((v6 & 1) != 0)
    {
      sub_1A56667EC(v2, v1, v4, v3, 1);
      sub_1A5666818(v5, v8, v7);
      sub_1A594B1D8();
    }
    else
    {
      sub_1A56667EC(v2, v1, v4, v3, 0);
      sub_1A5666818(v5, v8, v7);
    }
    sub_1A594B1D8();
    sub_1A594CE94();
    if (HIBYTE(v7) != 255)
    {
      sub_1A56667D4(v5, v8, v7, HIBYTE(v7) & 1);
      OptionValueComp.hash(into:)((uint64_t)v10, v5, v8, v7 & 0xFFFFFFFFFFFFFFLL | ((unint64_t)(HIBYTE(v7) & 1) << 56));
      sub_1A56668A4(v5, v8, v7);
    }
    sub_1A56D17B0(v2, v1, v4, v3, v6, v5, v8, v7, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1A5666868, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A56668A4);
  }
  return sub_1A594CED0();
}

uint64_t sub_1A56D1720(__int128 *a1)
{
  _OWORD *v1;
  __int128 v3[4];
  uint64_t v4[8];

  v1 = sub_1A56D0898(a1, v3);
  OUTLINED_FUNCTION_14_14((uint64_t)v1, v4);
  return static ListSelectIndependentOption.__derived_enum_equals(_:_:)(v3, v4) & 1;
}

uint64_t *sub_1A56D1764(uint64_t *a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD), uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  sub_1A56D17B0(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a2, a3);
  return a1;
}

uint64_t sub_1A56D17B0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD), uint64_t (*a10)(uint64_t, uint64_t, uint64_t))
{
  if ((~a5 & 0xFE) != 0)
  {
    a9(result, a2, a3, a4, a5 & 1);
    return a10(a6, a7, a8);
  }
  return result;
}

unint64_t sub_1A56D181C()
{
  unint64_t result;

  result = qword_1EE7A99F8;
  if (!qword_1EE7A99F8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ListSelectIndependentOption, &type metadata for ListSelectIndependentOption);
    atomic_store(result, (unint64_t *)&qword_1EE7A99F8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ListSelectIndependentOption(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  unsigned int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 > 1)
    v4 = (v3 ^ 0xFF) + 1;
  else
    v4 = 0;
  if (v4 >= 3)
    return v4 - 2;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ListSelectIndependentOption(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 64) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -2 - a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ListSelectIndependentOption()
{
  return &type metadata for ListSelectIndependentOption;
}

uint64_t OUTLINED_FUNCTION_0_68()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return sub_1A56667EC(v4, v3, v2, v1, v0 & 1);
}

uint64_t *OUTLINED_FUNCTION_5_26(uint64_t *a1)
{
  void (*v1)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD);
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);

  return sub_1A56D1764(a1, v1, v2);
}

uint64_t *OUTLINED_FUNCTION_8_20(uint64_t *a1)
{
  void (*v1)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD);
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);

  return sub_1A56D1764(a1, v1, v2);
}

void sub_1A56D1930(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Swift::Int v9;
  Swift::Int v10;
  char v11;
  Swift::String v12;
  Swift::Int v13;
  int v14;
  BOOL v15;
  int v16;
  uint64_t v17;
  BOOL v18;
  Swift::Int v19;
  Swift::Int v20;
  Swift::Int v21;
  char v22;
  Swift::String v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31[10];
  _QWORD v32[9];
  char v33[64];
  uint64_t v34;

  v2 = v1;
  sub_1A56D31E8(a1, (uint64_t)v32);
  v4 = v32[0];
  v5 = v32[1];
  v6 = v32[2];
  v7 = v32[3];
  v29 = v32[5];
  v30 = v32[4];
  v27 = v32[7];
  v28 = v32[6];
  v26 = v32[8];
  v8 = v1 + 8;
  v9 = *(unsigned int *)(v2 + 20);
  sub_1A56814E0(40, 0xE100000000000000, v8, *(_DWORD *)(v2 + 20));
  if ((v11 & 1) != 0)
  {
    v12._countAndFlagsBits = 40;
    v12._object = (void *)0xE100000000000000;
    v10 = ByteBuffer._setStringSlowpath(_:at:)(v12, v9);
  }
  v13 = v10;
  v14 = *(_DWORD *)(v2 + 20);
  v15 = __CFADD__(v14, (_DWORD)v10);
  v16 = v14 + v10;
  if (v15)
  {
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  *(_DWORD *)(v2 + 20) = v16;
  sub_1A56D31E8(a1, (uint64_t)v33);
  if (v34)
  {
    v31[0] = v4;
    v31[1] = v5;
    v31[2] = v6;
    v31[3] = v7;
    v31[4] = v30;
    v31[5] = v29;
    v31[6] = v28;
    v31[7] = v27;
    v31[8] = v26;
    sub_1A56D26B4(v31, v2);
  }
  else
  {
    v17 = 0;
  }
  v18 = __OFADD__(v13, v17);
  v19 = v13 + v17;
  if (v18)
    goto LABEL_14;
  v20 = *(unsigned int *)(v2 + 20);
  sub_1A56814E0(41, 0xE100000000000000, v8, *(_DWORD *)(v2 + 20));
  if ((v22 & 1) != 0)
  {
    v23._countAndFlagsBits = 41;
    v23._object = (void *)0xE100000000000000;
    v21 = ByteBuffer._setStringSlowpath(_:at:)(v23, v20);
  }
  v24 = *(_DWORD *)(v2 + 20);
  v15 = __CFADD__(v24, (_DWORD)v21);
  v25 = v24 + v21;
  if (v15)
    goto LABEL_15;
  *(_DWORD *)(v2 + 20) = v25;
  if (__OFADD__(v19, v21))
LABEL_16:
    __break(1u);
}

_QWORD *ListSelectOption.hash(into:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _OWORD *v4;
  uint64_t v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  _OWORD v30[4];
  _OWORD v31[3];
  __int128 v32;
  _BYTE v33[96];

  v2 = v1;
  v4 = OUTLINED_FUNCTION_14_14(a1, &v25);
  v6 = v26;
  v5 = v27;
  v8 = v28;
  v7 = v29;
  OUTLINED_FUNCTION_14_14((uint64_t)v4, v30);
  OUTLINED_FUNCTION_25_11();
  if (!(!v11 & v10))
    __asm { BR              X10 }
  v31[0] = v30[0];
  v31[1] = v30[1];
  v31[2] = v30[2];
  v32 = v30[3];
  sub_1A594CE88();
  sub_1A56D08B0((uint64_t)v31, (uint64_t)v33);
  OUTLINED_FUNCTION_10_19();
  if ((v33[72] & 1) != 0)
  {
    v12 = OUTLINED_FUNCTION_3_19();
    OUTLINED_FUNCTION_0_67(v12, v13, v14, v15, v6 & 1);
    sub_1A5666818(v5, v8, v7);
    OUTLINED_FUNCTION_30_13();
  }
  else
  {
    v16 = OUTLINED_FUNCTION_2_21();
    OUTLINED_FUNCTION_0_67(v16, v17, v18, v19, v6 & 1);
    sub_1A5666818(v5, v8, v7);
  }
  sub_1A594B1D8();
  v20 = *((_QWORD *)&v32 + 1);
  if (HIBYTE(*((_QWORD *)&v32 + 1)) == 255)
  {
    OUTLINED_FUNCTION_35_3();
  }
  else
  {
    v21 = HIBYTE(*((_QWORD *)&v32 + 1)) & 1;
    OUTLINED_FUNCTION_30_2();
    OUTLINED_FUNCTION_2_44();
    OUTLINED_FUNCTION_13_18(a1, v22, v23, v20 & 0xFFFFFFFFFFFFFFLL | ((unint64_t)v21 << 56));
    OUTLINED_FUNCTION_7_20();
  }
  return sub_1A56D2A50(v2, (uint64_t)sub_1A5666868, (uint64_t)sub_1A56668A4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))sub_1A5666830);
}

uint64_t static ListSelectOption.__derived_enum_equals(_:_:)(__int128 *a1, _QWORD *a2)
{
  uint64_t v4;
  char v6;
  char v7;
  char v8;
  _OWORD v10[2];
  __int128 v11;
  __int128 v12;
  _OWORD v13[4];
  _OWORD v14[4];
  _OWORD v15[4];

  sub_1A56D0898(a1, v14);
  OUTLINED_FUNCTION_25_11();
  if (!(!v7 & v6))
    __asm { BR              X10 }
  v15[0] = v14[0];
  v15[1] = v14[1];
  v15[2] = v14[2];
  v15[3] = v14[3];
  OUTLINED_FUNCTION_14_14(v4, v10);
  if ((v11 & 0xFC | 2) == 0xFE)
  {
    v8 = 0;
  }
  else
  {
    v13[0] = v10[0];
    v13[1] = v10[1];
    v13[2] = v11;
    v13[3] = v12;
    OUTLINED_FUNCTION_2_45(a1);
    OUTLINED_FUNCTION_2_45(a2);
    v8 = sub_1A56CFF98(v15, (uint64_t)v13);
    OUTLINED_FUNCTION_1_49(a2);
    OUTLINED_FUNCTION_1_49(a1);
  }
  return v8 & 1;
}

uint64_t ListSelectOption.hashValue.getter()
{
  __int128 *v0;
  __int128 *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char v8;
  char v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[72];
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  _OWORD v28[4];
  _OWORD v29[3];
  __int128 v30;
  _BYTE v31[96];

  v1 = v0;
  sub_1A56D0898(v0, &v23);
  v2 = v24;
  v3 = v25;
  v4 = v26;
  v5 = v27;
  v6 = sub_1A594CE64();
  OUTLINED_FUNCTION_14_14(v6, v28);
  OUTLINED_FUNCTION_25_11();
  if (!(!v9 & v8))
    __asm { BR              X10 }
  v29[0] = v28[0];
  v29[1] = v28[1];
  v29[2] = v28[2];
  v30 = v28[3];
  sub_1A594CE88();
  sub_1A56D08B0((uint64_t)v29, (uint64_t)v31);
  OUTLINED_FUNCTION_10_19();
  if ((v31[72] & 1) != 0)
  {
    v11 = OUTLINED_FUNCTION_3_19();
    OUTLINED_FUNCTION_0_67(v11, v12, v13, v14, v2 & 1);
    sub_1A5666818(v3, v4, v5);
    OUTLINED_FUNCTION_30_13();
  }
  else
  {
    v15 = OUTLINED_FUNCTION_2_21();
    OUTLINED_FUNCTION_0_67(v15, v16, v17, v18, v2 & 1);
    sub_1A5666818(v3, v4, v5);
  }
  sub_1A594B1D8();
  v19 = *((_QWORD *)&v30 + 1);
  if (HIBYTE(*((_QWORD *)&v30 + 1)) == 255)
  {
    OUTLINED_FUNCTION_35_3();
  }
  else
  {
    OUTLINED_FUNCTION_30_2();
    OUTLINED_FUNCTION_2_44();
    OUTLINED_FUNCTION_13_18((uint64_t)v22, v20, v21, v19 & 0xFFFFFFFFFFFFFFLL | ((unint64_t)(HIBYTE(v19) & 1) << 56));
    OUTLINED_FUNCTION_7_20();
  }
  sub_1A56D2A50(v1, (uint64_t)sub_1A5666868, (uint64_t)sub_1A56668A4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))sub_1A5666830);
  return sub_1A594CED0();
}

uint64_t sub_1A56D1FE0()
{
  __int128 *v0;
  _OWORD v2[4];

  sub_1A56D0898(v0, v2);
  return ListSelectOption.hashValue.getter();
}

void sub_1A56D2014(uint64_t a1)
{
  __int128 *v1;
  _OWORD v3[4];

  sub_1A56D0898(v1, v3);
  ListSelectOption.hash(into:)(a1);
  OUTLINED_FUNCTION_29_11();
}

uint64_t sub_1A56D2048()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _BYTE v10[72];

  v2 = *v0;
  v1 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  v6 = v0[4];
  v5 = v0[5];
  v8 = v0[6];
  v7 = v0[7];
  sub_1A594CE64();
  switch((char)v6)
  {
    case -4:
    case -3:
    case -2:
    case -1:
      sub_1A594CE88();
      break;
    default:
      sub_1A594CE88();
      sub_1A594CE88();
      if ((v6 & 1) != 0)
      {
        sub_1A56667EC(v2, v1, v4, v3, 1);
        sub_1A5666818(v5, v8, v7);
        sub_1A594B1D8();
      }
      else
      {
        sub_1A56667EC(v2, v1, v4, v3, 0);
        sub_1A5666818(v5, v8, v7);
      }
      sub_1A594B1D8();
      sub_1A594CE94();
      if (HIBYTE(v7) != 255)
      {
        sub_1A56667D4(v5, v8, v7, HIBYTE(v7) & 1);
        OptionValueComp.hash(into:)((uint64_t)v10, v5, v8, v7 & 0xFFFFFFFFFFFFFFLL | ((unint64_t)(HIBYTE(v7) & 1) << 56));
        sub_1A56668A4(v5, v8, v7);
      }
      sub_1A5666830(v2, v1, v4, v3, v6);
      break;
  }
  return sub_1A594CED0();
}

uint64_t sub_1A56D2250(__int128 *a1)
{
  _OWORD *v1;
  __int128 v3[4];
  _OWORD v4[4];

  v1 = sub_1A56D0898(a1, v3);
  OUTLINED_FUNCTION_14_14((uint64_t)v1, v4);
  return static ListSelectOption.__derived_enum_equals(_:_:)(v3, v4) & 1;
}

uint64_t ListSelectOptions.baseOption.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1A56D2AA0(v1, a1);
}

uint64_t ListSelectOptions.baseOption.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1A56D2ADC(a1, v1);
}

double (*ListSelectOptions.baseOption.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ListSelectOptions.options.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t ListSelectOptions.options.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 64) = a1;
  return result;
}

double (*ListSelectOptions.options.modify())(_QWORD)
{
  return nullsub_1;
}

void ListSelectOptions.init(baseOption:options:)(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _OWORD v8[4];

  sub_1A56D0898(a1, v8);
  v5 = v8[1];
  v6 = v8[2];
  v7 = v8[3];
  *(_OWORD *)a3 = v8[0];
  *(_OWORD *)(a3 + 16) = v5;
  *(_OWORD *)(a3 + 32) = v6;
  *(_OWORD *)(a3 + 48) = v7;
  *(_QWORD *)(a3 + 64) = a2;
  OUTLINED_FUNCTION_29_11();
}

uint64_t ListSelectOptions.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v28)(uint64_t, uint64_t, uint64_t, uint64_t, char);
  uint64_t (*v29)(uint64_t, uint64_t, unint64_t);
  uint64_t v30;
  unint64_t v31;

  v2 = v1;
  v4 = v2[4];
  if (*((_BYTE *)v2 + 32) == 0xFF)
  {
    OUTLINED_FUNCTION_2_21();
  }
  else
  {
    v5 = *v2;
    v6 = v2[1];
    v7 = v2[2];
    v8 = v2[3];
    v9 = v2[5];
    v10 = v2[6];
    v11 = v2[7];
    OUTLINED_FUNCTION_3_19();
    if ((v4 & 1) != 0)
    {
      OUTLINED_FUNCTION_3_19();
      v16 = OUTLINED_FUNCTION_21_18();
      sub_1A56667EC(v16, v17, v18, v19, 1);
      OUTLINED_FUNCTION_14_15();
      sub_1A594B1D8();
    }
    else
    {
      OUTLINED_FUNCTION_2_21();
      v12 = OUTLINED_FUNCTION_21_18();
      sub_1A56667EC(v12, v13, v14, v15, 0);
      OUTLINED_FUNCTION_14_15();
    }
    sub_1A594B1D8();
    if (HIBYTE(v11) == 255)
    {
      OUTLINED_FUNCTION_35_3();
    }
    else
    {
      v30 = v7;
      OUTLINED_FUNCTION_30_2();
      sub_1A56667D4(v9, v10, v11, HIBYTE(v11) & 1);
      HIBYTE(v31) = HIBYTE(v11) & 1;
      OptionValueComp.hash(into:)(a1, v9, v10, v11 & 0xFFFFFFFFFFFFFFLL | ((unint64_t)(HIBYTE(v11) & 1) << 56));
      sub_1A56668A4(v9, v10, v11);
    }
    v28 = sub_1A5666868;
    v29 = sub_1A56668A4;
    sub_1A56D2B18(v5, v6, v7, v8, v4);
  }
  v20 = v2[8];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5695CB0(a1, v20, v21, v22, v23, v24, v25, v26, (uint64_t)v28, (uint64_t)v29, v30, v31);
  return swift_bridgeObjectRelease();
}

uint64_t static ListSelectOptions.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  __int128 v16[4];
  __int128 v17[4];
  _OWORD v18[4];
  _OWORD v19[4];
  _OWORD v20[2];
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;

  sub_1A56D0898((__int128 *)a1, v17);
  sub_1A56D0898((__int128 *)a2, v16);
  v4 = sub_1A56D0898(v17, v20);
  if ((_BYTE)v21 == 0xFF)
  {
    OUTLINED_FUNCTION_26_9((uint64_t)v4, v5, v6, v7, v8, v9, v10, v11, v16[0]);
    OUTLINED_FUNCTION_16_16();
    if (!v12)
    {
LABEL_7:
      v14 = 0;
      return v14 & 1;
    }
  }
  else
  {
    v18[0] = v20[0];
    v18[1] = v20[1];
    v18[2] = v21;
    v18[3] = v22;
    OUTLINED_FUNCTION_26_9((uint64_t)v4, v5, v6, v7, v8, v9, v10, v11, v16[0]);
    OUTLINED_FUNCTION_16_16();
    if (v12)
      goto LABEL_7;
    v19[0] = v23;
    v19[1] = v24;
    v19[2] = v25;
    v19[3] = v26;
    OUTLINED_FUNCTION_2_45(v17);
    OUTLINED_FUNCTION_2_45(v16);
    v13 = sub_1A56CFF98(v18, (uint64_t)v19);
    OUTLINED_FUNCTION_1_49(v16);
    OUTLINED_FUNCTION_1_49(v17);
    if ((v13 & 1) == 0)
      goto LABEL_7;
  }
  v14 = sub_1A568B0E0(*(_QWORD *)(a1 + 64), *(_QWORD *)(a2 + 64));
  return v14 & 1;
}

uint64_t ListSelectOptions.hashValue.getter()
{
  _BYTE v1[72];

  sub_1A594CE64();
  ListSelectOptions.hash(into:)((uint64_t)v1);
  return sub_1A594CED0();
}

uint64_t sub_1A56D2628()
{
  _BYTE v1[72];

  sub_1A594CE64();
  ListSelectOptions.hash(into:)((uint64_t)v1);
  return sub_1A594CED0();
}

uint64_t sub_1A56D2660(void *__src, const void *a2)
{
  _BYTE v4[72];
  _BYTE __dst[72];

  memcpy(v4, __src, sizeof(v4));
  memcpy(__dst, a2, sizeof(__dst));
  return static ListSelectOptions.__derived_struct_equals(_:_:)((uint64_t)v4, (uint64_t)__dst) & 1;
}

void sub_1A56D26B4(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::Int v8;
  Swift::Int v9;
  char v10;
  Swift::String v11;
  Swift::Int v12;
  int v13;
  BOOL v14;
  int v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[4];
  char v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;

  v4 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A56627A0(v4, 0, 0xE000000000000000, 0, (void *)0xE000000000000000, 0, 0xE000000000000000, 0, a2);
  v6 = v5;
  swift_bridgeObjectRelease();
  v7 = a1[4];
  if (*((_BYTE *)a1 + 32) == 0xFF)
  {
    v8 = *(unsigned int *)(a2 + 20);
    sub_1A56814E0(0x4249524353425553, 0xEA00000000004445, a2 + 8, *(_DWORD *)(a2 + 20));
    if ((v10 & 1) != 0)
    {
      v11._countAndFlagsBits = 0x4249524353425553;
      v11._object = (void *)0xEA00000000004445;
      v9 = ByteBuffer._setStringSlowpath(_:at:)(v11, v8);
    }
    v12 = v9;
    v13 = *(_DWORD *)(a2 + 20);
    v14 = __CFADD__(v13, (_DWORD)v9);
    v15 = v13 + v9;
    if (v14)
      goto LABEL_10;
    *(_DWORD *)(a2 + 20) = v15;
  }
  else
  {
    v17 = a1[6];
    v16 = a1[7];
    v18 = a1[5];
    v20 = a1[2];
    v19 = a1[3];
    v25 = v6;
    v21 = *a1;
    v22 = a1[1];
    v26[0] = v21;
    v26[1] = v22;
    v26[2] = v20;
    v26[3] = v19;
    v27 = v7 & 1;
    v28 = v18;
    v29 = v17;
    v30 = v16;
    sub_1A56667EC(v21, v22, v20, v19, v7 & 1);
    sub_1A5666818(v18, v17, v16);
    sub_1A56E4930(v26);
    v12 = v23;
    v24 = v21;
    v6 = v25;
    sub_1A56D2B18(v24, v22, v20, v19, v7);
  }
  if (__OFADD__(v6, v12))
  {
    __break(1u);
LABEL_10:
    __break(1u);
  }
}

Swift::Int sub_1A56D2864(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD *v4;
  BOOL v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  char v24;
  int v25;
  int v26;
  BOOL v27;
  Swift::Int result;
  uint64_t v29;
  unint64_t v30;
  _QWORD v31[4];
  char v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;

  v3 = *(_QWORD *)(a1 + 32);
  OUTLINED_FUNCTION_25_11();
  if (v7 || !v6)
    __asm { BR              X10 }
  v29 = v4[6];
  v30 = v4[7];
  v8 = v4[5];
  v10 = v4[2];
  v9 = v4[3];
  v11 = v4[1];
  v31[0] = *v4;
  v31[1] = v11;
  v31[2] = v10;
  v31[3] = v9;
  v32 = v3 & 1;
  v33 = v8;
  v34 = v29;
  v35 = v30;
  v12 = OUTLINED_FUNCTION_20_15();
  sub_1A56667EC(v12, v13, v14, v15, v16);
  sub_1A5666818(v8, v29, v30);
  sub_1A56E4930(v31);
  v18 = v17;
  v19 = OUTLINED_FUNCTION_20_15();
  sub_1A5666830(v19, v20, v21, v22, v3);
  OUTLINED_FUNCTION_3_33(32, 0xE100000000000000);
  if ((v24 & 1) != 0)
    v23 = OUTLINED_FUNCTION_12_18(32, 0xE100000000000000);
  v25 = *(_DWORD *)(a2 + 20);
  v6 = __CFADD__(v25, (_DWORD)v23);
  v26 = v25 + v23;
  if (v6)
  {
    __break(1u);
    goto LABEL_9;
  }
  *(_DWORD *)(a2 + 20) = v26;
  v27 = __OFADD__(v18, v23);
  result = v18 + v23;
  if (v27)
  {
LABEL_9:
    __break(1u);
    JUMPOUT(0x1A56D2A3CLL);
  }
  return result;
}

_QWORD *sub_1A56D2A50(_QWORD *a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))
{
  a4(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a2, a3);
  return a1;
}

uint64_t sub_1A56D2AA0(uint64_t *a1, uint64_t a2)
{
  initializeWithCopy for ListSelectBaseOption(a2, a1);
  return a2;
}

uint64_t sub_1A56D2ADC(uint64_t a1, uint64_t a2)
{
  assignWithTake for ListSelectBaseOption(a2, a1);
  return a2;
}

uint64_t sub_1A56D2B18(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  if (a5 != -1)
  {
    OUTLINED_FUNCTION_109(result, a2, a3, a4, a5);
    v5 = OUTLINED_FUNCTION_238();
    return OUTLINED_FUNCTION_134(v5, v6, v7, v8);
  }
  return result;
}

unint64_t sub_1A56D2B50()
{
  unint64_t result;

  result = qword_1EE7A9A00;
  if (!qword_1EE7A9A00)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ListSelectOption, &type metadata for ListSelectOption);
    atomic_store(result, (unint64_t *)&qword_1EE7A9A00);
  }
  return result;
}

unint64_t sub_1A56D2B90()
{
  unint64_t result;

  result = qword_1EE7A9A08;
  if (!qword_1EE7A9A08)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ListSelectOptions, &type metadata for ListSelectOptions);
    atomic_store(result, (unint64_t *)&qword_1EE7A9A08);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ListSelectOption(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  unsigned int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFB && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 251);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 > 1)
    v4 = (v3 ^ 0xFF) + 1;
  else
    v4 = 0;
  if (v4 >= 5)
    return v4 - 4;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ListSelectOption(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 251;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 64) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -4 - a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ListSelectOption()
{
  return &type metadata for ListSelectOption;
}

uint64_t destroy for ListSelectOptions(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(unsigned __int8 *)(a1 + 32);
  if (v2 != 255)
  {
    sub_1A5666868(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v2 & 1);
    v3 = *(_QWORD *)(a1 + 56);
    if (HIBYTE(v3) != 255)
      sub_1A56667E0(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), v3, HIBYTE(v3) & 1);
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ListSelectOptions(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *((unsigned __int8 *)a2 + 32);
  if (v4 == 255)
  {
    v5 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    v6 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v6;
  }
  else
  {
    v7 = v4 & 1;
    v8 = *a2;
    v9 = a2[1];
    v10 = a2[2];
    v11 = a2[3];
    sub_1A56667EC(*a2, v9, v10, v11, v4 & 1);
    *(_QWORD *)a1 = v8;
    *(_QWORD *)(a1 + 8) = v9;
    *(_QWORD *)(a1 + 16) = v10;
    *(_QWORD *)(a1 + 24) = v11;
    *(_BYTE *)(a1 + 32) = v7;
    v12 = a2[7];
    if (HIBYTE(v12) == 255)
    {
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
      *(_QWORD *)(a1 + 56) = a2[7];
    }
    else
    {
      v13 = a2[5];
      v14 = a2[6];
      sub_1A56667D4(v13, v14, a2[7], HIBYTE(v12) & 1);
      *(_QWORD *)(a1 + 40) = v13;
      *(_QWORD *)(a1 + 48) = v14;
      *(_BYTE *)(a1 + 62) = BYTE6(v12);
      *(_WORD *)(a1 + 60) = WORD2(v12);
      *(_DWORD *)(a1 + 56) = v12;
      *(_BYTE *)(a1 + 63) = HIBYTE(v12) & 1;
    }
  }
  *(_QWORD *)(a1 + 64) = a2[8];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for ListSelectOptions(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  __int128 v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  __int128 *v28;
  __int128 *v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;

  v4 = *((unsigned __int8 *)a2 + 32);
  if (*(_BYTE *)(a1 + 32) == 0xFF)
  {
    if (v4 == 255)
    {
      v5 = *a2;
      v6 = a2[1];
      v7 = a2[3];
      *(_OWORD *)(a1 + 32) = a2[2];
      *(_OWORD *)(a1 + 48) = v7;
      *(_OWORD *)a1 = v5;
      *(_OWORD *)(a1 + 16) = v6;
      goto LABEL_15;
    }
    v11 = v4 & 1;
    v12 = *(_QWORD *)a2;
    v13 = *((_QWORD *)a2 + 1);
    v14 = *((_QWORD *)a2 + 2);
    v15 = *((_QWORD *)a2 + 3);
    sub_1A56667EC(*(_QWORD *)a2, v13, v14, v15, v4 & 1);
    *(_QWORD *)a1 = v12;
    *(_QWORD *)(a1 + 8) = v13;
    *(_QWORD *)(a1 + 16) = v14;
    *(_QWORD *)(a1 + 24) = v15;
    *(_BYTE *)(a1 + 32) = v11;
    v16 = *((_QWORD *)a2 + 7);
    if (HIBYTE(v16) == 255)
    {
      v17 = *(__int128 *)((char *)a2 + 40);
      *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
      *(_OWORD *)(a1 + 40) = v17;
      goto LABEL_15;
    }
LABEL_11:
    v31 = *((_QWORD *)a2 + 5);
    v32 = *((_QWORD *)a2 + 6);
    sub_1A56667D4(v31, v32, v16, HIBYTE(v16) & 1);
    *(_QWORD *)(a1 + 40) = v31;
    *(_QWORD *)(a1 + 48) = v32;
    *(_BYTE *)(a1 + 62) = BYTE6(v16);
    *(_WORD *)(a1 + 60) = WORD2(v16);
    *(_DWORD *)(a1 + 56) = v16;
    *(_BYTE *)(a1 + 63) = HIBYTE(v16) & 1;
    goto LABEL_15;
  }
  if (v4 == 255)
  {
    sub_1A56D3004(a1);
    v8 = a2[3];
    v10 = *a2;
    v9 = a2[1];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v8;
    *(_OWORD *)a1 = v10;
    *(_OWORD *)(a1 + 16) = v9;
    goto LABEL_15;
  }
  v18 = v4 & 1;
  v19 = *(_QWORD *)a2;
  v20 = *((_QWORD *)a2 + 1);
  v21 = *((_QWORD *)a2 + 2);
  v22 = *((_QWORD *)a2 + 3);
  sub_1A56667EC(*(_QWORD *)a2, v20, v21, v22, v4 & 1);
  v23 = *(_QWORD *)a1;
  v24 = *(_QWORD *)(a1 + 8);
  v25 = *(_QWORD *)(a1 + 16);
  v26 = *(_QWORD *)(a1 + 24);
  v27 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)a1 = v19;
  *(_QWORD *)(a1 + 8) = v20;
  *(_QWORD *)(a1 + 16) = v21;
  *(_QWORD *)(a1 + 24) = v22;
  *(_BYTE *)(a1 + 32) = v18;
  sub_1A5666868(v23, v24, v25, v26, v27);
  v28 = (__int128 *)(a1 + 40);
  v29 = (__int128 *)((char *)a2 + 40);
  v16 = *((_QWORD *)a2 + 7);
  if (*(unsigned __int8 *)(a1 + 63) == 255)
  {
    if (HIBYTE(v16) == 255)
    {
      v30 = *v29;
      *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
      *v28 = v30;
      goto LABEL_15;
    }
    goto LABEL_11;
  }
  if (HIBYTE(v16) == 255)
  {
    sub_1A56D0D08(a1 + 40);
    v33 = *((_QWORD *)a2 + 7);
    *v28 = *v29;
    *(_QWORD *)(a1 + 56) = v33;
  }
  else
  {
    v34 = *((_QWORD *)a2 + 5);
    v35 = *((_QWORD *)a2 + 6);
    sub_1A56667D4(v34, v35, *((_QWORD *)a2 + 7), HIBYTE(v16) & 1);
    v36 = *(_QWORD *)(a1 + 40);
    v37 = *(_QWORD *)(a1 + 48);
    v38 = *(unsigned int *)(a1 + 56) | ((unint64_t)(*(unsigned __int16 *)(a1 + 60) | (*(unsigned __int8 *)(a1 + 62) << 16)) << 32);
    v39 = *(_BYTE *)(a1 + 63);
    *(_QWORD *)(a1 + 40) = v34;
    *(_QWORD *)(a1 + 48) = v35;
    *(_DWORD *)(a1 + 56) = v16;
    *(_WORD *)(a1 + 60) = WORD2(v16);
    *(_BYTE *)(a1 + 62) = BYTE6(v16);
    *(_BYTE *)(a1 + 63) = HIBYTE(v16) & 1;
    sub_1A56667E0(v36, v37, v38, v39);
  }
LABEL_15:
  *(_QWORD *)(a1 + 64) = *((_QWORD *)a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A56D3004(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9A10);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t assignWithTake for ListSelectOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  _OWORD *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = *(unsigned __int8 *)(a1 + 32);
  if (v4 == 255)
    goto LABEL_4;
  v5 = *(unsigned __int8 *)(a2 + 32);
  if (v5 == 255)
  {
    sub_1A56D3004(a1);
LABEL_4:
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    v7 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v7;
    goto LABEL_10;
  }
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v12;
  *(_BYTE *)(a1 + 32) = v5 & 1;
  sub_1A5666868(v8, v9, v10, v11, v4 & 1);
  v13 = (_OWORD *)(a2 + 40);
  v14 = *(_QWORD *)(a1 + 56);
  if (HIBYTE(v14) != 255)
  {
    v15 = *(_QWORD *)(a2 + 56);
    if (HIBYTE(v15) != 255)
    {
      v16 = *(_QWORD *)(a1 + 40);
      v17 = *(_QWORD *)(a1 + 48);
      *(_OWORD *)(a1 + 40) = *v13;
      *(_DWORD *)(a1 + 56) = v15;
      *(_BYTE *)(a1 + 62) = BYTE6(v15);
      *(_WORD *)(a1 + 60) = WORD2(v15);
      *(_BYTE *)(a1 + 63) = HIBYTE(v15) & 1;
      sub_1A56667E0(v16, v17, v14, HIBYTE(v14) & 1);
      goto LABEL_10;
    }
    sub_1A56D0D08(a1 + 40);
  }
  *(_OWORD *)(a1 + 40) = *v13;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
LABEL_10:
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ListSelectOptions(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 72))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 64);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ListSelectOptions(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 64) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ListSelectOptions()
{
  return &type metadata for ListSelectOptions;
}

uint64_t sub_1A56D31E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796B88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *OUTLINED_FUNCTION_1_49(_QWORD *a1)
{
  uint64_t v1;
  void (*v2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v3;

  return sub_1A56D2A50(a1, v1, v3, v2);
}

_QWORD *OUTLINED_FUNCTION_2_45(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  void (*v3)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);

  return sub_1A56D2A50(a1, v1, v2, v3);
}

void OUTLINED_FUNCTION_3_33(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  Swift::UInt32 v3;

  sub_1A56814E0(a1, a2, v2, v3);
}

uint64_t OUTLINED_FUNCTION_6_27()
{
  return 0x5649535255434552;
}

uint64_t OUTLINED_FUNCTION_8_21()
{
  return 0x2D4C414943455053;
}

uint64_t OUTLINED_FUNCTION_10_20()
{
  return 0x4249524353425553;
}

Swift::Int OUTLINED_FUNCTION_12_18(uint64_t a1, uint64_t a2)
{
  Swift::Int v2;

  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v2);
}

uint64_t OUTLINED_FUNCTION_14_15()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  sub_1A5666818(v1, v2, v3);
  return v0;
}

_OWORD *OUTLINED_FUNCTION_18_17()
{
  __int128 *v0;
  uint64_t v1;

  return sub_1A56D0898(v0, (_OWORD *)(v1 - 128));
}

uint64_t OUTLINED_FUNCTION_20_15()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_21_18()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_22_17()
{
  return 0x45544F4D4552;
}

_OWORD *OUTLINED_FUNCTION_26_9(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9)
{
  uint64_t v9;

  return sub_1A56D0898(&a9, (_OWORD *)(v9 - 128));
}

uint64_t OUTLINED_FUNCTION_30_13()
{
  return sub_1A594B1D8();
}

NIOIMAPCore2::MailboxAttribute_optional __swiftcall MailboxAttribute.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v1;

  v1 = sub_1A594CB28();
  swift_bridgeObjectRelease();
  if (v1 >= 7)
    return (NIOIMAPCore2::MailboxAttribute_optional)7;
  else
    return (NIOIMAPCore2::MailboxAttribute_optional)v1;
}

void *static MailboxAttribute.allCases.getter()
{
  return &unk_1E4E601F8;
}

uint64_t MailboxAttribute.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A56D341C
                                                            + 4 * asc_1A59B1E20[a1]))(0x534547415353454DLL, 0xE800000000000000);
}

uint64_t sub_1A56D341C()
{
  return 0x544E45434552;
}

uint64_t sub_1A56D3430()
{
  return 0x5458454E444955;
}

uint64_t sub_1A56D3448()
{
  return 0x44494C4156444955;
}

uint64_t sub_1A56D3468()
{
  return 0x4E4545534E55;
}

uint64_t sub_1A56D347C()
{
  return 1163544915;
}

uint64_t sub_1A56D348C()
{
  return 0x4D54534548474948;
}

void sub_1A56D34B0(char *a1)
{
  sub_1A5658328(*a1);
}

void sub_1A56D34BC()
{
  unsigned __int8 *v0;

  sub_1A56F9F60(*v0);
}

void sub_1A56D34C4(uint64_t a1)
{
  char *v1;

  sub_1A56A04A4(a1, *v1);
}

void sub_1A56D34CC()
{
  sub_1A56FA0F4();
}

NIOIMAPCore2::MailboxAttribute_optional sub_1A56D34D4@<W0>(Swift::String *a1@<X0>, NIOIMAPCore2::MailboxAttribute_optional *a2@<X8>)
{
  NIOIMAPCore2::MailboxAttribute_optional result;

  result.value = MailboxAttribute.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t sub_1A56D3500@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = MailboxAttribute.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_1A56D3528(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E4E601F8;
}

uint64_t MailboxStatus.messageCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t MailboxStatus.messageCount.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)v2 = result;
  *(_BYTE *)(v2 + 8) = a2 & 1;
  return result;
}

double (*MailboxStatus.messageCount.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t MailboxStatus.recentCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t MailboxStatus.recentCount.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = result;
  *(_BYTE *)(v2 + 24) = a2 & 1;
  return result;
}

double (*MailboxStatus.recentCount.modify())(_QWORD)
{
  return nullsub_1;
}

unint64_t MailboxStatus.nextUID.getter()
{
  uint64_t v0;

  return OUTLINED_FUNCTION_4_30(*(unsigned int *)(v0 + 28));
}

uint64_t MailboxStatus.nextUID.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 28) = result;
  *(_BYTE *)(v1 + 32) = BYTE4(result) & 1;
  return result;
}

double (*MailboxStatus.nextUID.modify())(_QWORD)
{
  return nullsub_1;
}

unint64_t MailboxStatus.uidValidity.getter()
{
  uint64_t v0;

  return OUTLINED_FUNCTION_4_30(*(unsigned int *)(v0 + 36));
}

uint64_t MailboxStatus.uidValidity.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 36) = result;
  *(_BYTE *)(v1 + 40) = BYTE4(result) & 1;
  return result;
}

double (*MailboxStatus.uidValidity.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t MailboxStatus.unseenCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t MailboxStatus.unseenCount.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = result;
  *(_BYTE *)(v2 + 56) = a2 & 1;
  return result;
}

double (*MailboxStatus.unseenCount.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t MailboxStatus.size.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

uint64_t MailboxStatus.size.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = result;
  *(_BYTE *)(v2 + 72) = a2 & 1;
  return result;
}

double (*MailboxStatus.size.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t MailboxStatus.highestModificationSequence.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 80);
}

uint64_t MailboxStatus.highestModificationSequence.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 80) = result;
  *(_BYTE *)(v2 + 88) = a2 & 1;
  return result;
}

double (*MailboxStatus.highestModificationSequence.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t MailboxStatus.init(messageCount:recentCount:nextUID:uidValidity:unseenCount:size:highestModificationSequence:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, char a11, uint64_t a12, char a13)
{
  *(_QWORD *)a9 = result;
  *(_BYTE *)(a9 + 8) = a2 & 1;
  *(_QWORD *)(a9 + 16) = a3;
  *(_BYTE *)(a9 + 24) = a4 & 1;
  *(_DWORD *)(a9 + 28) = a5;
  *(_BYTE *)(a9 + 32) = BYTE4(a5) & 1;
  *(_DWORD *)(a9 + 36) = a6;
  *(_BYTE *)(a9 + 40) = BYTE4(a6) & 1;
  *(_QWORD *)(a9 + 48) = a7;
  *(_BYTE *)(a9 + 56) = a8 & 1;
  *(_QWORD *)(a9 + 64) = a10;
  *(_BYTE *)(a9 + 72) = a11 & 1;
  *(_QWORD *)(a9 + 80) = a12;
  *(_BYTE *)(a9 + 88) = a13 & 1;
  return result;
}

uint64_t MailboxStatus.hash(into:)()
{
  _BYTE *v0;

  if (v0[8] == 1)
  {
    OUTLINED_FUNCTION_35_3();
  }
  else
  {
    OUTLINED_FUNCTION_30_2();
    OUTLINED_FUNCTION_5_27();
  }
  if (v0[24] == 1)
  {
    OUTLINED_FUNCTION_35_3();
  }
  else
  {
    OUTLINED_FUNCTION_30_2();
    OUTLINED_FUNCTION_5_27();
  }
  if (v0[32] == 1)
  {
    OUTLINED_FUNCTION_35_3();
  }
  else
  {
    OUTLINED_FUNCTION_30_2();
    sub_1A594CEAC();
  }
  if (v0[40] == 1)
  {
    OUTLINED_FUNCTION_35_3();
  }
  else
  {
    OUTLINED_FUNCTION_30_2();
    sub_1A594CEAC();
  }
  if (v0[56] == 1)
  {
    OUTLINED_FUNCTION_35_3();
  }
  else
  {
    OUTLINED_FUNCTION_30_2();
    OUTLINED_FUNCTION_5_27();
  }
  if (v0[72] == 1)
  {
    OUTLINED_FUNCTION_35_3();
  }
  else
  {
    OUTLINED_FUNCTION_30_2();
    OUTLINED_FUNCTION_5_27();
  }
  if (v0[88] == 1)
    return OUTLINED_FUNCTION_35_3();
  OUTLINED_FUNCTION_30_2();
  return sub_1A594CEB8();
}

BOOL static MailboxStatus.__derived_struct_equals(_:_:)(_BOOL8 result, uint64_t a2)
{
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_BYTE *)(a2 + 8);
  if ((*(_BYTE *)(result + 8) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 8))
      return 0;
  }
  else
  {
    if (*(_QWORD *)result != *(_QWORD *)a2)
      v2 = 1;
    if ((v2 & 1) != 0)
      return 0;
  }
  v3 = *(_BYTE *)(a2 + 24);
  if ((*(_BYTE *)(result + 24) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 24))
      return 0;
  }
  else
  {
    if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
      v3 = 1;
    if ((v3 & 1) != 0)
      return 0;
  }
  v4 = *(_BYTE *)(a2 + 32);
  if ((*(_BYTE *)(result + 32) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 32))
      return 0;
  }
  else
  {
    if (*(_DWORD *)(a2 + 28) != *(_DWORD *)(result + 28))
      v4 = 1;
    if ((v4 & 1) != 0)
      return 0;
  }
  v5 = *(_BYTE *)(a2 + 40);
  if ((*(_BYTE *)(result + 40) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 40))
      return 0;
  }
  else
  {
    if (*(_DWORD *)(result + 36) != *(_DWORD *)(a2 + 36))
      v5 = 1;
    if ((v5 & 1) != 0)
      return 0;
  }
  v6 = *(_BYTE *)(a2 + 56);
  if ((*(_BYTE *)(result + 56) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 56))
      return 0;
  }
  else
  {
    if (*(_QWORD *)(result + 48) != *(_QWORD *)(a2 + 48))
      v6 = 1;
    if ((v6 & 1) != 0)
      return 0;
  }
  v7 = *(_BYTE *)(a2 + 72);
  if ((*(_BYTE *)(result + 72) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 72))
      return 0;
  }
  else
  {
    if (*(_QWORD *)(result + 64) != *(_QWORD *)(a2 + 64))
      v7 = 1;
    if ((v7 & 1) != 0)
      return 0;
  }
  if ((*(_BYTE *)(result + 88) & 1) != 0)
    return (*(_BYTE *)(a2 + 88) & 1) != 0;
  if ((*(_BYTE *)(a2 + 88) & 1) != 0)
    return 0;
  v8 = *(_QWORD *)(result + 80);
  v9 = *(_QWORD *)(a2 + 80);
  if (((v9 | v8) & 0x8000000000000000) == 0)
    return v9 == v8;
  __break(1u);
  return result;
}

uint64_t MailboxStatus.hashValue.getter()
{
  sub_1A594CE64();
  MailboxStatus.hash(into:)();
  return sub_1A594CED0();
}

uint64_t sub_1A56D3968()
{
  sub_1A594CE64();
  MailboxStatus.hash(into:)();
  return sub_1A594CED0();
}

#error "1A56D3B68: call analysis failed (funcsize=96)"

uint64_t sub_1A56D3B9C(int a1, uint64_t a2, uint64_t a3, void *__src, uint64_t a5)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  _QWORD __dst[12];

  memcpy(__dst, __src, 0x59uLL);
  result = swift_getAtKeyPath();
  if ((v14 & 1) == 0)
  {
    __dst[0] = 0;
    __dst[1] = 0xE000000000000000;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594C924();
    v9 = __dst[0];
    v10 = __dst[1];
    swift_beginAccess();
    sub_1A5716154();
    v11 = *(_QWORD *)(*(_QWORD *)(a5 + 16) + 16);
    result = sub_1A5716248(v11);
    v12 = *(_QWORD *)(a5 + 16);
    *(_QWORD *)(v12 + 16) = v11 + 1;
    v13 = (_QWORD *)(v12 + 32 * v11);
    v13[4] = a2;
    v13[5] = a3;
    v13[6] = v9;
    v13[7] = v10;
  }
  return result;
}

uint64_t sub_1A56D3C90(int a1, uint64_t a2, uint64_t a3, void *__src, uint64_t a5)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  _QWORD __dst[12];

  memcpy(__dst, __src, 0x59uLL);
  result = swift_getAtKeyPath();
  if ((v14 & 1) == 0)
  {
    __dst[0] = 0;
    __dst[1] = 0xE000000000000000;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594C924();
    v9 = __dst[0];
    v10 = __dst[1];
    swift_beginAccess();
    sub_1A5716154();
    v11 = *(_QWORD *)(*(_QWORD *)(a5 + 16) + 16);
    result = sub_1A5716248(v11);
    v12 = *(_QWORD *)(a5 + 16);
    *(_QWORD *)(v12 + 16) = v11 + 1;
    v13 = (_QWORD *)(v12 + 32 * v11);
    v13[4] = a2;
    v13[5] = a3;
    v13[6] = v9;
    v13[7] = v10;
  }
  return result;
}

uint64_t sub_1A56D3D84(int a1, uint64_t a2, uint64_t a3, void *__src, uint64_t a5)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  _QWORD __dst[12];

  memcpy(__dst, __src, 0x59uLL);
  result = swift_getAtKeyPath();
  if ((v14 & 1) == 0)
  {
    __dst[0] = 0;
    __dst[1] = 0xE000000000000000;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594C924();
    v9 = __dst[0];
    v10 = __dst[1];
    swift_beginAccess();
    sub_1A5716154();
    v11 = *(_QWORD *)(*(_QWORD *)(a5 + 16) + 16);
    result = sub_1A5716248(v11);
    v12 = *(_QWORD *)(a5 + 16);
    *(_QWORD *)(v12 + 16) = v11 + 1;
    v13 = (_QWORD *)(v12 + 32 * v11);
    v13[4] = a2;
    v13[5] = a3;
    v13[6] = v9;
    v13[7] = v10;
  }
  return result;
}

unint64_t sub_1A56D3E7C()
{
  unint64_t result;

  result = qword_1EE7A9A18;
  if (!qword_1EE7A9A18)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for MailboxAttribute, &type metadata for MailboxAttribute);
    atomic_store(result, (unint64_t *)&qword_1EE7A9A18);
  }
  return result;
}

unint64_t sub_1A56D3EBC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE7A9A20;
  if (!qword_1EE7A9A20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract_0(&qword_1EE7A9A28);
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EE7A9A20);
  }
  return result;
}

unint64_t sub_1A56D3F04()
{
  unint64_t result;

  result = qword_1EE7A9A30;
  if (!qword_1EE7A9A30)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for MailboxStatus, &type metadata for MailboxStatus);
    atomic_store(result, (unint64_t *)&qword_1EE7A9A30);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MailboxAttribute(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFA)
  {
    if (a2 + 6 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 6) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 7;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v5 = v6 - 7;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for MailboxAttribute(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1A56D4014 + 4 * byte_1A59B1E2C[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1A56D4048 + 4 * byte_1A59B1E27[v4]))();
}

uint64_t sub_1A56D4048(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A56D4050(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A56D4058);
  return result;
}

uint64_t sub_1A56D4064(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A56D406CLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1A56D4070(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A56D4078(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MailboxAttribute()
{
  return &type metadata for MailboxAttribute;
}

void *__swift_memcpy89_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x59uLL);
}

uint64_t getEnumTagSinglePayload for MailboxStatus(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 89))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MailboxStatus(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 88) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 89) = v3;
  return result;
}

ValueMetadata *type metadata accessor for MailboxStatus()
{
  return &type metadata for MailboxStatus;
}

uint64_t sub_1A56D4110()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_1_50(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v4;

  return sub_1A56D3B9C(a1, a2, a3, v4, v3);
}

unint64_t OUTLINED_FUNCTION_4_30@<X0>(uint64_t a1@<X8>)
{
  unsigned __int8 v1;

  return a1 | ((unint64_t)v1 << 32);
}

uint64_t OUTLINED_FUNCTION_5_27()
{
  return sub_1A594CE88();
}

uint64_t OUTLINED_FUNCTION_6_28(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v4;

  return sub_1A56D3C90(a1, a2, a3, v4, v3);
}

void MailboxData.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void *v8;
  uint64_t v9;
  _BYTE __dst[208];

  OUTLINED_FUNCTION_14_16(a1, a2, a3, a4, a5, a6, a7, a8, v9);
  sub_1A56D4410(v8, __dst);
  __asm { BR              X11 }
}

void sub_1A56D41C8()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_16_17();
  OUTLINED_FUNCTION_9_20();
  v0 = OUTLINED_FUNCTION_22_18();
  sub_1A5695F10(v0, v1);
}

void *sub_1A56D4410(void *__src, void *__dst)
{
  return memcpy(__dst, __src, 0x69uLL);
}

void static MailboxData.__derived_enum_equals(_:_:)(void *a1)
{
  _BYTE __dst[312];

  sub_1A56D4410(a1, __dst);
  __asm { BR              X10 }
}

uint64_t sub_1A56D4474()
{
  void *v0;
  char v1;
  char v2;
  _BYTE v4[520];

  v4[216] = v1 & 0xF;
  sub_1A56D4410(v0, v4);
  if (v4[104] > 0xFu)
    v2 = 0;
  else
    sub_1A568E1F8();
  return v2 & 1;
}

uint64_t static MailboxData.SearchSort.__derived_struct_equals(_:_:)(_QWORD *a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t result;

  result = _s12NIOIMAPCore216SectionSpecifierV4PartV23__derived_struct_equalsySbAE_AEtFZ_0(a1, a3);
  if ((result & 1) == 0)
    return 0;
  if (((a4 | a2) & 0x8000000000000000) == 0)
    return a4 == a2;
  __break(1u);
  return result;
}

void MailboxData.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[72];

  OUTLINED_FUNCTION_15_10();
  MailboxData.hash(into:)((uint64_t)v7, v0, v1, v2, v3, v4, v5, v6);
  sub_1A594CED0();
  OUTLINED_FUNCTION_8_7();
}

void sub_1A56D4B1C()
{
  void *v0;
  uint64_t v1;

  sub_1A56D4410(v0, &v1);
  MailboxData.hashValue.getter();
}

void sub_1A56D4B50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_14_16(a1, a2, a3, a4, a5, a6, a7, a8, v16);
  MailboxData.hash(into:)(v8, v9, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_1A56D4B80()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[72];
  _BYTE __dst[112];

  sub_1A56D4410(v0, __dst);
  sub_1A594CE64();
  MailboxData.hash(into:)((uint64_t)v9, v1, v2, v3, v4, v5, v6, v7);
  return sub_1A594CED0();
}

uint64_t sub_1A56D4BD0(void *a1, void *a2)
{
  char v3;
  _BYTE v5[112];
  _BYTE __dst[112];

  sub_1A56D4410(a1, v5);
  sub_1A56D4410(a2, __dst);
  static MailboxData.__derived_enum_equals(_:_:)(v5);
  return v3 & 1;
}

uint64_t MailboxData.SearchSort.identifiers.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

double (*MailboxData.SearchSort.identifiers.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t MailboxData.SearchSort.modificationSequence.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t MailboxData.SearchSort.modificationSequence.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

double (*MailboxData.SearchSort.modificationSequence.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t MailboxData.SearchSort.hash(into:)()
{
  sub_1A5693F48();
  return sub_1A594CEB8();
}

void MailboxData.SearchSort.hashValue.getter()
{
  OUTLINED_FUNCTION_15_10();
  sub_1A5693F48();
  sub_1A594CEB8();
  sub_1A594CED0();
  OUTLINED_FUNCTION_8_7();
}

void sub_1A56D4CE8()
{
  MailboxData.SearchSort.hashValue.getter();
}

uint64_t sub_1A56D4CF0()
{
  return MailboxData.SearchSort.hash(into:)();
}

uint64_t sub_1A56D4CF8()
{
  sub_1A594CE64();
  sub_1A5693F48();
  sub_1A594CEB8();
  return sub_1A594CED0();
}

uint64_t sub_1A56D4D4C(uint64_t a1, uint64_t a2)
{
  return static MailboxData.SearchSort.__derived_struct_equals(_:_:)(*(_QWORD **)a1, *(_QWORD *)(a1 + 8), *(_QWORD **)a2, *(_QWORD *)(a2 + 8));
}

#error "1A56D4DAC: call analysis failed (funcsize=96)"

void sub_1A56D4EF8(void *a1)
{
  uint64_t __dst;
  _BYTE v3[208];

  sub_1A56D4410(a1, &__dst);
  sub_1A56D4410(a1, v3);
  __asm { BR              X11 }
}

void sub_1A56D4F60()
{
  sub_1A56D531C();
}

void sub_1A56D5280(char a1@<W8>, __int128 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, __int128 a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  uint64_t v31;
  uint64_t v32;
  Swift::Int v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  Swift::Int v37;
  char v38;
  Swift::Int v39;
  int v40;
  char v41;
  Swift::String v42;

  a31 = a1 & 0xF;
  *(_OWORD *)(v32 - 176) = a19;
  v33 = *(unsigned int *)(v31 + 20);
  v34 = OUTLINED_FUNCTION_13_19();
  OUTLINED_FUNCTION_22_1(v34, v35, v36, v33);
  if ((v38 & 1) != 0)
  {
    v42._countAndFlagsBits = OUTLINED_FUNCTION_18_18();
    v37 = OUTLINED_FUNCTION_104(v42, v33);
  }
  v39 = v37;
  OUTLINED_FUNCTION_140();
  if (!v41)
  {
    *(_DWORD *)(v31 + 20) = v40;
    a2 = *(_OWORD *)(v32 - 176);
    if (!__OFADD__(v39, sub_1A56D4D60(&a2, v31)))
      JUMPOUT(0x1A56D525CLL);
    __break(1u);
    JUMPOUT(0x1A56D52E4);
  }
  __break(1u);
  JUMPOUT(0x1A56D52F4);
}

void sub_1A56D531C()
{
  uint64_t v0;
  Swift::Int v1;
  Swift::Int v2;
  char v3;
  Swift::String v4;
  int v5;
  BOOL v6;
  int v7;

  v1 = *(unsigned int *)(v0 + 20);
  sub_1A56814E0(0x205347414C46, 0xE600000000000000, v0 + 8, *(_DWORD *)(v0 + 20));
  if ((v3 & 1) != 0)
  {
    v4._countAndFlagsBits = 0x205347414C46;
    v4._object = (void *)0xE600000000000000;
    v2 = ByteBuffer._setStringSlowpath(_:at:)(v4, v1);
  }
  v5 = *(_DWORD *)(v0 + 20);
  v6 = __CFADD__(v5, (_DWORD)v2);
  v7 = v5 + v2;
  if (v6)
  {
    __break(1u);
    goto LABEL_7;
  }
  *(_DWORD *)(v0 + 20) = v7;
  if (__OFADD__(v2, j__OUTLINED_FUNCTION_74()))
LABEL_7:
    __break(1u);
}

#error "1A56D546C: call analysis failed (funcsize=86)"

void sub_1A56D5540(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  Swift::Int v7;
  Swift::Int v8;
  char v9;
  Swift::String v10;
  Swift::Int v11;
  int v12;
  BOOL v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Swift::Int v18;
  Swift::Int v19;
  Swift::Int v20;
  char v21;
  Swift::String v22;
  int v23;
  int v24;
  BOOL v25;
  Swift::Int v26;
  uint64_t v27;
  Swift::Int v28;
  Swift::Int v29;
  Swift::Int v30;
  char v31;
  Swift::String v32;
  int v33;
  int v34;

  v4 = v3;
  v6 = v3 + 8;
  v7 = *(unsigned int *)(v3 + 20);
  sub_1A56814E0(0x20535554415453, 0xE700000000000000, v6, v7);
  if ((v9 & 1) != 0)
  {
    v10._countAndFlagsBits = 0x20535554415453;
    v10._object = (void *)0xE700000000000000;
    v8 = ByteBuffer._setStringSlowpath(_:at:)(v10, v7);
  }
  v11 = v8;
  v12 = *(_DWORD *)(v4 + 20);
  v13 = __CFADD__(v12, (_DWORD)v8);
  v14 = v12 + v8;
  if (v13)
  {
    __break(1u);
    goto LABEL_16;
  }
  *(_DWORD *)(v4 + 20) = v14;
  v15 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A56BABD4(v15);
  v17 = v16;
  swift_bridgeObjectRelease();
  v18 = v11 + v17;
  if (__OFADD__(v11, v17))
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v19 = *(unsigned int *)(v4 + 20);
  sub_1A56814E0(10272, 0xE200000000000000, v6, *(_DWORD *)(v4 + 20));
  if ((v21 & 1) != 0)
  {
    v22._countAndFlagsBits = 10272;
    v22._object = (void *)0xE200000000000000;
    v20 = ByteBuffer._setStringSlowpath(_:at:)(v22, v19);
  }
  v23 = *(_DWORD *)(v4 + 20);
  v13 = __CFADD__(v23, (_DWORD)v20);
  v24 = v23 + v20;
  if (v13)
    goto LABEL_17;
  *(_DWORD *)(v4 + 20) = v24;
  v25 = __OFADD__(v18, v20);
  v26 = v18 + v20;
  if (v25)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v27 = sub_1A56D39A4(a3);
  v28 = v26 + v27;
  if (__OFADD__(v26, v27))
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v29 = *(unsigned int *)(v4 + 20);
  sub_1A56814E0(41, 0xE100000000000000, v6, *(_DWORD *)(v4 + 20));
  if ((v31 & 1) != 0)
  {
    v32._countAndFlagsBits = 41;
    v32._object = (void *)0xE100000000000000;
    v30 = ByteBuffer._setStringSlowpath(_:at:)(v32, v29);
  }
  v33 = *(_DWORD *)(v4 + 20);
  v13 = __CFADD__(v33, (_DWORD)v30);
  v34 = v33 + v30;
  if (v13)
    goto LABEL_20;
  *(_DWORD *)(v4 + 20) = v34;
  if (__OFADD__(v28, v30))
LABEL_21:
    __break(1u);
}

uint64_t sub_1A56D56CC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned __int8 a14)
{
  switch(a14 >> 4)
  {
    case 0:
    case 3:
    case 5:
    case 9:
      goto LABEL_5;
    case 1:
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      return swift_release();
    case 4:
      sub_1A55240D4(result, a2);
      goto LABEL_5;
    case 8:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_5:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A56D57A4(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 104);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), v4);
  return a1;
}

uint64_t sub_1A56D5800(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned __int8 a14)
{
  switch(a14 >> 4)
  {
    case 0:
    case 3:
    case 5:
    case 9:
      goto LABEL_5;
    case 1:
    case 2:
      swift_retain();
      swift_retain();
      swift_retain();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_5;
    case 4:
      sub_1A55235F0(result, a2);
      goto LABEL_5;
    case 8:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_5:
      result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A56D58D8()
{
  unint64_t result;

  result = qword_1EE7A9A38;
  if (!qword_1EE7A9A38)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for MailboxData, &type metadata for MailboxData);
    atomic_store(result, (unint64_t *)&qword_1EE7A9A38);
  }
  return result;
}

unint64_t sub_1A56D5918()
{
  unint64_t result;

  result = qword_1EE7A9A40;
  if (!qword_1EE7A9A40)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for MailboxData.SearchSort, &type metadata for MailboxData.SearchSort);
    atomic_store(result, (unint64_t *)&qword_1EE7A9A40);
  }
  return result;
}

uint64_t destroy for MailboxData(uint64_t a1)
{
  return sub_1A56D56CC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_BYTE *)(a1 + 104));
}

uint64_t initializeWithCopy for MailboxData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v13 = *(_QWORD *)(a2 + 72);
  v14 = *(_QWORD *)(a2 + 80);
  v15 = *(_QWORD *)(a2 + 88);
  v16 = *(_QWORD *)(a2 + 96);
  v17 = *(_BYTE *)(a2 + 104);
  sub_1A56D5800(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16, v17);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v14;
  *(_QWORD *)(a1 + 88) = v15;
  *(_QWORD *)(a1 + 96) = v16;
  *(_BYTE *)(a1 + 104) = v17;
  return a1;
}

uint64_t assignWithCopy for MailboxData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 v29;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v25 = *(_QWORD *)(a2 + 72);
  v26 = *(_QWORD *)(a2 + 80);
  v27 = *(_QWORD *)(a2 + 88);
  v28 = *(_QWORD *)(a2 + 96);
  v29 = *(_BYTE *)(a2 + 104);
  sub_1A56D5800(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v25, v26, v27, v28, v29);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  v22 = *(_QWORD *)(a1 + 96);
  v23 = *(_BYTE *)(a1 + 104);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v25;
  *(_QWORD *)(a1 + 80) = v26;
  *(_QWORD *)(a1 + 88) = v27;
  *(_QWORD *)(a1 + 96) = v28;
  *(_BYTE *)(a1 + 104) = v29;
  sub_1A56D56CC(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, v23);
  return a1;
}

void *__swift_memcpy105_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x69uLL);
}

uint64_t assignWithTake for MailboxData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  unsigned __int8 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  v3 = *(_QWORD *)(a2 + 96);
  v4 = *(_BYTE *)(a2 + 104);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_QWORD *)(a1 + 56);
  v13 = *(_OWORD *)(a1 + 64);
  v14 = *(_OWORD *)(a1 + 80);
  v15 = *(_QWORD *)(a1 + 96);
  v16 = *(_BYTE *)(a1 + 104);
  v17 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v17;
  v18 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v18;
  v19 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v19;
  *(_QWORD *)(a1 + 96) = v3;
  *(_BYTE *)(a1 + 104) = v4;
  sub_1A56D56CC(v5, v7, v6, v8, v9, v10, v11, v12, v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for MailboxData(uint64_t a1, int a2)
{
  unsigned int v2;
  int v3;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 105))
    {
      v3 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = (*(_DWORD *)(a1 + 48) >> 1) & 0x7FFFFFFF | ((*(_DWORD *)(a1 + 56) >> 1) << 31);
      if (v2 > 0x80000000)
        v3 = ~v2;
      else
        v3 = -1;
    }
  }
  else
  {
    v3 = -1;
  }
  return (v3 + 1);
}

double storeEnumTagSinglePayload for MailboxData(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_BYTE *)(a1 + 104) = 0;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 105) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      result = 0.0;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_QWORD *)(a1 + 48) = (-2 * a2);
      *(_QWORD *)(a1 + 56) = 2;
      *(_OWORD *)(a1 + 64) = 0u;
      *(_OWORD *)(a1 + 80) = 0u;
      *(_OWORD *)(a1 + 89) = 0u;
      return result;
    }
    *(_BYTE *)(a1 + 105) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1A56D5CE0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 104) >> 4;
}

uint64_t sub_1A56D5CEC(uint64_t result)
{
  *(_BYTE *)(result + 104) &= 0xFu;
  return result;
}

int8x16_t sub_1A56D5CFC(int8x16_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  __int8 v4;
  int8x16_t result;

  v2 = a1[4].i64[1] & 1;
  v3 = a1[5].i64[1] & 1;
  v4 = a1[6].i8[8] & 1 | (16 * a2);
  result = vandq_s8(a1[3], (int8x16_t)xmmword_1A59AC060);
  a1[3] = result;
  a1[4].i64[1] = v2;
  a1[5].i64[1] = v3;
  a1[6].i8[8] = v4;
  return result;
}

ValueMetadata *type metadata accessor for MailboxData()
{
  return &type metadata for MailboxData;
}

uint64_t getEnumTagSinglePayload for MailboxData.SearchSort(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for MailboxData.SearchSort()
{
  return &type metadata for MailboxData.SearchSort;
}

void *OUTLINED_FUNCTION_0_69(int a1, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  void *v39;

  return sub_1A56D4410(v39, a2);
}

uint64_t OUTLINED_FUNCTION_1_51()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1A55235F0(v1, v0);
}

uint64_t OUTLINED_FUNCTION_2_46(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,__int128 a27,__int128 a28,__int128 a29)
{
  uint64_t v29;

  *(_OWORD *)(v29 - 176) = a27;
  *(_OWORD *)(v29 - 160) = a28;
  *(_OWORD *)(v29 - 144) = a29;
  return swift_retain();
}

__n128 OUTLINED_FUNCTION_3_34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,__int128 a23,__int128 a24,__n128 a25)
{
  uint64_t v25;
  __n128 result;

  *(_OWORD *)(v25 - 176) = a23;
  *(_OWORD *)(v25 - 160) = a24;
  result = a25;
  *(__n128 *)(v25 - 144) = a25;
  return result;
}

uint64_t OUTLINED_FUNCTION_5_28()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1A55235F0(v0, v1);
}

uint64_t OUTLINED_FUNCTION_8_22()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1A55240D4(v1, v0);
}

uint64_t OUTLINED_FUNCTION_9_27()
{
  return 0x514553444F4D2820;
}

Swift::Int OUTLINED_FUNCTION_10_21(uint64_t a1)
{
  Swift::Int v1;
  Swift::String v2;

  v2._countAndFlagsBits = a1 & 0xFFFF0000FFFFFFFFLL | 0x2000000000;
  v2._object = (void *)0xE500000000000000;
  return ByteBuffer._setStringSlowpath(_:at:)(v2, v1);
}

uint64_t OUTLINED_FUNCTION_12_19()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t OUTLINED_FUNCTION_13_19()
{
  return 0x484352414553;
}

void *OUTLINED_FUNCTION_14_16(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v9;

  return sub_1A56D4410(v9, &a9);
}

void OUTLINED_FUNCTION_15_22(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + 20) = a1;
  sub_1A56D6C1C((uint64_t *)(v2 - 176));
}

uint64_t OUTLINED_FUNCTION_18_18()
{
  return 0x484352414553;
}

uint64_t OUTLINED_FUNCTION_22_18()
{
  uint64_t v0;

  return v0;
}

uint64_t EmailAddressGroup.groupName.getter()
{
  return swift_retain();
}

uint64_t EmailAddressGroup.groupName.setter(uint64_t a1, unint64_t a2, unint64_t a3)
{
  uint64_t v3;
  int v4;
  int v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t result;

  v4 = a3;
  v5 = a2;
  v7 = HIDWORD(a2);
  v8 = HIDWORD(a3);
  v9 = HIWORD(a3);
  result = swift_release();
  *(_QWORD *)v3 = a1;
  *(_DWORD *)(v3 + 8) = v5;
  *(_DWORD *)(v3 + 12) = v7;
  *(_DWORD *)(v3 + 16) = v4;
  *(_WORD *)(v3 + 20) = v8;
  *(_BYTE *)(v3 + 22) = v9;
  return result;
}

double (*EmailAddressGroup.groupName.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t EmailAddressGroup.sourceRoot.getter()
{
  OUTLINED_FUNCTION_18_14();
  return swift_retain();
}

uint64_t EmailAddressGroup.sourceRoot.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v3 + 24) = a1;
  *(_QWORD *)(v3 + 32) = a2;
  *(_BYTE *)(v3 + 46) = BYTE6(a3);
  *(_WORD *)(v3 + 44) = WORD2(a3);
  *(_DWORD *)(v3 + 40) = a3;
  return result;
}

double (*EmailAddressGroup.sourceRoot.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t EmailAddressGroup.children.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t EmailAddressGroup.children.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = a1;
  return result;
}

double (*EmailAddressGroup.children.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t EmailAddressGroup.init(groupName:sourceRoot:children:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  *(_QWORD *)a8 = result;
  *(_QWORD *)(a8 + 8) = a2;
  *(_DWORD *)(a8 + 16) = a3;
  *(_WORD *)(a8 + 20) = WORD2(a3);
  *(_BYTE *)(a8 + 22) = BYTE6(a3);
  *(_QWORD *)(a8 + 24) = a4;
  *(_QWORD *)(a8 + 32) = a5;
  *(_DWORD *)(a8 + 40) = a6;
  *(_BYTE *)(a8 + 46) = BYTE6(a6);
  *(_WORD *)(a8 + 44) = WORD2(a6);
  *(_QWORD *)(a8 + 48) = a7;
  return result;
}

uint64_t EmailAddressGroup.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned int v4;
  unsigned int v5;
  uint64_t result;

  v2 = v1;
  v4 = *(_DWORD *)(v2 + 8);
  v5 = *(_DWORD *)(v2 + 12);
  result = swift_beginAccess();
  if (v5 < v4)
  {
    __break(1u);
  }
  else
  {
    sub_1A594CE70();
    sub_1A56A00DC(a1, *(_QWORD *)(v2 + 24));
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5693F7C();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void static EmailAddressGroup.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  unsigned int v3;
  unsigned int v5;
  unsigned int v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  v2 = *(_DWORD *)(a1 + 8);
  v3 = *(_DWORD *)(a1 + 12);
  if (v3 < v2)
  {
    __break(1u);
    goto LABEL_22;
  }
  v5 = *(_DWORD *)(a2 + 8);
  v6 = *(_DWORD *)(a2 + 12);
  if (v6 < v5)
  {
LABEL_22:
    __break(1u);
    return;
  }
  if (v3 - v2 == v6 - v5)
  {
    v8 = *(_DWORD *)(a1 + 16) == *(_DWORD *)(a2 + 16)
      && *(unsigned __int16 *)(a1 + 20) == *(unsigned __int16 *)(a2 + 20);
    v9 = v8 && *(unsigned __int8 *)(a1 + 22) == *(unsigned __int8 *)(a2 + 22);
    v10 = v9 && *(_QWORD *)a1 == *(_QWORD *)a2;
    if (v10 || (swift_retain(), (sub_1A566B918() & 1) != 0))
    {
      v11 = *(_QWORD *)(a1 + 24);
      v12 = *(_QWORD *)(a2 + 24);
      if (v11)
      {
        if (v12)
        {
          v13 = *(_QWORD *)(a1 + 32);
          OUTLINED_FUNCTION_18_14();
          v16 = *(_QWORD *)(a2 + 32);
          v17 = (v15 | (v14 << 32)) & 0xFFFFFFFFFFFFFFLL;
          v18 = (*(unsigned int *)(a2 + 40) | ((unint64_t)(*(unsigned __int16 *)(a2 + 44) | (*(unsigned __int8 *)(a2 + 46) << 16)) << 32)) & 0xFFFFFFFFFFFFFFLL;
          swift_retain();
          swift_retain();
          LOBYTE(v13) = static ByteBuffer.== infix(_:_:)(v11, v13, v17, v12, v16, v18);
          swift_release();
          swift_release();
          if ((v13 & 1) != 0)
            goto LABEL_18;
        }
      }
      else if (!v12)
      {
LABEL_18:
        sub_1A568A6D0();
      }
    }
  }
}

void EmailAddressGroup.hashValue.getter()
{
  _BYTE v0[72];

  OUTLINED_FUNCTION_15_10();
  EmailAddressGroup.hash(into:)((uint64_t)v0);
  sub_1A594CED0();
  OUTLINED_FUNCTION_8_7();
}

uint64_t sub_1A56D634C()
{
  _BYTE v1[72];

  sub_1A594CE64();
  EmailAddressGroup.hash(into:)((uint64_t)v1);
  return sub_1A594CED0();
}

void EmailAddressListElement.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD v8[3];
  uint64_t v9;

  if (a2 < 0)
  {
    v5 = *(_OWORD *)(a2 + 32);
    v8[0] = *(_OWORD *)(a2 + 16);
    v8[1] = v5;
    v8[2] = *(_OWORD *)(a2 + 48);
    v9 = *(_QWORD *)(a2 + 64);
    sub_1A594CE88();
    sub_1A56D6670((uint64_t)v8);
    EmailAddressGroup.hash(into:)(a1);
    sub_1A56D66B8((uint64_t)v8);
  }
  else
  {
    v7 = *(_QWORD *)(a2 + 16);
    v6 = *(_QWORD *)(a2 + 40);
    v3 = *(_QWORD *)(a2 + 64);
    v4 = *(_QWORD *)(a2 + 88);
    sub_1A594CE88();
    sub_1A56A00DC(a1, v7);
    sub_1A56A00DC(a1, v6);
    sub_1A56A00DC(a1, v3);
    sub_1A56A00DC(a1, v4);
  }
}

uint64_t static EmailAddressListElement.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;
  __int128 v5;
  __int128 v6;
  char v7;
  _OWORD v9[6];
  _OWORD __dst[6];

  if (a1 < 0)
  {
    v5 = *(_OWORD *)(a1 + 32);
    v9[0] = *(_OWORD *)(a1 + 16);
    v9[1] = v5;
    v9[2] = *(_OWORD *)(a1 + 48);
    *(_QWORD *)&v9[3] = *(_QWORD *)(a1 + 64);
    if (a2 < 0)
    {
      v6 = *(_OWORD *)(a2 + 32);
      __dst[0] = *(_OWORD *)(a2 + 16);
      __dst[1] = v6;
      __dst[2] = *(_OWORD *)(a2 + 48);
      *(_QWORD *)&__dst[3] = *(_QWORD *)(a2 + 64);
      sub_1A56D6670((uint64_t)v9);
      sub_1A56D6670((uint64_t)__dst);
      static EmailAddressGroup.__derived_struct_equals(_:_:)((uint64_t)v9, (uint64_t)__dst);
      v4 = v7;
      sub_1A56D66B8((uint64_t)__dst);
      sub_1A56D66B8((uint64_t)v9);
      return v4 & 1;
    }
    goto LABEL_5;
  }
  memcpy(v9, (const void *)(a1 + 16), 0x5FuLL);
  if (a2 < 0)
  {
LABEL_5:
    v4 = 0;
    return v4 & 1;
  }
  memcpy(__dst, (const void *)(a2 + 16), 0x5FuLL);
  sub_1A566668C((uint64_t)v9);
  sub_1A566668C((uint64_t)__dst);
  static EmailAddress.__derived_struct_equals(_:_:)((uint64_t *)v9, (uint64_t *)__dst);
  v4 = v3;
  sub_1A56666E0((uint64_t)__dst);
  sub_1A56666E0((uint64_t)v9);
  return v4 & 1;
}

void EmailAddressListElement.hashValue.getter(uint64_t a1)
{
  _BYTE v2[72];

  OUTLINED_FUNCTION_15_10();
  EmailAddressListElement.hash(into:)((uint64_t)v2, a1);
  sub_1A594CED0();
  OUTLINED_FUNCTION_8_7();
}

void sub_1A56D6614()
{
  uint64_t *v0;

  EmailAddressListElement.hashValue.getter(*v0);
}

void sub_1A56D661C(uint64_t a1)
{
  uint64_t *v1;

  EmailAddressListElement.hash(into:)(a1, *v1);
}

uint64_t sub_1A56D6624()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1A594CE64();
  EmailAddressListElement.hash(into:)((uint64_t)v3, v1);
  return sub_1A594CED0();
}

uint64_t sub_1A56D6664(uint64_t *a1, uint64_t *a2)
{
  return static EmailAddressListElement.__derived_enum_equals(_:_:)(*a1, *a2);
}

uint64_t sub_1A56D6670(uint64_t a1)
{
  swift_retain();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_retain();
  return a1;
}

uint64_t sub_1A56D66B8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return a1;
}

unint64_t sub_1A56D6704()
{
  unint64_t result;

  result = qword_1EE7A9A48;
  if (!qword_1EE7A9A48)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for EmailAddressGroup, &type metadata for EmailAddressGroup);
    atomic_store(result, (unint64_t *)&qword_1EE7A9A48);
  }
  return result;
}

unint64_t sub_1A56D6744()
{
  unint64_t result;

  result = qword_1EE7A9A50;
  if (!qword_1EE7A9A50)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for EmailAddressListElement, &type metadata for EmailAddressListElement);
    atomic_store(result, (unint64_t *)&qword_1EE7A9A50);
  }
  return result;
}

uint64_t destroy for EmailAddressGroup()
{
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EmailAddressGroup(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 19) = *(_DWORD *)(a2 + 19);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 43) = *(_DWORD *)(a2 + 43);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_retain();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for EmailAddressGroup(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_WORD *)(a1 + 20) = *(_WORD *)(a2 + 20);
  *(_BYTE *)(a1 + 22) = *(_BYTE *)(a2 + 22);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_WORD *)(a1 + 44) = *(_WORD *)(a2 + 44);
  *(_BYTE *)(a1 + 46) = *(_BYTE *)(a2 + 46);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for EmailAddressGroup(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_WORD *)(a1 + 20) = *(_WORD *)(a2 + 20);
  *(_BYTE *)(a1 + 22) = *(_BYTE *)(a2 + 22);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_WORD *)(a1 + 44) = *(_WORD *)(a2 + 44);
  *(_BYTE *)(a1 + 46) = *(_BYTE *)(a2 + 46);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EmailAddressGroup(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EmailAddressGroup(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for EmailAddressGroup()
{
  return &type metadata for EmailAddressGroup;
}

_QWORD *initializeBufferWithCopyOfBuffer for EmailAddressListElement(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t destroy for EmailAddressListElement()
{
  return swift_release();
}

_QWORD *assignWithCopy for EmailAddressListElement(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for EmailAddressListElement(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for EmailAddressListElement(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x7F && *(_BYTE *)(a1 + 8))
    {
      v2 = *(_DWORD *)a1 + 126;
    }
    else
    {
      v2 = (((*(_QWORD *)a1 >> 57) >> 6) | (2 * ((*(_QWORD *)a1 >> 57) & 0x38 | *(_QWORD *)a1 & 7))) ^ 0x7F;
      if (v2 >= 0x7E)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for EmailAddressListElement(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7E)
  {
    *(_QWORD *)result = a2 - 127;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EmailAddressListElement()
{
  return &type metadata for EmailAddressListElement;
}

BOOL static MailboxInfo.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;
  char v6;
  _BOOL8 result;

  sub_1A568AC80();
  result = 0;
  if ((v4 & 1) != 0
    && (static MailboxPath.__derived_struct_equals(_:_:)(*(_QWORD *)(a1 + 8), *(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned __int8 *)(a1 + 20) << 32), *(_QWORD *)(a2 + 8), *(unsigned int *)(a2 + 16) | ((unint64_t)*(unsigned __int8 *)(a2 + 20) << 32)) & 1) != 0)
  {
    sub_1A5690DA8();
    if ((v5 & 1) != 0)
    {
      sub_1A5691860();
      if ((v6 & 1) != 0)
        return 1;
    }
  }
  return result;
}

void sub_1A56D6C1C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;
  Swift::Int v5;
  char v6;
  Swift::String v7;
  Swift::Int v8;
  int v9;
  BOOL v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  Swift::Int v14;
  Swift::Int v15;
  char v16;
  int v17;
  int v18;
  Swift::Int v19;
  Swift::Int v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  Swift::Int v24;
  char v25;
  int v26;
  int v27;
  Swift::Int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = v1;
  v4 = *(unsigned int *)(v1 + 20);
  sub_1A56814E0(40, 0xE100000000000000, v1 + 8, *(_DWORD *)(v1 + 20));
  if ((v6 & 1) != 0)
  {
    v7._countAndFlagsBits = 40;
    v7._object = (void *)0xE100000000000000;
    v5 = ByteBuffer._setStringSlowpath(_:at:)(v7, v4);
  }
  v8 = v5;
  v9 = *(_DWORD *)(v2 + 20);
  v10 = __CFADD__(v9, (_DWORD)v5);
  v11 = v9 + v5;
  if (v10)
  {
    __break(1u);
    goto LABEL_17;
  }
  *(_DWORD *)(v2 + 20) = v11;
  v12 = *a1;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_retain();
  swift_retain();
  v13 = sub_1A565F508(v12, 0, 0xE000000000000000, 32, 0xE100000000000000, 0, 0xE000000000000000, 0, v2);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v14 = v8 + v13;
  if (__OFADD__(v8, v13))
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  OUTLINED_FUNCTION_3_23(8233, 0xE200000000000000);
  if ((v16 & 1) != 0)
    v15 = OUTLINED_FUNCTION_1_25(8233, 0xE200000000000000);
  v17 = *(_DWORD *)(v2 + 20);
  v10 = __CFADD__(v17, (_DWORD)v15);
  v18 = v17 + v15;
  if (v10)
    goto LABEL_18;
  *(_DWORD *)(v2 + 20) = v18;
  v19 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  MailboxPath.pathSeparator.getter(a1[1], *((unsigned int *)a1 + 4) | ((unint64_t)*((unsigned __int8 *)a1 + 20) << 32));
  v22 = sub_1A56D734C(v20, v21);
  swift_bridgeObjectRelease();
  v23 = v19 + v22;
  if (__OFADD__(v19, v22))
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  OUTLINED_FUNCTION_3_23(32, 0xE100000000000000);
  if ((v25 & 1) != 0)
    v24 = OUTLINED_FUNCTION_1_25(32, 0xE100000000000000);
  v26 = *(_DWORD *)(v2 + 20);
  v10 = __CFADD__(v26, (_DWORD)v24);
  v27 = v26 + v24;
  if (v10)
    goto LABEL_21;
  *(_DWORD *)(v2 + 20) = v27;
  v28 = v23 + v24;
  if (__OFADD__(v23, v24))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v29 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A56BABD4(v29);
  v31 = v30;
  swift_bridgeObjectRelease();
  if (__OFADD__(v28, v31))
LABEL_23:
    __break(1u);
}

uint64_t MailboxInfo.attributes.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t MailboxInfo.attributes.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

double (*MailboxInfo.attributes.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t MailboxInfo.path.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

void MailboxInfo.path.setter(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  int v3;
  unint64_t v5;

  v3 = a2;
  v5 = HIDWORD(a2);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_DWORD *)(v2 + 16) = v3;
  *(_BYTE *)(v2 + 20) = v5;
  OUTLINED_FUNCTION_8_1();
}

double (*MailboxInfo.path.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t MailboxInfo.extensions.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_retain();
  swift_retain();
  swift_retain();
  return v1;
}

void MailboxInfo.extensions.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  swift_release();
  swift_release();
  swift_release();
  v3[3] = a1;
  v3[4] = a2;
  v3[5] = a3;
  OUTLINED_FUNCTION_8_1();
}

double (*MailboxInfo.extensions.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t MailboxInfo.init(attributes:path:extensions:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(_QWORD *)a7 = result;
  *(_QWORD *)(a7 + 8) = a2;
  *(_DWORD *)(a7 + 16) = a3;
  *(_BYTE *)(a7 + 20) = BYTE4(a3);
  *(_QWORD *)(a7 + 24) = a4;
  *(_QWORD *)(a7 + 32) = a5;
  *(_QWORD *)(a7 + 40) = a6;
  return result;
}

uint64_t MailboxInfo.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = *v2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A569572C(a1, v4);
  swift_bridgeObjectRelease();
  sub_1A594CE88();
  sub_1A594CE94();
  v5 = v2[3];
  v6 = v2[4];
  v7 = v2[5];
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1A5693CD0(a1, v5, v6, v7);
  swift_release();
  swift_release();
  return swift_release();
}

void MailboxInfo.hashValue.getter()
{
  _BYTE v0[72];

  OUTLINED_FUNCTION_15_10();
  MailboxInfo.hash(into:)((uint64_t)v0);
  sub_1A594CED0();
  OUTLINED_FUNCTION_8_7();
}

uint64_t sub_1A56D705C()
{
  _BYTE v1[72];

  sub_1A594CE64();
  MailboxInfo.hash(into:)((uint64_t)v1);
  return sub_1A594CED0();
}

uint64_t static MailboxInfo.Attribute.noSelect.getter()
{
  return 0x63656C65736F4E5CLL;
}

uint64_t static MailboxInfo.Attribute.marked.getter()
{
  return 0x64656B72614D5CLL;
}

uint64_t static MailboxInfo.Attribute.unmarked.getter()
{
  return 0x656B72616D6E555CLL;
}

void static MailboxInfo.Attribute.nonExistent.getter()
{
  OUTLINED_FUNCTION_0_70();
}

void static MailboxInfo.Attribute.noInferiors.getter()
{
  OUTLINED_FUNCTION_0_70();
}

uint64_t static MailboxInfo.Attribute.subscribed.getter()
{
  return 0x697263736275535CLL;
}

uint64_t static MailboxInfo.Attribute.remote.getter()
{
  return 0x65746F6D65525CLL;
}

void static MailboxInfo.Attribute.hasChildren.getter()
{
  OUTLINED_FUNCTION_0_70();
}

uint64_t static MailboxInfo.Attribute.hasNoChildren.getter()
{
  return 0x68436F4E7361485CLL;
}

uint64_t static MailboxInfo.Attribute.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_1A594B49C();
  v2 = v1;
  if (v0 == sub_1A594B49C() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1A594CD38();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t MailboxInfo.Attribute.hash(into:)()
{
  sub_1A594B49C();
  sub_1A594B1D8();
  return swift_bridgeObjectRelease();
}

void MailboxInfo.Attribute.hashValue.getter()
{
  OUTLINED_FUNCTION_15_10();
  sub_1A594B49C();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  sub_1A594CED0();
  OUTLINED_FUNCTION_8_7();
}

void sub_1A56D72C4()
{
  MailboxInfo.Attribute.hashValue.getter();
}

uint64_t sub_1A56D72CC()
{
  return MailboxInfo.Attribute.hash(into:)();
}

uint64_t sub_1A56D72D4()
{
  sub_1A594CE64();
  sub_1A594B49C();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  return sub_1A594CED0();
}

uint64_t sub_1A56D7334()
{
  return static MailboxInfo.Attribute.== infix(_:_:)();
}

uint64_t sub_1A56D734C(Swift::Int a1, uint64_t a2)
{
  _DWORD *v2;
  _DWORD *v3;
  uint64_t v4;
  Swift::Int v5;
  Swift::Int v7;
  Swift::Int v8;
  Swift::UInt32 v9;
  Swift::Int v10;
  char v11;
  Swift::String v12;
  int v13;
  Swift::UInt32 v14;
  Swift::Int v15;
  char v16;
  Swift::String v17;
  BOOL v18;
  Swift::Int v19;
  Swift::UInt32 v20;
  Swift::Int v21;
  char v22;
  Swift::String v23;
  Swift::Int v24;
  Swift::UInt32 v25;
  Swift::Int v26;
  char v27;
  char v28;
  Swift::String v29;
  uint64_t result;

  v3 = v2;
  v4 = a2;
  if (a2)
  {
    v5 = a1;
    if (a1 != 92 || a2 != 0xE100000000000000)
    {
      v7 = 0xE100000000000000;
      if ((sub_1A594CD38() & 1) == 0)
        goto LABEL_17;
    }
    v9 = v3[5];
    v3 += 5;
    v8 = v9;
    v4 = 0;
    sub_1A56814E0(2251810, 0xE300000000000000, (uint64_t)(v3 - 3), v9);
    if ((v11 & 1) != 0)
    {
      v12._countAndFlagsBits = 2251810;
      v12._object = (void *)0xE300000000000000;
      v10 = ByteBuffer._setStringSlowpath(_:at:)(v12, v8);
    }
    v7 = v10;
    v13 = *v3 + v10;
    if (!__CFADD__(*v3, (_DWORD)v10))
      goto LABEL_30;
    __break(1u);
  }
  v14 = v3[5];
  v3 += 5;
  v5 = v14;
  sub_1A56814E0(4999502, 0xE300000000000000, (uint64_t)(v3 - 3), v14);
  if ((v16 & 1) != 0)
  {
    v17._countAndFlagsBits = 4999502;
    v17._object = (void *)0xE300000000000000;
    v15 = ByteBuffer._setStringSlowpath(_:at:)(v17, v5);
  }
  v7 = v15;
  v13 = *v3 + v15;
  if (!__CFADD__(*v3, (_DWORD)v15))
    goto LABEL_30;
  __break(1u);
LABEL_17:
  v18 = v5 == 34 && v4 == v7;
  if (v18 || (sub_1A594CD38() & 1) != 0)
  {
    v20 = v3[5];
    v3 += 5;
    v19 = v20;
    sub_1A56814E0(576478242, 0xE400000000000000, (uint64_t)(v3 - 3), v20);
    if ((v22 & 1) != 0)
    {
      v23._countAndFlagsBits = 576478242;
      v23._object = (void *)0xE400000000000000;
      v21 = ByteBuffer._setStringSlowpath(_:at:)(v23, v19);
    }
    v7 = v21;
    v13 = *v3 + v21;
    if (!__CFADD__(*v3, (_DWORD)v21))
      goto LABEL_30;
    __break(1u);
  }
  sub_1A594B5F8();
  sub_1A594B1E4();
  sub_1A594B5F8();
  v25 = v3[5];
  v3 += 5;
  v24 = v25;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A56814E0(0, 0xE000000000000000, (uint64_t)(v3 - 3), v25);
  v7 = v26;
  v28 = v27;
  swift_bridgeObjectRelease();
  if ((v28 & 1) != 0)
  {
    v29._countAndFlagsBits = 0;
    v29._object = (void *)0xE000000000000000;
    v7 = ByteBuffer._setStringSlowpath(_:at:)(v29, v24);
  }
  result = swift_bridgeObjectRelease();
  v13 = *v3 + v7;
  if (!__CFADD__(*v3, (_DWORD)v7))
  {
LABEL_30:
    *v3 = v13;
    return v7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1A56D75A8()
{
  unint64_t result;

  result = qword_1EE7A9A58;
  if (!qword_1EE7A9A58)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for MailboxInfo, &type metadata for MailboxInfo);
    atomic_store(result, (unint64_t *)&qword_1EE7A9A58);
  }
  return result;
}

unint64_t sub_1A56D75E8()
{
  unint64_t result;

  result = qword_1EE7A9A60;
  if (!qword_1EE7A9A60)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for MailboxInfo.Attribute, &type metadata for MailboxInfo.Attribute);
    atomic_store(result, (unint64_t *)&qword_1EE7A9A60);
  }
  return result;
}

uint64_t destroy for MailboxInfo()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for MailboxInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for MailboxInfo(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for MailboxInfo(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for MailboxInfo()
{
  return &type metadata for MailboxInfo;
}

ValueMetadata *type metadata accessor for MailboxInfo.Attribute()
{
  return &type metadata for MailboxInfo.Attribute;
}

void sub_1A56D7830(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  Swift::UInt32 v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  BOOL v8;
  int v9;

  v3 = *(_DWORD *)(v2 + 12);
  sub_1A5668460(a1, a2, v2, v3);
  if ((v4 & 0x100000000) != 0)
  {
    v5 = OUTLINED_FUNCTION_203();
    LODWORD(v4) = sub_1A566A8CC(v5, v6, v3);
  }
  v7 = *(_DWORD *)(v2 + 12);
  v8 = __CFADD__(v7, (_DWORD)v4);
  v9 = v7 + v4;
  if (v8)
    __break(1u);
  else
    *(_DWORD *)(v2 + 12) = v9;
}

uint64_t sub_1A56D78A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  int v3;
  BOOL v4;
  int v5;

  result = OUTLINED_FUNCTION_10_22(a1, v1);
  if ((result & 0x100000000) != 0)
    result = (uint64_t)OUTLINED_FUNCTION_9_28();
  v3 = *(_DWORD *)(v1 + 12);
  v4 = __CFADD__(v3, (_DWORD)result);
  v5 = v3 + result;
  if (v4)
  {
    __break(1u);
  }
  else
  {
    result = result;
    *(_DWORD *)(v1 + 12) = v5;
  }
  return result;
}

uint64_t sub_1A56D78FC(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v11;
  int v12;
  int v13;
  __int16 v14;
  char v15;
  int v16;
  uint64_t v17;
  uint64_t v19;
  int v20;
  int v21;
  int v22;
  __int16 v23;
  char v24;

  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    if (qword_1EE796BD0 != -1)
      goto LABEL_10;
    goto LABEL_4;
  }
  type metadata accessor for ByteBuffer._Storage();
  static ByteBuffer._Storage.reallocated(minimumCapacity:allocator:)(v6, a2, a3, a4, a5);
  v12 = 0;
  v13 = 0;
  v14 = 0;
  v15 = 0;
  v16 = *(_DWORD *)(v11 + 16);
  while (1)
  {
    v19 = v11;
    v20 = v12;
    v21 = v13;
    v22 = v16;
    v23 = v14;
    v24 = v15;
    v17 = OUTLINED_FUNCTION_10_22(a1, (uint64_t)&v19);
    if ((v17 & 0x100000000) != 0)
      LODWORD(v17) = OUTLINED_FUNCTION_9_28();
    if (!__CFADD__(v21, (_DWORD)v17))
      break;
    __break(1u);
LABEL_10:
    swift_once();
LABEL_4:
    v12 = qword_1EE7F9218;
    v13 = HIDWORD(qword_1EE7F9218);
    v16 = dword_1EE7F9220;
    v14 = word_1EE7F9224;
    v15 = byte_1EE7F9226;
    v11 = swift_retain();
  }
  return v19;
}

uint64_t sub_1A56D7A2C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v5[0] = 0;
  v5[1] = 0xE000000000000000;
  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  result = v3 - v2;
  if (v3 < v2)
  {
    __break(1u);
  }
  else if (!__OFSUB__(v3, v2))
  {
    MEMORY[0x1A85AD968](result);
    sub_1A5670B8C(a1, v5);
    sub_1A553E5DC(a1);
    return v5[0];
  }
  __break(1u);
  return result;
}

uint64_t sub_1A56D7A9C(uint64_t a1)
{
  uint64_t v3[2];

  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  MEMORY[0x1A85AD968](*(_QWORD *)(a1 + 16));
  sub_1A56D9564(a1, v3);
  swift_bridgeObjectRelease();
  return v3[0];
}

uint64_t static MailboxName.== infix(_:_:)(uint64_t a1, int a2, uint64_t a3, int a4)
{
  if (a2 == a4)
    return sub_1A568A0E0(a1, a3);
  else
    return 0;
}

uint64_t static MailboxPath.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 != a4)
    return 0;
  else
    return (BYTE4(a2) == BYTE4(a4)) & sub_1A568A0E0(a1, a3);
}

void MailboxPath.pathSeparator.getter(uint64_t a1, unint64_t a2)
{
  unsigned int v2;
  uint64_t v3;

  if (BYTE4(a2))
  {
    v2 = (BYTE4(a2) + 1);
    if ((a2 & 0x8000000000) != 0)
      v2 = ((a2 >> 38) & 3 | ((BYTE4(a2) & 0x3F) << 8)) + 33217;
    v3 = (v2 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * ((4 - (__clz(v2) >> 3)) & 7)));
    MEMORY[0x1A85AD9BC](&v3);
  }
  else
  {
    OUTLINED_FUNCTION_3_1();
  }
}

uint64_t MailboxTooBigError.maximumSize.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

double (*MailboxTooBigError.maximumSize.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t MailboxTooBigError.actualSize.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t MailboxTooBigError.actualSize.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

double (*MailboxTooBigError.actualSize.modify())(_QWORD)
{
  return nullsub_1;
}

BOOL static MailboxTooBigError.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1 == a3 && a2 == a4;
}

BOOL sub_1A56D7C2C(uint64_t *a1, uint64_t *a2)
{
  return static MailboxTooBigError.__derived_struct_equals(_:_:)(*a1, a1[1], *a2, a2[1]);
}

uint64_t InvalidMailboxNameError.description.getter(uint64_t a1)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t InvalidMailboxNameError.description.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

double (*InvalidMailboxNameError.description.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1A56D7CB8(_QWORD *a1, _QWORD *a2)
{
  return static InvalidMailboxNameError.__derived_struct_equals(_:_:)(*a1, a1[1], *a2, a2[1]);
}

double (*InvalidPathSeparatorError.description.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t MailboxPath.name.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

unint64_t MailboxPath._pathSeparator.getter(uint64_t a1, unint64_t a2)
{
  return HIDWORD(a2);
}

uint64_t MailboxPath.init(name:pathSeparator:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;

  if (a4)
  {
    if ((sub_1A594B19C() & 0x100) != 0)
    {
      OUTLINED_FUNCTION_9_2();
      swift_bridgeObjectRelease();
      sub_1A56D8C00();
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_7_22(v5, 0xD000000000000029);
      OUTLINED_FUNCTION_8_23();
    }
    else
    {
      sub_1A594B19C();
      swift_bridgeObjectRelease();
    }
  }
  return a1;
}

uint64_t MailboxPath.hash(into:)()
{
  sub_1A594CE88();
  return sub_1A594CE94();
}

uint64_t MailboxPath.hashValue.getter()
{
  sub_1A594CE64();
  sub_1A594CE88();
  sub_1A594CE94();
  return sub_1A594CED0();
}

uint64_t sub_1A56D7E68()
{
  return MailboxPath.hashValue.getter();
}

uint64_t sub_1A56D7E78()
{
  return MailboxPath.hash(into:)();
}

uint64_t sub_1A56D7E88()
{
  sub_1A594CE64();
  sub_1A594CE88();
  sub_1A594CE94();
  return sub_1A594CED0();
}

uint64_t sub_1A56D7EE0(uint64_t a1, uint64_t a2)
{
  return static MailboxPath.__derived_struct_equals(_:_:)(*(_QWORD *)a1, *(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned __int8 *)(a1 + 12) << 32), *(_QWORD *)a2, *(unsigned int *)(a2 + 8) | ((unint64_t)*(unsigned __int8 *)(a2 + 12) << 32));
}

uint64_t MailboxPath.displayStringComponents(omittingEmptySubsequences:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v4;
  uint64_t v5;
  __int16 v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[5];
  char v22;

  v4 = a1;
  MailboxPath.pathSeparator.getter(a1, a3 & 0xFFFFFFFFFFLL);
  if (!v5)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796290);
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1A59ABD10;
    v11 = OUTLINED_FUNCTION_27();
    v12 = sub_1A56D78FC(v11, (uint64_t (*)(_QWORD))j_j__malloc, (uint64_t)j_j__realloc, (uint64_t)j_j__free, (uint64_t)sub_1A566C0C4);
    v14 = v13;
    v16 = v15;
    OUTLINED_FUNCTION_17();
    sub_1A5714A30(v12, v14, v16 & 0xFFFFFFFFFFFFFFLL);
    v18 = v17;
    v20 = v19;
    swift_release();
    *(_QWORD *)(v10 + 32) = v18;
    *(_QWORD *)(v10 + 40) = v20;
    return v10;
  }
  OUTLINED_FUNCTION_27();
  v6 = sub_1A594B19C();
  result = swift_bridgeObjectRelease();
  if ((v6 & 0x100) == 0)
  {
    v22 = v6;
    MEMORY[0x1E0C80A78](result);
    v21[2] = &v22;
    OUTLINED_FUNCTION_27();
    sub_1A56D9098(0x7FFFFFFFFFFFFFFFLL, v4 & 1, (uint64_t (*)(char *))sub_1A5672C74, (uint64_t)v21, a2);
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_27();
    v8 = OUTLINED_FUNCTION_203();
    v10 = sub_1A56D838C(v8, v9);
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A56D80D0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Swift::Int v14;
  char v15;
  void *v16;
  unsigned int v17;
  BOOL v18;
  unsigned int v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;

  v3 = v2;
  v34 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = qword_1EE796BD0;
  swift_unknownObjectRetain();
  if (v6 != -1)
    goto LABEL_32;
  while (1)
  {
    ByteBufferView.init(_:)(static ByteBufferAllocator.zeroCapacityWithDefaultAllocator, qword_1EE7F9218, dword_1EE7F9220 | ((unint64_t)(unsigned __int16)word_1EE7F9224 << 32) | ((unint64_t)byte_1EE7F9226 << 48), (uint64_t)&v35);
    v8 = HIDWORD(v35);
    v7 = v36;
    v9 = WORD2(v36);
    v10 = BYTE6(v36);
    v11 = *((_QWORD *)&v36 + 1);
    v12 = v37;
    v38 = v35;
    v39 = v36;
    v40 = v37;
    v41 = *((_QWORD *)&v36 + 1);
    if (v4 == v5 >> 1)
      break;
    v5 >>= 1;
    swift_retain();
    v33 = v12;
    while (v4 < (uint64_t)v5)
    {
      if (v33 < v11)
        goto LABEL_25;
      v13 = v12 + 1;
      if (__OFADD__(v12, 1))
        goto LABEL_26;
      v14 = v8 - v12;
      if (__OFSUB__(v8, v12))
        goto LABEL_27;
      v15 = *(_BYTE *)(v34 + v4);
      ByteBuffer.copyBytes(at:to:length:)(v12, v12 + 1, v14);
      v3 = v16;
      if (v16)
        goto LABEL_36;
      sub_1A566A84C(v15, v12);
      v8 = (HIDWORD(v38) + 1);
      if (HIDWORD(v38) == -1)
        goto LABEL_28;
      v7 = v39;
      v9 = WORD2(v39);
      v10 = BYTE6(v39);
      v17 = BYTE6(v39) | (WORD2(v39) << 8);
      v18 = v39 >= v17;
      v19 = v39 - v17;
      if (!v18)
        goto LABEL_29;
      if (v19 < v8)
        goto LABEL_30;
      ++HIDWORD(v38);
      v11 = v41;
      if (v13 < v41)
        goto LABEL_31;
      ++v4;
      ++v12;
      if (v5 == v4)
      {
        v12 = v13;
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    swift_once();
  }
  swift_retain();
LABEL_17:
  swift_unknownObjectRelease();
  if (v12 < v41)
  {
    __break(1u);
    goto LABEL_34;
  }
  if (__OFSUB__(v12, v41))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v20 = ByteBuffer.getSlice(at:length:)(v41, v12 - v41, v38, DWORD2(v38) | (unint64_t)(v8 << 32), v7 | (unint64_t)(v9 << 32) | (v10 << 48));
  if (v20)
  {
    v23 = v20;
    v24 = v21;
    v25 = v22;
    swift_release();
    sub_1A5714A30(v23, v24, v25 & 0xFFFFFFFFFFFFFFLL);
    if (v3)
    {
      ByteBufferView.init(_:)(v23, v24, v25 & 0xFFFFFFFFFFFFFFLL, (uint64_t)&v38);
      swift_retain();
      v28 = sub_1A56D7A2C((uint64_t)&v38);
      v30 = v29;

    }
    else
    {
      v28 = v26;
      v30 = v27;
    }
    result = swift_release();
    *a2 = v28;
    a2[1] = v30;
    return result;
  }
LABEL_35:
  __break(1u);
LABEL_36:
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1A56D838C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v7;
  __int128 *v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _OWORD v16[2];
  uint64_t v17[2];
  uint64_t v18;

  v3 = v2;
  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v18 = MEMORY[0x1E0DEE9D8];
    sub_1A568367C();
    v7 = v18;
    v8 = (__int128 *)(a1 + 48);
    while (1)
    {
      v9 = *v8;
      v16[0] = *(v8 - 1);
      v16[1] = v9;
      swift_unknownObjectRetain();
      sub_1A56D80D0(v16, v17);
      if (v3)
        break;
      v3 = 0;
      v10 = a2;
      swift_unknownObjectRelease();
      v11 = v17[0];
      v12 = v17[1];
      v18 = v7;
      v13 = *(_QWORD *)(v7 + 16);
      if (v13 >= *(_QWORD *)(v7 + 24) >> 1)
      {
        sub_1A568367C();
        v7 = v18;
      }
      *(_QWORD *)(v7 + 16) = v13 + 1;
      v14 = v7 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v11;
      *(_QWORD *)(v14 + 40) = v12;
      v8 += 2;
      --v5;
      a2 = v10;
      if (!v5)
      {
        swift_bridgeObjectRelease();
        return v7;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v7;
}

uint64_t static MailboxPath.makeRootMailbox(displayName:pathSeparator:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[4];
  uint64_t v25;
  unint64_t v26;

  v5 = v4;
  v9 = a1;
  if ((a2 & 0x1000000000000000) != 0)
  {
    a1 = OUTLINED_FUNCTION_11_16();
    if (a1 > 1000)
    {
      v10 = OUTLINED_FUNCTION_11_16();
LABEL_4:
      sub_1A56D9618();
      OUTLINED_FUNCTION_21();
      *v11 = 1000;
      v11[1] = v10;
LABEL_10:
      OUTLINED_FUNCTION_8_23();
      return v5;
    }
  }
  else if ((a2 & 0x2000000000000000) == 0)
  {
    v10 = a1 & 0xFFFFFFFFFFFFLL;
    if ((a1 & 0xFFFFFFFFFFFFuLL) > 0x3E8)
      goto LABEL_4;
  }
  if (a4)
  {
    v25 = a3;
    v26 = a4;
    MEMORY[0x1E0C80A78](a1);
    v24[2] = &v25;
    if ((sub_1A56D8F30(sub_1A56D95C0, (uint64_t)v24, v9, a2) & 1) != 0)
    {
      v25 = 0;
      v26 = 0xE000000000000000;
      sub_1A594C720();
      sub_1A594B5F8();
      OUTLINED_FUNCTION_6_29();
      OUTLINED_FUNCTION_12_20();
      v5 = v25;
      v12 = v26;
      sub_1A56D95DC();
      OUTLINED_FUNCTION_21();
      *v13 = v5;
      v13[1] = v12;
      goto LABEL_10;
    }
  }
  sub_1A5715168(v9, a2);
  v15 = v14;
  v17 = v16 & 0xFFFFFFFFFFFFFFLL;
  v18 = swift_retain();
  v19 = MailboxName.init(_:)(v18, v15, v17);
  v21 = v20;
  OUTLINED_FUNCTION_27();
  v22 = MailboxPath.init(name:pathSeparator:)(v19, v21, a3, a4);
  if (!v5)
    v5 = v22;
  swift_release();
  return v5;
}

uint64_t MailboxName.init(_:)(uint64_t a1, unint64_t a2, unint64_t a3)
{
  unsigned int v4;
  unint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  v4 = a2;
  v6 = HIDWORD(a2);
  result = swift_beginAccess();
  if (v6 < v4)
  {
    __break(1u);
  }
  else
  {
    sub_1A566AF30((const void *)(*(_QWORD *)(a1 + 24) + ((a3 >> 24) & 0xFFFF00 | BYTE6(a3)) + v4), v6 - v4);
    v9 = MailboxName.init(_:)(v8);
    swift_release();
    return v9;
  }
  return result;
}

void MailboxPath.makeSubMailbox(displayName:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unint64_t v24;
  Swift::UInt32 v25;
  uint64_t v26;
  unint64_t v27;
  unsigned int v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  unsigned int v36;
  _QWORD *v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD v42[4];
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int v47;
  unsigned __int16 v48;
  unsigned __int8 v49;

  MailboxPath.pathSeparator.getter(a1, a4 & 0xFFFFFFFFFFLL);
  if (!v7)
  {
    sub_1A56D8C00();
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_7_22(v11, 0xD00000000000002BLL);
    goto LABEL_5;
  }
  v43 = v6;
  v44 = v7;
  MEMORY[0x1E0C80A78](v6);
  v42[2] = &v43;
  if ((sub_1A56D8F30(sub_1A56D9860, (uint64_t)v42, a1, a2) & 1) != 0)
  {
    v43 = 0;
    v44 = 0xE000000000000000;
    sub_1A594C720();
    sub_1A594B5F8();
    OUTLINED_FUNCTION_6_29();
    OUTLINED_FUNCTION_12_20();
    OUTLINED_FUNCTION_17();
    v8 = v43;
    v9 = v44;
    sub_1A56D95DC();
    OUTLINED_FUNCTION_21();
    *v10 = v8;
    v10[1] = v9;
LABEL_5:
    OUTLINED_FUNCTION_8_23();
    return;
  }
  v12 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v13 = sub_1A56D78FC(v12, (uint64_t (*)(_QWORD))j_j__malloc, (uint64_t)j_j__realloc, (uint64_t)j_j__free, (uint64_t)sub_1A566C0C4);
  v15 = v14;
  v17 = v16;
  OUTLINED_FUNCTION_9_2();
  v45 = v13;
  v46 = v15;
  v47 = v17;
  v48 = WORD2(v17);
  v49 = BYTE6(v17);
  OUTLINED_FUNCTION_27();
  v18 = OUTLINED_FUNCTION_203();
  sub_1A5668460(v18, v19, v20, HIDWORD(v15));
  if ((v21 & 0x100000000) != 0)
  {
    v23 = OUTLINED_FUNCTION_203();
    v22 = sub_1A566A8CC(v23, v24, HIDWORD(v15));
  }
  else
  {
    v22 = v21;
  }
  OUTLINED_FUNCTION_17();
  v25 = HIDWORD(v46) + v22;
  if (__CFADD__(HIDWORD(v46), v22))
  {
    __break(1u);
    goto LABEL_20;
  }
  HIDWORD(v46) += v22;
  v26 = sub_1A5715168(a1, a2);
  v28 = v27;
  v30 = v29;
  v31 = HIDWORD(v27);
  v32 = (_QWORD *)(v26 + 24);
  swift_beginAccess();
  if (v31 < v28)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v33 = *v32 + ((v30 >> 24) & 0xFFFF00 | BYTE6(v30)) + v28;
  ByteBuffer._setBytes(_:at:)(v33, v33 + v31 - v28, v25);
  v35 = (HIDWORD(v46) + v34);
  if (__CFADD__(HIDWORD(v46), v34))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v36 = v35 - v46;
  if (v35 < v46)
  {
LABEL_22:
    __break(1u);
    return;
  }
  if (v36 <= 0x3E8)
  {
    v38 = v46 | (unint64_t)(v35 << 32);
    v39 = v47 | ((unint64_t)v48 << 32) | ((unint64_t)v49 << 48);
    v40 = swift_retain();
    MailboxName.init(_:)(v40, v38, v39);
    if ((OUTLINED_FUNCTION_14_17() & 0x100) == 0)
    {
      OUTLINED_FUNCTION_14_17();
      swift_release();
      swift_release();
      OUTLINED_FUNCTION_17();
      return;
    }
    OUTLINED_FUNCTION_9_2();
    OUTLINED_FUNCTION_17();
    sub_1A56D8C00();
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_7_22(v41, 0xD000000000000029);
  }
  else
  {
    OUTLINED_FUNCTION_17();
    sub_1A56D9618();
    OUTLINED_FUNCTION_21();
    *v37 = 1000;
    v37[1] = v36;
  }
  OUTLINED_FUNCTION_8_23();
  swift_release();
  swift_release();
}

uint64_t sub_1A56D8AF0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t result;
  int v4;

  v0 = ByteBufferAllocator.buffer(string:)(0x584F424E49, 0xE500000000000000, j_j__malloc, j_j__realloc, j_j__free, sub_1A566C0C4);
  result = MailboxName.init(_:)(v0, v2, v1 & 0xFFFFFFFFFFFFFFLL);
  static MailboxName.inbox = result;
  dword_1EE7F9588 = v4;
  return result;
}

uint64_t *MailboxName.inbox.unsafeMutableAddressor()
{
  if (qword_1EE796838 != -1)
    swift_once();
  return &static MailboxName.inbox;
}

uint64_t static MailboxName.inbox.getter()
{
  if (qword_1EE796838 != -1)
    swift_once();
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

unint64_t MailboxName.hashValue.getter(uint64_t a1, unsigned int a2)
{
  return a2 | ((unint64_t)a2 << 32);
}

unint64_t MailboxName.HashValue.value.getter(unsigned int a1)
{
  return a1 | ((unint64_t)a1 << 32);
}

unint64_t sub_1A56D8C00()
{
  unint64_t result;

  result = qword_1EE7A9A68;
  if (!qword_1EE7A9A68)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for InvalidPathSeparatorError, &type metadata for InvalidPathSeparatorError);
    atomic_store(result, (unint64_t *)&qword_1EE7A9A68);
  }
  return result;
}

uint64_t MailboxName._hashValue.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

#error "1A56D8D40: call analysis failed (funcsize=78)"

uint64_t sub_1A56D8D84()
{
  uint64_t result;

  if (qword_1EE796838 != -1)
    result = swift_once();
  qword_1EE796808 = dword_1EE7F9588 | ((unint64_t)dword_1EE7F9588 << 32);
  return result;
}

uint64_t MailboxName.init(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  _BYTE v9[72];
  _BYTE __dst[72];

  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v2 = OUTLINED_FUNCTION_3_35();
  sub_1A5691144(v2, v3, a1);
  v5 = v4;
  OUTLINED_FUNCTION_17();
  if ((v5 & 1) != 0)
  {
    OUTLINED_FUNCTION_17();
    v6 = OUTLINED_FUNCTION_3_35();
    a1 = sub_1A56D947C(v6, v7);
  }
  sub_1A594CEDC();
  sub_1A594CE70();
  memcpy(__dst, v9, sizeof(__dst));
  sub_1A594CEC4();
  return a1;
}

_BYTE *sub_1A56D8E6C@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result & 0xDF;
  return result;
}

uint64_t MailboxName.hash(into:)()
{
  return sub_1A594CE88();
}

unint64_t sub_1A56D8EA8(uint64_t a1)
{
  uint64_t v1;

  return MailboxName.hashValue.getter(a1, *(_DWORD *)(v1 + 8));
}

uint64_t sub_1A56D8EB0()
{
  return MailboxName.hash(into:)();
}

uint64_t sub_1A56D8EB8()
{
  sub_1A594CE64();
  sub_1A594CE88();
  return sub_1A594CED0();
}

uint64_t sub_1A56D8EF8(uint64_t a1, uint64_t a2)
{
  return static MailboxName.== infix(_:_:)(*(_QWORD *)a1, *(_DWORD *)(a1 + 8), *(_QWORD *)a2, *(_DWORD *)(a2 + 8));
}

uint64_t MailboxName.debugDescription.getter()
{
  uint64_t v0;

  v0 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return sub_1A56D7A9C(v0);
}

uint64_t sub_1A56D8F28()
{
  return MailboxName.debugDescription.getter();
}

uint64_t sub_1A56D8F30(uint64_t (*a1)(_QWORD *), uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  _QWORD v13[6];

  v6 = HIBYTE(a4) & 0xF;
  v13[2] = a3;
  v13[3] = a4;
  if ((a4 & 0x2000000000000000) == 0)
    v6 = a3 & 0xFFFFFFFFFFFFLL;
  v13[4] = 0;
  v13[5] = v6;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v7 = sub_1A594B634();
  if (v8)
  {
    v9 = v8;
    while (1)
    {
      v13[0] = v7;
      v13[1] = v9;
      v10 = a1(v13);
      swift_bridgeObjectRelease();
      if (v4 || (v10 & 1) != 0)
        break;
      v7 = sub_1A594B634();
      v9 = v11;
      if (!v11)
        goto LABEL_8;
    }
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
    return 0;
  }
}

void sub_1A56D8FF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B348);
    v4 = (_QWORD *)swift_allocObject();
    v5 = _swift_stdlib_malloc_size_0(v4);
    v4[2] = a1;
    v4[3] = 2 * v5 - 64;
  }
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1A56D9058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4)
    return 1;
  else
    return sub_1A594CD38() & 1;
}

void sub_1A56D9098(uint64_t a1, char a2, uint64_t (*a3)(char *), uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v18;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  char v35;

  if (a1 < 0)
  {
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = MEMORY[0x1E0DEE9D8];
  v31 = v8 + 16;
  v9 = swift_allocObject();
  v10 = v9;
  *(_QWORD *)(v9 + 16) = 0;
  v11 = *(_QWORD *)(a5 + 16);
  if (!a1 || !v11)
  {
    sub_1A56D93BC(*(_QWORD *)(a5 + 16), v9, a2 & 1, v8, a5);
    swift_bridgeObjectRelease();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_45:
    swift_release();
    swift_release();
    return;
  }
  v29 = a1;
  v12 = 0;
  v13 = 0;
  v14 = 0;
  v33 = a5 + 32;
  v15 = MEMORY[0x1E0DEE9D8];
  v30 = v9;
  while (1)
  {
    if ((v12 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
    if (v12 >= *(_QWORD *)(a5 + 16))
      goto LABEL_47;
    v35 = *(_BYTE *)(v33 + v12);
    v16 = a3(&v35);
    if (v5)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      return;
    }
    if ((v16 & 1) == 0)
    {
      if (__OFADD__(v12++, 1))
        goto LABEL_48;
      goto LABEL_28;
    }
    if (v13 != v12 || (a2 & 1) == 0)
      break;
    *(_QWORD *)(v10 + 16) = ++v12;
LABEL_27:
    v13 = v12;
    v14 = v12;
LABEL_28:
    if (v12 == v11)
      goto LABEL_33;
  }
  if ((uint64_t)v12 < (uint64_t)v13)
    goto LABEL_49;
  if ((v13 & 0x8000000000000000) != 0)
    goto LABEL_50;
  v18 = *(_QWORD *)(a5 + 16);
  if (v18 < v13 || v18 < v12)
    goto LABEL_51;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1A569DA70();
    v15 = v22;
  }
  v20 = *(_QWORD *)(v15 + 16);
  if (v20 >= *(_QWORD *)(v15 + 24) >> 1)
  {
    sub_1A569DA70();
    v15 = v23;
  }
  *(_QWORD *)(v15 + 16) = v20 + 1;
  v21 = (_QWORD *)(v15 + 32 * v20);
  v21[4] = a5;
  v21[5] = v33;
  v21[6] = v13;
  v21[7] = (2 * v12) | 1;
  v10 = v30;
  *(_QWORD *)v31 = v15;
  *(_QWORD *)(v30 + 16) = ++v12;
  if (*(_QWORD *)(v15 + 16) != v29)
    goto LABEL_27;
  v14 = v12;
  v13 = v12;
LABEL_33:
  if (v13 == v11 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_44:
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    goto LABEL_45;
  }
  if ((uint64_t)v11 < (uint64_t)v14)
    goto LABEL_53;
  if ((v14 & 0x8000000000000000) != 0)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  v24 = *(_QWORD *)(a5 + 16);
  if (v24 >= v14 && v24 >= v11)
  {
    sub_1A5716160();
    v26 = *(_QWORD *)(*(_QWORD *)v31 + 16);
    sub_1A5716254(v26);
    v27 = *(_QWORD *)v31;
    *(_QWORD *)(v27 + 16) = v26 + 1;
    v28 = (_QWORD *)(v27 + 32 * v26);
    v28[4] = a5;
    v28[5] = v33;
    v28[6] = v14;
    v28[7] = (2 * v11) | 1;
    *(_QWORD *)v31 = v27;
    goto LABEL_44;
  }
LABEL_55:
  __break(1u);
}

uint64_t sub_1A56D93BC(uint64_t result, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5)
{
  unint64_t v5;
  int v6;
  unint64_t v8;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = *(_QWORD *)(a2 + 16);
  v6 = (v5 == result) & a3;
  if (v6 == 1)
    return v6 ^ 1u;
  if ((uint64_t)v5 > result)
  {
    __break(1u);
    goto LABEL_11;
  }
  if ((v5 & 0x8000000000000000) != 0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v8 = *(_QWORD *)(a5 + 16);
  if (v8 >= v5 && (uint64_t)v8 >= result)
  {
    v10 = (uint64_t *)(a4 + 16);
    v11 = (2 * result) | 1;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5716160();
    v12 = *(_QWORD *)(*v10 + 16);
    sub_1A5716254(v12);
    v13 = *v10;
    *(_QWORD *)(v13 + 16) = v12 + 1;
    v14 = (_QWORD *)(v13 + 32 * v12);
    v14[4] = a5;
    v14[5] = a5 + 32;
    v14[6] = v5;
    v14[7] = v11;
    *v10 = v13;
    return v6 ^ 1u;
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1A56D947C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v6;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_9;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      sub_1A56D8FF8(v2, 0);
      v4 = v3;
      result = sub_1A594C72C();
      if ((v6 & 1) != 0)
        break;
      if (result == v2)
        return v4;
      __break(1u);
LABEL_9:
      v2 = sub_1A594B640();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

uint64_t sub_1A56D9514(uint64_t a1, uint64_t a2, Swift::UInt32 a3)
{
  uint64_t result;

  ByteBuffer._setBytes(_:at:)(a1 + 32, a1 + 32 + *(_QWORD *)(a1 + 16), a3);
  return result;
}

uint64_t sub_1A56D9564(uint64_t a1, uint64_t *a2)
{
  sub_1A5788800(a1 + 32, *(_QWORD *)(a1 + 16), a2);
  return 0;
}

uint64_t sub_1A56D9598(uint64_t *a1, uint64_t *a2)
{
  return sub_1A56D9058(*a1, a1[1], *a2, a2[1]) & 1;
}

uint64_t sub_1A56D95C0(uint64_t *a1)
{
  uint64_t v1;

  return sub_1A56D9598(a1, *(uint64_t **)(v1 + 16)) & 1;
}

unint64_t sub_1A56D95DC()
{
  unint64_t result;

  result = qword_1EE7A9A70;
  if (!qword_1EE7A9A70)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for InvalidMailboxNameError, &type metadata for InvalidMailboxNameError);
    atomic_store(result, (unint64_t *)&qword_1EE7A9A70);
  }
  return result;
}

unint64_t sub_1A56D9618()
{
  unint64_t result;

  result = qword_1EE7A9A78;
  if (!qword_1EE7A9A78)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for MailboxTooBigError, &type metadata for MailboxTooBigError);
    atomic_store(result, (unint64_t *)&qword_1EE7A9A78);
  }
  return result;
}

unint64_t sub_1A56D9658()
{
  unint64_t result;

  result = qword_1EE7A9A80;
  if (!qword_1EE7A9A80)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for MailboxPath, &type metadata for MailboxPath);
    atomic_store(result, (unint64_t *)&qword_1EE7A9A80);
  }
  return result;
}

unint64_t sub_1A56D9698()
{
  unint64_t result;

  result = qword_1EE796860;
  if (!qword_1EE796860)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for MailboxName, &type metadata for MailboxName);
    atomic_store(result, (unint64_t *)&qword_1EE796860);
  }
  return result;
}

void type metadata accessor for MailboxTooBigError()
{
  OUTLINED_FUNCTION_3_1();
}

void type metadata accessor for InvalidMailboxNameError()
{
  OUTLINED_FUNCTION_3_1();
}

void _s12NIOIMAPCore223InvalidMailboxNameErrorVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_1();
}

void type metadata accessor for InvalidPathSeparatorError()
{
  OUTLINED_FUNCTION_3_1();
}

void sub_1A56D973C(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_1();
}

uint64_t getEnumTagSinglePayload for MailboxPath(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 13))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

void type metadata accessor for MailboxPath()
{
  OUTLINED_FUNCTION_3_1();
}

uint64_t __swift_memcpy12_8_1(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for MailboxName(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 12))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

void type metadata accessor for MailboxName()
{
  OUTLINED_FUNCTION_3_1();
}

void type metadata accessor for MailboxName.HashValue()
{
  OUTLINED_FUNCTION_3_1();
}

uint64_t sub_1A56D982C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A56D9850()
{
  return swift_deallocObject();
}

uint64_t sub_1A56D9860(uint64_t *a1)
{
  return sub_1A56D95C0(a1) & 1;
}

uint64_t OUTLINED_FUNCTION_3_35()
{
  return 0x584F424E49;
}

uint64_t OUTLINED_FUNCTION_6_29()
{
  return sub_1A594B5F8();
}

void OUTLINED_FUNCTION_7_22(_QWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = a2;
  a1[1] = (v2 - 32) | 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_8_23()
{
  return swift_willThrow();
}

void *OUTLINED_FUNCTION_9_28()
{
  return sub_1A566A9A4();
}

uint64_t OUTLINED_FUNCTION_10_22(uint64_t a1, uint64_t a2)
{
  Swift::UInt32 v2;

  return sub_1A56D9514(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_11_16()
{
  return sub_1A594B640();
}

uint64_t OUTLINED_FUNCTION_12_20()
{
  return sub_1A594B1E4();
}

uint64_t OUTLINED_FUNCTION_14_17()
{
  return sub_1A594B19C();
}

void static MailboxPatterns.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  if ((a3 & 0x100000000000000) == 0)
  {
    if ((a6 & 0x100000000000000) != 0)
      return;
    if (HIDWORD(a2) < a2)
    {
      __break(1u);
    }
    else if (HIDWORD(a5) >= a5)
    {
      if (HIDWORD(a2) - (_DWORD)a2 == HIDWORD(a5) - (_DWORD)a5
        && ((a3 & 0xFFFFFFFFFFFFFFLL) != (a6 & 0xFFFFFFFFFFFFFFLL) || a1 != a4))
      {
        sub_1A56667D4(a4, a5, a6, 0);
        v7 = OUTLINED_FUNCTION_2_47();
        sub_1A56667D4(v7, v8, v9, v10);
        sub_1A566B918();
        v11 = OUTLINED_FUNCTION_2_47();
        sub_1A56667E0(v11, v12, v13, v14);
      }
      return;
    }
    __break(1u);
    return;
  }
  if ((a6 & 0x100000000000000) != 0)
    sub_1A568A508();
}

uint64_t MailboxPatterns.hash(into:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  unsigned int v5;
  unint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t i;
  unsigned int v10;
  unsigned int v11;

  if ((a4 & 0x100000000000000) == 0)
  {
    v5 = a3;
    v6 = HIDWORD(a3);
    sub_1A594CE88();
    result = OUTLINED_FUNCTION_176();
    if (v6 >= v5)
    {
      OUTLINED_FUNCTION_1_52();
      return sub_1A594CE70();
    }
    goto LABEL_10;
  }
  sub_1A594CE88();
  v8 = *(_QWORD *)(a2 + 16);
  result = sub_1A594CE88();
  if (v8)
  {
    for (i = a2 + 54; ; i += 24)
    {
      v10 = *(_DWORD *)(i - 14);
      v11 = *(_DWORD *)(i - 10);
      result = OUTLINED_FUNCTION_176();
      if (v11 < v10)
        break;
      result = sub_1A594CE70();
      if (!--v8)
        return result;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  return result;
}

uint64_t MailboxPatterns.hashValue.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t i;
  unsigned int v9;
  unsigned int v10;

  sub_1A594CE64();
  if ((a3 & 0x100000000000000) != 0)
  {
    sub_1A594CE88();
    v7 = *(_QWORD *)(a1 + 16);
    sub_1A594CE88();
    if (!v7)
      return sub_1A594CED0();
    for (i = a1 + 54; ; i += 24)
    {
      v9 = *(_DWORD *)(i - 14);
      v10 = *(_DWORD *)(i - 10);
      result = OUTLINED_FUNCTION_176();
      if (v10 < v9)
        break;
      sub_1A594CE70();
      if (!--v7)
        return sub_1A594CED0();
    }
    __break(1u);
  }
  else
  {
    sub_1A594CE88();
    result = OUTLINED_FUNCTION_176();
    if (HIDWORD(a2) >= a2)
    {
      OUTLINED_FUNCTION_1_52();
      sub_1A594CE70();
      return sub_1A594CED0();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A56D9C1C()
{
  uint64_t v0;

  return MailboxPatterns.hashValue.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(unsigned int *)(v0 + 16) | ((unint64_t)(*(unsigned __int16 *)(v0 + 20) | (*(unsigned __int8 *)(v0 + 22) << 16)) << 32) | ((unint64_t)*(unsigned __int8 *)(v0 + 23) << 56));
}

uint64_t sub_1A56D9C50(uint64_t a1)
{
  uint64_t v1;

  return MailboxPatterns.hash(into:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(unsigned int *)(v1 + 16) | ((unint64_t)(*(unsigned __int16 *)(v1 + 20) | (*(unsigned __int8 *)(v1 + 22) << 16)) << 32) | ((unint64_t)*(unsigned __int8 *)(v1 + 23) << 56));
}

uint64_t sub_1A56D9C84()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unsigned __int8 v4;
  _BYTE v6[72];

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(unsigned int *)(v0 + 16) | ((unint64_t)(*(unsigned __int16 *)(v0 + 20) | (*(unsigned __int8 *)(v0 + 22) << 16)) << 32);
  v4 = *(_BYTE *)(v0 + 23);
  sub_1A594CE64();
  MailboxPatterns.hash(into:)((uint64_t)v6, v1, v2, v3 | ((unint64_t)v4 << 56));
  return sub_1A594CED0();
}

unint64_t sub_1A56D9CF8()
{
  unint64_t result;

  result = qword_1EE7A9A88;
  if (!qword_1EE7A9A88)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for MailboxPatterns, &type metadata for MailboxPatterns);
    atomic_store(result, (unint64_t *)&qword_1EE7A9A88);
  }
  return result;
}

void sub_1A56D9D34(uint64_t a1, uint64_t a2)
{
  static MailboxPatterns.__derived_enum_equals(_:_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned int *)(a1 + 16) | ((unint64_t)(*(unsigned __int16 *)(a1 + 20) | (*(unsigned __int8 *)(a1 + 22) << 16)) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 23) << 56), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(unsigned int *)(a2 + 16) | ((unint64_t)(*(unsigned __int16 *)(a2 + 20) | (*(unsigned __int8 *)(a2 + 22) << 16)) << 32) | ((unint64_t)*(unsigned __int8 *)(a2 + 23) << 56));
}

uint64_t destroy for OptionValueComp(uint64_t a1)
{
  return sub_1A56667E0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned int *)(a1 + 16) | ((unint64_t)(*(unsigned __int16 *)(a1 + 20) | (*(unsigned __int8 *)(a1 + 22) << 16)) << 32), *(_BYTE *)(a1 + 23));
}

uint64_t _s12NIOIMAPCore215OptionValueCompOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  int v7;
  uint64_t v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(unsigned int *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 23);
  v7 = *(unsigned __int8 *)(a2 + 22);
  v8 = *(unsigned __int16 *)(a2 + 20) | (v7 << 16);
  sub_1A56667D4(*(_QWORD *)a2, v4, v5 | (v8 << 32), v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 22) = v7;
  *(_WORD *)(a1 + 20) = v8;
  *(_DWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 23) = v6;
  return a1;
}

uint64_t assignWithCopy for OptionValueComp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(unsigned int *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 23);
  v7 = *(unsigned __int8 *)(a2 + 22);
  v8 = *(unsigned __int16 *)(a2 + 20) | (v7 << 16);
  sub_1A56667D4(*(_QWORD *)a2, v4, v5 | (v8 << 32), v6);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(unsigned int *)(a1 + 16) | ((unint64_t)(*(unsigned __int16 *)(a1 + 20) | (*(unsigned __int8 *)(a1 + 22) << 16)) << 32);
  v12 = *(_BYTE *)(a1 + 23);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 22) = v7;
  *(_WORD *)(a1 + 20) = v8;
  *(_BYTE *)(a1 + 23) = v6;
  sub_1A56667E0(v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for OptionValueComp(uint64_t a1, __int128 *a2)
{
  char v3;
  __int128 v4;
  __int128 *v5;
  int v6;
  int v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;

  v3 = *((_BYTE *)a2 + 23);
  v4 = *a2;
  v7 = *((_DWORD *)a2 + 4);
  v5 = a2 + 1;
  v6 = v7;
  LOWORD(v7) = *((_WORD *)v5 + 2);
  v8 = *((_BYTE *)v5 + 6);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(unsigned int *)(a1 + 16) | ((unint64_t)(*(unsigned __int16 *)(a1 + 20) | (*(unsigned __int8 *)(a1 + 22) << 16)) << 32);
  v12 = *(_BYTE *)(a1 + 23);
  *(_OWORD *)a1 = v4;
  *(_DWORD *)(a1 + 16) = v6;
  *(_WORD *)(a1 + 20) = v7;
  *(_BYTE *)(a1 + 22) = v8;
  *(_BYTE *)(a1 + 23) = v3;
  sub_1A56667E0(v9, v10, v11, v12);
  return a1;
}

ValueMetadata *type metadata accessor for MailboxPatterns()
{
  return &type metadata for MailboxPatterns;
}

uint64_t OUTLINED_FUNCTION_1_52()
{
  uint64_t v0;
  unsigned int v1;
  unint64_t v2;

  return v0 + ((v2 >> 24) & 0xFFFF00 | BYTE6(v2)) + v1;
}

uint64_t OUTLINED_FUNCTION_2_47()
{
  uint64_t v0;

  return v0;
}

uint64_t static MailboxUIDValidity.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  BOOL v8;
  char v9;
  uint64_t result;

  v8 = a1 == a4 && a2 == a5;
  if (v8 || (v9 = sub_1A594CD38(), result = 0, (v9 & 1) != 0))
  {
    if ((a3 & 0x100000000) != 0)
    {
      if ((a6 & 0x100000000) != 0)
        return 1;
    }
    else if ((a6 & 0x100000000) == 0 && (_DWORD)a3 == (_DWORD)a6)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t MailboxUIDValidity.encodedMailbox.getter(uint64_t a1)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

void MailboxUIDValidity.encodedMailbox.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_8_1();
}

double (*MailboxUIDValidity.encodedMailbox.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t MailboxUIDValidity.uidValidity.getter(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return a3 | ((HIDWORD(a3) & 1) << 32);
}

uint64_t MailboxUIDValidity.uidValidity.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 16) = result;
  *(_BYTE *)(v1 + 20) = BYTE4(result) & 1;
  return result;
}

double (*MailboxUIDValidity.uidValidity.modify())(_QWORD)
{
  return nullsub_1;
}

void MailboxUIDValidity.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  sub_1A594CE94();
  if ((a4 & 0x100000000) == 0)
    sub_1A594CEAC();
  OUTLINED_FUNCTION_8_1();
}

uint64_t MailboxUIDValidity.hashValue.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A594CE64();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  sub_1A594CE94();
  if ((a3 & 0x100000000) == 0)
    sub_1A594CEAC();
  return sub_1A594CED0();
}

uint64_t sub_1A56DA1A8()
{
  uint64_t v0;

  return MailboxUIDValidity.hashValue.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(unsigned int *)(v0 + 16) | ((unint64_t)*(unsigned __int8 *)(v0 + 20) << 32));
}

void sub_1A56DA1CC(uint64_t a1)
{
  uint64_t v1;

  MailboxUIDValidity.hash(into:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(unsigned int *)(v1 + 16) | ((unint64_t)*(unsigned __int8 *)(v1 + 20) << 32));
}

uint64_t sub_1A56DA1F0()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 20);
  sub_1A594CE64();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  sub_1A594CE94();
  if (v1 != 1)
    sub_1A594CEAC();
  return sub_1A594CED0();
}

uint64_t sub_1A56DA284(uint64_t a1, uint64_t a2)
{
  return static MailboxUIDValidity.__derived_struct_equals(_:_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned __int8 *)(a1 + 20) << 32), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(unsigned int *)(a2 + 16) | ((unint64_t)*(unsigned __int8 *)(a2 + 20) << 32));
}

unint64_t sub_1A56DA2CC()
{
  unint64_t result;

  result = qword_1EE7A9A90;
  if (!qword_1EE7A9A90)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for MailboxUIDValidity, &type metadata for MailboxUIDValidity);
    atomic_store(result, (unint64_t *)&qword_1EE7A9A90);
  }
  return result;
}

uint64_t sub_1A56DA30C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for MailboxUIDValidity(uint64_t a1, uint64_t a2)
{
  int v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_DWORD *)(a1 + 16) = v4;
  return a1;
}

__n128 __swift_memcpy21_8_1(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_QWORD *)(a1 + 13) = *(_QWORD *)(a2 + 13);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for MailboxUIDValidity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  return a1;
}

uint64_t getEnumTagSinglePayload for MailboxUIDValidity(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 21))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MailboxUIDValidity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 20) = 0;
    *(_DWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 21) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 21) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MailboxUIDValidity()
{
  return &type metadata for MailboxUIDValidity;
}

uint64_t MechanismBase64.mechanism.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

void MechanismBase64.mechanism.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_8_1();
}

double (*MechanismBase64.mechanism.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t MechanismBase64.base64.getter()
{
  return swift_retain();
}

void MechanismBase64.base64.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  swift_release();
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a2;
  *(_BYTE *)(v3 + 38) = BYTE6(a3);
  *(_WORD *)(v3 + 36) = WORD2(a3);
  *(_DWORD *)(v3 + 32) = a3;
  OUTLINED_FUNCTION_8_1();
}

double (*MechanismBase64.base64.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t MechanismBase64.init(mechanism:base64:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  *(_QWORD *)a6 = result;
  *(_QWORD *)(a6 + 8) = a2;
  *(_QWORD *)(a6 + 16) = a3;
  *(_QWORD *)(a6 + 24) = a4;
  *(_DWORD *)(a6 + 32) = a5;
  *(_BYTE *)(a6 + 38) = BYTE6(a5);
  *(_WORD *)(a6 + 36) = WORD2(a5);
  return result;
}

void MechanismBase64.hash(into:)(uint64_t a1)
{
  __int128 *v1;
  uint64_t v3;
  __int128 v4;

  v4 = *v1;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  sub_1A5503278((uint64_t)&v4);
  OUTLINED_FUNCTION_0_71();
  sub_1A56A00DC(a1, v3);
}

uint64_t static MechanismBase64.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  char v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v4 || (v5 = sub_1A594CD38(), result = 0, (v5 & 1) != 0))
  {
    v7 = *(_QWORD *)(a1 + 16);
    v8 = *(_QWORD *)(a2 + 16);
    if (v7)
    {
      if (v8)
      {
        v9 = *(_QWORD *)(a1 + 24);
        v10 = *(unsigned int *)(a1 + 32) | ((unint64_t)(*(unsigned __int16 *)(a1 + 36) | (*(unsigned __int8 *)(a1 + 38) << 16)) << 32);
        v11 = *(_QWORD *)(a2 + 24);
        v12 = *(unsigned int *)(a2 + 32) | ((unint64_t)(*(unsigned __int16 *)(a2 + 36) | (*(unsigned __int8 *)(a2 + 38) << 16)) << 32);
        v13 = v10 & 0xFFFFFFFFFFFFFFLL;
        v14 = v12 & 0xFFFFFFFFFFFFFFLL;
        swift_retain();
        swift_retain();
        LOBYTE(v13) = static ByteBuffer.== infix(_:_:)(v7, v9, v13, v8, v11, v14);
        swift_release();
        swift_release();
        if ((v13 & 1) != 0)
          return 1;
      }
    }
    else if (!v8)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t MechanismBase64.hashValue.getter()
{
  __int128 *v0;
  uint64_t v1;
  _BYTE v3[72];
  __int128 v4;

  sub_1A594CE64();
  v4 = *v0;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  sub_1A5503278((uint64_t)&v4);
  OUTLINED_FUNCTION_0_71();
  sub_1A56A00DC((uint64_t)v3, v1);
  return sub_1A594CED0();
}

uint64_t sub_1A56DA780()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *(_QWORD *)(v0 + 16);
  sub_1A594CE64();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  sub_1A56A00DC((uint64_t)v3, v1);
  return sub_1A594CED0();
}

unint64_t sub_1A56DA818()
{
  unint64_t result;

  result = qword_1EE7A9A98;
  if (!qword_1EE7A9A98)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for MechanismBase64, &type metadata for MechanismBase64);
    atomic_store(result, (unint64_t *)&qword_1EE7A9A98);
  }
  return result;
}

uint64_t destroy for MechanismBase64()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for MechanismBase64(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 35) = *(_DWORD *)(a2 + 35);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for MechanismBase64(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_WORD *)(a1 + 36) = *(_WORD *)(a2 + 36);
  *(_BYTE *)(a1 + 38) = *(_BYTE *)(a2 + 38);
  return a1;
}

__n128 __swift_memcpy39_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 31) = *(_QWORD *)(a2 + 31);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for MechanismBase64(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_WORD *)(a1 + 36) = *(_WORD *)(a2 + 36);
  *(_BYTE *)(a1 + 38) = *(_BYTE *)(a2 + 38);
  return a1;
}

uint64_t getEnumTagSinglePayload for MechanismBase64(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 39))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MechanismBase64(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 38) = 0;
    *(_WORD *)(result + 36) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 39) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 39) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MechanismBase64()
{
  return &type metadata for MechanismBase64;
}

void sub_1A56DAA90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::Int v3;
  Swift::Int v4;
  char v5;
  Swift::String v6;
  Swift::Int v7;
  int v8;
  Swift::Int v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  Swift::Int v13;
  char v14;
  Swift::String v15;
  Swift::Int v16;
  int v17;
  Swift::Int v18;
  BOOL v19;
  Swift::Int v20;
  Swift::Int v21;
  char v22;
  Swift::String v23;
  int v24;
  BOOL v25;
  int v26;

  v1 = v0;
  v2 = v0 + 8;
  v3 = *(unsigned int *)(v1 + 20);
  OUTLINED_FUNCTION_12_21(34, 0xE100000000000000, v2);
  if ((v5 & 1) != 0)
  {
    v6._countAndFlagsBits = 34;
    v6._object = (void *)0xE100000000000000;
    v4 = ByteBuffer._setStringSlowpath(_:at:)(v6, v3);
  }
  v7 = v4;
  v8 = *(_DWORD *)(v1 + 20);
  v9 = (v8 + v4);
  if (__CFADD__(v8, (_DWORD)v4))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  *(_DWORD *)(v1 + 20) = v9;
  v10 = sub_1A594B4B4();
  v12 = (void *)v11;
  sub_1A56814E0(v10, v11, v2, v9);
  if ((v14 & 1) != 0)
  {
    v15._countAndFlagsBits = v10;
    v15._object = v12;
    v13 = ByteBuffer._setStringSlowpath(_:at:)(v15, v9);
  }
  v16 = v13;
  swift_bridgeObjectRelease();
  v17 = *(_DWORD *)(v1 + 20);
  v18 = (v17 + v16);
  if (__CFADD__(v17, (_DWORD)v16))
    goto LABEL_14;
  *(_DWORD *)(v1 + 20) = v18;
  v19 = __OFADD__(v7, v16);
  v20 = v7 + v16;
  if (v19)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  sub_1A56814E0(34, 0xE100000000000000, v2, v17 + v16);
  if ((v22 & 1) != 0)
  {
    v23._countAndFlagsBits = 34;
    v23._object = (void *)0xE100000000000000;
    v21 = ByteBuffer._setStringSlowpath(_:at:)(v23, v18);
  }
  v24 = *(_DWORD *)(v1 + 20);
  v25 = __CFADD__(v24, (_DWORD)v21);
  v26 = v24 + v21;
  if (v25)
    goto LABEL_16;
  *(_DWORD *)(v1 + 20) = v26;
  if (__OFADD__(v20, v21))
LABEL_17:
    __break(1u);
}

uint64_t static Media.MediaType.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  BOOL v12;
  char v13;
  uint64_t result;

  v12 = a1 == a5 && a2 == a6;
  if (v12 || (v13 = sub_1A594CD38(), result = 0, (v13 & 1) != 0))
  {
    if (a3 == a7 && a4 == a8)
      return 1;
    else
      return sub_1A594CD38();
  }
  return result;
}

void Media.MediaType.topLevel.getter()
{
  OUTLINED_FUNCTION_0_56();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_1();
}

void Media.MediaType.topLevel.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_8_1();
}

double (*Media.MediaType.topLevel.modify())(_QWORD)
{
  return nullsub_1;
}

void Media.MediaType.sub.getter()
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_1();
}

void Media.MediaType.sub.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  OUTLINED_FUNCTION_8_1();
}

double (*Media.MediaType.sub.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t Media.MediaType.hash(into:)()
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_2_24();
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2_22();
  return swift_bridgeObjectRelease();
}

uint64_t Media.MediaType.hashValue.getter()
{
  OUTLINED_FUNCTION_15_10();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_2_24();
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2_22();
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_24_3();
}

uint64_t sub_1A56DADD8()
{
  return Media.MediaType.hashValue.getter();
}

uint64_t sub_1A56DADE4()
{
  return Media.MediaType.hash(into:)();
}

uint64_t sub_1A56DADF0(uint64_t *a1, uint64_t *a2)
{
  return static Media.MediaType.__derived_struct_equals(_:_:)(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

NIOIMAPCore2::Media::MediaType __swiftcall Media.MediaType.init(topLevel:sub:)(Swift::String topLevel, Swift::String sub)
{
  uint64_t countAndFlagsBits;
  void *object;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  NIOIMAPCore2::Media::MediaType result;

  countAndFlagsBits = sub._countAndFlagsBits;
  object = topLevel._object;
  v4 = sub_1A594B49C();
  v6 = v5;
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_182();
  sub_1A594B49C();
  OUTLINED_FUNCTION_0_72();
  v7 = v4;
  v8 = v6;
  v9 = countAndFlagsBits;
  v10 = object;
  result.sub.stringValue._object = v10;
  result.sub.stringValue._countAndFlagsBits = v9;
  result.topLevel.stringValue._object = v8;
  result.topLevel.stringValue._countAndFlagsBits = v7;
  return result;
}

void _s12NIOIMAPCore25MediaO12TopLevelTypeVyAESScfC_0()
{
  sub_1A594B49C();
  OUTLINED_FUNCTION_0_72();
  OUTLINED_FUNCTION_8_1();
}

uint64_t sub_1A56DAEA0()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1A594B49C();
  static Media.TopLevelType.multipart = result;
  *(_QWORD *)algn_1EE7F9638 = v1;
  return result;
}

uint64_t *Media.TopLevelType.multipart.unsafeMutableAddressor()
{
  if (qword_1EE7970E8 != -1)
    swift_once();
  return &static Media.TopLevelType.multipart;
}

void static Media.TopLevelType.multipart.getter()
{
  sub_1A56DB4E0();
}

uint64_t sub_1A56DAF3C()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1A594B49C();
  static Media.TopLevelType.text = result;
  *(_QWORD *)algn_1EE7F95E8 = v1;
  return result;
}

uint64_t *Media.TopLevelType.text.unsafeMutableAddressor()
{
  if (qword_1EE7970C0 != -1)
    swift_once();
  return &static Media.TopLevelType.text;
}

void static Media.TopLevelType.text.getter()
{
  sub_1A56DB4E0();
}

uint64_t sub_1A56DAFC8()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1A594B49C();
  static Media.TopLevelType.application = result;
  *(_QWORD *)algn_1EE7F95D8 = v1;
  return result;
}

uint64_t *Media.TopLevelType.application.unsafeMutableAddressor()
{
  if (qword_1EE7970B8 != -1)
    swift_once();
  return &static Media.TopLevelType.application;
}

void static Media.TopLevelType.application.getter()
{
  sub_1A56DB4E0();
}

uint64_t sub_1A56DB064()
{
  uint64_t result;
  uint64_t v1;

  result = OUTLINED_FUNCTION_8_24();
  static Media.TopLevelType.audio = result;
  *(_QWORD *)algn_1EE7F95F8 = v1;
  return result;
}

uint64_t *Media.TopLevelType.audio.unsafeMutableAddressor()
{
  if (qword_1EE7970C8 != -1)
    swift_once();
  return &static Media.TopLevelType.audio;
}

void static Media.TopLevelType.audio.getter()
{
  sub_1A56DB4E0();
}

uint64_t sub_1A56DB0F0()
{
  uint64_t result;
  uint64_t v1;

  result = OUTLINED_FUNCTION_8_24();
  static Media.TopLevelType.image = result;
  *(_QWORD *)algn_1EE7F9608 = v1;
  return result;
}

uint64_t *Media.TopLevelType.image.unsafeMutableAddressor()
{
  if (qword_1EE7970D0 != -1)
    swift_once();
  return &static Media.TopLevelType.image;
}

void static Media.TopLevelType.image.getter()
{
  sub_1A56DB4E0();
}

uint64_t sub_1A56DB17C()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1A594B49C();
  static Media.TopLevelType.message = result;
  *(_QWORD *)algn_1EE7F9628 = v1;
  return result;
}

uint64_t *Media.TopLevelType.message.unsafeMutableAddressor()
{
  if (qword_1EE7970E0 != -1)
    swift_once();
  return &static Media.TopLevelType.message;
}

void static Media.TopLevelType.message.getter()
{
  sub_1A56DB4E0();
}

uint64_t sub_1A56DB210()
{
  uint64_t result;
  uint64_t v1;

  result = OUTLINED_FUNCTION_8_24();
  static Media.TopLevelType.video = result;
  *(_QWORD *)algn_1EE7F9618 = v1;
  return result;
}

uint64_t *Media.TopLevelType.video.unsafeMutableAddressor()
{
  if (qword_1EE7970D8 != -1)
    swift_once();
  return &static Media.TopLevelType.video;
}

void static Media.TopLevelType.video.getter()
{
  sub_1A56DB4E0();
}

uint64_t sub_1A56DB29C()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1A594B49C();
  static Media.TopLevelType.font = result;
  unk_1EE7F9F40 = v1;
  return result;
}

uint64_t *Media.TopLevelType.font.unsafeMutableAddressor()
{
  if (qword_1EE7A9098 != -1)
    swift_once();
  return &static Media.TopLevelType.font;
}

void static Media.TopLevelType.font.getter()
{
  sub_1A56DB4E0();
}

void Media.TopLevelType.debugDescription.getter()
{
  OUTLINED_FUNCTION_0_56();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_1();
}

void sub_1A56DB34C()
{
  Media.TopLevelType.debugDescription.getter();
}

uint64_t sub_1A56DB354()
{
  _QWORD *v0;

  return Media.TopLevelType.hashValue.getter(*v0, v0[1]);
}

uint64_t sub_1A56DB35C(uint64_t a1)
{
  _QWORD *v1;

  return Media.TopLevelType.hash(into:)(a1, *v1, v1[1]);
}

uint64_t sub_1A56DB368(_QWORD *a1, _QWORD *a2)
{
  return static Media.TopLevelType.__derived_struct_equals(_:_:)(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_1A56DB37C@<X0>(Swift::String *a1@<X0>, NIOIMAPCore2::Media::TopLevelType *a2@<X8>)
{
  uint64_t result;
  NIOIMAPCore2::Media::TopLevelType v4;

  v4 = Media.TopLevelType.init(stringLiteral:)(*a1);
  result = v4.stringValue._countAndFlagsBits;
  *a2 = v4;
  return result;
}

uint64_t sub_1A56DB3AC()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1A594B49C();
  static Media.Subtype.alternative = result;
  *(_QWORD *)algn_1EE7F9648 = v1;
  return result;
}

uint64_t *Media.Subtype.alternative.unsafeMutableAddressor()
{
  if (qword_1EE7970F0 != -1)
    swift_once();
  return &static Media.Subtype.alternative;
}

void static Media.Subtype.alternative.getter()
{
  sub_1A56DB4E0();
}

uint64_t sub_1A56DB44C()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1A594B49C();
  static Media.Subtype.related = result;
  *(_QWORD *)algn_1EE7F9668 = v1;
  return result;
}

uint64_t *Media.Subtype.related.unsafeMutableAddressor()
{
  if (qword_1EE797100 != -1)
    swift_once();
  return &static Media.Subtype.related;
}

void static Media.Subtype.related.getter()
{
  sub_1A56DB4E0();
}

void sub_1A56DB4E0()
{
  char v0;

  OUTLINED_FUNCTION_19_17();
  if (!v0)
    swift_once();
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1A56DB518()
{
  uint64_t result;
  uint64_t v1;

  result = OUTLINED_FUNCTION_8_24();
  static Media.Subtype.mixed = result;
  *(_QWORD *)algn_1EE7F9658 = v1;
  return result;
}

uint64_t *Media.Subtype.mixed.unsafeMutableAddressor()
{
  if (qword_1EE7970F8 != -1)
    swift_once();
  return &static Media.Subtype.mixed;
}

uint64_t static Media.Subtype.mixed.getter()
{
  return sub_1A56DB69C();
}

uint64_t static Media.Subtype.mixed.setter(uint64_t a1, uint64_t a2)
{
  return sub_1A5698078(a1, a2, &qword_1EE7970F8, &static Media.Subtype.mixed, algn_1EE7F9658);
}

void static Media.Subtype.mixed.modify()
{
  if (qword_1EE7970F8 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_26();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1A56DB61C()
{
  uint64_t result;
  uint64_t v1;

  result = OUTLINED_FUNCTION_3_36();
  static Media.Subtype.rfc822 = result;
  unk_1EE7F9F50 = v1;
  return result;
}

uint64_t *Media.Subtype.rfc822.unsafeMutableAddressor()
{
  if (qword_1EE7A90A0 != -1)
    swift_once();
  return &static Media.Subtype.rfc822;
}

uint64_t static Media.Subtype.rfc822.getter()
{
  return sub_1A56DB69C();
}

uint64_t sub_1A56DB69C()
{
  char v0;

  OUTLINED_FUNCTION_19_17();
  if (!v0)
    swift_once();
  swift_beginAccess();
  OUTLINED_FUNCTION_27();
  return OUTLINED_FUNCTION_182();
}

uint64_t static Media.Subtype.rfc822.setter(uint64_t a1, uint64_t a2)
{
  return sub_1A5698078(a1, a2, &qword_1EE7A90A0, &static Media.Subtype.rfc822, &qword_1EE7F9F50);
}

void static Media.Subtype.rfc822.modify()
{
  if (qword_1EE7A90A0 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_26();
  OUTLINED_FUNCTION_1();
}

void _s12NIOIMAPCore25MediaO12TopLevelTypeV9hashValueSivg_0()
{
  OUTLINED_FUNCTION_15_10();
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2_22();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_23_6();
}

void sub_1A56DB7B4()
{
  sub_1A594CE64();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_23_6();
}

uint64_t BodyStructure.mediaType.getter()
{
  const void *v0;
  double v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  const void *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE v41[184];
  _BYTE v42[184];
  _BYTE v43[184];
  _QWORD __dst[22];
  uint64_t v45;
  unint64_t v46;
  _BYTE v47[192];

  sub_1A55DC3E0(v0, v42);
  sub_1A55DC3E0(v42, v47);
  sub_1A55DC3E0(v0, v43);
  if (sub_1A55DC430((uint64_t)v43) == 1)
  {
    v40 = (uint64_t)v0;
    v1 = nullsub_1(v43);
    OUTLINED_FUNCTION_17_19(v2, v3, v4, v5, v6, v7, v8, v9, v35, v36, v37, v1);
    nullsub_1(v41);
    v11 = *(_QWORD *)(v10 + 24);
    v12 = *(_QWORD *)(v10 + 32);
    v13 = *(_QWORD *)(v10 + 40);
    v14 = *(_QWORD *)(v10 + 48);
    v15 = *(_QWORD *)(v10 + 56);
    v16 = *(_QWORD *)(v10 + 64);
    v39 = *(_QWORD *)(v10 + 72);
    v17 = *(_QWORD *)(v10 + 80);
    v38 = *(_OWORD *)(v10 + 88);
    v19 = *(_QWORD *)(v10 + 104);
    v18 = *(_QWORD *)(v10 + 112);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5523A30(v11, v12, v13, v14, v15, v16, v39, v17, v38, *((uint64_t *)&v38 + 1), v19, v18);
    if (qword_1EE7970E8 != -1)
      swift_once();
    v20 = static Media.TopLevelType.multipart;
    OUTLINED_FUNCTION_184();
    OUTLINED_FUNCTION_42();
    sub_1A55DC438(v40, sub_1A55241F0);
  }
  else
  {
    nullsub_1(v43);
    memcpy(__dst, v21, sizeof(__dst));
    sub_1A569D030(__dst, &v45);
    v22 = sub_1A569D030(&v45, &v46);
    if (v46 >> 62)
    {
      if (v46 >> 62 == 1)
      {
        v46 &= 0x3FFFFFFFFFFFFFFFuLL;
        OUTLINED_FUNCTION_17_19((uint64_t)v22, v23, v24, v25, v26, v27, v28, v29, v35, v36, v37);
        nullsub_1(v41);
        sub_1A56974D0(v30);
        if (qword_1EE7970E0 != -1)
          swift_once();
        v20 = static Media.TopLevelType.message;
        OUTLINED_FUNCTION_3_36();
        v31 = OUTLINED_FUNCTION_184();
        OUTLINED_FUNCTION_21_19(v31, sub_1A55241F0);
      }
      else
      {
        v46 &= 0x3FFFFFFFFFFFFFFFuLL;
        OUTLINED_FUNCTION_21_19((uint64_t)v22, sub_1A552370C);
        sub_1A56DBA9C((uint64_t)&v45);
        v32 = qword_1EE7970C0;
        OUTLINED_FUNCTION_42();
        if (v32 != -1)
          swift_once();
        v20 = static Media.TopLevelType.text;
        v33 = OUTLINED_FUNCTION_184();
        OUTLINED_FUNCTION_21_19(v33, sub_1A55241F0);
        sub_1A56DBAC8((uint64_t)&v45);
      }
    }
    else
    {
      v20 = *(_QWORD *)(v46 + 16);
      OUTLINED_FUNCTION_184();
      OUTLINED_FUNCTION_42();
    }
  }
  return v20;
}

uint64_t sub_1A56DBA9C(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t sub_1A56DBAC8(uint64_t a1)
{
  swift_release();
  return a1;
}

unint64_t sub_1A56DBAF8()
{
  unint64_t result;

  result = qword_1EE7A9AA0;
  if (!qword_1EE7A9AA0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for Media.MediaType, &type metadata for Media.MediaType);
    atomic_store(result, (unint64_t *)&qword_1EE7A9AA0);
  }
  return result;
}

unint64_t sub_1A56DBB38()
{
  unint64_t result;

  result = qword_1EE7A9AA8;
  if (!qword_1EE7A9AA8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for Media.TopLevelType, &type metadata for Media.TopLevelType);
    atomic_store(result, (unint64_t *)&qword_1EE7A9AA8);
  }
  return result;
}

unint64_t sub_1A56DBB78()
{
  unint64_t result;

  result = qword_1EE7A9AB0;
  if (!qword_1EE7A9AB0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for Media.TopLevelType, &type metadata for Media.TopLevelType);
    atomic_store(result, (unint64_t *)&qword_1EE7A9AB0);
  }
  return result;
}

unint64_t sub_1A56DBBB8()
{
  unint64_t result;

  result = qword_1EE7A9AB8;
  if (!qword_1EE7A9AB8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for Media.TopLevelType, &type metadata for Media.TopLevelType);
    atomic_store(result, (unint64_t *)&qword_1EE7A9AB8);
  }
  return result;
}

unint64_t sub_1A56DBBF8()
{
  unint64_t result;

  result = qword_1EE7A9AC0;
  if (!qword_1EE7A9AC0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for Media.Subtype, &type metadata for Media.Subtype);
    atomic_store(result, (unint64_t *)&qword_1EE7A9AC0);
  }
  return result;
}

unint64_t sub_1A56DBC38()
{
  unint64_t result;

  result = qword_1EE7A9AC8;
  if (!qword_1EE7A9AC8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for Media.Subtype, &type metadata for Media.Subtype);
    atomic_store(result, (unint64_t *)&qword_1EE7A9AC8);
  }
  return result;
}

unint64_t sub_1A56DBC78()
{
  unint64_t result;

  result = qword_1EE7A9AD0;
  if (!qword_1EE7A9AD0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for Media.Subtype, &type metadata for Media.Subtype);
    atomic_store(result, (unint64_t *)&qword_1EE7A9AD0);
  }
  return result;
}

void type metadata accessor for Media()
{
  OUTLINED_FUNCTION_3_1();
}

void type metadata accessor for Media.MediaType()
{
  OUTLINED_FUNCTION_3_1();
}

void type metadata accessor for Media.TopLevelType()
{
  OUTLINED_FUNCTION_3_1();
}

void type metadata accessor for Media.Subtype()
{
  OUTLINED_FUNCTION_3_1();
}

void sub_1A56DBCE8()
{
  uint64_t v0;
  uint64_t v1;
  Swift::Int v2;
  int v3;
  int v4;
  char v5;
  char v6;
  Swift::String v7;
  int v8;
  BOOL v9;
  int v10;

  v1 = v0;
  sub_1A594B4B4();
  sub_1A594B5F8();
  OUTLINED_FUNCTION_55();
  sub_1A594B5F8();
  v2 = *(unsigned int *)(v0 + 20);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_12_21(34, 0xE100000000000000, v0 + 8);
  v4 = v3;
  v6 = v5;
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
  {
    v7._countAndFlagsBits = 34;
    v7._object = (void *)0xE100000000000000;
    v4 = ByteBuffer._setStringSlowpath(_:at:)(v7, v2);
  }
  swift_bridgeObjectRelease();
  v8 = *(_DWORD *)(v1 + 20);
  v9 = __CFADD__(v8, v4);
  v10 = v8 + v4;
  if (v9)
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(v1 + 20) = v10;
    OUTLINED_FUNCTION_23_6();
  }
}

uint64_t OUTLINED_FUNCTION_0_72()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_3_36()
{
  return sub_1A594B49C();
}

uint64_t OUTLINED_FUNCTION_8_24()
{
  return sub_1A594B49C();
}

void OUTLINED_FUNCTION_12_21(uint64_t a1, unint64_t a2, uint64_t a3)
{
  Swift::UInt32 v3;

  sub_1A56814E0(a1, a2, a3, v3);
}

void *OUTLINED_FUNCTION_17_19(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  return sub_1A55DC3E0(&STACK[0x340], va);
}

uint64_t OUTLINED_FUNCTION_21_19(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  uint64_t v2;

  return sub_1A55DC438(v2, a2);
}

void GmailLabel.init(mailboxName:)(uint64_t a1)
{
  sub_1A56D78FC(a1, (uint64_t (*)(_QWORD))j_j__malloc, (uint64_t)j_j__realloc, (uint64_t)j_j__free, (uint64_t)sub_1A566C0C4);
  OUTLINED_FUNCTION_0_73();
  OUTLINED_FUNCTION_8_1();
}

void GmailLabel.init(useAttribute:)(uint64_t a1, uint64_t a2)
{
  ByteBufferAllocator.buffer(string:)(a1, a2, j_j__malloc, j_j__realloc, j_j__free, sub_1A566C0C4);
  OUTLINED_FUNCTION_0_73();
  OUTLINED_FUNCTION_8_1();
}

Swift::String __swiftcall GmailLabel.makeDisplayString()()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  Swift::String result;

  sub_1A5714A30(v0, v1, v2 & 0xFFFFFFFFFFFFFFLL);
  result._object = v4;
  result._countAndFlagsBits = v3;
  return result;
}

uint64_t GmailLabel.hash(into:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unsigned int v3;
  unint64_t v4;
  uint64_t result;

  v3 = a3;
  v4 = HIDWORD(a3);
  result = OUTLINED_FUNCTION_176();
  if (v4 >= v3)
    return sub_1A594CE70();
  __break(1u);
  return result;
}

uint64_t static GmailLabel.__derived_struct_equals(_:_:)(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  BOOL v6;

  if (HIDWORD(a2) < a2)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (HIDWORD(a5) < a5)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  result = HIDWORD(a2) - (_DWORD)a2 == HIDWORD(a5) - (_DWORD)a5
        && ((a3 & 0xFFFFFFFFFFFFFFLL) == (a6 & 0xFFFFFFFFFFFFFFLL) ? (v6 = result == a4) : (v6 = 0),
            v6 || (swift_retain(), (sub_1A566B918() & 1) != 0));
  return result;
}

uint64_t GmailLabel.hashValue.getter(uint64_t a1, unint64_t a2)
{
  unsigned int v2;
  unint64_t v3;
  uint64_t result;

  v2 = a2;
  v3 = HIDWORD(a2);
  sub_1A594CE64();
  result = OUTLINED_FUNCTION_176();
  if (v3 < v2)
  {
    __break(1u);
  }
  else
  {
    sub_1A594CE70();
    return sub_1A594CED0();
  }
  return result;
}

uint64_t sub_1A56DC134()
{
  uint64_t v0;

  return GmailLabel.hashValue.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
}

uint64_t sub_1A56DC150(uint64_t a1)
{
  uint64_t v1;

  return GmailLabel.hash(into:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8));
}

unint64_t sub_1A56DC170()
{
  unint64_t result;

  result = qword_1EE7A9AD8;
  if (!qword_1EE7A9AD8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for GmailLabel, &type metadata for GmailLabel);
    atomic_store(result, (unint64_t *)&qword_1EE7A9AD8);
  }
  return result;
}

uint64_t sub_1A56DC1AC(uint64_t a1, uint64_t a2)
{
  return static GmailLabel.__derived_struct_equals(_:_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned __int16 *)(a1 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 22) << 48), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(unsigned int *)(a2 + 16) | ((unint64_t)*(unsigned __int16 *)(a2 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a2 + 22) << 48));
}

ValueMetadata *type metadata accessor for GmailLabel()
{
  return &type metadata for GmailLabel;
}

uint64_t OUTLINED_FUNCTION_0_73()
{
  return swift_bridgeObjectRelease();
}

void MessageAttribute.hash(into:)(uint64_t a1)
{
  void *v1;
  char *v2;
  _BYTE __src[184];
  _BYTE v4[184];
  _BYTE __dst[192];

  OUTLINED_FUNCTION_34_12(a1, __src);
  v1 = sub_1A56DDB8C(__src, __dst);
  OUTLINED_FUNCTION_34_12((uint64_t)v1, v4);
  v2 = (char *)&loc_1A56DC268 + dword_1A56DC6CC[sub_1A56DDBA0((uint64_t)v4)];
  __asm { BR              X10 }
}

void sub_1A56DC278()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_42_6((uint64_t)&v2);
  OUTLINED_FUNCTION_9_20();
  sub_1A5695F10(v0, v1);
}

void static MessageAttribute.__derived_enum_equals(_:_:)(int a1, void *__src)
{
  void *v2;
  char *v3;
  _BYTE __dst[368];
  _BYTE v5[184];
  _BYTE v6[184];

  sub_1A56DDB8C(__src, __dst);
  v2 = sub_1A56DDB8C(__dst, v6);
  OUTLINED_FUNCTION_34_12((uint64_t)v2, v5);
  v3 = (char *)&loc_1A56DC75C + dword_1A56DCCB4[sub_1A56DDBA0((uint64_t)v5)];
  __asm { BR              X10 }
}

uint64_t sub_1A56DC76C()
{
  void *v0;
  char v1;
  char v2;
  _BYTE v4[184];
  uint64_t v5;

  sub_1A56DDBE8((uint64_t)&v5);
  sub_1A56DDB8C(v0, v4);
  if (OUTLINED_FUNCTION_2_48())
  {
    v2 = 0;
  }
  else
  {
    sub_1A56DDBE8((uint64_t)v4);
    sub_1A568E1F8();
    v2 = v1;
  }
  return v2 & 1;
}

uint64_t MessageAttribute.hashValue.getter()
{
  _BYTE v1[72];

  sub_1A594CE64();
  MessageAttribute.hash(into:)((uint64_t)v1);
  return sub_1A594CED0();
}

uint64_t sub_1A56DCD24()
{
  void *v0;
  _BYTE __dst[184];

  sub_1A56DDB8C(v0, __dst);
  return MessageAttribute.hashValue.getter();
}

void sub_1A56DCD58(uint64_t a1)
{
  _BYTE v2[184];

  OUTLINED_FUNCTION_34_12(a1, v2);
  MessageAttribute.hash(into:)(a1);
}

uint64_t sub_1A56DCD90()
{
  void *v0;
  uint64_t v2;
  _BYTE __dst[184];

  sub_1A56DDB8C(v0, __dst);
  sub_1A594CE64();
  MessageAttribute.hash(into:)((uint64_t)&v2);
  return sub_1A594CED0();
}

uint64_t sub_1A56DCDE8(void *a1, void *a2)
{
  char v3;
  _BYTE v5[184];
  _BYTE __dst[184];

  sub_1A56DDB8C(a1, v5);
  sub_1A56DDB8C(a2, __dst);
  static MessageAttribute.__derived_enum_equals(_:_:)((int)v5, __dst);
  return v3 & 1;
}

uint64_t MessageAttribute.debugDescription.getter()
{
  __n128 *v0;

  sub_1A56DDBF8(v0);
  return sub_1A5682100(v0);
}

void sub_1A56DCE54(void *a1)
{
  char *v2;
  _BYTE __dst[184];
  _BYTE v4[368];
  _BYTE v5[192];

  sub_1A56DDB8C(a1, __dst);
  sub_1A56DDB8C(__dst, v5);
  sub_1A56DDB8C(a1, v4);
  v2 = (char *)&loc_1A56DCEB0 + *((int *)qword_1A56DD310 + sub_1A56DDBA0((uint64_t)v4));
  __asm { BR              X10 }
}

void sub_1A56DCEC0()
{
  uint64_t v0;

  sub_1A56DDBE8((uint64_t)&v0);
  sub_1A56DD8E4();
  OUTLINED_FUNCTION_1_3();
}

void sub_1A56DD220()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t *v2;
  unint64_t v3;
  unint64_t v4;
  Swift::UInt32 v5;
  uint64_t v6;
  unint64_t v7;
  Swift::Int v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  int v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  Swift::Int v17;
  char v18;
  int v19;
  BOOL v20;
  Swift::Int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char v26;
  int v27;
  char v28;

  v2 = (unint64_t *)OUTLINED_FUNCTION_16_18();
  v3 = *v2;
  v4 = v2[1];
  v5 = *(_DWORD *)(v0 + 20);
  v6 = OUTLINED_FUNCTION_38_9();
  OUTLINED_FUNCTION_22_1(v6, v7, v0 + 8, v5);
  if ((v9 & 1) != 0)
  {
    v10 = OUTLINED_FUNCTION_38_9();
    v8 = OUTLINED_FUNCTION_102(v10, v11);
  }
  v12 = v8;
  v13 = *(_DWORD *)(v0 + 20);
  if (__CFADD__(v13, (_DWORD)v8))
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(v0 + 20) = v13 + v8;
    v14 = OUTLINED_FUNCTION_3_24();
    OUTLINED_FUNCTION_114(v14, v15, v16);
    if ((v18 & 1) != 0)
      v17 = OUTLINED_FUNCTION_102(32, 0xE100000000000000);
    v19 = *(_DWORD *)(v0 + 20);
    if (!__CFADD__(v19, (_DWORD)v17))
    {
      *(_DWORD *)(v0 + 20) = v19 + v17;
      v20 = __OFADD__(v12, v17);
      v21 = v12 + v17;
      if (!v20)
      {
        if (v4)
        {
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A56BA418(v3, v4);
          v1 = v22;
          OUTLINED_FUNCTION_55_5();
          goto LABEL_14;
        }
        v23 = OUTLINED_FUNCTION_44_5();
        OUTLINED_FUNCTION_114(v23, v24, v25);
        if ((v26 & 1) != 0)
          OUTLINED_FUNCTION_102(4999502, 0xE300000000000000);
        OUTLINED_FUNCTION_13_11();
        if (!v28)
        {
          *(_DWORD *)(v0 + 20) = v27;
LABEL_14:
          if (!__OFADD__(v21, v1))
            JUMPOUT(0x1A56DD210);
          __break(1u);
          JUMPOUT(0x1A56DD2F4);
        }
LABEL_20:
        __break(1u);
        JUMPOUT(0x1A56DD310);
      }
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
  }
  __break(1u);
  goto LABEL_19;
}

uint64_t sub_1A56DD344()
{
  void *v0;
  _BYTE __dst[184];

  sub_1A56DDB8C(v0, __dst);
  return MessageAttribute.debugDescription.getter();
}

void sub_1A56DD378(const void *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  Swift::Int v8;
  char v9;
  Swift::Int v10;
  int v11;
  Swift::UInt32 v12;
  uint64_t v13;
  unint64_t v14;
  Swift::Int v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  Swift::Int v20;
  Swift::Int v21;
  char v22;
  int v23;
  uint64_t v24;
  Swift::Int v25;
  char v26;
  Swift::Int v27;
  int v28;
  Swift::Int v29;
  char v30;
  int v31;
  BOOL v32;
  int v33;
  Swift::Int v34;
  Swift::Int v35;
  char v36;
  Swift::Int v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  Swift::Int v59;
  const void *v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  Swift::Int v73;
  Swift::Int v74;
  char v75;
  Swift::Int v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  Swift::Int v96;
  uint64_t v97;
  char v98[8];
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _BYTE v139[192];
  _BYTE v140[184];
  __n128 v141;
  uint64_t v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  Swift::String v149;

  v4 = v2;
  v7 = v2 + 8;
  OUTLINED_FUNCTION_22_1(1497648962, 0xE400000000000000, v2 + 8, *(_DWORD *)(v2 + 20));
  if ((v9 & 1) != 0)
    v8 = OUTLINED_FUNCTION_1_25(1497648962, 0xE400000000000000);
  v10 = v8;
  v11 = *(_DWORD *)(v2 + 20);
  v12 = v11 + v8;
  if (__CFADD__(v11, (_DWORD)v8))
  {
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  *(_DWORD *)(v4 + 20) = v12;
  if ((a2 & 1) != 0)
  {
    v13 = OUTLINED_FUNCTION_22_19();
    sub_1A56814E0(v13, v14, v7, v12);
    if ((v16 & 1) != 0)
    {
      v17 = OUTLINED_FUNCTION_22_19();
      v15 = OUTLINED_FUNCTION_1_25(v17, v18);
    }
    v19 = *(_DWORD *)(v4 + 20);
    if (__CFADD__(v19, (_DWORD)v15))
      goto LABEL_43;
    *(_DWORD *)(v4 + 20) = v19 + v15;
  }
  else
  {
    v15 = 0;
  }
  v20 = v10 + v15;
  if (__OFADD__(v10, v15))
    goto LABEL_39;
  OUTLINED_FUNCTION_3_37(32);
  if ((v22 & 1) != 0)
    v21 = OUTLINED_FUNCTION_1_25(32, 0xE100000000000000);
  v23 = *(_DWORD *)(v4 + 20);
  if (__CFADD__(v23, (_DWORD)v21))
    goto LABEL_40;
  *(_DWORD *)(v4 + 20) = v23 + v21;
  v24 = v20 + v21;
  if (__OFADD__(v20, v21))
  {
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  sub_1A55DBFD8(a1, v140);
  if (sub_1A55DC41C((uint64_t)v140) == 1)
  {
    OUTLINED_FUNCTION_3_37(40);
    if ((v26 & 1) != 0)
      v25 = OUTLINED_FUNCTION_1_25(40, 0xE100000000000000);
    v27 = v25;
    v28 = *(_DWORD *)(v4 + 20);
    if (__CFADD__(v28, (_DWORD)v25))
      goto LABEL_44;
    *(_DWORD *)(v4 + 20) = v28 + v25;
    OUTLINED_FUNCTION_3_37(41);
    if ((v30 & 1) != 0)
      v29 = OUTLINED_FUNCTION_1_25(41, 0xE100000000000000);
    v31 = *(_DWORD *)(v4 + 20);
    v32 = __CFADD__(v31, (_DWORD)v29);
    v33 = v31 + v29;
    if (v32)
      goto LABEL_45;
    *(_DWORD *)(v4 + 20) = v33;
    v34 = v27 + v29;
    if (!__OFADD__(v27, v29))
      goto LABEL_36;
    __break(1u);
  }
  sub_1A55DC3E0(v140, v139);
  sub_1A566B41C((uint64_t)v139);
  OUTLINED_FUNCTION_3_37(40);
  if ((v36 & 1) != 0)
    v35 = OUTLINED_FUNCTION_1_25(40, 0xE100000000000000);
  v37 = v35;
  v38 = *(_DWORD *)(v4 + 20);
  v32 = __CFADD__(v38, (_DWORD)v35);
  v39 = v38 + v35;
  if (v32)
    goto LABEL_46;
  *(_DWORD *)(v4 + 20) = v39;
  sub_1A55DC3E0(v139, &v121);
  if (sub_1A55DC430((uint64_t)&v121) == 1)
  {
    v141 = OUTLINED_FUNCTION_33_9((uint64_t)&v121);
    v142 = v40;
    v143 = *(_OWORD *)(v41 + 24);
    v144 = *(_OWORD *)(v41 + 40);
    v145 = *(_OWORD *)(v41 + 56);
    v146 = *(_OWORD *)(v41 + 72);
    v147 = *(_OWORD *)(v41 + 88);
    v148 = *(_OWORD *)(v41 + 104);
    OUTLINED_FUNCTION_37_7(v41, v42, v43, v44, v45, v46, v47, v48, v78, v79, v80, v81, v3, v24, v85, v87, v88, v89, v91,
      v93,
      v95,
      v97,
      v98[0],
      v99,
      v100,
      v101,
      v102,
      v103,
      v104,
      v105,
      v106,
      v107,
      v108,
      v109,
      v110,
      v111,
      v112,
      v113,
      v114,
      v115,
      v116,
      v117,
      v118,
      v119,
      v120,
      v121,
      v122,
      v123,
      v124,
      v125,
      v126,
      v127,
      v128,
      v129,
      v130,
      v131,
      v132,
      v133,
      v134,
      v135,
      v136,
      v137,
      v138);
    nullsub_1(v98);
    v50 = *(_QWORD *)(v49 + 24);
    v96 = v37;
    v51 = *(_QWORD *)(v49 + 32);
    v52 = *(_QWORD *)(v49 + 40);
    v53 = *(_QWORD *)(v49 + 48);
    v54 = *(_QWORD *)(v49 + 64);
    v92 = *(_QWORD *)(v49 + 72);
    v94 = *(_QWORD *)(v49 + 56);
    v90 = *(_QWORD *)(v49 + 80);
    v86 = *(_OWORD *)(v49 + 88);
    v55 = *(_QWORD *)(v49 + 104);
    v56 = *(_QWORD *)(v49 + 112);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5523A30(v50, v51, v52, v53, v94, v54, v92, v90, v86, *((uint64_t *)&v86 + 1), v55, v56);
    sub_1A56A49C8(&v141);
    v58 = v57;
    OUTLINED_FUNCTION_50_4();
    v59 = v96 + v58;
    if (__OFADD__(v96, v58))
    {
LABEL_49:
      __break(1u);
      goto LABEL_50;
    }
    v24 = v84;
    goto LABEL_32;
  }
  nullsub_1(&v121);
  v61 = OUTLINED_FUNCTION_30_5(&v141, v60);
  OUTLINED_FUNCTION_37_7((uint64_t)v61, v62, v63, v64, v65, v66, v67, v68, v78, v79, v80, v81, v82, v83, v85, v87, v88, v89, v91,
    v93,
    v95,
    v97,
    v98[0],
    v99,
    v100,
    v101,
    v102,
    v103,
    v104,
    v105,
    v106,
    v107,
    v108,
    v109,
    v110,
    v111,
    v112,
    v113,
    v114,
    v115,
    v116,
    v117,
    v118,
    v119,
    v120,
    v121,
    v122,
    v123,
    v124,
    v125,
    v126,
    v127,
    v128,
    v129,
    v130,
    v131,
    v132,
    v133,
    v134,
    v135,
    v136,
    v137,
    v138);
  nullsub_1(v98);
  sub_1A56974D0(v69);
  sub_1A56A6E68();
  v71 = v70;
  OUTLINED_FUNCTION_50_4();
  v72 = __OFADD__(v37, v71);
  v59 = v37 + v71;
  if (!v72)
  {
LABEL_32:
    v73 = *(unsigned int *)(v4 + 20);
    sub_1A56814E0(41, 0xE100000000000000, v7, *(_DWORD *)(v4 + 20));
    if ((v75 & 1) != 0)
    {
      v149._countAndFlagsBits = 41;
      v149._object = (void *)0xE100000000000000;
      v74 = OUTLINED_FUNCTION_104(v149, v73);
    }
    v76 = v74;
    OUTLINED_FUNCTION_50_4();
    OUTLINED_FUNCTION_140();
    if (v32)
      goto LABEL_47;
    *(_DWORD *)(v4 + 20) = v77;
    v34 = v59 + v76;
    if (__OFADD__(v59, v76))
    {
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
LABEL_36:
    if (!__OFADD__(v24, v34))
    {
      OUTLINED_FUNCTION_1_3();
      return;
    }
    goto LABEL_42;
  }
LABEL_50:
  __break(1u);
}

#error "1A56DD7C4: call analysis failed (funcsize=118)"

void sub_1A56DD8E4()
{
  uint64_t v0;
  uint64_t v1;
  Swift::Int v2;
  uint64_t v3;
  unint64_t v4;
  Swift::Int v5;
  char v6;
  Swift::String v7;
  Swift::Int v8;
  int v9;
  BOOL v10;
  int v11;

  v1 = v0;
  v2 = *(unsigned int *)(v0 + 20);
  v3 = OUTLINED_FUNCTION_41_7();
  OUTLINED_FUNCTION_22_1(v3, v4, v0 + 8, v2);
  if ((v6 & 1) != 0)
  {
    v7._countAndFlagsBits = OUTLINED_FUNCTION_41_7();
    v5 = ByteBuffer._setStringSlowpath(_:at:)(v7, v2);
  }
  v8 = v5;
  v9 = *(_DWORD *)(v1 + 20);
  v10 = __CFADD__(v9, (_DWORD)v5);
  v11 = v9 + v5;
  if (v10)
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(v1 + 20) = v11;
    OUTLINED_FUNCTION_10_23();
    if (!__OFADD__(v8, j__OUTLINED_FUNCTION_74()))
    {
      OUTLINED_FUNCTION_6_4();
      return;
    }
  }
  __break(1u);
}

void sub_1A56DD964(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::UInt32 v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  Swift::Int v8;
  char v9;
  int v10;
  Swift::UInt32 v11;
  BOOL v12;
  Swift::Int v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  Swift::Int v17;
  char v18;
  int v19;
  BOOL v20;
  int v21;

  sub_1A577C050(a1);
  v3 = v2;
  v4 = *(_DWORD *)(v1 + 20);
  v5 = OUTLINED_FUNCTION_3_24();
  OUTLINED_FUNCTION_22_1(v5, v6, v7, v4);
  if ((v9 & 1) != 0)
    v8 = OUTLINED_FUNCTION_12_18(32, 0xE100000000000000);
  v10 = *(_DWORD *)(v1 + 20);
  v11 = v10 + v8;
  if (__CFADD__(v10, (_DWORD)v8))
  {
    __break(1u);
    goto LABEL_11;
  }
  *(_DWORD *)(v1 + 20) = v11;
  v12 = __OFADD__(v3, v8);
  v13 = v3 + v8;
  if (v12)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v14 = OUTLINED_FUNCTION_44_5();
  sub_1A56814E0(v14, v15, v16, v11);
  if ((v18 & 1) != 0)
    v17 = OUTLINED_FUNCTION_12_18(4999502, 0xE300000000000000);
  v19 = *(_DWORD *)(v1 + 20);
  v20 = __CFADD__(v19, (_DWORD)v17);
  v21 = v19 + v17;
  if (v20)
    goto LABEL_12;
  *(_DWORD *)(v1 + 20) = v21;
  if (!__OFADD__(v13, v17))
  {
    OUTLINED_FUNCTION_6_4();
    return;
  }
LABEL_13:
  __break(1u);
}

void sub_1A56DDA14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  Swift::UInt32 v4;
  char v5;
  char v6;
  int v7;
  char v8;

  sub_1A594CC9C();
  v6 = v5;
  sub_1A594B5F8();
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_21_8();
  OUTLINED_FUNCTION_22_1(a2, 0xEB00000000204449, v3, v4);
  OUTLINED_FUNCTION_26_7();
  if ((v6 & 1) != 0)
    OUTLINED_FUNCTION_17_8();
  OUTLINED_FUNCTION_52();
  OUTLINED_FUNCTION_140();
  if (v8)
    __break(1u);
  else
    *(_DWORD *)(v2 + 20) = v7;
}

void sub_1A56DDAD0()
{
  uint64_t v0;
  Swift::Int v1;
  uint64_t v2;
  unint64_t v3;
  Swift::Int v4;
  char v5;
  Swift::String v6;
  Swift::Int v7;
  int v8;
  Swift::Int v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  char v14;
  Swift::String v15;
  int v16;
  BOOL v17;
  int v18;
  Swift::Int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;

  v1 = *(unsigned int *)(v0 + 20);
  v2 = OUTLINED_FUNCTION_15_23();
  OUTLINED_FUNCTION_22_1(v2, v3, v0 + 8, v1);
  if ((v5 & 1) != 0)
  {
    v6._countAndFlagsBits = OUTLINED_FUNCTION_15_23();
    v4 = ByteBuffer._setStringSlowpath(_:at:)(v6, v1);
  }
  v7 = v4;
  v8 = *(_DWORD *)(v0 + 20);
  v9 = (v8 + v4);
  if (__CFADD__(v8, (_DWORD)v4))
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  *(_DWORD *)(v0 + 20) = v9;
  v10 = OUTLINED_FUNCTION_3_24();
  sub_1A56814E0(v10, v11, v12, v9);
  if ((v14 & 1) != 0)
  {
    v15._countAndFlagsBits = 32;
    v15._object = (void *)0xE100000000000000;
    v13 = ByteBuffer._setStringSlowpath(_:at:)(v15, v9);
  }
  v16 = *(_DWORD *)(v0 + 20);
  v17 = __CFADD__(v16, (_DWORD)v13);
  v18 = v16 + v13;
  if (v17)
    goto LABEL_11;
  *(_DWORD *)(v0 + 20) = v18;
  v19 = v7 + v13;
  if (__OFADD__(v7, v13))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v20 = OUTLINED_FUNCTION_10_23();
  j__OUTLINED_FUNCTION_165(v20, v21, v22, v23, v24, v25, v26, v27, v29);
  if (!__OFADD__(v19, v28))
  {
    OUTLINED_FUNCTION_6_4();
    return;
  }
LABEL_13:
  __break(1u);
}

void *sub_1A56DDB8C(void *__src, void *__dst)
{
  return memcpy(__dst, __src, 0xB2uLL);
}

uint64_t sub_1A56DDBA0(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 176) >> 12;
}

uint64_t sub_1A56DDBAC(uint64_t a1, uint64_t a2)
{
  __swift_memcpy33_8_0(a2, a1);
  return a2;
}

uint64_t sub_1A56DDBE8(uint64_t result)
{
  *(_WORD *)(result + 176) &= 0xFFFu;
  return result;
}

void sub_1A56DDBF8(__n128 *a1)
{
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t);
  __n128 v11;
  __n128 v12;

  v1 = OUTLINED_FUNCTION_7_23(a1);
  OUTLINED_FUNCTION_26_10(v2, v3, v4, v5, v6, v7, v8, v9, v10, v1, v11, v12);
  OUTLINED_FUNCTION_53_5();
}

void sub_1A56DDC24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int16 a23)
{
  switch(a23 >> 12)
  {
    case 0:
    case 6:
    case 0xB:
    case 0xC:
      goto LABEL_4;
    case 1:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_retain();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_4:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      break;
    case 5:
      sub_1A5523694(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
        a20,
        a21,
        a22,
        a23);
      break;
    case 7:
      sub_1A56DDDA4(a1, a2, a3, a4, a5);
      break;
    default:
      return;
  }
}

uint64_t sub_1A56DDDA4(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  if (a5 >> 6 == 1)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return sub_1A55DC724(a2, a3);
  }
  else if (!(a5 >> 6))
  {
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return result;
}

unint64_t sub_1A56DDDEC()
{
  unint64_t result;

  result = qword_1EE7A9AE0;
  if (!qword_1EE7A9AE0)
  {
    result = MEMORY[0x1A85B1874]("ͧT?", &type metadata for MessageAttribute);
    atomic_store(result, (unint64_t *)&qword_1EE7A9AE0);
  }
  return result;
}

void destroy for MessageAttribute(uint64_t a1)
{
  sub_1A5683900(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_WORD *)(a1 + 176));
}

uint64_t initializeWithCopy for MessageAttribute(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int16 v26;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 56);
  v13 = *(_QWORD *)(a2 + 72);
  v14 = *(_QWORD *)(a2 + 80);
  v15 = *(_QWORD *)(a2 + 88);
  v16 = *(_QWORD *)(a2 + 96);
  v17 = *(_QWORD *)(a2 + 104);
  v18 = *(_QWORD *)(a2 + 112);
  v19 = *(_QWORD *)(a2 + 120);
  v20 = *(_QWORD *)(a2 + 128);
  v21 = *(_QWORD *)(a2 + 136);
  v22 = *(_QWORD *)(a2 + 144);
  v23 = *(_QWORD *)(a2 + 152);
  v24 = *(_QWORD *)(a2 + 160);
  v25 = *(_QWORD *)(a2 + 168);
  v26 = *(_WORD *)(a2 + 176);
  v7 = *(_QWORD *)(a2 + 64);
  v8 = *(_QWORD *)a2;
  v9 = *(_QWORD *)(a2 + 8);
  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_QWORD *)(a2 + 24);
  sub_1A56DDC24(*(_QWORD *)a2, v9, v10, v11, v3, v4, v5, v6, v7, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22,
    v23,
    v24,
    v25,
    v26);
  *(_QWORD *)a1 = v8;
  *(_QWORD *)(a1 + 8) = v9;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v11;
  *(_QWORD *)(a1 + 32) = v3;
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v14;
  *(_QWORD *)(a1 + 88) = v15;
  *(_QWORD *)(a1 + 96) = v16;
  *(_QWORD *)(a1 + 104) = v17;
  *(_QWORD *)(a1 + 112) = v18;
  *(_QWORD *)(a1 + 120) = v19;
  *(_QWORD *)(a1 + 128) = v20;
  *(_QWORD *)(a1 + 136) = v21;
  *(_QWORD *)(a1 + 144) = v22;
  *(_QWORD *)(a1 + 152) = v23;
  *(_QWORD *)(a1 + 160) = v24;
  *(_QWORD *)(a1 + 168) = v25;
  *(_WORD *)(a1 + 176) = v26;
  return a1;
}

uint64_t assignWithCopy for MessageAttribute(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int16 v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int16 v43;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v30 = *(_QWORD *)(a2 + 72);
  v31 = *(_QWORD *)(a2 + 80);
  v32 = *(_QWORD *)(a2 + 88);
  v33 = *(_QWORD *)(a2 + 96);
  v34 = *(_QWORD *)(a2 + 104);
  v35 = *(_QWORD *)(a2 + 112);
  v36 = *(_QWORD *)(a2 + 120);
  v37 = *(_QWORD *)(a2 + 128);
  v38 = *(_QWORD *)(a2 + 136);
  v39 = *(_QWORD *)(a2 + 144);
  v40 = *(_QWORD *)(a2 + 152);
  v41 = *(_QWORD *)(a2 + 160);
  v42 = *(_QWORD *)(a2 + 168);
  v43 = *(_WORD *)(a2 + 176);
  sub_1A56DDC24(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39,
    v40,
    v41,
    v42,
    v43);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v30;
  *(_QWORD *)(a1 + 80) = v31;
  *(_QWORD *)(a1 + 88) = v32;
  v22 = *(_OWORD *)(a1 + 96);
  v23 = *(_OWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 96) = v33;
  *(_QWORD *)(a1 + 104) = v34;
  *(_QWORD *)(a1 + 112) = v35;
  *(_QWORD *)(a1 + 120) = v36;
  v24 = *(_OWORD *)(a1 + 128);
  v25 = *(_OWORD *)(a1 + 144);
  *(_QWORD *)(a1 + 128) = v37;
  *(_QWORD *)(a1 + 136) = v38;
  *(_QWORD *)(a1 + 144) = v39;
  *(_QWORD *)(a1 + 152) = v40;
  v26 = *(_QWORD *)(a1 + 160);
  v27 = *(_QWORD *)(a1 + 168);
  *(_QWORD *)(a1 + 160) = v41;
  *(_QWORD *)(a1 + 168) = v42;
  v28 = *(_WORD *)(a1 + 176);
  *(_WORD *)(a1 + 176) = v43;
  sub_1A5683900(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    *((uint64_t *)&v25 + 1),
    v26,
    v27,
    v28);
  return a1;
}

void *__swift_memcpy178_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xB2uLL);
}

uint64_t assignWithTake for MessageAttribute(uint64_t a1, uint64_t a2)
{
  __int16 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int16 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;

  v3 = *(_WORD *)(a2 + 176);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_OWORD *)(a1 + 64);
  v13 = *(_OWORD *)(a1 + 80);
  v14 = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 112);
  v16 = *(_OWORD *)(a1 + 128);
  v17 = *(_OWORD *)(a1 + 144);
  v18 = *(_QWORD *)(a1 + 160);
  v19 = *(_QWORD *)(a1 + 168);
  v20 = *(_WORD *)(a1 + 176);
  v21 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v21;
  v22 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v22;
  v23 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v23;
  v24 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v24;
  v25 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v25;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_WORD *)(a1 + 176) = v3;
  sub_1A5683900(v4, v6, v5, v7, v8, v9, v10, v11, v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17,
    *((uint64_t *)&v17 + 1),
    v18,
    v19,
    v20);
  return a1;
}

uint64_t getEnumTagSinglePayload for MessageAttribute(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x74 && *(_BYTE *)(a1 + 178))
    {
      v2 = *(_DWORD *)a1 + 115;
    }
    else
    {
      v2 = ((*(unsigned __int16 *)(a1 + 176) >> 5) & 0x70 | (*(unsigned __int16 *)(a1 + 176) >> 12)) ^ 0x7F;
      if (v2 >= 0x73)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

void storeEnumTagSinglePayload for MessageAttribute(char *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v4;

  if (a2 > 0x73)
  {
    *((_QWORD *)a1 + 21) = 0;
    *(_OWORD *)(a1 + 152) = 0u;
    *(_OWORD *)(a1 + 136) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *((_WORD *)a1 + 88) = 0;
    *(_QWORD *)a1 = a2 - 116;
    if (a3 >= 0x74)
      a1[178] = 1;
  }
  else
  {
    if (a3 >= 0x74)
      a1[178] = 0;
    if (a2)
    {
      v4 = (((-a2 >> 4) & 7) - 8 * a2) << 9;
      bzero(a1, 0xB0uLL);
      *((_WORD *)a1 + 88) = v4;
    }
  }
}

uint64_t sub_1A56DE2FC(uint64_t result, __int16 a2)
{
  *(_WORD *)(result + 176) = *(_WORD *)(result + 176) & 0x1FF | (a2 << 12);
  return result;
}

ValueMetadata *type metadata accessor for MessageAttribute()
{
  return &type metadata for MessageAttribute;
}

void sub_1A56DE320(__n128 *a1)
{
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t);
  __n128 v11;
  __n128 v12;

  v1 = OUTLINED_FUNCTION_7_23(a1);
  OUTLINED_FUNCTION_26_10(v2, v3, v4, v5, v6, v7, v8, v9, v10, v1, v11, v12);
  OUTLINED_FUNCTION_53_5();
}

uint64_t OUTLINED_FUNCTION_2_48()
{
  return sub_1A56DDBA0((uint64_t)&STACK[0x508]);
}

void OUTLINED_FUNCTION_3_37(uint64_t a1)
{
  Swift::UInt32 v1;
  uint64_t v2;

  sub_1A56814E0(a1, 0xE100000000000000, v2, v1);
}

__n128 OUTLINED_FUNCTION_6_30(uint64_t a1)
{
  uint64_t v1;
  __n128 result;

  *(_OWORD *)(v1 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v1 + 40) = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 56);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 72);
  *(_OWORD *)(v1 + 88) = *(_OWORD *)(a1 + 88);
  result = *(__n128 *)(a1 + 104);
  *(__n128 *)(v1 + 104) = result;
  return result;
}

__n128 OUTLINED_FUNCTION_7_23(__n128 *a1)
{
  return a1[4];
}

uint64_t OUTLINED_FUNCTION_10_23()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_13_20()
{
  return 0x4C414E5245544E49;
}

void OUTLINED_FUNCTION_14_18(__n128 *a1)
{
  sub_1A56DDBF8(a1);
}

uint64_t OUTLINED_FUNCTION_15_23()
{
  return 0x42414C2D4D472D58;
}

uint64_t OUTLINED_FUNCTION_16_18()
{
  return sub_1A56DDBE8((uint64_t)&STACK[0x250]);
}

uint64_t OUTLINED_FUNCTION_19_18()
{
  return 0x532E5952414E4942;
}

uint64_t OUTLINED_FUNCTION_22_19()
{
  return 0x5255544355525453;
}

uint64_t OUTLINED_FUNCTION_23_15()
{
  return 0x45504F4C45564E45;
}

void OUTLINED_FUNCTION_24_13()
{
  sub_1A5693F48();
}

uint64_t OUTLINED_FUNCTION_25_13()
{
  return sub_1A56DDBE8((uint64_t)&STACK[0x3A8]);
}

uint64_t OUTLINED_FUNCTION_26_10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t)@<X8>, __n128 a10@<Q0>, __n128 a11@<Q1>, __n128 a12@<Q2>)
{
  return a9(a1, a2, a3, a4, a5, a6, a7, a8, a10.n128_u64[0], a10.n128_u64[1], a11.n128_u64[0], a11.n128_u64[1], a12.n128_u64[0], a12.n128_u64[1]);
}

uint64_t OUTLINED_FUNCTION_28_11()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t OUTLINED_FUNCTION_31_12()
{
  return sub_1A56DDBE8((uint64_t)&STACK[0x508]);
}

uint64_t OUTLINED_FUNCTION_32_12()
{
  return sub_1A56DDBE8((uint64_t)&STACK[0x5C0]);
}

__n128 OUTLINED_FUNCTION_33_9(uint64_t a1)
{
  uint64_t v1;

  nullsub_1(a1);
  return *(__n128 *)v1;
}

void *OUTLINED_FUNCTION_34_12(uint64_t a1, void *a2)
{
  void *v2;

  return sub_1A56DDB8C(v2, a2);
}

void OUTLINED_FUNCTION_36_11(__n128 *a1)
{
  sub_1A56DDBF8(a1);
}

void *OUTLINED_FUNCTION_37_12(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xB2uLL);
}

uint64_t OUTLINED_FUNCTION_38_9()
{
  return 0x57454956455250;
}

void *OUTLINED_FUNCTION_40_9(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  return sub_1A55DC3E0(&a32, &a9);
}

uint64_t OUTLINED_FUNCTION_41_7()
{
  return 0x205347414C46;
}

uint64_t OUTLINED_FUNCTION_42_6(uint64_t a1)
{
  return sub_1A56DDBE8(a1);
}

uint64_t OUTLINED_FUNCTION_43_6(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t OUTLINED_FUNCTION_44_5()
{
  return 4999502;
}

uint64_t OUTLINED_FUNCTION_45_7()
{
  return sub_1A594B5F8();
}

void OUTLINED_FUNCTION_50_4()
{
  __n128 *v0;

  sub_1A56DE320(v0);
}

void OUTLINED_FUNCTION_55_5()
{
  __n128 *v0;

  sub_1A56DDBF8(v0);
}

void MessageData.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X10 }
}

void sub_1A56DE5E8()
{
  sub_1A594CE88();
  sub_1A594CEAC();
  OUTLINED_FUNCTION_2_6();
}

void sub_1A56DE6A8()
{
  sub_1A594CE88();
  OUTLINED_FUNCTION_2_6();
  sub_1A569726C();
}

uint64_t static MessageData.__derived_enum_equals(_:_:)(uint64_t a1, unint64_t a2)
{
  return ((uint64_t (*)(void))((char *)sub_1A56DE704 + 4 * byte_1A59B2CC4[(a2 >> 37) & 7]))();
}

BOOL sub_1A56DE704@<W0>(int a1@<W0>, int a2@<W2>, unint64_t a3@<X8>)
{
  return !(a3 >> 37) && a2 == a1;
}

void sub_1A56DE720(int32x2_t *a1@<X0>, uint64_t a2@<X1>, int32x2_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  if ((a5 & 0xE000000000) == 0x4000000000)
    sub_1A56B614C(a1, a2 & 0x1FFFFFFFFFLL, a3, a4 & 0x1FFFFFFFFFLL);
}

void MessageData.hashValue.getter(uint64_t a1, uint64_t a2)
{
  sub_1A594CE64();
  __asm { BR              X10 }
}

uint64_t sub_1A56DE7CC()
{
  sub_1A594CE88();
  sub_1A594CEAC();
  return sub_1A594CED0();
}

void sub_1A56DE8E0()
{
  uint64_t v0;

  MessageData.hashValue.getter(*(_QWORD *)v0, *(unsigned int *)(v0 + 8) | ((unint64_t)*(unsigned __int8 *)(v0 + 12) << 32));
}

void sub_1A56DE8F4(uint64_t a1)
{
  uint64_t v1;

  MessageData.hash(into:)(a1, *(_QWORD *)v1, *(unsigned int *)(v1 + 8) | ((unint64_t)*(unsigned __int8 *)(v1 + 12) << 32));
}

void sub_1A56DE908()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 12);
  sub_1A594CE64();
  __asm { BR              X10 }
}

uint64_t sub_1A56DE958()
{
  sub_1A594CE88();
  sub_1A594CEAC();
  return sub_1A594CED0();
}

uint64_t sub_1A56DEA78(uint64_t a1)
{
  return static MessageData.__derived_enum_equals(_:_:)(*(_QWORD *)a1, *(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned __int8 *)(a1 + 12) << 32));
}

void sub_1A56DEAA4(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

void sub_1A56DEAE8()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  Swift::Int v4;
  uint64_t v5;
  unint64_t v6;
  Swift::Int v7;
  char v8;
  Swift::String v9;
  int v10;
  BOOL v11;
  int v12;

  sub_1A5703008(v1);
  v3 = v2;
  v4 = *(unsigned int *)(v0 + 20);
  v5 = OUTLINED_FUNCTION_5_29();
  sub_1A56814E0(v5, v6, v0 + 8, v4);
  if ((v8 & 1) != 0)
  {
    v9._countAndFlagsBits = OUTLINED_FUNCTION_5_29();
    v7 = ByteBuffer._setStringSlowpath(_:at:)(v9, v4);
  }
  v10 = *(_DWORD *)(v0 + 20);
  v11 = __CFADD__(v10, (_DWORD)v7);
  v12 = v10 + v7;
  if (v11)
  {
    __break(1u);
    JUMPOUT(0x1A56DECECLL);
  }
  *(_DWORD *)(v0 + 20) = v12;
  if (__OFADD__(v3, v7))
  {
    __break(1u);
    JUMPOUT(0x1A56DEB40);
  }
  OUTLINED_FUNCTION_2_6();
}

unint64_t sub_1A56DED18()
{
  unint64_t result;

  result = qword_1EE7A9AE8;
  if (!qword_1EE7A9AE8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for MessageData, &type metadata for MessageData);
    atomic_store(result, (unint64_t *)&qword_1EE7A9AE8);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for MessageData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)a2;
  v4 = *(unsigned __int8 *)(a2 + 12);
  v5 = *(unsigned int *)(a2 + 8);
  sub_1A56DEDA0(*(_QWORD *)a2, v5 | (v4 << 32));
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v5;
  return a1;
}

uint64_t sub_1A56DEDA0(uint64_t result, unint64_t a2)
{
  switch((a2 >> 37) & 7)
  {
    case 1uLL:
    case 2uLL:
      result = sub_1A54E4334(result, a2, BYTE4(a2) & 0x1F);
      break;
    case 3uLL:
    case 4uLL:
      result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t destroy for MessageData(uint64_t a1)
{
  return sub_1A56DEDF0(*(_QWORD *)a1, *(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned __int8 *)(a1 + 12) << 32));
}

{
  unsigned int v2;
  unsigned int v3;

  v2 = *(unsigned __int8 *)(a1 + 192);
  if (v2 <= 0xFD)
    sub_1A55241F0(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), *(_QWORD *)(a1 + 160),
      *(_QWORD *)(a1 + 168),
      *(_QWORD *)(a1 + 176),
      *(_QWORD *)(a1 + 184),
      v2 & 1);
  swift_bridgeObjectRelease();
  v3 = *(unsigned __int8 *)(a1 + 384);
  if (v3 <= 0xFD)
    sub_1A55241F0(*(_QWORD *)(a1 + 208), *(_QWORD *)(a1 + 216), *(_QWORD *)(a1 + 224), *(_QWORD *)(a1 + 232), *(_QWORD *)(a1 + 240), *(_QWORD *)(a1 + 248), *(_QWORD *)(a1 + 256), *(_QWORD *)(a1 + 264), *(_QWORD *)(a1 + 272), *(_QWORD *)(a1 + 280), *(_QWORD *)(a1 + 288), *(_QWORD *)(a1 + 296), *(_QWORD *)(a1 + 304), *(_QWORD *)(a1 + 312), *(_QWORD *)(a1 + 320), *(_QWORD *)(a1 + 328), *(_QWORD *)(a1 + 336), *(_QWORD *)(a1 + 344), *(_QWORD *)(a1 + 352),
      *(_QWORD *)(a1 + 360),
      *(_QWORD *)(a1 + 368),
      *(_QWORD *)(a1 + 376),
      v3 & 1);
  if (*(_QWORD *)(a1 + 432))
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A56DEDF0(uint64_t result, unint64_t a2)
{
  switch((a2 >> 37) & 7)
  {
    case 1uLL:
    case 2uLL:
      result = sub_1A54E3458(result, a2, BYTE4(a2) & 0x1F);
      break;
    case 3uLL:
    case 4uLL:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t assignWithCopy for MessageData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = *(_QWORD *)a2;
  v4 = *(unsigned __int8 *)(a2 + 12);
  v5 = *(unsigned int *)(a2 + 8);
  sub_1A56DEDA0(*(_QWORD *)a2, v5 | (v4 << 32));
  v6 = *(_QWORD *)a1;
  v7 = *(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned __int8 *)(a1 + 12) << 32);
  *(_QWORD *)a1 = v3;
  *(_DWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 12) = v4;
  sub_1A56DEDF0(v6, v7);
  return a1;
}

uint64_t assignWithTake for MessageData(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 12);
  v5 = *((_DWORD *)a2 + 2);
  v6 = a1 + 8;
  v7 = *(unsigned int *)(a1 + 8);
  v8 = *(_QWORD *)a1;
  v9 = v7 | ((unint64_t)*(unsigned __int8 *)(v6 + 4) << 32);
  *(_QWORD *)a1 = v3;
  *(_DWORD *)v6 = v5;
  *(_BYTE *)(v6 + 4) = v4;
  sub_1A56DEDF0(v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for MessageData(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x3C && *(_BYTE *)(a1 + 13))
    {
      v2 = *(_DWORD *)a1 + 59;
    }
    else
    {
      v2 = ((*(unsigned __int8 *)(a1 + 12) >> 5) & 0xFFFFFFC7 | (8 * ((*(unsigned __int8 *)(a1 + 12) >> 2) & 7))) ^ 0x3F;
      if (v2 >= 0x3B)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for MessageData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3B)
  {
    *(_BYTE *)(result + 12) = 0;
    *(_DWORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 60;
    if (a3 >= 0x3C)
      *(_BYTE *)(result + 13) = 1;
  }
  else
  {
    if (a3 >= 0x3C)
      *(_BYTE *)(result + 13) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_DWORD *)(result + 8) = 0;
      *(_BYTE *)(result + 12) = 4 * (((-a2 >> 3) & 7) - 8 * a2);
    }
  }
  return result;
}

uint64_t sub_1A56DEF84(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 12) >> 5;
}

uint64_t sub_1A56DEF90(uint64_t a1)
{
  uint64_t result;
  unsigned int v2;
  unint64_t v3;

  v2 = *(_DWORD *)(a1 + 8);
  result = a1 + 8;
  v3 = v2 | ((unint64_t)*(unsigned __int8 *)(result + 4) << 32);
  *(_DWORD *)result = v2;
  *(_BYTE *)(result + 4) = BYTE4(v3) & 0x1F;
  return result;
}

uint64_t sub_1A56DEFAC(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unsigned int v3;
  unint64_t v4;

  v3 = *(_DWORD *)(a1 + 8);
  result = a1 + 8;
  v4 = (v3 | ((unint64_t)*(unsigned __int8 *)(result + 4) << 32)) & 0x3FFFFFFFFLL | (a2 << 37);
  *(_DWORD *)result = v3;
  *(_BYTE *)(result + 4) = BYTE4(v4);
  return result;
}

ValueMetadata *type metadata accessor for MessageData()
{
  return &type metadata for MessageData;
}

{
  return &type metadata for MessageData;
}

void OUTLINED_FUNCTION_0_74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1A57087E0(v2, a2, 0, 0xE000000000000000, 44, 0xE100000000000000, 0, 0xE000000000000000, 0);
}

void OUTLINED_FUNCTION_1_53(uint64_t a1, unint64_t a2, uint64_t a3)
{
  Swift::UInt32 v3;

  sub_1A56814E0(a1, a2, a3, v3);
}

uint64_t OUTLINED_FUNCTION_3_38()
{
  return 0x44454853494E4156;
}

uint64_t OUTLINED_FUNCTION_4_31()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_5_29()
{
  return 0x45474E5550584520;
}

uint64_t OUTLINED_FUNCTION_7_24()
{
  return 0x48435445464C5255;
}

Swift::Int OUTLINED_FUNCTION_8_25(uint64_t a1, uint64_t a2)
{
  Swift::Int v2;

  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v2);
}

uint64_t OUTLINED_FUNCTION_10_24@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v1 + 20) = a1;
  return sub_1A54E4334(v2, v3, BYTE4(v3) & 0x1F);
}

uint64_t MessageID.hash(into:)()
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_2_22();
  return swift_bridgeObjectRelease();
}

uint64_t static MessageID.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4)
    return 1;
  else
    return sub_1A594CD38();
}

uint64_t MessageID.hashValue.getter()
{
  sub_1A594CE64();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_2_22();
  swift_bridgeObjectRelease();
  return sub_1A594CED0();
}

uint64_t sub_1A56DF16C()
{
  return MessageID.hashValue.getter();
}

uint64_t sub_1A56DF174()
{
  return MessageID.hash(into:)();
}

uint64_t sub_1A56DF17C(uint64_t *a1, uint64_t *a2)
{
  return static MessageID.__derived_struct_equals(_:_:)(*a1, a1[1], *a2, a2[1]);
}

unint64_t sub_1A56DF19C()
{
  unint64_t result;

  result = qword_1EE7A9AF0;
  if (!qword_1EE7A9AF0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for MessageID, &type metadata for MessageID);
    atomic_store(result, (unint64_t *)&qword_1EE7A9AF0);
  }
  return result;
}

unint64_t sub_1A56DF1DC()
{
  unint64_t result;

  result = qword_1EE7A9AF8;
  if (!qword_1EE7A9AF8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for MessageID, &type metadata for MessageID);
    atomic_store(result, (unint64_t *)&qword_1EE7A9AF8);
  }
  return result;
}

uint64_t sub_1A56DF218@<X0>(Swift::String *a1@<X0>, NIOIMAPCore2::MessageID *a2@<X8>)
{
  uint64_t result;
  NIOIMAPCore2::MessageID v4;

  v4 = MessageID.init(stringLiteral:)(*a1);
  result = v4.rawValue._countAndFlagsBits;
  *a2 = v4;
  return result;
}

unint64_t sub_1A56DF248()
{
  unint64_t result;

  result = qword_1EE7A9B00;
  if (!qword_1EE7A9B00)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for MessageID, &type metadata for MessageID);
    atomic_store(result, (unint64_t *)&qword_1EE7A9B00);
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageID()
{
  return &type metadata for MessageID;
}

uint64_t MessagePath.mailboxReference.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

void MessagePath.mailboxReference.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  swift_bridgeObjectRelease();
  *(_QWORD *)v3 = a1;
  *(_QWORD *)(v3 + 8) = a2;
  *(_DWORD *)(v3 + 16) = a3;
  *(_BYTE *)(v3 + 20) = BYTE4(a3) & 1;
  OUTLINED_FUNCTION_8_1();
}

double (*MessagePath.mailboxReference.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t MessagePath.iUID.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 24);
}

uint64_t MessagePath.iUID.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 24) = result;
  return result;
}

double (*MessagePath.iUID.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t MessagePath.section.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

void MessagePath.section.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  OUTLINED_FUNCTION_8_1();
}

double (*MessagePath.section.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t MessagePath.range.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t MessagePath.range.setter(uint64_t result, uint64_t a2, __int16 a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 48) = result;
  *(_QWORD *)(v3 + 56) = a2;
  *(_BYTE *)(v3 + 64) = a3;
  *(_BYTE *)(v3 + 65) = HIBYTE(a3) & 1;
  return result;
}

double (*MessagePath.range.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t MessagePath.init(mailboxReference:iUID:section:range:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10, char a11)
{
  *(_QWORD *)a9 = result;
  *(_QWORD *)(a9 + 8) = a2;
  *(_DWORD *)(a9 + 16) = a3;
  *(_BYTE *)(a9 + 20) = BYTE4(a3) & 1;
  *(_DWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_BYTE *)(a9 + 64) = a10;
  *(_BYTE *)(a9 + 65) = a11 & 1;
  return result;
}

uint64_t MessagePath.hash(into:)()
{
  uint64_t v0;
  char v1;
  _BYTE v3[21];

  *(_OWORD *)v3 = *(_OWORD *)v0;
  *(_QWORD *)&v3[13] = *(_QWORD *)(v0 + 13);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  if (v3[20] == 1)
  {
    OUTLINED_FUNCTION_35_3();
  }
  else
  {
    OUTLINED_FUNCTION_30_2();
    sub_1A594CEAC();
  }
  sub_1A5503278((uint64_t)v3);
  sub_1A594CEAC();
  if (*(_QWORD *)(v0 + 40))
  {
    OUTLINED_FUNCTION_30_2();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594B1D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_35_3();
  }
  if (*(_BYTE *)(v0 + 65) == 1)
    return OUTLINED_FUNCTION_35_3();
  v1 = *(_BYTE *)(v0 + 64);
  OUTLINED_FUNCTION_30_2();
  sub_1A594CE88();
  if ((v1 & 1) != 0)
    return OUTLINED_FUNCTION_35_3();
  OUTLINED_FUNCTION_30_2();
  return sub_1A594CE88();
}

uint64_t static MessagePath.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  int v4;
  char v5;
  int v6;
  char v7;
  char v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  char v14;

  v4 = *(_DWORD *)(a1 + 16);
  v5 = *(_BYTE *)(a1 + 20);
  v6 = *(_DWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 20);
  if (*(_QWORD *)a1 != *(_QWORD *)a2 || *(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8))
  {
    v9 = sub_1A594CD38();
    result = 0;
    if ((v9 & 1) == 0)
      return result;
  }
  if ((v5 & 1) != 0)
  {
    if ((v7 & 1) == 0)
      return 0;
  }
  else
  {
    result = 0;
    if ((v7 & 1) != 0 || v4 != v6)
      return result;
  }
  if (*(_DWORD *)(a2 + 24) != *(_DWORD *)(a1 + 24))
    return 0;
  v11 = *(_QWORD *)(a1 + 40);
  v12 = *(_QWORD *)(a2 + 40);
  if (!v11)
  {
    if (!v12)
      goto LABEL_21;
    return 0;
  }
  if (!v12)
    return 0;
  v13 = *(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && v11 == v12;
  if (v13 || (v14 = sub_1A594CD38(), result = 0, (v14 & 1) != 0))
  {
LABEL_21:
    if ((*(_BYTE *)(a1 + 65) & 1) != 0)
    {
      if ((*(_BYTE *)(a2 + 65) & 1) == 0)
        return 0;
    }
    else if ((*(_BYTE *)(a2 + 65) & 1) != 0
           || (static MessagePath.ByteRange.__derived_struct_equals(_:_:)(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64) & 1, *(_QWORD *)(a2 + 48), *(_QWORD *)(a2 + 56), *(_BYTE *)(a2 + 64) & 1) & 1) == 0)
    {
      return 0;
    }
    return 1;
  }
  return result;
}

uint64_t MessagePath.hashValue.getter()
{
  sub_1A594CE64();
  MessagePath.hash(into:)();
  return sub_1A594CED0();
}

uint64_t sub_1A56DF690()
{
  sub_1A594CE64();
  MessagePath.hash(into:)();
  return sub_1A594CED0();
}

void sub_1A56DF6CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::String v4;
  Swift::Int v5;
  Swift::Int v6;
  Swift::Int v7;
  char v8;
  char v9;
  int v10;
  Swift::Int v11;
  Swift::Int v12;
  uint64_t v13;
  unint64_t v14;
  Swift::Int v15;
  char v16;
  Swift::Int v17;
  int v18;
  BOOL v19;
  int v20;
  uint64_t v21;
  Swift::Int v22;
  uint64_t v23;
  Swift::Int v24;
  Swift::Int v25;
  Swift::Int v26;
  Swift::Int v27;
  char v28;
  char v29;
  int v30;
  Swift::Int v31;
  Swift::Int v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  unint64_t v37;
  Swift::Int v38;
  char v39;
  Swift::Int v40;
  int v41;
  int v42;
  uint64_t v43;
  Swift::Int v44;
  _BYTE v45[21];
  Swift::String v46;
  Swift::String v47;
  Swift::String v48;

  v2 = v1;
  *(_OWORD *)v45 = *(_OWORD *)a1;
  *(_QWORD *)&v45[13] = *(_QWORD *)(a1 + 13);
  v4 = *(Swift::String *)v45;
  v5 = *(unsigned int *)(v1 + 20);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A56814E0(*(uint64_t *)v45, *(unint64_t *)&v45[8], v1 + 8, v5);
  v7 = v6;
  v9 = v8;
  sub_1A5503278((uint64_t)v45);
  if ((v9 & 1) != 0)
    v7 = OUTLINED_FUNCTION_88(v4, v5);
  v10 = *(_DWORD *)(v1 + 20);
  v11 = (v10 + v7);
  if (__CFADD__(v10, (_DWORD)v7))
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  *(_DWORD *)(v2 + 20) = v11;
  if ((v45[20] & 1) != 0)
  {
    v12 = 0;
  }
  else
  {
    v13 = OUTLINED_FUNCTION_0_51();
    OUTLINED_FUNCTION_5_30(v13, v14);
    if ((v16 & 1) != 0)
    {
      v46._countAndFlagsBits = OUTLINED_FUNCTION_0_51();
      v15 = OUTLINED_FUNCTION_88(v46, v11);
    }
    v17 = v15;
    v18 = *(_DWORD *)(v2 + 20);
    v19 = __CFADD__(v18, (_DWORD)v15);
    v20 = v18 + v15;
    if (v19)
      goto LABEL_34;
    *(_DWORD *)(v2 + 20) = v20;
    v21 = sub_1A570EB8C();
    v12 = v17 + v21;
    if (__OFADD__(v17, v21))
    {
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
  }
  v22 = v7 + v12;
  if (__OFADD__(v7, v12))
    goto LABEL_29;
  v23 = sub_1A5705744();
  v24 = v22 + v23;
  if (__OFADD__(v22, v23))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v25 = *(unsigned int *)(v2 + 20);
  if (*(_QWORD *)(a1 + 40))
  {
    v44 = v22 + v23;
    swift_bridgeObjectRetain_n();
    swift_retain();
    swift_retain();
    sub_1A594B5F8();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A56814E0(0x4F49544345533B2FLL, 0xEA00000000003D4ELL, v2 + 8, v25);
    v27 = v26;
    v29 = v28;
    swift_bridgeObjectRelease();
    if ((v29 & 1) != 0)
    {
      v47._countAndFlagsBits = 0x4F49544345533B2FLL;
      v47._object = (void *)0xEA00000000003D4ELL;
      v27 = OUTLINED_FUNCTION_88(v47, v25);
    }
    swift_release();
    swift_release();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v30 = *(_DWORD *)(v2 + 20);
    LODWORD(v25) = v30 + v27;
    if (__CFADD__(v30, (_DWORD)v27))
      goto LABEL_33;
    *(_DWORD *)(v2 + 20) = v25;
    v24 = v44;
  }
  else
  {
    v27 = 0;
  }
  v31 = v24 + v27;
  if (__OFADD__(v24, v27))
    goto LABEL_31;
  if ((*(_BYTE *)(a1 + 65) & 1) != 0)
  {
    v32 = 0;
  }
  else
  {
    v33 = *(_QWORD *)(a1 + 48);
    v34 = *(_QWORD *)(a1 + 56);
    v35 = *(_BYTE *)(a1 + 64);
    v36 = OUTLINED_FUNCTION_1_54();
    OUTLINED_FUNCTION_5_30(v36, v37);
    if ((v39 & 1) != 0)
    {
      v48._countAndFlagsBits = OUTLINED_FUNCTION_1_54();
      v38 = OUTLINED_FUNCTION_88(v48, v25);
    }
    v40 = v38;
    v41 = *(_DWORD *)(v2 + 20);
    v19 = __CFADD__(v41, (_DWORD)v38);
    v42 = v41 + v38;
    if (v19)
      goto LABEL_36;
    *(_DWORD *)(v2 + 20) = v42;
    v43 = sub_1A56AB054(v33, v34, v35 & 1);
    v32 = v40 + v43;
    if (__OFADD__(v40, v43))
    {
LABEL_37:
      __break(1u);
      return;
    }
  }
  if (__OFADD__(v31, v32))
    goto LABEL_32;
}

unint64_t sub_1A56DF9A0()
{
  unint64_t result;

  result = qword_1EE7A9B08;
  if (!qword_1EE7A9B08)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for MessagePath, &type metadata for MessagePath);
    atomic_store(result, (unint64_t *)&qword_1EE7A9B08);
  }
  return result;
}

uint64_t destroy for MessagePath()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MessagePath(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for MessagePath(uint64_t a1, uint64_t a2)
{
  int v4;
  __int128 v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_DWORD *)(a1 + 16) = v4;
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v5 = *(_OWORD *)(a2 + 48);
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = v5;
  return a1;
}

void *__swift_memcpy66_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x42uLL);
}

uint64_t assignWithTake for MessagePath(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for MessagePath(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 66))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MessagePath(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 66) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 66) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MessagePath()
{
  return &type metadata for MessagePath;
}

uint64_t OUTLINED_FUNCTION_1_54()
{
  return 0x4149545241503B2FLL;
}

void OUTLINED_FUNCTION_5_30(uint64_t a1, unint64_t a2)
{
  Swift::UInt32 v2;
  uint64_t v3;

  sub_1A56814E0(a1, a2, v3, v2);
}

void String.init(_:)(uint64_t a1, uint64_t a2)
{
  if (HIDWORD(a2) < a2)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_176();
    sub_1A594B538();
    swift_release();
  }
}

uint64_t MetadataEntryName.hash(into:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unsigned int v3;
  unint64_t v4;
  uint64_t result;

  v3 = a3;
  v4 = HIDWORD(a3);
  result = OUTLINED_FUNCTION_176();
  if (v4 >= v3)
    return sub_1A594CE70();
  __break(1u);
  return result;
}

uint64_t static MetadataEntryName.__derived_struct_equals(_:_:)(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  BOOL v6;

  if (HIDWORD(a2) < a2)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (HIDWORD(a5) < a5)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  result = HIDWORD(a2) - (_DWORD)a2 == HIDWORD(a5) - (_DWORD)a5
        && ((a3 & 0xFFFFFFFFFFFFFFLL) == (a6 & 0xFFFFFFFFFFFFFFLL) ? (v6 = result == a4) : (v6 = 0),
            v6 || (swift_retain(), (sub_1A566B918() & 1) != 0));
  return result;
}

uint64_t MetadataEntryName.hashValue.getter(uint64_t a1, unint64_t a2)
{
  unsigned int v2;
  unint64_t v3;
  uint64_t result;

  v2 = a2;
  v3 = HIDWORD(a2);
  sub_1A594CE64();
  result = OUTLINED_FUNCTION_176();
  if (v3 < v2)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_35_1();
    return sub_1A594CED0();
  }
  return result;
}

uint64_t sub_1A56DFE84()
{
  uint64_t v0;

  return MetadataEntryName.hashValue.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
}

uint64_t sub_1A56DFEA0(uint64_t a1)
{
  uint64_t v1;

  return MetadataEntryName.hash(into:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8));
}

uint64_t sub_1A56DFEBC(uint64_t a1, uint64_t a2)
{
  return static MetadataEntryName.__derived_struct_equals(_:_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned __int16 *)(a1 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 22) << 48), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(unsigned int *)(a2 + 16) | ((unint64_t)*(unsigned __int16 *)(a2 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a2 + 22) << 48));
}

uint64_t _s12NIOIMAPCore217MetadataEntryNameVyACSScfC_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = ByteBufferAllocator.buffer(string:)(a1, a2, j_j__malloc, j_j__realloc, j_j__free, sub_1A566C0C4);
  swift_bridgeObjectRelease();
  return v2;
}

unint64_t sub_1A56DFF68()
{
  unint64_t result;

  result = qword_1EE7A9B10;
  if (!qword_1EE7A9B10)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for MetadataEntryName, &type metadata for MetadataEntryName);
    atomic_store(result, (unint64_t *)&qword_1EE7A9B10);
  }
  return result;
}

unint64_t sub_1A56DFFA8()
{
  unint64_t result;

  result = qword_1EE7A9B18;
  if (!qword_1EE7A9B18)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for MetadataEntryName, &type metadata for MetadataEntryName);
    atomic_store(result, (unint64_t *)&qword_1EE7A9B18);
  }
  return result;
}

unint64_t sub_1A56DFFEC()
{
  unint64_t result;

  result = qword_1EE7A9B20;
  if (!qword_1EE7A9B20)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for MetadataEntryName, &type metadata for MetadataEntryName);
    atomic_store(result, (unint64_t *)&qword_1EE7A9B20);
  }
  return result;
}

uint64_t sub_1A56E0028@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  int v4;
  int v5;
  int v6;
  __int16 v7;
  char v8;

  result = MetadataEntryName.init(stringLiteral:)(*a1, a1[1]);
  *(_QWORD *)a2 = result;
  *(_DWORD *)(a2 + 8) = v4;
  *(_DWORD *)(a2 + 12) = v5;
  *(_DWORD *)(a2 + 16) = v6;
  *(_WORD *)(a2 + 20) = v7;
  *(_BYTE *)(a2 + 22) = v8;
  return result;
}

ValueMetadata *type metadata accessor for MetadataEntryName()
{
  return &type metadata for MetadataEntryName;
}

void MetadataOption.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (!BYTE6(a5))
  {
    OUTLINED_FUNCTION_2_21();
    sub_1A594CE88();
    return;
  }
  if (BYTE6(a5) == 1)
  {
    OUTLINED_FUNCTION_3_19();
    sub_1A594B1D8();
    swift_bridgeObjectRelease();
    return;
  }
  sub_1A594CE88();
  sub_1A594B1D8();
  if (BYTE5(a5) == 255)
  {
    sub_1A594CE94();
    return;
  }
  sub_1A594CE94();
  if ((a5 & 0x10000000000) != 0)
  {
    OUTLINED_FUNCTION_3_19();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    OUTLINED_FUNCTION_126_1();
    sub_1A569428C();
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_2_21();
  if ((~a5 & 0xFF00000000) == 0)
  {
    OUTLINED_FUNCTION_3_19();
LABEL_11:
    sub_1A56667BC(a4, a5);
    return;
  }
  OUTLINED_FUNCTION_2_21();
  v7 = OUTLINED_FUNCTION_126_1();
  sub_1A56B6298(v7, v8, v9);
}

BOOL static MetadataOption.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, int32x2_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, int32x2_t *a7, uint64_t a8)
{
  int v8;
  uint64_t v9;
  unint64_t v10;
  BOOL v17;
  uint64_t v18;
  unint64_t v19;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;

  if (BYTE6(a4))
  {
    if (BYTE6(a4) == 1)
    {
      if (BYTE6(a8) == 1)
      {
        v8 = a1;
        if ((_BYTE)a1)
        {
          if (a1 == 1)
            v9 = 49;
          else
            v9 = 0x7974696E69666E69;
          if (v8 == 1)
            v10 = 0xE100000000000000;
          else
            v10 = 0xE800000000000000;
        }
        else
        {
          v10 = 0xE100000000000000;
          v9 = 48;
        }
        if ((_BYTE)a5)
        {
          if (a5 == 1)
            v18 = 49;
          else
            v18 = 0x7974696E69666E69;
          if (a5 == 1)
            v19 = 0xE100000000000000;
          else
            v19 = 0xE800000000000000;
        }
        else
        {
          v19 = 0xE100000000000000;
          v18 = 48;
        }
        if (v9 != v18 || v10 != v19)
        {
          v21 = sub_1A594CD38();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v21 & 1;
        }
        swift_bridgeObjectRelease_n();
        return 1;
      }
      return 0;
    }
    if (BYTE6(a8) != 2)
      return 0;
    v17 = a1 == a5 && a2 == a6;
    if (!v17 && (sub_1A594CD38() & 1) == 0)
      return 0;
    if (BYTE5(a4) == 255)
    {
      if (BYTE5(a8) != 255)
        return 0;
    }
    else
    {
      if (BYTE5(a8) == 255)
        return 0;
      if ((a4 & 0x10000000000) != 0)
      {
        if ((a8 & 0x10000000000) == 0)
          return 0;
        sub_1A5689E98();
        if ((v23 & 1) == 0)
          return 0;
      }
      else
      {
        if ((a8 & 0x10000000000) != 0)
          return 0;
        v22 = a8 & 0xFF00000000;
        if ((~a4 & 0xFF00000000) != 0)
        {
          if (v22 == 0xFF00000000)
            return 0;
          v24 = OUTLINED_FUNCTION_126_1();
          sub_1A566676C(v24, v25);
          sub_1A566676C((uint64_t)a3, a4);
          sub_1A56B614C(a3, a4 & 0xFFFFFFFFFFLL, a7, a8 & 0xFFFFFFFFFFLL);
          v27 = v26;
          v28 = OUTLINED_FUNCTION_126_1();
          sub_1A56667BC(v28, v29);
          sub_1A56667BC((uint64_t)a3, a4);
          if ((v27 & 1) == 0)
            return 0;
        }
        else if (v22 != 0xFF00000000)
        {
          return 0;
        }
      }
    }
    return 1;
  }
  return !BYTE6(a8) && a1 == a5;
}

uint64_t MetadataOption.hashValue.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _BYTE v9[72];

  sub_1A594CE64();
  MetadataOption.hash(into:)((uint64_t)v9, a1, a2, a3, a4 & 0xFFFFFFFFFFFFFFLL);
  return sub_1A594CED0();
}

uint64_t sub_1A56E044C()
{
  uint64_t v0;

  return MetadataOption.hashValue.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(unsigned int *)(v0 + 24) | ((unint64_t)*(unsigned __int16 *)(v0 + 28) << 32) | ((unint64_t)*(unsigned __int8 *)(v0 + 30) << 48));
}

void sub_1A56E046C(uint64_t a1)
{
  uint64_t v1;

  MetadataOption.hash(into:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(unsigned int *)(v1 + 24) | ((unint64_t)*(unsigned __int16 *)(v1 + 28) << 32) | ((unint64_t)*(unsigned __int8 *)(v1 + 30) << 48));
}

uint64_t sub_1A56E048C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _BYTE v7[72];

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(unsigned int *)(v0 + 24) | ((unint64_t)*(unsigned __int16 *)(v0 + 28) << 32);
  v5 = *(unsigned __int8 *)(v0 + 30);
  sub_1A594CE64();
  MetadataOption.hash(into:)((uint64_t)v7, v1, v2, v3, v4 | (v5 << 48));
  return sub_1A594CED0();
}

BOOL sub_1A56E04FC(uint64_t a1, uint64_t a2)
{
  return static MetadataOption.__derived_enum_equals(_:_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(int32x2_t **)(a1 + 16), *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int16 *)(a1 + 28) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 30) << 48), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(int32x2_t **)(a2 + 16), *(unsigned int *)(a2 + 24) | ((unint64_t)*(unsigned __int16 *)(a2 + 28) << 32) | ((unint64_t)*(unsigned __int8 *)(a2 + 30) << 48));
}

unint64_t sub_1A56E0544()
{
  unint64_t result;

  result = qword_1EE7A9B28;
  if (!qword_1EE7A9B28)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for MetadataOption, &type metadata for MetadataOption);
    atomic_store(result, (unint64_t *)&qword_1EE7A9B28);
  }
  return result;
}

ValueMetadata *type metadata accessor for MetadataOption()
{
  return &type metadata for MetadataOption;
}

uint64_t MetadataResponse.hash(into:)(uint64_t a1)
{
  __int128 *v1;
  __int128 *v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;

  v2 = v1;
  sub_1A56E06B0(v2, (uint64_t)&v10);
  if (v11 < 0)
  {
    v11 &= ~0x8000000000000000;
    v5 = v10;
    sub_1A594CE88();
    v6 = *(_QWORD *)(v5 + 16);
    sub_1A594CE88();
    if (v6)
    {
      for (i = v5 + 54; ; i += 24)
      {
        v8 = *(_DWORD *)(i - 14);
        v9 = *(_DWORD *)(i - 10);
        result = OUTLINED_FUNCTION_176();
        if (v9 < v8)
          break;
        sub_1A594CE70();
        if (!--v6)
          return sub_1A594CE88();
      }
      __break(1u);
    }
    else
    {
      return sub_1A594CE88();
    }
  }
  else
  {
    sub_1A594CE88();
    OUTLINED_FUNCTION_11_1();
    OUTLINED_FUNCTION_0_10();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_3_39(a1);
    sub_1A594CE88();
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_4_4();
    return OUTLINED_FUNCTION_36();
  }
  return result;
}

uint64_t sub_1A56E06B0(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_DWORD *)(a2 + 32) = *((_DWORD *)a1 + 8);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t static MetadataResponse.__derived_enum_equals(_:_:)(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;

  v1 = sub_1A56E06B0(a1, (uint64_t)v21);
  v9 = v22;
  if (v22 < 0)
  {
    v22 &= ~0x8000000000000000;
    v15 = v21[1];
    OUTLINED_FUNCTION_8_26(v1, v2, v3, v4, v5, v6, v7, v8, v18);
    if (v19 < 0)
    {
      sub_1A568AC8C();
      if ((v16 & 1) != 0
        && (v9 | ((unint64_t)v9 << 32)) == (v19 | ((unint64_t)v19 << 32))
        && (sub_1A568A0E0(v15) & 1) != 0)
      {
        v14 = 1;
        return v14 & 1;
      }
    }
LABEL_13:
    v14 = 0;
    return v14 & 1;
  }
  v10 = v23;
  v11 = v24;
  OUTLINED_FUNCTION_8_26(v1, v2, v3, v4, v5, v6, v7, v8, v18);
  if (v19 < 0)
    goto LABEL_13;
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_11_1();
  swift_retain();
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_17_0();
  sub_1A5690DA8();
  if ((v12 & 1) == 0 || (sub_1A56916D0(), (v13 & 1) == 0))
  {
    OUTLINED_FUNCTION_48();
    OUTLINED_FUNCTION_2_4();
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_4_4();
    swift_release();
    OUTLINED_FUNCTION_36();
    goto LABEL_13;
  }
  if ((v11 | (v11 << 32)) == (v20 | ((unint64_t)v20 << 32)))
    v14 = sub_1A568A0E0(v10);
  else
    v14 = 0;
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_2_4();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_4_4();
  swift_release();
  OUTLINED_FUNCTION_36();
  return v14 & 1;
}

uint64_t MetadataResponse.hashValue.getter()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;
  uint64_t result;
  _BYTE v7[72];
  uint64_t v8;
  uint64_t v9;

  sub_1A594CE64();
  sub_1A56E06B0(v0, (uint64_t)&v8);
  if ((v9 & 0x8000000000000000) == 0)
  {
    sub_1A594CE88();
    OUTLINED_FUNCTION_11_1();
    OUTLINED_FUNCTION_0_10();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_3_39((uint64_t)v7);
    sub_1A594CE88();
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_4_4();
    OUTLINED_FUNCTION_36();
    return sub_1A594CED0();
  }
  v9 &= ~0x8000000000000000;
  v1 = v8;
  sub_1A594CE88();
  v2 = *(_QWORD *)(v1 + 16);
  sub_1A594CE88();
  if (!v2)
  {
LABEL_7:
    sub_1A594CE88();
    return sub_1A594CED0();
  }
  v3 = v1 + 54;
  while (1)
  {
    v4 = *(_DWORD *)(v3 - 14);
    v5 = *(_DWORD *)(v3 - 10);
    result = OUTLINED_FUNCTION_176();
    if (v5 < v4)
      break;
    v3 += 24;
    sub_1A594CE70();
    if (!--v2)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A56E098C()
{
  __int128 *v0;
  _BYTE v2[40];

  sub_1A56E06B0(v0, (uint64_t)v2);
  return MetadataResponse.hashValue.getter();
}

uint64_t sub_1A56E09C0(uint64_t a1)
{
  __int128 *v1;
  _BYTE v4[40];

  sub_1A56E06B0(v1, (uint64_t)v4);
  return MetadataResponse.hash(into:)(a1);
}

uint64_t sub_1A56E09FC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t result;
  _BYTE v9[72];

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  sub_1A594CE64();
  if ((v3 & 0x8000000000000000) == 0)
  {
    sub_1A594CE88();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1A5693518((uint64_t)v9, v1, v2, v3);
    sub_1A594CE88();
    swift_release();
    swift_release();
    swift_release();
    return sub_1A594CED0();
  }
  sub_1A594CE88();
  v4 = *(_QWORD *)(v1 + 16);
  sub_1A594CE88();
  if (!v4)
  {
LABEL_7:
    sub_1A594CE88();
    return sub_1A594CED0();
  }
  v5 = v1 + 54;
  while (1)
  {
    v6 = *(_DWORD *)(v5 - 14);
    v7 = *(_DWORD *)(v5 - 10);
    result = swift_beginAccess();
    if (v7 < v6)
      break;
    v5 += 24;
    sub_1A594CE70();
    if (!--v4)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A56E0B44(__int128 *a1, __int128 *a2)
{
  __int128 v4[2];
  _BYTE v5[40];

  sub_1A56E06B0(a1, (uint64_t)v4);
  sub_1A56E06B0(a2, (uint64_t)v5);
  return static MetadataResponse.__derived_enum_equals(_:_:)(v4) & 1;
}

#error "1A56E0DA8: call analysis failed (funcsize=155)"

unint64_t sub_1A56E0DFC()
{
  unint64_t result;

  result = qword_1EE7A9B30;
  if (!qword_1EE7A9B30)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for MetadataResponse, &type metadata for MetadataResponse);
    atomic_store(result, (unint64_t *)&qword_1EE7A9B30);
  }
  return result;
}

uint64_t sub_1A56E0E38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 < 0)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    swift_retain();
    swift_retain();
    swift_retain();
  }
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t destroy for MetadataResponse(uint64_t *a1)
{
  return sub_1A56E0EA0(*a1, a1[1], a1[2]);
}

uint64_t sub_1A56E0EA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 < 0)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
}

uint64_t initializeWithCopy for MetadataResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_DWORD *)(a2 + 32);
  sub_1A56E0E38(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_DWORD *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for MetadataResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_DWORD *)(a2 + 32);
  sub_1A56E0E38(*(_QWORD *)a2, v4, v5);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_DWORD *)(a1 + 32) = v7;
  sub_1A56E0EA0(v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy36_8_0(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for MetadataResponse(uint64_t a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v3 = *(_DWORD *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  *(_DWORD *)(a1 + 32) = v3;
  sub_1A56E0EA0(v4, v6, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for MetadataResponse(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0xF && *(_BYTE *)(a1 + 36))
    {
      v2 = *(_DWORD *)a1 + 14;
    }
    else
    {
      v2 = (((*(_QWORD *)(a1 + 16) >> 60) >> 3) & 0xFFFFFFF1 | (2 * ((*(_QWORD *)(a1 + 16) >> 60) & 7))) ^ 0xF;
      if (v2 >= 0xE)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for MetadataResponse(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 15;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xF)
      *(_BYTE *)(result + 36) = 1;
  }
  else
  {
    if (a3 >= 0xF)
      *(_BYTE *)(result + 36) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = (unint64_t)(((-a2 >> 1) & 7) - 8 * a2) << 60;
      *(_QWORD *)(result + 24) = 0;
      *(_DWORD *)(result + 32) = 0;
    }
  }
  return result;
}

uint64_t sub_1A56E10E0(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16) >> 63;
}

uint64_t sub_1A56E10EC(uint64_t result)
{
  *(_QWORD *)(result + 16) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_1A56E10FC(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 16) = *(_QWORD *)(result + 16) & 0xFFFFFFFFFFFFFFFLL | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for MetadataResponse()
{
  return &type metadata for MetadataResponse;
}

uint64_t OUTLINED_FUNCTION_0_75()
{
  return 0x415441444154454DLL;
}

uint64_t OUTLINED_FUNCTION_1_55()
{
  return 0x415441444154454DLL;
}

void OUTLINED_FUNCTION_3_39(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1A5693518(a1, v2, v3, v1);
}

uint64_t OUTLINED_FUNCTION_8_26(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  __int128 *v9;

  return sub_1A56E06B0(v9, (uint64_t)&a9);
}

uint64_t MetadataValue.bytes.getter()
{
  return swift_retain();
}

void MetadataValue.hash(into:)(uint64_t a1, uint64_t a2)
{
  sub_1A56A00DC(a1, a2);
}

uint64_t static MetadataValue.__derived_struct_equals(_:_:)(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v7;

  if (!result)
    return !a4;
  if (!a4)
    return 0;
  if (HIDWORD(a2) < a2)
  {
    __break(1u);
  }
  else if (HIDWORD(a5) >= a5)
  {
    if (HIDWORD(a2) - (_DWORD)a2 == HIDWORD(a5) - (_DWORD)a5)
    {
      if ((a3 & 0xFFFFFFFFFFFFFFLL) == (a6 & 0xFFFFFFFFFFFFFFLL) && result == a4)
        return 1;
      swift_retain();
      swift_retain();
      v7 = sub_1A566B918();
      swift_release();
      if ((v7 & 1) != 0)
        return 1;
    }
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t MetadataValue.hashValue.getter(uint64_t a1)
{
  _BYTE v3[72];

  sub_1A594CE64();
  sub_1A56A00DC((uint64_t)v3, a1);
  return sub_1A594CED0();
}

uint64_t sub_1A56E12E0()
{
  uint64_t *v0;

  return MetadataValue.hashValue.getter(*v0);
}

void sub_1A56E12FC(uint64_t a1)
{
  uint64_t *v1;

  MetadataValue.hash(into:)(a1, *v1);
}

uint64_t sub_1A56E1318()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1A594CE64();
  sub_1A56A00DC((uint64_t)v3, v1);
  return sub_1A594CED0();
}

uint64_t sub_1A56E137C(uint64_t a1, uint64_t a2)
{
  return static MetadataValue.__derived_struct_equals(_:_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned int *)(a1 + 16) | ((unint64_t)(*(unsigned __int16 *)(a1 + 20) | (*(unsigned __int8 *)(a1 + 22) << 16)) << 32), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(unsigned int *)(a2 + 16) | ((unint64_t)(*(unsigned __int16 *)(a2 + 20) | (*(unsigned __int8 *)(a2 + 22) << 16)) << 32));
}

uint64_t MetadataValue.init(nilLiteral:)()
{
  return 0;
}

void sub_1A56E13C8(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  *(_QWORD *)((char *)a1 + 15) = 0;
}

unint64_t sub_1A56E13D8()
{
  unint64_t result;

  result = qword_1EE7A9B38;
  if (!qword_1EE7A9B38)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for MetadataValue, &type metadata for MetadataValue);
    atomic_store(result, (unint64_t *)&qword_1EE7A9B38);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MetadataValue(uint64_t *a1, unsigned int a2)
{
  int v2;
  uint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 23))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MetadataValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_BYTE *)(result + 22) = 0;
    *(_WORD *)(result + 20) = 0;
    *(_DWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 23) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 23) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MetadataValue()
{
  return &type metadata for MetadataValue;
}

uint64_t sub_1A56E14D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  void *v4;
  Swift::Int v5;
  Swift::Int v6;
  char v7;
  Swift::String v8;
  Swift::Int v9;
  uint64_t result;
  int v11;
  BOOL v12;
  int v13;

  v1 = v0;
  v2 = sub_1A594CC9C();
  v4 = (void *)v3;
  v5 = *(unsigned int *)(v0 + 20);
  sub_1A56814E0(v2, v3, v1 + 8, *(_DWORD *)(v1 + 20));
  if ((v7 & 1) != 0)
  {
    v8._countAndFlagsBits = v2;
    v8._object = v4;
    v6 = ByteBuffer._setStringSlowpath(_:at:)(v8, v5);
  }
  v9 = v6;
  result = swift_bridgeObjectRelease();
  v11 = *(_DWORD *)(v1 + 20);
  v12 = __CFADD__(v11, (_DWORD)v9);
  v13 = v11 + v9;
  if (v12)
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(v1 + 20) = v13;
    return v9;
  }
  return result;
}

uint64_t static ModificationSequenceValue.zero.getter()
{
  return 0;
}

uint64_t ModificationSequenceValue.init(_:)(uint64_t result)
{
  if (result < 0)
    __break(1u);
  return result;
}

uint64_t ModificationSequenceValue.init<A>(exactly:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  unint64_t v46;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t AssociatedTypeWitness;
  uint64_t v54;
  unint64_t v55;

  v54 = *(_QWORD *)(*(_QWORD *)(a3 + 24) + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v52 = (char *)&v48 - v6;
  v7 = *(_QWORD *)(a2 - 8);
  v8 = MEMORY[0x1E0C80A78](v5);
  v49 = (uint64_t)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v51 = (uint64_t)&v48 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v48 - v13;
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v48 - v16;
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)&v48 - v19;
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v48 - v21;
  if ((OUTLINED_FUNCTION_21_3() & 1) != 0)
  {
    if (OUTLINED_FUNCTION_5_31() >= 64)
    {
      v55 = 0;
      sub_1A566F64C();
      OUTLINED_FUNCTION_1_56();
      v23 = OUTLINED_FUNCTION_4_32();
      OUTLINED_FUNCTION_0_76((uint64_t)v22);
      if ((v23 & 1) != 0)
        goto LABEL_34;
LABEL_11:
      OUTLINED_FUNCTION_11_17((uint64_t)v17, a1);
      v30 = OUTLINED_FUNCTION_21_3();
      OUTLINED_FUNCTION_11_17((uint64_t)v14, (uint64_t)v17);
      v50 = a1;
      if ((v30 & 1) != 0)
      {
        OUTLINED_FUNCTION_7_25();
        OUTLINED_FUNCTION_8_27();
        OUTLINED_FUNCTION_6_31();
        v31 = OUTLINED_FUNCTION_4_32();
        OUTLINED_FUNCTION_0_76((uint64_t)v22);
        OUTLINED_FUNCTION_0_76((uint64_t)v14);
        if ((v31 & 1) != 0)
          goto LABEL_33;
      }
      else
      {
        OUTLINED_FUNCTION_0_76((uint64_t)v14);
      }
      v32 = OUTLINED_FUNCTION_5_31();
      v33 = v51;
      OUTLINED_FUNCTION_11_17(v51, (uint64_t)v17);
      if (v32 <= 63)
      {
        v34 = v33;
LABEL_17:
        OUTLINED_FUNCTION_0_76(v34);
        goto LABEL_18;
      }
      v55 = -1;
      v36 = OUTLINED_FUNCTION_21_3();
      v37 = OUTLINED_FUNCTION_5_31();
      if ((v36 & 1) != 0)
      {
        if (v37 <= 64)
        {
          OUTLINED_FUNCTION_7_25();
          OUTLINED_FUNCTION_8_27();
          sub_1A594CD08();
          v38 = sub_1A594B274();
          OUTLINED_FUNCTION_0_76((uint64_t)v22);
          v39 = v55;
          v40 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
          v41 = v49;
          OUTLINED_FUNCTION_9_30(v49, v40);
          if ((v38 & 1) == 0)
          {
            v34 = v41;
            goto LABEL_17;
          }
          v42 = OUTLINED_FUNCTION_25_0();
          OUTLINED_FUNCTION_0_76(v41);
          if (v39 < v42)
            goto LABEL_33;
LABEL_18:
          v35 = OUTLINED_FUNCTION_25_0();
          OUTLINED_FUNCTION_0_76((uint64_t)v17);
          OUTLINED_FUNCTION_0_76(v50);
          if ((v35 & 0x8000000000000000) == 0)
            return v35;
          return 0;
        }
      }
      else if (v37 < 65)
      {
        v46 = OUTLINED_FUNCTION_25_0();
        OUTLINED_FUNCTION_0_76(v33);
        if (v55 < v46)
        {
LABEL_33:
          OUTLINED_FUNCTION_0_76((uint64_t)v17);
          a1 = v50;
          goto LABEL_34;
        }
        goto LABEL_18;
      }
      sub_1A5678BD8();
      OUTLINED_FUNCTION_1_56();
      v44 = sub_1A594B280();
      OUTLINED_FUNCTION_0_76((uint64_t)v22);
      OUTLINED_FUNCTION_0_76(v33);
      if ((v44 & 1) != 0)
        goto LABEL_33;
      goto LABEL_18;
    }
    goto LABEL_10;
  }
  v48 = v17;
  v24 = a1;
  v25 = OUTLINED_FUNCTION_21_3();
  v26 = v24;
  v27 = OUTLINED_FUNCTION_5_31();
  if ((v25 & 1) == 0)
  {
    a1 = v24;
    v17 = v48;
    if (v27 >= 64)
      goto LABEL_11;
LABEL_10:
    OUTLINED_FUNCTION_9_30((uint64_t)v22, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16));
    v29 = OUTLINED_FUNCTION_25_0();
    OUTLINED_FUNCTION_0_76((uint64_t)v22);
    if ((v29 & 0x8000000000000000) == 0)
      goto LABEL_11;
    goto LABEL_34;
  }
  if (v27 > 64)
  {
    v55 = 0;
    sub_1A566F64C();
    OUTLINED_FUNCTION_1_56();
    a1 = v24;
    v28 = OUTLINED_FUNCTION_4_32();
    OUTLINED_FUNCTION_0_76((uint64_t)v22);
    v17 = v48;
    if ((v28 & 1) != 0)
      goto LABEL_34;
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_7_25();
  OUTLINED_FUNCTION_8_27();
  OUTLINED_FUNCTION_6_31();
  v43 = OUTLINED_FUNCTION_4_32();
  OUTLINED_FUNCTION_0_76((uint64_t)v22);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v20, v26, a2);
  if ((v43 & 1) == 0)
  {
    v45 = OUTLINED_FUNCTION_25_0();
    OUTLINED_FUNCTION_0_76((uint64_t)v20);
    a1 = v26;
    v17 = v48;
    if (v45 < 0)
      goto LABEL_34;
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_0_76((uint64_t)v20);
  a1 = v26;
LABEL_34:
  OUTLINED_FUNCTION_0_76(a1);
  return 0;
}

void ModificationSequenceValue.hash(into:)()
{
  sub_1A594CEB8();
  OUTLINED_FUNCTION_1();
}

uint64_t ModificationSequenceValue.hashValue.getter()
{
  sub_1A594CE64();
  sub_1A594CEB8();
  return sub_1A594CED0();
}

uint64_t sub_1A56E1B60()
{
  return ModificationSequenceValue.hashValue.getter();
}

void sub_1A56E1B68()
{
  ModificationSequenceValue.hash(into:)();
}

BOOL sub_1A56E1B70(_BOOL8 *a1, uint64_t *a2)
{
  return _s12NIOIMAPCore220ChangedSinceModifierV23__derived_struct_equalsySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t ModificationSequenceValue.debugDescription.getter()
{
  return sub_1A594CC9C();
}

uint64_t sub_1A56E1BB8()
{
  return ModificationSequenceValue.debugDescription.getter();
}

uint64_t BinaryInteger.init(_:)()
{
  sub_1A5678BD8();
  return sub_1A594C528();
}

{
  sub_1A5678A1C();
  return sub_1A594C528();
}

BOOL static ModificationSequenceValue.< infix(_:_:)(unint64_t a1, unint64_t a2)
{
  return a1 < a2;
}

BOOL static ModificationSequenceValue.<= infix(_:_:)(unint64_t a1, unint64_t a2)
{
  return a2 >= a1;
}

uint64_t ModificationSequenceValue.distance(to:)(uint64_t result, uint64_t a2)
{
  if ((a2 | result) < 0)
    __break(1u);
  else
    result -= a2;
  return result;
}

uint64_t ModificationSequenceValue.advanced(by:)(uint64_t result, uint64_t a2)
{
  BOOL v2;

  if (a2 < 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  v2 = __OFADD__(a2, result);
  result += a2;
  if (v2)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (result < 0)
LABEL_7:
    __break(1u);
  return result;
}

unint64_t sub_1A56E1C6C()
{
  unint64_t result;

  result = qword_1EE796ED0;
  if (!qword_1EE796ED0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ModificationSequenceValue, &type metadata for ModificationSequenceValue);
    atomic_store(result, (unint64_t *)&qword_1EE796ED0);
  }
  return result;
}

uint64_t sub_1A56E1CA8()
{
  return MEMORY[0x1E0DEE1E8];
}

unint64_t sub_1A56E1CB8()
{
  unint64_t result;

  result = qword_1EE7A9B40;
  if (!qword_1EE7A9B40)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ModificationSequenceValue, &type metadata for ModificationSequenceValue);
    atomic_store(result, (unint64_t *)&qword_1EE7A9B40);
  }
  return result;
}

uint64_t sub_1A56E1CF4()
{
  return MEMORY[0x1E0DEDC78];
}

uint64_t sub_1A56E1D00()
{
  return MEMORY[0x1E0DEDCA8];
}

void sub_1A56E1D0C(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  *a2 = ModificationSequenceValue.distance(to:)(*a1, *v2);
  OUTLINED_FUNCTION_1();
}

void sub_1A56E1D34(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  *a2 = ModificationSequenceValue.advanced(by:)(*a1, *v2);
  OUTLINED_FUNCTION_1();
}

_QWORD *sub_1A56E1D5C(_QWORD *a1, uint64_t a2, char a3, uint64_t *a4, uint64_t *a5, uint64_t *a6)
{
  return sub_1A570E28C(a1, a2, a3 & 1, *a4, *a5, *a6);
}

BOOL sub_1A56E1D84(unint64_t *a1, unint64_t *a2)
{
  return static ModificationSequenceValue.< infix(_:_:)(*a1, *a2);
}

BOOL sub_1A56E1D90(unint64_t *a1, unint64_t *a2)
{
  return static ModificationSequenceValue.<= infix(_:_:)(*a1, *a2);
}

BOOL sub_1A56E1D9C(unint64_t *a1, unint64_t *a2)
{
  return sub_1A570DE94(*a1, *a2);
}

BOOL sub_1A56E1DA8(unint64_t *a1, unint64_t *a2)
{
  return sub_1A570E020(*a1, *a2);
}

ValueMetadata *type metadata accessor for ModificationSequenceValue()
{
  return &type metadata for ModificationSequenceValue;
}

uint64_t OUTLINED_FUNCTION_0_76(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_1_56()
{
  return sub_1A594C4BC();
}

uint64_t OUTLINED_FUNCTION_4_32()
{
  return sub_1A594B280();
}

uint64_t OUTLINED_FUNCTION_5_31()
{
  return sub_1A594C504();
}

uint64_t OUTLINED_FUNCTION_6_31()
{
  return sub_1A594CD08();
}

uint64_t OUTLINED_FUNCTION_7_25()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_8_27()
{
  return sub_1A594CDA4();
}

uint64_t OUTLINED_FUNCTION_9_30@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v3, v2);
}

uint64_t OUTLINED_FUNCTION_11_17(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

#error "1A56E1E80: call analysis failed (funcsize=41)"

#error "1A56E20D8: call analysis failed (funcsize=166)"

void sub_1A56E2184(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;
  char v5;
  Swift::Int v6;
  int v7;
  BOOL v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  Swift::Int v13;
  char v14;
  int v15;
  Swift::Int v16;
  Swift::Int v17;
  Swift::Int v18;
  char v19;
  char v20;
  int v21;
  int v22;
  BOOL v23;
  Swift::Int v24;
  Swift::Int v25;
  char v26;
  int v27;
  int v28;
  uint64_t v29;
  Swift::Int v30;
  Swift::Int v31;
  char v32;
  int v33;
  int v34;
  _BYTE v35[40];
  _BYTE v36[16];
  _QWORD v37[2];

  v2 = v1;
  sub_1A56814E0(40, 0xE100000000000000, v1 + 8, *(_DWORD *)(v1 + 20));
  if ((v5 & 1) != 0)
    v4 = OUTLINED_FUNCTION_0_50(40);
  v6 = v4;
  v7 = *(_DWORD *)(v1 + 20);
  v8 = __CFADD__(v7, (_DWORD)v4);
  v9 = v7 + v4;
  if (v8)
  {
    __break(1u);
    goto LABEL_27;
  }
  *(_DWORD *)(v1 + 20) = v9;
  ByteBufferView.init(_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned __int16 *)(a1 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 22) << 48), (uint64_t)v35);
  swift_retain();
  sub_1A56BA79C((uint64_t)v35);
  v11 = v10;
  sub_1A553E5DC((uint64_t)v35);
  v12 = v6 + v11;
  if (__OFADD__(v6, v11))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  OUTLINED_FUNCTION_3_37(32);
  if ((v14 & 1) != 0)
    v13 = OUTLINED_FUNCTION_0_50(32);
  v15 = *(_DWORD *)(v2 + 20);
  if (__CFADD__(v15, (_DWORD)v13))
    goto LABEL_28;
  *(_DWORD *)(v2 + 20) = v15 + v13;
  v16 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  sub_1A56E2BBC(a1 + 24, (uint64_t)v36);
  sub_1A56E2BBC((uint64_t)v36, (uint64_t)v37);
  if (!v37[1])
  {
LABEL_16:
    OUTLINED_FUNCTION_10_14(4999502, 0xE300000000000000);
    if ((v26 & 1) != 0)
      v25 = OUTLINED_FUNCTION_3_40(4999502, 0xE300000000000000);
    v27 = *(_DWORD *)(v2 + 20);
    v8 = __CFADD__(v27, (_DWORD)v25);
    v28 = v27 + v25;
    if (v8)
      goto LABEL_34;
    *(_DWORD *)(v2 + 20) = v28;
    v24 = v16 + v25;
    if (__OFADD__(v16, v25))
    {
LABEL_35:
      __break(1u);
      return;
    }
    goto LABEL_20;
  }
  OUTLINED_FUNCTION_1_57();
  sub_1A594B1E4();
  OUTLINED_FUNCTION_1_57();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_10_14(0, 0xE000000000000000);
  v18 = v17;
  v20 = v19;
  swift_bridgeObjectRelease();
  if ((v20 & 1) != 0)
    v18 = OUTLINED_FUNCTION_3_40(0, 0xE000000000000000);
  swift_bridgeObjectRelease();
  v21 = *(_DWORD *)(v2 + 20);
  v8 = __CFADD__(v21, (_DWORD)v18);
  v22 = v21 + v18;
  if (v8)
    goto LABEL_33;
  *(_DWORD *)(v2 + 20) = v22;
  v23 = __OFADD__(v16, v18);
  v24 = v16 + v18;
  if (v23)
  {
    __break(1u);
    goto LABEL_16;
  }
LABEL_20:
  v29 = sub_1A56E1EEC(0, *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), v2);
  v30 = v24 + v29;
  if (__OFADD__(v24, v29))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  OUTLINED_FUNCTION_3_37(41);
  if ((v32 & 1) != 0)
    v31 = OUTLINED_FUNCTION_0_50(41);
  v33 = *(_DWORD *)(v2 + 20);
  v8 = __CFADD__(v33, (_DWORD)v31);
  v34 = v33 + v31;
  if (v8)
    goto LABEL_31;
  *(_DWORD *)(v2 + 20) = v34;
  if (__OFADD__(v30, v31))
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
}

uint64_t NamespaceDescription.string.getter()
{
  return swift_retain();
}

uint64_t NamespaceDescription.string.setter(uint64_t a1, unint64_t a2, unint64_t a3)
{
  uint64_t v3;
  int v4;
  int v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t result;

  v4 = a3;
  v5 = a2;
  v7 = HIDWORD(a2);
  v8 = HIDWORD(a3);
  v9 = HIWORD(a3);
  result = swift_release();
  *(_QWORD *)v3 = a1;
  *(_DWORD *)(v3 + 8) = v5;
  *(_DWORD *)(v3 + 12) = v7;
  *(_DWORD *)(v3 + 16) = v4;
  *(_WORD *)(v3 + 20) = v8;
  *(_BYTE *)(v3 + 22) = v9;
  return result;
}

double (*NamespaceDescription.string.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t NamespaceDescription.delimiter.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

void NamespaceDescription.delimiter.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  OUTLINED_FUNCTION_8_1();
}

double (*NamespaceDescription.delimiter.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t NamespaceDescription.responseExtensions.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_retain();
  swift_retain();
  swift_retain();
  return v1;
}

void NamespaceDescription.responseExtensions.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  swift_release();
  swift_release();
  swift_release();
  v3[5] = a1;
  v3[6] = a2;
  v3[7] = a3;
  OUTLINED_FUNCTION_8_1();
}

double (*NamespaceDescription.responseExtensions.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t NamespaceDescription.init(string:char:responseExtensions:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  *(_QWORD *)a9 = result;
  *(_QWORD *)(a9 + 8) = a2;
  *(_DWORD *)(a9 + 16) = a3;
  *(_WORD *)(a9 + 20) = WORD2(a3);
  *(_BYTE *)(a9 + 22) = BYTE6(a3);
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  return result;
}

uint64_t NamespaceDescription.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned int v4;
  unsigned int v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = v1;
  v4 = *(_DWORD *)(v2 + 8);
  v5 = *(_DWORD *)(v2 + 12);
  result = swift_beginAccess();
  if (v5 < v4)
  {
    __break(1u);
  }
  else
  {
    sub_1A594CE70();
    if (*(_QWORD *)(v2 + 32))
    {
      sub_1A594CE94();
      sub_1A594B1D8();
    }
    else
    {
      sub_1A594CE94();
    }
    v7 = *(_QWORD *)(v2 + 40);
    v8 = *(_QWORD *)(v2 + 48);
    v9 = *(_QWORD *)(v2 + 56);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1A56938D8(a1, v7, v8, v9);
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t static NamespaceDescription.__derived_struct_equals(_:_:)(uint64_t result, uint64_t a2)
{
  unsigned int v2;
  unsigned int v3;
  unsigned int v5;
  unsigned int v6;
  _QWORD *v7;
  BOOL v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;

  v2 = *(_DWORD *)(result + 8);
  v3 = *(_DWORD *)(result + 12);
  if (v3 < v2)
  {
    __break(1u);
    goto LABEL_29;
  }
  v5 = *(_DWORD *)(a2 + 8);
  v6 = *(_DWORD *)(a2 + 12);
  if (v6 < v5)
  {
LABEL_29:
    __break(1u);
    return result;
  }
  if (v3 - v2 != v6 - v5)
    return 0;
  v7 = (_QWORD *)result;
  v8 = *(_DWORD *)(result + 16) == *(_DWORD *)(a2 + 16)
    && *(unsigned __int16 *)(result + 20) == *(unsigned __int16 *)(a2 + 20);
  v9 = v8 && *(unsigned __int8 *)(result + 22) == *(unsigned __int8 *)(a2 + 22);
  if (!v9 || *(_QWORD *)result != *(_QWORD *)a2)
  {
    swift_retain();
    if ((sub_1A566B918() & 1) == 0)
      return 0;
  }
  v11 = v7[4];
  v12 = *(_QWORD *)(a2 + 32);
  if (!v11)
  {
    if (!v12)
      goto LABEL_24;
    return 0;
  }
  if (!v12)
    return 0;
  v13 = v7[3] == *(_QWORD *)(a2 + 24) && v11 == v12;
  if (v13 || (v14 = sub_1A594CD38(), result = 0, (v14 & 1) != 0))
  {
LABEL_24:
    v15 = v7[7];
    v16 = *(_QWORD *)(a2 + 56);
    sub_1A5690DA8();
    if ((v17 & 1) != 0)
    {
      sub_1A569164C(v15, v16);
      if ((v18 & 1) != 0)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t NamespaceDescription.hashValue.getter()
{
  _BYTE v1[72];

  sub_1A594CE64();
  NamespaceDescription.hash(into:)((uint64_t)v1);
  return sub_1A594CED0();
}

uint64_t sub_1A56E2874()
{
  _BYTE v1[72];

  sub_1A594CE64();
  NamespaceDescription.hash(into:)((uint64_t)v1);
  return sub_1A594CED0();
}

unint64_t sub_1A56E28B4()
{
  unint64_t result;

  result = qword_1EE7A9B48;
  if (!qword_1EE7A9B48)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for NamespaceDescription, &type metadata for NamespaceDescription);
    atomic_store(result, (unint64_t *)&qword_1EE7A9B48);
  }
  return result;
}

uint64_t destroy for NamespaceDescription()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for NamespaceDescription(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 19) = *(_DWORD *)(a2 + 19);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v3;
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for NamespaceDescription(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_WORD *)(a1 + 20) = *(_WORD *)(a2 + 20);
  *(_BYTE *)(a1 + 22) = *(_BYTE *)(a2 + 22);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for NamespaceDescription(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_WORD *)(a1 + 20) = *(_WORD *)(a2 + 20);
  *(_BYTE *)(a1 + 22) = *(_BYTE *)(a2 + 22);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for NamespaceDescription(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NamespaceDescription(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NamespaceDescription()
{
  return &type metadata for NamespaceDescription;
}

uint64_t sub_1A56E2BBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t OUTLINED_FUNCTION_1_57()
{
  return sub_1A594B5F8();
}

Swift::Int OUTLINED_FUNCTION_3_40(uint64_t a1, uint64_t a2)
{
  Swift::Int v2;

  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v2);
}

void static NamespaceResponse.__derived_struct_equals(_:_:)()
{
  char v0;
  char v1;

  sub_1A5690284();
  if ((v0 & 1) != 0)
  {
    sub_1A5690284();
    if ((v1 & 1) != 0)
      sub_1A5690284();
  }
}

void sub_1A56E2C88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::UInt32 v3;
  uint64_t v4;
  unint64_t v5;
  Swift::Int v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int v10;
  int v11;
  BOOL v12;
  int v13;
  uint64_t v14;
  Swift::Int v15;
  Swift::Int v16;
  char v17;
  int v18;
  int v19;
  BOOL v20;
  Swift::Int v21;
  uint64_t v22;
  Swift::Int v23;
  Swift::Int v24;
  char v25;
  int v26;
  int v27;

  v1 = v0;
  v2 = v0 + 8;
  v3 = *(_DWORD *)(v0 + 20);
  v4 = OUTLINED_FUNCTION_1_58();
  sub_1A56814E0(v4, v5, v2, v3);
  if ((v7 & 1) != 0)
  {
    v8 = OUTLINED_FUNCTION_1_58();
    v6 = OUTLINED_FUNCTION_2_49(v8, v9);
  }
  v10 = v6;
  v11 = *(_DWORD *)(v1 + 20);
  v12 = __CFADD__(v11, (_DWORD)v6);
  v13 = v11 + v6;
  if (v12)
  {
    __break(1u);
    goto LABEL_17;
  }
  *(_DWORD *)(v1 + 20) = v13;
  v14 = OUTLINED_FUNCTION_4_33();
  v15 = v10 + v14;
  if (__OFADD__(v10, v14))
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  OUTLINED_FUNCTION_0_77();
  if ((v17 & 1) != 0)
    v16 = OUTLINED_FUNCTION_2_49(32, 0xE100000000000000);
  v18 = *(_DWORD *)(v1 + 20);
  v12 = __CFADD__(v18, (_DWORD)v16);
  v19 = v18 + v16;
  if (v12)
    goto LABEL_18;
  *(_DWORD *)(v1 + 20) = v19;
  v20 = __OFADD__(v15, v16);
  v21 = v15 + v16;
  if (v20)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v22 = OUTLINED_FUNCTION_4_33();
  v23 = v21 + v22;
  if (__OFADD__(v21, v22))
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  OUTLINED_FUNCTION_0_77();
  if ((v25 & 1) != 0)
    v24 = OUTLINED_FUNCTION_2_49(32, 0xE100000000000000);
  v26 = *(_DWORD *)(v1 + 20);
  v12 = __CFADD__(v26, (_DWORD)v24);
  v27 = v26 + v24;
  if (v12)
    goto LABEL_21;
  *(_DWORD *)(v1 + 20) = v27;
  if (__OFADD__(v23, v24))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (__OFADD__(v23 + v24, OUTLINED_FUNCTION_4_33()))
LABEL_23:
    __break(1u);
}

void NamespaceResponse.userNamespace.setter(uint64_t a1)
{
  _QWORD *v1;

  swift_bridgeObjectRelease();
  *v1 = a1;
  OUTLINED_FUNCTION_1();
}

double (*NamespaceResponse.userNamespace.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t NamespaceResponse.otherUserNamespace.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

void NamespaceResponse.otherUserNamespace.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  OUTLINED_FUNCTION_1();
}

double (*NamespaceResponse.otherUserNamespace.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t NamespaceResponse.sharedNamespace.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

void NamespaceResponse.sharedNamespace.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  OUTLINED_FUNCTION_1();
}

double (*NamespaceResponse.sharedNamespace.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t NamespaceResponse.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5695A08(a1, a2);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_16_0();
  sub_1A5695A08(a1, a3);
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5695A08(a1, a4);
  return swift_bridgeObjectRelease();
}

uint64_t NamespaceResponse.hashValue.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE v7[72];

  sub_1A594CE64();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5695A08((uint64_t)v7, a1);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_16_0();
  sub_1A5695A08((uint64_t)v7, a2);
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5695A08((uint64_t)v7, a3);
  swift_bridgeObjectRelease();
  return sub_1A594CED0();
}

uint64_t sub_1A56E2F7C()
{
  uint64_t *v0;

  return NamespaceResponse.hashValue.getter(*v0, v0[1], v0[2]);
}

uint64_t sub_1A56E2F88(uint64_t a1)
{
  uint64_t *v1;

  return NamespaceResponse.hash(into:)(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_1A56E2F94()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[72];

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  sub_1A594CE64();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5695A08((uint64_t)v5, v1);
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5695A08((uint64_t)v5, v2);
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5695A08((uint64_t)v5, v3);
  swift_bridgeObjectRelease();
  return sub_1A594CED0();
}

void sub_1A56E3028()
{
  static NamespaceResponse.__derived_struct_equals(_:_:)();
}

unint64_t sub_1A56E3048()
{
  unint64_t result;

  result = qword_1EE7A9B50;
  if (!qword_1EE7A9B50)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for NamespaceResponse, &type metadata for NamespaceResponse);
    atomic_store(result, (unint64_t *)&qword_1EE7A9B50);
  }
  return result;
}

_QWORD *sub_1A56E3088(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_16_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

ValueMetadata *type metadata accessor for NamespaceResponse()
{
  return &type metadata for NamespaceResponse;
}

void OUTLINED_FUNCTION_0_77()
{
  uint64_t v0;
  uint64_t v1;

  sub_1A56814E0(32, 0xE100000000000000, v1, *(_DWORD *)(v0 + 20));
}

uint64_t OUTLINED_FUNCTION_1_58()
{
  return 0x43415053454D414ELL;
}

Swift::Int OUTLINED_FUNCTION_2_49(uint64_t a1, uint64_t a2)
{
  Swift::Int v2;

  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v2);
}

uint64_t OUTLINED_FUNCTION_4_33()
{
  return sub_1A56E1E40();
}

uint64_t static NetworkMessagePath.__derived_struct_equals(_:_:)(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;
  __int128 v5;
  char v6;
  _BYTE v8[72];
  _BYTE v9[72];
  _OWORD v10[2];
  _OWORD v11[2];
  _OWORD v12[2];
  _OWORD v13[2];

  v4 = a1[1];
  v12[0] = *a1;
  v12[1] = v4;
  v13[0] = a1[2];
  *(_OWORD *)((char *)v13 + 9) = *(_OWORD *)((char *)a1 + 41);
  v5 = a2[1];
  v10[0] = *a2;
  v10[1] = v5;
  v11[0] = a2[2];
  *(_OWORD *)((char *)v11 + 9) = *(_OWORD *)((char *)a2 + 41);
  if ((static IMAPServer.__derived_struct_equals(_:_:)((uint64_t)v12, (uint64_t)v10) & 1) != 0)
  {
    OUTLINED_FUNCTION_1_42(v9, a1 + 4);
    OUTLINED_FUNCTION_1_42(v8, a2 + 4);
    v6 = static MessagePath.__derived_struct_equals(_:_:)((uint64_t)v9, (uint64_t)v8);
  }
  else
  {
    v6 = 0;
  }
  return v6 & 1;
}

uint64_t NetworkMessagePath.server.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A56CC654(v1, a1);
}

uint64_t NetworkMessagePath.server.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1A56CC698(a1, v1);
}

double (*NetworkMessagePath.server.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t NetworkMessagePath.messagePath.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A56E31FC(v1 + 64, a1);
}

uint64_t sub_1A56E31FC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for MessagePath(a2, a1);
  return a2;
}

uint64_t NetworkMessagePath.messagePath.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1A56E3240(a1, v1 + 64);
}

uint64_t sub_1A56E3240(uint64_t a1, uint64_t a2)
{
  assignWithTake for MessagePath(a2, a1);
  return a2;
}

double (*NetworkMessagePath.messagePath.modify())(_QWORD)
{
  return nullsub_1;
}

__n128 NetworkMessagePath.init(server:messagePath:)@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  char v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  char v11;
  char v12;
  __n128 result;
  __n128 v14;
  char v15;

  v3 = a2->n128_u64[0];
  v4 = a2->n128_i64[1];
  v5 = a2[1].n128_i32[0];
  v6 = a2[1].n128_i32[2];
  v7 = a2[4].n128_i8[0];
  v9 = *(_OWORD *)(a1 + 16);
  v8 = *(_OWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_BYTE *)(a1 + 56) & 1;
  v15 = a2[1].n128_u8[4] & 1;
  v12 = a2[4].n128_u8[1] & 1;
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 16) = v9;
  *(_OWORD *)(a3 + 32) = v8;
  *(_QWORD *)(a3 + 48) = v10;
  *(_BYTE *)(a3 + 56) = v11;
  *(_QWORD *)(a3 + 64) = v3;
  *(_QWORD *)(a3 + 72) = v4;
  *(_DWORD *)(a3 + 80) = v5;
  *(_BYTE *)(a3 + 84) = v15;
  *(_DWORD *)(a3 + 88) = v6;
  result = a2[2];
  v14 = a2[3];
  *(__n128 *)(a3 + 96) = result;
  *(__n128 *)(a3 + 112) = v14;
  *(_BYTE *)(a3 + 128) = v7;
  *(_BYTE *)(a3 + 129) = v12;
  return result;
}

uint64_t NetworkMessagePath.hash(into:)(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  _BYTE v5[72];
  _OWORD v6[2];
  _OWORD v7[2];

  v3 = v1[1];
  v6[0] = *v1;
  v6[1] = v3;
  v7[0] = v1[2];
  *(_OWORD *)((char *)v7 + 9) = *(_OWORD *)((char *)v1 + 41);
  sub_1A56CA764((uint64_t *)v6);
  IMAPServer.hash(into:)(a1);
  sub_1A56CA7A0((uint64_t *)v6);
  OUTLINED_FUNCTION_1_42(v5, v1 + 4);
  sub_1A56CA818((uint64_t)v5);
  MessagePath.hash(into:)();
  return sub_1A56CA84C((uint64_t)v5);
}

uint64_t NetworkMessagePath.hashValue.getter()
{
  _OWORD *v0;
  __int128 v1;
  uint64_t v3;
  _BYTE v4[72];
  _OWORD v5[2];
  _OWORD v6[2];

  sub_1A594CE64();
  v1 = v0[1];
  v5[0] = *v0;
  v5[1] = v1;
  v6[0] = v0[2];
  *(_OWORD *)((char *)v6 + 9) = *(_OWORD *)((char *)v0 + 41);
  sub_1A56CA764((uint64_t *)v5);
  IMAPServer.hash(into:)((uint64_t)&v3);
  sub_1A56CA7A0((uint64_t *)v5);
  OUTLINED_FUNCTION_1_42(v4, v0 + 4);
  sub_1A56CA818((uint64_t)v4);
  MessagePath.hash(into:)();
  sub_1A56CA84C((uint64_t)v4);
  return sub_1A594CED0();
}

uint64_t sub_1A56E3434()
{
  _OWORD *v0;
  __int128 v1;
  uint64_t v3;
  _BYTE __dst[72];
  _OWORD v5[2];
  _OWORD v6[2];

  v1 = v0[1];
  v5[0] = *v0;
  v5[1] = v1;
  v6[0] = v0[2];
  *(_OWORD *)((char *)v6 + 9) = *(_OWORD *)((char *)v0 + 41);
  memcpy(__dst, v0 + 4, 0x42uLL);
  sub_1A594CE64();
  sub_1A56CA764((uint64_t *)v5);
  IMAPServer.hash(into:)((uint64_t)&v3);
  sub_1A56CA7A0((uint64_t *)v5);
  sub_1A56CA818((uint64_t)__dst);
  MessagePath.hash(into:)();
  sub_1A56CA84C((uint64_t)__dst);
  return sub_1A594CED0();
}

unint64_t sub_1A56E34D0()
{
  unint64_t result;

  result = qword_1EE7A9B58;
  if (!qword_1EE7A9B58)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for NetworkMessagePath, &type metadata for NetworkMessagePath);
    atomic_store(result, (unint64_t *)&qword_1EE7A9B58);
  }
  return result;
}

uint64_t destroy for NetworkMessagePath(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 24) != 1)
      swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NetworkMessagePath(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  if (v4 == 1)
  {
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    v6 = (_OWORD *)(a2 + 16);
    v7 = *(_QWORD *)(a2 + 24);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v7 == 1)
    {
      *(_OWORD *)(a1 + 16) = *v6;
    }
    else
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)v6;
      *(_QWORD *)(a1 + 24) = v7;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
  }
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v9 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v9;
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 84) = *(_BYTE *)(a2 + 84);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  v10 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v10;
  *(_WORD *)(a1 + 128) = *(_WORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for NetworkMessagePath(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  __int128 v11;

  v4 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8) != 1)
  {
    if (v4 == 1)
    {
      sub_1A56CAE04(a1);
      v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      goto LABEL_15;
    }
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_bridgeObjectRelease();
    v8 = *(_QWORD *)(a2 + 24);
    if (*(_QWORD *)(a1 + 24) == 1)
    {
      if (v8 != 1)
        goto LABEL_10;
    }
    else
    {
      if (v8 != 1)
      {
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
      sub_1A56CADD0(a1 + 16);
    }
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    goto LABEL_15;
  }
  if (v4 != 1)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    v7 = *(_QWORD *)(a2 + 24);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v7 == 1)
    {
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      goto LABEL_15;
    }
LABEL_10:
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    goto LABEL_15;
  }
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
LABEL_15:
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v10 = *(_DWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 84) = *(_BYTE *)(a2 + 84);
  *(_DWORD *)(a1 + 80) = v10;
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v11 = *(_OWORD *)(a2 + 112);
  *(_WORD *)(a1 + 128) = *(_WORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = v11;
  return a1;
}

void *__swift_memcpy130_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x82uLL);
}

uint64_t assignWithTake for NetworkMessagePath(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (*(_QWORD *)(a1 + 8) == 1)
    goto LABEL_4;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 == 1)
  {
    sub_1A56CAE04(a1);
LABEL_4:
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    goto LABEL_10;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v6 = (_QWORD *)(a2 + 16);
  if (*(_QWORD *)(a1 + 24) != 1)
  {
    v7 = *(_QWORD *)(a2 + 24);
    if (v7 != 1)
    {
      *(_QWORD *)(a1 + 16) = *v6;
      *(_QWORD *)(a1 + 24) = v7;
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    sub_1A56CADD0(a1 + 16);
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)v6;
LABEL_10:
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v9 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v9;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 84) = *(_BYTE *)(a2 + 84);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  v10 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v10;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_WORD *)(a1 + 128) = *(_WORD *)(a2 + 128);
  return a1;
}

uint64_t getEnumTagSinglePayload for NetworkMessagePath(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 130))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 40);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NetworkMessagePath(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 128) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 130) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 130) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkMessagePath()
{
  return &type metadata for NetworkMessagePath;
}

uint64_t NetworkPath.server.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A56CC654(v1, a1);
}

uint64_t NetworkPath.server.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1A56CC698(a1, v1);
}

double (*NetworkPath.server.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t NetworkPath.command.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A5687904(v1 + 64, a1);
}

uint64_t NetworkPath.command.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1A56CC6F8(a1, v1 + 64);
}

double (*NetworkPath.command.modify())(_QWORD)
{
  return nullsub_1;
}

void *NetworkPath.init(server:query:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  char v8;
  _BYTE v10[192];
  _BYTE v11[192];
  _OWORD __src[16];

  sub_1A56879A8(a2, (uint64_t)v10);
  sub_1A56879A8((uint64_t)v10, (uint64_t)v11);
  v6 = *(_OWORD *)(a1 + 16);
  v5 = *(_OWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 48);
  v8 = *(_BYTE *)(a1 + 56);
  __src[0] = *(_OWORD *)a1;
  __src[1] = v6;
  __src[2] = v5;
  *(_QWORD *)&__src[3] = v7;
  BYTE8(__src[3]) = v8 & 1;
  sub_1A56879A8((uint64_t)v11, (uint64_t)&__src[4]);
  return memcpy(a3, __src, 0x100uLL);
}

_QWORD *NetworkPath.hash(into:)(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  _QWORD v5[24];
  _OWORD v6[2];
  _OWORD v7[2];
  _BYTE v8[192];
  _QWORD v9[24];
  _BYTE v10[192];

  v3 = v1[1];
  v6[0] = *v1;
  v6[1] = v3;
  v7[0] = v1[2];
  *(_OWORD *)((char *)v7 + 9) = *(_OWORD *)((char *)v1 + 41);
  sub_1A56CA764((uint64_t *)v6);
  IMAPServer.hash(into:)(a1);
  sub_1A56CA7A0((uint64_t *)v6);
  sub_1A56879A8((uint64_t)(v1 + 4), (uint64_t)v9);
  sub_1A56879A8((uint64_t)v9, (uint64_t)v10);
  if (sub_1A5687CDC((uint64_t)v10) == 1)
    return (_QWORD *)sub_1A594CE94();
  sub_1A56879A8((uint64_t)v9, (uint64_t)v5);
  sub_1A5687D00(v5, v8);
  sub_1A594CE94();
  sub_1A56880FC(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A56881F8);
  URLCommand.hash(into:)();
  return sub_1A56880FC(v9, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A56879F0);
}

BOOL static NetworkPath.__derived_struct_equals(_:_:)(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;
  __int128 v5;
  BOOL v6;
  _BYTE v8[192];
  _BYTE v9[192];
  _BYTE v10[192];
  _BYTE v11[192];
  uint64_t v12;
  _QWORD v13[24];
  _QWORD v14[24];
  _BYTE v15[192];
  _OWORD v16[2];
  _OWORD v17[2];
  _OWORD v18[2];
  _OWORD v19[2];
  _BYTE v20[192];

  v4 = a1[1];
  v18[0] = *a1;
  v18[1] = v4;
  v19[0] = a1[2];
  *(_OWORD *)((char *)v19 + 9) = *(_OWORD *)((char *)a1 + 41);
  v5 = a2[1];
  v16[0] = *a2;
  v16[1] = v5;
  v17[0] = a2[2];
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)a2 + 41);
  if ((static IMAPServer.__derived_struct_equals(_:_:)((uint64_t)v18, (uint64_t)v16) & 1) == 0)
    return 0;
  sub_1A56879A8((uint64_t)(a1 + 4), (uint64_t)v13);
  sub_1A56879A8((uint64_t)(a2 + 4), (uint64_t)v14);
  sub_1A56879A8((uint64_t)v13, (uint64_t)v15);
  if (sub_1A5687CDC((uint64_t)v15) == 1)
  {
    sub_1A56879A8((uint64_t)v14, (uint64_t)v11);
    if (sub_1A5687CDC((uint64_t)v11) == 1)
      return 1;
    goto LABEL_6;
  }
  sub_1A56879A8((uint64_t)v14, (uint64_t)v10);
  if (sub_1A5687CDC((uint64_t)v10) == 1)
  {
LABEL_6:
    sub_1A56879A8((uint64_t)v13, (uint64_t)v11);
    sub_1A56879A8((uint64_t)v14, (uint64_t)&v12);
    OUTLINED_FUNCTION_2_42(v13);
    OUTLINED_FUNCTION_2_42(v14);
    sub_1A5688360((uint64_t)v11);
    return 0;
  }
  sub_1A56879A8((uint64_t)v13, (uint64_t)v8);
  sub_1A5687D00(v8, v20);
  sub_1A56879A8((uint64_t)v14, (uint64_t)v9);
  sub_1A5687D00(v9, v11);
  OUTLINED_FUNCTION_2_42(v13);
  OUTLINED_FUNCTION_2_42(v14);
  v6 = static URLCommand.__derived_enum_equals(_:_:)(v20, v11);
  sub_1A56880FC(v14, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A56879F0);
  sub_1A56880FC(v13, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A56879F0);
  return v6;
}

uint64_t NetworkPath.hashValue.getter()
{
  _BYTE v1[72];

  sub_1A594CE64();
  NetworkPath.hash(into:)((uint64_t)v1);
  return sub_1A594CED0();
}

uint64_t sub_1A56E3D8C()
{
  const void *v0;
  _BYTE v2[256];

  memcpy(v2, v0, sizeof(v2));
  return NetworkPath.hashValue.getter();
}

_QWORD *sub_1A56E3DC4(uint64_t a1)
{
  const void *v1;
  _BYTE v4[256];

  memcpy(v4, v1, sizeof(v4));
  return NetworkPath.hash(into:)(a1);
}

uint64_t sub_1A56E3E0C()
{
  const void *v0;
  _BYTE v2[72];
  _BYTE __dst[256];

  memcpy(__dst, v0, sizeof(__dst));
  sub_1A594CE64();
  NetworkPath.hash(into:)((uint64_t)v2);
  return sub_1A594CED0();
}

BOOL sub_1A56E3E68(void *__src, const void *a2)
{
  _OWORD v4[16];
  _OWORD __dst[16];

  memcpy(v4, __src, sizeof(v4));
  memcpy(__dst, a2, sizeof(__dst));
  return static NetworkPath.__derived_struct_equals(_:_:)(v4, __dst);
}

unint64_t sub_1A56E3EC0()
{
  unint64_t result;

  result = qword_1EE7A9B60;
  if (!qword_1EE7A9B60)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for NetworkPath, &type metadata for NetworkPath);
    atomic_store(result, (unint64_t *)&qword_1EE7A9B60);
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkPath()
{
  return &type metadata for NetworkPath;
}

void sub_1A56E3F0C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

#error "1A56E3F78: call analysis failed (funcsize=27)"

void MailboxFilter.hash(into:)(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

void sub_1A56E41A0()
{
  sub_1A594CE88();
  sub_1A5693F10();
}

uint64_t sub_1A56E41CC()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_1A56E41E4 + 4 * byte_1A59B35F0[v0]))();
}

uint64_t sub_1A56E41E4()
{
  return sub_1A594CE88();
}

uint64_t static MailboxFilter.__derived_enum_equals(_:_:)(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(void))((char *)sub_1A56E4234 + 4 * byte_1A59B35F5[a2]))();
}

uint64_t sub_1A56E4234(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4)
    return 0;
  else
    return _s12NIOIMAPCore29MailboxesV23__derived_struct_equalsySbAC_ACtFZ_0(a1, a3);
}

void MailboxFilter.hashValue.getter(uint64_t a1, char a2)
{
  sub_1A594CE64();
  __asm { BR              X10 }
}

uint64_t sub_1A56E4328()
{
  sub_1A594CE88();
  sub_1A5693F10();
  return sub_1A594CED0();
}

void sub_1A56E43C8()
{
  uint64_t v0;

  MailboxFilter.hashValue.getter(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

void sub_1A56E43D4(uint64_t a1)
{
  uint64_t v1;

  MailboxFilter.hash(into:)(a1, *(_QWORD *)v1, *(_BYTE *)(v1 + 8));
}

void sub_1A56E43E0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 8);
  sub_1A594CE64();
  __asm { BR              X9 }
}

uint64_t sub_1A56E4418()
{
  sub_1A594CE88();
  sub_1A5693F10();
  return sub_1A594CED0();
}

uint64_t sub_1A56E44B8(uint64_t a1)
{
  return static MailboxFilter.__derived_enum_equals(_:_:)(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

unint64_t sub_1A56E44D4()
{
  unint64_t result;

  result = qword_1EE7A9B68;
  if (!qword_1EE7A9B68)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for MailboxFilter, &type metadata for MailboxFilter);
    atomic_store(result, (unint64_t *)&qword_1EE7A9B68);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for MailboxFilter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned __int8 v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1A5666DBC(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for MailboxFilter(uint64_t a1)
{
  return sub_1A5666DD0(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for MailboxFilter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned __int8 v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1A5666DBC(*(_QWORD *)a2, v4);
  v5 = *(_QWORD *)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_1A5666DD0(v5, v6);
  return a1;
}

uint64_t assignWithTake for MailboxFilter(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_1A5666DD0(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for MailboxFilter(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFD && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 252;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 3)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MailboxFilter(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A56E4674(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 2u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_1A56E468C(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for MailboxFilter()
{
  return &type metadata for MailboxFilter;
}

void OUTLINED_FUNCTION_0_78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  uint64_t v41;

  sub_1A56614DC(a1, 0, 0xE000000000000000, 32, 0xE100000000000000, 0, 0xE000000000000000, 1, v41, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30,
    a31,
    a32,
    a33,
    a34,
    a35,
    a36,
    a37,
    a38,
    a39,
    a40,
    a41);
}

void OUTLINED_FUNCTION_1_59(uint64_t a1, unint64_t a2)
{
  Swift::UInt32 v2;
  uint64_t v3;

  sub_1A56814E0(a1, a2, v3, v2);
}

uint64_t OUTLINED_FUNCTION_4_34()
{
  return 0x2D65657274627573;
}

uint64_t OUTLINED_FUNCTION_5_32()
{
  return 0x65786F626C69616DLL;
}

uint64_t OUTLINED_FUNCTION_6_32@<X0>(int a1@<W8>)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 20) = a1;
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t OUTLINED_FUNCTION_7_26()
{
  return 0x6269726373627573;
}

uint64_t OUTLINED_FUNCTION_9_31()
{
  return 0x7365786F626E69;
}

uint64_t OUTLINED_FUNCTION_11_18()
{
  return 0x6C616E6F73726570;
}

uint64_t OUTLINED_FUNCTION_12_22()
{
  return 0x2065657274627573;
}

uint64_t OUTLINED_FUNCTION_15_24()
{
  return 0x64657463656C6573;
}

NIOIMAPCore2::Mailboxes_optional __swiftcall Mailboxes.init(_:)(Swift::OpaquePointer a1)
{
  Swift::Bool v1;
  NIOIMAPCore2::Mailboxes_optional result;

  if (!*((_QWORD *)a1._rawValue + 2))
  {
    swift_bridgeObjectRelease();
    a1._rawValue = 0;
  }
  result.value.content = a1;
  result.is_nil = v1;
  return result;
}

uint64_t Mailboxes.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_1A594CE88();
  if (v3)
  {
    v5 = a2 + 40;
    do
    {
      v5 += 16;
      result = sub_1A594CE88();
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t Mailboxes.hashValue.getter()
{
  sub_1A594CE64();
  sub_1A5693F10();
  return sub_1A594CED0();
}

uint64_t sub_1A56E4884()
{
  return Mailboxes.hashValue.getter();
}

uint64_t sub_1A56E488C(uint64_t a1)
{
  uint64_t *v1;

  return Mailboxes.hash(into:)(a1, *v1);
}

uint64_t sub_1A56E4894()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1A594CE64();
  Mailboxes.hash(into:)((uint64_t)v3, v1);
  return sub_1A594CED0();
}

uint64_t sub_1A56E48D4(_QWORD *a1, _QWORD *a2)
{
  return static Mailboxes.__derived_struct_equals(_:_:)(*a1, *a2);
}

unint64_t sub_1A56E48E4()
{
  unint64_t result;

  result = qword_1EE7A9B70;
  if (!qword_1EE7A9B70)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for Mailboxes, &type metadata for Mailboxes);
    atomic_store(result, (unint64_t *)&qword_1EE7A9B70);
  }
  return result;
}

ValueMetadata *type metadata accessor for Mailboxes()
{
  return &type metadata for Mailboxes;
}

void sub_1A56E4930(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  void *v6;
  Swift::Int v7;
  Swift::Int v8;
  Swift::Int v9;
  char v10;
  char v11;
  Swift::String v12;
  int v13;
  Swift::Int v14;
  Swift::Int v15;
  char v16;
  Swift::String v17;
  int v18;
  Swift::Int v19;
  Swift::Int v20;
  Swift::Int v21;
  char v22;
  char v23;
  Swift::String v24;
  int v25;
  BOOL v26;
  int v27;
  Swift::Int v28;
  void *v29;
  Swift::Int v30;
  Swift::Int v31;
  char v32;
  char v33;
  Swift::String v34;
  int v35;
  int v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  Swift::Int v44;
  char v45;
  int v46;
  Swift::Int v47;
  Swift::Int v48;
  char v49;
  Swift::Int v50;
  int v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  Swift::Int v62;
  Swift::Int v63;
  Swift::Int v64;
  char v65;
  Swift::String v66;
  Swift::Int v67;
  int v68;
  int v69;
  uint64_t v70;
  _BYTE v71[40];
  _BYTE v72[40];
  uint64_t v73;
  void *v74;
  uint64_t v75;
  void *v76;
  char v77;

  v2 = v1;
  sub_1A56D08B0((uint64_t)a1, (uint64_t)v72);
  sub_1A56D08B0((uint64_t)v72, (uint64_t)&v73);
  v4 = v73;
  if ((v77 & 1) == 0)
  {
LABEL_15:
    v29 = v74;
    v30 = *(unsigned int *)(v1 + 20);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A56814E0(v4, (unint64_t)v29, v1 + 8, v30);
    v28 = v31;
    v33 = v32;
    sub_1A56E5214((uint64_t)v72);
    if ((v33 & 1) != 0)
    {
      v34._countAndFlagsBits = v4;
      v34._object = v29;
      v28 = ByteBuffer._setStringSlowpath(_:at:)(v34, v30);
    }
    v35 = *(_DWORD *)(v1 + 20);
    v26 = __CFADD__(v35, (_DWORD)v28);
    v36 = v35 + v28;
    if (!v26)
    {
      *(_DWORD *)(v1 + 20) = v36;
      goto LABEL_19;
    }
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v5 = v74;
  v70 = v75;
  v6 = v76;
  v7 = *(unsigned int *)(v1 + 20);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A56814E0(v4, (unint64_t)v5, v1 + 8, v7);
  v9 = v8;
  v11 = v10;
  swift_bridgeObjectRelease();
  if ((v11 & 1) != 0)
  {
    v12._countAndFlagsBits = v4;
    v12._object = v5;
    v9 = ByteBuffer._setStringSlowpath(_:at:)(v12, v7);
  }
  v13 = *(_DWORD *)(v1 + 20);
  v14 = (v13 + v9);
  if (__CFADD__(v13, (_DWORD)v9))
  {
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  *(_DWORD *)(v1 + 20) = v14;
  OUTLINED_FUNCTION_114(45, 0xE100000000000000, v1 + 8);
  if ((v16 & 1) != 0)
  {
    v17._countAndFlagsBits = 45;
    v17._object = (void *)0xE100000000000000;
    v15 = ByteBuffer._setStringSlowpath(_:at:)(v17, v14);
  }
  v18 = *(_DWORD *)(v1 + 20);
  v19 = (v18 + v15);
  if (__CFADD__(v18, (_DWORD)v15))
    goto LABEL_38;
  *(_DWORD *)(v1 + 20) = v19;
  v4 = v9 + v15;
  if (__OFADD__(v9, v15))
  {
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_114(v70, (unint64_t)v6, v1 + 8);
  v21 = v20;
  v23 = v22;
  swift_bridgeObjectRelease();
  if ((v23 & 1) != 0)
  {
    v24._countAndFlagsBits = v70;
    v24._object = v6;
    v21 = ByteBuffer._setStringSlowpath(_:at:)(v24, v19);
  }
  v25 = *(_DWORD *)(v1 + 20);
  v26 = __CFADD__(v25, (_DWORD)v21);
  v27 = v25 + v21;
  if (v26)
    goto LABEL_40;
  *(_DWORD *)(v1 + 20) = v27;
  v28 = v4 + v21;
  if (__OFADD__(v4, v21))
  {
    __break(1u);
    goto LABEL_15;
  }
LABEL_19:
  v37 = a1[7];
  if (HIBYTE(v37) == 255)
    return;
  v39 = a1[5];
  v38 = a1[6];
  OUTLINED_FUNCTION_0_79();
  sub_1A56667D4(v40, v41, v42, v43);
  OUTLINED_FUNCTION_3_41(32);
  if ((v45 & 1) != 0)
    v44 = OUTLINED_FUNCTION_4_35(32);
  v46 = *(_DWORD *)(v1 + 20);
  if (__CFADD__(v46, (_DWORD)v44))
    goto LABEL_42;
  *(_DWORD *)(v1 + 20) = v46 + v44;
  v47 = v28 + v44;
  if (__OFADD__(v28, v44))
  {
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  OUTLINED_FUNCTION_3_41(40);
  if ((v49 & 1) != 0)
    v48 = OUTLINED_FUNCTION_4_35(40);
  v50 = v48;
  v51 = *(_DWORD *)(v1 + 20);
  v26 = __CFADD__(v51, (_DWORD)v48);
  v52 = v51 + v48;
  if (v26)
    goto LABEL_44;
  *(_DWORD *)(v1 + 20) = v52;
  if ((v37 & 0x100000000000000) != 0)
  {
    sub_1A5660268(v39, 0, 0xE000000000000000, 32, 0xE100000000000000, 0);
    v54 = v53;
  }
  else
  {
    ByteBufferView.init(_:)(v39, v38, v37 & 0xFFFFFFFFFFFFFFLL, (uint64_t)v71);
    OUTLINED_FUNCTION_0_79();
    sub_1A5666818(v55, v56, v57);
    OUTLINED_FUNCTION_0_79();
    sub_1A56667D4(v58, v59, v60, 0);
    sub_1A56BA79C((uint64_t)v71);
    v54 = v61;
    sub_1A553E5DC((uint64_t)v71);
    OUTLINED_FUNCTION_1_60();
  }
  v62 = v50 + v54;
  if (__OFADD__(v50, v54))
    goto LABEL_45;
  v63 = *(unsigned int *)(v2 + 20);
  OUTLINED_FUNCTION_114(41, 0xE100000000000000, v2 + 8);
  if ((v65 & 1) != 0)
  {
    v66._countAndFlagsBits = 41;
    v66._object = (void *)0xE100000000000000;
    v64 = ByteBuffer._setStringSlowpath(_:at:)(v66, v63);
  }
  v67 = v64;
  OUTLINED_FUNCTION_1_60();
  v68 = *(_DWORD *)(v2 + 20);
  v26 = __CFADD__(v68, (_DWORD)v67);
  v69 = v68 + v67;
  if (v26)
    goto LABEL_46;
  *(_DWORD *)(v2 + 20) = v69;
  if (__OFADD__(v62, v67))
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  if (__OFADD__(v47, v62 + v67))
LABEL_48:
    __break(1u);
}

uint64_t OptionExtensionKind.hash(into:)()
{
  uint64_t v0;
  uint64_t v2;
  char v3;

  sub_1A56D08B0(v0, (uint64_t)&v2);
  if ((v3 & 1) != 0)
  {
    sub_1A594CE88();
    OUTLINED_FUNCTION_5_33();
    OUTLINED_FUNCTION_0_79();
  }
  else
  {
    sub_1A594CE88();
  }
  return sub_1A594B1D8();
}

uint64_t static OptionExtensionKind.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  BOOL v10;
  char v11;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  _QWORD v19[4];
  char v20;

  sub_1A56D08B0(a1, (uint64_t)v19);
  v3 = v19[0];
  v4 = v19[1];
  if ((v20 & 1) != 0)
  {
    v5 = v19[2];
    v6 = v19[3];
    sub_1A56D08B0(a2, (uint64_t)&v14);
    if (v18 == 1)
    {
      v7 = v16;
      v8 = v17;
      v9 = v3 == v14 && v4 == v15;
      if (v9 || (OUTLINED_FUNCTION_2_50() & 1) != 0)
      {
        v10 = v5 == v7 && v6 == v8;
        if (v10 || (OUTLINED_FUNCTION_0_79(), (sub_1A594CD38() & 1) != 0))
        {
LABEL_21:
          v11 = 1;
          return v11 & 1;
        }
      }
    }
    goto LABEL_15;
  }
  sub_1A56D08B0(a2, (uint64_t)&v14);
  if ((v18 & 1) != 0)
  {
LABEL_15:
    v11 = 0;
    return v11 & 1;
  }
  if (v3 == v14 && v4 == v15)
    goto LABEL_21;
  v11 = OUTLINED_FUNCTION_2_50();
  return v11 & 1;
}

uint64_t OptionExtensionKind.hashValue.getter()
{
  uint64_t v0;
  uint64_t v2;
  char v3;

  sub_1A594CE64();
  sub_1A56D08B0(v0, (uint64_t)&v2);
  if ((v3 & 1) != 0)
  {
    sub_1A594CE88();
    OUTLINED_FUNCTION_5_33();
    OUTLINED_FUNCTION_0_79();
  }
  else
  {
    sub_1A594CE88();
  }
  sub_1A594B1D8();
  return sub_1A594CED0();
}

uint64_t sub_1A56E4EAC()
{
  uint64_t v0;
  _BYTE v2[40];

  sub_1A56D08B0(v0, (uint64_t)v2);
  return OptionExtensionKind.hashValue.getter();
}

uint64_t sub_1A56E4EE0()
{
  uint64_t v0;
  _BYTE v2[40];

  sub_1A56D08B0(v0, (uint64_t)v2);
  return OptionExtensionKind.hash(into:)();
}

uint64_t sub_1A56E4F1C()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 32);
  sub_1A594CE64();
  sub_1A594CE88();
  if ((v1 & 1) != 0)
    sub_1A594B1D8();
  sub_1A594B1D8();
  return sub_1A594CED0();
}

unint64_t sub_1A56E4FB8()
{
  unint64_t result;

  result = qword_1EE7A9B78;
  if (!qword_1EE7A9B78)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for OptionExtensionKind, &type metadata for OptionExtensionKind);
    atomic_store(result, (unint64_t *)&qword_1EE7A9B78);
  }
  return result;
}

uint64_t sub_1A56E4FF4(uint64_t a1, uint64_t a2)
{
  _BYTE v4[40];
  _BYTE v5[40];

  sub_1A56D08B0(a1, (uint64_t)v4);
  sub_1A56D08B0(a2, (uint64_t)v5);
  return static OptionExtensionKind.__derived_enum_equals(_:_:)((uint64_t)v4, (uint64_t)v5) & 1;
}

uint64_t destroy for OptionExtensionKind(uint64_t a1)
{
  return sub_1A5666868(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for OptionExtensionKind(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1A56667EC(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for OptionExtensionKind(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1A56667EC(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  sub_1A5666868(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for OptionExtensionKind(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int128 v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_BYTE *)(a1 + 32);
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  *(_BYTE *)(a1 + 32) = v3;
  sub_1A5666868(v4, v6, v5, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for OptionExtensionKind(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 33))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 32);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OptionExtensionKind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A56E51F0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_1A56E51F8(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for OptionExtensionKind()
{
  return &type metadata for OptionExtensionKind;
}

uint64_t sub_1A56E5214(uint64_t a1)
{
  sub_1A5666868(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  return a1;
}

uint64_t OUTLINED_FUNCTION_1_60()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  return sub_1A56668A4(v2, v0, v1);
}

uint64_t OUTLINED_FUNCTION_2_50()
{
  return sub_1A594CD38();
}

void OUTLINED_FUNCTION_3_41(uint64_t a1)
{
  Swift::UInt32 v1;
  uint64_t v2;

  sub_1A56814E0(a1, 0xE100000000000000, v2, v1);
}

Swift::Int OUTLINED_FUNCTION_4_35(uint64_t a1)
{
  Swift::Int v1;
  unint64_t v2;

  v2 = 0xE100000000000000;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v1);
}

uint64_t OUTLINED_FUNCTION_5_33()
{
  return sub_1A594B1D8();
}

uint64_t OptionValueComp.hash(into:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  unsigned int v4;
  unint64_t v5;
  uint64_t result;

  if ((a4 & 0x100000000000000) != 0)
  {
    sub_1A594CE88();
    return sub_1A5694FA8();
  }
  else
  {
    v4 = a3;
    v5 = HIDWORD(a3);
    sub_1A594CE88();
    result = swift_beginAccess();
    if (v5 < v4)
      __break(1u);
    else
      return sub_1A594CE70();
  }
  return result;
}

void static OptionValueComp.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  if ((a3 & 0x100000000000000) == 0)
  {
    if ((a6 & 0x100000000000000) != 0)
      return;
    if (HIDWORD(a2) < a2)
    {
      __break(1u);
    }
    else if (HIDWORD(a5) >= a5)
    {
      if (HIDWORD(a2) - (_DWORD)a2 == HIDWORD(a5) - (_DWORD)a5
        && ((a3 & 0xFFFFFFFFFFFFFFLL) != (a6 & 0xFFFFFFFFFFFFFFLL) || a1 != a4))
      {
        sub_1A56667D4(a4, a5, a6, 0);
        v7 = OUTLINED_FUNCTION_2_47();
        sub_1A56667D4(v7, v8, v9, v10);
        sub_1A566B918();
        v11 = OUTLINED_FUNCTION_2_47();
        sub_1A56667E0(v11, v12, v13, v14);
      }
      return;
    }
    __break(1u);
    return;
  }
  if ((a6 & 0x100000000000000) != 0)
    sub_1A568AAF8();
}

uint64_t OptionValueComp.hashValue.getter(uint64_t a1, unint64_t a2, unint64_t a3)
{
  _BYTE v7[72];

  sub_1A594CE64();
  OptionValueComp.hash(into:)((uint64_t)v7, a1, a2, a3 & 0xFFFFFFFFFFFFFFLL | ((HIBYTE(a3) & 1) << 56));
  return sub_1A594CED0();
}

uint64_t sub_1A56E54D0()
{
  uint64_t v0;

  return OptionValueComp.hashValue.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(unsigned int *)(v0 + 16) | ((unint64_t)(*(unsigned __int16 *)(v0 + 20) | (*(unsigned __int8 *)(v0 + 22) << 16)) << 32) | ((unint64_t)*(unsigned __int8 *)(v0 + 23) << 56));
}

uint64_t sub_1A56E5504(uint64_t a1)
{
  uint64_t v1;

  return OptionValueComp.hash(into:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(unsigned int *)(v1 + 16) | ((unint64_t)(*(unsigned __int16 *)(v1 + 20) | (*(unsigned __int8 *)(v1 + 22) << 16)) << 32) | ((unint64_t)*(unsigned __int8 *)(v1 + 23) << 56));
}

uint64_t sub_1A56E5538()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unsigned __int8 v4;
  _BYTE v6[72];

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(unsigned int *)(v0 + 16) | ((unint64_t)(*(unsigned __int16 *)(v0 + 20) | (*(unsigned __int8 *)(v0 + 22) << 16)) << 32);
  v4 = *(_BYTE *)(v0 + 23);
  sub_1A594CE64();
  OptionValueComp.hash(into:)((uint64_t)v6, v1, v2, v3 | ((unint64_t)v4 << 56));
  return sub_1A594CED0();
}

void sub_1A56E55A8(uint64_t a1, uint64_t a2)
{
  static OptionValueComp.__derived_enum_equals(_:_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned int *)(a1 + 16) | ((unint64_t)(*(unsigned __int16 *)(a1 + 20) | (*(unsigned __int8 *)(a1 + 22) << 16)) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 23) << 56), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(unsigned int *)(a2 + 16) | ((unint64_t)(*(unsigned __int16 *)(a2 + 20) | (*(unsigned __int8 *)(a2 + 22) << 16)) << 32) | ((unint64_t)*(unsigned __int8 *)(a2 + 23) << 56));
}

void sub_1A56E562C(uint64_t a1@<X8>)
{
  uint64_t v2;
  int v3;
  char v4;
  __int16 v5;
  char v6;

  OptionValueComp.init(arrayLiteral:)();
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 22) = v4;
  *(_WORD *)(a1 + 20) = v5;
  *(_BYTE *)(a1 + 23) = v6 & 1;
}

unint64_t sub_1A56E5670()
{
  unint64_t result;

  result = qword_1EE7A9B80;
  if (!qword_1EE7A9B80)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for OptionValueComp, &type metadata for OptionValueComp);
    atomic_store(result, (unint64_t *)&qword_1EE7A9B80);
  }
  return result;
}

ValueMetadata *type metadata accessor for OptionValueComp()
{
  return &type metadata for OptionValueComp;
}

uint64_t static PartialRange.__derived_enum_equals(_:_:)(uint64_t a1, int a2, uint64_t a3, char a4)
{
  return (((a4 & 1) == 0) ^ a2) & (a3 == a1);
}

void sub_1A56E56D8(unint64_t a1, char a2)
{
  uint64_t v2;
  Swift::Int v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::Int v7;
  char v8;
  Swift::String v9;
  int v10;
  BOOL v11;
  int v12;
  Swift::Int v13;
  uint64_t v14;
  Swift::Int v15;
  char v16;
  Swift::Int v17;
  int v18;
  int v19;
  uint64_t v20;
  Swift::Int v21;
  Swift::Int v22;
  char v23;
  int v24;
  int v25;
  Swift::Int v26;
  uint64_t v27;

  LODWORD(v3) = a1;
  v4 = HIDWORD(a1);
  if ((a2 & 1) != 0)
    goto LABEL_9;
  OUTLINED_FUNCTION_0_80(a1);
  v6 = v5;
  v3 = *(unsigned int *)(v2 + 20);
  sub_1A56814E0(58, 0xE100000000000000, v2 + 8, *(_DWORD *)(v2 + 20));
  if ((v8 & 1) != 0)
  {
    v9._countAndFlagsBits = 58;
    v9._object = (void *)0xE100000000000000;
    v7 = ByteBuffer._setStringSlowpath(_:at:)(v9, v3);
  }
  v10 = *(_DWORD *)(v2 + 20);
  v11 = __CFADD__(v10, (_DWORD)v7);
  v12 = v10 + v7;
  if (v11)
  {
    __break(1u);
    goto LABEL_20;
  }
  *(_DWORD *)(v2 + 20) = v12;
  v13 = v6 + v7;
  if (__OFADD__(v6, v7))
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  OUTLINED_FUNCTION_0_80(v4);
  if (!__OFADD__(v13, v14))
    return;
  __break(1u);
LABEL_9:
  sub_1A56814E0(45, 0xE100000000000000, v2 + 8, *(_DWORD *)(v2 + 20));
  if ((v16 & 1) != 0)
    v15 = OUTLINED_FUNCTION_2_49(45, 0xE100000000000000);
  v17 = v15;
  v18 = *(_DWORD *)(v2 + 20);
  v11 = __CFADD__(v18, (_DWORD)v15);
  v19 = v18 + v15;
  if (v11)
    goto LABEL_21;
  *(_DWORD *)(v2 + 20) = v19;
  OUTLINED_FUNCTION_0_80(v3);
  v21 = v17 + v20;
  if (__OFADD__(v17, v20))
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_1A56814E0(11578, 0xE200000000000000, v2 + 8, *(_DWORD *)(v2 + 20));
  if ((v23 & 1) != 0)
    v22 = OUTLINED_FUNCTION_2_49(11578, 0xE200000000000000);
  v24 = *(_DWORD *)(v2 + 20);
  v11 = __CFADD__(v24, (_DWORD)v22);
  v25 = v24 + v22;
  if (v11)
    goto LABEL_23;
  *(_DWORD *)(v2 + 20) = v25;
  v26 = v21 + v22;
  if (__OFADD__(v21, v22))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  OUTLINED_FUNCTION_0_80(v4);
  if (__OFADD__(v26, v27))
LABEL_25:
    __break(1u);
}

uint64_t PartialRange.hash(into:)()
{
  sub_1A594CE88();
  sub_1A594CEAC();
  return sub_1A594CEAC();
}

uint64_t PartialRange.hashValue.getter()
{
  sub_1A594CE64();
  sub_1A594CE88();
  sub_1A594CEAC();
  sub_1A594CEAC();
  return sub_1A594CED0();
}

uint64_t sub_1A56E58FC()
{
  return PartialRange.hashValue.getter();
}

uint64_t sub_1A56E5908()
{
  return PartialRange.hash(into:)();
}

uint64_t sub_1A56E5914()
{
  sub_1A594CE64();
  sub_1A594CE88();
  sub_1A594CEAC();
  sub_1A594CEAC();
  return sub_1A594CED0();
}

uint64_t sub_1A56E5978(uint64_t a1, uint64_t a2)
{
  return static PartialRange.__derived_enum_equals(_:_:)(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8), *(_QWORD *)a2, *(_BYTE *)(a2 + 8));
}

unint64_t sub_1A56E5998()
{
  unint64_t result;

  result = qword_1EE7A9B88;
  if (!qword_1EE7A9B88)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for PartialRange, &type metadata for PartialRange);
    atomic_store(result, (unint64_t *)&qword_1EE7A9B88);
  }
  return result;
}

uint64_t __swift_memcpy9_4_0(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for PartialRange(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for PartialRange()
{
  return &type metadata for PartialRange;
}

void OUTLINED_FUNCTION_0_80(int a1)
{
  sub_1A570309C(a1);
}

uint64_t SearchReturnData.Partial.range.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)v2 = result;
  *(_BYTE *)(v2 + 8) = a2 & 1;
  return result;
}

double (*SearchReturnData.Partial.range.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SearchReturnData.Partial.messageNumbers.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1A54E4334(a3, a4, SBYTE4(a4));
  return a3;
}

uint64_t SearchReturnData.Partial.messageNumbers.setter(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  int v3;
  unint64_t v5;
  uint64_t result;

  v3 = a2;
  v5 = HIDWORD(a2);
  result = sub_1A54E3458(*(_QWORD *)(v2 + 16), *(unsigned int *)(v2 + 24), *(_BYTE *)(v2 + 28));
  *(_QWORD *)(v2 + 16) = a1;
  *(_DWORD *)(v2 + 24) = v3;
  *(_BYTE *)(v2 + 28) = v5;
  return result;
}

double (*SearchReturnData.Partial.messageNumbers.modify())(_QWORD)
{
  return nullsub_1;
}

void SearchReturnData.Partial.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1A594CE88();
  sub_1A594CEAC();
  sub_1A594CEAC();
  sub_1A56B6298(a1, a4, a5 & 0xFFFFFFFFFFLL);
}

void static SearchReturnData.Partial.__derived_struct_equals(_:_:)(uint64_t a1, char a2, int32x2_t *a3, uint64_t a4, uint64_t a5, char a6, int32x2_t *a7, uint64_t a8)
{
  if ((a2 & 1) != 0)
  {
    if ((a6 & 1) == 0)
      return;
  }
  else if ((a6 & 1) != 0)
  {
    return;
  }
  if (a5 == a1)
    sub_1A56B614C(a3, a4 & 0xFFFFFFFFFFLL, a7, a8 & 0xFFFFFFFFFFLL);
}

uint64_t SearchReturnData.Partial.hashValue.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _BYTE v7[72];

  sub_1A594CE64();
  sub_1A594CE88();
  sub_1A594CEAC();
  sub_1A594CEAC();
  sub_1A56B6298((uint64_t)v7, a3, a4 & 0xFFFFFFFFFFLL);
  return sub_1A594CED0();
}

uint64_t sub_1A56E5C18()
{
  uint64_t v0;

  return SearchReturnData.Partial.hashValue.getter(*(_QWORD *)v0, *(unsigned __int8 *)(v0 + 8), *(_QWORD *)(v0 + 16), *(unsigned int *)(v0 + 24) | ((unint64_t)*(unsigned __int8 *)(v0 + 28) << 32));
}

void sub_1A56E5C3C(uint64_t a1)
{
  uint64_t v1;

  SearchReturnData.Partial.hash(into:)(a1, *(_QWORD *)v1, *(unsigned __int8 *)(v1 + 8), *(_QWORD *)(v1 + 16), *(unsigned int *)(v1 + 24) | ((unint64_t)*(unsigned __int8 *)(v1 + 28) << 32));
}

uint64_t sub_1A56E5C60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[72];

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(unsigned int *)(v0 + 24);
  v3 = *(unsigned __int8 *)(v0 + 28);
  sub_1A594CE64();
  sub_1A594CE88();
  sub_1A594CEAC();
  sub_1A594CEAC();
  sub_1A56B6298((uint64_t)v5, v1, v2 | (v3 << 32));
  return sub_1A594CED0();
}

void sub_1A56E5CF0(uint64_t a1, uint64_t a2)
{
  static SearchReturnData.Partial.__derived_struct_equals(_:_:)(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), *(int32x2_t **)(a1 + 16), *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int8 *)(a1 + 28) << 32), *(_QWORD *)a2, *(_BYTE *)(a2 + 8), *(int32x2_t **)(a2 + 16), *(unsigned int *)(a2 + 24) | ((unint64_t)*(unsigned __int8 *)(a2 + 28) << 32));
}

unint64_t sub_1A56E5D38()
{
  unint64_t result;

  result = qword_1EE7A9B90;
  if (!qword_1EE7A9B90)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for SearchReturnData.Partial, &type metadata for SearchReturnData.Partial);
    atomic_store(result, (unint64_t *)&qword_1EE7A9B90);
  }
  return result;
}

uint64_t _s7PartialVwxx(uint64_t a1)
{
  return sub_1A54E3458(*(_QWORD *)(a1 + 16), *(unsigned int *)(a1 + 24), *(_BYTE *)(a1 + 28));
}

uint64_t _s7PartialVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned int v4;
  char v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_DWORD *)(a2 + 24);
  v5 = *(_BYTE *)(a2 + 28);
  sub_1A54E4334(v3, v4, v5);
  *(_QWORD *)(a1 + 16) = v3;
  *(_DWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 28) = v5;
  return a1;
}

uint64_t _s7PartialVwca(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v3;
  v4 = a2[2];
  v5 = *((_DWORD *)a2 + 6);
  v6 = *((_BYTE *)a2 + 28);
  sub_1A54E4334(v4, v5, v6);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(unsigned int *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_DWORD *)(a1 + 24) = v5;
  v9 = *(_BYTE *)(a1 + 28);
  *(_BYTE *)(a1 + 28) = v6;
  sub_1A54E3458(v7, v8, v9);
  return a1;
}

__n128 __swift_memcpy29_8_0(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s7PartialVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_DWORD *)(a2 + 24);
  v5 = *(_BYTE *)(a2 + 28);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(unsigned int *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v3;
  *(_DWORD *)(a1 + 24) = v4;
  v8 = *(_BYTE *)(a1 + 28);
  *(_BYTE *)(a1 + 28) = v5;
  sub_1A54E3458(v6, v7, v8);
  return a1;
}

uint64_t _s7PartialVwet(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 29))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s7PartialVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 28) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 29) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 29) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchReturnData.Partial()
{
  return &type metadata for SearchReturnData.Partial;
}

uint64_t QuotaLimit.resourceName.getter(uint64_t a1)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

void QuotaLimit.resourceName.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_8_1();
}

double (*QuotaLimit.resourceName.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t QuotaLimit.limit.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t QuotaLimit.limit.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

double (*QuotaLimit.limit.modify())(_QWORD)
{
  return nullsub_1;
}

void QuotaLimit.hash(into:)()
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_36_6();
  swift_bridgeObjectRelease();
  sub_1A594CE88();
  OUTLINED_FUNCTION_8_1();
}

BOOL static QuotaLimit.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v9;
  _BOOL8 result;

  if (a1 == a4 && a2 == a5)
    return a3 == a6;
  v9 = sub_1A594CD38();
  result = 0;
  if ((v9 & 1) != 0)
    return a3 == a6;
  return result;
}

uint64_t QuotaLimit.hashValue.getter()
{
  sub_1A594CE64();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_36_6();
  swift_bridgeObjectRelease();
  sub_1A594CE88();
  return sub_1A594CED0();
}

uint64_t sub_1A56E60F8()
{
  return QuotaLimit.hashValue.getter();
}

void sub_1A56E6104()
{
  QuotaLimit.hash(into:)();
}

unint64_t sub_1A56E6114()
{
  unint64_t result;

  result = qword_1EE7A9B98;
  if (!qword_1EE7A9B98)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for QuotaLimit, &type metadata for QuotaLimit);
    atomic_store(result, (unint64_t *)&qword_1EE7A9B98);
  }
  return result;
}

BOOL sub_1A56E6150(uint64_t *a1, uint64_t *a2)
{
  return static QuotaLimit.__derived_struct_equals(_:_:)(*a1, a1[1], a1[2], *a2, a2[1], a2[2]);
}

_QWORD *sub_1A56E6170(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

ValueMetadata *type metadata accessor for QuotaLimit()
{
  return &type metadata for QuotaLimit;
}

uint64_t QuotaResource.resourceName.getter(uint64_t a1)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t QuotaResource.resourceName.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

double (*QuotaResource.resourceName.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t QuotaResource.usage.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t QuotaResource.usage.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

double (*QuotaResource.usage.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t QuotaResource.limit.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a4;
}

uint64_t QuotaResource.limit.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = result;
  return result;
}

double (*QuotaResource.limit.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t QuotaResource.hash(into:)()
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  sub_1A594CE88();
  return sub_1A594CE88();
}

BOOL static QuotaResource.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v13;
  _BOOL8 result;

  if (a1 == a5 && a2 == a6)
  {
    if (a3 != a7)
      return 0;
    return a4 == a8;
  }
  v13 = sub_1A594CD38();
  result = 0;
  if ((v13 & 1) != 0 && a3 == a7)
    return a4 == a8;
  return result;
}

uint64_t QuotaResource.hashValue.getter()
{
  sub_1A594CE64();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  sub_1A594CE88();
  sub_1A594CE88();
  return sub_1A594CED0();
}

uint64_t sub_1A56E63DC()
{
  return QuotaResource.hashValue.getter();
}

uint64_t sub_1A56E63E8()
{
  return QuotaResource.hash(into:)();
}

uint64_t sub_1A56E63F4()
{
  sub_1A594CE64();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  sub_1A594CE88();
  sub_1A594CE88();
  return sub_1A594CED0();
}

unint64_t sub_1A56E6478()
{
  unint64_t result;

  result = qword_1EE7A9BA0;
  if (!qword_1EE7A9BA0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for QuotaResource, &type metadata for QuotaResource);
    atomic_store(result, (unint64_t *)&qword_1EE7A9BA0);
  }
  return result;
}

BOOL sub_1A56E64B4(uint64_t *a1, uint64_t *a2)
{
  return static QuotaResource.__derived_struct_equals(_:_:)(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

uint64_t initializeWithCopy for QuotaResource(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

_QWORD *assignWithCopy for QuotaResource(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for QuotaResource(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for QuotaResource()
{
  return &type metadata for QuotaResource;
}

void sub_1A56E65AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  Swift::Int v10;
  Swift::Int v11;
  char v12;
  Swift::String v13;
  int v14;
  uint64_t v15;
  Swift::Int v16;
  Swift::Int v17;
  Swift::Int v18;
  char v19;
  char v20;
  Swift::String v21;
  int v22;
  BOOL v23;
  int v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  Swift::Int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v31 = MEMORY[0x1E0DEE9D8];
    sub_1A56836B4(0, v3, 0);
    v5 = v31;
    v6 = a2 + 8;
    v7 = a1 + 56;
    v30 = a2 + 8;
    v27 = a2;
    while (1)
    {
      v29 = v5;
      v8 = *(_QWORD *)(v7 - 24);
      v9 = *(void **)(v7 - 16);
      v10 = *(unsigned int *)(a2 + 20);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A56814E0(v8, (unint64_t)v9, v6, v10);
      if ((v12 & 1) != 0)
      {
        v13._countAndFlagsBits = v8;
        v13._object = v9;
        v11 = ByteBuffer._setStringSlowpath(_:at:)(v13, v10);
      }
      v14 = *(_DWORD *)(a2 + 20);
      v15 = a2;
      v16 = (v14 + v11);
      if (__CFADD__(v14, (_DWORD)v11))
        break;
      v28 = v11;
      *(_DWORD *)(v15 + 20) = v16;
      sub_1A594CC9C();
      sub_1A594B5F8();
      swift_bridgeObjectRelease();
      sub_1A594B5F8();
      sub_1A594CC9C();
      sub_1A594B5F8();
      swift_bridgeObjectRelease();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A56814E0(32, 0xE100000000000000, v30, v16);
      v18 = v17;
      v20 = v19;
      swift_bridgeObjectRelease();
      if ((v20 & 1) != 0)
      {
        v21._countAndFlagsBits = 32;
        v21._object = (void *)0xE100000000000000;
        v18 = ByteBuffer._setStringSlowpath(_:at:)(v21, v16);
      }
      swift_bridgeObjectRelease();
      a2 = v27;
      v22 = *(_DWORD *)(v27 + 20);
      v23 = __CFADD__(v22, (_DWORD)v18);
      v24 = v22 + v18;
      if (v23)
        goto LABEL_15;
      *(_DWORD *)(v27 + 20) = v24;
      swift_bridgeObjectRelease();
      if (__OFADD__(v28, v18))
        goto LABEL_16;
      v5 = v29;
      v26 = *(_QWORD *)(v29 + 16);
      v25 = *(_QWORD *)(v29 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_1A56836B4(v25 > 1, v26 + 1, 1);
        v5 = v29;
      }
      v7 += 32;
      *(_QWORD *)(v5 + 16) = v26 + 1;
      *(_QWORD *)(v5 + 8 * v26 + 32) = v28 + v18;
      --v3;
      v6 = v30;
      if (!v3)
        return;
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
  }
}

void sub_1A56E6800(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  Swift::UInt32 v11;
  uint64_t v12;
  unint64_t v13;
  Swift::Int v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  Swift::Int v18;
  int v19;
  BOOL v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  Swift::Int v24;
  Swift::Int v25;
  char v26;
  int v27;
  int v28;
  Swift::Int v29;
  uint64_t v30;
  _BYTE v31[40];

  v5 = v4;
  v10 = v4 + 8;
  v11 = *(_DWORD *)(v4 + 20);
  v12 = OUTLINED_FUNCTION_0_81();
  sub_1A56814E0(v12, v13, v10, v11);
  if ((v15 & 1) != 0)
  {
    v16 = OUTLINED_FUNCTION_0_81();
    v14 = OUTLINED_FUNCTION_2_49(v16, v17);
  }
  v18 = v14;
  v19 = *(_DWORD *)(v5 + 20);
  v20 = __CFADD__(v19, (_DWORD)v14);
  v21 = v19 + v14;
  if (v20)
  {
    __break(1u);
    goto LABEL_12;
  }
  *(_DWORD *)(v5 + 20) = v21;
  ByteBufferView.init(_:)(a1, a2, a3 & 0xFFFFFFFFFFFFFFLL, (uint64_t)v31);
  swift_retain();
  sub_1A56BA79C((uint64_t)v31);
  v23 = v22;
  sub_1A553E5DC((uint64_t)v31);
  v24 = v18 + v23;
  if (__OFADD__(v18, v23))
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  sub_1A56814E0(32, 0xE100000000000000, v10, *(_DWORD *)(v5 + 20));
  if ((v26 & 1) != 0)
    v25 = OUTLINED_FUNCTION_2_49(32, 0xE100000000000000);
  v27 = *(_DWORD *)(v5 + 20);
  v20 = __CFADD__(v27, (_DWORD)v25);
  v28 = v27 + v25;
  if (v20)
    goto LABEL_13;
  *(_DWORD *)(v5 + 20) = v28;
  v29 = v24 + v25;
  if (__OFADD__(v24, v25))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1A56E6934(a4);
  if (__OFADD__(v29, v30))
LABEL_15:
    __break(1u);
}

void sub_1A56E6934(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  Swift::Int v5;
  Swift::Int v6;
  char v7;
  Swift::String v8;
  Swift::Int v9;
  int v10;
  BOOL v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  BOOL v18;
  Swift::Int v19;
  Swift::Int v20;
  Swift::Int v21;
  char v22;
  Swift::String v23;
  int v24;
  int v25;

  v2 = v1;
  v4 = v1 + 8;
  v5 = *(unsigned int *)(v2 + 20);
  sub_1A56814E0(40, 0xE100000000000000, v4, *(_DWORD *)(v2 + 20));
  if ((v7 & 1) != 0)
  {
    v8._countAndFlagsBits = 40;
    v8._object = (void *)0xE100000000000000;
    v6 = ByteBuffer._setStringSlowpath(_:at:)(v8, v5);
  }
  v9 = v6;
  v10 = *(_DWORD *)(v2 + 20);
  v11 = __CFADD__(v10, (_DWORD)v6);
  v12 = v10 + v6;
  if (v11)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  *(_DWORD *)(v2 + 20) = v12;
  sub_1A56E65AC(a1, v2);
  v14 = *(_QWORD *)(v13 + 16);
  if (v14)
  {
    v15 = 0;
    v16 = (uint64_t *)(v13 + 32);
    while (1)
    {
      v17 = *v16++;
      v18 = __OFADD__(v15, v17);
      v15 += v17;
      if (v18)
        break;
      if (!--v14)
        goto LABEL_10;
    }
    __break(1u);
    goto LABEL_17;
  }
  v15 = 0;
LABEL_10:
  swift_bridgeObjectRelease();
  v18 = __OFADD__(v9, v15);
  v19 = v9 + v15;
  if (v18)
    goto LABEL_18;
  v20 = *(unsigned int *)(v2 + 20);
  sub_1A56814E0(41, 0xE100000000000000, v4, *(_DWORD *)(v2 + 20));
  if ((v22 & 1) != 0)
  {
    v23._countAndFlagsBits = 41;
    v23._object = (void *)0xE100000000000000;
    v21 = ByteBuffer._setStringSlowpath(_:at:)(v23, v20);
  }
  v24 = *(_DWORD *)(v2 + 20);
  v11 = __CFADD__(v24, (_DWORD)v21);
  v25 = v24 + v21;
  if (v11)
    goto LABEL_19;
  *(_DWORD *)(v2 + 20) = v25;
  if (__OFADD__(v19, v21))
LABEL_20:
    __break(1u);
}

uint64_t OUTLINED_FUNCTION_0_81()
{
  return 0x2041544F5551;
}

unint64_t sub_1A56E6A68(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v4;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t result;
  unint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD v13[2];

  if ((a2 & 0x2000000000000000) != 0)
    v4 = HIBYTE(a2) & 0xF;
  else
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v4)
    return swift_bridgeObjectRelease();
  v6 = (a1 >> 59) & 1;
  if ((a2 & 0x1000000000000000) == 0)
    LOBYTE(v6) = 1;
  v7 = 4 << v6;
  v12 = a2 & 0xFFFFFFFFFFFFFFLL;
  v8 = 15;
  while (1)
  {
    result = v8;
    if ((v8 & 0xC) == v7)
      result = sub_1A56C83D0(v8, a1, a2);
    v10 = result >> 16;
    if (result >> 16 >= v4)
      break;
    if ((a2 & 0x1000000000000000) != 0)
    {
      result = sub_1A594B670();
      v11 = result;
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      v13[0] = a1;
      v13[1] = v12;
      v11 = *((_BYTE *)v13 + v10);
    }
    else
    {
      result = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
      if ((a1 & 0x1000000000000000) == 0)
        result = sub_1A594C7D4();
      v11 = *(_BYTE *)(result + v10);
    }
    if ((v8 & 0xC) == v7)
    {
      result = sub_1A56C83D0(v8, a1, a2);
      v8 = result;
      if ((a2 & 0x1000000000000000) == 0)
      {
LABEL_19:
        v8 = (v8 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_24;
      }
    }
    else if ((a2 & 0x1000000000000000) == 0)
    {
      goto LABEL_19;
    }
    if (v4 <= v8 >> 16)
      goto LABEL_27;
    v8 = sub_1A594B64C();
LABEL_24:
    sub_1A5670378(*(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 32), v11);
    if (4 * v4 == v8 >> 14)
      return swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t static QuotaRoot.__derived_struct_equals(_:_:)(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  BOOL v6;

  if (HIDWORD(a2) < a2)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (HIDWORD(a5) < a5)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  result = HIDWORD(a2) - (_DWORD)a2 == HIDWORD(a5) - (_DWORD)a5
        && ((a3 & 0xFFFFFFFFFFFFFFLL) == (a6 & 0xFFFFFFFFFFFFFFLL) ? (v6 = result == a4) : (v6 = 0),
            v6 || (swift_retain(), (sub_1A566B918() & 1) != 0));
  return result;
}

uint64_t QuotaRoot.storage.getter()
{
  return swift_retain();
}

uint64_t QuotaRoot.storage.setter(uint64_t a1, unint64_t a2, unint64_t a3)
{
  uint64_t v3;
  int v4;
  int v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t result;

  v4 = a3;
  v5 = a2;
  v7 = HIDWORD(a2);
  v8 = HIDWORD(a3);
  v9 = HIWORD(a3);
  result = swift_release();
  *(_QWORD *)v3 = a1;
  *(_DWORD *)(v3 + 8) = v5;
  *(_DWORD *)(v3 + 12) = v7;
  *(_DWORD *)(v3 + 16) = v4;
  *(_WORD *)(v3 + 20) = v8;
  *(_BYTE *)(v3 + 22) = v9;
  return result;
}

double (*QuotaRoot.storage.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t QuotaRoot.init(_:)(unint64_t a1, unint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6[2];
  unsigned int v7;
  unsigned __int16 v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;

  if (qword_1EE796BD0 != -1)
    swift_once();
  ByteBufferView.init(_:)(static ByteBufferAllocator.zeroCapacityWithDefaultAllocator, qword_1EE7F9218, dword_1EE7F9220 | ((unint64_t)(unsigned __int16)word_1EE7F9224 << 32) | ((unint64_t)byte_1EE7F9226 << 48), (uint64_t)v6);
  swift_retain();
  sub_1A56E6A68(a1, a2);
  result = v10;
  if (v11 < v10)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (__OFSUB__(v11, v10))
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  result = ByteBuffer.getSlice(at:length:)(v10, v11 - v10, v6[0], v6[1], v7 | ((unint64_t)v8 << 32) | ((unint64_t)v9 << 48));
  if (result)
  {
    v5 = result;
    swift_release();
    return v5;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t QuotaRoot.hash(into:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unsigned int v3;
  unint64_t v4;
  uint64_t result;

  v3 = a3;
  v4 = HIDWORD(a3);
  result = OUTLINED_FUNCTION_176();
  if (v4 >= v3)
    return sub_1A594CE70();
  __break(1u);
  return result;
}

uint64_t QuotaRoot.hashValue.getter(uint64_t a1, unint64_t a2)
{
  unsigned int v2;
  unint64_t v3;
  uint64_t result;

  v2 = a2;
  v3 = HIDWORD(a2);
  sub_1A594CE64();
  result = OUTLINED_FUNCTION_176();
  if (v3 < v2)
  {
    __break(1u);
  }
  else
  {
    sub_1A594CE70();
    return sub_1A594CED0();
  }
  return result;
}

uint64_t sub_1A56E6F48()
{
  uint64_t v0;

  return QuotaRoot.hashValue.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
}

uint64_t sub_1A56E6F64(uint64_t a1)
{
  uint64_t v1;

  return QuotaRoot.hash(into:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8));
}

uint64_t sub_1A56E6F80(uint64_t a1, uint64_t a2)
{
  return static QuotaRoot.__derived_struct_equals(_:_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned __int16 *)(a1 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 22) << 48), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(unsigned int *)(a2 + 16) | ((unint64_t)*(unsigned __int16 *)(a2 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a2 + 22) << 48));
}

uint64_t String.init(_:)(uint64_t a1, unint64_t a2, uint64_t a3)
{
  _BYTE v4[40];

  ByteBufferView.init(_:)(a1, a2, a3 & 0xFFFFFFFFFFFFFFLL, (uint64_t)v4);
  return sub_1A56E6FE8((uint64_t)v4);
}

uint64_t sub_1A56E6FE8(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  unsigned __int8 v15;
  unint64_t v16;
  BOOL v17;
  uint64_t v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  unint64_t v28;
  int v29;
  int v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v34;
  uint64_t v35;
  unsigned int v36;
  int v37;
  uint64_t v38;
  int v39;
  int v40;
  uint64_t v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  unint64_t v46;
  uint64_t v47;
  double (*v48)(_QWORD);
  int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  _QWORD v55[4];
  uint64_t v56;

  v1 = *(_QWORD *)(result + 24);
  v2 = *(_QWORD *)(result + 32);
  if (v2 < v1)
  {
    __break(1u);
    goto LABEL_77;
  }
  if (__OFSUB__(v2, v1))
  {
LABEL_77:
    __break(1u);
    return result;
  }
  v3 = result;
  v54 = *(_QWORD *)(result + 24);
  sub_1A553E5B4(result);
  v4 = *(_QWORD *)v3;
  v6 = *(unsigned int *)(v3 + 8);
  v5 = *(_DWORD *)(v3 + 12);
  v7 = *(unsigned __int16 *)(v3 + 20);
  v51 = v3;
  v8 = *(unsigned __int8 *)(v3 + 22);
  sub_1A569DB30();
  v10 = v9;
  OUTLINED_FUNCTION_176();
  v11 = (_QWORD *)(v4 + 24);
  v12 = v10;
  v13 = v54;
  v14 = 0;
  v15 = 0;
  v16 = v5 - v6;
  v17 = v5 < v6;
  v18 = v8 | (v7 << 8);
  v19 = -65793;
  v20 = -16843009;
  v21 = 1;
  v22 = 49376;
  v23 = 32960;
  v24 = 16843009;
  v25 = -255;
  v26 = v54;
  v52 = v16;
  v53 = (_QWORD *)(v4 + 24);
  while (1)
  {
    LODWORD(v56) = v14;
    BYTE4(v56) = v15;
    if (!v15)
      break;
    if ((v14 & 0x80) == 0)
    {
      v47 = v12;
      sub_1A567FEE8();
      v48 = sub_1A570358C();
      sub_1A5788B14(0);
      ((void (*)(_QWORD *, _QWORD))v48)(v55, 0);
      v25 = -255;
      v24 = 16843009;
      v23 = 32960;
      v22 = 49376;
      v21 = 1;
      v20 = -16843009;
      v19 = -65793;
      v16 = v52;
      v11 = v53;
      v12 = v47;
      v13 = v54;
      v31 = (v14 + 1);
      goto LABEL_51;
    }
LABEL_18:
    if (v26 != v2)
    {
      v32 = v26;
      do
      {
        if (v26 < v13 || v32 >= v2)
        {
          __break(1u);
LABEL_65:
          __break(1u);
LABEL_66:
          __break(1u);
LABEL_67:
          __break(1u);
LABEL_68:
          __break(1u);
LABEL_69:
          __break(1u);
          goto LABEL_70;
        }
        v34 = v32 - v6;
        if (__OFSUB__(v32, v6))
          goto LABEL_65;
        if ((v34 & 0x8000000000000000) != 0)
          goto LABEL_66;
        if (v17)
          goto LABEL_67;
        if (v34 >= v16)
          goto LABEL_68;
        v35 = v32 + 1;
        if (__OFADD__(v32, 1))
          goto LABEL_69;
        v14 = (*(unsigned __int8 *)(*v11 + v18 + v32) << v15) | ((v25 << v15) - 1) & v14;
        v15 += 8;
        if (v15 >= 0x20u)
        {
          v26 = v32 + 1;
          goto LABEL_36;
        }
        ++v32;
      }
      while (v35 != v2);
      v26 = v2;
      if (v15)
        goto LABEL_36;
LABEL_64:
      v55[0] = 0;
      v55[1] = 0xE000000000000000;
      v56 = v12;
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799DE8);
      sub_1A56E7600();
      sub_1A594B520();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_2_51();
      OUTLINED_FUNCTION_2_51();
      return v55[0];
    }
    v26 = v2;
LABEL_36:
    if ((v14 & v22) == v23)
    {
      if ((v14 & 0x1E) == 0)
        goto LABEL_48;
      v36 = 16;
    }
    else if ((v14 & 0xC0C0F0) == 0x8080E0)
    {
      if ((v14 & 0x200F) == 0 || (v14 & 0x200F) == 0x200D)
        goto LABEL_48;
      v36 = 24;
    }
    else
    {
      if ((v14 & 0xC0C0C0F8) != 0x808080F0 || (v14 & 0x3007) == 0 || __rev16(v14 & 0x3007) > 0x400)
      {
LABEL_48:
        v38 = v12;
        sub_1A594CF48();
        OUTLINED_FUNCTION_1_61();
        v25 = v39;
        v12 = v38;
        v13 = v54;
        v37 = 0;
        v36 = 8 * v40;
        goto LABEL_49;
      }
      v36 = 32;
    }
    v37 = 1;
LABEL_49:
    LODWORD(v56) = (unint64_t)v14 >> (v36 & 0x38);
    BYTE4(v56) = v15 - v36;
    if (!v37)
      goto LABEL_75;
    v31 = ((v21 << ((v36 >> 1) & 0x1C) << ((v36 >> 1) & 0x1C)) - 1) & (v14 + v24);
LABEL_51:
    v41 = 4 - (__clz(v31) >> 3);
    v42 = v31 - 1;
    v43 = (((v31 - 257) & 0x1F) << 6) | ((v31 - 257) >> 8) & 0x3F;
    if (v41 == 3)
      v44 = ((v31 + v19) >> 2) & 0xFC0 | ((v31 + v19) >> 16) & 0x3F | (((v31 + v19) & 0xF) << 12);
    else
      v44 = ((v31 + v20) >> 10) & 0xFC0 | ((v31 + v20) >> 24) & 0x3F | ((((v31 + v20) >> 8) & 0x3F) << 12) & 0xFFE3FFFF | (((v31 + v20) & 7) << 18);
    if (v41 == 2)
      v44 = v43;
    if (v41 == 1)
      v45 = v42;
    else
      v45 = v44;
    v14 = v56;
    v15 = BYTE4(v56);
    v46 = *(_QWORD *)(v12 + 16);
    if (v46 >= *(_QWORD *)(v12 + 24) >> 1)
    {
      sub_1A569DB30();
      OUTLINED_FUNCTION_1_61();
      v25 = v49;
      v13 = v54;
      v12 = v50;
    }
    *(_QWORD *)(v12 + 16) = v46 + 1;
    *(_DWORD *)(v12 + 4 * v46 + 32) = v45;
  }
  if (v26 == v2)
    goto LABEL_64;
  if (v26 >= v13 && v26 < v2)
  {
    v28 = v26 - v6;
    if (__OFSUB__(v26, v6))
      goto LABEL_71;
    if ((v28 & 0x8000000000000000) != 0)
      goto LABEL_72;
    if (v17)
      goto LABEL_73;
    if (v28 >= v16)
      goto LABEL_74;
    v29 = *(char *)(*v11 + v18 + v26);
    v30 = *(unsigned __int8 *)(*v11 + v18 + v26++);
    if ((v29 & 0x80000000) == 0)
    {
      v31 = v30 + 1;
      goto LABEL_51;
    }
    v14 = v14 & 0xFFFFFF00 | v30;
    v15 = 8;
    goto LABEL_18;
  }
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  sub_1A553E5DC(v51);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_2_51();
  return 0;
}

uint64_t QuotaRoot.debugDescription.getter(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[40];

  ByteBufferView.init(_:)(a1, a2, a3 & 0xFFFFFFFFFFFFFFLL, (uint64_t)v7);
  swift_retain();
  result = sub_1A56E6FE8((uint64_t)v7);
  if (v5)
    return result;
  if (HIDWORD(a2) >= a2)
  {
    OUTLINED_FUNCTION_176();
    swift_retain();
    v6 = sub_1A594B538();
    swift_release();
    return v6;
  }
  __break(1u);
  return result;
}

unint64_t sub_1A56E7598()
{
  unint64_t result;

  result = qword_1EE7A9BA8;
  if (!qword_1EE7A9BA8)
  {
    result = MEMORY[0x1A85B1874]("ٟT?", &type metadata for QuotaRoot);
    atomic_store(result, (unint64_t *)&qword_1EE7A9BA8);
  }
  return result;
}

uint64_t sub_1A56E75D4()
{
  uint64_t v0;

  return QuotaRoot.debugDescription.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(unsigned int *)(v0 + 16) | ((unint64_t)*(unsigned __int16 *)(v0 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(v0 + 22) << 48));
}

ValueMetadata *type metadata accessor for QuotaRoot()
{
  return &type metadata for QuotaRoot;
}

unint64_t sub_1A56E7600()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE799DF8;
  if (!qword_1EE799DF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract_0(&qword_1EE799DE8);
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EE799DF8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_51()
{
  uint64_t v0;

  return sub_1A553E5DC(v0);
}

_QWORD *RelativeIMAPURL.hash(into:)(uint64_t a1)
{
  __n128 *v1;
  int v3;
  const void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  const void *v13;
  uint64_t v15;
  uint64_t v16[24];
  char v17[192];
  _BYTE v18[192];
  _BYTE v19[264];
  _BYTE v20[256];
  __n128 v21[12];

  OUTLINED_FUNCTION_14_19(a1, v19);
  v3 = sub_1A56E77A8((uint64_t)v19);
  if (v3)
  {
    if (v3 == 1)
    {
      nullsub_1(v19);
      OUTLINED_FUNCTION_4_15(v21, v4);
      OUTLINED_FUNCTION_9_20();
      OUTLINED_FUNCTION_7_27((uint64_t)v21, v5, v6, v7, v8, v9, v10, v11, v15, v16[0], v16[1], v16[2], v16[3], v16[4], v16[5], v16[6], v16[7], v16[8], v16[9],
        v16[10],
        v16[11],
        v16[12],
        v16[13],
        v16[14],
        v16[15],
        v16[16],
        v16[17],
        v16[18],
        v16[19],
        v16[20],
        v16[21],
        v16[22],
        v16[23],
        v17[0]);
      sub_1A56879A8((uint64_t)v17, (uint64_t)v18);
      OUTLINED_FUNCTION_2_52((uint64_t)v18);
      if (v12)
      {
        sub_1A594CE94();
      }
      else
      {
        sub_1A56879A8((uint64_t)v17, (uint64_t)v16);
        sub_1A5687D00(v16, v20);
        sub_1A594CE94();
        sub_1A56E81B8(v21);
        URLCommand.hash(into:)();
      }
      return (_QWORD *)sub_1A56E7FF0(v1);
    }
    else
    {
      return (_QWORD *)OUTLINED_FUNCTION_9_20();
    }
  }
  else
  {
    nullsub_1(v19);
    OUTLINED_FUNCTION_4_36(v20, v13);
    OUTLINED_FUNCTION_9_20();
    return NetworkPath.hash(into:)(a1);
  }
}

void *sub_1A56E7794(void *__src, void *__dst)
{
  return memcpy(__dst, __src, 0x101uLL);
}

uint64_t sub_1A56E77A8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 256) <= 1u)
    return *(unsigned __int8 *)(a1 + 256);
  else
    return (*(_DWORD *)a1 + 2);
}

BOOL static RelativeIMAPURL.__derived_enum_equals(_:_:)(__n128 *a1, __n128 *__src)
{
  void *v4;
  int v5;
  const void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 *v16;
  const void *v17;
  _OWORD *v18;
  _OWORD *v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char v119[192];
  _BYTE v120[192];
  _BYTE v121[192];
  __n128 v122[12];
  __n128 v123[12];
  _BYTE v124[192];
  _BYTE __dst[264];
  _BYTE v126[64];
  uint64_t v127;
  _BYTE v128[264];
  _BYTE v129[264];
  _OWORD v130[2];
  _OWORD v131[2];
  uint64_t v132;
  _OWORD v133[2];
  _OWORD v134[2];
  _OWORD v135[2];
  _OWORD v136[2];
  _BYTE v137[192];
  _BYTE __srca[264];

  sub_1A56E7794(__src, __dst);
  v4 = sub_1A56E7794(__dst, __srca);
  OUTLINED_FUNCTION_14_19((uint64_t)v4, v129);
  v5 = sub_1A56E77A8((uint64_t)v129);
  if (!v5)
  {
    nullsub_1(v129);
    OUTLINED_FUNCTION_4_36(v130, v17);
    sub_1A56E7794(__src, v128);
    if (sub_1A56E77A8((uint64_t)v128))
      return 0;
    nullsub_1(v128);
    v19 = v18;
    OUTLINED_FUNCTION_4_36(v126, v18);
    v133[0] = v130[0];
    v133[1] = v130[1];
    v134[0] = v131[0];
    *(_OWORD *)((char *)v134 + 9) = *(_OWORD *)((char *)v131 + 9);
    v20 = v19[1];
    v135[0] = *v19;
    v135[1] = v20;
    v136[0] = v19[2];
    *(_OWORD *)((char *)v136 + 9) = *(_OWORD *)((char *)v19 + 41);
    if ((static IMAPServer.__derived_struct_equals(_:_:)((uint64_t)v133, (uint64_t)v135) & 1) == 0)
      return 0;
    sub_1A56879A8((uint64_t)&v132, (uint64_t)v122);
    sub_1A56879A8((uint64_t)&v127, (uint64_t)v123);
    OUTLINED_FUNCTION_11_19();
    v21 = OUTLINED_FUNCTION_2_52((uint64_t)v124);
    if (v30)
    {
      OUTLINED_FUNCTION_8_28((uint64_t)v123);
      OUTLINED_FUNCTION_2_52((uint64_t)v120);
      if (v30)
        return 1;
    }
    else
    {
      OUTLINED_FUNCTION_10_26(v21, v22, v23, v24, v25, v26, v27, v28, v66, v71, v72, v73, v74, v75, v76, v77, v78, v79, v80,
        v81,
        v82,
        v83,
        v84,
        v85,
        v86,
        v87,
        v88,
        v89,
        v90,
        v91,
        v92,
        v93,
        v94,
        v95,
        v96,
        v97,
        v98,
        v99,
        v100,
        v101,
        v102,
        v103,
        v104,
        v105,
        v106,
        v107,
        v108,
        v109,
        v110,
        v111,
        v112,
        v113,
        v114,
        v115,
        v116,
        v117,
        v118,
        v119[0]);
      v49 = OUTLINED_FUNCTION_2_52((uint64_t)v119);
      if (!v48)
      {
        OUTLINED_FUNCTION_12_23(v49);
        sub_1A5687D00(&v71, v137);
        v57 = OUTLINED_FUNCTION_7_27((uint64_t)v123, v50, v51, v52, v53, v54, v55, v56, v69, v71, v72, v73, v74, v75, v76, v77, v78, v79, v80,
                v81,
                v82,
                v83,
                v84,
                v85,
                v86,
                v87,
                v88,
                v89,
                v90,
                v91,
                v92,
                v93,
                v94,
                v95);
        OUTLINED_FUNCTION_13_22(v57, v58, v59, v60, v61, v62, v63, v64, v70, v71, v72, v73, v74, v75, v76, v77, v78, v79, v80,
          v81,
          v82,
          v83,
          v84,
          v85,
          v86,
          v87,
          v88,
          v89,
          v90,
          v91,
          v92,
          v93,
          v94,
          v95);
        OUTLINED_FUNCTION_6_33(v122);
        OUTLINED_FUNCTION_6_33(v123);
        v65 = static URLCommand.__derived_enum_equals(_:_:)(v137, v120);
        sub_1A56E81B8(v123);
        sub_1A56E81B8(v122);
        return v65;
      }
    }
    OUTLINED_FUNCTION_8_28((uint64_t)v122);
    sub_1A56879A8((uint64_t)v123, (uint64_t)v121);
    OUTLINED_FUNCTION_6_33(v122);
    OUTLINED_FUNCTION_6_33(v123);
    goto LABEL_25;
  }
  if (v5 == 1)
  {
    nullsub_1(v129);
    OUTLINED_FUNCTION_4_15(v126, v6);
    sub_1A56E7794(__src, v128);
    if (sub_1A56E77A8((uint64_t)v128) == 1)
    {
      nullsub_1(v128);
      OUTLINED_FUNCTION_4_15(v137, v7);
      sub_1A56879A8((uint64_t)v126, (uint64_t)v122);
      sub_1A56879A8((uint64_t)v137, (uint64_t)v123);
      OUTLINED_FUNCTION_11_19();
      v8 = OUTLINED_FUNCTION_2_52((uint64_t)v124);
      if (v30)
      {
        sub_1A56879A8((uint64_t)v123, (uint64_t)v130);
        OUTLINED_FUNCTION_2_52((uint64_t)v130);
        if (v30)
        {
          sub_1A56E7794(__srca, v120);
          nullsub_1(v120);
          sub_1A56E81B8(v16);
          return 1;
        }
      }
      else
      {
        OUTLINED_FUNCTION_10_26(v8, v9, v10, v11, v12, v13, v14, v15, v66, v71, v72, v73, v74, v75, v76, v77, v78, v79, v80,
          v81,
          v82,
          v83,
          v84,
          v85,
          v86,
          v87,
          v88,
          v89,
          v90,
          v91,
          v92,
          v93,
          v94,
          v95,
          v96,
          v97,
          v98,
          v99,
          v100,
          v101,
          v102,
          v103,
          v104,
          v105,
          v106,
          v107,
          v108,
          v109,
          v110,
          v111,
          v112,
          v113,
          v114,
          v115,
          v116,
          v117,
          v118,
          v119[0]);
        v31 = OUTLINED_FUNCTION_2_52((uint64_t)v119);
        if (!v30)
        {
          OUTLINED_FUNCTION_12_23(v31);
          sub_1A5687D00(&v71, v130);
          v39 = OUTLINED_FUNCTION_7_27((uint64_t)v123, v32, v33, v34, v35, v36, v37, v38, v67, v71, v72, v73, v74, v75, v76, v77, v78, v79, v80,
                  v81,
                  v82,
                  v83,
                  v84,
                  v85,
                  v86,
                  v87,
                  v88,
                  v89,
                  v90,
                  v91,
                  v92,
                  v93,
                  v94,
                  v95);
          OUTLINED_FUNCTION_13_22(v39, v40, v41, v42, v43, v44, v45, v46, v68, v71, v72, v73, v74, v75, v76, v77, v78, v79, v80,
            v81,
            v82,
            v83,
            v84,
            v85,
            v86,
            v87,
            v88,
            v89,
            v90,
            v91,
            v92,
            v93,
            v94,
            v95);
          OUTLINED_FUNCTION_3_42(__src);
          OUTLINED_FUNCTION_3_42(a1);
          v47 = static URLCommand.__derived_enum_equals(_:_:)(v130, v120);
          sub_1A56E7FF0(__src);
          sub_1A56E7FF0(a1);
          return v47;
        }
      }
      OUTLINED_FUNCTION_8_28((uint64_t)v122);
      sub_1A56879A8((uint64_t)v123, (uint64_t)v121);
      OUTLINED_FUNCTION_3_42(__src);
      OUTLINED_FUNCTION_3_42(a1);
LABEL_25:
      sub_1A5688360((uint64_t)v120);
    }
  }
  else
  {
    sub_1A56E7794(__src, v120);
    if (sub_1A56E77A8((uint64_t)v120) == 2)
      return 1;
  }
  return 0;
}

uint64_t RelativeIMAPURL.hashValue.getter()
{
  __n128 *v0;
  uint64_t v1;
  int v2;
  const void *v3;
  char v4;
  const void *v5;
  _BYTE v7[192];
  _BYTE v8[192];
  _BYTE v9[192];
  _BYTE v10[72];
  _BYTE v11[264];
  _BYTE v12[256];
  __n128 v13[12];

  v1 = sub_1A594CE64();
  OUTLINED_FUNCTION_14_19(v1, v11);
  v2 = sub_1A56E77A8((uint64_t)v11);
  if (v2)
  {
    if (v2 == 1)
    {
      nullsub_1(v11);
      OUTLINED_FUNCTION_4_15(v13, v3);
      sub_1A594CE88();
      sub_1A56879A8((uint64_t)v13, (uint64_t)v8);
      sub_1A56879A8((uint64_t)v8, (uint64_t)v9);
      OUTLINED_FUNCTION_2_52((uint64_t)v9);
      if (v4)
      {
        sub_1A594CE94();
      }
      else
      {
        sub_1A56879A8((uint64_t)v8, (uint64_t)v7);
        sub_1A5687D00(v7, v12);
        sub_1A594CE94();
        sub_1A56E81B8(v13);
        URLCommand.hash(into:)();
      }
      sub_1A56E7FF0(v0);
    }
    else
    {
      sub_1A594CE88();
    }
  }
  else
  {
    nullsub_1(v11);
    OUTLINED_FUNCTION_4_36(v12, v5);
    sub_1A594CE88();
    NetworkPath.hash(into:)((uint64_t)v10);
  }
  return sub_1A594CED0();
}

uint64_t sub_1A56E7C74()
{
  void *v0;
  _BYTE __dst[264];

  sub_1A56E7794(v0, __dst);
  return RelativeIMAPURL.hashValue.getter();
}

_QWORD *sub_1A56E7CA8(uint64_t a1)
{
  void *v1;
  _BYTE __dst[264];

  sub_1A56E7794(v1, __dst);
  return RelativeIMAPURL.hash(into:)(a1);
}

uint64_t sub_1A56E7CEC()
{
  void *v0;
  int v1;
  __n128 *v2;
  __n128 *v3;
  const void *v4;
  _BYTE v6[192];
  _BYTE v7[192];
  _BYTE v8[72];
  _BYTE __dst[256];
  __n128 __src[16];
  _BYTE v11[264];

  sub_1A56E7794(v0, __src);
  sub_1A594CE64();
  sub_1A56E7794(__src, v11);
  v1 = sub_1A56E77A8((uint64_t)v11);
  if (v1)
  {
    if (v1 == 1)
    {
      nullsub_1(v11);
      v3 = v2;
      sub_1A594CE88();
      sub_1A56879A8((uint64_t)v3, (uint64_t)v7);
      if (sub_1A5687CDC((uint64_t)v7) == 1)
      {
        sub_1A594CE94();
      }
      else
      {
        sub_1A56879A8((uint64_t)v3, (uint64_t)v6);
        sub_1A5687D00(v6, __dst);
        sub_1A594CE94();
        sub_1A56E81B8(v3);
        URLCommand.hash(into:)();
      }
      sub_1A56E7FF0(__src);
    }
    else
    {
      sub_1A594CE88();
    }
  }
  else
  {
    nullsub_1(v11);
    memcpy(__dst, v4, sizeof(__dst));
    sub_1A594CE88();
    NetworkPath.hash(into:)((uint64_t)v8);
  }
  return sub_1A594CED0();
}

BOOL sub_1A56E7E30(void *a1, void *a2)
{
  __n128 v4[16];
  __n128 __dst[16];

  sub_1A56E7794(a1, v4);
  sub_1A56E7794(a2, __dst);
  return static RelativeIMAPURL.__derived_enum_equals(_:_:)(v4, __dst);
}

uint64_t sub_1A56E7E78(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v33 = a21;
  v34 = a22;
  v35 = a19;
  v36 = a20;
  v38 = a17;
  v37 = a18;
  v39 = a9;
  if (a33 != 1)
  {
    if (a33)
      return result;
    v46 = a16;
    v44 = a14;
    v45 = a15;
    v42 = a12;
    v43 = a13;
    v40 = a10;
    v41 = a11;
    sub_1A56CA7DC(result, a2, a3, a4);
    swift_bridgeObjectRelease();
    a22 = a30;
    a21 = a29;
    LOBYTE(a20) = a28;
    a19 = a27;
    a18 = a26;
    a16 = a24;
    a17 = a25;
    a14 = v34;
    a15 = a23;
    a12 = v36;
    a13 = v33;
    a10 = v37;
    a11 = v35;
    a9 = v38;
    result = v39;
    a2 = v40;
    a3 = v41;
    a4 = v42;
    a5 = v43;
    a6 = v44;
    a7 = v45;
    a8 = v46;
  }
  return sub_1A56879F0(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22);
}

uint64_t sub_1A56E7FF0(__n128 *a1)
{
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t);
  __n128 v12;
  __n128 v13;

  v2 = OUTLINED_FUNCTION_0_82(a1);
  OUTLINED_FUNCTION_1_62(v3, v4, v5, v6, v7, v8, v9, v10, v11, v2, v12, v13);
  return v1;
}

uint64_t sub_1A56E8040(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v33 = a21;
  v34 = a22;
  v35 = a19;
  v36 = a20;
  v38 = a17;
  v37 = a18;
  v39 = a9;
  if (a33 != 1)
  {
    if (a33)
      return result;
    v46 = a16;
    v44 = a14;
    v45 = a15;
    v42 = a12;
    v43 = a13;
    v40 = a10;
    v41 = a11;
    sub_1A56CA728(result, a2, a3, a4);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    a22 = a30;
    a21 = a29;
    LOBYTE(a20) = a28;
    a19 = a27;
    a18 = a26;
    a16 = a24;
    a17 = a25;
    a14 = v34;
    a15 = a23;
    a12 = v36;
    a13 = v33;
    a10 = v37;
    a11 = v35;
    a9 = v38;
    result = v39;
    a2 = v40;
    a3 = v41;
    a4 = v42;
    a5 = v43;
    a6 = v44;
    a7 = v45;
    a8 = v46;
  }
  return sub_1A5688168(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22);
}

uint64_t sub_1A56E81B8(__n128 *a1)
{
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t);
  __n128 v12;
  __n128 v13;

  v2 = OUTLINED_FUNCTION_0_82(a1);
  OUTLINED_FUNCTION_1_62(v3, v4, v5, v6, v7, v8, v9, v10, v11, v2, v12, v13);
  return v1;
}

unint64_t sub_1A56E81F4()
{
  unint64_t result;

  result = qword_1EE7A9BB0;
  if (!qword_1EE7A9BB0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for RelativeIMAPURL, &type metadata for RelativeIMAPURL);
    atomic_store(result, (unint64_t *)&qword_1EE7A9BB0);
  }
  return result;
}

uint64_t destroy for RelativeIMAPURL(uint64_t a1)
{
  __int128 v2;

  v2 = *(_OWORD *)(a1 + 208);
  return sub_1A56E7E78(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
           *(_QWORD *)(a1 + 152),
           *(_QWORD *)(a1 + 160),
           *(_QWORD *)(a1 + 168),
           *(_QWORD *)(a1 + 176),
           *(_QWORD *)(a1 + 184),
           *(_QWORD *)(a1 + 192),
           *(_QWORD *)(a1 + 200),
           v2,
           SBYTE8(v2),
           *(_QWORD *)(a1 + 224),
           *(_QWORD *)(a1 + 232),
           *(_QWORD *)(a1 + 240),
           *(_QWORD *)(a1 + 248),
           *(_BYTE *)(a1 + 256));
}

uint64_t initializeWithCopy for RelativeIMAPURL(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;

  v3 = *(_QWORD *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 56);
  v13 = *(_QWORD *)(a2 + 72);
  v14 = *(_QWORD *)(a2 + 80);
  v15 = *(_QWORD *)(a2 + 88);
  v16 = *(_QWORD *)(a2 + 96);
  v17 = *(_QWORD *)(a2 + 104);
  v18 = *(_QWORD *)(a2 + 112);
  v19 = *(_QWORD *)(a2 + 120);
  v20 = *(_QWORD *)(a2 + 128);
  v21 = *(_QWORD *)(a2 + 136);
  v22 = *(_QWORD *)(a2 + 144);
  v23 = *(_QWORD *)(a2 + 152);
  v24 = *(_QWORD *)(a2 + 160);
  v25 = *(_QWORD *)(a2 + 168);
  v26 = *(_QWORD *)(a2 + 176);
  v27 = *(_QWORD *)(a2 + 184);
  v28 = *(_QWORD *)(a2 + 192);
  v29 = *(_QWORD *)(a2 + 200);
  v30 = *(_QWORD *)(a2 + 208);
  v31 = *(_QWORD *)(a2 + 216);
  v32 = *(_QWORD *)(a2 + 224);
  v33 = *(_QWORD *)(a2 + 232);
  v34 = *(_QWORD *)(a2 + 240);
  v35 = *(_QWORD *)(a2 + 248);
  v36 = *(_BYTE *)(a2 + 256);
  v6 = *(_QWORD *)(a2 + 64);
  v8 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)a2;
  v10 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 16);
  v11 = *(_QWORD *)(a2 + 32);
  sub_1A56E8040(*(_QWORD *)a2, v8, v9, v10, v11, v3, v4, v5, v6, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22,
    v23,
    v24,
    v25,
    v26,
    v27,
    v28,
    v29,
    v30,
    v31,
    v32,
    v33,
    v34,
    v35,
    v36);
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v8;
  *(_QWORD *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 24) = v10;
  *(_QWORD *)(a1 + 32) = v11;
  *(_QWORD *)(a1 + 40) = v3;
  *(_QWORD *)(a1 + 48) = v4;
  *(_QWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v14;
  *(_QWORD *)(a1 + 88) = v15;
  *(_QWORD *)(a1 + 96) = v16;
  *(_QWORD *)(a1 + 104) = v17;
  *(_QWORD *)(a1 + 112) = v18;
  *(_QWORD *)(a1 + 120) = v19;
  *(_QWORD *)(a1 + 128) = v20;
  *(_QWORD *)(a1 + 136) = v21;
  *(_QWORD *)(a1 + 144) = v22;
  *(_QWORD *)(a1 + 152) = v23;
  *(_QWORD *)(a1 + 160) = v24;
  *(_QWORD *)(a1 + 168) = v25;
  *(_QWORD *)(a1 + 176) = v26;
  *(_QWORD *)(a1 + 184) = v27;
  *(_QWORD *)(a1 + 192) = v28;
  *(_QWORD *)(a1 + 200) = v29;
  *(_QWORD *)(a1 + 208) = v30;
  *(_QWORD *)(a1 + 216) = v31;
  *(_QWORD *)(a1 + 224) = v32;
  *(_QWORD *)(a1 + 232) = v33;
  *(_QWORD *)(a1 + 240) = v34;
  *(_QWORD *)(a1 + 248) = v35;
  *(_BYTE *)(a1 + 256) = v36;
  return a1;
}

uint64_t assignWithCopy for RelativeIMAPURL(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v57 = *(_QWORD *)a2;
  v58 = *(_QWORD *)(a2 + 8);
  v55 = *(_QWORD *)(a2 + 24);
  v56 = *(_QWORD *)(a2 + 16);
  v54 = *(_QWORD *)(a2 + 32);
  v35 = *(_QWORD *)(a2 + 72);
  v36 = *(_QWORD *)(a2 + 80);
  v37 = *(_QWORD *)(a2 + 88);
  v38 = *(_QWORD *)(a2 + 96);
  v39 = *(_QWORD *)(a2 + 104);
  v40 = *(_QWORD *)(a2 + 112);
  v41 = *(_QWORD *)(a2 + 120);
  v42 = *(_QWORD *)(a2 + 128);
  v3 = *(_QWORD *)(a2 + 144);
  v4 = *(_QWORD *)(a2 + 152);
  v5 = *(_QWORD *)(a2 + 160);
  v6 = *(_QWORD *)(a2 + 168);
  v7 = *(_QWORD *)(a2 + 176);
  v43 = *(_QWORD *)(a2 + 136);
  v44 = *(_QWORD *)(a2 + 184);
  v45 = *(_QWORD *)(a2 + 192);
  v46 = *(_QWORD *)(a2 + 200);
  v47 = *(_QWORD *)(a2 + 208);
  v48 = *(_QWORD *)(a2 + 216);
  v49 = *(_QWORD *)(a2 + 224);
  v50 = *(_QWORD *)(a2 + 232);
  v51 = *(_QWORD *)(a2 + 240);
  v52 = *(_QWORD *)(a2 + 248);
  v53 = *(_BYTE *)(a2 + 256);
  v8 = *(_QWORD *)(a2 + 64);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  sub_1A56E8040(*(_QWORD *)a2, v58, v56, v55, v54, v9, v10, v11, v8, v35, v36, v37, v38, v39, v40, v41, v42, v43, v3,
    v4,
    v5,
    v6,
    v7,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52,
    v53);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v57;
  *(_QWORD *)(a1 + 8) = v58;
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v56;
  *(_QWORD *)(a1 + 24) = v55;
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v54;
  *(_QWORD *)(a1 + 40) = v9;
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 64) = v8;
  *(_QWORD *)(a1 + 72) = v35;
  *(_QWORD *)(a1 + 80) = v36;
  *(_QWORD *)(a1 + 88) = v37;
  v22 = *(_OWORD *)(a1 + 96);
  v23 = *(_OWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 96) = v38;
  *(_QWORD *)(a1 + 104) = v39;
  *(_QWORD *)(a1 + 112) = v40;
  *(_QWORD *)(a1 + 120) = v41;
  v24 = *(_OWORD *)(a1 + 128);
  v25 = *(_OWORD *)(a1 + 144);
  *(_QWORD *)(a1 + 128) = v42;
  *(_QWORD *)(a1 + 136) = v43;
  *(_QWORD *)(a1 + 144) = v3;
  v26 = *(_OWORD *)(a1 + 160);
  v27 = *(_OWORD *)(a1 + 176);
  *(_QWORD *)(a1 + 152) = v4;
  *(_QWORD *)(a1 + 160) = v5;
  *(_QWORD *)(a1 + 168) = v6;
  *(_QWORD *)(a1 + 176) = v7;
  *(_QWORD *)(a1 + 184) = v44;
  v28 = *(_OWORD *)(a1 + 192);
  v29 = *(_OWORD *)(a1 + 208);
  *(_QWORD *)(a1 + 192) = v45;
  *(_QWORD *)(a1 + 200) = v46;
  *(_QWORD *)(a1 + 208) = v47;
  *(_QWORD *)(a1 + 216) = v48;
  v30 = *(_OWORD *)(a1 + 224);
  *(_QWORD *)(a1 + 224) = v49;
  *(_QWORD *)(a1 + 232) = v50;
  v31 = *(_QWORD *)(a1 + 240);
  v32 = *(_QWORD *)(a1 + 248);
  *(_QWORD *)(a1 + 240) = v51;
  *(_QWORD *)(a1 + 248) = v52;
  v33 = *(_BYTE *)(a1 + 256);
  *(_BYTE *)(a1 + 256) = v53;
  sub_1A56E7E78(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    *((uint64_t *)&v25 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    v28,
    *((uint64_t *)&v28 + 1),
    v29,
    SBYTE8(v29),
    v30,
    *((uint64_t *)&v30 + 1),
    v31,
    v32,
    v33);
  return a1;
}

void *__swift_memcpy257_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x101uLL);
}

uint64_t assignWithTake for RelativeIMAPURL(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;

  v4 = *(_BYTE *)(a2 + 256);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_QWORD *)(a1 + 56);
  v13 = *(_OWORD *)(a1 + 64);
  v14 = *(_OWORD *)(a1 + 80);
  v15 = *(_OWORD *)(a1 + 96);
  v16 = *(_OWORD *)(a1 + 112);
  v17 = *(_OWORD *)(a1 + 128);
  v18 = *(_OWORD *)(a1 + 144);
  v19 = *(_OWORD *)(a1 + 160);
  v20 = *(_OWORD *)(a1 + 176);
  v21 = *(_OWORD *)(a1 + 192);
  v22 = *(_OWORD *)(a1 + 208);
  v23 = *(_OWORD *)(a1 + 224);
  v24 = *(_QWORD *)(a1 + 240);
  v25 = *(_QWORD *)(a1 + 248);
  v26 = *(_BYTE *)(a1 + 256);
  v27 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v27;
  v28 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v28;
  v29 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v29;
  v30 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v30;
  v31 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v31;
  v32 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v32;
  v33 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v33;
  v34 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v34;
  *(_BYTE *)(a1 + 256) = v4;
  sub_1A56E7E78(v5, v6, v7, v8, v9, v10, v11, v12, v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17, *((uint64_t *)&v17 + 1), v18,
    *((uint64_t *)&v18 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v21,
    *((uint64_t *)&v21 + 1),
    v22,
    SBYTE8(v22),
    v23,
    *((uint64_t *)&v23 + 1),
    v24,
    v25,
    v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for RelativeIMAPURL(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 257))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 256);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RelativeIMAPURL(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 248) = 0;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 256) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 257) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 257) = 0;
    if (a2)
      *(_BYTE *)(result + 256) = -(char)a2;
  }
  return result;
}

void sub_1A56E8880(uint64_t a1, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)a1 = a2 - 2;
    bzero((void *)(a1 + 8), 0xF8uLL);
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(a1 + 256) = a2;
}

ValueMetadata *type metadata accessor for RelativeIMAPURL()
{
  return &type metadata for RelativeIMAPURL;
}

__n128 OUTLINED_FUNCTION_0_82(__n128 *a1)
{
  return a1[4];
}

uint64_t OUTLINED_FUNCTION_1_62@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t)@<X8>, __n128 a10@<Q0>, __n128 a11@<Q1>, __n128 a12@<Q2>)
{
  return a9(a1, a2, a3, a4, a5, a6, a7, a8, a10.n128_u64[0], a10.n128_u64[1], a11.n128_u64[0], a11.n128_u64[1], a12.n128_u64[0], a12.n128_u64[1]);
}

uint64_t OUTLINED_FUNCTION_2_52(uint64_t a1)
{
  return sub_1A5687CDC(a1);
}

uint64_t OUTLINED_FUNCTION_3_42(__n128 *a1)
{
  return sub_1A56E7FF0(a1);
}

void *OUTLINED_FUNCTION_4_36(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x100uLL);
}

uint64_t OUTLINED_FUNCTION_6_33(__n128 *a1)
{
  return sub_1A56E81B8(a1);
}

uint64_t OUTLINED_FUNCTION_7_27(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  return sub_1A56879A8(a1, (uint64_t)&a34);
}

uint64_t OUTLINED_FUNCTION_8_28(uint64_t a1)
{
  return sub_1A56879A8(a1, (uint64_t)&STACK[0x248]);
}

uint64_t OUTLINED_FUNCTION_10_26(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,char a58)
{
  return sub_1A56879A8((uint64_t)&STACK[0x488], (uint64_t)&a58);
}

uint64_t OUTLINED_FUNCTION_11_19()
{
  return sub_1A56879A8((uint64_t)&STACK[0x3C8], (uint64_t)&STACK[0x548]);
}

uint64_t OUTLINED_FUNCTION_12_23(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  return sub_1A56879A8((uint64_t)&STACK[0x3C8], (uint64_t)va);
}

void *OUTLINED_FUNCTION_13_22(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  return sub_1A5687D00(&a34, &STACK[0x248]);
}

void *OUTLINED_FUNCTION_14_19(uint64_t a1, void *a2)
{
  void *v2;

  return sub_1A56E7794(v2, a2);
}

uint64_t ApplePushService.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) != 0)
  {
    sub_1A594CE88();
    sub_1A594CE88();
    return sub_1A594B1D8();
  }
  else
  {
    sub_1A594CE88();
    return sub_1A594CE88();
  }
}

uint64_t static ApplePushService.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if ((a4 & 1) != 0)
  {
    if ((a8 & 1) != 0 && a1 == a5)
    {
      if (a2 != a6 || a3 != a7)
        return sub_1A594CD38();
      return 1;
    }
    return 0;
  }
  return (a8 & 1) == 0 && a2 == a6 && (sub_1A568A0E0(a1) & 1) != 0;
}

uint64_t ApplePushService.hashValue.getter(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v7;
  _BYTE v9[72];

  v7 = a4 & 1;
  sub_1A594CE64();
  ApplePushService.hash(into:)((uint64_t)v9, a1, a2, a3, v7);
  return sub_1A594CED0();
}

uint64_t sub_1A56E8AC4()
{
  uint64_t v0;

  return ApplePushService.hashValue.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_1A56E8AD4(uint64_t a1)
{
  uint64_t v1;

  return ApplePushService.hash(into:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t sub_1A56E8AE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  _BYTE v6[72];

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_BYTE *)(v0 + 24);
  sub_1A594CE64();
  ApplePushService.hash(into:)((uint64_t)v6, v1, v2, v3, v4);
  return sub_1A594CED0();
}

unint64_t sub_1A56E8B44()
{
  unint64_t result;

  result = qword_1EE7A9BB8;
  if (!qword_1EE7A9BB8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ApplePushService, &type metadata for ApplePushService);
    atomic_store(result, (unint64_t *)&qword_1EE7A9BB8);
  }
  return result;
}

uint64_t sub_1A56E8B80(uint64_t a1, uint64_t a2)
{
  return static ApplePushService.__derived_enum_equals(_:_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(_BYTE *)(a2 + 24));
}

uint64_t destroy for ApplePushService()
{
  return sub_1A552466C();
}

uint64_t initializeWithCopy for ApplePushService(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = *((_BYTE *)a2 + 24);
  sub_1A5523B84();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for ApplePushService(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = *((_BYTE *)a2 + 24);
  sub_1A5523B84();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  sub_1A552466C();
  return a1;
}

uint64_t assignWithTake for ApplePushService(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  sub_1A552466C();
  return a1;
}

uint64_t getEnumTagSinglePayload for ApplePushService(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 25))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 24);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for ApplePushService()
{
  return &type metadata for ApplePushService;
}

void sub_1A56E8D1C(uint64_t a1, unint64_t a2, unint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  char v9;
  Swift::Int v10;
  Swift::Int v11;
  int v12;
  BOOL v13;
  int v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  BOOL v18;
  char v19;
  uint64_t v20;
  int v21;
  Swift::Int v22;
  uint64_t v23;
  int v24;
  int v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  Swift::Int v29;
  char v30;
  uint64_t v31;
  int v32;
  Swift::Int v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Swift::Int v38;
  char v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  int v49;
  uint64_t v50;

  v5 = v4;
  sub_1A56814E0(0xD000000000000012, 0x80000001A5A0F660, v4 + 8, *(_DWORD *)(v4 + 20));
  v11 = v10;
  if ((a4 & 1) != 0)
    goto LABEL_13;
  if ((v9 & 1) != 0)
    v11 = OUTLINED_FUNCTION_10_15(0xD000000000000012, 0x80000001A5A0F660);
  v12 = *(_DWORD *)(v4 + 20);
  v13 = __CFADD__(v12, (_DWORD)v11);
  v14 = v12 + v11;
  if (v13)
  {
    __break(1u);
    goto LABEL_34;
  }
  *(_DWORD *)(v4 + 20) = v14;
  v15 = OUTLINED_FUNCTION_18_19();
  OUTLINED_FUNCTION_14_20(v15, v16);
  v18 = __OFADD__(v11, v17);
  v11 += v17;
  if (v18)
  {
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  OUTLINED_FUNCTION_1_63();
  if ((v19 & 1) != 0)
    OUTLINED_FUNCTION_2_53();
  OUTLINED_FUNCTION_23_16();
  if (v13)
    goto LABEL_35;
  *(_DWORD *)(v4 + 20) = v21;
  v22 = v11 + v20;
  if (__OFADD__(v11, v20))
  {
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v23 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A56BABD4(v23);
  OUTLINED_FUNCTION_24_14();
  sub_1A552466C();
  if (!__OFADD__(v22, v4))
    return;
  __break(1u);
LABEL_13:
  if ((v9 & 1) != 0)
    v11 = OUTLINED_FUNCTION_10_15(0xD000000000000012, 0x80000001A5A0F660);
  v24 = *(_DWORD *)(v4 + 20);
  v13 = __CFADD__(v24, (_DWORD)v11);
  v25 = v24 + v11;
  if (v13)
    goto LABEL_37;
  *(_DWORD *)(v4 + 20) = v25;
  v26 = OUTLINED_FUNCTION_13_23();
  OUTLINED_FUNCTION_14_20(v26, v27);
  v18 = __OFADD__(v11, v28);
  v29 = v11 + v28;
  if (v18)
  {
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  OUTLINED_FUNCTION_1_63();
  if ((v30 & 1) != 0)
    OUTLINED_FUNCTION_2_53();
  OUTLINED_FUNCTION_23_16();
  if (v13)
    goto LABEL_39;
  *(_DWORD *)(v4 + 20) = v32;
  v33 = v29 + v31;
  if (__OFADD__(v29, v31))
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v34 = sub_1A594CC9C();
  OUTLINED_FUNCTION_14_20(v34, v35);
  v37 = v36;
  swift_bridgeObjectRelease();
  v38 = v33 + v37;
  if (__OFADD__(v33, v37))
  {
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  OUTLINED_FUNCTION_1_63();
  if ((v39 & 1) != 0)
    OUTLINED_FUNCTION_2_53();
  OUTLINED_FUNCTION_23_16();
  if (v13)
    goto LABEL_42;
  *(_DWORD *)(v5 + 20) = v41;
  v18 = __OFADD__(v38, v40);
  v42 = v38 + v40;
  if (v18)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  v43 = OUTLINED_FUNCTION_15_25();
  OUTLINED_FUNCTION_14_20(v43, v44);
  v18 = __OFADD__(v42, v45);
  v46 = v42 + v45;
  if (v18)
  {
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  OUTLINED_FUNCTION_1_63();
  if ((v47 & 1) != 0)
    OUTLINED_FUNCTION_2_53();
  OUTLINED_FUNCTION_23_16();
  if (v13)
    goto LABEL_45;
  *(_DWORD *)(v5 + 20) = v49;
  v50 = v46 + v48;
  if (__OFADD__(v46, v48))
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_14_20(a2, a3);
  OUTLINED_FUNCTION_24_14();
  sub_1A552466C();
  if (__OFADD__(v50, v37))
LABEL_47:
    __break(1u);
}

void sub_1A56E8F6C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unsigned __int8 *v66;
  char v67;
  _QWORD *v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unsigned int v72;
  unsigned int v73;
  _QWORD *v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  unsigned __int8 v83;
  char v84;
  char v85;
  uint64_t v86;
  unsigned __int8 v87;
  uint64_t v88;
  unsigned __int8 v89;
  uint64_t v90;
  uint64_t v91;
  unsigned __int8 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  uint64_t v126;
  unsigned __int8 v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  _QWORD *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  _BYTE v163[40];
  _BYTE v164[48];

  sub_1A5751898();
  if (!v8)
  {
    OUTLINED_FUNCTION_0_83();
    v15 = sub_1A573EE0C(a1, a2, a3, a4, a5, a6, a7);
    v17 = v16;
    v19 = v18;
    v151 = a8;
    v156 = a7;
    v20 = v15;
    swift_retain();
    v21 = OUTLINED_FUNCTION_18_19();
    v27 = ByteBufferAllocator.buffer(string:)(v21, v22, v23, v24, v25, v26);
    v159 = v19 & 0xFFFFFFFFFFFFFFLL;
    LOBYTE(v19) = static ByteBuffer.== infix(_:_:)(v27, v29, v28 & 0xFFFFFFFFFFFFFFLL, v20, v17, v19 & 0xFFFFFFFFFFFFFFLL);
    OUTLINED_FUNCTION_4_4();
    swift_release();
    if ((v19 & 1) != 0)
    {
      OUTLINED_FUNCTION_0_83();
      v38 = OUTLINED_FUNCTION_6_34(v30, v31, v32, v33, v34, v35, v36, v37, v139, v142, v144, v147, v151, a7, v159, a5, a6);
      v71 = MailboxName.init(_:)(v38, v70, v69 & 0xFFFFFFFFFFFFFFLL);
      v73 = v72;
      swift_release();
      v74 = (_QWORD *)v153;
      *(_QWORD *)v153 = v71;
      *(_QWORD *)(v153 + 8) = v73;
      v75 = 0uLL;
      *(_OWORD *)(v153 + 16) = 0u;
LABEL_18:
      *((_OWORD *)v74 + 2) = v75;
      *((_OWORD *)v74 + 3) = v75;
      *((_OWORD *)v74 + 4) = v75;
      v74[10] = 0;
      *(_OWORD *)(v74 + 11) = xmmword_1A59AC070;
      *((_BYTE *)v74 + 104) = 8;
      return;
    }
    swift_retain();
    v39 = OUTLINED_FUNCTION_13_23();
    v45 = ByteBufferAllocator.buffer(string:)(v39, v40, v41, v42, v43, v44);
    v48 = static ByteBuffer.== infix(_:_:)(v45, v47, v46 & 0xFFFFFFFFFFFFFFLL, v20, v17, v159);
    OUTLINED_FUNCTION_4_4();
    swift_release();
    if ((v48 & 1) == 0)
    {
      sub_1A594C720();
      swift_bridgeObjectRelease();
      ByteBuffer.description.getter(v20, v17, v159);
      OUTLINED_FUNCTION_21_20();
      swift_bridgeObjectRelease();
      sub_1A56E9774();
      OUTLINED_FUNCTION_21();
      *v68 = 0xD000000000000029;
      v68[1] = 0x80000001A5A0F5B0;
      v68[2] = 0xD000000000000020;
      v68[3] = 0x80000001A5A0F5E0;
      OUTLINED_FUNCTION_11_20((uint64_t)v68, 66);
LABEL_16:
      swift_release();
      return;
    }
    OUTLINED_FUNCTION_0_83();
    v49 = OUTLINED_FUNCTION_22_20();
    v51 = a5;
    v50 = a6;
    v57 = OUTLINED_FUNCTION_10_27(v49, v52, v53, v54, a5, a6, v55, v56, v139, v142, v144, v147, v151, v156);
    ByteBufferView.init(_:)(v57, v59, v58 & 0xFFFFFFFFFFFFFFLL, (uint64_t)v163);
    swift_retain();
    v60 = sub_1A56E6FE8((uint64_t)v163);
    if (!v61)
    {
      sub_1A56E9774();
      v76 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_7_28(v76, v77);
      OUTLINED_FUNCTION_3_43(v78, (uint64_t)"NIOIMAPCore2/ParserLibrary.swift");
      v80 = 49;
LABEL_77:
      OUTLINED_FUNCTION_11_20(v79, v80);
      OUTLINED_FUNCTION_4_4();
      goto LABEL_16;
    }
    v62 = v61;
    v63 = HIBYTE(v61) & 0xF;
    v64 = v60 & 0xFFFFFFFFFFFFLL;
    if ((v62 & 0x2000000000000000) != 0)
      v65 = v63;
    else
      v65 = v60 & 0xFFFFFFFFFFFFLL;
    if (!v65)
    {
      swift_bridgeObjectRelease();
LABEL_76:
      sub_1A56E9774();
      OUTLINED_FUNCTION_21();
      *v137 = 0x1000000000000019;
      v137[1] = 0x80000001A5A0F610;
      OUTLINED_FUNCTION_3_43((uint64_t)v137, (uint64_t)"NIOIMAPCore2/ParserLibrary.swift");
      v80 = 51;
      goto LABEL_77;
    }
    if ((v62 & 0x1000000000000000) != 0)
    {
      v145 = v62;
      v148 = sub_1A56A1360(v60, v62, 10);
      LOBYTE(v159) = v138;
      goto LABEL_60;
    }
    if ((v62 & 0x2000000000000000) == 0)
    {
      v145 = v62;
      if ((v60 & 0x1000000000000000) != 0)
        v66 = (unsigned __int8 *)((v62 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v66 = (unsigned __int8 *)sub_1A594C7D4();
      v148 = (uint64_t)sub_1A56A1340(v66, v64);
      LOBYTE(v159) = v67 & 1;
LABEL_60:
      swift_bridgeObjectRelease();
      if ((v159 & 1) == 0 && (v148 & 0x8000000000000000) == 0)
      {
        OUTLINED_FUNCTION_0_83();
        v94 = OUTLINED_FUNCTION_22_20();
        v100 = OUTLINED_FUNCTION_10_27(v94, v95, v96, v97, v51, v50, v98, v99, v140, v143, v145, v148, v152, v157);
        v102 = v101;
        v146 = v57;
        v160 = v103;
        v104 = v100;
        v105 = OUTLINED_FUNCTION_15_25();
        v111 = ByteBufferAllocator.buffer(string:)(v105, v106, v107, v108, v109, v110);
        v141 = v102 & 0xFFFFFFFFFFFFFFLL;
        LOBYTE(v102) = static ByteBuffer.== infix(_:_:)(v104, v160, v102 & 0xFFFFFFFFFFFFFFLL, v111, v113, v112 & 0xFFFFFFFFFFFFFFLL);
        swift_release();
        if ((v102 & 1) != 0)
        {
          OUTLINED_FUNCTION_0_83();
          v122 = OUTLINED_FUNCTION_6_34(v114, v115, v116, v117, v118, v119, v120, v121, v141, v104, v146, v149, v154, v158, v160, a5, a6);
          ByteBufferView.init(_:)(v122, v123, v124 & 0xFFFFFFFFFFFFFFLL, (uint64_t)v164);
          swift_retain();
          v129 = sub_1A56E6FE8((uint64_t)v164);
          if (v130)
          {
            v131 = v129;
            v132 = v130;
            OUTLINED_FUNCTION_34_4();
            swift_release();
            swift_release();
            OUTLINED_FUNCTION_4_4();
            v74 = v155;
            *v155 = v150;
            v155[1] = v131;
            v155[2] = v132;
            v155[3] = 1;
            v75 = 0uLL;
            goto LABEL_18;
          }
          sub_1A56E9774();
          v133 = OUTLINED_FUNCTION_21();
          OUTLINED_FUNCTION_7_28(v133, v134);
          OUTLINED_FUNCTION_3_43(v135, (uint64_t)"NIOIMAPCore2/ParserLibrary.swift");
          OUTLINED_FUNCTION_11_20(v136, 62);
          OUTLINED_FUNCTION_4_4();
          OUTLINED_FUNCTION_34_4();
          swift_release();
        }
        else
        {
          sub_1A594C720();
          swift_bridgeObjectRelease();
          ByteBuffer.description.getter(v104, v160, v141);
          OUTLINED_FUNCTION_21_20();
          swift_bridgeObjectRelease();
          sub_1A594B5F8();
          sub_1A56E9774();
          OUTLINED_FUNCTION_21();
          *v125 = 0x1000000000000021;
          v125[1] = 0x80000001A5A0F630;
          OUTLINED_FUNCTION_3_43((uint64_t)v125, (uint64_t)"NIOIMAPCore2/ParserLibrary.swift");
          OUTLINED_FUNCTION_11_20(v126, 57);
          OUTLINED_FUNCTION_4_4();
          OUTLINED_FUNCTION_34_4();
        }
        goto LABEL_16;
      }
      goto LABEL_76;
    }
    if (v60 == 43)
    {
      if (!v63)
        goto LABEL_82;
      if (v63 == 1)
        goto LABEL_80;
      OUTLINED_FUNCTION_4_19();
      if (!v85 & v84)
        goto LABEL_42;
      v148 = v87;
      if (v86 != 2)
      {
        OUTLINED_FUNCTION_4_19();
        if (!(!v85 & v84))
        {
          OUTLINED_FUNCTION_16_19();
          if (v88 == 3)
            goto LABEL_58;
          while (1)
          {
            OUTLINED_FUNCTION_10_13();
            if (!v85 & v84)
              break;
            OUTLINED_FUNCTION_8_29();
            if (!v85)
              break;
            v148 = v90 + v89;
            if (__OFADD__(v90, v89))
              break;
            OUTLINED_FUNCTION_17_20();
            if (v85)
              goto LABEL_59;
          }
        }
LABEL_56:
        v148 = 0;
        LOBYTE(v159) = 1;
LABEL_59:
        v51 = a5;
        v50 = a6;
        goto LABEL_60;
      }
    }
    else
    {
      if (v60 == 45)
      {
        if (v63)
        {
          if (v63 != 1)
          {
            OUTLINED_FUNCTION_4_19();
            if (!(!v85 & v84))
            {
              if (v82 == 2)
              {
                LOBYTE(v159) = 0;
                v148 = -(uint64_t)v83;
                goto LABEL_60;
              }
              if ((v81 - 48) > 9u)
                goto LABEL_56;
              v148 = -10 * v83 - (v81 - 48);
              if (v82 == 3)
              {
LABEL_58:
                LOBYTE(v159) = 0;
                goto LABEL_59;
              }
              while (1)
              {
                OUTLINED_FUNCTION_10_13();
                if (!v85 & v84)
                  goto LABEL_56;
                OUTLINED_FUNCTION_8_29();
                if (!v85)
                  goto LABEL_56;
                v148 = v128 - v127;
                if (__OFSUB__(v128, v127))
                  goto LABEL_56;
                OUTLINED_FUNCTION_17_20();
                if (v85)
                  goto LABEL_59;
              }
            }
            goto LABEL_42;
          }
LABEL_80:
          v148 = 0;
          goto LABEL_43;
        }
        __break(1u);
LABEL_82:
        __break(1u);
        return;
      }
      if (!v63 || (v60 - 48) > 9u)
      {
LABEL_42:
        v148 = 0;
        LOBYTE(v63) = 1;
LABEL_43:
        LOBYTE(v159) = v63;
        goto LABEL_60;
      }
      v148 = (v60 - 48);
      if (v63 != 1)
      {
        OUTLINED_FUNCTION_4_19();
        if (!(!v85 & v84))
        {
          OUTLINED_FUNCTION_16_19();
          if (v91 == 2)
            goto LABEL_58;
          while (1)
          {
            OUTLINED_FUNCTION_10_13();
            if (!v85 & v84)
              break;
            OUTLINED_FUNCTION_8_29();
            if (!v85)
              break;
            v148 = v93 + v92;
            if (__OFADD__(v93, v92))
              break;
            OUTLINED_FUNCTION_17_20();
            if (v85)
              goto LABEL_59;
          }
        }
        goto LABEL_56;
      }
    }
    LOBYTE(v159) = 0;
    goto LABEL_60;
  }
}

unint64_t sub_1A56E9774()
{
  unint64_t result;

  result = qword_1EE7968C0;
  if (!qword_1EE7968C0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ParserError, &type metadata for ParserError);
    atomic_store(result, (unint64_t *)&qword_1EE7968C0);
  }
  return result;
}

void OUTLINED_FUNCTION_0_83()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1A5751974(v0, v1, v2);
}

void OUTLINED_FUNCTION_1_63()
{
  uint64_t v0;
  uint64_t v1;

  sub_1A56814E0(32, 0xE100000000000000, v1, *(_DWORD *)(v0 + 20));
}

Swift::Int OUTLINED_FUNCTION_2_53()
{
  Swift::Int v0;
  Swift::String v1;

  v1._countAndFlagsBits = 32;
  v1._object = (void *)0xE100000000000000;
  return ByteBuffer._setStringSlowpath(_:at:)(v1, v0);
}

void OUTLINED_FUNCTION_3_43(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a1 + 16) = 0xD000000000000020;
  *(_QWORD *)(a1 + 24) = (a2 - 32) | 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_6_34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  return sub_1A573EE0C(v17, v18, v20, v19, a16, a17, a14);
}

void OUTLINED_FUNCTION_7_28(uint64_t a1, uint64_t a2)
{
  strcpy((char *)a2, "Invalid UTF8");
  *(_BYTE *)(a2 + 13) = 0;
  *(_WORD *)(a2 + 14) = -5120;
}

uint64_t OUTLINED_FUNCTION_10_27(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return sub_1A573EE0C(a1, a2, a3, a4, a5, a6, a14);
}

uint64_t OUTLINED_FUNCTION_11_20@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a1 + 32) = a2;
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_13_23()
{
  return 0x737265762D737061;
}

void OUTLINED_FUNCTION_14_20(unint64_t a1, unint64_t a2)
{
  sub_1A56BA418(a1, a2);
}

uint64_t OUTLINED_FUNCTION_15_25()
{
  return 0x69706F742D737061;
}

uint64_t OUTLINED_FUNCTION_18_19()
{
  return 0x786F626C69616DLL;
}

uint64_t OUTLINED_FUNCTION_21_20()
{
  return sub_1A594B5F8();
}

uint64_t OUTLINED_FUNCTION_22_20()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_24_14()
{
  uint64_t v0;

  return v0;
}

uint64_t ContinuationRequest.hash(into:)(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, char a5)
{
  unsigned int v5;
  uint64_t result;
  unint64_t v9;

  v5 = a3;
  if ((a5 & 1) != 0)
  {
    v9 = HIDWORD(a3);
    sub_1A594CE88();
    result = swift_beginAccess();
    if (v9 < v5)
      __break(1u);
    else
      return sub_1A594CE70();
  }
  else
  {
    sub_1A594CE88();
    sub_1A56E9CF0(a2);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    ResponseText.hash(into:)(a1, a2);
    sub_1A568380C(a2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t static ContinuationRequest.__derived_enum_equals(_:_:)(uint64_t result, uint64_t a2, uint64_t a3, char a4, unint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  char v29;

  v13 = result;
  if ((a4 & 1) == 0)
  {
    if ((a8 & 1) == 0)
    {
      v14 = a5 & 0xF000000000000007;
      if ((~result & 0xF000000000000007) != 0)
      {
        if (v14 != 0xF000000000000007)
        {
          OUTLINED_FUNCTION_1_64();
          OUTLINED_FUNCTION_3_44();
          sub_1A56E9CF0(a5);
          sub_1A56E9CF0(v13);
          static ResponseTextCode.__derived_enum_equals(_:_:)(v13);
          v27 = v26;
          sub_1A568380C(a5);
          sub_1A568380C(v13);
          if ((v27 & 1) != 0)
          {
LABEL_18:
            if (a2 == a6 && a3 == a7)
            {
              OUTLINED_FUNCTION_0_84(a5);
              OUTLINED_FUNCTION_0_84(v13);
            }
            else
            {
              v29 = sub_1A594CD38();
              OUTLINED_FUNCTION_2_54();
              OUTLINED_FUNCTION_0_84(v13);
              if ((v29 & 1) == 0)
                return 0;
            }
            return 1;
          }
          OUTLINED_FUNCTION_2_54();
          OUTLINED_FUNCTION_0_84(v13);
        }
      }
      else if (v14 == 0xF000000000000007)
      {
        OUTLINED_FUNCTION_1_64();
        OUTLINED_FUNCTION_3_44();
        goto LABEL_18;
      }
    }
    return 0;
  }
  if ((a8 & 1) == 0)
    return 0;
  if (HIDWORD(a2) < a2)
  {
    __break(1u);
  }
  else if (HIDWORD(a6) >= a6)
  {
    if (HIDWORD(a2) - (_DWORD)a2 == HIDWORD(a6) - (_DWORD)a6)
    {
      if ((a3 & 0xFFFFFFFFFFFFFFLL) != (a7 & 0xFFFFFFFFFFFFFFLL) || result != a5)
      {
        v16 = 1;
        v17 = OUTLINED_FUNCTION_4_37();
        sub_1A56E9D40(v17, v18, v19, v20);
        sub_1A56E9D40(a5, a6, a7, 1);
        v21 = sub_1A566B918();
        v22 = OUTLINED_FUNCTION_4_37();
        sub_1A56E9D6C(v22, v23, v24, v25);
        if ((v21 & 1) != 0)
          return v16;
        return 0;
      }
      return 1;
    }
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t ContinuationRequest.hashValue.getter(unint64_t a1, unint64_t a2, uint64_t a3, char a4)
{
  char v7;
  _BYTE v9[72];

  v7 = a4 & 1;
  sub_1A594CE64();
  ContinuationRequest.hash(into:)((uint64_t)v9, a1, a2, a3, v7);
  return sub_1A594CED0();
}

uint64_t sub_1A56E9C50()
{
  uint64_t v0;

  return ContinuationRequest.hashValue.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_1A56E9C60(uint64_t a1)
{
  uint64_t v1;

  return ContinuationRequest.hash(into:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t sub_1A56E9C70()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  char v4;
  _BYTE v6[72];

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_BYTE *)(v0 + 24);
  sub_1A594CE64();
  ContinuationRequest.hash(into:)((uint64_t)v6, v1, v2, v3, v4);
  return sub_1A594CED0();
}

uint64_t sub_1A56E9CCC(uint64_t a1, uint64_t a2)
{
  return static ContinuationRequest.__derived_enum_equals(_:_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(_BYTE *)(a2 + 24));
}

unint64_t sub_1A56E9CF0(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return sub_1A56E9D04(result);
  return result;
}

unint64_t sub_1A56E9D04(unint64_t result)
{
  switch((result >> 59) & 0x1E | (result >> 2) & 1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
      result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A56E9D40(unint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
    return swift_retain();
  sub_1A56E9CF0(a1);
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t sub_1A56E9D6C(unint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
    return swift_release();
  sub_1A568380C(a1);
  return swift_bridgeObjectRelease();
}

unint64_t sub_1A56E9D9C()
{
  unint64_t result;

  result = qword_1EE7A9BC0;
  if (!qword_1EE7A9BC0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ContinuationRequest, &type metadata for ContinuationRequest);
    atomic_store(result, (unint64_t *)&qword_1EE7A9BC0);
  }
  return result;
}

uint64_t destroy for ContinuationRequest(uint64_t a1)
{
  return sub_1A56E9D6C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for ContinuationRequest(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1A56E9D40(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for ContinuationRequest(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1A56E9D40(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  sub_1A56E9D6C(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for ContinuationRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  sub_1A56E9D6C(v5, v7, v6, v8);
  return a1;
}

ValueMetadata *type metadata accessor for ContinuationRequest()
{
  return &type metadata for ContinuationRequest;
}

uint64_t OUTLINED_FUNCTION_0_84(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return sub_1A56E9D6C(a1, v2, v1, 0);
}

uint64_t OUTLINED_FUNCTION_1_64()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  return sub_1A56E9D40(v2, v1, v0, 0);
}

uint64_t OUTLINED_FUNCTION_2_54()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  return sub_1A56E9D6C(v1, v0, v2, 0);
}

uint64_t OUTLINED_FUNCTION_3_44()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  return sub_1A56E9D40(v1, v0, v2, 0);
}

uint64_t OUTLINED_FUNCTION_4_37()
{
  uint64_t v0;

  return v0;
}

void static ExtendedSearchResponse.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  _QWORD v18[4];
  char v19;
  _QWORD v20[4];
  char v21;

  v4 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v7 = *(_BYTE *)(a1 + 32);
  v8 = *(_QWORD *)a2;
  v9 = *(_QWORD *)(a2 + 8);
  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_QWORD *)(a2 + 24);
  v12 = *(_BYTE *)(a2 + 32);
  if (v4)
  {
    if (v9)
    {
      v18[0] = *(_QWORD *)a1;
      v18[1] = v4;
      v18[2] = v6;
      v18[3] = v5;
      v19 = v7 & 1;
      v20[0] = v8;
      v20[1] = v9;
      v20[2] = v10;
      v20[3] = v11;
      v21 = v12 & 1;
      v17 = static SearchCorrelator.__derived_struct_equals(_:_:)((uint64_t)v18, (uint64_t)v20);
      OUTLINED_FUNCTION_2_55();
      OUTLINED_FUNCTION_2_55();
      sub_1A55235F0(v8, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_1_65();
      if ((v17 & 1) == 0)
        return;
      goto LABEL_7;
    }
LABEL_6:
    sub_1A55235F0(*(_QWORD *)a1, v4);
    v13 = OUTLINED_FUNCTION_4_38();
    sub_1A55235F0(v13, v14);
    OUTLINED_FUNCTION_1_65();
    v15 = OUTLINED_FUNCTION_4_38();
    sub_1A55240D4(v15, v16);
    return;
  }
  if (v9)
    goto LABEL_6;
LABEL_7:
  if (*(unsigned __int8 *)(a1 + 33) == *(unsigned __int8 *)(a2 + 33))
    sub_1A5689CDC();
}

void sub_1A56EA0EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  Swift::UInt32 v5;
  uint64_t v6;
  unint64_t v7;
  Swift::Int v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  int v13;
  BOOL v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  Swift::Int v25;
  Swift::Int v26;
  char v27;
  int v28;
  int v29;
  BOOL v30;
  Swift::Int v31;
  Swift::Int v32;
  char v33;
  int v34;
  int v35;
  Swift::Int v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[4];
  char v40;

  v2 = v1;
  v4 = v1 + 8;
  v5 = *(_DWORD *)(v1 + 20);
  v6 = OUTLINED_FUNCTION_135_1();
  sub_1A56814E0(v6, v7, v4, v5);
  if ((v9 & 1) != 0)
  {
    v10 = OUTLINED_FUNCTION_135_1();
    v8 = OUTLINED_FUNCTION_165_1(v10, v11);
  }
  v12 = v8;
  v13 = *(_DWORD *)(v2 + 20);
  v14 = __CFADD__(v13, (_DWORD)v8);
  v15 = v13 + v8;
  if (v14)
  {
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  *(_DWORD *)(v2 + 20) = v15;
  v16 = *(_QWORD *)(a1 + 8);
  if (v16)
  {
    v18 = *(_QWORD *)(a1 + 16);
    v17 = *(_QWORD *)(a1 + 24);
    v39[0] = *(_QWORD *)a1;
    v39[1] = v16;
    v39[2] = v18;
    v39[3] = v17;
    v40 = *(_BYTE *)(a1 + 32) & 1;
    swift_retain();
    swift_retain();
    v19 = OUTLINED_FUNCTION_6_35();
    sub_1A55235F0(v19, v20);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A56FA5D4((uint64_t)v39);
    v22 = v21;
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v23 = OUTLINED_FUNCTION_6_35();
    sub_1A55240D4(v23, v24);
  }
  else
  {
    v22 = 0;
  }
  v25 = v12 + v22;
  if (__OFADD__(v12, v22))
    goto LABEL_25;
  if (*(_BYTE *)(a1 + 33) == 1)
  {
    OUTLINED_FUNCTION_8_30(1145656608, 0xE400000000000000);
    if ((v27 & 1) != 0)
      v26 = OUTLINED_FUNCTION_165_1(1145656608, 0xE400000000000000);
    v28 = *(_DWORD *)(v2 + 20);
    v14 = __CFADD__(v28, (_DWORD)v26);
    v29 = v28 + v26;
    if (v14)
      goto LABEL_30;
    *(_DWORD *)(v2 + 20) = v29;
  }
  else
  {
    v26 = 0;
  }
  v30 = __OFADD__(v25, v26);
  v31 = v25 + v26;
  if (v30)
    goto LABEL_26;
  if (*(_QWORD *)(*(_QWORD *)(a1 + 40) + 16))
  {
    OUTLINED_FUNCTION_8_30(32, 0xE100000000000000);
    if ((v33 & 1) != 0)
      v32 = OUTLINED_FUNCTION_165_1(32, 0xE100000000000000);
    v34 = *(_DWORD *)(v2 + 20);
    v14 = __CFADD__(v34, (_DWORD)v32);
    v35 = v34 + v32;
    if (v14)
      goto LABEL_29;
    *(_DWORD *)(v2 + 20) = v35;
  }
  else
  {
    v32 = 0;
  }
  v36 = v31 + v32;
  if (__OFADD__(v31, v32))
    goto LABEL_27;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A56633D4();
  v38 = v37;
  swift_bridgeObjectRelease();
  if (__OFADD__(v36, v38))
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
  }
}

uint64_t ExtendedSearchResponse.correlator.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A56EAA34(v1, a1);
}

uint64_t ExtendedSearchResponse.correlator.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1A56EAA7C(a1, v1);
}

double (*ExtendedSearchResponse.correlator.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ExtendedSearchResponse.kind.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t ExtendedSearchResponse.kind.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 33) = result & 1;
  return result;
}

double (*ExtendedSearchResponse.kind.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ExtendedSearchResponse.returnData.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t ExtendedSearchResponse.returnData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 40) = a1;
  return result;
}

double (*ExtendedSearchResponse.returnData.modify())(_QWORD)
{
  return nullsub_1;
}

double ExtendedSearchResponse.init(correlator:kind:returnData:)@<D0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v6;
  char v7;
  double result;
  __int128 v9;
  _OWORD v10[2];
  char v11;

  v6 = a2 & 1;
  sub_1A56EAAC4(a1, (uint64_t)v10);
  v7 = v11;
  result = *(double *)v10;
  v9 = v10[1];
  *(_OWORD *)a4 = v10[0];
  *(_OWORD *)(a4 + 16) = v9;
  *(_BYTE *)(a4 + 32) = v7;
  *(_BYTE *)(a4 + 33) = v6;
  *(_QWORD *)(a4 + 40) = a3;
  return result;
}

uint64_t ExtendedSearchResponse.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (*(_QWORD *)(v0 + 8))
  {
    sub_1A594CE94();
    v1 = OUTLINED_FUNCTION_5_34();
    sub_1A55235F0(v1, v2);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    SearchCorrelator.hash(into:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = OUTLINED_FUNCTION_5_34();
    sub_1A55240D4(v3, v4);
  }
  else
  {
    sub_1A594CE94();
  }
  sub_1A594CE88();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5695818();
  return swift_bridgeObjectRelease();
}

BOOL static ExtendedSearchResponse.Kind.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void ExtendedSearchResponse.hashValue.getter()
{
  OUTLINED_FUNCTION_15_10();
  ExtendedSearchResponse.hash(into:)();
  sub_1A594CED0();
  OUTLINED_FUNCTION_8_7();
}

uint64_t sub_1A56EA524()
{
  sub_1A594CE64();
  ExtendedSearchResponse.hash(into:)();
  return sub_1A594CED0();
}

uint64_t ExtendedSearchResponse.Kind.hash(into:)()
{
  return sub_1A594CE88();
}

void ExtendedSearchResponse.Kind.hashValue.getter()
{
  OUTLINED_FUNCTION_15_10();
  sub_1A594CE88();
  sub_1A594CED0();
  OUTLINED_FUNCTION_8_7();
}

BOOL sub_1A56EA5B8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static ExtendedSearchResponse.Kind.__derived_enum_equals(_:_:)(*a1, *a2);
}

void sub_1A56EA5C4()
{
  ExtendedSearchResponse.Kind.hashValue.getter();
}

uint64_t sub_1A56EA5CC()
{
  return ExtendedSearchResponse.Kind.hash(into:)();
}

void ExtendedSearchResponse.matchedUIDs.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 33) == 1)
    sub_1A56EA604();
}

void sub_1A56EA604()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unsigned int *v4;
  unint64_t v5;
  unsigned int *i;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
    return;
  v3 = 0;
  v4 = (unsigned int *)(v1 + 56);
  while (*((unsigned __int16 *)v4 + 2) >> 13 != 2)
  {
LABEL_6:
    ++v3;
    v4 += 8;
    if (v2 == v3)
      goto LABEL_9;
  }
  if (BYTE4(*((_QWORD *)v4 - 2)) == 255)
  {
    sub_1A5503BA0(*((_QWORD *)v4 - 3), *((_QWORD *)v4 - 2));
    goto LABEL_6;
  }
  if (v2 == v3)
  {
LABEL_9:
    v5 = 0;
    for (i = (unsigned int *)(v1 + 56);
          (((unint64_t)*((unsigned __int16 *)i + 2) << 32) & 0xE00000000000) != 0xA00000000000;
          i += 8)
    {
      v7 = v5 + 1;
      if (__OFADD__(v5, 1))
      {
        __break(1u);
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
      ++v5;
      if (v7 == v2)
        return;
    }
    if (v2 == v5)
      return;
    if (v5 >= v2)
      goto LABEL_23;
    v8 = *i | ((unint64_t)*((unsigned __int16 *)i + 2) << 32);
    if ((v8 & 0xE00000000000) != 0xA00000000000)
      goto LABEL_25;
    v9 = *((_QWORD *)i - 2);
    v10 = *((_QWORD *)i - 3);
    v11 = *((_QWORD *)i - 1);
    goto LABEL_21;
  }
  if (v3 < v2)
  {
    v8 = *v4 | ((unint64_t)*((unsigned __int16 *)v4 + 2) << 32);
    v11 = *((_QWORD *)v4 - 1);
    v10 = *((_QWORD *)v4 - 3);
    v9 = *((_QWORD *)v4 - 2);
LABEL_21:
    sub_1A56664F4(v10, v9, v11, v8);
    return;
  }
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
}

void ExtendedSearchResponse.matchedSequenceNumbers.getter()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 33) & 1) == 0)
    sub_1A56EA604();
}

uint64_t ExtendedSearchResponse.count.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t i;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
    return 0;
  v3 = 0;
  for (i = v1 + 56;
        (((unint64_t)*(unsigned __int16 *)(i + 4) << 32) & 0xE00000000000) != 0x600000000000;
        i += 32)
  {
    if (v2 == ++v3)
      return 0;
  }
  if (v2 == v3)
    return 0;
  if (v3 >= v2)
  {
    __break(1u);
  }
  else if ((((unint64_t)*(unsigned __int16 *)(i + 4) << 32) & 0xE00000000000) == 0x600000000000)
  {
    return *(_QWORD *)(i - 24);
  }
  __break(1u);
  return result;
}

unint64_t ExtendedSearchResponse.minUID.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t i;
  unint64_t result;

  if (*(_BYTE *)(v0 + 33) != 1)
    return OUTLINED_FUNCTION_4_30(0);
  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
    return OUTLINED_FUNCTION_4_30(0);
  v3 = 0;
  for (i = v1 + 56; *(unsigned __int16 *)(i + 4) >> 13; i += 32)
  {
    if (v2 == ++v3)
      return OUTLINED_FUNCTION_4_30(0);
  }
  if (v2 == v3)
    return OUTLINED_FUNCTION_4_30(0);
  if (v3 >= v2)
  {
    __break(1u);
  }
  else if (!(*(unsigned __int16 *)(i + 4) >> 13))
  {
    return OUTLINED_FUNCTION_4_30(*(unsigned int *)(i - 24));
  }
  __break(1u);
  return result;
}

unint64_t ExtendedSearchResponse.minSequenceNumber.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t i;
  unint64_t result;

  if ((*(_BYTE *)(v0 + 33) & 1) != 0)
    return OUTLINED_FUNCTION_4_30(0);
  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
    return OUTLINED_FUNCTION_4_30(0);
  v3 = 0;
  for (i = v1 + 56; *(unsigned __int16 *)(i + 4) >> 13; i += 32)
  {
    if (v2 == ++v3)
      return OUTLINED_FUNCTION_4_30(0);
  }
  if (v2 == v3)
    return OUTLINED_FUNCTION_4_30(0);
  if (v3 >= v2)
  {
    __break(1u);
  }
  else if (!(*(unsigned __int16 *)(i + 4) >> 13))
  {
    return OUTLINED_FUNCTION_4_30(*(unsigned int *)(i - 24));
  }
  __break(1u);
  return result;
}

unint64_t ExtendedSearchResponse.maxUID.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t i;
  unint64_t result;

  if (*(_BYTE *)(v0 + 33) != 1)
    return OUTLINED_FUNCTION_4_30(0);
  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
    return OUTLINED_FUNCTION_4_30(0);
  v3 = 0;
  for (i = v1 + 56;
        (((unint64_t)*(unsigned __int16 *)(i + 4) << 32) & 0xE00000000000) != 0x200000000000;
        i += 32)
  {
    if (v2 == ++v3)
      return OUTLINED_FUNCTION_4_30(0);
  }
  if (v2 == v3)
    return OUTLINED_FUNCTION_4_30(0);
  if (v3 >= v2)
  {
    __break(1u);
  }
  else if ((((unint64_t)*(unsigned __int16 *)(i + 4) << 32) & 0xE00000000000) == 0x200000000000)
  {
    return OUTLINED_FUNCTION_4_30(*(unsigned int *)(i - 24));
  }
  __break(1u);
  return result;
}

unint64_t ExtendedSearchResponse.maxSequenceNumber.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t i;
  unint64_t result;

  if ((*(_BYTE *)(v0 + 33) & 1) != 0)
    return OUTLINED_FUNCTION_4_30(0);
  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
    return OUTLINED_FUNCTION_4_30(0);
  v3 = 0;
  for (i = v1 + 56;
        (((unint64_t)*(unsigned __int16 *)(i + 4) << 32) & 0xE00000000000) != 0x200000000000;
        i += 32)
  {
    if (v2 == ++v3)
      return OUTLINED_FUNCTION_4_30(0);
  }
  if (v2 == v3)
    return OUTLINED_FUNCTION_4_30(0);
  if (v3 >= v2)
  {
    __break(1u);
  }
  else if ((((unint64_t)*(unsigned __int16 *)(i + 4) << 32) & 0xE00000000000) == 0x200000000000)
  {
    return OUTLINED_FUNCTION_4_30(*(unsigned int *)(i - 24));
  }
  __break(1u);
  return result;
}

uint64_t sub_1A56EAA34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1340);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A56EAA7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1340);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A56EAAC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A1340);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A56EAB10()
{
  unint64_t result;

  result = qword_1EE7A9BC8;
  if (!qword_1EE7A9BC8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ExtendedSearchResponse, &type metadata for ExtendedSearchResponse);
    atomic_store(result, (unint64_t *)&qword_1EE7A9BC8);
  }
  return result;
}

unint64_t sub_1A56EAB50()
{
  unint64_t result;

  result = qword_1EE7A9BD0;
  if (!qword_1EE7A9BD0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ExtendedSearchResponse.Kind, &type metadata for ExtendedSearchResponse.Kind);
    atomic_store(result, (unint64_t *)&qword_1EE7A9BD0);
  }
  return result;
}

uint64_t destroy for ExtendedSearchResponse(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ExtendedSearchResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  __int128 v6;

  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    v5 = *(_DWORD *)(a2 + 28);
    *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 28) = v5;
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  }
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for ExtendedSearchResponse(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  int v5;
  int v6;
  char v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  v4 = *((_QWORD *)a2 + 1);
  if (*(_QWORD *)(a1 + 8))
  {
    if (v4)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 24) = *((_DWORD *)a2 + 6);
      v5 = *((_DWORD *)a2 + 7);
      *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
      *(_DWORD *)(a1 + 28) = v5;
    }
    else
    {
      sub_1A56EAD64(a1);
      v7 = *((_BYTE *)a2 + 32);
      v8 = a2[1];
      *(_OWORD *)a1 = *a2;
      *(_OWORD *)(a1 + 16) = v8;
      *(_BYTE *)(a1 + 32) = v7;
    }
  }
  else if (v4)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
    *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
    *(_DWORD *)(a1 + 24) = *((_DWORD *)a2 + 6);
    v6 = *((_DWORD *)a2 + 7);
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    *(_DWORD *)(a1 + 28) = v6;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    v9 = *a2;
    v10 = a2[1];
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    *(_OWORD *)a1 = v9;
    *(_OWORD *)(a1 + 16) = v10;
  }
  *(_BYTE *)(a1 + 33) = *((_BYTE *)a2 + 33);
  *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A56EAD64(uint64_t a1)
{
  _s21LocationAndExtensionsVwxx();
  return a1;
}

uint64_t assignWithTake for ExtendedSearchResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  __int128 v6;

  if (!*(_QWORD *)(a1 + 8))
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (!v4)
  {
    sub_1A56EAD64(a1);
LABEL_5:
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    goto LABEL_6;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v5 = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = v5;
LABEL_6:
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExtendedSearchResponse(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 40);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ExtendedSearchResponse(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ExtendedSearchResponse()
{
  return &type metadata for ExtendedSearchResponse;
}

uint64_t storeEnumTagSinglePayload for ExtendedSearchResponse.Kind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A56EAF0C + 4 * byte_1A59B3CD5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A56EAF40 + 4 * asc_1A59B3CD0[v4]))();
}

uint64_t sub_1A56EAF40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A56EAF48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A56EAF50);
  return result;
}

uint64_t sub_1A56EAF5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A56EAF64);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A56EAF68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A56EAF70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ExtendedSearchResponse.Kind()
{
  return &type metadata for ExtendedSearchResponse.Kind;
}

uint64_t OUTLINED_FUNCTION_1_65()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1A55240D4(v1, v0);
}

uint64_t OUTLINED_FUNCTION_2_55()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1A55235F0(v1, v0);
}

uint64_t OUTLINED_FUNCTION_4_38()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_5_34()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_6_35()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_8_30(uint64_t a1, unint64_t a2)
{
  Swift::UInt32 v2;
  uint64_t v3;

  sub_1A56814E0(a1, a2, v3, v2);
}

void sub_1A56EB010(Swift::Int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  void **v10;
  void *v11;
  uint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  Swift::Int v15;
  char v16;
  Swift::String v17;
  int v18;
  Swift::Int v19;
  Swift::Int v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  Swift::Int v24;
  char v25;
  char v26;
  Swift::String v27;
  int v28;
  BOOL v29;
  int v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;

  v4 = v3;
  v6 = *(_QWORD *)(a2 + 16);
  if (v6)
  {
    v7 = a3;
    v9 = a3 + 8;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v32 = v7;
    v10 = (void **)(a2 + 40);
    v33 = v9;
    while (1)
    {
      v12 = (uint64_t)*(v10 - 1);
      v11 = *v10;
      v13 = *(unsigned int *)(v7 + 20);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v14 = v4;
      sub_1A56814E0(32, 0xE100000000000000, v9, v13);
      if ((v16 & 1) != 0)
      {
        v17._countAndFlagsBits = 32;
        v17._object = (void *)0xE100000000000000;
        v15 = ByteBuffer._setStringSlowpath(_:at:)(v17, v13);
        v9 = v33;
      }
      v18 = *(_DWORD *)(v7 + 20);
      v19 = (v18 + v15);
      if (__CFADD__(v18, (_DWORD)v15))
        break;
      *(_DWORD *)(v7 + 20) = v19;
      v20 = a1 + v15;
      if (__OFADD__(a1, v15))
        goto LABEL_15;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v21 = v9;
      v22 = v12;
      sub_1A56814E0(v12, (unint64_t)v11, v21, v19);
      v24 = v23;
      v26 = v25;
      swift_bridgeObjectRelease();
      if ((v26 & 1) != 0)
      {
        v27._countAndFlagsBits = v22;
        v27._object = v11;
        v24 = ByteBuffer._setStringSlowpath(_:at:)(v27, v19);
      }
      v7 = v32;
      v28 = *(_DWORD *)(v32 + 20);
      v29 = __CFADD__(v28, (_DWORD)v24);
      v30 = v28 + v24;
      if (v29)
        goto LABEL_16;
      *(_DWORD *)(v32 + 20) = v30;
      swift_bridgeObjectRelease();
      v31 = __OFADD__(v20, v24);
      a1 = v20 + v24;
      if (v31)
        goto LABEL_17;
      v10 += 4;
      --v6;
      v4 = v14;
      v9 = v33;
      if (!v6)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
  }
}

BOOL static StreamingKind.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD *v4;
  unsigned __int8 v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  unsigned __int8 v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  __int8 v16;
  BOOL v17;
  int v20;
  int v22;
  int8x16_t v23;
  int v24;
  char v26;
  char v27;
  int8x16_t v29;
  int8x16_t v30;
  unsigned __int8 v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 v36;

  v3 = sub_1A56DDBAC(a1, (uint64_t)&v32);
  v4 = (_QWORD *)v32;
  v5 = v36;
  v6 = v36 >> 6;
  if (v6)
  {
    if (v6 == 1)
    {
      v36 &= 0x3Fu;
      v7 = v33;
      v8 = v34;
      v9 = v35;
      OUTLINED_FUNCTION_21_21(v3, (uint64_t)&v29);
      v10 = v31;
      if ((v31 & 0xC0) != 0x40)
        return 0;
      v31 &= 0x3Fu;
      v11 = v30.u8[0];
      v12 = v30.i64[1];
      if ((_s12NIOIMAPCore216SectionSpecifierV4PartV23__derived_struct_equalsySbAE_AEtFZ_0(v4, v29.i64[0]) & 1) == 0)
        return 0;
      if (v8)
      {
        if (v8 != 1)
          __asm { BR              X9 }
        if (v11 != 1)
          return 0;
      }
      else if (v11)
      {
        return 0;
      }
      sub_1A5689E98();
      if ((v27 & 1) == 0)
        return 0;
      if ((v5 & 1) == 0)
        return (v10 & 1) == 0 && v9 == v12;
      if ((v10 & 1) != 0)
        return 1;
    }
    else
    {
      v17 = v36 == 128 && (v34 | v35 | v32 | v33) == 0;
      if (v17)
      {
        sub_1A56DDBAC(a2, (uint64_t)&v29);
        OUTLINED_FUNCTION_18_20();
        if (!v17)
          return 0;
        if (v22 != 128)
          return 0;
        v23 = vorrq_s8(v29, v30);
        return !*(_QWORD *)&vorr_s8(*(int8x8_t *)v23.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v23, v23, 8uLL));
      }
      if (v36 == 128 && v32 == 1 && (v34 | v35 | v33) == 0)
      {
        sub_1A56DDBAC(a2, (uint64_t)&v29);
        OUTLINED_FUNCTION_18_20();
        if (!v17)
          return 0;
        if (v24 != 128 || v29.i64[0] != 1)
          return 0;
      }
      else
      {
        sub_1A56DDBAC(a2, (uint64_t)&v29);
        OUTLINED_FUNCTION_18_20();
        if (!v17)
          return 0;
        if (v20 != 128 || v29.i64[0] != 2)
          return 0;
      }
      if (!(v30.i64[0] | v30.i64[1] | v29.i64[1]))
        return 1;
    }
  }
  else
  {
    v36 &= 0x3Fu;
    v13 = v33;
    v14 = v34;
    sub_1A56DDBAC(a2, (uint64_t)&v29);
    if (v31 > 0x3Fu)
      return 0;
    v15 = v29.i64[1];
    v16 = v30.i8[0];
    if ((_s12NIOIMAPCore216SectionSpecifierV4PartV23__derived_struct_equalsySbAE_AEtFZ_0(v4, v29.i64[0]) & 1) == 0)
      return 0;
    if ((v14 & 1) == 0)
    {
      if (v13 == v15)
        v26 = v16;
      else
        v26 = 1;
      return (v26 & 1) == 0;
    }
    if ((v16 & 1) != 0)
      return 1;
  }
  return 0;
}

uint64_t ResponseOrContinuationRequest.hash(into:)(uint64_t a1)
{
  void *v2;
  void *v3;
  __n128 *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _BYTE v12[184];
  _BYTE __src[184];
  _BYTE v14[184];
  _BYTE v15[184];
  _BYTE __dst[184];

  OUTLINED_FUNCTION_5_35(a1, __src);
  v2 = sub_1A56EF344(__src, __dst);
  OUTLINED_FUNCTION_5_35((uint64_t)v2, v14);
  if (sub_1A56EF358((uint64_t)v14) == 1)
  {
    v3 = (void *)sub_1A56EF364((uint64_t)v14);
    sub_1A56EF344(v3, v15);
    sub_1A594CE88();
    sub_1A56EF344(__dst, v12);
    v4 = (__n128 *)sub_1A56EF364((uint64_t)v12);
    sub_1A56EFC40(v4);
    Response.hash(into:)();
  }
  else
  {
    v5 = sub_1A56EF364((uint64_t)v14);
    v6 = *(_QWORD *)v5;
    v7 = *(_QWORD *)(v5 + 8);
    v8 = *(_QWORD *)(v5 + 16);
    v9 = *(_BYTE *)(v5 + 24);
    sub_1A594CE88();
    sub_1A56EF344(__dst, v15);
    v10 = sub_1A56EF364((uint64_t)v15);
    OUTLINED_FUNCTION_16_20(v10);
    ContinuationRequest.hash(into:)(a1, v6, v7, v8, v9);
  }
  return OUTLINED_FUNCTION_36_12();
}

void static ResponseOrContinuationRequest.__derived_enum_equals(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  int v4;
  void *v5;
  void *v6;
  int v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unsigned int v19;
  unsigned int v20;
  int v21;
  int v22;
  int v23;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33[32];
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  _BYTE v38[184];
  _BYTE v39[184];
  _BYTE __dst[184];
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;

  OUTLINED_FUNCTION_16_4();
  v1 = v0;
  v3 = (uint64_t)v2;
  sub_1A56EF344(v2, __dst);
  v4 = sub_1A56EF358((uint64_t)__dst);
  v5 = (void *)sub_1A56EF364((uint64_t)__dst);
  if (v4 == 1)
  {
    v6 = sub_1A56EF344(v5, &v41);
    OUTLINED_FUNCTION_5_35((uint64_t)v6, v38);
    v7 = sub_1A56EF358((uint64_t)v38);
    v8 = (void *)sub_1A56EF364((uint64_t)v38);
    if (v7 == 1)
    {
      sub_1A56EF344(v8, v39);
      OUTLINED_FUNCTION_8_31(v1);
      OUTLINED_FUNCTION_8_31(v3);
      static Response.__derived_enum_equals(_:_:)();
      v9 = OUTLINED_FUNCTION_83_2();
      sub_1A56EFB30(v9);
      sub_1A56EFB30(v3);
    }
    else
    {
      sub_1A56EFAF4((uint64_t)v8, (uint64_t)v39);
    }
    goto LABEL_25;
  }
  v10 = sub_1A56EFAF4((uint64_t)v5, (uint64_t)v38);
  OUTLINED_FUNCTION_5_35(v10, v39);
  v11 = sub_1A56EF358((uint64_t)v39);
  v12 = (void *)sub_1A56EF364((uint64_t)v39);
  if (v11 == 1)
  {
    sub_1A56EF344(v12, &v41);
    goto LABEL_25;
  }
  sub_1A56EFAF4((uint64_t)v12, (uint64_t)v33);
  v13 = sub_1A56EFAF4((uint64_t)v38, (uint64_t)&v41);
  if ((v44 & 1) == 0)
  {
    v27 = v41;
    v28 = v42;
    v29 = v43;
    OUTLINED_FUNCTION_57_7(v13, v14, v15, v16, v17);
    if ((v37 & 1) == 0)
    {
      v30 = v34;
      v31 = v35;
      v32 = v36;
      OUTLINED_FUNCTION_44_6(v1);
      OUTLINED_FUNCTION_44_6(v3);
      sub_1A56E9CF0(v27);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A56E9CF0(v30);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      static ResponseText.__derived_struct_equals(_:_:)(v27, v28, v29, v30, v31, v32);
      sub_1A568380C(v30);
      swift_bridgeObjectRelease();
      sub_1A568380C(v27);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_8_31(v1);
      OUTLINED_FUNCTION_8_31(v3);
    }
    goto LABEL_25;
  }
  v18 = v41;
  v19 = v42;
  v20 = HIDWORD(v42);
  v21 = v43;
  v22 = WORD2(v43);
  v23 = BYTE6(v43);
  OUTLINED_FUNCTION_57_7(v13, v14, v15, v16, v17);
  if ((v37 & 1) == 0)
  {
LABEL_25:
    OUTLINED_FUNCTION_1_3();
    return;
  }
  if (v20 < v19)
  {
    __break(1u);
  }
  else if (HIDWORD(v35) >= v35)
  {
    if (v20 - v19 == HIDWORD(v35) - (_DWORD)v35
      && (v21 != (_DWORD)v36 || v22 != WORD2(v36) || v23 != BYTE6(v36) || v18 != v34))
    {
      sub_1A56EFB30(v1);
      sub_1A56EFB30(v3);
      sub_1A566B918();
      OUTLINED_FUNCTION_36_12();
    }
    goto LABEL_25;
  }
  __break(1u);
}

void static Response.__derived_enum_equals(_:_:)()
{
  void *v0;
  char *v1;
  _BYTE __dst[408];

  OUTLINED_FUNCTION_16_4();
  sub_1A56EF344(v0, __dst);
  v1 = (char *)&loc_1A56EB86C + dword_1A56EBC04[sub_1A56EFC28((uint64_t)__dst)];
  __asm { BR              X10 }
}

void sub_1A56EB87C()
{
  __n128 *v0;
  __n128 *v1;
  const void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  const void *v11;
  __n128 *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19[26];
  char v20[184];
  uint64_t v21;
  _BYTE v22[224];

  nullsub_1(&v21);
  sub_1A56EFC74(v2, v22);
  v3 = sub_1A56EF344(v0, v20);
  if (!OUTLINED_FUNCTION_13_24((uint64_t)v3, v4, v5, v6, v7, v8, v9, v10, v13, v14, v15, v16, v17, v18, v19[0], v19[1], v19[2], v19[3], v19[4],
                        v19[5],
                        v19[6],
                        v19[7],
                        v19[8],
                        v19[9],
                        v19[10],
                        v19[11],
                        v19[12],
                        v19[13],
                        v19[14],
                        v19[15],
                        v19[16],
                        v19[17],
                        v19[18],
                        v19[19],
                        v19[20],
                        v19[21],
                        v19[22],
                        v19[23],
                        v19[24],
                        v19[25],
                        v20[0]))
  {
    nullsub_1(v20);
    sub_1A56EFC74(v11, v19);
    OUTLINED_FUNCTION_19_19(v1);
    OUTLINED_FUNCTION_19_19(v0);
    static ResponsePayload.__derived_enum_equals(_:_:)(v22);
    sub_1A56EFC40(v0);
    v12 = (__n128 *)OUTLINED_FUNCTION_83_2();
    sub_1A56EFC40(v12);
  }
  OUTLINED_FUNCTION_1_3();
}

uint64_t ResponseOrContinuationRequest.hashValue.getter(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  __n128 *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _BYTE v11[184];
  _BYTE v12[72];
  _BYTE __src[184];
  _BYTE v14[184];
  _BYTE v15[184];
  _BYTE __dst[184];

  OUTLINED_FUNCTION_5_35(a1, __src);
  sub_1A56EF344(__src, __dst);
  v1 = OUTLINED_FUNCTION_29_12();
  OUTLINED_FUNCTION_5_35(v1, v14);
  if (sub_1A56EF358((uint64_t)v14) == 1)
  {
    v2 = (void *)sub_1A56EF364((uint64_t)v14);
    sub_1A56EF344(v2, v15);
    OUTLINED_FUNCTION_3_19();
    sub_1A56EF344(__dst, v11);
    v3 = (__n128 *)sub_1A56EF364((uint64_t)v11);
    sub_1A56EFC40(v3);
    Response.hash(into:)();
  }
  else
  {
    v4 = sub_1A56EF364((uint64_t)v14);
    v5 = *(_QWORD *)v4;
    v6 = *(_QWORD *)(v4 + 8);
    v7 = *(_QWORD *)(v4 + 16);
    v8 = *(_BYTE *)(v4 + 24);
    OUTLINED_FUNCTION_2_21();
    sub_1A56EF344(__dst, v15);
    v9 = sub_1A56EF364((uint64_t)v15);
    OUTLINED_FUNCTION_16_20(v9);
    ContinuationRequest.hash(into:)((uint64_t)v12, v5, v6, v7, v8);
  }
  OUTLINED_FUNCTION_36_12();
  return sub_1A594CED0();
}

uint64_t sub_1A56EBD3C()
{
  void *v0;
  void *v1;
  _BYTE __dst[184];

  v1 = sub_1A56EF344(v0, __dst);
  return ResponseOrContinuationRequest.hashValue.getter((uint64_t)v1);
}

uint64_t sub_1A56EBD70(uint64_t a1)
{
  void *v1;
  _BYTE __dst[184];

  sub_1A56EF344(v1, __dst);
  return ResponseOrContinuationRequest.hash(into:)(a1);
}

uint64_t sub_1A56EBDAC()
{
  void *v0;
  void *v1;
  __n128 *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _BYTE v10[184];
  _BYTE v11[72];
  _BYTE v12[184];
  _BYTE __dst[184];
  _BYTE v14[184];

  sub_1A56EF344(v0, __dst);
  sub_1A594CE64();
  sub_1A56EF344(__dst, v14);
  if (sub_1A56EF358((uint64_t)v14) == 1)
  {
    v1 = (void *)sub_1A56EF364((uint64_t)v14);
    sub_1A56EF344(v1, v12);
    sub_1A594CE88();
    sub_1A56EF344(__dst, v10);
    v2 = (__n128 *)sub_1A56EF364((uint64_t)v10);
    sub_1A56EFC40(v2);
    Response.hash(into:)();
  }
  else
  {
    v3 = sub_1A56EF364((uint64_t)v14);
    v4 = *(_QWORD *)v3;
    v5 = *(_QWORD *)(v3 + 8);
    v6 = *(_QWORD *)(v3 + 16);
    v7 = *(_BYTE *)(v3 + 24);
    sub_1A594CE88();
    sub_1A56EF344(__dst, v12);
    v8 = sub_1A56EF364((uint64_t)v12);
    sub_1A56E9D40(*(_QWORD *)v8, *(_QWORD *)(v8 + 8), *(_QWORD *)(v8 + 16), *(_BYTE *)(v8 + 24));
    ContinuationRequest.hash(into:)((uint64_t)v11, v4, v5, v6, v7);
  }
  sub_1A56EFB30((uint64_t)__dst);
  return sub_1A594CED0();
}

uint64_t sub_1A56EBEE0(void *a1, void *a2)
{
  char v3;
  uint64_t v5;
  _BYTE __dst[184];

  sub_1A56EF344(a1, &v5);
  sub_1A56EF344(a2, __dst);
  static ResponseOrContinuationRequest.__derived_enum_equals(_:_:)();
  return v3 & 1;
}

void Response.tag.getter()
{
  void *v0;
  char *v1;
  _BYTE v2[368];

  sub_1A56EF344(v0, v2);
  v1 = (char *)sub_1A56EBF74 + 4 * byte_1A59B3DD4[sub_1A56EFC28((uint64_t)v2)];
  __asm { BR              X10 }
}

uint64_t sub_1A56EBF74(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char __dst,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  uint64_t v61;

  nullsub_1(&v61);
  return 0;
}

void Response.hash(into:)()
{
  uint64_t v0;
  void *v1;
  char *v2;
  _BYTE __src[184];
  _BYTE v4[368];
  _BYTE __dst[184];

  OUTLINED_FUNCTION_16_4();
  OUTLINED_FUNCTION_5_35(v0, __src);
  v1 = sub_1A56EF344(__src, __dst);
  OUTLINED_FUNCTION_5_35((uint64_t)v1, v4);
  v2 = (char *)&loc_1A56EC030 + dword_1A56EC1EC[sub_1A56EFC28((uint64_t)v4)];
  __asm { BR              X10 }
}

void sub_1A56EC040()
{
  __n128 *v0;
  const void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  nullsub_1(&v11);
  sub_1A56EFC74(v1, &v12);
  OUTLINED_FUNCTION_9_20();
  v2 = sub_1A56EF344(&v13, &v10);
  OUTLINED_FUNCTION_49_4((uint64_t)v2, v3, v4, v5, v6, v7, v8);
  OUTLINED_FUNCTION_1_66(v9);
  ResponsePayload.hash(into:)();
  sub_1A56EFC40(v0);
  OUTLINED_FUNCTION_1_3();
}

void static FetchResponse.__derived_enum_equals(_:_:)()
{
  void *v0;
  char *v1;
  _BYTE __dst[376];

  OUTLINED_FUNCTION_16_4();
  sub_1A56DDB8C(v0, __dst);
  v1 = (char *)&loc_1A56EC240 + dword_1A56EC4A4[sub_1A56EFCB0((uint64_t)__dst)];
  __asm { BR              X10 }
}

void sub_1A56EC250()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;

  sub_1A56EFCCC((uint64_t)&v1);
  sub_1A56DDB8C(v0, &v2);
  if (!OUTLINED_FUNCTION_14_21())
    OUTLINED_FUNCTION_52_5();
  OUTLINED_FUNCTION_1_3();
}

void Response.hashValue.getter()
{
  OUTLINED_FUNCTION_29_12();
  Response.hash(into:)();
  sub_1A594CED0();
  OUTLINED_FUNCTION_8_7();
}

void sub_1A56EC4F0()
{
  void *v0;
  _BYTE __dst[184];

  sub_1A56EF344(v0, __dst);
  Response.hashValue.getter();
}

void sub_1A56EC524()
{
  void *v0;
  _BYTE __dst[184];

  sub_1A56EF344(v0, __dst);
  Response.hash(into:)();
}

uint64_t sub_1A56EC560()
{
  void *v0;
  _BYTE __dst[184];

  sub_1A56EF344(v0, __dst);
  sub_1A594CE64();
  Response.hash(into:)();
  return sub_1A594CED0();
}

uint64_t sub_1A56EC5B8(void *a1, void *a2)
{
  char v3;
  uint64_t v5;
  _BYTE __dst[184];

  sub_1A56EF344(a1, &v5);
  sub_1A56EF344(a2, __dst);
  static Response.__derived_enum_equals(_:_:)();
  return v3 & 1;
}

void Response.debugDescription.getter()
{
  __n128 *v0;

  sub_1A56EFC40(v0);
  sub_1A577C724(0, (uint64_t)v0);
}

void sub_1A56EC628()
{
  void *v0;
  void *v1;
  char *v2;
  _BYTE __dst[184];
  _BYTE v4[184];
  _BYTE v5[184];

  OUTLINED_FUNCTION_16_4();
  v1 = v0;
  sub_1A56EF344(v0, __dst);
  sub_1A56EF344(__dst, v5);
  sub_1A56EF344(v1, v4);
  v2 = (char *)&loc_1A56EC684 + dword_1A56EC9CC[sub_1A56EFC28((uint64_t)v4)];
  __asm { BR              X10 }
}

void sub_1A56EC694()
{
  __n128 *v0;
  const void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18[23];
  char v19;
  uint64_t v20;
  uint64_t v21;

  nullsub_1(&v20);
  sub_1A56EFC74(v1, v18);
  v2 = sub_1A56EF344(&v21, &v19);
  OUTLINED_FUNCTION_53_8((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, v11, v12, v13, v14, v15, v16, v17, v18[0], v18[1], v18[2], v18[3],
    v18[4],
    v18[5],
    v18[6],
    v18[7],
    v18[8],
    v18[9],
    v18[10],
    v18[11],
    v18[12],
    v18[13],
    v18[14],
    v18[15],
    v18[16],
    v18[17],
    v18[18],
    v18[19],
    v18[20],
    v18[21],
    v18[22],
    v19);
  OUTLINED_FUNCTION_1_66(v10);
  sub_1A56F1F54(v18);
  sub_1A56EFC40(v0);
  OUTLINED_FUNCTION_1_3();
}

void static Response.descriptionWithoutPII<A>(_:)()
{
  sub_1A577C828(1, (void (*)(_BYTE *))sub_1A56EFCDC);
}

uint64_t sub_1A56ECA18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t AssociatedTypeWitness;
  double v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t, double);
  uint64_t v14;
  uint64_t v15;
  char *v17;
  __int128 v18;
  _BYTE *v19;
  __int128 v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t AssociatedConformanceWitness;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[7];
  _BYTE v29[184];
  _BYTE v30[184];
  _BYTE v31[696];

  v6 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v22 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v12 = (char *)&v18 - v11;
  v13 = *(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16);
  v15 = v14;
  v13(v8, a2, a3, v10);
  sub_1A594B730();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_1A594C3C0();
  sub_1A56F111C((uint64_t)v29, (uint64_t)v30);
  sub_1A56F111C((uint64_t)v30, (uint64_t)v31);
  if (sub_1A56F1164((uint64_t)v31) != 1)
  {
    v21 = &v28[2];
    v19 = v28;
    v18 = xmmword_1A59AC090;
    v20 = xmmword_1A59AC080;
    v26 = a1 + 8;
    v27 = a1;
    v23 = v15;
    v24 = v12;
    sub_1A56EF344(v31, v29);
    v17 = (char *)&loc_1A56ECBE8 + dword_1A56EE914[sub_1A56EFC28((uint64_t)v29)];
    __asm { BR              X9 }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v12, v15);
}

uint64_t sub_1A56ECBF8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  Swift::Int v9;
  uint64_t v10;
  int v11;
  char v12;
  Swift::String v13;
  uint64_t v14;
  int v15;

  nullsub_1(v0 + 85);
  v0[17] = *(_QWORD *)v3;
  v4 = *(_QWORD *)(v3 + 8);
  v0[14] = *(_QWORD *)(v3 + 24);
  v0[15] = v4;
  v5 = *(_QWORD *)(v3 + 32);
  v0[12] = *(_QWORD *)(v3 + 48);
  v0[13] = v5;
  v6 = *(_QWORD *)(v3 + 56);
  v0[10] = *(_QWORD *)(v3 + 72);
  v0[11] = v6;
  v7 = *(_QWORD *)(v3 + 88);
  v0[9] = *(_QWORD *)(v3 + 80);
  v8 = *(_BYTE *)(v3 + 104);
  v9 = *(unsigned int *)(v1 + 20);
  sub_1A56EF344(v0 + 131, v0 + 60);
  nullsub_1(v0 + 60);
  sub_1A56EF4D4(*(_QWORD *)v10, *(_QWORD *)(v10 + 8), *(_QWORD *)(v10 + 16), *(_QWORD *)(v10 + 24), *(_QWORD *)(v10 + 32), *(_QWORD *)(v10 + 40), *(_QWORD *)(v10 + 48), *(_QWORD *)(v10 + 56), *(_QWORD *)(v10 + 64), *(_QWORD *)(v10 + 72), *(_QWORD *)(v10 + 80), *(_QWORD *)(v10 + 88), *(_QWORD *)(v10 + 96), *(_BYTE *)(v10 + 104));
  sub_1A56814E0(8234, 0xE200000000000000, v2, v9);
  if ((v12 & 1) != 0)
  {
    v13._countAndFlagsBits = 8234;
    v13._object = (void *)0xE200000000000000;
    v11 = ByteBuffer._setStringSlowpath(_:at:)(v13, v9);
  }
  v14 = v0[21];
  v15 = *(_DWORD *)(v14 + 20);
  if (__CFADD__(v15, v11))
  {
    __break(1u);
    JUMPOUT(0x1A56EE7BCLL);
  }
  *(_DWORD *)(v14 + 20) = v15 + v11;
  return ((uint64_t (*)(void))((char *)&loc_1A56ECCE4 + *((int *)qword_1A56EE948 + (v8 & 0xE | (v7 >> 63)))))();
}

void sub_1A56EE970()
{
  void *v0;
  _BYTE __dst[184];

  sub_1A56EF344(v0, __dst);
  Response.debugDescription.getter();
}

void FetchResponse.hash(into:)()
{
  void *v0;
  char *v1;
  _BYTE __dst[184];
  _BYTE v3[368];
  _BYTE v4[184];

  OUTLINED_FUNCTION_16_4();
  sub_1A56DDB8C(v0, __dst);
  sub_1A56DDB8C(__dst, v4);
  sub_1A56DDB8C(v0, v3);
  v1 = (char *)&loc_1A56EE9FC + *((int *)qword_1A56EEBD8 + sub_1A56EFCB0((uint64_t)v3));
  __asm { BR              X10 }
}

void sub_1A56EEA0C()
{
  uint64_t v0;

  sub_1A56EFCCC((uint64_t)&v0);
  OUTLINED_FUNCTION_9_20();
  sub_1A594CEAC();
  OUTLINED_FUNCTION_1_3();
}

void FetchResponse.hashValue.getter()
{
  OUTLINED_FUNCTION_29_12();
  FetchResponse.hash(into:)();
  sub_1A594CED0();
  OUTLINED_FUNCTION_8_7();
}

void sub_1A56EEC24()
{
  void *v0;
  _BYTE __dst[184];

  sub_1A56DDB8C(v0, __dst);
  FetchResponse.hashValue.getter();
}

void sub_1A56EEC58()
{
  void *v0;
  _BYTE __dst[184];

  sub_1A56DDB8C(v0, __dst);
  FetchResponse.hash(into:)();
}

uint64_t sub_1A56EEC94()
{
  void *v0;
  _BYTE __dst[184];

  sub_1A56DDB8C(v0, __dst);
  sub_1A594CE64();
  FetchResponse.hash(into:)();
  return sub_1A594CED0();
}

uint64_t sub_1A56EECEC(void *a1, void *a2)
{
  char v3;
  uint64_t v5;
  _BYTE __dst[184];

  sub_1A56DDB8C(a1, &v5);
  sub_1A56DDB8C(a2, __dst);
  static FetchResponse.__derived_enum_equals(_:_:)();
  return v3 & 1;
}

uint64_t StreamingKind.hash(into:)()
{
  uint64_t v0;
  unsigned __int8 v1;
  int v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;

  sub_1A56DDBAC(v0, (uint64_t)&v8);
  v1 = v10;
  v2 = v10 >> 6;
  if (v2)
  {
    if (v2 != 1)
    {
      OUTLINED_FUNCTION_31_13();
      return sub_1A594CE88();
    }
    v10 &= 0x3Fu;
    v3 = v9;
    OUTLINED_FUNCTION_3_19();
    OUTLINED_FUNCTION_23_17();
    OUTLINED_FUNCTION_41_8();
    v4 = OUTLINED_FUNCTION_83_2();
    SectionSpecifier.Kind.hash(into:)(v4, v5, v3);
    OUTLINED_FUNCTION_40_10();
    if ((v1 & 1) != 0)
      return sub_1A594CE94();
  }
  else
  {
    v10 &= 0x3Fu;
    v7 = v9;
    OUTLINED_FUNCTION_2_21();
    OUTLINED_FUNCTION_23_17();
    if (v7 == 1)
      return sub_1A594CE94();
  }
  sub_1A594CE94();
  return sub_1A594CE88();
}

uint64_t StreamingKind.hashValue.getter()
{
  uint64_t v0;
  unsigned __int8 v1;
  int v2;
  uint64_t v3;
  unsigned __int8 v4;
  char v5;
  uint64_t v7;
  _QWORD v8[2];
  uint64_t v9;
  unsigned __int8 v10;

  v0 = OUTLINED_FUNCTION_29_12();
  OUTLINED_FUNCTION_21_21(v0, (uint64_t)v8);
  v1 = v10;
  v2 = v10 >> 6;
  if (!v2)
  {
    v10 &= 0x3Fu;
    v5 = v9;
    OUTLINED_FUNCTION_2_21();
    OUTLINED_FUNCTION_23_17();
    if ((v5 & 1) != 0)
      goto LABEL_4;
    goto LABEL_6;
  }
  if (v2 != 1)
  {
    OUTLINED_FUNCTION_31_13();
    goto LABEL_8;
  }
  v10 &= 0x3Fu;
  v3 = v8[1];
  v4 = v9;
  OUTLINED_FUNCTION_3_19();
  OUTLINED_FUNCTION_23_17();
  OUTLINED_FUNCTION_41_8();
  SectionSpecifier.Kind.hash(into:)((uint64_t)&v7, v3, v4);
  OUTLINED_FUNCTION_40_10();
  if ((v1 & 1) == 0)
  {
LABEL_6:
    sub_1A594CE94();
LABEL_8:
    sub_1A594CE88();
    return sub_1A594CED0();
  }
LABEL_4:
  sub_1A594CE94();
  return sub_1A594CED0();
}

uint64_t sub_1A56EEF7C()
{
  uint64_t v0;
  _BYTE v2[40];

  sub_1A56DDBAC(v0, (uint64_t)v2);
  return StreamingKind.hashValue.getter();
}

uint64_t sub_1A56EEFB0(uint64_t a1)
{
  _BYTE v2[40];

  OUTLINED_FUNCTION_21_21(a1, (uint64_t)v2);
  return StreamingKind.hash(into:)();
}

uint64_t sub_1A56EEFE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  _BYTE v5[72];

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(unsigned __int8 *)(v0 + 32);
  sub_1A594CE64();
  if (v3 >> 6)
  {
    if (v3 >> 6 != 1)
    {
LABEL_8:
      sub_1A594CE88();
      return sub_1A594CED0();
    }
    sub_1A594CE88();
    sub_1A5693F48();
    sub_1A55DC724(v1, v2);
    SectionSpecifier.Kind.hash(into:)((uint64_t)v5, v1, v2);
    sub_1A55DC738(v1, v2);
    if ((v3 & 1) == 0)
    {
      sub_1A594CE94();
      goto LABEL_8;
    }
  }
  else
  {
    sub_1A594CE88();
    sub_1A5693F48();
    if ((v2 & 1) == 0)
    {
      sub_1A594CE94();
      goto LABEL_8;
    }
  }
  sub_1A594CE94();
  return sub_1A594CED0();
}

BOOL sub_1A56EF130(uint64_t a1, uint64_t a2)
{
  _BYTE v4[40];
  _BYTE v5[40];

  sub_1A56DDBAC(a1, (uint64_t)v4);
  sub_1A56DDBAC(a2, (uint64_t)v5);
  return static StreamingKind.__derived_enum_equals(_:_:)((uint64_t)v4, (uint64_t)v5);
}

uint64_t StreamingKind.sectionSpecifier.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  unsigned __int8 v5;
  _QWORD v7[5];
  _QWORD v8[2];
  uint64_t v9;
  unsigned __int8 v10;

  OUTLINED_FUNCTION_21_21(a1, (uint64_t)v7);
  sub_1A56DDBAC(v1, (uint64_t)v8);
  v2 = v8[0];
  v3 = v10 >> 6;
  if (v3)
  {
    if (v3 == 1)
    {
      v10 &= 0x3Fu;
      v4 = v8[1];
      v5 = v9;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A55DC724(v4, v5);
    }
    else
    {
      return MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return v2;
}

uint64_t StreamingKind.offset.getter()
{
  uint64_t v0;
  int v1;
  _QWORD v3[4];
  unsigned __int8 v4;

  sub_1A56DDBAC(v0, (uint64_t)v3);
  v1 = v4 >> 6;
  if (!v1)
    return v3[1];
  if (v1 == 1)
    return v3[3];
  return 0;
}

uint64_t StreamingKind.debugDescription.getter()
{
  uint64_t v0;

  sub_1A56EFD14(v0);
  return sub_1A568218C(v0);
}

uint64_t sub_1A56EF310()
{
  uint64_t v0;
  _BYTE v2[40];

  sub_1A56DDBAC(v0, (uint64_t)v2);
  return StreamingKind.debugDescription.getter();
}

void *sub_1A56EF344(void *__src, void *__dst)
{
  return memcpy(__dst, __src, 0xB3uLL);
}

uint64_t sub_1A56EF358(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 178) >> 7;
}

uint64_t sub_1A56EF364(uint64_t result)
{
  __int16 v1;

  v1 = *(_WORD *)(result + 176);
  *(_BYTE *)(result + 178) &= ~0x80u;
  *(_WORD *)(result + 176) = v1;
  return result;
}

void sub_1A56EF384(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int16 a23,char a24)
{
  unsigned __int8 v24;

  v24 = a6;
  switch(a24)
  {
    case 0:
      sub_1A56EF4D4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
      break;
    case 1:
      sub_1A56EF650(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
        a20,
        a21,
        a22,
        a23);
      break;
    case 2:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A56EF6FC(a3, a4, a5, v24);
      break;
    case 3:
      sub_1A56E9CF0(a1);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      break;
    case 4:
      swift_retain();
      break;
    default:
      return;
  }
}

uint64_t sub_1A56EF4D4(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, char a14)
{
  switch(a14 & 0xE | (a12 >> 63))
  {
    case 0uLL:
      return sub_1A56EF61C(result, a2, a3, a4);
    case 1uLL:
      return sub_1A56D5800(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12 & 0x7FFFFFFFFFFFFFFFLL, a13, a14 & 0xF1);
    case 2uLL:
      return sub_1A56DEDA0(result, a2);
    case 3uLL:
    case 4uLL:
      goto LABEL_9;
    case 5uLL:
      swift_retain();
      swift_retain();
      goto LABEL_7;
    case 6uLL:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_7:
      result = swift_retain();
      break;
    case 7uLL:
      swift_retain();
LABEL_9:
      result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      break;
    case 8uLL:
      result = sub_1A56E0E38(result, a2, a3);
      break;
    case 9uLL:
      result = sub_1A5523B84();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A56EF61C(unint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 4u)
  {
    sub_1A56E9CF0(result);
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return result;
}

void sub_1A56EF650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int16 a23)
{
  int v23;

  v23 = (a23 >> 9) & 7;
  switch(v23)
  {
    case 4:
      swift_retain();
      break;
    case 3:
      sub_1A56DDDA4(a1, a2, a3, a4, a5);
      break;
    case 2:
      sub_1A56DDC24(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
        a20,
        a21,
        a22,
        a23 & 0xF1FF);
      break;
  }
}

unint64_t sub_1A56EF6FC(unint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 2u)
  {
    sub_1A56E9CF0(result);
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return result;
}

void sub_1A56EF730(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int16 a23,char a24)
{
  unsigned __int8 v24;

  v24 = a6;
  switch(a24)
  {
    case 0:
      sub_1A56EF880(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
      break;
    case 1:
      sub_1A56EFA14(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
        a20,
        a21,
        a22,
        a23);
      break;
    case 2:
      swift_bridgeObjectRelease();
      sub_1A56EFAC0(a3, a4, a5, v24);
      break;
    case 3:
      sub_1A568380C(a1);
      swift_bridgeObjectRelease();
      break;
    case 4:
      swift_release();
      break;
    default:
      return;
  }
}

uint64_t sub_1A56EF880(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, char a14)
{
  switch(a14 & 0xE | (a12 >> 63))
  {
    case 0uLL:
      return sub_1A56EF9E0(result, a2, a3, a4);
    case 1uLL:
      return sub_1A56D56CC(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12 & 0x7FFFFFFFFFFFFFFFLL, a13, a14 & 0xF1);
    case 2uLL:
      return sub_1A56DEDF0(result, a2);
    case 3uLL:
    case 4uLL:
      goto LABEL_9;
    case 5uLL:
      swift_release();
      swift_release();
      goto LABEL_7;
    case 6uLL:
      swift_bridgeObjectRelease();
LABEL_7:
      result = swift_release();
      break;
    case 7uLL:
      swift_release();
LABEL_9:
      result = swift_bridgeObjectRelease();
      break;
    case 8uLL:
      result = sub_1A56E0EA0(result, a2, a3);
      break;
    case 9uLL:
      result = sub_1A552466C();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A56EF9E0(unint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 4u)
  {
    sub_1A568380C(result);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1A56EFA14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int16 a23)
{
  int v23;

  v23 = (a23 >> 9) & 7;
  switch(v23)
  {
    case 4:
      swift_release();
      break;
    case 3:
      sub_1A5683854(a1, a2, a3, a4, a5);
      break;
    case 2:
      sub_1A5683900(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
        a20,
        a21,
        a22,
        a23 & 0xF1FF);
      break;
  }
}

unint64_t sub_1A56EFAC0(unint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 2u)
  {
    sub_1A568380C(result);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A56EFAF4(uint64_t a1, uint64_t a2)
{
  __swift_memcpy25_8_0(a2, a1);
  return a2;
}

uint64_t sub_1A56EFB30(uint64_t a1)
{
  __n128 v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = OUTLINED_FUNCTION_17_21();
  sub_1A56EFB98(v3, v11, v12, v6, v7, v8, v9, v10, v2.n128_i64[0], v2.n128_i64[1], v13, v14, v15, v16, v17, v18, v19, v20, v21,
    v22,
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(unsigned __int16 *)(a1 + 176) | (*(unsigned __int8 *)(a1 + 178) << 16),
    v4,
    v5);
  return a1;
}

uint64_t sub_1A56EFB98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,uint64_t (*a24)(uint64_t, uint64_t, uint64_t, uint64_t),uint64_t (*a25)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  if ((a23 & 0x800000) != 0)
    return a25(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
  else
    return a24(a1, a2, a3, a4 & 1);
}

uint64_t sub_1A56EFC28(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 178) <= 4u)
    return *(unsigned __int8 *)(a1 + 178);
  else
    return (*(_DWORD *)a1 + 5);
}

void sub_1A56EFC40(__n128 *a1)
{
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t);
  __n128 v11;

  v1 = OUTLINED_FUNCTION_4_39(a1);
  OUTLINED_FUNCTION_11_21(v2, v3, v4, v5, v6, v7, v8, v9, v10, v1, v11);
  OUTLINED_FUNCTION_53_5();
}

void *sub_1A56EFC74(const void *a1, void *a2)
{
  __swift_memcpy105_8(a2, a1);
  return a2;
}

uint64_t sub_1A56EFCB0(uint64_t a1)
{
  unsigned int v1;

  v1 = (*(unsigned __int16 *)(a1 + 176) >> 9) & 7;
  if (v1 <= 4)
    return v1;
  else
    return (*(_DWORD *)a1 + 5);
}

uint64_t sub_1A56EFCCC(uint64_t result)
{
  *(_WORD *)(result + 176) &= 0xF1FFu;
  return result;
}

uint64_t sub_1A56EFCDC(uint64_t a1)
{
  uint64_t v1;

  return sub_1A56ECA18(a1, *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16));
}

void sub_1A56EFCE8(__n128 *a1)
{
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t);
  __n128 v11;

  v1 = OUTLINED_FUNCTION_4_39(a1);
  OUTLINED_FUNCTION_11_21(v2, v3, v4, v5, v6, v7, v8, v9, v10, v1, v11);
  OUTLINED_FUNCTION_53_5();
}

uint64_t sub_1A56EFD14(uint64_t a1)
{
  sub_1A56DDDA4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  return a1;
}

unint64_t sub_1A56EFD4C()
{
  unint64_t result;

  result = qword_1EE7A9BD8;
  if (!qword_1EE7A9BD8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ResponseOrContinuationRequest, &type metadata for ResponseOrContinuationRequest);
    atomic_store(result, (unint64_t *)&qword_1EE7A9BD8);
  }
  return result;
}

unint64_t sub_1A56EFD8C()
{
  unint64_t result;

  result = qword_1EE7A9BE0;
  if (!qword_1EE7A9BE0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for Response, &type metadata for Response);
    atomic_store(result, (unint64_t *)&qword_1EE7A9BE0);
  }
  return result;
}

unint64_t sub_1A56EFDCC()
{
  unint64_t result;

  result = qword_1EE7A9BE8;
  if (!qword_1EE7A9BE8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for FetchResponse, &type metadata for FetchResponse);
    atomic_store(result, (unint64_t *)&qword_1EE7A9BE8);
  }
  return result;
}

unint64_t sub_1A56EFE0C()
{
  unint64_t result;

  result = qword_1EE7A9BF0;
  if (!qword_1EE7A9BF0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for StreamingKind, &type metadata for StreamingKind);
    atomic_store(result, (unint64_t *)&qword_1EE7A9BF0);
  }
  return result;
}

uint64_t destroy for ResponseOrContinuationRequest(uint64_t a1)
{
  return sub_1A56EFB98(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
           *(_QWORD *)(a1 + 152),
           *(_QWORD *)(a1 + 160),
           *(_QWORD *)(a1 + 168),
           *(unsigned __int16 *)(a1 + 176) | (*(unsigned __int8 *)(a1 + 178) << 16),
           (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1A56E9D6C,
           (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A56EF730);
}

uint64_t initializeWithCopy for ResponseOrContinuationRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;

  v3 = *(_QWORD *)(a2 + 48);
  v4 = *(_QWORD *)(a2 + 64);
  v13 = *(_QWORD *)(a2 + 72);
  v14 = *(_QWORD *)(a2 + 80);
  v15 = *(_QWORD *)(a2 + 88);
  v16 = *(_QWORD *)(a2 + 96);
  v17 = *(_QWORD *)(a2 + 104);
  v18 = *(_QWORD *)(a2 + 112);
  v19 = *(_QWORD *)(a2 + 120);
  v20 = *(_QWORD *)(a2 + 128);
  v21 = *(_QWORD *)(a2 + 136);
  v22 = *(_QWORD *)(a2 + 144);
  v23 = *(_QWORD *)(a2 + 152);
  v26 = *(unsigned __int8 *)(a2 + 178);
  v27 = *(unsigned __int16 *)(a2 + 176);
  v24 = *(_QWORD *)(a2 + 160);
  v25 = *(_QWORD *)(a2 + 168);
  v5 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_QWORD *)(a2 + 56);
  sub_1A56EFB98(*(_QWORD *)a2, v6, v7, v8, v9, v10, v3, v11, v4, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22,
    v23,
    v24,
    v25,
    v27 | (v26 << 16),
    (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1A56E9D40,
    (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A56EF384);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v10;
  *(_QWORD *)(a1 + 48) = v3;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v4;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v14;
  *(_QWORD *)(a1 + 88) = v15;
  *(_QWORD *)(a1 + 96) = v16;
  *(_QWORD *)(a1 + 104) = v17;
  *(_QWORD *)(a1 + 112) = v18;
  *(_QWORD *)(a1 + 120) = v19;
  *(_QWORD *)(a1 + 128) = v20;
  *(_QWORD *)(a1 + 136) = v21;
  *(_QWORD *)(a1 + 144) = v22;
  *(_QWORD *)(a1 + 152) = v23;
  *(_QWORD *)(a1 + 160) = v24;
  *(_QWORD *)(a1 + 168) = v25;
  *(_BYTE *)(a1 + 178) = v26;
  *(_WORD *)(a1 + 176) = v27;
  return a1;
}

uint64_t assignWithCopy for ResponseOrContinuationRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  int v44;

  v3 = *(_QWORD *)(a2 + 48);
  v4 = *(_QWORD *)(a2 + 64);
  v30 = *(_QWORD *)(a2 + 72);
  v31 = *(_QWORD *)(a2 + 80);
  v32 = *(_QWORD *)(a2 + 88);
  v33 = *(_QWORD *)(a2 + 96);
  v34 = *(_QWORD *)(a2 + 104);
  v35 = *(_QWORD *)(a2 + 112);
  v36 = *(_QWORD *)(a2 + 120);
  v37 = *(_QWORD *)(a2 + 128);
  v38 = *(_QWORD *)(a2 + 136);
  v39 = *(_QWORD *)(a2 + 144);
  v40 = *(_QWORD *)(a2 + 152);
  v43 = *(unsigned __int8 *)(a2 + 178);
  v44 = *(unsigned __int16 *)(a2 + 176);
  v41 = *(_QWORD *)(a2 + 160);
  v42 = *(_QWORD *)(a2 + 168);
  v5 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_QWORD *)(a2 + 56);
  sub_1A56EFB98(*(_QWORD *)a2, v6, v7, v8, v9, v10, v3, v11, v4, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39,
    v40,
    v41,
    v42,
    v44 | (v43 << 16),
    (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1A56E9D40,
    (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A56EF384);
  v12 = *(unsigned __int16 *)(a1 + 176) | (*(unsigned __int8 *)(a1 + 178) << 16);
  v13 = *(_QWORD *)a1;
  v14 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  v15 = *(_QWORD *)(a1 + 16);
  v16 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  v17 = *(_QWORD *)(a1 + 32);
  v18 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v10;
  v19 = *(_QWORD *)(a1 + 48);
  v20 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v3;
  *(_QWORD *)(a1 + 56) = v11;
  v21 = *(_OWORD *)(a1 + 64);
  v22 = *(_OWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 64) = v4;
  *(_QWORD *)(a1 + 72) = v30;
  *(_QWORD *)(a1 + 80) = v31;
  *(_QWORD *)(a1 + 88) = v32;
  v23 = *(_OWORD *)(a1 + 96);
  v24 = *(_OWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 96) = v33;
  *(_QWORD *)(a1 + 104) = v34;
  *(_QWORD *)(a1 + 112) = v35;
  *(_QWORD *)(a1 + 120) = v36;
  v25 = *(_OWORD *)(a1 + 128);
  v26 = *(_OWORD *)(a1 + 144);
  *(_QWORD *)(a1 + 128) = v37;
  *(_QWORD *)(a1 + 136) = v38;
  *(_QWORD *)(a1 + 144) = v39;
  *(_QWORD *)(a1 + 152) = v40;
  *(_BYTE *)(a1 + 178) = v43;
  *(_WORD *)(a1 + 176) = v44;
  v27 = *(_QWORD *)(a1 + 160);
  v28 = *(_QWORD *)(a1 + 168);
  *(_QWORD *)(a1 + 160) = v41;
  *(_QWORD *)(a1 + 168) = v42;
  sub_1A56EFB98(v13, v14, v15, v16, v17, v18, v19, v20, v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25, *((uint64_t *)&v25 + 1), v26,
    *((uint64_t *)&v26 + 1),
    v27,
    v28,
    v12,
    (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1A56E9D6C,
    (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A56EF730);
  return a1;
}

void *__swift_memcpy179_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xB3uLL);
}

uint64_t assignWithTake for ResponseOrContinuationRequest(uint64_t a1, uint64_t a2)
{
  __int16 v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;

  v4 = *(_WORD *)(a2 + 176);
  v5 = *(_BYTE *)(a2 + 178);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  v12 = *(_QWORD *)(a1 + 48);
  v13 = *(_QWORD *)(a1 + 56);
  v14 = *(_OWORD *)(a1 + 64);
  v15 = *(_OWORD *)(a1 + 80);
  v16 = *(_OWORD *)(a1 + 96);
  v17 = *(_OWORD *)(a1 + 112);
  v18 = *(_OWORD *)(a1 + 128);
  v19 = *(_OWORD *)(a1 + 144);
  v20 = *(_QWORD *)(a1 + 160);
  v21 = *(_QWORD *)(a1 + 168);
  v22 = *(unsigned __int16 *)(a1 + 176) | (*(unsigned __int8 *)(a1 + 178) << 16);
  v23 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v23;
  v24 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v24;
  v25 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v25;
  v26 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v26;
  v27 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v27;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 178) = v5;
  *(_WORD *)(a1 + 176) = v4;
  sub_1A56EFB98(v6, v7, v8, v9, v10, v11, v12, v13, v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17, *((uint64_t *)&v17 + 1), v18, *((uint64_t *)&v18 + 1), v19,
    *((uint64_t *)&v19 + 1),
    v20,
    v21,
    v22,
    (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1A56E9D6C,
    (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A56EF730);
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseOrContinuationRequest(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x1F && *(_BYTE *)(a1 + 179))
    {
      v2 = *(_DWORD *)a1 + 30;
    }
    else
    {
      v2 = ((*(unsigned __int8 *)(a1 + 178) >> 2) & 0x1E | (*(unsigned __int8 *)(a1 + 178) >> 7)) ^ 0x1F;
      if (v2 >= 0x1E)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

void storeEnumTagSinglePayload for ResponseOrContinuationRequest(char *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v4;

  if (a2 > 0x1E)
  {
    *((_QWORD *)a1 + 21) = 0;
    *(_OWORD *)(a1 + 152) = 0u;
    *(_OWORD *)(a1 + 136) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    a1[178] = 0;
    *((_WORD *)a1 + 88) = 0;
    *(_QWORD *)a1 = a2 - 31;
    if (a3 >= 0x1F)
      a1[179] = 1;
  }
  else
  {
    if (a3 >= 0x1F)
      a1[179] = 0;
    if (a2)
    {
      v4 = ((-a2 >> 1) & 0xF) - 16 * a2;
      bzero(a1, 0xB0uLL);
      *((_WORD *)a1 + 88) = 0;
      a1[178] = 8 * v4;
    }
  }
}

uint64_t sub_1A56F03C4(uint64_t a1)
{
  uint64_t result;
  int v2;

  v2 = *(unsigned __int16 *)(a1 + 176);
  result = a1 + 176;
  *(_BYTE *)(result + 2) = ((v2 | (*(unsigned __int8 *)(result + 2) << 16)) >> 16) & 0x7F;
  *(_WORD *)result = v2;
  return result;
}

uint64_t sub_1A56F03E0(uint64_t a1, int a2)
{
  uint64_t result;
  int v3;

  v3 = *(unsigned __int16 *)(a1 + 176);
  result = a1 + 176;
  *(_BYTE *)(result + 2) = ((v3 | (*(unsigned __int8 *)(result + 2) << 16)) & 0x7FFFF | (a2 << 23)) >> 16;
  *(_WORD *)result = v3;
  return result;
}

void type metadata accessor for ResponseOrContinuationRequest()
{
  OUTLINED_FUNCTION_3_1();
}

void destroy for Response(uint64_t a1)
{
  sub_1A56EF730(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_WORD *)(a1 + 176),
    *(_BYTE *)(a1 + 178));
}

uint64_t initializeWithCopy for Response(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int16 v26;
  char v27;

  v3 = *(_QWORD *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 56);
  v13 = *(_QWORD *)(a2 + 72);
  v14 = *(_QWORD *)(a2 + 80);
  v15 = *(_QWORD *)(a2 + 88);
  v16 = *(_QWORD *)(a2 + 96);
  v17 = *(_QWORD *)(a2 + 104);
  v18 = *(_QWORD *)(a2 + 112);
  v19 = *(_QWORD *)(a2 + 120);
  v20 = *(_QWORD *)(a2 + 128);
  v21 = *(_QWORD *)(a2 + 136);
  v22 = *(_QWORD *)(a2 + 144);
  v23 = *(_QWORD *)(a2 + 152);
  v24 = *(_QWORD *)(a2 + 160);
  v25 = *(_QWORD *)(a2 + 168);
  v26 = *(_WORD *)(a2 + 176);
  v27 = *(_BYTE *)(a2 + 178);
  v6 = *(_QWORD *)(a2 + 64);
  v7 = *(_QWORD *)a2;
  v8 = *(_QWORD *)(a2 + 8);
  v9 = *(_QWORD *)(a2 + 16);
  v10 = *(_QWORD *)(a2 + 24);
  v11 = *(_QWORD *)(a2 + 32);
  sub_1A56EF384(*(_QWORD *)a2, v8, v9, v10, v11, v3, v4, v5, v6, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22,
    v23,
    v24,
    v25,
    v26,
    v27);
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v8;
  *(_QWORD *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 24) = v10;
  *(_QWORD *)(a1 + 32) = v11;
  *(_QWORD *)(a1 + 40) = v3;
  *(_QWORD *)(a1 + 48) = v4;
  *(_QWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v14;
  *(_QWORD *)(a1 + 88) = v15;
  *(_QWORD *)(a1 + 96) = v16;
  *(_QWORD *)(a1 + 104) = v17;
  *(_QWORD *)(a1 + 112) = v18;
  *(_QWORD *)(a1 + 120) = v19;
  *(_QWORD *)(a1 + 128) = v20;
  *(_QWORD *)(a1 + 136) = v21;
  *(_QWORD *)(a1 + 144) = v22;
  *(_QWORD *)(a1 + 152) = v23;
  *(_QWORD *)(a1 + 160) = v24;
  *(_QWORD *)(a1 + 168) = v25;
  *(_WORD *)(a1 + 176) = v26;
  *(_BYTE *)(a1 + 178) = v27;
  return a1;
}

uint64_t assignWithCopy for Response(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int16 v28;
  char v29;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int16 v44;
  char v45;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v31 = *(_QWORD *)(a2 + 72);
  v32 = *(_QWORD *)(a2 + 80);
  v33 = *(_QWORD *)(a2 + 88);
  v34 = *(_QWORD *)(a2 + 96);
  v35 = *(_QWORD *)(a2 + 104);
  v36 = *(_QWORD *)(a2 + 112);
  v37 = *(_QWORD *)(a2 + 120);
  v38 = *(_QWORD *)(a2 + 128);
  v39 = *(_QWORD *)(a2 + 136);
  v40 = *(_QWORD *)(a2 + 144);
  v41 = *(_QWORD *)(a2 + 152);
  v42 = *(_QWORD *)(a2 + 160);
  v43 = *(_QWORD *)(a2 + 168);
  v44 = *(_WORD *)(a2 + 176);
  v45 = *(_BYTE *)(a2 + 178);
  sub_1A56EF384(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40,
    v41,
    v42,
    v43,
    v44,
    v45);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v31;
  *(_QWORD *)(a1 + 80) = v32;
  *(_QWORD *)(a1 + 88) = v33;
  v22 = *(_OWORD *)(a1 + 96);
  v23 = *(_OWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 96) = v34;
  *(_QWORD *)(a1 + 104) = v35;
  *(_QWORD *)(a1 + 112) = v36;
  *(_QWORD *)(a1 + 120) = v37;
  v24 = *(_OWORD *)(a1 + 128);
  v25 = *(_OWORD *)(a1 + 144);
  *(_QWORD *)(a1 + 128) = v38;
  *(_QWORD *)(a1 + 136) = v39;
  *(_QWORD *)(a1 + 144) = v40;
  *(_QWORD *)(a1 + 152) = v41;
  v26 = *(_QWORD *)(a1 + 160);
  v27 = *(_QWORD *)(a1 + 168);
  *(_QWORD *)(a1 + 160) = v42;
  *(_QWORD *)(a1 + 168) = v43;
  v28 = *(_WORD *)(a1 + 176);
  *(_WORD *)(a1 + 176) = v44;
  v29 = *(_BYTE *)(a1 + 178);
  *(_BYTE *)(a1 + 178) = v45;
  sub_1A56EF730(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((unint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    *((uint64_t *)&v25 + 1),
    v26,
    v27,
    v28,
    v29);
  return a1;
}

uint64_t assignWithTake for Response(uint64_t a1, uint64_t a2)
{
  __int16 v3;
  char v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int16 v21;
  char v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;

  v3 = *(_WORD *)(a2 + 176);
  v4 = *(_BYTE *)(a2 + 178);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_QWORD *)(a1 + 56);
  v13 = *(_OWORD *)(a1 + 64);
  v14 = *(_OWORD *)(a1 + 80);
  v15 = *(_OWORD *)(a1 + 96);
  v16 = *(_OWORD *)(a1 + 112);
  v17 = *(_OWORD *)(a1 + 128);
  v18 = *(_OWORD *)(a1 + 144);
  v19 = *(_QWORD *)(a1 + 160);
  v20 = *(_QWORD *)(a1 + 168);
  v21 = *(_WORD *)(a1 + 176);
  v22 = *(_BYTE *)(a1 + 178);
  v23 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v23;
  v24 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v24;
  v25 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v25;
  v26 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v26;
  v27 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v27;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_WORD *)(a1 + 176) = v3;
  *(_BYTE *)(a1 + 178) = v4;
  sub_1A56EF730(v5, v7, v6, v8, v9, v10, v11, v12, v13, *((uint64_t *)&v13 + 1), v14, *((unint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17, *((uint64_t *)&v17 + 1), v18,
    *((uint64_t *)&v18 + 1),
    v19,
    v20,
    v21,
    v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for Response(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFB && *(_BYTE *)(a1 + 179))
    {
      v2 = *(_DWORD *)a1 + 250;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 178);
      if (v3 <= 5)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Response(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_QWORD *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 178) = 0;
    *(_WORD *)(result + 176) = 0;
    *(_QWORD *)result = a2 - 251;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 179) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 179) = 0;
    if (a2)
      *(_BYTE *)(result + 178) = -(char)a2;
  }
  return result;
}

void sub_1A56F08CC(uint64_t a1, unsigned int a2)
{
  if (a2 >= 5)
  {
    *(_QWORD *)a1 = a2 - 5;
    bzero((void *)(a1 + 8), 0xAAuLL);
    LOBYTE(a2) = 5;
  }
  *(_BYTE *)(a1 + 178) = a2;
}

void type metadata accessor for Response()
{
  OUTLINED_FUNCTION_3_1();
}

void destroy for FetchResponse(uint64_t a1)
{
  sub_1A56EFA14(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_WORD *)(a1 + 176));
}

uint64_t initializeWithCopy for FetchResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int16 v26;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 56);
  v13 = *(_QWORD *)(a2 + 72);
  v14 = *(_QWORD *)(a2 + 80);
  v15 = *(_QWORD *)(a2 + 88);
  v16 = *(_QWORD *)(a2 + 96);
  v17 = *(_QWORD *)(a2 + 104);
  v18 = *(_QWORD *)(a2 + 112);
  v19 = *(_QWORD *)(a2 + 120);
  v20 = *(_QWORD *)(a2 + 128);
  v21 = *(_QWORD *)(a2 + 136);
  v22 = *(_QWORD *)(a2 + 144);
  v23 = *(_QWORD *)(a2 + 152);
  v24 = *(_QWORD *)(a2 + 160);
  v25 = *(_QWORD *)(a2 + 168);
  v26 = *(_WORD *)(a2 + 176);
  v7 = *(_QWORD *)(a2 + 64);
  v8 = *(_QWORD *)a2;
  v9 = *(_QWORD *)(a2 + 8);
  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_QWORD *)(a2 + 24);
  sub_1A56EF650(*(_QWORD *)a2, v9, v10, v11, v3, v4, v5, v6, v7, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22,
    v23,
    v24,
    v25,
    v26);
  *(_QWORD *)a1 = v8;
  *(_QWORD *)(a1 + 8) = v9;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v11;
  *(_QWORD *)(a1 + 32) = v3;
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v14;
  *(_QWORD *)(a1 + 88) = v15;
  *(_QWORD *)(a1 + 96) = v16;
  *(_QWORD *)(a1 + 104) = v17;
  *(_QWORD *)(a1 + 112) = v18;
  *(_QWORD *)(a1 + 120) = v19;
  *(_QWORD *)(a1 + 128) = v20;
  *(_QWORD *)(a1 + 136) = v21;
  *(_QWORD *)(a1 + 144) = v22;
  *(_QWORD *)(a1 + 152) = v23;
  *(_QWORD *)(a1 + 160) = v24;
  *(_QWORD *)(a1 + 168) = v25;
  *(_WORD *)(a1 + 176) = v26;
  return a1;
}

uint64_t assignWithCopy for FetchResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int16 v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int16 v43;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v30 = *(_QWORD *)(a2 + 72);
  v31 = *(_QWORD *)(a2 + 80);
  v32 = *(_QWORD *)(a2 + 88);
  v33 = *(_QWORD *)(a2 + 96);
  v34 = *(_QWORD *)(a2 + 104);
  v35 = *(_QWORD *)(a2 + 112);
  v36 = *(_QWORD *)(a2 + 120);
  v37 = *(_QWORD *)(a2 + 128);
  v38 = *(_QWORD *)(a2 + 136);
  v39 = *(_QWORD *)(a2 + 144);
  v40 = *(_QWORD *)(a2 + 152);
  v41 = *(_QWORD *)(a2 + 160);
  v42 = *(_QWORD *)(a2 + 168);
  v43 = *(_WORD *)(a2 + 176);
  sub_1A56EF650(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39,
    v40,
    v41,
    v42,
    v43);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v30;
  *(_QWORD *)(a1 + 80) = v31;
  *(_QWORD *)(a1 + 88) = v32;
  v22 = *(_OWORD *)(a1 + 96);
  v23 = *(_OWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 96) = v33;
  *(_QWORD *)(a1 + 104) = v34;
  *(_QWORD *)(a1 + 112) = v35;
  *(_QWORD *)(a1 + 120) = v36;
  v24 = *(_OWORD *)(a1 + 128);
  v25 = *(_OWORD *)(a1 + 144);
  *(_QWORD *)(a1 + 128) = v37;
  *(_QWORD *)(a1 + 136) = v38;
  *(_QWORD *)(a1 + 144) = v39;
  *(_QWORD *)(a1 + 152) = v40;
  v26 = *(_QWORD *)(a1 + 160);
  v27 = *(_QWORD *)(a1 + 168);
  *(_QWORD *)(a1 + 160) = v41;
  *(_QWORD *)(a1 + 168) = v42;
  v28 = *(_WORD *)(a1 + 176);
  *(_WORD *)(a1 + 176) = v43;
  sub_1A56EFA14(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    *((uint64_t *)&v25 + 1),
    v26,
    v27,
    v28);
  return a1;
}

uint64_t assignWithTake for FetchResponse(uint64_t a1, uint64_t a2)
{
  __int16 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int16 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;

  v3 = *(_WORD *)(a2 + 176);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_OWORD *)(a1 + 64);
  v13 = *(_OWORD *)(a1 + 80);
  v14 = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 112);
  v16 = *(_OWORD *)(a1 + 128);
  v17 = *(_OWORD *)(a1 + 144);
  v18 = *(_QWORD *)(a1 + 160);
  v19 = *(_QWORD *)(a1 + 168);
  v20 = *(_WORD *)(a1 + 176);
  v21 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v21;
  v22 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v22;
  v23 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v23;
  v24 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v24;
  v25 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v25;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_WORD *)(a1 + 176) = v3;
  sub_1A56EFA14(v4, v6, v5, v7, v8, v9, v10, v11, v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17,
    *((uint64_t *)&v17 + 1),
    v18,
    v19,
    v20);
  return a1;
}

uint64_t getEnumTagSinglePayload for FetchResponse(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 3 && *(_BYTE *)(a1 + 178))
    {
      v2 = *(_DWORD *)a1 + 2;
    }
    else
    {
      v3 = *(unsigned __int16 *)(a1 + 176);
      if ((~(v3 >> 9) & 6) != 0)
        v2 = -1;
      else
        v2 = ~(v3 >> 9) & 7;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

void storeEnumTagSinglePayload for FetchResponse(char *a1, unsigned int a2, unsigned int a3)
{
  __int16 v4;

  if (a2 > 2)
  {
    *((_QWORD *)a1 + 21) = 0;
    *(_OWORD *)(a1 + 152) = 0u;
    *(_OWORD *)(a1 + 136) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *((_WORD *)a1 + 88) = 0;
    *(_QWORD *)a1 = a2 - 3;
    if (a3 >= 3)
      a1[178] = 1;
  }
  else
  {
    if (a3 >= 3)
      a1[178] = 0;
    if (a2)
    {
      v4 = (-512 * a2) & 0xE00;
      bzero(a1, 0xB0uLL);
      *((_WORD *)a1 + 88) = v4;
    }
  }
}

void sub_1A56F0DD4(uint64_t a1, unsigned int a2)
{
  __int16 v3;

  if (a2 < 5)
  {
    v3 = *(_WORD *)(a1 + 176) & 0xF1FF | ((a2 & 7) << 9);
  }
  else
  {
    *(_QWORD *)a1 = a2 - 5;
    bzero((void *)(a1 + 8), 0xA8uLL);
    v3 = 2560;
  }
  *(_WORD *)(a1 + 176) = v3;
}

void type metadata accessor for FetchResponse()
{
  OUTLINED_FUNCTION_3_1();
}

uint64_t destroy for StreamingKind(uint64_t a1)
{
  return sub_1A5683854(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for StreamingKind(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1A56DDDA4(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for StreamingKind(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1A56DDDA4(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_1A5683854(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for StreamingKind(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  unsigned __int8 v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_1A5683854(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for StreamingKind(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 33))
    {
      v3 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16) >> 2;
      if (v2 > 0x80000000)
        v3 = ~(_DWORD)v2;
      else
        v3 = -1;
    }
  }
  else
  {
    v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for StreamingKind(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 4 * -a2;
      *(_QWORD *)(result + 24) = 0;
      *(_BYTE *)(result + 32) = 0;
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1A56F0FF4(uint64_t a1)
{
  unsigned int v1;
  int v2;
  unsigned int v3;

  v1 = *(unsigned __int8 *)(a1 + 32);
  v2 = (char)v1;
  v3 = v1 >> 6;
  if (v2 >= 0)
    return v3;
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1A56F1014(uint64_t result)
{
  *(_BYTE *)(result + 32) &= 0x3Fu;
  return result;
}

uint64_t sub_1A56F1024(uint64_t result, unsigned int a2)
{
  char v2;

  if (a2 < 2)
  {
    v2 = *(_BYTE *)(result + 32) & 1 | ((_BYTE)a2 << 6);
    *(_QWORD *)(result + 16) &= 3uLL;
    *(_BYTE *)(result + 32) = v2;
  }
  else
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0x80;
  }
  return result;
}

void type metadata accessor for StreamingKind()
{
  OUTLINED_FUNCTION_3_1();
}

uint64_t sub_1A56F106C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v4;
  uint64_t result;
  uint64_t v6;

  v4 = __OFADD__(a1, a2);
  result = a1 + a2;
  if (v4)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  v6 = a4 - a3;
  if (!a3)
    v6 = 0;
  if (result < 0 || v6 < result)
    goto LABEL_8;
  return result;
}

uint64_t sub_1A56F1098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;

  v9 = sub_1A56F12C4(a1, a3, a4, a5);
  if (a2 <= 0)
  {
    if (v9 <= 0 && v9 > a2)
      return 0;
  }
  else if ((v9 & 0x8000000000000000) == 0 && v9 < (unint64_t)a2)
  {
    return 0;
  }
  return sub_1A56F106C(a1, a2, a4, a5);
}

uint64_t sub_1A56F111C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7971C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A56F1164(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 178);
  if (v1 > 5)
    return (v1 ^ 0xFF) + 1;
  else
    return 0;
}

void sub_1A56F1178()
{
  __n128 v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t);
  __n128 v10;

  v0 = OUTLINED_FUNCTION_17_21();
  OUTLINED_FUNCTION_11_21(v1, v2, v3, v4, v5, v6, v7, v8, v9, v0, v10);
  OUTLINED_FUNCTION_53_5();
}

void sub_1A56F11C4(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int16 a23,unsigned __int8 a24)
{
  if (a24 != 255)
    sub_1A56EF730(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
      a20,
      a21,
      a22,
      a23,
      a24);
}

void sub_1A56F1244(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int16 a23,unsigned __int8 a24)
{
  if (a24 != 255)
    sub_1A56EF384(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
      a20,
      a21,
      a22,
      a23,
      a24);
}

uint64_t sub_1A56F12C4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = a4 - a3;
  if (!a3)
    v4 = 0;
  if (result < 0 || v4 < result)
  {
    __break(1u);
  }
  else if ((a2 & 0x8000000000000000) == 0 && v4 >= a2)
  {
    return a2 - result;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A56F12F8(uint64_t a1, uint64_t a2)
{
  __swift_memcpy25_8_0(a2, a1);
  return a2;
}

uint64_t sub_1A56F1334(uint64_t a1)
{
  sub_1A56EF6FC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  return a1;
}

uint64_t sub_1A56F1364(uint64_t a1)
{
  sub_1A56EFAC0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  return a1;
}

uint64_t OUTLINED_FUNCTION_1_66(uint64_t a1)
{
  return sub_1A56EF4D4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_BYTE *)(a1 + 104));
}

__n128 OUTLINED_FUNCTION_4_39(__n128 *a1)
{
  return a1[4];
}

void *OUTLINED_FUNCTION_5_35(uint64_t a1, void *a2)
{
  void *v2;

  return sub_1A56EF344(v2, a2);
}

uint64_t OUTLINED_FUNCTION_7_29()
{
  return sub_1A594CE70();
}

uint64_t OUTLINED_FUNCTION_8_31(uint64_t a1)
{
  return sub_1A56EFB30(a1);
}

unint64_t OUTLINED_FUNCTION_9_32(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;

  return sub_1A56EFAC0(a1, v1, v2, v3);
}

unint64_t OUTLINED_FUNCTION_10_28(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;

  return sub_1A56EF6FC(a1, v1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_11_21@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t)@<X8>, __n128 a10@<Q0>, __n128 a11@<Q1>)
{
  return a9(a1, a2, a3, a4, a5, a6, a7, a8, a10.n128_u64[0], a10.n128_u64[1], a11.n128_u64[0], a11.n128_u64[1]);
}

uint64_t OUTLINED_FUNCTION_12_24()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_13_24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  return sub_1A56EFC28((uint64_t)&a41);
}

uint64_t OUTLINED_FUNCTION_14_21()
{
  return sub_1A56EFCB0((uint64_t)&STACK[0x250]);
}

uint64_t OUTLINED_FUNCTION_16_20(uint64_t a1)
{
  return sub_1A56E9D40(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

__n128 OUTLINED_FUNCTION_17_21()
{
  __n128 *v0;

  return v0[4];
}

void OUTLINED_FUNCTION_19_19(__n128 *a1)
{
  sub_1A56EFC40(a1);
}

uint64_t OUTLINED_FUNCTION_20_16(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  return sub_1A5503278((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_21_21(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A56DDBAC(v2, a2);
}

void OUTLINED_FUNCTION_23_17()
{
  sub_1A5693F48();
}

Swift::Int OUTLINED_FUNCTION_24_15(uint64_t a1)
{
  Swift::Int v1;
  unint64_t v2;

  v2 = 0xE200000000000000;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v1);
}

uint64_t OUTLINED_FUNCTION_27_12()
{
  return sub_1A5503278((uint64_t)&STACK[0x270]);
}

uint64_t OUTLINED_FUNCTION_29_12()
{
  return sub_1A594CE64();
}

uint64_t OUTLINED_FUNCTION_33_10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56)
{
  return sub_1A56EFCCC((uint64_t)&a56);
}

double OUTLINED_FUNCTION_34_13()
{
  return nullsub_1(&STACK[0x290]);
}

uint64_t OUTLINED_FUNCTION_36_12()
{
  uint64_t v0;

  return sub_1A56EFB30(v0);
}

void OUTLINED_FUNCTION_37_13()
{
  sub_1A5693F48();
}

uint64_t OUTLINED_FUNCTION_39_11(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  return sub_1A5524B84((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_40_10()
{
  uint64_t v0;
  unsigned __int8 v1;

  return sub_1A55DC738(v0, v1);
}

uint64_t OUTLINED_FUNCTION_41_8()
{
  uint64_t v0;
  unsigned __int8 v1;

  return sub_1A55DC724(v0, v1);
}

uint64_t OUTLINED_FUNCTION_44_6(uint64_t a1)
{
  return sub_1A56EFB30(a1);
}

uint64_t OUTLINED_FUNCTION_45_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  return a15;
}

uint64_t OUTLINED_FUNCTION_47_5()
{
  return sub_1A594CE94();
}

double OUTLINED_FUNCTION_49_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  return nullsub_1(va);
}

uint64_t OUTLINED_FUNCTION_50_5()
{
  return sub_1A5524B84((uint64_t)&STACK[0x270]);
}

double OUTLINED_FUNCTION_51_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  return nullsub_1(&a41);
}

uint64_t OUTLINED_FUNCTION_52_5()
{
  return sub_1A56EFCCC((uint64_t)&STACK[0x250]);
}

double OUTLINED_FUNCTION_53_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  return nullsub_1(&a39);
}

uint64_t OUTLINED_FUNCTION_55_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,char a60)
{
  return sub_1A56EFCCC((uint64_t)&a60);
}

double OUTLINED_FUNCTION_56_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a64;

  return nullsub_1(&a64);
}

uint64_t OUTLINED_FUNCTION_57_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  uint64_t v6;
  va_list va;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  va_list va1;

  va_start(va1, a5);
  va_start(va, a5);
  v6 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  return sub_1A56EFAF4((uint64_t)va, (uint64_t)va1);
}

uint64_t ResponseCodeAppend.uidValidity.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

double (*ResponseCodeAppend.uidValidity.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ResponseCodeAppend.uids.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A54E4334(a2, a3, SBYTE4(a3));
  return a2;
}

uint64_t ResponseCodeAppend.uids.setter(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  int v3;
  unint64_t v5;
  uint64_t result;

  v3 = a2;
  v5 = HIDWORD(a2);
  result = sub_1A54E3458(*(_QWORD *)(v2 + 8), *(unsigned int *)(v2 + 16), *(_BYTE *)(v2 + 20));
  *(_QWORD *)(v2 + 8) = a1;
  *(_DWORD *)(v2 + 16) = v3;
  *(_BYTE *)(v2 + 20) = v5;
  return result;
}

double (*ResponseCodeAppend.uids.modify())(_QWORD)
{
  return nullsub_1;
}

void ResponseCodeAppend.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1A594CEAC();
  sub_1A56B6298(a1, a3, a4 & 0xFFFFFFFFFFLL);
}

void static ResponseCodeAppend.__derived_struct_equals(_:_:)(int a1, int32x2_t *a2, uint64_t a3, int a4, int32x2_t *a5, uint64_t a6)
{
  if (a1 == a4)
    sub_1A56B614C(a2, a3 & 0xFFFFFFFFFFLL, a5, a6 & 0xFFFFFFFFFFLL);
}

uint64_t ResponseCodeAppend.hashValue.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE v6[72];

  sub_1A594CE64();
  sub_1A594CEAC();
  sub_1A56B6298((uint64_t)v6, a2, a3 & 0xFFFFFFFFFFLL);
  return sub_1A594CED0();
}

uint64_t sub_1A56F1774()
{
  unsigned int *v0;

  return ResponseCodeAppend.hashValue.getter(*v0, *((_QWORD *)v0 + 1), v0[4] | ((unint64_t)*((unsigned __int8 *)v0 + 20) << 32));
}

void sub_1A56F178C(uint64_t a1)
{
  unsigned int *v1;

  ResponseCodeAppend.hash(into:)(a1, *v1, *((_QWORD *)v1 + 1), v1[4] | ((unint64_t)*((unsigned __int8 *)v1 + 20) << 32));
}

uint64_t sub_1A56F17A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[72];

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(unsigned int *)(v0 + 16);
  v3 = *(unsigned __int8 *)(v0 + 20);
  sub_1A594CE64();
  sub_1A594CEAC();
  sub_1A56B6298((uint64_t)v5, v1, v2 | (v3 << 32));
  return sub_1A594CED0();
}

void sub_1A56F1810(uint64_t a1, uint64_t a2)
{
  static ResponseCodeAppend.__derived_struct_equals(_:_:)(*(_DWORD *)a1, *(int32x2_t **)(a1 + 8), *(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned __int8 *)(a1 + 20) << 32), *(_DWORD *)a2, *(int32x2_t **)(a2 + 8), *(unsigned int *)(a2 + 16) | ((unint64_t)*(unsigned __int8 *)(a2 + 20) << 32));
}

unint64_t sub_1A56F1848()
{
  unint64_t result;

  result = qword_1EE7A9BF8;
  if (!qword_1EE7A9BF8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ResponseCodeAppend, &type metadata for ResponseCodeAppend);
    atomic_store(result, (unint64_t *)&qword_1EE7A9BF8);
  }
  return result;
}

uint64_t sub_1A56F1888(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned int v4;
  char v5;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_DWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 20);
  sub_1A54E4334(v3, v4, v5);
  *(_QWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 20) = v5;
  return a1;
}

uint64_t assignWithCopy for ResponseCodeAppend(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_DWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 20);
  sub_1A54E4334(v3, v4, v5);
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(unsigned int *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = v4;
  v8 = *(_BYTE *)(a1 + 20);
  *(_BYTE *)(a1 + 20) = v5;
  sub_1A54E3458(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ResponseCodeAppend(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_DWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 20);
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(unsigned int *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = v4;
  v8 = *(_BYTE *)(a1 + 20);
  *(_BYTE *)(a1 + 20) = v5;
  sub_1A54E3458(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseCodeAppend(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 21))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 20);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ResponseCodeAppend(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 20) = 0;
    *(_DWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 21) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 21) = 0;
    if (a2)
      *(_BYTE *)(result + 20) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ResponseCodeAppend()
{
  return &type metadata for ResponseCodeAppend;
}

uint64_t ResponseCodeCopy.destinationUIDValidity.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

double (*ResponseCodeCopy.destinationUIDValidity.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ResponseCodeCopy.sourceUIDs.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t ResponseCodeCopy.sourceUIDs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

double (*ResponseCodeCopy.sourceUIDs.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ResponseCodeCopy.destinationUIDs.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t ResponseCodeCopy.destinationUIDs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

double (*ResponseCodeCopy.destinationUIDs.modify())(_QWORD)
{
  return nullsub_1;
}

void ResponseCodeCopy.hash(into:)()
{
  sub_1A594CEAC();
  sub_1A5695ED0();
  sub_1A5695ED0();
}

void static ResponseCodeCopy.__derived_struct_equals(_:_:)(int a1, int32x2_t *a2, int32x2_t *a3, int a4, int32x2_t *a5, int32x2_t *a6)
{
  char v8;

  if (a1 == a4)
  {
    sub_1A5689E30(a2, a5);
    if ((v8 & 1) != 0)
      sub_1A5689E30(a3, a6);
  }
}

uint64_t ResponseCodeCopy.hashValue.getter()
{
  sub_1A594CE64();
  sub_1A594CEAC();
  sub_1A5695ED0();
  sub_1A5695ED0();
  return sub_1A594CED0();
}

uint64_t sub_1A56F1BD4()
{
  return ResponseCodeCopy.hashValue.getter();
}

void sub_1A56F1BE0()
{
  ResponseCodeCopy.hash(into:)();
}

uint64_t sub_1A56F1BEC()
{
  sub_1A594CE64();
  sub_1A594CEAC();
  sub_1A5695ED0();
  sub_1A5695ED0();
  return sub_1A594CED0();
}

void sub_1A56F1C50(uint64_t a1, uint64_t a2)
{
  static ResponseCodeCopy.__derived_struct_equals(_:_:)(*(_DWORD *)a1, *(int32x2_t **)(a1 + 8), *(int32x2_t **)(a1 + 16), *(_DWORD *)a2, *(int32x2_t **)(a2 + 8), *(int32x2_t **)(a2 + 16));
}

#error "1A56F1D64: call analysis failed (funcsize=97)"

unint64_t sub_1A56F1E00()
{
  unint64_t result;

  result = qword_1EE7A9C00;
  if (!qword_1EE7A9C00)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ResponseCodeCopy, &type metadata for ResponseCodeCopy);
    atomic_store(result, (unint64_t *)&qword_1EE7A9C00);
  }
  return result;
}

uint64_t sub_1A56F1E40(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for ResponseCodeCopy(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ResponseCodeCopy(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ResponseCodeCopy()
{
  return &type metadata for ResponseCodeCopy;
}

uint64_t OUTLINED_FUNCTION_0_85(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int128 a20,uint64_t a21,Swift::String a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  return sub_1A5663E4C(a1, 0, 0, 44, 0, 0, 0, 0, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43);
}

void sub_1A56F1F54(const void *a1)
{
  uint64_t v1;
  Swift::Int v3;
  char v4;
  Swift::Int v5;
  int v6;
  BOOL v7;
  int v8;
  uint64_t v9;
  Swift::Int v10;
  Swift::Int v11;
  char v12;
  int v13;
  int v14;

  sub_1A56814E0(8234, 0xE200000000000000, v1 + 8, *(_DWORD *)(v1 + 20));
  if ((v4 & 1) != 0)
    v3 = OUTLINED_FUNCTION_0_86(8234);
  v5 = v3;
  v6 = *(_DWORD *)(v1 + 20);
  v7 = __CFADD__(v6, (_DWORD)v3);
  v8 = v6 + v3;
  if (v7)
  {
    __break(1u);
    goto LABEL_11;
  }
  *(_DWORD *)(v1 + 20) = v8;
  sub_1A56F2820(a1);
  v10 = v5 + v9;
  if (__OFADD__(v5, v9))
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_1A56814E0(2573, 0xE200000000000000, v1 + 8, *(_DWORD *)(v1 + 20));
  if ((v12 & 1) != 0)
    v11 = OUTLINED_FUNCTION_0_86(2573);
  v13 = *(_DWORD *)(v1 + 20);
  v7 = __CFADD__(v13, (_DWORD)v11);
  v14 = v13 + v11;
  if (v7)
    goto LABEL_12;
  *(_DWORD *)(v1 + 20) = v14;
  if (__OFADD__(v10, v11))
LABEL_13:
    __break(1u);
}

Swift::Int OUTLINED_FUNCTION_0_86(uint64_t a1)
{
  Swift::Int v1;
  unint64_t v2;

  v2 = 0xE200000000000000;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v1);
}

void sub_1A56F203C(unint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  Swift::Int v8;
  char v9;
  Swift::Int v10;
  int v11;
  Swift::Int v12;
  char v13;
  Swift::Int v14;
  int v15;
  BOOL v16;
  int v17;
  uint64_t v18;
  Swift::Int v19;
  Swift::Int v20;
  Swift::Int v21;
  char v22;
  int v23;
  int v24;

  v4 = v3;
  sub_1A56814E0(8234, 0xE200000000000000, v3 + 8, *(_DWORD *)(v3 + 20));
  if ((v9 & 1) != 0)
    v8 = OUTLINED_FUNCTION_1_25(8234, 0xE200000000000000);
  v10 = v8;
  v11 = *(_DWORD *)(v3 + 20);
  if (__CFADD__(v11, (_DWORD)v8))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  *(_DWORD *)(v3 + 20) = v11 + v8;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A56E9CF0(a1);
  OUTLINED_FUNCTION_3_23(541415746, 0xE400000000000000);
  if ((v13 & 1) != 0)
    v12 = OUTLINED_FUNCTION_1_25(541415746, 0xE400000000000000);
  v14 = v12;
  v15 = *(_DWORD *)(v3 + 20);
  v16 = __CFADD__(v15, (_DWORD)v12);
  v17 = v15 + v12;
  if (v16)
    goto LABEL_15;
  *(_DWORD *)(v3 + 20) = v17;
  v18 = sub_1A56F3CD4(a1, a2, a3);
  sub_1A568380C(a1);
  swift_bridgeObjectRelease();
  v19 = v14 + v18;
  if (__OFADD__(v14, v18))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v20 = v10 + v19;
  if (__OFADD__(v10, v19))
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  OUTLINED_FUNCTION_3_23(2573, 0xE200000000000000);
  if ((v22 & 1) != 0)
    v21 = OUTLINED_FUNCTION_1_25(2573, 0xE200000000000000);
  v23 = *(_DWORD *)(v4 + 20);
  v16 = __CFADD__(v23, (_DWORD)v21);
  v24 = v23 + v21;
  if (v16)
    goto LABEL_18;
  *(_DWORD *)(v4 + 20) = v24;
  if (__OFADD__(v20, v21))
LABEL_19:
    __break(1u);
}

void static ResponsePayload.__derived_enum_equals(_:_:)(const void *a1)
{
  _BYTE v2[88];

  sub_1A56EFC74(a1, v2);
  OUTLINED_FUNCTION_24_16();
  __asm { BR              X12 }
}

uint64_t sub_1A56F21F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  char v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  OUTLINED_FUNCTION_36_13();
  OUTLINED_FUNCTION_0_87();
  if (v3)
  {
    v5 = 0;
  }
  else
  {
    OUTLINED_FUNCTION_2_56(v2);
    sub_1A56D57A4(v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A56EF4D4);
    sub_1A56D57A4(v0, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A56EF4D4);
    static UntaggedStatus.__derived_enum_equals(_:_:)(v7, v8, v9, v10);
    v5 = v4;
    sub_1A56D57A4(v0, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A56EF880);
    sub_1A56D57A4(v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A56EF880);
  }
  return v5 & 1;
}

void sub_1A56F2820(const void *a1)
{
  uint64_t v3;
  _BYTE v4[88];

  sub_1A56EFC74(a1, &v3);
  sub_1A56EFC74(a1, v4);
  OUTLINED_FUNCTION_24_16();
  __asm { BR              X12 }
}

uint64_t sub_1A56F28B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  OUTLINED_FUNCTION_3_45();
  sub_1A56EF61C(v17, v18, v19, v20);
  sub_1A56F7680(v22, v23, v24, v25);
  v1 = v0;
  OUTLINED_FUNCTION_39_12(v0, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A56EF880, v2, v3, v4, v5, v6, v7, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19,
    v20,
    v21);
  return v1;
}

void ResponsePayload.hash(into:)()
{
  const void *v0;
  uint64_t v2;
  _BYTE v3[88];

  sub_1A56EFC74(v0, &v2);
  sub_1A56EFC74(v0, v3);
  OUTLINED_FUNCTION_24_16();
  __asm { BR              X12 }
}

uint64_t sub_1A56F2E04()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  OUTLINED_FUNCTION_37_14();
  OUTLINED_FUNCTION_2_21();
  sub_1A56EF61C(v7, v6, v5, v4);
  v1 = OUTLINED_FUNCTION_182();
  UntaggedStatus.hash(into:)(v1, v2);
  return sub_1A56D57A4(v0, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A56EF880);
}

uint64_t ResponsePayload.hashValue.getter()
{
  sub_1A594CE64();
  ResponsePayload.hash(into:)();
  return sub_1A594CED0();
}

uint64_t sub_1A56F3278()
{
  const void *v0;
  uint64_t v2;

  sub_1A56EFC74(v0, &v2);
  return ResponsePayload.hashValue.getter();
}

void sub_1A56F32AC()
{
  const void *v0;
  uint64_t v1;

  sub_1A56EFC74(v0, &v1);
  ResponsePayload.hash(into:)();
}

uint64_t sub_1A56F32E8()
{
  const void *v0;
  _BYTE v2[112];

  sub_1A56EFC74(v0, v2);
  sub_1A594CE64();
  ResponsePayload.hash(into:)();
  return sub_1A594CED0();
}

uint64_t sub_1A56F3338(const void *a1, const void *a2)
{
  char v3;
  _BYTE v5[112];
  _BYTE v6[112];

  sub_1A56EFC74(a1, v5);
  sub_1A56EFC74(a2, v6);
  static ResponsePayload.__derived_enum_equals(_:_:)(v5);
  return v3 & 1;
}

uint64_t sub_1A56F3380(uint64_t a1, uint64_t a2)
{
  __swift_memcpy25_8_0(a2, a1);
  return a2;
}

_QWORD *sub_1A56F33BC(uint64_t *a1, _QWORD *a2)
{
  __swift_memcpy13_8_1(a2, a1);
  return a2;
}

unint64_t sub_1A56F33FC()
{
  unint64_t result;

  result = qword_1EE7A9C08;
  if (!qword_1EE7A9C08)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ResponsePayload, &type metadata for ResponsePayload);
    atomic_store(result, (unint64_t *)&qword_1EE7A9C08);
  }
  return result;
}

uint64_t destroy for ResponsePayload(uint64_t a1)
{
  return sub_1A56EF880(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_BYTE *)(a1 + 104));
}

uint64_t initializeWithCopy for ResponsePayload(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char v17;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v13 = *(_QWORD *)(a2 + 72);
  v14 = *(_QWORD *)(a2 + 80);
  v15 = *(_QWORD *)(a2 + 88);
  v16 = *(_QWORD *)(a2 + 96);
  v17 = *(_BYTE *)(a2 + 104);
  sub_1A56EF4D4(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16, v17);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v14;
  *(_QWORD *)(a1 + 88) = v15;
  *(_QWORD *)(a1 + 96) = v16;
  *(_BYTE *)(a1 + 104) = v17;
  return a1;
}

uint64_t assignWithCopy for ResponsePayload(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  char v23;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char v29;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v25 = *(_QWORD *)(a2 + 72);
  v26 = *(_QWORD *)(a2 + 80);
  v27 = *(_QWORD *)(a2 + 88);
  v28 = *(_QWORD *)(a2 + 96);
  v29 = *(_BYTE *)(a2 + 104);
  sub_1A56EF4D4(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v25, v26, v27, v28, v29);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  v22 = *(_QWORD *)(a1 + 96);
  v23 = *(_BYTE *)(a1 + 104);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v25;
  *(_QWORD *)(a1 + 80) = v26;
  *(_QWORD *)(a1 + 88) = v27;
  *(_QWORD *)(a1 + 96) = v28;
  *(_BYTE *)(a1 + 104) = v29;
  sub_1A56EF880(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((unint64_t *)&v21 + 1), v22, v23);
  return a1;
}

uint64_t assignWithTake for ResponsePayload(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  char v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  v3 = *(_QWORD *)(a2 + 96);
  v4 = *(_BYTE *)(a2 + 104);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_QWORD *)(a1 + 56);
  v13 = *(_OWORD *)(a1 + 64);
  v14 = *(_OWORD *)(a1 + 80);
  v15 = *(_QWORD *)(a1 + 96);
  v16 = *(_BYTE *)(a1 + 104);
  v17 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v17;
  v18 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v18;
  v19 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v19;
  *(_QWORD *)(a1 + 96) = v3;
  *(_BYTE *)(a1 + 104) = v4;
  sub_1A56EF880(v5, v7, v6, v8, v9, v10, v11, v12, v13, *((uint64_t *)&v13 + 1), v14, *((unint64_t *)&v14 + 1), v15, v16);
  return a1;
}

uint64_t sub_1A56F36F0(uint64_t a1)
{
  return *(_BYTE *)(a1 + 104) & 0xE | (*(_QWORD *)(a1 + 88) >> 63);
}

uint64_t sub_1A56F3708(uint64_t result)
{
  char v1;

  v1 = *(_BYTE *)(result + 104) & 0xF1;
  *(_QWORD *)(result + 88) &= ~0x8000000000000000;
  *(_BYTE *)(result + 104) = v1;
  return result;
}

int8x16_t sub_1A56F3724(int8x16_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  __int8 v4;
  int8x16_t result;

  v2 = a1[4].i64[1] & 1;
  v3 = a1[5].i64[1] & 1 | (a2 << 63);
  v4 = a1[6].i8[8] & 0xF1 | a2 & 0xE;
  result = vandq_s8(a1[3], (int8x16_t)xmmword_1A59AC060);
  a1[3] = result;
  a1[4].i64[1] = v2;
  a1[5].i64[1] = v3;
  a1[6].i8[8] = v4;
  return result;
}

ValueMetadata *type metadata accessor for ResponsePayload()
{
  return &type metadata for ResponsePayload;
}

void *OUTLINED_FUNCTION_0_87()
{
  const void *v0;
  uint64_t v1;

  return sub_1A56EFC74(v0, (void *)(v1 - 200));
}

_QWORD *OUTLINED_FUNCTION_1_67(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  return sub_1A56F33BC(&a40, &a44);
}

void OUTLINED_FUNCTION_2_56(uint64_t a1@<X8>)
{
  char v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 112) = a1 & 0x7FFFFFFFFFFFFFFFLL;
  *(_BYTE *)(v2 - 96) = v1 & 0xF1;
}

void OUTLINED_FUNCTION_10_29()
{
  uint64_t v0;
  uint64_t v1;

  *(_DWORD *)(v1 - 120) = v0;
  *(_BYTE *)(v1 - 116) = BYTE4(v0) & 0x1F;
}

uint64_t OUTLINED_FUNCTION_12_25@<X0>(uint64_t a1@<X8>)
{
  char v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 112) = a1 & 0x7FFFFFFFFFFFFFFFLL;
  *(_BYTE *)(v2 - 96) = v1 & 0xF1;
  return v2 - 200;
}

uint64_t OUTLINED_FUNCTION_17_22()
{
  return 0x4F4F5241544F5551;
}

uint64_t OUTLINED_FUNCTION_19_20()
{
  return 0x44454C42414E45;
}

uint64_t OUTLINED_FUNCTION_21_22()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_23_18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  return a38;
}

uint64_t OUTLINED_FUNCTION_25_14(uint64_t a1)
{
  void (*v1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char);

  return sub_1A56D57A4(a1, v1);
}

void OUTLINED_FUNCTION_28_13(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  Swift::UInt32 v3;

  sub_1A56814E0(a1, a2, v2, v3);
}

uint64_t OUTLINED_FUNCTION_33_11()
{
  return sub_1A594CE88();
}

uint64_t OUTLINED_FUNCTION_34_14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44)
{
  return sub_1A56F3380((uint64_t)&a40, (uint64_t)&a44);
}

uint64_t OUTLINED_FUNCTION_39_12(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  return sub_1A56D57A4(a21, a2);
}

uint64_t static ResponseText.__derived_struct_equals(_:_:)(unint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v10;
  char v13;
  char v14;

  v10 = a4 & 0xF000000000000007;
  if ((~a1 & 0xF000000000000007) != 0)
  {
    if (v10 == 0xF000000000000007)
      return 0;
    sub_1A56E9CF0(a4);
    sub_1A56E9CF0(a1);
    static ResponseTextCode.__derived_enum_equals(_:_:)(a1);
    v14 = v13;
    sub_1A568380C(a4);
    sub_1A568380C(a1);
    if ((v14 & 1) == 0)
      return 0;
  }
  else if (v10 != 0xF000000000000007)
  {
    return 0;
  }
  if (a2 == a5 && a3 == a6)
    return 1;
  else
    return sub_1A594CD38();
}

unint64_t ResponseText.code.getter(unint64_t a1)
{
  sub_1A56E9CF0(a1);
  return a1;
}

unint64_t ResponseText.code.setter(unint64_t a1)
{
  unint64_t *v1;
  unint64_t result;

  result = sub_1A568380C(*v1);
  *v1 = a1;
  return result;
}

double (*ResponseText.code.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ResponseText.text.getter(uint64_t a1, uint64_t a2)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a2;
}

uint64_t ResponseText.text.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

double (*ResponseText.text.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ResponseText.hash(into:)(uint64_t a1, unint64_t a2)
{
  if ((~a2 & 0xF000000000000007) != 0)
  {
    sub_1A594CE94();
    sub_1A56E9D04(a2);
    ResponseTextCode.hash(into:)(a1, a2);
    sub_1A568380C(a2);
  }
  else
  {
    sub_1A594CE94();
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  return swift_bridgeObjectRelease();
}

uint64_t ResponseText.hashValue.getter(unint64_t a1)
{
  _BYTE v3[72];

  sub_1A594CE64();
  ResponseText.hash(into:)((uint64_t)v3, a1);
  return sub_1A594CED0();
}

uint64_t sub_1A56F3C4C()
{
  unint64_t *v0;

  return ResponseText.hashValue.getter(*v0);
}

uint64_t sub_1A56F3C58(uint64_t a1)
{
  unint64_t *v1;

  return ResponseText.hash(into:)(a1, *v1);
}

uint64_t sub_1A56F3C64()
{
  unint64_t *v0;
  unint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1A594CE64();
  ResponseText.hash(into:)((uint64_t)v3, v1);
  return sub_1A594CED0();
}

uint64_t sub_1A56F3CB8(uint64_t a1, uint64_t a2)
{
  return static ResponseText.__derived_struct_equals(_:_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16));
}

uint64_t sub_1A56F3CD4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  Swift::Int v9;
  Swift::Int v10;
  Swift::Int v11;
  char v12;
  char v13;
  Swift::String v14;
  uint64_t result;
  int v16;
  BOOL v17;
  int v18;
  uint64_t v19;

  v4 = v3;
  v7 = 0;
  if ((~a1 & 0xF000000000000007) != 0)
  {
    v19 = a1;
    sub_1A56F3DE0(&v19, v4);
    v7 = v8;
  }
  if (sub_1A594B5A4() < 1)
  {
    a3 = (void *)0xE100000000000000;
    a2 = 32;
  }
  else
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  v9 = *(unsigned int *)(v4 + 20);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A56814E0(a2, (unint64_t)a3, v4 + 8, v9);
  v11 = v10;
  v13 = v12;
  swift_bridgeObjectRelease();
  if ((v13 & 1) != 0)
  {
    v14._countAndFlagsBits = a2;
    v14._object = a3;
    v11 = ByteBuffer._setStringSlowpath(_:at:)(v14, v9);
  }
  result = swift_bridgeObjectRelease();
  v16 = *(_DWORD *)(v4 + 20);
  v17 = __CFADD__(v16, (_DWORD)v11);
  v18 = v16 + v11;
  if (v17)
  {
    __break(1u);
    goto LABEL_12;
  }
  *(_DWORD *)(v4 + 20) = v18;
  result = v7 + v11;
  if (__OFADD__(v7, v11))
LABEL_12:
    __break(1u);
  return result;
}

void sub_1A56F3DE0(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  Swift::Int v5;
  char v6;
  Swift::Int v7;
  int v8;
  BOOL v9;
  int v10;
  uint64_t v11;
  Swift::Int v12;
  Swift::Int v13;
  char v14;
  int v15;
  int v16;

  v4 = a2 + 8;
  sub_1A56814E0(91, 0xE100000000000000, a2 + 8, *(_DWORD *)(a2 + 20));
  if ((v6 & 1) != 0)
    v5 = OUTLINED_FUNCTION_1_25(91, 0xE100000000000000);
  v7 = v5;
  v8 = *(_DWORD *)(a2 + 20);
  v9 = __CFADD__(v8, (_DWORD)v5);
  v10 = v8 + v5;
  if (v9)
  {
    __break(1u);
    goto LABEL_11;
  }
  *(_DWORD *)(a2 + 20) = v10;
  sub_1A56F413C(*a1);
  v12 = v7 + v11;
  if (__OFADD__(v7, v11))
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_1A56814E0(8285, 0xE200000000000000, v4, *(_DWORD *)(a2 + 20));
  if ((v14 & 1) != 0)
    v13 = OUTLINED_FUNCTION_1_25(8285, 0xE200000000000000);
  v15 = *(_DWORD *)(a2 + 20);
  v9 = __CFADD__(v15, (_DWORD)v13);
  v16 = v15 + v13;
  if (v9)
    goto LABEL_12;
  *(_DWORD *)(a2 + 20) = v16;
  if (__OFADD__(v12, v13))
LABEL_13:
    __break(1u);
}

void ResponseText.debugDescription.getter(unint64_t a1, uint64_t a2, void *a3)
{
  sub_1A56E9CF0(a1);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5682218(a1, a2, a3);
}

void sub_1A56F3F04()
{
  uint64_t v0;

  ResponseText.debugDescription.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(void **)(v0 + 16));
}

unint64_t sub_1A56F3F14()
{
  unint64_t result;

  result = qword_1EE7A9C10;
  if (!qword_1EE7A9C10)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ResponseText, &type metadata for ResponseText);
    atomic_store(result, (unint64_t *)&qword_1EE7A9C10);
  }
  return result;
}

uint64_t destroy for ResponseText(unint64_t *a1)
{
  unint64_t v1;

  v1 = *a1;
  if ((~v1 & 0xF000000000000007) != 0)
    sub_1A56837D0(v1);
  return swift_bridgeObjectRelease();
}

unint64_t *_s12NIOIMAPCore212ResponseTextVwCP_0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v4 = *a2;
  if ((~*a2 & 0xF000000000000007) != 0)
    sub_1A56E9D04(*a2);
  v6 = a2[1];
  v5 = a2[2];
  *a1 = v4;
  a1[1] = v6;
  a1[2] = v5;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

unint64_t *assignWithCopy for ResponseText(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v4 = *a2;
  v5 = *a2 & 0xF000000000000007;
  if ((~*a1 & 0xF000000000000007) != 0)
  {
    if (v5 == 0xF000000000000007)
    {
      sub_1A56F4088(a1);
      *a1 = *a2;
    }
    else
    {
      sub_1A56E9D04(*a2);
      v6 = *a1;
      *a1 = v4;
      sub_1A56837D0(v6);
    }
  }
  else
  {
    if (v5 != 0xF000000000000007)
      sub_1A56E9D04(*a2);
    *a1 = v4;
  }
  a1[1] = a2[1];
  a1[2] = a2[2];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t *sub_1A56F4088(unint64_t *a1)
{
  destroy for ResponseTextCode(a1);
  return a1;
}

unint64_t *assignWithTake for ResponseText(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v4 = *a1;
  v5 = *a2;
  if ((~v4 & 0xF000000000000007) != 0)
  {
    if ((~v5 & 0xF000000000000007) != 0)
    {
      *a1 = v5;
      sub_1A56837D0(v4);
      goto LABEL_6;
    }
    sub_1A56F4088(a1);
  }
  *a1 = v5;
LABEL_6:
  v6 = a2[2];
  a1[1] = a2[1];
  a1[2] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ResponseText()
{
  return &type metadata for ResponseText;
}

void sub_1A56F413C(uint64_t a1)
{
  __asm { BR              X10 }
}

void sub_1A56F4184()
{
  uint64_t v0;

  OUTLINED_FUNCTION_10_30();
  sub_1A56F5D74(v0);
}

void sub_1A56F419C()
{
  OUTLINED_FUNCTION_10_30();
  sub_1A56B0384();
}

#error "1A56F41FC: call analysis failed (funcsize=28)"

void ResponseTextCode.hash(into:)(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

void sub_1A56F4F60()
{
  OUTLINED_FUNCTION_9_20();
  OUTLINED_FUNCTION_22_18();
  OUTLINED_FUNCTION_8_32();
  sub_1A569428C();
}

void sub_1A56F4F84()
{
  OUTLINED_FUNCTION_33_12();
  OUTLINED_FUNCTION_9_20();
  OUTLINED_FUNCTION_22_18();
  OUTLINED_FUNCTION_8_32();
  sub_1A5694CF8();
}

void sub_1A56F4FA8()
{
  OUTLINED_FUNCTION_33_12();
  OUTLINED_FUNCTION_9_20();
  OUTLINED_FUNCTION_22_18();
  OUTLINED_FUNCTION_8_32();
  sub_1A5695E64();
}

void sub_1A56F4FCC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char __dst, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54)
{
  OUTLINED_FUNCTION_9_20();
  OUTLINED_FUNCTION_64_4();
  OUTLINED_FUNCTION_8_32();
}

void sub_1A56F5314()
{
  JUMPOUT(0x1A56F5154);
}

void sub_1A56F531C()
{
  JUMPOUT(0x1A56F5154);
}

void sub_1A56F5324()
{
  JUMPOUT(0x1A56F5154);
}

void sub_1A56F532C()
{
  JUMPOUT(0x1A56F5154);
}

void sub_1A56F5334()
{
  JUMPOUT(0x1A56F5154);
}

void sub_1A56F533C()
{
  JUMPOUT(0x1A56F5154);
}

void sub_1A56F5344()
{
  JUMPOUT(0x1A56F5154);
}

void sub_1A56F534C()
{
  JUMPOUT(0x1A56F5154);
}

void sub_1A56F5354()
{
  JUMPOUT(0x1A56F5154);
}

void sub_1A56F535C()
{
  JUMPOUT(0x1A56F5154);
}

void sub_1A56F5364()
{
  JUMPOUT(0x1A56F5154);
}

void sub_1A56F536C()
{
  JUMPOUT(0x1A56F5154);
}

void sub_1A56F5374()
{
  JUMPOUT(0x1A56F5154);
}

void sub_1A56F537C()
{
  JUMPOUT(0x1A56F5154);
}

void sub_1A56F5384()
{
  JUMPOUT(0x1A56F5154);
}

void sub_1A56F538C()
{
  JUMPOUT(0x1A56F5154);
}

void sub_1A56F5394()
{
  JUMPOUT(0x1A56F5154);
}

void sub_1A56F539C()
{
  JUMPOUT(0x1A56F5154);
}

void sub_1A56F53A4()
{
  JUMPOUT(0x1A56F5154);
}

void sub_1A56F53AC()
{
  JUMPOUT(0x1A56F5154);
}

void sub_1A56F53B4()
{
  JUMPOUT(0x1A56F5154);
}

void sub_1A56F53BC()
{
  JUMPOUT(0x1A56F5154);
}

void sub_1A56F53C4()
{
  JUMPOUT(0x1A56F5154);
}

void sub_1A56F53CC()
{
  JUMPOUT(0x1A56F5154);
}

void sub_1A56F53D4()
{
  JUMPOUT(0x1A56F5154);
}

void sub_1A56F53DC()
{
  JUMPOUT(0x1A56F5154);
}

void sub_1A56F53E4()
{
  JUMPOUT(0x1A56F5154);
}

void sub_1A56F53EC()
{
  JUMPOUT(0x1A56F5154);
}

void sub_1A56F53F4()
{
  JUMPOUT(0x1A56F5154);
}

void static ResponseTextCode.__derived_enum_equals(_:_:)(uint64_t a1)
{
  __asm { BR              X10 }
}

void sub_1A56F5504()
{
  int v0;

  OUTLINED_FUNCTION_6_37();
  if (!v0)
    sub_1A5689E98();
}

void sub_1A56F5A0C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  OUTLINED_FUNCTION_0_88();
  if (v2 != 16 || v0 != v1)
    JUMPOUT(0x1A56F59F0);
  JUMPOUT(0x1A56F5B60);
}

void sub_1A56F5B68()
{
  OUTLINED_FUNCTION_0_88();
  JUMPOUT(0x1A56F5B54);
}

void sub_1A56F5B74()
{
  OUTLINED_FUNCTION_0_88();
  JUMPOUT(0x1A56F5B54);
}

void sub_1A56F5B80()
{
  OUTLINED_FUNCTION_0_88();
  JUMPOUT(0x1A56F5B54);
}

uint64_t ResponseTextCode.hashValue.getter(uint64_t a1)
{
  _BYTE v3[72];

  sub_1A594CE64();
  ResponseTextCode.hash(into:)((uint64_t)v3, a1);
  return sub_1A594CED0();
}

uint64_t sub_1A56F5C94()
{
  uint64_t *v0;

  return ResponseTextCode.hashValue.getter(*v0);
}

void sub_1A56F5C9C(uint64_t a1)
{
  uint64_t *v1;

  ResponseTextCode.hash(into:)(a1, *v1);
}

uint64_t sub_1A56F5CA4()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1A594CE64();
  ResponseTextCode.hash(into:)((uint64_t)v3, v1);
  return sub_1A594CED0();
}

void sub_1A56F5CE4(uint64_t *a1)
{
  static ResponseTextCode.__derived_enum_equals(_:_:)(*a1);
}

uint64_t _s12NIOIMAPCore216ResponseTextCodeO8modifiedyAcA28MessageIdentifierSetNonEmptyVyAA3UIDVGFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_1A56B60D0(a1, a2 & 0xFFFFFFFFFFLL);
  if (result < 1)
  {
    __break(1u);
  }
  else
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = a1;
    *(_BYTE *)(v5 + 28) = BYTE4(a2);
    *(_DWORD *)(v5 + 24) = a2;
    v6 = v5 | 0x5000000000000000;
    sub_1A54E4334(a1, a2, SBYTE4(a2));
    return v6;
  }
  return result;
}

void sub_1A56F5D74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::UInt32 v4;
  uint64_t v5;
  unint64_t v6;
  Swift::Int v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  int v12;
  BOOL v13;
  int v14;
  uint64_t v15;
  uint64_t v16;

  v2 = v1;
  v4 = *(_DWORD *)(v1 + 20);
  v5 = OUTLINED_FUNCTION_32_13();
  OUTLINED_FUNCTION_22_1(v5, v6, v1 + 8, v4);
  if ((v8 & 1) != 0)
  {
    v9 = OUTLINED_FUNCTION_32_13();
    v7 = OUTLINED_FUNCTION_8_25(v9, v10);
  }
  v11 = v7;
  v12 = *(_DWORD *)(v2 + 20);
  v13 = __CFADD__(v12, (_DWORD)v7);
  v14 = v12 + v7;
  if (v13)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return;
  }
  *(_DWORD *)(v2 + 20) = v14;
  if (*(_QWORD *)(a1 + 16))
  {
    swift_retain();
    swift_retain();
    sub_1A56F5E3C(v2, a1);
    v16 = v15;
    swift_release();
    swift_release();
  }
  else
  {
    v16 = 0;
  }
  if (__OFADD__(v11, v16))
    goto LABEL_10;
}

void sub_1A56F5E3C(uint64_t a1, uint64_t a2)
{
  Swift::Int v4;
  Swift::Int v5;
  char v6;
  Swift::String v7;
  int v8;
  BOOL v9;
  int v10;

  v4 = *(unsigned int *)(a1 + 20);
  sub_1A56814E0(32, 0xE100000000000000, a1 + 8, v4);
  if ((v6 & 1) != 0)
  {
    v7._countAndFlagsBits = 32;
    v7._object = (void *)0xE100000000000000;
    v5 = ByteBuffer._setStringSlowpath(_:at:)(v7, v4);
  }
  v8 = *(_DWORD *)(a1 + 20);
  v9 = __CFADD__(v8, (_DWORD)v5);
  v10 = v8 + v5;
  if (v9)
  {
    __break(1u);
    goto LABEL_7;
  }
  *(_DWORD *)(a1 + 20) = v10;
  if (__OFADD__(v5, sub_1A565F508(a2, 0, 0xE000000000000000, 32, 0xE100000000000000, 0, 0xE000000000000000, 1, a1)))
  {
LABEL_7:
    __break(1u);
  }
}

uint64_t ResponseTextCode.debugDescription.getter(unint64_t a1)
{
  sub_1A56E9D04(a1);
  return sub_1A5682310(a1);
}

uint64_t sub_1A56F5F1C()
{
  unint64_t *v0;

  return ResponseTextCode.debugDescription.getter(*v0);
}

uint64_t sub_1A56F5F24()
{
  uint64_t v0;
  unint64_t v1;

  if (*(unsigned __int8 *)(v0 + 28) != 255)
  {
    v1 = *(unsigned int *)(v0 + 24) | ((unint64_t)*(unsigned __int8 *)(v0 + 28) << 32);
    sub_1A54E3458(*(_QWORD *)(v0 + 16), v1, SBYTE4(v1));
  }
  return swift_deallocObject();
}

unint64_t sub_1A56F5F68()
{
  unint64_t result;

  result = qword_1EE7A9C18;
  if (!qword_1EE7A9C18)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ResponseTextCode, &type metadata for ResponseTextCode);
    atomic_store(result, (unint64_t *)&qword_1EE7A9C18);
  }
  return result;
}

unint64_t *initializeBufferWithCopyOfBuffer for ResponseTextCode(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  sub_1A56E9D04(*a2);
  *a1 = v3;
  return a1;
}

unint64_t destroy for ResponseTextCode(unint64_t *a1)
{
  return sub_1A56837D0(*a1);
}

unint64_t *assignWithCopy for ResponseTextCode(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a2;
  sub_1A56E9D04(*a2);
  v4 = *a1;
  *a1 = v3;
  sub_1A56837D0(v4);
  return a1;
}

unint64_t *assignWithTake for ResponseTextCode(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  sub_1A56837D0(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseTextCode(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x70 && *(_BYTE *)(a1 + 8))
    {
      v2 = *(_DWORD *)a1 + 111;
    }
    else
    {
      v2 = ((((*(_QWORD *)a1 >> 57) & 0x78 | *(_QWORD *)a1 & 7) >> 2) & 0xFFFFFF9F | (32 * (*(_QWORD *)a1 & 3))) ^ 0x7F;
      if (v2 >= 0x6F)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for ResponseTextCode(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x6F)
  {
    *(_QWORD *)result = a2 - 112;
    if (a3 >= 0x70)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x70)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 5) & 3 | (4 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1A56F60E8(_QWORD *a1)
{
  unsigned int v1;

  v1 = (*a1 >> 59) & 0x1E | (*a1 >> 2) & 1;
  if (v1 <= 0xF)
    return v1;
  else
    return (*a1 >> 3) + 16;
}

_QWORD *sub_1A56F610C(_QWORD *result)
{
  *result &= 0xFFFFFFFFFFFFFFBuLL;
  return result;
}

unint64_t *sub_1A56F6120(unint64_t *result, uint64_t a2)
{
  unint64_t v2;

  if (a2 < 0x10)
    v2 = (a2 << 59) & 0x7000000000000000 | (4 * (a2 & 1)) | *result & 0xFFFFFFFFFFFFFF8;
  else
    v2 = (8 * (a2 - 16)) | 0x8000000000000000;
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for ResponseTextCode()
{
  return &type metadata for ResponseTextCode;
}

void sub_1A56F6164(unint64_t *a1, uint64_t a2)
{
  sub_1A5682FB4(*a1, a2);
}

void OUTLINED_FUNCTION_2_57(uint64_t a1, unint64_t a2, uint64_t a3)
{
  Swift::UInt32 v3;

  sub_1A56814E0(a1, a2, a3, v3);
}

uint64_t OUTLINED_FUNCTION_13_25(uint64_t a1)
{
  return *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
}

uint64_t OUTLINED_FUNCTION_14_23()
{
  return 0x5259434156495250;
}

uint64_t OUTLINED_FUNCTION_15_27()
{
  return 0x4945474E55505845;
}

uint64_t OUTLINED_FUNCTION_16_22()
{
  return 0x4E454E414D524550;
}

uint64_t OUTLINED_FUNCTION_17_23()
{
  return 0x4D54534548474948;
}

uint64_t OUTLINED_FUNCTION_18_21()
{
  return 0x4559444145524C41;
}

uint64_t OUTLINED_FUNCTION_19_21()
{
  return 0x414C494156414E55;
}

uint64_t OUTLINED_FUNCTION_20_17()
{
  return 20302;
}

uint64_t OUTLINED_FUNCTION_21_23()
{
  return 0x4955514552444955;
}

uint64_t OUTLINED_FUNCTION_22_22()
{
  return 0x5453544F4E444955;
}

uint64_t OUTLINED_FUNCTION_23_19()
{
  return 0x44494C4156444955;
}

uint64_t OUTLINED_FUNCTION_25_15()
{
  return 0x41544341544E4F43;
}

uint64_t OUTLINED_FUNCTION_28_14(unsigned __int16 a1)
{
  return a1 | 0x54534958454E0000;
}

uint64_t OUTLINED_FUNCTION_29_13()
{
  return 0x4952572D44414552;
}

uint64_t OUTLINED_FUNCTION_30_15()
{
  return 0x4C41525245464552;
}

uint64_t OUTLINED_FUNCTION_31_14()
{
  return 0x4445494649444F4DLL;
}

uint64_t OUTLINED_FUNCTION_32_13()
{
  return 0x5352414843444142;
}

uint64_t OUTLINED_FUNCTION_37_15()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t OUTLINED_FUNCTION_40_11()
{
  return 0x44455249505845;
}

uint64_t OUTLINED_FUNCTION_43_7()
{
  return 0x204E4545534E55;
}

uint64_t OUTLINED_FUNCTION_44_7()
{
  return 0x544F55515245564FLL;
}

uint64_t OUTLINED_FUNCTION_46_7()
{
  return 0x5542544E45494C43;
}

uint64_t OUTLINED_FUNCTION_47_6()
{
  return 0x5542524556524553;
}

uint64_t OUTLINED_FUNCTION_48_6()
{
  return 0x4C4E4F2D44414552;
}

uint64_t OUTLINED_FUNCTION_49_5()
{
  return 0x52545441455355;
}

uint64_t OUTLINED_FUNCTION_50_6()
{
  return 0x205458454E444955;
}

uint64_t OUTLINED_FUNCTION_52_6()
{
  return 0x5441455243595254;
}

uint64_t OUTLINED_FUNCTION_54_5()
{
  return 0x4954505552524F43;
}

uint64_t OUTLINED_FUNCTION_55_7@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + 20) = a1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_56_8()
{
  return 0x4553524150;
}

uint64_t OUTLINED_FUNCTION_57_8()
{
  return sub_1A594CE94();
}

uint64_t OUTLINED_FUNCTION_59_6()
{
  return 0x54494D494CLL;
}

uint64_t OUTLINED_FUNCTION_60_7()
{
  return 0x5452454C41;
}

uint64_t OUTLINED_FUNCTION_61_5()
{
  return 0x544F4E4E4143;
}

uint64_t OUTLINED_FUNCTION_62_5(unsigned __int16 a1)
{
  return a1 | 0x514553444F4D0000;
}

uint64_t OUTLINED_FUNCTION_64_4()
{
  return sub_1A594CEAC();
}

uint64_t OUTLINED_FUNCTION_65_5()
{
  return 0x4445534F4C43;
}

uint64_t OUTLINED_FUNCTION_66_5(unsigned __int16 a1)
{
  return a1 | 0x4445564153540000;
}

uint64_t OUTLINED_FUNCTION_67_5()
{
  return 0x4553554E49;
}

uint64_t OUTLINED_FUNCTION_70_2()
{
  return sub_1A594CC9C();
}

BOOL static TaggedResponse.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  BOOL v4;

  v4 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  return (v4 || (sub_1A594CD38() & 1) != 0)
      && static TaggedResponse.State.__derived_enum_equals(_:_:)(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40), *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), *(_QWORD *)(a2 + 32), *(_BYTE *)(a2 + 40));
}

uint64_t TaggedResponse.tag.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t TaggedResponse.tag.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

double (*TaggedResponse.tag.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t TaggedResponse.state.getter()
{
  OUTLINED_FUNCTION_0_89();
  return OUTLINED_FUNCTION_9_18();
}

unint64_t TaggedResponse.state.setter(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  unint64_t result;

  result = sub_1A56EFAC0(*(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(_BYTE *)(v4 + 40));
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  *(_QWORD *)(v4 + 32) = a3;
  *(_BYTE *)(v4 + 40) = a4;
  return result;
}

double (*TaggedResponse.state.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t TaggedResponse.init(tag:state:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  *(_QWORD *)a7 = result;
  *(_QWORD *)(a7 + 8) = a2;
  *(_QWORD *)(a7 + 16) = a3;
  *(_QWORD *)(a7 + 24) = a4;
  *(_QWORD *)(a7 + 32) = a5;
  *(_BYTE *)(a7 + 40) = a6;
  return result;
}

unint64_t TaggedResponse.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;

  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(v1 + 16);
  v4 = OUTLINED_FUNCTION_1_68();
  sub_1A56EF6FC(v4, v5, v6, v7);
  TaggedResponse.State.hash(into:)(a1, v3);
  v8 = OUTLINED_FUNCTION_1_68();
  return sub_1A56EFAC0(v8, v9, v10, v11);
}

uint64_t TaggedResponse.hashValue.getter()
{
  unint64_t *v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  _BYTE v7[72];

  sub_1A594CE64();
  v1 = *v0;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_0_89();
  TaggedResponse.State.hash(into:)((uint64_t)v7, v1);
  v2 = OUTLINED_FUNCTION_9_18();
  sub_1A56EFAC0(v2, v3, v4, v5);
  return sub_1A594CED0();
}

uint64_t sub_1A56F68B4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;
  _BYTE v6[72];

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(_BYTE *)(v0 + 40);
  sub_1A594CE64();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  sub_1A56EF6FC(v1, v2, v3, v4);
  TaggedResponse.State.hash(into:)((uint64_t)v6, v1);
  sub_1A56EFAC0(v1, v2, v3, v4);
  return sub_1A594CED0();
}

void sub_1A56F6968(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;
  Swift::Int v5;
  Swift::Int v6;
  char v7;
  char v8;
  int v9;
  BOOL v10;
  int v11;
  uint64_t v12;
  Swift::Int v13;
  Swift::Int v14;
  Swift::Int v15;
  char v16;
  Swift::String v17;
  int v18;
  int v19;
  Swift::String v20;
  Swift::String v21;

  v2 = v1;
  v21 = *(Swift::String *)a1;
  v20 = v21;
  sub_1A5524B84((uint64_t)&v21);
  sub_1A594B5F8();
  v4 = *(unsigned int *)(v1 + 20);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A56814E0(v20._countAndFlagsBits, (unint64_t)v20._object, v1 + 8, v4);
  v6 = v5;
  v8 = v7;
  swift_bridgeObjectRelease();
  if ((v8 & 1) != 0)
    v6 = ByteBuffer._setStringSlowpath(_:at:)(v20, v4);
  swift_bridgeObjectRelease();
  v9 = *(_DWORD *)(v1 + 20);
  v10 = __CFADD__(v9, (_DWORD)v6);
  v11 = v9 + v6;
  if (v10)
  {
    __break(1u);
    goto LABEL_11;
  }
  *(_DWORD *)(v1 + 20) = v11;
  sub_1A56F6F60(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  v13 = v6 + v12;
  if (__OFADD__(v6, v12))
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v14 = *(unsigned int *)(v1 + 20);
  sub_1A56814E0(2573, 0xE200000000000000, v2 + 8, *(_DWORD *)(v2 + 20));
  if ((v16 & 1) != 0)
  {
    v17._countAndFlagsBits = 2573;
    v17._object = (void *)0xE200000000000000;
    v15 = ByteBuffer._setStringSlowpath(_:at:)(v17, v14);
  }
  v18 = *(_DWORD *)(v2 + 20);
  v10 = __CFADD__(v18, (_DWORD)v15);
  v19 = v18 + v15;
  if (v10)
    goto LABEL_12;
  *(_DWORD *)(v2 + 20) = v19;
  if (__OFADD__(v13, v15))
LABEL_13:
    __break(1u);
}

unint64_t sub_1A56F6AB8()
{
  unint64_t result;

  result = qword_1EE7A9C20;
  if (!qword_1EE7A9C20)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for TaggedResponse, &type metadata for TaggedResponse);
    atomic_store(result, (unint64_t *)&qword_1EE7A9C20);
  }
  return result;
}

unint64_t destroy for TaggedResponse(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return sub_1A56EFAC0(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
}

uint64_t initializeWithCopy for TaggedResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_BYTE *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A56EF6FC(v4, v5, v6, v7);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 40) = v7;
  return a1;
}

uint64_t assignWithCopy for TaggedResponse(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = a2[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = v2[2];
  v5 = v2[3];
  v6 = v2[4];
  LOBYTE(v2) = *((_BYTE *)v2 + 40);
  sub_1A56EF6FC(v4, v5, v6, v2);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  v10 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = (_BYTE)v2;
  sub_1A56EFAC0(v7, v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy41_8_1(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for TaggedResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_BYTE *)(a2 + 40);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = v5;
  v10 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v6;
  sub_1A56EFAC0(v7, v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for TaggedResponse(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 41))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for TaggedResponse()
{
  return &type metadata for TaggedResponse;
}

unint64_t OUTLINED_FUNCTION_0_89()
{
  uint64_t v0;

  return sub_1A56EF6FC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
}

uint64_t OUTLINED_FUNCTION_1_68()
{
  uint64_t v0;

  return v0;
}

BOOL static TaggedResponse.State.__derived_enum_equals(_:_:)(unint64_t a1, uint64_t a2, uint64_t a3, char a4, unint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  char v8;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  char v22;
  uint64_t v23;
  char v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 v29;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned __int8 v46;

  if (!a4)
  {
    if (a8)
      return 0;
    OUTLINED_FUNCTION_19_22();
    if (v21)
    {
      if (v18 != v17)
        return 0;
      OUTLINED_FUNCTION_16_23();
      OUTLINED_FUNCTION_11_22();
    }
    else
    {
      if (v18 == v17)
        return 0;
      OUTLINED_FUNCTION_16_23();
      OUTLINED_FUNCTION_11_22();
      OUTLINED_FUNCTION_2_58();
      OUTLINED_FUNCTION_6_38();
      if ((v8 & 1) == 0)
      {
        OUTLINED_FUNCTION_10_31();
        OUTLINED_FUNCTION_8_33();
        goto LABEL_50;
      }
    }
    if (a2 != a6 || a3 != a7)
    {
      v25 = OUTLINED_FUNCTION_0_90();
      OUTLINED_FUNCTION_10_31();
      OUTLINED_FUNCTION_8_33();
LABEL_40:
      sub_1A56EFAC0(v26, v27, v28, v29);
      return (v25 & 1) != 0;
    }
    OUTLINED_FUNCTION_8_33();
    sub_1A56EFAC0(v39, v40, v41, v42);
    OUTLINED_FUNCTION_8_33();
LABEL_45:
    sub_1A56EFAC0(v35, v36, v37, v38);
    return 1;
  }
  if (a4 != 1)
  {
    if (a8 != 2)
      return 0;
    OUTLINED_FUNCTION_19_22();
    if (v21)
    {
      if (v20 != v19)
        return 0;
      OUTLINED_FUNCTION_18_22();
      OUTLINED_FUNCTION_15_28();
      goto LABEL_28;
    }
    if (v20 == v19)
      return 0;
    OUTLINED_FUNCTION_18_22();
    OUTLINED_FUNCTION_15_28();
    OUTLINED_FUNCTION_2_58();
    OUTLINED_FUNCTION_6_38();
    if ((v8 & 1) != 0)
    {
LABEL_28:
      if (a2 != a6 || a3 != a7)
      {
        v25 = OUTLINED_FUNCTION_0_90();
        OUTLINED_FUNCTION_14_24();
        OUTLINED_FUNCTION_9_33();
        goto LABEL_40;
      }
      OUTLINED_FUNCTION_9_33();
      sub_1A56EFAC0(v31, v32, v33, v34);
      OUTLINED_FUNCTION_9_33();
      goto LABEL_45;
    }
    OUTLINED_FUNCTION_14_24();
    OUTLINED_FUNCTION_9_33();
LABEL_50:
    sub_1A56EFAC0(v43, v44, v45, v46);
    return 0;
  }
  if (a8 != 1)
    return 0;
  OUTLINED_FUNCTION_19_22();
  if (!v21)
  {
    if (v16 != v15)
    {
      OUTLINED_FUNCTION_17_24();
      OUTLINED_FUNCTION_13_26();
      OUTLINED_FUNCTION_2_58();
      OUTLINED_FUNCTION_6_38();
      if ((v8 & 1) != 0)
        goto LABEL_20;
      OUTLINED_FUNCTION_12_26();
      v43 = a1;
      v44 = a2;
      v45 = a3;
      v46 = 1;
      goto LABEL_50;
    }
    return 0;
  }
  if (v16 != v15)
    return 0;
  OUTLINED_FUNCTION_17_24();
  OUTLINED_FUNCTION_13_26();
LABEL_20:
  v21 = a2 == a6 && a3 == a7;
  if (!v21)
  {
    v22 = OUTLINED_FUNCTION_0_90();
    v23 = 1;
    OUTLINED_FUNCTION_12_26();
    OUTLINED_FUNCTION_7_30(a1);
    if ((v22 & 1) != 0)
      return v23;
    return 0;
  }
  v23 = 1;
  OUTLINED_FUNCTION_7_30(a5);
  OUTLINED_FUNCTION_7_30(a1);
  return v23;
}

void sub_1A56F6F60(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  Swift::Int v6;
  char v7;
  int v8;
  char v9;
  char v10;
  int v11;
  char v12;
  Swift::String v13;
  int v14;

  if (a4)
  {
    if (a4 != 1)
      goto LABEL_15;
    v5 = 2116431;
    OUTLINED_FUNCTION_5_37();
    OUTLINED_FUNCTION_20_18();
    OUTLINED_FUNCTION_3_46(2117454, 0xE300000000000000);
    if ((v7 & 1) != 0)
      OUTLINED_FUNCTION_22_23(2117454);
    OUTLINED_FUNCTION_21_24();
    if (v9)
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
    OUTLINED_FUNCTION_1_69(v8);
    OUTLINED_FUNCTION_4_41();
    if (!__OFADD__(2116431, v4))
      return;
    __break(1u);
  }
  OUTLINED_FUNCTION_5_37();
  OUTLINED_FUNCTION_20_18();
  OUTLINED_FUNCTION_3_46(2116431, 0xE300000000000000);
  if ((v10 & 1) != 0)
    OUTLINED_FUNCTION_22_23(2116431);
  OUTLINED_FUNCTION_21_24();
  if (v9)
    goto LABEL_21;
  OUTLINED_FUNCTION_1_69(v11);
  OUTLINED_FUNCTION_4_41();
  if (!__OFADD__(v5, v4))
    return;
  __break(1u);
LABEL_15:
  OUTLINED_FUNCTION_5_37();
  OUTLINED_FUNCTION_20_18();
  OUTLINED_FUNCTION_3_46(541344066, 0xE400000000000000);
  if ((v12 & 1) != 0)
  {
    v13._countAndFlagsBits = 541344066;
    v13._object = (void *)0xE400000000000000;
    ByteBuffer._setStringSlowpath(_:at:)(v13, v6);
  }
  OUTLINED_FUNCTION_21_24();
  if (v9)
    goto LABEL_22;
  OUTLINED_FUNCTION_1_69(v14);
  OUTLINED_FUNCTION_4_41();
  if (__OFADD__(v5, v4))
LABEL_23:
    __break(1u);
}

unint64_t sub_1A56F709C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  BOOL v9;
  char v11;

  v4 = sub_1A594B49C();
  v6 = v5;
  swift_bridgeObjectRelease();
  v7 = v4 == 27503 && v6 == 0xE200000000000000;
  if (v7
    || (OUTLINED_FUNCTION_0_90() & 1) != 0
    || (v4 == 28526 ? (v9 = v6 == 0xE200000000000000) : (v9 = 0), v9 || (OUTLINED_FUNCTION_0_90() & 1) != 0))
  {
    swift_bridgeObjectRelease();
  }
  else if (v4 == 6578530 && v6 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = OUTLINED_FUNCTION_0_90();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      sub_1A568380C(a3);
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return a3;
}

uint64_t TaggedResponse.State.hash(into:)(uint64_t a1, unint64_t a2)
{
  sub_1A594CE88();
  OUTLINED_FUNCTION_20_18();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  ResponseText.hash(into:)(a1, a2);
  sub_1A568380C(a2);
  return swift_bridgeObjectRelease();
}

uint64_t TaggedResponse.State.hashValue.getter(unint64_t a1)
{
  _BYTE v3[72];

  sub_1A594CE64();
  TaggedResponse.State.hash(into:)((uint64_t)v3, a1);
  return sub_1A594CED0();
}

uint64_t sub_1A56F72A8()
{
  unint64_t *v0;

  return TaggedResponse.State.hashValue.getter(*v0);
}

uint64_t sub_1A56F72B8(uint64_t a1)
{
  unint64_t *v1;

  return TaggedResponse.State.hash(into:)(a1, *v1);
}

uint64_t sub_1A56F72C8()
{
  unint64_t *v0;
  unint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1A594CE64();
  TaggedResponse.State.hash(into:)((uint64_t)v3, v1);
  return sub_1A594CED0();
}

unint64_t sub_1A56F7328()
{
  unint64_t result;

  result = qword_1EE7A9C28;
  if (!qword_1EE7A9C28)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for TaggedResponse.State, &type metadata for TaggedResponse.State);
    atomic_store(result, (unint64_t *)&qword_1EE7A9C28);
  }
  return result;
}

BOOL sub_1A56F7364(uint64_t a1, uint64_t a2)
{
  return static TaggedResponse.State.__derived_enum_equals(_:_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(_BYTE *)(a2 + 24));
}

unint64_t _s5StateOwxx(uint64_t a1)
{
  return sub_1A56EFAC0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t _s5StateOwcp(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1A56EF6FC(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t _s5StateOwca(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1A56EF6FC(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_1A56EFAC0(v7, v8, v9, v10);
  return a1;
}

uint64_t _s5StateOwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_1A56EFAC0(v5, v7, v6, v8);
  return a1;
}

uint64_t sub_1A56F74B0(uint64_t result, char a2)
{
  *(_BYTE *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for TaggedResponse.State()
{
  return &type metadata for TaggedResponse.State;
}

uint64_t OUTLINED_FUNCTION_0_90()
{
  return sub_1A594CD38();
}

uint64_t OUTLINED_FUNCTION_1_69@<X0>(int a1@<W8>)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_DWORD *)(v3 + 20) = a1;
  return sub_1A56F3CD4(v2, v4, v1);
}

void OUTLINED_FUNCTION_2_58()
{
  unint64_t v0;
  unint64_t v1;

  sub_1A56E9CF0(v1);
  sub_1A56E9CF0(v0);
  static ResponseTextCode.__derived_enum_equals(_:_:)(v0);
}

void OUTLINED_FUNCTION_3_46(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  Swift::UInt32 v3;

  sub_1A56814E0(a1, a2, v2, v3);
}

uint64_t OUTLINED_FUNCTION_4_41()
{
  unint64_t v0;

  sub_1A568380C(v0);
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_5_37()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

unint64_t OUTLINED_FUNCTION_6_38()
{
  unint64_t v0;
  unint64_t v1;

  sub_1A568380C(v1);
  return sub_1A568380C(v0);
}

unint64_t OUTLINED_FUNCTION_7_30(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return sub_1A56EFAC0(a1, v2, v1, 1u);
}

unint64_t OUTLINED_FUNCTION_10_31()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  return sub_1A56EFAC0(v1, v2, v0, 0);
}

unint64_t OUTLINED_FUNCTION_11_22()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  return sub_1A56EF6FC(v1, v2, v0, 0);
}

unint64_t OUTLINED_FUNCTION_12_26()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  return sub_1A56EFAC0(v1, v2, v0, 1u);
}

unint64_t OUTLINED_FUNCTION_13_26()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  return sub_1A56EF6FC(v1, v2, v0, 1u);
}

unint64_t OUTLINED_FUNCTION_14_24()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  return sub_1A56EFAC0(v1, v2, v0, 2u);
}

unint64_t OUTLINED_FUNCTION_15_28()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  return sub_1A56EF6FC(v1, v2, v0, 2u);
}

unint64_t OUTLINED_FUNCTION_16_23()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  return sub_1A56EF6FC(v2, v1, v0, 0);
}

unint64_t OUTLINED_FUNCTION_17_24()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  return sub_1A56EF6FC(v2, v1, v0, 1u);
}

unint64_t OUTLINED_FUNCTION_18_22()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  return sub_1A56EF6FC(v2, v1, v0, 2u);
}

unint64_t OUTLINED_FUNCTION_20_18()
{
  unint64_t v0;

  return sub_1A56E9CF0(v0);
}

Swift::Int OUTLINED_FUNCTION_22_23(uint64_t a1)
{
  Swift::Int v1;
  unint64_t v2;

  v2 = 0xE300000000000000;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v1);
}

void sub_1A56F7680(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  __asm { BR              X10 }
}

uint64_t sub_1A56F76C8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  int v3;
  char v4;
  uint64_t result;

  OUTLINED_FUNCTION_5_37();
  OUTLINED_FUNCTION_20_18();
  OUTLINED_FUNCTION_3_46(2116431, 0xE300000000000000);
  if ((v2 & 1) != 0)
    OUTLINED_FUNCTION_279(2116431, 0xE300000000000000);
  OUTLINED_FUNCTION_21_24();
  if (v4)
  {
    __break(1u);
    JUMPOUT(0x1A56F7840);
  }
  OUTLINED_FUNCTION_1_69(v3);
  OUTLINED_FUNCTION_4_41();
  result = v1 + v0;
  if (__OFADD__(v1, v0))
  {
    __break(1u);
    JUMPOUT(0x1A56F7710);
  }
  return result;
}

void static UntaggedStatus.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  __asm { BR              X10 }
}

uint64_t sub_1A56F78B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int8 v35;

  if (a8)
    return 0;
  OUTLINED_FUNCTION_19_22();
  if (v16)
  {
    if (v15 == v14)
    {
      OUTLINED_FUNCTION_25_16();
      OUTLINED_FUNCTION_20_19();
      goto LABEL_8;
    }
    return 0;
  }
  if (v15 == v14)
    return 0;
  OUTLINED_FUNCTION_25_16();
  OUTLINED_FUNCTION_20_19();
  OUTLINED_FUNCTION_2_58();
  OUTLINED_FUNCTION_6_38();
  if ((v13 & 1) == 0)
  {
    OUTLINED_FUNCTION_33_13(v11, v12, v10);
    OUTLINED_FUNCTION_8_33();
    sub_1A56EF9E0(v32, v33, v34, v35);
    return 0;
  }
LABEL_8:
  v16 = v9 == v12 && v8 == v10;
  if (v16)
  {
    v24 = OUTLINED_FUNCTION_160();
    OUTLINED_FUNCTION_33_13(v24, v25, v26);
    OUTLINED_FUNCTION_8_33();
    sub_1A56EF9E0(v27, v28, v29, v30);
  }
  else
  {
    OUTLINED_FUNCTION_2_59();
    v17 = OUTLINED_FUNCTION_8_34();
    OUTLINED_FUNCTION_33_13(v17, v18, v19);
    OUTLINED_FUNCTION_8_33();
    sub_1A56EF9E0(v20, v21, v22, v23);
    if ((v13 & 1) == 0)
      return 0;
  }
  return 1;
}

unint64_t sub_1A56F7BF8(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  char v13;

  v4 = sub_1A594B49C();
  v6 = v5;
  swift_bridgeObjectRelease();
  v7 = v4 == 27503 && v6 == 0xE200000000000000;
  if (v7
    || (OUTLINED_FUNCTION_0_90() & 1) != 0
    || (v4 == 28526 ? (v9 = v6 == 0xE200000000000000) : (v9 = 0),
        v9
     || (OUTLINED_FUNCTION_0_90() & 1) != 0
     || (v4 == 6578530 ? (v10 = v6 == 0xE300000000000000) : (v10 = 0),
         v10
      || (OUTLINED_FUNCTION_0_90() & 1) != 0
      || (v4 == 0x68747561657270 ? (v11 = v6 == 0xE700000000000000) : (v11 = 0),
          v11 || (OUTLINED_FUNCTION_0_90() & 1) != 0))))
  {
    swift_bridgeObjectRelease();
  }
  else if (v4 == 6650210 && v6 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = OUTLINED_FUNCTION_0_90();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {
      sub_1A568380C(a3);
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return a3;
}

uint64_t UntaggedStatus.hash(into:)(uint64_t a1, unint64_t a2)
{
  sub_1A594CE88();
  OUTLINED_FUNCTION_20_18();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  ResponseText.hash(into:)(a1, a2);
  sub_1A568380C(a2);
  return swift_bridgeObjectRelease();
}

uint64_t UntaggedStatus.hashValue.getter(unint64_t a1)
{
  _BYTE v3[72];

  sub_1A594CE64();
  UntaggedStatus.hash(into:)((uint64_t)v3, a1);
  return sub_1A594CED0();
}

uint64_t sub_1A56F7EA4()
{
  unint64_t *v0;

  return UntaggedStatus.hashValue.getter(*v0);
}

uint64_t sub_1A56F7EB4(uint64_t a1)
{
  unint64_t *v1;

  return UntaggedStatus.hash(into:)(a1, *v1);
}

uint64_t sub_1A56F7EC4()
{
  unint64_t *v0;
  unint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1A594CE64();
  UntaggedStatus.hash(into:)((uint64_t)v3, v1);
  return sub_1A594CED0();
}

unint64_t sub_1A56F7F24()
{
  unint64_t result;

  result = qword_1EE7A9C30;
  if (!qword_1EE7A9C30)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for UntaggedStatus, &type metadata for UntaggedStatus);
    atomic_store(result, (unint64_t *)&qword_1EE7A9C30);
  }
  return result;
}

void sub_1A56F7F60(uint64_t a1)
{
  static UntaggedStatus.__derived_enum_equals(_:_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

unint64_t destroy for UntaggedStatus(uint64_t a1)
{
  return sub_1A56EF9E0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for UntaggedStatus(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1A56EF61C(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for UntaggedStatus(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1A56EF61C(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_1A56EF9E0(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for UntaggedStatus(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_1A56EF9E0(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for UntaggedStatus(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFC && *(_BYTE *)(a1 + 25))
    {
      v2 = *(_DWORD *)a1 + 251;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 24);
      if (v3 <= 4)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UntaggedStatus(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for UntaggedStatus()
{
  return &type metadata for UntaggedStatus;
}

uint64_t OUTLINED_FUNCTION_2_59()
{
  return sub_1A594CD38();
}

uint64_t OUTLINED_FUNCTION_8_34()
{
  uint64_t v0;

  return v0;
}

unint64_t OUTLINED_FUNCTION_12_27(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return sub_1A56EF9E0(a1, v2, v1, 1u);
}

unint64_t OUTLINED_FUNCTION_18_23(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A56EF9E0(a1, a2, a3, 1u);
}

unint64_t OUTLINED_FUNCTION_20_19()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  return sub_1A56EF61C(v1, v2, v0, 0);
}

unint64_t OUTLINED_FUNCTION_21_25()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  return sub_1A56EF61C(v1, v2, v0, 4u);
}

unint64_t OUTLINED_FUNCTION_22_24()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  return sub_1A56EF61C(v1, v2, v0, 3u);
}

unint64_t OUTLINED_FUNCTION_23_20()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  return sub_1A56EF61C(v1, v2, v0, 2u);
}

unint64_t OUTLINED_FUNCTION_24_17()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  return sub_1A56EF61C(v1, v2, v0, 1u);
}

unint64_t OUTLINED_FUNCTION_25_16()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  return sub_1A56EF61C(v2, v1, v0, 0);
}

unint64_t OUTLINED_FUNCTION_26_11()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  return sub_1A56EF61C(v2, v1, v0, 4u);
}

unint64_t OUTLINED_FUNCTION_27_14()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  return sub_1A56EF61C(v2, v1, v0, 3u);
}

unint64_t OUTLINED_FUNCTION_28_15()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  return sub_1A56EF61C(v2, v1, v0, 2u);
}

unint64_t OUTLINED_FUNCTION_29_14()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  return sub_1A56EF61C(v2, v1, v0, 1u);
}

uint64_t OUTLINED_FUNCTION_30_16()
{
  return 0x2048545541455250;
}

unint64_t OUTLINED_FUNCTION_31_15(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A56EF9E0(a1, a2, a3, 3u);
}

unint64_t OUTLINED_FUNCTION_32_14(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A56EF9E0(a1, a2, a3, 2u);
}

unint64_t OUTLINED_FUNCTION_33_13(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A56EF9E0(a1, a2, a3, 0);
}

unint64_t OUTLINED_FUNCTION_34_15(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A56EF9E0(a1, a2, a3, 4u);
}

void ReturnOption.hash(into:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _OWORD *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _OWORD v25[2];
  __int128 v26;
  __int128 v27;
  _OWORD v28[3];
  __int128 v29;
  _BYTE v30[96];

  v2 = v1;
  v4 = OUTLINED_FUNCTION_14_14(a1, &v20);
  v5 = v21;
  v6 = v22;
  v7 = v23;
  v19 = v24;
  OUTLINED_FUNCTION_14_14((uint64_t)v4, v25);
  if ((unint64_t)v26 >> 62)
  {
    if ((unint64_t)v26 >> 62 == 1)
    {
      *(_QWORD *)&v26 = v26 & 0x3FFFFFFFFFFFFFFFLL;
      v28[0] = v25[0];
      v28[1] = v25[1];
      v28[2] = v26;
      v29 = v27;
      sub_1A594CE88();
      sub_1A56D08B0((uint64_t)v28, (uint64_t)v30);
      OUTLINED_FUNCTION_10_19();
      if ((v30[72] & 1) != 0)
      {
        v8 = sub_1A594CE88();
        OUTLINED_FUNCTION_0_67(v8, v9, v10, v11, v5 & 1);
        sub_1A5666818(v6, v7, v19);
        sub_1A594B1D8();
      }
      else
      {
        v12 = sub_1A594CE88();
        OUTLINED_FUNCTION_0_67(v12, v13, v14, v15, v5 & 1);
        sub_1A5666818(v6, v7, v19);
      }
      sub_1A594B1D8();
      v16 = *((_QWORD *)&v29 + 1);
      if (HIBYTE(*((_QWORD *)&v29 + 1)) == 255)
      {
        sub_1A594CE94();
      }
      else
      {
        sub_1A594CE94();
        OUTLINED_FUNCTION_2_44();
        OUTLINED_FUNCTION_13_18(a1, v17, v18, v16 & 0xFFFFFFFFFFFFFFLL | ((unint64_t)(HIBYTE(v16) & 1) << 56));
        OUTLINED_FUNCTION_7_20();
      }
      sub_1A56F8C3C(v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A56668BC);
    }
    else
    {
      OUTLINED_FUNCTION_4_42();
      sub_1A594CE88();
    }
  }
  else
  {
    *(_QWORD *)&v26 = v26 & 0x3FFFFFFFFFFFFFFFLL;
    sub_1A594CE88();
    sub_1A5694D68();
  }
}

uint64_t static ReturnOption.__derived_enum_equals(_:_:)(__int128 *a1, __int128 *a2)
{
  _OWORD *v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  BOOL v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  int8x16_t v15;
  int8x16_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD v21[2];
  __int128 v22;
  __int128 v23;
  _OWORD v24[4];
  __int128 v25;
  int8x16_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  int8x16_t v30;
  _BYTE v31[32];

  v4 = sub_1A56D0898(a1, &v25);
  v5 = v25;
  if (!((unint64_t)v27 >> 62))
  {
    *(_QWORD *)&v27 = v27 & 0x3FFFFFFFFFFFFFFFLL;
    sub_1A56D0898(a2, &v29);
    if (!(*(_QWORD *)v31 >> 62))
    {
      sub_1A568D0B4(v5, v29);
      v6 = v7;
      return v6 & 1;
    }
    goto LABEL_40;
  }
  if ((unint64_t)v27 >> 62 != 1)
  {
    v8 = v26.i64[1] | v26.i64[0] | *((_QWORD *)&v25 + 1);
    v9 = (_QWORD)v27 == 0x8000000000000000
      && ((unint64_t)v28 | *((_QWORD *)&v27 + 1) | (unint64_t)v25 | *((_QWORD *)&v28 + 1) | v8) == 0;
    if (v9)
    {
      OUTLINED_FUNCTION_1_70();
      if (!v9)
        goto LABEL_40;
      if (v14 != 0x8000000000000000)
        goto LABEL_40;
      v15 = vorrq_s8(*(int8x16_t *)&v31[8], v30);
      v16 = vextq_s8(v15, v15, 8uLL);
      if (*(_QWORD *)&vorr_s8(*(int8x8_t *)v16.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v16, v16, 8uLL)) | *(_QWORD *)&v31[24] | *((_QWORD *)&v29 + 1) | (unint64_t)v29)
        goto LABEL_40;
LABEL_39:
      v6 = 1;
      return v6 & 1;
    }
    v10 = (_QWORD)v27 == 0x8000000000000000 && (_QWORD)v25 == 1;
    if (!v10 || (unint64_t)v28 | *((_QWORD *)&v27 + 1) | *((_QWORD *)&v28 + 1) | v8)
    {
      OUTLINED_FUNCTION_1_70();
      if (!v9)
        goto LABEL_40;
      OUTLINED_FUNCTION_7_31();
      if (v18)
        goto LABEL_40;
      if (v17 != 0x8000000000000000 || (_QWORD)v29 != 2)
        goto LABEL_40;
    }
    else
    {
      OUTLINED_FUNCTION_1_70();
      if (!v9)
        goto LABEL_40;
      OUTLINED_FUNCTION_7_31();
      if (v12)
        goto LABEL_40;
      if (v11 != 0x8000000000000000 || (_QWORD)v29 != 1)
        goto LABEL_40;
    }
    if (!(v30.i64[0] | v30.i64[1] | *((_QWORD *)&v29 + 1)))
      goto LABEL_39;
LABEL_40:
    v6 = 0;
    return v6 & 1;
  }
  *(_QWORD *)&v27 = v27 & 0x3FFFFFFFFFFFFFFFLL;
  v29 = v25;
  v30 = v26;
  *(_OWORD *)v31 = v27;
  *(_OWORD *)&v31[16] = v28;
  OUTLINED_FUNCTION_14_14((uint64_t)v4, v21);
  if ((unint64_t)v22 >> 62 != 1)
    goto LABEL_40;
  *(_QWORD *)&v22 = v22 & 0x3FFFFFFFFFFFFFFFLL;
  v24[0] = v21[0];
  v24[1] = v21[1];
  v24[2] = v22;
  v24[3] = v23;
  sub_1A56F8C3C(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5666914);
  sub_1A56F8C3C(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5666914);
  v6 = sub_1A56CFF98(&v29, (uint64_t)v24);
  sub_1A56F8C3C(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A56668BC);
  sub_1A56F8C3C(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A56668BC);
  return v6 & 1;
}

uint64_t ReturnOption.hashValue.getter()
{
  __int128 *v0;
  __int128 *v1;
  uint64_t v2;
  char v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  _BYTE v19[72];
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _OWORD v25[2];
  __int128 v26;
  __int128 v27;
  _OWORD v28[3];
  __int128 v29;
  _BYTE v30[96];

  v1 = v0;
  sub_1A56D0898(v0, &v20);
  v3 = v21;
  v2 = v22;
  v18 = v23;
  v4 = v24;
  v5 = sub_1A594CE64();
  OUTLINED_FUNCTION_14_14(v5, v25);
  if ((unint64_t)v26 >> 62)
  {
    if ((unint64_t)v26 >> 62 == 1)
    {
      *(_QWORD *)&v26 = v26 & 0x3FFFFFFFFFFFFFFFLL;
      v28[0] = v25[0];
      v28[1] = v25[1];
      v28[2] = v26;
      v29 = v27;
      sub_1A594CE88();
      sub_1A56D08B0((uint64_t)v28, (uint64_t)v30);
      OUTLINED_FUNCTION_10_19();
      if ((v30[72] & 1) != 0)
      {
        v6 = sub_1A594CE88();
        OUTLINED_FUNCTION_0_67(v6, v7, v8, v9, v3 & 1);
        sub_1A5666818(v2, v18, v4);
        sub_1A594B1D8();
      }
      else
      {
        v10 = sub_1A594CE88();
        OUTLINED_FUNCTION_0_67(v10, v11, v12, v13, v3 & 1);
        sub_1A5666818(v2, v18, v4);
      }
      sub_1A594B1D8();
      v14 = *((_QWORD *)&v29 + 1);
      if (HIBYTE(*((_QWORD *)&v29 + 1)) == 255)
      {
        sub_1A594CE94();
      }
      else
      {
        sub_1A594CE94();
        OUTLINED_FUNCTION_2_44();
        OUTLINED_FUNCTION_13_18((uint64_t)v19, v15, v16, v14 & 0xFFFFFFFFFFFFFFLL | ((unint64_t)(HIBYTE(v14) & 1) << 56));
        OUTLINED_FUNCTION_7_20();
      }
      sub_1A56F8C3C(v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A56668BC);
    }
    else
    {
      OUTLINED_FUNCTION_4_42();
      sub_1A594CE88();
    }
  }
  else
  {
    *(_QWORD *)&v26 = v26 & 0x3FFFFFFFFFFFFFFFLL;
    sub_1A594CE88();
    sub_1A5694D68();
  }
  return sub_1A594CED0();
}

uint64_t sub_1A56F895C()
{
  __int128 *v0;
  _OWORD v2[4];

  sub_1A56D0898(v0, v2);
  return ReturnOption.hashValue.getter();
}

void sub_1A56F8990(uint64_t a1)
{
  __int128 *v1;
  _OWORD v3[4];

  sub_1A56D0898(v1, v3);
  ReturnOption.hash(into:)(a1);
}

uint64_t sub_1A56F89CC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _BYTE v10[72];

  v1 = *v0;
  v2 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  v5 = v0[4];
  v6 = v0[5];
  v8 = v0[6];
  v7 = v0[7];
  sub_1A594CE64();
  if (v5 >> 62)
  {
    if (v5 >> 62 == 1)
    {
      sub_1A594CE88();
      sub_1A594CE88();
      if ((v5 & 1) != 0)
      {
        sub_1A56667EC(v1, v2, v4, v3, 1);
        sub_1A5666818(v6, v8, v7);
        sub_1A594B1D8();
      }
      else
      {
        sub_1A56667EC(v1, v2, v4, v3, 0);
        sub_1A5666818(v6, v8, v7);
      }
      sub_1A594B1D8();
      sub_1A594CE94();
      if (HIBYTE(v7) != 255)
      {
        sub_1A56667D4(v6, v8, v7, HIBYTE(v7) & 1);
        OptionValueComp.hash(into:)((uint64_t)v10, v6, v8, v7 & 0xFFFFFFFFFFFFFFLL | ((unint64_t)(HIBYTE(v7) & 1) << 56));
        sub_1A56668A4(v6, v8, v7);
      }
      sub_1A56668BC(v1, v2, v4, v3, v5, v6, v8, v7);
    }
    else
    {
      sub_1A594CE88();
    }
  }
  else
  {
    sub_1A594CE88();
    sub_1A5694D68();
  }
  return sub_1A594CED0();
}

uint64_t sub_1A56F8BF8(__int128 *a1)
{
  _OWORD *v1;
  __int128 v3[4];
  __int128 v4[4];

  v1 = sub_1A56D0898(a1, v3);
  OUTLINED_FUNCTION_14_14((uint64_t)v1, v4);
  return static ReturnOption.__derived_enum_equals(_:_:)(v3, v4) & 1;
}

_QWORD *sub_1A56F8C3C(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7]);
  return a1;
}

unint64_t sub_1A56F8C7C()
{
  unint64_t result;

  result = qword_1EE7A9C38;
  if (!qword_1EE7A9C38)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ReturnOption, &type metadata for ReturnOption);
    atomic_store(result, (unint64_t *)&qword_1EE7A9C38);
  }
  return result;
}

uint64_t destroy for ReturnOption(uint64_t a1)
{
  return sub_1A56668BC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
}

uint64_t *initializeWithCopy for ReturnOption(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  sub_1A5666914(*a2, v4, v5, v6, v7, v8, v9, v10);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  return a1;
}

uint64_t *assignWithCopy for ReturnOption(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  sub_1A5666914(*a2, v4, v5, v6, v7, v8, v9, v10);
  v11 = *a1;
  v12 = a1[1];
  v13 = a1[2];
  v14 = a1[3];
  v15 = a1[4];
  v16 = a1[5];
  v17 = a1[6];
  v18 = a1[7];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  sub_1A56668BC(v11, v12, v13, v14, v15, v16, v17, v18);
  return a1;
}

uint64_t *assignWithTake for ReturnOption(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __int128 v11;
  __int128 v12;

  v3 = *a1;
  v5 = a1[1];
  v4 = a1[2];
  v6 = a1[3];
  v7 = a1[4];
  v8 = a1[5];
  v9 = a1[6];
  v10 = a1[7];
  v11 = a2[1];
  *(_OWORD *)a1 = *a2;
  *((_OWORD *)a1 + 1) = v11;
  v12 = a2[3];
  *((_OWORD *)a1 + 2) = a2[2];
  *((_OWORD *)a1 + 3) = v12;
  sub_1A56668BC(v3, v5, v4, v6, v7, v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReturnOption(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 64))
    {
      v3 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 32) >> 1;
      if (v2 > 0x80000000)
        v3 = ~(_DWORD)v2;
      else
        v3 = -1;
    }
  }
  else
  {
    v3 = -1;
  }
  return (v3 + 1);
}

double storeEnumTagSinglePayload for ReturnOption(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    *(_QWORD *)(a1 + 56) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      result = 0.0;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_QWORD *)(a1 + 32) = 2 * -a2;
      *(_QWORD *)(a1 + 40) = 0;
      *(_QWORD *)(a1 + 48) = 0;
      *(_QWORD *)(a1 + 56) = 0;
      return result;
    }
    *(_BYTE *)(a1 + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1A56F8EE0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 32) >> 62;
  if (v1 <= 1)
    return v1;
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1A56F8EFC(uint64_t result)
{
  *(_QWORD *)(result + 32) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

_QWORD *sub_1A56F8F0C(_QWORD *result, uint64_t a2)
{
  if (a2 < 2)
  {
    result[4] = result[4] & 1 | (a2 << 62);
  }
  else
  {
    *result = (a2 - 2);
    result[1] = 0;
    result[2] = 0;
    result[3] = 0;
    result[4] = 0x8000000000000000;
    result[5] = 0;
    result[6] = 0;
    result[7] = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReturnOption()
{
  return &type metadata for ReturnOption;
}

_OWORD *OUTLINED_FUNCTION_1_70()
{
  __int128 *v0;
  uint64_t v1;

  return sub_1A56D0898(v0, (_OWORD *)(v1 - 112));
}

uint64_t RumpAuthenticatedURL.authenticatedURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A56CA178(v1, a1);
}

uint64_t RumpAuthenticatedURL.authenticatedURL.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1A56CA1BC(a1, v1);
}

double (*RumpAuthenticatedURL.authenticatedURL.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t RumpAuthenticatedURL.authenticatedURLRump.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A56983EC(v1 + 136, a1);
}

uint64_t RumpAuthenticatedURL.authenticatedURLRump.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1A5698430(a1, v1 + 136);
}

double (*RumpAuthenticatedURL.authenticatedURLRump.modify())(_QWORD)
{
  return nullsub_1;
}

__n128 RumpAuthenticatedURL.init(authenticatedURL:authenticatedURLRump:)@<Q0>(const void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  char v6;
  char v7;
  char v8;
  __int128 v9;
  __n128 result;

  v5 = *(_QWORD *)(a2 + 48);
  v6 = *(_BYTE *)(a2 + 56);
  v7 = *(_BYTE *)(a2 + 57);
  v8 = *(_BYTE *)(a2 + 80);
  OUTLINED_FUNCTION_0_59((void *)a3, a1);
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a3 + 136) = *(_OWORD *)a2;
  *(_OWORD *)(a3 + 152) = v9;
  *(_OWORD *)(a3 + 168) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a3 + 184) = v5;
  *(_BYTE *)(a3 + 192) = v6;
  *(_BYTE *)(a3 + 193) = v7 & 1;
  result = *(__n128 *)(a2 + 64);
  *(__n128 *)(a3 + 200) = result;
  *(_BYTE *)(a3 + 216) = v8;
  return result;
}

uint64_t RumpAuthenticatedURL.hash(into:)(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD v12[3];
  uint64_t v13;
  char v14;
  char v15;
  __n128 v16;
  __n128 v17;
  uint64_t v18[8];
  uint64_t v19;
  _BYTE v20[72];
  _OWORD v21[2];
  _OWORD v22[5];
  uint64_t v23;
  char v24;
  __n128 v25;
  char v26;

  OUTLINED_FUNCTION_0_59(v18, v1);
  v3 = v1[1];
  v21[0] = *v1;
  v21[1] = v3;
  v22[0] = v1[2];
  *(_OWORD *)((char *)v22 + 9) = *(_OWORD *)((char *)v1 + 41);
  sub_1A56CA6CC(v18);
  sub_1A56CA764((uint64_t *)v21);
  IMAPServer.hash(into:)(a1);
  sub_1A56CA7A0((uint64_t *)v21);
  OUTLINED_FUNCTION_1_42(v20, &v19);
  sub_1A56CA818((uint64_t)v20);
  MessagePath.hash(into:)();
  sub_1A56CA84C((uint64_t)v20);
  v4 = sub_1A56CA880(v18);
  OUTLINED_FUNCTION_1_71((uint64_t)v4, (char *)v1 + 136, v5, v6, v7, v8, v9, v10, *(uint64_t *)&v12[0]);
  if (v15 == 1)
  {
    sub_1A594CE94();
  }
  else
  {
    v22[2] = v12[0];
    v22[3] = v12[1];
    v22[4] = v12[2];
    v23 = v13;
    v24 = v14 & 1;
    sub_1A594CE94();
    Expire.hash(into:)();
  }
  sub_1A5698818(&v16, &v17);
  sub_1A5698818(&v17, &v25);
  if (v26 && v26 != 1)
  {
    sub_1A594CE88();
  }
  else
  {
    sub_1A594CE88();
    sub_1A5698884((uint64_t)v12);
    sub_1A594B1D8();
  }
  return sub_1A5698854((uint64_t)v12);
}

BOOL static RumpAuthenticatedURL.__derived_struct_equals(_:_:)(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;
  __int128 v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v15[11];
  _BYTE __dst[82];
  _BYTE v17[64];
  uint64_t v18;
  _BYTE v19[72];
  _OWORD v20[2];
  _OWORD v21[2];
  _BYTE v22[64];
  uint64_t v23;
  _BYTE v24[72];
  _OWORD v25[2];
  _OWORD v26[2];

  OUTLINED_FUNCTION_0_59(v22, a1);
  OUTLINED_FUNCTION_0_59(v17, a2);
  v4 = a1[1];
  v25[0] = *a1;
  v25[1] = v4;
  v26[0] = a1[2];
  *(_OWORD *)((char *)v26 + 9) = *(_OWORD *)((char *)a1 + 41);
  v5 = a2[1];
  v20[0] = *a2;
  v20[1] = v5;
  v21[0] = a2[2];
  *(_OWORD *)((char *)v21 + 9) = *(_OWORD *)((char *)a2 + 41);
  if ((static IMAPServer.__derived_struct_equals(_:_:)((uint64_t)v25, (uint64_t)v20) & 1) != 0
    && (OUTLINED_FUNCTION_1_42(v24, &v23),
        OUTLINED_FUNCTION_1_42(v19, &v18),
        (static MessagePath.__derived_struct_equals(_:_:)((uint64_t)v24, (uint64_t)v19) & 1) != 0))
  {
    v6 = memcpy(__dst, (char *)a1 + 136, 0x51uLL);
    OUTLINED_FUNCTION_1_71((uint64_t)v6, (char *)a2 + 136, v7, v8, v9, v10, v11, v12, v15[0]);
    return static AuthenticatedURLRump.__derived_struct_equals(_:_:)((uint64_t)__dst, (uint64_t)v15);
  }
  else
  {
    return 0;
  }
}

uint64_t RumpAuthenticatedURL.hashValue.getter()
{
  _BYTE v1[72];

  sub_1A594CE64();
  RumpAuthenticatedURL.hash(into:)((uint64_t)v1);
  return sub_1A594CED0();
}

uint64_t sub_1A56F934C()
{
  _BYTE v1[72];

  sub_1A594CE64();
  RumpAuthenticatedURL.hash(into:)((uint64_t)v1);
  return sub_1A594CED0();
}

unint64_t sub_1A56F9388()
{
  unint64_t result;

  result = qword_1EE7A9C40;
  if (!qword_1EE7A9C40)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for RumpAuthenticatedURL, &type metadata for RumpAuthenticatedURL);
    atomic_store(result, (unint64_t *)&qword_1EE7A9C40);
  }
  return result;
}

uint64_t destroy for RumpAuthenticatedURL(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 24) != 1)
      swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1A5687BD4(*(_QWORD *)(a1 + 200), *(_QWORD *)(a1 + 208), *(_BYTE *)(a1 + 216));
}

uint64_t initializeWithCopy for RumpAuthenticatedURL(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;

  v4 = *(_QWORD *)(a2 + 8);
  if (v4 == 1)
  {
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    v6 = (_OWORD *)(a2 + 16);
    v7 = *(_QWORD *)(a2 + 24);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v7 == 1)
    {
      *(_OWORD *)(a1 + 16) = *v6;
    }
    else
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)v6;
      *(_QWORD *)(a1 + 24) = v7;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
  }
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v9 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v9;
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 84) = *(_BYTE *)(a2 + 84);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  v10 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v10;
  *(_WORD *)(a1 + 128) = *(_WORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 178) = *(_OWORD *)(a2 + 178);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  v11 = *(_QWORD *)(a2 + 200);
  v12 = *(_QWORD *)(a2 + 208);
  v13 = *(_BYTE *)(a2 + 216);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5688348(v11, v12, v13);
  *(_QWORD *)(a1 + 200) = v11;
  *(_QWORD *)(a1 + 208) = v12;
  *(_BYTE *)(a1 + 216) = v13;
  return a1;
}

uint64_t assignWithCopy for RumpAuthenticatedURL(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;

  v4 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8) != 1)
  {
    if (v4 == 1)
    {
      sub_1A56CAE04(a1);
      v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      goto LABEL_15;
    }
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_bridgeObjectRelease();
    v8 = *(_QWORD *)(a2 + 24);
    if (*(_QWORD *)(a1 + 24) == 1)
    {
      if (v8 != 1)
        goto LABEL_10;
    }
    else
    {
      if (v8 != 1)
      {
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
      sub_1A56CADD0(a1 + 16);
    }
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    goto LABEL_15;
  }
  if (v4 != 1)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    v7 = *(_QWORD *)(a2 + 24);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v7 == 1)
    {
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      goto LABEL_15;
    }
LABEL_10:
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    goto LABEL_15;
  }
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
LABEL_15:
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v10 = *(_DWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 84) = *(_BYTE *)(a2 + 84);
  *(_DWORD *)(a1 + 80) = v10;
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v11 = *(_OWORD *)(a2 + 112);
  *(_WORD *)(a1 + 128) = *(_WORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = v11;
  v12 = *(_OWORD *)(a2 + 136);
  v13 = *(_OWORD *)(a2 + 152);
  v14 = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 178) = *(_OWORD *)(a2 + 178);
  *(_OWORD *)(a1 + 168) = v14;
  *(_OWORD *)(a1 + 152) = v13;
  *(_OWORD *)(a1 + 136) = v12;
  v15 = *(_QWORD *)(a2 + 200);
  v16 = *(_QWORD *)(a2 + 208);
  v17 = *(_BYTE *)(a2 + 216);
  sub_1A5688348(v15, v16, v17);
  v18 = *(_QWORD *)(a1 + 200);
  v19 = *(_QWORD *)(a1 + 208);
  *(_QWORD *)(a1 + 200) = v15;
  *(_QWORD *)(a1 + 208) = v16;
  v20 = *(_BYTE *)(a1 + 216);
  *(_BYTE *)(a1 + 216) = v17;
  sub_1A5687BD4(v18, v19, v20);
  return a1;
}

void *__swift_memcpy217_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xD9uLL);
}

uint64_t assignWithTake for RumpAuthenticatedURL(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;

  if (*(_QWORD *)(a1 + 8) == 1)
    goto LABEL_4;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 == 1)
  {
    sub_1A56CAE04(a1);
LABEL_4:
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    goto LABEL_10;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v6 = (_QWORD *)(a2 + 16);
  if (*(_QWORD *)(a1 + 24) != 1)
  {
    v7 = *(_QWORD *)(a2 + 24);
    if (v7 != 1)
    {
      *(_QWORD *)(a1 + 16) = *v6;
      *(_QWORD *)(a1 + 24) = v7;
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    sub_1A56CADD0(a1 + 16);
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)v6;
LABEL_10:
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v9 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v9;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 84) = *(_BYTE *)(a2 + 84);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  v10 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v10;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_WORD *)(a1 + 128) = *(_WORD *)(a2 + 128);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 178) = *(_OWORD *)(a2 + 178);
  v11 = *(_BYTE *)(a2 + 216);
  v12 = *(_QWORD *)(a1 + 200);
  v13 = *(_QWORD *)(a1 + 208);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  v14 = *(_BYTE *)(a1 + 216);
  *(_BYTE *)(a1 + 216) = v11;
  sub_1A5687BD4(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for RumpAuthenticatedURL(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 217))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 40);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RumpAuthenticatedURL(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 216) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 217) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 217) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RumpAuthenticatedURL()
{
  return &type metadata for RumpAuthenticatedURL;
}

void *OUTLINED_FUNCTION_1_71(uint64_t a1, const void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return memcpy(&a9, a2, 0x51uLL);
}

uint64_t RumpURLAndMechanism.urlRump.getter()
{
  return swift_retain();
}

uint64_t RumpURLAndMechanism.urlRump.setter(uint64_t a1, unint64_t a2, unint64_t a3)
{
  uint64_t v3;
  int v4;
  int v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t result;

  v4 = a3;
  v5 = a2;
  v7 = HIDWORD(a2);
  v8 = HIDWORD(a3);
  v9 = HIWORD(a3);
  result = swift_release();
  *(_QWORD *)v3 = a1;
  *(_DWORD *)(v3 + 8) = v5;
  *(_DWORD *)(v3 + 12) = v7;
  *(_DWORD *)(v3 + 16) = v4;
  *(_WORD *)(v3 + 20) = v8;
  *(_BYTE *)(v3 + 22) = v9;
  return result;
}

double (*RumpURLAndMechanism.urlRump.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t RumpURLAndMechanism.mechanism.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t RumpURLAndMechanism.mechanism.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

double (*RumpURLAndMechanism.mechanism.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t RumpURLAndMechanism.init(urlRump:mechanism:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  *(_QWORD *)a6 = result;
  *(_QWORD *)(a6 + 8) = a2;
  *(_DWORD *)(a6 + 16) = a3;
  *(_WORD *)(a6 + 20) = WORD2(a3);
  *(_BYTE *)(a6 + 22) = BYTE6(a3);
  *(_QWORD *)(a6 + 24) = a4;
  *(_QWORD *)(a6 + 32) = a5;
  return result;
}

uint64_t RumpURLAndMechanism.hash(into:)()
{
  uint64_t v0;
  unsigned int v1;
  unsigned int v2;
  uint64_t result;
  __int128 v4;

  v1 = *(_DWORD *)(v0 + 8);
  v2 = *(_DWORD *)(v0 + 12);
  result = swift_beginAccess();
  if (v2 < v1)
  {
    __break(1u);
  }
  else
  {
    sub_1A594CE70();
    v4 = *(_OWORD *)(v0 + 24);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594B1D8();
    return sub_1A5503278((uint64_t)&v4);
  }
  return result;
}

uint64_t static RumpURLAndMechanism.__derived_struct_equals(_:_:)(uint64_t result, uint64_t a2)
{
  unsigned int v2;
  unsigned int v3;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  BOOL v8;
  BOOL v9;

  v2 = *(_DWORD *)(result + 8);
  v3 = *(_DWORD *)(result + 12);
  if (v3 < v2)
  {
    __break(1u);
    goto LABEL_23;
  }
  v5 = *(_DWORD *)(a2 + 8);
  v6 = *(_DWORD *)(a2 + 12);
  if (v6 < v5)
  {
LABEL_23:
    __break(1u);
    return result;
  }
  if (v3 - v2 != v6 - v5)
    return 0;
  v7 = result;
  v8 = *(_DWORD *)(result + 16) == *(_DWORD *)(a2 + 16)
    && *(unsigned __int16 *)(result + 20) == *(unsigned __int16 *)(a2 + 20);
  v9 = v8 && *(unsigned __int8 *)(result + 22) == *(unsigned __int8 *)(a2 + 22);
  if (!v9 || *(_QWORD *)result != *(_QWORD *)a2)
  {
    swift_retain();
    if ((sub_1A566B918() & 1) == 0)
      return 0;
  }
  if (*(_QWORD *)(v7 + 24) == *(_QWORD *)(a2 + 24) && *(_QWORD *)(v7 + 32) == *(_QWORD *)(a2 + 32))
    return 1;
  else
    return sub_1A594CD38();
}

uint64_t RumpURLAndMechanism.hashValue.getter()
{
  sub_1A594CE64();
  RumpURLAndMechanism.hash(into:)();
  return sub_1A594CED0();
}

uint64_t sub_1A56F9CF0()
{
  sub_1A594CE64();
  RumpURLAndMechanism.hash(into:)();
  return sub_1A594CED0();
}

unint64_t sub_1A56F9D30()
{
  unint64_t result;

  result = qword_1EE7A9C48;
  if (!qword_1EE7A9C48)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for RumpURLAndMechanism, &type metadata for RumpURLAndMechanism);
    atomic_store(result, (unint64_t *)&qword_1EE7A9C48);
  }
  return result;
}

uint64_t destroy for RumpURLAndMechanism()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RumpURLAndMechanism(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 19) = *(_DWORD *)(a2 + 19);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v3;
  swift_retain();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for RumpURLAndMechanism(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_WORD *)(a1 + 20) = *(_WORD *)(a2 + 20);
  *(_BYTE *)(a1 + 22) = *(_BYTE *)(a2 + 22);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for RumpURLAndMechanism(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_WORD *)(a1 + 20) = *(_WORD *)(a2 + 20);
  *(_BYTE *)(a1 + 22) = *(_BYTE *)(a2 + 22);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for RumpURLAndMechanism()
{
  return &type metadata for RumpURLAndMechanism;
}

void sub_1A56F9EEC()
{
  OUTLINED_FUNCTION_15_10();
  OUTLINED_FUNCTION_6_39();
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_8_7();
}

void sub_1A56F9F14()
{
  OUTLINED_FUNCTION_15_10();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_77_1();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_8_7();
}

void sub_1A56F9F54()
{
  sub_1A56FA0A0();
}

void sub_1A56F9F60(unsigned __int8 a1)
{
  OUTLINED_FUNCTION_15_10();
  MailboxAttribute.rawValue.getter(a1);
  OUTLINED_FUNCTION_77_1();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_8_7();
}

uint64_t sub_1A56F9FA4()
{
  return sub_1A56F9FB0();
}

uint64_t sub_1A56F9FB0()
{
  sub_1A594CE64();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  return sub_1A594CED0();
}

void sub_1A56FA038()
{
  OUTLINED_FUNCTION_5_38();
  OUTLINED_FUNCTION_6_39();
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_8_7();
}

void sub_1A56FA05C()
{
  sub_1A594CE64();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_77_1();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_8_7();
}

void sub_1A56FA0A0()
{
  char v0;

  OUTLINED_FUNCTION_5_38();
  if (v0)
    OUTLINED_FUNCTION_20();
  OUTLINED_FUNCTION_77_1();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_8_7();
}

void sub_1A56FA0F4()
{
  unsigned __int8 v0;

  OUTLINED_FUNCTION_5_38();
  MailboxAttribute.rawValue.getter(v0);
  OUTLINED_FUNCTION_77_1();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_8_7();
}

uint64_t static ScopeOption.__derived_struct_equals(_:_:)(char a1, char a2)
{
  char v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v11;

  if (a1)
  {
    OUTLINED_FUNCTION_20();
    if (v2)
      v4 = 49;
    else
      v4 = 0x7974696E69666E69;
    if (v2)
      v5 = v3;
    else
      v5 = 0xE800000000000000;
  }
  else
  {
    v5 = 0xE100000000000000;
    v4 = 48;
  }
  if (a2)
  {
    OUTLINED_FUNCTION_20();
    if (v6)
      v8 = 49;
    else
      v8 = 0x7974696E69666E69;
    if (v6)
      v9 = v7;
    else
      v9 = 0xE800000000000000;
  }
  else
  {
    v9 = 0xE100000000000000;
    v8 = 48;
  }
  if (v4 == v8 && v5 == v9)
    v11 = 1;
  else
    v11 = sub_1A594CD38();
  OUTLINED_FUNCTION_17();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

void *ScopeOption.zero.unsafeMutableAddressor()
{
  return &static ScopeOption.zero;
}

uint64_t static ScopeOption.zero.getter()
{
  return 0;
}

void *ScopeOption.one.unsafeMutableAddressor()
{
  return &static ScopeOption.one;
}

uint64_t static ScopeOption.one.getter()
{
  return 1;
}

void *ScopeOption.infinity.unsafeMutableAddressor()
{
  return &static ScopeOption.infinity;
}

uint64_t static ScopeOption.infinity.getter()
{
  return 2;
}

uint64_t sub_1A56FA23C()
{
  unint64_t v0;

  v0 = sub_1A594CB28();
  OUTLINED_FUNCTION_17();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_1A56FA280(char a1)
{
  char v1;

  if (!a1)
    return 48;
  OUTLINED_FUNCTION_20();
  if (v1)
    return 49;
  else
    return 0x7974696E69666E69;
}

void sub_1A56FA2C4(char *a1, char *a2)
{
  sub_1A5658580(*a1, *a2);
}

uint64_t sub_1A56FA2D0()
{
  return sub_1A56F9FA4();
}

uint64_t sub_1A56FA2D8()
{
  return sub_1A56A044C();
}

uint64_t sub_1A56FA2E0()
{
  return sub_1A56F9FB0();
}

uint64_t sub_1A56FA2E8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A56FA23C();
  *a1 = result;
  return result;
}

uint64_t sub_1A56FA314@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1A56FA280(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t ScopeOption.hash(into:)(uint64_t a1, char a2)
{
  if (a2)
    OUTLINED_FUNCTION_20();
  OUTLINED_FUNCTION_77_1();
  return swift_bridgeObjectRelease();
}

void ScopeOption.hashValue.getter(char a1)
{
  OUTLINED_FUNCTION_15_10();
  if (a1)
    OUTLINED_FUNCTION_20();
  OUTLINED_FUNCTION_77_1();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_8_7();
}

void sub_1A56FA3FC()
{
  char *v0;

  ScopeOption.hashValue.getter(*v0);
}

uint64_t sub_1A56FA404(uint64_t a1)
{
  char *v1;

  return ScopeOption.hash(into:)(a1, *v1);
}

uint64_t sub_1A56FA40C()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1A594CE64();
  ScopeOption.hash(into:)((uint64_t)v3, v1);
  return sub_1A594CED0();
}

unint64_t sub_1A56FA450()
{
  unint64_t result;

  result = qword_1EE7A9C50;
  if (!qword_1EE7A9C50)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ScopeOption, &type metadata for ScopeOption);
    atomic_store(result, (unint64_t *)&qword_1EE7A9C50);
  }
  return result;
}

uint64_t sub_1A56FA48C(char *a1, char *a2)
{
  return static ScopeOption.__derived_struct_equals(_:_:)(*a1, *a2);
}

ValueMetadata *type metadata accessor for ScopeOption()
{
  return &type metadata for ScopeOption;
}

uint64_t _s12NIOIMAPCore211ScopeOptionV8_BackingOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A56FA4FC + 4 * byte_1A59B4699[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A56FA530 + 4 * asc_1A59B4694[v4]))();
}

uint64_t sub_1A56FA530(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A56FA538(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A56FA540);
  return result;
}

uint64_t sub_1A56FA54C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A56FA554);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A56FA558(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A56FA560(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ScopeOption._Backing()
{
  return &type metadata for ScopeOption._Backing;
}

unint64_t sub_1A56FA580()
{
  unint64_t result;

  result = qword_1EE7A9C58;
  if (!qword_1EE7A9C58)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59B47AC, &type metadata for ScopeOption._Backing);
    atomic_store(result, (unint64_t *)&qword_1EE7A9C58);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_5_38()
{
  return sub_1A594CE64();
}

uint64_t OUTLINED_FUNCTION_6_39()
{
  return sub_1A594CEAC();
}

void sub_1A56FA5D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  Swift::UInt32 v5;
  uint64_t v6;
  unint64_t v7;
  Swift::Int v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  int v13;
  uint64_t v14;
  unint64_t v15;
  Swift::Int v16;
  Swift::Int v17;
  char v18;
  char v19;
  int v20;
  BOOL v21;
  Swift::Int v22;
  Swift::Int v23;
  char v24;
  int v25;
  Swift::Int v26;
  uint64_t v27;
  unint64_t v28;
  Swift::Int v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  Swift::Int v33;
  int v34;
  BOOL v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  Swift::Int v40;
  Swift::Int v41;
  Swift::Int v42;
  uint64_t v43;
  unint64_t v44;
  Swift::Int v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  Swift::Int v49;
  int v50;
  int v51;
  uint64_t v52;
  Swift::Int v53;
  Swift::Int v54;
  char v55;
  int v56;
  int v57;

  v2 = v1;
  v4 = v1 + 8;
  v5 = *(_DWORD *)(v1 + 20);
  v6 = OUTLINED_FUNCTION_5_39();
  sub_1A56814E0(v6, v7, v4, v5);
  if ((v9 & 1) != 0)
  {
    v10 = OUTLINED_FUNCTION_5_39();
    v8 = OUTLINED_FUNCTION_1_25(v10, v11);
  }
  v12 = v8;
  v13 = *(_DWORD *)(v2 + 20);
  if (__CFADD__(v13, (_DWORD)v8))
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  *(_DWORD *)(v2 + 20) = v13 + v8;
  v14 = *(_QWORD *)a1;
  v15 = *(_QWORD *)(a1 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_3_23(v14, v15);
  v17 = v16;
  v19 = v18;
  swift_bridgeObjectRelease();
  if ((v19 & 1) != 0)
    v17 = OUTLINED_FUNCTION_1_25(v14, v15);
  v20 = *(_DWORD *)(v2 + 20);
  if (__CFADD__(v20, (_DWORD)v17))
    goto LABEL_34;
  *(_DWORD *)(v2 + 20) = v20 + v17;
  v21 = __OFADD__(v12, v17);
  v22 = v12 + v17;
  if (v21)
  {
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  OUTLINED_FUNCTION_3_23(34, 0xE100000000000000);
  if ((v24 & 1) != 0)
    v23 = OUTLINED_FUNCTION_1_25(34, 0xE100000000000000);
  v25 = *(_DWORD *)(v2 + 20);
  if (__CFADD__(v25, (_DWORD)v23))
    goto LABEL_36;
  *(_DWORD *)(v2 + 20) = v25 + v23;
  v26 = v22 + v23;
  if (__OFADD__(v22, v23))
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_19:
    v40 = 0;
    goto LABEL_20;
  }
  swift_bridgeObjectRetain_n();
  swift_retain();
  swift_retain();
  v27 = OUTLINED_FUNCTION_4_43();
  OUTLINED_FUNCTION_3_23(v27, v28);
  if ((v30 & 1) != 0)
  {
    v31 = OUTLINED_FUNCTION_4_43();
    v29 = OUTLINED_FUNCTION_1_25(v31, v32);
  }
  v33 = v29;
  v34 = *(_DWORD *)(v2 + 20);
  v35 = __CFADD__(v34, (_DWORD)v29);
  v36 = v34 + v29;
  if (v35)
    goto LABEL_42;
  *(_DWORD *)(v2 + 20) = v36;
  v37 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A56BABD4(v37);
  v39 = v38;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease_n();
  v40 = v33 + v39;
  if (__OFADD__(v33, v39))
  {
    __break(1u);
    goto LABEL_19;
  }
LABEL_20:
  v41 = v26 + v40;
  if (__OFADD__(v26, v40))
  {
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if ((*(_BYTE *)(a1 + 32) & 1) != 0)
  {
    v42 = 0;
  }
  else
  {
    v43 = OUTLINED_FUNCTION_2_60();
    OUTLINED_FUNCTION_3_23(v43, v44);
    if ((v46 & 1) != 0)
    {
      v47 = OUTLINED_FUNCTION_2_60();
      v45 = OUTLINED_FUNCTION_1_25(v47, v48);
    }
    v49 = v45;
    v50 = *(_DWORD *)(v2 + 20);
    v35 = __CFADD__(v50, (_DWORD)v45);
    v51 = v50 + v45;
    if (v35)
      goto LABEL_43;
    *(_DWORD *)(v2 + 20) = v51;
    v52 = sub_1A570EB8C();
    v42 = v49 + v52;
    if (__OFADD__(v49, v52))
    {
LABEL_44:
      __break(1u);
      return;
    }
  }
  v53 = v41 + v42;
  if (__OFADD__(v41, v42))
    goto LABEL_39;
  OUTLINED_FUNCTION_3_23(41, 0xE100000000000000);
  if ((v55 & 1) != 0)
    v54 = OUTLINED_FUNCTION_1_25(41, 0xE100000000000000);
  v56 = *(_DWORD *)(v2 + 20);
  v35 = __CFADD__(v56, (_DWORD)v54);
  v57 = v56 + v54;
  if (v35)
    goto LABEL_40;
  *(_DWORD *)(v2 + 20) = v57;
  if (__OFADD__(v53, v54))
  {
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
}

uint64_t SearchCorrelator.tag.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

void SearchCorrelator.tag.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_8_1();
}

double (*SearchCorrelator.tag.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SearchCorrelator.mailbox.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

void SearchCorrelator.mailbox.setter(uint64_t a1, int a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_DWORD *)(v2 + 24) = a2;
  OUTLINED_FUNCTION_8_1();
}

double (*SearchCorrelator.mailbox.modify())(_QWORD)
{
  return nullsub_1;
}

unint64_t SearchCorrelator.uidValidity.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 28) | ((unint64_t)*(unsigned __int8 *)(v0 + 32) << 32);
}

uint64_t SearchCorrelator.uidValidity.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 28) = result;
  *(_BYTE *)(v1 + 32) = BYTE4(result) & 1;
  return result;
}

double (*SearchCorrelator.uidValidity.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SearchCorrelator.init(tag:mailbox:uidValidity:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  *(_QWORD *)a6 = result;
  *(_QWORD *)(a6 + 8) = a2;
  *(_QWORD *)(a6 + 16) = a3;
  *(_DWORD *)(a6 + 24) = a4;
  *(_DWORD *)(a6 + 28) = a5;
  *(_BYTE *)(a6 + 32) = BYTE4(a5) & 1;
  return result;
}

void SearchCorrelator.hash(into:)()
{
  uint64_t v0;

  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 16))
  {
    sub_1A594CE94();
    sub_1A594CE88();
  }
  else
  {
    sub_1A594CE94();
  }
  if (*(_BYTE *)(v0 + 32) == 1)
  {
    sub_1A594CE94();
  }
  else
  {
    sub_1A594CE94();
    sub_1A594CEAC();
  }
  OUTLINED_FUNCTION_8_1();
}

uint64_t static SearchCorrelator.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  char v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v4 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v4 || (v5 = sub_1A594CD38(), result = 0, (v5 & 1) != 0))
  {
    v7 = *(_QWORD *)(a1 + 16);
    v8 = *(_QWORD *)(a2 + 16);
    if (v7)
    {
      if (!v8
        || (*(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned int *)(a1 + 24) << 32)) != (*(unsigned int *)(a2 + 24) | ((unint64_t)*(unsigned int *)(a2 + 24) << 32))
        || (sub_1A568A0E0(v7, v8) & 1) == 0)
      {
        return 0;
      }
    }
    else if (v8)
    {
      return 0;
    }
    v9 = *(_BYTE *)(a2 + 32);
    if ((*(_BYTE *)(a1 + 32) & 1) != 0)
    {
      if ((*(_BYTE *)(a2 + 32) & 1) == 0)
        return 0;
    }
    else
    {
      if (*(_DWORD *)(a1 + 28) != *(_DWORD *)(a2 + 28))
        v9 = 1;
      if ((v9 & 1) != 0)
        return 0;
    }
    return 1;
  }
  return result;
}

uint64_t SearchCorrelator.hashValue.getter()
{
  sub_1A594CE64();
  SearchCorrelator.hash(into:)();
  return sub_1A594CED0();
}

uint64_t sub_1A56FAAF8()
{
  sub_1A594CE64();
  SearchCorrelator.hash(into:)();
  return sub_1A594CED0();
}

unint64_t sub_1A56FAB38()
{
  unint64_t result;

  result = qword_1EE7A9C60;
  if (!qword_1EE7A9C60)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for SearchCorrelator, &type metadata for SearchCorrelator);
    atomic_store(result, (unint64_t *)&qword_1EE7A9C60);
  }
  return result;
}

uint64_t initializeWithCopy for SearchCorrelator(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for SearchCorrelator(uint64_t a1, uint64_t a2)
{
  int v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  v4 = *(_DWORD *)(a2 + 28);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_DWORD *)(a1 + 28) = v4;
  return a1;
}

uint64_t assignWithTake for SearchCorrelator(uint64_t a1, uint64_t a2)
{
  int v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v4 = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchCorrelator(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 33))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchCorrelator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchCorrelator()
{
  return &type metadata for SearchCorrelator;
}

uint64_t OUTLINED_FUNCTION_2_60()
{
  return 0x494C415644495520;
}

uint64_t OUTLINED_FUNCTION_4_43()
{
  return 0x584F424C49414D20;
}

uint64_t OUTLINED_FUNCTION_5_39()
{
  return 0x22204741542820;
}

BOOL sub_1A56FAD7C(int a1, int a2)
{
  return a2 == a1;
}

void static SearchKey.__derived_enum_equals(_:_:)(uint64_t a1)
{
  __asm { BR              X10 }
}

void sub_1A56FADCC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;

  OUTLINED_FUNCTION_0_91();
  if (v2)
    goto LABEL_16;
  v3 = *(_DWORD *)(v0 + 24);
  v4 = *(_DWORD *)(v0 + 28);
  if (v4 < v3)
  {
    __break(1u);
    goto LABEL_19;
  }
  v5 = *(_DWORD *)(v1 + 24);
  v6 = *(_DWORD *)(v1 + 28);
  if (v6 < v5)
  {
LABEL_19:
    __break(1u);
    JUMPOUT(0x1A56FB57CLL);
  }
  if (v4 - v3 == v6 - v5
    && (*(_DWORD *)(v0 + 32) != *(_DWORD *)(v1 + 32)
     || *(unsigned __int16 *)(v0 + 36) != *(unsigned __int16 *)(v1 + 36)
     || *(unsigned __int8 *)(v0 + 38) != *(unsigned __int8 *)(v1 + 38)
     || *(_QWORD *)(v0 + 16) != *(_QWORD *)(v1 + 16)))
  {
    swift_retain_n();
    OUTLINED_FUNCTION_17_0();
    sub_1A566B918();
    OUTLINED_FUNCTION_23();
    swift_release();
  }
LABEL_16:
  OUTLINED_FUNCTION_63_1();
}

void sub_1A56FB62C(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1A56FB66C()
{
  return 1;
}

void sub_1A56FB684(uint64_t a1@<X8>)
{
  unint64_t v1;

  v1 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
  sub_1A568079C(v1);
  sub_1A56FB62C(v1);
  sub_1A567FE68(v1);
  JUMPOUT(0x1A56FB670);
}

uint64_t sub_1A56FB6B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  char v4;

  v1 = a1 & 0xFFFFFFFFFFFFFFBLL;
  v3 = *(_QWORD *)(v1 + 16);
  v2 = *(_QWORD *)(v1 + 24);
  sub_1A568079C(v3);
  sub_1A568079C(v2);
  sub_1A56FB62C(v3);
  if ((v4 & 1) == 0)
  {
    sub_1A56FB62C(v2);
    OUTLINED_FUNCTION_33_14();
    JUMPOUT(0x1A56FB670);
  }
  OUTLINED_FUNCTION_33_14();
  return sub_1A56FB66C();
}

void SearchKey.hash(into:)(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

void sub_1A56FB79C(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  unsigned int v3;

  v2 = *(_DWORD *)(a2 + 24);
  v3 = *(_DWORD *)(a2 + 28);
  sub_1A594CE88();
  OUTLINED_FUNCTION_4_44();
  if (v3 < v2)
  {
    __break(1u);
    JUMPOUT(0x1A56FB7C4);
  }
  OUTLINED_FUNCTION_21_14();
  OUTLINED_FUNCTION_2_6();
}

uint64_t sub_1A56FBAE0()
{
  OUTLINED_FUNCTION_38_10();
  sub_1A594CE88();
  OUTLINED_FUNCTION_26_4();
  OUTLINED_FUNCTION_2_6();
  return sub_1A594B1D8();
}

uint64_t sub_1A56FBB04()
{
  OUTLINED_FUNCTION_38_10();
  sub_1A594CE88();
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_11_1();
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_26_4();
  sub_1A5693474();
  sub_1A594CEB8();
  OUTLINED_FUNCTION_4_4();
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_2_6();
  return swift_release();
}

uint64_t sub_1A56FBB54(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(void))((char *)&loc_1A56FBB68 + dword_1A56FBC84[__ROR8__(a2 + 0x1FFFFFFFFFFFFFFCLL, 3)]))();
}

void sub_1A56FBB78()
{
  JUMPOUT(0x1A56FBAC8);
}

void sub_1A56FBBA4()
{
  JUMPOUT(0x1A56FBAC8);
}

void sub_1A56FBBAC()
{
  JUMPOUT(0x1A56FBAC8);
}

void sub_1A56FBBB4()
{
  JUMPOUT(0x1A56FBAC8);
}

void sub_1A56FBBBC()
{
  JUMPOUT(0x1A56FBAC8);
}

void sub_1A56FBBC4()
{
  JUMPOUT(0x1A56FBAC8);
}

void sub_1A56FBBCC()
{
  JUMPOUT(0x1A56FBAC8);
}

void sub_1A56FBBD4()
{
  JUMPOUT(0x1A56FBAC8);
}

void sub_1A56FBBDC()
{
  JUMPOUT(0x1A56FBAC8);
}

void sub_1A56FBBE4()
{
  JUMPOUT(0x1A56FBAC8);
}

void sub_1A56FBBEC()
{
  JUMPOUT(0x1A56FBAC8);
}

void sub_1A56FBBF4()
{
  JUMPOUT(0x1A56FBAC8);
}

void sub_1A56FBBFC()
{
  JUMPOUT(0x1A56FBAC8);
}

uint64_t SearchKey.hashValue.getter()
{
  _BYTE v1[72];

  sub_1A594CE64();
  OUTLINED_FUNCTION_78_5((uint64_t)v1);
  return sub_1A594CED0();
}

uint64_t sub_1A56FBCFC()
{
  return SearchKey.hashValue.getter();
}

void sub_1A56FBD04(uint64_t a1)
{
  uint64_t *v1;

  SearchKey.hash(into:)(a1, *v1);
}

uint64_t sub_1A56FBD0C()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1A594CE64();
  SearchKey.hash(into:)((uint64_t)v3, v1);
  return sub_1A594CED0();
}

void sub_1A56FBD4C(uint64_t *a1)
{
  static SearchKey.__derived_enum_equals(_:_:)(*a1);
}

void sub_1A56FBD58(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A56FBD94()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_1A56FBDAC(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t result;

  v1 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
  sub_1A568079C(v1);
  sub_1A56FBD58(v1);
  v3 = v2;
  result = sub_1A567FE68(v1);
  if (!__OFADD__(v3, 1))
    return sub_1A56FBD94();
  __break(1u);
  return result;
}

unint64_t sub_1A56FBDDC(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;

  v1 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
  sub_1A568079C(v1);
  sub_1A568079C(v2);
  sub_1A56FBD58(v1);
  v4 = v3;
  sub_1A56FBD58(v2);
  v6 = v5;
  sub_1A567FE68(v2);
  result = sub_1A567FE68(v1);
  if (!__OFADD__(v4, v6))
    return sub_1A56FBD94();
  __break(1u);
  return result;
}

uint64_t sub_1A56FBE2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;

  v1 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v3 = 0;
    v4 = 0;
    do
    {
      v5 = *(_QWORD *)(v1 + 8 * v3 + 32);
      sub_1A568079C(v5);
      sub_1A56FBD58(v5);
      v7 = v6;
      sub_1A567FE68(v5);
      v8 = __OFADD__(v4, v7);
      v4 += v7;
      if (v8)
      {
        __break(1u);
        JUMPOUT(0x1A56FBE9CLL);
      }
      ++v3;
    }
    while (v2 != v3);
    swift_bridgeObjectRelease();
  }
  return sub_1A56FBD94();
}

void sub_1A56FBF14(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A56FBF60()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  int v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  OUTLINED_FUNCTION_15_30();
  OUTLINED_FUNCTION_1_19(541279042, 0xE400000000000000);
  if ((v2 & 1) != 0)
    OUTLINED_FUNCTION_29_15(541279042, 0xE400000000000000);
  OUTLINED_FUNCTION_13_11();
  if (v4)
  {
    __break(1u);
    JUMPOUT(0x1A56FCFF0);
  }
  OUTLINED_FUNCTION_6_40(v3, v22, v25, v26, v27, v28, v29, v30, v31, v32);
  v5 = OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_26_12(v5, v6, v7, v8, v9, v10, v11, v12, v23);
  OUTLINED_FUNCTION_25_17(v13, v14, v15, v16, v17, v18, v19, v20, v24);
  OUTLINED_FUNCTION_4_4();
  if (__OFADD__(v1, v0))
  {
    __break(1u);
    JUMPOUT(0x1A56FBFC0);
  }
  return v1 + v0;
}

void sub_1A56FD154(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  Swift::Int v12;
  char v13;
  Swift::String v14;
  Swift::Int v15;
  int v16;
  BOOL v17;
  int v18;
  uint64_t v19;
  BOOL v20;
  Swift::Int v21;
  Swift::Int v22;
  Swift::Int v23;
  char v24;
  Swift::String v25;
  int v26;
  int v27;
  Swift::Int v28;
  Swift::Int v29;
  Swift::Int v30;
  Swift::Int v31;
  char v32;
  Swift::String v33;
  Swift::Int v34;
  int v35;
  int v36;

  v7 = *a1;
  v9 = *a2;
  v8 = a2[1];
  sub_1A568079C(v8);
  sub_1A56FBD58(v8);
  if (v10 < 2)
    goto LABEL_12;
  v11 = *(unsigned int *)(a3 + 20);
  sub_1A56814E0(40, 0xE100000000000000, a3 + 8, *(_DWORD *)(a3 + 20));
  if ((v13 & 1) != 0)
  {
    v14._countAndFlagsBits = 40;
    v14._object = (void *)0xE100000000000000;
    v12 = ByteBuffer._setStringSlowpath(_:at:)(v14, v11);
  }
  v15 = v12;
  v16 = *(_DWORD *)(a3 + 20);
  v17 = __CFADD__(v16, (_DWORD)v12);
  v18 = v16 + v12;
  if (v17)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  *(_DWORD *)(a3 + 20) = v18;
  sub_1A56FBF14(v8);
  v20 = __OFADD__(v15, v19);
  v21 = v15 + v19;
  if (!v20)
  {
    v22 = *(unsigned int *)(a3 + 20);
    sub_1A56814E0(41, 0xE100000000000000, a3 + 8, *(_DWORD *)(a3 + 20));
    if ((v24 & 1) != 0)
    {
      v25._countAndFlagsBits = 41;
      v25._object = (void *)0xE100000000000000;
      v23 = ByteBuffer._setStringSlowpath(_:at:)(v25, v22);
    }
    v26 = *(_DWORD *)(a3 + 20);
    v17 = __CFADD__(v26, (_DWORD)v23);
    v27 = v26 + v23;
    if (v17)
      goto LABEL_26;
    *(_DWORD *)(a3 + 20) = v27;
    v20 = __OFADD__(v21, v23);
    v28 = v21 + v23;
    if (!v20)
      goto LABEL_13;
    __break(1u);
LABEL_12:
    sub_1A56FBF14(v8);
LABEL_13:
    v20 = __OFADD__(v7, v28);
    v29 = v7 + v28;
    if (v20)
    {
      __break(1u);
    }
    else
    {
      if (v9 >= *(_QWORD *)(a4 + 16) - 1)
      {
        swift_retain();
        swift_retain();
        v34 = 0;
      }
      else
      {
        v30 = *(unsigned int *)(a3 + 20);
        swift_retain();
        swift_retain();
        sub_1A56814E0(32, 0xE100000000000000, a3 + 8, v30);
        if ((v32 & 1) != 0)
        {
          v33._countAndFlagsBits = 32;
          v33._object = (void *)0xE100000000000000;
          v31 = ByteBuffer._setStringSlowpath(_:at:)(v33, v30);
        }
        v34 = v31;
        v35 = *(_DWORD *)(a3 + 20);
        v17 = __CFADD__(v35, (_DWORD)v31);
        v36 = v35 + v31;
        if (v17)
          goto LABEL_27;
        *(_DWORD *)(a3 + 20) = v36;
      }
      sub_1A567FE68(v8);
      swift_release();
      swift_release();
      if (!__OFADD__(v29, v34))
      {
        *a5 = v29 + v34;
        return;
      }
    }
    __break(1u);
    goto LABEL_24;
  }
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
}

unint64_t sub_1A56FD358(unsigned int a1, unsigned int a2)
{
  return a1 - (unint64_t)a2;
}

unint64_t sub_1A56FD368()
{
  unint64_t result;

  result = qword_1EE7A9C68;
  if (!qword_1EE7A9C68)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for SearchKey, &type metadata for SearchKey);
    atomic_store(result, (unint64_t *)&qword_1EE7A9C68);
  }
  return result;
}

unint64_t *initializeBufferWithCopyOfBuffer for SearchKey(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  sub_1A568079C(*a2);
  *a1 = v3;
  return a1;
}

unint64_t destroy for SearchKey(unint64_t *a1)
{
  return sub_1A567FE68(*a1);
}

unint64_t *assignWithCopy for SearchKey(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a2;
  sub_1A568079C(*a2);
  v4 = *a1;
  *a1 = v3;
  sub_1A567FE68(v4);
  return a1;
}

unint64_t *assignWithTake for SearchKey(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  sub_1A567FE68(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchKey(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x63 && *(_BYTE *)(a1 + 8))
    {
      v2 = *(_DWORD *)a1 + 98;
    }
    else
    {
      v2 = ((((*(_QWORD *)a1 >> 57) & 0x78 | *(_QWORD *)a1 & 7) >> 2) & 0xFFFFFF9F | (32 * (*(_QWORD *)a1 & 3))) ^ 0x7F;
      if (v2 >= 0x62)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for SearchKey(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x62)
  {
    *(_QWORD *)result = a2 - 99;
    if (a3 >= 0x63)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x63)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 5) & 3 | (4 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1A56FD4E8(_QWORD *a1)
{
  unsigned int v1;

  v1 = (*a1 >> 59) & 0x1E | (*a1 >> 2) & 1;
  if (v1 <= 0x1C)
    return v1;
  else
    return (*a1 >> 3) + 29;
}

unint64_t *sub_1A56FD50C(unint64_t *result, uint64_t a2)
{
  unint64_t v2;

  if (a2 < 0x1D)
    v2 = (a2 << 59) & 0xF000000000000000 | (4 * (a2 & 1)) | *result & 0xFFFFFFFFFFFFFF8;
  else
    v2 = (8 * (a2 - 29)) | 0xE000000000000004;
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for SearchKey()
{
  return &type metadata for SearchKey;
}

uint64_t OUTLINED_FUNCTION_1_72()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_4_44()
{
  return swift_beginAccess();
}

void OUTLINED_FUNCTION_5_40(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  Swift::UInt32 v3;

  sub_1A56814E0(a1, a2, v2, v3);
}

uint64_t OUTLINED_FUNCTION_6_40@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  va_list va;

  va_start(va, a10);
  *(_DWORD *)(v10 + 20) = a1;
  return ByteBufferView.init(_:)(v11, v12, v13 | (v14 << 32) | (v15 << 48), (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_9_34@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v1 + 20) = a1;
  return sub_1A56BDF88(v2, v3);
}

void OUTLINED_FUNCTION_13_27(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  Swift::UInt32 v3;

  sub_1A56814E0(a1, a2, v2, v3);
}

uint64_t OUTLINED_FUNCTION_15_30()
{
  return swift_retain();
}

Swift::Int OUTLINED_FUNCTION_17_25(uint64_t a1)
{
  Swift::Int v1;
  unint64_t v2;

  v2 = 0xE100000000000000;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v1);
}

void OUTLINED_FUNCTION_19_23(uint64_t a1, unint64_t a2)
{
  Swift::UInt32 v2;
  uint64_t v3;

  sub_1A56814E0(a1, a2, v3, v2);
}

uint64_t OUTLINED_FUNCTION_23_21()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t OUTLINED_FUNCTION_25_17(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  return sub_1A553E5DC((uint64_t)va);
}

void OUTLINED_FUNCTION_26_12(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  sub_1A56BA79C((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_27_15()
{
  return 1414415699;
}

Swift::Int OUTLINED_FUNCTION_29_15(uint64_t a1, uint64_t a2)
{
  Swift::Int v2;

  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v2);
}

void OUTLINED_FUNCTION_32_15()
{
  uint64_t v0;

  sub_1A56FBF14(v0);
}

unint64_t OUTLINED_FUNCTION_33_14()
{
  unint64_t v0;
  unint64_t v1;

  sub_1A567FE68(v1);
  return sub_1A567FE68(v0);
}

uint64_t OUTLINED_FUNCTION_40_12()
{
  return 20053;
}

uint64_t OUTLINED_FUNCTION_41_9()
{
  return sub_1A594B5F8();
}

unint64_t OUTLINED_FUNCTION_42_8()
{
  unint64_t v0;

  return sub_1A567FE68(v0);
}

uint64_t OUTLINED_FUNCTION_48_7()
{
  return 0x524F464542444955;
}

uint64_t OUTLINED_FUNCTION_49_6()
{
  return 0x44454747414C46;
}

uint64_t OUTLINED_FUNCTION_53_9()
{
  return 0x444554454C4544;
}

uint64_t OUTLINED_FUNCTION_54_6()
{
  return 0x2044524F5759454BLL;
}

uint64_t OUTLINED_FUNCTION_55_8()
{
  return 0x4445524557534E41;
}

uint64_t OUTLINED_FUNCTION_56_9()
{
  return 0x20524544414548;
}

unint64_t OUTLINED_FUNCTION_57_9()
{
  unint64_t v0;

  return sub_1A568079C(v0);
}

uint64_t OUTLINED_FUNCTION_58_5(unsigned int a1)
{
  return a1 | 0x4F46454200000000;
}

uint64_t OUTLINED_FUNCTION_59_7()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_60_8()
{
  return 0x524F5759454B4E55;
}

uint64_t OUTLINED_FUNCTION_61_6()
{
  return 0x2045524F464542;
}

uint64_t OUTLINED_FUNCTION_63_5(unsigned __int16 a1)
{
  return a1 | 0x454747414C460000;
}

uint64_t OUTLINED_FUNCTION_65_6()
{
  return 0x205443454A425553;
}

uint64_t OUTLINED_FUNCTION_66_6(unsigned __int16 a1)
{
  return a1 | 0x4554454C45440000;
}

uint64_t OUTLINED_FUNCTION_69_3()
{
  return 0x5245544641444955;
}

uint64_t OUTLINED_FUNCTION_70_3(unsigned __int16 a1)
{
  return a1 | 0x524557534E410000;
}

uint64_t OUTLINED_FUNCTION_71_3()
{
  return sub_1A594CC9C();
}

uint64_t OUTLINED_FUNCTION_73_2()
{
  uint64_t v0;
  int v1;

  *(_DWORD *)(v0 + 20) = v1;
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t OUTLINED_FUNCTION_76_5()
{
  return 0x204D4F5246;
}

uint64_t OUTLINED_FUNCTION_77_4(unsigned int a1)
{
  return a1 | 0x434E495300000000;
}

void OUTLINED_FUNCTION_78_5(uint64_t a1)
{
  uint64_t v1;

  SearchKey.hash(into:)(a1, v1);
}

uint64_t OUTLINED_FUNCTION_81_4()
{
  return 0x2059444F42;
}

void OUTLINED_FUNCTION_82_3()
{
  uint64_t v0;

  sub_1A56FBF14(v0);
}

void OUTLINED_FUNCTION_83_4()
{
  uint64_t v0;

  sub_1A56FBD58(v0);
}

uint64_t OUTLINED_FUNCTION_84_2(uint64_t a1)
{
  return *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
}

uint64_t OUTLINED_FUNCTION_85_2(unsigned __int16 a1)
{
  return a1 | 0x54464152440000;
}

uint64_t OUTLINED_FUNCTION_86_2()
{
  return 0x5446415244;
}

uint64_t OUTLINED_FUNCTION_87_4()
{
  uint64_t v0;

  return sub_1A570E17C(v0);
}

void OUTLINED_FUNCTION_91_3()
{
  uint64_t v0;

  static SearchKey.__derived_enum_equals(_:_:)(v0);
}

unint64_t OUTLINED_FUNCTION_92_3()
{
  unint64_t v0;

  return sub_1A568079C(v0);
}

uint64_t OUTLINED_FUNCTION_93_2()
{
  return 0x2045434E4953;
}

uint64_t OUTLINED_FUNCTION_95_2()
{
  return 0x544E45434552;
}

void static SearchModificationSequence.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v10;
  char v11;

  sub_1A5690C88();
  if ((v10 & 1) != 0)
  {
    sub_1A5691350();
    if ((v11 & 1) != 0 && (a8 | a4) < 0)
      __break(1u);
  }
}

void sub_1A56FDAA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::Int v3;
  uint64_t v4;
  unint64_t v5;
  Swift::Int v6;
  char v7;
  Swift::String v8;
  Swift::Int v9;
  int v10;
  BOOL v11;
  int v12;
  uint64_t v13;
  Swift::Int v14;
  Swift::Int v15;
  Swift::Int v16;
  char v17;
  Swift::String v18;
  int v19;
  int v20;

  v1 = v0;
  v2 = v0 + 8;
  v3 = *(unsigned int *)(v1 + 20);
  v4 = OUTLINED_FUNCTION_31_10();
  sub_1A56814E0(v4, v5, v2, v3);
  if ((v7 & 1) != 0)
  {
    v8._countAndFlagsBits = OUTLINED_FUNCTION_31_10();
    v6 = ByteBuffer._setStringSlowpath(_:at:)(v8, v3);
  }
  v9 = v6;
  v10 = *(_DWORD *)(v1 + 20);
  v11 = __CFADD__(v10, (_DWORD)v6);
  v12 = v10 + v6;
  if (v11)
  {
    __break(1u);
    goto LABEL_12;
  }
  *(_DWORD *)(v1 + 20) = v12;
  sub_1A5665D18();
  v14 = v9 + v13;
  if (__OFADD__(v9, v13))
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v15 = *(unsigned int *)(v1 + 20);
  sub_1A56814E0(32, 0xE100000000000000, v2, *(_DWORD *)(v1 + 20));
  if ((v17 & 1) != 0)
  {
    v18._countAndFlagsBits = 32;
    v18._object = (void *)0xE100000000000000;
    v16 = ByteBuffer._setStringSlowpath(_:at:)(v18, v15);
  }
  v19 = *(_DWORD *)(v1 + 20);
  v11 = __CFADD__(v19, (_DWORD)v16);
  v20 = v19 + v16;
  if (v11)
    goto LABEL_13;
  *(_DWORD *)(v1 + 20) = v20;
  if (__OFADD__(v14, v16))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (__OFADD__(v14 + v16, sub_1A56E14D4()))
LABEL_15:
    __break(1u);
}

uint64_t SearchModificationSequence.extensions.getter(uint64_t a1)
{
  swift_retain();
  OUTLINED_FUNCTION_155();
  swift_retain();
  return a1;
}

uint64_t SearchModificationSequence.extensions.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t result;

  swift_release();
  swift_release();
  result = swift_release();
  *v3 = a1;
  v3[1] = a2;
  v3[2] = a3;
  return result;
}

double (*SearchModificationSequence.extensions.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SearchModificationSequence.sequenceValue.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a4;
}

uint64_t SearchModificationSequence.sequenceValue.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = result;
  return result;
}

double (*SearchModificationSequence.sequenceValue.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SearchModificationSequence.hash(into:)()
{
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_155();
  OUTLINED_FUNCTION_1_73();
  swift_release();
  swift_release();
  swift_release();
  return sub_1A594CEB8();
}

uint64_t SearchModificationSequence.hashValue.getter()
{
  sub_1A594CE64();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_155();
  OUTLINED_FUNCTION_1_73();
  swift_release();
  swift_release();
  swift_release();
  sub_1A594CEB8();
  return sub_1A594CED0();
}

uint64_t sub_1A56FDDAC()
{
  return SearchModificationSequence.hashValue.getter();
}

uint64_t sub_1A56FDDB8()
{
  return SearchModificationSequence.hash(into:)();
}

uint64_t sub_1A56FDDC4()
{
  sub_1A594CE64();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1A5693474();
  swift_release();
  swift_release();
  swift_release();
  sub_1A594CEB8();
  return sub_1A594CED0();
}

void sub_1A56FDE5C(uint64_t *a1, uint64_t *a2)
{
  static SearchModificationSequence.__derived_struct_equals(_:_:)(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

void sub_1A56FDE78(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  Swift::UInt32 v11;
  Swift::Int v12;
  char v13;
  Swift::Int v14;
  int v15;
  BOOL v16;
  int v17;
  uint64_t v18;
  Swift::Int v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  Swift::UInt32 v23;
  Swift::Int v24;
  char v25;
  int v26;
  Swift::UInt32 v27;
  Swift::Int v28;
  Swift::Int v29;
  Swift::Int v30;
  char v31;
  char v32;
  int v33;
  int v34;

  v3 = *a1;
  v4 = (void *)a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v7 = a2 + 8;
  v8 = OUTLINED_FUNCTION_2_61();
  sub_1A56814E0(v8, v9, v10, v11);
  if ((v13 & 1) != 0)
    v12 = OUTLINED_FUNCTION_1_25(32, 0xE100000000000000);
  v14 = v12;
  v15 = *(_DWORD *)(a2 + 20);
  v16 = __CFADD__(v15, (_DWORD)v12);
  v17 = v15 + v12;
  if (v16)
  {
    __break(1u);
    goto LABEL_15;
  }
  *(_DWORD *)(a2 + 20) = v17;
  sub_1A56C2DF4(v3, v4);
  v19 = v14 + v18;
  if (__OFADD__(v14, v18))
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v20 = OUTLINED_FUNCTION_2_61();
  sub_1A56814E0(v20, v21, v22, v23);
  if ((v25 & 1) != 0)
    v24 = OUTLINED_FUNCTION_1_25(32, 0xE100000000000000);
  v26 = *(_DWORD *)(a2 + 20);
  v27 = v26 + v24;
  if (__CFADD__(v26, (_DWORD)v24))
    goto LABEL_16;
  *(_DWORD *)(a2 + 20) = v27;
  v28 = v19 + v24;
  if (__OFADD__(v19, v24))
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A56814E0(v5, v6, v7, v27);
  v30 = v29;
  v32 = v31;
  swift_bridgeObjectRelease();
  if ((v32 & 1) != 0)
    v30 = OUTLINED_FUNCTION_1_25(v5, v6);
  v33 = *(_DWORD *)(a2 + 20);
  v16 = __CFADD__(v33, (_DWORD)v30);
  v34 = v33 + v30;
  if (v16)
    goto LABEL_18;
  *(_DWORD *)(a2 + 20) = v34;
  if (__OFADD__(v28, v30))
LABEL_19:
    __break(1u);
}

unint64_t sub_1A56FDFBC()
{
  unint64_t result;

  result = qword_1EE7A9C70;
  if (!qword_1EE7A9C70)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for SearchModificationSequence, &type metadata for SearchModificationSequence);
    atomic_store(result, (unint64_t *)&qword_1EE7A9C70);
  }
  return result;
}

_QWORD *initializeWithCopy for SearchModificationSequence(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for SearchModificationSequence(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for SearchModificationSequence(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for SearchModificationSequence()
{
  return &type metadata for SearchModificationSequence;
}

void OUTLINED_FUNCTION_1_73()
{
  sub_1A5693474();
}

uint64_t OUTLINED_FUNCTION_2_61()
{
  return 32;
}

void sub_1A56FE148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

Swift::Int sub_1A56FE198()
{
  uint64_t v0;
  Swift::Int v1;
  char v2;
  int v3;
  char v4;

  OUTLINED_FUNCTION_12_28();
  sub_1A594B5F8();
  OUTLINED_FUNCTION_11_23();
  OUTLINED_FUNCTION_2_62();
  OUTLINED_FUNCTION_11_8();
  OUTLINED_FUNCTION_26_7();
  if ((v2 & 1) != 0)
    v1 = OUTLINED_FUNCTION_17_8();
  OUTLINED_FUNCTION_52();
  OUTLINED_FUNCTION_140();
  if (v4)
  {
    __break(1u);
    JUMPOUT(0x1A56FE1F4);
  }
  *(_DWORD *)(v0 + 20) = v3;
  return v1;
}

#error "1A56FE4AC: call analysis failed (funcsize=93)"

void sub_1A56FE4C8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  void *v3;

  sub_1A56FEF08(v0, v3, v1, v2 & 0xFFFFFFFFFFLL | (((v2 >> 40) & 1) << 40));
}

void SearchReturnData.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __asm { BR              X10 }
}

uint64_t sub_1A56FE648()
{
  sub_1A594CE88();
  return OUTLINED_FUNCTION_13_28();
}

void static SearchReturnData.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

BOOL sub_1A56FE7A4(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  unint64_t v5;

  return !(v5 >> 45) && a5 == a1;
}

void SearchReturnData.hashValue.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1A594CE64();
  __asm { BR              X10 }
}

uint64_t sub_1A56FE9AC()
{
  sub_1A594CE88();
  OUTLINED_FUNCTION_13_28();
  return sub_1A594CED0();
}

void sub_1A56FEAF8()
{
  uint64_t v0;

  SearchReturnData.hashValue.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(unsigned int *)(v0 + 24) | ((unint64_t)*(unsigned __int16 *)(v0 + 28) << 32));
}

void sub_1A56FEB10(uint64_t a1)
{
  uint64_t v1;

  SearchReturnData.hash(into:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(unsigned int *)(v1 + 24) | ((unint64_t)*(unsigned __int16 *)(v1 + 28) << 32));
}

uint64_t sub_1A56FEB28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _BYTE v6[72];

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(unsigned int *)(v0 + 24) | ((unint64_t)*(unsigned __int16 *)(v0 + 28) << 32);
  sub_1A594CE64();
  SearchReturnData.hash(into:)((uint64_t)v6, v1, v2, v3, v4);
  return sub_1A594CED0();
}

void sub_1A56FEB8C(uint64_t a1)
{
  static SearchReturnData.__derived_enum_equals(_:_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int16 *)(a1 + 28) << 32));
}

unint64_t sub_1A56FEBC4()
{
  unint64_t result;

  result = qword_1EE7A9C78;
  if (!qword_1EE7A9C78)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for SearchReturnData, &type metadata for SearchReturnData);
    atomic_store(result, (unint64_t *)&qword_1EE7A9C78);
  }
  return result;
}

uint64_t destroy for SearchReturnData(uint64_t a1)
{
  return sub_1A5666598(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int16 *)(a1 + 28) << 32));
}

uint64_t initializeWithCopy for SearchReturnData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(unsigned __int16 *)(a2 + 28);
  v7 = *(unsigned int *)(a2 + 24);
  sub_1A56664F4(*(_QWORD *)a2, v4, v5, v7 | (v6 << 32));
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_WORD *)(a1 + 28) = v6;
  *(_DWORD *)(a1 + 24) = v7;
  return a1;
}

uint64_t assignWithCopy for SearchReturnData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(unsigned __int16 *)(a2 + 28);
  v7 = *(unsigned int *)(a2 + 24);
  sub_1A56664F4(*(_QWORD *)a2, v4, v5, v7 | (v6 << 32));
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int16 *)(a1 + 28) << 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_DWORD *)(a1 + 24) = v7;
  *(_WORD *)(a1 + 28) = v6;
  sub_1A5666598(v8, v9, v10, v11);
  return a1;
}

__n128 __swift_memcpy30_8_0(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 14) = *(_OWORD *)(a2 + 14);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for SearchReturnData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int16 v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_WORD *)(a2 + 28);
  v5 = *(_DWORD *)(a2 + 24);
  v6 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v9 = *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int16 *)(a1 + 28) << 32);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_DWORD *)(a1 + 24) = v5;
  *(_WORD *)(a1 + 28) = v4;
  sub_1A5666598(v6, v8, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchReturnData(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x7A && *(_BYTE *)(a1 + 30))
    {
      v2 = *(_DWORD *)a1 + 121;
    }
    else
    {
      v2 = ((*(unsigned __int16 *)(a1 + 28) >> 13) & 0xFFFFFF87 | (8 * ((*(unsigned __int16 *)(a1 + 28) >> 9) & 0xF))) ^ 0x7F;
      if (v2 >= 0x79)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for SearchReturnData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x79)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_WORD *)(result + 28) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 122;
    if (a3 >= 0x7A)
      *(_BYTE *)(result + 30) = 1;
  }
  else
  {
    if (a3 >= 0x7A)
      *(_BYTE *)(result + 30) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 0;
      *(_DWORD *)(result + 24) = 0;
      *(_WORD *)(result + 28) = (((-a2 >> 3) & 0xF) - 16 * (_WORD)a2) << 9;
    }
  }
  return result;
}

uint64_t sub_1A56FEE24(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 28) >> 13;
}

uint64_t sub_1A56FEE30(uint64_t a1)
{
  uint64_t result;
  unsigned int v2;
  unint64_t v3;

  v2 = *(_DWORD *)(a1 + 24);
  result = a1 + 24;
  v3 = v2 | ((unint64_t)*(unsigned __int16 *)(result + 4) << 32);
  *(_DWORD *)result = v2;
  *(_WORD *)(result + 4) = WORD2(v3) & 0x1FFF;
  return result;
}

uint64_t sub_1A56FEE4C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unsigned int v3;
  unint64_t v4;

  v3 = *(_DWORD *)(a1 + 24);
  result = a1 + 24;
  v4 = (v3 | ((unint64_t)*(unsigned __int16 *)(result + 4) << 32)) & 0x1FFFFFFFFFFLL | (a2 << 45);
  *(_DWORD *)result = v3;
  *(_WORD *)(result + 4) = WORD2(v4);
  return result;
}

ValueMetadata *type metadata accessor for SearchReturnData()
{
  return &type metadata for SearchReturnData;
}

uint64_t OUTLINED_FUNCTION_2_62()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t OUTLINED_FUNCTION_9_35()
{
  return 0x204C414954524150;
}

uint64_t OUTLINED_FUNCTION_10_33()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  return sub_1A5666598(v0, v3, v1, v2);
}

uint64_t OUTLINED_FUNCTION_11_23()
{
  return sub_1A594C924();
}

uint64_t OUTLINED_FUNCTION_13_28()
{
  return sub_1A594CEAC();
}

uint64_t OUTLINED_FUNCTION_15_31()
{
  return sub_1A594B1D8();
}

uint64_t OUTLINED_FUNCTION_16_25()
{
  uint64_t v0;

  return v0;
}

void sub_1A56FEF08(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  Swift::Int v11;
  Swift::Int v12;
  Swift::Int v13;
  char v14;
  char v15;
  Swift::String v16;
  int v17;
  Swift::Int v18;
  char v19;
  int v20;
  Swift::Int v21;
  Swift::Int v22;
  char v23;
  Swift::Int v24;
  int v25;
  BOOL v26;
  int v27;
  Swift::Int v28;
  char v29;
  Swift::Int v30;
  int v31;
  int v32;
  uint64_t v33;
  Swift::Int v34;
  BOOL v35;
  Swift::Int v36;
  Swift::Int v37;
  Swift::Int v38;
  char v39;
  Swift::String v40;
  int v41;
  int v42;

  v5 = v4;
  v10 = v4 + 8;
  v11 = *(unsigned int *)(v5 + 20);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A56814E0(a1, (unint64_t)a2, v10, v11);
  v13 = v12;
  v15 = v14;
  swift_bridgeObjectRelease();
  if ((v15 & 1) != 0)
  {
    v16._countAndFlagsBits = a1;
    v16._object = a2;
    v13 = ByteBuffer._setStringSlowpath(_:at:)(v16, v11);
  }
  v17 = *(_DWORD *)(v5 + 20);
  if (__CFADD__(v17, (_DWORD)v13))
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  *(_DWORD *)(v5 + 20) = v17 + v13;
  OUTLINED_FUNCTION_0_92(32);
  if ((v19 & 1) != 0)
    v18 = OUTLINED_FUNCTION_1_74(32);
  v20 = *(_DWORD *)(v5 + 20);
  if (__CFADD__(v20, (_DWORD)v18))
    goto LABEL_29;
  *(_DWORD *)(v5 + 20) = v20 + v18;
  v21 = v13 + v18;
  if (__OFADD__(v13, v18))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if ((a4 & 0x10000000000) != 0)
  {
    OUTLINED_FUNCTION_0_92(40);
    if ((v29 & 1) != 0)
      v28 = OUTLINED_FUNCTION_1_74(40);
    v30 = v28;
    v31 = *(_DWORD *)(v5 + 20);
    v26 = __CFADD__(v31, (_DWORD)v28);
    v32 = v31 + v28;
    if (v26)
      goto LABEL_32;
    *(_DWORD *)(v5 + 20) = v32;
    if (*(_QWORD *)(a3 + 16))
    {
      swift_retain();
      swift_retain();
      v33 = j__OUTLINED_FUNCTION_168(a3, 0, 0xE000000000000000, 32, 0xE100000000000000, 0, 0xE000000000000000, 1, v5);
      swift_release();
      swift_release();
    }
    else
    {
      v33 = 0;
    }
    v35 = __OFADD__(v30, v33);
    v36 = v30 + v33;
    if (v35)
      goto LABEL_33;
    v37 = *(unsigned int *)(v5 + 20);
    sub_1A56814E0(41, 0xE100000000000000, v10, *(_DWORD *)(v5 + 20));
    if ((v39 & 1) != 0)
    {
      v40._countAndFlagsBits = 41;
      v40._object = (void *)0xE100000000000000;
      v38 = ByteBuffer._setStringSlowpath(_:at:)(v40, v37);
    }
    v41 = *(_DWORD *)(v5 + 20);
    v26 = __CFADD__(v41, (_DWORD)v38);
    v42 = v41 + v38;
    if (v26)
      goto LABEL_34;
    *(_DWORD *)(v5 + 20) = v42;
    v24 = v36 + v38;
    if (__OFADD__(v36, v38))
    {
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
      return;
    }
  }
  else if (BYTE4(a4) == 255)
  {
    OUTLINED_FUNCTION_0_92(36);
    if ((v23 & 1) != 0)
      v22 = OUTLINED_FUNCTION_1_74(36);
    v24 = v22;
    v25 = *(_DWORD *)(v5 + 20);
    v26 = __CFADD__(v25, (_DWORD)v22);
    v27 = v25 + v22;
    if (v26)
      goto LABEL_36;
    *(_DWORD *)(v5 + 20) = v27;
  }
  else
  {
    sub_1A54E4334(a3, a4, SBYTE4(a4));
    sub_1A57087E0(a3, a4 & 0xFFFFFFFFFFLL, 0, 0xE000000000000000, 44, 0xE100000000000000, 0, 0xE000000000000000, 0);
    v24 = v34;
    sub_1A5666618(a3, a4, 0);
  }
  if (__OFADD__(v21, v24))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
}

void OUTLINED_FUNCTION_0_92(uint64_t a1)
{
  uint64_t v1;
  Swift::UInt32 v2;

  sub_1A56814E0(a1, 0xE100000000000000, v1, v2);
}

Swift::Int OUTLINED_FUNCTION_1_74(uint64_t a1)
{
  Swift::Int v1;
  unint64_t v2;

  v2 = 0xE100000000000000;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v1);
}

#error "1A56FF2F4: call analysis failed (funcsize=116)"

void SearchReturnOption.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!BYTE6(a5))
  {
    sub_1A594CE88();
    sub_1A594CE88();
    sub_1A594CEAC();
    sub_1A594CEAC();
    return;
  }
  if (BYTE6(a5) != 1)
  {
    sub_1A594CE88();
    return;
  }
  sub_1A594CE88();
  sub_1A594B1D8();
  if (BYTE5(a5) == 255)
  {
    sub_1A594CE94();
    return;
  }
  sub_1A594CE94();
  if ((a5 & 0x10000000000) != 0)
  {
    sub_1A594CE88();
    sub_1A566658C(a4, a5, 1);
    sub_1A569428C();
    goto LABEL_11;
  }
  sub_1A594CE88();
  if (BYTE4(a5) == 255)
  {
    sub_1A594CE88();
LABEL_11:
    sub_1A56667BC(a4, a5);
    return;
  }
  sub_1A594CE88();
  sub_1A56B6298(a1, a4, a5 & 0xFFFFFFFFFFLL);
}

uint64_t static SearchReturnOption.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  BOOL v12;
  uint64_t v13;
  uint64_t v16;
  char v20;
  char v21;
  char v22;

  if (BYTE6(a4))
  {
    if (BYTE6(a4) == 1)
    {
      if (BYTE6(a8) != 1)
        return 0;
      v12 = a1 == a5 && a2 == a6;
      if (!v12 && (sub_1A594CD38() & 1) == 0)
        return 0;
      if (BYTE5(a4) == 255)
        return BYTE5(a8) == 255;
      if (BYTE5(a8) != 255)
      {
        if ((a4 & 0x10000000000) != 0)
        {
          if ((a8 & 0x10000000000) == 0)
            return 0;
          sub_1A5689E98();
          return (v20 & 1) != 0;
        }
        if ((a8 & 0x10000000000) == 0)
        {
          v16 = a8 & 0xFF00000000;
          if ((~a4 & 0xFF00000000) != 0)
          {
            if (v16 == 0xFF00000000)
              return 0;
            sub_1A566676C(a7, a8);
            sub_1A566676C(a3, a4);
            sub_1A56B614C((int32x2_t *)a3, a4 & 0xFFFFFFFFFFLL, (int32x2_t *)a7, a8 & 0xFFFFFFFFFFLL);
            v22 = v21;
            sub_1A56667BC(a7, a8);
            sub_1A56667BC(a3, a4);
            if ((v22 & 1) == 0)
              return 0;
          }
          else if (v16 != 0xFF00000000)
          {
            return 0;
          }
          return 1;
        }
      }
    }
    else
    {
      v13 = a3 | a2;
      if (a3 | a2 | a1 || (a4 & 0xFFFFFFFFFFFFLL) != 0)
      {
        if (a1 != 1 || v13 || (a4 & 0xFFFFFFFFFFFFLL) != 0)
        {
          if (a1 != 2 || v13 || (a4 & 0xFFFFFFFFFFFFLL) != 0)
          {
            if (a1 != 3 || v13 || (a4 & 0xFFFFFFFFFFFFLL) != 0)
            {
              if (BYTE6(a8) != 2 || a5 != 4)
                return 0;
            }
            else if (BYTE6(a8) != 2 || a5 != 3)
            {
              return 0;
            }
          }
          else if (BYTE6(a8) != 2 || a5 != 2)
          {
            return 0;
          }
        }
        else if (BYTE6(a8) != 2 || a5 != 1)
        {
          return 0;
        }
        if (a7 | a6)
          return 0;
      }
      else if (BYTE6(a8) != 2 || a7 | a6 | a5)
      {
        return 0;
      }
      if ((a8 & 0xFFFFFFFFFFFFLL) == 0)
        return 1;
    }
  }
  else if (!BYTE6(a8))
  {
    if ((a2 & 1) != 0)
    {
      if ((a6 & 1) == 0)
        return 0;
    }
    else if ((a6 & 1) != 0)
    {
      return 0;
    }
    return a5 == a1;
  }
  return 0;
}

uint64_t SearchReturnOption.hashValue.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _BYTE v9[72];

  sub_1A594CE64();
  SearchReturnOption.hash(into:)((uint64_t)v9, a1, a2, a3, a4 & 0xFFFFFFFFFFFFFFLL);
  return sub_1A594CED0();
}

uint64_t sub_1A56FF7B4()
{
  uint64_t v0;

  return SearchReturnOption.hashValue.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(unsigned int *)(v0 + 24) | ((unint64_t)*(unsigned __int16 *)(v0 + 28) << 32) | ((unint64_t)*(unsigned __int8 *)(v0 + 30) << 48));
}

void sub_1A56FF7D4(uint64_t a1)
{
  uint64_t v1;

  SearchReturnOption.hash(into:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(unsigned int *)(v1 + 24) | ((unint64_t)*(unsigned __int16 *)(v1 + 28) << 32) | ((unint64_t)*(unsigned __int8 *)(v1 + 30) << 48));
}

uint64_t sub_1A56FF7F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _BYTE v7[72];

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(unsigned int *)(v0 + 24) | ((unint64_t)*(unsigned __int16 *)(v0 + 28) << 32);
  v5 = *(unsigned __int8 *)(v0 + 30);
  sub_1A594CE64();
  SearchReturnOption.hash(into:)((uint64_t)v7, v1, v2, v3, v4 | (v5 << 48));
  return sub_1A594CED0();
}

uint64_t sub_1A56FF864(uint64_t a1, uint64_t a2)
{
  return static SearchReturnOption.__derived_enum_equals(_:_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int16 *)(a1 + 28) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 30) << 48), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(unsigned int *)(a2 + 24) | ((unint64_t)*(unsigned __int16 *)(a2 + 28) << 32) | ((unint64_t)*(unsigned __int8 *)(a2 + 30) << 48));
}

void sub_1A56FF8A8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  Swift::UInt32 v7;
  uint64_t v8;
  unint64_t v9;
  Swift::Int v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  Swift::Int v14;
  int v15;
  BOOL v16;
  int v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;

  v3 = *(_QWORD *)a1;
  v4 = *(_QWORD *)(a1 + 8);
  if (*(_BYTE *)(a1 + 30))
  {
    v5 = *(_QWORD *)(a1 + 16);
    v6 = *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int16 *)(a1 + 28) << 32);
    if (*(_BYTE *)(a1 + 30) == 1)
    {
      sub_1A56FFD10(*(_QWORD *)a1, (void *)v4, v5, v6 & 0xFFFFFFFFFFFFLL);
      return;
    }
LABEL_10:
    v19 = v5 | v4;
    if (!(v5 | v4 | v3) && (v6 & 0xFFFFFFFFFFFFLL) == 0)
    {
      OUTLINED_FUNCTION_66_4();
      OUTLINED_FUNCTION_0_93(5130573, 0xE300000000000000);
      if ((v20 & 1) != 0)
        OUTLINED_FUNCTION_33(5130573, 0xE300000000000000);
      OUTLINED_FUNCTION_249();
      if (!v16)
        goto LABEL_52;
      __break(1u);
    }
    if ((v6 & 0xFFFFFFFFFFFFLL) != 0 || v3 != 1 || v19 != 0)
    {
      if ((v6 & 0xFFFFFFFFFFFFLL) == 0 && v3 == 2 && v19 == 0)
      {
LABEL_44:
        OUTLINED_FUNCTION_66_4();
        OUTLINED_FUNCTION_0_93(5000257, 0xE300000000000000);
        if ((v31 & 1) != 0)
          OUTLINED_FUNCTION_33(5000257, 0xE300000000000000);
        OUTLINED_FUNCTION_249();
        if (!v16)
          goto LABEL_52;
        __break(1u);
LABEL_49:
        OUTLINED_FUNCTION_66_4();
        OUTLINED_FUNCTION_0_93(1163280723, 0xE400000000000000);
        if ((v32 & 1) != 0)
          OUTLINED_FUNCTION_33(1163280723, 0xE400000000000000);
        OUTLINED_FUNCTION_249();
        if (!v16)
        {
LABEL_52:
          *(_DWORD *)(a2 + 20) = v19;
          return;
        }
        goto LABEL_54;
      }
      if ((v6 & 0xFFFFFFFFFFFFLL) != 0 || v3 != 3 || v19)
        goto LABEL_49;
      OUTLINED_FUNCTION_66_4();
      v25 = OUTLINED_FUNCTION_8_35();
      OUTLINED_FUNCTION_0_93(v25, v26);
      if ((v27 & 1) != 0)
      {
        v28 = OUTLINED_FUNCTION_8_35();
        OUTLINED_FUNCTION_33(v28, v29);
      }
      OUTLINED_FUNCTION_249();
      if (!v16)
        goto LABEL_52;
      __break(1u);
    }
    OUTLINED_FUNCTION_66_4();
    OUTLINED_FUNCTION_0_93(5783885, 0xE300000000000000);
    if ((v30 & 1) != 0)
      OUTLINED_FUNCTION_33(5783885, 0xE300000000000000);
    OUTLINED_FUNCTION_249();
    if (!v16)
      goto LABEL_52;
    __break(1u);
    goto LABEL_44;
  }
  v7 = *(_DWORD *)(a2 + 20);
  v8 = OUTLINED_FUNCTION_191();
  OUTLINED_FUNCTION_22_1(v8, v9, a2 + 8, v7);
  if ((v11 & 1) != 0)
  {
    v12 = OUTLINED_FUNCTION_191();
    v10 = OUTLINED_FUNCTION_29_15(v12, v13);
  }
  v14 = v10;
  v15 = *(_DWORD *)(a2 + 20);
  v16 = __CFADD__(v15, (_DWORD)v10);
  v17 = v15 + v10;
  if (v16)
  {
    __break(1u);
LABEL_54:
    __break(1u);
    return;
  }
  *(_DWORD *)(a2 + 20) = v17;
  sub_1A56E56D8(v3, v4 & 1);
  if (__OFADD__(v14, v18))
  {
    __break(1u);
    goto LABEL_10;
  }
}

unint64_t sub_1A56FFAB8()
{
  unint64_t result;

  result = qword_1EE7A9C80;
  if (!qword_1EE7A9C80)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for SearchReturnOption, &type metadata for SearchReturnOption);
    atomic_store(result, (unint64_t *)&qword_1EE7A9C80);
  }
  return result;
}

uint64_t destroy for SearchReturnOption(uint64_t a1)
{
  return sub_1A5666D04(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int16 *)(a1 + 28) << 32), *(_BYTE *)(a1 + 30));
}

uint64_t initializeWithCopy for SearchReturnOption(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(unsigned __int16 *)(a2 + 28);
  v7 = *(unsigned int *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 30);
  sub_1A5666CC4(*(_QWORD *)a2, v4, v5, v7 | (v6 << 32), v8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_WORD *)(a1 + 28) = v6;
  *(_DWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 30) = v8;
  return a1;
}

uint64_t assignWithCopy for SearchReturnOption(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(unsigned __int16 *)(a2 + 28);
  v7 = *(unsigned int *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 30);
  sub_1A5666CC4(*(_QWORD *)a2, v4, v5, v7 | (v6 << 32), v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int16 *)(a1 + 28) << 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_DWORD *)(a1 + 24) = v7;
  *(_WORD *)(a1 + 28) = v6;
  v13 = *(_BYTE *)(a1 + 30);
  *(_BYTE *)(a1 + 30) = v8;
  sub_1A5666D04(v9, v10, v11, v12, v13);
  return a1;
}

uint64_t assignWithTake for SearchReturnOption(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int16 v4;
  int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_WORD *)(a2 + 28);
  v5 = *(_DWORD *)(a2 + 24);
  v6 = *(_BYTE *)(a2 + 30);
  v7 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v10 = *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int16 *)(a1 + 28) << 32);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_DWORD *)(a1 + 24) = v5;
  *(_WORD *)(a1 + 28) = v4;
  v11 = *(_BYTE *)(a1 + 30);
  *(_BYTE *)(a1 + 30) = v6;
  sub_1A5666D04(v7, v9, v8, v10, v11);
  return a1;
}

uint64_t sub_1A56FFC90(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 30) <= 1u)
    return *(unsigned __int8 *)(a1 + 30);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1A56FFCA8(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
    *(_QWORD *)(result + 22) = 0;
  }
  *(_BYTE *)(result + 30) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SearchReturnOption()
{
  return &type metadata for SearchReturnOption;
}

void OUTLINED_FUNCTION_0_93(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  Swift::UInt32 v3;

  sub_1A56814E0(a1, a2, v2, v3);
}

uint64_t OUTLINED_FUNCTION_3_48()
{
  return 0x204E525554455220;
}

uint64_t OUTLINED_FUNCTION_8_35()
{
  return 0x544E554F43;
}

uint64_t sub_1A56FFD10(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  Swift::Int v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t result;
  Swift::String v16;
  int v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  int v21;
  char v22;
  char v23;

  v5 = v4;
  v10 = *(unsigned int *)(v4 + 20);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A56814E0(a1, (unint64_t)a2, v4 + 8, v10);
  v12 = v11;
  v14 = v13;
  result = swift_bridgeObjectRelease();
  if ((v14 & 1) != 0)
  {
    v16._countAndFlagsBits = a1;
    v16._object = a2;
    result = ByteBuffer._setStringSlowpath(_:at:)(v16, v10);
    v12 = result;
  }
  v17 = *(_DWORD *)(v5 + 20);
  if (__CFADD__(v17, (_DWORD)v12))
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  *(_DWORD *)(v5 + 20) = v17 + v12;
  if ((a4 & 0xFFFFFFFFFFFFuLL) >> 40 <= 0xFE)
  {
    v20 = a3;
    v21 = a4;
    v22 = BYTE4(a4);
    v23 = ((unsigned __int16)((a4 & 0xFFFFFFFFFFFFuLL) >> 32) >> 8) & 1;
    sub_1A56FFE14((uint64_t)&v20, v5);
  }
  else
  {
    v18 = 0;
  }
  v19 = __OFADD__(v12, v18);
  result = v12 + v18;
  if (v19)
    goto LABEL_10;
  return result;
}

void sub_1A56FFE14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  Swift::Int v5;
  Swift::Int v6;
  char v7;
  Swift::String v8;
  Swift::Int v9;
  int v10;
  Swift::Int v11;
  uint64_t v12;
  Swift::Int v13;
  char v14;
  Swift::String v15;
  Swift::Int v16;
  int v17;
  BOOL v18;
  int v19;
  uint64_t v20;
  unint64_t v21;
  Swift::Int v22;
  char v23;
  Swift::String v24;
  Swift::Int v25;
  int v26;
  int v27;
  Swift::Int v28;
  Swift::Int v29;
  Swift::Int v30;
  Swift::Int v31;
  char v32;
  Swift::String v33;
  int v34;
  int v35;

  v4 = a2 + 8;
  v5 = *(unsigned int *)(a2 + 20);
  sub_1A56814E0(32, 0xE100000000000000, a2 + 8, v5);
  if ((v7 & 1) != 0)
  {
    v8._countAndFlagsBits = 32;
    v8._object = (void *)0xE100000000000000;
    v6 = ByteBuffer._setStringSlowpath(_:at:)(v8, v5);
  }
  v9 = v6;
  v10 = *(_DWORD *)(a2 + 20);
  v11 = (v10 + v6);
  if (__CFADD__(v10, (_DWORD)v6))
  {
    __break(1u);
    goto LABEL_25;
  }
  *(_DWORD *)(a2 + 20) = v11;
  v12 = *(_QWORD *)a1;
  if (*(_BYTE *)(a1 + 13) == 1)
  {
    sub_1A56814E0(40, 0xE100000000000000, v4, v11);
    if ((v14 & 1) != 0)
    {
      v15._countAndFlagsBits = 40;
      v15._object = (void *)0xE100000000000000;
      v13 = ByteBuffer._setStringSlowpath(_:at:)(v15, v11);
    }
    v16 = v13;
    v17 = *(_DWORD *)(a2 + 20);
    v18 = __CFADD__(v17, (_DWORD)v13);
    v19 = v17 + v13;
    if (v18)
      goto LABEL_26;
    *(_DWORD *)(a2 + 20) = v19;
    if (*(_QWORD *)(v12 + 16))
    {
      swift_retain();
      swift_retain();
      v20 = j__OUTLINED_FUNCTION_168(v12, 0, 0xE000000000000000, 32, 0xE100000000000000, 0, 0xE000000000000000, 1, a2);
      swift_release();
      swift_release();
    }
    else
    {
      v20 = 0;
    }
    v29 = v16 + v20;
    if (__OFADD__(v16, v20))
      goto LABEL_27;
    v30 = *(unsigned int *)(a2 + 20);
    sub_1A56814E0(41, 0xE100000000000000, v4, *(_DWORD *)(a2 + 20));
    if ((v32 & 1) != 0)
    {
      v33._countAndFlagsBits = 41;
      v33._object = (void *)0xE100000000000000;
      v31 = ByteBuffer._setStringSlowpath(_:at:)(v33, v30);
    }
    v34 = *(_DWORD *)(a2 + 20);
    v18 = __CFADD__(v34, (_DWORD)v31);
    v35 = v34 + v31;
    if (v18)
      goto LABEL_28;
    *(_DWORD *)(a2 + 20) = v35;
    v25 = v29 + v31;
    if (__OFADD__(v29, v31))
    {
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
      return;
    }
  }
  else
  {
    v21 = *(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned __int8 *)(a1 + 12) << 32);
    if (BYTE4(v21) == 255)
    {
      sub_1A56814E0(36, 0xE100000000000000, v4, v11);
      if ((v23 & 1) != 0)
      {
        v24._countAndFlagsBits = 36;
        v24._object = (void *)0xE100000000000000;
        v22 = ByteBuffer._setStringSlowpath(_:at:)(v24, v11);
      }
      v25 = v22;
      v26 = *(_DWORD *)(a2 + 20);
      v18 = __CFADD__(v26, (_DWORD)v22);
      v27 = v26 + v22;
      if (v18)
        goto LABEL_30;
      *(_DWORD *)(a2 + 20) = v27;
    }
    else
    {
      sub_1A54E4334(v12, v21, SBYTE4(v21));
      sub_1A57087E0(v12, v21 & 0xFFFFFFFFFFLL, 0, 0xE000000000000000, 44, 0xE100000000000000, 0, 0xE000000000000000, 0);
      v25 = v28;
      sub_1A5666618(v12, v21, 0);
    }
  }
  if (__OFADD__(v9, v25))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
}

NIOIMAPCore2::SectionSpecifier::Part __swiftcall SectionSpecifier.Part.dropLast()()
{
  uint64_t v0;
  NIOIMAPCore2::SectionSpecifier::Part result;

  sub_1A5700110(v0, sub_1A569BC04);
  return result;
}

NIOIMAPCore2::SectionSpecifier::Part __swiftcall SectionSpecifier.Part.appending(_:)(Swift::Int a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v4;
  NIOIMAPCore2::SectionSpecifier::Part result;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    OUTLINED_FUNCTION_20_20();
    v2 = v6;
  }
  v4 = *(_QWORD *)(v2 + 16);
  if (v4 >= *(_QWORD *)(v2 + 24) >> 1)
  {
    OUTLINED_FUNCTION_20_20();
    v2 = v7;
  }
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_QWORD *)(v2 + 8 * v4 + 32) = a1;
  OUTLINED_FUNCTION_8_1();
  return result;
}

NIOIMAPCore2::SectionSpecifier::Part __swiftcall SectionSpecifier.Part.dropFirst()()
{
  uint64_t v0;
  NIOIMAPCore2::SectionSpecifier::Part result;

  sub_1A5700110(v0, sub_1A566CB1C);
  return result;
}

void sub_1A5700110(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v2 = a2(1, a1);
  v4 = v3;
  v6 = v5;
  v8 = v7;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5699EA0(v2, v4, v6, v8);
}

void static SectionSpecifier.__derived_struct_equals(_:_:)(_QWORD *a1, uint64_t a2, char a3, _QWORD *a4, uint64_t a5, char a6)
{
  if ((_s12NIOIMAPCore216SectionSpecifierV4PartV23__derived_struct_equalsySbAE_AEtFZ_0(a1, a4) & 1) == 0)
    goto LABEL_9;
  if (!a3)
  {
    if (a6)
      goto LABEL_9;
LABEL_7:
    OUTLINED_FUNCTION_182();
    sub_1A5689E98();
    goto LABEL_9;
  }
  if (a3 != 1)
    __asm { BR              X9 }
  if (a6 == 1)
    goto LABEL_7;
LABEL_9:
  OUTLINED_FUNCTION_8_1();
}

void sub_1A5700244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v8;
  Swift::Int v9;
  Swift::Int v10;
  char v11;
  Swift::String v12;
  Swift::Int v13;
  int v14;
  BOOL v15;
  int v16;
  int v17;
  char v18;
  uint64_t v19;
  int v20;
  int v21;
  __int16 v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  Swift::Int v26;
  Swift::Int v27;
  char v28;
  Swift::String v29;
  uint64_t v30;
  int v31;
  char v32;
  int v33;
  char v34;
  uint64_t v35;
  int v36;
  int v37;
  int v38;
  __int16 v39;
  char v40;
  uint64_t v41;
  __int128 v42;

  v4 = v3;
  v8 = (uint64_t)(v3 + 8);
  v9 = *((unsigned int *)v4 + 5);
  sub_1A56814E0(91, 0xE100000000000000, v8, *((_DWORD *)v4 + 5));
  if ((v11 & 1) != 0)
  {
    v12._countAndFlagsBits = 91;
    v12._object = (void *)0xE100000000000000;
    v10 = ByteBuffer._setStringSlowpath(_:at:)(v12, v9);
  }
  v13 = v10;
  v14 = *((_DWORD *)v4 + 5);
  v15 = __CFADD__(v14, (_DWORD)v10);
  v16 = v14 + v10;
  if (v15)
  {
    __break(1u);
    goto LABEL_11;
  }
  *((_DWORD *)v4 + 5) = v16;
  v17 = *(_DWORD *)(v4 + 1);
  v18 = v4[5];
  v19 = *((_QWORD *)v4 + 1);
  v20 = *((_DWORD *)v4 + 4);
  v21 = *((_DWORD *)v4 + 6);
  v22 = *((_WORD *)v4 + 14);
  v23 = v4[30];
  v24 = *((_QWORD *)v4 + 4);
  v32 = *v4;
  v34 = v18;
  v33 = v17;
  v35 = v19;
  v36 = v20;
  v37 = v16;
  v38 = v21;
  v39 = v22;
  v40 = v23;
  v41 = v24;
  v42 = *(_OWORD *)(v4 + 40);
  swift_retain();
  swift_retain();
  v25 = sub_1A56661F8(a1, a2, a3, &v32, v4);
  swift_release();
  swift_release();
  v26 = v13 + v25;
  if (__OFADD__(v13, v25))
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v27 = *((unsigned int *)v4 + 5);
  sub_1A56814E0(93, 0xE100000000000000, v8, *((_DWORD *)v4 + 5));
  if ((v28 & 1) != 0)
  {
    v29._countAndFlagsBits = 93;
    v29._object = (void *)0xE100000000000000;
    ByteBuffer._setStringSlowpath(_:at:)(v29, v27);
  }
  OUTLINED_FUNCTION_249();
  if (v15)
    goto LABEL_12;
  *((_DWORD *)v4 + 5) = v31;
  if (__OFADD__(v26, v30))
LABEL_13:
    __break(1u);
}

uint64_t SectionSpecifier.init(part:kind:)(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  BOOL v3;

  if (*(_QWORD *)(result + 16))
    v3 = 0;
  else
    v3 = a3 >= 2u;
  if (v3 && a2 == 2)
    __break(1u);
  return result;
}

uint64_t SectionSpecifier.kind.getter(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  sub_1A55DC724(a2, a3);
  return a2;
}

uint64_t SectionSpecifier.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  sub_1A5693F48();
  sub_1A55DC724(a3, a4);
  OUTLINED_FUNCTION_5_41(a1);
  return sub_1A55DC738(a3, a4);
}

void static SectionSpecifier.Kind.__derived_enum_equals(_:_:)(uint64_t a1, char a2, uint64_t a3, char a4)
{
  if (a2)
  {
    if (a2 != 1)
    {
      ((void (*)(void))((char *)&loc_1A57004AC + 4 * byte_1A59B4AD4[a1]))();
      return;
    }
    if (a4 == 1)
      goto LABEL_8;
  }
  else if (!a4)
  {
LABEL_8:
    sub_1A5689E98();
  }
}

uint64_t sub_1A57004C8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 != 2 || a3 != 1)
    JUMPOUT(0x1A570048CLL);
  return 1;
}

uint64_t sub_1A57004DC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 != 2 || a3 != 2)
    JUMPOUT(0x1A570048CLL);
  return 1;
}

void sub_1A57004F0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 != 2 || a3 != 3)
    JUMPOUT(0x1A570048CLL);
  JUMPOUT(0x1A5700500);
}

uint64_t SectionSpecifier.hashValue.getter(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  _BYTE v6[72];

  OUTLINED_FUNCTION_15_10();
  sub_1A5693F48();
  sub_1A55DC724(a2, a3);
  OUTLINED_FUNCTION_5_41((uint64_t)v6);
  sub_1A55DC738(a2, a3);
  return OUTLINED_FUNCTION_24_3();
}

uint64_t sub_1A5700570()
{
  uint64_t v0;

  return SectionSpecifier.hashValue.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

uint64_t sub_1A570057C(uint64_t a1)
{
  uint64_t v1;

  return SectionSpecifier.hash(into:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16));
}

uint64_t sub_1A5700588()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;
  _BYTE v4[72];

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_BYTE *)(v0 + 16);
  sub_1A594CE64();
  sub_1A5693F48();
  sub_1A55DC724(v1, v2);
  SectionSpecifier.Kind.hash(into:)((uint64_t)v4, v1, v2);
  sub_1A55DC738(v1, v2);
  return sub_1A594CED0();
}

uint64_t sub_1A57005FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A5700A78(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))static SectionSpecifier.__derived_struct_equals(_:_:));
}

void sub_1A5700608()
{
  static SectionSpecifier.complete = MEMORY[0x1E0DEE9D8];
  unk_1EE7F95C0 = 0;
  byte_1EE7F95C8 = 2;
}

uint64_t *SectionSpecifier.complete.unsafeMutableAddressor()
{
  if (qword_1EE796AF8 != -1)
    swift_once();
  return &static SectionSpecifier.complete;
}

void static SectionSpecifier.complete.getter()
{
  if (qword_1EE796AF8 != -1)
    swift_once();
  OUTLINED_FUNCTION_3_49();
  OUTLINED_FUNCTION_1_75();
  OUTLINED_FUNCTION_8_1();
}

void sub_1A57006B8()
{
  static SectionSpecifier.header = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)algn_1EE7F95A8 = 1;
  byte_1EE7F95B0 = 2;
}

uint64_t *SectionSpecifier.header.unsafeMutableAddressor()
{
  if (qword_1EE796AF0 != -1)
    swift_once();
  return &static SectionSpecifier.header;
}

void static SectionSpecifier.header.getter()
{
  if (qword_1EE796AF0 != -1)
    swift_once();
  OUTLINED_FUNCTION_3_49();
  OUTLINED_FUNCTION_1_75();
  OUTLINED_FUNCTION_8_1();
}

void sub_1A570076C()
{
  static SectionSpecifier.text = MEMORY[0x1E0DEE9D8];
  unk_1EE7F9F60 = 3;
  byte_1EE7F9F68 = 2;
}

uint64_t *SectionSpecifier.text.unsafeMutableAddressor()
{
  if (qword_1EE7A90A8 != -1)
    swift_once();
  return &static SectionSpecifier.text;
}

void static SectionSpecifier.text.getter()
{
  if (qword_1EE7A90A8 != -1)
    swift_once();
  OUTLINED_FUNCTION_3_49();
  OUTLINED_FUNCTION_1_75();
  OUTLINED_FUNCTION_8_1();
}

uint64_t static SectionSpecifier.headerFields(_:)()
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return OUTLINED_FUNCTION_182();
}

uint64_t static SectionSpecifier.headerFieldsNot(_:)()
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return OUTLINED_FUNCTION_182();
}

void static SectionSpecifier.< infix(_:_:)(_QWORD *a1, uint64_t a2, unsigned __int8 a3, _QWORD *a4)
{
  if ((_s12NIOIMAPCore216SectionSpecifierV4PartV23__derived_struct_equalsySbAE_AEtFZ_0(a1, a4) & 1) != 0)
  {
    if (a3 > 1u)
      __asm { BR              X9 }
    OUTLINED_FUNCTION_17_1();
  }
  else
  {
    static SectionSpecifier.Part.< infix(_:_:)((_BOOL8)a1, (uint64_t)a4);
  }
}

void sub_1A5700918()
{
  JUMPOUT(0x1A57008D8);
}

void sub_1A570092C()
{
  JUMPOUT(0x1A57008D8);
}

void sub_1A5700948()
{
  JUMPOUT(0x1A57008D8);
}

uint64_t static SectionSpecifier.Kind.< infix(_:_:)(uint64_t a1, unsigned __int8 a2, unint64_t a3, unsigned __int8 a4)
{
  if (a2 > 1u)
    return ((uint64_t (*)(uint64_t))((char *)sub_1A5700994 + 4 * byte_1A59B4ADC[a1]))(1);
  return a4 > 1u && a3 > 2;
}

BOOL sub_1A5700994(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  BOOL v4;

  if (a3)
    v4 = 0;
  else
    v4 = a4 == 2;
  return !v4;
}

BOOL sub_1A57009A8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return a4 != 2 || (a3 & 0xFFFFFFFFFFFFFFFDLL) != 0;
}

uint64_t sub_1A57009C4()
{
  return 0;
}

BOOL static SectionSpecifier.Part.< infix(_:_:)(_BOOL8 result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(result + 16);
  v3 = *(_QWORD *)(a2 + 16);
  if (v3 >= v2)
    v4 = *(_QWORD *)(result + 16);
  else
    v4 = *(_QWORD *)(a2 + 16);
  if (!v4)
    return v2 < v3;
  v5 = *(_QWORD *)(result + 32);
  v6 = *(_QWORD *)(a2 + 32);
  if (v5 == v6)
  {
    v7 = 0;
    v8 = v4 - 1;
    while (v8 != v7)
    {
      v5 = *(_QWORD *)(result + 40 + 8 * v7);
      v6 = *(_QWORD *)(a2 + 40 + 8 * v7++);
      if (v5 != v6)
        goto LABEL_12;
    }
    return v2 < v3;
  }
  v7 = 0;
LABEL_12:
  if (v7 < v2)
    return v5 < v6;
  __break(1u);
  return result;
}

uint64_t sub_1A5700A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A5700A78(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))static SectionSpecifier.< infix(_:_:));
}

uint64_t sub_1A5700A54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A5700A78(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5708D6C);
}

uint64_t sub_1A5700A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A5700A78(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A570DEA0);
}

uint64_t sub_1A5700A6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A5700A78(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A570E02C);
}

uint64_t sub_1A5700A78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  return a5(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned __int8 *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(unsigned __int8 *)(a2 + 16));
}

uint64_t SectionSpecifier.debugDescription.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A55DC724(a2, a3);
  return sub_1A568239C(a1, a2, a3);
}

uint64_t sub_1A5700AE0()
{
  uint64_t v0;

  return SectionSpecifier.debugDescription.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(unsigned __int8 *)(v0 + 16));
}

uint64_t SectionSpecifier.Part.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_1A594CE88();
  if (v3)
  {
    v5 = a2 + 32;
    do
    {
      v5 += 8;
      result = sub_1A594CE88();
      --v3;
    }
    while (v3);
  }
  return result;
}

void SectionSpecifier.Part.hashValue.getter()
{
  OUTLINED_FUNCTION_15_10();
  sub_1A5693F48();
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_8_7();
}

void sub_1A5700B68()
{
  SectionSpecifier.Part.hashValue.getter();
}

uint64_t sub_1A5700B70(uint64_t a1)
{
  uint64_t *v1;

  return SectionSpecifier.Part.hash(into:)(a1, *v1);
}

uint64_t sub_1A5700B78()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1A594CE64();
  SectionSpecifier.Part.hash(into:)((uint64_t)v3, v1);
  return sub_1A594CED0();
}

uint64_t sub_1A5700BB8(_QWORD *a1, _QWORD *a2)
{
  return static SectionSpecifier.Part.__derived_struct_equals(_:_:)(*a1, *a2);
}

void SectionSpecifier.Kind.hash(into:)(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 > 1u)
    __asm { BR              X9 }
  sub_1A594CE88();
  OUTLINED_FUNCTION_182();
  sub_1A569428C();
}

uint64_t sub_1A5700C20()
{
  return sub_1A594CE88();
}

void SectionSpecifier.Kind.hashValue.getter()
{
  _BYTE v0[72];

  OUTLINED_FUNCTION_15_10();
  OUTLINED_FUNCTION_5_41((uint64_t)v0);
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_8_7();
}

void sub_1A5700C7C()
{
  SectionSpecifier.Kind.hashValue.getter();
}

void sub_1A5700C88(uint64_t a1)
{
  uint64_t v1;

  SectionSpecifier.Kind.hash(into:)(a1, *(_QWORD *)v1, *(_BYTE *)(v1 + 8));
}

uint64_t sub_1A5700C94()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;
  _BYTE v4[72];

  v1 = *(_QWORD *)v0;
  v2 = *(_BYTE *)(v0 + 8);
  sub_1A594CE64();
  SectionSpecifier.Kind.hash(into:)((uint64_t)v4, v1, v2);
  return sub_1A594CED0();
}

void sub_1A5700CDC(uint64_t a1, uint64_t a2)
{
  static SectionSpecifier.Kind.__derived_enum_equals(_:_:)(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), *(_QWORD *)a2, *(_BYTE *)(a2 + 8));
}

BOOL sub_1A5700CF4(_BOOL8 *a1, uint64_t *a2)
{
  return static SectionSpecifier.Part.< infix(_:_:)(*a1, *a2);
}

BOOL sub_1A5700D00(uint64_t *a1, _BOOL8 *a2)
{
  return sub_1A5708D38(*a1, *a2);
}

BOOL sub_1A5700D0C(_BOOL8 *a1, uint64_t *a2)
{
  return sub_1A570DF60(*a1, *a2);
}

BOOL sub_1A5700D18(uint64_t *a1, _BOOL8 *a2)
{
  return sub_1A570E004(*a1, *a2);
}

uint64_t SectionSpecifier.Part.debugDescription.getter()
{
  uint64_t v0;

  v0 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return sub_1A5682514(v0);
}

uint64_t sub_1A5700D38()
{
  return SectionSpecifier.Part.debugDescription.getter();
}

uint64_t sub_1A5700D40(uint64_t a1, uint64_t a2)
{
  return static SectionSpecifier.Kind.< infix(_:_:)(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), *(_QWORD *)a2, *(_BYTE *)(a2 + 8));
}

uint64_t sub_1A5700D58(uint64_t a1, uint64_t a2)
{
  return sub_1A5708E3C(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), *(_QWORD *)a2, *(_BYTE *)(a2 + 8));
}

uint64_t sub_1A5700D70(uint64_t a1, uint64_t a2)
{
  return sub_1A570DF7C(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), *(_QWORD *)a2, *(_BYTE *)(a2 + 8));
}

uint64_t sub_1A5700D88(uint64_t a1, uint64_t a2)
{
  return sub_1A570E0F4(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), *(_QWORD *)a2, *(_BYTE *)(a2 + 8));
}

Swift::Bool __swiftcall SectionSpecifier.Part.isSubPart(of:)(NIOIMAPCore2::SectionSpecifier::Part of)
{
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  _QWORD *v4;
  Swift::Bool result;
  uint64_t *v8;
  uint64_t *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *((_QWORD *)of.array._rawValue + 2);
  v3 = v1[2];
  if (v2 < v3)
  {
    v4 = v1;
    if ((_s12NIOIMAPCore216SectionSpecifierV4PartV23__derived_struct_equalsySbAE_AEtFZ_0(of.array._rawValue, v1) & 1) == 0
      && v2
      && v4[4] == *((_QWORD *)of.array._rawValue + 4)
      && v2 != 1
      && v3 != 1)
    {
      v8 = v4 + 5;
      v9 = (uint64_t *)((char *)of.array._rawValue + 40);
      v10 = v2 - 2;
      v11 = v3 - 2;
      do
      {
        v12 = v10;
        v14 = *v8++;
        v13 = v14;
        v15 = *v9++;
        if (v13 != v15)
          break;
        if (!v11)
          break;
        v10 = v12 - 1;
        --v11;
      }
      while (v12);
    }
  }
  OUTLINED_FUNCTION_8_1();
  return result;
}

Swift::Bool __swiftcall SectionSpecifier.Part.isChildPart(of:)(NIOIMAPCore2::SectionSpecifier::Part of)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  Swift::Bool result;

  v2 = *((_QWORD *)of.array._rawValue + 2);
  if (*(_QWORD *)(v1 + 16) == v2 + 1)
  {
    v4 = sub_1A56719B8(1, v1);
    sub_1A5700ECC((uint64_t)of.array._rawValue, (uint64_t)of.array._rawValue + 32, 0, (2 * v2) | 1, v4, v5, v6, v7);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_unknownObjectRelease();
  }
  OUTLINED_FUNCTION_17_1();
  return result;
}

uint64_t sub_1A5700ECC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  int64_t v8;
  uint64_t v9;
  uint64_t *v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  v11 = a4 >> 1;
  v12 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v8 = a8 >> 1;
  v9 = (a8 >> 1) - a7;
  if (__OFSUB__(a8 >> 1, a7))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v12 != v9)
  {
    LOBYTE(v12) = 0;
    return v12 & 1;
  }
  if (!v12 || (v10 = (uint64_t *)(a2 + 8 * a3), v10 == (uint64_t *)(a6 + 8 * a7)))
  {
    LOBYTE(v12) = 1;
    return v12 & 1;
  }
  LOBYTE(v12) = v11 == a3;
  if (v11 != a3)
  {
    v9 = a7;
    if (v11 > a3)
      goto LABEL_15;
    __break(1u);
    goto LABEL_13;
  }
  v13 = 0;
  v14 = a7;
  v9 = a7;
  while ((v12 & 1) == 0 && v8 != v9)
  {
    if (v14 < a7 || v9 >= v8)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v13 != *(_QWORD *)(a6 + 8 * v9))
      return v12 & 1;
    v13 = 0;
    ++v9;
    LOBYTE(v12) = 1;
    if (a3 != v11)
    {
      if (a3 >= v11)
        goto LABEL_27;
      LOBYTE(v12) = 0;
      v10 = (uint64_t *)(a2 + 8 * a3);
LABEL_15:
      ++a3;
      v13 = *v10;
      v14 = v9;
    }
  }
  return v12 & 1;
}

Swift::Int sub_1A5700FA4(Swift::Int a1, char a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  Swift::Int v7;
  Swift::Int v8;
  Swift::Int v9;
  char v10;
  Swift::String v11;
  int v12;
  BOOL v13;
  int v14;
  Swift::Int v15;
  char v16;
  Swift::String v17;
  uint64_t v18;
  int v19;
  Swift::Int v20;
  uint64_t v21;
  Swift::Int v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  Swift::String v26;
  uint64_t v27;
  int v28;
  Swift::Int v29;
  uint64_t v30;

  v4 = v3;
  v7 = 0;
  if ((a3 & 1) != 0)
  {
    v8 = *(unsigned int *)(v3 + 20);
    sub_1A56814E0(46, 0xE100000000000000, v3 + 8, *(_DWORD *)(v3 + 20));
    if ((v10 & 1) != 0)
    {
      v11._countAndFlagsBits = 46;
      v11._object = (void *)0xE100000000000000;
      v9 = ByteBuffer._setStringSlowpath(_:at:)(v11, v8);
    }
    v7 = v9;
    v12 = *(_DWORD *)(v3 + 20);
    v13 = __CFADD__(v12, (_DWORD)v9);
    v14 = v12 + v9;
    if (v13)
    {
      __break(1u);
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    *(_DWORD *)(v3 + 20) = v14;
  }
  if (!a2)
    goto LABEL_15;
  if (a2 != 1)
    goto LABEL_22;
  v15 = *(unsigned int *)(v3 + 20);
  OUTLINED_FUNCTION_1_19(0xD000000000000012, 0x80000001A5A0F780);
  if ((v16 & 1) != 0)
  {
    v17._countAndFlagsBits = 0xD000000000000012;
    v17._object = (void *)0x80000001A5A0F780;
    ByteBuffer._setStringSlowpath(_:at:)(v17, v15);
  }
  OUTLINED_FUNCTION_249();
  if (v13)
    goto LABEL_25;
  *(_DWORD *)(v3 + 20) = v19;
  v20 = v7 + v18;
  if (__OFADD__(v7, v18))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v21 = OUTLINED_FUNCTION_0_94();
  a1 = v20 + v21;
  if (__OFADD__(v20, v21))
  {
    __break(1u);
LABEL_15:
    v22 = *(unsigned int *)(v4 + 20);
    v23 = OUTLINED_FUNCTION_2_63();
    OUTLINED_FUNCTION_1_19(v23, v24);
    if ((v25 & 1) != 0)
    {
      v26._countAndFlagsBits = OUTLINED_FUNCTION_2_63();
      ByteBuffer._setStringSlowpath(_:at:)(v26, v22);
    }
    OUTLINED_FUNCTION_249();
    if (!v13)
    {
      *(_DWORD *)(v4 + 20) = v28;
      v29 = v7 + v27;
      if (!__OFADD__(v7, v27))
      {
        v30 = OUTLINED_FUNCTION_0_94();
        a1 = v29 + v30;
        if (!__OFADD__(v29, v30))
          return a1;
        __break(1u);
LABEL_22:
        __asm { BR              X9 }
      }
LABEL_28:
      __break(1u);
      JUMPOUT(0x1A57011E0);
    }
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  return a1;
}

unint64_t sub_1A5701204()
{
  unint64_t result;

  result = qword_1EE7A9C88;
  if (!qword_1EE7A9C88)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for SectionSpecifier, &type metadata for SectionSpecifier);
    atomic_store(result, (unint64_t *)&qword_1EE7A9C88);
  }
  return result;
}

unint64_t sub_1A5701244()
{
  unint64_t result;

  result = qword_1EE796AA0;
  if (!qword_1EE796AA0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for SectionSpecifier.Part, &type metadata for SectionSpecifier.Part);
    atomic_store(result, (unint64_t *)&qword_1EE796AA0);
  }
  return result;
}

unint64_t sub_1A5701284()
{
  unint64_t result;

  result = qword_1EE7A9C90;
  if (!qword_1EE7A9C90)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for SectionSpecifier.Kind, &type metadata for SectionSpecifier.Kind);
    atomic_store(result, (unint64_t *)&qword_1EE7A9C90);
  }
  return result;
}

uint64_t destroy for SectionSpecifier(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return sub_1A55DC738(*(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void _s12NIOIMAPCore216SectionSpecifierVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned __int8 v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A55DC724(v3, v4);
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4;
  OUTLINED_FUNCTION_8_1();
}

uint64_t assignWithCopy for SectionSpecifier(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = v2[1];
  LOBYTE(v2) = *((_BYTE *)v2 + 16);
  sub_1A55DC724(v4, v2);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = (_BYTE)v2;
  sub_1A55DC738(v5, v6);
  return a1;
}

uint64_t assignWithTake for SectionSpecifier(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  unsigned __int8 v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v4;
  sub_1A55DC738(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SectionSpecifier(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 17))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SectionSpecifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for SectionSpecifier()
{
  OUTLINED_FUNCTION_3_1();
}

void type metadata accessor for SectionSpecifier.Part()
{
  OUTLINED_FUNCTION_3_1();
}

uint64_t initializeBufferWithCopyOfBuffer for SectionSpecifier.Kind(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned __int8 v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1A55DC724(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for SectionSpecifier.Kind(uint64_t a1)
{
  return sub_1A55DC738(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for SectionSpecifier.Kind(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned __int8 v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1A55DC724(*(_QWORD *)a2, v4);
  v5 = *(_QWORD *)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_1A55DC738(v5, v6);
  return a1;
}

uint64_t assignWithTake for SectionSpecifier.Kind(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_1A55DC738(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for SectionSpecifier.Kind(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

void type metadata accessor for SectionSpecifier.Kind()
{
  OUTLINED_FUNCTION_3_1();
}

uint64_t OUTLINED_FUNCTION_0_94()
{
  uint64_t v0;
  uint64_t v1;

  return j__OUTLINED_FUNCTION_168(v1, 0, 0xE000000000000000, 32, 0xE100000000000000, 0, 0xE000000000000000, 1, v0);
}

uint64_t OUTLINED_FUNCTION_1_75()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;

  sub_1A55DC724(v1, v2);
  return v0;
}

uint64_t OUTLINED_FUNCTION_2_63()
{
  return 0x462E524544414548;
}

uint64_t OUTLINED_FUNCTION_3_49()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

void OUTLINED_FUNCTION_5_41(uint64_t a1)
{
  unsigned __int8 v1;
  uint64_t v2;

  SectionSpecifier.Kind.hash(into:)(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_13_29()
{
  return 0x524544414548;
}

void OUTLINED_FUNCTION_20_20()
{
  sub_1A569D6EC();
}

void sub_1A5701674(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;
  Swift::Int v5;
  char v6;
  Swift::String v7;
  Swift::Int v8;
  int v9;
  BOOL v10;
  int v11;
  uint64_t v12;

  if (*(_QWORD *)(a1 + 16))
  {
    v2 = v1;
    v4 = *(unsigned int *)(v1 + 20);
    sub_1A56814E0(32, 0xE100000000000000, v1 + 8, *(_DWORD *)(v1 + 20));
    if ((v6 & 1) != 0)
    {
      v7._countAndFlagsBits = 32;
      v7._object = (void *)0xE100000000000000;
      v5 = ByteBuffer._setStringSlowpath(_:at:)(v7, v4);
    }
    v8 = v5;
    v9 = *(_DWORD *)(v2 + 20);
    v10 = __CFADD__(v9, (_DWORD)v5);
    v11 = v9 + v5;
    if (v10)
    {
      __break(1u);
    }
    else
    {
      *(_DWORD *)(v2 + 20) = v11;
      sub_1A565B800(a1, 0, 0xE000000000000000, 32, 0xE100000000000000, 0, (void *)0xE000000000000000, 1, v2);
      if (__OFADD__(v8, v12))
        __break(1u);
    }
  }
}

uint64_t QResyncParameter.uidValidity.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t QResyncParameter.uidValidity.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

double (*QResyncParameter.uidValidity.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t QResyncParameter.modificationSequenceValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t QResyncParameter.modificationSequenceValue.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

double (*QResyncParameter.modificationSequenceValue.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t QResyncParameter.knownUIDs.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_1A5503BA0(v1, *(unsigned int *)(v0 + 24) | ((unint64_t)*(unsigned __int8 *)(v0 + 28) << 32));
  return v1;
}

void QResyncParameter.knownUIDs.setter()
{
  uint64_t v0;

  sub_1A5503B8C(*(_QWORD *)(v0 + 16), *(unsigned int *)(v0 + 24) | ((unint64_t)*(unsigned __int8 *)(v0 + 28) << 32));
  OUTLINED_FUNCTION_10_34();
}

double (*QResyncParameter.knownUIDs.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t QResyncParameter.sequenceMatchData.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void);

  v0 = OUTLINED_FUNCTION_9_18();
  sub_1A5666AD8(v0, v1, v2, v3, v4);
  return OUTLINED_FUNCTION_9_18();
}

void QResyncParameter.sequenceMatchData.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unsigned int v6;

  v6 = *(_DWORD *)(v2 + 56);
  v5 = v2 + 56;
  sub_1A5666AD8(*(_QWORD *)(v5 - 24), *(_QWORD *)(v5 - 16), *(_QWORD *)(v5 - 8), v6 | ((unint64_t)*(unsigned __int8 *)(v5 + 4) << 32), (void (*)(void))sub_1A5503B8C);
  *(_QWORD *)(v5 - 24) = a1;
  *(_QWORD *)(v5 - 16) = a2;
  OUTLINED_FUNCTION_10_34();
  OUTLINED_FUNCTION_17_1();
}

double (*QResyncParameter.sequenceMatchData.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t QResyncParameter.init(uidValidity:modificationSequenceValue:knownUIDs:sequenceMatchData:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  *(_DWORD *)a9 = result;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_DWORD *)(a9 + 24) = a4;
  *(_BYTE *)(a9 + 28) = BYTE4(a4);
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_DWORD *)(a9 + 56) = a8;
  *(_BYTE *)(a9 + 60) = BYTE4(a8);
  return result;
}

void QResyncParameter.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = v1;
  sub_1A594CEAC();
  sub_1A594CEB8();
  if (*(unsigned __int8 *)(v2 + 28) == 255)
  {
    sub_1A594CE94();
  }
  else
  {
    v4 = *(unsigned int *)(v2 + 24) | ((unint64_t)*(unsigned __int8 *)(v2 + 28) << 32);
    v5 = *(_QWORD *)(v2 + 16);
    sub_1A594CE94();
    sub_1A56B6298(a1, v5, v4);
  }
  if ((*(_QWORD *)(v2 + 40) & 0xFF00000000) == 0xFE00000000)
  {
    sub_1A594CE94();
    OUTLINED_FUNCTION_17_1();
  }
  else
  {
    v6 = *(unsigned int *)(v2 + 56) | ((unint64_t)*(unsigned __int8 *)(v2 + 60) << 32);
    v7 = *(_QWORD *)(v2 + 48);
    sub_1A594CE94();
    v8 = OUTLINED_FUNCTION_182();
    SequenceMatchData.hash(into:)(v8, v9, v10, v7, v6);
  }
}

uint64_t static QResyncParameter.__derived_struct_equals(_:_:)(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int32x2_t *v7;
  unint64_t v8;
  int32x2_t *v9;
  char v10;
  char v11;
  int32x2_t *v12;
  uint64_t v13;
  int32x2_t *v14;
  unint64_t v15;
  int32x2_t *v16;
  uint64_t v17;
  int32x2_t *v18;
  unint64_t v19;
  uint64_t v20;
  char v21;

  if (*(_DWORD *)result != *(_DWORD *)a2)
    return 0;
  v3 = result;
  v4 = *(_QWORD *)(result + 8);
  v5 = *(_QWORD *)(a2 + 8);
  if (((v5 | v4) & 0x8000000000000000) == 0)
  {
    if (v5 == v4)
    {
      v6 = *(unsigned int *)(a2 + 24) | ((unint64_t)*(unsigned __int8 *)(a2 + 28) << 32);
      if (*(unsigned __int8 *)(result + 28) == 255)
      {
        if (BYTE4(v6) != 255)
          return 0;
      }
      else
      {
        if (BYTE4(v6) == 255)
          return 0;
        v7 = *(int32x2_t **)(result + 16);
        v8 = *(unsigned int *)(result + 24) | ((unint64_t)*(unsigned __int8 *)(result + 28) << 32);
        v9 = *(int32x2_t **)(a2 + 16);
        sub_1A5503BA0((uint64_t)v9, *(unsigned int *)(a2 + 24) | ((unint64_t)*(unsigned __int8 *)(a2 + 28) << 32));
        sub_1A5503BA0((uint64_t)v7, v8);
        sub_1A56B614C(v7, v8, v9, v6 & 0xFFFFFFFFFFLL);
        v11 = v10;
        sub_1A5503B8C((uint64_t)v9, v6);
        sub_1A5503B8C((uint64_t)v7, v8);
        if ((v11 & 1) == 0)
          return 0;
      }
      v12 = *(int32x2_t **)(v3 + 32);
      v13 = *(_QWORD *)(v3 + 40);
      v14 = *(int32x2_t **)(v3 + 48);
      v15 = *(unsigned int *)(v3 + 56) | ((unint64_t)*(unsigned __int8 *)(v3 + 60) << 32);
      v16 = *(int32x2_t **)(a2 + 32);
      v17 = *(_QWORD *)(a2 + 40);
      v18 = *(int32x2_t **)(a2 + 48);
      v19 = *(unsigned int *)(a2 + 56) | ((unint64_t)*(unsigned __int8 *)(a2 + 60) << 32);
      v20 = v17 & 0xFF00000000;
      if ((v13 & 0xFF00000000) == 0xFE00000000)
      {
        if (v20 == 0xFE00000000)
          return 1;
        goto LABEL_13;
      }
      if (v20 == 0xFE00000000)
      {
LABEL_13:
        OUTLINED_FUNCTION_0_95();
        OUTLINED_FUNCTION_1_76();
        OUTLINED_FUNCTION_0_95();
        OUTLINED_FUNCTION_1_76();
        return 0;
      }
      OUTLINED_FUNCTION_0_95();
      OUTLINED_FUNCTION_0_95();
      OUTLINED_FUNCTION_1_76();
      v21 = static SequenceMatchData.__derived_struct_equals(_:_:)(v12, v13 & 0xFFFFFFFFFFLL, v14, v15 & 0xFFFFFFFFFFLL, v16, v17 & 0xFFFFFFFFFFLL, v18, v19 & 0xFFFFFFFFFFLL);
      OUTLINED_FUNCTION_2_64();
      sub_1A5503B8C((uint64_t)v18, v19);
      sub_1A5503B8C((uint64_t)v12, v13);
      sub_1A5503B8C((uint64_t)v14, v15);
      sub_1A5666AD8((uint64_t)v12, v13, (uint64_t)v14, v15, (void (*)(void))sub_1A5503B8C);
      if ((v21 & 1) != 0)
        return 1;
    }
    return 0;
  }
  __break(1u);
  return result;
}

void QResyncParameter.hashValue.getter()
{
  _BYTE v0[72];

  OUTLINED_FUNCTION_15_10();
  QResyncParameter.hash(into:)((uint64_t)v0);
  sub_1A594CED0();
  OUTLINED_FUNCTION_8_7();
}

uint64_t sub_1A5701BE8()
{
  _BYTE v1[72];

  sub_1A594CE64();
  QResyncParameter.hash(into:)((uint64_t)v1);
  return sub_1A594CED0();
}

void SelectParameter.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  unint64_t v20;

  v9 = OUTLINED_FUNCTION_9_36(a1, a2, a3, a4, a5, a6, a7, a8, v17);
  if (!(v20 >> 62))
  {
    OUTLINED_FUNCTION_9_20();
    sub_1A594B1D8();
    if (BYTE5(v20) == 255)
    {
      sub_1A594CE94();
      return;
    }
    sub_1A594CE94();
    if ((v20 & 0x10000000000) != 0)
    {
      OUTLINED_FUNCTION_9_20();
      sub_1A566658C(v19, v20, 1);
      sub_1A569428C();
    }
    else
    {
      OUTLINED_FUNCTION_9_20();
      if (BYTE4(v20) != 255)
      {
        OUTLINED_FUNCTION_9_20();
        sub_1A56B6298(v8, v19, v20 & 0xFFFFFFFFFFLL);
        return;
      }
      OUTLINED_FUNCTION_9_20();
    }
    OUTLINED_FUNCTION_117_0();
    return;
  }
  if (v20 >> 62 == 1)
  {
    OUTLINED_FUNCTION_4_45((uint64_t)v9, v10, v11, v12, v13, v14, v15, v16, v18);
    OUTLINED_FUNCTION_9_20();
    QResyncParameter.hash(into:)(v8);
  }
  else
  {
    OUTLINED_FUNCTION_9_20();
  }
}

uint64_t static SelectParameter.__derived_enum_equals(_:_:)(__int128 *a1)
{
  _OWORD *v1;
  uint64_t v2;
  _OWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  __int128 v12;
  int32x2_t *v13;
  uint64_t v14;
  int32x2_t *v15;
  BOOL v16;
  int8x16_t v17;
  int8x16_t v18;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  unint64_t v29;
  _BYTE v30[64];
  __int128 v31;
  __int128 v32;
  _OWORD v33[2];
  _BYTE v34[32];
  _BYTE v35[29];

  v1 = sub_1A5702374(a1, &v31);
  v2 = *((_QWORD *)&v32 + 1);
  if (!(*((_QWORD *)&v32 + 1) >> 62))
  {
    *((_QWORD *)&v32 + 1) &= 0x3FFFFFFFFFFFFFFFuLL;
    v12 = v31;
    v13 = (int32x2_t *)v32;
    OUTLINED_FUNCTION_17_27((uint64_t)v1, v34);
    v14 = *(_QWORD *)&v34[24];
    if (*(_QWORD *)&v34[24] >> 62)
      goto LABEL_20;
    v15 = *(int32x2_t **)&v34[16];
    v16 = (_QWORD)v12 == *(_QWORD *)v34 && *((_QWORD *)&v12 + 1) == *(_QWORD *)&v34[8];
    if (!v16 && (sub_1A594CD38() & 1) == 0)
      goto LABEL_20;
    if (BYTE5(v2) == 255)
    {
      if (BYTE5(v14) != 255)
        goto LABEL_20;
    }
    else
    {
      if (BYTE5(v14) == 255)
        goto LABEL_20;
      if ((v2 & 0x10000000000) != 0)
      {
        if ((v14 & 0x10000000000) == 0)
          goto LABEL_20;
        sub_1A5689E98();
        if ((v21 & 1) == 0)
          goto LABEL_20;
      }
      else
      {
        if ((v14 & 0x10000000000) != 0)
          goto LABEL_20;
        v20 = v14 & 0xFF00000000;
        if ((~v2 & 0xFF00000000) != 0)
        {
          if (v20 == 0xFF00000000)
            goto LABEL_20;
          sub_1A566676C((uint64_t)v15, v14);
          v22 = OUTLINED_FUNCTION_182();
          sub_1A566676C(v22, v23);
          sub_1A56B614C(v13, v2 & 0xFFFFFFFFFFLL, v15, v14 & 0xFFFFFFFFFFLL);
          v25 = v24;
          OUTLINED_FUNCTION_117_0();
          v26 = OUTLINED_FUNCTION_182();
          sub_1A56667BC(v26, v27);
          if ((v25 & 1) == 0)
            goto LABEL_20;
        }
        else if (v20 != 0xFF00000000)
        {
          goto LABEL_20;
        }
      }
    }
LABEL_18:
    v11 = 1;
    return v11 & 1;
  }
  if (*((_QWORD *)&v32 + 1) >> 62 != 1)
  {
    OUTLINED_FUNCTION_17_27((uint64_t)v1, v34);
    if (*(_QWORD *)&v34[24] >> 62 != 2)
      goto LABEL_20;
    if (*(unsigned int *)&v35[24] | ((unint64_t)v35[28] << 32))
      goto LABEL_20;
    if (*(_QWORD *)&v34[24] != 0x8000000000000000)
      goto LABEL_20;
    v17 = vorrq_s8(*(int8x16_t *)v35, *(int8x16_t *)&v34[8]);
    v18 = vextq_s8(v17, v17, 8uLL);
    if (*(_QWORD *)&vorr_s8(*(int8x8_t *)v18.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v18, v18, 8uLL)) | *(_QWORD *)&v35[16] | *(_QWORD *)v34)
      goto LABEL_20;
    goto LABEL_18;
  }
  *((_QWORD *)&v32 + 1) &= 0x3FFFFFFFFFFFFFFFuLL;
  *(_OWORD *)&v34[16] = v32;
  *(_OWORD *)v35 = v33[0];
  *(_OWORD *)&v35[13] = *(_OWORD *)((char *)v33 + 13);
  *(_OWORD *)v34 = v31;
  v3 = OUTLINED_FUNCTION_17_27((uint64_t)v1, &v28);
  if (v29 >> 62 != 1)
  {
LABEL_20:
    v11 = 0;
    return v11 & 1;
  }
  OUTLINED_FUNCTION_4_45((uint64_t)v3, v4, v5, v6, v7, v8, v9, v10, v28);
  v11 = static QResyncParameter.__derived_struct_equals(_:_:)((uint64_t)v34, (uint64_t)v30);
  return v11 & 1;
}

void SelectParameter.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[72];

  OUTLINED_FUNCTION_15_10();
  SelectParameter.hash(into:)((uint64_t)v7, v0, v1, v2, v3, v4, v5, v6);
  sub_1A594CED0();
  OUTLINED_FUNCTION_8_7();
}

void sub_1A5701F94()
{
  __int128 *v0;
  _OWORD v1[4];

  sub_1A5702374(v0, v1);
  SelectParameter.hashValue.getter();
}

void sub_1A5701FC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;

  OUTLINED_FUNCTION_9_36(a1, a2, a3, a4, a5, a6, a7, a8, v16);
  SelectParameter.hash(into:)(v8, v9, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_1A5701FF8()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[72];
  _OWORD v10[4];

  sub_1A5702374(v0, v10);
  sub_1A594CE64();
  SelectParameter.hash(into:)((uint64_t)v9, v1, v2, v3, v4, v5, v6, v7);
  return sub_1A594CED0();
}

uint64_t sub_1A5702048(__int128 *a1, __int128 *a2)
{
  __int128 v4[4];
  _OWORD v5[4];

  sub_1A5702374(a1, v4);
  sub_1A5702374(a2, v5);
  return static SelectParameter.__derived_enum_equals(_:_:)(v4) & 1;
}

void sub_1A5702090(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;
  Swift::Int v5;
  Swift::Int v6;
  char v7;
  char v8;
  int v9;
  BOOL v10;
  int v11;
  uint64_t v12;
  Swift::Int v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  Swift::Int v17;
  char v18;
  Swift::Int v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  Swift::Int v24;
  Swift::String v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Swift::Int v38;
  char v39;
  int v40;
  int v41;
  Swift::String v42[3];
  uint64_t v43;

  v2 = v1;
  v42[0]._countAndFlagsBits = 0x20434E5953455251;
  v42[0]._object = (void *)0xE900000000000028;
  sub_1A594CC9C();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  v4 = *(unsigned int *)(v1 + 20);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A56814E0(0x20434E5953455251, 0xE900000000000028, v1 + 8, v4);
  v6 = v5;
  v8 = v7;
  swift_bridgeObjectRelease();
  if ((v8 & 1) != 0)
    v6 = ByteBuffer._setStringSlowpath(_:at:)(v42[0], v4);
  swift_bridgeObjectRelease();
  v9 = *(_DWORD *)(v1 + 20);
  v10 = __CFADD__(v9, (_DWORD)v6);
  v11 = v9 + v6;
  if (v10)
  {
    __break(1u);
    goto LABEL_19;
  }
  *(_DWORD *)(v1 + 20) = v11;
  v12 = sub_1A56E14D4();
  v13 = v6 + v12;
  if (__OFADD__(v6, v12))
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (*(unsigned __int8 *)(a1 + 28) == 255)
  {
    v14 = 0;
  }
  else
  {
    v15 = *(_QWORD *)(a1 + 16);
    v16 = *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int8 *)(a1 + 28) << 32);
    OUTLINED_FUNCTION_12_29();
    OUTLINED_FUNCTION_12_29();
    swift_retain();
    swift_retain();
    OUTLINED_FUNCTION_3_37(32);
    if ((v18 & 1) != 0)
      v17 = OUTLINED_FUNCTION_0_50(32);
    v19 = v17;
    v20 = *(_DWORD *)(v1 + 20);
    v10 = __CFADD__(v20, (_DWORD)v17);
    v21 = v20 + v17;
    if (v10)
      goto LABEL_24;
    *(_DWORD *)(v1 + 20) = v21;
    sub_1A54E4334(v15, v16, SBYTE4(v16));
    sub_1A57087E0(v15, v16, 0, 0xE000000000000000, 44, 0xE100000000000000, 0, 0xE000000000000000, 0);
    v23 = v22;
    OUTLINED_FUNCTION_2_64();
    OUTLINED_FUNCTION_2_64();
    swift_release();
    swift_release();
    OUTLINED_FUNCTION_2_64();
    v14 = v19 + v23;
    if (__OFADD__(v19, v23))
    {
LABEL_25:
      __break(1u);
      return;
    }
  }
  v24 = v13 + v14;
  if (__OFADD__(v13, v14))
    goto LABEL_20;
  v25 = *(Swift::String *)(v2 + 16);
  v42[0] = *(Swift::String *)v2;
  v42[1] = v25;
  v42[2] = *(Swift::String *)(v2 + 32);
  v43 = *(_QWORD *)(v2 + 48);
  v26 = *(_QWORD *)(a1 + 32);
  v27 = *(_QWORD *)(a1 + 40);
  v28 = sub_1A56BFF80((uint64_t)v42);
  OUTLINED_FUNCTION_5_42(v28, v29, v30, v31, (void (*)(void))sub_1A5503BA0);
  sub_1A56663C0(v26, v27);
  v33 = v32;
  v34 = sub_1A56BFFB4((uint64_t)v42);
  OUTLINED_FUNCTION_5_42(v34, v35, v36, v37, (void (*)(void))sub_1A5503B8C);
  if (__OFADD__(v24, v33))
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  OUTLINED_FUNCTION_3_37(41);
  if ((v39 & 1) != 0)
    v38 = OUTLINED_FUNCTION_0_50(41);
  v40 = *(_DWORD *)(v2 + 20);
  v10 = __CFADD__(v40, (_DWORD)v38);
  v41 = v40 + v38;
  if (v10)
    goto LABEL_22;
  *(_DWORD *)(v2 + 20) = v41;
  if (__OFADD__(v24 + v33, v38))
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
}

_OWORD *sub_1A5702374(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  *(_OWORD *)((char *)a2 + 45) = *(__int128 *)((char *)a1 + 45);
  a2[1] = v3;
  a2[2] = v4;
  *a2 = v2;
  return a2;
}

unint64_t sub_1A5702398()
{
  unint64_t result;

  result = qword_1EE7A9C98;
  if (!qword_1EE7A9C98)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for QResyncParameter, &type metadata for QResyncParameter);
    atomic_store(result, (unint64_t *)&qword_1EE7A9C98);
  }
  return result;
}

unint64_t sub_1A57023D8()
{
  unint64_t result;

  result = qword_1EE7A9CA0;
  if (!qword_1EE7A9CA0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for SelectParameter, &type metadata for SelectParameter);
    atomic_store(result, (unint64_t *)&qword_1EE7A9CA0);
  }
  return result;
}

uint64_t destroy for QResyncParameter(uint64_t result)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v1 = result;
  if (*(unsigned __int8 *)(result + 28) != 255)
  {
    v2 = *(unsigned int *)(result + 24) | ((unint64_t)*(unsigned __int8 *)(result + 28) << 32);
    result = sub_1A54E3458(*(_QWORD *)(result + 16), v2, SBYTE4(v2));
  }
  v3 = *(_QWORD *)(v1 + 40);
  if ((v3 & 0xFF00000000) != 0xFE00000000)
  {
    if ((v3 & 0xFF00000000) != 0xFF00000000)
      result = sub_1A54E3458(*(_QWORD *)(v1 + 32), v3, SBYTE4(v3));
    if (*(unsigned __int8 *)(v1 + 60) != 255)
    {
      v4 = *(unsigned int *)(v1 + 56) | ((unint64_t)*(unsigned __int8 *)(v1 + 60) << 32);
      return sub_1A54E3458(*(_QWORD *)(v1 + 48), v4, SBYTE4(v4));
    }
  }
  return result;
}

uint64_t initializeWithCopy for QResyncParameter(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = (uint64_t *)(a2 + 16);
  if (*(unsigned __int8 *)(a2 + 28) == 255)
  {
    *(_QWORD *)(a1 + 16) = *v4;
    *(_QWORD *)(a1 + 21) = *(_QWORD *)(a2 + 21);
  }
  else
  {
    v5 = *(unsigned int *)(a2 + 24) | ((unint64_t)*(unsigned __int8 *)(a2 + 28) << 32);
    v6 = *v4;
    sub_1A54E4334(*v4, v5, SBYTE4(v5));
    *(_QWORD *)(a1 + 16) = v6;
    *(_DWORD *)(a1 + 24) = v5;
    *(_BYTE *)(a1 + 28) = BYTE4(v5);
  }
  v7 = (_OWORD *)(a1 + 32);
  v8 = (uint64_t *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  if ((v9 & 0xFF00000000) == 0xFE00000000)
  {
    *v7 = *(_OWORD *)v8;
    *(_OWORD *)(a1 + 45) = *(_OWORD *)(a2 + 45);
  }
  else
  {
    if ((v9 & 0xFF00000000) == 0xFF00000000)
    {
      *(_QWORD *)v7 = *v8;
      *(_QWORD *)(a1 + 37) = *(_QWORD *)(a2 + 37);
    }
    else
    {
      v10 = *v8;
      sub_1A54E4334(*v8, *(_QWORD *)(a2 + 40), SBYTE4(v9));
      *(_QWORD *)(a1 + 32) = v10;
      *(_DWORD *)(a1 + 40) = v9;
      *(_BYTE *)(a1 + 44) = BYTE4(v9);
    }
    v11 = (uint64_t *)(a2 + 48);
    if (*(unsigned __int8 *)(a2 + 60) == 255)
    {
      *(_QWORD *)(a1 + 48) = *v11;
      *(_QWORD *)(a1 + 53) = *(_QWORD *)(a2 + 53);
    }
    else
    {
      v12 = *(unsigned int *)(a2 + 56) | ((unint64_t)*(unsigned __int8 *)(a2 + 60) << 32);
      v13 = *v11;
      sub_1A54E4334(*v11, v12, SBYTE4(v12));
      *(_QWORD *)(a1 + 48) = v13;
      *(_DWORD *)(a1 + 56) = v12;
      *(_BYTE *)(a1 + 60) = BYTE4(v12);
    }
  }
  return a1;
}

uint64_t assignWithCopy for QResyncParameter(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t *v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _OWORD *v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t *v35;
  uint64_t *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = (uint64_t *)(a1 + 16);
  v5 = (uint64_t *)(a2 + 16);
  v6 = *(unsigned int *)(a2 + 24) | ((unint64_t)*(unsigned __int8 *)(a2 + 28) << 32);
  v7 = *(_BYTE *)(a2 + 28);
  if (*(unsigned __int8 *)(a1 + 28) == 255)
  {
    if (BYTE4(v6) == 255)
    {
      v8 = *v5;
      *(_QWORD *)(a1 + 21) = *(_QWORD *)(a2 + 21);
      *v4 = v8;
    }
    else
    {
      v10 = *v5;
      sub_1A54E4334(*v5, *(unsigned int *)(a2 + 24) | ((unint64_t)*(unsigned __int8 *)(a2 + 28) << 32), SBYTE4(v6));
      *(_QWORD *)(a1 + 16) = v10;
      *(_DWORD *)(a1 + 24) = v6;
      *(_BYTE *)(a1 + 28) = v7;
    }
  }
  else if (BYTE4(v6) == 255)
  {
    sub_1A5510284(a1 + 16, (uint64_t *)&unk_1EE796DB0);
    v9 = *(uint64_t *)((char *)v5 + 5);
    *v4 = *v5;
    *(uint64_t *)((char *)v4 + 5) = v9;
  }
  else
  {
    v11 = *v5;
    sub_1A54E4334(*v5, *(unsigned int *)(a2 + 24) | ((unint64_t)*(unsigned __int8 *)(a2 + 28) << 32), SBYTE4(v6));
    v12 = *(_QWORD *)(a1 + 16);
    v13 = *(unsigned int *)(a1 + 24);
    *(_QWORD *)(a1 + 16) = v11;
    *(_DWORD *)(a1 + 24) = v6;
    v14 = *(_BYTE *)(a1 + 28);
    *(_BYTE *)(a1 + 28) = v7;
    sub_1A54E3458(v12, v13, v14);
  }
  v15 = (_OWORD *)(a1 + 32);
  v16 = (uint64_t *)(a2 + 32);
  v17 = (unint64_t)*(unsigned __int8 *)(a1 + 44) << 32;
  v18 = *(_QWORD *)(a2 + 40);
  v19 = v18 & 0xFF00000000;
  if (v17 == 0xFE00000000)
  {
    if (v19 == 0xFE00000000)
    {
      v20 = *(_OWORD *)v16;
      *(_OWORD *)(a1 + 45) = *(_OWORD *)(a2 + 45);
      *v15 = v20;
    }
    else
    {
      if (v19 == 0xFF00000000)
      {
        v22 = *v16;
        *(_QWORD *)(a1 + 37) = *(_QWORD *)(a2 + 37);
        *(_QWORD *)v15 = v22;
      }
      else
      {
        v24 = *v16;
        sub_1A54E4334(*v16, *(_QWORD *)(a2 + 40), SBYTE4(v18));
        *(_QWORD *)(a1 + 32) = v24;
        *(_DWORD *)(a1 + 40) = v18;
        *(_BYTE *)(a1 + 44) = BYTE4(v18);
      }
      v25 = (uint64_t *)(a2 + 48);
      if (*(unsigned __int8 *)(a2 + 60) == 255)
      {
        v26 = *v25;
        *(_QWORD *)(a1 + 53) = *(_QWORD *)(a2 + 53);
        *(_QWORD *)(a1 + 48) = v26;
      }
      else
      {
        v28 = *(unsigned int *)(a2 + 56) | ((unint64_t)*(unsigned __int8 *)(a2 + 60) << 32);
        v29 = *v25;
        sub_1A54E4334(*v25, v28, SBYTE4(v28));
        *(_QWORD *)(a1 + 48) = v29;
        *(_DWORD *)(a1 + 56) = v28;
        *(_BYTE *)(a1 + 60) = BYTE4(v28);
      }
    }
  }
  else if (v19 == 0xFE00000000)
  {
    sub_1A5702984(a1 + 32);
    v21 = *(_OWORD *)(a2 + 45);
    *v15 = *(_OWORD *)v16;
    *(_OWORD *)(a1 + 45) = v21;
  }
  else
  {
    if (v17 == 0xFF00000000)
    {
      if (v19 == 0xFF00000000)
      {
        v23 = *v16;
        *(_QWORD *)(a1 + 37) = *(_QWORD *)(a2 + 37);
        *(_QWORD *)v15 = v23;
      }
      else
      {
        v30 = *v16;
        sub_1A54E4334(*v16, *(_QWORD *)(a2 + 40), SBYTE4(v18));
        *(_QWORD *)(a1 + 32) = v30;
        *(_DWORD *)(a1 + 40) = v18;
        *(_BYTE *)(a1 + 44) = BYTE4(v18);
      }
    }
    else if (v19 == 0xFF00000000)
    {
      sub_1A5510284(a1 + 32, (uint64_t *)&unk_1EE7A0408);
      v27 = *(_QWORD *)(a2 + 37);
      *(_QWORD *)v15 = *v16;
      *(_QWORD *)(a1 + 37) = v27;
    }
    else
    {
      v31 = *v16;
      sub_1A54E4334(*v16, *(_QWORD *)(a2 + 40), SBYTE4(v18));
      v32 = *(_QWORD *)(a1 + 32);
      v33 = *(unsigned int *)(a1 + 40);
      *(_QWORD *)(a1 + 32) = v31;
      *(_DWORD *)(a1 + 40) = v18;
      v34 = *(_BYTE *)(a1 + 44);
      *(_BYTE *)(a1 + 44) = BYTE4(v18);
      sub_1A54E3458(v32, v33, v34);
    }
    v35 = (uint64_t *)(a1 + 48);
    v36 = (uint64_t *)(a2 + 48);
    v37 = *(unsigned int *)(a2 + 56) | ((unint64_t)*(unsigned __int8 *)(a2 + 60) << 32);
    if (*(unsigned __int8 *)(a1 + 60) == 255)
    {
      if (BYTE4(v37) == 255)
      {
        v38 = *v36;
        *(_QWORD *)(a1 + 53) = *(uint64_t *)((char *)v36 + 5);
        *v35 = v38;
      }
      else
      {
        v40 = *v36;
        sub_1A54E4334(*v36, v37, SBYTE4(v37));
        *(_QWORD *)(a1 + 48) = v40;
        *(_DWORD *)(a1 + 56) = v37;
        *(_BYTE *)(a1 + 60) = BYTE4(v37);
      }
    }
    else if (BYTE4(v37) == 255)
    {
      sub_1A5510284(a1 + 48, (uint64_t *)&unk_1EE7A0408);
      v39 = *(uint64_t *)((char *)v36 + 5);
      *v35 = *v36;
      *(_QWORD *)(a1 + 53) = v39;
    }
    else
    {
      v41 = *v36;
      sub_1A54E4334(*v36, v37, SBYTE4(v37));
      v42 = *(_QWORD *)(a1 + 48);
      v43 = *(unsigned int *)(a1 + 56);
      *(_QWORD *)(a1 + 48) = v41;
      *(_DWORD *)(a1 + 56) = v37;
      v44 = *(_BYTE *)(a1 + 60);
      *(_BYTE *)(a1 + 60) = BYTE4(v37);
      sub_1A54E3458(v42, v43, v44);
    }
  }
  return a1;
}

uint64_t sub_1A5702984(uint64_t a1)
{
  destroy for SequenceMatchData(a1);
  return a1;
}

__n128 __swift_memcpy61_8_0(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 45) = *(_OWORD *)(a2 + 45);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for QResyncParameter(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  _QWORD *v5;
  unsigned __int8 v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  unsigned __int8 v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = (_QWORD *)(a1 + 16);
  v5 = (_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a1 + 28);
  if (v6 == 255)
    goto LABEL_4;
  v7 = *(unsigned int *)(a2 + 24) | ((unint64_t)*(unsigned __int8 *)(a2 + 28) << 32);
  if (HIDWORD(v7) > 0xFE)
  {
    sub_1A5510284(a1 + 16, (uint64_t *)&unk_1EE796DB0);
LABEL_4:
    *v4 = *v5;
    *(_QWORD *)((char *)v4 + 5) = *(_QWORD *)((char *)v5 + 5);
    goto LABEL_6;
  }
  v8 = *(unsigned int *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *v5;
  *(_DWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 28) = BYTE4(v7);
  sub_1A54E3458(v9, v8, v6);
LABEL_6:
  v10 = (_OWORD *)(a1 + 32);
  v11 = (_OWORD *)(a2 + 32);
  v12 = *(_QWORD *)(a1 + 40);
  if ((v12 & 0xFF00000000) == 0xFE00000000)
  {
LABEL_9:
    *v10 = *v11;
    *(_OWORD *)(a1 + 45) = *(_OWORD *)(a2 + 45);
    return a1;
  }
  v13 = *(_QWORD *)(a2 + 40);
  if ((v13 & 0xFF00000000) == 0xFE00000000)
  {
    sub_1A5702984(a1 + 32);
    goto LABEL_9;
  }
  if ((v12 & 0xFF00000000) != 0xFF00000000)
  {
    if ((v13 & 0xFF00000000) != 0xFF00000000)
    {
      v14 = *(_QWORD *)(a1 + 32);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)v11;
      *(_DWORD *)(a1 + 40) = v13;
      *(_BYTE *)(a1 + 44) = BYTE4(v13);
      sub_1A54E3458(v14, v12, SBYTE4(v12));
      goto LABEL_15;
    }
    sub_1A5510284(a1 + 32, (uint64_t *)&unk_1EE7A0408);
  }
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_QWORD *)(a1 + 37) = *(_QWORD *)(a2 + 37);
LABEL_15:
  v15 = (_QWORD *)(a2 + 48);
  v16 = *(_BYTE *)(a1 + 60);
  if (v16 != 255)
  {
    v17 = *(unsigned int *)(a2 + 56) | ((unint64_t)*(unsigned __int8 *)(a2 + 60) << 32);
    if (HIDWORD(v17) <= 0xFE)
    {
      v18 = *(unsigned int *)(a1 + 56);
      v19 = *(_QWORD *)(a1 + 48);
      *(_QWORD *)(a1 + 48) = *v15;
      *(_DWORD *)(a1 + 56) = v17;
      *(_BYTE *)(a1 + 60) = BYTE4(v17);
      sub_1A54E3458(v19, v18, v16);
      return a1;
    }
    sub_1A5510284(a1 + 48, (uint64_t *)&unk_1EE7A0408);
  }
  *(_QWORD *)(a1 + 48) = *v15;
  *(_QWORD *)(a1 + 53) = *(_QWORD *)(a2 + 53);
  return a1;
}

uint64_t getEnumTagSinglePayload for QResyncParameter(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFD && *(_BYTE *)(a1 + 61))
    {
      v2 = *(_DWORD *)a1 + 252;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 28);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = (v3 ^ 0xFF) - 1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for QResyncParameter(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 60) = 0;
    *(_DWORD *)(result + 56) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 61) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 61) = 0;
    if (a2)
      *(_BYTE *)(result + 28) = ~(_BYTE)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for QResyncParameter()
{
  return &type metadata for QResyncParameter;
}

void destroy for SelectParameter(uint64_t a1)
{
  sub_1A56669A0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(unsigned int *)(a1 + 56) | ((unint64_t)*(unsigned __int8 *)(a1 + 60) << 32));
}

uint64_t initializeWithCopy for SelectParameter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(unsigned __int8 *)(a2 + 60);
  v11 = *(unsigned int *)(a2 + 56);
  sub_1A5666A3C(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v11 | (v10 << 32));
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_BYTE *)(a1 + 60) = v10;
  *(_DWORD *)(a1 + 56) = v11;
  return a1;
}

uint64_t assignWithCopy for SelectParameter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(unsigned __int8 *)(a2 + 60);
  v11 = *(unsigned int *)(a2 + 56);
  sub_1A5666A3C(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v11 | (v10 << 32));
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(unsigned int *)(a1 + 56) | ((unint64_t)*(unsigned __int8 *)(a1 + 60) << 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_DWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 60) = v10;
  sub_1A56669A0(v12, v13, v14, v15, v16, v17, v18, v19);
  return a1;
}

uint64_t assignWithTake for SelectParameter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  __int128 v14;

  v3 = *(_QWORD *)(a2 + 48);
  v4 = *(_BYTE *)(a2 + 60);
  v5 = *(_DWORD *)(a2 + 56);
  v6 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  v12 = *(_QWORD *)(a1 + 48);
  v13 = *(unsigned int *)(a1 + 56) | ((unint64_t)*(unsigned __int8 *)(a1 + 60) << 32);
  v14 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v14;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = v3;
  *(_DWORD *)(a1 + 56) = v5;
  *(_BYTE *)(a1 + 60) = v4;
  sub_1A56669A0(v6, v8, v7, v9, v10, v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for SelectParameter(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0xFFFE && *(_BYTE *)(a1 + 61))
    {
      v2 = *(_DWORD *)a1 + 65533;
    }
    else
    {
      v2 = ((*(unsigned __int16 *)(a1 + 30) >> 14) & 0xFFFF0003 | (4 * (*(_WORD *)(a1 + 30) & 0x3FFF))) ^ 0xFFFF;
      if (v2 >= 0xFFFD)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for SelectParameter(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFFFD)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 60) = 0;
    *(_DWORD *)(result + 56) = 0;
    *(_QWORD *)result = a2 - 65534;
    if (a3 >= 0xFFFE)
      *(_BYTE *)(result + 61) = 1;
  }
  else
  {
    if (a3 >= 0xFFFE)
      *(_BYTE *)(result + 61) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 0;
      *(_QWORD *)(result + 24) = (unint64_t)(((unsigned __int16)-(__int16)a2 >> 2) - (a2 << 14)) << 48;
      *(_QWORD *)(result + 40) = 0;
      *(_QWORD *)(result + 48) = 0;
      *(_QWORD *)(result + 32) = 0;
      *(_QWORD *)(result + 53) = 0;
    }
  }
  return result;
}

uint64_t sub_1A5702EF4(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 24) >> 62;
  if (v1 <= 1)
    return v1;
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1A5702F10(uint64_t result)
{
  *(_QWORD *)(result + 24) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_1A5702F20(uint64_t result, unsigned int a2)
{
  if (a2 < 2)
  {
    *(_WORD *)(result + 30) = (_WORD)a2 << 14;
  }
  else
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0x8000000000000000;
    *(_QWORD *)(result + 40) = 0;
    *(_QWORD *)(result + 48) = 0;
    *(_QWORD *)(result + 32) = 0;
    *(_QWORD *)(result + 53) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SelectParameter()
{
  return &type metadata for SelectParameter;
}

void OUTLINED_FUNCTION_0_95()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void);

  sub_1A5666AD8(v0, v1, v2, v3, v4);
}

void OUTLINED_FUNCTION_1_76()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void);

  sub_1A5666AD8(v2, v3, v0, v1, v4);
}

uint64_t OUTLINED_FUNCTION_2_64()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1A5503B8C(v0, v1);
}

__n128 OUTLINED_FUNCTION_4_45(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9)
{
  return (__n128)a9;
}

void OUTLINED_FUNCTION_5_42(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1A5666AD8(v5, v7, v6, v8, a5);
}

_OWORD *OUTLINED_FUNCTION_9_36(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9)
{
  __int128 *v9;

  return sub_1A5702374(v9, &a9);
}

void OUTLINED_FUNCTION_10_34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 - 8) = v2;
  *(_BYTE *)(v1 + 4) = BYTE4(v0);
  *(_DWORD *)v1 = v0;
}

uint64_t OUTLINED_FUNCTION_12_29()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1A5503BA0(v0, v1);
}

_OWORD *OUTLINED_FUNCTION_17_27(uint64_t a1, _OWORD *a2)
{
  __int128 *v2;

  return sub_1A5702374(v2, a2);
}

void sub_1A5703008(int a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  unint64_t v5;
  void *v6;
  Swift::Int v7;
  char v8;
  Swift::String v9;
  int v10;
  BOOL v11;
  int v12;
  int v13;

  v2 = v1;
  v13 = a1;
  v3 = &v13;
  v4 = sub_1A594CC9C();
  v6 = (void *)v5;
  v7 = *(unsigned int *)(v2 + 20);
  OUTLINED_FUNCTION_22_1(v4, v5, v2 + 8, *(_DWORD *)(v2 + 20));
  if ((v8 & 1) != 0)
  {
    v9._countAndFlagsBits = v4;
    v9._object = v6;
    LODWORD(v3) = v2 + 8;
    ByteBuffer._setStringSlowpath(_:at:)(v9, v7);
  }
  OUTLINED_FUNCTION_2_65();
  v10 = *(_DWORD *)(v2 + 20);
  v11 = __CFADD__(v10, (_DWORD)v3);
  v12 = v10 + (_DWORD)v3;
  if (v11)
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(v2 + 20) = v12;
    OUTLINED_FUNCTION_164();
  }
}

void sub_1A570309C(int a1)
{
  int *v1;
  int *v2;
  int *v3;
  uint64_t v4;
  unint64_t v5;
  void *v6;
  Swift::Int v7;
  Swift::UInt32 v8;
  char v9;
  Swift::String v10;
  int v11;
  Swift::Int v12;
  Swift::UInt32 v13;
  int v14;
  char v15;
  Swift::String v16;
  int v17;

  v2 = v1;
  if (a1 != -1)
  {
    v17 = a1;
    v3 = &v17;
    v4 = sub_1A594CC9C();
    v6 = (void *)v5;
    v8 = v2[5];
    v2 += 5;
    v7 = v8;
    OUTLINED_FUNCTION_22_1(v4, v5, (uint64_t)(v2 - 3), v8);
    if ((v9 & 1) != 0)
    {
      v10._countAndFlagsBits = v4;
      v10._object = v6;
      LODWORD(v3) = (_DWORD)v2 - 12;
      ByteBuffer._setStringSlowpath(_:at:)(v10, v7);
    }
    OUTLINED_FUNCTION_2_65();
    v11 = *v2 + (_DWORD)v3;
    if (!__CFADD__(*v2, (_DWORD)v3))
      goto LABEL_10;
    __break(1u);
  }
  v13 = v2[5];
  v2 += 5;
  v12 = v13;
  OUTLINED_FUNCTION_22_1(42, 0xE100000000000000, (uint64_t)(v2 - 3), v13);
  if ((v15 & 1) != 0)
  {
    v16._countAndFlagsBits = 42;
    v16._object = (void *)0xE100000000000000;
    v14 = ByteBuffer._setStringSlowpath(_:at:)(v16, v12);
  }
  v11 = *v2 + v14;
  if (!__CFADD__(*v2, v14))
  {
LABEL_10:
    *v2 = v11;
    OUTLINED_FUNCTION_164();
    return;
  }
  __break(1u);
}

uint64_t SequenceNumber.rawValue.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

double (*SequenceNumber.rawValue.modify())(_QWORD)
{
  return nullsub_1;
}

void SequenceNumber.hash(into:)()
{
  sub_1A594CEAC();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1A57031C4(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x65756C6156776172 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1A5703248()
{
  return 0x65756C6156776172;
}

uint64_t sub_1A5703268@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A57031C4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1A5703290()
{
  return OUTLINED_FUNCTION_0_7();
}

uint64_t sub_1A57032A8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_56();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1A57032D0()
{
  sub_1A5703400();
  return sub_1A594CFB4();
}

uint64_t sub_1A57032F8()
{
  sub_1A5703400();
  return sub_1A594CFC0();
}

uint64_t SequenceNumber.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9CA8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A5703400();
  sub_1A594CF3C();
  sub_1A594CC60();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_1A5703400()
{
  unint64_t result;

  result = qword_1EE7A9CB0;
  if (!qword_1EE7A9CB0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59B5168, &type metadata for SequenceNumber.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A9CB0);
  }
  return result;
}

uint64_t SequenceNumber.hashValue.getter()
{
  sub_1A594CE64();
  sub_1A594CEAC();
  return sub_1A594CED0();
}

uint64_t SequenceNumber.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9CB8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t)__swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A5703400();
  sub_1A594CF18();
  if (!v1)
  {
    v7 = sub_1A594CBAC();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v7;
}

uint64_t sub_1A5703584()
{
  unsigned int *v0;

  return *v0;
}

double (*sub_1A570358C())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1A570359C()
{
  return SequenceNumber.hashValue.getter();
}

void sub_1A57035A4()
{
  SequenceNumber.hash(into:)();
}

uint64_t sub_1A57035AC@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = SequenceNumber.init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1A57035D4(_QWORD *a1)
{
  return SequenceNumber.encode(to:)(a1);
}

void sub_1A57035EC()
{
  sub_1A570E310();
}

void sub_1A57035F4(unsigned int *a1@<X0>, _DWORD *a2@<X8>)
{
  int v3;

  j_nullsub_1(*a1);
  *a2 = v3;
}

void sub_1A570361C(unsigned int *a1@<X0>, unint64_t *a2@<X8>)
{
  unsigned int *v2;

  *a2 = sub_1A56FD554(*a1, *v2);
  OUTLINED_FUNCTION_1();
}

void sub_1A5703644(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  unsigned int *v2;

  *a2 = sub_1A570E378(*a1, *v2);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1A570366C(uint64_t a1, uint64_t a2, char a3, unsigned int *a4, unsigned int *a5, _QWORD *a6)
{
  return sub_1A570E288(a1, a2, a3 & 1, *a4, *a5, *a6);
}

BOOL sub_1A5703694(int *a1, int *a2)
{
  return sub_1A56FAD7C(*a1, *a2);
}

uint64_t sub_1A57036A0(unsigned int *a1, unsigned int *a2)
{
  return sub_1A570EB70(*a1, *a2);
}

uint64_t sub_1A57036AC(unsigned int *a1, unsigned int *a2)
{
  return sub_1A570EB74(*a1, *a2);
}

BOOL sub_1A57036B8(unsigned int *a1, unsigned int *a2)
{
  return sub_1A570DFF8(*a1, *a2);
}

BOOL sub_1A57036C4(unsigned int *a1, unsigned int *a2)
{
  return sub_1A570E170(*a1, *a2);
}

unint64_t sub_1A57036D4(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1A5703720();
  a1[2] = sub_1A570375C();
  a1[3] = sub_1A5703798();
  a1[4] = sub_1A57037D4();
  a1[5] = sub_1A5703810();
  result = sub_1A570384C();
  a1[6] = result;
  return result;
}

unint64_t sub_1A5703720()
{
  unint64_t result;

  result = qword_1EE796A58;
  if (!qword_1EE796A58)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for SequenceNumber, &type metadata for SequenceNumber);
    atomic_store(result, (unint64_t *)&qword_1EE796A58);
  }
  return result;
}

unint64_t sub_1A570375C()
{
  unint64_t result;

  result = qword_1EE796A40;
  if (!qword_1EE796A40)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for SequenceNumber, &type metadata for SequenceNumber);
    atomic_store(result, (unint64_t *)&qword_1EE796A40);
  }
  return result;
}

unint64_t sub_1A5703798()
{
  unint64_t result;

  result = qword_1EE796A20;
  if (!qword_1EE796A20)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for SequenceNumber, &type metadata for SequenceNumber);
    atomic_store(result, (unint64_t *)&qword_1EE796A20);
  }
  return result;
}

unint64_t sub_1A57037D4()
{
  unint64_t result;

  result = qword_1EE796A50;
  if (!qword_1EE796A50)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for SequenceNumber, &type metadata for SequenceNumber);
    atomic_store(result, (unint64_t *)&qword_1EE796A50);
  }
  return result;
}

unint64_t sub_1A5703810()
{
  unint64_t result;

  result = qword_1EE796A28;
  if (!qword_1EE796A28)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for SequenceNumber, &type metadata for SequenceNumber);
    atomic_store(result, (unint64_t *)&qword_1EE796A28);
  }
  return result;
}

unint64_t sub_1A570384C()
{
  unint64_t result;

  result = qword_1EE796A48;
  if (!qword_1EE796A48)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for SequenceNumber, &type metadata for SequenceNumber);
    atomic_store(result, (unint64_t *)&qword_1EE796A48);
  }
  return result;
}

unint64_t sub_1A570388C()
{
  unint64_t result;

  result = qword_1EE796A38;
  if (!qword_1EE796A38)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for SequenceNumber, &type metadata for SequenceNumber);
    atomic_store(result, (unint64_t *)&qword_1EE796A38);
  }
  return result;
}

uint64_t sub_1A57038C8()
{
  return MEMORY[0x1E0DEE160];
}

unint64_t sub_1A57038D8()
{
  unint64_t result;

  result = qword_1EE796A30;
  if (!qword_1EE796A30)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for SequenceNumber, &type metadata for SequenceNumber);
    atomic_store(result, (unint64_t *)&qword_1EE796A30);
  }
  return result;
}

ValueMetadata *type metadata accessor for SequenceNumber()
{
  return &type metadata for SequenceNumber;
}

uint64_t storeEnumTagSinglePayload for SequenceNumber.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A5703968 + 4 * asc_1A59B4EA4[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A5703988 + 4 * byte_1A59B4EA9[v4]))();
}

_BYTE *sub_1A5703968(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A5703988(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A5703990(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A5703998(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A57039A0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A57039A8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SequenceNumber.CodingKeys()
{
  return &type metadata for SequenceNumber.CodingKeys;
}

unint64_t sub_1A57039C8()
{
  unint64_t result;

  result = qword_1EE7A9CC0;
  if (!qword_1EE7A9CC0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59B5140, &type metadata for SequenceNumber.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A9CC0);
  }
  return result;
}

unint64_t sub_1A5703A08()
{
  unint64_t result;

  result = qword_1EE7A9CC8;
  if (!qword_1EE7A9CC8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59B50B0, &type metadata for SequenceNumber.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A9CC8);
  }
  return result;
}

unint64_t sub_1A5703A48()
{
  unint64_t result;

  result = qword_1EE7A9CD0;
  if (!qword_1EE7A9CD0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59B50D8, &type metadata for SequenceNumber.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A9CD0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_65()
{
  return swift_bridgeObjectRelease();
}

void sub_1A5703A90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  Swift::Int v9;
  char v10;
  Swift::Int v11;
  int v12;
  Swift::Int v13;
  char v14;
  Swift::Int v15;
  int v16;
  BOOL v17;
  int v18;
  uint64_t v19;
  Swift::Int v20;
  BOOL v21;
  Swift::Int v22;
  Swift::Int v23;
  char v24;
  int v25;
  Swift::Int v26;
  Swift::Int v27;
  char v28;
  Swift::Int v29;
  int v30;
  int v31;
  uint64_t v32;
  Swift::Int v33;
  Swift::Int v34;
  char v35;
  int v36;
  int v37;

  sub_1A56814E0(40, 0xE100000000000000, v4 + 8, *(_DWORD *)(v4 + 20));
  if ((v10 & 1) != 0)
    v9 = OUTLINED_FUNCTION_0_50(40);
  v11 = v9;
  v12 = *(_DWORD *)(v4 + 20);
  if (__CFADD__(v12, (_DWORD)v9))
  {
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  *(_DWORD *)(v4 + 20) = v12 + v9;
  if (BYTE4(a2) == 255)
  {
    OUTLINED_FUNCTION_3_37(36);
    if ((v14 & 1) != 0)
      v13 = OUTLINED_FUNCTION_0_50(36);
    v15 = v13;
    v16 = *(_DWORD *)(v4 + 20);
    v17 = __CFADD__(v16, (_DWORD)v13);
    v18 = v16 + v13;
    if (v17)
      goto LABEL_34;
    *(_DWORD *)(v4 + 20) = v18;
  }
  else
  {
    v19 = sub_1A54E4334(a1, a2, SBYTE4(a2));
    OUTLINED_FUNCTION_1_77(v19, a2 & 0xFFFFFFFFFFLL);
    v15 = v20;
    sub_1A5503B8C(a1, a2);
  }
  v21 = __OFADD__(v11, v15);
  v22 = v11 + v15;
  if (v21)
    goto LABEL_28;
  OUTLINED_FUNCTION_3_37(32);
  if ((v24 & 1) != 0)
    v23 = OUTLINED_FUNCTION_0_50(32);
  v25 = *(_DWORD *)(v4 + 20);
  if (__CFADD__(v25, (_DWORD)v23))
    goto LABEL_29;
  *(_DWORD *)(v4 + 20) = v25 + v23;
  v26 = v22 + v23;
  if (__OFADD__(v22, v23))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if (BYTE4(a4) == 255)
  {
    OUTLINED_FUNCTION_3_37(36);
    if ((v28 & 1) != 0)
      v27 = OUTLINED_FUNCTION_0_50(36);
    v29 = v27;
    v30 = *(_DWORD *)(v4 + 20);
    v17 = __CFADD__(v30, (_DWORD)v27);
    v31 = v30 + v27;
    if (v17)
      goto LABEL_35;
    *(_DWORD *)(v4 + 20) = v31;
  }
  else
  {
    v32 = sub_1A54E4334(a3, a4, SBYTE4(a4));
    OUTLINED_FUNCTION_1_77(v32, a4 & 0xFFFFFFFFFFLL);
    v29 = v33;
    sub_1A5503B8C(a3, a4);
  }
  if (__OFADD__(v26, v29))
    goto LABEL_31;
  OUTLINED_FUNCTION_3_37(41);
  if ((v35 & 1) != 0)
    v34 = OUTLINED_FUNCTION_0_50(41);
  v36 = *(_DWORD *)(v4 + 20);
  v17 = __CFADD__(v36, (_DWORD)v34);
  v37 = v36 + v34;
  if (v17)
    goto LABEL_32;
  *(_DWORD *)(v4 + 20) = v37;
  if (__OFADD__(v26 + v29, v34))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
  }
}

uint64_t SequenceMatchData.knownSequenceSet.getter(uint64_t a1, uint64_t a2)
{
  sub_1A5503BA0(a1, a2);
  return a1;
}

void SequenceMatchData.knownSequenceSet.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1A5503B8C(*(_QWORD *)v2, *(unsigned int *)(v2 + 8) | ((unint64_t)*(unsigned __int8 *)(v2 + 12) << 32));
  *(_QWORD *)v2 = a1;
  *(_BYTE *)(v2 + 12) = BYTE4(a2);
  *(_DWORD *)(v2 + 8) = a2;
  OUTLINED_FUNCTION_8_1();
}

double (*SequenceMatchData.knownSequenceSet.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SequenceMatchData.knownUidSet.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1A5503BA0(a3, a4);
  return a3;
}

void SequenceMatchData.knownUidSet.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unsigned int v6;

  v6 = *(_DWORD *)(v2 + 24);
  v5 = v2 + 24;
  sub_1A5503B8C(*(_QWORD *)(v5 - 8), v6 | ((unint64_t)*(unsigned __int8 *)(v5 + 4) << 32));
  *(_QWORD *)(v5 - 8) = a1;
  *(_BYTE *)(v5 + 4) = BYTE4(a2);
  *(_DWORD *)v5 = a2;
  OUTLINED_FUNCTION_8_1();
}

double (*SequenceMatchData.knownUidSet.modify())(_QWORD)
{
  return nullsub_1;
}

void SequenceMatchData.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if ((~a3 & 0xFF00000000) != 0)
  {
    sub_1A594CE88();
    sub_1A56B6298(a1, a2, a3 & 0xFFFFFFFFFFLL);
  }
  else
  {
    sub_1A594CE88();
  }
  sub_1A594CE88();
  if ((~a5 & 0xFF00000000) != 0)
    sub_1A56B6298(a1, a4, a5 & 0xFFFFFFFFFFLL);
}

uint64_t static SequenceMatchData.__derived_struct_equals(_:_:)(int32x2_t *a1, uint64_t a2, int32x2_t *a3, uint64_t a4, int32x2_t *a5, uint64_t a6, int32x2_t *a7, uint64_t a8)
{
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;

  v12 = a6 & 0xFF00000000;
  if ((~a2 & 0xFF00000000) != 0)
  {
    if (v12 == 0xFF00000000)
      return 0;
    sub_1A56B614C(a1, a2 & 0xFFFFFFFFFFLL, a5, a6 & 0xFFFFFFFFFFLL);
    if ((v13 & 1) == 0)
      return 0;
LABEL_6:
    v14 = a8 & 0xFF00000000;
    if ((~a4 & 0xFF00000000) != 0)
    {
      if (v14 == 0xFF00000000)
        return 0;
      sub_1A56B614C(a3, a4 & 0xFFFFFFFFFFLL, a7, a8 & 0xFFFFFFFFFFLL);
      if ((v15 & 1) == 0)
        return 0;
    }
    else if (v14 != 0xFF00000000)
    {
      return 0;
    }
    return 1;
  }
  if (v12 == 0xFF00000000)
    goto LABEL_6;
  return 0;
}

uint64_t SequenceMatchData.hashValue.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _BYTE v9[72];

  sub_1A594CE64();
  SequenceMatchData.hash(into:)((uint64_t)v9, a1, a2 & 0xFFFFFFFFFFLL, a3, a4 & 0xFFFFFFFFFFLL);
  return sub_1A594CED0();
}

uint64_t sub_1A5703F6C()
{
  uint64_t v0;

  return SequenceMatchData.hashValue.getter(*(_QWORD *)v0, *(unsigned int *)(v0 + 8) | ((unint64_t)*(unsigned __int8 *)(v0 + 12) << 32), *(_QWORD *)(v0 + 16), *(unsigned int *)(v0 + 24) | ((unint64_t)*(unsigned __int8 *)(v0 + 28) << 32));
}

void sub_1A5703F90(uint64_t a1)
{
  uint64_t v1;

  SequenceMatchData.hash(into:)(a1, *(_QWORD *)v1, *(unsigned int *)(v1 + 8) | ((unint64_t)*(unsigned __int8 *)(v1 + 12) << 32), *(_QWORD *)(v1 + 16), *(unsigned int *)(v1 + 24) | ((unint64_t)*(unsigned __int8 *)(v1 + 28) << 32));
}

uint64_t sub_1A5703FB4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _BYTE v6[72];

  v1 = *(_QWORD *)v0;
  v2 = *(unsigned int *)(v0 + 8) | ((unint64_t)*(unsigned __int8 *)(v0 + 12) << 32);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(unsigned int *)(v0 + 24) | ((unint64_t)*(unsigned __int8 *)(v0 + 28) << 32);
  sub_1A594CE64();
  SequenceMatchData.hash(into:)((uint64_t)v6, v1, v2, v3, v4);
  return sub_1A594CED0();
}

uint64_t sub_1A5704024(uint64_t a1, uint64_t a2)
{
  return static SequenceMatchData.__derived_struct_equals(_:_:)(*(int32x2_t **)a1, *(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned __int8 *)(a1 + 12) << 32), *(int32x2_t **)(a1 + 16), *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int8 *)(a1 + 28) << 32), *(int32x2_t **)a2, *(unsigned int *)(a2 + 8) | ((unint64_t)*(unsigned __int8 *)(a2 + 12) << 32), *(int32x2_t **)(a2 + 16), *(unsigned int *)(a2 + 24) | ((unint64_t)*(unsigned __int8 *)(a2 + 28) << 32));
}

unint64_t sub_1A5704074()
{
  unint64_t result;

  result = qword_1EE7A9CD8;
  if (!qword_1EE7A9CD8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for SequenceMatchData, &type metadata for SequenceMatchData);
    atomic_store(result, (unint64_t *)&qword_1EE7A9CD8);
  }
  return result;
}

uint64_t destroy for SequenceMatchData(uint64_t result)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = result;
  if (*(unsigned __int8 *)(result + 12) != 255)
  {
    v2 = *(unsigned int *)(result + 8) | ((unint64_t)*(unsigned __int8 *)(result + 12) << 32);
    result = sub_1A54E3458(*(_QWORD *)result, v2, SBYTE4(v2));
  }
  if (*(unsigned __int8 *)(v1 + 28) != 255)
  {
    v3 = *(unsigned int *)(v1 + 24) | ((unint64_t)*(unsigned __int8 *)(v1 + 28) << 32);
    return sub_1A54E3458(*(_QWORD *)(v1 + 16), v3, SBYTE4(v3));
  }
  return result;
}

uint64_t initializeWithCopy for SequenceMatchData(uint64_t a1, uint64_t *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;

  if (*((unsigned __int8 *)a2 + 12) == 255)
  {
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 5) = *(uint64_t *)((char *)a2 + 5);
  }
  else
  {
    v4 = *((unsigned int *)a2 + 2) | ((unint64_t)*((unsigned __int8 *)a2 + 12) << 32);
    v5 = *a2;
    sub_1A54E4334(*a2, v4, SBYTE4(v4));
    *(_QWORD *)a1 = v5;
    *(_DWORD *)(a1 + 8) = v4;
    *(_BYTE *)(a1 + 12) = BYTE4(v4);
  }
  v6 = a2 + 2;
  if (*((unsigned __int8 *)a2 + 28) == 255)
  {
    *(_QWORD *)(a1 + 16) = *v6;
    *(_QWORD *)(a1 + 21) = *(uint64_t *)((char *)a2 + 21);
  }
  else
  {
    v7 = *((unsigned int *)a2 + 6) | ((unint64_t)*((unsigned __int8 *)a2 + 28) << 32);
    v8 = *v6;
    sub_1A54E4334(*v6, v7, SBYTE4(v7));
    *(_QWORD *)(a1 + 16) = v8;
    *(_DWORD *)(a1 + 24) = v7;
    *(_BYTE *)(a1 + 28) = BYTE4(v7);
  }
  return a1;
}

uint64_t assignWithCopy for SequenceMatchData(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t *v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;

  v4 = *(unsigned int *)(a2 + 8) | ((unint64_t)*(unsigned __int8 *)(a2 + 12) << 32);
  v5 = *(_BYTE *)(a2 + 12);
  if (*(unsigned __int8 *)(a1 + 12) == 255)
  {
    if (BYTE4(v4) == 255)
    {
      v6 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 5) = *(_QWORD *)(a2 + 5);
      *(_QWORD *)a1 = v6;
    }
    else
    {
      v8 = *(_QWORD *)a2;
      sub_1A54E4334(*(_QWORD *)a2, *(unsigned int *)(a2 + 8) | ((unint64_t)*(unsigned __int8 *)(a2 + 12) << 32), SBYTE4(v4));
      *(_QWORD *)a1 = v8;
      *(_DWORD *)(a1 + 8) = v4;
      *(_BYTE *)(a1 + 12) = v5;
    }
  }
  else if (BYTE4(v4) == 255)
  {
    sub_1A5704394(a1);
    v7 = *(_QWORD *)(a2 + 5);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 5) = v7;
  }
  else
  {
    v9 = *(_QWORD *)a2;
    sub_1A54E4334(*(_QWORD *)a2, *(unsigned int *)(a2 + 8) | ((unint64_t)*(unsigned __int8 *)(a2 + 12) << 32), SBYTE4(v4));
    v10 = *(_QWORD *)a1;
    v11 = *(unsigned int *)(a1 + 8);
    *(_QWORD *)a1 = v9;
    *(_DWORD *)(a1 + 8) = v4;
    v12 = *(_BYTE *)(a1 + 12);
    *(_BYTE *)(a1 + 12) = v5;
    sub_1A54E3458(v10, v11, v12);
  }
  v13 = (uint64_t *)(a1 + 16);
  v14 = (uint64_t *)(a2 + 16);
  v15 = *(unsigned int *)(a2 + 24) | ((unint64_t)*(unsigned __int8 *)(a2 + 28) << 32);
  if (*(unsigned __int8 *)(a1 + 28) == 255)
  {
    if (BYTE4(v15) == 255)
    {
      v16 = *v14;
      *(_QWORD *)(a1 + 21) = *(uint64_t *)((char *)v14 + 5);
      *v13 = v16;
    }
    else
    {
      v18 = *v14;
      sub_1A54E4334(*v14, v15, SBYTE4(v15));
      *(_QWORD *)(a1 + 16) = v18;
      *(_DWORD *)(a1 + 24) = v15;
      *(_BYTE *)(a1 + 28) = BYTE4(v15);
    }
  }
  else if (BYTE4(v15) == 255)
  {
    sub_1A5704394(a1 + 16);
    v17 = *(uint64_t *)((char *)v14 + 5);
    *v13 = *v14;
    *(_QWORD *)(a1 + 21) = v17;
  }
  else
  {
    v19 = *v14;
    sub_1A54E4334(*v14, v15, SBYTE4(v15));
    v20 = *(_QWORD *)(a1 + 16);
    v21 = *(unsigned int *)(a1 + 24);
    *(_QWORD *)(a1 + 16) = v19;
    *(_DWORD *)(a1 + 24) = v15;
    v22 = *(_BYTE *)(a1 + 28);
    *(_BYTE *)(a1 + 28) = BYTE4(v15);
    sub_1A54E3458(v20, v21, v22);
  }
  return a1;
}

uint64_t sub_1A5704394(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7A0408);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t assignWithTake for SequenceMatchData(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unsigned __int8 v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_BYTE *)(a1 + 12);
  if (v4 == 255)
    goto LABEL_4;
  v5 = *(unsigned int *)(a2 + 8) | ((unint64_t)*(unsigned __int8 *)(a2 + 12) << 32);
  if (HIDWORD(v5) > 0xFE)
  {
    sub_1A5704394(a1);
LABEL_4:
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 5) = *(_QWORD *)(a2 + 5);
    goto LABEL_6;
  }
  v6 = *(unsigned int *)(a1 + 8);
  v7 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 12) = BYTE4(v5);
  sub_1A54E3458(v7, v6, v4);
LABEL_6:
  v8 = (_QWORD *)(a2 + 16);
  v9 = *(_BYTE *)(a1 + 28);
  if (v9 != 255)
  {
    v10 = *(unsigned int *)(a2 + 24) | ((unint64_t)*(unsigned __int8 *)(a2 + 28) << 32);
    if (HIDWORD(v10) <= 0xFE)
    {
      v11 = *(unsigned int *)(a1 + 24);
      v12 = *(_QWORD *)(a1 + 16);
      *(_QWORD *)(a1 + 16) = *v8;
      *(_DWORD *)(a1 + 24) = v10;
      *(_BYTE *)(a1 + 28) = BYTE4(v10);
      sub_1A54E3458(v12, v11, v9);
      return a1;
    }
    sub_1A5704394(a1 + 16);
  }
  *(_QWORD *)(a1 + 16) = *v8;
  *(_QWORD *)(a1 + 21) = *(_QWORD *)(a2 + 21);
  return a1;
}

uint64_t getEnumTagSinglePayload for SequenceMatchData(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFD && *(_BYTE *)(a1 + 29))
    {
      v2 = *(_DWORD *)a1 + 252;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 12);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = (v3 ^ 0xFF) - 1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SequenceMatchData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 28) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 29) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 29) = 0;
    if (a2)
      *(_BYTE *)(result + 12) = ~(_BYTE)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SequenceMatchData()
{
  return &type metadata for SequenceMatchData;
}

void OUTLINED_FUNCTION_1_77(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1A57087E0(v2, a2, 0, 0xE000000000000000, 44, 0xE100000000000000, 0, 0xE000000000000000, 0);
}

uint64_t SortData.identifiers.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

double (*SortData.identifiers.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SortData.modificationSequence.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t SortData.modificationSequence.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

double (*SortData.modificationSequence.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SortData.hash(into:)()
{
  sub_1A5693F48();
  return sub_1A594CEB8();
}

uint64_t static SortData.__derived_struct_equals(_:_:)(_QWORD *a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t result;

  result = _s12NIOIMAPCore216SectionSpecifierV4PartV23__derived_struct_equalsySbAE_AEtFZ_0(a1, a3);
  if ((result & 1) == 0)
    return 0;
  if (((a4 | a2) & 0x8000000000000000) == 0)
    return a4 == a2;
  __break(1u);
  return result;
}

uint64_t SortData.hashValue.getter()
{
  sub_1A594CE64();
  sub_1A5693F48();
  sub_1A594CEB8();
  return sub_1A594CED0();
}

uint64_t sub_1A57046B8()
{
  return SortData.hashValue.getter();
}

uint64_t sub_1A57046C0()
{
  return SortData.hash(into:)();
}

uint64_t sub_1A57046C8(uint64_t a1, uint64_t a2)
{
  return static SortData.__derived_struct_equals(_:_:)(*(_QWORD **)a1, *(_QWORD *)(a1 + 8), *(_QWORD **)a2, *(_QWORD *)(a2 + 8));
}

unint64_t sub_1A57046E0()
{
  unint64_t result;

  result = qword_1EE7A9CE0;
  if (!qword_1EE7A9CE0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for SortData, &type metadata for SortData);
    atomic_store(result, (unint64_t *)&qword_1EE7A9CE0);
  }
  return result;
}

ValueMetadata *type metadata accessor for SortData()
{
  return &type metadata for SortData;
}

void StoreModifier.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if ((a5 & 0x1000000000000) == 0)
  {
    OUTLINED_FUNCTION_2_21();
    sub_1A594CEB8();
    return;
  }
  OUTLINED_FUNCTION_3_19();
  sub_1A594B1D8();
  if (BYTE5(a5) == 255)
  {
    sub_1A594CE94();
    return;
  }
  sub_1A594CE94();
  if ((a5 & 0x10000000000) != 0)
  {
    OUTLINED_FUNCTION_3_19();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    OUTLINED_FUNCTION_126_1();
    sub_1A569428C();
    goto LABEL_9;
  }
  OUTLINED_FUNCTION_2_21();
  if ((~a5 & 0xFF00000000) == 0)
  {
    OUTLINED_FUNCTION_3_19();
LABEL_9:
    sub_1A56667BC(a4, a5);
    return;
  }
  OUTLINED_FUNCTION_2_21();
  v7 = OUTLINED_FUNCTION_126_1();
  sub_1A56B6298(v7, v8, v9);
}

uint64_t static StoreModifier.__derived_enum_equals(_:_:)(uint64_t result, uint64_t a2, int32x2_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, int32x2_t *a7, uint64_t a8)
{
  BOOL v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;

  if ((a4 & 0x1000000000000) != 0)
  {
    if ((a8 & 0x1000000000000) == 0)
      return 0;
    v12 = result == a5 && a2 == a6;
    if (!v12 && (sub_1A594CD38() & 1) == 0)
      return 0;
    if (BYTE5(a4) == 255)
    {
      if (BYTE5(a8) != 255)
        return 0;
    }
    else
    {
      if (BYTE5(a8) == 255)
        return 0;
      if ((a4 & 0x10000000000) != 0)
      {
        if ((a8 & 0x10000000000) == 0)
          return 0;
        sub_1A5689E98();
        if ((v14 & 1) == 0)
          return 0;
      }
      else
      {
        if ((a8 & 0x10000000000) != 0)
          return 0;
        v13 = a8 & 0xFF00000000;
        if ((~a4 & 0xFF00000000) != 0)
        {
          if (v13 == 0xFF00000000)
            return 0;
          v15 = OUTLINED_FUNCTION_126_1();
          sub_1A566676C(v15, v16);
          sub_1A566676C((uint64_t)a3, a4);
          sub_1A56B614C(a3, a4 & 0xFFFFFFFFFFLL, a7, a8 & 0xFFFFFFFFFFLL);
          v18 = v17;
          v19 = OUTLINED_FUNCTION_126_1();
          sub_1A56667BC(v19, v20);
          sub_1A56667BC((uint64_t)a3, a4);
          if ((v18 & 1) == 0)
            return 0;
        }
        else if (v13 != 0xFF00000000)
        {
          return 0;
        }
      }
    }
    return 1;
  }
  if ((a8 & 0x1000000000000) != 0)
    return 0;
  if (((a5 | result) & 0x8000000000000000) == 0)
    return a5 == result;
  __break(1u);
  return result;
}

uint64_t StoreModifier.hashValue.getter(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  _BYTE v9[72];

  sub_1A594CE64();
  StoreModifier.hash(into:)((uint64_t)v9, a1, a2, a3, a4 & 0xFFFFFFFFFFFFLL | ((HIWORD(a4) & 1) << 48));
  return sub_1A594CED0();
}

uint64_t sub_1A57049BC()
{
  uint64_t v0;

  return StoreModifier.hashValue.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(unsigned int *)(v0 + 24) | ((unint64_t)*(unsigned __int16 *)(v0 + 28) << 32) | ((unint64_t)*(unsigned __int8 *)(v0 + 30) << 48));
}

void sub_1A57049EC(uint64_t a1)
{
  uint64_t v1;

  StoreModifier.hash(into:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(unsigned int *)(v1 + 24) | ((unint64_t)*(unsigned __int16 *)(v1 + 28) << 32) | ((unint64_t)*(unsigned __int8 *)(v1 + 30) << 48));
}

uint64_t sub_1A5704A1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unsigned __int8 v5;
  _BYTE v7[72];

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(unsigned int *)(v0 + 24) | ((unint64_t)*(unsigned __int16 *)(v0 + 28) << 32);
  v5 = *(_BYTE *)(v0 + 30);
  sub_1A594CE64();
  StoreModifier.hash(into:)((uint64_t)v7, v1, v2, v3, v4 | ((unint64_t)v5 << 48));
  return sub_1A594CED0();
}

uint64_t sub_1A5704A94(uint64_t a1, uint64_t a2)
{
  return static StoreModifier.__derived_enum_equals(_:_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(int32x2_t **)(a1 + 16), *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int16 *)(a1 + 28) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 30) << 48), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(int32x2_t **)(a2 + 16), *(unsigned int *)(a2 + 24) | ((unint64_t)*(unsigned __int16 *)(a2 + 28) << 32) | ((unint64_t)*(unsigned __int8 *)(a2 + 30) << 48));
}

unint64_t sub_1A5704AF4()
{
  unint64_t result;

  result = qword_1EE7A9CE8;
  if (!qword_1EE7A9CE8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for StoreModifier, &type metadata for StoreModifier);
    atomic_store(result, (unint64_t *)&qword_1EE7A9CE8);
  }
  return result;
}

uint64_t destroy for StoreModifier(uint64_t a1)
{
  return sub_1A5666C8C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int16 *)(a1 + 28) << 32), *(_BYTE *)(a1 + 30));
}

uint64_t initializeWithCopy for StoreModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(unsigned __int16 *)(a2 + 28);
  v7 = *(unsigned int *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 30);
  sub_1A5666C54(*(_QWORD *)a2, v4, v5, v7 | (v6 << 32), v8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_WORD *)(a1 + 28) = v6;
  *(_DWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 30) = v8;
  return a1;
}

uint64_t assignWithCopy for StoreModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(unsigned __int16 *)(a2 + 28);
  v7 = *(unsigned int *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 30);
  sub_1A5666C54(*(_QWORD *)a2, v4, v5, v7 | (v6 << 32), v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int16 *)(a1 + 28) << 32);
  v13 = *(_BYTE *)(a1 + 30);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_DWORD *)(a1 + 24) = v7;
  *(_WORD *)(a1 + 28) = v6;
  *(_BYTE *)(a1 + 30) = v8;
  sub_1A5666C8C(v9, v10, v11, v12, v13);
  return a1;
}

uint64_t assignWithTake for StoreModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int16 v4;
  int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_WORD *)(a2 + 28);
  v5 = *(_DWORD *)(a2 + 24);
  v6 = *(_BYTE *)(a2 + 30);
  v7 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v10 = *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int16 *)(a1 + 28) << 32);
  v11 = *(_BYTE *)(a1 + 30);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_DWORD *)(a1 + 24) = v5;
  *(_WORD *)(a1 + 28) = v4;
  *(_BYTE *)(a1 + 30) = v6;
  sub_1A5666C8C(v7, v9, v8, v10, v11);
  return a1;
}

ValueMetadata *type metadata accessor for StoreModifier()
{
  return &type metadata for StoreModifier;
}

void ParameterValue.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((a3 & 0x10000000000) != 0)
  {
    OUTLINED_FUNCTION_3_19();
    sub_1A569428C();
  }
  else
  {
    OUTLINED_FUNCTION_2_21();
    if ((~a3 & 0xFF00000000) != 0)
    {
      OUTLINED_FUNCTION_2_21();
      sub_1A56B6298(a1, a2, a3 & 0xFFFFFFFFFFLL);
    }
    else
    {
      OUTLINED_FUNCTION_3_19();
    }
  }
}

void static ParameterValue.__derived_enum_equals(_:_:)(int32x2_t *a1, uint64_t a2, int32x2_t *a3, uint64_t a4)
{
  if ((a2 & 0x10000000000) != 0)
  {
    if ((a4 & 0x10000000000) != 0)
      sub_1A5689E98();
  }
  else if ((a4 & 0x10000000000) == 0 && (~a2 & 0xFF00000000) != 0 && (a4 & 0xFF00000000) != 0xFF00000000)
  {
    sub_1A56B614C(a1, a2 & 0xFFFFFFFFFFLL, a3, a4 & 0xFFFFFFFFFFLL);
  }
}

uint64_t ParameterValue.hashValue.getter(uint64_t a1, uint64_t a2)
{
  _BYTE v5[72];

  sub_1A594CE64();
  if ((a2 & 0x10000000000) != 0)
  {
    OUTLINED_FUNCTION_3_19();
    sub_1A569428C();
  }
  else
  {
    OUTLINED_FUNCTION_2_21();
    if ((~a2 & 0xFF00000000) != 0)
    {
      OUTLINED_FUNCTION_2_21();
      sub_1A56B6298((uint64_t)v5, a1, a2 & 0xFFFFFFFFFFLL);
    }
    else
    {
      OUTLINED_FUNCTION_3_19();
    }
  }
  return sub_1A594CED0();
}

uint64_t sub_1A5704E50()
{
  uint64_t v0;

  return ParameterValue.hashValue.getter(*(_QWORD *)v0, *(unsigned int *)(v0 + 8) | ((unint64_t)*(unsigned __int8 *)(v0 + 12) << 32) | ((unint64_t)*(unsigned __int8 *)(v0 + 13) << 40));
}

void sub_1A5704E7C(uint64_t a1)
{
  uint64_t v1;

  ParameterValue.hash(into:)(a1, *(_QWORD *)v1, *(unsigned int *)(v1 + 8) | ((unint64_t)*(unsigned __int8 *)(v1 + 12) << 32) | ((unint64_t)*(unsigned __int8 *)(v1 + 13) << 40));
}

uint64_t sub_1A5704EA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  _BYTE v7[72];

  v1 = *(_QWORD *)v0;
  v2 = *(unsigned __int8 *)(v0 + 12);
  v3 = *(unsigned int *)(v0 + 8);
  v4 = *(unsigned __int8 *)(v0 + 13);
  sub_1A594CE64();
  if (v4 == 1)
  {
    sub_1A594CE88();
    sub_1A569428C();
  }
  else
  {
    v5 = v3 | (v2 << 32);
    sub_1A594CE88();
    sub_1A594CE88();
    if (BYTE4(v5) != 255)
      sub_1A56B6298((uint64_t)v7, v1, v5 & 0xFFFFFFFFFFLL);
  }
  return sub_1A594CED0();
}

void sub_1A5704F58(uint64_t a1, uint64_t a2)
{
  static ParameterValue.__derived_enum_equals(_:_:)(*(int32x2_t **)a1, *(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned __int8 *)(a1 + 12) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 13) << 40), *(int32x2_t **)a2, *(unsigned int *)(a2 + 8) | ((unint64_t)*(unsigned __int8 *)(a2 + 12) << 32) | ((unint64_t)*(unsigned __int8 *)(a2 + 13) << 40));
}

unint64_t sub_1A5704FAC()
{
  unint64_t result;

  result = qword_1EE7A9CF0;
  if (!qword_1EE7A9CF0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ParameterValue, &type metadata for ParameterValue);
    atomic_store(result, (unint64_t *)&qword_1EE7A9CF0);
  }
  return result;
}

uint64_t destroy for ParameterValue(uint64_t a1)
{
  return sub_1A5666618(*(_QWORD *)a1, *(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned __int8 *)(a1 + 12) << 32), *(_BYTE *)(a1 + 13));
}

uint64_t _s12NIOIMAPCore214ParameterValueOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(unsigned __int8 *)(a2 + 12);
  v5 = *(unsigned int *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 13);
  sub_1A566658C(*(_QWORD *)a2, v5 | (v4 << 32), v6);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 13) = v6;
  return a1;
}

uint64_t assignWithCopy for ParameterValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char v9;

  v3 = *(_QWORD *)a2;
  v4 = *(unsigned __int8 *)(a2 + 12);
  v5 = *(unsigned int *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 13);
  sub_1A566658C(*(_QWORD *)a2, v5 | (v4 << 32), v6);
  v7 = *(_QWORD *)a1;
  v8 = *(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned __int8 *)(a1 + 12) << 32);
  v9 = *(_BYTE *)(a1 + 13);
  *(_QWORD *)a1 = v3;
  *(_DWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 12) = v4;
  *(_BYTE *)(a1 + 13) = v6;
  sub_1A5666618(v7, v8, v9);
  return a1;
}

_QWORD *__swift_memcpy14_8_1(_QWORD *result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_QWORD *)((char *)result + 6) = *(uint64_t *)((char *)a2 + 6);
  *result = v2;
  return result;
}

uint64_t assignWithTake for ParameterValue(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char v9;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 12);
  v5 = *((_DWORD *)a2 + 2);
  v6 = *((_BYTE *)a2 + 13);
  v7 = *(_QWORD *)a1;
  v8 = *(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned __int8 *)(a1 + 12) << 32);
  v9 = *(_BYTE *)(a1 + 13);
  *(_QWORD *)a1 = v3;
  *(_DWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 12) = v4;
  *(_BYTE *)(a1 + 13) = v6;
  sub_1A5666618(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for ParameterValue(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 14))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 13);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ParameterValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 12) = 0;
    *(_DWORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 14) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 14) = 0;
    if (a2)
      *(_BYTE *)(result + 13) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A57051E4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 13);
}

uint64_t sub_1A57051EC(uint64_t result, char a2)
{
  *(_BYTE *)(result + 13) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ParameterValue()
{
  return &type metadata for ParameterValue;
}

void sub_1A5705208(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  Swift::Int v11;
  Swift::Int v12;
  Swift::Int v13;
  char v14;
  char v15;
  Swift::String v16;
  int v17;
  Swift::Int v18;
  char v19;
  int v20;
  Swift::Int v21;
  Swift::Int v22;
  char v23;
  Swift::Int v24;
  int v25;
  BOOL v26;
  int v27;
  Swift::Int v28;
  char v29;
  Swift::Int v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  Swift::Int v47;
  BOOL v48;
  Swift::Int v49;
  Swift::Int v50;
  Swift::Int v51;
  char v52;
  Swift::String v53;
  int v54;
  int v55;

  v5 = v4;
  v10 = v4 + 8;
  v11 = *(unsigned int *)(v5 + 20);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_22_1(a1, (unint64_t)a2, v10, v11);
  v13 = v12;
  v15 = v14;
  swift_bridgeObjectRelease();
  if ((v15 & 1) != 0)
  {
    v16._countAndFlagsBits = a1;
    v16._object = a2;
    v13 = ByteBuffer._setStringSlowpath(_:at:)(v16, v11);
  }
  v17 = *(_DWORD *)(v5 + 20);
  if (__CFADD__(v17, (_DWORD)v13))
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  *(_DWORD *)(v5 + 20) = v17 + v13;
  OUTLINED_FUNCTION_0_92(32);
  if ((v19 & 1) != 0)
    v18 = OUTLINED_FUNCTION_1_74(32);
  v20 = *(_DWORD *)(v5 + 20);
  if (__CFADD__(v20, (_DWORD)v18))
    goto LABEL_29;
  *(_DWORD *)(v5 + 20) = v20 + v18;
  v21 = v13 + v18;
  if (__OFADD__(v13, v18))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if ((a4 & 0x10000000000) != 0)
  {
    OUTLINED_FUNCTION_0_92(40);
    if ((v29 & 1) != 0)
      v28 = OUTLINED_FUNCTION_1_74(40);
    v30 = v28;
    v31 = *(_DWORD *)(v5 + 20);
    v26 = __CFADD__(v31, (_DWORD)v28);
    v32 = v31 + v28;
    if (v26)
      goto LABEL_32;
    *(_DWORD *)(v5 + 20) = v32;
    if (*(_QWORD *)(a3 + 16))
    {
      swift_retain();
      swift_retain();
      v40 = OUTLINED_FUNCTION_1_78(a3, v33, v34, v35, v36, v37, v38, v39, v5);
      swift_release();
      swift_release();
    }
    else
    {
      v40 = 0;
    }
    v48 = __OFADD__(v30, v40);
    v49 = v30 + v40;
    if (v48)
      goto LABEL_33;
    v50 = *(unsigned int *)(v5 + 20);
    sub_1A56814E0(41, 0xE100000000000000, v10, *(_DWORD *)(v5 + 20));
    if ((v52 & 1) != 0)
    {
      v53._countAndFlagsBits = 41;
      v53._object = (void *)0xE100000000000000;
      v51 = ByteBuffer._setStringSlowpath(_:at:)(v53, v50);
    }
    v54 = *(_DWORD *)(v5 + 20);
    v26 = __CFADD__(v54, (_DWORD)v51);
    v55 = v54 + v51;
    if (v26)
      goto LABEL_34;
    *(_DWORD *)(v5 + 20) = v55;
    v24 = v49 + v51;
    if (__OFADD__(v49, v51))
    {
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
      return;
    }
  }
  else if (BYTE4(a4) == 255)
  {
    OUTLINED_FUNCTION_0_92(36);
    if ((v23 & 1) != 0)
      v22 = OUTLINED_FUNCTION_1_74(36);
    v24 = v22;
    v25 = *(_DWORD *)(v5 + 20);
    v26 = __CFADD__(v25, (_DWORD)v22);
    v27 = v25 + v22;
    if (v26)
      goto LABEL_36;
    *(_DWORD *)(v5 + 20) = v27;
  }
  else
  {
    sub_1A54E4334(a3, a4, SBYTE4(a4));
    OUTLINED_FUNCTION_54_3(a3, a4 & 0xFFFFFFFFFFLL, v41, v42, v43, v44, v45, v46, 0);
    v24 = v47;
    sub_1A5666618(a3, a4, 0);
  }
  if (__OFADD__(v21, v24))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
}

void sub_1A570544C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  Swift::Int v8;
  Swift::Int v9;
  char v10;
  Swift::String v11;
  Swift::Int v12;
  int v13;
  BOOL v14;
  int v15;
  uint64_t v16;

  if (!*(_QWORD *)(a3 + 16))
    goto LABEL_8;
  v4 = v3;
  v8 = *(unsigned int *)(v3 + 20);
  OUTLINED_FUNCTION_22_1(32, 0xE100000000000000, v3 + 8, *(_DWORD *)(v3 + 20));
  if ((v10 & 1) != 0)
  {
    v11._countAndFlagsBits = 32;
    v11._object = (void *)0xE100000000000000;
    v9 = ByteBuffer._setStringSlowpath(_:at:)(v11, v8);
  }
  v12 = v9;
  v13 = *(_DWORD *)(v4 + 20);
  v14 = __CFADD__(v13, (_DWORD)v9);
  v15 = v13 + v9;
  if (!v14)
  {
    *(_DWORD *)(v4 + 20) = v15;
    j__OUTLINED_FUNCTION_84(a1, a2, a3, 0, 0xE000000000000000, 32, 0xE100000000000000, 0, (void *)0xE000000000000000);
    if (__OFADD__(v12, v16))
      __break(1u);
LABEL_8:
    OUTLINED_FUNCTION_2_6();
    return;
  }
  __break(1u);
}

void sub_1A570551C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  Swift::Int v5;
  char v6;
  Swift::Int v7;
  int v8;
  uint64_t v9;
  Swift::Int v10;
  char v11;
  Swift::Int v12;
  int v13;
  BOOL v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  Swift::Int v25;
  char v26;
  Swift::Int v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  Swift::Int v36;
  Swift::Int v37;
  Swift::Int v38;
  char v39;
  int v40;
  int v41;

  v4 = a2 + 8;
  OUTLINED_FUNCTION_22_1(32, 0xE100000000000000, a2 + 8, *(_DWORD *)(a2 + 20));
  if ((v6 & 1) != 0)
    v5 = OUTLINED_FUNCTION_8_36(32);
  v7 = v5;
  v8 = *(_DWORD *)(a2 + 20);
  if (__CFADD__(v8, (_DWORD)v5))
  {
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  *(_DWORD *)(a2 + 20) = v8 + v5;
  v9 = *(_QWORD *)a1;
  if (*(_BYTE *)(a1 + 13) != 1)
  {
    v24 = *(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned __int8 *)(a1 + 12) << 32);
    if (BYTE4(v24) == 255)
    {
      OUTLINED_FUNCTION_5_43(36);
      if ((v26 & 1) != 0)
        v25 = OUTLINED_FUNCTION_7_32(36);
      v27 = v25;
      v28 = *(_DWORD *)(a2 + 20);
      v14 = __CFADD__(v28, (_DWORD)v25);
      v29 = v28 + v25;
      if (v14)
        goto LABEL_30;
      *(_DWORD *)(a2 + 20) = v29;
    }
    else
    {
      sub_1A54E4334(v9, v24, SBYTE4(v24));
      OUTLINED_FUNCTION_54_3(v9, v24 & 0xFFFFFFFFFFLL, v30, v31, v32, v33, v34, v35, 0);
      v27 = v36;
      sub_1A5666618(v9, v24, 0);
    }
LABEL_22:
    if (!__OFADD__(v7, v27))
    {
      OUTLINED_FUNCTION_2_6();
      return;
    }
    goto LABEL_25;
  }
  OUTLINED_FUNCTION_5_43(40);
  if ((v11 & 1) != 0)
    v10 = OUTLINED_FUNCTION_7_32(40);
  v12 = v10;
  v13 = *(_DWORD *)(a2 + 20);
  v14 = __CFADD__(v13, (_DWORD)v10);
  v15 = v13 + v10;
  if (v14)
    goto LABEL_26;
  *(_DWORD *)(a2 + 20) = v15;
  if (*(_QWORD *)(v9 + 16))
  {
    swift_retain();
    swift_retain();
    v23 = OUTLINED_FUNCTION_1_78(v9, v16, v17, v18, v19, v20, v21, v22, a2);
    swift_release();
    swift_release();
  }
  else
  {
    v23 = 0;
  }
  v37 = v12 + v23;
  if (__OFADD__(v12, v23))
    goto LABEL_27;
  sub_1A56814E0(41, 0xE100000000000000, v4, *(_DWORD *)(a2 + 20));
  if ((v39 & 1) != 0)
    v38 = OUTLINED_FUNCTION_8_36(41);
  v40 = *(_DWORD *)(a2 + 20);
  v14 = __CFADD__(v40, (_DWORD)v38);
  v41 = v40 + v38;
  if (v14)
    goto LABEL_28;
  *(_DWORD *)(a2 + 20) = v41;
  v27 = v37 + v38;
  if (!__OFADD__(v37, v38))
    goto LABEL_22;
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
}

uint64_t OUTLINED_FUNCTION_1_78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return j__OUTLINED_FUNCTION_168(a1, 0, 0xE000000000000000, 32, 0xE100000000000000, 0, 0xE000000000000000, 1, a9);
}

void OUTLINED_FUNCTION_5_43(uint64_t a1)
{
  uint64_t v1;
  Swift::UInt32 v2;

  sub_1A56814E0(a1, 0xE100000000000000, v1, v2);
}

Swift::Int OUTLINED_FUNCTION_7_32(uint64_t a1)
{
  Swift::Int v1;
  unint64_t v2;

  v2 = 0xE100000000000000;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v1);
}

Swift::Int OUTLINED_FUNCTION_8_36(uint64_t a1)
{
  Swift::Int v1;
  unint64_t v2;

  v2 = 0xE100000000000000;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v1);
}

BOOL static IUID.__derived_struct_equals(_:_:)(int a1, int a2)
{
  return a2 == a1;
}

uint64_t sub_1A5705744()
{
  uint64_t v0;
  uint64_t v1;
  Swift::Int v2;
  Swift::Int v3;
  Swift::Int v4;
  char v5;
  char v6;
  Swift::String v7;
  uint64_t result;
  int v9;
  BOOL v10;
  int v11;

  v1 = v0;
  sub_1A594B5F8();
  sub_1A594C924();
  v2 = *(unsigned int *)(v0 + 20);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A56814E0(0, 0xE000000000000000, v0 + 8, v2);
  v4 = v3;
  v6 = v5;
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
  {
    v7._countAndFlagsBits = 0;
    v7._object = (void *)0xE000000000000000;
    v4 = ByteBuffer._setStringSlowpath(_:at:)(v7, v2);
  }
  result = swift_bridgeObjectRelease();
  v9 = *(_DWORD *)(v1 + 20);
  v10 = __CFADD__(v9, (_DWORD)v4);
  v11 = v9 + v4;
  if (v10)
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(v1 + 20) = v11;
    return v4;
  }
  return result;
}

uint64_t IUID.uid.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

double (*IUID.uid.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t IUID.hash(into:)()
{
  return sub_1A594CEAC();
}

uint64_t IUID.hashValue.getter()
{
  sub_1A594CE64();
  sub_1A594CEAC();
  return sub_1A594CED0();
}

uint64_t sub_1A57058CC()
{
  return IUID.hashValue.getter();
}

uint64_t sub_1A57058D4()
{
  return IUID.hash(into:)();
}

BOOL sub_1A57058DC(int *a1, int *a2)
{
  return static IUID.__derived_struct_equals(_:_:)(*a1, *a2);
}

unint64_t sub_1A57058EC()
{
  unint64_t result;

  result = qword_1EE7A9CF8;
  if (!qword_1EE7A9CF8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for IUID, &type metadata for IUID);
    atomic_store(result, (unint64_t *)&qword_1EE7A9CF8);
  }
  return result;
}

ValueMetadata *type metadata accessor for InvalidUID()
{
  return &type metadata for InvalidUID;
}

ValueMetadata *type metadata accessor for IUID()
{
  return &type metadata for IUID;
}

uint64_t sub_1A5705948(uint64_t a1, Swift::Int a2, uint64_t a3)
{
  _DWORD *v3;
  uint64_t v4;
  _DWORD *v5;
  Swift::Int v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  Swift::UInt32 v11;
  Swift::Int v12;
  char v13;
  Swift::String v14;
  Swift::Int v15;
  int v16;
  uint64_t v17;
  unint64_t v18;
  void *v19;
  Swift::Int v20;
  Swift::UInt32 v21;
  Swift::Int v22;
  char v23;
  Swift::String v24;
  uint64_t result;

  v5 = v3;
  v7 = a2;
  v8 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  OUTLINED_FUNCTION_9_37();
  (*(void (**)(uint64_t))(v9 + 80))(0xFFFFFFFFLL);
  v10 = sub_1A594B37C();
  (*(void (**)(uint64_t, Swift::Int))(v8 + 8))(v4, v7);
  if ((v10 & 1) != 0)
  {
    v11 = v5[5];
    v5 += 5;
    v7 = v11;
    a3 = 0;
    sub_1A56814E0(42, 0xE100000000000000, (uint64_t)(v5 - 3), v11);
    if ((v13 & 1) != 0)
    {
      v14._countAndFlagsBits = 42;
      v14._object = (void *)0xE100000000000000;
      v12 = ByteBuffer._setStringSlowpath(_:at:)(v14, v7);
    }
    v15 = v12;
    v16 = *v5 + v12;
    if (!__CFADD__(*v5, (_DWORD)v12))
      goto LABEL_10;
    __break(1u);
  }
  (*(void (**)(Swift::Int, uint64_t))(a3 + 56))(v7, a3);
  v17 = sub_1A594CC9C();
  v19 = (void *)v18;
  v21 = v5[5];
  v5 += 5;
  v20 = v21;
  sub_1A56814E0(v17, v18, (uint64_t)(v5 - 3), v21);
  if ((v23 & 1) != 0)
  {
    v24._countAndFlagsBits = v17;
    v24._object = v19;
    v22 = ByteBuffer._setStringSlowpath(_:at:)(v24, v20);
  }
  v15 = v22;
  result = swift_bridgeObjectRelease();
  v16 = *v5 + v15;
  if (!__CFADD__(*v5, (_DWORD)v15))
  {
LABEL_10:
    *v5 = v16;
    return v15;
  }
  __break(1u);
  return result;
}

void MessageIdentifier.debugDescription.getter()
{
  sub_1A5682794((void (*)(char *))sub_1A57061FC);
}

uint64_t MessageIdentifier.init(integerLiteral:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

unint64_t MessageIdentifier.distance(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v5)(uint64_t, uint64_t);
  unsigned int v6;

  v5 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 56);
  v6 = v5(a2, a3);
  return v6 - (unint64_t)v5(a2, a3);
}

void MessageIdentifier.advanced(by:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_14_26();
  OUTLINED_FUNCTION_3_8();
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v11 - v8;
  if (a1 > 0xFFFFFFFFLL)
  {
    __break(1u);
  }
  else
  {
    v12 = a1 + (*(unsigned int (**)(uint64_t, uint64_t, double))(a3 + 56))(a2, a3, v7);
    v10 = sub_1A5706224();
    MessageIdentifier.init<A>(exactly:)((uint64_t)&v12, a2, MEMORY[0x1E0DEDC60], a3, v10, (uint64_t)v9);
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, a2) != 1)
    {
      OUTLINED_FUNCTION_4_46();
      OUTLINED_FUNCTION_17_1();
      return;
    }
  }
  __break(1u);
}

void static MessageIdentifier.< infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_1_79(a1, a2, a3, a4);
  OUTLINED_FUNCTION_7_33();
  OUTLINED_FUNCTION_17_1();
}

void static MessageIdentifier.<= infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_1_79(a1, a2, a3, a4);
  OUTLINED_FUNCTION_7_33();
  OUTLINED_FUNCTION_17_1();
}

uint64_t static MessageIdentifier.min.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 80))(1, a1);
}

uint64_t static MessageIdentifier.max.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 80))(0xFFFFFFFFLL, a1);
}

uint64_t MessageIdentifier.init<A>(exactly:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char v26;
  uint64_t v27;
  char v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  unsigned int v45;
  char v46;
  unsigned int v47;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t AssociatedTypeWitness;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v52 = a4;
  v57 = a6;
  v55 = *(_QWORD *)(*(_QWORD *)(a5 + 24) + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_3_8();
  v11 = MEMORY[0x1E0C80A78](v10);
  v53 = (char *)&v49 - v12;
  v13 = *(_QWORD *)(a3 - 8);
  v14 = MEMORY[0x1E0C80A78](v11);
  v50 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v56 = (char *)&v49 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v49 - v19;
  v21 = MEMORY[0x1E0C80A78](v18);
  v23 = (char *)&v49 - v22;
  MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v49 - v24;
  v26 = OUTLINED_FUNCTION_2_66();
  v58 = a1;
  v27 = OUTLINED_FUNCTION_8_37();
  if ((v26 & 1) != 0)
  {
    if (v27 > 64)
      goto LABEL_3;
LABEL_6:
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v25, v58, a3);
    v31 = OUTLINED_FUNCTION_3_50();
    v29 = *(void (**)(char *, uint64_t))(v13 + 8);
    OUTLINED_FUNCTION_0_96((uint64_t)v25);
    if (v31 <= 0)
      goto LABEL_4;
    goto LABEL_7;
  }
  if (v27 <= 63)
    goto LABEL_6;
LABEL_3:
  v59 = 0;
  sub_1A566F64C();
  OUTLINED_FUNCTION_5_44();
  v28 = OUTLINED_FUNCTION_17_28();
  v29 = *(void (**)(char *, uint64_t))(v13 + 8);
  OUTLINED_FUNCTION_0_96((uint64_t)v25);
  if ((v28 & 1) == 0)
  {
LABEL_4:
    v30 = 1;
LABEL_25:
    v38 = v57;
    goto LABEL_26;
  }
LABEL_7:
  v51 = a2;
  v32 = (uint64_t)v56;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v23, v58, a3);
  v33 = OUTLINED_FUNCTION_2_66();
  OUTLINED_FUNCTION_13_30((uint64_t)v20);
  if ((v33 & 1) != 0)
  {
    OUTLINED_FUNCTION_15_32();
    v49 = a5;
    OUTLINED_FUNCTION_8_27();
    v32 = (uint64_t)v56;
    sub_1A594CD08();
    v34 = OUTLINED_FUNCTION_17_28();
    v29(v25, a3);
    v29(v20, a3);
    if ((v34 & 1) != 0)
      goto LABEL_24;
  }
  else
  {
    OUTLINED_FUNCTION_0_96((uint64_t)v20);
  }
  v35 = OUTLINED_FUNCTION_8_37();
  OUTLINED_FUNCTION_13_30(v32);
  if (v35 <= 31)
  {
    v36 = v32;
LABEL_13:
    OUTLINED_FUNCTION_0_96(v36);
    goto LABEL_14;
  }
  LODWORD(v59) = -1;
  v39 = OUTLINED_FUNCTION_2_66();
  v40 = OUTLINED_FUNCTION_8_37();
  if ((v39 & 1) == 0)
  {
    if (v40 < 33)
    {
      v47 = OUTLINED_FUNCTION_3_50();
      OUTLINED_FUNCTION_0_96(v32);
      if (v59 < v47)
      {
LABEL_24:
        OUTLINED_FUNCTION_0_96((uint64_t)v23);
        v30 = 1;
        a2 = v51;
        goto LABEL_25;
      }
      goto LABEL_14;
    }
LABEL_21:
    sub_1A5678A1C();
    OUTLINED_FUNCTION_5_44();
    v46 = OUTLINED_FUNCTION_17_28();
    OUTLINED_FUNCTION_0_96((uint64_t)v25);
    OUTLINED_FUNCTION_0_96(v32);
    if ((v46 & 1) != 0)
      goto LABEL_24;
    goto LABEL_14;
  }
  if (v40 > 32)
    goto LABEL_21;
  OUTLINED_FUNCTION_15_32();
  v41 = v32;
  OUTLINED_FUNCTION_8_27();
  sub_1A594CD08();
  v42 = sub_1A594B274();
  OUTLINED_FUNCTION_0_96((uint64_t)v25);
  v43 = v59;
  v44 = (uint64_t)v50;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v50, v41, a3);
  if ((v42 & 1) == 0)
  {
    v36 = v44;
    goto LABEL_13;
  }
  v45 = OUTLINED_FUNCTION_3_50();
  OUTLINED_FUNCTION_0_96(v44);
  if (v43 < v45)
    goto LABEL_24;
LABEL_14:
  v37 = OUTLINED_FUNCTION_3_50();
  OUTLINED_FUNCTION_0_96((uint64_t)v23);
  v38 = v57;
  a2 = v51;
  (*(void (**)(uint64_t, uint64_t))(v52 + 80))(v37, v51);
  v30 = 0;
LABEL_26:
  OUTLINED_FUNCTION_0_96(v58);
  return __swift_storeEnumTagSinglePayload(v38, v30, 1, a2);
}

void sub_1A5706154(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  int v11;

  OUTLINED_FUNCTION_14_26();
  OUTLINED_FUNCTION_3_8();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v10 - v7;
  if (a1 == -1)
  {
    __break(1u);
  }
  else
  {
    v11 = a1 + 1;
    v9 = sub_1A5678A1C();
    MessageIdentifier.init<A>(exactly:)((uint64_t)&v11, a2, MEMORY[0x1E0DEE0F8], a3, v9, (uint64_t)v8);
    if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, a2) != 1)
    {
      OUTLINED_FUNCTION_4_46();
      OUTLINED_FUNCTION_17_1();
      return;
    }
  }
  __break(1u);
}

void sub_1A57061FC()
{
  Swift::Int *v0;

  sub_1A5705948(v0[4], v0[2], v0[3]);
  OUTLINED_FUNCTION_1();
}

unint64_t sub_1A5706224()
{
  unint64_t result;

  result = qword_1EE7A41A0;
  if (!qword_1EE7A41A0)
  {
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEDCA0], MEMORY[0x1E0DEDC60]);
    atomic_store(result, (unint64_t *)&qword_1EE7A41A0);
  }
  return result;
}

uint64_t UnknownMessageIdentifier.rawValue.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

double (*UnknownMessageIdentifier.rawValue.modify())(_QWORD)
{
  return nullsub_1;
}

void UnknownMessageIdentifier.hash(into:)()
{
  sub_1A594CEAC();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1A570629C()
{
  sub_1A57063BC();
  return sub_1A594CFB4();
}

uint64_t sub_1A57062C4()
{
  sub_1A57063BC();
  return sub_1A594CFC0();
}

uint64_t UnknownMessageIdentifier.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9D00);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_9_37();
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A57063BC();
  sub_1A594CF3C();
  sub_1A594CC60();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
}

unint64_t sub_1A57063BC()
{
  unint64_t result;

  result = qword_1EE7A9D08;
  if (!qword_1EE7A9D08)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59B579C, &type metadata for UnknownMessageIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A9D08);
  }
  return result;
}

uint64_t UnknownMessageIdentifier.hashValue.getter()
{
  sub_1A594CE64();
  sub_1A594CEAC();
  return sub_1A594CED0();
}

uint64_t UnknownMessageIdentifier.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9D10);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t)__swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A57063BC();
  sub_1A594CF18();
  if (!v1)
  {
    v7 = sub_1A594CBAC();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v7;
}

uint64_t sub_1A5706540()
{
  return UnknownMessageIdentifier.hashValue.getter();
}

void sub_1A5706548()
{
  UnknownMessageIdentifier.hash(into:)();
}

uint64_t sub_1A5706550@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = UnknownMessageIdentifier.init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1A5706578(_QWORD *a1)
{
  return UnknownMessageIdentifier.encode(to:)(a1);
}

void sub_1A5706590()
{
  sub_1A570E344();
}

void sub_1A5706598(unsigned int *a1@<X0>, _DWORD *a2@<X8>)
{
  int v3;

  nullsub_1(*a1);
  *a2 = v3;
}

void sub_1A57065C0(unsigned int *a1@<X0>, unint64_t *a2@<X8>)
{
  unsigned int *v2;

  *a2 = sub_1A56FD358(*a1, *v2);
  OUTLINED_FUNCTION_1();
}

BOOL sub_1A57065E8(unsigned int *a1, unsigned int *a2)
{
  return sub_1A570E3AC(*a1, *a2);
}

BOOL sub_1A57065F4(unsigned int *a1, unsigned int *a2)
{
  return sub_1A570E3B8(*a1, *a2);
}

uint64_t sub_1A5706600(unsigned int *a1, unsigned int *a2)
{
  return sub_1A570EB68(*a1, *a2);
}

uint64_t sub_1A570660C(unsigned int *a1, unsigned int *a2)
{
  return sub_1A570EB6C(*a1, *a2);
}

uint64_t BinaryInteger.init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  (*(void (**)(uint64_t, uint64_t))(a5 + 56))(a3, a5);
  sub_1A5678A1C();
  sub_1A594C528();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a1, a3);
}

unint64_t sub_1A57066B0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1A57066FC();
  a1[2] = sub_1A5706738();
  a1[3] = sub_1A5706774();
  a1[4] = sub_1A57067B0();
  a1[5] = sub_1A57067EC();
  result = sub_1A5706828();
  a1[6] = result;
  return result;
}

unint64_t sub_1A57066FC()
{
  unint64_t result;

  result = qword_1EE796EC0;
  if (!qword_1EE796EC0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for UnknownMessageIdentifier, &type metadata for UnknownMessageIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EE796EC0);
  }
  return result;
}

unint64_t sub_1A5706738()
{
  unint64_t result;

  result = qword_1EE796EA8;
  if (!qword_1EE796EA8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for UnknownMessageIdentifier, &type metadata for UnknownMessageIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EE796EA8);
  }
  return result;
}

unint64_t sub_1A5706774()
{
  unint64_t result;

  result = qword_1EE796E88;
  if (!qword_1EE796E88)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for UnknownMessageIdentifier, &type metadata for UnknownMessageIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EE796E88);
  }
  return result;
}

unint64_t sub_1A57067B0()
{
  unint64_t result;

  result = qword_1EE796EB8;
  if (!qword_1EE796EB8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for UnknownMessageIdentifier, &type metadata for UnknownMessageIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EE796EB8);
  }
  return result;
}

unint64_t sub_1A57067EC()
{
  unint64_t result;

  result = qword_1EE796E90;
  if (!qword_1EE796E90)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for UnknownMessageIdentifier, &type metadata for UnknownMessageIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EE796E90);
  }
  return result;
}

unint64_t sub_1A5706828()
{
  unint64_t result;

  result = qword_1EE796EB0;
  if (!qword_1EE796EB0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for UnknownMessageIdentifier, &type metadata for UnknownMessageIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EE796EB0);
  }
  return result;
}

unint64_t sub_1A5706868()
{
  unint64_t result;

  result = qword_1EE796EA0;
  if (!qword_1EE796EA0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for UnknownMessageIdentifier, &type metadata for UnknownMessageIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EE796EA0);
  }
  return result;
}

unint64_t sub_1A57068A8()
{
  unint64_t result;

  result = qword_1EE796E98;
  if (!qword_1EE796E98)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for UnknownMessageIdentifier, &type metadata for UnknownMessageIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EE796E98);
  }
  return result;
}

ValueMetadata *type metadata accessor for UnknownMessageIdentifier()
{
  return &type metadata for UnknownMessageIdentifier;
}

uint64_t storeEnumTagSinglePayload for UnknownMessageIdentifier.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A5706934 + 4 * asc_1A59B54B0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A5706954 + 4 * byte_1A59B54B5[v4]))();
}

_BYTE *sub_1A5706934(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A5706954(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A570695C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A5706964(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A570696C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A5706974(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for UnknownMessageIdentifier.CodingKeys()
{
  return &type metadata for UnknownMessageIdentifier.CodingKeys;
}

unint64_t sub_1A5706994()
{
  unint64_t result;

  result = qword_1EE7A9D18;
  if (!qword_1EE7A9D18)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59B5774, &type metadata for UnknownMessageIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A9D18);
  }
  return result;
}

unint64_t sub_1A57069D4()
{
  unint64_t result;

  result = qword_1EE7A9D20;
  if (!qword_1EE7A9D20)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59B56E4, &type metadata for UnknownMessageIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A9D20);
  }
  return result;
}

unint64_t sub_1A5706A14()
{
  unint64_t result;

  result = qword_1EE7A9D28;
  if (!qword_1EE7A9D28)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59B570C, &type metadata for UnknownMessageIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A9D28);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_96(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_1_79(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 56))(a3, a4);
}

uint64_t OUTLINED_FUNCTION_2_66()
{
  return sub_1A594C510();
}

uint64_t OUTLINED_FUNCTION_3_50()
{
  return sub_1A594C4F8();
}

uint64_t OUTLINED_FUNCTION_4_46()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 32))(v1, v2, v0);
}

uint64_t OUTLINED_FUNCTION_5_44()
{
  return sub_1A594C4BC();
}

uint64_t OUTLINED_FUNCTION_7_33()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t OUTLINED_FUNCTION_8_37()
{
  return sub_1A594C504();
}

uint64_t OUTLINED_FUNCTION_13_30(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, v3, v1);
}

uint64_t OUTLINED_FUNCTION_14_26()
{
  return sub_1A594C354();
}

uint64_t OUTLINED_FUNCTION_15_32()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_17_28()
{
  return sub_1A594B280();
}

uint64_t static MessageIdentifierRange.__derived_struct_equals(_:_:)()
{
  return sub_1A594B340();
}

uint64_t sub_1A5706B34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::Int v4;
  Swift::Int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  OUTLINED_FUNCTION_16_4();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = sub_1A5705948(v6, v4, v2);
  sub_1A594B364();
  swift_retain();
  swift_retain();
  v9 = 0;
  if ((sub_1A594B280() & 1) != 0)
  {
    sub_1A5707E18(v1, v7, v5, v3);
    v9 = v10;
  }
  swift_release();
  swift_release();
  result = v8 + v9;
  if (__OFADD__(v8, v9))
    __break(1u);
  return result;
}

uint64_t MessageIdentifierRange.range.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_28_16();
  return OUTLINED_FUNCTION_11_24(a1, v1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 16));
}

uint64_t MessageIdentifierRange.range.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_14_27();
  return OUTLINED_FUNCTION_11_24(v1, v0, v2, *(uint64_t (**)(void))(*(_QWORD *)(v2 - 8) + 40));
}

double (*MessageIdentifierRange.range.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t MessageIdentifierRange.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_28_16();
  return OUTLINED_FUNCTION_11_24(a2, a1, v4, *(uint64_t (**)(void))(*(_QWORD *)(v4 - 8) + 32));
}

void MessageIdentifierRange.init(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t);
  uint64_t v30[2];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  OUTLINED_FUNCTION_16_4();
  v3 = v2;
  v5 = v4;
  v38 = v6;
  v36 = v7;
  v35 = OUTLINED_FUNCTION_9_38();
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_17_29(v9, v30[0]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v30 - v11;
  v13 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_5_45();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v30 - v16;
  v18 = OUTLINED_FUNCTION_31_16();
  v34 = *(_QWORD *)(v18 - 8);
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_27_16();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_20_21();
  v32 = v21;
  v37 = v3;
  static MessageIdentifier.min.getter(v5, v3);
  v33 = v13;
  OUTLINED_FUNCTION_33_15(v1, v38);
  v31 = v1;
  OUTLINED_FUNCTION_38_11();
  OUTLINED_FUNCTION_37_16();
  v22 = sub_1A594CA74();
  OUTLINED_FUNCTION_18_24(v22);
  if ((v13 & 1) != 0)
  {
    v38 = v18;
    v23 = v35;
    v24 = (uint64_t)&v12[*(int *)(v35 + 48)];
    v25 = v30[1];
    OUTLINED_FUNCTION_6_41((uint64_t)v12, (uint64_t)v17);
    OUTLINED_FUNCTION_6_41(v24, v31);
    v26 = v25 + *(int *)(v23 + 48);
    OUTLINED_FUNCTION_33_15(v25, (uint64_t)v12);
    OUTLINED_FUNCTION_33_15(v26, v24);
    OUTLINED_FUNCTION_6_41(v0, v25);
    OUTLINED_FUNCTION_35_12(v26);
    v27 = v25 + *(int *)(v23 + 48);
    OUTLINED_FUNCTION_6_41(v25, (uint64_t)v12);
    OUTLINED_FUNCTION_6_41(v27, v24);
    OUTLINED_FUNCTION_6_41(v0 + *(int *)(v38 + 36), v27);
    OUTLINED_FUNCTION_35_12(v25);
    v28 = OUTLINED_FUNCTION_32_16();
    v29(v28);
    OUTLINED_FUNCTION_23_22(v36);
    OUTLINED_FUNCTION_1_3();
  }
  else
  {
    __break(1u);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t);
  _QWORD v33[2];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  OUTLINED_FUNCTION_16_4();
  v4 = v3;
  v6 = v5;
  v39 = v7;
  v37 = v8;
  v36 = OUTLINED_FUNCTION_9_38();
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_1_80();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v33 - v11;
  v13 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_26_13();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v33 - v16;
  v18 = OUTLINED_FUNCTION_31_16();
  v35 = *(_QWORD *)(v18 - 8);
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_27_16();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_20_21();
  v33[1] = v21;
  v34 = v13;
  v33[0] = *(_QWORD *)(v13 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v33[0])(v17, v39, v6);
  v38 = v4;
  static MessageIdentifier.max.getter(v6, v4);
  OUTLINED_FUNCTION_38_11();
  OUTLINED_FUNCTION_37_16();
  v22 = sub_1A594C954();
  OUTLINED_FUNCTION_18_24(v22);
  if ((v4 & 1) != 0)
  {
    v39 = v18;
    v23 = v36;
    v24 = (uint64_t)&v12[*(int *)(v36 + 48)];
    v25 = (uint64_t)v12;
    v26 = v34;
    OUTLINED_FUNCTION_6_41(v25, (uint64_t)v17);
    OUTLINED_FUNCTION_6_41(v24, v0);
    v27 = v1 + *(int *)(v23 + 48);
    ((void (*)(uint64_t, uint64_t, uint64_t))v33[0])(v1, v25, v6);
    OUTLINED_FUNCTION_33_15(v27, v24);
    OUTLINED_FUNCTION_6_41(v2, v1);
    v28 = *(void (**)(uint64_t))(v26 + 8);
    OUTLINED_FUNCTION_35_12(v27);
    v29 = v1 + *(int *)(v23 + 48);
    OUTLINED_FUNCTION_6_41(v1, v25);
    OUTLINED_FUNCTION_6_41(v29, v24);
    OUTLINED_FUNCTION_6_41(v2 + *(int *)(v39 + 36), v29);
    v30 = OUTLINED_FUNCTION_202();
    v28(v30);
    v31 = OUTLINED_FUNCTION_32_16();
    v32(v31);
    OUTLINED_FUNCTION_23_22(v37);
    OUTLINED_FUNCTION_1_3();
  }
  else
  {
    __break(1u);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  OUTLINED_FUNCTION_16_4();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = OUTLINED_FUNCTION_9_38();
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_1_80();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v26 - v13;
  v15 = sub_1A594B364();
  v31 = *(_QWORD *)(v15 - 8);
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_25_18();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_20_21();
  v30 = v18;
  if ((sub_1A594B298() & 1) != 0)
  {
    v19 = (uint64_t)&v14[*(int *)(v10 + 48)];
    v28 = v9;
    v29 = v3;
    v20 = *(_QWORD *)(v5 - 8);
    OUTLINED_FUNCTION_3_51((uint64_t)v14, v7);
    v27 = v15;
    OUTLINED_FUNCTION_22_25(v19, v7);
    v21 = v0 + *(int *)(v10 + 48);
    OUTLINED_FUNCTION_3_51(v0, (uint64_t)v14);
    OUTLINED_FUNCTION_3_51(v21, v19);
    OUTLINED_FUNCTION_22_25(v1, v0);
    v22 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    v22(v21, v5);
    v23 = v0 + *(int *)(v10 + 48);
    OUTLINED_FUNCTION_22_25(v0, (uint64_t)v14);
    OUTLINED_FUNCTION_22_25(v23, v19);
    v24 = v27;
    OUTLINED_FUNCTION_22_25(v1 + *(int *)(v27 + 36), v23);
    v25 = OUTLINED_FUNCTION_202();
    ((void (*)(uint64_t))v22)(v25);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v30, v1, v24);
    OUTLINED_FUNCTION_23_22(v28);
    OUTLINED_FUNCTION_1_3();
  }
  else
  {
    __break(1u);
  }
}

void MessageIdentifierRange.hash(into:)()
{
  sub_1A594B364();
  JUMPOUT(0x1A85AD7E8);
}

void MessageIdentifierRange.hashValue.getter()
{
  sub_1A594CE64();
  MessageIdentifierRange.hash(into:)();
}

uint64_t sub_1A5707118()
{
  return sub_1A594CED0();
}

void sub_1A5707138()
{
  sub_1A594CE64();
  MessageIdentifierRange.hash(into:)();
}

uint64_t sub_1A5707160()
{
  return sub_1A594CED0();
}

uint64_t sub_1A5707178()
{
  return static MessageIdentifierRange.__derived_struct_equals(_:_:)();
}

void MessageIdentifierRange.debugDescription.getter()
{
  sub_1A5682794((void (*)(char *))sub_1A5707EE4);
}

void MessageIdentifierRange.init(integerLiteral:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v0);
  MessageIdentifier.init(integerLiteral:)(v1, v2, v3);
  OUTLINED_FUNCTION_202();
  MessageIdentifierRange.init(_:)();
}

void sub_1A57073D8()
{
  MessageIdentifierRange.init(integerLiteral:)();
}

void static MessageIdentifierRange.all.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  OUTLINED_FUNCTION_16_4();
  v3 = v2;
  v5 = v4;
  v34 = v6;
  v7 = OUTLINED_FUNCTION_13_31();
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_1_80();
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v31 - v11;
  v13 = *(_QWORD *)(v5 - 8);
  v14 = MEMORY[0x1E0C80A78](v10);
  v16 = (char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)v31 - v17;
  v19 = OUTLINED_FUNCTION_8_38();
  v32 = *(_QWORD *)(v19 - 8);
  v33 = v19;
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_5_45();
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_20_21();
  v31[2] = v22;
  static MessageIdentifier.min.getter(v5, v3);
  static MessageIdentifier.max.getter(v5, v3);
  if ((OUTLINED_FUNCTION_15_33() & 1) != 0)
  {
    v23 = (uint64_t)&v12[*(int *)(v7 + 48)];
    v31[1] = v3;
    OUTLINED_FUNCTION_2_67((uint64_t)v12, (uint64_t)v18);
    OUTLINED_FUNCTION_2_67(v23, (uint64_t)v16);
    v24 = v0 + *(int *)(v7 + 48);
    OUTLINED_FUNCTION_6_41(v0, (uint64_t)v12);
    OUTLINED_FUNCTION_6_41(v24, v23);
    OUTLINED_FUNCTION_2_67(v1, v0);
    v25 = *(void (**)(uint64_t))(v13 + 8);
    v26 = OUTLINED_FUNCTION_60_5();
    v25(v26);
    v27 = v0 + *(int *)(v7 + 48);
    OUTLINED_FUNCTION_2_67(v0, (uint64_t)v12);
    OUTLINED_FUNCTION_2_67(v27, v23);
    OUTLINED_FUNCTION_2_67(v1 + *(int *)(v33 + 36), v27);
    v28 = OUTLINED_FUNCTION_202();
    v25(v28);
    OUTLINED_FUNCTION_10_35(v32);
    v29 = OUTLINED_FUNCTION_60_5();
    MessageIdentifierRange.init(_:)(v29, v30);
    OUTLINED_FUNCTION_1_3();
  }
  else
  {
    __break(1u);
  }
}

void static MessageIdentifier.... prefix(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30[2];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  OUTLINED_FUNCTION_16_4();
  OUTLINED_FUNCTION_39_14(v5);
  v32 = OUTLINED_FUNCTION_9_38();
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_1_80();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_19_24();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = OUTLINED_FUNCTION_8_38();
  v33 = *(_QWORD *)(v11 - 8);
  v34 = v11;
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_5_45();
  MEMORY[0x1E0C80A78](v13);
  v22 = OUTLINED_FUNCTION_16_26(v14, v15, v16, v17, v18, v19, v20, v21, v30[0]);
  static MessageIdentifier.min.getter(v22, v23);
  v31 = v4;
  if ((OUTLINED_FUNCTION_15_33() & 1) != 0)
  {
    v24 = v32;
    v25 = v2 + *(int *)(v32 + 48);
    v30[1] = v1;
    OUTLINED_FUNCTION_12_30(v2, (uint64_t)v10);
    OUTLINED_FUNCTION_2_67(v25, v31);
    v26 = v0 + *(int *)(v24 + 48);
    OUTLINED_FUNCTION_2_67(v0, v2);
    OUTLINED_FUNCTION_2_67(v26, v25);
    OUTLINED_FUNCTION_12_30(v3, v0);
    OUTLINED_FUNCTION_34_17(v26);
    v27 = v0 + *(int *)(v24 + 48);
    OUTLINED_FUNCTION_12_30(v0, v2);
    OUTLINED_FUNCTION_12_30(v27, v25);
    OUTLINED_FUNCTION_12_30(v3 + *(int *)(v34 + 36), v27);
    OUTLINED_FUNCTION_34_17(v0);
    OUTLINED_FUNCTION_10_35(v33);
    v28 = OUTLINED_FUNCTION_60_5();
    MessageIdentifierRange.init(_:)(v28, v29);
    OUTLINED_FUNCTION_1_3();
  }
  else
  {
    __break(1u);
  }
}

void static MessageIdentifier.... postfix(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32[4];
  uint64_t v33;
  uint64_t v34;

  OUTLINED_FUNCTION_16_4();
  OUTLINED_FUNCTION_39_14(v6);
  v7 = OUTLINED_FUNCTION_9_38();
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_1_80();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_19_24();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = OUTLINED_FUNCTION_8_38();
  v33 = *(_QWORD *)(v13 - 8);
  v34 = v13;
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_5_45();
  MEMORY[0x1E0C80A78](v15);
  v24 = OUTLINED_FUNCTION_16_26(v16, v17, v18, v19, v20, v21, v22, v23, v32[0]);
  static MessageIdentifier.max.getter(v24, v25);
  if ((OUTLINED_FUNCTION_15_33() & 1) != 0)
  {
    v26 = v2 + *(int *)(v7 + 48);
    v32[1] = v1;
    OUTLINED_FUNCTION_12_30(v2, v4);
    OUTLINED_FUNCTION_2_67(v26, (uint64_t)v12);
    v27 = v0 + *(int *)(v7 + 48);
    OUTLINED_FUNCTION_12_30(v0, v2);
    OUTLINED_FUNCTION_12_30(v27, v26);
    OUTLINED_FUNCTION_2_67(v3, v0);
    v28 = *(void (**)(uint64_t))(v5 + 8);
    v29 = OUTLINED_FUNCTION_60_5();
    v28(v29);
    v30 = v0 + *(int *)(v7 + 48);
    OUTLINED_FUNCTION_2_67(v0, v2);
    OUTLINED_FUNCTION_2_67(v30, v26);
    OUTLINED_FUNCTION_2_67(v3 + *(int *)(v34 + 36), v30);
    v31 = OUTLINED_FUNCTION_202();
    v28(v31);
    OUTLINED_FUNCTION_10_35(v33);
    OUTLINED_FUNCTION_40_13(v32[2]);
    OUTLINED_FUNCTION_1_3();
  }
  else
  {
    __break(1u);
  }
}

void static MessageIdentifier.... infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  OUTLINED_FUNCTION_16_4();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v29 = v10;
  v11 = OUTLINED_FUNCTION_13_31();
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_1_80();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v28 - v14;
  v28[2] = v3;
  v16 = OUTLINED_FUNCTION_8_38();
  v30 = *(_QWORD *)(v16 - 8);
  v31 = v16;
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_25_18();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_20_21();
  v28[1] = v19;
  v20 = v7;
  if ((OUTLINED_FUNCTION_15_33() & 1) != 0)
  {
    v21 = (uint64_t)&v15[*(int *)(v11 + 48)];
    v22 = *(_QWORD *)(v5 - 8);
    OUTLINED_FUNCTION_3_51((uint64_t)v15, v9);
    OUTLINED_FUNCTION_3_51(v21, v20);
    v23 = v0 + *(int *)(v11 + 48);
    OUTLINED_FUNCTION_3_51(v0, (uint64_t)v15);
    OUTLINED_FUNCTION_3_51(v23, v21);
    OUTLINED_FUNCTION_3_51(v1, v0);
    v24 = *(void (**)(uint64_t))(v22 + 8);
    v25 = OUTLINED_FUNCTION_60_5();
    v24(v25);
    v26 = v0 + *(int *)(v11 + 48);
    OUTLINED_FUNCTION_3_51(v0, (uint64_t)v15);
    OUTLINED_FUNCTION_3_51(v26, v21);
    OUTLINED_FUNCTION_3_51(v1 + *(int *)(v31 + 36), v26);
    v27 = OUTLINED_FUNCTION_202();
    v24(v27);
    OUTLINED_FUNCTION_36_14(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 32));
    OUTLINED_FUNCTION_40_13(v29);
    OUTLINED_FUNCTION_1_3();
  }
  else
  {
    __break(1u);
  }
}

uint64_t MessageIdentifierRange.lowerBound.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t MessageIdentifierRange.upperBound.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = v2 + *(int *)(sub_1A594B364() + 36);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, v5, v4);
}

uint64_t MessageIdentifierRange.count.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) + 48);
  v2 = sub_1A594B364();
  v4[0] = v1;
  v4[1] = sub_1A5707F10();
  MEMORY[0x1A85B1874](MEMORY[0x1E0DEA500], v2, v4);
  return sub_1A594BE20();
}

uint64_t MessageIdentifierRange.isEmpty.getter()
{
  OUTLINED_FUNCTION_28_16();
  return sub_1A594B34C();
}

void MessageIdentifierRange.clamped(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;

  OUTLINED_FUNCTION_16_4();
  v2 = v0;
  v4 = v3;
  v6 = v5;
  v47 = v7;
  v8 = *(_QWORD *)(v3 + 16);
  v46 = OUTLINED_FUNCTION_13_31();
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_26_13();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v39 - v11;
  v13 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v14);
  v39 = (uint64_t)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v39 - v17;
  v45 = *(_QWORD *)(v4 + 24);
  v19 = sub_1A594B364();
  v44 = *(_QWORD *)(v19 - 8);
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_17_29(v21, v39);
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_20_21();
  v41 = v23;
  v24 = OUTLINED_FUNCTION_21_26();
  v43 = v13;
  v48 = v18;
  if ((v24 & 1) != 0)
  {
    v25 = (uint64_t)v18;
    v26 = v6;
  }
  else
  {
    v27 = v6 + *(int *)(v19 + 36);
    if ((OUTLINED_FUNCTION_24_19() & 1) != 0)
    {
      v25 = (uint64_t)v48;
      v26 = v27;
    }
    else
    {
      v25 = (uint64_t)v48;
      v26 = v2;
    }
  }
  OUTLINED_FUNCTION_2_67(v25, v26);
  v42 = v19;
  v28 = *(int *)(v19 + 36);
  v29 = v6 + v28;
  v30 = v2 + v28;
  if ((OUTLINED_FUNCTION_24_19() & 1) == 0)
  {
    if ((OUTLINED_FUNCTION_21_26() & 1) != 0)
      v29 = v6;
    else
      v29 = v30;
  }
  v31 = v39;
  OUTLINED_FUNCTION_2_67(v39, v29);
  v32 = v46;
  v33 = (uint64_t)&v12[*(int *)(v46 + 48)];
  OUTLINED_FUNCTION_3_51((uint64_t)v12, (uint64_t)v48);
  OUTLINED_FUNCTION_3_51(v33, v31);
  v34 = v1 + *(int *)(v32 + 48);
  OUTLINED_FUNCTION_2_67(v1, (uint64_t)v12);
  OUTLINED_FUNCTION_2_67(v34, v33);
  v35 = v40;
  OUTLINED_FUNCTION_3_51(v40, v1);
  OUTLINED_FUNCTION_34_17(v34);
  v36 = v1 + *(int *)(v32 + 48);
  OUTLINED_FUNCTION_3_51(v1, (uint64_t)v12);
  OUTLINED_FUNCTION_3_51(v36, v33);
  OUTLINED_FUNCTION_3_51(v35 + *(int *)(v42 + 36), v36);
  OUTLINED_FUNCTION_34_17(v1);
  OUTLINED_FUNCTION_36_14(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 32));
  v37 = OUTLINED_FUNCTION_60_5();
  MessageIdentifierRange.init(_:)(v37, v38);
  OUTLINED_FUNCTION_1_3();
}

uint64_t MessageIdentifierRange.overlaps(_:)(uint64_t a1, uint64_t a2)
{
  return sub_1A5707DE4(a1, a2, MEMORY[0x1E0DEA4A8]);
}

uint64_t MessageIdentifierRange.contains(_:)(uint64_t a1, uint64_t a2)
{
  return sub_1A5707DE4(a1, a2, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEA4A0]);
}

uint64_t sub_1A5707DE4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_14_27();
  return a3(v3, v4);
}

void sub_1A5707E18(uint64_t a1, uint64_t a2, Swift::Int a3, uint64_t a4)
{
  Swift::Int v8;
  Swift::Int v9;
  char v10;
  Swift::String v11;
  Swift::Int v12;
  int v13;
  BOOL v14;
  int v15;
  uint64_t v16;

  v8 = *(unsigned int *)(a1 + 20);
  sub_1A56814E0(58, 0xE100000000000000, a1 + 8, v8);
  if ((v10 & 1) != 0)
  {
    v11._countAndFlagsBits = 58;
    v11._object = (void *)0xE100000000000000;
    v9 = ByteBuffer._setStringSlowpath(_:at:)(v11, v8);
  }
  v12 = v9;
  v13 = *(_DWORD *)(a1 + 20);
  v14 = __CFADD__(v13, (_DWORD)v9);
  v15 = v13 + v9;
  if (v14)
  {
    __break(1u);
    goto LABEL_7;
  }
  *(_DWORD *)(a1 + 20) = v15;
  v16 = sub_1A594B364();
  if (__OFADD__(v12, sub_1A5705948(a2 + *(int *)(v16 + 36), a3, a4)))
LABEL_7:
    __break(1u);
}

uint64_t sub_1A5707EE4()
{
  return sub_1A5706B34();
}

unint64_t sub_1A5707F10()
{
  unint64_t result;

  result = qword_1EE7A4188;
  if (!qword_1EE7A4188)
  {
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEDC88], MEMORY[0x1E0DEDC60]);
    atomic_store(result, (unint64_t *)&qword_1EE7A4188);
  }
  return result;
}

void sub_1A5707F4C()
{
  JUMPOUT(0x1A85B1874);
}

uint64_t sub_1A5707F5C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A594B364();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1A5707FD0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int v13;
  uint64_t v16;
  void (*v17)(uint64_t *, uint64_t *, uint64_t);

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_DWORD *)(v6 + 80);
  v9 = v8;
  v10 = ~(unint64_t)v8;
  v11 = v7 + v8;
  v12 = (v11 & v10) + v7;
  v13 = v8 & 0x100000;
  if (v9 > 7 || v13 != 0 || v12 > 0x18)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v9 + 16) & v10));
    swift_retain();
  }
  else
  {
    v17 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v17(a1, a2, *(_QWORD *)(a3 + 16));
    v17((uint64_t *)(((unint64_t)v4 + v11) & v10), (uint64_t *)(((unint64_t)a2 + v11) & v10), v5);
  }
  return v4;
}

uint64_t sub_1A5708084(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v6)(unint64_t, uint64_t);

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v6 = *(uint64_t (**)(unint64_t, uint64_t))(v4 + 8);
  v6(a1, v3);
  return v6((*(_QWORD *)(v4 + 64) + a1 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), v3);
}

unint64_t sub_1A57080EC(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, unint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
  v7(a1, a2, v5);
  v7((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), v5);
  return a1;
}

unint64_t sub_1A5708158(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, unint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  v7((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), v5);
  return a1;
}

unint64_t sub_1A57081C4(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, unint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32);
  v7(a1, a2, v5);
  v7((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), v5);
  return a1;
}

unint64_t sub_1A5708230(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, unint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  v7((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), v5);
  return a1;
}

uint64_t sub_1A570829C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_18;
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return __swift_getEnumTagSinglePayload(a1, v6, v4);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return (v6 + v12 + 1);
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1A570835C + 4 * byte_1A59B57F0[(v8 - 1)]))();
}

void sub_1A57083A8(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      v14 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0u;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v15 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t type metadata accessor for MessageIdentifierRange(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MessageIdentifierRange);
}

uint64_t OUTLINED_FUNCTION_2_67(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_3_51(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_6_41(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_8_38()
{
  return sub_1A594B364();
}

uint64_t OUTLINED_FUNCTION_9_38()
{
  return swift_getTupleTypeMetadata2();
}

uint64_t OUTLINED_FUNCTION_10_35@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a1 + 32))(v2, v3, v1);
}

uint64_t OUTLINED_FUNCTION_11_24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t OUTLINED_FUNCTION_12_30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_13_31()
{
  return swift_getTupleTypeMetadata2();
}

uint64_t OUTLINED_FUNCTION_14_27()
{
  return sub_1A594B364();
}

uint64_t OUTLINED_FUNCTION_15_33()
{
  return sub_1A594B298();
}

uint64_t OUTLINED_FUNCTION_16_26(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v11 - 104) = (char *)&a9 - v9;
  return v10;
}

void OUTLINED_FUNCTION_17_29(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 152) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_18_24(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t OUTLINED_FUNCTION_21_26()
{
  return sub_1A594B274();
}

uint64_t OUTLINED_FUNCTION_22_25(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_23_22@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return MessageIdentifierRange.init(_:)(v1, a1);
}

uint64_t OUTLINED_FUNCTION_24_19()
{
  return sub_1A594B280();
}

uint64_t OUTLINED_FUNCTION_28_16()
{
  return sub_1A594B364();
}

uint64_t OUTLINED_FUNCTION_31_16()
{
  return sub_1A594B364();
}

uint64_t OUTLINED_FUNCTION_32_16()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 136);
}

uint64_t OUTLINED_FUNCTION_33_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_34_17(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_35_12(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_36_14@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v2, v3, v1);
}

uint64_t OUTLINED_FUNCTION_37_16()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_38_11()
{
  return sub_1A594B298();
}

void OUTLINED_FUNCTION_39_14(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 112) = a1;
}

uint64_t OUTLINED_FUNCTION_40_13@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return MessageIdentifierRange.init(_:)(v1, a1);
}

void sub_1A57087E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  uint64_t v25;
  Swift::Int v26;
  Swift::Int v27;
  char v28;
  char v29;
  Swift::Int v30;
  Swift::Int v31;
  Swift::String v32;
  int v33;
  char v34;
  int v35;
  BOOL v36;
  int v37;
  BOOL v38;
  Swift::Int v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  _QWORD *v43;
  char *v44;
  Swift::Int v45;
  void *v46;
  uint64_t v47;
  char v48;
  int v49;
  int v50;
  char *v51;
  Swift::Int v52;
  Swift::Int v53;
  Swift::Int v54;
  char v55;
  char v56;
  Swift::String v57;
  int v58;
  int v59;
  _QWORD v60[8];
  Swift::Int v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unsigned int v71;
  unsigned __int8 v72;
  uint64_t v73;
  uint64_t v74;

  OUTLINED_FUNCTION_16_4();
  v73 = v10;
  v74 = v11;
  v12 = v9;
  v64 = v13;
  v65 = v14;
  v67 = v15;
  v68 = v16;
  v18 = v17;
  v63 = v19;
  v21 = v20;
  v23 = v22;
  v24 = a9;
  v70 = v22;
  v71 = v20;
  v69 = HIDWORD(v20);
  v72 = BYTE4(v20);
  v25 = v9 + 8;
  v26 = *(unsigned int *)(v25 + 12);
  v66 = v20 & 0xFFFFFFFFFFLL;
  if (sub_1A5668CAC(v22, v20 & 0xFFFFFFFFFFLL) < 1)
  {
    v30 = 0;
    v31 = 0;
    if ((a9 & 1) == 0)
      goto LABEL_14;
  }
  else
  {
    v62 = a9;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_retain();
    swift_retain();
    sub_1A56814E0(v63, (unint64_t)v18, v25, v26);
    v61 = v27;
    v29 = v28;
    swift_bridgeObjectRelease();
    if ((v29 & 1) != 0)
    {
      v32._countAndFlagsBits = v63;
      v32._object = v18;
      v30 = ByteBuffer._setStringSlowpath(_:at:)(v32, v26);
      OUTLINED_FUNCTION_4_4();
      swift_release();
    }
    else
    {
      OUTLINED_FUNCTION_4_4();
      swift_release();
      v30 = v61;
    }
    v33 = *(_DWORD *)(v12 + 20);
    v24 = v62;
    if (__CFADD__(v33, (_DWORD)v30))
      goto LABEL_35;
    *(_DWORD *)(v12 + 20) = v33 + v30;
    if ((v24 & 1) == 0)
    {
      v31 = 0;
      goto LABEL_14;
    }
  }
  OUTLINED_FUNCTION_48_8(40);
  if ((v34 & 1) != 0)
    v31 = OUTLINED_FUNCTION_67_7(40);
  v35 = *(_DWORD *)(v12 + 20);
  v36 = __CFADD__(v35, (_DWORD)v31);
  v37 = v35 + v31;
  if (v36)
    goto LABEL_37;
  *(_DWORD *)(v12 + 20) = v37;
LABEL_14:
  v38 = __OFADD__(v30, v31);
  v39 = v30 + v31;
  if (v38)
  {
    __break(1u);
    goto LABEL_32;
  }
  MEMORY[0x1E0C80A78](v31);
  v60[2] = v41;
  v60[3] = v40;
  v60[4] = v12;
  v60[5] = &v70;
  v42 = v69;
  v60[6] = v67;
  v60[7] = v68;
  sub_1A54E4334(v23, v21, v69);
  v43 = sub_1A5708C2C(0, (_QWORD *(*)(uint64_t *__return_ptr, uint64_t *, _QWORD *))sub_1A570D538, (uint64_t)v60, v23, v66);
  sub_1A54E3458(v23, v21, v42);
  v38 = __OFADD__(v39, v43);
  v44 = (char *)v43 + v39;
  if (v38)
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    return;
  }
  if ((v24 & 1) != 0)
  {
    OUTLINED_FUNCTION_48_8(41);
    v47 = v64;
    v46 = v65;
    if ((v48 & 1) != 0)
      v45 = OUTLINED_FUNCTION_67_7(41);
    v49 = *(_DWORD *)(v12 + 20);
    v36 = __CFADD__(v49, (_DWORD)v45);
    v50 = v49 + v45;
    if (v36)
      goto LABEL_38;
    *(_DWORD *)(v12 + 20) = v50;
  }
  else
  {
    v45 = 0;
    v47 = v64;
    v46 = v65;
  }
  v51 = &v44[v45];
  if (__OFADD__(v44, v45))
    goto LABEL_33;
  v52 = *(unsigned int *)(v12 + 20);
  if (sub_1A5668CAC(v70, v71 | ((unint64_t)v72 << 32)) < 1)
  {
    v54 = 0;
  }
  else
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_retain();
    swift_retain();
    sub_1A56814E0(v47, (unint64_t)v46, v25, v52);
    v54 = v53;
    v56 = v55;
    swift_bridgeObjectRelease();
    if ((v56 & 1) != 0)
    {
      v57._countAndFlagsBits = v47;
      v57._object = v46;
      v54 = ByteBuffer._setStringSlowpath(_:at:)(v57, v52);
    }
    swift_release();
    OUTLINED_FUNCTION_4_4();
    v58 = *(_DWORD *)(v12 + 20);
    v36 = __CFADD__(v58, (_DWORD)v54);
    v59 = v58 + v54;
    if (v36)
      goto LABEL_36;
    *(_DWORD *)(v12 + 20) = v59;
  }
  if (__OFADD__(v51, v54))
    goto LABEL_34;
}

uint64_t sub_1A5708AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t *, uint64_t), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  uint64_t result;
  BOOL v16;
  uint64_t v17;
  Swift::Int v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  Swift::String v23;
  int v24;
  BOOL v25;
  int v26;
  uint64_t v27;
  uint64_t v28;

  v28 = a3;
  result = a4(&v28, a6);
  v16 = __OFADD__(a1, result);
  v17 = a1 + result;
  if (v16)
  {
    __break(1u);
    goto LABEL_12;
  }
  v18 = *(unsigned int *)(a6 + 20);
  result = sub_1A5668CAC(a7, a8 & 0xFFFFFFFFFFLL);
  if (__OFSUB__(result, 1))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (result - 1 <= a2)
  {
    v20 = 0;
  }
  else
  {
    v27 = v17;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_retain();
    swift_retain();
    sub_1A56814E0(a9, (unint64_t)a10, a6 + 8, v18);
    v20 = v19;
    v22 = v21;
    result = swift_bridgeObjectRelease();
    if ((v22 & 1) != 0)
    {
      v23._countAndFlagsBits = a9;
      v23._object = a10;
      result = ByteBuffer._setStringSlowpath(_:at:)(v23, v18);
      v20 = result;
    }
    v24 = *(_DWORD *)(a6 + 20);
    v25 = __CFADD__(v24, (_DWORD)v20);
    v26 = v24 + v20;
    v17 = v27;
    if (v25)
      goto LABEL_14;
    *(_DWORD *)(a6 + 20) = v26;
    swift_release();
    swift_release();
  }
  result = v17 + v20;
  if (__OFADD__(v17, v20))
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
  return result;
}

_QWORD *sub_1A5708C2C(uint64_t a1, _QWORD *(*a2)(uint64_t *__return_ptr, uint64_t *, _QWORD *), uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v5;
  unint64_t v9;
  _QWORD *result;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;
  _QWORD v16[2];
  uint64_t v17;

  v17 = a1;
  v9 = HIDWORD(a5);
  result = (_QWORD *)sub_1A54E4334(a4, a5, SBYTE4(a5));
  v11 = 0;
  v12 = a1;
  while (v9 == 1)
  {
    v13 = *(_QWORD *)(a4 + 16);
    if (v11 == v13)
      goto LABEL_7;
    if (v11 >= v13)
    {
      __break(1u);
      goto LABEL_12;
    }
    v16[0] = v11;
    v16[1] = *(_QWORD *)(a4 + 32 + 8 * v11);
    result = a2(&v15, &v17, v16);
    if (v5)
    {
LABEL_7:
      sub_1A54E3458(a4, a5, 1);
      return (_QWORD *)v12;
    }
    ++v11;
    v12 = v15;
    v17 = v15;
  }
  if (v9 == 2)
    return (_QWORD *)a1;
LABEL_12:
  if (a4 >= (int)a5)
    __break(1u);
  __break(1u);
  return result;
}

BOOL sub_1A5708D38(uint64_t a1, _BOOL8 a2)
{
  return !static SectionSpecifier.Part.< infix(_:_:)(a2, a1);
}

BOOL sub_1A5708D60(unsigned int a1, unsigned int a2)
{
  return a1 <= a2;
}

void sub_1A5708D6C(_QWORD *a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, unsigned __int8 a6)
{
  if ((_s12NIOIMAPCore216SectionSpecifierV4PartV23__derived_struct_equalsySbAE_AEtFZ_0(a4, a1) & 1) != 0)
  {
    if (a6 > 1u)
      __asm { BR              X9 }
  }
  else
  {
    static SectionSpecifier.Part.< infix(_:_:)((_BOOL8)a4, (uint64_t)a1);
  }
  OUTLINED_FUNCTION_17_1();
}

void sub_1A5708E04()
{
  JUMPOUT(0x1A5708DD8);
}

void sub_1A5708E18()
{
  JUMPOUT(0x1A5708DD8);
}

void sub_1A5708E34()
{
  JUMPOUT(0x1A5708DD8);
}

uint64_t sub_1A5708E3C(unint64_t a1, unsigned __int8 a2, uint64_t a3, unsigned __int8 a4)
{
  _BOOL4 v5;

  if (a4 > 1u)
    return ((uint64_t (*)(void))((char *)&loc_1A5708E5C + 4 * byte_1A59B5904[a3]))();
  v5 = a2 > 1u && a1 > 2;
  return !v5;
}

void sub_1A5708E80()
{
  JUMPOUT(0x1A5708E5CLL);
}

void sub_1A5708E94()
{
  JUMPOUT(0x1A5708E5CLL);
}

void sub_1A5708EB0()
{
  JUMPOUT(0x1A5708E5CLL);
}

uint64_t sub_1A5708EB8(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  v3 = result;
  if (!BYTE4(a3))
    goto LABEL_5;
  if (BYTE4(a3) == 1)
  {
    if (*(_QWORD *)(a2 + 16) >= result)
      goto LABEL_8;
    __break(1u);
LABEL_5:
    if (result > 1)
    {
LABEL_11:
      __break(1u);
      goto LABEL_12;
    }
LABEL_8:
    if ((result & 0x8000000000000000) == 0)
    {
      sub_1A54E4334(a2, a3, SBYTE4(a3));
      return v3;
    }
    __break(1u);
    goto LABEL_11;
  }
  if (result <= 0)
    goto LABEL_8;
LABEL_12:
  __break(1u);
  return result;
}

void static MessageIdentifierSet.__derived_struct_equals(_:_:)(int32x2_t *a1, uint64_t a2, int32x2_t *a3, uint64_t a4)
{
  sub_1A56B614C(a1, a2 & 0xFFFFFFFFFFLL, a3, a4 & 0xFFFFFFFFFFLL);
}

BOOL MessageIdentifierSet.isEmpty.getter(uint64_t a1, uint64_t a2)
{
  if (!BYTE4(a2))
    return 0;
  if (BYTE4(a2) == 1)
    return *(_QWORD *)(a1 + 16) == 0;
  return 1;
}

void static MessageIdentifierSet.all.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_45_11();
  OUTLINED_FUNCTION_64_5(0, v2, v3, v4);
  OUTLINED_FUNCTION_5_6();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v9 - v6;
  static MessageIdentifierRange.all.getter();
  MessageIdentifierSet.init(_:)((uint64_t)v7, v1, v0, v8);
  OUTLINED_FUNCTION_8_1();
}

void MessageIdentifierSet.init(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;

  v7 = type metadata accessor for MessageIdentifierRange(0, a2, a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  OUTLINED_FUNCTION_5_6();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v13 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v13 - v10, a1, v7);
  v12 = Range<>.init<A>(_:)((uint64_t)v11, a2, a3);
  sub_1A57095F4(v12);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
  OUTLINED_FUNCTION_17_1();
}

void MessageIdentifierSet._ranges.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_45_11();
  sub_1A54E4334(v0, v1, SBYTE4(v1));
  OUTLINED_FUNCTION_1();
}

uint64_t MessageIdentifierSet._ranges.setter(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  int v3;
  unint64_t v5;
  uint64_t result;

  v3 = a2;
  v5 = HIDWORD(a2);
  result = sub_1A54E3458(*(_QWORD *)v2, *(unsigned int *)(v2 + 8), *(_BYTE *)(v2 + 12));
  *(_QWORD *)v2 = a1;
  *(_DWORD *)(v2 + 8) = v3;
  *(_BYTE *)(v2 + 12) = v5;
  return result;
}

double (*MessageIdentifierSet._ranges.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t MessageIdentifierSet.init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A594B7FC();
  OUTLINED_FUNCTION_29_16(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8));
  return 0;
}

void sub_1A57091AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v8 = type metadata accessor for MessageIdentifierRange(0, a3, a5, a4);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v14 - v10;
  (*(void (**)(char *, uint64_t, double))(v12 + 16))((char *)&v14 - v10, a1, v9);
  v13 = Range<>.init<A>(_:)((uint64_t)v11, a3, a5);
  sub_1A570932C(v13);
}

uint64_t Range<>.init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  unsigned int v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  MEMORY[0x1E0C80A78](a1);
  OUTLINED_FUNCTION_8_39();
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v8(v3, a1, a2);
  v9 = OUTLINED_FUNCTION_40_14();
  v10 = sub_1A594B364();
  v8(v3, a1 + *(int *)(v10 + 36), a2);
  result = OUTLINED_FUNCTION_40_14();
  v13 = (result + 1);
  if ((_DWORD)result == -1)
  {
    __break(1u);
  }
  else
  {
    v14 = type metadata accessor for MessageIdentifierRange(0, a2, a3, v12);
    result = OUTLINED_FUNCTION_60_9(*(_QWORD *)(v14 - 8));
    if (v9 <= v13)
      return v9 | (unint64_t)(v13 << 32);
  }
  __break(1u);
  return result;
}

void sub_1A570932C(unint64_t a1)
{
  uint64_t *v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  unsigned int v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;

  v2 = a1;
  v3 = HIDWORD(a1);
  if (HIDWORD(a1) == a1)
    return;
  v4 = v1;
  v5 = *v1;
  v6 = *((unsigned int *)v4 + 2);
  v7 = *((unsigned __int8 *)v4 + 12);
  if (*((_BYTE *)v4 + 12) && ((_DWORD)v7 != 1 || !*(_QWORD *)(v5 + 16)))
  {
    v12 = 0;
    v13 = 0;
LABEL_12:
    sub_1A570CBA0(v12, v13, v2);
    return;
  }
  v8 = sub_1A569A270(v5, v6 | (v7 << 32));
  if ((v9 & 1) == 0)
  {
    if (v2 >= HIDWORD(v8))
    {
      sub_1A570C2E4(v2);
      return;
    }
    v10 = sub_1A56C7EDC(v5, v6 | (v7 << 32));
    if ((v11 & 1) != 0)
      goto LABEL_26;
    if (v3 < v10)
    {
      if ((_DWORD)v7)
      {
        sub_1A570CD4C(0, 0, v2);
        *v4 = v5;
        *((_DWORD *)v4 + 2) = 0;
        *((_BYTE *)v4 + 12) = 1;
        return;
      }
      goto LABEL_27;
    }
    v12 = sub_1A570C8E4(v2, v5, v6 | (v7 << 32));
    v6 = v12;
    if (v12 == v14)
    {
      v13 = v12;
      goto LABEL_12;
    }
    v15 = v14;
    v16 = OUTLINED_FUNCTION_63_6(v12);
    if (__OFSUB__(v15, 1))
    {
      __break(1u);
    }
    else
    {
      if (v2 >= (unint64_t)v16)
        v2 = v16;
      v17 = (unint64_t)OUTLINED_FUNCTION_63_6(v15 - 1) >> 32;
      if (v17 <= v3)
        v17 = v3;
      if (v2 <= v17)
      {
        sub_1A570CBA0(v6, v15, v2 | (v17 << 32));
        return;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  sub_1A566AE90(v2);
  if (v5 >= (int)v6)
    __break(1u);
  __break(1u);
}

void MessageIdentifierSet.init(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  int v4;
  uint64_t v5;

  OUTLINED_FUNCTION_40_1();
  OUTLINED_FUNCTION_45_11();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_8_39();
  OUTLINED_FUNCTION_37_17();
  v3 = OUTLINED_FUNCTION_38_12();
  OUTLINED_FUNCTION_37_17();
  v4 = OUTLINED_FUNCTION_38_12();
  v5 = (v4 + 1);
  if (v4 == -1)
  {
    __break(1u);
  }
  else if (v3 <= v5)
  {
    sub_1A57095F4(v3 | (unint64_t)(v5 << 32));
    OUTLINED_FUNCTION_29_16(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    OUTLINED_FUNCTION_15_3();
    return;
  }
  __break(1u);
}

uint64_t sub_1A5709580()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t result;

  OUTLINED_FUNCTION_45_11();
  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 56))(v2, v1);
  OUTLINED_FUNCTION_29_16(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 8));
  result = (v3 - 1);
  if (!v3)
    __break(1u);
  return result;
}

unint64_t MessageIdentificationShiftWrapper.advanced(by:)(uint64_t a1, unsigned int a2)
{
  BOOL v2;
  unint64_t result;

  v2 = __OFADD__(a1, a2);
  result = a1 + a2;
  if (v2)
  {
    __break(1u);
    goto LABEL_6;
  }
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (HIDWORD(result))
LABEL_7:
    __break(1u);
  return result;
}

void sub_1A57095F4(unint64_t a1)
{
  int v1;
  unint64_t v2;
  uint64_t v3;

  v1 = a1;
  v2 = HIDWORD(a1);
  if (HIDWORD(a1) != a1)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B2F8);
    v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_1A59ABD10;
    *(_DWORD *)(v3 + 32) = v1;
    *(_DWORD *)(v3 + 36) = v2;
  }
  OUTLINED_FUNCTION_1();
}

void MessageIdentifierSet.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A56B6298(a1, a2, a3 & 0xFFFFFFFFFFLL);
}

void MessageIdentifierSet.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v2[72];

  OUTLINED_FUNCTION_45_11();
  OUTLINED_FUNCTION_15_10();
  sub_1A56B6298((uint64_t)v2, v1, v0 & 0xFFFFFFFFFFLL);
  sub_1A594CED0();
  OUTLINED_FUNCTION_23_6();
}

uint64_t sub_1A5709694(uint64_t a1, uint64_t a2)
{
  return sub_1A570AEDC(a1, a2, (uint64_t (*)(_QWORD, unint64_t))MessageIdentifierSet.hashValue.getter);
}

void sub_1A57096A0(uint64_t a1)
{
  uint64_t v1;

  MessageIdentifierSet.hash(into:)(a1, *(_QWORD *)v1, *(unsigned int *)(v1 + 8) | ((unint64_t)*(unsigned __int8 *)(v1 + 12) << 32));
}

uint64_t sub_1A57096B4()
{
  uint64_t v0;
  _BYTE v2[72];

  sub_1A594CE64();
  MessageIdentifierSet.hash(into:)((uint64_t)v2, *(_QWORD *)v0, *(unsigned int *)(v0 + 8) | ((unint64_t)*(unsigned __int8 *)(v0 + 12) << 32));
  return sub_1A594CED0();
}

void sub_1A57096FC(uint64_t a1, uint64_t a2)
{
  static MessageIdentifierSet.__derived_struct_equals(_:_:)(*(int32x2_t **)a1, *(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned __int8 *)(a1 + 12) << 32), *(int32x2_t **)a2, *(unsigned int *)(a2 + 8) | ((unint64_t)*(unsigned __int8 *)(a2 + 12) << 32));
}

void MessageIdentificationShiftWrapper.hash(into:)()
{
  sub_1A594CEAC();
  OUTLINED_FUNCTION_1();
}

void MessageIdentificationShiftWrapper.hashValue.getter()
{
  OUTLINED_FUNCTION_15_10();
  sub_1A594CEAC();
  sub_1A594CED0();
  OUTLINED_FUNCTION_23_6();
}

void sub_1A570977C()
{
  MessageIdentificationShiftWrapper.hashValue.getter();
}

void sub_1A5709784()
{
  MessageIdentificationShiftWrapper.hash(into:)();
}

unint64_t MessageIdentificationShiftWrapper.distance(to:)(unsigned int a1, unsigned int a2)
{
  return a1 - (unint64_t)a2;
}

void sub_1A5709798(unsigned int *a1@<X0>, unint64_t *a2@<X8>)
{
  unsigned int *v2;

  *a2 = MessageIdentificationShiftWrapper.distance(to:)(*a1, *v2);
  OUTLINED_FUNCTION_1();
}

void sub_1A57097C0(uint64_t *a1@<X0>, _DWORD *a2@<X8>)
{
  unsigned int *v2;

  *a2 = MessageIdentificationShiftWrapper.advanced(by:)(*a1, *v2);
  OUTLINED_FUNCTION_1();
}

_DWORD *sub_1A57097E8(_DWORD *a1, uint64_t a2, char a3, unsigned int *a4, unsigned int *a5, uint64_t *a6)
{
  return sub_1A570E2B0(a1, a2, a3 & 1, *a4, *a5, *a6);
}

BOOL sub_1A5709810(unsigned int *a1, unsigned int *a2)
{
  return sub_1A570981C(*a1, *a2);
}

BOOL sub_1A570981C(unsigned int a1, unsigned int a2)
{
  return a2 > a1;
}

BOOL sub_1A5709828(unsigned int *a1, unsigned int *a2)
{
  return sub_1A5708D60(*a1, *a2);
}

BOOL sub_1A5709834(unsigned int *a1, unsigned int *a2)
{
  return sub_1A570DE88(*a1, *a2);
}

BOOL sub_1A5709840(unsigned int *a1, unsigned int *a2)
{
  return sub_1A570E014(*a1, *a2);
}

uint64_t sub_1A570984C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void (*v7)(char *, uint64_t, uint64_t);
  unsigned int v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v7(v6, a1, a2);
  v8 = sub_1A5709580();
  v7(v6, a1, a2);
  result = sub_1A5709580();
  v10 = (result + 1);
  if ((_DWORD)result == -1)
  {
    __break(1u);
  }
  else
  {
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, a2);
    if (v8 <= v10)
      return v8 | (unint64_t)(v10 << 32);
  }
  __break(1u);
  return result;
}

void sub_1A5709930()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, char *, uint64_t);
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t TupleTypeMetadata2;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  OUTLINED_FUNCTION_16_4();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v39 = v6;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  OUTLINED_FUNCTION_46_8();
  v9 = v7 - v8;
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&TupleTypeMetadata2 - v12;
  v14 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_46_8();
  v17 = v15 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&TupleTypeMetadata2 - v19;
  v21 = sub_1A594B364();
  v37 = *(_QWORD *)(v21 - 8);
  v38 = v21;
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_46_8();
  v24 = v22 - v23;
  MEMORY[0x1E0C80A78](v25);
  v36 = (char *)&TupleTypeMetadata2 - v26;
  v40 = v1;
  sub_1A5706154(v5, v3, v1);
  if (HIDWORD(v5))
  {
    sub_1A5706154(HIDWORD(v5) - 1, v3, v40);
    if ((sub_1A594B298() & 1) != 0)
    {
      v27 = TupleTypeMetadata2;
      v28 = (uint64_t)&v13[*(int *)(TupleTypeMetadata2 + 48)];
      OUTLINED_FUNCTION_20_22((uint64_t)v13, (uint64_t)v20);
      OUTLINED_FUNCTION_20_22(v28, v17);
      v29 = v9 + *(int *)(v27 + 48);
      v30 = *(void (**)(uint64_t, char *, uint64_t))(v14 + 16);
      v30(v9, v13, v3);
      v30(v29, (char *)v28, v3);
      OUTLINED_FUNCTION_20_22(v24, v9);
      v31 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
      v31(v29, v3);
      v32 = v9 + *(int *)(v27 + 48);
      OUTLINED_FUNCTION_20_22(v9, (uint64_t)v13);
      OUTLINED_FUNCTION_20_22(v32, v28);
      v33 = v38;
      OUTLINED_FUNCTION_20_22(v24 + *(int *)(v38 + 36), v32);
      v31(v9, v3);
      v34 = (uint64_t)v36;
      (*(void (**)(char *, uint64_t, uint64_t))(v37 + 32))(v36, v24, v33);
      MessageIdentifierRange.init(_:)(v34, v39);
      OUTLINED_FUNCTION_1_3();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void MessageIdentifierSet.min()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_16_4();
  OUTLINED_FUNCTION_5_46(v3);
  OUTLINED_FUNCTION_5_6();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_10_36(v5, v6, v18);
  v7 = *(_QWORD *)(OUTLINED_FUNCTION_44_8() - 8);
  OUTLINED_FUNCTION_5_6();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_24_20();
  OUTLINED_FUNCTION_11_25(v9, v10, v11, v12);
  MEMORY[0x1A85B1874](&protocol conformance descriptor for MessageIdentifierSet<A>.RangeView, v2);
  OUTLINED_FUNCTION_51_9();
  sub_1A594BE2C();
  OUTLINED_FUNCTION_19_25();
  if (v13)
  {
    OUTLINED_FUNCTION_43_8();
    v16 = 1;
    v17 = v19;
  }
  else
  {
    OUTLINED_FUNCTION_17_30();
    OUTLINED_FUNCTION_25_19();
    v14 = OUTLINED_FUNCTION_61_7();
    OUTLINED_FUNCTION_85_0(v14, v7, v15);
    OUTLINED_FUNCTION_36_15();
    v16 = 0;
    v17 = v1;
  }
  __swift_storeEnumTagSinglePayload(v17, v16, 1, v0);
  OUTLINED_FUNCTION_1_3();
}

void MessageIdentifierSet.ranges.getter(uint64_t a1, uint64_t a2)
{
  sub_1A54E4334(a1, a2, SBYTE4(a2));
  OUTLINED_FUNCTION_1();
}

void MessageIdentifierSet.max()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_16_4();
  OUTLINED_FUNCTION_5_46(v3);
  OUTLINED_FUNCTION_5_6();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_10_36(v5, v6, v18);
  OUTLINED_FUNCTION_44_8();
  OUTLINED_FUNCTION_5_6();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_24_20();
  OUTLINED_FUNCTION_11_25(v8, v9, v10, v11);
  MEMORY[0x1A85B1874](&protocol conformance descriptor for MessageIdentifierSet<A>.RangeView, v2);
  OUTLINED_FUNCTION_51_9();
  sub_1A594B208();
  OUTLINED_FUNCTION_19_25();
  if (v12)
  {
    OUTLINED_FUNCTION_43_8();
    v16 = 1;
    v17 = v19;
  }
  else
  {
    OUTLINED_FUNCTION_17_30();
    OUTLINED_FUNCTION_25_19();
    v13 = OUTLINED_FUNCTION_61_7();
    OUTLINED_FUNCTION_85_0(v13, v14, v15);
    OUTLINED_FUNCTION_36_15();
    v16 = 0;
    v17 = v1;
  }
  __swift_storeEnumTagSinglePayload(v17, v16, 1, v0);
  OUTLINED_FUNCTION_1_3();
}

BOOL MessageIdentifierSet.isContiguous.getter(uint64_t a1, uint64_t a2)
{
  return (a2 & 0xFF00000000) != 0x100000000 || *(_QWORD *)(a1 + 16) < 2uLL;
}

uint64_t MessageIdentifierSet.RangeView.startIndex.getter()
{
  return 0;
}

uint64_t MessageIdentifierSet.RangeView.endIndex.getter(uint64_t a1, uint64_t a2)
{
  if (!BYTE4(a2))
    return 1;
  if (BYTE4(a2) == 1)
    return *(_QWORD *)(a1 + 16);
  return 0;
}

void MessageIdentifierSet.RangeView.subscript.getter(unint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A5709DEC(a1, a2, a3 & 0xFFFFFFFFFFLL);
  sub_1A5709930();
}

uint64_t sub_1A5709DEC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  uint64_t result;

  LODWORD(v3) = BYTE4(a3);
  if (BYTE4(a3) == 1)
  {
    if ((a1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v3 = *(_QWORD *)(a2 + 16);
      if (v3 > a1)
        return *(_QWORD *)(a2 + 8 * a1 + 32);
    }
    __break(1u);
  }
  if (!(_DWORD)v3)
  {
    if (a2 >= (int)a3)
      __break(1u);
    __break(1u);
  }
  OUTLINED_FUNCTION_47_8();
  result = OUTLINED_FUNCTION_4_47();
  __break(1u);
  return result;
}

uint64_t sub_1A5709E70()
{
  return sub_1A594BD3C();
}

uint64_t sub_1A5709E80()
{
  return sub_1A594BD54();
}

uint64_t sub_1A5709E8C()
{
  MEMORY[0x1A85B1874](&protocol conformance descriptor for MessageIdentifierSet<A>.RangeView);
  return sub_1A594BD30();
}

_QWORD *sub_1A5709EDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A570A258(a1, a2, a3, (_QWORD *(*)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0DEB508]);
}

uint64_t sub_1A5709EE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1A85B1874](&protocol conformance descriptor for MessageIdentifierSet<A>.RangeView, a3);
  return sub_1A594BD3C();
}

uint64_t sub_1A5709F4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  MEMORY[0x1A85B1874](&protocol conformance descriptor for MessageIdentifierSet<A>.RangeView, a4);
  return sub_1A594BD18();
}

uint64_t sub_1A5709FB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1A85B1874](&protocol conformance descriptor for MessageIdentifierSet<A>.RangeView, a3);
  return sub_1A594BD54();
}

void sub_1A570A004(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1A570A00C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = MessageIdentifierSet.RangeView.endIndex.getter(*(_QWORD *)v1, *(unsigned int *)(v1 + 8) | ((unint64_t)*(unsigned __int8 *)(v1 + 12) << 32));
  *a1 = result;
  return result;
}

void (*sub_1A570A040(uint64_t **a1, unint64_t *a2, uint64_t a3))(_QWORD *)
{
  uint64_t v3;
  uint64_t *v7;

  v7 = (uint64_t *)malloc(0x28uLL);
  *a1 = v7;
  v7[4] = (uint64_t)sub_1A570A0B0(v7, *a2, *(_QWORD *)v3, *(unsigned int *)(v3 + 8) | ((unint64_t)*(unsigned __int8 *)(v3 + 12) << 32), *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
  return sub_1A570A0AC;
}

uint64_t (*sub_1A570A0B0(uint64_t *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6))()
{
  uint64_t v10;
  uint64_t v11;

  v10 = type metadata accessor for MessageIdentifierRange(0, a5, a6, a4);
  *a1 = v10;
  v11 = *(_QWORD *)(v10 - 8);
  a1[1] = v11;
  a1[2] = (uint64_t)malloc(*(_QWORD *)(v11 + 64));
  MessageIdentifierSet.RangeView.subscript.getter(a2, a3, a4 & 0xFFFFFFFFFFLL);
  return sub_1A570A14C;
}

uint64_t sub_1A570A154(uint64_t a1)
{
  MEMORY[0x1A85B1874](&protocol conformance descriptor for MessageIdentifierSet<A>.RangeView, a1);
  return sub_1A594BD48();
}

void sub_1A570A1A8(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

uint64_t sub_1A570A1C4()
{
  MEMORY[0x1A85B1874](&protocol conformance descriptor for MessageIdentifierSet<A>.RangeView);
  return sub_1A594BD24();
}

unint64_t sub_1A570A214(unint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  if (BYTE4(a3))
  {
    if (BYTE4(a3) != 1)
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v3 = *(_QWORD *)(a2 + 16);
  }
  else
  {
    v3 = 1;
  }
  if (v3 <= result)
    goto LABEL_9;
  if (__OFADD__(result++, 1))
  {
    __break(1u);
    goto LABEL_9;
  }
  return result;
}

_QWORD *sub_1A570A24C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A570A258(a1, a2, a3, (_QWORD *(*)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0DEB500]);
}

_QWORD *sub_1A570A258(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *(*a4)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t, _QWORD))
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;

  OUTLINED_FUNCTION_56_10();
  v7 = MEMORY[0x1A85B1874](&protocol conformance descriptor for MessageIdentifierSet<A>.RangeView);
  result = a4(&v9, v5, v4, v7, MEMORY[0x1E0DEB458]);
  *v5 = v9;
  return result;
}

void sub_1A570A2B8(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  char v3;

  v2 = *(_DWORD *)(v1 + 8);
  v3 = *(_BYTE *)(v1 + 12);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_DWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 12) = v3;
  *(_QWORD *)(a1 + 16) = 0;
}

uint64_t sub_1A570A2D8(uint64_t a1)
{
  MEMORY[0x1A85B1874](&protocol conformance descriptor for MessageIdentifierSet<A>.RangeView, a1);
  return sub_1A594BDE4();
}

uint64_t sub_1A570A30C(uint64_t a1)
{
  MEMORY[0x1A85B1874](&protocol conformance descriptor for MessageIdentifierSet<A>.RangeView, a1);
  return sub_1A594BE14();
}

void MessageIdentifierSet.RangeView.init(arrayLiteral:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_27_17(a1, a2, a3, a4);
  OUTLINED_FUNCTION_52_7();
  OUTLINED_FUNCTION_45_0();
}

uint64_t sub_1A570A374(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = OUTLINED_FUNCTION_22_26(a1);
  v3 = v2;
  v4 = HIDWORD(v2);
  MessageIdentifierSet.ranges.getter(v1, v2 & 0xFFFFFFFFFFLL);
  v6 = v5;
  sub_1A54E3458(v1, v3, v4);
  return v6;
}

void sub_1A570A3C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A570A848(a1, a2, a3, (void (*)(uint64_t, _QWORD, _QWORD))MessageIdentifierSet.RangeView.init(arrayLiteral:));
}

void static MessageIdentifierSet.RangeView.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  type metadata accessor for MessageIdentifierSet.RangeView(0, a5, a6, a4);
  OUTLINED_FUNCTION_45_0();
}

uint64_t sub_1A570A42C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_64_5(255, a2, a3, a4);
  MEMORY[0x1A85B1874](&protocol conformance descriptor for MessageIdentifierRange<A>, v4);
  return sub_1A594B850() & 1;
}

void sub_1A570A480(uint64_t a1, uint64_t a2, uint64_t a3)
{
  static MessageIdentifierSet.RangeView.== infix(_:_:)(*(_QWORD *)a1, *(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned __int8 *)(a1 + 12) << 32), *(_QWORD *)a2, *(unsigned int *)(a2 + 8) | ((unint64_t)*(unsigned __int8 *)(a2 + 12) << 32), *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

void MessageIdentifierSet.init(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  sub_1A570A4EC(a1, a2, a3, (uint64_t)MEMORY[0x1E0DEA4B0], (uint64_t)MessageIdentifierRange.init(_:), a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

{
  sub_1A570A4EC(a1, a2, a3, (uint64_t)MEMORY[0x1E0DECD78], (uint64_t)MessageIdentifierRange.init(_:), a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

{
  sub_1A570A4EC(a1, a2, a3, (uint64_t)MEMORY[0x1E0DEC910], (uint64_t)MessageIdentifierRange.init(_:), a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

void sub_1A570A4EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  void (*v20)(void);
  void (*v21)(void);
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(_QWORD);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  OUTLINED_FUNCTION_40_1();
  a17 = v18;
  a18 = v19;
  v21 = v20;
  v23 = v22;
  v25 = v24(0);
  v26 = *(_QWORD *)(v25 - 8);
  OUTLINED_FUNCTION_5_6();
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&a9 - v28;
  OUTLINED_FUNCTION_35_13();
  type metadata accessor for MessageIdentifierRange(v30, v31, v32, v33);
  OUTLINED_FUNCTION_5_6();
  v35 = MEMORY[0x1E0C80A78](v34);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v26 + 16))(v29, v23, v25, v35);
  OUTLINED_FUNCTION_35_13();
  v21();
  OUTLINED_FUNCTION_35_13();
  MessageIdentifierSet.init(_:)(v36, v37, v38, v39);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v23, v25);
  OUTLINED_FUNCTION_15_3();
}

uint64_t MessageIdentifierSet.init(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[12];
  uint64_t v20;
  uint64_t v21;

  OUTLINED_FUNCTION_16_4();
  v20 = v1;
  v21 = v2;
  v4 = v3;
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_8_39();
  type metadata accessor for MessageIdentifierRange(0, v9, v10, v11);
  OUTLINED_FUNCTION_5_6();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v19 - v13;
  sub_1A594BFE8();
  if ((sub_1A594BFD0() & 1) != 0)
  {
    OUTLINED_FUNCTION_26_14();
    return 0;
  }
  else
  {
    v19[1] = -1;
    sub_1A594C42C();
    static MessageIdentifier.... infix(_:_:)();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0, v6);
    MessageIdentifierSet.init(_:)((uint64_t)v14, v6, v4, v16);
    v15 = v17;
    OUTLINED_FUNCTION_26_14();
  }
  return v15;
}

void MessageIdentifierSet.debugDescription.getter()
{
  sub_1A5682794((void (*)(char *))sub_1A570CD2C);
}

void sub_1A570A744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MessageIdentifierSet.writeIntoBuffer(_:)(a1, a2, a3 & 0xFFFFFFFFFFLL);
}

void MessageIdentifierSet.writeIntoBuffer(_:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v5;

  v5 = HIDWORD(a3);
  sub_1A54E4334(a2, a3, SBYTE4(a3));
  sub_1A57087E0(a2, a3 & 0xFFFFFFFFFFLL, 0, 0xE000000000000000, 44, 0xE100000000000000, 0, 0xE000000000000000, 0);
  sub_1A54E3458(a2, a3, v5);
  OUTLINED_FUNCTION_23_6();
}

void sub_1A570A7E4()
{
  MessageIdentifierSet.debugDescription.getter();
}

void MessageIdentifierSet.init(arrayLiteral:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_27_17(a1, a2, a3, a4);
  OUTLINED_FUNCTION_52_7();
  OUTLINED_FUNCTION_45_0();
}

void sub_1A570A82C(uint64_t a1)
{
  OUTLINED_FUNCTION_22_26(a1);
  OUTLINED_FUNCTION_16_27();
}

void sub_1A570A83C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A570A848(a1, a2, a3, (void (*)(uint64_t, _QWORD, _QWORD))MessageIdentifierSet.init(arrayLiteral:));
}

void sub_1A570A848(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, _QWORD, _QWORD))
{
  a4(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
  JUMPOUT(0x1A570A864);
}

void MessageIdentifierSet.startIndex.getter()
{
  OUTLINED_FUNCTION_3_1();
}

void MessageIdentifierSet.endIndex.getter()
{
  OUTLINED_FUNCTION_3_1();
}

uint64_t MessageIdentifierSet.index(after:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return OUTLINED_FUNCTION_30_17(a1, a2, 1, a4 & 0xFFFFFFFFFFLL, a3);
}

uint64_t MessageIdentifierSet.index(_:offsetBy:)(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v5;
  unsigned int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;

  v5 = a2;
  if ((a3 & 0x8000000000000000) == 0)
  {
    if (!a3)
      return result;
    v6 = (unsigned int *)(a4 + 8 * result + 36);
    v7 = a2;
    v8 = result;
    v9 = a3;
    while (BYTE4(a5) == 1)
    {
      if (v8 >= *(_QWORD *)(a4 + 16))
        goto LABEL_44;
      if (result < 0)
        goto LABEL_50;
      if (__OFADD__(v7, v9))
        goto LABEL_51;
      v10 = *v6 - (unint64_t)*(v6 - 1);
      if (v7 + v9 < v10)
        return v8;
      if ((v10 ^ v7) < 0)
      {
        if (v7 >= 0)
          v13 = v7;
        else
          v13 = -v7;
        if (v10 < 0)
          v10 = *(v6 - 1) - (unint64_t)*v6;
        v14 = v10 + v13;
        if (v14 < 0)
          goto LABEL_54;
        if (v7 < 0)
          v12 = v14;
        else
          v12 = -v14;
      }
      else
      {
        v11 = __OFSUB__(v10, v7);
        v12 = v10 - v7;
        if (v11)
          goto LABEL_53;
      }
      v11 = __OFSUB__(v9, v12);
      v9 -= v12;
      if (v11)
        goto LABEL_52;
      v7 = 0;
      v6 += 2;
      ++v8;
      if (v9 <= 0)
        return v8;
    }
    if (!BYTE4(a5))
    {
      if (result >= 1)
        goto LABEL_45;
      if (a4 < (int)a5)
        goto LABEL_62;
      __break(1u);
    }
    if (result < 0)
    {
      OUTLINED_FUNCTION_47_8();
      OUTLINED_FUNCTION_4_47();
      __break(1u);
LABEL_44:
      v5 = v7;
      result = v8;
      a3 = v9;
    }
LABEL_45:
    if (!__OFADD__(v5, a3))
      return result;
    goto LABEL_56;
  }
  v15 = a2 + a3;
  if (__OFADD__(v5, a3))
  {
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  if ((v15 & 0x8000000000000000) == 0)
    return result;
  v5 = result - 1;
  if (result < 1)
    return result;
  if (BYTE4(a5) == 2)
    goto LABEL_60;
  v16 = (unsigned int *)(a4 + 8 * result + 28);
  while (BYTE4(a5))
  {
    v17 = *(_QWORD *)(a4 + 16);
    if (v5 >= v17)
      goto LABEL_60;
    v18 = v5 + 1;
    if (v5 + 1 > v17)
    {
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
      goto LABEL_55;
    }
    v19 = *v16 - (unint64_t)*(v16 - 1);
    v11 = __OFADD__(v15, v19);
    v15 += v19;
    if (v11)
      goto LABEL_49;
    --v5;
    if (v15 < 0)
    {
      v16 -= 2;
      if (v18 > 1)
        continue;
    }
    return v5 + 1;
  }
LABEL_57:
  if (!v5)
  {
    if (a4 < (int)a5)
      goto LABEL_61;
    __break(1u);
  }
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
  return result;
}

uint64_t MessageIdentifierSet.index(before:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return OUTLINED_FUNCTION_30_17(a1, a2, -1, a4 & 0xFFFFFFFFFFLL, a3);
}

void MessageIdentifierSet.distance(from:to:)()
{
  int64_t v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  OUTLINED_FUNCTION_40_1();
  v6 = v3;
  v7 = v1;
  v8 = v0 < v2;
  if (v0 == v2)
  {
    if ((v3 ^ v1) < 0)
      goto LABEL_15;
    v0 = v3 - v1;
    v8 = v3 < v1;
    if (!__OFSUB__(v3, v1))
      return;
    __break(1u);
  }
  v9 = v4;
  v10 = v2;
  v11 = v0;
  v12 = v5 & 0xFFFFFFFFFFLL;
  if (v8)
  {
    v13 = sub_1A5709DEC(v0, v4, v5 & 0xFFFFFFFFFFLL);
    v14 = HIDWORD(v13) - v13;
    v15 = __OFSUB__(v14, v7);
    v7 = v14 - v7;
    if (v15)
    {
      __break(1u);
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v16 = sub_1A570A214(v11, v9, v12);
    if (!__OFADD__(v7, OUTLINED_FUNCTION_34_18(v16, 0, v10, v6)))
      return;
    __break(1u);
  }
  if (!__OFSUB__(0, OUTLINED_FUNCTION_34_18(v10, v6, v11, v7)))
    return;
  __break(1u);
LABEL_15:
  if (v7 >= 0)
    v17 = v7;
  else
    v17 = -v7;
  if (v6 >= 0)
    v18 = v6;
  else
    v18 = -v6;
  v19 = __CFADD__(v17, v18);
  v20 = v17 + v18;
  if (v19)
    goto LABEL_25;
  if (v20 < 0)
LABEL_26:
    __break(1u);
}

void MessageIdentifierSet.subscript.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int v10;

  OUTLINED_FUNCTION_40_1();
  v2 = v1;
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_9_37();
  v10 = sub_1A5709DEC(v8, v9, v7 & 0xFFFFFFFFFFLL);
  sub_1A5706154(v10, v4, v2);
  sub_1A594C42C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0, v4);
  OUTLINED_FUNCTION_15_3();
}

uint64_t MessageIdentifierSet.count.getter(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unsigned int *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;

  result = 0;
  v4 = (unsigned int *)(a1 + 36);
  v5 = -1;
  while (BYTE4(a2) == 1)
  {
    v6 = *(_QWORD *)(a1 + 16);
    if (v5 + 1 == v6)
      return result;
    if (++v5 >= v6)
    {
      __break(1u);
      goto LABEL_12;
    }
    v8 = *(v4 - 1);
    v7 = *v4;
    v4 += 2;
    v9 = v7 - v8;
    v10 = __OFADD__(result, v9);
    result += v9;
    if (v10)
    {
      __break(1u);
      break;
    }
  }
  if (BYTE4(a2) == 2)
    return 0;
LABEL_12:
  if (a1 >= (int)a2)
    __break(1u);
  __break(1u);
  return result;
}

uint64_t sub_1A570ACCC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = MessageIdentifierSet.index(before:)(*a1, a1[1], *(_QWORD *)v2, *(unsigned int *)(v2 + 8) | ((unint64_t)*(unsigned __int8 *)(v2 + 12) << 32));
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_1A570AD08(uint64_t *a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = MessageIdentifierSet.index(before:)(*a1, a1[1], *(_QWORD *)v1, *(unsigned int *)(v1 + 8) | ((unint64_t)*(unsigned __int8 *)(v1 + 12) << 32));
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_1A570AD50(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  MessageIdentifierSet.startIndex.getter();
  *a1 = v2;
  a1[1] = v3;
}

void sub_1A570AD74(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  MessageIdentifierSet.endIndex.getter();
  *a1 = v2;
  a1[1] = v3;
}

void (*sub_1A570ADA8(_QWORD *a1, uint64_t *a2, uint64_t a3))(_QWORD *)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[4] = sub_1A570AE14(v7, *a2, a2[1], *(_QWORD *)v3, *(unsigned int *)(v3 + 8) | ((unint64_t)*(unsigned __int8 *)(v3 + 12) << 32), *(_QWORD *)(a3 + 16));
  return sub_1A570A0AC;
}

uint64_t (*sub_1A570AE14(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6))()
{
  uint64_t v6;

  v6 = *(_QWORD *)(a6 - 8);
  *a1 = a6;
  a1[1] = v6;
  a1[2] = malloc(*(_QWORD *)(v6 + 64));
  MessageIdentifierSet.subscript.getter();
  return sub_1A570A14C;
}

void sub_1A570AEA4(uint64_t a1)
{
  void *v1;

  v1 = *(void **)(a1 + 16);
  OUTLINED_FUNCTION_60_9(*(_QWORD *)(a1 + 8));
  OUTLINED_FUNCTION_52_1(v1);
}

uint64_t sub_1A570AED0(uint64_t a1, uint64_t a2)
{
  return sub_1A570AEDC(a1, a2, (uint64_t (*)(_QWORD, unint64_t))MessageIdentifierSet.count.getter);
}

uint64_t sub_1A570AEDC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD, unint64_t))
{
  uint64_t v3;

  return a3(*(_QWORD *)v3, *(unsigned int *)(v3 + 8) | ((unint64_t)*(unsigned __int8 *)(v3 + 12) << 32));
}

void sub_1A570AEF0(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 16) = 256;
}

void sub_1A570AF00(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;

  *a3 = MessageIdentifierSet.index(_:offsetBy:)(*a1, a1[1], a2, *(_QWORD *)v3, *(unsigned int *)(v3 + 8) | ((unint64_t)*(unsigned __int8 *)(v3 + 12) << 32));
  a3[1] = v5;
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1A570AF3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  MEMORY[0x1A85B1874](&protocol conformance descriptor for MessageIdentifierSet<A>, a4);
  return sub_1A594B214();
}

void sub_1A570AFA0()
{
  MessageIdentifierSet.distance(from:to:)();
}

uint64_t sub_1A570AFCC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = MessageIdentifierSet.index(after:)(*a1, a1[1], *(_QWORD *)v2, *(unsigned int *)(v2 + 8) | ((unint64_t)*(unsigned __int8 *)(v2 + 12) << 32));
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_1A570B010(uint64_t *a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = MessageIdentifierSet.index(after:)(*a1, a1[1], *(_QWORD *)v1, *(unsigned int *)(v1 + 8) | ((unint64_t)*(unsigned __int8 *)(v1 + 12) << 32));
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_1A570B054(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *v1;
  v4 = *((_DWORD *)v1 + 2);
  v5 = *((_BYTE *)v1 + 12);
  MessageIdentifierSet.startIndex.getter();
  *(_QWORD *)a1 = v3;
  *(_DWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 12) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
}

uint64_t sub_1A570B098(uint64_t a1)
{
  MEMORY[0x1A85B1874](&protocol conformance descriptor for MessageIdentifierSet<A>, a1);
  return sub_1A594BDE4();
}

uint64_t sub_1A570B0CC(uint64_t a1)
{
  MEMORY[0x1A85B1874](&protocol conformance descriptor for MessageIdentifierSet<A>, a1);
  return sub_1A594BE14();
}

BOOL static MessageIdentifierSet.Index.< infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3)
    return a2 < a4;
  else
    return a1 < a3;
}

BOOL static MessageIdentifierSet.Index.> infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3)
    return a4 < a2;
  else
    return a3 < a1;
}

BOOL static MessageIdentifierSet.Index.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1 == a3 && a2 == a4;
}

BOOL sub_1A570B144(uint64_t *a1, uint64_t *a2)
{
  return static MessageIdentifierSet.Index.< infix(_:_:)(*a1, a1[1], *a2, a2[1]);
}

BOOL sub_1A570B160(uint64_t *a1, uint64_t *a2)
{
  return static MessageIdentifierSet.Index.> infix(_:_:)(*a1, a1[1], *a2, a2[1]);
}

BOOL sub_1A570B174(uint64_t *a1, uint64_t *a2)
{
  return static MessageIdentifierSet.Index.== infix(_:_:)(*a1, a1[1], *a2, a2[1]);
}

void MessageIdentifierSet.contains(_:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _BYTE v9[16];
  int *v10;
  int v11;

  v6 = HIDWORD(a3);
  MEMORY[0x1E0C80A78](a1);
  OUTLINED_FUNCTION_9_37();
  (*(void (**)(uint64_t))(v7 + 16))(v3);
  v11 = sub_1A5709580();
  v10 = &v11;
  sub_1A54E4334(a2, a3, v6);
  v8 = sub_1A570C438((uint64_t)sub_1A570D088, (uint64_t)v9, a2, a3 & 0xFFFFFFFFFFLL);
  sub_1A54E3458(a2, a3, v6);
  if (BYTE4(a3))
  {
    if (BYTE4(a3) == 1)
    {
      if (v8 == *(_QWORD *)(a2 + 16))
        goto LABEL_9;
    }
    else if (!v8)
    {
      goto LABEL_9;
    }
  }
  else if (v8 == 1)
  {
    goto LABEL_9;
  }
  sub_1A5709DEC(v8, a2, a3 & 0xFFFFFFFFFFLL);
LABEL_9:
  OUTLINED_FUNCTION_17_1();
}

void MessageIdentifierSet.union(_:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = HIDWORD(a2);
  OUTLINED_FUNCTION_15_34(a4, a3);
  sub_1A54E4334(a1, a2, v6);
  sub_1A570BB6C(a1, a2 & 0xFFFFFFFFFFLL);
  OUTLINED_FUNCTION_55_9(v7, v8, v9, v10, v11, v12, v13, v14, v15);
  OUTLINED_FUNCTION_16_27();
}

void MessageIdentifierSet.intersection(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  OUTLINED_FUNCTION_23_23(a1, a2, a3, a4);
  sub_1A570B324(v6, v7, v5, v4 & 0xFFFFFFFFFFLL);
  OUTLINED_FUNCTION_8_1();
}

void sub_1A570B324(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unsigned int v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int *v15;
  uint64_t v16;
  unint64_t v17;
  unsigned int v18;
  unsigned int v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;

  if (BYTE4(a4) != 2)
  {
    v4 = a1;
    if (BYTE4(a4) != 1 || *(_QWORD *)(a3 + 16))
    {
      v5 = 0;
      v6 = 0;
      v25 = a2;
      v7 = HIDWORD(a2);
      v27 = HIDWORD(a4);
      v28 = a4 & 0xFFFFFFFFFFLL;
      v32 = a1 + 36;
      v8 = MEMORY[0x1E0DEE9D8];
      v33 = HIDWORD(a2);
      while (2)
      {
        while (2)
        {
          while (2)
          {
            v9 = sub_1A5709DEC(v6, a3, v28);
            v10 = v9;
            v11 = HIDWORD(v9);
            v12 = sub_1A570A214(v6, a3, v28);
            v13 = v5;
            v14 = (unsigned int *)(v32 + 8 * v5);
            v31 = v12;
            while (v7 == 1)
            {
              if (v13 >= *(_QWORD *)(v4 + 16))
                goto LABEL_14;
              if (v5 < 0)
              {
                __break(1u);
LABEL_52:
                __break(1u);
LABEL_53:
                __break(1u);
LABEL_54:
                if (v4 < v25)
                {
LABEL_58:
                  __break(1u);
                }
                else
                {
                  __break(1u);
LABEL_56:
                  if (v4 >= v25)
                  {
                    __break(1u);
                    goto LABEL_58;
                  }
                }
                __break(1u);
                return;
              }
              if (*v14 > v10)
              {
LABEL_14:
                v5 = v13;
                goto LABEL_15;
              }
              ++v13;
              v14 += 2;
            }
            if (!(_BYTE)v7 && v5 <= 0)
              goto LABEL_54;
LABEL_15:
            v15 = (unsigned int *)(v32 + 8 * v5);
            v16 = v5;
            v29 = v8;
            while (v7 == 1)
            {
              if (v16 >= *(_QWORD *)(v4 + 16))
                goto LABEL_36;
              if (v5 < 0)
                goto LABEL_52;
              v17 = *(v15 - 1);
              if (v11 <= v17)
              {
LABEL_36:
                v5 = v16;
LABEL_39:
                v6 = v31;
                goto LABEL_40;
              }
              if (v10 >= v17)
                v18 = v10;
              else
                v18 = *(v15 - 1);
              if (v11 >= *v15)
                v19 = *v15;
              else
                v19 = v11;
              if (v18 > v19)
                goto LABEL_53;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1A569D7A4();
                v8 = v22;
              }
              v20 = *(_QWORD *)(v8 + 16);
              if (v20 >= *(_QWORD *)(v8 + 24) >> 1)
              {
                sub_1A569D7A4();
                v8 = v23;
              }
              *(_QWORD *)(v8 + 16) = v20 + 1;
              v21 = v8 + 8 * v20;
              *(_DWORD *)(v21 + 32) = v18;
              *(_DWORD *)(v21 + 36) = v19;
              if (*v15 >= v11)
              {
                v5 = v16;
                LOBYTE(v7) = v33;
                v4 = a1;
                goto LABEL_39;
              }
              ++v16;
              v15 += 2;
              LOBYTE(v7) = v33;
              v4 = a1;
            }
            v6 = v31;
            if ((_BYTE)v7)
            {
              v8 = v29;
            }
            else
            {
              v8 = v29;
              if (!v5)
                goto LABEL_56;
            }
LABEL_40:
            if (!(_BYTE)v27)
            {
              if (v6 != 1)
                continue;
              goto LABEL_50;
            }
            break;
          }
          if (v27 != 1)
          {
            if (v6)
              continue;
            goto LABEL_50;
          }
          break;
        }
        if (v6 != *(_QWORD *)(a3 + 16))
          continue;
        break;
      }
    }
    sub_1A54E3458(a3, a4, 1);
  }
LABEL_50:
  v24 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A570C730(v24, 0x100000000uLL);
  swift_bridgeObjectRelease();
}

void MessageIdentifierSet.symmetricDifference(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v8;
  unint64_t v9;
  char v10;

  OUTLINED_FUNCTION_56_10();
  v9 = HIDWORD(v8);
  sub_1A54E4334(a3, a4, v10);
  sub_1A54E4334(v5, v4, v9);
  sub_1A570B678(v5, v4 & 0xFFFFFFFFFFLL, a3, a4 & 0xFFFFFFFFFFLL);
  OUTLINED_FUNCTION_17_1();
}

uint64_t sub_1A570B678(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unsigned int v16;
  char v17;

  v8 = HIDWORD(a2);
  v16 = a4;
  v17 = BYTE4(a4);
  sub_1A54E4334(a3, a4, SBYTE4(a4));
  sub_1A54E4334(a1, a2, v8);
  sub_1A570BB6C(a1, a2 & 0xFFFFFFFFFFLL);
  sub_1A570B324(a1, a2 & 0xFFFFFFFFFFLL, a3, a4 & 0xFFFFFFFFFFLL);
  v10 = v9;
  v12 = v11;
  v13 = HIDWORD(v11);
  sub_1A54E3458(a1, a2, v8);
  sub_1A54E4334(a3, v16, v17);
  sub_1A570BD98(v10, v12 & 0xFFFFFFFFFFLL);
  sub_1A54E3458(v10, v12, v13);
  sub_1A54E3458(a3, v16, v17);
  return a3;
}

BOOL MessageIdentifierSet.insert(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  unint64_t v9;

  OUTLINED_FUNCTION_40_1();
  OUTLINED_FUNCTION_56_10();
  v5 = *(_QWORD *)(v4 + 16);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_9_37();
  MessageIdentifierSet.contains(_:)(v1, *(_QWORD *)v0, *(unsigned int *)(v0 + 8) | ((unint64_t)*(unsigned __int8 *)(v0 + 12) << 32));
  v8 = v7;
  if ((v7 & 1) == 0)
  {
    OUTLINED_FUNCTION_70_4(v3);
    v9 = sub_1A570984C(v3, v5);
    sub_1A570932C(v9);
  }
  OUTLINED_FUNCTION_70_4(v2);
  return (v8 & 1) == 0;
}

void MessageIdentifierSet.remove(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_40_1();
  OUTLINED_FUNCTION_28_17();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_3_52(v5);
  if ((v6 & 1) != 0)
  {
    v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
    v7(v2, v1, v0);
    v8 = OUTLINED_FUNCTION_39_15();
    sub_1A570B8C8(v8);
    v9 = OUTLINED_FUNCTION_42_9();
    ((void (*)(uint64_t))v7)(v9);
    v10 = OUTLINED_FUNCTION_58_6();
    __swift_storeEnumTagSinglePayload(v10, v11, v12, v13);
    OUTLINED_FUNCTION_15_3();
  }
  else
  {
    v14 = OUTLINED_FUNCTION_57_10();
    OUTLINED_FUNCTION_13_32(v14, v15, v16, v17);
  }
}

void sub_1A570B8C8(unint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  unsigned int v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;

  v3 = HIDWORD(a1);
  if (HIDWORD(a1) != a1)
  {
    v4 = *(_QWORD *)v1;
    v5 = *(unsigned __int8 *)(v1 + 12);
    if (!*(_BYTE *)(v1 + 12) || (_DWORD)v5 == 1 && *(_QWORD *)(v4 + 16))
    {
      v6 = *(unsigned int *)(v1 + 8) | (unint64_t)(v5 << 32);
      v7 = sub_1A569A270(*(_QWORD *)v1, v6);
      if ((v8 & 1) != 0)
      {
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
      v9 = a1;
      if (a1 >= HIDWORD(v7))
        return;
      v10 = sub_1A56C7EDC(v4, v6);
      if ((v11 & 1) != 0)
      {
LABEL_30:
        __break(1u);
        return;
      }
      if (v3 < v10)
        return;
      v12 = sub_1A570C8E4(a1, v4, v6);
      if (v12 == v13)
        return;
      v14 = v12;
      v15 = v13;
      v16 = sub_1A5709DEC(v12, v4, v6);
      if (!__OFSUB__(v15, 1))
      {
        v17 = v16;
        v18 = (unint64_t)sub_1A5709DEC(v15 - 1, v4, v6) >> 32;
        if (v9 <= v17)
        {
          if (v18 <= v3)
          {
            sub_1A5671DBC(v14, v15);
            return;
          }
          v21 = sub_1A5709DEC(v15 - 1, v4, v6);
          if (v3 > HIDWORD(v21))
            goto LABEL_27;
          v22 = v21 & 0xFFFFFFFF00000000 | v3;
        }
        else
        {
          v19 = sub_1A5709DEC(v14, v4, v6);
          if (v18 > v3)
          {
            if (v19 <= v9)
            {
              v20 = sub_1A5709DEC(v15 - 1, v4, v6);
              if (v3 <= HIDWORD(v20))
              {
                sub_1A570CC4C(v14, v15, v19 | (v9 << 32), v20 & 0xFFFFFFFF00000000 | v3);
                return;
              }
              goto LABEL_26;
            }
LABEL_25:
            __break(1u);
LABEL_26:
            __break(1u);
LABEL_27:
            __break(1u);
            goto LABEL_28;
          }
          if (v19 > v9)
          {
LABEL_28:
            __break(1u);
            goto LABEL_29;
          }
          v22 = v19 | (v9 << 32);
        }
        sub_1A570CBA0(v14, v15, v22);
        return;
      }
      __break(1u);
      goto LABEL_25;
    }
  }
}

void MessageIdentifierSet.update(with:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_40_1();
  OUTLINED_FUNCTION_28_17();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_3_52(v4);
  if ((v5 & 1) != 0)
  {
    v6 = OUTLINED_FUNCTION_42_9();
    v7(v6);
    v8 = OUTLINED_FUNCTION_58_6();
    OUTLINED_FUNCTION_13_32(v8, v9, v10, v11);
  }
  else
  {
    OUTLINED_FUNCTION_85_0(v1, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
    v12 = OUTLINED_FUNCTION_39_15();
    sub_1A570932C(v12);
    v13 = OUTLINED_FUNCTION_57_10();
    __swift_storeEnumTagSinglePayload(v13, v14, v15, v16);
    OUTLINED_FUNCTION_15_3();
  }
}

void MessageIdentifierSet.formUnion(_:)(uint64_t a1, uint64_t a2)
{
  sub_1A54E4334(a1, a2, SBYTE4(a2));
  sub_1A570BB6C(a1, a2 & 0xFFFFFFFFFFLL);
}

void sub_1A570BB6C(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (BYTE4(a2) == 1)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (!v4)
    {
LABEL_8:
      sub_1A54E3458(a1, a2, 1);
      return;
    }
    v5 = 0;
    v6 = a1 + 36;
    while (v5 < v4)
    {
      ++v5;
      sub_1A570932C(*(_QWORD *)(v6 - 4));
      v4 = *(_QWORD *)(a1 + 16);
      v6 += 8;
      if (v5 == v4)
        goto LABEL_8;
    }
    __break(1u);
  }
  else if (BYTE4(a2) == 2)
  {
    return;
  }
  if (a1 >= (int)a2)
    __break(1u);
  __break(1u);
}

uint64_t MessageIdentifierSet.formIntersection(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1A570B324(a1, a2 & 0xFFFFFFFFFFLL, *(_QWORD *)v2, *(unsigned int *)(v2 + 8) | ((unint64_t)*(unsigned __int8 *)(v2 + 12) << 32));
  return OUTLINED_FUNCTION_66_7(v3, v4);
}

uint64_t MessageIdentifierSet.formSymmetricDifference(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)v2;
  v6 = *(unsigned int *)(v2 + 8);
  v7 = *(unsigned __int8 *)(v2 + 12);
  sub_1A54E4334(a1, a2, SBYTE4(a2));
  v8 = sub_1A570B678(a1, a2 & 0xFFFFFFFFFFLL, v5, v6 | (v7 << 32));
  return OUTLINED_FUNCTION_66_7(v8, v9);
}

void MessageIdentifierSet.subtracting(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_15_34(a4, a3);
  sub_1A570BD98(a1, a2 & 0xFFFFFFFFFFLL);
  OUTLINED_FUNCTION_55_9(v6, v7, v8, v9, v10, v11, v12, v13, v14);
  OUTLINED_FUNCTION_16_27();
}

void MessageIdentifierSet.isSubset(of:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int32x2_t *v7;
  uint64_t v8;
  char v9;

  OUTLINED_FUNCTION_23_23(a1, a2, a3, a4);
  OUTLINED_FUNCTION_53_10(v5, v6, v4);
  OUTLINED_FUNCTION_18_25(v7, v8);
  OUTLINED_FUNCTION_6_42(v9);
  OUTLINED_FUNCTION_17_1();
}

void MessageIdentifierSet.isSuperset(of:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int32x2_t *v5;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int32x2_t *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;

  OUTLINED_FUNCTION_56_10();
  sub_1A54E4334(v8, v9, SBYTE4(v9));
  v10 = a4 & 0xFFFFFFFFFFLL;
  v11 = v4 & 0xFFFFFFFFFFLL;
  OUTLINED_FUNCTION_53_10(a3, v10, (uint64_t)v5);
  v13 = (uint64_t)v12;
  v15 = v14;
  v16 = HIDWORD(v14);
  sub_1A56B614C(v12, v14 & 0xFFFFFFFFFFLL, v5, v11);
  sub_1A54E3458(v13, v15, v16);
  OUTLINED_FUNCTION_17_1();
}

void MessageIdentifierSet.subtract(_:)(uint64_t a1, uint64_t a2)
{
  sub_1A570BD98(a1, a2 & 0xFFFFFFFFFFLL);
}

void sub_1A570BD98(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t i;
  unint64_t v6;

  if (BYTE4(a2) != 1)
  {
    if (BYTE4(a2) == 2)
      return;
    if (a1 < (int)a2)
    {
LABEL_12:
      __break(1u);
      return;
    }
    __break(1u);
  }
  if (*(_QWORD *)(a1 + 16))
  {
    sub_1A54E4334(a1, a2, 1);
    v4 = 0;
    for (i = a1 + 36; ; i += 8)
    {
      v6 = *(_QWORD *)(a1 + 16);
      if (v4 >= v6)
        break;
      ++v4;
      sub_1A570B8C8(*(_QWORD *)(i - 4));
      if (v4 == v6)
      {
        sub_1A54E3458(a1, a2, 1);
        return;
      }
    }
    __break(1u);
    goto LABEL_12;
  }
}

void MessageIdentifierSet.isStrictSuperset(of:)(int32x2_t *a1, uint64_t a2, int32x2_t *a3, uint64_t a4)
{
  char v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int32x2_t *v10;
  uint64_t v11;
  char v12;

  sub_1A56B614C(a1, a2 & 0xFFFFFFFFFFLL, a3, a4 & 0xFFFFFFFFFFLL);
  if ((v6 & 1) == 0)
  {
    sub_1A54E4334((uint64_t)a1, a2, SBYTE4(a2));
    OUTLINED_FUNCTION_35_13();
    OUTLINED_FUNCTION_53_10(v7, v8, v9);
    OUTLINED_FUNCTION_18_25(v10, v11);
    OUTLINED_FUNCTION_6_42(v12);
  }
  OUTLINED_FUNCTION_17_1();
}

void MessageIdentifierSet.isStrictSubset(of:)(int32x2_t *a1, uint64_t a2, int32x2_t *a3, uint64_t a4)
{
  unint64_t v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int32x2_t *v12;
  char v13;

  v6 = a4 & 0xFFFFFFFFFFLL;
  sub_1A56B614C(a3, a4 & 0xFFFFFFFFFFLL, a1, a2 & 0xFFFFFFFFFFLL);
  if ((v7 & 1) == 0)
  {
    sub_1A54E4334((uint64_t)a3, a4, SBYTE4(a4));
    v8 = OUTLINED_FUNCTION_42_9();
    sub_1A570B324(v8, v9, v10, v6);
    sub_1A56B614C(v12, v11 & 0xFFFFFFFFFFLL, a3, v6);
    OUTLINED_FUNCTION_6_42(v13);
  }
  OUTLINED_FUNCTION_17_1();
}

void sub_1A570BF4C(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_DWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 12) = 2;
}

void sub_1A570BF60(uint64_t a1)
{
  uint64_t v1;

  MessageIdentifierSet.contains(_:)(a1, *(_QWORD *)v1, *(unsigned int *)(v1 + 8) | ((unint64_t)*(unsigned __int8 *)(v1 + 12) << 32));
}

void sub_1A570BF7C()
{
  sub_1A570BFA0();
}

void sub_1A570BF88()
{
  sub_1A570C124();
}

void sub_1A570BF94()
{
  sub_1A570BFA0();
}

void sub_1A570BFA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  unint64_t v12;
  int v13;
  unint64_t v14;

  OUTLINED_FUNCTION_16_4();
  v2 = v1;
  v4 = *v3;
  v5 = *((unsigned int *)v3 + 2);
  v6 = *(_QWORD *)v0;
  v7 = *(unsigned int *)(v0 + 8);
  v8 = *((unsigned __int8 *)v3 + 12);
  v9 = *(unsigned __int8 *)(v0 + 12);
  v11 = v10(*v3, v5 | (v8 << 32), v6, v7 | (v9 << 32));
  v13 = v12;
  v14 = HIDWORD(v12);
  sub_1A54E3458(v6, v7, v9);
  sub_1A54E3458(v4, v5, v8);
  *(_QWORD *)v2 = v11;
  *(_DWORD *)(v2 + 8) = v13;
  *(_BYTE *)(v2 + 12) = v14;
  OUTLINED_FUNCTION_1_3();
}

BOOL sub_1A570C028(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v5;

  v5 = MessageIdentifierSet.insert(_:)();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 8))(a2);
  return v5;
}

uint64_t sub_1A570C074(uint64_t a1, uint64_t a2)
{
  MessageIdentifierSet.update(with:)();
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))(a1);
}

uint64_t sub_1A570C0B0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A570C0D4(a1, a2, a3, MessageIdentifierSet.formUnion(_:));
}

uint64_t sub_1A570C0BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A570C204(a1, a2, a3, (uint64_t (*)(_QWORD, unint64_t))MessageIdentifierSet.formIntersection(_:));
}

uint64_t sub_1A570C0C8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A570C0D4(a1, a2, a3, (void (*)(uint64_t, uint64_t))MessageIdentifierSet.formSymmetricDifference(_:));
}

uint64_t sub_1A570C0D4(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  v5 = *((unsigned int *)a1 + 2);
  v6 = *((unsigned __int8 *)a1 + 12);
  a4(*a1, v5 | (v6 << 32));
  return sub_1A54E3458(v4, v5, v6);
}

void sub_1A570C118()
{
  sub_1A570C124();
}

void sub_1A570C124()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD, unint64_t, uint64_t, uint64_t);
  uint64_t v8;
  unint64_t v9;
  int v10;
  unint64_t v11;

  OUTLINED_FUNCTION_40_1();
  v2 = v1;
  v3 = *(_QWORD *)v0;
  v4 = *(unsigned int *)(v0 + 8);
  v5 = *(unsigned __int8 *)(v0 + 12);
  v8 = v7(*(_QWORD *)v6, *(unsigned int *)(v6 + 8) | ((unint64_t)*(unsigned __int8 *)(v6 + 12) << 32), v3, v4 | (v5 << 32));
  v10 = v9;
  v11 = HIDWORD(v9);
  sub_1A54E3458(v3, v4, v5);
  *(_QWORD *)v2 = v8;
  *(_DWORD *)(v2 + 8) = v10;
  *(_BYTE *)(v2 + 12) = v11;
  OUTLINED_FUNCTION_15_3();
}

uint64_t sub_1A570C19C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A570C1B8(a1, a2, a3, (uint64_t (*)(_QWORD, unint64_t, _QWORD, unint64_t))MessageIdentifierSet.isSubset(of:));
}

uint64_t sub_1A570C1AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A570C1B8(a1, a2, a3, (uint64_t (*)(_QWORD, unint64_t, _QWORD, unint64_t))MessageIdentifierSet.isSuperset(of:));
}

uint64_t sub_1A570C1B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, unint64_t, _QWORD, unint64_t))
{
  uint64_t v4;

  return a4(*(_QWORD *)a1, *(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned __int8 *)(a1 + 12) << 32), *(_QWORD *)v4, *(unsigned int *)(v4 + 8) | ((unint64_t)*(unsigned __int8 *)(v4 + 12) << 32));
}

BOOL sub_1A570C1E4()
{
  uint64_t v0;

  return MessageIdentifierSet.isEmpty.getter(*(_QWORD *)v0, *(unsigned int *)(v0 + 8) | ((unint64_t)*(unsigned __int8 *)(v0 + 12) << 32));
}

uint64_t sub_1A570C1F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A570C204(a1, a2, a3, (uint64_t (*)(_QWORD, unint64_t))MessageIdentifierSet.subtract(_:));
}

uint64_t sub_1A570C204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, unint64_t))
{
  return a4(*(_QWORD *)a1, *(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned __int8 *)(a1 + 12) << 32));
}

uint64_t sub_1A570C224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = type metadata accessor for MessageIdentifierRange(0, a3, a4, a4);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - v6;
  sub_1A5709930();
  v8 = sub_1A5706B34();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v8;
}

void sub_1A570C2E4(unint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;

  v3 = HIDWORD(a1);
  v4 = *(_QWORD *)v1;
  v5 = *(unsigned int *)(v1 + 8);
  v6 = *(unsigned __int8 *)(v1 + 12);
  if (*(_BYTE *)(v1 + 12))
  {
    if ((_DWORD)v6 == 1)
    {
      if (*(_QWORD *)(v4 + 16))
        goto LABEL_4;
    }
    else
    {
      if (v3 != a1)
      {
LABEL_19:
        v15 = 0;
        v16 = 0;
        goto LABEL_27;
      }
      __break(1u);
    }
    if (v3 != a1)
    {
      v9 = a1;
      goto LABEL_13;
    }
    goto LABEL_28;
  }
LABEL_4:
  v7 = sub_1A569A270(*(_QWORD *)v1, v5 | (v6 << 32));
  if ((v8 & 1) != 0)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v9 = a1;
  if (a1 < HIDWORD(v7))
    goto LABEL_29;
  if (v3 == a1)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (!(_DWORD)v6)
  {
    v10 = 1;
    goto LABEL_15;
  }
LABEL_13:
  if (!*(_QWORD *)(v4 + 16))
    goto LABEL_19;
  v10 = 0;
LABEL_15:
  v11 = v5 | (v6 << 32);
  v12 = sub_1A569A270(v4, v11);
  if ((v13 & 1) == 0)
  {
    if (v9 == HIDWORD(v12))
    {
      if ((v10 & 1) != 0)
        v14 = 0;
      else
        v14 = *(_QWORD *)(v4 + 16) - 1;
      v17 = sub_1A5709DEC(v14, v4, v11);
      if (v17 <= v3)
      {
        sub_1A570CAC0(v17 | a1 & 0xFFFFFFFF00000000, v14);
        return;
      }
      goto LABEL_30;
    }
    if ((v10 & 1) != 0)
      v15 = 1;
    else
      v15 = *(_QWORD *)(v4 + 16);
    v16 = v15;
LABEL_27:
    sub_1A570CBA0(v15, v16, a1);
    return;
  }
LABEL_32:
  __break(1u);
}

uint64_t sub_1A570C438(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t (*v8)(uint64_t *);
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = BYTE4(a4);
  if (BYTE4(a4) == 2)
    return 0;
  v6 = a4;
  v8 = (uint64_t (*)(uint64_t *))result;
  if (BYTE4(a4) == 1)
  {
    v9 = *(_QWORD *)(a3 + 16);
    if (!v9)
      return 0;
  }
  else
  {
    v9 = 1;
  }
  v10 = 0;
  v11 = a3 + 32;
  while (1)
  {
    v12 = v10 + (v9 >> 1);
    if (__OFADD__(v10, v9 >> 1))
      break;
    if (v5)
      v13 = *(_QWORD *)(a3 + 16);
    else
      v13 = 1;
    if (v12 > v13)
      goto LABEL_21;
    if (!v5)
      goto LABEL_24;
    if (v12 >= *(_QWORD *)(a3 + 16))
      goto LABEL_22;
    v15 = *(_QWORD *)(v11 + 8 * v12);
    result = v8(&v15);
    if (v4)
      return v10;
    v14 = v9 >> 1;
    if ((result & 1) == 0)
    {
      if (v12 >= *(_QWORD *)(a3 + 16))
        goto LABEL_23;
      v10 = v12 + 1;
      v14 = v9 + ~v14;
    }
    v9 = v14;
    if (v14 <= 0)
      return v10;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  if (a3 >= v6)
    __break(1u);
  __break(1u);
  return result;
}

uint64_t sub_1A570C548(uint64_t (*a1)(uint64_t *), uint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char v18;
  uint64_t result;
  int v20;
  uint64_t v22;

  if (BYTE4(a6))
  {
    if (BYTE4(a6) == 1)
      v10 = *(_QWORD *)(a5 + 16);
    else
      v10 = 0;
  }
  else
  {
    v10 = 1;
  }
  if (v10 < a3)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v11 = HIDWORD(a6);
  if (BYTE4(a6))
  {
    if (BYTE4(a6) == 1)
      v10 = *(_QWORD *)(a5 + 16);
    else
      v10 = 0;
  }
  else
  {
    v10 = 1;
  }
  if (v10 < a4)
  {
LABEL_43:
    __break(1u);
LABEL_44:
    if (!(_DWORD)v10)
    {
      if (a5 >= v20)
        __break(1u);
      __break(1u);
    }
    result = sub_1A594C9C0();
    __break(1u);
    return result;
  }
  v12 = a4 - a3;
  if ((uint64_t)(a4 - a3) >= 1)
  {
    v20 = a6;
    v13 = a5 + 32;
    v14 = a3;
    while (1)
    {
      v15 = v14 + (v12 >> 1);
      if (__OFADD__(v14, v12 >> 1))
        break;
      if ((_BYTE)v11)
      {
        if (v11 == 1)
          v10 = *(_QWORD *)(a5 + 16);
        else
          v10 = 0;
      }
      else
      {
        v10 = 1;
      }
      if (v15 >= (uint64_t)a4 || v15 < (uint64_t)a3 || v15 > (unint64_t)v10)
        goto LABEL_39;
      LODWORD(v10) = v11;
      if (v11 != 1)
        goto LABEL_44;
      v10 = *(_QWORD *)(a5 + 16);
      if (v15 >= v10)
        goto LABEL_40;
      v22 = *(_QWORD *)(v13 + 8 * v15);
      v18 = a1(&v22);
      if (v6)
        return v14;
      v10 = v12 >> 1;
      if ((v18 & 1) == 0)
      {
        if (v15 >= *(_QWORD *)(a5 + 16))
          goto LABEL_41;
        v14 = v15 + 1;
        v10 = v12 + ~v10;
      }
      v12 = v10;
      if (v10 <= 0)
        return v14;
    }
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  return a3;
}

uint64_t sub_1A570C730(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int *v13;
  unsigned int *v14;
  unint64_t v15;
  unsigned int v16;
  int v17;
  unsigned int v18;
  uint64_t result;

  v4 = HIDWORD(a2);
  sub_1A54E4334(a1, a2, SBYTE4(a2));
  sub_1A54E4334(a1, a2, v4);
  v5 = sub_1A566CB84(1, a1, a2 & 0xFFFFFFFFFFLL);
  v9 = v7;
  v10 = v8;
  v11 = 0;
  v12 = HIDWORD(v8);
  v13 = (int *)(v7 + 8 * v5 + 36);
  v14 = (unsigned int *)(a1 + 36);
  while (1)
  {
    LODWORD(v15) = v4;
    if (v4 != 1)
      break;
    v15 = *(_QWORD *)(a1 + 16);
    if (v11 == v15)
      goto LABEL_20;
    if (v11 >= v15)
    {
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    if (!(v5 - v6 + v11))
      goto LABEL_20;
    LODWORD(v15) = v5 + v11;
    if ((uint64_t)(v5 + v11) >= v6)
      goto LABEL_22;
    LODWORD(v15) = BYTE4(v8);
    if (BYTE4(v8) != 1)
      goto LABEL_27;
    if (v5 < 0)
      goto LABEL_23;
    ++v11;
    v15 = *(_QWORD *)(v7 + 16);
    if (v5 + v11 - 1 >= v15)
      goto LABEL_24;
    LODWORD(v15) = *(v14 - 1);
    v16 = *v14;
    v18 = *(v13 - 1);
    v17 = *v13;
    v13 += 2;
    v14 += 2;
    if (v18 <= v16 || v16 == (_DWORD)v15 || v17 == v18)
    {
      __break(1u);
      break;
    }
  }
  if ((_DWORD)v15 == 2)
  {
LABEL_20:
    sub_1A54E3458(a1, a2, v4);
    return sub_1A54E3458(v9, v10, v12);
  }
LABEL_25:
  if (a1 < (int)a2)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  __break(1u);
LABEL_27:
  if ((_DWORD)v15)
    goto LABEL_32;
  if (v7 >= (int)v8)
  {
    __break(1u);
    goto LABEL_30;
  }
LABEL_31:
  __break(1u);
LABEL_32:
  result = sub_1A594C9C0();
  __break(1u);
  return result;
}

BOOL sub_1A570C8D4(unint64_t a1, unsigned int a2)
{
  return a2 < HIDWORD(a1);
}

unint64_t sub_1A570C8E4(unint64_t result, uint64_t a2, unint64_t a3)
{
  unsigned int v3;
  unint64_t v4;
  unint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _BYTE v21[16];
  unint64_t *v22;
  unint64_t v23;

  v3 = result;
  v4 = HIDWORD(result);
  v23 = result;
  if (HIDWORD(result) == result)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v7 = HIDWORD(a3);
  if (BYTE4(a3) && (BYTE4(a3) != 1 || !*(_QWORD *)(a2 + 16)))
    goto LABEL_15;
  result = sub_1A569A270(a2, a3 & 0xFFFFFFFFFFLL);
  if ((v8 & 1) != 0)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v3 > HIDWORD(result))
    goto LABEL_12;
  result = sub_1A56C7EDC(a2, a3 & 0xFFFFFFFFFFLL);
  if ((v9 & 1) == 0)
  {
    if (v4 >= result)
    {
      MEMORY[0x1E0C80A78](result);
      v22 = &v23;
      sub_1A54E4334(a2, a3, v7);
      v10 = sub_1A570C438((uint64_t)sub_1A570D498, (uint64_t)v21, a2, a3 & 0xFFFFFFFFFFLL);
      sub_1A54E3458(a2, a3, v7);
      v11 = sub_1A5708EB8(v10, a2, a3 & 0xFFFFFFFFFFLL);
      v13 = v12;
      v15 = v14;
      v16 = HIDWORD(v14);
      MEMORY[0x1E0C80A78](v11);
      v22 = &v23;
      v20 = sub_1A570C548((uint64_t (*)(uint64_t *))sub_1A570D4B4, (uint64_t)v21, v18, v19, v13, v17 & 0xFFFFFFFFFFLL);
      result = sub_1A54E3458(v13, v15, v16);
      if (v20 >= v10)
        return v10;
      goto LABEL_14;
    }
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
LABEL_17:
  __break(1u);
  return result;
}

BOOL sub_1A570CAA0(unint64_t a1, unsigned int a2)
{
  return a2 <= HIDWORD(a1);
}

BOOL sub_1A570CAB0(unsigned int a1, unint64_t a2)
{
  return a1 > HIDWORD(a2);
}

void sub_1A570CAC0(uint64_t a1, unint64_t a2)
{
  uint64_t *v2;
  unint64_t v3;
  uint64_t v6;
  uint64_t v7;

  LODWORD(v3) = *((unsigned __int8 *)v2 + 12);
  if ((_DWORD)v3 == 1)
  {
    v6 = *v2;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    {
      if ((a2 & 0x8000000000000000) == 0)
        goto LABEL_4;
    }
    else
    {
      sub_1A57285D4();
      v6 = v7;
      if ((a2 & 0x8000000000000000) == 0)
      {
LABEL_4:
        v3 = *(_QWORD *)(v6 + 16);
        if (v3 > a2)
        {
          *(_QWORD *)(v6 + 8 * a2 + 32) = a1;
          *v2 = v6;
          *((_DWORD *)v2 + 2) = 0;
          *((_BYTE *)v2 + 12) = 1;
          return;
        }
        goto LABEL_8;
      }
    }
    __break(1u);
LABEL_8:
    __break(1u);
  }
  if (!(_DWORD)v3)
    __break(1u);
  sub_1A594C9C0();
  __break(1u);
}

void sub_1A570CBA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (*((_BYTE *)v3 + 12))
  {
    if (*((_BYTE *)v3 + 12) == 1)
    {
      v7 = *v3;
      sub_1A570CD4C(a1, a2, a3);
      *v3 = v7;
LABEL_6:
      *((_DWORD *)v3 + 2) = 0;
      *((_BYTE *)v3 + 12) = 1;
      return;
    }
LABEL_5:
    sub_1A566AE90(a3);
    *v3 = v4;
    goto LABEL_6;
  }
  if (a1 != a2)
    goto LABEL_5;
  v6 = *v3;
  v5 = *((int *)v3 + 2);
  if (!a1)
  {
    sub_1A566AE90(a3);
    if (v6 < v5)
    {
LABEL_12:
      __break(1u);
      goto LABEL_13;
    }
    __break(1u);
  }
  if (v6 >= v5)
  {
    __break(1u);
    goto LABEL_12;
  }
LABEL_13:
  __break(1u);
}

void sub_1A570CC4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (*((_BYTE *)v4 + 12))
  {
    if (*((_BYTE *)v4 + 12) == 1)
    {
      v8 = *v4;
      sub_1A570CF1C(a1, a2, a3, a4);
      *v4 = v8;
LABEL_6:
      *((_DWORD *)v4 + 2) = 0;
      *((_BYTE *)v4 + 12) = 1;
      return;
    }
LABEL_5:
    sub_1A566AED8(a3, a4);
    *v4 = v5;
    goto LABEL_6;
  }
  if (a1 != a2)
    goto LABEL_5;
  v7 = *v4;
  v6 = *((int *)v4 + 2);
  if (!a1)
  {
    sub_1A566AED8(a3, a4);
    if (v7 < v6)
    {
LABEL_12:
      __break(1u);
      goto LABEL_13;
    }
    __break(1u);
  }
  if (v7 >= v6)
  {
    __break(1u);
    goto LABEL_12;
  }
LABEL_13:
  __break(1u);
}

void sub_1A570CD00(uint64_t a1)
{
  uint64_t *v1;

  sub_1A57091AC(a1, v1[6], v1[2], v1[3], v1[4]);
}

uint64_t type metadata accessor for MessageIdentifierSet.RangeView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MessageIdentifierSet.RangeView);
}

void sub_1A570CD2C(uint64_t a1)
{
  uint64_t v1;

  sub_1A570A744(a1, *(_QWORD *)(v1 + 32), *(unsigned int *)(v1 + 40) | ((unint64_t)*(unsigned __int8 *)(v1 + 44) << 32));
}

uint64_t sub_1A570CD44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A570C224(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

void sub_1A570CD4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (__OFADD__(v6, v9))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v6 + v9 > *(_QWORD *)(v5 + 24) >> 1)
  {
    sub_1A569D7A4();
    v5 = v11;
  }
  v12 = v5 + 32 + 8 * a1;
  if (!v9)
    goto LABEL_13;
  v13 = *(_QWORD *)(v5 + 16);
  if (__OFSUB__(v13, a2))
    goto LABEL_19;
  sub_1A569D660((char *)(v5 + 32 + 8 * a2), v13 - a2, (char *)(v12 + 8));
  v14 = *(_QWORD *)(v5 + 16);
  v15 = __OFADD__(v14, v9);
  v16 = v14 + v9;
  if (!v15)
  {
    *(_QWORD *)(v5 + 16) = v16;
LABEL_13:
    *(_QWORD *)v12 = a3;
    *v3 = v5;
    return;
  }
LABEL_20:
  __break(1u);
}

void sub_1A570CE44()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  OUTLINED_FUNCTION_40_1();
  if (v1 < 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  v3 = v2;
  v4 = *v0;
  v5 = *(_QWORD *)(*v0 + 16);
  if (v5 < v2)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v6 = v1;
  v7 = v2 - v1;
  if (__OFSUB__(v2, v1))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v8 = v1 - v2;
  if (__OFSUB__(0, v7))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v9 <= *(_QWORD *)(v4 + 24) >> 1)
  {
    if (!v8)
      goto LABEL_14;
  }
  else
  {
    sub_1A569D7A4();
    v4 = v10;
    if (!v8)
    {
LABEL_14:
      *v0 = v4;
      OUTLINED_FUNCTION_15_3();
      return;
    }
  }
  v11 = *(_QWORD *)(v4 + 16);
  if (__OFSUB__(v11, v3))
    goto LABEL_20;
  sub_1A569D660((char *)(v4 + 32 + 8 * v3), v11 - v3, (char *)(v4 + 32 + 8 * v6));
  v12 = *(_QWORD *)(v4 + 16);
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    *(_QWORD *)(v4 + 16) = v14;
    goto LABEL_14;
  }
LABEL_21:
  __break(1u);
}

void sub_1A570CF1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  v6 = *v4;
  v7 = *(_QWORD *)(*v4 + 16);
  if (v7 < a2)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v10 = 2 - v9;
  if (__OFSUB__(2, v9))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (__OFADD__(v7, v10))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v7 + v10 > *(_QWORD *)(v6 + 24) >> 1)
  {
    sub_1A569D7A4();
    v6 = v13;
  }
  v14 = v6 + 32 + 8 * a1;
  if (!v10)
    goto LABEL_13;
  v15 = *(_QWORD *)(v6 + 16);
  if (__OFSUB__(v15, a2))
    goto LABEL_19;
  sub_1A569D660((char *)(v6 + 32 + 8 * a2), v15 - a2, (char *)(v14 + 16));
  v16 = *(_QWORD *)(v6 + 16);
  v17 = __OFADD__(v16, v10);
  v18 = v16 + v10;
  if (!v17)
  {
    *(_QWORD *)(v6 + 16) = v18;
LABEL_13:
    *(_QWORD *)v14 = a3;
    *(_QWORD *)(v14 + 8) = a4;
    *v4 = v6;
    return;
  }
LABEL_20:
  __break(1u);
}

BOOL sub_1A570D028(unint64_t *a1, _QWORD *a2)
{
  return sub_1A570CAA0(*a1, *a2);
}

BOOL sub_1A570D048(_QWORD *a1, unint64_t *a2)
{
  return sub_1A570CAB0(*a1, *a2);
}

BOOL sub_1A570D068(unint64_t *a1, unsigned int *a2)
{
  return sub_1A570C8D4(*a1, *a2);
}

BOOL sub_1A570D088(unint64_t *a1)
{
  uint64_t v1;

  return sub_1A570D068(a1, *(unsigned int **)(v1 + 16));
}

void sub_1A570D0A4()
{
  JUMPOUT(0x1A85B1874);
}

unint64_t sub_1A570D0B8()
{
  unint64_t result;

  result = qword_1EE796F80;
  if (!qword_1EE796F80)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for MessageIdentificationShiftWrapper, &type metadata for MessageIdentificationShiftWrapper);
    atomic_store(result, (unint64_t *)&qword_1EE796F80);
  }
  return result;
}

unint64_t sub_1A570D0F8()
{
  unint64_t result;

  result = qword_1EE7A9D30;
  if (!qword_1EE7A9D30)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for MessageIdentificationShiftWrapper, &type metadata for MessageIdentificationShiftWrapper);
    atomic_store(result, (unint64_t *)&qword_1EE7A9D30);
  }
  return result;
}

void sub_1A570D134()
{
  JUMPOUT(0x1A85B1874);
}

uint64_t sub_1A570D144()
{
  return sub_1A570D260((uint64_t *)&qword_1EE7A91C0);
}

uint64_t sub_1A570D168(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x1A85B1874](&protocol conformance descriptor for MessageIdentifierSet<A>.RangeView);
  return MEMORY[0x1A85B1874](MEMORY[0x1E0DEDE40], a1, &v3);
}

void sub_1A570D1B0()
{
  JUMPOUT(0x1A85B1874);
}

uint64_t sub_1A570D1C0()
{
  return sub_1A570D260((uint64_t *)&qword_1EE7A91E0);
}

uint64_t sub_1A570D1E4(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x1A85B1874](&protocol conformance descriptor for MessageIdentifierSet<A>.RangeView);
  return MEMORY[0x1A85B1874](MEMORY[0x1E0DEDE28], a1, &v3);
}

void sub_1A570D22C()
{
  JUMPOUT(0x1A85B1874);
}

uint64_t sub_1A570D23C()
{
  return sub_1A570D260((uint64_t *)&qword_1EE7A91F0);
}

uint64_t sub_1A570D260(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract_0(&qword_1EE7A91C8);
    sub_1A5672CF4();
    OUTLINED_FUNCTION_45_0();
  }
  return result;
}

void sub_1A570D2C8()
{
  JUMPOUT(0x1A85B1874);
}

void sub_1A570D2D8()
{
  JUMPOUT(0x1A85B1874);
}

uint64_t sub_1A570D2E8(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x1A85B1874](&protocol conformance descriptor for MessageIdentifierSet<A>);
  return MEMORY[0x1A85B1874](MEMORY[0x1E0DEA210], a1, &v3);
}

uint64_t sub_1A570D330(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x1A85B1874](&protocol conformance descriptor for MessageIdentifierSet<A>);
  return MEMORY[0x1A85B1874](MEMORY[0x1E0DEDE28], a1, &v3);
}

void sub_1A570D378()
{
  JUMPOUT(0x1A85B1874);
}

void sub_1A570D388()
{
  JUMPOUT(0x1A85B1874);
}

void sub_1A570D398()
{
  JUMPOUT(0x1A85B1874);
}

void sub_1A570D3A8()
{
  JUMPOUT(0x1A85B1874);
}

uint64_t type metadata accessor for MessageIdentifierSet(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MessageIdentifierSet);
}

void type metadata accessor for MessageIdentificationShiftWrapper()
{
  OUTLINED_FUNCTION_3_1();
}

void sub_1A570D3E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  char v5;

  OUTLINED_FUNCTION_12_31(a1, a2);
  *(_QWORD *)v2 = v3;
  *(_DWORD *)(v2 + 8) = v4;
  *(_BYTE *)(v2 + 12) = v5;
  OUTLINED_FUNCTION_8_1();
}

void sub_1A570D410(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  OUTLINED_FUNCTION_12_31(a1, a2);
  v6 = *(_QWORD *)v2;
  v7 = *(unsigned int *)(v2 + 8);
  *(_QWORD *)v2 = v3;
  *(_DWORD *)(v2 + 8) = v4;
  v8 = *(_BYTE *)(v2 + 12);
  *(_BYTE *)(v2 + 12) = v5;
  sub_1A54E3458(v6, v7, v8);
  OUTLINED_FUNCTION_8_1();
}

uint64_t sub_1A570D44C(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 13))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 12);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t type metadata accessor for MessageIdentifierSet.Index(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MessageIdentifierSet.Index);
}

BOOL sub_1A570D498(unint64_t *a1)
{
  uint64_t v1;

  return sub_1A570D028(a1, *(_QWORD **)(v1 + 16));
}

BOOL sub_1A570D4B4(_QWORD *a1)
{
  uint64_t v1;

  return sub_1A570D048(a1, *(unint64_t **)(v1 + 16));
}

uint64_t sub_1A570D4D0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t (*a3)(uint64_t *, uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X7>, uint64_t *a9@<X8>)
{
  uint64_t v9;
  uint64_t result;

  result = sub_1A5708AE0(*a1, *a2, a2[1], a3, a4, a5, *(_QWORD *)a6, *(unsigned int *)(a6 + 8) | ((unint64_t)*(unsigned __int8 *)(a6 + 12) << 32), a7, a8);
  if (!v9)
    *a9 = result;
  return result;
}

uint64_t sub_1A570D538@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1A570D4D0(a1, a2, *(uint64_t (**)(uint64_t *, uint64_t))(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), *(void **)(v3 + 56), a3);
}

void OUTLINED_FUNCTION_3_52(uint64_t a1)
{
  uint64_t v1;

  MessageIdentifierSet.contains(_:)(a1, *(_QWORD *)v1, *(unsigned int *)(v1 + 8) | ((unint64_t)*(unsigned __int8 *)(v1 + 12) << 32));
}

uint64_t OUTLINED_FUNCTION_4_47()
{
  return sub_1A594C9C0();
}

uint64_t OUTLINED_FUNCTION_5_46@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = a1;
  return sub_1A594B364();
}

uint64_t OUTLINED_FUNCTION_6_42(char a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  sub_1A54E3458(v1, v2, v3);
  return a1 & 1;
}

uint64_t OUTLINED_FUNCTION_10_36@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 128) = (char *)&a3 - a2;
  return type metadata accessor for MessageIdentifierRange(255, v3, v4, a1);
}

uint64_t OUTLINED_FUNCTION_11_25(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 - 96) = a1;
  *(_DWORD *)(v6 - 88) = a2;
  *(_BYTE *)(v6 - 84) = BYTE4(a2);
  return type metadata accessor for MessageIdentifierSet.RangeView(0, v4, v5, a4);
}

uint64_t OUTLINED_FUNCTION_12_31(uint64_t a1, uint64_t a2)
{
  return sub_1A54E4334(*(_QWORD *)a2, *(unsigned int *)(a2 + 8), *(_BYTE *)(a2 + 12));
}

uint64_t OUTLINED_FUNCTION_13_32(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_15_34@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  return sub_1A54E4334(a2, a1, SBYTE4(a1));
}

uint64_t OUTLINED_FUNCTION_17_30()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v1 - 120) + 16))(*(_QWORD *)(v1 - 128), v0, *(_QWORD *)(v1 - 112));
}

void OUTLINED_FUNCTION_18_25(int32x2_t *a1, uint64_t a2)
{
  unint64_t v2;
  int32x2_t *v3;

  sub_1A56B614C(a1, a2 & 0xFFFFFFFFFFLL, v3, v2);
}

uint64_t OUTLINED_FUNCTION_19_25()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1A54E3458(v3, v4, v0);
  return __swift_getEnumTagSinglePayload(v2, 1, v1);
}

uint64_t OUTLINED_FUNCTION_20_22(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_22_26(uint64_t a1, ...)
{
  uint64_t v1;
  uint64_t v2;
  va_list va;

  va_start(va, a1);
  return MessageIdentifierSet.init<A>(_:)((uint64_t)va, v1, v2);
}

uint64_t OUTLINED_FUNCTION_23_23(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A54E4334(a3, a4, SBYTE4(a4));
}

void OUTLINED_FUNCTION_24_20()
{
  uint64_t v0;
  uint64_t v1;

  MessageIdentifierSet.ranges.getter(v1, v0 & 0xFFFFFFFFFFLL);
}

uint64_t OUTLINED_FUNCTION_25_19()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_26_14()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_27_17(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return type metadata accessor for MessageIdentifierRange(255, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_29_16@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_30_17@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  return MessageIdentifierSet.index(_:offsetBy:)(a1, a2, a3, a5, a4);
}

uint64_t OUTLINED_FUNCTION_34_18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  return MessageIdentifierSet.distance(from:to:)(a1, a2, a3, a4, v6, v7, v5, v4);
}

uint64_t OUTLINED_FUNCTION_36_15()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t OUTLINED_FUNCTION_37_17()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v2, v1, v0);
}

uint64_t OUTLINED_FUNCTION_38_12()
{
  return sub_1A5709580();
}

uint64_t OUTLINED_FUNCTION_39_15()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1A570984C(v1, v0);
}

uint64_t OUTLINED_FUNCTION_40_14()
{
  return sub_1A5709580();
}

uint64_t OUTLINED_FUNCTION_42_9()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_43_8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_44_8()
{
  return sub_1A594C354();
}

void OUTLINED_FUNCTION_48_8(uint64_t a1)
{
  uint64_t v1;
  Swift::UInt32 v2;

  sub_1A56814E0(a1, 0xE100000000000000, v1, v2);
}

uint64_t OUTLINED_FUNCTION_51_9()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_52_7()
{
  return sub_1A594BAF0();
}

void OUTLINED_FUNCTION_53_10(uint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v3;

  sub_1A570B324(a1, a2, a3, v3);
}

uint64_t OUTLINED_FUNCTION_55_9(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return a9;
}

uint64_t OUTLINED_FUNCTION_57_10()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_58_6()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_60_9@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t OUTLINED_FUNCTION_61_7()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 104);
}

uint64_t OUTLINED_FUNCTION_63_6(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return sub_1A5709DEC(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_64_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  return type metadata accessor for MessageIdentifierRange(a1, v5, v4, a4);
}

uint64_t OUTLINED_FUNCTION_66_7(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)v2 = result;
  *(_DWORD *)(v2 + 8) = a2;
  *(_BYTE *)(v2 + 12) = BYTE4(a2);
  return result;
}

Swift::Int OUTLINED_FUNCTION_67_7(uint64_t a1)
{
  Swift::Int v1;
  unint64_t v2;

  v2 = 0xE100000000000000;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v1);
}

uint64_t OUTLINED_FUNCTION_70_4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_72_3()
{
  return 0;
}

uint64_t MessageIdentifierSetNonEmpty.init(set:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = a1;
  if (MessageIdentifierSet.count.getter(a1, a2 & 0xFFFFFFFFFFLL) <= 0)
  {
    sub_1A54E3458(v3, a2, SBYTE4(a2));
    return 0;
  }
  return v3;
}

void static MessageIdentifierSetNonEmpty.__derived_struct_equals(_:_:)(int32x2_t *a1, uint64_t a2, int32x2_t *a3, uint64_t a4)
{
  static MessageIdentifierSet.__derived_struct_equals(_:_:)(a1, a2 & 0xFFFFFFFFFFLL, a3, a4 & 0xFFFFFFFFFFLL);
}

uint64_t MessageIdentifierSetNonEmpty.init(range:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v7 = OUTLINED_FUNCTION_0_97(a1, a2, a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v16 - v10;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))((char *)&v16 - v10, v6, v7, v9);
  MessageIdentifierSet.init(_:)((uint64_t)v11, v5, v4, v12);
  v14 = v13;
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  return v14;
}

void MessageIdentifierSetNonEmpty.writeIntoBuffer(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MessageIdentifierSet.writeIntoBuffer(_:)(a1, a2, a3 & 0xFFFFFFFFFFLL);
}

uint64_t static MessageIdentifierSetNonEmpty.all.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  static MessageIdentifierSet.all.getter();
  result = MessageIdentifierSetNonEmpty.init(set:)(v1, v0 & 0xFFFFFFFFFFLL);
  if ((~v3 & 0xFF00000000) == 0)
    __break(1u);
  return result;
}

uint64_t MessageIdentifierSetNonEmpty.set.getter(uint64_t a1, uint64_t a2)
{
  sub_1A54E4334(a1, a2, SBYTE4(a2));
  return a1;
}

void MessageIdentifierSetNonEmpty.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MessageIdentifierSet.hash(into:)(a1, a2, a3 & 0xFFFFFFFFFFLL);
}

uint64_t MessageIdentifierSetNonEmpty.hashValue.getter(uint64_t a1, uint64_t a2)
{
  _BYTE v5[72];

  sub_1A594CE64();
  MessageIdentifierSetNonEmpty.hash(into:)((uint64_t)v5, a1, a2 & 0xFFFFFFFFFFLL);
  return sub_1A594CED0();
}

uint64_t sub_1A570DBD8()
{
  uint64_t v0;

  return MessageIdentifierSetNonEmpty.hashValue.getter(*(_QWORD *)v0, *(unsigned int *)(v0 + 8) | ((unint64_t)*(unsigned __int8 *)(v0 + 12) << 32));
}

void sub_1A570DBF4(uint64_t a1)
{
  uint64_t v1;

  MessageIdentifierSetNonEmpty.hash(into:)(a1, *(_QWORD *)v1, *(unsigned int *)(v1 + 8) | ((unint64_t)*(unsigned __int8 *)(v1 + 12) << 32));
}

uint64_t sub_1A570DC10()
{
  uint64_t v0;
  _BYTE v2[72];

  sub_1A594CE64();
  MessageIdentifierSetNonEmpty.hash(into:)((uint64_t)v2, *(_QWORD *)v0, *(unsigned int *)(v0 + 8) | ((unint64_t)*(unsigned __int8 *)(v0 + 12) << 32));
  return sub_1A594CED0();
}

void sub_1A570DC60(uint64_t a1, uint64_t a2)
{
  static MessageIdentifierSetNonEmpty.__derived_struct_equals(_:_:)(*(int32x2_t **)a1, *(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned __int8 *)(a1 + 12) << 32), *(int32x2_t **)a2, *(unsigned int *)(a2 + 8) | ((unint64_t)*(unsigned __int8 *)(a2 + 12) << 32));
}

void MessageIdentifierSetNonEmpty.debugDescription.getter()
{
  MessageIdentifierSet.debugDescription.getter();
}

void sub_1A570DC98()
{
  MessageIdentifierSetNonEmpty.debugDescription.getter();
}

uint64_t MessageIdentifierSetNonEmpty.init(arrayLiteral:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  v6 = OUTLINED_FUNCTION_0_97(a1, a2, a3, a4);
  result = MEMORY[0x1A85ADEB4](v5, v6);
  if (result < 1)
  {
    __break(1u);
  }
  else
  {
    v9 = v5;
    v8 = sub_1A594BAF0();
    MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF38], v8);
    return MessageIdentifierSet.init<A>(_:)((uint64_t)&v9, v4, v8);
  }
  return result;
}

uint64_t sub_1A570DD3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t result;
  int v6;
  char v7;

  result = MessageIdentifierSetNonEmpty.init(arrayLiteral:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
  *(_QWORD *)a4 = result;
  *(_DWORD *)(a4 + 8) = v6;
  *(_BYTE *)(a4 + 12) = v7;
  return result;
}

uint64_t MessageIdentifierSetNonEmpty.min()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_1A570DD8C(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, double))MessageIdentifierSet.min(), a5);
}

uint64_t MessageIdentifierSetNonEmpty.max()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_1A570DD8C(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, double))MessageIdentifierSet.max(), a5);
}

uint64_t sub_1A570DD8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, double)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;

  v12 = sub_1A594C354();
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v17 - v14;
  a5(a1, a2 & 0xFFFFFFFFFFLL, a3, a4, v13);
  result = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, a3);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a6, v15, a3);
  __break(1u);
  return result;
}

void sub_1A570DE58()
{
  JUMPOUT(0x1A85B1874);
}

uint64_t type metadata accessor for MessageIdentifierSetNonEmpty(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MessageIdentifierSetNonEmpty);
}

uint64_t OUTLINED_FUNCTION_0_97(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return type metadata accessor for MessageIdentifierRange(0, a2, a3, a4);
}

BOOL sub_1A570DE88(unsigned int a1, unsigned int a2)
{
  return a2 <= a1;
}

BOOL sub_1A570DE94(unint64_t a1, unint64_t a2)
{
  return a1 >= a2;
}

void sub_1A570DEA0(_QWORD *a1, uint64_t a2, unsigned __int8 a3, _QWORD *a4)
{
  if ((_s12NIOIMAPCore216SectionSpecifierV4PartV23__derived_struct_equalsySbAE_AEtFZ_0(a1, a4) & 1) != 0)
  {
    if (a3 > 1u)
      __asm { BR              X9 }
  }
  else
  {
    static SectionSpecifier.Part.< infix(_:_:)((_BOOL8)a1, (uint64_t)a4);
  }
  OUTLINED_FUNCTION_17_1();
}

void sub_1A570DF34()
{
  JUMPOUT(0x1A570DF08);
}

void sub_1A570DF48()
{
  OUTLINED_FUNCTION_2_68();
  JUMPOUT(0x1A570DF08);
}

void sub_1A570DF58()
{
  JUMPOUT(0x1A570DF08);
}

BOOL sub_1A570DF60(_BOOL8 a1, uint64_t a2)
{
  return !static SectionSpecifier.Part.< infix(_:_:)(a1, a2);
}

uint64_t sub_1A570DF7C(uint64_t a1, unsigned __int8 a2, unint64_t a3, unsigned __int8 a4)
{
  _BOOL4 v5;

  if (a2 > 1u)
    return ((uint64_t (*)(void))((char *)&loc_1A570DF9C + 4 * byte_1A59B61CC[a1]))();
  v5 = a4 > 1u && a3 > 2;
  return !v5;
}

void sub_1A570DFC0()
{
  JUMPOUT(0x1A570DF9CLL);
}

void sub_1A570DFD4()
{
  JUMPOUT(0x1A570DF9CLL);
}

void sub_1A570DFF0()
{
  JUMPOUT(0x1A570DF9CLL);
}

BOOL sub_1A570DFF8(unsigned int a1, unsigned int a2)
{
  return a1 >= a2;
}

BOOL sub_1A570E004(uint64_t a1, _BOOL8 a2)
{
  return static SectionSpecifier.Part.< infix(_:_:)(a2, a1);
}

BOOL sub_1A570E014(unsigned int a1, unsigned int a2)
{
  return a1 > a2;
}

BOOL sub_1A570E020(unint64_t a1, unint64_t a2)
{
  return a2 < a1;
}

void sub_1A570E02C(_QWORD *a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, unsigned __int8 a6)
{
  if ((_s12NIOIMAPCore216SectionSpecifierV4PartV23__derived_struct_equalsySbAE_AEtFZ_0(a4, a1) & 1) != 0)
  {
    if (a6 > 1u)
      __asm { BR              X9 }
    OUTLINED_FUNCTION_17_1();
  }
  else
  {
    static SectionSpecifier.Part.< infix(_:_:)((_BOOL8)a4, (uint64_t)a1);
  }
}

void sub_1A570E0C8()
{
  JUMPOUT(0x1A570E088);
}

void sub_1A570E0DC()
{
  OUTLINED_FUNCTION_2_68();
  JUMPOUT(0x1A570E088);
}

void sub_1A570E0EC()
{
  JUMPOUT(0x1A570E088);
}

uint64_t sub_1A570E0F4(unint64_t a1, unsigned __int8 a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 > 1u)
    return ((uint64_t (*)(void))((char *)&loc_1A570E114 + 4 * byte_1A59B61D4[a3]))();
  return a2 > 1u && a1 > 2;
}

void sub_1A570E138()
{
  JUMPOUT(0x1A570E114);
}

void sub_1A570E14C()
{
  JUMPOUT(0x1A570E114);
}

void sub_1A570E168()
{
  JUMPOUT(0x1A570E114);
}

BOOL sub_1A570E170(unsigned int a1, unsigned int a2)
{
  return a2 < a1;
}

void sub_1A570E180(int a1)
{
  _DWORD *v1;
  _DWORD *v2;
  uint64_t v3;
  unint64_t v4;
  void *v5;
  Swift::Int v6;
  int v7;
  char v8;
  Swift::String v9;
  int v10;
  int v11;
  Swift::Int v12;
  Swift::UInt32 v13;
  int v14;
  char v15;
  Swift::String v16;

  v2 = v1;
  if (a1 != -1)
  {
    v3 = sub_1A594CC9C();
    v5 = (void *)v4;
    v2 = v1 + 5;
    v6 = v1[5];
    sub_1A56814E0(v3, v4, (uint64_t)(v1 + 2), v1[5]);
    if ((v8 & 1) != 0)
    {
      v9._countAndFlagsBits = v3;
      v9._object = v5;
      v7 = ByteBuffer._setStringSlowpath(_:at:)(v9, v6);
    }
    v10 = v7;
    swift_bridgeObjectRelease();
    v11 = *v2 + v10;
    if (!__CFADD__(*v2, v10))
      goto LABEL_10;
    __break(1u);
  }
  v13 = v2[5];
  v2 += 5;
  v12 = v13;
  sub_1A56814E0(42, 0xE100000000000000, (uint64_t)(v2 - 3), v13);
  if ((v15 & 1) != 0)
  {
    v16._countAndFlagsBits = 42;
    v16._object = (void *)0xE100000000000000;
    v14 = ByteBuffer._setStringSlowpath(_:at:)(v16, v12);
  }
  v11 = *v2 + v14;
  if (!__CFADD__(*v2, v14))
  {
LABEL_10:
    *v2 = v11;
    return;
  }
  __break(1u);
}

_QWORD *sub_1A570E28C(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  if (a4 < 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  v6 = a4 + a6;
  if (__OFADD__(a4, a6))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if ((v6 & 0x8000000000000000) == 0)
  {
    *result = v6;
    return (_QWORD *)OUTLINED_FUNCTION_0_7();
  }
LABEL_7:
  __break(1u);
  return result;
}

_DWORD *sub_1A570E2B0(_DWORD *result, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6)
{
  unint64_t v6;

  v6 = a6 + a4;
  if (__OFADD__(a6, a4))
  {
    __break(1u);
    goto LABEL_6;
  }
  if ((v6 & 0x8000000000000000) != 0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (!HIDWORD(v6))
  {
    *result = v6;
    return (_DWORD *)OUTLINED_FUNCTION_0_7();
  }
LABEL_7:
  __break(1u);
  return result;
}

_DWORD *sub_1A570E2D8(_DWORD *result, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  if (a6 > 0xFFFFFFFFLL)
  {
    __break(1u);
    goto LABEL_6;
  }
  v6 = a6 + a4;
  if (v6 < 1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (!HIDWORD(v6))
  {
    *result = v6;
    return (_DWORD *)OUTLINED_FUNCTION_0_7();
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_1A570E310()
{
  sub_1A5682794((void (*)(char *))sub_1A570EB64);
}

void sub_1A570E344()
{
  sub_1A5682794((void (*)(char *))sub_1A570EB5C);
}

uint64_t sub_1A570E37C(uint64_t result, unsigned int a2)
{
  if (result > 0xFFFFFFFFLL)
  {
    __break(1u);
    goto LABEL_6;
  }
  result += a2;
  if (result < 1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (HIDWORD(result))
LABEL_7:
    __break(1u);
  return result;
}

BOOL sub_1A570E3AC(unsigned int a1, unsigned int a2)
{
  return a1 < a2;
}

BOOL sub_1A570E3B8(unsigned int a1, unsigned int a2)
{
  return a2 >= a1;
}

void sub_1A570E3C4(uint64_t a1, int a2)
{
  sub_1A570E180(a2);
}

uint64_t UID.rawValue.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

{
  _DWORD *v1;

  *v1 = result;
  return result;
}

double (*UID.rawValue.modify())(_QWORD)
{
  return nullsub_1;
}

{
  return nullsub_1;
}

uint64_t UID.hash(into:)()
{
  return sub_1A594CEAC();
}

uint64_t sub_1A570E430()
{
  sub_1A570E560();
  return sub_1A594CFB4();
}

uint64_t sub_1A570E458()
{
  sub_1A570E560();
  return sub_1A594CFC0();
}

uint64_t UID.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AC08);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A570E560();
  sub_1A594CF3C();
  sub_1A594CC60();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_1A570E560()
{
  unint64_t result;

  result = qword_1EE796F88;
  if (!qword_1EE796F88)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59B6490, &type metadata for UID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE796F88);
  }
  return result;
}

uint64_t UID.hashValue.getter()
{
  sub_1A594CE64();
  sub_1A594CEAC();
  return sub_1A594CED0();
}

uint64_t UID.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79ABE0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t)__swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A570E560();
  sub_1A594CF18();
  if (!v1)
  {
    v7 = sub_1A594CBAC();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v7;
}

uint64_t sub_1A570E6E4()
{
  return UID.hashValue.getter();
}

uint64_t sub_1A570E6EC()
{
  return UID.hash(into:)();
}

unint64_t sub_1A570E6F4(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1A570E740();
  a1[2] = sub_1A570E77C();
  a1[3] = sub_1A570E7B8();
  a1[4] = sub_1A570E7F4();
  a1[5] = sub_1A570E830();
  result = sub_1A570E86C();
  a1[6] = result;
  return result;
}

unint64_t sub_1A570E740()
{
  unint64_t result;

  result = qword_1EE795BE0;
  if (!qword_1EE795BE0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for UID, &type metadata for UID);
    atomic_store(result, (unint64_t *)&qword_1EE795BE0);
  }
  return result;
}

unint64_t sub_1A570E77C()
{
  unint64_t result;

  result = qword_1EE796FF8;
  if (!qword_1EE796FF8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for UID, &type metadata for UID);
    atomic_store(result, (unint64_t *)&qword_1EE796FF8);
  }
  return result;
}

unint64_t sub_1A570E7B8()
{
  unint64_t result;

  result = qword_1EE796FA8;
  if (!qword_1EE796FA8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for UID, &type metadata for UID);
    atomic_store(result, (unint64_t *)&qword_1EE796FA8);
  }
  return result;
}

unint64_t sub_1A570E7F4()
{
  unint64_t result;

  result = qword_1EE797010;
  if (!qword_1EE797010)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for UID, &type metadata for UID);
    atomic_store(result, (unint64_t *)&qword_1EE797010);
  }
  return result;
}

unint64_t sub_1A570E830()
{
  unint64_t result;

  result = qword_1EE796FC0;
  if (!qword_1EE796FC0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for UID, &type metadata for UID);
    atomic_store(result, (unint64_t *)&qword_1EE796FC0);
  }
  return result;
}

unint64_t sub_1A570E86C()
{
  unint64_t result;

  result = qword_1EE797008;
  if (!qword_1EE797008)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for UID, &type metadata for UID);
    atomic_store(result, (unint64_t *)&qword_1EE797008);
  }
  return result;
}

unint64_t sub_1A570E8AC()
{
  unint64_t result;

  result = qword_1EE796FE8;
  if (!qword_1EE796FE8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for UID, &type metadata for UID);
    atomic_store(result, (unint64_t *)&qword_1EE796FE8);
  }
  return result;
}

uint64_t sub_1A570E8E8@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = UID.init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1A570E910(_QWORD *a1)
{
  return UID.encode(to:)(a1);
}

unint64_t sub_1A570E92C()
{
  unint64_t result;

  result = qword_1EE796FD0;
  if (!qword_1EE796FD0)
  {
    result = MEMORY[0x1A85B1874]("مT?", &type metadata for UID);
    atomic_store(result, (unint64_t *)&qword_1EE796FD0);
  }
  return result;
}

unint64_t sub_1A570E968@<X0>(unsigned int *a1@<X0>, unint64_t *a2@<X8>)
{
  unsigned int *v2;
  unint64_t result;

  result = sub_1A56FD554(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_1A570E994@<X0>(uint64_t *a1@<X0>, _DWORD *a2@<X8>)
{
  unsigned int *v2;
  uint64_t result;

  result = sub_1A570E37C(*a1, *v2);
  *a2 = result;
  return result;
}

_DWORD *sub_1A570E9C0(_DWORD *a1, uint64_t a2, char a3, unsigned int *a4, unsigned int *a5, uint64_t *a6)
{
  return sub_1A570E2D8(a1, a2, a3 & 1, *a4, *a5, *a6);
}

ValueMetadata *type metadata accessor for UID()
{
  return &type metadata for UID;
}

{
  return &type metadata for UID;
}

uint64_t storeEnumTagSinglePayload for UID.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A570EA38 + 4 * byte_1A59B61D8[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A570EA58 + 4 * byte_1A59B61DD[v4]))();
}

_BYTE *sub_1A570EA38(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A570EA58(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A570EA60(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A570EA68(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A570EA70(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A570EA78(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for UID.CodingKeys()
{
  return &type metadata for UID.CodingKeys;
}

unint64_t sub_1A570EA98()
{
  unint64_t result;

  result = qword_1EE7A9D38;
  if (!qword_1EE7A9D38)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59B6468, &type metadata for UID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A9D38);
  }
  return result;
}

unint64_t sub_1A570EAD8()
{
  unint64_t result;

  result = qword_1EE796F98;
  if (!qword_1EE796F98)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59B63D8, &type metadata for UID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE796F98);
  }
  return result;
}

unint64_t sub_1A570EB18()
{
  unint64_t result;

  result = qword_1EE796F90;
  if (!qword_1EE796F90)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59B6400, &type metadata for UID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE796F90);
  }
  return result;
}

void sub_1A570EB54(uint64_t a1, int *a2)
{
  sub_1A570E3C4(a1, *a2);
}

void sub_1A570EB5C(uint64_t a1)
{
  uint64_t v1;

  sub_1A570EB54(a1, *(int **)(v1 + 16));
}

uint64_t sub_1A570EB8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  void *v4;
  Swift::Int v5;
  Swift::Int v6;
  char v7;
  Swift::String v8;
  Swift::Int v9;
  uint64_t result;
  int v11;
  BOOL v12;
  int v13;

  v1 = v0;
  v2 = sub_1A594CC9C();
  v4 = (void *)v3;
  v5 = *(unsigned int *)(v0 + 20);
  sub_1A56814E0(v2, v3, v1 + 8, *(_DWORD *)(v1 + 20));
  if ((v7 & 1) != 0)
  {
    v8._countAndFlagsBits = v2;
    v8._object = v4;
    v6 = ByteBuffer._setStringSlowpath(_:at:)(v8, v5);
  }
  v9 = v6;
  result = swift_bridgeObjectRelease();
  v11 = *(_DWORD *)(v1 + 20);
  v12 = __CFADD__(v11, (_DWORD)v9);
  v13 = v11 + v9;
  if (v12)
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(v1 + 20) = v13;
    return v9;
  }
  return result;
}

BOOL static UIDValidity.__derived_struct_equals(_:_:)(int a1, int a2)
{
  return a1 == a2;
}

unint64_t UIDValidity.init<A>(exactly:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int v32;
  unsigned __int8 v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  unsigned int v37;
  uint64_t (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  unsigned int v40;
  char v41;
  unsigned int v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t AssociatedTypeWitness;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v49 = *(_QWORD *)(*(_QWORD *)(a3 + 24) + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v47 = (char *)&v44 - v8;
  v9 = *(_QWORD *)(a2 - 8);
  v10 = MEMORY[0x1E0C80A78](v7);
  v45 = (uint64_t)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v50 = (uint64_t)&v44 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v44 - v15;
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v44 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v44 - v20;
  OUTLINED_FUNCTION_21_3();
  v22 = OUTLINED_FUNCTION_6_43();
  if ((v3 & 1) != 0)
  {
    if (v22 <= 64)
      goto LABEL_3;
  }
  else if (v22 <= 63)
  {
LABEL_3:
    OUTLINED_FUNCTION_9_30((uint64_t)v21, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16));
    v23 = OUTLINED_FUNCTION_25_0();
    v24 = *(void (**)(char *, uint64_t))(v9 + 8);
    OUTLINED_FUNCTION_0_76((uint64_t)v21);
    if (v23 > 0)
      goto LABEL_4;
LABEL_9:
    v29 = a1;
LABEL_24:
    OUTLINED_FUNCTION_0_76(v29);
    v34 = 0;
    v33 = 1;
    goto LABEL_25;
  }
  v51 = 0;
  sub_1A566F64C();
  OUTLINED_FUNCTION_1_56();
  v28 = OUTLINED_FUNCTION_3_53();
  v24 = *(void (**)(char *, uint64_t))(v9 + 8);
  OUTLINED_FUNCTION_0_76((uint64_t)v21);
  if ((v28 & 1) == 0)
    goto LABEL_9;
LABEL_4:
  v25 = *(_QWORD *)(v9 + 16);
  v46 = a1;
  OUTLINED_FUNCTION_7_34((uint64_t)v19, a1);
  v26 = OUTLINED_FUNCTION_21_3();
  OUTLINED_FUNCTION_7_34((uint64_t)v16, (uint64_t)v19);
  if ((v26 & 1) != 0)
  {
    OUTLINED_FUNCTION_7_25();
    v44 = a3;
    OUTLINED_FUNCTION_5_47();
    sub_1A594CD08();
    v27 = sub_1A594B280();
    v24(v21, a2);
    v24(v16, a2);
    if ((v27 & 1) != 0)
      goto LABEL_23;
  }
  else
  {
    OUTLINED_FUNCTION_0_76((uint64_t)v16);
  }
  v30 = sub_1A594C504();
  v31 = v50;
  OUTLINED_FUNCTION_7_34(v50, (uint64_t)v19);
  if (v30 <= 31)
  {
    OUTLINED_FUNCTION_0_76(v31);
    goto LABEL_13;
  }
  LODWORD(v51) = -1;
  OUTLINED_FUNCTION_21_3();
  v35 = OUTLINED_FUNCTION_6_43();
  if ((v25 & 1) != 0)
  {
    if (v35 <= 32)
    {
      OUTLINED_FUNCTION_7_25();
      OUTLINED_FUNCTION_5_47();
      sub_1A594CD08();
      v36 = sub_1A594B274();
      OUTLINED_FUNCTION_0_76((uint64_t)v21);
      v37 = v51;
      v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 32);
      v39 = v45;
      OUTLINED_FUNCTION_9_30(v45, v38);
      if ((v36 & 1) != 0)
      {
        v40 = OUTLINED_FUNCTION_25_0();
        OUTLINED_FUNCTION_0_76(v39);
        if (v37 < v40)
          goto LABEL_23;
      }
      else
      {
        OUTLINED_FUNCTION_0_76(v39);
      }
      goto LABEL_13;
    }
LABEL_20:
    sub_1A5678A1C();
    OUTLINED_FUNCTION_1_56();
    v41 = OUTLINED_FUNCTION_3_53();
    OUTLINED_FUNCTION_0_76((uint64_t)v21);
    OUTLINED_FUNCTION_0_76(v31);
    if ((v41 & 1) != 0)
      goto LABEL_23;
    goto LABEL_13;
  }
  if (v35 >= 33)
    goto LABEL_20;
  v42 = OUTLINED_FUNCTION_25_0();
  OUTLINED_FUNCTION_0_76(v31);
  if (v51 < v42)
  {
LABEL_23:
    OUTLINED_FUNCTION_0_76((uint64_t)v19);
    v29 = v46;
    goto LABEL_24;
  }
LABEL_13:
  v32 = OUTLINED_FUNCTION_25_0();
  OUTLINED_FUNCTION_0_76((uint64_t)v19);
  OUTLINED_FUNCTION_0_76(v46);
  v33 = 0;
  v34 = v32;
LABEL_25:
  LOBYTE(v51) = v33;
  return v34 | ((unint64_t)v33 << 32);
}

uint64_t UIDValidity.hash(into:)()
{
  return sub_1A594CEAC();
}

uint64_t UIDValidity.hashValue.getter()
{
  sub_1A594CE64();
  sub_1A594CEAC();
  return sub_1A594CED0();
}

uint64_t sub_1A570F10C()
{
  return UIDValidity.hashValue.getter();
}

uint64_t sub_1A570F114()
{
  return UIDValidity.hash(into:)();
}

BOOL sub_1A570F11C(int *a1, int *a2)
{
  return static UIDValidity.__derived_struct_equals(_:_:)(*a1, *a2);
}

uint64_t UIDValidity.init(integerLiteral:)(uint64_t result)
{
  if (!(_DWORD)result)
    __break(1u);
  return result;
}

uint64_t sub_1A570F134@<X0>(unsigned int *a1@<X0>, _DWORD *a2@<X8>)
{
  int v3;
  uint64_t result;

  v3 = *a1;
  result = UIDValidity.init(integerLiteral:)(*a1);
  *a2 = v3;
  return result;
}

unint64_t sub_1A570F1C0()
{
  unint64_t result;

  result = qword_1EE7A9D40;
  if (!qword_1EE7A9D40)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for UIDValidity, &type metadata for UIDValidity);
    atomic_store(result, (unint64_t *)&qword_1EE7A9D40);
  }
  return result;
}

ValueMetadata *type metadata accessor for UIDValidity()
{
  return &type metadata for UIDValidity;
}

uint64_t OUTLINED_FUNCTION_3_53()
{
  return sub_1A594B280();
}

uint64_t OUTLINED_FUNCTION_5_47()
{
  return sub_1A594CDA4();
}

uint64_t OUTLINED_FUNCTION_6_43()
{
  return sub_1A594C504();
}

uint64_t OUTLINED_FUNCTION_7_34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t static URLAuthenticationMechanism.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4)
    return 1;
  else
    return sub_1A594CD38();
}

const char *URLAuthenticationMechanism.internal.unsafeMutableAddressor()
{
  return "INTERNAL";
}

uint64_t static URLAuthenticationMechanism.internal.getter()
{
  return 0x4C414E5245544E49;
}

uint64_t URLAuthenticationMechanism.hash(into:)()
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_2_22();
  return swift_bridgeObjectRelease();
}

uint64_t URLAuthenticationMechanism.hashValue.getter()
{
  sub_1A594CE64();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_2_22();
  swift_bridgeObjectRelease();
  return sub_1A594CED0();
}

uint64_t sub_1A570F32C()
{
  return URLAuthenticationMechanism.hashValue.getter();
}

uint64_t sub_1A570F334()
{
  return URLAuthenticationMechanism.hash(into:)();
}

uint64_t sub_1A570F33C(uint64_t *a1, uint64_t *a2)
{
  return static URLAuthenticationMechanism.__derived_struct_equals(_:_:)(*a1, a1[1], *a2, a2[1]);
}

unint64_t sub_1A570F358()
{
  unint64_t result;

  result = qword_1EE7A9D48;
  if (!qword_1EE7A9D48)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for URLAuthenticationMechanism, &type metadata for URLAuthenticationMechanism);
    atomic_store(result, (unint64_t *)&qword_1EE7A9D48);
  }
  return result;
}

ValueMetadata *type metadata accessor for URLAuthenticationMechanism()
{
  return &type metadata for URLAuthenticationMechanism;
}

uint64_t URLCommand.hash(into:)()
{
  const void *v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  char v5;
  int v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[192];
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int16 v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  char v44;
  int v45;
  __int128 v46;
  __int128 v47;
  char v48;
  char v49;

  sub_1A5687D00(v0, v27);
  v1 = sub_1A56CD968((uint64_t)v27);
  v2 = sub_1A56CD974((uint64_t)v27);
  if (v1 == 1)
  {
    v3 = *(_QWORD *)(v2 + 8);
    v4 = *(_DWORD *)(v2 + 16);
    v5 = *(_BYTE *)(v2 + 20);
    v6 = *(_DWORD *)(v2 + 24);
    v7 = *(_BYTE *)(v2 + 64);
    v8 = *(_BYTE *)(v2 + 65);
    v9 = *(_QWORD *)(v2 + 72);
    v10 = *(_QWORD *)(v2 + 80);
    v11 = *(_QWORD *)(v2 + 88);
    v25 = *(_QWORD *)(v2 + 104);
    v26 = *(_QWORD *)(v2 + 96);
    v23 = *(_QWORD *)(v2 + 120);
    v24 = *(_QWORD *)(v2 + 112);
    v12 = *(_QWORD *)(v2 + 136);
    v13 = *(_QWORD *)(v2 + 144);
    v14 = *(_QWORD *)(v2 + 152);
    v15 = *(_QWORD *)(v2 + 168);
    v21 = *(_QWORD *)(v2 + 160);
    v22 = *(_QWORD *)(v2 + 128);
    v16 = *(_QWORD *)(v2 + 184);
    v20 = *(_QWORD *)(v2 + 176);
    v41 = *(_QWORD *)v2;
    v42 = v3;
    v43 = v4;
    v44 = v5 & 1;
    v45 = v6;
    v17 = *(_OWORD *)(v2 + 48);
    v46 = *(_OWORD *)(v2 + 32);
    v47 = v17;
    v48 = v7;
    v49 = v8 & 1;
    sub_1A594CE88();
    MessagePath.hash(into:)();
    if (v15)
    {
      *(_QWORD *)&v28 = v9;
      *((_QWORD *)&v28 + 1) = v10;
      *(_QWORD *)&v29 = v11;
      *((_QWORD *)&v29 + 1) = v26;
      v30 = v25;
      v31 = v24;
      v32 = v23;
      v33 = v22 & 0x1FF;
      v34 = v12;
      v35 = v13;
      v36 = v14;
      v37 = v21;
      v38 = v15;
      v39 = v20;
      v40 = v16;
      sub_1A594CE94();
      sub_1A5688348(v12, v13, v14);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      AuthenticatedURL.hash(into:)();
      return sub_1A5687B8C(v9, v10, v11, v26, v25, v24, v23, v22, v12, v13, v14, v21, v15);
    }
    else
    {
      return sub_1A594CE94();
    }
  }
  else
  {
    v19 = *(_OWORD *)(v2 + 16);
    v28 = *(_OWORD *)v2;
    v29 = v19;
    v30 = *(_QWORD *)(v2 + 32);
    sub_1A594CE88();
    return EncodedSearchQuery.hash(into:)();
  }
}

BOOL static URLCommand.__derived_enum_equals(_:_:)(const void *a1, const void *a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  char v24;
  int v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  BOOL v39;
  uint64_t v41;
  int v42;
  uint64_t v43;
  int v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  char v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _BYTE v112[192];
  _BYTE v113[192];
  _QWORD v114[7];
  __int16 v115;
  uint64_t v116;
  uint64_t v117;
  char v118;
  _QWORD v119[2];
  int v120;
  char v121;
  int v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char v127;
  char v128;
  _QWORD v129[2];
  int v130;
  char v131;
  int v132;
  __int128 v133;
  __int128 v134;
  char v135;
  char v136;

  sub_1A5687D00(a1, v113);
  v3 = sub_1A56CD968((uint64_t)v113);
  v4 = sub_1A56CD974((uint64_t)v113);
  v5 = *(_QWORD *)v4;
  v6 = *(_QWORD *)(v4 + 8);
  v7 = *(_DWORD *)(v4 + 16);
  v8 = *(_BYTE *)(v4 + 20);
  v9 = *(_QWORD *)(v4 + 32);
  if (v3 != 1)
  {
    v41 = *(_QWORD *)(v4 + 24);
    sub_1A5687D00(a2, &v82);
    v42 = sub_1A56CD968((uint64_t)&v82);
    v43 = sub_1A56CD974((uint64_t)&v82);
    if (v42 == 1)
      return 0;
    v44 = *(_DWORD *)(v43 + 16);
    v45 = *(_BYTE *)(v43 + 20);
    v47 = *(_QWORD *)(v43 + 24);
    v46 = *(_QWORD *)(v43 + 32);
    v48 = v5 == *(_QWORD *)v43 && v6 == *(_QWORD *)(v43 + 8);
    if (!v48 && (OUTLINED_FUNCTION_1_16() & 1) == 0)
      return 0;
    if ((v8 & 1) != 0)
    {
      if ((v45 & 1) == 0)
        return 0;
    }
    else if ((v45 & 1) != 0 || v7 != v44)
    {
      return 0;
    }
    if (v9)
    {
      if (!v46)
        return 0;
      if (v41 == v47 && v9 == v46)
        return 1;
      return (OUTLINED_FUNCTION_1_16() & 1) != 0;
    }
    return !v46;
  }
  v72 = *(_QWORD *)(v4 + 8);
  v74 = *(_QWORD *)v4;
  v76 = *(_BYTE *)(v4 + 20);
  v78 = *(_DWORD *)(v4 + 16);
  v80 = *(_QWORD *)(v4 + 32);
  v65 = *(_DWORD *)(v4 + 24);
  v69 = *(_QWORD *)(v4 + 48);
  v70 = *(_QWORD *)(v4 + 40);
  v68 = *(_QWORD *)(v4 + 56);
  v66 = *(_BYTE *)(v4 + 65);
  v67 = *(_BYTE *)(v4 + 64);
  v59 = *(_QWORD *)(v4 + 72);
  v60 = *(_QWORD *)(v4 + 80);
  v61 = *(_QWORD *)(v4 + 88);
  v62 = *(_QWORD *)(v4 + 96);
  v10 = *(_QWORD *)(v4 + 120);
  v63 = *(_QWORD *)(v4 + 104);
  v64 = *(_QWORD *)(v4 + 112);
  v11 = *(_QWORD *)(v4 + 128);
  v12 = *(_QWORD *)(v4 + 136);
  v14 = *(_QWORD *)(v4 + 144);
  v13 = *(_QWORD *)(v4 + 152);
  v15 = *(_QWORD *)(v4 + 160);
  v16 = *(_QWORD *)(v4 + 168);
  v17 = *(_QWORD *)(v4 + 176);
  v18 = *(_QWORD *)(v4 + 184);
  sub_1A5687D00(a2, v112);
  if (sub_1A56CD968((uint64_t)v112) != 1)
  {
    sub_1A56CD974((uint64_t)v112);
    return 0;
  }
  v54 = v13;
  v55 = v14;
  v56 = v12;
  v57 = v10;
  v58 = v11;
  v19 = v16;
  v52 = v18;
  v53 = v15;
  v51 = v17;
  v20 = sub_1A56CD974((uint64_t)v112);
  v21 = *(_QWORD *)v20;
  v22 = *(_QWORD *)(v20 + 8);
  v23 = *(_DWORD *)(v20 + 16);
  v119[0] = v74;
  v119[1] = v72;
  v24 = *(_BYTE *)(v20 + 20);
  v25 = *(_DWORD *)(v20 + 24);
  v120 = v78;
  v26 = *(_BYTE *)(v20 + 64);
  v121 = v76 & 1;
  v27 = *(_BYTE *)(v20 + 65);
  v122 = v65;
  v123 = v80;
  v29 = *(_QWORD *)(v20 + 72);
  v28 = *(_QWORD *)(v20 + 80);
  v124 = v70;
  v125 = v69;
  v31 = *(_QWORD *)(v20 + 88);
  v30 = *(_QWORD *)(v20 + 96);
  v126 = v68;
  v127 = v67;
  v32 = *(_QWORD *)(v20 + 104);
  v81 = *(_QWORD *)(v20 + 112);
  v128 = v66 & 1;
  v129[0] = v21;
  v129[1] = v22;
  v34 = *(_QWORD *)(v20 + 120);
  v33 = *(_QWORD *)(v20 + 128);
  v130 = v23;
  v77 = *(_QWORD *)(v20 + 144);
  v79 = *(_QWORD *)(v20 + 136);
  v131 = v24 & 1;
  v132 = v25;
  v35 = *(_QWORD *)(v20 + 152);
  v36 = *(_QWORD *)(v20 + 160);
  v135 = v26;
  v136 = v27 & 1;
  v37 = *(_QWORD *)(v20 + 168);
  v71 = *(_QWORD *)(v20 + 176);
  v38 = *(_OWORD *)(v20 + 48);
  v73 = *(_QWORD *)(v20 + 184);
  v75 = v35;
  v133 = *(_OWORD *)(v20 + 32);
  v134 = v38;
  if ((static MessagePath.__derived_struct_equals(_:_:)((uint64_t)v119, (uint64_t)v129) & 1) != 0)
  {
    if (v19)
    {
      if (v37)
      {
        v114[0] = v59;
        v114[1] = v60;
        v114[2] = v61;
        v114[3] = v62;
        v114[4] = v63;
        v114[5] = v64;
        v114[6] = v57;
        v115 = v58 & 0x1FF;
        v116 = v56;
        v117 = v55;
        v118 = v54;
        v82 = v29;
        v83 = v28;
        v84 = v31;
        v85 = v30;
        v86 = v32;
        v87 = v81;
        v88 = v34;
        LOWORD(v89) = v33 & 0x1FF;
        v90 = v79;
        v91 = v77;
        LOBYTE(v92) = v75;
        if (!static AuthenticatedURLRump.__derived_struct_equals(_:_:)((uint64_t)v114, (uint64_t)&v82))
          return 0;
        v39 = v53 == v36 && v19 == v37;
        if (!v39 && (OUTLINED_FUNCTION_1_16() & 1) == 0)
          return 0;
        if (v51 == v71 && v52 == v73)
          return 1;
        return (OUTLINED_FUNCTION_1_16() & 1) != 0;
      }
LABEL_41:
      v82 = v59;
      v83 = v60;
      v84 = v61;
      v85 = v62;
      v86 = v63;
      v87 = v64;
      v88 = v57;
      v89 = v58;
      v90 = v56;
      v91 = v55;
      v92 = v54;
      v93 = v53;
      v94 = v19;
      v95 = v51;
      v96 = v52;
      v97 = v29;
      v98 = v28;
      v99 = v31;
      v100 = v30;
      v101 = v32;
      v102 = v81;
      v103 = v34;
      v104 = v33;
      v105 = v79;
      v106 = v77;
      v107 = v75;
      v108 = v36;
      v109 = v37;
      v110 = v71;
      v111 = v73;
      sub_1A5688300(v59, v60, v61, v62, v63, v64, v57, v58, v56, v55, v54, v53, v19);
      sub_1A5688300(v29, v28, v31, v30, v32, v81, v34, v33, v79, v77, v75, v36, v37);
      sub_1A570F9F8((uint64_t)&v82);
      return 0;
    }
    if (v37)
      goto LABEL_41;
    return 1;
  }
  return 0;
}

uint64_t sub_1A570F9F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v2 = *(_QWORD *)(a1 + 120);
  v3 = *(_QWORD *)(a1 + 128);
  v4 = *(_QWORD *)(a1 + 136);
  v5 = *(_QWORD *)(a1 + 144);
  v6 = *(_QWORD *)(a1 + 152);
  v7 = *(_QWORD *)(a1 + 160);
  v8 = *(_QWORD *)(a1 + 168);
  v9 = *(_QWORD *)(a1 + 176);
  v12 = *(_OWORD *)(a1 + 200);
  v13 = *(_OWORD *)(a1 + 184);
  v11 = *(_OWORD *)(a1 + 216);
  sub_1A5687B8C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_OWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96));
  sub_1A5687B8C(v2, v3, v4, v5, v6, v7, v8, v9, v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v11);
  return a1;
}

uint64_t URLCommand.hashValue.getter()
{
  sub_1A594CE64();
  URLCommand.hash(into:)();
  return sub_1A594CED0();
}

uint64_t sub_1A570FB10()
{
  const void *v0;
  uint64_t v2;

  sub_1A5687D00(v0, &v2);
  return URLCommand.hashValue.getter();
}

uint64_t sub_1A570FB44()
{
  const void *v0;
  uint64_t v2;

  sub_1A5687D00(v0, &v2);
  return URLCommand.hash(into:)();
}

uint64_t sub_1A570FB80()
{
  const void *v0;
  _BYTE v2[192];

  sub_1A5687D00(v0, v2);
  sub_1A594CE64();
  URLCommand.hash(into:)();
  return sub_1A594CED0();
}

unint64_t sub_1A570FBDC()
{
  unint64_t result;

  result = qword_1EE7A9D50;
  if (!qword_1EE7A9D50)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for URLCommand, &type metadata for URLCommand);
    atomic_store(result, (unint64_t *)&qword_1EE7A9D50);
  }
  return result;
}

BOOL sub_1A570FC18(const void *a1, const void *a2)
{
  _BYTE v4[192];
  _BYTE v5[192];

  sub_1A5687D00(a1, v4);
  sub_1A5687D00(a2, v5);
  return static URLCommand.__derived_enum_equals(_:_:)(v4, v5);
}

uint64_t destroy for URLCommand(uint64_t *a1)
{
  return sub_1A5687A80(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
           a1[19],
           a1[20],
           a1[21]);
}

uint64_t *initializeWithCopy for URLCommand(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v3 = a2[5];
  v4 = a2[6];
  v5 = a2[7];
  v13 = a2[9];
  v14 = a2[10];
  v15 = a2[11];
  v16 = a2[12];
  v17 = a2[13];
  v18 = a2[14];
  v19 = a2[15];
  v20 = a2[16];
  v21 = a2[17];
  v22 = a2[18];
  v23 = a2[19];
  v24 = a2[20];
  v25 = a2[21];
  v26 = a2[22];
  v27 = a2[23];
  v6 = a2[8];
  v7 = *a2;
  v8 = a2[1];
  v9 = a2[2];
  v10 = a2[3];
  v11 = a2[4];
  sub_1A56881F8(*a2, v8, v9, v10, v11, v3, v4, v5, v6, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25);
  *a1 = v7;
  a1[1] = v8;
  a1[2] = v9;
  a1[3] = v10;
  a1[4] = v11;
  a1[5] = v3;
  a1[6] = v4;
  a1[7] = v5;
  a1[8] = v6;
  a1[9] = v13;
  a1[10] = v14;
  a1[11] = v15;
  a1[12] = v16;
  a1[13] = v17;
  a1[14] = v18;
  a1[15] = v19;
  a1[16] = v20;
  a1[17] = v21;
  a1[18] = v22;
  a1[19] = v23;
  a1[20] = v24;
  a1[21] = v25;
  a1[22] = v26;
  a1[23] = v27;
  return a1;
}

uint64_t assignWithCopy for URLCommand(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v3 = a2[5];
  v4 = a2[6];
  v5 = a2[7];
  v28 = a2[9];
  v29 = a2[10];
  v30 = a2[11];
  v31 = a2[12];
  v32 = a2[13];
  v33 = a2[14];
  v34 = a2[15];
  v35 = a2[16];
  v36 = a2[17];
  v37 = a2[18];
  v38 = a2[19];
  v39 = a2[20];
  v40 = a2[21];
  v41 = a2[22];
  v42 = a2[23];
  v6 = a2[8];
  v7 = *a2;
  v8 = a2[1];
  v9 = a2[2];
  v10 = a2[3];
  v11 = a2[4];
  sub_1A56881F8(*a2, v8, v9, v10, v11, v3, v4, v5, v6, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v8;
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 24) = v10;
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v11;
  *(_QWORD *)(a1 + 40) = v3;
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v4;
  *(_QWORD *)(a1 + 56) = v5;
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 72) = v28;
  *(_QWORD *)(a1 + 80) = v29;
  *(_QWORD *)(a1 + 88) = v30;
  v22 = *(_OWORD *)(a1 + 96);
  v23 = *(_OWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 96) = v31;
  *(_QWORD *)(a1 + 104) = v32;
  *(_QWORD *)(a1 + 112) = v33;
  *(_QWORD *)(a1 + 120) = v34;
  v24 = *(_OWORD *)(a1 + 128);
  v25 = *(_OWORD *)(a1 + 144);
  *(_QWORD *)(a1 + 128) = v35;
  *(_QWORD *)(a1 + 136) = v36;
  *(_QWORD *)(a1 + 144) = v37;
  *(_QWORD *)(a1 + 152) = v38;
  v26 = *(_OWORD *)(a1 + 160);
  *(_QWORD *)(a1 + 160) = v39;
  *(_QWORD *)(a1 + 168) = v40;
  *(_QWORD *)(a1 + 176) = v41;
  *(_QWORD *)(a1 + 184) = v42;
  sub_1A5687A80(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    BYTE8(v25),
    v26,
    *((uint64_t *)&v26 + 1));
  return a1;
}

uint64_t assignWithTake for URLCommand(uint64_t a1, _OWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;

  v3 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *(_QWORD *)(a1 + 48);
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(_OWORD *)(a1 + 64);
  v12 = *(_OWORD *)(a1 + 80);
  v13 = *(_OWORD *)(a1 + 96);
  v14 = *(_OWORD *)(a1 + 112);
  v15 = *(_OWORD *)(a1 + 128);
  v16 = *(_OWORD *)(a1 + 144);
  v17 = *(_OWORD *)(a1 + 160);
  v18 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v18;
  v19 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v19;
  v20 = a2[5];
  *(_OWORD *)(a1 + 64) = a2[4];
  *(_OWORD *)(a1 + 80) = v20;
  v21 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v21;
  v22 = a2[9];
  *(_OWORD *)(a1 + 128) = a2[8];
  *(_OWORD *)(a1 + 144) = v22;
  v23 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v23;
  sub_1A5687A80(v3, v5, v4, v6, v7, v8, v9, v10, v11, *((uint64_t *)&v11 + 1), v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16,
    BYTE8(v16),
    v17,
    *((uint64_t *)&v17 + 1));
  return a1;
}

uint64_t getEnumTagSinglePayload for URLCommand(uint64_t a1, int a2)
{
  unsigned int v2;
  int v3;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 192))
    {
      v3 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = (*(_QWORD *)(a1 + 16) >> 33) & 0x7FFFFFFF | ((*(_DWORD *)(a1 + 64) >> 9) << 31);
      if (v2 > 0x80000000)
        v3 = ~v2;
      else
        v3 = -1;
    }
  }
  else
  {
    v3 = -1;
  }
  return (v3 + 1);
}

double storeEnumTagSinglePayload for URLCommand(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    *(_QWORD *)(a1 + 184) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 168) = 0u;
    *(_OWORD *)(a1 + 152) = 0u;
    *(_OWORD *)(a1 + 136) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 192) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)a1 = 0;
      *(_QWORD *)(a1 + 8) = 0;
      *(_QWORD *)(a1 + 16) = (unint64_t)-a2 << 33;
      result = 0.0;
      *(_OWORD *)(a1 + 24) = 0u;
      *(_OWORD *)(a1 + 40) = 0u;
      *(_QWORD *)(a1 + 56) = 0;
      *(_QWORD *)(a1 + 64) = 512;
      *(_OWORD *)(a1 + 72) = 0u;
      *(_OWORD *)(a1 + 88) = 0u;
      *(_OWORD *)(a1 + 104) = 0u;
      *(_OWORD *)(a1 + 120) = 0u;
      *(_OWORD *)(a1 + 136) = 0u;
      *(_OWORD *)(a1 + 152) = 0u;
      *(_OWORD *)(a1 + 168) = 0u;
      *(_QWORD *)(a1 + 184) = 0;
      return result;
    }
    *(_BYTE *)(a1 + 192) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1A5710130(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 64) & 0x1FFLL | (a2 << 63);
  *(_QWORD *)(result + 16) &= 0x1FFFFFFFFuLL;
  *(_QWORD *)(result + 64) = v2;
  return result;
}

ValueMetadata *type metadata accessor for URLCommand()
{
  return &type metadata for URLCommand;
}

void sub_1A5710160(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  Swift::Int v5;
  Swift::Int v6;
  char v7;
  Swift::String v8;
  int v9;
  Swift::Int v10;
  Swift::Int v11;
  Swift::Int v12;
  Swift::Int v13;
  Swift::Int v14;
  char v15;
  Swift::String v16;
  int v17;
  BOOL v18;
  int v19;
  _BYTE v20[40];
  _BYTE v21[40];

  ByteBufferView.init(_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned __int16 *)(a1 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 22) << 48), (uint64_t)v20);
  swift_retain();
  sub_1A56BA79C((uint64_t)v20);
  v4 = v3;
  sub_1A553E5DC((uint64_t)v20);
  v5 = *(unsigned int *)(v1 + 20);
  sub_1A56814E0(32, 0xE100000000000000, v1 + 8, *(_DWORD *)(v1 + 20));
  if ((v7 & 1) != 0)
  {
    v8._countAndFlagsBits = 32;
    v8._object = (void *)0xE100000000000000;
    v6 = ByteBuffer._setStringSlowpath(_:at:)(v8, v5);
  }
  v9 = *(_DWORD *)(v1 + 20);
  v10 = (v9 + v6);
  if (__CFADD__(v9, (_DWORD)v6))
  {
    __break(1u);
    goto LABEL_14;
  }
  *(_DWORD *)(v1 + 20) = v10;
  v11 = v4 + v6;
  if (__OFADD__(v4, v6))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (*(_QWORD *)(a1 + 24))
  {
    ByteBufferView.init(_:)(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(unsigned int *)(a1 + 40) | ((unint64_t)(*(unsigned __int16 *)(a1 + 44) | (*(unsigned __int8 *)(a1 + 46) << 16)) << 32), (uint64_t)v21);
    swift_retain_n();
    sub_1A56BA79C((uint64_t)v21);
    v13 = v12;
    sub_1A553E5DC((uint64_t)v21);
    swift_release();
  }
  else
  {
    sub_1A56814E0(4999502, 0xE300000000000000, v1 + 8, v10);
    if ((v15 & 1) != 0)
    {
      v16._countAndFlagsBits = 4999502;
      v16._object = (void *)0xE300000000000000;
      v14 = ByteBuffer._setStringSlowpath(_:at:)(v16, v10);
    }
    v13 = v14;
    v17 = *(_DWORD *)(v1 + 20);
    v18 = __CFADD__(v17, (_DWORD)v14);
    v19 = v17 + v14;
    if (v18)
      goto LABEL_16;
    *(_DWORD *)(v1 + 20) = v19;
  }
  if (__OFADD__(v11, v13))
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
  }
}

uint64_t URLFetchData.url.getter()
{
  return swift_retain();
}

uint64_t URLFetchData.url.setter(uint64_t a1, unint64_t a2, unint64_t a3)
{
  uint64_t v3;
  int v4;
  int v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t result;

  v4 = a3;
  v5 = a2;
  v7 = HIDWORD(a2);
  v8 = HIDWORD(a3);
  v9 = HIWORD(a3);
  result = swift_release();
  *(_QWORD *)v3 = a1;
  *(_DWORD *)(v3 + 8) = v5;
  *(_DWORD *)(v3 + 12) = v7;
  *(_DWORD *)(v3 + 16) = v4;
  *(_WORD *)(v3 + 20) = v8;
  *(_BYTE *)(v3 + 22) = v9;
  return result;
}

double (*URLFetchData.url.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t URLFetchData.data.getter()
{
  OUTLINED_FUNCTION_18_14();
  return swift_retain();
}

uint64_t URLFetchData.data.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v3 + 24) = a1;
  *(_QWORD *)(v3 + 32) = a2;
  *(_BYTE *)(v3 + 46) = BYTE6(a3);
  *(_WORD *)(v3 + 44) = WORD2(a3);
  *(_DWORD *)(v3 + 40) = a3;
  return result;
}

double (*URLFetchData.data.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t URLFetchData.init(url:data:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(_QWORD *)a7 = result;
  *(_QWORD *)(a7 + 8) = a2;
  *(_DWORD *)(a7 + 16) = a3;
  *(_WORD *)(a7 + 20) = WORD2(a3);
  *(_BYTE *)(a7 + 22) = BYTE6(a3);
  *(_QWORD *)(a7 + 24) = a4;
  *(_QWORD *)(a7 + 32) = a5;
  *(_DWORD *)(a7 + 40) = a6;
  *(_BYTE *)(a7 + 46) = BYTE6(a6);
  *(_WORD *)(a7 + 44) = WORD2(a6);
  return result;
}

void URLFetchData.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;

  v2 = v1;
  v4 = *(_DWORD *)(v2 + 8);
  v5 = *(_DWORD *)(v2 + 12);
  OUTLINED_FUNCTION_176();
  if (v5 < v4)
  {
    __break(1u);
  }
  else
  {
    sub_1A594CE70();
    OUTLINED_FUNCTION_0_98();
    sub_1A56A00DC(a1, v6);
  }
}

uint64_t static URLFetchData.__derived_struct_equals(_:_:)(uint64_t result, uint64_t a2)
{
  unsigned int v2;
  unsigned int v3;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = *(_DWORD *)(result + 8);
  v3 = *(_DWORD *)(result + 12);
  if (v3 < v2)
  {
    __break(1u);
    goto LABEL_22;
  }
  v5 = *(_DWORD *)(a2 + 8);
  v6 = *(_DWORD *)(a2 + 12);
  if (v6 < v5)
  {
LABEL_22:
    __break(1u);
    return result;
  }
  if (v3 - v2 == v6 - v5)
  {
    v7 = result;
    v8 = *(_DWORD *)(result + 16) == *(_DWORD *)(a2 + 16)
      && *(unsigned __int16 *)(result + 20) == *(unsigned __int16 *)(a2 + 20);
    v9 = v8 && *(unsigned __int8 *)(result + 22) == *(unsigned __int8 *)(a2 + 22);
    v10 = v9 && *(_QWORD *)result == *(_QWORD *)a2;
    if (v10 || (swift_retain(), (sub_1A566B918() & 1) != 0))
    {
      v11 = *(_QWORD *)(v7 + 24);
      v12 = *(_QWORD *)(a2 + 24);
      if (v11)
      {
        if (v12)
        {
          v13 = *(_QWORD *)(v7 + 32);
          OUTLINED_FUNCTION_18_14();
          v16 = v15 | (v14 << 32);
          v17 = *(_QWORD *)(a2 + 32);
          v18 = *(unsigned int *)(a2 + 40) | ((unint64_t)(*(unsigned __int16 *)(a2 + 44) | (*(unsigned __int8 *)(a2 + 46) << 16)) << 32);
          v19 = v16 & 0xFFFFFFFFFFFFFFLL;
          v20 = v18 & 0xFFFFFFFFFFFFFFLL;
          swift_retain();
          swift_retain();
          LOBYTE(v19) = static ByteBuffer.== infix(_:_:)(v11, v13, v19, v12, v17, v20);
          swift_release();
          swift_release();
          if ((v19 & 1) != 0)
            return 1;
        }
      }
      else if (!v12)
      {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t URLFetchData.hashValue.getter()
{
  uint64_t v0;
  unsigned int v1;
  unsigned int v2;
  uint64_t result;
  uint64_t v4;
  _BYTE v5[72];

  sub_1A594CE64();
  v1 = *(_DWORD *)(v0 + 8);
  v2 = *(_DWORD *)(v0 + 12);
  result = OUTLINED_FUNCTION_176();
  if (v2 < v1)
  {
    __break(1u);
  }
  else
  {
    sub_1A594CE70();
    OUTLINED_FUNCTION_0_98();
    sub_1A56A00DC((uint64_t)v5, v4);
    return sub_1A594CED0();
  }
  return result;
}

uint64_t sub_1A5710704()
{
  uint64_t v0;
  unsigned int v1;
  unsigned int v2;
  uint64_t result;
  uint64_t v4;
  _BYTE v5[72];

  v2 = *(_DWORD *)(v0 + 8);
  v1 = *(_DWORD *)(v0 + 12);
  v4 = *(_QWORD *)(v0 + 24);
  sub_1A594CE64();
  result = swift_beginAccess();
  if (v1 < v2)
  {
    __break(1u);
  }
  else
  {
    sub_1A594CE70();
    sub_1A56A00DC((uint64_t)v5, v4);
    return sub_1A594CED0();
  }
  return result;
}

unint64_t sub_1A57107DC()
{
  unint64_t result;

  result = qword_1EE7A9D58;
  if (!qword_1EE7A9D58)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for URLFetchData, &type metadata for URLFetchData);
    atomic_store(result, (unint64_t *)&qword_1EE7A9D58);
  }
  return result;
}

uint64_t destroy for URLFetchData()
{
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for URLFetchData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 19) = *(_DWORD *)(a2 + 19);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 43) = *(_DWORD *)(a2 + 43);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for URLFetchData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_WORD *)(a1 + 20) = *(_WORD *)(a2 + 20);
  *(_BYTE *)(a1 + 22) = *(_BYTE *)(a2 + 22);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_WORD *)(a1 + 44) = *(_WORD *)(a2 + 44);
  *(_BYTE *)(a1 + 46) = *(_BYTE *)(a2 + 46);
  return a1;
}

__n128 __swift_memcpy47_8_0(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 31) = *(_OWORD *)(a2 + 31);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for URLFetchData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_WORD *)(a1 + 20) = *(_WORD *)(a2 + 20);
  *(_BYTE *)(a1 + 22) = *(_BYTE *)(a2 + 22);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_WORD *)(a1 + 44) = *(_WORD *)(a2 + 44);
  *(_BYTE *)(a1 + 46) = *(_BYTE *)(a2 + 46);
  return a1;
}

uint64_t getEnumTagSinglePayload for URLFetchData(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 47))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for URLFetchData()
{
  return &type metadata for URLFetchData;
}

void URLFetchType.hash(into:)()
{
  void *v0;
  _BYTE __dst[64];

  sub_1A5710C88(v0, __dst);
  __asm { BR              X10 }
}

uint64_t sub_1A5710AB0()
{
  char v0;
  char v2;
  uint64_t v3;
  char v4;

  OUTLINED_FUNCTION_3_54();
  sub_1A594CE88();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  if (v2 == 1)
  {
    OUTLINED_FUNCTION_35_3();
  }
  else
  {
    OUTLINED_FUNCTION_30_2();
    sub_1A594CEAC();
  }
  sub_1A594CEAC();
  if (v3)
  {
    OUTLINED_FUNCTION_30_2();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594B1D8();
    swift_bridgeObjectRelease();
    if (v4)
      return OUTLINED_FUNCTION_35_3();
  }
  else
  {
    OUTLINED_FUNCTION_35_3();
    if (v4)
      return OUTLINED_FUNCTION_35_3();
  }
  OUTLINED_FUNCTION_30_2();
  sub_1A594CE88();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_30_2();
    return sub_1A594CE88();
  }
  return OUTLINED_FUNCTION_35_3();
}

void *sub_1A5710C88(void *__src, void *__dst)
{
  return memcpy(__dst, __src, 0x42uLL);
}

void static URLFetchType.__derived_enum_equals(_:_:)(void *a1, void *__src)
{
  _BYTE __dst[16];
  _BYTE v4[64];

  sub_1A5710C88(__src, __dst);
  sub_1A5710C88(a1, v4);
  __asm { BR              X10 }
}

uint64_t sub_1A5710D00(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, int a15, int a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t __dst,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,__int16 a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  void *v58;
  char v59;
  uint64_t v60;
  int v61;
  char v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  char v69;
  int v70;
  int v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v77;
  char v78;
  uint64_t result;
  char v80;
  int v81;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  _QWORD v93[2];
  int v94;
  unsigned __int8 v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  __int16 v101;

  OUTLINED_FUNCTION_5_48();
  v90 = *(_QWORD *)(v60 - 152);
  v91 = *(_QWORD *)(v60 - 160);
  v61 = *(_DWORD *)(v60 - 144);
  v62 = *(_BYTE *)(v60 - 140);
  v63 = *(_DWORD *)(v60 - 136);
  v64 = *(_QWORD *)(v60 - 128);
  v65 = *(_QWORD *)(v60 - 120);
  v66 = *(_QWORD *)(v60 - 112);
  v67 = *(_QWORD *)(v60 - 104);
  v68 = *(_BYTE *)(v60 - 95);
  sub_1A5710C88(v58, v93);
  v69 = v101;
  if ((v101 & 0xC000) != 0)
    return 0;
  v89 = v63;
  v88 = v65;
  v87 = v66;
  v70 = v94;
  v71 = v95;
  v72 = v96;
  v74 = v97;
  v73 = v98;
  v85 = v100;
  v86 = v99;
  v75 = HIBYTE(v101);
  if (v91 == v93[0] && v90 == v93[1])
    goto LABEL_7;
  v92 = v68;
  v77 = v67;
  v78 = v101;
  sub_1A594CD38();
  v69 = v78;
  v67 = v77;
  v68 = v92;
  result = OUTLINED_FUNCTION_88_1();
  if ((v80 & 1) != 0)
  {
LABEL_7:
    if ((v62 & 1) != 0)
    {
      if (v72 == v89)
        v81 = v71;
      else
        v81 = 0;
      if (v81 != 1)
        return 0;
LABEL_19:
      if (v88)
      {
        if (v73)
        {
          if (v64 != v74 || v88 != v73)
          {
            sub_1A594CD38();
            result = OUTLINED_FUNCTION_88_1();
            if ((v84 & 1) == 0)
              return result;
          }
LABEL_28:
          if ((v68 & 1) != 0)
          {
            if ((v75 & 1) == 0)
              return 0;
          }
          else if ((v75 & 1) != 0
                 || (static MessagePath.ByteRange.__derived_struct_equals(_:_:)(v87, v67, v59 & 1, v86, v85, v69 & 1) & 1) == 0)
          {
            return 0;
          }
          return 1;
        }
      }
      else if (!v73)
      {
        goto LABEL_28;
      }
      return 0;
    }
    result = 0;
    if ((v71 & 1) == 0 && v61 == v70 && v72 == v89)
      goto LABEL_19;
  }
  return result;
}

uint64_t URLFetchType.hashValue.getter()
{
  sub_1A594CE64();
  URLFetchType.hash(into:)();
  return sub_1A594CED0();
}

uint64_t sub_1A571109C()
{
  void *v0;
  _BYTE __dst[72];

  sub_1A5710C88(v0, __dst);
  return URLFetchType.hashValue.getter();
}

void sub_1A57110D0()
{
  void *v0;
  _BYTE __dst[72];

  sub_1A5710C88(v0, __dst);
  URLFetchType.hash(into:)();
}

uint64_t sub_1A571110C()
{
  void *v0;
  _BYTE __dst[72];

  sub_1A5710C88(v0, __dst);
  sub_1A594CE64();
  URLFetchType.hash(into:)();
  return sub_1A594CED0();
}

uint64_t sub_1A571115C(void *a1, void *a2)
{
  char v3;
  _BYTE v5[72];
  _BYTE __dst[72];

  sub_1A5710C88(a1, v5);
  sub_1A5710C88(a2, __dst);
  static URLFetchType.__derived_enum_equals(_:_:)(v5, __dst);
  return v3 & 1;
}

uint64_t sub_1A57111A4(uint64_t a1)
{
  sub_1A57111EC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_WORD *)(a1 + 64));
  return a1;
}

uint64_t sub_1A57111EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int16 a9)
{
  int v9;
  uint64_t result;

  v9 = a9 >> 14;
  if (v9 != 2 && v9 != 1)
  {
    if (v9)
      return result;
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_1A571124C()
{
  unint64_t result;

  result = qword_1EE7A9D60;
  if (!qword_1EE7A9D60)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for URLFetchType, &type metadata for URLFetchType);
    atomic_store(result, (unint64_t *)&qword_1EE7A9D60);
  }
  return result;
}

uint64_t sub_1A5711288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int16 a9)
{
  int v9;
  uint64_t result;

  v9 = a9 >> 14;
  if (v9 != 2 && v9 != 1)
  {
    if (v9)
      return result;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t destroy for URLFetchType(uint64_t a1)
{
  return sub_1A57111EC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_WORD *)(a1 + 64));
}

uint64_t initializeWithCopy for URLFetchType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int16 v11;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_WORD *)(a2 + 64);
  sub_1A5711288(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_WORD *)(a1 + 64) = v11;
  return a1;
}

uint64_t assignWithCopy for URLFetchType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int16 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int16 v20;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_WORD *)(a2 + 64);
  sub_1A5711288(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_WORD *)(a1 + 64);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_WORD *)(a1 + 64) = v11;
  sub_1A57111EC(v12, v13, v14, v15, v16, v17, v18, v19, v20);
  return a1;
}

uint64_t assignWithTake for URLFetchType(uint64_t a1, uint64_t a2)
{
  __int16 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int16 v12;
  __int128 v13;
  __int128 v14;

  v3 = *(_WORD *)(a2 + 64);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_WORD *)(a1 + 64);
  v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v13;
  v14 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v14;
  *(_WORD *)(a1 + 64) = v3;
  sub_1A57111EC(v4, v6, v5, v7, v8, v9, v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for URLFetchType(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x7D && *(_BYTE *)(a1 + 66))
    {
      v2 = *(_DWORD *)a1 + 124;
    }
    else
    {
      v2 = ((*(unsigned __int16 *)(a1 + 64) >> 7) & 0x7C | (*(unsigned __int16 *)(a1 + 64) >> 14)) ^ 0x7F;
      if (v2 >= 0x7C)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for URLFetchType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7C)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 64) = 0;
    *(_QWORD *)result = a2 - 125;
    if (a3 >= 0x7D)
      *(_BYTE *)(result + 66) = 1;
  }
  else
  {
    if (a3 >= 0x7D)
      *(_BYTE *)(result + 66) = 0;
    if (a2)
    {
      *(_OWORD *)(result + 32) = 0u;
      *(_OWORD *)(result + 48) = 0u;
      *(_OWORD *)result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(_WORD *)(result + 64) = (((-a2 >> 2) & 0x1F) - 32 * (_WORD)a2) << 9;
    }
  }
  return result;
}

uint64_t sub_1A5711580(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 64) >> 14;
}

uint64_t sub_1A571158C(uint64_t result)
{
  *(_WORD *)(result + 64) &= 0x3FFFu;
  return result;
}

uint64_t sub_1A571159C(uint64_t result, __int16 a2)
{
  *(_WORD *)(result + 64) = *(_WORD *)(result + 64) & 0x1FF | (a2 << 14);
  return result;
}

ValueMetadata *type metadata accessor for URLFetchType()
{
  return &type metadata for URLFetchType;
}

void OUTLINED_FUNCTION_5_48()
{
  __int16 v0;
  uint64_t v1;

  *(_WORD *)(v1 - 96) = v0 & 0x3FFF;
}

uint64_t static URLMessageSection.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4)
    return 1;
  else
    return sub_1A594CD38();
}

uint64_t URLMessageSection.encodedSection.getter(uint64_t a1)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t URLMessageSection.encodedSection.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

double (*URLMessageSection.encodedSection.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t URLMessageSection.hash(into:)()
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_2_22();
  return swift_bridgeObjectRelease();
}

uint64_t URLMessageSection.hashValue.getter()
{
  sub_1A594CE64();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_2_22();
  swift_bridgeObjectRelease();
  return sub_1A594CED0();
}

uint64_t sub_1A5711700()
{
  return URLMessageSection.hashValue.getter();
}

uint64_t sub_1A5711708()
{
  return URLMessageSection.hash(into:)();
}

unint64_t sub_1A5711714()
{
  unint64_t result;

  result = qword_1EE7A9D68;
  if (!qword_1EE7A9D68)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for URLMessageSection, &type metadata for URLMessageSection);
    atomic_store(result, (unint64_t *)&qword_1EE7A9D68);
  }
  return result;
}

uint64_t sub_1A5711750(uint64_t *a1, uint64_t *a2)
{
  return static URLMessageSection.__derived_struct_equals(_:_:)(*a1, a1[1], *a2, a2[1]);
}

ValueMetadata *type metadata accessor for URLMessageSection()
{
  return &type metadata for URLMessageSection;
}

const char *UseAttribute.all.unsafeMutableAddressor()
{
  return "\\All";
}

uint64_t static UseAttribute.all.getter()
{
  return 1819033948;
}

const char *UseAttribute.archive.unsafeMutableAddressor()
{
  return "\\Archive";
}

uint64_t static UseAttribute.archive.getter()
{
  return 0x657669686372415CLL;
}

const char *UseAttribute.drafts.unsafeMutableAddressor()
{
  return "\\Drafts";
}

uint64_t static UseAttribute.drafts.getter()
{
  return 0x7374666172445CLL;
}

const char *UseAttribute.flagged.unsafeMutableAddressor()
{
  return "\\Flagged";
}

uint64_t static UseAttribute.flagged.getter()
{
  return 0x64656767616C465CLL;
}

const char *UseAttribute.junk.unsafeMutableAddressor()
{
  return "\\Junk";
}

uint64_t static UseAttribute.junk.getter()
{
  return 0x6B6E754A5CLL;
}

const char *UseAttribute.sent.unsafeMutableAddressor()
{
  return "\\Sent";
}

uint64_t static UseAttribute.sent.getter()
{
  return 0x746E65535CLL;
}

const char *UseAttribute.trash.unsafeMutableAddressor()
{
  return "\\Trash";
}

uint64_t static UseAttribute.trash.getter()
{
  return 0x68736172545CLL;
}

uint64_t static UseAttribute.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_1A594B49C();
  v2 = v1;
  if (v0 == sub_1A594B49C() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1A594CD38();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t UseAttribute.hash(into:)()
{
  sub_1A594B49C();
  sub_1A594B1D8();
  return swift_bridgeObjectRelease();
}

uint64_t UseAttribute.hashValue.getter()
{
  sub_1A594CE64();
  sub_1A594B49C();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  return sub_1A594CED0();
}

uint64_t sub_1A5711998()
{
  return UseAttribute.hashValue.getter();
}

uint64_t sub_1A57119A0()
{
  return UseAttribute.hash(into:)();
}

uint64_t sub_1A57119A8()
{
  return static UseAttribute.== infix(_:_:)();
}

unint64_t sub_1A57119C4()
{
  unint64_t result;

  result = qword_1EE7A9D70;
  if (!qword_1EE7A9D70)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for UseAttribute, &type metadata for UseAttribute);
    atomic_store(result, (unint64_t *)&qword_1EE7A9D70);
  }
  return result;
}

ValueMetadata *type metadata accessor for UseAttribute()
{
  return &type metadata for UseAttribute;
}

uint64_t sub_1A5711A14(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  Swift::Int v11;
  Swift::Int v12;
  char v13;
  Swift::String v14;
  Swift::Int v15;
  uint64_t result;
  int v17;
  BOOL v18;
  int v19;
  uint64_t v20;
  uint64_t v21;

  v5 = v4;
  v8 = v4 + 8;
  if (a2)
  {
    v11 = *(unsigned int *)(v5 + 20);
    swift_retain();
    swift_retain();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A56814E0(a1, (unint64_t)a2, v8, v11);
    if ((v13 & 1) != 0)
    {
      v14._countAndFlagsBits = a1;
      v14._object = a2;
      v12 = ByteBuffer._setStringSlowpath(_:at:)(v14, v11);
    }
    v15 = v12;
    swift_bridgeObjectRelease();
    swift_release();
    result = swift_release();
    v17 = *(_DWORD *)(v5 + 20);
    v18 = __CFADD__(v17, (_DWORD)v15);
    v19 = v17 + v15;
    if (v18)
      goto LABEL_13;
    *(_DWORD *)(v5 + 20) = v19;
  }
  else
  {
    v15 = 0;
  }
  if (a4 == (void *)1)
  {
    v20 = 0;
  }
  else
  {
    swift_retain();
    swift_retain();
    sub_1A56664E0(a3, (uint64_t)a4);
    sub_1A56CDBAC(a3, a4);
    v20 = v21;
    swift_release();
    swift_release();
    sub_1A555F508(a3, (uint64_t)a4);
  }
  result = v15 + v20;
  if (__OFADD__(v15, v20))
  {
    __break(1u);
LABEL_13:
    __break(1u);
  }
  return result;
}

uint64_t UserAuthenticationMechanism.encodedUser.getter(uint64_t a1)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t UserAuthenticationMechanism.authenticationMechanism.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1A56664E0(a3, a4);
  return a3;
}

void UserAuthenticationMechanism.init(encodedUser:authenticationMechanism:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a2 && a4 == 1)
    __break(1u);
}

uint64_t UserAuthenticationMechanism.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;

  if (a3)
  {
    sub_1A594CE94();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594B1D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1A594CE94();
  }
  if (a5 == 1)
    return sub_1A594CE94();
  sub_1A594CE94();
  sub_1A594CE88();
  if (a5)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594B1D8();
    v8 = a4;
    v9 = a5;
  }
  else
  {
    v8 = a4;
    v9 = 0;
  }
  return sub_1A555F508(v8, v9);
}

uint64_t static UserAuthenticationMechanism.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  BOOL v12;
  char v13;
  uint64_t result;
  BOOL v15;

  if (!a2)
  {
    if (a6)
      return 0;
    goto LABEL_10;
  }
  if (!a6)
    return 0;
  v12 = a1 == a5 && a2 == a6;
  if (v12 || (v13 = sub_1A594CD38(), result = 0, (v13 & 1) != 0))
  {
LABEL_10:
    if (a4 == 1)
    {
      if (a8 == 1)
        return 1;
    }
    else if (a8 != 1)
    {
      if (a4)
      {
        if (a8)
        {
          v15 = a3 == a7 && a4 == a8;
          if (v15 || (sub_1A594CD38() & 1) != 0)
            return 1;
        }
      }
      else if (!a8)
      {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t UserAuthenticationMechanism.hashValue.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _BYTE v9[72];

  sub_1A594CE64();
  UserAuthenticationMechanism.hash(into:)((uint64_t)v9, a1, a2, a3, a4);
  return sub_1A594CED0();
}

uint64_t sub_1A5711DE4()
{
  uint64_t *v0;

  return UserAuthenticationMechanism.hashValue.getter(*v0, v0[1], v0[2], v0[3]);
}

uint64_t sub_1A5711DF0(uint64_t a1)
{
  uint64_t *v1;

  return UserAuthenticationMechanism.hash(into:)(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1A5711DFC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[72];

  v1 = *v0;
  v2 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  sub_1A594CE64();
  UserAuthenticationMechanism.hash(into:)((uint64_t)v6, v1, v2, v4, v3);
  return sub_1A594CED0();
}

unint64_t sub_1A5711E58()
{
  unint64_t result;

  result = qword_1EE7A9D78;
  if (!qword_1EE7A9D78)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for UserAuthenticationMechanism, &type metadata for UserAuthenticationMechanism);
    atomic_store(result, (unint64_t *)&qword_1EE7A9D78);
  }
  return result;
}

uint64_t sub_1A5711E94(uint64_t *a1, uint64_t *a2)
{
  return static UserAuthenticationMechanism.__derived_struct_equals(_:_:)(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

uint64_t destroy for UserAuthenticationMechanism(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 24);
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for UserAuthenticationMechanism(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;

  v3 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = a2 + 2;
  v5 = a2[3];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v5 == 1)
  {
    *(_OWORD *)(a1 + 16) = *v4;
  }
  else
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)v4;
    *(_QWORD *)(a1 + 24) = v5;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return a1;
}

_QWORD *assignWithCopy for UserAuthenticationMechanism(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  a1[1] = a2[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = a2[3];
  if (a1[3] != 1)
  {
    if (v4 != 1)
    {
      a1[2] = a2[2];
      a1[3] = a2[3];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1A56CADD0((uint64_t)(a1 + 2));
    goto LABEL_6;
  }
  if (v4 == 1)
  {
LABEL_6:
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    return a1;
  }
  a1[2] = a2[2];
  a1[3] = a2[3];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

_QWORD *assignWithTake for UserAuthenticationMechanism(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2 + 2;
  if (a1[3] != 1)
  {
    v6 = a2[3];
    if (v6 != 1)
    {
      a1[2] = *v5;
      a1[3] = v6;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1A56CADD0((uint64_t)(a1 + 2));
  }
  *((_OWORD *)a1 + 1) = *(_OWORD *)v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for UserAuthenticationMechanism(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for UserAuthenticationMechanism()
{
  return &type metadata for UserAuthenticationMechanism;
}

void *IMAPDefaults.lineLengthLimit.unsafeMutableAddressor()
{
  return &static IMAPDefaults.lineLengthLimit;
}

uint64_t static IMAPDefaults.lineLengthLimit.getter()
{
  return 0x2000;
}

void *IMAPDefaults.literalSizeLimit.unsafeMutableAddressor()
{
  return &static IMAPDefaults.literalSizeLimit;
}

uint64_t static IMAPDefaults.literalSizeLimit.getter()
{
  return 4096;
}

void *IMAPDefaults.bodySizeLimit.unsafeMutableAddressor()
{
  return &static IMAPDefaults.bodySizeLimit;
}

uint64_t static IMAPDefaults.bodySizeLimit.getter()
{
  return 0x7FFFFFFFFFFFFFFFLL;
}

ValueMetadata *type metadata accessor for IMAPDefaults()
{
  return &type metadata for IMAPDefaults;
}

void sub_1A5712140(uint64_t a1, unint64_t a2, void (*a3)(unint64_t))
{
  unsigned int v4;
  unint64_t v6;
  Swift::Int v7;
  int v8;
  char v9;
  Swift::String v10;
  int v11;
  BOOL v12;
  int v13;

  v4 = a2;
  v6 = HIDWORD(a2);
  a3(a2);
  if (v4 < v6)
  {
    v7 = *(unsigned int *)(a1 + 20);
    sub_1A56814E0(58, 0xE100000000000000, a1 + 8, *(_DWORD *)(a1 + 20));
    if ((v9 & 1) != 0)
    {
      v10._countAndFlagsBits = 58;
      v10._object = (void *)0xE100000000000000;
      v8 = ByteBuffer._setStringSlowpath(_:at:)(v10, v7);
    }
    v11 = *(_DWORD *)(a1 + 20);
    v12 = __CFADD__(v11, v8);
    v13 = v11 + v8;
    if (v12)
    {
      __break(1u);
    }
    else
    {
      *(_DWORD *)(a1 + 20) = v13;
      a3(v6);
    }
  }
}

uint64_t OSLogInterpolation.appendInterpolation(_:)(uint64_t a1, uint64_t a2)
{
  return sub_1A571226C(a1, a2, (uint64_t)&unk_1E4EFEBB0, (uint64_t)sub_1A5714984);
}

{
  return sub_1A571226C(a1, a2, (uint64_t)&unk_1E4EFEBD8, (uint64_t)sub_1A571497C);
}

{
  return sub_1A5712448(a1, a2);
}

{
  return sub_1A5712448(a1, a2);
}

{
  return sub_1A5712448(a1, a2);
}

{
  return sub_1A5712448(a1, a2);
}

{
  return sub_1A571264C(a1, a2, (uint64_t)&unk_1E4EFECA0, (uint64_t)sub_1A571261C);
}

{
  return sub_1A571264C(a1, a2, (uint64_t)&unk_1E4EFECC8, (uint64_t)sub_1A5712800);
}

{
  return sub_1A571226C(a1, a2, (uint64_t)&unk_1E4EFECF0, (uint64_t)sub_1A5714984);
}

{
  return sub_1A571226C(a1, a2, (uint64_t)&unk_1E4EFED18, (uint64_t)sub_1A571497C);
}

{
  return sub_1A57128E0(a1, a2, (uint64_t)&unk_1E4EFED40, (uint64_t)sub_1A571261C);
}

{
  return sub_1A57128E0(a1, a2, (uint64_t)&unk_1E4EFED68, (uint64_t)sub_1A5712A74);
}

{
  return sub_1A5712448(a1, a2);
}

{
  return sub_1A5713150(a1, a2);
}

{
  return sub_1A5712448(a1, a2);
}

{
  return sub_1A5712448(a1, a2);
}

{
  return sub_1A5712448(a1, a2);
}

{
  return sub_1A5713150(a1, a2);
}

{
  return sub_1A5712448(a1, a2);
}

{
  return sub_1A5713150(a1, a2);
}

{
  return sub_1A5713624(a1, a2);
}

{
  return sub_1A5713624(a1, a2);
}

{
  return sub_1A5713790(a1, a2);
}

{
  return sub_1A5713790(a1, a2);
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  _QWORD v40[2];
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;

  v42 = a1;
  v45 = sub_1A594A5FC();
  v44 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v43 = (char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A594A614();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A594A6EC();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  v41 = a2;
  swift_retain();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = a2;
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v62 = sub_1A594A6F8();
  v63 = v12;
  v64 = v13;
  v65 = v14;
  v15 = v62;
  v16 = v12 & 1;
  LOBYTE(a2) = BYTE1(v12) & 1;
  v17 = BYTE2(v12) & 1;
  v18 = v13;
  v19 = v14;
  sub_1A548779C();
  sub_1A57135FC();
  v56 = v15;
  v57 = v16;
  v58 = a2;
  v59 = v17;
  v60 = v18;
  v61 = v19;
  sub_1A594A68C();
  v20 = (uint64_t)v7;
  sub_1A5712220((uint64_t)v7, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  sub_1A5712220((uint64_t)v10, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  sub_1A55113D8(v18);
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  v21 = v41;
  swift_retain();
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v42;
  *(_QWORD *)(v22 + 24) = v21;
  v23 = v22;
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  v40[1] = v23;
  swift_retain();
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = sub_1A5713FD4;
  *(_QWORD *)(v24 + 24) = v23;
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v52 = sub_1A594A6F8();
  v53 = v25;
  v54 = v26;
  v55 = v27;
  v28 = v52;
  v29 = v25 & 1;
  v30 = BYTE1(v25) & 1;
  LOBYTE(v7) = BYTE2(v25) & 1;
  v31 = v26;
  v32 = v27;
  sub_1A548779C();
  sub_1A57135FC();
  v46 = v28;
  v47 = v29;
  v48 = v30;
  v49 = (char)v7;
  v50 = v31;
  v51 = v32;
  sub_1A594A698();
  sub_1A5712220(v20, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  sub_1A5712220((uint64_t)v10, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  sub_1A55113D8(v31);
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  v33 = v41;
  swift_retain();
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = v42;
  *(_QWORD *)(v34 + 24) = v33;
  swift_retain();
  v35 = swift_allocObject();
  *(_QWORD *)(v35 + 16) = sub_1A5714624;
  *(_QWORD *)(v35 + 24) = v34;
  sub_1A594A6E0();
  v36 = v44;
  v37 = v43;
  v38 = v45;
  (*(void (**)(char *, _QWORD, uint64_t))(v44 + 104))(v43, *MEMORY[0x1E0DF20D8], v45);
  sub_1A594A5E4();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v38);
  sub_1A594A680();
  sub_1A5712220(v20, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  sub_1A5712220((uint64_t)v10, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  swift_release();
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;

  v4 = sub_1A594A614();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A594A6EC();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  swift_retain();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v27 = sub_1A594A6F8();
  v28 = v11;
  v29 = v12;
  v30 = v13;
  v14 = v27;
  v15 = v11 & 1;
  v16 = BYTE1(v11) & 1;
  v17 = BYTE2(v11) & 1;
  v18 = v12;
  v19 = v13;
  sub_1A548779C();
  sub_1A57135FC();
  v21 = v14;
  v22 = v15;
  v23 = v16;
  v24 = v17;
  v25 = v18;
  v26 = v19;
  sub_1A594A698();
  sub_1A5712220((uint64_t)v6, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  sub_1A5712220((uint64_t)v9, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  sub_1A55113D8(v18);
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v32[2];
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;

  v3 = a1;
  v35 = a1;
  v38 = sub_1A594A5FC();
  v37 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v36 = (char *)v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A594A614();
  MEMORY[0x1E0C80A78](v5);
  v33 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A594A6EC();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  v34 = a2;
  swift_retain();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v3;
  *(_QWORD *)(v10 + 24) = a2;
  v11 = v10;
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  v32[1] = v11;
  swift_retain();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_1A5713F9C;
  *(_QWORD *)(v12 + 24) = v11;
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v45 = sub_1A594A6F8();
  v46 = v13;
  v47 = v14;
  v48 = v15;
  v16 = v45;
  LOBYTE(v3) = v13 & 1;
  v17 = BYTE1(v13) & 1;
  v18 = BYTE2(v13) & 1;
  v19 = v14;
  v20 = v15;
  v21 = (uint64_t)v9;
  sub_1A548779C();
  v22 = (uint64_t)v33;
  sub_1A57135FC();
  v39 = v16;
  v40 = v3;
  v41 = v17;
  v42 = v18;
  v43 = v19;
  v44 = v20;
  sub_1A594A698();
  sub_1A5712220(v22, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  sub_1A5712220(v21, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  sub_1A55113D8(v19);
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  swift_release();
  v23 = v34;
  swift_retain();
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = v35;
  *(_QWORD *)(v24 + 24) = v23;
  swift_retain();
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = sub_1A5714624;
  *(_QWORD *)(v25 + 24) = v24;
  v26 = v21;
  sub_1A594A6E0();
  v27 = v37;
  v28 = v36;
  v29 = v38;
  (*(void (**)(char *, _QWORD, uint64_t))(v37 + 104))(v36, *MEMORY[0x1E0DF20D8], v38);
  v30 = (uint64_t)v33;
  sub_1A594A5E4();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v29);
  sub_1A594A680();
  sub_1A5712220(v30, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  sub_1A5712220(v26, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  swift_release();
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;

  v4 = sub_1A594A614();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A594A6EC();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v27 = sub_1A594A6F8();
  v28 = v11;
  v29 = v12;
  v30 = v13;
  v14 = v27;
  v15 = v11 & 1;
  v16 = BYTE1(v11) & 1;
  v17 = BYTE2(v11) & 1;
  v18 = v12;
  v19 = v13;
  sub_1A548779C();
  sub_1A57135FC();
  v21 = v14;
  v22 = v15;
  v23 = v16;
  v24 = v17;
  v25 = v18;
  v26 = v19;
  sub_1A594A68C();
  sub_1A55034FC((uint64_t)v6, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  sub_1A55034FC((uint64_t)v9, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  sub_1A55113D8(v18);
  return swift_release();
}

{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v4 = sub_1A594A6EC();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A594A614();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  sub_1A594A5F0();
  sub_1A548779C();
  sub_1A594A680();
  sub_1A55034FC((uint64_t)v6, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  sub_1A55034FC((uint64_t)v9, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  return swift_release();
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;

  v29 = a1;
  v4 = sub_1A594A614();
  MEMORY[0x1E0C80A78](v4);
  v27 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A594A6EC();
  MEMORY[0x1E0C80A78](v6);
  v26 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  v28 = a2;
  swift_retain();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  swift_retain();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_1A5791A1C;
  *(_QWORD *)(v9 + 24) = v8;
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v36 = sub_1A594A6F8();
  v37 = v10;
  v38 = v11;
  v39 = v12;
  v13 = v36;
  v14 = v10 & 1;
  v15 = BYTE1(v10) & 1;
  v16 = BYTE2(v10) & 1;
  v17 = v11;
  v18 = v12;
  v19 = (uint64_t)v26;
  sub_1A548779C();
  v20 = (uint64_t)v27;
  sub_1A57135FC();
  v30 = v13;
  v31 = v14;
  v32 = v15;
  v33 = v16;
  v34 = v17;
  v35 = v18;
  sub_1A594A68C();
  sub_1A55034FC(v20, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  sub_1A55034FC(v19, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  sub_1A55113D8(v17);
  swift_release();
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  v21 = v28;
  swift_retain();
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v29;
  *(_QWORD *)(v22 + 24) = v21;
  swift_retain();
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = sub_1A5791A4C;
  *(_QWORD *)(v23 + 24) = v22;
  sub_1A594A5F0();
  sub_1A548779C();
  sub_1A594A680();
  sub_1A55034FC(v19, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  sub_1A55034FC(v20, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  swift_release();
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  _QWORD v43[3];
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  char v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;

  v46 = a1;
  v49 = sub_1A594A5FC();
  v48 = *(_QWORD *)(v49 - 8);
  MEMORY[0x1E0C80A78](v49);
  v47 = (char *)v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A594A614();
  MEMORY[0x1E0C80A78](v5);
  v44 = (char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A594A6EC();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  v45 = a2;
  swift_retain();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  swift_retain();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_1A56118AC;
  *(_QWORD *)(v11 + 24) = v10;
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v66 = sub_1A594A6F8();
  v67 = v12;
  v68 = v13;
  v69 = v14;
  v15 = v66;
  v16 = v12 & 1;
  v17 = BYTE1(v12) & 1;
  v18 = BYTE2(v12) & 1;
  v19 = v13;
  v20 = v14;
  sub_1A548779C();
  v21 = (uint64_t)v44;
  sub_1A57135FC();
  v60 = v15;
  v61 = v16;
  v62 = v17;
  v63 = v18;
  v64 = v19;
  v65 = v20;
  sub_1A594A68C();
  sub_1A55034FC(v21, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  sub_1A55034FC((uint64_t)v9, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  sub_1A55113D8(v19);
  swift_release();
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  v22 = v45;
  swift_retain();
  v23 = swift_allocObject();
  v24 = v46;
  *(_QWORD *)(v23 + 16) = v46;
  *(_QWORD *)(v23 + 24) = v22;
  swift_retain();
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = sub_1A5792180;
  *(_QWORD *)(v25 + 24) = v23;
  sub_1A594A5F0();
  sub_1A548779C();
  sub_1A594A680();
  sub_1A55034FC((uint64_t)v9, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  sub_1A55034FC(v21, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  swift_release();
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  swift_retain();
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = v24;
  *(_QWORD *)(v26 + 24) = v22;
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  v43[2] = v26;
  swift_retain();
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = sub_1A56118C4;
  *(_QWORD *)(v27 + 24) = v26;
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v56 = sub_1A594A6F8();
  v57 = v28;
  v58 = v29;
  v59 = v30;
  v31 = v56;
  LOBYTE(v24) = v28 & 1;
  v32 = BYTE1(v28) & 1;
  LOBYTE(v23) = BYTE2(v28) & 1;
  v33 = v29;
  v34 = v30;
  sub_1A548779C();
  v35 = (uint64_t)v44;
  sub_1A57135FC();
  v50 = v31;
  v51 = v24;
  v52 = v32;
  v53 = v23;
  v54 = v33;
  v55 = v34;
  sub_1A594A698();
  sub_1A55034FC(v35, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  sub_1A55034FC((uint64_t)v9, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  sub_1A55113D8(v33);
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  v36 = v45;
  swift_retain();
  v37 = swift_allocObject();
  *(_QWORD *)(v37 + 16) = v46;
  *(_QWORD *)(v37 + 24) = v36;
  swift_retain();
  v38 = swift_allocObject();
  *(_QWORD *)(v38 + 16) = sub_1A57924D0;
  *(_QWORD *)(v38 + 24) = v37;
  sub_1A594A6E0();
  v39 = v48;
  v40 = v47;
  v41 = v49;
  (*(void (**)(char *, _QWORD, uint64_t))(v48 + 104))(v47, *MEMORY[0x1E0DF20D8], v49);
  sub_1A594A5E4();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v41);
  sub_1A594A680();
  sub_1A55034FC(v35, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  sub_1A55034FC((uint64_t)v9, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  swift_release();
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;

  v4 = sub_1A594A614();
  MEMORY[0x1E0C80A78](v4);
  v24 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A594A6EC();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  swift_retain();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  swift_retain();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_1A564B9E0;
  *(_QWORD *)(v10 + 24) = v9;
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v31 = sub_1A594A6F8();
  v32 = v11;
  v33 = v12;
  v34 = v13;
  v14 = v31;
  v15 = v11 & 1;
  v16 = BYTE1(v11) & 1;
  v17 = BYTE2(v11) & 1;
  v18 = v12;
  v19 = v13;
  v20 = (uint64_t)v8;
  sub_1A548779C();
  v21 = (uint64_t)v24;
  sub_1A57135FC();
  v25 = v14;
  v26 = v15;
  v27 = v16;
  v28 = v17;
  v29 = v18;
  v30 = v19;
  sub_1A594A68C();
  sub_1A55034FC(v21, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  sub_1A55034FC(v20, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  sub_1A55113D8(v18);
  swift_release();
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  return swift_bridgeObjectRelease();
}

{
  return sub_1A579E5C4(a1, a2);
}

{
  return sub_1A579E5C4(a1, a2);
}

{
  return sub_1A579E5C4(a1, a2);
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;

  v29 = a1;
  v4 = sub_1A594A614();
  MEMORY[0x1E0C80A78](v4);
  v27 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A594A6EC();
  MEMORY[0x1E0C80A78](v6);
  v26 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  v28 = a2;
  swift_retain();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  swift_retain();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_1A564AEE0;
  *(_QWORD *)(v9 + 24) = v8;
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v36 = sub_1A594A6F8();
  v37 = v10;
  v38 = v11;
  v39 = v12;
  v13 = v36;
  v14 = v10 & 1;
  v15 = BYTE1(v10) & 1;
  v16 = BYTE2(v10) & 1;
  v17 = v11;
  v18 = v12;
  v19 = (uint64_t)v26;
  sub_1A548779C();
  v20 = (uint64_t)v27;
  sub_1A57135FC();
  v30 = v13;
  v31 = v14;
  v32 = v15;
  v33 = v16;
  v34 = v17;
  v35 = v18;
  sub_1A594A68C();
  sub_1A55034FC(v20, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  sub_1A55034FC(v19, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  sub_1A55113D8(v17);
  swift_release();
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  v21 = v28;
  swift_retain();
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v29;
  *(_QWORD *)(v22 + 24) = v21;
  swift_retain();
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = sub_1A579F6DC;
  *(_QWORD *)(v23 + 24) = v22;
  sub_1A594A5F0();
  sub_1A548779C();
  sub_1A594A680();
  sub_1A55034FC(v19, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  sub_1A55034FC(v20, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  swift_release();
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;

  v4 = sub_1A594A614();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A594A6EC();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  swift_retain();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  v27 = sub_1A5712860();
  v28 = v11;
  v29 = v12;
  v30 = v13;
  v14 = v27;
  v15 = v11 & 1;
  v16 = BYTE1(v11) & 1;
  v17 = BYTE2(v11) & 1;
  v18 = v12;
  v19 = v13;
  sub_1A548779C();
  sub_1A57135FC();
  v21 = v14;
  v22 = v15;
  v23 = v16;
  v24 = v17;
  v25 = v18;
  v26 = v19;
  sub_1A594A6B0();
  sub_1A55034FC((uint64_t)v6, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  sub_1A55034FC((uint64_t)v9, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  sub_1A55113D8(v18);
  return swift_release();
}

{
  return sub_1A579EDDC(a1, a2);
}

{
  return sub_1A579EDDC(a1, a2);
}

{
  return sub_1A579E5C4(a1, a2);
}

{
  return sub_1A582AEE0(a1, a2, (uint64_t)&unk_1E4F156A0, (uint64_t)&unk_1E4F156C8, (uint64_t)sub_1A582D8E8);
}

{
  return sub_1A582AEE0(a1, a2, (uint64_t)&unk_1E4F156F0, (uint64_t)&unk_1E4F15718, (uint64_t)sub_1A582E89C);
}

{
  return sub_1A582AEE0(a1, a2, (uint64_t)&unk_1E4F15920, (uint64_t)&unk_1E4F15948, (uint64_t)sub_1A582DA28);
}

{
  return sub_1A582AEE0(a1, a2, (uint64_t)&unk_1E4F15970, (uint64_t)&unk_1E4F15998, (uint64_t)sub_1A582DA3C);
}

{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;

  v4 = sub_1A594A6EC();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A594A614();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  sub_1A594A5F0();
  v27 = sub_1A5712860();
  v28 = v11;
  v29 = v12;
  v30 = v13;
  v14 = v27;
  v15 = v11 & 1;
  v16 = BYTE1(v11) & 1;
  v17 = BYTE2(v11) & 1;
  v18 = v12;
  v19 = v13;
  sub_1A548779C();
  v21 = v14;
  v22 = v15;
  v23 = v16;
  v24 = v17;
  v25 = v18;
  v26 = v19;
  sub_1A594A6A4();
  sub_1A55034FC((uint64_t)v6, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  sub_1A55034FC((uint64_t)v9, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  sub_1A55113D8(v18);
  return swift_release();
}

{
  return sub_1A579E5C4(a1, a2);
}

{
  return sub_1A579E5C4(a1, a2);
}

{
  return sub_1A582C12C(a1, a2, (uint64_t)&unk_1E4F15A38, (uint64_t)sub_1A564B9E0);
}

{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v4 = sub_1A594A614();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A594A6EC();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  swift_retain();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  sub_1A548779C();
  sub_1A57135FC();
  sub_1A594A680();
  sub_1A55034FC((uint64_t)v6, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  sub_1A55034FC((uint64_t)v9, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  return swift_bridgeObjectRelease();
}

{
  return sub_1A582C12C(a1, a2, (uint64_t)&unk_1E4F15A88, (uint64_t)sub_1A564AEE0);
}

{
  return sub_1A582AEE0(a1, a2, (uint64_t)&unk_1E4F15AD8, (uint64_t)&unk_1E4F15B00, (uint64_t)sub_1A582DC60);
}

{
  return sub_1A579E5C4(a1, a2);
}

{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;

  v4 = sub_1A594A614();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A594A6EC();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v27 = sub_1A594A6F8();
  v28 = v11;
  v29 = v12;
  v30 = v13;
  v14 = v27;
  v15 = v11 & 1;
  v16 = BYTE1(v11) & 1;
  v17 = BYTE2(v11) & 1;
  v18 = v12;
  v19 = v13;
  sub_1A548779C();
  sub_1A57135FC();
  v21 = v14;
  v22 = v15;
  v23 = v16;
  v24 = v17;
  v25 = v18;
  v26 = v19;
  sub_1A594A6A4();
  sub_1A55034FC((uint64_t)v6, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  sub_1A55034FC((uint64_t)v9, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  sub_1A55113D8(v18);
  return swift_release();
}

{
  return sub_1A582D5F4(a1, a2);
}

{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v4 = sub_1A594A6EC();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A594A614();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  swift_retain();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_1A564AEE0;
  *(_QWORD *)(v11 + 24) = v10;
  sub_1A594A5F0();
  sub_1A548779C();
  sub_1A594A680();
  sub_1A55034FC((uint64_t)v6, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  sub_1A55034FC((uint64_t)v9, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  swift_release();
  return swift_release();
}

{
  return sub_1A582D5F4(a1, a2);
}

{
  return sub_1A579E5C4(a1, a2);
}

{
  return sub_1A579E5C4(a1, a2);
}

{
  return sub_1A579E5C4(a1, a2);
}

{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;

  v4 = sub_1A594A6EC();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A594A5CC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A594A614();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DF20B0], v7);
  sub_1A594A608();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1A548779C();
  sub_1A594A680();
  sub_1A55034FC((uint64_t)v6, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  sub_1A55034FC((uint64_t)v13, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  return swift_release();
}

uint64_t sub_1A57121FC()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1A5712220(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1A571226C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[3];
  char v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;

  v23[1] = a4;
  v6 = sub_1A594A614();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A594A6EC();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  v29 = sub_1A5712860();
  v30 = v13;
  v31 = v14;
  v32 = v15;
  v16 = v29;
  v17 = v13 & 1;
  v18 = BYTE1(v13) & 1;
  v19 = BYTE2(v13) & 1;
  v20 = v14;
  v21 = v15;
  sub_1A548779C();
  sub_1A57135FC();
  v23[2] = v16;
  v24 = v17;
  v25 = v18;
  v26 = v19;
  v27 = v20;
  v28 = v21;
  sub_1A594A6A4();
  sub_1A5712220((uint64_t)v8, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  sub_1A5712220((uint64_t)v11, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  sub_1A55113D8(v20);
  return swift_release();
}

void sub_1A5712414()
{
  uint64_t v0;

  sub_1A5712564(*(void (**)(void))(v0 + 16), *(_QWORD *)(v0 + 24), (void (*)(char *))sub_1A5714974);
}

uint64_t sub_1A5712448(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v4 = sub_1A594A6EC();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A594A614();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  sub_1A594A5F0();
  sub_1A548779C();
  sub_1A594A680();
  sub_1A5712220((uint64_t)v6, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  sub_1A5712220((uint64_t)v9, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  return swift_release();
}

void sub_1A5712564(void (*a1)(void), uint64_t a2, void (*a3)(char *))
{
  a1();
  sub_1A5682794(a3);
}

uint64_t sub_1A57125B8()
{
  uint64_t v0;

  return sub_1A57125E4(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1A57125E4(uint64_t (*a1)(void))
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1();
  return sub_1A5682614(v1, v2 & 0xFFFFFFFFFFLL);
}

void sub_1A571261C()
{
  uint64_t v0;

  (*(void (**)(void))(v0 + 16))();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1A571264C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[3];
  char v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;

  v23[1] = a4;
  v6 = sub_1A594A614();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A594A6EC();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v29 = sub_1A594A704();
  v30 = v13;
  v31 = v14;
  v32 = v15;
  v16 = v29;
  v17 = v13 & 1;
  v18 = BYTE1(v13) & 1;
  v19 = BYTE2(v13) & 1;
  v20 = v14;
  v21 = v15;
  sub_1A548779C();
  sub_1A57135FC();
  v23[2] = v16;
  v24 = v17;
  v25 = v18;
  v26 = v19;
  v27 = v20;
  v28 = v21;
  sub_1A594A6A4();
  sub_1A5712220((uint64_t)v8, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  sub_1A5712220((uint64_t)v11, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  sub_1A55113D8(v20);
  return swift_release();
}

void sub_1A5712800()
{
  uint64_t v0;

  (*(void (**)(void))(v0 + 16))();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1A5712860()
{
  return sub_1A594A710();
}

uint64_t sub_1A57128E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[3];
  char v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;

  v23[1] = a4;
  v6 = sub_1A594A614();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A594A6EC();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  v29 = sub_1A5712860();
  v30 = v13;
  v31 = v14;
  v32 = v15;
  v16 = v29;
  v17 = v13 & 1;
  v18 = BYTE1(v13) & 1;
  v19 = BYTE2(v13) & 1;
  v20 = v14;
  v21 = v15;
  sub_1A548779C();
  sub_1A57135FC();
  v23[2] = v16;
  v24 = v17;
  v25 = v18;
  v26 = v19;
  v27 = v20;
  v28 = v21;
  sub_1A594A6B0();
  sub_1A5712220((uint64_t)v8, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  sub_1A5712220((uint64_t)v11, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  sub_1A55113D8(v20);
  return swift_release();
}

void sub_1A5712A74()
{
  uint64_t v0;

  (*(void (**)(void))(v0 + 16))();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1A5712AAC(uint64_t (*a1)(void))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = a1();
  return sub_1A568239C(v1, v2, v3);
}

uint64_t sub_1A5712ACC()
{
  uint64_t v0;

  return sub_1A5712AAC(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1A5712AF8(uint64_t (*a1)(void))
{
  uint64_t v1;

  v1 = a1();
  return sub_1A5682514(v1);
}

uint64_t sub_1A5712B18()
{
  uint64_t v0;

  return sub_1A5712AF8(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1A5712B34(uint64_t (*a1)(void))
{
  uint64_t v1;
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  __int16 v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Swift::Int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Swift::Int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v1 = a1();
  v2 = *(char **)(v1 + 16);
  if (v2)
  {
    v42 = MEMORY[0x1E0DEE9D8];
    sub_1A5683660();
    v3 = 0;
    v4 = v42;
    v25 = v2;
    v26 = v1;
    while (1)
    {
      v40 = 91;
      v41 = 0xE100000000000000;
      v5 = qword_1EE796BD0;
      swift_bridgeObjectRetain_n();
      if (v5 != -1)
        swift_once();
      v6 = static ByteBufferAllocator.zeroCapacityWithDefaultAllocator;
      v7 = dword_1EE7F9220;
      v8 = word_1EE7F9224;
      v9 = byte_1EE7F9226;
      swift_retain();
      v10 = qword_1EE7F9218;
      sub_1A567D650(MEMORY[0x1E0DEE9D8]);
      LOBYTE(v33) = 0;
      BYTE5(v33) = 0;
      *(_DWORD *)((char *)&v33 + 1) = 65537;
      v34 = v6;
      v35 = v10;
      LODWORD(v36) = v7;
      WORD2(v36) = v8;
      BYTE6(v36) = v9;
      v37 = v11;
      v38 = v12;
      v39 = v13;
      v14 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A5661874(v14, 0, 0xE000000000000000, 46, 0xE100000000000000, 0, 0xE000000000000000, 0, (uint64_t)&v33, v25, v26, SBYTE4(v26), v27, v28, v29, v30, v31, v32, v33,
        v34,
        v35,
        v36,
        v37,
        v38,
        v39,
        v40,
        v41,
        v42,
        v43,
        v44,
        v45,
        v46,
        v47,
        v48,
        v49,
        v50,
        v51);
      result = swift_bridgeObjectRelease();
      v16 = v35;
      if (HIDWORD(v35) < v35)
        break;
      v17 = BYTE6(v36) | (WORD2(v36) << 8);
      if (v36 < v17)
        goto LABEL_15;
      if (v36 - v17 < HIDWORD(v35))
        goto LABEL_16;
      v18 = v34;
      v19 = HIDWORD(v35) - (unint64_t)v35;
      v31 = 0;
      v32 = 0xE000000000000000;
      swift_retain();
      MEMORY[0x1A85AD968](v19);
      swift_beginAccess();
      sub_1A5788800(*(_QWORD *)(v18 + 24) + v17 + v16, v19, &v31);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      sub_1A594B5F8();
      swift_bridgeObjectRelease();
      sub_1A594B5F8();
      swift_bridgeObjectRelease();
      v20 = v40;
      v21 = v41;
      v42 = v4;
      v22 = *(_QWORD *)(v4 + 16);
      if (v22 >= *(_QWORD *)(v4 + 24) >> 1)
      {
        sub_1A5683660();
        v4 = v42;
      }
      ++v3;
      *(_QWORD *)(v4 + 16) = v22 + 1;
      v23 = v4 + 16 * v22;
      *(_QWORD *)(v23 + 32) = v20;
      *(_QWORD *)(v23 + 40) = v21;
      if (v25 == v3)
      {
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    v4 = MEMORY[0x1E0DEE9D8];
LABEL_13:
    v33 = v4;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799A40);
    sub_1A5714910();
    v24 = sub_1A594B268();
    swift_bridgeObjectRelease();
    return v24;
  }
  return result;
}

uint64_t sub_1A5712E3C()
{
  uint64_t v0;

  return sub_1A5712B34(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t OSLogInterpolation.appendInterpolation(_:)(uint64_t (*a1)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v19;

  v2 = sub_1A594A6EC();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A594A614();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = swift_retain();
  v9 = a1(v8);
  v11 = v10;
  v13 = v12;
  v15 = v14;
  swift_release();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v9;
  v16[3] = v11;
  v16[4] = v13;
  v16[5] = v15;
  sub_1A594A5F0();
  sub_1A548779C();
  sub_1A594A680();
  sub_1A5712220((uint64_t)v4, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  sub_1A5712220((uint64_t)v7, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = v9;
  v17[3] = v11;
  v17[4] = v13;
  v17[5] = v15;
  sub_1A594A5F0();
  sub_1A548779C();
  sub_1A594A680();
  sub_1A5712220((uint64_t)v4, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  sub_1A5712220((uint64_t)v7, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28[5];

  v2 = sub_1A594A6EC();
  MEMORY[0x1E0C80A78](v2);
  v27 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A594A614();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = swift_retain();
  v8 = a1(v7);
  v10 = v9;
  v12 = v11;
  LOBYTE(a1) = v13;
  sub_1A579F224(v8, v9, v11, v13, v28);
  v14 = v28[0];
  v26 = v28[0];
  v15 = v28[1];
  v16 = v28[2];
  v25 = v28[3];
  v17 = v28[4];
  sub_1A579F77C(v8, v10, v12, a1);
  swift_release();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A579F800(v16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = v14;
  v18[3] = v15;
  v18[4] = v16;
  v19 = v25;
  v18[5] = v25;
  v18[6] = v17;
  sub_1A594A5F0();
  v20 = (uint64_t)v27;
  sub_1A548779C();
  sub_1A594A680();
  sub_1A55034FC(v20, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  sub_1A55034FC((uint64_t)v6, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A579F800(v16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = v26;
  v21[3] = v15;
  v21[4] = v16;
  v21[5] = v19;
  v21[6] = v17;
  swift_retain();
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = sub_1A579F8C4;
  *(_QWORD *)(v22 + 24) = v21;
  sub_1A548779C();
  sub_1A57135FC();
  sub_1A594A680();
  sub_1A55034FC((uint64_t)v6, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  sub_1A55034FC(v20, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1A579F7B0(v16);
  return swift_bridgeObjectRelease();
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v23;

  v2 = sub_1A594A5FC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A594A614();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A594A6EC();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = swift_retain();
  v13 = a1(v12);
  v15 = v14;
  v23 = v14;
  v17 = v16;
  swift_release();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = v13;
  v18[3] = v15;
  v18[4] = v17;
  swift_retain();
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = sub_1A579F968;
  *(_QWORD *)(v19 + 24) = v18;
  sub_1A594A6E0();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DF20D8], v2);
  sub_1A594A5E4();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1A594A680();
  sub_1A55034FC((uint64_t)v8, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  sub_1A55034FC((uint64_t)v11, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  swift_release();
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = v13;
  v20[3] = v23;
  v20[4] = v17;
  sub_1A594A6E0();
  sub_1A594A5D8();
  swift_retain();
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = sub_1A579FA4C;
  *(_QWORD *)(v21 + 24) = v20;
  sub_1A594A680();
  swift_release();
  sub_1A55034FC((uint64_t)v8, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  sub_1A55034FC((uint64_t)v11, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  int v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  char v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  _BYTE *v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  char *v46;
  void (*v47)(char *, uint64_t);
  void (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  char *v61;
  uint64_t v62;

  v3 = sub_1A594A6EC();
  MEMORY[0x1E0C80A78](v3);
  v61 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A594A614();
  MEMORY[0x1E0C80A78](v5);
  v52 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_1A594A668();
  v49 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v46 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = swift_retain();
  v62 = a1(v8);
  v9 = v62 & 1;
  v53 = BYTE1(v62) & 1;
  v10 = BYTE2(v62) & 1;
  v60 = BYTE2(v62) & 1;
  v11 = BYTE3(v62) & 1;
  v58 = BYTE3(v62) & 1;
  v12 = BYTE4(v62);
  v59 = BYTE4(v62);
  v13 = BYTE5(v62);
  v57 = BYTE5(v62);
  v14 = BYTE6(v62);
  v56 = BYTE6(v62);
  v15 = HIBYTE(v62);
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  v16 = (_BYTE *)swift_allocObject();
  v54 = v9;
  v16[16] = v9 & 1;
  v16[17] = v53 & 1;
  v16[18] = v10 & 1;
  v16[19] = v11 & 1;
  v16[20] = v12;
  v16[21] = v13;
  v16[22] = v14;
  v16[23] = v15;
  v55 = v15;
  v17 = *MEMORY[0x1E0DF2180];
  v18 = v49;
  v48 = *(void (**)(char *, uint64_t, uint64_t))(v49 + 104);
  v19 = v46;
  v20 = v51;
  v48(v46, v17, v51);
  v21 = (uint64_t)v52;
  sub_1A57135FC();
  sub_1A594A6BC();
  sub_1A55034FC(v21, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  v47 = *(void (**)(char *, uint64_t))(v18 + 8);
  v22 = v20;
  v47(v19, v20);
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  v23 = (_BYTE *)swift_allocObject();
  v23[16] = v9 & 1;
  LOBYTE(v20) = v53;
  v23[17] = v53 & 1;
  v24 = v60;
  v23[18] = v60 & 1;
  v23[19] = v58 & 1;
  LOBYTE(v18) = v59;
  v23[20] = v59;
  v23[21] = v57;
  v23[22] = v56;
  v23[23] = v15;
  v25 = v48;
  v48(v19, *MEMORY[0x1E0DF2180], v22);
  sub_1A57135FC();
  v50 = v1;
  sub_1A594A6BC();
  sub_1A55034FC(v21, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  v26 = v22;
  v27 = v47;
  v47(v19, v26);
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  v28 = (_BYTE *)swift_allocObject();
  v28[16] = v54 & 1;
  v28[17] = v20 & 1;
  LOBYTE(v15) = v24;
  v28[18] = v24 & 1;
  v28[19] = v58 & 1;
  v28[20] = v18;
  LOBYTE(v20) = v57;
  v28[21] = v57;
  LOBYTE(v18) = v56;
  v28[22] = v56;
  v28[23] = v55;
  v29 = v51;
  v25(v19, *MEMORY[0x1E0DF2180], v51);
  sub_1A57135FC();
  sub_1A594A6BC();
  sub_1A55034FC(v21, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  v27(v19, v29);
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  v30 = (_BYTE *)swift_allocObject();
  LOBYTE(v29) = v54;
  v30[16] = v54 & 1;
  LOBYTE(v21) = v53;
  v30[17] = v53 & 1;
  v30[18] = v15 & 1;
  LOBYTE(v25) = v58;
  v30[19] = v58 & 1;
  v30[20] = v59;
  v30[21] = v20;
  v30[22] = v18;
  LOBYTE(v15) = v55;
  v30[23] = v55;
  v31 = v51;
  v48(v19, *MEMORY[0x1E0DF2180], v51);
  v32 = (uint64_t)v52;
  sub_1A57135FC();
  sub_1A594A6BC();
  sub_1A55034FC(v32, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  v47(v19, v31);
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  v33 = (_BYTE *)swift_allocObject();
  v33[16] = v29 & 1;
  v33[17] = v21 & 1;
  v33[18] = v60 & 1;
  v33[19] = v25 & 1;
  LOBYTE(a1) = v59;
  v33[20] = v59;
  LOBYTE(v25) = v57;
  v33[21] = v57;
  LOBYTE(v29) = v56;
  v33[22] = v56;
  v33[23] = v15;
  sub_1A594A5F0();
  v34 = (uint64_t)v61;
  sub_1A594A6E0();
  swift_retain();
  v35 = swift_allocObject();
  *(_QWORD *)(v35 + 16) = sub_1A582AE18;
  *(_QWORD *)(v35 + 24) = v33;
  sub_1A594A680();
  swift_release();
  sub_1A55034FC(v34, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  sub_1A55034FC(v32, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  v36 = (_BYTE *)swift_allocObject();
  LOBYTE(v31) = v54;
  v36[16] = v54 & 1;
  LOBYTE(v15) = v53;
  v36[17] = v53 & 1;
  v36[18] = v60 & 1;
  v36[19] = v58 & 1;
  v36[20] = (_BYTE)a1;
  v36[21] = (_BYTE)v25;
  v36[22] = v29;
  LOBYTE(a1) = v29;
  LOBYTE(v29) = v55;
  v36[23] = v55;
  sub_1A594A5F0();
  sub_1A594A6E0();
  swift_retain();
  v37 = swift_allocObject();
  *(_QWORD *)(v37 + 16) = sub_1A582D850;
  *(_QWORD *)(v37 + 24) = v36;
  sub_1A594A680();
  swift_release();
  sub_1A55034FC(v34, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  sub_1A55034FC(v32, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  v38 = (_BYTE *)swift_allocObject();
  v38[16] = v31 & 1;
  v38[17] = v15 & 1;
  LOBYTE(v15) = v60;
  v38[18] = v60 & 1;
  v38[19] = v58 & 1;
  v38[20] = v59;
  v38[21] = (_BYTE)v25;
  v38[22] = (_BYTE)a1;
  v38[23] = v29;
  swift_retain();
  v39 = swift_allocObject();
  *(_QWORD *)(v39 + 16) = sub_1A582D8E0;
  *(_QWORD *)(v39 + 24) = v38;
  sub_1A594A5F0();
  sub_1A594A6E0();
  swift_retain();
  v40 = swift_allocObject();
  *(_QWORD *)(v40 + 16) = sub_1A582D8E8;
  *(_QWORD *)(v40 + 24) = v39;
  sub_1A594A680();
  swift_release();
  sub_1A55034FC(v34, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  sub_1A55034FC(v32, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  swift_release();
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  v41 = (_BYTE *)swift_allocObject();
  v41[16] = v54 & 1;
  v41[17] = v53 & 1;
  v41[18] = v15 & 1;
  v41[19] = v58 & 1;
  v41[20] = v59;
  v41[21] = (_BYTE)v25;
  v41[22] = v56;
  v41[23] = v29;
  swift_retain();
  v42 = swift_allocObject();
  *(_QWORD *)(v42 + 16) = sub_1A582D8FC;
  *(_QWORD *)(v42 + 24) = v41;
  sub_1A594A5F0();
  sub_1A594A6E0();
  swift_retain();
  v43 = swift_allocObject();
  *(_QWORD *)(v43 + 16) = sub_1A582D904;
  *(_QWORD *)(v43 + 24) = v42;
  sub_1A594A680();
  swift_release();
  sub_1A55034FC(v34, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  sub_1A55034FC(v32, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  swift_release();
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  int v10;
  char v11;
  char v12;
  int v13;
  char v14;
  char v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  _BYTE *v23;
  char v24;
  _BYTE *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  char *v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  int v51;
  int v52;
  void (*v53)(char *, uint64_t, uint64_t);
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  char *v60;
  uint64_t v61;

  v3 = sub_1A594A6EC();
  MEMORY[0x1E0C80A78](v3);
  v60 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A594A614();
  MEMORY[0x1E0C80A78](v5);
  v50 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_1A594A668();
  v48 = *(_QWORD *)(v49 - 8);
  MEMORY[0x1E0C80A78](v49);
  v45 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = swift_retain();
  v61 = a1(v8);
  v9 = v61 & 1;
  v59 = v61 & 1;
  v10 = BYTE1(v61) & 1;
  v11 = BYTE2(v61) & 1;
  v56 = BYTE2(v61) & 1;
  v51 = BYTE3(v61) & 1;
  v12 = BYTE4(v61) & 1;
  v58 = BYTE4(v61) & 1;
  v13 = BYTE5(v61) & 1;
  v14 = BYTE6(v61);
  v55 = BYTE6(v61);
  v15 = HIBYTE(v61);
  v57 = HIBYTE(v61);
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  v16 = (_BYTE *)swift_allocObject();
  v16[16] = v9 & 1;
  v52 = v10;
  v16[17] = v10 & 1;
  v16[18] = v11 & 1;
  v16[19] = v51 & 1;
  v16[20] = v12 & 1;
  v54 = v13;
  v16[21] = v13 & 1;
  v16[22] = v14;
  v16[23] = v15;
  v17 = *MEMORY[0x1E0DF2180];
  v18 = v48;
  v53 = *(void (**)(char *, uint64_t, uint64_t))(v48 + 104);
  v19 = v45;
  v20 = v49;
  v53(v45, v17, v49);
  v21 = (uint64_t)v50;
  sub_1A57135FC();
  sub_1A594A6BC();
  sub_1A55034FC(v21, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  v22 = *(void (**)(char *, uint64_t))(v18 + 8);
  v22(v19, v20);
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  v23 = (_BYTE *)swift_allocObject();
  v23[16] = v59 & 1;
  v23[17] = v10 & 1;
  v23[18] = v56 & 1;
  v24 = v51;
  v23[19] = v51 & 1;
  LOBYTE(v10) = v58;
  v23[20] = v58 & 1;
  v23[21] = v13 & 1;
  LOBYTE(v13) = v55;
  v23[22] = v55;
  v23[23] = v57;
  v53(v19, *MEMORY[0x1E0DF2180], v20);
  sub_1A57135FC();
  v47 = v1;
  sub_1A594A6BC();
  sub_1A55034FC(v21, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  v46 = v22;
  v22(v19, v20);
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  v25 = (_BYTE *)swift_allocObject();
  LOBYTE(v21) = v59;
  v25[16] = v59 & 1;
  v25[17] = v52 & 1;
  LOBYTE(v20) = v56;
  v25[18] = v56 & 1;
  v25[19] = v24 & 1;
  v25[20] = v10 & 1;
  LOBYTE(v10) = v54;
  v25[21] = v54 & 1;
  v25[22] = v13;
  v26 = v57;
  v25[23] = v57;
  v27 = v49;
  v53(v19, *MEMORY[0x1E0DF2180], v49);
  v28 = (uint64_t)v50;
  sub_1A57135FC();
  sub_1A594A6BC();
  sub_1A55034FC(v28, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  v22(v19, v27);
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  v29 = (_BYTE *)swift_allocObject();
  v29[16] = v21 & 1;
  LOBYTE(v28) = v52;
  v29[17] = v52 & 1;
  v29[18] = v20 & 1;
  LOBYTE(v27) = v51;
  v29[19] = v51 & 1;
  LOBYTE(v22) = v58;
  v29[20] = v58 & 1;
  v29[21] = v10 & 1;
  v29[22] = v55;
  v29[23] = v26;
  v30 = v49;
  v31 = v53;
  v53(v19, *MEMORY[0x1E0DF2180], v49);
  v32 = (uint64_t)v50;
  sub_1A57135FC();
  sub_1A594A6BC();
  sub_1A55034FC(v32, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  v46(v19, v30);
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  v33 = (_BYTE *)swift_allocObject();
  LOBYTE(v10) = v59;
  v33[16] = v59 & 1;
  v33[17] = v28 & 1;
  LOBYTE(v28) = v56;
  v33[18] = v56 & 1;
  v33[19] = v27 & 1;
  v33[20] = v22 & 1;
  v33[21] = v54 & 1;
  LOBYTE(v22) = v55;
  v33[22] = v55;
  LOBYTE(v27) = v57;
  v33[23] = v57;
  v31(v19, *MEMORY[0x1E0DF2180], v30);
  sub_1A57135FC();
  sub_1A594A6BC();
  sub_1A55034FC(v32, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  v46(v19, v30);
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  v34 = (_BYTE *)swift_allocObject();
  v34[16] = v10 & 1;
  LOBYTE(v10) = v52;
  v34[17] = v52 & 1;
  v34[18] = v28 & 1;
  LOBYTE(v30) = v51;
  v34[19] = v51 & 1;
  v34[20] = v58 & 1;
  LOBYTE(v28) = v54;
  v34[21] = v54 & 1;
  v34[22] = (_BYTE)v22;
  v34[23] = v27;
  v35 = v49;
  v53(v19, *MEMORY[0x1E0DF2180], v49);
  sub_1A57135FC();
  sub_1A594A6BC();
  sub_1A55034FC(v32, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  v46(v19, v35);
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  v36 = (_BYTE *)swift_allocObject();
  v36[16] = v59 & 1;
  v36[17] = v10 & 1;
  LOBYTE(v10) = v56;
  v36[18] = v56 & 1;
  v36[19] = v30 & 1;
  v36[20] = v58 & 1;
  v36[21] = v28 & 1;
  LOBYTE(v19) = v55;
  v36[22] = v55;
  v36[23] = v27;
  swift_retain();
  v37 = swift_allocObject();
  *(_QWORD *)(v37 + 16) = sub_1A582E7F8;
  *(_QWORD *)(v37 + 24) = v36;
  sub_1A594A5F0();
  v38 = (uint64_t)v60;
  sub_1A594A6E0();
  swift_retain();
  v39 = swift_allocObject();
  *(_QWORD *)(v39 + 16) = sub_1A582DA28;
  *(_QWORD *)(v39 + 24) = v37;
  sub_1A594A680();
  swift_release();
  sub_1A55034FC(v38, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  sub_1A55034FC(v32, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  swift_release();
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  v40 = (_BYTE *)swift_allocObject();
  v40[16] = v59 & 1;
  v40[17] = v52 & 1;
  v40[18] = v10 & 1;
  v40[19] = v51 & 1;
  v40[20] = v58 & 1;
  v40[21] = v54 & 1;
  v40[22] = (_BYTE)v19;
  v40[23] = v27;
  swift_retain();
  v41 = swift_allocObject();
  *(_QWORD *)(v41 + 16) = sub_1A582E7FC;
  *(_QWORD *)(v41 + 24) = v40;
  sub_1A594A5F0();
  sub_1A594A6E0();
  swift_retain();
  v42 = swift_allocObject();
  *(_QWORD *)(v42 + 16) = sub_1A582DA3C;
  *(_QWORD *)(v42 + 24) = v41;
  sub_1A594A680();
  swift_release();
  sub_1A55034FC(v38, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  sub_1A55034FC(v32, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  swift_release();
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  char v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v2 = v1;
  v4 = sub_1A594A614();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A594A6EC();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = swift_retain();
  v57 = a1(v10);
  v11 = v57;
  v35 = v57;
  v12 = HIDWORD(v57);
  v36 = HIDWORD(v57);
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = v11;
  *(_DWORD *)(v13 + 20) = v12;
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v53 = sub_1A594A6F8();
  v54 = v14;
  v55 = v15;
  v56 = v16;
  v17 = v53;
  v18 = v14 & 1;
  v19 = BYTE1(v14) & 1;
  v20 = BYTE2(v14) & 1;
  v21 = v15;
  v22 = v16;
  sub_1A548779C();
  sub_1A57135FC();
  v47 = v17;
  v48 = v18;
  v49 = v19;
  v50 = v20;
  v51 = v21;
  v52 = v22;
  v34 = v2;
  sub_1A594A68C();
  sub_1A55034FC((uint64_t)v6, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  sub_1A55034FC((uint64_t)v9, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  sub_1A55113D8(v21);
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  v23 = swift_allocObject();
  *(_BYTE *)(v23 + 16) = v35;
  *(_DWORD *)(v23 + 20) = v36;
  swift_retain();
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = sub_1A582DD24;
  *(_QWORD *)(v24 + 24) = v23;
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v43 = sub_1A594A6F8();
  v44 = v25;
  v45 = v26;
  v46 = v27;
  v28 = v43;
  v29 = v25 & 1;
  v30 = BYTE1(v25) & 1;
  LOBYTE(v2) = BYTE2(v25) & 1;
  v31 = v26;
  v32 = v27;
  sub_1A548779C();
  sub_1A57135FC();
  v37 = v28;
  v38 = v29;
  v39 = v30;
  v40 = v2;
  v41 = v31;
  v42 = v32;
  sub_1A594A6A4();
  sub_1A55034FC((uint64_t)v6, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  sub_1A55034FC((uint64_t)v9, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  sub_1A55113D8(v31);
  swift_release();
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  char v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  int v44;
  int v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;

  v41 = v1;
  v48 = sub_1A594A5FC();
  v47 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v46 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A594A614();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A594A6EC();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = swift_retain();
  v69 = a1(v10);
  v70 = v11;
  v71 = v12;
  v13 = v69;
  v43 = v69;
  v14 = HIDWORD(v69);
  v44 = HIDWORD(v69);
  v15 = v11;
  v16 = v12;
  v45 = v12;
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v17 = swift_allocObject();
  *(_BYTE *)(v17 + 16) = v13;
  *(_DWORD *)(v17 + 20) = v14;
  *(_QWORD *)(v17 + 24) = v15;
  *(_DWORD *)(v17 + 32) = v16;
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v65 = sub_1A594A6F8();
  v66 = v18;
  v67 = v19;
  v68 = v20;
  v21 = v65;
  LOBYTE(v14) = v18 & 1;
  v22 = BYTE1(v18) & 1;
  LOBYTE(v16) = BYTE2(v18) & 1;
  v23 = v19;
  v24 = v20;
  sub_1A548779C();
  sub_1A57135FC();
  v59 = v21;
  v60 = v14;
  v61 = v22;
  v62 = v16;
  v63 = v23;
  v64 = v24;
  sub_1A594A68C();
  sub_1A55034FC((uint64_t)v6, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  sub_1A55034FC((uint64_t)v9, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  sub_1A55113D8(v23);
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  v42 = v15;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v25 = swift_allocObject();
  *(_BYTE *)(v25 + 16) = v43;
  *(_DWORD *)(v25 + 20) = v44;
  *(_QWORD *)(v25 + 24) = v15;
  *(_DWORD *)(v25 + 32) = v45;
  swift_retain();
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = sub_1A582E800;
  *(_QWORD *)(v26 + 24) = v25;
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v55 = sub_1A594A6F8();
  v56 = v27;
  v57 = v28;
  v58 = v29;
  v30 = v55;
  LOBYTE(v21) = v27 & 1;
  v31 = BYTE1(v27) & 1;
  LOBYTE(v15) = BYTE2(v27) & 1;
  v32 = v28;
  v33 = v29;
  sub_1A548779C();
  sub_1A57135FC();
  v49 = v30;
  v50 = v21;
  v51 = v31;
  v52 = v15;
  v53 = v32;
  v54 = v33;
  sub_1A594A6A4();
  sub_1A55034FC((uint64_t)v6, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  sub_1A55034FC((uint64_t)v9, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  sub_1A55113D8(v32);
  swift_release();
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  v34 = v42;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v35 = swift_allocObject();
  *(_BYTE *)(v35 + 16) = v43;
  *(_DWORD *)(v35 + 20) = v44;
  *(_QWORD *)(v35 + 24) = v34;
  *(_DWORD *)(v35 + 32) = v45;
  sub_1A594A6E0();
  v36 = v47;
  v37 = v46;
  v38 = v48;
  (*(void (**)(char *, _QWORD, uint64_t))(v47 + 104))(v46, *MEMORY[0x1E0DF20D8], v48);
  sub_1A594A5E4();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v38);
  sub_1A594A680();
  sub_1A55034FC((uint64_t)v6, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  sub_1A55034FC((uint64_t)v9, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1A57130AC()
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_1();
}

uint64_t objectdestroy_50Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1A5713104()
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1A5713150(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v4 = sub_1A594A6EC();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A594A614();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A594B568();
  sub_1A594A6C8();
  swift_bridgeObjectRelease();
  swift_retain();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  sub_1A594A5F0();
  sub_1A548779C();
  sub_1A594A680();
  sub_1A5712220((uint64_t)v6, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  sub_1A5712220((uint64_t)v9, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  swift_release();
  sub_1A594B568();
  sub_1A594A6C8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A57132CC()
{
  uint64_t v0;

  return sub_1A5713484(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1A57132F8(uint64_t (*a1)(void))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = *(_QWORD *)(a1() + 16);
  if (v1)
  {
    v10 = MEMORY[0x1E0DEE9D8];
    sub_1A5683660();
    v2 = 0;
    do
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796E60);
      v3 = sub_1A594B490();
      v5 = v4;
      v6 = *(_QWORD *)(v10 + 16);
      if (v6 >= *(_QWORD *)(v10 + 24) >> 1)
        sub_1A5683660();
      ++v2;
      *(_QWORD *)(v10 + 16) = v6 + 1;
      v7 = v10 + 16 * v6;
      *(_QWORD *)(v7 + 32) = v3;
      *(_QWORD *)(v7 + 40) = v5;
    }
    while (v1 != v2);
  }
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799A40);
  sub_1A5714910();
  v8 = sub_1A594B268();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1A5713458()
{
  uint64_t v0;

  return sub_1A57132F8(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1A5713484(uint64_t (*a1)(void))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = a1();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1A5683660();
    v3 = (uint64_t *)(v1 + 40);
    do
    {
      v5 = *(v3 - 1);
      v4 = *v3;
      v7 = *(_QWORD *)(v11 + 16);
      v6 = *(_QWORD *)(v11 + 24);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      if (v7 >= v6 >> 1)
        sub_1A5683660();
      v3 += 2;
      *(_QWORD *)(v11 + 16) = v7 + 1;
      v8 = v11 + 16 * v7;
      *(_QWORD *)(v8 + 32) = v5;
      *(_QWORD *)(v8 + 40) = v4;
      --v2;
    }
    while (v2);
  }
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799A40);
  sub_1A5714910();
  v9 = sub_1A594B268();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1A57135D4(uint64_t (*a1)(void))
{
  uint64_t v1;

  v1 = a1();
  return sub_1A5682310(v1);
}

uint64_t sub_1A57135F4()
{
  uint64_t v0;

  return sub_1A57135D4(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1A57135FC()
{
  return sub_1A594A5D8();
}

uint64_t sub_1A5713624(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v4 = sub_1A594A614();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A594A6EC();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  sub_1A548779C();
  sub_1A57135FC();
  sub_1A594A680();
  sub_1A5712220((uint64_t)v6, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  sub_1A5712220((uint64_t)v9, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  return swift_release();
}

void sub_1A5713740(uint64_t (*a1)(void))
{
  unint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = a1();
  sub_1A5682218(v1, v2, v3);
}

void sub_1A5713760()
{
  uint64_t v0;

  sub_1A5713740(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1A5713790(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;

  v4 = sub_1A594A5FC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A594A614();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A594A6EC();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  sub_1A594A6E0();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DF20D8], v4);
  sub_1A594A5E4();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1A594A680();
  sub_1A5712220((uint64_t)v10, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF20F0]);
  sub_1A5712220((uint64_t)v13, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF21E8]);
  return swift_release();
}

uint64_t sub_1A571391C(uint64_t (*a1)(void))
{
  if (a1())
    return sub_1A594B4A8();
  else
    return 8425698;
}

uint64_t sub_1A5713970()
{
  uint64_t v0;

  return sub_1A571391C(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t EngineMailboxLoggerID.counter.getter(unsigned int a1)
{
  return HIWORD(a1);
}

void EngineMailboxLoggerID.mailbox.getter()
{
  OUTLINED_FUNCTION_4_48();
  OUTLINED_FUNCTION_1();
}

uint64_t EngineMailboxLoggerID.init(engine:counter:mailbox:)(unsigned __int8 a1, int a2)
{
  return a1 | (a2 << 16);
}

void MailboxLoggerID.mailbox.getter()
{
  OUTLINED_FUNCTION_4_48();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1A5713F6C(uint64_t (*a1)(void))
{
  uint64_t v1;

  v1 = a1();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1A5713F9C()
{
  uint64_t v0;

  return sub_1A5713F6C(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1A5713FA4(uint64_t (*a1)(void))
{
  unsigned int v1;

  v1 = a1();
  swift_bridgeObjectRelease();
  return HIWORD(v1);
}

uint64_t sub_1A5713FD4()
{
  uint64_t v0;

  return sub_1A5713FA4(*(uint64_t (**)(void))(v0 + 16));
}

void sub_1A5714624()
{
  uint64_t v0;

  (*(void (**)(void))(v0 + 16))();
  OUTLINED_FUNCTION_1();
}

uint64_t MailboxLoggingCounter.underlying.setter(uint64_t result)
{
  _WORD *v1;

  *v1 = result;
  return result;
}

double (*MailboxLoggingCounter.underlying.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t static MailboxLoggingCounter.unknown.getter()
{
  return 0xFFFFLL;
}

uint64_t MailboxLoggingCounter.hash(into:)()
{
  return sub_1A594CEA0();
}

BOOL static MailboxLoggingCounter.__derived_struct_equals(_:_:)(__int16 a1, __int16 a2)
{
  return a1 == a2;
}

uint64_t MailboxLoggingCounter.hashValue.getter()
{
  sub_1A594CE64();
  sub_1A594CEA0();
  return sub_1A594CED0();
}

uint64_t sub_1A57146E8()
{
  return MailboxLoggingCounter.hashValue.getter();
}

uint64_t sub_1A57146F0()
{
  return MailboxLoggingCounter.hash(into:)();
}

unint64_t sub_1A57146FC()
{
  unint64_t result;

  result = qword_1EE7A9D80;
  if (!qword_1EE7A9D80)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for MailboxLoggingCounter, &type metadata for MailboxLoggingCounter);
    atomic_store(result, (unint64_t *)&qword_1EE7A9D80);
  }
  return result;
}

BOOL sub_1A5714738(__int16 *a1, __int16 *a2)
{
  return static MailboxLoggingCounter.__derived_struct_equals(_:_:)(*a1, *a2);
}

void sub_1A5714748(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 2) = *(_WORD *)(a2 + 2);
  OUTLINED_FUNCTION_0_99(a1, a2);
  OUTLINED_FUNCTION_1();
}

uint64_t assignWithCopy for EngineMailboxLoggerID(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 2) = *(_WORD *)(a2 + 2);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for EngineMailboxLoggerID(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 2) = *(_WORD *)(a2 + 2);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

void type metadata accessor for EngineMailboxLoggerID()
{
  OUTLINED_FUNCTION_3_1();
}

void sub_1A5714838(_WORD *a1, _WORD *a2)
{
  *a1 = *a2;
  OUTLINED_FUNCTION_0_99((uint64_t)a1, (uint64_t)a2);
  OUTLINED_FUNCTION_1();
}

uint64_t assignWithCopy for MailboxLoggerID(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for MailboxLoggerID(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

void type metadata accessor for MailboxLoggerID()
{
  OUTLINED_FUNCTION_3_1();
}

void type metadata accessor for MailboxLoggingCounter()
{
  OUTLINED_FUNCTION_3_1();
}

unint64_t sub_1A5714910()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE795F88;
  if (!qword_1EE795F88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract_0(&qword_1EE799A40);
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF20], v1);
    atomic_store(result, (unint64_t *)&qword_1EE795F88);
  }
  return result;
}

void sub_1A5714954(uint64_t a1, unint64_t *a2)
{
  sub_1A5712140(a1, *a2, (void (*)(unint64_t))sub_1A570E17C);
}

void sub_1A5714974(uint64_t a1)
{
  uint64_t v1;

  sub_1A5714954(a1, *(unint64_t **)(v1 + 16));
}

uint64_t OUTLINED_FUNCTION_0_99(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 8) = *(_QWORD *)(a2 + 8);
  *(_DWORD *)(v2 + 16) = *(_DWORD *)(a2 + 16);
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t OUTLINED_FUNCTION_4_48()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

void sub_1A5714A30(uint64_t a1, unint64_t a2, unint64_t a3)
{
  unsigned int v3;
  unint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  int v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  __int16 v40;
  __int16 v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t *v47;
  _WORD *v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;

  v3 = a2;
  v4 = HIDWORD(a2);
  v5 = HIDWORD(a2) - a2;
  if (HIDWORD(a2) < a2)
  {
LABEL_91:
    __break(1u);
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
    return;
  }
  MEMORY[0x1A85AD968]((HIDWORD(a2) - a2));
  if (!v5)
    return;
  v7 = v3;
  v59 = (a3 >> 24) & 0xFFFF00 | BYTE6(a3);
  swift_retain();
  v58 = (_QWORD *)(a1 + 24);
  swift_beginAccess();
  LODWORD(v8) = v3;
  v56 = v4;
  while (1)
  {
    v9 = (v8 + 1);
    if ((_DWORD)v8 == -1)
      goto LABEL_84;
    v10 = *v58 + v59;
    v11 = *(unsigned __int8 *)(v10 + v7);
    if (v11 != 38)
    {
      v13 = ((v11 >> 6) & 0xFFFFC0FF | ((v11 & 0x3F) << 8)) + 33217;
      if ((v11 & 0x80) == 0)
        v13 = v11 + 1;
      v60 = (v13 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * ((4 - (__clz(v13) >> 3)) & 7)));
      v14 = MEMORY[0x1A85AD9BC](&v60);
      MEMORY[0x1A85ADA64](v14);
      OUTLINED_FUNCTION_17();
      LODWORD(v8) = v8 + 1;
      goto LABEL_59;
    }
    if (v9 > v4)
      goto LABEL_86;
    if ((_DWORD)v9 == (_DWORD)v4)
      break;
    if (*(_BYTE *)(v10 + v9) != 45)
    {
      v12 = MEMORY[0x1E0DEE9D8];
      while (1)
      {
        v8 = (v9 + 1);
        if ((_DWORD)v9 == -1)
          break;
        v15 = *(unsigned __int8 *)(*v58 + v59 + v9);
        if (v15 == 44)
        {
          if ((OUTLINED_FUNCTION_34_3() & 1) == 0)
          {
            OUTLINED_FUNCTION_0_100();
            v12 = v20;
          }
          v16 = *(_QWORD *)(v12 + 16);
          v17 = v16 + 1;
          if (v16 >= *(_QWORD *)(v12 + 24) >> 1)
          {
            OUTLINED_FUNCTION_0_100();
            v12 = v21;
          }
          LOBYTE(v15) = 47;
        }
        else
        {
          if (v15 == 45)
            goto LABEL_32;
          if ((OUTLINED_FUNCTION_34_3() & 1) == 0)
          {
            OUTLINED_FUNCTION_0_100();
            v12 = v19;
          }
          v16 = *(_QWORD *)(v12 + 16);
          v17 = v16 + 1;
          if (v16 >= *(_QWORD *)(v12 + 24) >> 1)
          {
            OUTLINED_FUNCTION_0_100();
            v12 = v18;
          }
        }
        *(_QWORD *)(v12 + 16) = v17;
        *(_BYTE *)(v12 + v16 + 32) = v15;
        if (v8 > v4)
          goto LABEL_81;
        v9 = v8;
        if ((_DWORD)v8 == (_DWORD)v4)
        {
          LODWORD(v8) = v4;
          goto LABEL_32;
        }
      }
      __break(1u);
LABEL_81:
      __break(1u);
      goto LABEL_82;
    }
    LODWORD(v8) = v8 + 2;
    if ((_DWORD)v9 == -1)
      goto LABEL_89;
    if (v8 > v4)
      goto LABEL_90;
    sub_1A594B5F8();
LABEL_59:
    if (v8 > v4)
      goto LABEL_85;
    v7 = v8;
    if ((_DWORD)v8 == (_DWORD)v4)
    {
      OUTLINED_FUNCTION_14_28();
      return;
    }
  }
  LODWORD(v8) = v4;
  v12 = MEMORY[0x1E0DEE9D8];
LABEL_32:
  v22 = *(_QWORD *)(v12 + 16);
  if ((v22 & 3) != 0)
  {
    if ((OUTLINED_FUNCTION_34_3() & 1) == 0)
    {
      OUTLINED_FUNCTION_0_100();
      v12 = v46;
    }
    v23 = *(_QWORD *)(v12 + 16);
    do
    {
      v22 = v23 + 1;
      if (v23 >= *(_QWORD *)(v12 + 24) >> 1)
      {
        OUTLINED_FUNCTION_0_100();
        v12 = v24;
      }
      *(_QWORD *)(v12 + 16) = v22;
      *(_BYTE *)(v12 + v23++ + 32) = 61;
    }
    while ((v22 & 3) != 0);
  }
  else if (!v22)
  {
    v33 = MEMORY[0x1E0DEE9D8];
LABEL_54:
    OUTLINED_FUNCTION_9_2();
    v34 = *(_QWORD *)(v33 + 16);
    if ((v34 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_17();
      sub_1A5715C50();
      OUTLINED_FUNCTION_21();
      *v47 = v34;
      swift_willThrow();
      OUTLINED_FUNCTION_14_28();
      return;
    }
    if (v34 <= 1)
    {
      v35 = MEMORY[0x1E0DEE9D8];
LABEL_57:
      swift_bridgeObjectRelease();
      v60 = v35;
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9D90);
      sub_1A5715C8C();
      sub_1A5715CD0();
      sub_1A594B4CC();
      if (!v36)
        goto LABEL_93;
      OUTLINED_FUNCTION_9_2();
      sub_1A594B5F8();
      OUTLINED_FUNCTION_17();
      goto LABEL_59;
    }
    v37 = 32;
    v35 = MEMORY[0x1E0DEE9D8];
    v38 = *(_QWORD *)(v33 + 16);
    v57 = v33;
    while (v37 - 31 < v38)
    {
      v39 = v33 + v37;
      v40 = *(unsigned __int8 *)(v33 + v37);
      v41 = *(unsigned __int8 *)(v39 + 1);
      if ((OUTLINED_FUNCTION_34_3() & 1) == 0)
      {
        OUTLINED_FUNCTION_9_39();
        v35 = v44;
      }
      v42 = *(_QWORD *)(v35 + 16);
      if (v42 >= *(_QWORD *)(v35 + 24) >> 1)
      {
        OUTLINED_FUNCTION_9_39();
        v35 = v45;
      }
      *(_QWORD *)(v35 + 16) = v42 + 1;
      *(_WORD *)(v35 + 2 * v42 + 32) = v41 | (v40 << 8);
      if (v37 - 30 == v34)
      {
        LODWORD(v4) = v56;
        goto LABEL_57;
      }
      LODWORD(v4) = v56;
      v33 = v57;
      v38 = *(_QWORD *)(v57 + 16);
      if (v37 - 30 >= v38)
        goto LABEL_83;
      v43 = v37 - 29;
      v37 += 2;
      if (v43 == v34)
        goto LABEL_57;
    }
LABEL_82:
    __break(1u);
LABEL_83:
    __break(1u);
LABEL_84:
    __break(1u);
LABEL_85:
    __break(1u);
LABEL_86:
    __break(1u);
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
    goto LABEL_91;
  }
  if (__OFADD__(v22, 3))
    goto LABEL_87;
  v25 = 3 * ((v22 + 3) >> 2);
  v26 = sub_1A594BA18();
  *(_QWORD *)(v26 + 16) = v25;
  v60 = 0;
  if ((v22 & 3) != 0)
  {
    sub_1A565A5FC();
    OUTLINED_FUNCTION_21();
    *v48 = 256;
    swift_willThrow();
    goto LABEL_78;
  }
  if (qword_1EE7A8F20 != -1)
    swift_once();
  v27 = static Base64.decoding0;
  v28 = qword_1EE7A8F28;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v28 != -1)
    swift_once();
  v29 = static Base64.decoding1;
  v30 = qword_1EE7A8F30;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v30 != -1)
    swift_once();
  v31 = static Base64.decoding2;
  v32 = qword_1EE7A8F38;
  OUTLINED_FUNCTION_4_3();
  if (v32 != -1)
    swift_once();
  v53 = *(_QWORD *)(v29 + 16);
  v54 = *(_QWORD *)(v27 + 16);
  v52 = *(_QWORD *)(v31 + 16);
  v50 = *(_QWORD *)(static Base64.decoding3 + 16);
  v51 = static Base64.decoding3 + 32;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5659944(v27 + 32, v54, v29 + 32, v53, v31 + 32, v52, v51, v50, (v22 >> 2) - 1, v12 + 32, v22, v26 + 32, v25, &v60);
  if (!v55)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_17();
    if (v25 < v60)
      goto LABEL_88;
    v55 = 0;
    LODWORD(v4) = v56;
    v33 = v26;
    *(_QWORD *)(v26 + 16) = v60;
    goto LABEL_54;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_17();
LABEL_78:
  if (v25 < v60)
    goto LABEL_92;
  *(_QWORD *)(v26 + 16) = v60;
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_14_28();
  OUTLINED_FUNCTION_9_2();
  swift_bridgeObjectRelease();
}

uint64_t sub_1A5715168(uint64_t a1, unint64_t a2)
{
  unsigned int v4;
  int v5;
  int v6;
  uint64_t v7;
  unsigned int v8;
  BOOL v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  BOOL v15;
  unint64_t v16;
  unint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Swift::UInt32 v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  __int16 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int v34;
  uint64_t v35;
  char v36;
  BOOL v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  BOOL v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int16 v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unsigned int v63;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v65;
  unint64_t v66;
  int v67;
  Swift::UInt32 v68;
  uint64_t v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  Swift::UInt32 v73;
  int v74;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  __int16 v86;
  char v87;
  uint64_t v88[3];

  v88[2] = *MEMORY[0x1E0C80C00];
  if (qword_1EE796BD0 == -1)
    goto LABEL_2;
  while (1)
  {
    swift_once();
LABEL_2:
    v4 = dword_1EE7F9220;
    v5 = (unsigned __int16)word_1EE7F9224;
    v6 = byte_1EE7F9226;
    v83 = static ByteBufferAllocator.zeroCapacityWithDefaultAllocator;
    v84 = qword_1EE7F9218;
    v85 = dword_1EE7F9220;
    v86 = word_1EE7F9224;
    v87 = byte_1EE7F9226;
    if ((a2 & 0x1000000000000000) != 0)
    {
      v7 = sub_1A594B640();
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      v7 = HIBYTE(a2) & 0xF;
    }
    else
    {
      v7 = a1 & 0xFFFFFFFFFFFFLL;
    }
    v8 = v6 | (v5 << 8);
    v9 = v4 >= v8;
    v10 = v4 - v8;
    if (!v9)
    {
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
    }
    if (v7 <= v10)
    {
      swift_retain();
    }
    else
    {
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        ByteBuffer._ensureAvailableCapacity(_:at:)(v7, 0);
      else
        ByteBuffer._copyStorageAndRebase(capacity:resetIndices:)(v7, 0);
    }
    v11 = a1 & 0xFFFFFFFFFFFFLL;
    if ((a2 & 0x2000000000000000) != 0)
      v11 = HIBYTE(a2) & 0xF;
    if (!v11)
      return v83;
    v12 = 0;
    v78 = a2;
    v79 = 4 * v11;
    v13 = 15;
    v77 = a1;
    while (1)
    {
      v15 = OUTLINED_FUNCTION_5_49() == 2573 && v14 == 0xE200000000000000;
      if (v15 || (sub_1A594CD38() & 1) != 0 || (sub_1A594B1B4() & 1) == 0)
        goto LABEL_33;
      v16 = OUTLINED_FUNCTION_13_33();
      if ((v16 & 0x100000000) != 0)
        goto LABEL_111;
      if ((v16 & 0xFFFFFF80) != 0)
      {
LABEL_33:
        swift_bridgeObjectRelease();
      }
      else
      {
        v17 = OUTLINED_FUNCTION_13_33();
        if ((v17 & 0x100000000) != 0)
          goto LABEL_112;
        v18 = v17;
        v19 = swift_bridgeObjectRelease();
        if ((v18 & 0xFFFFFF00) != 0)
          goto LABEL_106;
        if (v18 - 32 <= 0x5E)
        {
          LOBYTE(v88[0]) = v18;
          OUTLINED_FUNCTION_1_81(v19, v20, HIDWORD(v84));
          v23 = HIDWORD(v84) + v21;
          if (__CFADD__(HIDWORD(v84), (_DWORD)v21))
            goto LABEL_107;
          HIDWORD(v84) += v21;
          if (v18 == 38)
          {
            LOBYTE(v88[0]) = 45;
            OUTLINED_FUNCTION_1_81(v21, v22, v23);
            if (__CFADD__(HIDWORD(v84), v24))
              goto LABEL_108;
            HIDWORD(v84) += v24;
          }
          v13 = OUTLINED_FUNCTION_6_44();
          goto LABEL_99;
        }
      }
      v76 = v12;
      v25 = MEMORY[0x1E0DEE9D8];
      if (v79 > v13 >> 14)
      {
        while (1)
        {
          v26 = OUTLINED_FUNCTION_5_49();
          v28 = v27;
          v82 = v26;
          v29 = sub_1A594B19C();
          if ((v29 & 0x100) == 0 && v29 - 127 >= 0xFFFFFFA1)
            break;
          v30 = v82 & 0xFFFFFFFFFFFFLL;
          if ((v28 & 0x2000000000000000) != 0)
            v30 = HIBYTE(v28) & 0xF;
          v81 = v30;
          if (v30)
          {
            v31 = 0;
            v32 = 0;
            v33 = 0;
            if ((v28 & 0x1000000000000000) == 0)
            {
              if ((v28 & 0x2000000000000000) != 0)
                goto LABEL_42;
LABEL_47:
              if ((v82 & 0x1000000000000000) == 0)
                sub_1A594C7D4();
              goto LABEL_49;
            }
            while (1)
            {
              v34 = sub_1A594C714();
LABEL_50:
              v36 = v34;
              v33 += v35;
              v37 = v34 < 0x10000;
              if (v34 >= 0x10000)
              {
                v31 = sub_1A594CF90();
                v48 = sub_1A594CF90();
                v36 = v48;
                LOBYTE(v38) = HIBYTE(v48);
                v32 = BYTE1(v31);
              }
              else
              {
                v38 = v34 >> 8;
              }
              v39 = v31;
              v40 = v32;
              do
              {
                v41 = v37;
                v32 = v40;
                v31 = v39;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                {
                  OUTLINED_FUNCTION_4_49();
                  v25 = v45;
                }
                v42 = *(_QWORD *)(v25 + 16);
                v43 = *(_QWORD *)(v25 + 24) >> 1;
                v44 = v42 + 1;
                if (v43 <= v42)
                {
                  OUTLINED_FUNCTION_4_49();
                  v25 = v46;
                  v43 = *(_QWORD *)(v46 + 24) >> 1;
                }
                *(_QWORD *)(v25 + 16) = v44;
                *(_BYTE *)(v25 + v42 + 32) = v38;
                if ((uint64_t)v43 < (uint64_t)(v42 + 2))
                {
                  OUTLINED_FUNCTION_4_49();
                  v25 = v47;
                }
                v39 = 0;
                v40 = 0;
                *(_QWORD *)(v25 + 16) = v42 + 2;
                *(_BYTE *)(v25 + v44 + 32) = v36;
                v37 = 1;
                v36 = v31;
                LOBYTE(v38) = v32;
              }
              while (!v41);
              if (v33 >= v81)
                break;
              if ((v28 & 0x1000000000000000) == 0)
              {
                if ((v28 & 0x2000000000000000) == 0)
                  goto LABEL_47;
LABEL_42:
                v88[0] = v82;
                v88[1] = v28 & 0xFFFFFFFFFFFFFFLL;
LABEL_49:
                v34 = sub_1A594C7E0();
                goto LABEL_50;
              }
            }
            a1 = v77;
            a2 = v78;
          }
          swift_bridgeObjectRelease();
          v13 = OUTLINED_FUNCTION_6_44();
          if (v79 <= v13 >> 14)
            goto LABEL_66;
        }
        swift_bridgeObjectRelease();
      }
LABEL_66:
      v49 = *(_QWORD *)(v25 + 16);
      if (__OFADD__(v49, 2))
        break;
      v50 = (v49 + 2) / 3uLL;
      if ((v50 - 0x2000000000000000) >> 62 != 3)
        goto LABEL_102;
      v80 = v13;
      v51 = 4 * v50;
      OUTLINED_FUNCTION_4_3();
      v12 = v76;
      sub_1A5658D3C(v25 + 32, v49, v51, 0, v88);
      v52 = v88[0];
      if (v88[0])
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v53 = OUTLINED_FUNCTION_4_3();
        sub_1A5658A98(v53);
        v52 = v54;
        swift_bridgeObjectRelease_n();
      }
      a2 = *(_QWORD *)(v52 + 16);
      if (a2)
      {
        v88[0] = MEMORY[0x1E0DEE9D8];
        sub_1A5683698(0, a2, 0);
        a1 = 0;
        v55 = v88[0];
        v56 = *(_QWORD *)(v88[0] + 16);
        do
        {
          v57 = v56 + a1;
          if (*(_BYTE *)(v52 + a1 + 32) == 47)
            v58 = 44;
          else
            v58 = *(_BYTE *)(v52 + a1 + 32);
          v88[0] = v55;
          v59 = *(_QWORD *)(v55 + 24);
          v60 = v57 + 1;
          if (v57 >= v59 >> 1)
          {
            OUTLINED_FUNCTION_3_55(v59);
            v55 = v88[0];
          }
          *(_QWORD *)(v55 + 16) = v60;
          *(_BYTE *)(v55 + v56 + a1++ + 32) = v58;
        }
        while (a2 != a1);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        v55 = MEMORY[0x1E0DEE9D8];
      }
      v61 = *(_QWORD *)(v55 + 16);
      if (v61)
      {
        a2 = v55 + 32;
        v62 = MEMORY[0x1E0DEE9D8];
        do
        {
          v63 = *(unsigned __int8 *)a2++;
          a1 = v63;
          if (v63 != 61)
          {
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v88[0] = v62;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_1A5683698(0, *(_QWORD *)(v62 + 16) + 1, 1);
              v62 = v88[0];
            }
            v66 = *(_QWORD *)(v62 + 16);
            v65 = *(_QWORD *)(v62 + 24);
            if (v66 >= v65 >> 1)
            {
              OUTLINED_FUNCTION_3_55(v65);
              v62 = v88[0];
            }
            *(_QWORD *)(v62 + 16) = v66 + 1;
            *(_BYTE *)(v62 + v66 + 32) = a1;
          }
          --v61;
        }
        while (v61);
      }
      else
      {
        v62 = MEMORY[0x1E0DEE9D8];
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      LOBYTE(v88[0]) = 38;
      ByteBuffer._setBytes(_:at:)((uint64_t)v88, (uint64_t)v88 + 1, HIDWORD(v84));
      v68 = HIDWORD(v84) + v67;
      if (__CFADD__(HIDWORD(v84), v67))
        goto LABEL_103;
      HIDWORD(v84) += v67;
      v69 = sub_1A56D9514(v62, (uint64_t)&v83, v68);
      if ((v69 & 0x100000000) != 0)
        v70 = sub_1A566A9A4();
      else
        v70 = v69;
      v71 = swift_release();
      a1 = v77;
      a2 = v78;
      v13 = v80;
      v73 = HIDWORD(v84) + v70;
      if (__CFADD__(HIDWORD(v84), v70))
        goto LABEL_104;
      HIDWORD(v84) += v70;
      LOBYTE(v88[0]) = 45;
      OUTLINED_FUNCTION_1_81(v71, v72, v73);
      if (__CFADD__(HIDWORD(v84), v74))
        goto LABEL_105;
      HIDWORD(v84) += v74;
LABEL_99:
      if (v79 <= v13 >> 14)
        return v83;
    }
    __break(1u);
LABEL_102:
    __break(1u);
LABEL_103:
    __break(1u);
LABEL_104:
    __break(1u);
LABEL_105:
    __break(1u);
LABEL_106:
    __break(1u);
LABEL_107:
    __break(1u);
LABEL_108:
    __break(1u);
  }
}

uint64_t ModifiedUTF7.OddByteCountError.byteCount.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

double (*ModifiedUTF7.OddByteCountError.byteCount.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ModifiedUTF7.EncodingRoundtripError.buffer.getter()
{
  return swift_retain();
}

uint64_t ModifiedUTF7.EncodingRoundtripError.buffer.setter(uint64_t a1, unint64_t a2, unint64_t a3)
{
  uint64_t v3;
  int v4;
  int v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t result;

  v4 = a3;
  v5 = a2;
  v7 = HIDWORD(a2);
  v8 = HIDWORD(a3);
  v9 = HIWORD(a3);
  result = swift_release();
  *(_QWORD *)v3 = a1;
  *(_DWORD *)(v3 + 8) = v5;
  *(_DWORD *)(v3 + 12) = v7;
  *(_DWORD *)(v3 + 16) = v4;
  *(_WORD *)(v3 + 20) = v8;
  *(_BYTE *)(v3 + 22) = v9;
  return result;
}

double (*ModifiedUTF7.EncodingRoundtripError.buffer.modify())(_QWORD)
{
  return nullsub_1;
}

void type metadata accessor for ModifiedUTF7()
{
  OUTLINED_FUNCTION_3_1();
}

void type metadata accessor for ModifiedUTF7.OddByteCountError()
{
  OUTLINED_FUNCTION_3_1();
}

void type metadata accessor for ModifiedUTF7.EncodingRoundtripError()
{
  OUTLINED_FUNCTION_3_1();
}

unint64_t sub_1A5715964(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unsigned int v5;

  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    sub_1A5715A40(0xFuLL, a1, a2);
    if ((a2 & 0x1000000000000000) != 0)
    {
      v5 = sub_1A594C714();
    }
    else
    {
      if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0)
        sub_1A594C7D4();
      v5 = sub_1A594C7E0();
    }
  }
  else
  {
    v5 = 0;
  }
  return v5 | ((unint64_t)(v2 == 0) << 32);
}

unint64_t sub_1A5715A40(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5)
    goto LABEL_9;
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 <= result >> 16)
  {
    __break(1u);
LABEL_9:
    result = sub_1A5715ADC(result, a2, a3);
    if ((result & 1) == 0)
      return result & 0xC | sub_1A5715B48(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
  }
  return result;
}

unint64_t sub_1A5715ADC(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((result & 0xC) == 4 << v5)
    result = sub_1A56C83D0(result, a2, a3);
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 <= result >> 16)
    __break(1u);
  return result;
}

unint64_t sub_1A5715B48(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  _QWORD v13[4];

  if ((result & 0xC000) != 0 || result < 0x10000)
  {
    result &= 0xFFFFFFFFFFFF0000;
  }
  else
  {
    v5 = result >> 16;
    if ((a3 & 0x1000000000000000) == 0)
    {
      v13[2] = v3;
      v13[3] = v4;
      if ((a3 & 0x2000000000000000) != 0)
      {
        v13[0] = a2;
        v13[1] = a3 & 0xFFFFFFFFFFFFFFLL;
        if (v5 != (HIBYTE(a3) & 0xF) && (*((_BYTE *)v13 + v5) & 0xC0) == 0x80)
        {
          do
          {
            v8 = v5 - 1;
            v11 = *((_BYTE *)&v12 + v5-- + 7) & 0xC0;
          }
          while (v11 == 128);
          return v8 << 16;
        }
      }
      else
      {
        if ((a2 & 0x1000000000000000) != 0)
        {
          v6 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
          v7 = a2 & 0xFFFFFFFFFFFFLL;
        }
        else
        {
          v12 = result >> 16;
          v6 = sub_1A594C7D4();
          v5 = v12;
        }
        if (v5 != v7 && (*(_BYTE *)(v6 + v5) & 0xC0) == 0x80)
        {
          do
          {
            v8 = v5 - 1;
            v9 = *(_BYTE *)(v6 - 1 + v5--) & 0xC0;
          }
          while (v9 == 128);
          return v8 << 16;
        }
      }
      v8 = v5;
      return v8 << 16;
    }
    v10 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0)
      v10 = a2 & 0xFFFFFFFFFFFFLL;
    if (v5 != v10)
      return sub_1A594C708();
  }
  return result;
}

unint64_t sub_1A5715C50()
{
  unint64_t result;

  result = qword_1EE7A9D88;
  if (!qword_1EE7A9D88)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ModifiedUTF7.OddByteCountError, &type metadata for ModifiedUTF7.OddByteCountError);
    atomic_store(result, (unint64_t *)&qword_1EE7A9D88);
  }
  return result;
}

unint64_t sub_1A5715C8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE7A9D98;
  if (!qword_1EE7A9D98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract_0(&qword_1EE7A9D90);
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EE7A9D98);
  }
  return result;
}

unint64_t sub_1A5715CD0()
{
  unint64_t result;

  result = qword_1EE79B510;
  if (!qword_1EE79B510)
  {
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEE4F0], MEMORY[0x1E0DEE4E8]);
    atomic_store(result, (unint64_t *)&qword_1EE79B510);
  }
  return result;
}

void OUTLINED_FUNCTION_0_100()
{
  sub_1A569D850();
}

void OUTLINED_FUNCTION_1_81(uint64_t a1, uint64_t a2, Swift::UInt32 a3)
{
  uint64_t v3;
  uint64_t v4;

  ByteBuffer._setBytes(_:at:)(v4 - 104, v3, a3);
}

void OUTLINED_FUNCTION_3_55(unint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1A5683698(a1 > 1, v1, 1);
}

void OUTLINED_FUNCTION_4_49()
{
  sub_1A569D850();
}

uint64_t OUTLINED_FUNCTION_5_49()
{
  return sub_1A594B6E8();
}

uint64_t OUTLINED_FUNCTION_6_44()
{
  return sub_1A594B5B0();
}

void OUTLINED_FUNCTION_9_39()
{
  sub_1A569D9C4();
}

unint64_t OUTLINED_FUNCTION_13_33()
{
  unint64_t v0;
  unint64_t v1;

  return sub_1A5715964(v1, v0);
}

uint64_t OUTLINED_FUNCTION_14_28()
{
  return swift_release();
}

void String.init(buffer:)(uint64_t a1, uint64_t a2)
{
  if (HIDWORD(a2) < a2)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_2_7();
    sub_1A594B538();
    swift_release();
  }
}

void *ByteToMessageDecoder.wrapInboundOut<A>(_:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  double v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[184];
  _BYTE v8[184];

  v3 = MEMORY[0x1E0C80A78](a1);
  (*(void (**)(_BYTE *, double))(v5 + 16))(&v7[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], v3);
  swift_dynamicCast();
  sub_1A5715EC4(v7, v8);
  return sub_1A5715EC4(v8, a2);
}

void *sub_1A5715EC4(const void *a1, void *a2)
{
  __swift_memcpy179_8(a2, a1);
  return a2;
}

uint64_t ChannelHandlerContext.responses.getter()
{
  OUTLINED_FUNCTION_2_7();
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t ChannelHandlerContext.responses.setter(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_2_7();
  *(_QWORD *)(v1 + 16) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*ChannelHandlerContext.responses.modify())()
{
  OUTLINED_FUNCTION_2_7();
  return j__swift_endAccess;
}

uint64_t ChannelHandlerContext.__allocating_init()()
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = MEMORY[0x1E0DEE9D8];
  return result;
}

uint64_t ChannelHandlerContext.init()()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_QWORD *)(v0 + 16) = MEMORY[0x1E0DEE9D8];
  return result;
}

void *ChannelHandlerContext.fireChannelRead(_:)(const void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_2_7();
  sub_1A571616C((uint64_t)a1);
  sub_1A57161F4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1A569DB3C);
  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 16);
  sub_1A57163A4(v3, (uint64_t (*)(BOOL))sub_1A569DB3C);
  v4 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v4 + 16) = v3 + 1;
  return sub_1A5715EC4(a1, (void *)(v4 + 184 * v3 + 32));
}

uint64_t ChannelHandlerContext.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ChannelHandlerContext.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

BOOL static DecodingState.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t DecodingState.hash(into:)()
{
  return sub_1A594CE88();
}

uint64_t DecodingState.hashValue.getter()
{
  sub_1A594CE64();
  sub_1A594CE88();
  return sub_1A594CED0();
}

BOOL sub_1A5716138(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static DecodingState.__derived_enum_equals(_:_:)(*a1, *a2);
}

uint64_t sub_1A5716144()
{
  return DecodingState.hashValue.getter();
}

uint64_t sub_1A571614C()
{
  return DecodingState.hash(into:)();
}

uint64_t sub_1A5716154()
{
  return sub_1A57161F4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1A569D904);
}

uint64_t sub_1A5716160()
{
  return sub_1A57161F4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1A569DA70);
}

uint64_t sub_1A571616C(uint64_t a1)
{
  sub_1A56EF384(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_WORD *)(a1 + 176),
    *(_BYTE *)(a1 + 178));
  return a1;
}

uint64_t sub_1A57161DC()
{
  return sub_1A57161F4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1A569DC04);
}

uint64_t sub_1A57161E8()
{
  return sub_1A57161F4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1A569DC18);
}

uint64_t sub_1A57161F4(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;

  v3 = *v1;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v3;
  if (!(_DWORD)result)
  {
    result = a1(result, *(_QWORD *)(v3 + 16) + 1, 1, v3);
    *v1 = result;
  }
  return result;
}

uint64_t sub_1A5716248(uint64_t a1)
{
  return sub_1A57163A4(a1, (uint64_t (*)(BOOL))sub_1A569D904);
}

uint64_t sub_1A5716254(uint64_t a1)
{
  return sub_1A57163A4(a1, (uint64_t (*)(BOOL))sub_1A569DA70);
}

unint64_t sub_1A5716264()
{
  unint64_t result;

  result = qword_1EE7A9DA0;
  if (!qword_1EE7A9DA0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for DecodingState, &type metadata for DecodingState);
    atomic_store(result, (unint64_t *)&qword_1EE7A9DA0);
  }
  return result;
}

uint64_t type metadata accessor for ChannelHandlerContext()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for DecodingState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A571630C + 4 * byte_1A59B6BDF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A5716340 + 4 * asc_1A59B6BDA[v4]))();
}

uint64_t sub_1A5716340(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5716348(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5716350);
  return result;
}

uint64_t sub_1A571635C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5716364);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A5716368(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5716370(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DecodingState()
{
  return &type metadata for DecodingState;
}

uint64_t sub_1A571638C(uint64_t a1)
{
  return sub_1A57163A4(a1, (uint64_t (*)(BOOL))sub_1A569DC04);
}

uint64_t sub_1A5716398(uint64_t a1)
{
  return sub_1A57163A4(a1, (uint64_t (*)(BOOL))sub_1A569DC18);
}

uint64_t sub_1A57163A4(uint64_t result, uint64_t (*a2)(BOOL))
{
  uint64_t v2;
  unint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1))
  {
    result = a2(v3 > 1);
    *(_QWORD *)v2 = result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ByteToMessageDecoderError.PayloadTooLargeError()
{
  return &type metadata for ByteToMessageDecoderError.PayloadTooLargeError;
}

uint64_t SynchronizedCommand.numberOfSynchronisingLiterals.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t SynchronizedCommand.numberOfSynchronisingLiterals.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

double (*SynchronizedCommand.numberOfSynchronisingLiterals.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SynchronizedCommand.commandPart.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A5716420(v1 + 8, a1);
}

uint64_t sub_1A5716420(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A90D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t SynchronizedCommand.commandPart.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1A5716470(a1, v1 + 8);
}

uint64_t sub_1A5716470(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A90D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

double (*SynchronizedCommand.commandPart.modify())(_QWORD)
{
  return nullsub_1;
}

void *SynchronizedCommand.init(_:numberOfSynchronisingLiterals:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  _BYTE v6[136];
  _BYTE v7[136];
  _QWORD __src[18];

  OUTLINED_FUNCTION_0_101(a1, (uint64_t)v6);
  OUTLINED_FUNCTION_0_101((uint64_t)v6, (uint64_t)v7);
  __src[0] = a2;
  OUTLINED_FUNCTION_0_101((uint64_t)v7, (uint64_t)&__src[1]);
  return memcpy(a3, __src, 0x90uLL);
}

void SynchronizedCommand.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE v5[136];
  _BYTE v6[136];
  _BYTE v7[136];
  _BYTE v8[136];

  sub_1A594CE88();
  OUTLINED_FUNCTION_1_82(v1 + 8, (uint64_t)v7);
  OUTLINED_FUNCTION_1_82((uint64_t)v7, (uint64_t)v8);
  if (sub_1A5716610((uint64_t)v8) == 1)
  {
    v3 = sub_1A594CE94();
  }
  else
  {
    sub_1A55032A0((uint64_t)v7, (uint64_t)v5, &qword_1EE7A90D8);
    sub_1A567FF24(v5, v6);
    v4 = sub_1A594CE94();
    OUTLINED_FUNCTION_4_50(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5716628);
    CommandStreamPart.hash(into:)(a1);
  }
  OUTLINED_FUNCTION_4_50(v3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A57166CC);
}

uint64_t sub_1A5716610(uint64_t a1)
{
  unsigned int v1;
  unint64_t v2;

  HIDWORD(v2) = *(_DWORD *)(a1 + 100);
  LODWORD(v2) = HIDWORD(v2);
  v1 = v2 >> 31;
  if (v1 > 0x80000000)
    return -v1;
  else
    return 0;
}

uint64_t sub_1A5716628(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16)
{
  if (a13 < 0xFFFFFFFF00000000 || (a16 & 0x200000000000000) != 0)
    return sub_1A56B957C(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
  return result;
}

void sub_1A5716670(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17]);
  OUTLINED_FUNCTION_8_7();
}

uint64_t sub_1A57166CC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16)
{
  if (a13 < 0xFFFFFFFF00000000 || (a16 & 0x200000000000000) != 0)
    return sub_1A567FFE0(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
  return result;
}

BOOL static SynchronizedCommand.__derived_struct_equals(_:_:)(_QWORD *a1, _QWORD *a2)
{
  char v4;
  char v5;
  _BYTE v7[136];
  _BYTE v8[136];
  _BYTE v9[136];
  _BYTE v10[136];
  uint64_t v11;
  _BYTE v12[136];
  _BYTE v13[136];
  _BYTE v14[136];
  _BYTE v15[136];

  if (*a1 != *a2)
    return 0;
  OUTLINED_FUNCTION_0_101((uint64_t)(a1 + 1), (uint64_t)v12);
  OUTLINED_FUNCTION_0_101((uint64_t)(a2 + 1), (uint64_t)v13);
  OUTLINED_FUNCTION_0_101((uint64_t)v12, (uint64_t)v14);
  if (sub_1A5716610((uint64_t)v14) == 1)
  {
    sub_1A55032A0((uint64_t)v13, (uint64_t)v10, &qword_1EE7A90D8);
    if (sub_1A5716610((uint64_t)v10) == 1)
    {
      sub_1A5716670(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5716628);
      return 1;
    }
    goto LABEL_6;
  }
  sub_1A55032A0((uint64_t)v13, (uint64_t)v9, &qword_1EE7A90D8);
  if (sub_1A5716610((uint64_t)v9) == 1)
  {
LABEL_6:
    OUTLINED_FUNCTION_0_101((uint64_t)v12, (uint64_t)v10);
    OUTLINED_FUNCTION_0_101((uint64_t)v13, (uint64_t)&v11);
    OUTLINED_FUNCTION_2_69(a2);
    OUTLINED_FUNCTION_2_69(a1);
    sub_1A57168B4((uint64_t)v10);
    return 0;
  }
  OUTLINED_FUNCTION_0_101((uint64_t)v12, (uint64_t)v7);
  sub_1A567FF24(v7, v15);
  OUTLINED_FUNCTION_0_101((uint64_t)v13, (uint64_t)v8);
  sub_1A567FF24(v8, v10);
  OUTLINED_FUNCTION_2_69(a2);
  OUTLINED_FUNCTION_2_69(a1);
  static CommandStreamPart.__derived_enum_equals(_:_:)(v15);
  v5 = v4;
  sub_1A5716670(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A57166CC);
  sub_1A5716670(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A57166CC);
  return (v5 & 1) != 0;
}

uint64_t sub_1A57168B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v2 = *(_QWORD *)(a1 + 136);
  v3 = *(_QWORD *)(a1 + 144);
  v4 = *(_QWORD *)(a1 + 152);
  v5 = *(_QWORD *)(a1 + 160);
  v6 = *(_QWORD *)(a1 + 168);
  v7 = *(_QWORD *)(a1 + 176);
  v8 = *(_QWORD *)(a1 + 184);
  v9 = *(_QWORD *)(a1 + 192);
  v14 = *(_OWORD *)(a1 + 200);
  v12 = *(_OWORD *)(a1 + 232);
  v13 = *(_OWORD *)(a1 + 216);
  v11 = *(_OWORD *)(a1 + 248);
  sub_1A57166CC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120));
  sub_1A57166CC(v2, v3, v4, v5, v6, v7, v8, v9, v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v11, *((unint64_t *)&v11 + 1));
  return a1;
}

uint64_t SynchronizedCommand.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[136];
  _BYTE v5[72];
  _BYTE v6[136];
  _BYTE v7[136];
  _BYTE v8[136];

  sub_1A594CE64();
  sub_1A594CE88();
  OUTLINED_FUNCTION_1_82(v0 + 8, (uint64_t)v7);
  OUTLINED_FUNCTION_1_82((uint64_t)v7, (uint64_t)v8);
  if (sub_1A5716610((uint64_t)v8) == 1)
  {
    v1 = sub_1A594CE94();
  }
  else
  {
    sub_1A55032A0((uint64_t)v7, (uint64_t)v4, &qword_1EE7A90D8);
    sub_1A567FF24(v4, v6);
    v2 = sub_1A594CE94();
    OUTLINED_FUNCTION_4_50(v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5716628);
    CommandStreamPart.hash(into:)((uint64_t)v5);
  }
  OUTLINED_FUNCTION_4_50(v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A57166CC);
  return sub_1A594CED0();
}

uint64_t sub_1A5716A80()
{
  const void *v0;
  _BYTE v2[144];

  memcpy(v2, v0, sizeof(v2));
  return SynchronizedCommand.hashValue.getter();
}

void sub_1A5716AB8(uint64_t a1)
{
  const void *v1;
  _BYTE v3[144];

  memcpy(v3, v1, sizeof(v3));
  SynchronizedCommand.hash(into:)(a1);
}

uint64_t sub_1A5716AF8()
{
  const void *v0;
  _BYTE v2[136];
  _BYTE v3[72];
  _BYTE v4[136];
  _QWORD __dst[18];
  _BYTE v6[136];

  memcpy(__dst, v0, sizeof(__dst));
  sub_1A594CE64();
  sub_1A594CE88();
  sub_1A55032A0((uint64_t)&__dst[1], (uint64_t)v6, &qword_1EE7A90D8);
  if (sub_1A5716610((uint64_t)v6) == 1)
  {
    sub_1A594CE94();
  }
  else
  {
    sub_1A55032A0((uint64_t)&__dst[1], (uint64_t)v2, &qword_1EE7A90D8);
    sub_1A567FF24(v2, v4);
    sub_1A594CE94();
    sub_1A5716670(__dst, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5716628);
    CommandStreamPart.hash(into:)((uint64_t)v3);
  }
  sub_1A5716670(__dst, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A57166CC);
  return sub_1A594CED0();
}

BOOL sub_1A5716BE8(void *__src, const void *a2)
{
  _QWORD v4[18];
  _QWORD __dst[18];

  memcpy(v4, __src, sizeof(v4));
  memcpy(__dst, a2, sizeof(__dst));
  return static SynchronizedCommand.__derived_struct_equals(_:_:)(v4, __dst);
}

void sub_1A5716C3C(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

uint64_t sub_1A5716C6C()
{
  sub_1A594CE88();
  return sub_1A594CE88();
}

uint64_t sub_1A5716CA4()
{
  uint64_t v0;

  return ((uint64_t (*)(void))((char *)sub_1A5716CBC + 4 * byte_1A59B6D44[v0]))();
}

void sub_1A5716CBC()
{
  JUMPOUT(0x1A5716C94);
}

void sub_1A5716CC4()
{
  JUMPOUT(0x1A5716C94);
}

void sub_1A5716CCC()
{
  JUMPOUT(0x1A5716C94);
}

void sub_1A5716CD4()
{
  JUMPOUT(0x1A5716C94);
}

void sub_1A5716CDC()
{
  JUMPOUT(0x1A5716C94);
}

uint64_t sub_1A5716CE4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(void))((char *)sub_1A5716D00 + 4 * byte_1A59B6D49[a2]))();
}

BOOL sub_1A5716D00(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return !a4 && a1 == a3;
}

void sub_1A5716DC8(uint64_t a1, char a2)
{
  _BYTE v4[72];

  sub_1A594CE64();
  sub_1A5716C3C((uint64_t)v4, a1, a2);
  sub_1A594CED0();
  OUTLINED_FUNCTION_8_7();
}

void sub_1A5716E0C()
{
  uint64_t v0;

  sub_1A5716DC8(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

void sub_1A5716E18(uint64_t a1)
{
  uint64_t v1;

  sub_1A5716C3C(a1, *(_QWORD *)v1, *(_BYTE *)(v1 + 8));
}

uint64_t sub_1A5716E24()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  _BYTE v4[72];

  v1 = *(_QWORD *)v0;
  v2 = *(_BYTE *)(v0 + 8);
  sub_1A594CE64();
  sub_1A5716C3C((uint64_t)v4, v1, v2);
  return sub_1A594CED0();
}

uint64_t sub_1A5716E6C(uint64_t a1)
{
  return sub_1A5716CE4(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t CommandParser.init(bufferLimit:literalSizeLimit:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_QWORD *)a3 = sub_1A574156C;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = a2;
  *(_QWORD *)(a3 + 24) = 0x7FFFFFFFFFFFFFFFLL;
  *(_QWORD *)(a3 + 32) = result;
  *(_QWORD *)(a3 + 40) = 0;
  *(_BYTE *)(a3 + 48) = 3;
  *(_QWORD *)(a3 + 64) = 0;
  *(_QWORD *)(a3 + 72) = 0;
  *(_QWORD *)(a3 + 56) = 0;
  *(_BYTE *)(a3 + 80) = 1;
  return result;
}

uint64_t CommandParser.parseCommandStream(buffer:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t __src[18];
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  __int16 v73;
  char v74;
  _BYTE __dst[144];
  _BYTE v76[136];
  _BYTE v77[136];
  _BYTE v78[136];
  _BYTE v79[152];
  uint64_t v80;

  v4 = v2;
  v7 = *(unsigned int *)(result + 8);
  v6 = *(unsigned int *)(result + 12);
  if (v6 < v7)
  {
    __break(1u);
  }
  else
  {
    if ((_DWORD)v6 == (_DWORD)v7)
    {
      sub_1A5717E6C((uint64_t)__dst);
      OUTLINED_FUNCTION_5_50(v8, v9, &qword_1EE7A9DA8, v10, v11, v12, v13, v14, v34, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44,
        v45,
        v46,
        v47,
        v48,
        v49,
        v50,
        v51,
        __src[0],
        __src[1],
        __src[2],
        __src[3],
        __src[4],
        __src[5],
        __src[6],
        __src[7],
        __src[8],
        __src[9],
        __src[10],
        __src[11],
        __src[12],
        __src[13],
        __src[14],
        __src[15],
        __src[16],
        __src[17],
        v53,
        v54,
        v55,
        v56,
        v57,
        v58,
        v59,
        v60,
        v61,
        v62,
        v63,
        v64,
        v65,
        v66,
        v67,
        v68,
        v69,
        v70,
        v71);
      return sub_1A55032A0((uint64_t)v79, a2, &qword_1EE7A9DA8);
    }
    v15 = result;
    v80 = a2;
    v16 = *(_QWORD *)result;
    v17 = v7 | (v6 << 32);
    v18 = *(unsigned int *)(result + 16) | ((unint64_t)*(unsigned __int16 *)(result + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(result + 22) << 48);
    v19 = swift_retain();
    SynchronizingLiteralParser.parseContinuationsNecessary(_:)(v19, v17, v18);
    if (v3)
      return swift_release();
    v22 = v20;
    v23 = v21;
    result = ByteBuffer.getSlice(at:length:)(v7, v20, v16, v17, v18);
    if (result)
    {
      v70 = result;
      v71 = v24;
      v72 = v25;
      v73 = WORD2(v25);
      v74 = BYTE6(v25);
      sub_1A5717110(v4, (uint64_t)&v70, v22, v15, (uint64_t)v76);
      sub_1A55032A0((uint64_t)v76, (uint64_t)&v53, &qword_1EE7A90D8);
      sub_1A55032A0((uint64_t)v76, (uint64_t)v77, &qword_1EE7A90D8);
      if (sub_1A5716610((uint64_t)v77) == 1)
      {
        if (v23 < 1)
        {
          OUTLINED_FUNCTION_2_4();
          swift_release();
          sub_1A5717E6C((uint64_t)__dst);
          goto LABEL_14;
        }
        OUTLINED_FUNCTION_2_4();
        sub_1A5657D88((uint64_t)&v35);
        __src[0] = v23;
        v26 = &v35;
      }
      else
      {
        sub_1A567FF24(v77, v78);
        OUTLINED_FUNCTION_2_4();
        __src[0] = v23;
        v26 = &v53;
      }
      sub_1A55032A0((uint64_t)v26, (uint64_t)&__src[1], &qword_1EE7A90D8);
      swift_release();
      memcpy(__dst, __src, sizeof(__dst));
      nullsub_1(__dst);
LABEL_14:
      OUTLINED_FUNCTION_5_50(v27, v28, &qword_1EE7A9DA8, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44,
        v45,
        v46,
        v47,
        v48,
        v49,
        v50,
        v51,
        __src[0],
        __src[1],
        __src[2],
        __src[3],
        __src[4],
        __src[5],
        __src[6],
        __src[7],
        __src[8],
        __src[9],
        __src[10],
        __src[11],
        __src[12],
        __src[13],
        __src[14],
        __src[15],
        __src[16],
        __src[17],
        v53,
        v54,
        v55,
        v56,
        v57,
        v58,
        v59,
        v60,
        v61,
        v62,
        v63,
        v64,
        v65,
        v66,
        v67,
        v68,
        v69,
        v70,
        v71);
      a2 = v80;
      return sub_1A55032A0((uint64_t)v79, a2, &qword_1EE7A9DA8);
    }
  }
  __break(1u);
  return result;
}

void sub_1A5717110(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  void *v5;
  uint64_t v10;
  uint64_t v11;
  int v12;
  __int16 v13;
  char v14;
  id v15;
  unsigned int v16;
  unsigned int v17;
  BOOL v18;
  unsigned int v19;
  uint64_t v20;
  int v21;
  unsigned int v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _BYTE v27[136];
  id v28[17];
  _BYTE v29[136];
  _BYTE v30[144];

  swift_beginAccess();
  v10 = *(_QWORD *)a2;
  v11 = *(_QWORD *)(a2 + 8);
  v12 = *(_DWORD *)(a2 + 16);
  v13 = *(_WORD *)(a2 + 20);
  v14 = *(_BYTE *)(a2 + 22);
  swift_retain();
  sub_1A5717348(a2, 1, 100, a1);
  if (!v5)
  {
    swift_release();
    sub_1A55032A0((uint64_t)v29, (uint64_t)v27, &qword_1EE7A90D8);
    swift_endAccess();
    sub_1A55032A0((uint64_t)v27, (uint64_t)v28, &qword_1EE7A90D8);
    if (sub_1A5716610((uint64_t)v28) != 1)
    {
      swift_beginAccess();
      v16 = *(_DWORD *)(a2 + 8);
      v17 = *(_DWORD *)(a2 + 12);
      v18 = v17 >= v16;
      v19 = v17 - v16;
      if (!v18)
      {
        __break(1u);
LABEL_16:
        __break(1u);
        goto LABEL_17;
      }
      v24 = __OFSUB__(a3, v19);
      v20 = a3 - v19;
      if (v24)
        goto LABEL_16;
      v21 = *(_DWORD *)(a4 + 8);
      v18 = __CFADD__(v21, (_DWORD)v20);
      v22 = v21 + v20;
      if (v18)
      {
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
      if (*(_DWORD *)(a4 + 12) < v22)
      {
LABEL_18:
        __break(1u);
        goto LABEL_19;
      }
      *(_DWORD *)(a4 + 8) = v22;
      v23 = *(_QWORD *)(a1 + 56);
      v24 = __OFSUB__(v23, v20);
      v25 = v23 - v20;
      if (v25 < 0 != v24)
      {
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
      if (v24)
      {
LABEL_20:
        __break(1u);
        return;
      }
      *(_QWORD *)(a1 + 56) = v25;
    }
    sub_1A55032A0((uint64_t)v27, (uint64_t)v30, &qword_1EE7A90D8);
    goto LABEL_14;
  }
  swift_release();
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  *(_DWORD *)(a2 + 16) = v12;
  *(_WORD *)(a2 + 20) = v13;
  *(_BYTE *)(a2 + 22) = v14;
  swift_willThrow();
  swift_endAccess();
  v28[0] = v5;
  v15 = v5;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
  if ((swift_dynamicCast() & 1) != 0)
  {

    sub_1A5657D88((uint64_t)v29);
    sub_1A55032A0((uint64_t)v29, (uint64_t)v30, &qword_1EE7A90D8);
LABEL_14:
    sub_1A55032A0((uint64_t)v30, a5, &qword_1EE7A90D8);
    return;
  }

}

void sub_1A5717348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

void *sub_1A571739C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  _BYTE v10[144];
  _BYTE v11[408];
  _BYTE v12[488];

  result = sub_1A57178AC(v8, v7, v6, a4, v12);
  if (!v4)
  {
    sub_1A567FF24(v12, v10);
    sub_1A567FF24(v10, v11);
    nullsub_1(v11);
    return (void *)sub_1A55032A0((uint64_t)v11, v5, &qword_1EE7A90D8);
  }
  return result;
}

_QWORD *sub_1A5717590@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v4;
  _QWORD *result;
  _BYTE v7[16];
  void *(*v8)@<X0>(uint64_t *@<X0>, uint64_t@<X1>, uint64_t@<X2>, void *@<X8>);
  char *v9;
  char v10;
  _BYTE v11[16];
  _QWORD *(*v12)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t@<X2>, void *@<X8>);
  char *v13;
  char v14;
  _BYTE v15[16];
  _QWORD *(*v16)@<X0>(uint64_t *@<X0>, uint64_t@<X1>, uint64_t@<X2>, void *@<X8>);
  char *v17;
  char v18;
  _BYTE v19[136];
  _QWORD v20[17];

  v16 = sub_1A571877C;
  v17 = &v18;
  v12 = sub_1A57187AC;
  v13 = &v14;
  v8 = sub_1A57187C4;
  v9 = &v10;
  result = sub_1A573EF20(v20, sub_1A5718794, v15, sub_1A5718848, v11, sub_1A5718848, v7, a1, a2, a3, 0xD000000000000020, 0x80000001A5A0F5E0, 172);
  if (!v4)
  {
    sub_1A567FF24(v20, v19);
    return sub_1A567FF24(v19, a4);
  }
  return result;
}

void sub_1A5717674(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v4;
  void *v5;
  id v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  _OWORD v23[2];
  char v24;
  id v25;
  _BYTE v26[64];
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  char v33;
  _BYTE v34[144];

  sub_1A5718888((int)a1, a2, a3, *(_QWORD *)v4, *(_QWORD *)(v4 + 8), *(_QWORD *)(v4 + 16), *(void **)(v4 + 24), (uint64_t)v26);
  if (v5)
  {
    v25 = v5;
    v10 = v5;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if (!swift_dynamicCast())
    {

      return;
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_retain();
    sub_1A575DBEC(a1, a2, a3);
    swift_release();
    *(_QWORD *)(v4 + 40) = 0;
    *(_BYTE *)(v4 + 48) = 3;
    v21 = 2;
    v22 = 0u;
    memset(v23, 0, sizeof(v23));
    v24 = -64;
    sub_1A5718738((uint64_t)&v21);

    sub_1A567FF24(&v21, v34);
  }
  else
  {
    sub_1A571880C((uint64_t)v26, (uint64_t)&v27);
    v11 = v33;
    if (v33 < 0)
    {
      v33 &= ~0x80u;
      v17 = v27;
      v18 = v28;
      v19 = v29;
      v20 = v30;
      *(_QWORD *)(v4 + 40) = 0;
      *(_BYTE *)(v4 + 48) = 1;
      v21 = v17;
      *(_QWORD *)&v22 = v18;
      *((_QWORD *)&v22 + 1) = v19;
      *(_QWORD *)&v23[0] = v20;
      *(_OWORD *)((char *)v23 + 8) = v31;
      *((_QWORD *)&v23[1] + 1) = 0;
      v24 = 96;
    }
    else
    {
      v12 = v27;
      v13 = v28;
      v14 = v29;
      v15 = v30;
      v16 = v32;
      *(_QWORD *)(v4 + 40) = v32;
      *(_BYTE *)(v4 + 48) = 0;
      v21 = v12;
      *(_QWORD *)&v22 = v13;
      *((_QWORD *)&v22 + 1) = v14;
      *(_QWORD *)&v23[0] = v15;
      *(_OWORD *)((char *)v23 + 8) = v31;
      *((_QWORD *)&v23[1] + 1) = v16;
      v24 = v11 & 1 | 0x20;
    }
    sub_1A5718738((uint64_t)&v21);
    sub_1A567FF24(&v21, v34);
  }
  sub_1A567FF24(v34, a4);
}

void *sub_1A57178AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  void *result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  BOOL v15;
  _QWORD v16[3];
  __int128 v17;
  __int128 v18;
  char v19;

  result = (void *)sub_1A575DB48(a1, a2, a3, a4);
  if (!v6)
  {
    v12 = (HIDWORD(v10) - v10);
    if (HIDWORD(v10) < v10)
    {
      __break(1u);
    }
    else
    {
      if (v12 == a4)
      {
        v13 = 3;
        v14 = 3;
LABEL_7:
        *(_QWORD *)(v5 + 40) = v13;
        *(_BYTE *)(v5 + 48) = v14;
        v16[0] = result;
        v16[1] = v10;
        v16[2] = v11 & 0xFFFFFFFFFFFFFFLL;
        v17 = 0u;
        v18 = 0u;
        v19 = 64;
        sub_1A5718738((uint64_t)v16);
        return sub_1A567FF24(v16, a5);
      }
      v15 = __OFSUB__(a4, v12);
      v13 = a4 - v12;
      if (!v15)
      {
        v14 = 0;
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  return result;
}

void *sub_1A5717958@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  void *result;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  char v16;
  _BYTE v17[136];

  result = (void *)sub_1A5718958(a1, a2, a3, a4, *(_QWORD *)v5, *(_QWORD *)(v5 + 8), *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24));
  if (!v6)
  {
    if (HIBYTE(v10))
    {
      if (HIBYTE(v10) == 1)
      {
        *(_QWORD *)(v5 + 40) = result;
        *(_BYTE *)(v5 + 48) = 2;
        v12 = (uint64_t)result;
        v13 = 0u;
        v14 = 0u;
        v15 = 0u;
        v11 = -96;
      }
      else
      {
        *(_QWORD *)(v5 + 40) = 2;
        *(_BYTE *)(v5 + 48) = 3;
        v12 = 1;
        v13 = 0u;
        v14 = 0u;
        v15 = 0u;
        v11 = -64;
      }
    }
    else
    {
      *(_QWORD *)(v5 + 40) = 1;
      *(_BYTE *)(v5 + 48) = 1;
      v12 = (uint64_t)result;
      *(_QWORD *)&v13 = v9;
      *((_QWORD *)&v13 + 1) = v10 & 0xFFFFFFFFFFFFFFLL;
      v14 = 0u;
      v15 = 0u;
      v11 = 0x80;
    }
    v16 = v11;
    sub_1A5718738((uint64_t)&v12);
    sub_1A567FF24(&v12, v17);
    return sub_1A567FF24(v17, a5);
  }
  return result;
}

void *sub_1A5717A50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  void *result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  BOOL v15;
  _QWORD v16[3];
  __int128 v17;
  __int128 v18;
  char v19;

  result = (void *)sub_1A575DB48(a1, a2, a3, a4);
  if (!v6)
  {
    v12 = (HIDWORD(v10) - v10);
    if (HIDWORD(v10) < v10)
    {
      __break(1u);
    }
    else
    {
      if (v12 == a4)
      {
        v13 = 3;
        v14 = 4;
LABEL_7:
        *(_QWORD *)(v5 + 40) = v14;
        *(_BYTE *)(v5 + 48) = v13;
        v16[0] = result;
        v16[1] = v10;
        v16[2] = v11 & 0xFFFFFFFFFFFFFFLL | 0x100000000000000;
        v17 = 0u;
        v18 = 0u;
        v19 = -96;
        sub_1A5718738((uint64_t)v16);
        return sub_1A567FF24(v16, a5);
      }
      v15 = __OFSUB__(a4, v12);
      v14 = a4 - v12;
      if (!v15)
      {
        v13 = 2;
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  return result;
}

_QWORD *sub_1A5717B00@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, void *a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *result;
  int8x16_t v17;
  _BYTE v18[136];
  _QWORD __dst[17];
  _QWORD __src[18];

  v11 = *a4;
  v12 = a4[1];
  v13 = a4[2];
  v14 = a4[3];
  swift_retain();
  result = sub_1A57531EC(__src, a1, a2, a3, v11, v12, v13, v14);
  if (!v5)
  {
    memcpy(__dst, __src, sizeof(__dst));
    sub_1A575DBEC(a1, a2, a3);
    if (__dst[15] >> 58 == 37 && !__dst[16] && __dst[15] == 0x9400000000000000 && __dst[2] == 8)
    {
      v17 = vorrq_s8(vorrq_s8(vorrq_s8(*(int8x16_t *)&__dst[7], *(int8x16_t *)&__dst[11]), vorrq_s8(*(int8x16_t *)&__dst[9], *(int8x16_t *)&__dst[13])), vorrq_s8(*(int8x16_t *)&__dst[3], *(int8x16_t *)&__dst[5]));
      if (!*(_QWORD *)&vorr_s8(*(int8x8_t *)v17.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v17, v17, 8uLL)))
      {
        a4[5] = 1;
        *((_BYTE *)a4 + 48) = 3;
      }
    }
    memcpy(v18, __src, sizeof(v18));
    sub_1A57187F4((uint64_t)v18);
    return sub_1A567FF24(v18, a5);
  }
  return result;
}

_QWORD *sub_1A5717C6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, void *a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *result;
  _BYTE v16[136];
  _QWORD v17[18];

  v11 = *a4;
  v12 = a4[1];
  v13 = a4[2];
  v14 = a4[3];
  swift_retain();
  result = sub_1A57530C0(v17, a1, a2, a3, v11, v12, v13, v14);
  if (!v5)
  {
    sub_1A567FF24(v17, v16);
    a4[5] = 2;
    *((_BYTE *)a4 + 48) = 3;
    return sub_1A567FF24(v16, a5);
  }
  return result;
}

void *sub_1A5717D28@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *result;
  _QWORD v16[2];
  int v17;
  __int16 v18;
  char v19;

  swift_retain();
  sub_1A573EF04();
  v10 = v9;
  v12 = v11;
  v14 = v13;
  result = (void *)swift_release();
  if (!v4)
  {
    sub_1A575DBEC(a1, a2, a3);
    v16[0] = v10;
    v16[1] = v12;
    v17 = v14;
    v18 = WORD2(v14);
    v19 = BYTE6(v14);
    sub_1A57187DC((uint64_t)v16);
    return sub_1A567FF24(v16, a4);
  }
  return result;
}

_QWORD *sub_1A5717E24@<X0>(_QWORD *(*a1)(_QWORD *__return_ptr)@<X3>, void *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  _QWORD v5[17];

  result = a1(v5);
  if (!v2)
    return sub_1A567FF24(v5, a2);
  return result;
}

double sub_1A5717E6C(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 104) = 0x7FFFFFFF00000000;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  return result;
}

unint64_t sub_1A5717E90()
{
  unint64_t result;

  result = qword_1EE7A9DB0;
  if (!qword_1EE7A9DB0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for SynchronizedCommand, &type metadata for SynchronizedCommand);
    atomic_store(result, (unint64_t *)&qword_1EE7A9DB0);
  }
  return result;
}

_QWORD *destroy for SynchronizedCommand(_QWORD *result)
{
  unint64_t v1;

  v1 = result[13];
  if (v1 < 0xFFFFFFFF00000000 || (result[16] & 0x200000000000000) != 0)
    return (_QWORD *)sub_1A567FFE0(result[1], result[2], result[3], result[4], result[5], result[6], result[7], result[8], result[9], result[10], result[11], result[12], v1, result[14], result[15], result[16]);
  return result;
}

_QWORD *initializeWithCopy for SynchronizedCommand(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  *a1 = *a2;
  v3 = a1 + 1;
  v4 = a2[13];
  v5 = a2[16];
  if (v4 >= 0xFFFFFFFF00000000 && (v5 & 0x200000000000000) == 0)
  {
    memcpy(v3, a2 + 1, 0x88uLL);
  }
  else
  {
    v7 = a2[1];
    v8 = a2[2];
    v9 = a2[3];
    v10 = a2[4];
    v11 = a2[5];
    v12 = a2[6];
    v13 = a2[7];
    v15 = a2[8];
    v16 = a2[9];
    v17 = a2[10];
    v18 = a2[11];
    v19 = a2[12];
    v20 = a2[14];
    v21 = a2[15];
    v22 = a2[17];
    sub_1A56B957C(v7, v8, v9, v10, v11, v12, v13, v15, v16, v17, v18, v19, v4, v20, v21, v5);
    a1[1] = v7;
    a1[2] = v8;
    a1[3] = v9;
    a1[4] = v10;
    a1[5] = v11;
    a1[6] = v12;
    a1[7] = v13;
    a1[8] = v15;
    a1[9] = v16;
    a1[10] = v17;
    a1[11] = v18;
    a1[12] = v19;
    a1[13] = v4;
    a1[14] = v20;
    a1[15] = v21;
    a1[16] = v5;
    a1[17] = v22;
  }
  return a1;
}

_QWORD *assignWithCopy for SynchronizedCommand(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  const void *v4;
  unint64_t v5;
  unint64_t v6;
  BOOL v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  *a1 = *a2;
  v3 = a1 + 1;
  v4 = a2 + 1;
  v5 = a2[13];
  v6 = a2[16];
  v8 = (v6 & 0x200000000000000) == 0 && v5 > 0xFFFFFFFEFFFFFFFFLL;
  if (a1[13] >= 0xFFFFFFFF00000000 && (a1[16] & 0x200000000000000) == 0)
  {
    if (!v8)
    {
      v29 = a2[1];
      v30 = a2[2];
      v31 = a2[3];
      v32 = a2[4];
      v33 = a2[5];
      v34 = a2[6];
      v35 = a2[7];
      v38 = a2[8];
      v40 = a2[9];
      v42 = a2[10];
      v44 = a2[11];
      v46 = a2[12];
      v48 = a2[14];
      v50 = a2[15];
      v52 = a2[17];
      sub_1A56B957C(v29, v30, v31, v32, v33, v34, v35, v38, v40, v42, v44, v46, v5, v48, v50, v6);
      a1[1] = v29;
      a1[2] = v30;
      a1[3] = v31;
      a1[4] = v32;
      a1[5] = v33;
      a1[6] = v34;
      a1[7] = v35;
      a1[8] = v38;
      a1[9] = v40;
      a1[10] = v42;
      a1[11] = v44;
      a1[12] = v46;
      a1[13] = v5;
      a1[14] = v48;
      a1[15] = v50;
      a1[16] = v6;
      a1[17] = v52;
      return a1;
    }
  }
  else
  {
    if (!v8)
    {
      v10 = a2[1];
      v11 = a2[2];
      v12 = a2[3];
      v13 = a2[4];
      v14 = a2[5];
      v15 = a2[6];
      v16 = a2[7];
      v37 = a2[8];
      v39 = a2[9];
      v41 = a2[10];
      v43 = a2[11];
      v45 = a2[12];
      v47 = a2[14];
      v49 = a2[15];
      v51 = a2[17];
      sub_1A56B957C(v10, v11, v12, v13, v14, v15, v16, v37, v39, v41, v43, v45, v5, v47, v49, v6);
      v17 = a1[1];
      v18 = a1[2];
      v19 = a1[3];
      v20 = a1[4];
      v21 = a1[5];
      v22 = a1[6];
      v23 = a1[7];
      v24 = a1[8];
      v25 = *(_OWORD *)(a1 + 9);
      v26 = *(_OWORD *)(a1 + 11);
      v27 = *(_OWORD *)(a1 + 13);
      v28 = *(_OWORD *)(a1 + 15);
      a1[1] = v10;
      a1[2] = v11;
      a1[3] = v12;
      a1[4] = v13;
      a1[5] = v14;
      a1[6] = v15;
      a1[7] = v16;
      a1[8] = v37;
      a1[9] = v39;
      a1[10] = v41;
      a1[11] = v43;
      a1[12] = v45;
      a1[13] = v5;
      a1[14] = v47;
      a1[15] = v49;
      a1[16] = v6;
      a1[17] = v51;
      sub_1A567FFE0(v17, v18, v19, v20, v21, v22, v23, v24, v25, *((uint64_t *)&v25 + 1), v26, *((uint64_t *)&v26 + 1), v27, *((uint64_t *)&v27 + 1), v28, *((unint64_t *)&v28 + 1));
      return a1;
    }
    sub_1A57182A8((uint64_t)(a1 + 1));
  }
  memcpy(v3, v4, 0x88uLL);
  return a1;
}

uint64_t sub_1A57182A8(uint64_t a1)
{
  destroy for CommandStreamPart(a1);
  return a1;
}

void *__swift_memcpy144_8_0(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x90uLL);
}

uint64_t assignWithTake for SynchronizedCommand(uint64_t a1, uint64_t a2)
{
  void *v3;
  const void *v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = (void *)(a1 + 8);
  v4 = (const void *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 104);
  v6 = *(_QWORD *)(a1 + 128);
  if (v5 >= 0xFFFFFFFF00000000 && (v6 & 0x200000000000000) == 0)
    goto LABEL_11;
  v8 = *(_QWORD *)(a2 + 104);
  v9 = *(_QWORD *)(a2 + 128);
  if (v8 >= 0xFFFFFFFF00000000 && (v9 & 0x200000000000000) == 0)
  {
    sub_1A57182A8(a1 + 8);
LABEL_11:
    memcpy(v3, v4, 0x88uLL);
    return a1;
  }
  v11 = *(_QWORD *)(a2 + 136);
  v12 = *(_QWORD *)(a1 + 8);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 24);
  v15 = *(_QWORD *)(a1 + 32);
  v16 = *(_QWORD *)(a1 + 40);
  v17 = *(_QWORD *)(a1 + 48);
  v18 = *(_QWORD *)(a1 + 56);
  v19 = *(_QWORD *)(a1 + 64);
  v20 = *(_OWORD *)(a1 + 72);
  v21 = *(_QWORD *)(a1 + 88);
  v22 = *(_QWORD *)(a1 + 96);
  v23 = *(_QWORD *)(a1 + 112);
  v24 = *(_QWORD *)(a1 + 120);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 104) = v8;
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 128) = v9;
  *(_QWORD *)(a1 + 136) = v11;
  sub_1A567FFE0(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, v22, v5, v23, v24, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SynchronizedCommand(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  unint64_t v4;
  int v5;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 144))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      HIDWORD(v4) = *(_DWORD *)(a1 + 108);
      LODWORD(v4) = HIDWORD(v4);
      v3 = v4 >> 31;
      v5 = -2 - v3;
      if ((int)(-2 - v3) < 0)
        v5 = -1;
      if (v3 <= 0x80000000)
        v2 = -1;
      else
        v2 = v5;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SynchronizedCommand(uint64_t result, unsigned int a2, unsigned int a3)
{
  unint64_t v3;

  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 144) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 144) = 0;
    if (a2)
    {
      *(_OWORD *)(result + 88) = 0u;
      *(_OWORD *)(result + 72) = 0u;
      HIDWORD(v3) = ~a2;
      LODWORD(v3) = ~a2;
      *(_OWORD *)(result + 56) = 0u;
      *(_OWORD *)(result + 40) = 0u;
      *(_OWORD *)(result + 24) = 0u;
      *(_OWORD *)(result + 8) = 0u;
      *(_QWORD *)(result + 104) = (unint64_t)(v3 >> 1) << 32;
      *(_OWORD *)(result + 112) = 0u;
      *(_OWORD *)(result + 128) = 0u;
    }
  }
  return result;
}

void type metadata accessor for SynchronizedCommand()
{
  OUTLINED_FUNCTION_3_1();
}

uint64_t _s27DataTransferReportCollectorC7PendingVwxx()
{
  return swift_release();
}

uint64_t initializeWithCopy for CommandParser(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 65) = *(_OWORD *)(a2 + 65);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for CommandParser(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v6 = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v6;
  return a1;
}

uint64_t assignWithTake for CommandParser(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for CommandParser(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 81))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CommandParser(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 80) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 81) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 81) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for CommandParser()
{
  OUTLINED_FUNCTION_3_1();
}

void type metadata accessor for CommandParser.Mode()
{
  OUTLINED_FUNCTION_3_1();
}

unint64_t sub_1A57186FC()
{
  unint64_t result;

  result = qword_1EE7A9DB8;
  if (!qword_1EE7A9DB8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59B6E08, &unk_1E4E5DED0);
    atomic_store(result, (unint64_t *)&qword_1EE7A9DB8);
  }
  return result;
}

uint64_t sub_1A5718738(uint64_t result)
{
  unint64_t v1;

  v1 = *(_QWORD *)(result + 120) & 0xFDFFFFFFFFFFFFFFLL;
  *(_DWORD *)(result + 100) = 0x80000000;
  *(_QWORD *)(result + 120) = v1;
  return result;
}

double sub_1A5718750(uint64_t a1)
{
  double result;

  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_QWORD *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 112) = 0;
  *(_QWORD *)(a1 + 96) = 0x8000000000000000;
  result = 4.77830973e-299;
  *(_OWORD *)(a1 + 120) = xmmword_1A59AC050;
  return result;
}

_QWORD *sub_1A571877C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v4;

  return sub_1A5717B00(a1, a2, a3, *(uint64_t **)(v4 + 16), a4);
}

_QWORD *sub_1A5718794@<X0>(void *a1@<X8>)
{
  uint64_t v1;

  return sub_1A5717E24(*(_QWORD *(**)(_QWORD *__return_ptr))(v1 + 16), a1);
}

_QWORD *sub_1A57187AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v4;

  return sub_1A5717C6C(a1, a2, a3, *(uint64_t **)(v4 + 16), a4);
}

void *sub_1A57187C4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_1A5717D28(a1, a2, a3, a4);
}

uint64_t sub_1A57187DC(uint64_t result)
{
  uint64_t v1;

  v1 = *(_QWORD *)(result + 120) | 0x200000000000000;
  *(_QWORD *)(result + 96) = *(unsigned int *)(result + 96);
  *(_QWORD *)(result + 120) = v1;
  return result;
}

uint64_t sub_1A57187F4(uint64_t result)
{
  unint64_t v1;

  v1 = *(_QWORD *)(result + 120) & 0xFDFFFFFFFFFFFFFFLL;
  *(_QWORD *)(result + 96) = *(unsigned int *)(result + 96);
  *(_QWORD *)(result + 120) = v1;
  return result;
}

uint64_t sub_1A571880C(uint64_t a1, uint64_t a2)
{
  __swift_memcpy57_8_0(a2, a1);
  return a2;
}

_QWORD *sub_1A5718848@<X0>(void *a1@<X8>)
{
  return sub_1A5718794(a1);
}

uint64_t OUTLINED_FUNCTION_0_101(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1A55032A0(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_1_82(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1A55032A0(a1, a2, v2);
}

void OUTLINED_FUNCTION_2_69(_QWORD *a1)
{
  void (*v1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);

  sub_1A5716670(a1, v1);
}

void OUTLINED_FUNCTION_4_50(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  sub_1A5716670(v2, a2);
}

uint64_t OUTLINED_FUNCTION_5_50(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a65;
  uint64_t v65;

  return sub_1A55032A0((uint64_t)&a65, v65 - 232, a3);
}

double sub_1A5718888@<D0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  double result;
  uint64_t v11;
  char v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15[2];
  uint64_t v16[2];
  uint64_t v17[2];
  uint64_t v18[2];
  _OWORD v19[3];
  uint64_t v20;
  char v21;

  sub_1A576F5C8((uint64_t *)v19, (int)sub_1A5718F68, (int)v17, (int)sub_1A5719968, (int)v15, a1, a2, a3, 32, 0x80000001A5A0F5E0, 87, v15[0], v15[1], (char)sub_1A5718F80, (uint64_t)v16, v16[0], v16[1], a4, a5,
    a6,
    a7,
    v17[0],
    v17[1],
    (uint64_t)sub_1A5718F04,
    (uint64_t)v18,
    v18[0],
    v18[1],
    a4,
    a5,
    a6,
    (uint64_t)a7,
    *(uint64_t *)&v19[0],
    *((uint64_t *)&v19[0] + 1));
  if (!v8)
  {
    v11 = v20;
    v12 = v21;
    result = *(double *)v19;
    v13 = v19[1];
    v14 = v19[2];
    *(_OWORD *)a8 = v19[0];
    *(_OWORD *)(a8 + 16) = v13;
    *(_OWORD *)(a8 + 32) = v14;
    *(_QWORD *)(a8 + 48) = v11;
    *(_BYTE *)(a8 + 56) = v12;
  }
  return result;
}

uint64_t sub_1A5718958(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  _BYTE v11[16];
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  _BYTE *v13;
  _BYTE v14[24];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[16];
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t);
  _BYTE *v21;
  _BYTE v22[24];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v22[16] = a1;
  v23 = a5;
  v24 = a6;
  v25 = a7;
  v26 = a8;
  v20 = sub_1A571956C;
  v21 = v22;
  v14[16] = a1;
  v15 = a5;
  v16 = a6;
  v17 = a7;
  v18 = a8;
  v12 = sub_1A571959C;
  v13 = v14;
  result = sub_1A573F078(sub_1A5719588, v19, sub_1A5719588, v11, sub_1A571950C, 0, a2, a3, a4, 0xD000000000000020, 0x80000001A5A0F5E0, 150);
  if (v8)
    return v10;
  return result;
}

void sub_1A5718A14(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  uint64_t v8;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unsigned int v22;
  uint64_t v23;
  _QWORD v24[7];
  char v25;
  uint64_t v26;

  sub_1A573FF70(a1, a2, a3);
  if (!v8)
  {
    v23 = v17;
    v26 = v18;
    sub_1A5751898();
    v19 = sub_1A573EE0C(a1, a2, a3, a4, a5, a6, a7);
    v24[0] = v23;
    v24[1] = v26;
    v24[2] = MailboxName.init(_:)(v19, v21, v20 & 0xFFFFFFFFFFFFFFLL);
    v24[3] = v22;
    memset(&v24[4], 0, 24);
    v25 = 0;
    sub_1A5718738((uint64_t)v24);
    sub_1A567FF24(v24, a8);
  }
}

void sub_1A5718B3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void **v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;

  if (!__OFADD__(a2, 1))
  {
    if (a2 + 1 >= a3)
    {
      sub_1A5718F9C();
      OUTLINED_FUNCTION_21();
      *v9 = a3;
    }
    else
    {
      OUTLINED_FUNCTION_0_102();
      v5 = (void **)OUTLINED_FUNCTION_6_45();
      OUTLINED_FUNCTION_5_51(v5, v6, v7, v8, 0x7EuLL);
      if (!v3)
      {
        swift_release();
        goto LABEL_7;
      }
      swift_release();
      OUTLINED_FUNCTION_4_51();
    }
    swift_willThrow();
LABEL_7:
    OUTLINED_FUNCTION_2_70();
    return;
  }
  __break(1u);
}

void sub_1A5718BD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A5719438(a1, a2, a3);
}

void sub_1A5718BE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_8_40();
  v8 = OUTLINED_FUNCTION_3_56();
  sub_1A5753480(v8);
  if (!v4)
  {
    sub_1A5751974(a1, a2, a3);
    swift_retain();
    OUTLINED_FUNCTION_3_56();
    sub_1A5753288();
    *(_QWORD *)v3 = v11;
    *(_QWORD *)(v3 + 8) = v12;
    *(_BYTE *)(v3 + 16) = v13;
    *(_QWORD *)(v3 + 24) = v14;
    *(_QWORD *)(v3 + 32) = v15;
    *(_QWORD *)(v3 + 40) = v16;
    *(_QWORD *)(v3 + 48) = v9;
    *(_BYTE *)(v3 + 56) = v10 & 1;
  }
}

__n128 sub_1A5718DA0@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, __n128 *a8@<X8>)
{
  uint64_t v8;
  __n128 result;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unsigned __int8 v22;
  _QWORD v23[2];
  unsigned __int8 v24;
  unint64_t v25;
  __n128 v26;
  unint64_t v27;
  unsigned __int8 v28;

  swift_retain();
  sub_1A57533E4(v23, a1, a2, a3, a4, a5, a6, a7);
  if (!v8)
  {
    v18 = v23[1];
    v19 = v24;
    v20 = v25;
    v21 = v27;
    v22 = v28;
    result = v26;
    a8->n128_u64[0] = v23[0];
    a8->n128_u64[1] = v18;
    a8[1].n128_u64[0] = v19;
    a8[1].n128_u64[1] = v20;
    a8[2] = result;
    a8[3].n128_u64[0] = v21;
    a8[3].n128_u8[8] = v22;
  }
  return result;
}

__n128 sub_1A5718E54@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __n128 *a3@<X8>)
{
  uint64_t v3;
  __n128 result;
  unint64_t v8;
  unint64_t v9;
  unsigned __int8 v10;
  unint64_t v11;
  __n128 v12;

  swift_retain();
  sub_1A5753554(a1, a2);
  if (!v3)
  {
    result = v12;
    a3->n128_u64[0] = v8;
    a3->n128_u64[1] = v9;
    a3[1].n128_u64[0] = v10;
    a3[1].n128_u64[1] = v11;
    a3[2] = v12;
    a3[3].n128_u64[0] = 0;
    a3[3].n128_u8[8] = 0x80;
  }
  return result;
}

double sub_1A5718F04@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __n128 *a3@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_1A5718E54(a1, a2, a3).n128_u64[0];
  return result;
}

_QWORD *sub_1A5718F20@<X0>(_QWORD *(*a1)(_QWORD *__return_ptr)@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  _QWORD v5[8];

  result = a1(v5);
  if (!v2)
    return (_QWORD *)sub_1A571880C((uint64_t)v5, a2);
  return result;
}

_QWORD *sub_1A5718F68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A5718F20(*(_QWORD *(**)(_QWORD *__return_ptr))(v1 + 16), a1);
}

double sub_1A5718F80@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __n128 *a4@<X8>)
{
  uint64_t *v4;
  double result;

  *(_QWORD *)&result = sub_1A5718DA0(a1, a2, a3, v4[2], v4[3], v4[4], v4[5], a4).n128_u64[0];
  return result;
}

unint64_t sub_1A5718F9C()
{
  unint64_t result;

  result = qword_1EE7A9DC0;
  if (!qword_1EE7A9DC0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for TooMuchRecursion, &type metadata for TooMuchRecursion);
    atomic_store(result, (unint64_t *)&qword_1EE7A9DC0);
  }
  return result;
}

void sub_1A5718FD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD v30[6];
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  _QWORD *v36;

  OUTLINED_FUNCTION_8_40();
  OUTLINED_FUNCTION_1_83();
  sub_1A575DFE0();
  if (!v8)
  {
    v36 = v7;
    if (v16)
      v17 = v16;
    else
      v17 = MEMORY[0x1E0DEE9D8];
    swift_retain();
    v18 = OUTLINED_FUNCTION_1_83();
    sub_1A575E130(v18, v19, v20, v21, v22, v23, v24);
    v31 = v25;
    v32 = v26;
    v33 = v17;
    v34 = 0;
    *(_QWORD *)&v35 = MEMORY[0x1E0DEE9D8];
    *((_QWORD *)&v35 + 1) = MEMORY[0x1E0DEE9D8];
    MEMORY[0x1E0C80A78](v26);
    v30[2] = a4;
    v30[3] = a5;
    v30[4] = a6;
    v30[5] = a7;
    sub_1A5751B88(a1, a2, a3, (uint64_t)sub_1A5719550, (uint64_t)v30, (uint64_t)&v34);
    v27 = v34;
    v28 = v36;
    v29 = v32;
    *v36 = v33;
    v28[1] = v29;
    *((_BYTE *)v28 + 16) = v31 & 1;
    v28[3] = v27;
    *((_OWORD *)v28 + 2) = v35;
  }
}

void sub_1A571914C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v17;
  uint64_t v18;
  int v19;
  char v20;
  char v21;

  sub_1A5751974(a1, a2, a3);
  if (!v8)
  {
    swift_retain();
    *(_QWORD *)a8 = sub_1A5753728(a1, a2, a3, a4, a5, a6, a7);
    *(_QWORD *)(a8 + 8) = v17;
    *(_QWORD *)(a8 + 16) = v18;
    *(_DWORD *)(a8 + 24) = v19;
    *(_BYTE *)(a8 + 28) = v20;
    *(_BYTE *)(a8 + 29) = v21 & 1;
  }
}

void sub_1A57191EC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  if ((a4 & 1) == 0 || (sub_1A5751974(a1, a2, a3), !v8))
  {
    sub_1A5751898();
    if (!v8)
      sub_1A573EE0C(a1, a2, a3, a5, a6, a7, a8);
  }
}

unint64_t sub_1A57192A4(uint64_t *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v9;
  _QWORD *v11;

  if ((a4 & 1) == 0 || (sub_1A5751974((uint64_t)a1, a2, a3), !v4))
  {
    sub_1A5751898();
    if (!v4)
    {
      v9 = sub_1A5761038((unint64_t)a1, a2, a3, 1);
      v5 = v9;
      if ((v9 & 0x8000000000000000) != 0)
      {
        sub_1A56E9774();
        swift_allocError();
        *v11 = 0xD000000000000011;
        v11[1] = 0x80000001A5A0F840;
        v11[2] = 0xD000000000000020;
        v11[3] = 0x80000001A5A0F5E0;
        v11[4] = 167;
        swift_willThrow();
      }
      else
      {
        sub_1A575DEAC();
        sub_1A5751898();
        sub_1A575DBEC(a1, a2, a3);
      }
    }
  }
  return v5;
}

void sub_1A5719438(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void **v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;

  if (!__OFADD__(a2, 1))
  {
    if (a2 + 1 >= a3)
    {
      sub_1A5718F9C();
      OUTLINED_FUNCTION_21();
      *v9 = a3;
    }
    else
    {
      OUTLINED_FUNCTION_0_102();
      v5 = (void **)OUTLINED_FUNCTION_6_45();
      OUTLINED_FUNCTION_5_51(v5, v6, v7, v8, 0x2BuLL);
      if (!v3)
      {
        swift_release();
        goto LABEL_7;
      }
      swift_release();
      OUTLINED_FUNCTION_4_51();
    }
    swift_willThrow();
LABEL_7:
    OUTLINED_FUNCTION_2_70();
    return;
  }
  __break(1u);
}

uint64_t sub_1A57194D0()
{
  sub_1A5751898();
  return 0;
}

uint64_t sub_1A571950C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  result = sub_1A57194D0();
  if (!v1)
  {
    *a1 = result;
    a1[1] = v4;
    a1[2] = v5;
  }
  return result;
}

void sub_1A5719550(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v4;

  sub_1A571914C(a1, a2, a3, v4[2], v4[3], v4[4], v4[5], a4);
}

uint64_t sub_1A571956C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A57195B8(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A57191EC);
}

uint64_t sub_1A5719588@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A57195DC(a1);
}

uint64_t sub_1A571959C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A57195B8(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A57192A4);
}

uint64_t sub_1A57195B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v4;

  return a4(a1, a2, a3, *(unsigned __int8 *)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40), *(_QWORD *)(v4 + 48));
}

uint64_t sub_1A57195DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2)
  {
    *a1 = result;
    a1[1] = v5;
    a1[2] = v6;
  }
  return result;
}

uint64_t sub_1A5719624()
{
  swift_retain();
  swift_retain();
  swift_retain();
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t _s23AppendOrCatenateMessageOwxx()
{
  return sub_1A5719688();
}

uint64_t sub_1A5719688()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t _s23AppendOrCatenateMessageOwcp(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = *((_BYTE *)a2 + 56);
  sub_1A5719624();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_BYTE *)(a1 + 56) = v10;
  return a1;
}

uint64_t _s23AppendOrCatenateMessageOwca(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = *((_BYTE *)a2 + 56);
  sub_1A5719624();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_BYTE *)(a1 + 56) = v10;
  sub_1A5719688();
  return a1;
}

uint64_t _s23AppendOrCatenateMessageOwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  __int128 v5;

  v3 = *(_QWORD *)(a2 + 48);
  v4 = *(_BYTE *)(a2 + 56);
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = v3;
  *(_BYTE *)(a1 + 56) = v4;
  sub_1A5719688();
  return a1;
}

uint64_t _s23AppendOrCatenateMessageOwet(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 57))
    {
      v3 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16) >> 1;
      if (v2 > 0x80000000)
        v3 = ~(_DWORD)v2;
      else
        v3 = -1;
    }
  }
  else
  {
    v3 = -1;
  }
  return (v3 + 1);
}

double _s23AppendOrCatenateMessageOwst(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_BYTE *)(a1 + 56) = 0;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 57) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)a1 = 0;
      *(_QWORD *)(a1 + 8) = 0;
      *(_QWORD *)(a1 + 16) = 2 * -a2;
      result = 0.0;
      *(_OWORD *)(a1 + 24) = 0u;
      *(_OWORD *)(a1 + 40) = 0u;
      *(_BYTE *)(a1 + 56) = 0;
      return result;
    }
    *(_BYTE *)(a1 + 57) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1A5719908(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 56) >> 7;
}

uint64_t sub_1A5719914(uint64_t result)
{
  *(_BYTE *)(result + 56) &= ~0x80u;
  return result;
}

int8x16_t sub_1A5719924(int8x16_t *a1, char a2)
{
  __int8 v2;
  int8x16_t result;

  v2 = a1[3].i8[8] & 1 | (a2 << 7);
  a1[1].i64[0] &= 1uLL;
  result = vandq_s8(a1[2], (int8x16_t)vdupq_n_s64(0xFFFFFFFFFFFFFF8uLL));
  a1[2] = result;
  a1[3].i8[8] = v2;
  return result;
}

ValueMetadata *_s23AppendOrCatenateMessageOMa()
{
  return &_s23AppendOrCatenateMessageON;
}

_QWORD *sub_1A5719968@<X0>(uint64_t a1@<X8>)
{
  return sub_1A5718F68(a1);
}

uint64_t OUTLINED_FUNCTION_0_102()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_1_83()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_3_56()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_4_51()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  __int16 v3;
  char v4;
  uint64_t v5;

  *(_QWORD *)v0 = v1;
  *(_QWORD *)(v0 + 8) = v5;
  *(_DWORD *)(v0 + 16) = v2;
  *(_WORD *)(v0 + 20) = v3;
  *(_BYTE *)(v0 + 22) = v4;
}

void OUTLINED_FUNCTION_5_51(void **a1, uint64_t a2, uint64_t a3, char a4, unint64_t a5)
{
  sub_1A576B64C(a1, a2, a3, a4, a5, 0xE100000000000000, 0);
}

uint64_t OUTLINED_FUNCTION_6_45()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_8_40()
{
  return swift_retain();
}

void sub_1A5719A38()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  _BYTE v4[184];
  _BYTE v5[184];
  _BYTE v6[184];
  _BYTE v7[192];

  OUTLINED_FUNCTION_13_34();
  v2 = v1;
  sub_1A5719B0C();
  if (v0)
  {
    OUTLINED_FUNCTION_30();
    v3 = OUTLINED_FUNCTION_3_56();
    sub_1A5753D18(v3);

    sub_1A55DBFD8(v5, v4);
    sub_1A55DBFD8(v4, v7);
  }
  else
  {
    sub_1A55DC3E0(v6, v4);
    sub_1A55DC3E0(v4, v5);
    nullsub_1(v5);
    sub_1A55DBFD8(v5, v7);
  }
  sub_1A55DBFD8(v7, v2);
  OUTLINED_FUNCTION_32_17();
}

uint64_t *sub_1A5719B0C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  uint64_t *v14;
  uint64_t *result;
  uint64_t v16;
  uint64_t v17;
  id v18[8];
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21[2];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[23];
  _BYTE v27[184];

  OUTLINED_FUNCTION_65_7();
  v22 = v2;
  v23 = v3;
  v24 = v4;
  v25 = v5;
  v19 = (uint64_t)sub_1A571EAF8;
  v20 = v21;
  OUTLINED_FUNCTION_42_10();
  OUTLINED_FUNCTION_27_18();
  result = sub_1A576F5C8(v14, v6, v7, v8, v9, v10, v11, v12, v13, 0x80000001A5A0F5E0, 56, v16, v17, (char)sub_1A571EB28, (uint64_t)v18, (uint64_t)v18[0], (uint64_t)v18[1], (uint64_t)v18[2], (uint64_t)v18[3],
             (uint64_t)v18[4],
             v18[5],
             (uint64_t)v18[6],
             (uint64_t)v18[7],
             v19,
             (uint64_t)v20,
             v21[0],
             v21[1],
             v22,
             v23,
             v24,
             v25,
             v26[0],
             v26[1]);
  if (!v1)
  {
    sub_1A55DC3E0(v27, v26);
    return (uint64_t *)sub_1A55DC3E0(v26, v0);
  }
  return result;
}

void sub_1A5719BBC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  uint64_t v8;
  _BYTE v17[184];
  _BYTE __src[176];

  sub_1A5751898();
  if (!v8)
  {
    sub_1A5719CD4(a1, a2, a3, a4, a5, a6, a7);
    sub_1A5751898();
    memcpy(v17, __src, 0xB0uLL);
    sub_1A571EE28((uint64_t)v17);
    sub_1A55DC3E0(v17, a8);
  }
}

_QWORD *sub_1A5719CD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *result;
  _BYTE v9[16];
  _QWORD *(*v10)();
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[16];
  uint64_t (*v18)();
  char *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[16];
  double (*v26)();
  char *v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[22];

  v29 = a4;
  v30 = a5;
  v31 = a6;
  v32 = a7;
  v26 = sub_1A571EE30;
  v27 = &v28;
  v21 = a4;
  v22 = a5;
  v23 = a6;
  v24 = a7;
  v18 = sub_1A571EE5C;
  v19 = &v20;
  v13 = a4;
  v14 = a5;
  v15 = a6;
  v16 = a7;
  v10 = sub_1A571EE74;
  v11 = &v12;
  result = sub_1A573EF20(v33, sub_1A571EE48, v25, sub_1A571EE48, v17, sub_1A571EE48, v9, a1, a2, a3, 0xD000000000000020, 0x80000001A5A0F5E0, 438);
  if (!v7)
    return OUTLINED_FUNCTION_81_5((uint64_t)result, v33);
  return result;
}

void sub_1A5719DB8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  uint64_t v8;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_1A5751898();
  if (!v8)
  {
    swift_retain();
    sub_1A5753DB4(&v31, a1, a2, a3, a4, a5, a6, a7);
    v17 = v31;
    v21 = v32;
    v18 = v33;
    v24 = v34;
    v25 = v35;
    v26 = v36;
    v27 = v37;
    v28 = v38;
    v29 = v39;
    v30 = v40;
    v46 = v41;
    v19 = v44;
    v22 = v43;
    v23 = v42;
    v20 = v45;
    sub_1A5751898();
    v31 = v17;
    v32 = v21;
    v33 = v18;
    v34 = v24;
    v35 = v25;
    v36 = v26;
    v37 = v27;
    v38 = v28;
    v39 = v29;
    v40 = v30;
    v41 = v46;
    v42 = v23;
    v43 = v22;
    v44 = v19;
    v45 = v20;
    sub_1A571EB40((uint64_t)&v31);
    sub_1A55DC3E0(&v31, a8);
  }
}

_QWORD *sub_1A5719F8C@<X0>(_QWORD *(*a1)(_QWORD *__return_ptr)@<X3>, void *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  _QWORD v5[23];

  result = a1(v5);
  if (!v2)
    return sub_1A55DC3E0(v5, a2);
  return result;
}

void sub_1A5719FD4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v4;
  int64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  BOOL v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int v35;
  uint64_t v36;
  int v37;
  void *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t *v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unsigned int v131;
  unsigned int v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  uint64_t v136;
  unsigned int v137;
  unsigned int v138;
  unsigned __int16 v139;
  unsigned __int8 v140;
  uint64_t v141;
  uint64_t v142;
  _BYTE v143[24];
  uint64_t v144;
  uint64_t v145;
  unsigned int v146;
  unsigned int v147;
  unsigned __int16 v148;
  unsigned __int8 v149;
  uint64_t v150;
  uint64_t v151;
  _BYTE v152[24];
  uint64_t v153;

  sub_1A5751898();
  if (v4)
    return;
  v9 = a2 + 1;
  if (__OFADD__(a2, 1))
    goto LABEL_100;
  if (v9 >= a3)
  {
    sub_1A5718F9C();
    OUTLINED_FUNCTION_21();
    *v69 = a3;
    goto LABEL_80;
  }
  v107 = a2;
  v108 = a2 + 1;
  v109 = a3;
  v110 = a4;
  v125 = 0;
  v128 = 0;
  v10 = *(_DWORD *)(a1 + 8);
  v115 = 1;
  while (2)
  {
    v11 = *(_QWORD *)a1;
    v12 = *(unsigned int *)(a1 + 16);
    v131 = v10;
    v130 = *(unsigned int *)(a1 + 12);
    v121 = v10;
    v13 = v10 | (unint64_t)(v130 << 32);
    v126 = *(unsigned __int16 *)(a1 + 20);
    v127 = *(unsigned __int8 *)(a1 + 22);
    v106 = v9 & 0xFF00000000000000 | v12 & 0xFF000000FFFFFFFFLL | (v126 << 32) & 0xFF00FFFFFFFFFFFFLL | (v127 << 48);
    ByteBufferView.init(_:)(*(_QWORD *)a1, v13, v106, (uint64_t)&v136);
    v15 = v141;
    v14 = v142;
    if (v141 == v142)
    {
LABEL_79:
      OUTLINED_FUNCTION_87();
      sub_1A553E5DC((uint64_t)&v136);
      sub_1A571EA80();
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_8_23();
      v70 = OUTLINED_FUNCTION_68_4();
      *(_QWORD *)a1 = v11;
      *(_DWORD *)(a1 + 8) = v131;
      *(_DWORD *)(a1 + 12) = v130;
      OUTLINED_FUNCTION_43_9(v70, v71, v72, v73, v74, v75, v76, v77, v105, v106, v107, v108, v109, (uint64_t)v110, v111, v112, v113, (uint64_t)v114, v115,
        v116,
        v117,
        v118,
        v119,
        v120,
        v121,
        v123,
        v125,
        v126,
        SHIDWORD(v126),
        v127);
      goto LABEL_80;
    }
    v133 = v11;
    v16 = v137;
    v17 = v138 - v137;
    if (v138 < v137)
      goto LABEL_102;
    v18 = v12;
    v119 = v127 << 48;
    v120 = v126 << 32;
    v19 = v136;
    v20 = v140 | ((unint64_t)v139 << 8);
    OUTLINED_FUNCTION_176();
    v21 = *(_QWORD *)(v19 + 24) + v20 + v16;
    v22 = v18;
    v11 = v133;
    while (1)
    {
      if (v15 >= v14)
      {
        __break(1u);
LABEL_97:
        __break(1u);
LABEL_98:
        __break(1u);
LABEL_99:
        __break(1u);
LABEL_100:
        __break(1u);
LABEL_101:
        __break(1u);
LABEL_102:
        __break(1u);
LABEL_103:
        __break(1u);
LABEL_104:
        __break(1u);
LABEL_105:
        __break(1u);
LABEL_106:
        __break(1u);
LABEL_107:
        __break(1u);
LABEL_108:
        __break(1u);
LABEL_109:
        __break(1u);
LABEL_110:
        __break(1u);
LABEL_111:
        __break(1u);
LABEL_112:
        __break(1u);
LABEL_113:
        __break(1u);
LABEL_114:
        __break(1u);
LABEL_115:
        __break(1u);
LABEL_116:
        __break(1u);
LABEL_117:
        __break(1u);
LABEL_118:
        __break(1u);
LABEL_119:
        __break(1u);
        return;
      }
      v23 = v15 - v16;
      if (__OFSUB__(v15, v16))
        goto LABEL_97;
      if (v23 < 0)
        goto LABEL_98;
      if (v23 >= v17)
        goto LABEL_99;
      v24 = *(unsigned __int8 *)(v21 + v23);
      v25 = v24 > 0x29 || ((1 << v24) & 0x30400000000) == 0;
      if (!v25 || v24 == 123)
        break;
      if (v14 == ++v15)
        goto LABEL_79;
    }
    OUTLINED_FUNCTION_87();
    sub_1A553E5DC((uint64_t)&v136);
    v26 = v112 & 0xFF00000000000000 | v18 | v120 | v119;
    ByteBufferView.init(_:)(v133, v13, v26, (uint64_t)v143);
    OUTLINED_FUNCTION_1_2();
    sub_1A553E5DC((uint64_t)v143);
    v27 = __OFSUB__(v15, v144);
    v28 = v15 - v144;
    if (v27)
      goto LABEL_108;
    v29 = v111 & 0xFF00000000000000 | v18 | v120 | v119;
    OUTLINED_FUNCTION_1_2();
    v30 = ByteBuffer.getSlice(at:length:)(v121, v28, v133, v13, v29);
    v32 = v31;
    OUTLINED_FUNCTION_2_4();
    v33 = v125;
    if (!v30)
      goto LABEL_119;
    v111 = v29;
    v112 = v26;
    OUTLINED_FUNCTION_2_4();
    OUTLINED_FUNCTION_19_0();
    v34 = v131 + v28;
    if (__CFADD__(v131, (_DWORD)v28))
      goto LABEL_109;
    *(_DWORD *)(a1 + 8) = v34;
    v35 = HIDWORD(v32) - v32;
    if (HIDWORD(v32) < v32)
      goto LABEL_110;
    if (v130 < v34)
      goto LABEL_111;
    if ((_DWORD)v130 == (_DWORD)v34)
      goto LABEL_82;
    OUTLINED_FUNCTION_176();
    v10 = v34 + 1;
    if ((_DWORD)v34 == -1)
      goto LABEL_112;
    v36 = v128 + v35 + 1;
    v37 = *(unsigned __int8 *)(*(_QWORD *)(v133 + 24) + (v127 | (v126 << 8)) + v34);
    *(_DWORD *)(a1 + 8) = v10;
    switch(v37)
    {
      case '"':
        v45 = 1;
        goto LABEL_38;
      case '(':
        v27 = __OFADD__(v115++, 1);
        v46 = v123;
        if (v27)
          goto LABEL_115;
        goto LABEL_45;
      case ')':
        if (__OFSUB__(v115, 1))
          goto LABEL_116;
        v46 = v123;
        if (v115 - 1 <= 0)
        {
          sub_1A569F978(&v134);
          sub_1A55DBFD8(&v134, v110);
          return;
        }
        --v115;
LABEL_45:
        v45 = 0;
        goto LABEL_46;
    }
    if (v37 != 123)
    {
LABEL_89:
      v134 = 0;
      v135 = 0xE000000000000000;
      sub_1A594C720();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_39_16();
      sub_1A594CC9C();
      OUTLINED_FUNCTION_62_7();
      OUTLINED_FUNCTION_17();
      sub_1A594B5F8();
      v86 = v134;
      v87 = v135;
      sub_1A56E9774();
      OUTLINED_FUNCTION_21();
      *v82 = v86;
      v82[1] = v87;
      v82[2] = 0xD000000000000020;
      v82[3] = 0x80000001A5A0F5E0;
      v83 = 118;
      goto LABEL_90;
    }
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_76_6(a1, v108, v109, &v134);
    v38 = (void *)v109;
    if (v109)
    {
      v88 = OUTLINED_FUNCTION_68_4();
      *(_QWORD *)a1 = v133;
      *(_DWORD *)(a1 + 8) = v10;
      *(_DWORD *)(a1 + 12) = v130;
      OUTLINED_FUNCTION_43_9(v88, v89, v90, v91, v92, v93, v94, v95, v105, v106, v107, v108, v109, (uint64_t)v110, v111, v112, v113, (uint64_t)v114, v115,
        v116,
        v117,
        v118,
        v119,
        v120,
        v121,
        v123,
        v125,
        v126,
        SHIDWORD(v126),
        v127);
LABEL_95:
      swift_willThrow();
      sub_1A56E9774();
      v100 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_29_17(v100, v101);
      OUTLINED_FUNCTION_15_35(v102, v103);
      OUTLINED_FUNCTION_11_20(v104, 103);

      return;
    }
    OUTLINED_FUNCTION_23();
    v39 = v134;
    if ((v134 & 0x8000000000000000) != 0)
    {
      sub_1A56E9774();
      v38 = (void *)OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_29_17((uint64_t)v38, v96);
      v97[2] = v98;
      v97[3] = 0x80000001A5A0F5E0;
      v97[4] = 167;
      goto LABEL_95;
    }
    v40 = (199999 - (v128 + v35)) & ~((199999 - (v128 + v35)) >> 63);
    if (v40 < v134)
    {
      sub_1A571EABC();
      v38 = (void *)OUTLINED_FUNCTION_21();
      *v99 = v39;
      v99[1] = v40;
      goto LABEL_95;
    }
    v129 = v128 + v35 + 1;
    OUTLINED_FUNCTION_1_2();
    sub_1A576B64C((void **)a1, v108, v109, 0, 0x7DuLL, 0xE100000000000000, 0);
    v33 = 0;
    OUTLINED_FUNCTION_2_4();
    sub_1A575DBEC((uint64_t *)a1, v107, v109);
    v41 = *(_QWORD *)a1;
    v43 = *(unsigned int *)(a1 + 8);
    v42 = *(unsigned int *)(a1 + 12);
    v22 = *(unsigned int *)(a1 + 16);
    v126 = *(unsigned __int16 *)(a1 + 20);
    v127 = *(unsigned __int8 *)(a1 + 22);
    OUTLINED_FUNCTION_1_2();
    v44 = ByteBuffer.getSlice(at:length:)(v43, v39, v41, v43 | (v42 << 32), v105 & 0xFF00000000000000 | v22 | (v126 << 32) | (v127 << 48));
    OUTLINED_FUNCTION_2_4();
    if (!v44)
      goto LABEL_82;
    v133 = v41;
    v105 = v105 & 0xFF00000000000000 | v22 | (v126 << 32) | (v127 << 48);
    swift_release();
    v10 = v43 + v39;
    if (__CFADD__((_DWORD)v43, (_DWORD)v39))
      goto LABEL_117;
    v45 = 0;
    *(_DWORD *)(a1 + 8) = v10;
    v130 = v42;
    v36 = v129;
LABEL_38:
    v46 = v123;
LABEL_46:
    if (v36 >= 200000)
      goto LABEL_83;
    v118 = a1;
    v119 = v130 << 32;
    v122 = v126 << 32;
    v120 = v127 << 48;
    v113 = v127 | (v126 << 8);
    v114 = (_QWORD *)(v133 + 24);
LABEL_48:
    v125 = v33;
    v128 = v36;
    if ((v45 & 1) == 0)
    {
      v123 = v46;
      v9 = v106;
      continue;
    }
    break;
  }
  v132 = v10;
  v47 = v10;
  v48 = v119 | v10;
  v49 = v133;
  v124 = v46 & 0xFF00000000000000 | v22 | v122 | v120;
  ByteBufferView.init(_:)(v133, v48, v124, (uint64_t)&v145);
  v51 = v150;
  v50 = v151;
  if (v150 == v151)
  {
LABEL_78:
    OUTLINED_FUNCTION_87();
    sub_1A553E5DC((uint64_t)&v145);
    sub_1A571EA80();
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_8_23();
    swift_release();
    *(_QWORD *)v118 = v49;
    *(_DWORD *)(v118 + 8) = v132;
    *(_DWORD *)(v118 + 12) = v130;
    *(_DWORD *)(v118 + 16) = v22;
    *(_WORD *)(v118 + 20) = v126;
    *(_BYTE *)(v118 + 22) = v127;
    goto LABEL_80;
  }
  v52 = v146;
  v53 = v147 - v146;
  if (v147 < v146)
    goto LABEL_101;
  v54 = v145;
  v55 = v22;
  v56 = v149 | ((unint64_t)v148 << 8);
  OUTLINED_FUNCTION_176();
  v57 = *(_QWORD *)(v54 + 24);
  v49 = v133;
  v58 = v56 + v52;
  v22 = v55;
  v59 = v57 + v58;
  while (1)
  {
    if (v51 >= v50)
    {
      __break(1u);
LABEL_86:
      __break(1u);
LABEL_87:
      __break(1u);
LABEL_88:
      __break(1u);
      goto LABEL_89;
    }
    v60 = v51 - v52;
    if (__OFSUB__(v51, v52))
      goto LABEL_86;
    if (v60 < 0)
      goto LABEL_87;
    if (v60 >= v53)
      goto LABEL_88;
    v61 = *(unsigned __int8 *)(v59 + v60);
    if (v61 == 34 || v61 == 92)
      break;
    if (v50 == ++v51)
      goto LABEL_78;
  }
  OUTLINED_FUNCTION_87();
  sub_1A553E5DC((uint64_t)&v145);
  ByteBufferView.init(_:)(v133, v48, v117 & 0xFF00000000000000 | v55 | v122 | v120, (uint64_t)v152);
  OUTLINED_FUNCTION_1_2();
  sub_1A553E5DC((uint64_t)v152);
  v27 = __OFSUB__(v51, v153);
  v62 = v51 - v153;
  if (v27)
    goto LABEL_103;
  OUTLINED_FUNCTION_1_2();
  v116 = v116 & 0xFF00000000000000 | v55 | v122 | v120;
  v63 = ByteBuffer.getSlice(at:length:)(v47, v62, v133, v48, v116);
  v65 = v64;
  OUTLINED_FUNCTION_2_4();
  v33 = v125;
  if (!v63)
    goto LABEL_118;
  v117 = v117 & 0xFF00000000000000 | v55 | v122 | v120;
  OUTLINED_FUNCTION_2_4();
  OUTLINED_FUNCTION_19_0();
  v66 = v132 + v62;
  a1 = v118;
  if (__CFADD__(v132, (_DWORD)v62))
    goto LABEL_104;
  *(_DWORD *)(v118 + 8) = v66;
  if (HIDWORD(v65) < v65)
    goto LABEL_105;
  if (v130 < v66)
    goto LABEL_106;
  if ((_DWORD)v130 == (_DWORD)v66)
    goto LABEL_82;
  OUTLINED_FUNCTION_176();
  v10 = v66 + 1;
  if ((_DWORD)v66 == -1)
    goto LABEL_107;
  v36 = v128 + (HIDWORD(v65) - v65) + 1;
  v67 = *(unsigned __int8 *)(*v114 + v113 + v66);
  *(_DWORD *)(v118 + 8) = v10;
  if (v67 == 92)
  {
    if (v130 < v10)
      goto LABEL_113;
    v46 = v124;
    if ((_DWORD)v130 != v10)
    {
      if (__CFADD__(v10++, 1))
        goto LABEL_114;
      *(_DWORD *)(v118 + 8) = v10;
      v36 = v128 + (HIDWORD(v65) - v65) + 2;
      v45 = 1;
      goto LABEL_74;
    }
LABEL_82:
    sub_1A571EA80();
    OUTLINED_FUNCTION_21();
    goto LABEL_80;
  }
  if (v67 != 34)
  {
    v134 = 0;
    v135 = 0xE000000000000000;
    sub_1A594C720();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_39_16();
    sub_1A594CC9C();
    OUTLINED_FUNCTION_62_7();
    OUTLINED_FUNCTION_17();
    sub_1A594B5F8();
    v84 = v134;
    v85 = v135;
    sub_1A56E9774();
    OUTLINED_FUNCTION_21();
    *v82 = v84;
    v82[1] = v85;
    v82[2] = 0xD000000000000020;
    v82[3] = 0x80000001A5A0F5E0;
    v83 = 135;
    goto LABEL_90;
  }
  v45 = 0;
  v46 = v124;
LABEL_74:
  if (v36 < 200000)
    goto LABEL_48;
LABEL_83:
  sub_1A56E9774();
  v78 = OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_29_17(v78, v79);
  OUTLINED_FUNCTION_15_35(v80, v81);
  v83 = 86;
LABEL_90:
  v82[4] = v83;
LABEL_80:
  swift_willThrow();
}

void sub_1A571AAD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_42_10();
  OUTLINED_FUNCTION_64_6();
  OUTLINED_FUNCTION_80_3();
  OUTLINED_FUNCTION_12_32();
  sub_1A576F708(v0, v1, v2, v3);
}

unint64_t sub_1A571AB4C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t result;
  _QWORD *v5;

  result = sub_1A5761038(a1, a2, a3, 1);
  if (!v3 && (result & 0x8000000000000000) != 0)
  {
    sub_1A56E9774();
    OUTLINED_FUNCTION_21();
    *v5 = 0xD000000000000011;
    v5[1] = 0x80000001A5A0F840;
    v5[2] = 0xD000000000000020;
    v5[3] = 0x80000001A5A0F5E0;
    return OUTLINED_FUNCTION_11_20((uint64_t)v5, 167);
  }
  return result;
}

void sub_1A571ABEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_64_6();
  OUTLINED_FUNCTION_80_3();
  OUTLINED_FUNCTION_12_32();
  sub_1A576F6DC(v6, v7, v8, v9);
  if (!v4)
  {
    v13 = v10;
    v14 = v11;
    v15 = v12;
    v16 = HIBYTE(v12) & 1;
    sub_1A5691E18(v10, v11, v12, HIBYTE(v12) & 1);
    sub_1A57161DC();
    v17 = *(_QWORD *)(*a4 + 16);
    sub_1A571638C(v17);
    v18 = *a4;
    *(_QWORD *)(v18 + 16) = v17 + 1;
    v19 = v18 + 24 * v17;
    *(_QWORD *)(v19 + 32) = v13;
    *(_QWORD *)(v19 + 40) = v14;
    OUTLINED_FUNCTION_41_10(v19);
    *(_BYTE *)(v20 + 55) = v16;
    sub_1A56974C4(v13, v14, v15, v16);
    *a4 = v18;
  }
}

void sub_1A571AD04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  unint64_t v30;
  int v31;
  uint64_t v32;
  void **v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t *v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t *v54;
  uint64_t v55;
  int v56;
  int v57;
  unsigned int v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t *v61;
  int v62;
  uint64_t *v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  _QWORD *v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  unsigned int v122;
  uint64_t v123;
  _QWORD *v124;
  unint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t v140;
  _QWORD *v141;
  _QWORD *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char v152;
  __int16 v153;
  __int16 v154;
  int v155;
  int v156;
  uint64_t *v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  uint64_t i;
  int v162;
  int v163;
  int v164;
  uint64_t *v165;
  unint64_t v166;
  uint64_t v167;
  uint64_t v168;
  unsigned int v169;
  unsigned int v170;
  int v171;
  unsigned __int16 v172;
  unsigned __int8 v173;
  uint64_t v174;
  int v175;
  int v176;
  int v177;
  __int16 v178;
  char v179;
  uint64_t v180;
  unint64_t v181;

  v167 = a6;
  OUTLINED_FUNCTION_77_5();
  sub_1A5751898();
  if (!v8)
  {
    sub_1A571BB40();
    v149 = a8;
    v150 = a7;
    if (__OFADD__(a2, 1))
    {
      __break(1u);
LABEL_88:
      __break(1u);
LABEL_89:
      __break(1u);
LABEL_90:
      __break(1u);
LABEL_91:
      __break(1u);
    }
    else
    {
      v16 = *(_QWORD *)a1;
      v17 = *(_DWORD *)(a1 + 8);
      OUTLINED_FUNCTION_56_11();
      if (a2 + 1 < a3)
      {
        HIDWORD(v148) = v17;
        OUTLINED_FUNCTION_87();
        v18 = OUTLINED_FUNCTION_44_9();
        sub_1A576B3AC(v18);
        v28 = a2 + 2;
        v146 = a2 + 3;
        v137 = a2 + 4;
        v144 = a2 + 1;
        v134 = a2 + 5;
        v131 = (uint64_t)"erContext";
        v132 = (uint64_t)"SHSERVICE response type: ";
        v128 = 0x80000001A5A0F5E0;
        v129 = 0x80000001A5A0F840;
        v127 = 0x80000001A5A0F920;
        v158 = a3;
        v145 = a2;
        v151 = a5;
        v147 = a4;
        for (i = a2 + 2; ; v28 = i)
        {
          v157 = (uint64_t *)&v126;
          v29 = (uint64_t *)&v126;
          v30 = *(_QWORD *)a1;
          v31 = *(_DWORD *)(a1 + 16);
          v163 = *(unsigned __int16 *)(a1 + 20);
          v164 = v31;
          v162 = *(unsigned __int8 *)(a1 + 22);
          v166 = v30;
          v160 = v16;
          if (v28 >= a3)
          {
            sub_1A5718F9C();
            OUTLINED_FUNCTION_21();
            *v36 = a3;
            OUTLINED_FUNCTION_155();
            swift_retain();
          }
          else
          {
            v165 = (uint64_t *)&v126;
            OUTLINED_FUNCTION_40_15();
            v32 = v146;
            if (v146 >= a3)
            {
              sub_1A5718F9C();
              OUTLINED_FUNCTION_21();
              *v37 = a3;
              OUTLINED_FUNCTION_155();
              swift_retain();
              swift_retain();
            }
            else
            {
              LODWORD(v159) = v16;
              OUTLINED_FUNCTION_87();
              OUTLINED_FUNCTION_17_0();
              swift_retain();
              v33 = (void **)OUTLINED_FUNCTION_44_9();
              OUTLINED_FUNCTION_69_4(v33, v34, v35, 0, 0x4C494EuLL, 0xE300000000000000);
              if (!v32)
              {
                OUTLINED_FUNCTION_23();
                OUTLINED_FUNCTION_149_0();
                v50 = 0;
                v51 = 0;
                v52 = 0;
                v53 = 0;
                goto LABEL_63;
              }
              OUTLINED_FUNCTION_5_52();
              *(_QWORD *)a1 = v30;
              v16 = v159;
              OUTLINED_FUNCTION_60_10();
            }
            OUTLINED_FUNCTION_10_37();
            OUTLINED_FUNCTION_5_52();
            OUTLINED_FUNCTION_26_15();
            a5 = v151;
            v29 = v165;
            v30 = v166;
          }
          OUTLINED_FUNCTION_10_37();
          OUTLINED_FUNCTION_6_46();
          v38 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
          v39 = OUTLINED_FUNCTION_14_29();
          v159 = v38;
          if (v39)
          {
            OUTLINED_FUNCTION_19_26();
          }
          else
          {
            OUTLINED_FUNCTION_7_35();
            OUTLINED_FUNCTION_6_46();
            OUTLINED_FUNCTION_58_7();
            if ((OUTLINED_FUNCTION_17_31() & 1) == 0)
            {
              OUTLINED_FUNCTION_7_35();
              goto LABEL_48;
            }
            OUTLINED_FUNCTION_19_26();
            OUTLINED_FUNCTION_57_11();
            a5 = v151;
          }
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_9_2();
          OUTLINED_FUNCTION_7_35();
          if (i < a3)
            break;
          sub_1A5718F9C();
          OUTLINED_FUNCTION_21();
          *v48 = a3;
          v30 = v166;
LABEL_47:
          OUTLINED_FUNCTION_10_37();
LABEL_48:
          OUTLINED_FUNCTION_5_52();
          *(_QWORD *)a1 = v30;
          OUTLINED_FUNCTION_28_18();
          OUTLINED_FUNCTION_10_37();
          v165 = 0;
          OUTLINED_FUNCTION_6_46();
          if ((OUTLINED_FUNCTION_14_29() & 1) != 0)
          {
            OUTLINED_FUNCTION_19_26();
          }
          else
          {
            OUTLINED_FUNCTION_7_35();
            OUTLINED_FUNCTION_6_46();
            OUTLINED_FUNCTION_58_7();
            if ((OUTLINED_FUNCTION_17_31() & 1) == 0)
            {
              OUTLINED_FUNCTION_7_35();
              goto LABEL_58;
            }
            OUTLINED_FUNCTION_19_26();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_7_35();
          v89 = v158;
          v90 = i;
          if (i >= v158)
          {
            sub_1A5718F9C();
            OUTLINED_FUNCTION_21();
            *v93 = v89;
            OUTLINED_FUNCTION_30();
          }
          else
          {
            OUTLINED_FUNCTION_87();
            v91 = v90;
            v92 = v165;
            sub_1A576AF5C(a1, v91, v89, 1, (unint64_t *)&v168);
            if (v92)
            {
              OUTLINED_FUNCTION_5_52();
              OUTLINED_FUNCTION_46_9();
            }
            else
            {
              OUTLINED_FUNCTION_48();
              v50 = v168;
              if ((v168 & 0x8000000000000000) == 0)
              {
                OUTLINED_FUNCTION_48();
                v51 = 0;
                v52 = 0;
                v53 = 1;
                goto LABEL_63;
              }
              sub_1A56E9774();
              OUTLINED_FUNCTION_21();
              v101 = v131 | 0x8000000000000000;
              *v102 = 0xD000000000000011;
              v102[1] = v101;
              v103 = v132 | 0x8000000000000000;
              v102[2] = 0xD000000000000020;
              v102[3] = v103;
              v102[4] = 167;
            }
          }
          swift_willThrow();
          OUTLINED_FUNCTION_5_52();
          OUTLINED_FUNCTION_46_9();
          OUTLINED_FUNCTION_10_37();
          v165 = 0;
          a3 = v158;
          v16 = v160;
LABEL_58:
          OUTLINED_FUNCTION_6_46();
          if ((OUTLINED_FUNCTION_14_29() & 1) == 0)
          {
            OUTLINED_FUNCTION_59_8();
            OUTLINED_FUNCTION_7_35();
            goto LABEL_6;
          }
          OUTLINED_FUNCTION_19_26();
          OUTLINED_FUNCTION_5_52();
          OUTLINED_FUNCTION_73_3();
          v94 = v151;
          swift_bridgeObjectRelease();
          *(_QWORD *)a1 = v166;
          OUTLINED_FUNCTION_28_18();
          swift_retain();
          v95 = v165;
          sub_1A571AD04(a1);
          if (v95)
          {
            swift_release();
            OUTLINED_FUNCTION_7_35();
            v165 = 0;
            goto LABEL_6;
          }
          swift_release();
          OUTLINED_FUNCTION_7_35();
          OUTLINED_FUNCTION_149_0();
          a5 = v94;
LABEL_68:
          v16 = *(_QWORD *)a1;
          HIDWORD(v148) = *(_DWORD *)(a1 + 8);
          OUTLINED_FUNCTION_56_11();
          OUTLINED_FUNCTION_87();
          sub_1A576B3AC(a1);
        }
        v165 = v29;
        v40 = v167;
        v41 = *(_QWORD *)a1;
        v42 = *(_QWORD *)(a1 + 8);
        v43 = *(_DWORD *)(a1 + 16);
        LODWORD(v140) = *(unsigned __int16 *)(a1 + 20);
        HIDWORD(v140) = v43;
        HIDWORD(v139) = *(unsigned __int8 *)(a1 + 22);
        v44 = (_QWORD *)OUTLINED_FUNCTION_24_21();
        v138 = (uint64_t *)&v126;
        v44[2] = a5;
        v44[3] = v40;
        v45 = v149;
        v46 = v150;
        v44[4] = v150;
        v44[5] = v45;
        v142 = v44;
        v47 = (_QWORD *)OUTLINED_FUNCTION_24_21();
        v47[2] = a5;
        v47[3] = v40;
        v47[4] = v46;
        v47[5] = v45;
        v141 = v47;
        OUTLINED_FUNCTION_87();
        v143 = v41;
        if (v146 >= a3)
        {
          sub_1A5718F9C();
          OUTLINED_FUNCTION_21();
          *v49 = a3;
          OUTLINED_FUNCTION_87();
          swift_retain();
        }
        else
        {
          OUTLINED_FUNCTION_40_15();
          if (v137 < a3)
          {
            OUTLINED_FUNCTION_87();
            OUTLINED_FUNCTION_87();
            swift_retain();
            OUTLINED_FUNCTION_44_9();
            sub_1A5748B7C();
            OUTLINED_FUNCTION_108_0();
            OUTLINED_FUNCTION_149_0();
            v64 = v168;
            v65 = v169;
            v66 = v170;
            LODWORD(v67) = v171;
            v68 = v172;
            v69 = v173;
            goto LABEL_41;
          }
          sub_1A5718F9C();
          OUTLINED_FUNCTION_21();
          *v54 = a3;
          OUTLINED_FUNCTION_87();
          OUTLINED_FUNCTION_155();
          swift_retain();
          OUTLINED_FUNCTION_10_37();
          OUTLINED_FUNCTION_5_52();
          OUTLINED_FUNCTION_26_15();
        }
        OUTLINED_FUNCTION_10_37();
        OUTLINED_FUNCTION_6_46();
        if ((OUTLINED_FUNCTION_17_31() & 1) != 0)
        {
          OUTLINED_FUNCTION_19_26();
        }
        else
        {
          OUTLINED_FUNCTION_7_35();
          OUTLINED_FUNCTION_6_46();
          OUTLINED_FUNCTION_58_7();
          if ((OUTLINED_FUNCTION_17_31() & 1) == 0)
          {
            OUTLINED_FUNCTION_7_35();
            swift_release();
            OUTLINED_FUNCTION_35_14();
            OUTLINED_FUNCTION_108_0();
            v30 = v166;
LABEL_46:
            OUTLINED_FUNCTION_35_14();
            OUTLINED_FUNCTION_5_52();
            *(_QWORD *)a1 = v143;
            *(_QWORD *)(a1 + 8) = v42;
            *(_DWORD *)(a1 + 16) = HIDWORD(v140);
            *(_WORD *)(a1 + 20) = v140;
            *(_BYTE *)(a1 + 22) = BYTE4(v139);
            goto LABEL_47;
          }
          OUTLINED_FUNCTION_19_26();
          OUTLINED_FUNCTION_57_11();
        }
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_9_2();
        OUTLINED_FUNCTION_7_35();
        if (v146 >= a3)
        {
          sub_1A5718F9C();
          OUTLINED_FUNCTION_21();
          *v61 = a3;
          v30 = v166;
LABEL_45:
          OUTLINED_FUNCTION_10_37();
          swift_release();
          OUTLINED_FUNCTION_35_14();
          OUTLINED_FUNCTION_108_0();
          goto LABEL_46;
        }
        v55 = *(_QWORD *)a1;
        v56 = *(_DWORD *)(a1 + 8);
        v57 = *(_DWORD *)(a1 + 12);
        v58 = *(unsigned __int16 *)(a1 + 20);
        v59 = *(unsigned __int8 *)(a1 + 22);
        v30 = v166;
        LODWORD(v136) = *(_DWORD *)(a1 + 16);
        HIDWORD(v136) = v57;
        v135 = __PAIR64__(v58, v59);
        if (v137 >= a3)
        {
          v62 = v56;
          sub_1A5718F9C();
          OUTLINED_FUNCTION_21();
          *v63 = a3;
          OUTLINED_FUNCTION_78_6();
          OUTLINED_FUNCTION_30();
LABEL_44:
          OUTLINED_FUNCTION_10_37();
          OUTLINED_FUNCTION_35_14();
          v80 = OUTLINED_FUNCTION_5_52();
          *(_QWORD *)a1 = v55;
          v81 = HIDWORD(v136);
          *(_DWORD *)(a1 + 8) = v62;
          *(_DWORD *)(a1 + 12) = v81;
          OUTLINED_FUNCTION_16_28(v80, v82, v83, v84, v85, v86, v87, v88, v126, v127, v128, v129, v130, v131, v132, v133, v134, v135, SWORD1(v135),
            SWORD2(v135),
            v136);
          goto LABEL_45;
        }
        HIDWORD(v133) = v56;
        v60 = v134;
        v130 = v55;
        if (v134 >= a3)
        {
          sub_1A5718F9C();
          OUTLINED_FUNCTION_21();
          *v70 = a3;
          OUTLINED_FUNCTION_87();
          OUTLINED_FUNCTION_78_6();
          OUTLINED_FUNCTION_10_37();
LABEL_43:
          v71 = OUTLINED_FUNCTION_5_52();
          v55 = v130;
          *(_QWORD *)a1 = v130;
          v62 = HIDWORD(v133);
          v72 = HIDWORD(v136);
          *(_DWORD *)(a1 + 8) = HIDWORD(v133);
          *(_DWORD *)(a1 + 12) = v72;
          OUTLINED_FUNCTION_16_28(v71, v73, v74, v75, v76, v77, v78, v79, v126, v127, v128, v129, v130, v131, v132, v133, v134, v135, SWORD1(v135),
            SWORD2(v135),
            v136);
          goto LABEL_44;
        }
        swift_retain_n();
        OUTLINED_FUNCTION_78_6();
        sub_1A576B64C((void **)a1, v60, a3, 0, 0x7BuLL, 0xE100000000000000, 0);
        OUTLINED_FUNCTION_48();
        OUTLINED_FUNCTION_155();
        OUTLINED_FUNCTION_76_6(a1, v60, a3, (unint64_t *)&v168);
        OUTLINED_FUNCTION_17_4();
        v104 = v168;
        if (v168 < 0)
        {
          sub_1A56E9774();
          OUTLINED_FUNCTION_21();
          v107 = v129;
          *v108 = 0xD000000000000011;
          v108[1] = v107;
          v109 = v128;
          v108[2] = 0xD000000000000020;
          v108[3] = v109;
          OUTLINED_FUNCTION_11_20((uint64_t)v108, 167);
        }
        else
        {
          v105 = v150;
          v16 = v160;
          if (v168 > v150)
          {
            sub_1A571EABC();
            OUTLINED_FUNCTION_21();
            *v106 = v104;
            v106[1] = v105;
            OUTLINED_FUNCTION_8_23();
LABEL_70:
            v30 = v166;
            goto LABEL_43;
          }
          OUTLINED_FUNCTION_67_8();
          sub_1A575DFC4();
          OUTLINED_FUNCTION_30();
          OUTLINED_FUNCTION_69_4((void **)a1, v134, a3, 0, 0x7DuLL, 0xE100000000000000);
          OUTLINED_FUNCTION_48();
          v110 = (uint64_t *)OUTLINED_FUNCTION_67_8();
          sub_1A575DBEC(v110, v111, v112);
          v115 = *(_QWORD *)a1;
          v116 = *(unsigned int *)(a1 + 8);
          v117 = v116 | ((unint64_t)*(unsigned int *)(a1 + 12) << 32);
          v118 = v126 & 0xFF00000000000000 | *(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned __int16 *)(a1 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 22) << 48);
          OUTLINED_FUNCTION_12_1();
          v126 = v118;
          v119 = ByteBuffer.getSlice(at:length:)(v116, v104, v115, v117, v118);
          v65 = v120;
          v67 = v121;
          swift_release();
          if (!v119)
          {
            sub_1A571EA80();
            OUTLINED_FUNCTION_21();
            OUTLINED_FUNCTION_8_23();
            a3 = v158;
            v16 = v160;
            goto LABEL_70;
          }
          if (__CFADD__((_DWORD)v116, (_DWORD)v104))
            goto LABEL_91;
          *(_DWORD *)(a1 + 8) = v116 + v104;
          v66 = HIDWORD(v65);
          if (HIDWORD(v65) < v65)
            goto LABEL_88;
          v64 = v119;
          v69 = BYTE6(v67);
          v122 = BYTE6(v67) | (WORD2(v67) << 8);
          if (v67 < v122)
            goto LABEL_89;
          if (v66 > v67 - v122)
            goto LABEL_90;
          v65 = v65;
          v174 = v64;
          v68 = WORD2(v67);
          v175 = v65;
          v176 = v66;
          v177 = v67;
          v178 = WORD2(v67);
          v179 = BYTE6(v67);
          v180 = v65;
          v181 = v66;
          if ((sub_1A5680E2C(0) & 1) == 0)
          {
            OUTLINED_FUNCTION_108_0();
            OUTLINED_FUNCTION_149_0();
            OUTLINED_FUNCTION_17_4();
LABEL_41:
            swift_release();
            OUTLINED_FUNCTION_59_8();
            swift_release();
            OUTLINED_FUNCTION_35_14();
            OUTLINED_FUNCTION_17_4();
            v51 = v65 | (v66 << 32);
            v52 = v67 | (unint64_t)(v68 << 32) | (v69 << 48);
            v53 = 0;
            v50 = v64;
LABEL_63:
            v96 = *v147;
            sub_1A5691E18(v50, v51, v52, v53);
            v97 = v50;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              OUTLINED_FUNCTION_72_4();
              v96 = v113;
            }
            v98 = *(_QWORD *)(v96 + 16);
            if (v98 >= *(_QWORD *)(v96 + 24) >> 1)
            {
              OUTLINED_FUNCTION_72_4();
              v96 = v114;
            }
            *(_QWORD *)(v96 + 16) = v98 + 1;
            v99 = v96 + 24 * v98;
            *(_QWORD *)(v99 + 32) = v97;
            *(_QWORD *)(v99 + 40) = v51;
            OUTLINED_FUNCTION_41_10(v99);
            *(_BYTE *)(v100 + 55) = v53;
            sub_1A56974C4(v97, v51, v52, v53);
            OUTLINED_FUNCTION_149_0();
            OUTLINED_FUNCTION_59_8();
            *v147 = v96;
            a3 = v158;
            a5 = v151;
            goto LABEL_68;
          }
          sub_1A56E9774();
          OUTLINED_FUNCTION_21();
          v123 = v127;
          *v124 = 0xD000000000000019;
          v124[1] = v123;
          v125 = v132 | 0x8000000000000000;
          v124[2] = 0xD000000000000020;
          v124[3] = v125;
          OUTLINED_FUNCTION_11_20((uint64_t)v124, 1286);
          swift_release();
          a3 = v158;
        }
        v16 = v160;
        goto LABEL_70;
      }
      sub_1A5718F9C();
      OUTLINED_FUNCTION_21();
      *v19 = a3;
      OUTLINED_FUNCTION_87();
      OUTLINED_FUNCTION_10_37();
      v165 = 0;
LABEL_6:
      OUTLINED_FUNCTION_6_46();
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
      if (OUTLINED_FUNCTION_17_31())
      {
        OUTLINED_FUNCTION_5_52();
        OUTLINED_FUNCTION_19_26();
        OUTLINED_FUNCTION_73_3();
        v20 = swift_bridgeObjectRelease();
        *(_QWORD *)a1 = v16;
        OUTLINED_FUNCTION_23_24(v20, v21, v22, v23, v24, v25, v26, v27, v126, v127, v128, v129, v130, v131, v132, v133, v134, v135, v136,
          v137,
          (uint64_t)v138,
          v139,
          v140,
          (uint64_t)v141,
          (uint64_t)v142,
          v143,
          v144,
          v145,
          v146,
          (uint64_t)v147,
          v148,
          v149,
          v150,
          v151,
          v152,
          v153,
          v154,
          v155,
          v156);
        OUTLINED_FUNCTION_7_35();
        OUTLINED_FUNCTION_77_5();
        sub_1A5751898();
        OUTLINED_FUNCTION_23();
      }
      else
      {
        OUTLINED_FUNCTION_149_0();
        OUTLINED_FUNCTION_7_35();
      }
    }
  }
}

void sub_1A571BB40()
{
  void *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  id v9;
  uint64_t v10;
  char v11;
  __int16 v12;
  int v13;

  OUTLINED_FUNCTION_13_34();
  v3 = *v2;
  v4 = v2[1];
  v12 = *((_WORD *)v2 + 10);
  v13 = *((_DWORD *)v2 + 4);
  v11 = *((_BYTE *)v2 + 22);
  OUTLINED_FUNCTION_17_0();
  v5 = OUTLINED_FUNCTION_3_56();
  sub_1A571ABEC(v5, v6, v7, v8);
  if (v0)
  {
    v9 = v0;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if (OUTLINED_FUNCTION_17_31())
    {
      swift_release();

      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_9_2();
      *(_QWORD *)v1 = v3;
      *(_QWORD *)(v1 + 8) = v4;
      *(_DWORD *)(v1 + 16) = v13;
      *(_WORD *)(v1 + 20) = v12;
      *(_BYTE *)(v1 + 22) = v11;
      OUTLINED_FUNCTION_17_0();
      v10 = OUTLINED_FUNCTION_3_56();
      sub_1A571AD04(v10);
    }
    OUTLINED_FUNCTION_23();

  }
  else
  {
    OUTLINED_FUNCTION_23();
  }
}

void sub_1A571BC74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, __int128 a13, __int128 a14, __int128 a15, __int128 a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  OUTLINED_FUNCTION_52_8();
  a33 = v38;
  a34 = v39;
  v41 = v40;
  OUTLINED_FUNCTION_13_34();
  v43 = v42;
  sub_1A5740090();
  if (!v34)
  {
    a24 = v41;
    if (v44)
    {
      ByteBufferView.init(_:)(v44, v45, v46 & 0xFFFFFFFFFFFFFFLL, (uint64_t)&a18);
      OUTLINED_FUNCTION_155();
      v47 = sub_1A56E6FE8((uint64_t)&a18);
      if (!v48)
      {
        sub_1A56E9774();
        v54 = OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_1_84(v54, v55);
        OUTLINED_FUNCTION_15_35(v56, v57);
        OUTLINED_FUNCTION_11_20(v58, 198);
        swift_release();
        goto LABEL_8;
      }
      v59 = v47;
      v60 = v48;
      swift_release();
    }
    else
    {
      v59 = 0;
      v60 = 0;
    }
    OUTLINED_FUNCTION_30();
    sub_1A575E15C(v37, v36, v35, &a13);
    v49 = a17;
    v50 = a13;
    v51 = a14;
    v52 = a15;
    v53 = a16;
    *(_QWORD *)v43 = v59;
    *(_QWORD *)(v43 + 8) = v60;
    *(_OWORD *)(v43 + 16) = v50;
    *(_OWORD *)(v43 + 32) = v51;
    *(_OWORD *)(v43 + 48) = v52;
    *(_OWORD *)(v43 + 64) = v53;
    *(_QWORD *)(v43 + 80) = v49;
  }
LABEL_8:
  OUTLINED_FUNCTION_21_27();
}

void sub_1A571BD9C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD v23[4];
  uint64_t v24;
  uint64_t v25;

  v13 = sub_1A571BE98(a1, a2, a3, a4, a5, a6, a7);
  if (!v8)
  {
    v21 = v15;
    v22 = v14;
    v25 = v13;
    swift_retain();
    sub_1A575E15C(a2, a3, a5, v23);
    v16 = v24;
    v17 = v23[0];
    v18 = v23[1];
    v19 = v23[2];
    v20 = v23[3];
    *(_QWORD *)a8 = v25;
    *(_QWORD *)(a8 + 8) = v22;
    *(_QWORD *)(a8 + 16) = v21;
    *(_OWORD *)(a8 + 24) = v17;
    *(_OWORD *)(a8 + 40) = v18;
    *(_OWORD *)(a8 + 56) = v19;
    *(_OWORD *)(a8 + 72) = v20;
    *(_QWORD *)(a8 + 88) = v16;
  }
}

uint64_t sub_1A571BE98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  OUTLINED_FUNCTION_55_10(a1, a2, a3, a4, a5, a6, a7);
  OUTLINED_FUNCTION_42_10();
  OUTLINED_FUNCTION_64_6();
  OUTLINED_FUNCTION_80_3();
  OUTLINED_FUNCTION_12_32();
  result = sub_1A576F818(v8, v9);
  if (v7)
    return v11;
  return result;
}

void sub_1A571BF18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  OUTLINED_FUNCTION_52_8();
  a37 = v39;
  a38 = v40;
  v42 = v41;
  v44 = v43;
  v46 = v45;
  v48 = v47;
  v53 = sub_1A571BE98(v45, v43, v41, v49, v50, v51, v52);
  if (!v38)
  {
    v88 = v55;
    v89 = v54;
    a28 = v53;
    OUTLINED_FUNCTION_9_40();
    OUTLINED_FUNCTION_18_26();
    if (v56)
    {
      ByteBufferView.init(_:)(v56, v57, v58 & 0xFFFFFFFFFFFFFFLL, (uint64_t)&a17);
      OUTLINED_FUNCTION_12_1();
      v59 = sub_1A56E6FE8((uint64_t)&a17);
      if (!v60)
      {
        sub_1A56E9774();
        v64 = OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_1_84(v64, v65);
        OUTLINED_FUNCTION_15_35(v66, v67);
        OUTLINED_FUNCTION_11_20(v68, 227);
        OUTLINED_FUNCTION_54_1();
        OUTLINED_FUNCTION_25_3();
        OUTLINED_FUNCTION_14_28();
LABEL_3:
        OUTLINED_FUNCTION_61_8();
        goto LABEL_4;
      }
      v85 = v59;
      v87 = v60;
      OUTLINED_FUNCTION_54_1();
    }
    else
    {
      v85 = 0;
      v87 = 0;
    }
    OUTLINED_FUNCTION_9_40();
    OUTLINED_FUNCTION_18_26();
    if (v61)
    {
      ByteBufferView.init(_:)(v61, v62, v63 & 0xFFFFFFFFFFFFFFLL, (uint64_t)&a22);
      swift_retain();
      v69 = sub_1A56E6FE8((uint64_t)&a22);
      if (!v70)
      {
        sub_1A56E9774();
        v71 = OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_1_84(v71, v72);
        OUTLINED_FUNCTION_15_35(v73, v74);
        OUTLINED_FUNCTION_11_20(v75, 231);
        OUTLINED_FUNCTION_54_1();
        OUTLINED_FUNCTION_25_3();
        OUTLINED_FUNCTION_14_28();
        OUTLINED_FUNCTION_61_8();
        swift_bridgeObjectRelease();
        goto LABEL_4;
      }
      v84 = v69;
      v86 = v70;
      OUTLINED_FUNCTION_54_1();
    }
    else
    {
      v84 = 0;
      v86 = 0;
    }
    OUTLINED_FUNCTION_9_40();
    v76 = sub_1A571C1E8();
    v78 = v77;
    OUTLINED_FUNCTION_9_40();
    v79 = sub_1A5761038(v46, v44, v42, 1);
    if ((v79 & 0x8000000000000000) == 0)
    {
      *v48 = a28;
      v48[1] = v89;
      v48[2] = v88;
      v48[3] = v85;
      v48[4] = v87;
      v48[5] = v84;
      v48[6] = v86;
      v48[7] = v76;
      v48[8] = v78;
      v48[9] = v79;
      goto LABEL_4;
    }
    sub_1A56E9774();
    v80 = OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_29_17(v80, v81);
    *(_QWORD *)(v82 + 16) = v83;
    *(_QWORD *)(v82 + 24) = 0x80000001A5A0F5E0;
    OUTLINED_FUNCTION_11_20(v82, 167);
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_209();
    OUTLINED_FUNCTION_25_3();
    OUTLINED_FUNCTION_14_28();
    swift_bridgeObjectRelease();
    goto LABEL_3;
  }
LABEL_4:
  OUTLINED_FUNCTION_21_27();
}

uint64_t sub_1A571C1E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_52_8();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AE40);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A59ABDC0;
  *(_QWORD *)(inited + 32) = sub_1A571CCC8;
  *(_QWORD *)(inited + 40) = 0;
  *(_QWORD *)(inited + 48) = sub_1A571CCE4;
  *(_QWORD *)(inited + 56) = 0;
  *(_QWORD *)(inited + 64) = sub_1A571CD00;
  *(_QWORD *)(inited + 72) = 0;
  *(_QWORD *)(inited + 80) = sub_1A571CD1C;
  *(_QWORD *)(inited + 88) = 0;
  *(_QWORD *)(inited + 96) = sub_1A571CD38;
  *(_QWORD *)(inited + 104) = 0;
  v15 = (_QWORD *)OUTLINED_FUNCTION_24_21();
  v15[2] = v7;
  v15[3] = v5;
  v15[4] = v3;
  v15[5] = v1;
  v16 = OUTLINED_FUNCTION_70_5();
  *(_QWORD *)(v16 + 16) = sub_1A571EEF8;
  *(_QWORD *)(v16 + 24) = v15;
  *(_QWORD *)(inited + 112) = sub_1A571EF34;
  *(_QWORD *)(inited + 120) = v16;
  v17 = (_QWORD *)OUTLINED_FUNCTION_24_21();
  v17[2] = v7;
  v17[3] = v5;
  v17[4] = v3;
  v17[5] = v1;
  v18 = OUTLINED_FUNCTION_70_5();
  *(_QWORD *)(v18 + 16) = sub_1A571EF48;
  *(_QWORD *)(v18 + 24) = v17;
  *(_QWORD *)(inited + 128) = sub_1A571EF34;
  *(_QWORD *)(inited + 136) = v18;
  OUTLINED_FUNCTION_87();
  v19 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t))sub_1A5770530)(inited, v13, v11, v9, 0xD000000000000020, 0x80000001A5A0F5E0, 313);
  swift_setDeallocating();
  sub_1A5774244();
  return v19;
}

void sub_1A571C374()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[40];

  OUTLINED_FUNCTION_65_7();
  OUTLINED_FUNCTION_42_10();
  OUTLINED_FUNCTION_27_18();
  sub_1A576F734(v2, v3, v4, v5, v6);
  if (!v1)
    sub_1A56A1EE8((uint64_t)v7, v0);
}

double sub_1A571C410@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  sub_1A5751898();
  if (!v1)
  {
    *(_QWORD *)(a1 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

void sub_1A571C460(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v8;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[40];
  uint64_t *v31;

  v31 = a8;
  sub_1A5751898();
  if (!v8)
  {
    sub_1A5740104();
    ByteBufferView.init(_:)(v17, v18, v16 & 0xFFFFFFFFFFFFFFLL, (uint64_t)v30);
    swift_retain();
    sub_1A56E6FE8((uint64_t)v30);
    if (v19)
    {
      v28 = sub_1A594B49C();
      v29 = v20;
      swift_bridgeObjectRelease();
      sub_1A5751974(a1, a2, a3);
      v22 = sub_1A571BE98(a1, a2, a3, a4, a5, a6, a7);
      v24 = v23;
      v26 = v25;
      sub_1A5751898();
      swift_release();
      v27 = v31;
      *v31 = v28;
      v27[1] = v29;
      v27[2] = v22;
      v27[3] = v24;
      v27[4] = v26;
    }
    else
    {
      sub_1A56E9774();
      swift_allocError();
      strcpy(v21, "Invalid UTF8");
      v21[13] = 0;
      *((_WORD *)v21 + 7) = -5120;
      *((_QWORD *)v21 + 2) = 0xD000000000000020;
      *((_QWORD *)v21 + 3) = 0x80000001A5A0F5E0;
      *((_QWORD *)v21 + 4) = 257;
      swift_willThrow();
      swift_release();
    }
  }
}

_QWORD *sub_1A571C6B4@<X0>(_QWORD *(*a1)(_QWORD *__return_ptr)@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  _QWORD v5[5];

  result = a1(v5);
  if (!v2)
    return (_QWORD *)sub_1A56A1EE8((uint64_t)v5, a2);
  return result;
}

uint64_t sub_1A571C6FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v7;
  _BYTE v8[40];

  sub_1A5740104();
  if (!v0)
  {
    ByteBufferView.init(_:)(v2, v3, v4 & 0xFFFFFFFFFFFFFFLL, (uint64_t)v8);
    swift_retain();
    sub_1A56E6FE8((uint64_t)v8);
    if (v5)
    {
      v1 = sub_1A594B4B4();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1A56E9774();
      swift_allocError();
      strcpy(v7, "Invalid UTF8");
      v7[13] = 0;
      *((_WORD *)v7 + 7) = -5120;
      *((_QWORD *)v7 + 2) = 0xD000000000000020;
      *((_QWORD *)v7 + 3) = 0x80000001A5A0F5E0;
      *((_QWORD *)v7 + 4) = 278;
      swift_willThrow();
      swift_release();
    }
  }
  return v1;
}

uint64_t sub_1A571C804()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1A594B4B4();
  sub_1A5751898();
  if (v0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1A5751898();
    sub_1A5751898();
  }
  return v1;
}

uint64_t sub_1A571C8F0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1A594B4B4();
  sub_1A5751898();
  if (v0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1A5751898();
    sub_1A5751898();
  }
  return v1;
}

uint64_t sub_1A571C9DC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1A594B4B4();
  sub_1A5751898();
  if (v0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1A5751898();
    sub_1A5751898();
  }
  return v1;
}

uint64_t sub_1A571CAD0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1A594B4B4();
  sub_1A5751898();
  if (v0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1A5751898();
    sub_1A5751898();
  }
  return v1;
}

uint64_t sub_1A571CBC4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1A594B4B4();
  sub_1A5751898();
  if (v0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1A5751898();
    sub_1A5751898();
  }
  return v1;
}

uint64_t sub_1A571CCC8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1A571CD54(a1, a2, a3);
}

uint64_t sub_1A571CCE4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1A571CD54(a1, a2, a3);
}

uint64_t sub_1A571CD00@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1A571CD54(a1, a2, a3);
}

uint64_t sub_1A571CD1C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1A571CD54(a1, a2, a3);
}

uint64_t sub_1A571CD38@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1A571CD54(a1, a2, a3);
}

uint64_t sub_1A571CD54@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v6;

  result = OUTLINED_FUNCTION_63_7(a1, a2);
  if (!v3)
  {
    *a3 = result;
    a3[1] = v6;
  }
  return result;
}

void sub_1A571CD80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_55_10(a1, a2, a3, a4, a5, a6, a7);
  OUTLINED_FUNCTION_42_10();
  OUTLINED_FUNCTION_64_6();
  OUTLINED_FUNCTION_80_3();
  OUTLINED_FUNCTION_12_32();
  sub_1A576F8C0(v7, v8, v9, v10);
}

uint64_t sub_1A571CDF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _BYTE v12[40];

  sub_1A5740090();
  if (!v0)
  {
    v6 = v2;
    if (v2)
    {
      v7 = v3;
      v8 = v4;
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796290);
      v1 = swift_allocObject();
      *(_OWORD *)(v1 + 16) = xmmword_1A59ABD10;
      ByteBufferView.init(_:)(v6, v7, v8 & 0xFFFFFFFFFFFFFFLL, (uint64_t)v12);
      swift_retain();
      v9 = sub_1A56E6FE8((uint64_t)v12);
      if (v10)
      {
        *(_QWORD *)(v1 + 32) = v9;
        *(_QWORD *)(v1 + 40) = v10;
      }
      else
      {
        sub_1A56E9774();
        swift_allocError();
        strcpy(v11, "Invalid UTF8");
        v11[13] = 0;
        *((_WORD *)v11 + 7) = -5120;
        *((_QWORD *)v11 + 2) = 0xD000000000000020;
        *((_QWORD *)v11 + 3) = 0x80000001A5A0F5E0;
        *((_QWORD *)v11 + 4) = 330;
        swift_willThrow();
        *(_QWORD *)(v1 + 16) = 0;
        swift_release();
      }
      swift_release();
    }
    else
    {
      return MEMORY[0x1E0DEE9D8];
    }
  }
  return v1;
}

void sub_1A571CF34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _QWORD v23[6];
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _BYTE v27[40];
  uint64_t v28;

  sub_1A5751898();
  if (!v7)
  {
    sub_1A5740104();
    v16 = v15;
    v25 = v18;
    v26 = v17;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796290);
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1A59ABD10;
    ByteBufferView.init(_:)(v26, v25, v16 & 0xFFFFFFFFFFFFFFLL, (uint64_t)v27);
    swift_retain();
    v19 = sub_1A56E6FE8((uint64_t)v27);
    if (v20)
    {
      v21 = v24;
      *(_QWORD *)(v24 + 32) = v19;
      *(_QWORD *)(v21 + 40) = v20;
      v28 = v21;
      MEMORY[0x1E0C80A78](v19);
      v23[2] = a4;
      v23[3] = a5;
      v23[4] = a6;
      v23[5] = a7;
      sub_1A5751BA4(a1, a2, a3, (uint64_t)sub_1A571EC48, (uint64_t)v23, (uint64_t)&v28);
      sub_1A5751898();
      swift_release();
    }
    else
    {
      sub_1A56E9774();
      swift_allocError();
      strcpy(v22, "Invalid UTF8");
      v22[13] = 0;
      *((_WORD *)v22 + 7) = -5120;
      *((_QWORD *)v22 + 2) = 0xD000000000000020;
      *((_QWORD *)v22 + 3) = 0x80000001A5A0F5E0;
      *((_QWORD *)v22 + 4) = 337;
      swift_willThrow();
      *(_QWORD *)(v24 + 16) = 0;
      swift_release();
      swift_release();
    }
  }
}

void sub_1A571D19C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _BYTE v14[40];

  sub_1A5751974(a1, a2, a3);
  if (!v4)
  {
    sub_1A5740104();
    ByteBufferView.init(_:)(v7, v8, v6 & 0xFFFFFFFFFFFFFFLL, (uint64_t)v14);
    swift_retain();
    v9 = sub_1A56E6FE8((uint64_t)v14);
    if (v10)
    {
      v11 = v9;
      v12 = v10;
      swift_release();
      *a4 = v11;
      a4[1] = v12;
    }
    else
    {
      sub_1A56E9774();
      swift_allocError();
      strcpy(v13, "Invalid UTF8");
      v13[13] = 0;
      *((_WORD *)v13 + 7) = -5120;
      *((_QWORD *)v13 + 2) = 0xD000000000000020;
      *((_QWORD *)v13 + 3) = 0x80000001A5A0F5E0;
      *((_QWORD *)v13 + 4) = 343;
      swift_willThrow();
      swift_release();
    }
  }
}

#error "1A571D32C: call analysis failed (funcsize=21)"

void sub_1A571D340(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _BYTE v16[40];
  _BYTE v17[40];
  uint64_t v18;

  sub_1A5740104();
  if (!v3)
  {
    v10 = v7;
    ByteBufferView.init(_:)(v7, v8, v9 & 0xFFFFFFFFFFFFFFLL, (uint64_t)v16);
    swift_retain();
    sub_1A56E6FE8((uint64_t)v16);
    if (v11)
    {
      v18 = v10;
      sub_1A5751974(a1, a2, a3);
      sub_1A57401CC();
      ByteBufferView.init(_:)(v14, v15, v13 & 0xFFFFFFFFFFFFFFLL, (uint64_t)v17);
      sub_1A56D7A2C((uint64_t)v17);
    }
    else
    {
      sub_1A56E9774();
      swift_allocError();
      strcpy(v12, "Invalid UTF8");
      v12[13] = 0;
      *((_WORD *)v12 + 7) = -5120;
      *((_QWORD *)v12 + 2) = 0xD000000000000020;
      *((_QWORD *)v12 + 3) = 0x80000001A5A0F5E0;
      *((_QWORD *)v12 + 4) = 366;
      swift_willThrow();
    }
    swift_release();
  }
}

void sub_1A571D4EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v15;
  _QWORD v16[7];
  _QWORD v17[3];

  sub_1A5751898();
  if (!v7)
  {
    v17[0] = 0;
    v17[1] = MEMORY[0x1E0DEE9D8];
    v17[2] = MEMORY[0x1E0DEE9D8];
    sub_1A571D340(a1, a2, a3);
    sub_1A5724928();
    MEMORY[0x1E0C80A78](v15);
    v16[2] = a4;
    v16[3] = a5;
    v16[4] = a6;
    v16[5] = a7;
    sub_1A5751BC0(a1, a2, a3, (uint64_t)sub_1A571ED1C, (uint64_t)v16, (uint64_t)v17);
    sub_1A5751898();
  }
}

void sub_1A571D690(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1A5751974(a3, a4, a5);
  if (!v5)
  {
    sub_1A571D340(a3, a4, a5);
    *a1 = v11;
    a1[1] = v12;
    *a2 = v13;
    a2[1] = v14;
  }
}

_QWORD *sub_1A571D720@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  _QWORD *result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;

  swift_retain();
  result = (_QWORD *)sub_1A5754AEC(a1, a2, a3, a4, a5, a6, a7);
  if (!v8)
  {
    v49 = v19;
    v50 = result;
    v51 = v20;
    v58 = v18;
    sub_1A5751974(a1, a2, a3);
    swift_retain();
    sub_1A57543E4(&v52, a1, a2, a3, a4, a5, a6, a7);
    v44 = *((_QWORD *)&v52 + 1);
    v45 = v52;
    v41 = *((_QWORD *)&v53 + 1);
    v43 = v53;
    v46 = v54;
    *(_QWORD *)&v38 = *((_QWORD *)&v55 + 1);
    v47 = v55;
    *((_QWORD *)&v38 + 1) = *((_QWORD *)&v54 + 1);
    *((_QWORD *)&v36 + 1) = *((_QWORD *)&v56 + 1);
    v48 = v56;
    swift_retain();
    sub_1A575E570(a1, a2, a3, a4, a5, a6, a7, v21, v24, v26, v27, v29, v30, v32, v34, v36, v38, v41);
    v33 = v53;
    v35 = v52;
    v28 = v55;
    v31 = v54;
    v25 = v56;
    v22 = v57;
    result = (_QWORD *)swift_allocObject();
    v23 = v58;
    result[2] = v50;
    result[3] = v23;
    result[4] = v49;
    result[5] = v51;
    *(_QWORD *)a8 = result;
    *(_QWORD *)(a8 + 8) = v45;
    *(_QWORD *)(a8 + 16) = v44;
    *(_QWORD *)(a8 + 24) = v43;
    *(_QWORD *)(a8 + 32) = v42;
    *(_QWORD *)(a8 + 40) = v46;
    *(_QWORD *)(a8 + 48) = v40;
    *(_QWORD *)(a8 + 56) = v47;
    *(_QWORD *)(a8 + 64) = v39;
    *(_QWORD *)(a8 + 72) = v48;
    *(_QWORD *)(a8 + 80) = v37;
    *(_OWORD *)(a8 + 88) = v35;
    *(_OWORD *)(a8 + 104) = v33;
    *(_OWORD *)(a8 + 120) = v31;
    *(_OWORD *)(a8 + 136) = v28;
    *(_OWORD *)(a8 + 152) = v25;
    *(_QWORD *)(a8 + 168) = v22;
  }
  return result;
}

__n128 sub_1A571D98C@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 result;
  uint64_t v22;
  BOOL v23;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __n128 v76;
  uint64_t v77;
  _QWORD __src[41];
  _BYTE v79[184];
  _QWORD v80[24];
  uint64_t v81;

  swift_retain();
  v17 = sub_1A5754AEC(a1, a2, a3, a4, a5, a6, a7);
  if (!v8)
  {
    v22 = v17;
    v70 = v19;
    v65 = a5;
    v81 = a1;
    v67 = a7;
    v68 = a2;
    v69 = a3;
    v66 = a4;
    v71 = v20;
    v64 = a8;
    if (qword_1EE7970E0 != -1)
    {
      v41 = v18;
      swift_once();
      v18 = v41;
    }
    v23 = v22 == static Media.TopLevelType.message && v18 == *(_QWORD *)algn_1EE7F9628;
    if (!v23 && (sub_1A594CD38() & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_20:
      swift_bridgeObjectRelease();
      sub_1A56E9774();
      swift_allocError();
      *v27 = 0xD00000000000002ALL;
      v27[1] = 0x80000001A5A0F940;
      v27[2] = 0xD000000000000020;
      v27[3] = 0x80000001A5A0F5E0;
      v27[4] = 1388;
      swift_willThrow();
      return result;
    }
    if (qword_1EE7A90A0 != -1)
      swift_once();
    swift_beginAccess();
    if (v70 == static Media.Subtype.rfc822 && v71 == qword_1EE7F9F50)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v25 = sub_1A594CD38();
      swift_bridgeObjectRelease();
      if ((v25 & 1) == 0)
        goto LABEL_20;
    }
    v26 = v81;
    sub_1A5751974(v81, a2, v69);
    swift_retain();
    sub_1A57543E4(__src, v81, a2, v69, a4, v65, a6, a7);
    v28 = __src[0];
    v29 = __src[1];
    v30 = __src[2];
    v31 = __src[5];
    v60 = __src[3];
    v61 = __src[4];
    v32 = __src[7];
    v33 = __src[9];
    v62 = __src[6];
    v63 = __src[8];
    sub_1A5751974(v26, v68, v69);
    v55 = v32;
    v56 = v31;
    v54 = v33;
    v57 = v30;
    v58 = v28;
    v59 = v29;
    swift_retain();
    sub_1A5754BA0(__src, v26, v68, v69, v66, v65, a6, a7);
    v34 = __src[2];
    *((_QWORD *)&v48 + 1) = __src[3];
    *(_QWORD *)&v49 = __src[0];
    DWORD1(v48) = BYTE6(__src[4]);
    DWORD1(v47) = WORD2(__src[4]);
    *((_QWORD *)&v47 + 1) = LODWORD(__src[4]);
    v52 = __src[5];
    v53 = __src[1];
    *(_QWORD *)&v50 = __src[7];
    *((_QWORD *)&v50 + 1) = __src[6];
    v35 = __src[9];
    *((_QWORD *)&v49 + 1) = __src[8];
    v37 = __src[10];
    v36 = __src[11];
    v38 = __src[12];
    v39 = __src[13];
    v51 = __src[14];
    sub_1A5751974(v26, v68, v69);
    *(_QWORD *)&v46 = v38;
    *((_QWORD *)&v46 + 1) = v35;
    sub_1A5719B0C(v80, v26, v68, v69, v66, v65, a6, a7);
    sub_1A55DC3E0(v80, v79);
    sub_1A5751974(v26, v68, v69);
    v40 = sub_1A5761038(v26, v68, v69, 1);
    v42 = v40;
    if ((v40 & 0x8000000000000000) != 0)
    {
      sub_1A56E9774();
      swift_allocError();
      *v44 = 0xD000000000000011;
      v44[1] = 0x80000001A5A0F840;
      v44[2] = 0xD000000000000020;
      v44[3] = 0x80000001A5A0F5E0;
      v44[4] = 167;
      swift_willThrow();
      sub_1A571EFD0((uint64_t)v80);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      __src[0] = v70;
      __src[1] = v71;
      __src[2] = v49;
      __src[3] = v53;
      __src[4] = v34;
      __src[5] = *((_QWORD *)&v48 + 1);
      LODWORD(__src[6]) = DWORD2(v47);
      BYTE6(__src[6]) = (*((_QWORD *)&v47 + 1) | ((unint64_t)(DWORD1(v47) | (DWORD1(v48) << 16)) << 32)) >> 48;
      WORD2(__src[6]) = (*((_QWORD *)&v47 + 1) | ((unint64_t)(DWORD1(v47) | (DWORD1(v48) << 16)) << 32)) >> 32;
      __src[7] = v52;
      __src[8] = *((_QWORD *)&v50 + 1);
      __src[9] = v50;
      __src[10] = *((_QWORD *)&v49 + 1);
      __src[11] = v35;
      __src[12] = v37;
      __src[13] = v36;
      __src[14] = v38;
      __src[15] = v39;
      __src[16] = v51;
      sub_1A55DC3E0(v79, &__src[17]);
      __src[40] = v42;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_retain();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_retain();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A571EFD0((uint64_t)v80);
      sub_1A575E570(v81, v68, v69, v66, v65, a6, v67, v43, v36, v39, v34, v37, v46, v47, v48, v49, v50, v51);
      v45 = swift_allocObject();
      sub_1A571EFD0((uint64_t)v80);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      memcpy((void *)(v45 + 16), __src, 0x148uLL);
      *(_QWORD *)v64 = v45 | 0x4000000000000000;
      *(_QWORD *)(v64 + 8) = v58;
      *(_QWORD *)(v64 + 16) = v59;
      *(_QWORD *)(v64 + 24) = v57;
      *(_QWORD *)(v64 + 32) = v60;
      *(_QWORD *)(v64 + 40) = v61;
      *(_QWORD *)(v64 + 48) = v56;
      *(_QWORD *)(v64 + 56) = v62;
      *(_QWORD *)(v64 + 64) = v55;
      *(_QWORD *)(v64 + 72) = v63;
      *(_QWORD *)(v64 + 80) = v54;
      *(_OWORD *)(v64 + 88) = v72;
      *(_OWORD *)(v64 + 104) = v73;
      *(_OWORD *)(v64 + 120) = v74;
      *(_OWORD *)(v64 + 136) = v75;
      result = v76;
      *(__n128 *)(v64 + 152) = v76;
      *(_QWORD *)(v64 + 168) = v77;
    }
  }
  return result;
}

uint64_t sub_1A571E340@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;

  swift_retain();
  result = sub_1A5754C3C(a1, a2, a3, a4, a5, a6, a7);
  if (!v8)
  {
    v50 = result;
    v57 = v18;
    sub_1A5751974(a1, a2, a3);
    swift_retain();
    sub_1A57543E4(&v51, a1, a2, a3, a4, a5, a6, a7);
    v45 = *((_QWORD *)&v51 + 1);
    v46 = v51;
    v42 = *((_QWORD *)&v52 + 1);
    v44 = v52;
    v47 = v53;
    *(_QWORD *)&v39 = *((_QWORD *)&v54 + 1);
    v48 = v54;
    *((_QWORD *)&v39 + 1) = *((_QWORD *)&v53 + 1);
    *((_QWORD *)&v36 + 1) = *((_QWORD *)&v55 + 1);
    v49 = v55;
    sub_1A5751974(a1, a2, a3);
    v19 = sub_1A5761038(a1, a2, a3, 1);
    if ((v19 & 0x8000000000000000) != 0)
    {
      sub_1A56E9774();
      swift_allocError();
      *v21 = 0xD000000000000011;
      v21[1] = 0x80000001A5A0F840;
      v21[2] = 0xD000000000000020;
      v21[3] = 0x80000001A5A0F5E0;
      v21[4] = 167;
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
      *(_QWORD *)&v36 = v19;
      swift_retain();
      sub_1A575E570(a1, a2, a3, a4, a5, a6, a7, v20, v24, v26, v27, v29, v30, v32, v34, v36, v39, v42);
      v33 = v52;
      v35 = v51;
      v28 = v54;
      v31 = v53;
      v25 = v55;
      v22 = v56;
      result = swift_allocObject();
      v23 = v57;
      *(_QWORD *)(result + 16) = v50;
      *(_QWORD *)(result + 24) = v23;
      *(_QWORD *)(result + 32) = v37;
      *(_QWORD *)a8 = result | 0x8000000000000000;
      *(_QWORD *)(a8 + 8) = v46;
      *(_QWORD *)(a8 + 16) = v45;
      *(_QWORD *)(a8 + 24) = v44;
      *(_QWORD *)(a8 + 32) = v43;
      *(_QWORD *)(a8 + 40) = v47;
      *(_QWORD *)(a8 + 48) = v41;
      *(_QWORD *)(a8 + 56) = v48;
      *(_QWORD *)(a8 + 64) = v40;
      *(_QWORD *)(a8 + 72) = v49;
      *(_QWORD *)(a8 + 80) = v38;
      *(_OWORD *)(a8 + 88) = v35;
      *(_OWORD *)(a8 + 104) = v33;
      *(_OWORD *)(a8 + 120) = v31;
      *(_OWORD *)(a8 + 136) = v28;
      *(_OWORD *)(a8 + 152) = v25;
      *(_QWORD *)(a8 + 168) = v22;
    }
  }
  return result;
}

void sub_1A571E670()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[16];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;

  OUTLINED_FUNCTION_48_9();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v26 = v8;
  v27 = v9;
  v28 = v10;
  v29 = v11;
  v13 = sub_1A5760D2C(v4, v2, v12, (uint64_t)sub_1A571EB4C, (uint64_t)v25, (uint64_t)&type metadata for BodyStructure);
  if (!v0)
  {
    v36 = v13;
    sub_1A5751974(v5, v3, v1);
    OUTLINED_FUNCTION_22_27();
    v23 = sub_1A5740294();
    v24 = v14;
    OUTLINED_FUNCTION_12_1();
    v15 = OUTLINED_FUNCTION_22_27();
    sub_1A575E6A8(v15, v16);
    v17 = v30;
    v18 = v31;
    v19 = v32;
    v20 = v33;
    v21 = v34;
    v22 = v35;
    *(_QWORD *)v7 = v36;
    *(_QWORD *)(v7 + 8) = v23;
    *(_QWORD *)(v7 + 16) = v24;
    *(_OWORD *)(v7 + 24) = v17;
    *(_OWORD *)(v7 + 40) = v18;
    *(_OWORD *)(v7 + 56) = v19;
    *(_OWORD *)(v7 + 72) = v20;
    *(_OWORD *)(v7 + 88) = v21;
    *(_OWORD *)(v7 + 104) = v22;
  }
}

void *sub_1A571E784@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  void *v8;
  _QWORD v18[23];

  sub_1A5751974(a1, a2, a3);
  if (v8)

  sub_1A5719B0C(v18, a1, a2, a3, a4, a5, a6, a7);
  return sub_1A55DC3E0(v18, a8);
}

void sub_1A571E834()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[40];
  uint64_t v24;

  OUTLINED_FUNCTION_48_9();
  sub_1A5740090();
  if (!v0)
  {
    v24 = 0;
    if (v1)
    {
      ByteBufferView.init(_:)(v1, v2, v3 & 0xFFFFFFFFFFFFFFLL, (uint64_t)v23);
      swift_retain();
      sub_1A56E6FE8((uint64_t)v23);
      if (!v4)
      {
        sub_1A56E9774();
        v18 = OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_1_84(v18, v19);
        OUTLINED_FUNCTION_15_35(v20, v21);
        OUTLINED_FUNCTION_11_20(v22, 467);
        OUTLINED_FUNCTION_19_0();
        return;
      }
      OUTLINED_FUNCTION_19_0();
    }
    OUTLINED_FUNCTION_12_1();
    v5 = v24;
    v6 = sub_1A5760DFC();
    if (v5 || (v7 = v6, v24 = 0, (v8 = *(_QWORD *)(v6 + 16)) == 0))
    {
LABEL_6:
      swift_bridgeObjectRelease();
    }
    else
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v9 = 0;
      v10 = MEMORY[0x1E0DEE9D8];
      while (1)
      {
        v11 = *(_QWORD *)(v7 + 8 * v9 + 32);
        v12 = *(_QWORD *)(v11 + 16);
        v13 = *(_QWORD *)(v10 + 16);
        if (__OFADD__(v13, v12))
          break;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        if (!swift_isUniquelyReferenced_nonNull_native() || v13 + v12 > *(_QWORD *)(v10 + 24) >> 1)
        {
          sub_1A569DC04();
          v10 = v14;
        }
        if (*(_QWORD *)(v11 + 16))
        {
          if ((*(_QWORD *)(v10 + 24) >> 1) - *(_QWORD *)(v10 + 16) < v12)
            goto LABEL_26;
          swift_arrayInitWithCopy();
          if (v12)
          {
            v15 = *(_QWORD *)(v10 + 16);
            v16 = __OFADD__(v15, v12);
            v17 = v15 + v12;
            if (v16)
              goto LABEL_27;
            *(_QWORD *)(v10 + 16) = v17;
          }
        }
        else if (v12)
        {
          goto LABEL_25;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v8 == ++v9)
        {
          swift_bridgeObjectRelease();
          goto LABEL_6;
        }
      }
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
    }
  }
}

unint64_t sub_1A571EA80()
{
  unint64_t result;

  result = qword_1EE796B80;
  if (!qword_1EE796B80)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59B7174, &unk_1E4E60E30);
    atomic_store(result, (unint64_t *)&qword_1EE796B80);
  }
  return result;
}

unint64_t sub_1A571EABC()
{
  unint64_t result;

  result = qword_1EE7A9DC8;
  if (!qword_1EE7A9DC8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ExceededLiteralSizeLimitError, &type metadata for ExceededLiteralSizeLimitError);
    atomic_store(result, (unint64_t *)&qword_1EE7A9DC8);
  }
  return result;
}

void sub_1A571EAF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  OUTLINED_FUNCTION_4_52();
  sub_1A5719BBC(v0, v1, v2, v3, v4, v5, v6, v7);
}

_QWORD *sub_1A571EB10@<X0>(void *a1@<X8>)
{
  uint64_t v1;

  return sub_1A5719F8C(*(_QWORD *(**)(_QWORD *__return_ptr))(v1 + 16), a1);
}

void sub_1A571EB28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  OUTLINED_FUNCTION_4_52();
  sub_1A5719DB8(v0, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1A571EB40(uint64_t result)
{
  *(_BYTE *)(result + 176) = 1;
  return result;
}

void *sub_1A571EB4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  OUTLINED_FUNCTION_4_52();
  return sub_1A571E784(v0, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1A571EB64()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1A571EB88()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A571AAD0();
}

unint64_t sub_1A571EBA0()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_4_52();
  return sub_1A571AB4C(v0, v1, v2);
}

void sub_1A571EBB8(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1A5760CC8(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_1A571EBD0()
{
  OUTLINED_FUNCTION_4_52();
  return sub_1A5747F14();
}

void sub_1A571EBE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1A5747F5C(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

void sub_1A571EC00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A571CF34(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A571EC18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1A5760D0C(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_1A571EC30()
{
  OUTLINED_FUNCTION_4_52();
  return sub_1A571CDF0();
}

void sub_1A571EC48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;

  OUTLINED_FUNCTION_4_52();
  sub_1A571D19C(v0, v1, v2, v3);
}

double sub_1A571EC60()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4_52();
  return sub_1A571C410(v0);
}

_QWORD *sub_1A571EC78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A571C6B4(*(_QWORD *(**)(_QWORD *__return_ptr))(v1 + 16), a1);
}

void sub_1A571EC90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;

  OUTLINED_FUNCTION_4_52();
  sub_1A571C460(v0, v1, v2, v3, v4, v5, v6, v7);
}

void sub_1A571ECA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A571D4EC(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_1A571ECC0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A571ECEC(a1);
}

uint64_t sub_1A571ECD4()
{
  OUTLINED_FUNCTION_4_52();
  return sub_1A571D2E8();
}

uint64_t sub_1A571ECEC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2)
  {
    *a1 = result;
    a1[1] = v5;
    a1[2] = v6;
  }
  return result;
}

void sub_1A571ED1C(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1A571D690(a1, a2, a3, a4, a5);
}

uint64_t sub_1A571ED44(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 104);
  v11 = *(_QWORD *)(a1 + 96);
  v12 = *(_QWORD *)(a1 + 88);
  v3 = *(_QWORD *)(a1 + 112);
  v9 = *(_QWORD *)(a1 + 128);
  v10 = *(_QWORD *)(a1 + 120);
  v7 = *(_QWORD *)(a1 + 144);
  v8 = *(_QWORD *)(a1 + 136);
  v6 = *(_OWORD *)(a1 + 152);
  v4 = *(_QWORD *)(a1 + 168);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A5524370(v12, v11, v2, v3, v10, v9, v8, v7, v6, *((uint64_t *)&v6 + 1), v4);
  return a1;
}

uint64_t sub_1A571EE28(uint64_t result)
{
  *(_BYTE *)(result + 176) = 0;
  return result;
}

double sub_1A571EE30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;

  OUTLINED_FUNCTION_4_52();
  *(_QWORD *)&result = sub_1A571D98C(v0, v1, v2, v3, v4, v5, v6, v7).n128_u64[0];
  return result;
}

_QWORD *sub_1A571EE48()
{
  return sub_1A571EE8C();
}

uint64_t sub_1A571EE5C()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_4_52();
  return sub_1A571E340(v0, v1, v2, v3, v4, v5, v6, v7);
}

_QWORD *sub_1A571EE74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_4_52();
  return sub_1A571D720(v0, v1, v2, v3, v4, v5, v6, v7);
}

_QWORD *sub_1A571EE8C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *result;
  _QWORD v3[22];

  result = (*(_QWORD *(**)(_QWORD *__return_ptr))(v0 + 16))(v3);
  if (!v1)
    return OUTLINED_FUNCTION_81_5((uint64_t)result, v3);
  return result;
}

uint64_t sub_1A571EED0()
{
  OUTLINED_FUNCTION_40_2();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A571EEF8()
{
  OUTLINED_FUNCTION_4_52();
  return sub_1A571C6FC();
}

uint64_t sub_1A571EF10()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A571EF34@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1A571EF84(a1, a2, a3);
}

uint64_t sub_1A571EF48()
{
  sub_1A5751898();
  return 0;
}

uint64_t sub_1A571EF84@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v6;

  result = OUTLINED_FUNCTION_63_7(a1, a2);
  if (!v3)
  {
    *a3 = result;
    a3[1] = v6;
  }
  return result;
}

uint64_t sub_1A571EFB0()
{
  OUTLINED_FUNCTION_40_2();
  return swift_deallocObject();
}

uint64_t sub_1A571EFD0(uint64_t a1)
{
  void (*v2)(void);

  OUTLINED_FUNCTION_79_5();
  v2();
  return a1;
}

uint64_t sub_1A571F030()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;

  OUTLINED_FUNCTION_40_2();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v24 = *(_BYTE *)(v0 + 328);
  OUTLINED_FUNCTION_79_5();
  sub_1A55241F0(v1, v2, v3, v4, v5, v6, v7, v8, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20,
    v21,
    v22,
    v23,
    v24);
  return swift_deallocObject();
}

_QWORD *sub_1A571F0FC@<X0>(void *a1@<X8>)
{
  return sub_1A571EB10(a1);
}

void sub_1A571F110(uint64_t a1@<X8>)
{
  sub_1A571EBB8(a1);
}

void sub_1A571F124(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A571EC18(a1, a2, a3);
}

_QWORD *sub_1A571F138@<X0>(uint64_t a1@<X8>)
{
  return sub_1A571EC78(a1);
}

void OUTLINED_FUNCTION_1_84(uint64_t a1, uint64_t a2)
{
  strcpy((char *)a2, "Invalid UTF8");
  *(_BYTE *)(a2 + 13) = 0;
  *(_WORD *)(a2 + 14) = -5120;
}

uint64_t OUTLINED_FUNCTION_5_52()
{
  return swift_release();
}

id OUTLINED_FUNCTION_6_46()
{
  void *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 152) = v0;
  return v0;
}

void OUTLINED_FUNCTION_7_35()
{
  uint64_t v0;

}

void OUTLINED_FUNCTION_9_40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1A5751974(v2, v1, v0);
}

uint64_t OUTLINED_FUNCTION_10_37()
{
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_14_29()
{
  return swift_dynamicCast();
}

void OUTLINED_FUNCTION_15_35(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 16) = a2;
  *(_QWORD *)(a1 + 24) = (v2 - 32) | 0x8000000000000000;
}

void OUTLINED_FUNCTION_16_28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, __int16 a19, __int16 a20,int a21)
{
  uint64_t v21;

  *(_DWORD *)(v21 + 16) = a21;
  *(_WORD *)(v21 + 20) = a20;
  *(_BYTE *)(v21 + 22) = a18;
}

uint64_t OUTLINED_FUNCTION_17_31()
{
  return swift_dynamicCast();
}

void OUTLINED_FUNCTION_18_26()
{
  sub_1A5740090();
}

void OUTLINED_FUNCTION_19_26()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_22_27()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_23_24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35,__int16 a36,__int16 a37,int a38,int a39)
{
  int v39;
  uint64_t v40;

  *(_DWORD *)(v40 + 8) = v39;
  *(_DWORD *)(v40 + 12) = a39;
  *(_DWORD *)(v40 + 16) = a38;
  *(_WORD *)(v40 + 20) = a37;
  *(_BYTE *)(v40 + 22) = a35;
}

uint64_t OUTLINED_FUNCTION_24_21()
{
  return swift_allocObject();
}

void OUTLINED_FUNCTION_26_15()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;
  char v5;
  __int16 v6;

  *(_QWORD *)v3 = v1;
  *(_DWORD *)(v3 + 8) = v0;
  *(_DWORD *)(v3 + 12) = v2;
  *(_DWORD *)(v3 + 16) = v4;
  *(_WORD *)(v3 + 20) = v6;
  *(_BYTE *)(v3 + 22) = v5;
}

void OUTLINED_FUNCTION_28_18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 8) = v2;
  *(_DWORD *)(v0 + 16) = *(_DWORD *)(v1 - 236);
  *(_WORD *)(v0 + 20) = *(_DWORD *)(v1 - 240);
  *(_BYTE *)(v0 + 22) = *(_DWORD *)(v1 - 244);
}

void OUTLINED_FUNCTION_29_17(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  *a2 = v2;
  a2[1] = (v3 - 32) | 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_35_14()
{
  return swift_release();
}

void OUTLINED_FUNCTION_41_10(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_BYTE *)(a1 + 54) = BYTE6(v1);
  *(_WORD *)(a1 + 52) = WORD2(v1);
  *(_DWORD *)(a1 + 48) = v1;
}

void OUTLINED_FUNCTION_43_9(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,__int16 a28,int a29,char a30)
{
  uint64_t v30;
  int v31;

  *(_DWORD *)(v30 + 16) = v31;
  *(_WORD *)(v30 + 20) = a28;
  *(_BYTE *)(v30 + 22) = a30;
}

uint64_t OUTLINED_FUNCTION_44_9()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_46_9()
{
  char v0;
  __int16 v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;

  *(_QWORD *)v2 = v3;
  *(_DWORD *)(v2 + 8) = v4;
  *(_DWORD *)(v2 + 12) = v5;
  *(_DWORD *)(v2 + 16) = v6;
  *(_WORD *)(v2 + 20) = v1;
  *(_BYTE *)(v2 + 22) = v0;
}

void OUTLINED_FUNCTION_55_10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  *(_QWORD *)(v7 - 32) = a4;
  *(_QWORD *)(v7 - 24) = a5;
  *(_QWORD *)(v7 - 16) = a6;
  *(_QWORD *)(v7 - 8) = a7;
}

uint64_t OUTLINED_FUNCTION_57_11()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_58_7()
{
  uint64_t v0;

  return v0 - 208;
}

uint64_t OUTLINED_FUNCTION_59_8()
{
  return swift_release();
}

void OUTLINED_FUNCTION_60_10()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  char v4;
  __int16 v5;

  *(_DWORD *)(v2 + 8) = v0;
  *(_DWORD *)(v2 + 12) = v1;
  *(_DWORD *)(v2 + 16) = v3;
  *(_WORD *)(v2 + 20) = v5;
  *(_BYTE *)(v2 + 22) = v4;
}

uint64_t OUTLINED_FUNCTION_61_8()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_62_7()
{
  return sub_1A594B5F8();
}

uint64_t OUTLINED_FUNCTION_63_7(uint64_t a1, _QWORD *a2)
{
  uint64_t (*v2)(uint64_t, _QWORD, _QWORD);

  return v2(a1, *a2, a2[1]);
}

uint64_t OUTLINED_FUNCTION_67_8()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_68_4()
{
  return swift_release();
}

void OUTLINED_FUNCTION_69_4(void **a1, uint64_t a2, uint64_t a3, char a4, unint64_t a5, unint64_t a6)
{
  sub_1A576B64C(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t OUTLINED_FUNCTION_70_5()
{
  return swift_allocObject();
}

void OUTLINED_FUNCTION_72_4()
{
  sub_1A569DC04();
}

uint64_t OUTLINED_FUNCTION_73_3()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_76_6(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X8>)
{
  sub_1A576AF5C(a1, a2, a3, 1, a4);
}

uint64_t OUTLINED_FUNCTION_78_6()
{
  return swift_retain();
}

void *OUTLINED_FUNCTION_81_5(uint64_t a1, const void *a2)
{
  void *v2;

  return memcpy(v2, a2, 0xB0uLL);
}

void sub_1A571F578(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  sub_1A573FF70(a1, a2, a3);
  if (!v4)
  {
    v11 = v9;
    v12 = v10;
    sub_1A5751974(a1, a2, a3);
    sub_1A571F730();
    *(_QWORD *)a4 = v11;
    *(_QWORD *)(a4 + 8) = v12;
    *(_OWORD *)(a4 + 16) = v13;
    *(_OWORD *)(a4 + 32) = v14;
    *(_OWORD *)(a4 + 48) = v15;
    *(_OWORD *)(a4 + 64) = v16;
    *(_OWORD *)(a4 + 80) = v17;
    *(_OWORD *)(a4 + 96) = v18;
    *(_OWORD *)(a4 + 112) = v19;
    *(_QWORD *)(a4 + 128) = v20;
  }
  OUTLINED_FUNCTION_29_18();
}

unint64_t sub_1A571F6F4()
{
  unint64_t result;

  result = qword_1EE7A9DD0;
  if (!qword_1EE7A9DD0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for BadCommand, &type metadata for BadCommand);
    atomic_store(result, (unint64_t *)&qword_1EE7A9DD0);
  }
  return result;
}

double sub_1A571F730()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  double result;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;

  OUTLINED_FUNCTION_44_10();
  v64 = v1;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9DD8);
  v2 = OUTLINED_FUNCTION_20_1();
  *(_OWORD *)(v2 + 16) = xmmword_1A59AC0A0;
  *(_QWORD *)(v2 + 32) = 0x494C494241504143;
  *(_QWORD *)(v2 + 40) = 0xEA00000000005954;
  *(_QWORD *)(v2 + 48) = sub_1A57203AC;
  *(_QWORD *)(v2 + 56) = 0;
  *(_QWORD *)(v2 + 64) = 0x54554F474F4CLL;
  *(_QWORD *)(v2 + 72) = 0xE600000000000000;
  *(_QWORD *)(v2 + 80) = sub_1A57203C8;
  *(_QWORD *)(v2 + 88) = 0;
  *(_QWORD *)(v2 + 96) = 1347374926;
  *(_QWORD *)(v2 + 104) = 0xE400000000000000;
  *(_QWORD *)(v2 + 112) = sub_1A57203E4;
  *(_QWORD *)(v2 + 120) = 0;
  *(_QWORD *)(v2 + 128) = 0x534C545452415453;
  *(_QWORD *)(v2 + 136) = 0xE800000000000000;
  *(_QWORD *)(v2 + 144) = sub_1A5720400;
  *(_QWORD *)(v2 + 152) = 0;
  *(_QWORD *)(v2 + 160) = 0x4B43454843;
  *(_QWORD *)(v2 + 168) = 0xE500000000000000;
  *(_QWORD *)(v2 + 176) = sub_1A572041C;
  *(_QWORD *)(v2 + 184) = 0;
  *(_QWORD *)(v2 + 192) = 0x45534F4C43;
  *(_QWORD *)(v2 + 200) = 0xE500000000000000;
  *(_QWORD *)(v2 + 208) = sub_1A5720438;
  *(_QWORD *)(v2 + 216) = 0;
  *(_QWORD *)(v2 + 224) = 0x45474E55505845;
  *(_QWORD *)(v2 + 232) = 0xE700000000000000;
  *(_QWORD *)(v2 + 240) = sub_1A5720454;
  *(_QWORD *)(v2 + 248) = 0;
  *(_QWORD *)(v2 + 256) = 0x5443454C45534E55;
  *(_QWORD *)(v2 + 264) = 0xE800000000000000;
  *(_QWORD *)(v2 + 272) = sub_1A5720470;
  *(_QWORD *)(v2 + 280) = 0;
  *(_QWORD *)(v2 + 288) = 1162626121;
  *(_QWORD *)(v2 + 296) = 0xE400000000000000;
  *(_QWORD *)(v2 + 304) = sub_1A572048C;
  *(_QWORD *)(v2 + 312) = 0;
  *(_QWORD *)(v2 + 320) = 0x43415053454D414ELL;
  *(_QWORD *)(v2 + 328) = 0xE900000000000045;
  *(_QWORD *)(v2 + 336) = sub_1A57204A8;
  *(_QWORD *)(v2 + 344) = 0;
  v3 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_1_85(v3);
  v4 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v4 + 16) = sub_1A57208FC;
  *(_QWORD *)(v4 + 24) = v0;
  *(_QWORD *)(v2 + 352) = 17481;
  *(_QWORD *)(v2 + 360) = 0xE200000000000000;
  *(_QWORD *)(v2 + 368) = sub_1A5720914;
  *(_QWORD *)(v2 + 376) = v4;
  v5 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_1_85(v5);
  v6 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v6 + 16) = sub_1A572092C;
  *(_QWORD *)(v6 + 24) = v0;
  *(_QWORD *)(v2 + 384) = 0x454C42414E45;
  *(_QWORD *)(v2 + 392) = 0xE600000000000000;
  *(_QWORD *)(v2 + 400) = sub_1A57231B4;
  *(_QWORD *)(v2 + 408) = v6;
  v7 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_1_85(v7);
  v8 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v8 + 16) = sub_1A5720964;
  *(_QWORD *)(v8 + 24) = v0;
  *(_QWORD *)(v2 + 416) = 0x444154454D544547;
  *(_QWORD *)(v2 + 424) = 0xEB00000000415441;
  *(_QWORD *)(v2 + 432) = sub_1A57231B4;
  *(_QWORD *)(v2 + 440) = v8;
  v9 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_1_85(v9);
  v10 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v10 + 16) = sub_1A5720984;
  *(_QWORD *)(v10 + 24) = v0;
  *(_QWORD *)(v2 + 448) = 0x444154454D544553;
  *(_QWORD *)(v2 + 456) = 0xEB00000000415441;
  *(_QWORD *)(v2 + 464) = sub_1A57231B4;
  *(_QWORD *)(v2 + 472) = v10;
  v11 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_1_85(v11);
  v12 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v12 + 16) = sub_1A57209A4;
  *(_QWORD *)(v12 + 24) = v0;
  *(_QWORD *)(v2 + 480) = 0x59454B5445534552;
  *(_QWORD *)(v2 + 488) = 0xE800000000000000;
  *(_QWORD *)(v2 + 496) = sub_1A57231B4;
  *(_QWORD *)(v2 + 504) = v12;
  v13 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_1_85(v13);
  v14 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v14 + 16) = sub_1A57209C4;
  *(_QWORD *)(v14 + 24) = v0;
  *(_QWORD *)(v2 + 512) = 0x55414C52554E4547;
  *(_QWORD *)(v2 + 520) = 0xEA00000000004854;
  *(_QWORD *)(v2 + 528) = sub_1A57231B4;
  *(_QWORD *)(v2 + 536) = v14;
  v15 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_1_85(v15);
  v16 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v16 + 16) = sub_1A5720A60;
  *(_QWORD *)(v16 + 24) = v0;
  *(_QWORD *)(v2 + 544) = 0x48435445464C5255;
  *(_QWORD *)(v2 + 552) = 0xE800000000000000;
  *(_QWORD *)(v2 + 560) = sub_1A57231B4;
  *(_QWORD *)(v2 + 568) = v16;
  v17 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_1_85(v17);
  v18 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v18 + 16) = sub_1A5720A98;
  *(_QWORD *)(v18 + 24) = v0;
  *(_QWORD *)(v2 + 576) = 1498435395;
  *(_QWORD *)(v2 + 584) = 0xE400000000000000;
  *(_QWORD *)(v2 + 592) = sub_1A57231B4;
  *(_QWORD *)(v2 + 600) = v18;
  v19 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_1_85(v19);
  v20 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v20 + 16) = sub_1A5720AB8;
  *(_QWORD *)(v20 + 24) = v0;
  *(_QWORD *)(v2 + 608) = 0x4554454C4544;
  *(_QWORD *)(v2 + 616) = 0xE600000000000000;
  *(_QWORD *)(v2 + 624) = sub_1A57231B4;
  *(_QWORD *)(v2 + 632) = v20;
  v21 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_1_85(v21);
  v22 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v22 + 16) = sub_1A5720AD8;
  *(_QWORD *)(v22 + 24) = v0;
  *(_QWORD *)(v2 + 640) = 1163284301;
  *(_QWORD *)(v2 + 648) = 0xE400000000000000;
  *(_QWORD *)(v2 + 656) = sub_1A57231B4;
  *(_QWORD *)(v2 + 664) = v22;
  v23 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_1_85(v23);
  v24 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v24 + 16) = sub_1A5720AF8;
  *(_QWORD *)(v24 + 24) = v0;
  *(_QWORD *)(v2 + 672) = 0x484352414553;
  *(_QWORD *)(v2 + 680) = 0xE600000000000000;
  *(_QWORD *)(v2 + 688) = sub_1A57231B4;
  *(_QWORD *)(v2 + 696) = v24;
  v25 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_1_85(v25);
  v26 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v26 + 16) = sub_1A5720CB8;
  *(_QWORD *)(v26 + 24) = v0;
  *(_QWORD *)(v2 + 704) = 0x48435241455345;
  *(_QWORD *)(v2 + 712) = 0xE700000000000000;
  *(_QWORD *)(v2 + 720) = sub_1A57231B4;
  *(_QWORD *)(v2 + 728) = v26;
  v27 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_1_85(v27);
  v28 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v28 + 16) = sub_1A5720CD0;
  *(_QWORD *)(v28 + 24) = v0;
  *(_QWORD *)(v2 + 736) = 0x45524F5453;
  *(_QWORD *)(v2 + 744) = 0xE500000000000000;
  *(_QWORD *)(v2 + 752) = sub_1A57231B4;
  *(_QWORD *)(v2 + 760) = v28;
  v29 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_1_85(v29);
  v30 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v30 + 16) = sub_1A5720CF0;
  *(_QWORD *)(v30 + 24) = v0;
  *(_QWORD *)(v2 + 768) = 0x454E494D415845;
  *(_QWORD *)(v2 + 776) = 0xE700000000000000;
  *(_QWORD *)(v2 + 784) = sub_1A57231B4;
  *(_QWORD *)(v2 + 792) = v30;
  v31 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_1_85(v31);
  v32 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v32 + 16) = sub_1A5720D10;
  *(_QWORD *)(v32 + 24) = v0;
  *(_QWORD *)(v2 + 800) = 1414744396;
  *(_QWORD *)(v2 + 808) = 0xE400000000000000;
  *(_QWORD *)(v2 + 816) = sub_1A57231B4;
  *(_QWORD *)(v2 + 824) = v32;
  v33 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_1_85(v33);
  v34 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v34 + 16) = sub_1A5720D30;
  *(_QWORD *)(v34 + 24) = v0;
  *(_QWORD *)(v2 + 832) = 1112888140;
  *(_QWORD *)(v2 + 840) = 0xE400000000000000;
  *(_QWORD *)(v2 + 848) = sub_1A57231B4;
  *(_QWORD *)(v2 + 856) = v34;
  v35 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_1_85(v35);
  v36 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v36 + 16) = sub_1A5720D74;
  *(_QWORD *)(v36 + 24) = v0;
  *(_QWORD *)(v2 + 864) = 0x454D414E4552;
  *(_QWORD *)(v2 + 872) = 0xE600000000000000;
  *(_QWORD *)(v2 + 880) = sub_1A57231B4;
  *(_QWORD *)(v2 + 888) = v36;
  v37 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_1_85(v37);
  v38 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v38 + 16) = sub_1A5720F48;
  *(_QWORD *)(v38 + 24) = v0;
  *(_QWORD *)(v2 + 896) = 0x5443454C4553;
  *(_QWORD *)(v2 + 904) = 0xE600000000000000;
  *(_QWORD *)(v2 + 912) = sub_1A57231B4;
  *(_QWORD *)(v2 + 920) = v38;
  v39 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_1_85(v39);
  v40 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v40 + 16) = sub_1A5720F68;
  *(_QWORD *)(v40 + 24) = v0;
  *(_QWORD *)(v2 + 928) = 0x535554415453;
  *(_QWORD *)(v2 + 936) = 0xE600000000000000;
  *(_QWORD *)(v2 + 944) = sub_1A57231B4;
  *(_QWORD *)(v2 + 952) = v40;
  v41 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_1_85(v41);
  v42 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v42 + 16) = sub_1A5720F88;
  *(_QWORD *)(v42 + 24) = v0;
  *(_QWORD *)(v2 + 960) = 0x4249524353425553;
  *(_QWORD *)(v2 + 968) = 0xE900000000000045;
  *(_QWORD *)(v2 + 976) = sub_1A57231B4;
  *(_QWORD *)(v2 + 984) = v42;
  v43 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_1_85(v43);
  v44 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v44 + 16) = sub_1A5720FA8;
  *(_QWORD *)(v44 + 24) = v0;
  *(_QWORD *)(v2 + 992) = 0x5243534255534E55;
  *(_QWORD *)(v2 + 1000) = 0xEB00000000454249;
  *(_QWORD *)(v2 + 1008) = sub_1A57231B4;
  *(_QWORD *)(v2 + 1016) = v44;
  v45 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_1_85(v45);
  v46 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v46 + 16) = sub_1A5720FC8;
  *(_QWORD *)(v46 + 24) = v0;
  *(_QWORD *)(v2 + 1024) = 4475221;
  *(_QWORD *)(v2 + 1032) = 0xE300000000000000;
  *(_QWORD *)(v2 + 1040) = sub_1A57231B4;
  *(_QWORD *)(v2 + 1048) = v46;
  v47 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_1_85(v47);
  v48 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v48 + 16) = sub_1A5720FE8;
  *(_QWORD *)(v48 + 24) = v0;
  *(_QWORD *)(v2 + 1056) = 0x4843544546;
  *(_QWORD *)(v2 + 1064) = 0xE500000000000000;
  *(_QWORD *)(v2 + 1072) = sub_1A57231B4;
  *(_QWORD *)(v2 + 1080) = v48;
  v49 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_1_85(v49);
  v50 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v50 + 16) = sub_1A5721008;
  *(_QWORD *)(v50 + 24) = v0;
  *(_QWORD *)(v2 + 1088) = 0x4E49474F4CLL;
  *(_QWORD *)(v2 + 1096) = 0xE500000000000000;
  *(_QWORD *)(v2 + 1104) = sub_1A57231B4;
  *(_QWORD *)(v2 + 1112) = v50;
  v51 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_1_85(v51);
  v52 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v52 + 16) = sub_1A5721228;
  *(_QWORD *)(v52 + 24) = v0;
  strcpy((char *)(v2 + 1120), "AUTHENTICATE");
  *(_BYTE *)(v2 + 1133) = 0;
  *(_WORD *)(v2 + 1134) = -5120;
  *(_QWORD *)(v2 + 1136) = sub_1A57231B4;
  *(_QWORD *)(v2 + 1144) = v52;
  v53 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_1_85(v53);
  v54 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v54 + 16) = sub_1A5721240;
  *(_QWORD *)(v54 + 24) = v0;
  *(_QWORD *)(v2 + 1152) = 0x455441455243;
  *(_QWORD *)(v2 + 1160) = 0xE600000000000000;
  *(_QWORD *)(v2 + 1168) = sub_1A57231B4;
  *(_QWORD *)(v2 + 1176) = v54;
  v55 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_1_85(v55);
  v56 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v56 + 16) = sub_1A5721404;
  *(_QWORD *)(v56 + 24) = v0;
  *(_QWORD *)(v2 + 1184) = 0x41544F5551544547;
  *(_QWORD *)(v2 + 1192) = 0xE800000000000000;
  *(_QWORD *)(v2 + 1200) = sub_1A57231B4;
  *(_QWORD *)(v2 + 1208) = v56;
  v57 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_1_85(v57);
  v58 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v58 + 16) = sub_1A5721454;
  *(_QWORD *)(v58 + 24) = v0;
  *(_QWORD *)(v2 + 1216) = 0x41544F5551544553;
  *(_QWORD *)(v2 + 1224) = 0xE800000000000000;
  *(_QWORD *)(v2 + 1232) = sub_1A57231B4;
  *(_QWORD *)(v2 + 1240) = v58;
  v59 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_1_85(v59);
  v60 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v60 + 16) = sub_1A57215F0;
  *(_QWORD *)(v60 + 24) = v0;
  strcpy((char *)(v2 + 1248), "GETQUOTAROOT");
  *(_BYTE *)(v2 + 1261) = 0;
  *(_WORD *)(v2 + 1262) = -5120;
  *(_QWORD *)(v2 + 1264) = sub_1A57231B4;
  *(_QWORD *)(v2 + 1272) = v60;
  v61 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_1_85(v61);
  v62 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v62 + 16) = sub_1A57217B8;
  *(_QWORD *)(v62 + 24) = v0;
  *(_QWORD *)(v2 + 1280) = 0x53534552504D4F43;
  *(_QWORD *)(v2 + 1288) = 0xE800000000000000;
  *(_QWORD *)(v2 + 1296) = sub_1A57231B4;
  *(_QWORD *)(v2 + 1304) = v62;
  swift_retain_n();
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9DE0);
  sub_1A594AFEC();
  OUTLINED_FUNCTION_37_18();
  sub_1A5732B40();
  swift_bridgeObjectRelease();
  if (!v73)
  {
    result = *(double *)&v65;
    *(_OWORD *)v64 = v65;
    *(_OWORD *)(v64 + 16) = v66;
    *(_OWORD *)(v64 + 32) = v67;
    *(_OWORD *)(v64 + 48) = v68;
    *(_OWORD *)(v64 + 64) = v69;
    *(_OWORD *)(v64 + 80) = v70;
    *(_OWORD *)(v64 + 96) = v71;
    *(_QWORD *)(v64 + 112) = v72;
  }
  return result;
}

double sub_1A5720388@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 96) = 0;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  result = -2.37636446e-212;
  *(_OWORD *)(a1 + 104) = xmmword_1A59AC040;
  return result;
}

void sub_1A57203AC(uint64_t a1@<X0>, _QWORD *a2@<X1>, void *a3@<X8>)
{
  sub_1A57204C4(a1, a2, (void (*)(_QWORD *__return_ptr, uint64_t, _QWORD, _QWORD))sub_1A5720388, a3);
}

void sub_1A57203C8(uint64_t a1@<X0>, _QWORD *a2@<X1>, void *a3@<X8>)
{
  sub_1A57204C4(a1, a2, (void (*)(_QWORD *__return_ptr, uint64_t, _QWORD, _QWORD))sub_1A5720564, a3);
}

void sub_1A57203E4(uint64_t a1@<X0>, _QWORD *a2@<X1>, void *a3@<X8>)
{
  sub_1A57204C4(a1, a2, (void (*)(_QWORD *__return_ptr, uint64_t, _QWORD, _QWORD))sub_1A5720598, a3);
}

void sub_1A5720400(uint64_t a1@<X0>, _QWORD *a2@<X1>, void *a3@<X8>)
{
  sub_1A57204C4(a1, a2, (void (*)(_QWORD *__return_ptr, uint64_t, _QWORD, _QWORD))sub_1A57205CC, a3);
}

void sub_1A572041C(uint64_t a1@<X0>, _QWORD *a2@<X1>, void *a3@<X8>)
{
  sub_1A57204C4(a1, a2, (void (*)(_QWORD *__return_ptr, uint64_t, _QWORD, _QWORD))sub_1A5720600, a3);
}

void sub_1A5720438(uint64_t a1@<X0>, _QWORD *a2@<X1>, void *a3@<X8>)
{
  sub_1A57204C4(a1, a2, (void (*)(_QWORD *__return_ptr, uint64_t, _QWORD, _QWORD))sub_1A5720634, a3);
}

void sub_1A5720454(uint64_t a1@<X0>, _QWORD *a2@<X1>, void *a3@<X8>)
{
  sub_1A57204C4(a1, a2, (void (*)(_QWORD *__return_ptr, uint64_t, _QWORD, _QWORD))sub_1A5720668, a3);
}

void sub_1A5720470(uint64_t a1@<X0>, _QWORD *a2@<X1>, void *a3@<X8>)
{
  sub_1A57204C4(a1, a2, (void (*)(_QWORD *__return_ptr, uint64_t, _QWORD, _QWORD))sub_1A572069C, a3);
}

void sub_1A572048C(uint64_t a1@<X0>, _QWORD *a2@<X1>, void *a3@<X8>)
{
  sub_1A57204C4(a1, a2, (void (*)(_QWORD *__return_ptr, uint64_t, _QWORD, _QWORD))sub_1A57206D0, a3);
}

void sub_1A57204A8(uint64_t a1@<X0>, _QWORD *a2@<X1>, void *a3@<X8>)
{
  sub_1A57204C4(a1, a2, (void (*)(_QWORD *__return_ptr, uint64_t, _QWORD, _QWORD))sub_1A5720704, a3);
}

void sub_1A57204C4(uint64_t a1@<X0>, _QWORD *a2@<X1>, void (*a3)(_QWORD *__return_ptr, uint64_t, _QWORD, _QWORD)@<X2>, void *a4@<X8>)
{
  uint64_t v4;
  _QWORD __src[15];

  a3(__src, a1, *a2, a2[1]);
  if (!v4)
    sub_1A56B60BC(__src, a4);
  OUTLINED_FUNCTION_45_12();
}

_QWORD *sub_1A5720510@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, _QWORD *(*a3)(_QWORD *__return_ptr, uint64_t, _QWORD, _QWORD)@<X2>, void *a4@<X8>)
{
  uint64_t v4;
  _QWORD *result;
  _QWORD __src[15];

  result = a3(__src, a1, *a2, a2[1]);
  if (!v4)
    return sub_1A56B60BC(__src, a4);
  return result;
}

double sub_1A5720564@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 1;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  result = -2.37636446e-212;
  *(_OWORD *)(a1 + 104) = xmmword_1A59AC040;
  return result;
}

double sub_1A5720598@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 2;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  result = -2.37636446e-212;
  *(_OWORD *)(a1 + 104) = xmmword_1A59AC040;
  return result;
}

double sub_1A57205CC@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 3;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  result = -2.37636446e-212;
  *(_OWORD *)(a1 + 104) = xmmword_1A59AC040;
  return result;
}

double sub_1A5720600@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 4;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  result = -2.37636446e-212;
  *(_OWORD *)(a1 + 104) = xmmword_1A59AC040;
  return result;
}

double sub_1A5720634@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 5;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  result = -2.37636446e-212;
  *(_OWORD *)(a1 + 104) = xmmword_1A59AC040;
  return result;
}

double sub_1A5720668@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 6;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  result = -2.37636446e-212;
  *(_OWORD *)(a1 + 104) = xmmword_1A59AC040;
  return result;
}

double sub_1A572069C@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 7;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  result = -2.37636446e-212;
  *(_OWORD *)(a1 + 104) = xmmword_1A59AC040;
  return result;
}

double sub_1A57206D0@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 8;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  result = -2.37636446e-212;
  *(_OWORD *)(a1 + 104) = xmmword_1A59AC040;
  return result;
}

double sub_1A5720704@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 9;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  result = -2.37636446e-212;
  *(_OWORD *)(a1 + 104) = xmmword_1A59AC040;
  return result;
}

uint64_t sub_1A5720738@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  __int16 v18;
  int v19;

  v5 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v5 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v11 = a3;
      swift_retain();
    }
    else
    {
      v7 = result;
      v9 = *(_QWORD *)result;
      v10 = *(_QWORD *)(result + 8);
      v18 = *(_WORD *)(result + 20);
      v19 = *(_DWORD *)(result + 16);
      v17 = *(_BYTE *)(result + 22);
      swift_retain();
      swift_retain();
      sub_1A5751974(v7, v5, a3);
      if (!v4)
      {
        v12 = sub_1A57407A0();
        v14 = v13;
        v16 = v15;
        swift_release();
        result = swift_release();
        *(_QWORD *)a4 = v12;
        *(_QWORD *)(a4 + 8) = v14;
        *(_QWORD *)(a4 + 16) = v16;
        *(_OWORD *)(a4 + 24) = 0u;
        *(_OWORD *)(a4 + 40) = 0u;
        *(_OWORD *)(a4 + 56) = 0u;
        *(_OWORD *)(a4 + 72) = 0u;
        *(_OWORD *)(a4 + 88) = 0u;
        *(_OWORD *)(a4 + 104) = xmmword_1A59AC0B0;
        return result;
      }
      swift_release();
      *(_QWORD *)v7 = v9;
      *(_QWORD *)(v7 + 8) = v10;
      *(_DWORD *)(v7 + 16) = v19;
      *(_WORD *)(v7 + 20) = v18;
      *(_BYTE *)(v7 + 22) = v17;
    }
    swift_willThrow();
    return swift_release();
  }
  return result;
}

uint64_t sub_1A57208D8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A57208FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_4_52();
  return sub_1A5720738(v0, v1, v2, v3);
}

_QWORD *sub_1A5720914@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, void *a3@<X8>)
{
  uint64_t v3;

  return sub_1A5720510(a1, a2, *(_QWORD *(**)(_QWORD *__return_ptr, uint64_t, _QWORD, _QWORD))(v3 + 16), a3);
}

void sub_1A572092C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_4_52();
  sub_1A57209FC(v0, v1, v2, v3, v4, v5, v6, (uint64_t)sub_1A572319C, v7, (__n128)xmmword_1A59AC0C0, (uint64_t)&type metadata for Capability);
  OUTLINED_FUNCTION_9();
}

void sub_1A5720964()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A572141C();
}

void sub_1A5720984()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A572141C();
}

void sub_1A57209A4()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A572141C();
}

void sub_1A57209C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_4_52();
  sub_1A57209FC(v0, v1, v2, v3, v4, v5, v6, (uint64_t)sub_1A5723184, v7, (__n128)xmmword_1A59AC0D0, (uint64_t)&type metadata for RumpURLAndMechanism);
  OUTLINED_FUNCTION_9();
}

__n128 sub_1A57209FC@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __n128 a10@<Q0>, uint64_t a11)
{
  uint64_t v11;
  uint64_t v13;
  __n128 result;
  _BYTE v16[16];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v17 = a4;
  v18 = a5;
  v19 = a6;
  v20 = a7;
  v13 = sub_1A5760D2C(a1, a2, a3, a8, (uint64_t)v16, a11);
  if (!v11)
  {
    *(_QWORD *)a9 = v13;
    *(_OWORD *)(a9 + 8) = 0u;
    *(_OWORD *)(a9 + 24) = 0u;
    OUTLINED_FUNCTION_23_25((__n128)0);
    result = a10;
    *(__n128 *)(a9 + 104) = a10;
  }
  return result;
}

void sub_1A5720A60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_4_52();
  sub_1A57209FC(v0, v1, v2, v3, v4, v5, v6, (uint64_t)sub_1A572316C, v7, (__n128)xmmword_1A59AC0E0, (uint64_t)&type metadata for ByteBuffer);
  OUTLINED_FUNCTION_9();
}

void sub_1A5720A98()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A572141C();
}

uint64_t sub_1A5720AB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_4_52();
  return sub_1A5721474(v0, v1, v2, v3, v4, v5, v6, v7, (__n128)xmmword_1A59AC0F0);
}

void sub_1A5720AD8()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A572141C();
}

void sub_1A5720AF8()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A572141C();
}

void sub_1A5720B18(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[16];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v35 = a7;
  v32 = a4;
  v33 = a5;
  v34 = a6;
  sub_1A575E964(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5723154, (uint64_t)v31);
  if (!v8)
  {
    v28 = v17;
    v29 = v18;
    v30 = v19;
    v36 = v20;
    v27 = a8;
    swift_retain_n();
    sub_1A575E9F4(a1, a2, a3, a4, a5, a6, a7);
    v22 = v21;
    swift_release();
    if (!v22)
      v22 = MEMORY[0x1E0DEE9D8];
    sub_1A5751974(a1, a2, a3);
    sub_1A5738ED4(a1, a2, a3, a4, a5, a6, a7);
    *(_QWORD *)v27 = v24;
    *(_QWORD *)(v27 + 8) = v23;
    *(_QWORD *)(v27 + 16) = v25;
    *(_QWORD *)(v27 + 24) = v22;
    *(_QWORD *)(v27 + 32) = v28;
    *(_QWORD *)(v27 + 40) = v29;
    v26 = v36;
    *(_QWORD *)(v27 + 48) = v30;
    *(_QWORD *)(v27 + 56) = v26;
    *(_OWORD *)(v27 + 64) = 0u;
    *(_OWORD *)(v27 + 80) = 0u;
    *(_QWORD *)(v27 + 96) = 0;
    *(_OWORD *)(v27 + 104) = xmmword_1A59AC100;
  }
}

void sub_1A5720CB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_4_52();
  sub_1A5720B18(v0, v1, v2, v3, v4, v5, v6, v7);
}

void sub_1A5720CD0()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A572141C();
}

void sub_1A5720CF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_4_52();
  sub_1A5720D94(v0, v1, v2, v3, v4, v5, v6, v7, (__n128)xmmword_1A59AC110);
}

void sub_1A5720D10()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A572141C();
}

void sub_1A5720D30()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A572141C();
}

uint64_t sub_1A5720D50()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1A5720D74()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A572141C();
}

void sub_1A5720D94(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, __n128 a9@<Q0>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v29;
  __int16 v30;
  int v31;

  v10 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    if (v10 >= a3)
    {
      sub_1A5718F9C();
      OUTLINED_FUNCTION_21();
      *v22 = a3;
      OUTLINED_FUNCTION_17_0();
    }
    else
    {
      v17 = *(_QWORD *)a1;
      v18 = *(_QWORD *)(a1 + 8);
      v30 = *(_WORD *)(a1 + 20);
      v31 = *(_DWORD *)(a1 + 16);
      v29 = *(_BYTE *)(a1 + 22);
      OUTLINED_FUNCTION_17_0();
      OUTLINED_FUNCTION_30();
      OUTLINED_FUNCTION_52_9(a1);
      if (!v9)
      {
        v19 = OUTLINED_FUNCTION_15_36(a1, v10, a3, a4, a5, a6, a7);
        v26 = OUTLINED_FUNCTION_17_32(v19, v20, v21);
        sub_1A5721D08(a1, v10, a3, a4, a5, a6, a7);
        v24 = v23;
        OUTLINED_FUNCTION_23();
        swift_release();
        OUTLINED_FUNCTION_46_10();
        *(_QWORD *)a8 = v26;
        *(_QWORD *)(a8 + 8) = v25;
        *(_QWORD *)(a8 + 16) = v24;
        *(_OWORD *)(a8 + 24) = 0u;
        *(_OWORD *)(a8 + 40) = 0u;
        *(_OWORD *)(a8 + 56) = 0u;
        *(_OWORD *)(a8 + 72) = 0u;
        *(_OWORD *)(a8 + 88) = 0u;
        *(__n128 *)(a8 + 104) = a9;
LABEL_8:
        OUTLINED_FUNCTION_45_12();
        return;
      }
      swift_release();
      *(_QWORD *)a1 = v17;
      *(_QWORD *)(a1 + 8) = v18;
      *(_DWORD *)(a1 + 16) = v31;
      *(_WORD *)(a1 + 20) = v30;
      *(_BYTE *)(a1 + 22) = v29;
    }
    swift_willThrow();
    OUTLINED_FUNCTION_23();
    goto LABEL_8;
  }
  __break(1u);
}

void sub_1A5720F48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_4_52();
  sub_1A5720D94(v0, v1, v2, v3, v4, v5, v6, v7, (__n128)xmmword_1A59AC120);
}

void sub_1A5720F68()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A572141C();
}

uint64_t sub_1A5720F88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_4_52();
  return sub_1A5721474(v0, v1, v2, v3, v4, v5, v6, v7, (__n128)xmmword_1A59AC130);
}

uint64_t sub_1A5720FA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_4_52();
  return sub_1A5721474(v0, v1, v2, v3, v4, v5, v6, v7, (__n128)xmmword_1A59AC140);
}

void sub_1A5720FC8()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A572141C();
}

void sub_1A5720FE8()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A572141C();
}

void sub_1A5721008()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A572141C();
}

uint64_t sub_1A5721028@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(uint64_t)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v23;
  __int16 v24;
  int v25;

  v6 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v6 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v13 = a3;
      swift_retain();
    }
    else
    {
      v9 = result;
      v10 = *(_QWORD *)result;
      v11 = *(_QWORD *)(result + 8);
      v24 = *(_WORD *)(result + 20);
      v25 = *(_DWORD *)(result + 16);
      v23 = *(_BYTE *)(result + 22);
      swift_retain();
      swift_retain();
      sub_1A5751974(v9, v6, a3);
      if (!v5)
      {
        sub_1A574052C(v9, v6, a3, a4);
        v20 = sub_1A594B4B4();
        v21 = v12;
        swift_bridgeObjectRelease();
        swift_retain();
        sub_1A575EA20();
        v15 = v14;
        v17 = v16;
        v19 = v18;
        swift_release();
        result = swift_release();
        *(_QWORD *)a5 = v20;
        *(_QWORD *)(a5 + 8) = v21;
        *(_QWORD *)(a5 + 16) = v15;
        *(_QWORD *)(a5 + 24) = v17;
        *(_QWORD *)(a5 + 32) = v19 & 0xFFFFFFFFFFFFFFLL;
        *(_OWORD *)(a5 + 40) = 0u;
        *(_OWORD *)(a5 + 56) = 0u;
        *(_OWORD *)(a5 + 72) = 0u;
        *(_OWORD *)(a5 + 88) = 0u;
        *(_OWORD *)(a5 + 104) = xmmword_1A59AC150;
        return result;
      }
      swift_release();
      *(_QWORD *)v9 = v10;
      *(_QWORD *)(v9 + 8) = v11;
      *(_DWORD *)(v9 + 16) = v25;
      *(_WORD *)(v9 + 20) = v24;
      *(_BYTE *)(v9 + 22) = v23;
    }
    swift_willThrow();
    return swift_release();
  }
  return result;
}

uint64_t sub_1A5721228()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;

  OUTLINED_FUNCTION_4_52();
  return sub_1A5721028(v0, v1, v2, v3, v4);
}

void sub_1A5721240()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A572141C();
}

uint64_t sub_1A5721260@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  __int16 v26;
  int v27;

  v9 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v9 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v18 = a3;
      swift_retain();
    }
    else
    {
      v14 = result;
      v16 = *(_QWORD *)result;
      v17 = *(_QWORD *)(result + 8);
      v26 = *(_WORD *)(result + 20);
      v27 = *(_DWORD *)(result + 16);
      v25 = *(_BYTE *)(result + 22);
      swift_retain();
      swift_retain();
      sub_1A5751974(v14, v9, a3);
      if (!v8)
      {
        v19 = sub_1A573EE0C(v14, v9, a3, a4, a5, a6, a7);
        v21 = v20;
        v23 = v22;
        swift_release();
        result = swift_release();
        *(_QWORD *)a8 = v19;
        *(_QWORD *)(a8 + 8) = v21;
        *(_QWORD *)(a8 + 16) = v23 & 0xFFFFFFFFFFFFFFLL;
        *(_OWORD *)(a8 + 24) = 0u;
        *(_OWORD *)(a8 + 40) = 0u;
        *(_OWORD *)(a8 + 56) = 0u;
        *(_OWORD *)(a8 + 72) = 0u;
        *(_OWORD *)(a8 + 88) = 0u;
        *(_OWORD *)(a8 + 104) = xmmword_1A59AC160;
        return result;
      }
      swift_release();
      *(_QWORD *)v14 = v16;
      *(_QWORD *)(v14 + 8) = v17;
      *(_DWORD *)(v14 + 16) = v27;
      *(_WORD *)(v14 + 20) = v26;
      *(_BYTE *)(v14 + 22) = v25;
    }
    swift_willThrow();
    return swift_release();
  }
  return result;
}

uint64_t sub_1A5721404()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_4_52();
  return sub_1A5721260(v0, v1, v2, v3, v4, v5, v6, v7);
}

void sub_1A572141C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;

  v1 = OUTLINED_FUNCTION_14_30();
  v9 = OUTLINED_FUNCTION_19_27(v1, v2, v3, v4, v5, v6, v7, v8, v18);
  if (!v0)
    OUTLINED_FUNCTION_25_20((uint64_t)v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24);
  OUTLINED_FUNCTION_32_18();
}

void sub_1A5721454()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A572141C();
}

uint64_t sub_1A5721474@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, __n128 a9@<Q0>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  char v28;
  __int16 v29;
  int v30;

  v10 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v10 >= a3)
    {
      sub_1A5718F9C();
      OUTLINED_FUNCTION_21();
      *v20 = a3;
      OUTLINED_FUNCTION_17_0();
      goto LABEL_6;
    }
    v16 = result;
    v17 = *(_QWORD *)result;
    v18 = *(_QWORD *)(result + 8);
    v29 = *(_WORD *)(result + 20);
    v30 = *(_DWORD *)(result + 16);
    v28 = *(_BYTE *)(result + 22);
    OUTLINED_FUNCTION_17_0();
    swift_retain();
    OUTLINED_FUNCTION_52_9(v16);
    if (v9)
    {
      swift_release();
      *(_QWORD *)v16 = v17;
      *(_QWORD *)(v16 + 8) = v18;
      *(_DWORD *)(v16 + 16) = v30;
      *(_WORD *)(v16 + 20) = v29;
      *(_BYTE *)(v16 + 22) = v28;
LABEL_6:
      swift_willThrow();
      return OUTLINED_FUNCTION_23();
    }
    v19 = OUTLINED_FUNCTION_15_36(v16, v10, a3, a4, a5, a6, a7);
    v23 = OUTLINED_FUNCTION_17_32(v19, v21, v22);
    v25 = v24;
    OUTLINED_FUNCTION_23();
    result = swift_release();
    *(_QWORD *)a8 = v23;
    *(_QWORD *)(a8 + 8) = v25;
    *(_OWORD *)(a8 + 16) = 0u;
    *(_OWORD *)(a8 + 32) = 0u;
    *(_OWORD *)(a8 + 48) = 0u;
    *(_OWORD *)(a8 + 64) = 0u;
    *(_OWORD *)(a8 + 80) = 0u;
    *(_QWORD *)(a8 + 96) = 0;
    *(__n128 *)(a8 + 104) = a9;
  }
  return result;
}

uint64_t sub_1A57215F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_4_52();
  return sub_1A5721474(v0, v1, v2, v3, v4, v5, v6, v7, (__n128)xmmword_1A59AC170);
}

uint64_t sub_1A5721610@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(uint64_t)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  __int16 v18;
  int v19;

  v6 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v6 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v12 = a3;
      swift_retain();
    }
    else
    {
      v9 = result;
      v10 = *(_QWORD *)result;
      v11 = *(_QWORD *)(result + 8);
      v18 = *(_WORD *)(result + 20);
      v19 = *(_DWORD *)(result + 16);
      v17 = *(_BYTE *)(result + 22);
      swift_retain();
      swift_retain();
      sub_1A5751974(v9, v6, a3);
      if (!v5)
      {
        sub_1A574052C(v9, v6, a3, a4);
        v13 = sub_1A594B4B4();
        v15 = v14;
        swift_release();
        swift_release();
        result = swift_bridgeObjectRelease();
        *(_QWORD *)a5 = v13;
        *(_QWORD *)(a5 + 8) = v15;
        *(_OWORD *)(a5 + 16) = 0u;
        *(_OWORD *)(a5 + 32) = 0u;
        *(_OWORD *)(a5 + 48) = 0u;
        *(_OWORD *)(a5 + 64) = 0u;
        *(_OWORD *)(a5 + 80) = 0u;
        *(_QWORD *)(a5 + 96) = 0;
        *(_OWORD *)(a5 + 104) = xmmword_1A59AC180;
        return result;
      }
      swift_release();
      *(_QWORD *)v9 = v10;
      *(_QWORD *)(v9 + 8) = v11;
      *(_DWORD *)(v9 + 16) = v19;
      *(_WORD *)(v9 + 20) = v18;
      *(_BYTE *)(v9 + 22) = v17;
    }
    swift_willThrow();
    return swift_release();
  }
  return result;
}

uint64_t sub_1A57217B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;

  OUTLINED_FUNCTION_4_52();
  return sub_1A5721610(v0, v1, v2, v3, v4);
}

void sub_1A57217D0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  int v17;
  int v18;
  int v19;
  __int16 v20;
  char v21;

  sub_1A5751974(a1, a2, a3);
  if (!v8)
  {
    *(_QWORD *)a8 = sub_1A573EE0C(a1, a2, a3, a4, a5, a6, a7);
    *(_DWORD *)(a8 + 8) = v17;
    *(_DWORD *)(a8 + 12) = v18;
    *(_DWORD *)(a8 + 16) = v19;
    *(_WORD *)(a8 + 20) = v20;
    *(_BYTE *)(a8 + 22) = v21;
  }
}

void sub_1A572186C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_7_36();
  OUTLINED_FUNCTION_9_41(v2, v3, v4);
  if (!v1)
  {
    v5 = OUTLINED_FUNCTION_4_53();
    v9 = v7;
    v10 = v6;
    v11 = v5;
    OUTLINED_FUNCTION_9_40();
    OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_11_26();
    sub_1A57560E8();
    *(_QWORD *)v0 = v11;
    *(_QWORD *)(v0 + 8) = v10;
    *(_QWORD *)(v0 + 16) = v9 & 0xFFFFFFFFFFFFFFLL;
    *(_QWORD *)(v0 + 24) = v8;
    OUTLINED_FUNCTION_10_38();
    *(_OWORD *)(v0 + 104) = xmmword_1A59AC190;
  }
  OUTLINED_FUNCTION_2_71();
}

void sub_1A5721900(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;

  sub_1A5751974(a1, a2, a3);
  if (!v8)
  {
    OUTLINED_FUNCTION_54_7();
    v16 = OUTLINED_FUNCTION_15_36(v13, v14, v15, a4, a5, a6, a7);
    v18 = v17;
    v36 = v19;
    v20 = a6;
    v35 = a7;
    if (v21 < v17)
    {
      __break(1u);
LABEL_10:
      __break(1u);
      return;
    }
    v22 = v16;
    OUTLINED_FUNCTION_176();
    v23 = *(_QWORD *)(v22 + 24) + ((v36 >> 24) & 0xFFFF00 | BYTE6(v36)) + v18;
    OUTLINED_FUNCTION_30();
    v37 = sub_1A594B538();
    v25 = v24;
    swift_release_n();
    OUTLINED_FUNCTION_24_22();
    if (!v23)
    {
      OUTLINED_FUNCTION_54_7();
      OUTLINED_FUNCTION_15_36(v26, v27, v28, v29, a5, v20, v35);
      if (v31 >= v30)
      {
        OUTLINED_FUNCTION_176();
        OUTLINED_FUNCTION_17_0();
        v32 = sub_1A594B538();
        v34 = v33;
        swift_release_n();
        *(_QWORD *)a8 = v37;
        *(_QWORD *)(a8 + 8) = v25;
        *(_QWORD *)(a8 + 16) = v32;
        *(_QWORD *)(a8 + 24) = v34;
        *(_OWORD *)(a8 + 32) = 0u;
        *(_OWORD *)(a8 + 48) = 0u;
        *(_OWORD *)(a8 + 64) = 0u;
        *(_OWORD *)(a8 + 80) = 0u;
        *(_QWORD *)(a8 + 96) = 0;
        *(_OWORD *)(a8 + 104) = xmmword_1A59AC1A0;
        return;
      }
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
  }
}

void sub_1A5721AD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;

  OUTLINED_FUNCTION_39_17(a1, a2, a3);
  if (!v4)
  {
    v30 = v3;
    v5 = OUTLINED_FUNCTION_31_17();
    v12 = sub_1A573EE0C(v5, v6, v7, v8, v9, v10, v11);
    v15 = OUTLINED_FUNCTION_17_32(v12, v13, v14);
    v29 = v16;
    OUTLINED_FUNCTION_8_41();
    v28 = v15;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AEA8);
    v17 = OUTLINED_FUNCTION_20_1();
    *(_OWORD *)(v17 + 16) = xmmword_1A59ABD10;
    v18 = OUTLINED_FUNCTION_31_17();
    v21 = sub_1A5740644(v18, v19, v20);
    *(_BYTE *)(v17 + 32) = v21;
    MEMORY[0x1E0C80A78](v21);
    v22 = OUTLINED_FUNCTION_41_11();
    sub_1A5751E24(v22, v23, v24, v25, v26, v27);
    OUTLINED_FUNCTION_8_41();
    *(_QWORD *)v30 = v28;
    *(_QWORD *)(v30 + 8) = v29;
    *(_QWORD *)(v30 + 16) = v17;
    *(_OWORD *)(v30 + 24) = 0u;
    *(_OWORD *)(v30 + 40) = 0u;
    *(_OWORD *)(v30 + 56) = 0u;
    *(_OWORD *)(v30 + 72) = 0u;
    *(_OWORD *)(v30 + 88) = 0u;
    *(_OWORD *)(v30 + 104) = xmmword_1A59AC1B0;
  }
  OUTLINED_FUNCTION_32_17();
}

void sub_1A5721C6C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t v4;

  sub_1A5751898();
  if (!v4)
    *a4 = sub_1A5740644(a1, a2, a3);
}

void sub_1A5721D08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v7;
  id v15;

  OUTLINED_FUNCTION_34_19();
  sub_1A5756370(a1, a2, a3, a4, a5, a6, a7);
  if (v7)
  {
    v15 = v7;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if (OUTLINED_FUNCTION_17_31())
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

  }
}

void sub_1A5721DFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_7_36();
  OUTLINED_FUNCTION_9_41(v2, v3, v4);
  if (!v1)
  {
    v5 = OUTLINED_FUNCTION_4_53();
    v19 = OUTLINED_FUNCTION_17_32(v5, v6, v7);
    OUTLINED_FUNCTION_9_40();
    v8 = OUTLINED_FUNCTION_11_26();
    sub_1A572BFEC(v8, v9, v10, v11, v12, v13, v14);
    OUTLINED_FUNCTION_46_10();
    *(_QWORD *)v0 = v19;
    *(_QWORD *)(v0 + 8) = v16;
    *(_QWORD *)(v0 + 16) = v17;
    *(_QWORD *)(v0 + 24) = v18;
    *(_QWORD *)(v0 + 32) = v15 & 0xFFFFFFFFFFFFFFLL;
    OUTLINED_FUNCTION_23_25((__n128)0);
    *(_OWORD *)(v0 + 104) = xmmword_1A59AC1C0;
  }
  OUTLINED_FUNCTION_2_71();
}

#error "1A5721F04: call analysis failed (funcsize=39)"

#error "1A5721FB0: call analysis failed (funcsize=43)"

void sub_1A5721FD8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(uint64_t)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  char v17;

  sub_1A5751974(a1, a2, a3);
  if (!v5)
  {
    sub_1A574052C(a1, a2, a3, a4);
    v12 = v11;
    v14 = v13;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v15 = sub_1A56AB370(61, 0xE100000000000000, v12, v14);
    v17 = v16;
    swift_bridgeObjectRelease();
    *(_QWORD *)a5 = v12;
    *(_QWORD *)(a5 + 8) = v14;
    *(_QWORD *)(a5 + 16) = v15;
    *(_BYTE *)(a5 + 24) = v17 & 1;
  }
}

void sub_1A57220B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;

  OUTLINED_FUNCTION_7_36();
  v2 = v1;
  v4 = v3;
  sub_1A5751974(v1, v5, v6);
  if (!v0)
  {
    OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_6_47();
    sub_1A575EA7C();
    v8 = MEMORY[0x1E0DEE9D8];
    if (v7)
      v8 = v7;
    v30 = v8;
    OUTLINED_FUNCTION_6_47();
    v16 = sub_1A573EE0C(v9, v10, v11, v12, v13, v14, v15);
    v29 = OUTLINED_FUNCTION_17_32(v16, v17, v18);
    v28 = v19;
    OUTLINED_FUNCTION_33_16(v2);
    OUTLINED_FUNCTION_6_47();
    sub_1A5725058(v20, v21, v22, v23, v24, v25, v26);
    *(_QWORD *)v4 = v30;
    *(_QWORD *)(v4 + 8) = v29;
    *(_QWORD *)(v4 + 16) = v28;
    *(_QWORD *)(v4 + 24) = v27;
    *(_OWORD *)(v4 + 32) = 0u;
    *(_OWORD *)(v4 + 48) = 0u;
    *(_OWORD *)(v4 + 64) = 0u;
    *(_OWORD *)(v4 + 80) = 0u;
    *(_QWORD *)(v4 + 96) = 0;
    *(_OWORD *)(v4 + 104) = xmmword_1A59AC1F0;
  }
  OUTLINED_FUNCTION_2_71();
}

void sub_1A57221B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_7_36();
  OUTLINED_FUNCTION_9_41(v2, v3, v4);
  if (!v1)
  {
    v5 = OUTLINED_FUNCTION_4_53();
    v12 = OUTLINED_FUNCTION_17_32(v5, v6, v7);
    OUTLINED_FUNCTION_9_40();
    OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_11_26();
    sub_1A57569C8();
    OUTLINED_FUNCTION_46_10();
    *(_QWORD *)v0 = v12;
    *(_QWORD *)(v0 + 8) = v8;
    *(_QWORD *)(v0 + 16) = v9;
    *(_QWORD *)(v0 + 24) = v10;
    *(_QWORD *)(v0 + 32) = v11;
    OUTLINED_FUNCTION_23_25((__n128)0);
    *(_OWORD *)(v0 + 104) = xmmword_1A59AC200;
  }
  OUTLINED_FUNCTION_2_71();
}

void sub_1A572224C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_44_10();
  v2 = v1;
  OUTLINED_FUNCTION_34_19();
  v3 = OUTLINED_FUNCTION_36_16();
  v4 = sub_1A57569E4(v3);
  if (!v0)
  {
    v8 = v4;
    OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_36_16();
    sub_1A5760E18();
    OUTLINED_FUNCTION_46_10();
    *(_QWORD *)v2 = v8;
    *(_QWORD *)(v2 + 8) = v6;
    *(_QWORD *)(v2 + 16) = v7;
    goto LABEL_6;
  }
  v5 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
  if (OUTLINED_FUNCTION_17_31())
  {

    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_9_2();

    *(_QWORD *)v2 = 0;
    *(_QWORD *)(v2 + 8) = 0;
    *(_QWORD *)(v2 + 16) = MEMORY[0x1E0DEE9D8];
LABEL_6:
    *(_OWORD *)(v2 + 24) = 0u;
    OUTLINED_FUNCTION_23_25((__n128)0);
    *(_OWORD *)(v2 + 104) = xmmword_1A59AC070;
    goto LABEL_7;
  }

LABEL_7:
  OUTLINED_FUNCTION_45_12();
}

void sub_1A5722380(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  sub_1A5751974(a1, a2, a3);
  if (!v8)
  {
    v17 = __OFADD__(a2, 1);
    v18 = a2 + 1;
    if (v17)
    {
      __break(1u);
    }
    else if (v18 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v22 = a3;
      swift_retain();
      swift_willThrow();
      swift_release();
    }
    else
    {
      swift_retain();
      swift_retain();
      v19 = sub_1A573EE0C(a1, v18, a3, a4, a5, a6, a7);
      v27 = v20;
      v28 = v21;
      v29 = v19;
      sub_1A5751974(a1, v18, a3);
      sub_1A5740840(a1, v18, a3);
      v24 = v23;
      v26 = v25;
      swift_release();
      swift_release();
      *(_QWORD *)a8 = v29;
      *(_QWORD *)(a8 + 8) = v27;
      *(_DWORD *)(a8 + 16) = v28;
      *(_WORD *)(a8 + 20) = WORD2(v28);
      *(_BYTE *)(a8 + 22) = BYTE6(v28);
      *(_QWORD *)(a8 + 24) = v24;
      *(_QWORD *)(a8 + 32) = v26;
    }
  }
}

void sub_1A5722578(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  char v31;
  void *v32;

  OUTLINED_FUNCTION_34_19();
  OUTLINED_FUNCTION_37_18();
  sub_1A575E9F4(v9, v10, v11, v12, v13, v14, v15);
  if (!v4)
  {
    v32 = v16;
    sub_1A5751974(a1, a2, a3);
    OUTLINED_FUNCTION_37_18();
    sub_1A5738ED4(v17, v18, v19, v20, v21, v22, v23);
    v27 = v24;
    v28 = v25;
    v29 = v26;
    if (v32)
    {
      sub_1A568A0E4();
      v30 = v32;
      if ((v31 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v30 = &unk_1E4E5E950;
      }
    }
    else
    {
      v30 = (void *)MEMORY[0x1E0DEE9D8];
    }
    *(_QWORD *)a4 = v29;
    *(_QWORD *)(a4 + 8) = v27;
    *(_QWORD *)(a4 + 16) = v28;
    *(_QWORD *)(a4 + 24) = v30;
    *(_OWORD *)(a4 + 32) = 0u;
    *(_OWORD *)(a4 + 48) = 0u;
    *(_OWORD *)(a4 + 64) = 0u;
    *(_OWORD *)(a4 + 80) = 0u;
    *(_QWORD *)(a4 + 96) = 0;
    *(_OWORD *)(a4 + 104) = xmmword_1A59AC210;
  }
  OUTLINED_FUNCTION_32_17();
}

void sub_1A5722694(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, _QWORD *a6@<X8>)
{
  uint64_t v6;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  unsigned int v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  OUTLINED_FUNCTION_34_19();
  OUTLINED_FUNCTION_54_7();
  sub_1A575EA98(v13, v14, v15, a2, a3, a4, a5, v16, v37, v38, v40, v42, v44, v46, v47, v48, v49);
  if (!v6)
  {
    OUTLINED_FUNCTION_33_16(a1);
    OUTLINED_FUNCTION_54_7();
    v20 = sub_1A573EE0C(v17, v18, v19, a2, a3, a4, a5);
    v23 = OUTLINED_FUNCTION_17_32(v20, v21, v22);
    v45 = v24;
    OUTLINED_FUNCTION_33_16(a1);
    OUTLINED_FUNCTION_6_47();
    sub_1A572CC3C(v25, v26, v27, v28, v29, v30, v31);
    v39 = v33;
    v41 = v32;
    v43 = v34;
    OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_6_47();
    sub_1A575EBBC();
    v36 = MEMORY[0x1E0DEE9D8];
    if (v35)
      v36 = v35;
    *a6 = v50;
    a6[1] = v51;
    a6[2] = v52;
    a6[3] = v53;
    a6[4] = v54;
    a6[5] = v55;
    a6[6] = v56;
    a6[7] = v57;
    a6[8] = v58;
    a6[9] = v23;
    a6[10] = v45;
    a6[11] = v41;
    a6[12] = v43;
    a6[13] = v39 & 0x1FFFFFFFFFFFFFFLL | 0xC00000000000000;
    a6[14] = v36;
  }
  OUTLINED_FUNCTION_29_18();
}

#error "1A5722928: call analysis failed (funcsize=32)"

#error "1A57229AC: call analysis failed (funcsize=32)"

void sub_1A57229C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;

  OUTLINED_FUNCTION_30_18();
  sub_1A5751898();
  if (!v1)
  {
    swift_retain();
    v2 = OUTLINED_FUNCTION_35_15();
    sub_1A5754EFC(v2, v3, v4, v5, v6, v7, v8);
    if (v22 >> 58 == 17)
    {
      *(_QWORD *)v0 = v9;
      *(_QWORD *)(v0 + 8) = v10;
      *(_QWORD *)(v0 + 16) = v11;
      *(_QWORD *)(v0 + 24) = v12;
      OUTLINED_FUNCTION_10_38();
      *(_OWORD *)(v0 + 104) = xmmword_1A59AC240;
    }
    else
    {
      sub_1A567FB10(v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
      sub_1A594C9C0();
      __break(1u);
    }
  }
}

double sub_1A5722AE8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;
  uint64_t v4;
  uint64_t v5;

  sub_1A5751898();
  if (!v1)
  {
    swift_retain();
    sub_1A57570A0();
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v4 & 0xFFFFFFFFFFLL;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 80) = 0u;
    *(_QWORD *)(a1 + 96) = 0;
    result = 4.94660803e173;
    *(_OWORD *)(a1 + 104) = xmmword_1A59AC250;
  }
  return result;
}

void sub_1A5722BBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t inited;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;

  sub_1A5751974(a1, a2, a3);
  if (!v3)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9DE8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A59ABDD0;
    v8 = (_QWORD *)OUTLINED_FUNCTION_20_1();
    OUTLINED_FUNCTION_18_27(v8);
    v9 = OUTLINED_FUNCTION_20_1();
    *(_QWORD *)(v9 + 16) = sub_1A5722E18;
    *(_QWORD *)(v9 + 24) = a3;
    *(_QWORD *)(inited + 32) = sub_1A57231B4;
    *(_QWORD *)(inited + 40) = v9;
    v10 = (_QWORD *)OUTLINED_FUNCTION_20_1();
    OUTLINED_FUNCTION_18_27(v10);
    v11 = OUTLINED_FUNCTION_20_1();
    *(_QWORD *)(v11 + 16) = sub_1A5722E38;
    *(_QWORD *)(v11 + 24) = a3;
    *(_QWORD *)(inited + 48) = sub_1A57231B4;
    *(_QWORD *)(inited + 56) = v11;
    v12 = (_QWORD *)OUTLINED_FUNCTION_20_1();
    OUTLINED_FUNCTION_18_27(v12);
    v13 = OUTLINED_FUNCTION_20_1();
    *(_QWORD *)(v13 + 16) = sub_1A5722E58;
    *(_QWORD *)(v13 + 24) = a3;
    *(_QWORD *)(inited + 64) = sub_1A57231B4;
    *(_QWORD *)(inited + 72) = v13;
    v14 = (_QWORD *)OUTLINED_FUNCTION_20_1();
    OUTLINED_FUNCTION_18_27(v14);
    v15 = OUTLINED_FUNCTION_20_1();
    *(_QWORD *)(v15 + 16) = sub_1A5722E78;
    *(_QWORD *)(v15 + 24) = a3;
    *(_QWORD *)(inited + 80) = sub_1A57231B4;
    *(_QWORD *)(inited + 88) = v15;
    v16 = (_QWORD *)OUTLINED_FUNCTION_20_1();
    OUTLINED_FUNCTION_18_27(v16);
    v17 = OUTLINED_FUNCTION_20_1();
    *(_QWORD *)(v17 + 16) = sub_1A5722E98;
    *(_QWORD *)(v17 + 24) = a3;
    *(_QWORD *)(inited + 96) = sub_1A57231B4;
    *(_QWORD *)(inited + 104) = v17;
    v18 = (_QWORD *)OUTLINED_FUNCTION_20_1();
    OUTLINED_FUNCTION_18_27(v18);
    v19 = OUTLINED_FUNCTION_20_1();
    *(_QWORD *)(v19 + 16) = sub_1A5722EB8;
    *(_QWORD *)(v19 + 24) = a3;
    *(_QWORD *)(inited + 112) = sub_1A57231B4;
    *(_QWORD *)(inited + 120) = v19;
    swift_retain_n();
    sub_1A57706CC(inited, a1, a2, a3, 0xD000000000000020, 0x80000001A5A0F5E0, 456);
    swift_setDeallocating();
    sub_1A5774244();
  }
}

void sub_1A5722E18()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A572141C();
}

void sub_1A5722E38()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A572141C();
}

void sub_1A5722E58()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A572141C();
}

void sub_1A5722E78()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A572141C();
}

void sub_1A5722E98()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A572141C();
}

double sub_1A5722EB8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4_52();
  return sub_1A5722AE8(v0);
}

void sub_1A5722ED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t *v7;
  uint64_t v8;
  uint64_t v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  __int128 v23[4];
  uint64_t v24;

  OUTLINED_FUNCTION_39_17(a1, a2, a3);
  if (!v8)
  {
    OUTLINED_FUNCTION_8_41();
    v22 = v7;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AE98);
    v13 = OUTLINED_FUNCTION_20_1();
    *(_OWORD *)(v13 + 16) = xmmword_1A59ABD10;
    sub_1A57408C8(a4, a5, a6, a7, (uint64_t)v23);
    v14 = sub_1A5702374(v23, (_OWORD *)(v13 + 32));
    v21 = (uint64_t)&v21;
    v24 = v13;
    MEMORY[0x1E0C80A78](v14);
    v15 = OUTLINED_FUNCTION_41_11();
    sub_1A5751E40(v15, v16, v17, v18, v19, v20);
    OUTLINED_FUNCTION_8_41();
    *v22 = v24;
  }
  OUTLINED_FUNCTION_32_17();
}

void sub_1A5723028(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _OWORD *a8@<X8>)
{
  uint64_t v8;
  __int128 v14[4];

  sub_1A5751974(a1, a2, a3);
  if (!v8)
  {
    sub_1A57408C8(a4, a5, a6, a7, (uint64_t)v14);
    sub_1A5702374(v14, a8);
  }
}

uint64_t sub_1A57230D4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  if (a5 != -1)
  {
    sub_1A5666868(result, a2, a3, a4, a5 & 1);
    return sub_1A56668A4(a6, a7, a8);
  }
  return result;
}

void sub_1A5723124()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;

  OUTLINED_FUNCTION_4_52();
  sub_1A5721C6C(v0, v1, v2, v3);
}

void sub_1A572313C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;

  OUTLINED_FUNCTION_4_52();
  sub_1A5723028(v0, v1, v2, v3, v4, v5, v6, v7);
}

void sub_1A5723154()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A574E658();
}

void sub_1A572316C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_4_52();
  sub_1A57217D0(v0, v1, v2, v3, v4, v5, v6, v7);
}

void sub_1A5723184()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_4_52();
  sub_1A5722380(v0, v1, v2, v3, v4, v5, v6, v7);
}

void sub_1A572319C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;

  OUTLINED_FUNCTION_4_52();
  sub_1A5721FD8(v0, v1, v2, v3, v4);
}

_QWORD *sub_1A57231B4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, void *a3@<X8>)
{
  return sub_1A5720914(a1, a2, a3);
}

_QWORD *OUTLINED_FUNCTION_1_85(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  result[2] = v4;
  result[3] = v3;
  result[4] = v2;
  result[5] = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_4_53()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  return sub_1A573EE0C(v6, v5, v4, v3, v2, v1, v0);
}

double OUTLINED_FUNCTION_5_53(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  double result;

  *(_QWORD *)v12 = a12;
  *(_QWORD *)(v12 + 8) = a10 & 0xFFFFFFFFFFLL;
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  result = 0.0;
  *(_OWORD *)(v12 + 32) = 0u;
  *(_OWORD *)(v12 + 48) = 0u;
  *(_OWORD *)(v12 + 64) = 0u;
  *(_OWORD *)(v12 + 80) = 0u;
  *(_QWORD *)(v12 + 96) = 0;
  return result;
}

void OUTLINED_FUNCTION_8_41()
{
  sub_1A5751898();
}

void OUTLINED_FUNCTION_9_41(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A5751974(a1, a2, a3);
}

double OUTLINED_FUNCTION_10_38()
{
  uint64_t v0;
  double result;

  result = 0.0;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_QWORD *)(v0 + 96) = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_11_26()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_12_33(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  return sub_1A573EE0C(a1, a2, a3, a4, a5, a6, v6);
}

uint64_t OUTLINED_FUNCTION_14_30()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_15_36(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A573EE0C(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t OUTLINED_FUNCTION_17_32(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return MailboxName.init(_:)(a1, a2, a3 & 0xFFFFFFFFFFFFFFLL);
}

_QWORD *OUTLINED_FUNCTION_18_27(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  result[2] = v1;
  result[3] = v2;
  result[4] = v4;
  result[5] = v3;
  return result;
}

_QWORD *OUTLINED_FUNCTION_19_27(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *(*v9)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  return v9(&a9, v16, v15, v14, v13, v12, v11, v10);
}

void OUTLINED_FUNCTION_20_23(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A5751974(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_21_28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  return sub_1A57332C4(v4, v1, v6, v5, v3, v2, v0);
}

void OUTLINED_FUNCTION_23_25(__n128 a1)
{
  uint64_t v1;

  *(__n128 *)(v1 + 40) = a1;
  *(__n128 *)(v1 + 56) = a1;
  *(__n128 *)(v1 + 72) = a1;
  *(__n128 *)(v1 + 88) = a1;
}

void OUTLINED_FUNCTION_24_22()
{
  sub_1A5751898();
}

__n128 OUTLINED_FUNCTION_25_20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 a9, __int128 a10, __int128 a11, __int128 a12, __int128 a13, __int128 a14, __int128 a15, uint64_t a16)
{
  uint64_t v16;
  __n128 result;

  result = a9;
  *(__n128 *)v16 = a9;
  *(_OWORD *)(v16 + 16) = a10;
  *(_OWORD *)(v16 + 32) = a11;
  *(_OWORD *)(v16 + 48) = a12;
  *(_OWORD *)(v16 + 64) = a13;
  *(_OWORD *)(v16 + 80) = a14;
  *(_OWORD *)(v16 + 96) = a15;
  *(_QWORD *)(v16 + 112) = a16;
  return result;
}

void OUTLINED_FUNCTION_26_16()
{
  sub_1A57570A0();
}

void OUTLINED_FUNCTION_27_19()
{
  sub_1A5751898();
}

uint64_t OUTLINED_FUNCTION_31_17()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_33_16(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_1A5751974(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_34_19()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_35_15()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_36_16()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_39_17(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A5751974(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_41_11()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_43_10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return sub_1A54E3458(a12, a10, SBYTE4(a10));
}

uint64_t OUTLINED_FUNCTION_47_9(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return sub_1A5503B8C(a12, a10);
}

uint64_t OUTLINED_FUNCTION_49_7()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = 0;
  return swift_release();
}

void OUTLINED_FUNCTION_52_9(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_1A5751974(a1, v1, v2);
}

uint64_t sub_1A5723720()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_5_54();
  v5 = (_QWORD *)OUTLINED_FUNCTION_24_21();
  v5[2] = v4;
  v5[3] = v3;
  v5[4] = v2;
  v5[5] = v0;
  swift_retain();
  OUTLINED_FUNCTION_8_42();
  OUTLINED_FUNCTION_6_48();
  v8 = sub_1A576F818(v6, v7);
  swift_release();
  if (v1)
    return v9;
  else
    return v8;
}

uint64_t sub_1A5723804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t result;
  uint64_t v16;

  swift_retain();
  result = sub_1A5757210(a1, a2, a3, a4, a5, a6, a7);
  if (v7)
    return v16;
  return result;
}

uint64_t sub_1A5723888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t result;
  uint64_t v16;

  swift_retain();
  result = sub_1A57572D4(a1, a2, a3, a4, a5, a6, a7);
  if (v7)
    return v16;
  return result;
}

unint64_t sub_1A572390C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_1A5761038(a1, a2, a3, 1);
  v6 = v4;
  if (!v3)
  {
    if ((v4 & 0x8000000000000000) != 0)
    {
      sub_1A56E9774();
      OUTLINED_FUNCTION_21();
      *v10 = 0xD000000000000011;
      v10[1] = 0x80000001A5A0F840;
      v10[2] = 0xD000000000000020;
      v10[3] = 0x80000001A5A0F5E0;
      v12 = 167;
      goto LABEL_6;
    }
    if (v5 > 2)
    {
      sub_1A594C720();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_8_42();
      v14 = v8;
      v15 = v7;
      sub_1A594CC9C();
      sub_1A594B5F8();
      OUTLINED_FUNCTION_52();
      sub_1A56E9774();
      OUTLINED_FUNCTION_21();
      *v9 = v14;
      v9[1] = v15;
      OUTLINED_FUNCTION_8_42();
      v10[2] = 0xD000000000000020;
      v10[3] = v11;
      v12 = 48;
LABEL_6:
      OUTLINED_FUNCTION_11_20((uint64_t)v10, v12);
    }
  }
  return v6;
}

uint64_t sub_1A5723A58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_5_54();
  v4 = (_QWORD *)OUTLINED_FUNCTION_24_21();
  v4[2] = v3;
  v4[3] = v2;
  v4[4] = v1;
  v4[5] = v0;
  swift_retain();
  OUTLINED_FUNCTION_8_42();
  OUTLINED_FUNCTION_6_48();
  sub_1A576F8C0(v5, v6, v7, v8);
  v10 = v9;
  swift_release();
  return v10;
}

void sub_1A5723B28(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1A575DEC8();
  if (!v3)
    sub_1A57409A0(a1, a2, a3, 1);
}

uint64_t sub_1A5723BA4(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  __int16 v10;
  char v11;
  uint64_t *v12;

  v4 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v4 >= a3)
    {
      sub_1A5718F9C();
      OUTLINED_FUNCTION_21();
      *v12 = a3;
      return swift_willThrow();
    }
    v6 = result;
    v7 = *(_QWORD *)result;
    v8 = *(_QWORD *)(result + 8);
    v9 = *(_DWORD *)(result + 16);
    v10 = *(_WORD *)(result + 20);
    v11 = *(_BYTE *)(result + 22);
    swift_retain();
    sub_1A576B64C((void **)v6, v4, a3, 0, 0x20uLL, 0xE100000000000000, 0);
    if (v3)
    {
      swift_release();
      *(_QWORD *)v6 = v7;
      *(_QWORD *)(v6 + 8) = v8;
      *(_DWORD *)(v6 + 16) = v9;
      *(_WORD *)(v6 + 20) = v10;
      *(_BYTE *)(v6 + 22) = v11;
      return swift_willThrow();
    }
    return swift_release();
  }
  return result;
}

unint64_t sub_1A5723C90(unint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  __int16 v10;
  char v11;
  uint64_t *v12;
  unint64_t v13;

  v4 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v4 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v12 = a3;
      return swift_willThrow();
    }
    v6 = result;
    v7 = *(_QWORD *)result;
    v8 = *(_QWORD *)(result + 8);
    v9 = *(_DWORD *)(result + 16);
    v10 = *(_WORD *)(result + 20);
    v11 = *(_BYTE *)(result + 22);
    swift_retain();
    sub_1A574E6A8(v6, v4, a3, 2, &v13);
    if (v3)
    {
      swift_release();
      *(_QWORD *)v6 = v7;
      *(_QWORD *)(v6 + 8) = v8;
      *(_DWORD *)(v6 + 16) = v9;
      *(_WORD *)(v6 + 20) = v10;
      *(_BYTE *)(v6 + 22) = v11;
      return swift_willThrow();
    }
    swift_release();
    return v13;
  }
  return result;
}

uint64_t sub_1A5723D88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v16;
  _BYTE v17[40];

  sub_1A5752A28(a1, a2, a3);
  if (!v3)
  {
    ByteBufferView.init(_:)(v5, v6, v7 & 0xFFFFFFFFFFFFFFLL, (uint64_t)v17);
    swift_retain();
    sub_1A56E6FE8((uint64_t)v17);
    if (v8)
    {
      sub_1A594B49C();
      v4 = sub_1A56BE0C4();
      v10 = v9;
      swift_bridgeObjectRelease();
      if ((v10 & 1) == 0)
      {
        swift_release();
        OUTLINED_FUNCTION_52();
        return v4;
      }
      sub_1A594C720();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_8_42();
      v16 = v14;
      sub_1A594B5F8();
      OUTLINED_FUNCTION_52();
      v12 = v16;
      sub_1A56E9774();
      OUTLINED_FUNCTION_21();
      *v11 = 0xD000000000000013;
      v13 = 80;
    }
    else
    {
      sub_1A56E9774();
      OUTLINED_FUNCTION_21();
      *v11 = 0x2064696C61766E49;
      v12 = 0xEC00000038465455;
      v13 = 78;
    }
    v11[1] = v12;
    v11[2] = 0xD000000000000020;
    v11[3] = 0x80000001A5A0F5E0;
    v11[4] = v13;
    swift_willThrow();
    swift_release();
  }
  return v4;
}

void sub_1A5723F08(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, Swift::Int *a4@<X8>)
{
  uint64_t v4;
  unint64_t v8;
  Swift::Int v9;
  Swift::Int v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t month;
  uint64_t v15;
  NIOIMAPCore2::IMAPCalendarDay_optional v16;

  v8 = sub_1A572390C(a1, a2, a3);
  if (!v4)
  {
    v9 = v8;
    OUTLINED_FUNCTION_3_57();
    month = sub_1A5723D88(a1, a2, a3);
    OUTLINED_FUNCTION_3_57();
    sub_1A5740B08();
    v16 = IMAPCalendarDay.init(year:month:day:)(v10, month, v9);
    if (v16.is_nil)
    {
      sub_1A594C720();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_8_42();
      v15 = v11;
      OUTLINED_FUNCTION_4_54();
      OUTLINED_FUNCTION_14_31();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_29_10();
      OUTLINED_FUNCTION_4_54();
      OUTLINED_FUNCTION_14_31();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_29_10();
      OUTLINED_FUNCTION_4_54();
      OUTLINED_FUNCTION_14_31();
      swift_bridgeObjectRelease();
      sub_1A56E9774();
      OUTLINED_FUNCTION_21();
      *v12 = 0xD000000000000018;
      v12[1] = v15;
      v12[2] = 0xD000000000000020;
      v12[3] = 0x80000001A5A0F5E0;
      OUTLINED_FUNCTION_11_20((uint64_t)v12, 94);
    }
    else
    {
      *a4 = v16.value.year;
      a4[1] = v16.value.month;
      a4[2] = v16.value.day;
    }
  }
}

void sub_1A57240E0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X8>)
{
  uint64_t v4;
  Swift::Int v9;
  Swift::Int v10;
  Swift::Int v11;
  Swift::Int v12;
  Swift::Int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  Swift::Int v24;
  Swift::Int v25;
  _QWORD *v26;
  _QWORD v27[8];
  _QWORD v28[2];
  Swift::Int v29;
  Swift::Int v30;
  Swift::Int v31;
  Swift::Int v32;
  NIOIMAPCore2::ServerMessageDate::Components_optional v33;
  _OWORD v34[3];
  uint64_t v35;
  char v36;
  _OWORD v37[3];
  uint64_t v38;
  Swift::Int v39;

  OUTLINED_FUNCTION_0_103();
  if (!v4)
  {
    OUTLINED_FUNCTION_7_37();
    v9 = sub_1A5723A58();
    OUTLINED_FUNCTION_0_103();
    v39 = sub_1A5723D88(a1, a2, a3);
    OUTLINED_FUNCTION_0_103();
    OUTLINED_FUNCTION_7_37();
    sub_1A5740B08();
    v32 = v10;
    OUTLINED_FUNCTION_0_103();
    OUTLINED_FUNCTION_1_86();
    v31 = v11;
    OUTLINED_FUNCTION_0_103();
    OUTLINED_FUNCTION_1_86();
    v30 = v12;
    OUTLINED_FUNCTION_0_103();
    OUTLINED_FUNCTION_1_86();
    v29 = v13;
    OUTLINED_FUNCTION_0_103();
    v28[1] = v28;
    MEMORY[0x1E0C80A78](v14);
    OUTLINED_FUNCTION_12_34();
    *(_QWORD *)(v15 - 16) = v31;
    MEMORY[0x1E0C80A78](v16);
    v27[6] = sub_1A57245A0;
    v27[7] = v17;
    MEMORY[0x1E0C80A78](v18);
    OUTLINED_FUNCTION_12_34();
    *(_QWORD *)(v19 - 16) = v20;
    MEMORY[0x1E0C80A78](v21);
    v27[2] = sub_1A5724764;
    v27[3] = v22;
    sub_1A576F8C0((uint64_t)sub_1A571EC18, v23, (uint64_t)sub_1A571F124, (uint64_t)v27);
    v25 = v24;
    OUTLINED_FUNCTION_0_103();
    ServerMessageDate.Components.init(year:month:day:hour:minute:second:timeZoneMinutes:)(&v33, v32, v39, v9, v31, v30, v29, v25);
    sub_1A56BE8B4((uint64_t)&v33, (uint64_t)v34);
    if (v36 == 1)
    {
      sub_1A56E9774();
      OUTLINED_FUNCTION_21();
      *v26 = 0xD000000000000016;
      v26[1] = 0x80000001A5A0F9C0;
      v26[2] = 0xD000000000000020;
      v26[3] = 0x80000001A5A0F5E0;
      OUTLINED_FUNCTION_11_20((uint64_t)v26, 159);
    }
    else
    {
      v37[0] = v34[0];
      v37[1] = v34[1];
      v37[2] = v34[2];
      v38 = v35;
      *a4 = ServerMessageDate.init(_:)((unint64_t *)v37);
    }
  }
}

unint64_t sub_1A57243C0(unint64_t a1, uint64_t a2)
{
  BOOL v2;

  if ((a1 & 0x8000000000000000) == 0 && (a1 % 0x64 <= 0x3C ? (v2 = a2 <= 24) : (v2 = 0), v2))
    return a1 % 0x64 + 60 * ((uint64_t)(a1 - a1 % 0x64) / 100);
  else
    return 0;
}

void sub_1A5724404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unint64_t v10;
  char v11;
  _QWORD *v12;

  sub_1A5751898();
  if (!v8)
  {
    sub_1A5740B08();
    sub_1A57243C0(v10, a8);
    if ((v11 & 1) != 0)
    {
      sub_1A594C720();
      swift_bridgeObjectRelease();
      sub_1A594CC9C();
      sub_1A594B5F8();
      swift_bridgeObjectRelease();
      sub_1A594B5F8();
      sub_1A56E9774();
      swift_allocError();
      *v12 = 0xD000000000000017;
      v12[1] = 0x80000001A5A0F9E0;
      v12[2] = 0xD000000000000020;
      v12[3] = 0x80000001A5A0F5E0;
      v12[4] = 134;
      swift_willThrow();
    }
  }
}

uint64_t sub_1A57245A0()
{
  return sub_1A5724780();
}

void sub_1A57245BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unint64_t v10;
  unint64_t v11;
  char v12;
  _QWORD *v13;

  sub_1A5751898();
  if (!v8)
  {
    sub_1A5740B08();
    v11 = sub_1A57243C0(v10, a8);
    if ((v12 & 1) == 0)
    {
      if (!__OFSUB__(0, v11))
        return;
      __break(1u);
    }
    sub_1A594C720();
    swift_bridgeObjectRelease();
    sub_1A594CC9C();
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
    sub_1A594B5F8();
    sub_1A56E9774();
    swift_allocError();
    *v13 = 0xD000000000000017;
    v13[1] = 0x80000001A5A0F9E0;
    v13[2] = 0xD000000000000020;
    v13[3] = 0x80000001A5A0F5E0;
    v13[4] = 143;
    swift_willThrow();
  }
}

uint64_t sub_1A5724764()
{
  return sub_1A5724780();
}

uint64_t sub_1A5724780()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_4_52();
  return v0();
}

void sub_1A57247A0()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_4_52();
  sub_1A5723B28(v0, v1, v2);
}

uint64_t sub_1A57247B8()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1A57247DC()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_4_52();
  return sub_1A5723C90(v0, v1, v2);
}

uint64_t sub_1A57247F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  return sub_1A5723888(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_1A572480C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  return sub_1A5723804(v0, v1, v2, v3, v4, v5, v6);
}

void OUTLINED_FUNCTION_0_103()
{
  sub_1A5751898();
}

void OUTLINED_FUNCTION_1_86()
{
  sub_1A5740A68();
}

void OUTLINED_FUNCTION_3_57()
{
  sub_1A5751898();
}

uint64_t OUTLINED_FUNCTION_4_54()
{
  return sub_1A594CC9C();
}

uint64_t OUTLINED_FUNCTION_7_37()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_14_31()
{
  return sub_1A594B5F8();
}

void sub_1A5724928()
{
  uint64_t *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_0_104();
  swift_retain();
  OUTLINED_FUNCTION_15_37((_QWORD *(*)(uint64_t *__return_ptr, uint64_t, _QWORD))sub_1A5727114, v6, v7, v8, v9, v10, v11, v12, v20);
  OUTLINED_FUNCTION_8_43();
  OUTLINED_FUNCTION_5_1();
  if ((v5 & 1) != 0)
  {
    if (v2)
    {
      OUTLINED_FUNCTION_90();
      OUTLINED_FUNCTION_12_35();
      v17 = v0[2];
      v0 += 2;
      v16 = v17;
      OUTLINED_FUNCTION_90();
      v18 = OUTLINED_FUNCTION_6_49();
      *v0 = v17;
      if ((v18 & 1) == 0)
      {
        OUTLINED_FUNCTION_5_55();
        sub_1A568367C();
        v16 = *v0;
      }
      v4 = *(_QWORD *)(v16 + 16);
      v13 = v4 + 1;
      if (v4 < *(_QWORD *)(v16 + 24) >> 1)
        goto LABEL_12;
      goto LABEL_18;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  if (!v2)
  {
    OUTLINED_FUNCTION_22_28();
    swift_bridgeObjectRelease();
    sub_1A5725FF8(v1);
    OUTLINED_FUNCTION_17();
    goto LABEL_14;
  }
  v13 = v0[2];
  OUTLINED_FUNCTION_90();
  if ((OUTLINED_FUNCTION_24_23() & 1) == 0)
  {
    sub_1A576C2B0();
    v13 = v14;
  }
  if ((v1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v1 >= *(_QWORD *)(v13 + 16))
  {
LABEL_17:
    __break(1u);
LABEL_18:
    sub_1A568367C();
    v16 = *v0;
LABEL_12:
    *(_QWORD *)(v16 + 16) = v13;
    v19 = v16 + 16 * v4;
    *(_QWORD *)(v19 + 32) = v3;
    *(_QWORD *)(v19 + 40) = v2;
    OUTLINED_FUNCTION_26_17();
    OUTLINED_FUNCTION_17();
    *v0 = v16;
    goto LABEL_15;
  }
  v15 = v13 + 16 * v1;
  OUTLINED_FUNCTION_90();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v15 + 32) = v3;
  *(_QWORD *)(v15 + 40) = v2;
  OUTLINED_FUNCTION_26_17();
  OUTLINED_FUNCTION_17();
  v0[2] = v13;
LABEL_15:
  OUTLINED_FUNCTION_22_10();
}

void sub_1A5724A7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t v10;
  uint64_t v11;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  _BYTE v28[16];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int v33;
  __int16 v34;
  char v35;

  v11 = *v6;
  v10 = v6[1];
  v31 = a4;
  v32 = a5;
  v33 = a6;
  v34 = WORD2(a6);
  v35 = BYTE6(a6);
  v29 = v11;
  v30 = v10;
  OUTLINED_FUNCTION_21_29();
  swift_retain();
  v13 = (unint64_t)sub_1A576C228((_QWORD *(*)(uint64_t *__return_ptr, uint64_t, _QWORD))sub_1A57270CC, (uint64_t)v28, v10);
  v15 = v14;
  v17 = v16;
  swift_release();
  swift_release();
  if ((v15 & 1) != 0)
  {
    if (a1 != 1)
    {
      OUTLINED_FUNCTION_30();
      sub_1A576CC70(a4, a5, a6 & 0xFFFFFFFFFFFFFFLL, v17);
      v23 = v6[2];
      v6 += 2;
      v22 = v23;
      OUTLINED_FUNCTION_30();
      v24 = OUTLINED_FUNCTION_6_49();
      *v6 = v22;
      if ((v24 & 1) == 0)
      {
        OUTLINED_FUNCTION_5_55();
        sub_1A56836EC();
        v22 = *v6;
      }
      v15 = *(_QWORD *)(v22 + 16);
      v18 = v15 + 1;
      if (v15 < *(_QWORD *)(v22 + 24) >> 1)
        goto LABEL_16;
      goto LABEL_20;
    }
  }
  else
  {
    if (a1 != 1)
    {
      v18 = v6[2];
      OUTLINED_FUNCTION_30();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1A576C340();
        v18 = v20;
      }
      if ((v13 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v13 < *(_QWORD *)(v18 + 16))
      {
        v21 = v18 + 24 * v13;
        OUTLINED_FUNCTION_30();
        swift_release();
        *(_QWORD *)(v21 + 32) = a1;
        *(_QWORD *)(v21 + 40) = a2;
        *(_BYTE *)(v21 + 54) = BYTE6(a3);
        *(_WORD *)(v21 + 52) = WORD2(a3);
        *(_DWORD *)(v21 + 48) = a3;
        OUTLINED_FUNCTION_23();
        OUTLINED_FUNCTION_10_39();
        OUTLINED_FUNCTION_10_39();
        v6[2] = v18;
        goto LABEL_17;
      }
      __break(1u);
LABEL_20:
      sub_1A56836EC();
      v22 = *v6;
LABEL_16:
      *(_QWORD *)(v22 + 16) = v18;
      v25 = v22 + 24 * v15;
      *(_QWORD *)(v25 + 32) = a1;
      *(_QWORD *)(v25 + 40) = a2;
      *(_BYTE *)(v25 + 54) = BYTE6(a3);
      *(_WORD *)(v25 + 52) = WORD2(a3);
      *(_DWORD *)(v25 + 48) = a3;
      OUTLINED_FUNCTION_23();
      OUTLINED_FUNCTION_11_27();
      OUTLINED_FUNCTION_11_27();
      *v6 = v22;
      goto LABEL_17;
    }
    sub_1A5725BA0(v13, v17);
    swift_release();
    sub_1A572607C(v13);
    OUTLINED_FUNCTION_23();
  }
  swift_release();
LABEL_17:
  OUTLINED_FUNCTION_122();
}

void sub_1A5724C8C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  _BYTE v34[16];
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  int v39;
  __int16 v40;
  char v41;

  v11 = *v5;
  v10 = v5[1];
  v37 = a3;
  v38 = a4;
  v39 = a5;
  v40 = WORD2(a5);
  v41 = BYTE6(a5);
  v35 = v11;
  v36 = v10;
  OUTLINED_FUNCTION_21_29();
  swift_retain();
  v12 = (unint64_t)sub_1A576C228((_QWORD *(*)(uint64_t *__return_ptr, uint64_t, _QWORD))sub_1A57270F8, (uint64_t)v34, v10);
  v14 = v13;
  v16 = v15;
  OUTLINED_FUNCTION_23();
  swift_release();
  if ((v14 & 1) != 0)
  {
    if (BYTE5(a2) != 255)
    {
      v21 = (a2 >> 40) & 1;
      OUTLINED_FUNCTION_19_28();
      sub_1A576CC84(a3, a4, a5 & 0xFFFFFFFFFFFFFFLL, v16);
      v30 = v5[2];
      v5 += 2;
      v29 = v30;
      OUTLINED_FUNCTION_19_28();
      v31 = OUTLINED_FUNCTION_24_23();
      *v5 = v29;
      if ((v31 & 1) == 0)
      {
        OUTLINED_FUNCTION_5_55();
        sub_1A5683644();
        v29 = *v5;
      }
      v10 = *(_QWORD *)(v29 + 16);
      v12 = v10 + 1;
      if (v10 < *(_QWORD *)(v29 + 24) >> 1)
        goto LABEL_16;
      goto LABEL_20;
    }
    OUTLINED_FUNCTION_25_4();
  }
  else
  {
    if (BYTE5(a2) != 255)
    {
      v21 = v5[2];
      OUTLINED_FUNCTION_18_28();
      v22 = OUTLINED_FUNCTION_6_49();
      if ((v22 & 1) == 0)
      {
        sub_1A576C2E0();
        v21 = v23;
      }
      if ((v12 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v12 < *(_QWORD *)(v21 + 16))
      {
        v24 = v21 + 16 * v12;
        v25 = *(_DWORD *)(v24 + 40);
        v24 += 40;
        v26 = *(_QWORD *)(v24 - 8);
        v27 = v25 | ((unint64_t)*(unsigned __int8 *)(v24 + 4) << 32);
        v28 = *(_BYTE *)(v24 + 5);
        OUTLINED_FUNCTION_18_28();
        sub_1A5666618(v26, v27, v28);
        *(_QWORD *)(v24 - 8) = a1;
        *(_BYTE *)(v24 + 4) = BYTE4(a2);
        *(_DWORD *)v24 = a2;
        *(_BYTE *)(v24 + 5) = BYTE5(a2) & 1;
        OUTLINED_FUNCTION_25_4();
        OUTLINED_FUNCTION_16_29();
        v5[2] = v21;
        goto LABEL_17;
      }
      __break(1u);
LABEL_20:
      sub_1A5683644();
      v29 = *v5;
LABEL_16:
      *(_QWORD *)(v29 + 16) = v12;
      v32 = v29 + 16 * v10;
      *(_QWORD *)(v32 + 32) = a1;
      *(_DWORD *)(v32 + 40) = a2;
      *(_BYTE *)(v32 + 44) = BYTE4(a2);
      *(_BYTE *)(v32 + 45) = v21;
      OUTLINED_FUNCTION_5_1();
      OUTLINED_FUNCTION_16_29();
      *v5 = v29;
      goto LABEL_17;
    }
    sub_1A5725D7C(v12, v16);
    swift_release();
    sub_1A5725F58(v12);
    v18 = v17;
    v20 = v19;
    OUTLINED_FUNCTION_25_4();
    sub_1A5666618(v18, v20, BYTE5(v20) & 1);
  }
LABEL_17:
  OUTLINED_FUNCTION_122();
}

void sub_1A5724EA4()
{
  uint64_t *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;

  OUTLINED_FUNCTION_0_104();
  swift_retain();
  OUTLINED_FUNCTION_15_37((_QWORD *(*)(uint64_t *__return_ptr, uint64_t, _QWORD))sub_1A57271B4, v6, v7, v8, v9, v10, v11, v12, v32);
  OUTLINED_FUNCTION_8_43();
  OUTLINED_FUNCTION_5_1();
  if ((v5 & 1) != 0)
  {
    if ((v2 & 0xFF0000000000) != 0xFE0000000000)
    {
      sub_1A566676C(v3, v2);
      OUTLINED_FUNCTION_12_35();
      v26 = v0[2];
      v0 += 2;
      v25 = v26;
      sub_1A566676C(v3, v2);
      v27 = OUTLINED_FUNCTION_6_49();
      *v0 = v25;
      if ((v27 & 1) == 0)
      {
        v28 = OUTLINED_FUNCTION_5_55();
        sub_1A56836D0(v28, v29, v30);
        v25 = *v0;
      }
      v4 = *(_QWORD *)(v25 + 16);
      v19 = *(_QWORD *)(v25 + 24);
      v17 = v4 + 1;
      if (v4 < v19 >> 1)
        goto LABEL_16;
      goto LABEL_20;
    }
    OUTLINED_FUNCTION_17();
  }
  else
  {
    if ((v2 & 0xFF0000000000) != 0xFE0000000000)
    {
      v17 = v0[2];
      sub_1A566676C(v3, v2);
      v18 = OUTLINED_FUNCTION_24_23();
      if ((v18 & 1) == 0)
      {
        sub_1A576C42C();
        v17 = v20;
      }
      if ((v1 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else
      {
        v19 = *(_QWORD *)(v17 + 16);
        if (v1 < v19)
        {
          v21 = v17 + 16 * v1;
          v22 = *(_DWORD *)(v21 + 40);
          v21 += 40;
          v23 = *(_QWORD *)(v21 - 8);
          v24 = v22 | ((unint64_t)*(unsigned __int16 *)(v21 + 4) << 32);
          sub_1A566676C(v3, v2);
          sub_1A56667BC(v23, v24);
          *(_QWORD *)(v21 - 8) = v3;
          *(_WORD *)(v21 + 4) = WORD2(v2);
          *(_DWORD *)v21 = v2;
          OUTLINED_FUNCTION_17();
          OUTLINED_FUNCTION_17_33();
          v0[2] = v17;
          goto LABEL_17;
        }
      }
      __break(1u);
LABEL_20:
      sub_1A56836D0(v19 > 1, v17, 1);
      v25 = *v0;
LABEL_16:
      *(_QWORD *)(v25 + 16) = v17;
      v31 = v25 + 16 * v4;
      *(_QWORD *)(v31 + 32) = v3;
      *(_DWORD *)(v31 + 40) = v2;
      *(_WORD *)(v31 + 44) = WORD2(v2);
      OUTLINED_FUNCTION_17();
      OUTLINED_FUNCTION_17_33();
      *v0 = v25;
      goto LABEL_17;
    }
    OUTLINED_FUNCTION_22_28();
    swift_bridgeObjectRelease();
    sub_1A57261CC(v1);
    v14 = v13;
    v16 = v15;
    OUTLINED_FUNCTION_17();
    sub_1A56667BC(v14, v16);
  }
LABEL_17:
  OUTLINED_FUNCTION_22_10();
}

void sub_1A5725058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _BYTE v7[16];
  void (*v8)();
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[16];
  uint64_t (*v16)();
  char *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v19 = a4;
  v20 = a5;
  v21 = a6;
  v22 = a7;
  v16 = sub_1A5727144;
  v17 = &v18;
  v11 = a4;
  v12 = a5;
  v13 = a6;
  v14 = a7;
  v8 = sub_1A5727170;
  v9 = &v10;
  sub_1A576F8C0((uint64_t)sub_1A572715C, (uint64_t)v15, (uint64_t)sub_1A572715C, (uint64_t)v7);
}

void sub_1A57250F4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _QWORD *a8@<X8>)
{
  uint64_t v8;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD v43[7];
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  __int128 v53;

  OUTLINED_FUNCTION_7_38();
  sub_1A5751898();
  if (!v8)
  {
    v51 = a8;
    v52 = 0;
    *(_QWORD *)&v53 = MEMORY[0x1E0DEE9D8];
    *((_QWORD *)&v53 + 1) = MEMORY[0x1E0DEE9D8];
    if (__OFADD__(a2, 1))
    {
      __break(1u);
    }
    else
    {
      if (a2 + 1 >= a3)
      {
        sub_1A5718F9C();
        swift_allocError();
        *v37 = a3;
        swift_retain();
      }
      else
      {
        v17 = *(_QWORD *)a1;
        v18 = *(_QWORD *)(a1 + 8);
        LODWORD(v49) = *(_DWORD *)(a1 + 16);
        LODWORD(v48) = *(unsigned __int16 *)(a1 + 20);
        LODWORD(v47) = *(unsigned __int8 *)(a1 + 22);
        swift_retain();
        v50 = v17;
        swift_retain();
        v19 = OUTLINED_FUNCTION_3_58();
        v26 = sub_1A573EE0C(v19, v20, v21, v22, v23, v24, v25);
        if (!v17)
        {
          v44 = v28;
          v45 = v27;
          v46 = v26;
          sub_1A5751974(a1, a2 + 1, a3);
          v29 = OUTLINED_FUNCTION_3_58();
          v36 = sub_1A5740BA8(v29, v30, v31, v32, v33, v34, v35);
          v39 = v38;
          v48 = v40;
          v49 = v36;
          OUTLINED_FUNCTION_4_4();
          swift_release();
          v50 = v39 & 0xFFFFFFFFFFFFFFLL;
          v47 = v44 & 0xFFFFFFFFFFFFFFLL;
          swift_retain();
          swift_retain();
          sub_1A5724A7C(v49, v48, v39 & 0xFFFFFFFFFFFFFFLL, v46, v45, v44 & 0xFFFFFFFFFFFFFFLL);
          MEMORY[0x1E0C80A78](v41);
          v43[2] = a4;
          v43[3] = a5;
          v43[4] = a6;
          v43[5] = a7;
          sub_1A5751E5C(a1, a2, a3, (uint64_t)sub_1A57258B4, (uint64_t)v43, (uint64_t)&v52);
          OUTLINED_FUNCTION_7_38();
          sub_1A5751898();
          OUTLINED_FUNCTION_4_4();
          OUTLINED_FUNCTION_9_42();
          v42 = v51;
          *v51 = v52;
          *(_OWORD *)(v42 + 1) = v53;
          return;
        }
        swift_release();
        *(_QWORD *)a1 = v50;
        *(_QWORD *)(a1 + 8) = v18;
        *(_DWORD *)(a1 + 16) = v49;
        *(_WORD *)(a1 + 20) = v48;
        *(_BYTE *)(a1 + 22) = v47;
      }
      swift_willThrow();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
  }
}

void sub_1A57253F0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1A5751974(a1, a2, a3);
  if (!v8)
  {
    v17 = __OFADD__(a2, 1);
    v18 = a2 + 1;
    if (v17)
    {
      __break(1u);
    }
    else if (v18 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v22 = a3;
      swift_retain();
      swift_willThrow();
      swift_release();
    }
    else
    {
      swift_retain();
      swift_retain();
      v19 = sub_1A573EE0C(a1, v18, a3, a4, a5, a6, a7);
      v28 = v20;
      v29 = v21;
      v30 = v19;
      sub_1A5751974(a1, v18, a3);
      v23 = sub_1A5740BA8(a1, v18, a3, a4, a5, a6, a7);
      v25 = v24;
      v27 = v26;
      swift_release();
      swift_release();
      *(_QWORD *)a8 = v30;
      *(_QWORD *)(a8 + 8) = v28;
      *(_DWORD *)(a8 + 16) = v29;
      *(_WORD *)(a8 + 20) = WORD2(v29);
      *(_BYTE *)(a8 + 22) = BYTE6(v29);
      *(_QWORD *)(a8 + 24) = v23;
      *(_QWORD *)(a8 + 32) = v25;
      *(_DWORD *)(a8 + 40) = v27;
      *(_BYTE *)(a8 + 46) = BYTE6(v27);
      *(_WORD *)(a8 + 44) = WORD2(v27);
    }
  }
}

uint64_t sub_1A5725608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A94F8);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1A59ABD10;
  v16 = sub_1A573EE0C(a1, a2, a3, a4, a5, a6, a7);
  if (v7)
  {
    *(_QWORD *)(v15 + 16) = 0;
    swift_release();
  }
  else
  {
    *(_QWORD *)(v15 + 32) = v16;
    *(_QWORD *)(v15 + 40) = v17;
    *(_DWORD *)(v15 + 48) = v18;
    *(_WORD *)(v15 + 52) = WORD2(v18);
    *(_BYTE *)(v15 + 54) = BYTE6(v18);
  }
  return v15;
}

void sub_1A57256EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  int v19;
  __int16 v20;
  char v21;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;

  sub_1A5751898();
  if (!v7)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A94F8);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1A59ABD10;
    v16 = sub_1A573EE0C(a1, a2, a3, a4, a5, a6, a7);
    v23[1] = v23;
    *(_QWORD *)(v15 + 32) = v16;
    *(_DWORD *)(v15 + 40) = v17;
    *(_DWORD *)(v15 + 44) = v18;
    *(_DWORD *)(v15 + 48) = v19;
    *(_WORD *)(v15 + 52) = v20;
    *(_BYTE *)(v15 + 54) = v21;
    v24 = v15;
    MEMORY[0x1E0C80A78](v16);
    v22[2] = a4;
    v22[3] = a5;
    v22[4] = a6;
    v22[5] = a7;
    sub_1A5751E78(a1, a2, a3, (uint64_t)sub_1A572316C, (uint64_t)v22, (uint64_t)&v24);
    sub_1A5751898();
  }
}

void sub_1A57258A0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  sub_1A57217D0(a1, a2, a3, a4, a5, a6, a7, a8);
}

void sub_1A57258B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_4_52();
  sub_1A57253F0(v0, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1A57258CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A5725954(a1, a2, a3, 7105633, 0xE300000000000000, static EntryKindRequest.all);
}

uint64_t sub_1A57258F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A5725954(a1, a2, a3, 1986622064, 0xE400000000000000, (uint64_t *)static EntryKindRequest.private);
}

uint64_t sub_1A5725924(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A5725954(a1, a2, a3, 0x646572616873, 0xE600000000000000, (uint64_t *)static EntryKindRequest.shared);
}

uint64_t sub_1A5725954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v6;

  sub_1A5751898();
  if (!v6)
  {
    swift_beginAccess();
    v6 = *a6;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return v6;
}

void sub_1A57259E4(int64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v3 = v2;
  v5 = v2 + 1;
  v6 = *(_QWORD *)(v2[1] + 16);
  v7 = *v3;
  if (!*v3)
  {
    if (v6)
    {
      sub_1A5725FF8(a1);
      return;
    }
    goto LABEL_12;
  }
  swift_beginAccess();
  if ((*(_QWORD *)(v7 + 16) & 0x3FLL) == (*(_QWORD *)(v7 + 24) & 0x3FLL))
  {
    if (!v6)
      goto LABEL_12;
  }
  else if (v6 <= sub_1A594A428())
  {
LABEL_12:
    sub_1A5725FF8(a1);
    v11 = *v5;
    if (v7)
    {
      swift_beginAccess();
      v12 = *(_QWORD *)(v7 + 24) & 0x3FLL;
    }
    else
    {
      v12 = 0;
    }
    v13 = *(_QWORD *)(v11 + 16);
    if (v12 || v13 >= 0x10)
    {
      v14 = MEMORY[0x1A85AC8B8](v13);
      sub_1A576D024(v14, v12);
    }
    else
    {
      swift_release();
      *v3 = 0;
    }
    return;
  }
  sub_1A576CF80();
  v9 = *v3;
  if (*v3)
  {
    swift_retain();
    sub_1A5726258(a2, (_QWORD *)(v9 + 16), v9 + 32, (uint64_t)v3);
    if (__OFADD__(a1, 1))
    {
      __break(1u);
    }
    else if (a1 + 1 >= a1)
    {
      v10 = v3[1];
      swift_retain();
      sub_1A5726654(a1, a1 + 1, v10, (_QWORD *)(v9 + 16));
      swift_release();
      swift_release();
      sub_1A5725FF8(a1);
      return;
    }
    __break(1u);
  }
  __break(1u);
}

unint64_t sub_1A5725BA0(int64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v3 = v2;
  v5 = v2 + 1;
  v6 = *(_QWORD *)(v2[1] + 16);
  v7 = *v3;
  if (!*v3)
  {
    if (!v6)
      goto LABEL_13;
    return sub_1A572611C(a1, (uint64_t (*)(uint64_t))sub_1A576C310, (void (*)(uint64_t, unint64_t))sub_1A569F9A4);
  }
  swift_beginAccess();
  if ((*(_QWORD *)(v7 + 16) & 0x3FLL) == (*(_QWORD *)(v7 + 24) & 0x3FLL))
  {
    if (!v6)
      goto LABEL_13;
  }
  else if (v6 <= sub_1A594A428())
  {
LABEL_13:
    v12 = sub_1A572611C(a1, (uint64_t (*)(uint64_t))sub_1A576C310, (void (*)(uint64_t, unint64_t))sub_1A569F9A4);
    v13 = *v5;
    if (v7)
    {
      swift_beginAccess();
      v14 = *(_QWORD *)(v7 + 24) & 0x3FLL;
    }
    else
    {
      v14 = 0;
    }
    v15 = *(_QWORD *)(v13 + 16);
    if (v14 || v15 >= 0x10)
    {
      MEMORY[0x1A85AC8B8](v15);
      sub_1A576D04C();
    }
    else
    {
      swift_release();
      *v3 = 0;
    }
    return v12;
  }
  result = sub_1A576CF80();
  v10 = *v3;
  if (*v3)
  {
    result = sub_1A5726424(a2, (_QWORD *)(v10 + 16), v10 + 32, (uint64_t)v3);
    if (__OFADD__(a1, 1))
    {
      __break(1u);
    }
    else if (a1 + 1 >= a1)
    {
      v11 = v3[1];
      swift_retain();
      swift_retain();
      sub_1A5726AE0(a1, a1 + 1, v11, (_QWORD *)(v10 + 16));
      swift_release();
      swift_release();
      return sub_1A572611C(a1, (uint64_t (*)(uint64_t))sub_1A576C310, (void (*)(uint64_t, unint64_t))sub_1A569F9A4);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_1A5725D7C(int64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v3 = v2;
  v5 = v2 + 1;
  v6 = *(_QWORD *)(v2[1] + 16);
  v7 = *v3;
  if (!*v3)
  {
    if (!v6)
      goto LABEL_13;
    return sub_1A572611C(a1, (uint64_t (*)(uint64_t))sub_1A576C370, (void (*)(uint64_t, unint64_t))sub_1A569D6C8);
  }
  swift_beginAccess();
  if ((*(_QWORD *)(v7 + 16) & 0x3FLL) == (*(_QWORD *)(v7 + 24) & 0x3FLL))
  {
    if (!v6)
      goto LABEL_13;
  }
  else if (v6 <= sub_1A594A428())
  {
LABEL_13:
    v12 = sub_1A572611C(a1, (uint64_t (*)(uint64_t))sub_1A576C370, (void (*)(uint64_t, unint64_t))sub_1A569D6C8);
    v13 = *v5;
    if (v7)
    {
      swift_beginAccess();
      v14 = *(_QWORD *)(v7 + 24) & 0x3FLL;
    }
    else
    {
      v14 = 0;
    }
    v15 = *(_QWORD *)(v13 + 16);
    if (v14 || v15 >= 0x10)
    {
      MEMORY[0x1A85AC8B8](v15);
      sub_1A576D04C();
    }
    else
    {
      swift_release();
      *v3 = 0;
    }
    return v12;
  }
  result = sub_1A576CF80();
  v10 = *v3;
  if (*v3)
  {
    result = sub_1A5726424(a2, (_QWORD *)(v10 + 16), v10 + 32, (uint64_t)v3);
    if (__OFADD__(a1, 1))
    {
      __break(1u);
    }
    else if (a1 + 1 >= a1)
    {
      v11 = v3[1];
      swift_retain();
      swift_retain();
      sub_1A5726AE0(a1, a1 + 1, v11, (_QWORD *)(v10 + 16));
      swift_release();
      swift_release();
      return sub_1A572611C(a1, (uint64_t (*)(uint64_t))sub_1A576C370, (void (*)(uint64_t, unint64_t))sub_1A569D6C8);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1A5725F58(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1A576C2E0();
    v3 = v4;
  }
  v5 = *(_QWORD *)(v3 + 16);
  if (v5 <= a1)
  {
    __break(1u);
  }
  else
  {
    v6 = v5 - 1;
    sub_1A569F9A8(v3 + 16 * a1 + 48, v5 - 1 - a1);
    *(_QWORD *)(v3 + 16) = v6;
    *v1 = v3;
  }
}

void sub_1A5725FF8(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1A576C2B0();
    v3 = v4;
  }
  v5 = *(_QWORD *)(v3 + 16);
  if (v5 <= a1)
  {
    __break(1u);
  }
  else
  {
    v6 = v5 - 1;
    sub_1A569D6A8((char *)(v3 + 16 * a1 + 48), v5 - 1 - a1, (char *)(v3 + 16 * a1 + 32));
    *(_QWORD *)(v3 + 16) = v6;
    *v1 = v3;
  }
}

void sub_1A572607C(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1A576C340();
    v3 = v4;
  }
  v5 = *(_QWORD *)(v3 + 16);
  if (v5 <= a1)
  {
    __break(1u);
  }
  else
  {
    v6 = v5 - 1;
    sub_1A569F9A4(v3 + 24 * a1 + 56, v5 - 1 - a1);
    *(_QWORD *)(v3 + 16) = v6;
    *v1 = v3;
  }
}

uint64_t sub_1A572611C(unint64_t a1, uint64_t (*a2)(uint64_t), void (*a3)(uint64_t, unint64_t))
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t result;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v7 = *v3;
  result = OUTLINED_FUNCTION_6_49();
  if ((result & 1) == 0)
  {
    result = a2(v7);
    v7 = result;
  }
  v9 = *(_QWORD *)(v7 + 16);
  if (v9 <= a1)
  {
    __break(1u);
  }
  else
  {
    v10 = v9 - 1;
    v11 = v7 + 24 * a1;
    v12 = *(_QWORD *)(v11 + 32);
    a3(v11 + 56, v9 - 1 - a1);
    *(_QWORD *)(v7 + 16) = v10;
    *v3 = v7;
    return v12;
  }
  return result;
}

void sub_1A57261CC(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1A576C42C();
    v3 = v4;
  }
  v5 = *(_QWORD *)(v3 + 16);
  if (v5 <= a1)
  {
    __break(1u);
  }
  else
  {
    v6 = v5 - 1;
    sub_1A569D6A8((char *)(v3 + 16 * a1 + 48), v5 - 1 - a1, (char *)(v3 + 16 * a1 + 32));
    *(_QWORD *)(v3 + 16) = v6;
    *v1 = v3;
  }
}

unint64_t sub_1A5726258(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v17;

  v6 = a1;
  v17 = sub_1A594A3D4();
  sub_1A594A410();
  if (!v17)
    return sub_1A594A3EC();
  v7 = a1;
  v8 = sub_1A594A3E0();
  while (1)
  {
    result = sub_1A594A3F8();
    if ((v10 & 1) != 0)
      break;
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
      break;
    }
    if (result >= *(_QWORD *)(*(_QWORD *)(a4 + 8) + 16))
      goto LABEL_22;
    sub_1A594CE64();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594B1D8();
    v11 = sub_1A594CED0();
    result = swift_bridgeObjectRelease();
    v12 = 1 << *a2;
    if (__OFSUB__(v12, 1))
      goto LABEL_23;
    v13 = (v12 - 1) & v11;
    if (v6 >= v8)
    {
      if (v13 >= v8 && v6 >= v13)
      {
LABEL_18:
        sub_1A594A3F8();
        sub_1A594A3EC();
        v6 = v7;
      }
    }
    else if (v13 >= v8 || v6 >= v13)
    {
      goto LABEL_18;
    }
    sub_1A594A410();
    v7 = a1;
  }
  __break(1u);
  return result;
}

unint64_t sub_1A5726424(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v20;

  v6 = a1;
  v20 = sub_1A594A3D4();
  sub_1A594A410();
  if (!v20)
    return sub_1A594A3EC();
  v7 = a1;
  v8 = sub_1A594A3E0();
  while (1)
  {
    result = sub_1A594A3F8();
    if ((v10 & 1) != 0)
      break;
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
      break;
    }
    v11 = *(_QWORD *)(a4 + 8);
    if (result >= *(_QWORD *)(v11 + 16))
      goto LABEL_23;
    v12 = v11 + 24 * result;
    v14 = *(_DWORD *)(v12 + 40);
    v13 = *(_DWORD *)(v12 + 44);
    sub_1A594CE64();
    result = swift_beginAccess();
    if (v13 < v14)
      goto LABEL_24;
    sub_1A594CE70();
    result = sub_1A594CED0();
    v15 = 1 << *a2;
    if (__OFSUB__(v15, 1))
      goto LABEL_25;
    v16 = (v15 - 1) & result;
    if (v6 >= v8)
    {
      if (v16 >= v8 && v6 >= v16)
      {
LABEL_19:
        sub_1A594A3F8();
        sub_1A594A3EC();
        v6 = v7;
      }
    }
    else if (v16 >= v8 || v6 >= v16)
    {
      goto LABEL_19;
    }
    sub_1A594A410();
    v7 = a1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5726654(uint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;

  v4 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  if (v4 >= 1)
  {
    v7 = result;
    v8 = *(_QWORD *)(a3 + 16);
    if ((uint64_t)(v8 - v4) / 2 <= result)
    {
      v12 = a2;
      v13 = __OFSUB__(v8, a2);
      v14 = v8 - a2;
      if (v13)
      {
LABEL_54:
        __break(1u);
        goto LABEL_55;
      }
      if (v14 < MEMORY[0x1A85AC894](*a4 & 0x3FLL) / 3)
      {
        result = sub_1A56AB690(v12, a3);
        if (v15 == v16 >> 1)
          return swift_unknownObjectRelease();
        v17 = v15;
        v18 = v16 >> 1;
        if (v15 >= (uint64_t)(v16 >> 1))
          goto LABEL_59;
        while (1)
        {
          sub_1A594CE64();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A594B1D8();
          result = sub_1A594CED0();
          if (__OFSUB__(1 << *a4, 1))
            goto LABEL_50;
          if (sub_1A594A3D4())
          {
            while (1)
            {
              v19 = sub_1A594A3F8();
              if ((v20 & 1) == 0 && v19 == v12)
                break;
              sub_1A594A410();
            }
          }
          result = v12 - v4;
          if (__OFSUB__(v12, v4))
            goto LABEL_51;
          sub_1A594A404();
          result = swift_bridgeObjectRelease();
          v13 = __OFADD__(v12++, 1);
          if (v13)
            goto LABEL_52;
          if (++v17 == v18)
            return swift_unknownObjectRelease();
        }
      }
      sub_1A594A3D4();
      v27 = sub_1A594A3F8();
      if ((v28 & 1) == 0 && v27 >= v12)
      {
        v13 = __OFSUB__(v27, v4);
        result = v27 - v4;
        if (v13)
        {
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
          goto LABEL_53;
        }
        sub_1A594A404();
      }
      return sub_1A594A410();
    }
    else
    {
      result = MEMORY[0x1A85AC894](*a4 & 0x3FLL);
      if (result / 3 <= v7)
      {
        sub_1A594A3D4();
        v21 = sub_1A594A3F8();
        if ((v22 & 1) == 0 && v21 < v7)
        {
          v13 = __OFADD__(v21, v4);
          result = v21 + v4;
          if (v13)
          {
LABEL_48:
            __break(1u);
            goto LABEL_49;
          }
          sub_1A594A404();
        }
        result = sub_1A594A410();
      }
      else
      {
        if (v7 < 0)
        {
LABEL_57:
          __break(1u);
          goto LABEL_58;
        }
        if (v8 < v7)
        {
LABEL_58:
          __break(1u);
LABEL_59:
          __break(1u);
          return result;
        }
        if (v7)
        {
          swift_retain();
          v9 = 0;
          while (1)
          {
            sub_1A594CE64();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            sub_1A594B1D8();
            result = sub_1A594CED0();
            if (__OFSUB__(1 << *a4, 1))
              break;
            if (sub_1A594A3D4())
            {
              while (1)
              {
                v10 = sub_1A594A3F8();
                if ((v11 & 1) == 0 && v10 == v9)
                  break;
                sub_1A594A410();
              }
            }
            result = v9 + v4;
            if (__OFADD__(v9, v4))
              goto LABEL_47;
            ++v9;
            sub_1A594A404();
            swift_bridgeObjectRelease();
            if (v9 == v7)
            {
              result = swift_release();
              goto LABEL_35;
            }
          }
          __break(1u);
LABEL_47:
          __break(1u);
          goto LABEL_48;
        }
      }
LABEL_35:
      v23 = a4[1];
      if (__OFSUB__(v23 >> 6, v4))
      {
LABEL_55:
        __break(1u);
        goto LABEL_56;
      }
      v24 = 1 << *a4;
      v13 = __OFSUB__(v24, 1);
      v25 = v24 - 1;
      if (v13)
      {
LABEL_56:
        __break(1u);
        goto LABEL_57;
      }
      v26 = (v25 & (((v23 >> 6) - v4) >> 63)) + (v23 >> 6) - v4;
      if (v26 < v25)
        v25 = 0;
      a4[1] = a4[1] & 0x3FLL | ((v26 - v25) << 6);
    }
  }
  return result;
}

uint64_t sub_1A5726AE0(uint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  unsigned int v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  uint64_t v35;

  v4 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  if (v4 >= 1)
  {
    v7 = result;
    v8 = *(_QWORD *)(a3 + 16);
    if ((uint64_t)(v8 - v4) / 2 <= result)
    {
      v15 = a2;
      if (__OFSUB__(v8, a2))
      {
LABEL_59:
        __break(1u);
        goto LABEL_60;
      }
      if ((uint64_t)(v8 - a2) < MEMORY[0x1A85AC894](*a4 & 0x3FLL) / 3)
      {
        result = sub_1A56AB690(v15, a3);
        v35 = v18;
        if (v16 == v17 >> 1)
          return swift_unknownObjectRelease();
        v28 = v16;
        v34 = v17 >> 1;
        if (v16 >= (uint64_t)(v17 >> 1))
          goto LABEL_64;
        while (1)
        {
          v29 = v35 + 24 * v28;
          v31 = *(_DWORD *)(v29 + 8);
          v30 = *(_DWORD *)(v29 + 12);
          sub_1A594CE64();
          result = swift_beginAccess();
          if (v30 < v31)
            goto LABEL_54;
          sub_1A594CE70();
          result = sub_1A594CED0();
          if (__OFSUB__(1 << *a4, 1))
            goto LABEL_55;
          if (sub_1A594A3D4())
          {
            while (1)
            {
              v32 = sub_1A594A3F8();
              if ((v33 & 1) == 0 && v32 == v15)
                break;
              sub_1A594A410();
            }
          }
          result = v15 - v4;
          if (__OFSUB__(v15, v4))
            goto LABEL_56;
          result = sub_1A594A404();
          v21 = __OFADD__(v15++, 1);
          if (v21)
            goto LABEL_57;
          if (++v28 == v34)
            return swift_unknownObjectRelease();
        }
      }
      sub_1A594A3D4();
      v26 = sub_1A594A3F8();
      if ((v27 & 1) == 0 && v26 >= v15)
      {
        v21 = __OFSUB__(v26, v4);
        result = v26 - v4;
        if (v21)
        {
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
LABEL_56:
          __break(1u);
LABEL_57:
          __break(1u);
          goto LABEL_58;
        }
        sub_1A594A404();
      }
      return sub_1A594A410();
    }
    result = MEMORY[0x1A85AC894](*a4 & 0x3FLL);
    if (result / 3 <= v7)
    {
      sub_1A594A3D4();
      v19 = sub_1A594A3F8();
      if ((v20 & 1) == 0 && v19 < v7)
      {
        v21 = __OFADD__(v19, v4);
        result = v19 + v4;
        if (v21)
        {
LABEL_52:
          __break(1u);
          goto LABEL_53;
        }
        sub_1A594A404();
      }
      result = sub_1A594A410();
    }
    else
    {
      if (v7 < 0)
      {
LABEL_62:
        __break(1u);
        goto LABEL_63;
      }
      if (v8 < v7)
      {
LABEL_63:
        __break(1u);
LABEL_64:
        __break(1u);
        return result;
      }
      if (v7)
      {
        v9 = 0;
        while (1)
        {
          v10 = a3 + 32 + 24 * v9;
          v12 = *(_DWORD *)(v10 + 8);
          v11 = *(_DWORD *)(v10 + 12);
          sub_1A594CE64();
          result = swift_beginAccess();
          if (v11 < v12)
            break;
          sub_1A594CE70();
          result = sub_1A594CED0();
          if (__OFSUB__(1 << *a4, 1))
            goto LABEL_50;
          if (sub_1A594A3D4())
          {
            while (1)
            {
              v13 = sub_1A594A3F8();
              if ((v14 & 1) == 0 && v13 == v9)
                break;
              sub_1A594A410();
            }
          }
          result = v9 + v4;
          if (__OFADD__(v9, v4))
            goto LABEL_51;
          ++v9;
          result = sub_1A594A404();
          if (v9 == v7)
            goto LABEL_27;
        }
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
        goto LABEL_52;
      }
    }
LABEL_27:
    v22 = a4[1];
    if (__OFSUB__(v22 >> 6, v4))
    {
LABEL_60:
      __break(1u);
      goto LABEL_61;
    }
    v23 = 1 << *a4;
    v21 = __OFSUB__(v23, 1);
    v24 = v23 - 1;
    if (v21)
    {
LABEL_61:
      __break(1u);
      goto LABEL_62;
    }
    v25 = (v24 & (((v22 >> 6) - v4) >> 63)) + (v22 >> 6) - v4;
    if (v25 < v24)
      v24 = 0;
    a4[1] = a4[1] & 0x3FLL | ((v25 - v24) << 6);
  }
  return result;
}

void sub_1A5726FD8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  if (a3)
  {
    swift_retain();
    sub_1A576D614();
    v7 = v6;
    v9 = v8;
    v11 = v10;
    swift_release();
  }
  else
  {
    sub_1A56AB450(*(_QWORD *)a4, *(unsigned int *)(a4 + 8) | ((unint64_t)*(unsigned int *)(a4 + 12) << 32), *(unsigned int *)(a4 + 16) | ((unint64_t)*(unsigned __int16 *)(a4 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a4 + 22) << 48), a1, a2);
    v7 = v12;
    v9 = v13;
    v11 = 0;
  }
  *(_QWORD *)a5 = v7;
  *(_BYTE *)(a5 + 8) = v9 & 1;
  *(_QWORD *)(a5 + 16) = v11;
}

void sub_1A57270CC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  sub_1A5726FD8(a1, a2, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 32), a3);
}

uint64_t sub_1A57270E8(uint64_t result)
{
  if (result != 1)
    return swift_release();
  return result;
}

void sub_1A57270F8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  sub_1A576DA20(a1, a2, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 32), a3);
}

void sub_1A5727114(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  sub_1A576D87C(a1, a2, *(_QWORD *)(v3 + 16), *(uint64_t **)(v3 + 32), a3);
}

uint64_t sub_1A5727130(uint64_t result, uint64_t a2)
{
  if (BYTE5(a2) != 254)
    return sub_1A56667BC(result, a2);
  return result;
}

uint64_t sub_1A5727144()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  return sub_1A5725608(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_1A572715C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A5727188(a1);
}

void sub_1A5727170()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A57256EC(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_1A5727188@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2)
    *a1 = result;
  return result;
}

void sub_1A57271B4(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1A5727114(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_0_104()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_3_58()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_5_55()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_6_49()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_8_43()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_9_42()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_10_39()
{
  uint64_t v0;

  return sub_1A57270E8(v0);
}

uint64_t OUTLINED_FUNCTION_11_27()
{
  uint64_t v0;

  return sub_1A57270E8(v0);
}

void OUTLINED_FUNCTION_12_35()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1A576CB10(v1, v0, v2);
}

_QWORD *OUTLINED_FUNCTION_15_37(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t, _QWORD), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  return sub_1A576C228(a1, (uint64_t)&a9, v9);
}

uint64_t OUTLINED_FUNCTION_16_29()
{
  uint64_t v0;
  uint64_t v1;

  sub_1A56667BC(v1, v0);
  return sub_1A56667BC(v1, v0);
}

uint64_t OUTLINED_FUNCTION_17_33()
{
  uint64_t v0;
  uint64_t v1;

  sub_1A5727130(v1, v0);
  return sub_1A5727130(v1, v0);
}

uint64_t OUTLINED_FUNCTION_18_28()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  return sub_1A566658C(v1, v0, v2);
}

uint64_t OUTLINED_FUNCTION_19_28()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  return sub_1A566658C(v2, v1, v0);
}

uint64_t OUTLINED_FUNCTION_21_29()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_22_28()
{
  int64_t v0;
  uint64_t v1;

  sub_1A57259E4(v0, v1);
}

uint64_t OUTLINED_FUNCTION_24_23()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_26_17()
{
  return swift_bridgeObjectRelease_n();
}

void sub_1A5727338(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  char v113;
  int v114;
  int v115;
  uint64_t v116;
  __int16 v117;
  __int16 v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char v125;
  char v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  int v134;
  uint64_t v135;
  unint64_t v136;
  int v137;
  int v138;
  unint64_t v139;
  unint64_t v140;
  uint64_t v141;
  char v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return;
  v96 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v3 = v96 + 64;
  v106 = v2;
  while (1)
  {
    v4 = *(_QWORD *)(v3 - 24);
    v143 = *(_QWORD *)(v3 - 32);
    v144 = *(_QWORD *)(v3 - 8);
    v5 = *(unsigned int *)(v3 + 32) | ((unint64_t)(*(unsigned __int16 *)(v3 + 36) | (*(unsigned __int8 *)(v3 + 38) << 16)) << 32);
    v6 = *(_QWORD *)(v3 + 16);
    v7 = *(unsigned int *)(v3 + 56) | ((unint64_t)(*(unsigned __int16 *)(v3 + 60) | (*(unsigned __int8 *)(v3 + 62) << 16)) << 32);
    v136 = *(unsigned int *)(v3 + 8) | ((unint64_t)(*(unsigned __int16 *)(v3 + 12) | (*(unsigned __int8 *)(v3 + 14) << 16)) << 32);
    v140 = HIDWORD(v136);
    v141 = *(_QWORD *)(v3 + 24);
    v139 = HIWORD(v136);
    if (*(_QWORD *)(v3 + 40))
      break;
    if (v6)
    {
      v145 = *(_QWORD *)v3;
      OUTLINED_FUNCTION_87();
      swift_retain_n();
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_22_29();
        v2 = v89;
      }
      v31 = *(_QWORD *)(v2 + 16);
      v32 = v141;
      if (v31 >= *(_QWORD *)(v2 + 24) >> 1)
      {
        OUTLINED_FUNCTION_22_29();
        v32 = v141;
        v2 = v90;
      }
      *(_QWORD *)(v2 + 16) = v31 + 1;
      v33 = v2 + 56 * v31;
      *(_QWORD *)(v33 + 32) = v6;
      *(_QWORD *)(v33 + 40) = v32;
      *(_DWORD *)(v33 + 48) = v5;
      *(_WORD *)(v33 + 52) = WORD2(v5);
      *(_BYTE *)(v33 + 54) = BYTE6(v5);
      *(_QWORD *)(v33 + 56) = v144;
      *(_QWORD *)(v33 + 64) = v145;
      *(_BYTE *)(v33 + 78) = BYTE6(v136);
      *(_WORD *)(v33 + 76) = WORD2(v136);
      *(_DWORD *)(v33 + 72) = v136;
      *(_QWORD *)(v33 + 80) = MEMORY[0x1E0DEE9D8];
      OUTLINED_FUNCTION_15_1();
      swift_release();
      swift_release_n();
      goto LABEL_35;
    }
    v132 = 0;
    if (!*(_QWORD *)(v2 + 16))
      goto LABEL_29;
    swift_retain();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v35 = v2;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1A57285E8();
      v35 = v91;
    }
    v36 = *(_QWORD *)(v35 + 16);
    if (!v36)
      goto LABEL_46;
    v37 = v35 + 32;
    v38 = v35 + 32 + 56 * (v36 - 1);
    v39 = *(_QWORD *)v38;
    v134 = *(_DWORD *)(v38 + 12);
    LODWORD(v139) = *(_DWORD *)(v38 + 16);
    LOWORD(v140) = *(_WORD *)(v38 + 20);
    v142 = *(_BYTE *)(v38 + 22);
    v146 = v35;
    v40 = *(unsigned int *)(v38 + 40) | ((unint64_t)(*(unsigned __int16 *)(v38 + 44) | (*(unsigned __int8 *)(v38 + 46) << 16)) << 32);
    *(_QWORD *)(v35 + 16) = v36 - 1;
    if (v36 == 1)
    {
      v74 = swift_allocObject();
      OUTLINED_FUNCTION_4_55(v74, v75, v76, v77, v78, v79, v80, v81, v96, v99, v103, v106, v111, v116, v119, v124, v1, v134, 0,
        SWORD2(v40),
        0,
        v139,
        SHIDWORD(v139),
        v140,
        SHIDWORD(v140),
        v142);
      swift_retain();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      {
        v1 = v131;
        v82 = v110;
      }
      else
      {
        OUTLINED_FUNCTION_12_36();
        v82 = v94;
        v1 = v131;
      }
      v2 = v146;
      v83 = *(_QWORD *)(v82 + 16);
      if (v83 >= *(_QWORD *)(v82 + 24) >> 1)
      {
        OUTLINED_FUNCTION_13_35();
        v82 = v95;
      }
      *(_QWORD *)(v82 + 16) = v83 + 1;
      v106 = v82;
      *(_QWORD *)(v82 + 8 * v83 + 32) = v4 | 0x8000000000000000;
      OUTLINED_FUNCTION_15_1();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      OUTLINED_FUNCTION_40();
    }
    else
    {
      v41 = swift_allocObject();
      OUTLINED_FUNCTION_4_55(v41, v42, v43, v44, v45, v46, v47, v48, v96, v99, v103, v106, v111, v116, v119, v124, v1, v134, 0,
        SWORD2(v40),
        0,
        v139,
        SHIDWORD(v139),
        v140,
        SHIDWORD(v140),
        v142);
      v49 = v37 + 56 * v36;
      v50 = *(_QWORD *)(v49 - 64);
      swift_retain();
      swift_retain();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v51 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v49 - 64) = v50;
      v124 = v39;
      if ((v51 & 1) == 0)
      {
        OUTLINED_FUNCTION_9_43();
        OUTLINED_FUNCTION_21_30(v92);
      }
      v1 = v129;
      v52 = *(_QWORD *)(v50 + 16);
      if (v52 >= *(_QWORD *)(v50 + 24) >> 1)
      {
        OUTLINED_FUNCTION_9_43();
        OUTLINED_FUNCTION_21_30(v93);
      }
      *(_QWORD *)(v50 + 16) = v52 + 1;
      *(_QWORD *)(v50 + 8 * v52 + 32) = v4 | 0x8000000000000000;
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_15_1();
      swift_release();
      v2 = v146;
    }
LABEL_35:
    v3 += 96;
    if (!--v1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
  }
  v132 = *(_QWORD *)(v3 + 16);
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_29:
    v130 = v1;
    v53 = *(_QWORD *)v3;
    v122 = *(_QWORD *)(v3 + 48);
    v54 = swift_allocObject();
    *(_QWORD *)(v54 + 16) = v143;
    *(_QWORD *)(v54 + 24) = v4;
    v55 = OUTLINED_FUNCTION_18_29(v54);
    *(_QWORD *)(v55 + 40) = v56;
    *(_QWORD *)(v55 + 48) = v53;
    v64 = OUTLINED_FUNCTION_25_21(v55, v57, v58, v59, v60, v61, v62, v63, v96, v99, v103, v106, HIWORD(v5), HIDWORD(v5), v122, HIWORD(v7), v130, v132, v136,
            SBYTE6(v136),
            0,
            SWORD2(v136));
    *(_DWORD *)(v64 + 56) = v138;
    *(_QWORD *)(v64 + 64) = v135;
    *(_QWORD *)(v64 + 72) = v141;
    OUTLINED_FUNCTION_7_39(v64, v65, v66, v67, v68, v69, v70, v71, v98, v102, v105, v108, v113, v115, v118, v123, v126);
    *(_WORD *)(v54 + 108) = WORD2(v7);
    *(_DWORD *)(v54 + 104) = v7;
    OUTLINED_FUNCTION_87();
    OUTLINED_FUNCTION_87();
    OUTLINED_FUNCTION_87();
    OUTLINED_FUNCTION_87();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    {
      v72 = v109;
    }
    else
    {
      OUTLINED_FUNCTION_12_36();
      v72 = v87;
    }
    v73 = *(_QWORD *)(v72 + 16);
    if (v73 >= *(_QWORD *)(v72 + 24) >> 1)
    {
      OUTLINED_FUNCTION_13_35();
      v72 = v88;
    }
    *(_QWORD *)(v72 + 16) = v73 + 1;
    v106 = v72;
    OUTLINED_FUNCTION_20_24(v72 + 8 * v73);
    OUTLINED_FUNCTION_40();
    goto LABEL_34;
  }
  v100 = *(_QWORD *)(v2 + 16);
  v127 = v1;
  v8 = *(_QWORD *)v3;
  v120 = *(_QWORD *)(v3 + 48);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v143;
  *(_QWORD *)(v9 + 24) = v4;
  v10 = OUTLINED_FUNCTION_18_29(v9);
  *(_QWORD *)(v10 + 40) = v11;
  *(_QWORD *)(v10 + 48) = v8;
  v19 = OUTLINED_FUNCTION_25_21(v10, v12, v13, v14, v15, v16, v17, v18, v96, v100, HIDWORD(v7), v106, HIWORD(v5), HIDWORD(v5), v120, HIWORD(v7), v127, v6, v136,
          SBYTE6(v136),
          0,
          SWORD2(v136));
  *(_DWORD *)(v19 + 56) = v137;
  *(_QWORD *)(v19 + 64) = v133;
  *(_QWORD *)(v19 + 72) = v141;
  OUTLINED_FUNCTION_7_39(v19, v20, v21, v22, v23, v24, v25, v26, v97, v101, v104, v107, v112, v114, v117, v121, v125);
  *(_WORD *)(v9 + 108) = v103;
  *(_DWORD *)(v9 + 104) = v7;
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_87();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1A57285E8();
    v2 = v84;
  }
  if (v99 <= *(_QWORD *)(v2 + 16))
  {
    v27 = v2 + 56 * (v99 - 1);
    v28 = *(_QWORD *)(v27 + 80);
    v29 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v27 + 80) = v28;
    if ((v29 & 1) == 0)
    {
      OUTLINED_FUNCTION_9_43();
      OUTLINED_FUNCTION_21_30(v85);
    }
    v30 = *(_QWORD *)(v28 + 16);
    if (v30 >= *(_QWORD *)(v28 + 24) >> 1)
    {
      OUTLINED_FUNCTION_9_43();
      OUTLINED_FUNCTION_21_30(v86);
    }
    *(_QWORD *)(v28 + 16) = v30 + 1;
    OUTLINED_FUNCTION_20_24(v28 + 8 * v30);
    OUTLINED_FUNCTION_40();
LABEL_34:
    swift_release();
    OUTLINED_FUNCTION_15_1();
    v1 = v128;
    goto LABEL_35;
  }
  __break(1u);
LABEL_46:
  __break(1u);
}

double sub_1A57279C4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  double result;
  __int16 v18;
  int v19;
  __int16 v20;
  __int16 v21;
  int v22;
  int v23;
  __int16 v24;
  int v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  char v29;
  char v30;
  char v31;
  char v32;
  __int128 v33;
  int v34;
  __int16 v35;
  char v36;
  __int128 v37;
  int v38;
  __int16 v39;
  char v40;
  __int128 v41;
  int v42;
  __int16 v43;
  char v44;
  __int128 v45;
  int v46;
  __int16 v47;
  char v48;

  swift_retain();
  sub_1A5757AC4(&v33, a1, a2, a3, a4, a5, a6, a7);
  if (!v8)
  {
    v18 = v35;
    v19 = v34;
    v20 = v39;
    v21 = v43;
    v22 = v38;
    v23 = v42;
    v24 = v47;
    v25 = v46;
    result = *(double *)&v33;
    v26 = v37;
    v27 = v41;
    v28 = v45;
    v29 = v36;
    v30 = v40;
    v31 = v44;
    v32 = v48;
    *(_OWORD *)a8 = v33;
    *(_BYTE *)(a8 + 22) = v29;
    *(_WORD *)(a8 + 20) = v18;
    *(_DWORD *)(a8 + 16) = v19;
    *(_OWORD *)(a8 + 24) = v26;
    *(_BYTE *)(a8 + 46) = v30;
    *(_WORD *)(a8 + 44) = v20;
    *(_DWORD *)(a8 + 40) = v22;
    *(_OWORD *)(a8 + 48) = v27;
    *(_BYTE *)(a8 + 70) = v31;
    *(_WORD *)(a8 + 68) = v21;
    *(_DWORD *)(a8 + 64) = v23;
    *(_OWORD *)(a8 + 72) = v28;
    *(_BYTE *)(a8 + 94) = v32;
    *(_WORD *)(a8 + 92) = v24;
    *(_DWORD *)(a8 + 88) = v25;
  }
  return result;
}

uint64_t sub_1A5727AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[16];
  void **(*v18)(void **, uint64_t, uint64_t);
  char *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[16];
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t);
  _QWORD *v27;

  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a4;
  v12[3] = a5;
  v12[4] = a6;
  v12[5] = a7;
  v26 = sub_1A572854C;
  v27 = v12;
  v21 = a4;
  v22 = a5;
  v23 = a6;
  v24 = a7;
  v18 = sub_1A5728568;
  v19 = &v20;
  swift_retain();
  sub_1A576F8C0((uint64_t)sub_1A572715C, (uint64_t)v25, (uint64_t)sub_1A572715C, (uint64_t)v17);
  v14 = v13;
  swift_release();
  if (!v7)
  {
    sub_1A5727338(v14);
    a6 = v15;
    swift_bridgeObjectRelease();
  }
  return a6;
}

void **sub_1A5727C10(void **result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void **v6;
  void *v7;
  void *v8;
  int v9;
  __int16 v10;
  char v11;
  uint64_t *v12;

  v4 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    if (v4 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v12 = a3;
    }
    else
    {
      v6 = result;
      v7 = *result;
      v8 = result[1];
      v9 = *((_DWORD *)result + 4);
      v10 = *((_WORD *)result + 10);
      v11 = *((_BYTE *)result + 22);
      swift_retain();
      sub_1A576B64C(v6, v4, a3, 0, 0x6C696EuLL, 0xE300000000000000, 0);
      if (!v3)
      {
        swift_release();
        return (void **)MEMORY[0x1E0DEE9D8];
      }
      swift_release();
      *v6 = v7;
      v6[1] = v8;
      *((_DWORD *)v6 + 4) = v9;
      *((_WORD *)v6 + 10) = v10;
      *((_BYTE *)v6 + 22) = v11;
    }
    swift_willThrow();
    return (void **)MEMORY[0x1E0DEE9D8];
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5727D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v15;
  _QWORD v17[6];

  sub_1A5751898();
  if (!v7)
  {
    MEMORY[0x1E0C80A78](v15);
    v17[2] = a4;
    v17[3] = a5;
    v17[4] = a6;
    v17[5] = a7;
    a7 = sub_1A5760D2C(a1, a2, a3, (uint64_t)sub_1A5728630, (uint64_t)v17, (uint64_t)&type metadata for EmailAddress);
    sub_1A5751898();
  }
  return a7;
}

void sub_1A5727E28(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1A575DEE4();
  if (!v1)
  {
    OUTLINED_FUNCTION_1_87();
    OUTLINED_FUNCTION_2_72();
    v24 = v3;
    v25 = v4;
    v26 = v5;
    OUTLINED_FUNCTION_1_87();
    OUTLINED_FUNCTION_2_72();
    v21 = v6;
    v22 = v7;
    v23 = v8;
    OUTLINED_FUNCTION_1_87();
    OUTLINED_FUNCTION_2_72();
    v18 = v9;
    v19 = v10;
    v20 = v11;
    OUTLINED_FUNCTION_1_87();
    OUTLINED_FUNCTION_2_72();
    v13 = v12;
    v15 = v14;
    v17 = v16;
    OUTLINED_FUNCTION_1_87();
    *(_QWORD *)a1 = v26;
    *(_QWORD *)(a1 + 8) = v24;
    *(_DWORD *)(a1 + 16) = v25;
    *(_BYTE *)(a1 + 22) = BYTE6(v25);
    *(_WORD *)(a1 + 20) = WORD2(v25);
    *(_QWORD *)(a1 + 24) = v23;
    *(_QWORD *)(a1 + 32) = v21;
    *(_DWORD *)(a1 + 40) = v22;
    *(_BYTE *)(a1 + 46) = BYTE6(v22);
    *(_WORD *)(a1 + 44) = WORD2(v22);
    *(_QWORD *)(a1 + 48) = v20;
    *(_QWORD *)(a1 + 56) = v18;
    *(_DWORD *)(a1 + 64) = v19;
    *(_BYTE *)(a1 + 70) = BYTE6(v19);
    *(_WORD *)(a1 + 68) = WORD2(v19);
    *(_QWORD *)(a1 + 72) = v13;
    *(_QWORD *)(a1 + 80) = v15;
    *(_DWORD *)(a1 + 88) = v17;
    *(_BYTE *)(a1 + 94) = BYTE6(v17);
    *(_WORD *)(a1 + 92) = WORD2(v17);
  }
}

void sub_1A5727FDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  int v10;
  __int16 v11;
  char v12;
  _QWORD *v13;

  v4 = __OFADD__(a2, 1);
  v5 = a2 + 1;
  if (v4)
  {
    __break(1u);
    return;
  }
  if (v5 >= a3)
  {
    sub_1A5718F9C();
    OUTLINED_FUNCTION_21();
    *v13 = a3;
  }
  else
  {
    v8 = *(_QWORD *)a1;
    v9 = *(_QWORD *)(a1 + 8);
    v10 = *(_DWORD *)(a1 + 16);
    v11 = *(_WORD *)(a1 + 20);
    v12 = *(_BYTE *)(a1 + 22);
    sub_1A576B3AC(a1);
    if (!v3)
      return;
    *(_QWORD *)a1 = v8;
    *(_QWORD *)(a1 + 8) = v9;
    *(_DWORD *)(a1 + 16) = v10;
    *(_WORD *)(a1 + 20) = v11;
    *(_BYTE *)(a1 + 22) = v12;
  }
  swift_willThrow();
}

uint64_t sub_1A5728094()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _BYTE v9[40];

  sub_1A5740090();
  if (!v0)
  {
    if (v2)
    {
      ByteBufferView.init(_:)(v2, v3, v4 & 0xFFFFFFFFFFFFFFLL, (uint64_t)v9);
      swift_retain();
      v6 = sub_1A56E6FE8((uint64_t)v9);
      if (v7)
      {
        v1 = v6;
      }
      else
      {
        sub_1A56E9774();
        OUTLINED_FUNCTION_21();
        strcpy(v8, "Invalid UTF8");
        v8[13] = 0;
        *((_WORD *)v8 + 7) = -5120;
        *((_QWORD *)v8 + 2) = 0xD000000000000020;
        *((_QWORD *)v8 + 3) = 0x80000001A5A0F5E0;
        *((_QWORD *)v8 + 4) = 97;
        swift_willThrow();
      }
      swift_release();
    }
    else
    {
      return 0;
    }
  }
  return v1;
}

void sub_1A5728190(uint64_t a1@<X5>, uint64_t a2@<X6>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  int v130;
  __int16 v131;
  char v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;

  OUTLINED_FUNCTION_14_32();
  sub_1A5751898();
  if (!v3)
  {
    v147 = a3;
    v7 = 0;
    sub_1A5740090();
    v11 = v10;
    v140 = a2;
    v145 = a1;
    if (v10)
    {
      v12 = v8;
      v133 = (HIDWORD(v8) - v8);
      if (HIDWORD(v8) < v8)
      {
        __break(1u);
        goto LABEL_11;
      }
      v13 = v9;
      swift_beginAccess();
      v7 = *(_QWORD *)(v11 + 24) + ((v13 >> 24) & 0xFFFF00 | BYTE6(v13)) + v12;
      swift_retain();
      v134 = sub_1A594B538();
      v12 = v14;
      swift_release_n();
    }
    else
    {
      v134 = 0;
      v12 = 0;
    }
    OUTLINED_FUNCTION_0_105();
    if (!v7)
    {
      sub_1A5740090();
      v11 = v15;
      v118 = v16;
      v125 = v17;
      OUTLINED_FUNCTION_0_105();
      v112 = OUTLINED_FUNCTION_3_59(v18, v19, v20, v21, v22, v23, v24, v25, v70, v75, v81, v87, v93, v99, v105, v111, v118, v125, v134,
               v140);
      OUTLINED_FUNCTION_0_105();
      v107 = OUTLINED_FUNCTION_3_59(v26, v27, v28, v29, v30, v31, v32, v33, v71, v76, v82, v88, v94, v100, v106, v112, v119, v126, v135,
               v141);
      OUTLINED_FUNCTION_0_105();
      a1 = OUTLINED_FUNCTION_3_59(v34, v35, v36, v37, v38, v39, v40, v41, v72, v77, v83, v89, v95, v101, v107, v113, v120, v127, v136,
             v142);
      OUTLINED_FUNCTION_0_105();
      v99 = OUTLINED_FUNCTION_5_56(v42, v43, v44, v45, v46, v47, v48, v49, v73, v78, v84, v90, v96, v102, v108, v114, v121, v128, v137,
              v143,
              v145);
LABEL_11:
      OUTLINED_FUNCTION_0_105();
      v97 = OUTLINED_FUNCTION_5_56(v50, v51, v52, v53, v54, v55, v56, v57, v70, v75, v81, v87, v93, v99, v105, v111, v117, v124, v133,
              v140,
              v145);
      OUTLINED_FUNCTION_0_105();
      v92 = OUTLINED_FUNCTION_5_56(v58, v59, v60, v61, v62, v63, v64, v65, v74, v79, v85, v91, v97, v103, v109, v115, v122, v129, v138,
              v144,
              v146);
      OUTLINED_FUNCTION_0_105();
      v80 = OUTLINED_FUNCTION_8_44();
      v86 = v66;
      OUTLINED_FUNCTION_0_105();
      v67 = OUTLINED_FUNCTION_8_44();
      v69 = v68;
      OUTLINED_FUNCTION_14_32();
      sub_1A5751898();
      *(_QWORD *)v147 = v139;
      *(_QWORD *)(v147 + 8) = v12;
      *(_QWORD *)(v147 + 16) = v11;
      *(_QWORD *)(v147 + 24) = v123;
      *(_DWORD *)(v147 + 32) = v130;
      *(_BYTE *)(v147 + 38) = v132;
      *(_WORD *)(v147 + 36) = v131;
      *(_QWORD *)(v147 + 40) = v116;
      *(_QWORD *)(v147 + 48) = v110;
      *(_QWORD *)(v147 + 56) = a1;
      *(_QWORD *)(v147 + 64) = v104;
      *(_QWORD *)(v147 + 72) = v98;
      *(_QWORD *)(v147 + 80) = v92;
      *(_QWORD *)(v147 + 88) = v80;
      *(_QWORD *)(v147 + 96) = v86;
      *(_QWORD *)(v147 + 104) = v67;
      *(_QWORD *)(v147 + 112) = v69;
      return;
    }
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1A5728528()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A572854C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_1A5727D10(a1, a2, a3, v3[2], v3[3], v3[4], v3[5]);
}

void **sub_1A5728568(void **a1, uint64_t a2, uint64_t a3)
{
  return sub_1A5727C10(a1, a2, a3);
}

uint64_t sub_1A5728584()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1A57285C0()
{
  sub_1A569D798();
}

void sub_1A57285D4()
{
  sub_1A569D7A4();
}

void sub_1A57285E8()
{
  sub_1A569DF5C();
}

uint64_t sub_1A57285FC()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

double sub_1A5728630@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v4;

  return sub_1A57279C4(a1, a2, a3, v4[2], v4[3], v4[4], v4[5], a4);
}

void OUTLINED_FUNCTION_0_105()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1A5751974(v2, v1, v0);
}

void OUTLINED_FUNCTION_1_87()
{
  sub_1A5751898();
}

void OUTLINED_FUNCTION_2_72()
{
  sub_1A5740090();
}

uint64_t OUTLINED_FUNCTION_3_59(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  return sub_1A5727AE8(v24, v23, v22, v20, v21, v25, a20);
}

uint64_t OUTLINED_FUNCTION_4_55(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19, __int16 a20,int a21,int a22,int a23,__int16 a24,int a25,char a26)
{
  int v26;
  uint64_t v27;
  int v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  *(_QWORD *)(result + 16) = v30;
  *(_DWORD *)(result + 24) = v28;
  *(_DWORD *)(result + 28) = a18;
  *(_DWORD *)(result + 32) = a22;
  *(_WORD *)(result + 36) = a24;
  *(_BYTE *)(result + 38) = a26;
  v33 = *(_QWORD *)(v32 - 96);
  *(_QWORD *)(result + 40) = v31;
  *(_QWORD *)(result + 48) = v33;
  *(_BYTE *)(result + 62) = v29;
  *(_WORD *)(result + 60) = a20;
  *(_DWORD *)(result + 56) = v26;
  *(_QWORD *)(result + 64) = v27;
  return result;
}

uint64_t OUTLINED_FUNCTION_5_56(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  return sub_1A5727AE8(v25, v24, v23, v21, v22, a21, a20);
}

uint64_t OUTLINED_FUNCTION_7_39(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, int a14, __int16 a15, uint64_t a16, char a17)
{
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;

  *(_BYTE *)(a1 + 86) = a13;
  *(_WORD *)(a1 + 84) = a15;
  *(_DWORD *)(a1 + 80) = v17;
  result = *(_QWORD *)(v19 - 96);
  *(_QWORD *)(v18 + 88) = result;
  *(_QWORD *)(v18 + 96) = a16;
  *(_BYTE *)(v18 + 110) = a17;
  return result;
}

uint64_t OUTLINED_FUNCTION_8_44()
{
  return sub_1A5728094();
}

void OUTLINED_FUNCTION_9_43()
{
  sub_1A569E018();
}

uint64_t OUTLINED_FUNCTION_10_40()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_12_36()
{
  sub_1A569E018();
}

void OUTLINED_FUNCTION_13_35()
{
  sub_1A569E018();
}

uint64_t OUTLINED_FUNCTION_16_30()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_18_29(uint64_t result)
{
  int v1;
  __int16 v2;
  char v3;

  *(_BYTE *)(result + 38) = v3;
  *(_WORD *)(result + 36) = v2;
  *(_DWORD *)(result + 32) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_20_24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 32) = v1;
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_21_30(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

void OUTLINED_FUNCTION_22_29()
{
  sub_1A569DF5C();
}

uint64_t OUTLINED_FUNCTION_25_21(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,int a21,__int16 a22)
{
  *(_BYTE *)(result + 62) = a20;
  *(_WORD *)(result + 60) = a22;
  return result;
}

uint64_t sub_1A5728830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t inited;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9DF0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A59ABD70;
  *(_QWORD *)(inited + 32) = sub_1A5729308;
  *(_QWORD *)(inited + 40) = 0;
  *(_QWORD *)(inited + 48) = sub_1A5729338;
  *(_QWORD *)(inited + 56) = 0;
  *(_QWORD *)(inited + 64) = sub_1A5729368;
  *(_QWORD *)(inited + 72) = 0;
  v15 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  v15[2] = a4;
  v15[3] = a5;
  v15[4] = a6;
  v15[5] = a7;
  v16 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v16 + 16) = sub_1A572B5A0;
  *(_QWORD *)(v16 + 24) = v15;
  *(_QWORD *)(inited + 80) = sub_1A572B5B8;
  *(_QWORD *)(inited + 88) = v16;
  v17 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  v17[2] = a4;
  v17[3] = a5;
  v17[4] = a6;
  v17[5] = a7;
  v18 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v18 + 16) = sub_1A572B5CC;
  *(_QWORD *)(v18 + 24) = v17;
  *(_QWORD *)(inited + 96) = sub_1A572B5B8;
  *(_QWORD *)(inited + 104) = v18;
  OUTLINED_FUNCTION_87();
  v19 = sub_1A57706B0(inited, a1, a2, a3, 0xD000000000000020, 0x80000001A5A0F5E0, 56);
  swift_setDeallocating();
  sub_1A5774244();
  return v19;
}

void *sub_1A57289B8()
{
  sub_1A5751898();
  return &unk_1E4E5E5F0;
}

void *sub_1A57289F4()
{
  sub_1A5751898();
  return &unk_1E4E5E6B0;
}

void *sub_1A5728A30()
{
  sub_1A5751898();
  return &unk_1E4E5E748;
}

uint64_t sub_1A5728A6C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[40];

  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AE88);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1A59ABD10;
  sub_1A5728B48();
  if (v0)
  {
    *(_QWORD *)(v1 + 16) = 0;
    swift_release();
  }
  else
  {
    sub_1A5666B28((uint64_t)v3, v1 + 32);
  }
  return v1;
}

void sub_1A5728B48()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  unsigned __int8 v44;
  _QWORD v45[4];
  unsigned int v46;
  unsigned __int8 v47;

  OUTLINED_FUNCTION_24_24();
  v38 = v2;
  v36 = v4;
  v37 = v3;
  v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9DF8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A59AC260;
  *(_QWORD *)(inited + 32) = 0x45504F4C45564E45;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  *(_QWORD *)(inited + 48) = sub_1A5729864;
  *(_QWORD *)(inited + 56) = 0;
  *(_QWORD *)(inited + 64) = 0x5347414C46;
  *(_QWORD *)(inited + 72) = 0xE500000000000000;
  *(_QWORD *)(inited + 80) = sub_1A5729880;
  *(_QWORD *)(inited + 88) = 0;
  strcpy((char *)(inited + 96), "INTERNALDATE");
  *(_BYTE *)(inited + 109) = 0;
  *(_WORD *)(inited + 110) = -5120;
  *(_QWORD *)(inited + 112) = sub_1A572989C;
  *(_QWORD *)(inited + 120) = 0;
  *(_QWORD *)(inited + 128) = 4475221;
  *(_QWORD *)(inited + 136) = 0xE300000000000000;
  *(_QWORD *)(inited + 144) = sub_1A57298B8;
  *(_QWORD *)(inited + 152) = 0;
  *(_QWORD *)(inited + 160) = 0x514553444F4DLL;
  *(_QWORD *)(inited + 168) = 0xE600000000000000;
  *(_QWORD *)(inited + 176) = sub_1A57298D4;
  *(_QWORD *)(inited + 184) = 0;
  *(_QWORD *)(inited + 192) = 0x47534D2D4D472D58;
  *(_QWORD *)(inited + 200) = 0xEA00000000004449;
  *(_QWORD *)(inited + 208) = sub_1A57298F0;
  *(_QWORD *)(inited + 216) = 0;
  *(_QWORD *)(inited + 224) = 0x5248542D4D472D58;
  *(_QWORD *)(inited + 232) = 0xEA00000000004449;
  *(_QWORD *)(inited + 240) = sub_1A572990C;
  *(_QWORD *)(inited + 248) = 0;
  *(_QWORD *)(inited + 256) = 0x42414C2D4D472D58;
  *(_QWORD *)(inited + 264) = 0xEB00000000534C45;
  *(_QWORD *)(inited + 272) = sub_1A5729928;
  *(_QWORD *)(inited + 280) = 0;
  *(_QWORD *)(inited + 288) = 0x532E323238434652;
  *(_QWORD *)(inited + 296) = 0xEB00000000455A49;
  *(_QWORD *)(inited + 304) = sub_1A5729944;
  *(_QWORD *)(inited + 312) = 0;
  OUTLINED_FUNCTION_9_44();
  v8[40] = v9;
  v8[41] = v10;
  v8[42] = sub_1A5729960;
  v8[43] = 0;
  OUTLINED_FUNCTION_13_36();
  *(_QWORD *)(v11 + 352) = v12;
  *(_QWORD *)(v11 + 360) = v13;
  *(_QWORD *)(v11 + 368) = sub_1A572997C;
  *(_QWORD *)(v11 + 376) = 0;
  *(_QWORD *)(v11 + 384) = 0x323238434652;
  *(_QWORD *)(v11 + 392) = 0xE600000000000000;
  *(_QWORD *)(v11 + 400) = sub_1A5729998;
  *(_QWORD *)(v11 + 408) = 0;
  strcpy((char *)(v11 + 416), "BODYSTRUCTURE");
  *(_WORD *)(v11 + 430) = -4864;
  *(_QWORD *)(v11 + 432) = sub_1A57299B4;
  *(_QWORD *)(v11 + 440) = 0;
  v14 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_7_40(v14);
  v15 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v15 + 16) = sub_1A572B630;
  *(_QWORD *)(v15 + 24) = v1;
  *(_QWORD *)(inited + 448) = 1497648962;
  *(_QWORD *)(inited + 456) = 0xE400000000000000;
  *(_QWORD *)(inited + 464) = sub_1A572B648;
  *(_QWORD *)(inited + 472) = v15;
  v16 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_7_40(v16);
  v17 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v17 + 16) = sub_1A572B660;
  *(_QWORD *)(v17 + 24) = v1;
  *(_QWORD *)(inited + 480) = 0x4545502E59444F42;
  *(_QWORD *)(inited + 488) = 0xE90000000000004BLL;
  *(_QWORD *)(inited + 496) = sub_1A572BD34;
  *(_QWORD *)(inited + 504) = v17;
  v18 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_7_40(v18);
  v19 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v19 + 16) = sub_1A572B678;
  *(_QWORD *)(v19 + 24) = v1;
  OUTLINED_FUNCTION_15_38();
  *(_QWORD *)(inited + 512) = v20 & 0xFFFFFFFFFFFFLL | 0x532E000000000000;
  *(_QWORD *)(inited + 520) = 0xEB00000000455A49;
  *(_QWORD *)(inited + 528) = sub_1A572BD34;
  *(_QWORD *)(inited + 536) = v21;
  v22 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_7_40(v22);
  v23 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v23 + 16) = sub_1A572B690;
  *(_QWORD *)(v23 + 24) = v1;
  OUTLINED_FUNCTION_15_38();
  *(_QWORD *)(inited + 544) = v24;
  *(_QWORD *)(inited + 552) = 0xE600000000000000;
  *(_QWORD *)(inited + 560) = sub_1A572BD34;
  *(_QWORD *)(inited + 568) = v25;
  v26 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_7_40(v26);
  v27 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v27 + 16) = sub_1A572B6B8;
  *(_QWORD *)(v27 + 24) = v1;
  OUTLINED_FUNCTION_15_38();
  *(_QWORD *)(inited + 576) = v28 & 0xFFFFFFFFFFFFLL | 0x502E000000000000;
  *(_QWORD *)(inited + 584) = 0xEB000000004B4545;
  *(_QWORD *)(inited + 592) = sub_1A572BD34;
  *(_QWORD *)(inited + 600) = v29;
  *(_QWORD *)(inited + 608) = 0x57454956455250;
  *(_QWORD *)(inited + 616) = 0xE700000000000000;
  *(_QWORD *)(inited + 624) = sub_1A57299D0;
  *(_QWORD *)(inited + 632) = 0;
  swift_retain_n();
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9E00);
  sub_1A594AFEC();
  sub_1A5732CB8();
  if (!v0)
  {
    v31 = v39;
    v32 = v40;
    v33 = v41;
    v34 = v42;
    v35 = v43 | ((unint64_t)v44 << 32);
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  swift_bridgeObjectRelease();
  v30 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
  if (swift_dynamicCast())
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A572951C(v38, v6, v37, (uint64_t)v45);
    v31 = v45[0];
    v32 = v45[1];
    v33 = v45[2];
    v34 = v45[3];
    v35 = v46 | ((unint64_t)v47 << 32);

LABEL_6:
    *(_QWORD *)v36 = v31;
    *(_QWORD *)(v36 + 8) = v32;
    *(_QWORD *)(v36 + 16) = v33;
    *(_QWORD *)(v36 + 24) = v34;
    *(_DWORD *)(v36 + 32) = v35;
    *(_BYTE *)(v36 + 36) = BYTE4(v35);
    goto LABEL_7;
  }

LABEL_7:
  OUTLINED_FUNCTION_32_17();
}

void sub_1A572909C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[6];
  uint64_t v18;
  _BYTE v19[40];
  uint64_t v20;

  sub_1A5751898();
  if (!v7)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AE88);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1A59ABD10;
    sub_1A5728B48();
    v16 = sub_1A5666B28((uint64_t)v19, v15 + 32);
    v18 = (uint64_t)&v18;
    v20 = v15;
    MEMORY[0x1E0C80A78](v16);
    v17[2] = a4;
    v17[3] = a5;
    v17[4] = a6;
    v17[5] = a7;
    sub_1A5751E94(a1, a2, a3, (uint64_t)sub_1A572B618, (uint64_t)v17, (uint64_t)&v20);
    sub_1A5751898();
  }
}

void sub_1A5729240(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v3[40];

  sub_1A5751898();
  if (!v1)
  {
    sub_1A5728B48();
    sub_1A5666B28((uint64_t)v3, a1);
  }
}

void *sub_1A5729308@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *result;

  result = sub_1A57289B8();
  if (!v1)
    *a1 = result;
  return result;
}

void *sub_1A5729338@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *result;

  result = sub_1A5728A30();
  if (!v1)
    *a1 = result;
  return result;
}

void *sub_1A5729368@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *result;

  result = sub_1A57289F4();
  if (!v1)
    *a1 = result;
  return result;
}

void sub_1A5729398()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  __int128 v26;
  _BYTE v27[16];
  uint64_t v28;

  OUTLINED_FUNCTION_7_36();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v17 = sub_1A5740C80();
  if (v0)
  {

    v20 = 0;
    v21 = 0;
    v22 = 0;
    v23 = 0;
  }
  else
  {
    v20 = v17;
    v27[0] = v19;
    v28 = v18;
    swift_retain();
    v24 = sub_1A575ED78(v14, v12, v10, v8, v6, v4, v2);
    v22 = v27[0] | (unint64_t)(v24 << 32);
    *((_QWORD *)&v26 + 1) = v25 & 1;
    *(_QWORD *)&v26 = v24;
    v23 = (v26 >> 32) | 0x2000000000;
    v21 = v28;
  }
  *(_QWORD *)v16 = 0;
  *(_QWORD *)(v16 + 8) = v20;
  *(_QWORD *)(v16 + 16) = v21;
  *(_QWORD *)(v16 + 24) = v22;
  *(_DWORD *)(v16 + 32) = v23;
  *(_BYTE *)(v16 + 36) = BYTE4(v23);
  OUTLINED_FUNCTION_2_71();
}

#error "1A57294CC: call analysis failed (funcsize=38)"

uint64_t sub_1A572951C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v7;
  uint64_t v9;
  uint64_t v10;
  int v11;
  __int16 v12;
  char v13;
  unint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  _QWORD *v17;

  v5 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v5 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v15 = a3;
      return swift_willThrow();
    }
    v7 = result;
    v9 = *(_QWORD *)result;
    v10 = *(_QWORD *)(result + 8);
    v11 = *(_DWORD *)(result + 16);
    v12 = *(_WORD *)(result + 20);
    v13 = *(_BYTE *)(result + 22);
    swift_retain();
    v14 = sub_1A5761038(v7, v5, a3, 1);
    if (v4)
    {
LABEL_4:
      swift_release();
      *(_QWORD *)v7 = v9;
      *(_QWORD *)(v7 + 8) = v10;
      *(_DWORD *)(v7 + 16) = v11;
      *(_WORD *)(v7 + 20) = v12;
      *(_BYTE *)(v7 + 22) = v13;
      return swift_willThrow();
    }
    v16 = v14;
    if ((v14 & 0x8000000000000000) != 0)
    {
      sub_1A56E9774();
      swift_allocError();
      *v17 = 0xD00000000000001BLL;
      v17[1] = 0x80000001A5A0FA60;
      v17[2] = 0xD000000000000020;
      v17[3] = 0x80000001A5A0F5E0;
      v17[4] = 135;
      swift_willThrow();
      goto LABEL_4;
    }
    result = swift_release();
    *(_QWORD *)a4 = v16;
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    *(_QWORD *)(a4 + 24) = 0;
    *(_DWORD *)(a4 + 32) = 0;
    *(_BYTE *)(a4 + 36) = 64;
  }
  return result;
}

void sub_1A572968C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t), uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;

  OUTLINED_FUNCTION_35_16();
  v11 = OUTLINED_FUNCTION_17_34();
  v18 = sub_1A57580C4(v11, v12, v13, v14, v15, v16, v17);
  if (!v10)
  {
    v23 = v18;
    OUTLINED_FUNCTION_87();
    v19 = OUTLINED_FUNCTION_17_34();
    v20 = a8(v19);
    v22 = v21;
    swift_release();
    *(_QWORD *)v9 = a9;
    *(_QWORD *)(v9 + 8) = v23;
    *(_QWORD *)(v9 + 16) = v20;
    *(_QWORD *)(v9 + 24) = v22 & 1;
    *(_DWORD *)(v9 + 32) = 0;
    *(_BYTE *)(v9 + 36) = 96;
  }
  OUTLINED_FUNCTION_2_71();
}

uint64_t sub_1A5729744@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t result;

  swift_retain();
  result = sub_1A57580C4(a1, a2, a3, a4, a5, a6, a7);
  if (!v8)
  {
    *(_QWORD *)a8 = result;
    *(_QWORD *)(a8 + 8) = 0;
    *(_QWORD *)(a8 + 16) = 0;
    *(_QWORD *)(a8 + 24) = 0;
    *(_DWORD *)(a8 + 32) = 0;
    *(_BYTE *)(a8 + 36) = 0x80;
  }
  return result;
}

void sub_1A57297D4(uint64_t a1@<X8>)
{
  void *v1;

  sub_1A5751898();
  if (v1)

  *(_QWORD *)a1 = v1 == 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 36) = -96;
}

double sub_1A572984C@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 36) = -64;
  return result;
}

_QWORD *sub_1A5729864@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A57299EC(a1, a2, (_QWORD *(*)(_QWORD *__return_ptr, uint64_t, _QWORD, _QWORD))sub_1A572984C, a3);
}

_QWORD *sub_1A5729880@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A57299EC(a1, a2, (_QWORD *(*)(_QWORD *__return_ptr, uint64_t, _QWORD, _QWORD))sub_1A5729A90, a3);
}

_QWORD *sub_1A572989C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A57299EC(a1, a2, (_QWORD *(*)(_QWORD *__return_ptr, uint64_t, _QWORD, _QWORD))sub_1A5729AAC, a3);
}

_QWORD *sub_1A57298B8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A57299EC(a1, a2, (_QWORD *(*)(_QWORD *__return_ptr, uint64_t, _QWORD, _QWORD))sub_1A5729AC8, a3);
}

_QWORD *sub_1A57298D4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A57299EC(a1, a2, (_QWORD *(*)(_QWORD *__return_ptr, uint64_t, _QWORD, _QWORD))sub_1A5729AE4, a3);
}

_QWORD *sub_1A57298F0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A57299EC(a1, a2, (_QWORD *(*)(_QWORD *__return_ptr, uint64_t, _QWORD, _QWORD))sub_1A5729B00, a3);
}

_QWORD *sub_1A572990C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A57299EC(a1, a2, (_QWORD *(*)(_QWORD *__return_ptr, uint64_t, _QWORD, _QWORD))sub_1A5729B1C, a3);
}

_QWORD *sub_1A5729928@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A57299EC(a1, a2, (_QWORD *(*)(_QWORD *__return_ptr, uint64_t, _QWORD, _QWORD))sub_1A5729B38, a3);
}

_QWORD *sub_1A5729944@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A57299EC(a1, a2, (_QWORD *(*)(_QWORD *__return_ptr, uint64_t, _QWORD, _QWORD))sub_1A5729B54, a3);
}

_QWORD *sub_1A5729960@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A57299EC(a1, a2, (_QWORD *(*)(_QWORD *__return_ptr, uint64_t, _QWORD, _QWORD))sub_1A5729B70, a3);
}

_QWORD *sub_1A572997C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A57299EC(a1, a2, (_QWORD *(*)(_QWORD *__return_ptr, uint64_t, _QWORD, _QWORD))sub_1A5729B8C, a3);
}

_QWORD *sub_1A5729998@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A57299EC(a1, a2, (_QWORD *(*)(_QWORD *__return_ptr, uint64_t, _QWORD, _QWORD))sub_1A5729BA8, a3);
}

_QWORD *sub_1A57299B4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A57299EC(a1, a2, (_QWORD *(*)(_QWORD *__return_ptr, uint64_t, _QWORD, _QWORD))sub_1A5729BC4, a3);
}

_QWORD *sub_1A57299D0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A57299EC(a1, a2, (_QWORD *(*)(_QWORD *__return_ptr, uint64_t, _QWORD, _QWORD))sub_1A57297D4, a3);
}

_QWORD *sub_1A57299EC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, _QWORD *(*a3)(_QWORD *__return_ptr, uint64_t, _QWORD, _QWORD)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  _QWORD *result;
  _QWORD v7[5];

  result = a3(v7, a1, *a2, a2[1]);
  if (!v4)
    return (_QWORD *)sub_1A5666B28((uint64_t)v7, a4);
  return result;
}

_QWORD *sub_1A5729A3C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, _QWORD *(*a3)(_QWORD *__return_ptr, uint64_t, _QWORD, _QWORD)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  _QWORD *result;
  _QWORD v7[5];

  result = a3(v7, a1, *a2, a2[1]);
  if (!v4)
    return (_QWORD *)sub_1A5666B28((uint64_t)v7, a4);
  return result;
}

void sub_1A5729A90(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 1;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 36) = -64;
}

void sub_1A5729AAC(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 2;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 36) = -64;
}

void sub_1A5729AC8(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 7;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 36) = -64;
}

void sub_1A5729AE4(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 8;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 36) = -64;
}

void sub_1A5729B00(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 9;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 36) = -64;
}

void sub_1A5729B1C(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 10;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 36) = -64;
}

void sub_1A5729B38(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 11;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 36) = -64;
}

void sub_1A5729B54(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 5;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 36) = -64;
}

void sub_1A5729B70(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 4;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 36) = -64;
}

void sub_1A5729B8C(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 6;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 36) = -64;
}

void sub_1A5729BA8(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 3;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 36) = -64;
}

void sub_1A5729BC4(_QWORD *a1@<X8>)
{
  *a1 = 1;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0;
  *(_QWORD *)((char *)a1 + 29) = 0;
}

#error "1A5729BF8: call analysis failed (funcsize=41)"

uint64_t sub_1A5729C7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  _BYTE v21[48];
  uint64_t v22;

  OUTLINED_FUNCTION_16_31();
  v20 = v1;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B2A0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A59ABD20;
  v3 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_12_37(v3);
  v4 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v4 + 16) = sub_1A572B4BC;
  *(_QWORD *)(v4 + 24) = v0;
  OUTLINED_FUNCTION_13_36();
  *(_QWORD *)(inited + 32) = v5;
  *(_QWORD *)(inited + 40) = v6;
  *(_QWORD *)(inited + 48) = sub_1A572B4C4;
  *(_QWORD *)(inited + 56) = v7;
  v8 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_12_37(v8);
  v9 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v9 + 16) = sub_1A572B4DC;
  *(_QWORD *)(v9 + 24) = v0;
  OUTLINED_FUNCTION_9_44();
  *(_QWORD *)(inited + 64) = v10;
  *(_QWORD *)(inited + 72) = v11;
  *(_QWORD *)(inited + 80) = sub_1A572BD20;
  *(_QWORD *)(inited + 88) = v12;
  v13 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_12_37(v13);
  v14 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v14 + 16) = sub_1A572B4E4;
  *(_QWORD *)(v14 + 24) = v0;
  *(_QWORD *)(inited + 96) = 1497648962;
  *(_QWORD *)(inited + 104) = 0xE400000000000000;
  *(_QWORD *)(inited + 112) = sub_1A572BD20;
  *(_QWORD *)(inited + 120) = v14;
  v15 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_12_37(v15);
  v16 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v16 + 16) = sub_1A572B4FC;
  *(_QWORD *)(v16 + 24) = v0;
  OUTLINED_FUNCTION_15_38();
  *(_QWORD *)(inited + 128) = v17;
  *(_QWORD *)(inited + 136) = 0xE600000000000000;
  *(_QWORD *)(inited + 144) = sub_1A572BD20;
  *(_QWORD *)(inited + 152) = v18;
  swift_retain_n();
  __swift_instantiateConcreteTypeFromMangledName_0(qword_1EE796980);
  sub_1A594AFEC();
  sub_1A5732E54();
  result = swift_bridgeObjectRelease();
  if (!v22)
    return sub_1A56DDBAC((uint64_t)v21, v20);
  return result;
}

_QWORD *sub_1A5729E8C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, _QWORD *(*a3)(_QWORD *__return_ptr, uint64_t, _QWORD, _QWORD)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  _QWORD *result;
  _QWORD v7[5];

  result = a3(v7, a1, *a2, a2[1]);
  if (!v4)
    return (_QWORD *)sub_1A56DDBAC((uint64_t)v7, a4);
  return result;
}

_QWORD *sub_1A5729EE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *result;
  _QWORD v4[5];

  result = sub_1A5729BD8(v4);
  if (!v1)
    return (_QWORD *)sub_1A56DDBAC((uint64_t)v4, a1);
  return result;
}

uint64_t sub_1A5729F24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t result;
  char v18;
  uint64_t v19;

  swift_retain();
  result = sub_1A57580C4(a1, a2, a3, a4, a5, a6, a7);
  if (!v8)
  {
    v19 = result;
    swift_retain();
    result = sub_1A575EF14(a1, a2, a3, a4, a5, a6, a7);
    *(_QWORD *)a8 = v19;
    *(_QWORD *)(a8 + 8) = result;
    *(_QWORD *)(a8 + 16) = v18 & 1;
    *(_QWORD *)(a8 + 24) = 0;
    *(_BYTE *)(a8 + 32) = 0;
  }
  return result;
}

void sub_1A572A008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  __int16 v46;
  char v47;
  _QWORD v48[6];
  uint64_t v49;
  uint64_t *v50;

  OUTLINED_FUNCTION_24_24();
  a19 = v29;
  a20 = v30;
  OUTLINED_FUNCTION_8_45();
  sub_1A5751974(v31, v32, v33);
  if (!v21)
  {
    OUTLINED_FUNCTION_6_50();
    v50 = v20;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AE48);
    v34 = OUTLINED_FUNCTION_20_1();
    *(_OWORD *)(v34 + 16) = xmmword_1A59ABD10;
    v35 = OUTLINED_FUNCTION_10_41();
    v42 = sub_1A572A14C(v35, v36, v37, v38, v39, v40, v41);
    v49 = (uint64_t)&v49;
    *(_QWORD *)(v34 + 32) = v42;
    *(_QWORD *)(v34 + 40) = v43;
    *(_QWORD *)(v34 + 48) = v44;
    *(_DWORD *)(v34 + 56) = v45;
    *(_WORD *)(v34 + 60) = v46;
    *(_BYTE *)(v34 + 62) = v47;
    a10 = v34;
    MEMORY[0x1E0C80A78](v42);
    v48[2] = v28;
    v48[3] = v27;
    v48[4] = v26;
    v48[5] = v25;
    sub_1A5751EB0(v24, v23, v22, (uint64_t)sub_1A572B528, (uint64_t)v48, (uint64_t)&a10);
    OUTLINED_FUNCTION_6_50();
    *v50 = a10;
  }
  OUTLINED_FUNCTION_32_17();
}

uint64_t sub_1A572A14C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  _BYTE v10[16];
  void (*v11)();
  char *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v14 = a4;
  v15 = a5;
  v16 = a6;
  v17 = a7;
  v11 = sub_1A572B540;
  v12 = &v13;
  result = sub_1A573F730((uint64_t)sub_1A572B558, (uint64_t)v10);
  if (v7)
    return v9 & 0xFFFFFFFFFFFFFFLL;
  return result;
}

void sub_1A572A228(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v17;
  uint64_t v18;
  int v19;
  __int16 v20;
  char v21;

  sub_1A5751974(a1, a2, a3);
  if (!v8)
  {
    *(_QWORD *)a8 = sub_1A572A14C(a1, a2, a3, a4, a5, a6, a7);
    *(_QWORD *)(a8 + 8) = v17;
    *(_QWORD *)(a8 + 16) = v18;
    *(_DWORD *)(a8 + 24) = v19;
    *(_WORD *)(a8 + 28) = v20;
    *(_BYTE *)(a8 + 30) = v21;
  }
}

void sub_1A572A2C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  swift_retain();
  sub_1A575827C(a1, a2, a3, a4, a5, a6, a7);
}

void sub_1A572A348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  sub_1A5751898();
  if (!v7)
  {
    sub_1A5751974(a1, a2, a3);
    sub_1A5732834(a1, a2, a3, a4, a5, a6, a7);
  }
}

uint64_t sub_1A572A40C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t result;
  uint64_t v16;

  swift_retain();
  result = sub_1A575834C(a1, a2, a3, a4, a5, a6, a7);
  if (v7)
    return v16 & 0xFFFFFFFFFFFFLL | 0x2000000000000;
  return result;
}

uint64_t sub_1A572A49C@<X0>(uint64_t (*a1)(void)@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = a1();
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
    *(_QWORD *)(a2 + 16) = v6;
    *(_DWORD *)(a2 + 24) = v7;
    *(_WORD *)(a2 + 28) = WORD2(v7);
    *(_BYTE *)(a2 + 30) = BYTE6(v7);
  }
  return result;
}

void sub_1A572A4E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t inited;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  void *v29;
  _BYTE __dst[184];
  _BYTE __src[192];

  OUTLINED_FUNCTION_24_24();
  OUTLINED_FUNCTION_5_57();
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796208);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A59ABD40;
  v12 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_4_56(v12);
  v13 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v13 + 16) = sub_1A572A62C;
  *(_QWORD *)(v13 + 24) = v10;
  *(_QWORD *)(inited + 32) = sub_1A572AD4C;
  *(_QWORD *)(inited + 40) = v13;
  v14 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_4_56(v14);
  v15 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v15 + 16) = sub_1A572AD64;
  *(_QWORD *)(v15 + 24) = v10;
  *(_QWORD *)(inited + 48) = sub_1A572BD0C;
  *(_QWORD *)(inited + 56) = v15;
  OUTLINED_FUNCTION_87();
  v16 = OUTLINED_FUNCTION_18_30();
  sub_1A5770914(v16, v17, v18, v19, v20, v21, 263);
  swift_setDeallocating();
  OUTLINED_FUNCTION_22_30();
  if (!a10)
  {
    sub_1A56DDB8C(__src, __dst);
    OUTLINED_FUNCTION_33_17(__dst, v22, v23, v24, v25, v26, v27, v28, v29);
  }
  OUTLINED_FUNCTION_32_17();
}

uint64_t sub_1A572A608()
{
  swift_release();
  return swift_deallocObject();
}

_QWORD *sub_1A572A62C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  OUTLINED_FUNCTION_4_52();
  return sub_1A572A678(v0, v1, v2, v3, v4, v5, v6, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A57333D0, v7, 0x2820484354454620, 0xE800000000000000, (void (*)(_DWORD *))sub_1A56EFCCC);
}

_QWORD *sub_1A572A678@<X0>(_QWORD *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11, void (*a12)(_DWORD *))
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  _QWORD *v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  char v33;
  __int16 v34;
  int v35;
  _DWORD v36[48];

  v13 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v13 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v24 = a3;
      swift_retain();
    }
    else
    {
      v20 = (uint64_t)result;
      v21 = *result;
      v22 = result[1];
      v34 = *((_WORD *)result + 10);
      v35 = *((_DWORD *)result + 4);
      v33 = *((_BYTE *)result + 22);
      swift_retain();
      swift_retain();
      OUTLINED_FUNCTION_25_22();
      sub_1A5751898();
      if (!v12)
      {
        v23 = a8(v20, v13, a3, a4, a5, a6, a7);
        OUTLINED_FUNCTION_25_22();
        sub_1A5751898();
        swift_release();
        swift_release();
        v36[0] = v23;
        a12(v36);
        return OUTLINED_FUNCTION_33_17(v36, v25, v26, v27, v28, v29, v30, v31, a9);
      }
      swift_release();
      *(_QWORD *)v20 = v21;
      *(_QWORD *)(v20 + 8) = v22;
      *(_DWORD *)(v20 + 16) = v35;
      *(_WORD *)(v20 + 20) = v34;
      *(_BYTE *)(v20 + 22) = v33;
    }
    swift_willThrow();
    return (_QWORD *)swift_release();
  }
  return result;
}

void sub_1A572A820(uint64_t a1)
{
  void *v1;
  char *v2;
  _BYTE __src[184];
  _BYTE v4[368];
  _BYTE __dst[184];

  OUTLINED_FUNCTION_34_12(a1, __src);
  v1 = sub_1A56DDB8C(__src, __dst);
  OUTLINED_FUNCTION_34_12((uint64_t)v1, v4);
  v2 = (char *)sub_1A572A888 + 4 * byte_1A59B6E8C[sub_1A56EFCB0((uint64_t)v4)];
  __asm { BR              X10 }
}

uint64_t sub_1A572A888()
{
  uint64_t v1;

  sub_1A56EFCCC((uint64_t)&v1);
  OUTLINED_FUNCTION_9_20();
  return sub_1A594CEAC();
}

void sub_1A572AA34(void *a1)
{
  char *v1;
  _BYTE __dst[368];

  sub_1A56DDB8C(a1, __dst);
  v1 = (char *)sub_1A572AA8C + 4 * byte_1A59B6E92[sub_1A56EFCB0((uint64_t)__dst)];
  __asm { BR              X10 }
}

BOOL sub_1A572AA8C()
{
  void *v0;
  int v1;
  uint64_t v4;
  _BYTE v5[280];

  v1 = *(_DWORD *)sub_1A56EFCCC((uint64_t)&v4);
  sub_1A56DDB8C(v0, v5);
  return !OUTLINED_FUNCTION_20_25() && *(_DWORD *)sub_1A56EFCCC((uint64_t)v5) == v1;
}

uint64_t sub_1A572AC70()
{
  _BYTE v1[72];

  sub_1A594CE64();
  sub_1A572A820((uint64_t)v1);
  return sub_1A594CED0();
}

void sub_1A572ACAC(uint64_t *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  uint64_t v3;
  _BYTE __src[184];

  sub_1A572B370(a1, *a2, a2[1], __src);
  if (!v3)
    sub_1A56DDB8C(__src, a3);
}

_QWORD *sub_1A572ACF8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, _QWORD *(*a3)(_QWORD *__return_ptr, uint64_t, _QWORD, _QWORD)@<X2>, void *a4@<X8>)
{
  uint64_t v4;
  _QWORD *result;
  _QWORD __src[23];

  result = a3(__src, a1, *a2, a2[1]);
  if (!v4)
    return sub_1A56DDB8C(__src, a4);
  return result;
}

_QWORD *sub_1A572AD4C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, void *a3@<X8>)
{
  uint64_t v3;

  return sub_1A572ACF8(a1, a2, *(_QWORD *(**)(_QWORD *__return_ptr, uint64_t, _QWORD, _QWORD))(v3 + 16), a3);
}

_QWORD *sub_1A572AD64()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  OUTLINED_FUNCTION_4_52();
  return sub_1A572A678(v0, v1, v2, v3, v4, v5, v6, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A5733498, v7, 0x4354454644495520, 0xEB00000000282048, (void (*)(_DWORD *))sub_1A572B40C);
}

uint64_t sub_1A572ADB8()
{
  void *v0;
  _BYTE __dst[184];

  sub_1A56DDB8C(v0, __dst);
  return sub_1A572AC70();
}

void sub_1A572ADEC(uint64_t a1)
{
  _BYTE v2[184];

  OUTLINED_FUNCTION_34_12(a1, v2);
  sub_1A572A820(a1);
}

uint64_t sub_1A572AE24()
{
  void *v0;
  uint64_t v2;
  _BYTE __dst[184];

  sub_1A56DDB8C(v0, __dst);
  sub_1A594CE64();
  sub_1A572A820((uint64_t)&v2);
  return sub_1A594CED0();
}

uint64_t sub_1A572AE7C(void *a1, void *a2)
{
  char v3;
  _BYTE v5[184];
  _BYTE __dst[184];

  sub_1A56DDB8C(a1, v5);
  sub_1A56DDB8C(a2, __dst);
  sub_1A572AA34(v5);
  return v3 & 1;
}

void sub_1A572AEC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t inited;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  void *v31;
  _BYTE __dst[184];
  _BYTE __src[192];

  OUTLINED_FUNCTION_24_24();
  OUTLINED_FUNCTION_5_57();
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796208);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A59ABD20;
  v12 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_4_56(v12);
  v13 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v13 + 16) = sub_1A572B420;
  *(_QWORD *)(v13 + 24) = v10;
  *(_QWORD *)(inited + 32) = sub_1A572BD0C;
  *(_QWORD *)(inited + 40) = v13;
  v14 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_4_56(v14);
  v15 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v15 + 16) = sub_1A572B438;
  *(_QWORD *)(v15 + 24) = v10;
  *(_QWORD *)(inited + 48) = sub_1A572BD0C;
  *(_QWORD *)(inited + 56) = v15;
  v16 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_4_56(v16);
  v17 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v17 + 16) = sub_1A572B450;
  *(_QWORD *)(v17 + 24) = v10;
  *(_QWORD *)(inited + 64) = sub_1A572BD0C;
  *(_QWORD *)(inited + 72) = v17;
  *(_QWORD *)(inited + 80) = sub_1A572ACAC;
  *(_QWORD *)(inited + 88) = 0;
  swift_retain_n();
  v18 = OUTLINED_FUNCTION_18_30();
  sub_1A5770914(v18, v19, v20, v21, v22, v23, 308);
  swift_setDeallocating();
  OUTLINED_FUNCTION_22_30();
  if (!a10)
  {
    sub_1A56DDB8C(__src, __dst);
    OUTLINED_FUNCTION_33_17(__dst, v24, v25, v26, v27, v28, v29, v30, v31);
  }
  OUTLINED_FUNCTION_32_17();
}

void sub_1A572B038(void *a1@<X8>)
{
  uint64_t v1;
  _BYTE __dst[184];
  _BYTE v4[184];
  _BYTE __src[184];

  sub_1A572FE5C(__src);
  if (!v1)
  {
    sub_1A56DDB8C(__src, __dst);
    sub_1A56DDB8C(__dst, v4);
    sub_1A572B494((uint64_t)v4);
    sub_1A56DDB8C(v4, a1);
  }
}

void *sub_1A572B0A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  uint64_t v8;
  void *result;
  _QWORD __src[4];
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;

  result = (void *)sub_1A5729C7C();
  if (!v8)
  {
    v26 = v21;
    sub_1A5751974(a1, a2, a3);
    swift_retain();
    __src[0] = v21;
    __src[1] = v22;
    __src[2] = v23;
    __src[3] = v24;
    v19 = v25;
    v20 = sub_1A5757504(a1, a2, a3, a4, a5, a6, a7, a7);
    sub_1A572B514((uint64_t)__src);
    return sub_1A56DDB8C(__src, a8);
  }
  return result;
}

void *sub_1A572B1D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v4;
  void *result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unsigned int v13;
  unint64_t v14;
  char v15;
  char v16;
  __int16 v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *__dst;
  uint64_t v23;
  _QWORD __src[4];
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  result = (void *)sub_1A5729C7C();
  if (!v4)
  {
    __dst = a4;
    v23 = v27;
    v20 = v29;
    v21 = v28;
    v19 = v30;
    sub_1A5751974(a1, a2, a3);
    v15 = v31;
    v10 = *(_QWORD *)a1;
    v11 = *(_QWORD *)(a1 + 8);
    v17 = *(_WORD *)(a1 + 20);
    v18 = *(_DWORD *)(a1 + 16);
    v16 = *(_BYTE *)(a1 + 22);
    swift_retain();
    sub_1A5740D2C();
    v13 = v12;
    v14 = HIDWORD(v12);
    swift_release();
    result = (void *)swift_release();
    *(_QWORD *)a1 = v10;
    *(_QWORD *)(a1 + 8) = v11;
    *(_DWORD *)(a1 + 16) = v18;
    *(_WORD *)(a1 + 20) = v17;
    *(_BYTE *)(a1 + 22) = v16;
    if (v14 < v13)
    {
      __break(1u);
    }
    else
    {
      __src[0] = v23;
      __src[1] = v21;
      __src[2] = v20;
      __src[3] = v19;
      v25 = v15;
      v26 = v14 - v13;
      sub_1A572B4A8((uint64_t)__src);
      return sub_1A56DDB8C(__src, __dst);
    }
  }
  return result;
}

void sub_1A572B370(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v4;
  _WORD __src[92];

  sub_1A5751898();
  if (!v4)
  {
    sub_1A575DBEC(a1, a2, a3);
    sub_1A572B468(__src);
    sub_1A56DDB8C(__src, a4);
  }
}

uint64_t sub_1A572B40C(uint64_t result)
{
  *(_WORD *)(result + 176) = *(_WORD *)(result + 176) & 0xF1FF | 0x200;
  return result;
}

void *sub_1A572B420()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  OUTLINED_FUNCTION_4_52();
  return sub_1A572B0A4(v0, v1, v2, v3, v4, v5, v6, v7);
}

void *sub_1A572B438()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  OUTLINED_FUNCTION_4_52();
  return sub_1A572B1D4(v0, v1, v2, v3);
}

void sub_1A572B450()
{
  void *v0;

  OUTLINED_FUNCTION_4_52();
  sub_1A572B038(v0);
}

void sub_1A572B468(_WORD *a1)
{
  bzero(a1, 0xB0uLL);
  a1[88] = 2560;
}

uint64_t sub_1A572B494(uint64_t result)
{
  *(_WORD *)(result + 176) = *(_WORD *)(result + 176) & 0xF1FF | 0x400;
  return result;
}

uint64_t sub_1A572B4A8(uint64_t result)
{
  *(_WORD *)(result + 176) = *(_WORD *)(result + 176) & 0xF1FF | 0x800;
  return result;
}

void sub_1A572B4BC(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_19_29(a1);
}

_QWORD *sub_1A572B4C4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_1A5729E8C(a1, a2, *(_QWORD *(**)(_QWORD *__return_ptr, uint64_t, _QWORD, _QWORD))(v3 + 16), a3);
}

void sub_1A572B4DC(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_19_29(a1);
}

_QWORD *sub_1A572B4E4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4_52();
  return sub_1A5729EE0(v0);
}

uint64_t sub_1A572B4FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_4_52();
  return sub_1A5729F24(v0, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1A572B514(uint64_t result)
{
  *(_WORD *)(result + 176) = *(_WORD *)(result + 176) & 0xF1FF | 0x600;
  return result;
}

void sub_1A572B528()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_4_52();
  sub_1A572A228(v0, v1, v2, v3, v4, v5, v6, v7);
}

void sub_1A572B540()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A572A2C0(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_1A572B558@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A572A49C(*(uint64_t (**)(void))(v1 + 16), a1);
}

void sub_1A572B570()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A572A348(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_1A572B588()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  return sub_1A572A40C(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_1A572B5A0()
{
  OUTLINED_FUNCTION_4_52();
  return sub_1A5728A6C();
}

uint64_t sub_1A572B5B8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1A572B5E4(a1, a2, a3);
}

void sub_1A572B5CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A572909C(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_1A572B5E4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v3 + 16))(a1, *a2, a2[1]);
  if (!v4)
    *a3 = result;
  return result;
}

void sub_1A572B618()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4_52();
  sub_1A5729240(v0);
}

void sub_1A572B630()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A5729398();
}

_QWORD *sub_1A572B648@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_1A5729A3C(a1, a2, *(_QWORD *(**)(_QWORD *__return_ptr, uint64_t, _QWORD, _QWORD))(v3 + 16), a3);
}

uint64_t sub_1A572B660()
{
  OUTLINED_FUNCTION_4_52();
  return sub_1A5729484();
}

uint64_t sub_1A572B678()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_4_52();
  return sub_1A5729744(v0, v1, v2, v3, v4, v5, v6, v7);
}

void sub_1A572B690()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A572968C(v0, v1, v2, v3, v4, v5, v6, (uint64_t (*)(uint64_t))sub_1A575ED78, 0);
  OUTLINED_FUNCTION_9();
}

void sub_1A572B6B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A572968C(v0, v1, v2, v3, v4, v5, v6, (uint64_t (*)(uint64_t))sub_1A575ED78, 1);
  OUTLINED_FUNCTION_9();
}

uint64_t sub_1A572B6E4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t _s14_FetchResponseOwxx(uint64_t a1)
{
  return sub_1A572B774(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
           *(_QWORD *)(a1 + 152),
           *(_QWORD *)(a1 + 160),
           *(_QWORD *)(a1 + 168),
           *(_WORD *)(a1 + 176),
           (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A5683900,
           (uint64_t (*)(void))sub_1A5683854);
}

uint64_t sub_1A572B774(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int16 a23,uint64_t (*a24)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t),uint64_t (*a25)(void))
{
  int v25;

  v25 = (a23 >> 9) & 7;
  if (v25 == 4 || v25 == 3)
    return a25();
  if (v25 == 2)
    return a24(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
  return result;
}

uint64_t _s14_FetchResponseOwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int16 v26;

  v3 = *(_QWORD *)(a2 + 48);
  v4 = *(_QWORD *)(a2 + 56);
  v13 = *(_QWORD *)(a2 + 72);
  v14 = *(_QWORD *)(a2 + 80);
  v15 = *(_QWORD *)(a2 + 88);
  v16 = *(_QWORD *)(a2 + 96);
  v17 = *(_QWORD *)(a2 + 104);
  v18 = *(_QWORD *)(a2 + 112);
  v19 = *(_QWORD *)(a2 + 120);
  v20 = *(_QWORD *)(a2 + 128);
  v21 = *(_QWORD *)(a2 + 136);
  v22 = *(_QWORD *)(a2 + 144);
  v23 = *(_QWORD *)(a2 + 152);
  v24 = *(_QWORD *)(a2 + 160);
  v25 = *(_QWORD *)(a2 + 168);
  v26 = *(_WORD *)(a2 + 176);
  v5 = *(_QWORD *)(a2 + 64);
  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  v11 = *(_QWORD *)(a2 + 40);
  sub_1A572B774(*(_QWORD *)a2, v7, v8, v9, v10, v11, v3, v4, v5, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22,
    v23,
    v24,
    v25,
    v26,
    (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A56DDC24,
    (uint64_t (*)(void))sub_1A56DDDA4);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v9;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v11;
  *(_QWORD *)(a1 + 48) = v3;
  *(_QWORD *)(a1 + 56) = v4;
  *(_QWORD *)(a1 + 64) = v5;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v14;
  *(_QWORD *)(a1 + 88) = v15;
  *(_QWORD *)(a1 + 96) = v16;
  *(_QWORD *)(a1 + 104) = v17;
  *(_QWORD *)(a1 + 112) = v18;
  *(_QWORD *)(a1 + 120) = v19;
  *(_QWORD *)(a1 + 128) = v20;
  *(_QWORD *)(a1 + 136) = v21;
  *(_QWORD *)(a1 + 144) = v22;
  *(_QWORD *)(a1 + 152) = v23;
  *(_QWORD *)(a1 + 160) = v24;
  *(_QWORD *)(a1 + 168) = v25;
  *(_WORD *)(a1 + 176) = v26;
  return a1;
}

uint64_t _s14_FetchResponseOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int16 v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int16 v43;

  v3 = *(_QWORD *)(a2 + 48);
  v4 = *(_QWORD *)(a2 + 56);
  v30 = *(_QWORD *)(a2 + 72);
  v31 = *(_QWORD *)(a2 + 80);
  v32 = *(_QWORD *)(a2 + 88);
  v33 = *(_QWORD *)(a2 + 96);
  v34 = *(_QWORD *)(a2 + 104);
  v35 = *(_QWORD *)(a2 + 112);
  v36 = *(_QWORD *)(a2 + 120);
  v37 = *(_QWORD *)(a2 + 128);
  v38 = *(_QWORD *)(a2 + 136);
  v39 = *(_QWORD *)(a2 + 144);
  v40 = *(_QWORD *)(a2 + 152);
  v41 = *(_QWORD *)(a2 + 160);
  v42 = *(_QWORD *)(a2 + 168);
  v43 = *(_WORD *)(a2 + 176);
  v5 = *(_QWORD *)(a2 + 64);
  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  v11 = *(_QWORD *)(a2 + 40);
  sub_1A572B774(*(_QWORD *)a2, v7, v8, v9, v10, v11, v3, v4, v5, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39,
    v40,
    v41,
    v42,
    v43,
    (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A56DDC24,
    (uint64_t (*)(void))sub_1A56DDDA4);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v9;
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v11;
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v3;
  *(_QWORD *)(a1 + 56) = v4;
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 64) = v5;
  *(_QWORD *)(a1 + 72) = v30;
  *(_QWORD *)(a1 + 80) = v31;
  *(_QWORD *)(a1 + 88) = v32;
  v22 = *(_OWORD *)(a1 + 96);
  v23 = *(_OWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 96) = v33;
  *(_QWORD *)(a1 + 104) = v34;
  *(_QWORD *)(a1 + 112) = v35;
  *(_QWORD *)(a1 + 120) = v36;
  v24 = *(_OWORD *)(a1 + 128);
  v25 = *(_OWORD *)(a1 + 144);
  *(_QWORD *)(a1 + 128) = v37;
  *(_QWORD *)(a1 + 136) = v38;
  *(_QWORD *)(a1 + 144) = v39;
  *(_QWORD *)(a1 + 152) = v40;
  v26 = *(_QWORD *)(a1 + 160);
  v27 = *(_QWORD *)(a1 + 168);
  *(_QWORD *)(a1 + 160) = v41;
  *(_QWORD *)(a1 + 168) = v42;
  v28 = *(_WORD *)(a1 + 176);
  *(_WORD *)(a1 + 176) = v43;
  sub_1A572B774(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    *((uint64_t *)&v25 + 1),
    v26,
    v27,
    v28,
    (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A5683900,
    (uint64_t (*)(void))sub_1A5683854);
  return a1;
}

uint64_t _s14_FetchResponseOwta(uint64_t a1, uint64_t a2)
{
  __int16 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int16 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;

  v3 = *(_WORD *)(a2 + 176);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_OWORD *)(a1 + 64);
  v13 = *(_OWORD *)(a1 + 80);
  v14 = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 112);
  v16 = *(_OWORD *)(a1 + 128);
  v17 = *(_OWORD *)(a1 + 144);
  v18 = *(_QWORD *)(a1 + 160);
  v19 = *(_QWORD *)(a1 + 168);
  v20 = *(_WORD *)(a1 + 176);
  v21 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v21;
  v22 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v22;
  v23 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v23;
  v24 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v24;
  v25 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v25;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_WORD *)(a1 + 176) = v3;
  sub_1A572B774(v4, v6, v5, v7, v8, v9, v10, v11, v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17,
    *((uint64_t *)&v17 + 1),
    v18,
    v19,
    v20,
    (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A5683900,
    (uint64_t (*)(void))sub_1A5683854);
  return a1;
}

ValueMetadata *_s14_FetchResponseOMa()
{
  return &_s14_FetchResponseON;
}

unint64_t sub_1A572BBF4()
{
  unint64_t result;

  result = qword_1EE7A9E08;
  if (!qword_1EE7A9E08)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59B6EB4, &_s14_FetchResponseON);
    atomic_store(result, (unint64_t *)&qword_1EE7A9E08);
  }
  return result;
}

uint64_t sub_1A572BC30(uint64_t a1)
{
  sub_1A56DDC24(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_WORD *)(a1 + 176));
  return a1;
}

uint64_t sub_1A572BC98(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t (*a3)(void))
{
  sub_1A572B774(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_WORD *)(a1 + 176),
    a2,
    a3);
  return a1;
}

_QWORD *sub_1A572BD0C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, void *a3@<X8>)
{
  return sub_1A572AD4C(a1, a2, a3);
}

_QWORD *sub_1A572BD20@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A572B4C4(a1, a2, a3);
}

_QWORD *sub_1A572BD34@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A572B648(a1, a2, a3);
}

uint64_t sub_1A572BDC0@<X0>(uint64_t a1@<X8>)
{
  return sub_1A572B558(a1);
}

_QWORD *OUTLINED_FUNCTION_4_56(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  result[2] = v1;
  result[3] = v2;
  result[4] = v4;
  result[5] = v3;
  return result;
}

void OUTLINED_FUNCTION_5_57()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = v0;
}

void OUTLINED_FUNCTION_6_50()
{
  sub_1A5751898();
}

_QWORD *OUTLINED_FUNCTION_7_40(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  result[2] = v4;
  result[3] = v3;
  result[4] = v2;
  result[5] = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_10_41()
{
  uint64_t v0;

  return v0;
}

_QWORD *OUTLINED_FUNCTION_12_37(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  result[2] = v4;
  result[3] = v3;
  result[4] = v2;
  result[5] = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_17_34()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_18_30()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_19_29(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_BYTE *)(a1 + 32) = 0x80;
}

uint64_t OUTLINED_FUNCTION_20_25()
{
  return sub_1A56EFCB0((uint64_t)&STACK[0x238]);
}

uint64_t OUTLINED_FUNCTION_22_30()
{
  return sub_1A5774244();
}

uint64_t OUTLINED_FUNCTION_29_19(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return sub_1A55DC738(a12, a9);
}

uint64_t OUTLINED_FUNCTION_31_18(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t (*v2)(void);

  return sub_1A572BC98(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_32_19(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t (*v2)(void);

  return sub_1A572BC98(a1, v1, v2);
}

void *OUTLINED_FUNCTION_33_17(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__dst)
{
  return sub_1A56DDB8C(a1, __dst);
}

uint64_t OUTLINED_FUNCTION_34_20()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_35_16()
{
  return swift_retain();
}

void sub_1A572BFEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _BYTE v7[16];
  void (*v8)();
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v11 = a4;
  v12 = a5;
  v13 = a6;
  v14 = a7;
  v8 = sub_1A572C9A8;
  v9 = &v10;
  sub_1A576F59C((uint64_t)sub_1A572CAE8, (uint64_t)v7, (uint64_t)sub_1A572CAA4, 0);
}

void sub_1A572C084(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _OWORD *a8@<X8>)
{
  void *v8;
  uint64_t v13;
  uint64_t v14;
  int v15;
  __int16 v16;
  char v17;
  void *v18;
  _QWORD *v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;

  v69 = a4;
  v70 = a5;
  v71 = a6;
  v72 = a7;
  v65 = (uint64_t)sub_1A572CBB0;
  v66 = &v67;
  if (!__OFADD__(a2, 1))
  {
    if (a2 + 1 >= a3)
    {
      sub_1A5718F9C();
      v18 = (void *)OUTLINED_FUNCTION_21();
      *v19 = a3;
    }
    else
    {
      v13 = *a1;
      v14 = a1[1];
      v15 = *((_DWORD *)a1 + 4);
      v16 = *((_WORD *)a1 + 10);
      v17 = *((_BYTE *)a1 + 22);
      swift_retain();
      sub_1A5751898();
      v18 = v8;
      if (!v8)
      {
        swift_release();
        v61 = xmmword_1A59AC270;
        v59 = 0uLL;
        v60 = 0uLL;
        v62 = 0uLL;
LABEL_13:
        *a8 = v59;
        a8[1] = v60;
        a8[2] = v61;
        a8[3] = v62;
        return;
      }
      swift_release();
      *a1 = v13;
      a1[1] = v14;
      *((_DWORD *)a1 + 4) = v15;
      *((_WORD *)a1 + 10) = v16;
      *((_BYTE *)a1 + 22) = v17;
    }
    v20 = swift_willThrow();
    OUTLINED_FUNCTION_8_46(v20, v21, v22, v23, v24, v25, v26, v27, v63, v64, v65, (uint64_t)v66, v67, v68, v69, v70, v71, v72, v73,
      v74,
      v75,
      v76,
      v77,
      v78,
      v79,
      (uint64_t)v80);
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
    if (OUTLINED_FUNCTION_2_73())
    {

    }
    else
    {
      OUTLINED_FUNCTION_3_60(0, v28, v29, v30, v31, v32, v33, v34, v63, v64, v65, (uint64_t)v66, v67, v68, v69, v70, v71, v72, v73,
        v74,
        v75,
        v76,
        v77,
        v78,
        v79,
        v80);
      OUTLINED_FUNCTION_8_46(v35, v36, v37, v38, v39, v40, v41, v42, v63, v64, v65, (uint64_t)v66, v67, v68, v69, v70, v71, v72, v73,
        v74,
        v75,
        v76,
        v77,
        v78,
        v79,
        (uint64_t)v80);
      v43 = OUTLINED_FUNCTION_2_73();
      if ((v43 & 1) == 0)
      {
        OUTLINED_FUNCTION_3_60(v43, v44, v45, v46, v47, v48, v49, v50, v63, v64, v65, (uint64_t)v66, v67, v68, v69, v70, v71, v72, v73,
          v74,
          v75,
          v76,
          v77,
          v78,
          v79,
          v80);
        return;
      }

      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v51 = swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_3_60(v51, v52, v53, v54, v55, v56, v57, v58, v63, v64, v65, (uint64_t)v66, v67, v68, v69, v70, v71, v72, v73,
      v74,
      v75,
      v76,
      v77,
      v78,
      v79,
      v80);
    sub_1A5751B10(a1, a2, a3, sub_1A572CB98, &v63);
    v59 = v81;
    v60 = v82;
    v61 = v83;
    v62 = v84;
    goto LABEL_13;
  }
  __break(1u);
}

_OWORD *sub_1A572C284@<X0>(_QWORD *(*a1)(__int128 *__return_ptr)@<X3>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  _OWORD *result;
  __int128 v5[4];

  result = a1(v5);
  if (!v2)
    return sub_1A56D0898(v5, a2);
  return result;
}

double sub_1A572C2CC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _OWORD *a8@<X8>)
{
  uint64_t inited;
  _QWORD *v16;
  uint64_t v17;
  double result;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;

  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9E10);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A59ABD70;
  *(_QWORD *)(inited + 32) = sub_1A572C560;
  *(_QWORD *)(inited + 40) = 0;
  *(_QWORD *)(inited + 48) = sub_1A572C590;
  *(_QWORD *)(inited + 56) = 0;
  *(_QWORD *)(inited + 64) = sub_1A572C600;
  *(_QWORD *)(inited + 72) = 0;
  *(_QWORD *)(inited + 80) = sub_1A572C638;
  *(_QWORD *)(inited + 88) = 0;
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a4;
  v16[3] = a5;
  v16[4] = a6;
  v16[5] = a7;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = sub_1A572CB40;
  *(_QWORD *)(v17 + 24) = v16;
  *(_QWORD *)(inited + 96) = sub_1A572CB80;
  *(_QWORD *)(inited + 104) = v17;
  swift_retain();
  sub_1A5770930(inited, a1, a2, a3, 0xD000000000000020, 0x80000001A5A0F5E0, 100);
  swift_setDeallocating();
  sub_1A5774244();
  if (!v24)
  {
    result = *(double *)&v20;
    *a8 = v20;
    a8[1] = v21;
    a8[2] = v22;
    a8[3] = v23;
  }
  return result;
}

double sub_1A572C44C@<D0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;

  sub_1A5751898();
  if (!v2)
  {
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_QWORD *)(a2 + 32) = a1;
    *(_QWORD *)(a2 + 40) = 0;
    *(_QWORD *)(a2 + 48) = 0;
    *(_QWORD *)(a2 + 56) = 0;
  }
  return result;
}

double sub_1A572C4A4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  return sub_1A572C4B8(a1, a2, a3, a4, a5, a6, a7, a8);
}

double sub_1A572C4B8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  double result;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  _OWORD v22[2];
  unsigned __int8 v23;
  __int128 v24;
  uint64_t v25;

  swift_retain();
  sub_1A5758494(v22, a1, a2, a3, a4, a5, a6, a7);
  if (!v8)
  {
    v18 = v23;
    v19 = v25;
    result = *(double *)v22;
    v20 = v22[1];
    v21 = v24;
    *(_OWORD *)a8 = v22[0];
    *(_OWORD *)(a8 + 16) = v20;
    *(_QWORD *)(a8 + 32) = v18;
    *(_OWORD *)(a8 + 40) = v21;
    *(_QWORD *)(a8 + 56) = v19;
  }
  return result;
}

void sub_1A572C560(uint64_t a1, uint64_t a2)
{
  sub_1A572C5B8(a1, a2, 0x4249524353425553, 0xEA00000000004445, 255);
}

void sub_1A572C590(uint64_t a1, uint64_t a2)
{
  sub_1A572C5B8(a1, a2, 0x45544F4D4552, 0xE600000000000000, 254);
}

void sub_1A572C5B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14[4];

  sub_1A572C44C(a5, (uint64_t)v14);
  if (!v5)
    OUTLINED_FUNCTION_6_51(v6, v7, v8, v9, v10, v11, v12, v13, v14[0]);
  OUTLINED_FUNCTION_29_11();
}

void sub_1A572C600(uint64_t a1, uint64_t a2)
{
  sub_1A572C5B8(a1, a2, 0x5649535255434552, 0xEE00484354414D45, 252);
}

void sub_1A572C638(uint64_t a1, uint64_t a2)
{
  sub_1A572C5B8(a1, a2, 0x2D4C414943455053, 0xEB00000000455355, 253);
}

void sub_1A572C66C(uint64_t a1, _QWORD *a2, _QWORD *(*a3)(__int128 *__return_ptr, uint64_t, _QWORD, _QWORD))
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12[4];

  v4 = a3(v12, a1, *a2, a2[1]);
  if (!v3)
    OUTLINED_FUNCTION_6_51((uint64_t)v4, v5, v6, v7, v8, v9, v10, v11, v12[0]);
  OUTLINED_FUNCTION_29_11();
}

void sub_1A572C6B0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  OUTLINED_FUNCTION_4_57();
  OUTLINED_FUNCTION_1_88();
  sub_1A5751898();
  if (!v1)
  {
    swift_retain();
    OUTLINED_FUNCTION_10_41();
    v33 = sub_1A5760EC8();
    v2 = (uint64_t *)OUTLINED_FUNCTION_10_41();
    sub_1A572C084(v2, v3, v4, v5, v6, v7, v8, v9);
    v24 = v26;
    v22 = v28;
    v23 = v27;
    v20 = v30;
    v21 = v29;
    v18 = v32;
    v19 = v31;
    MEMORY[0x1E0C80A78](v10);
    v11 = OUTLINED_FUNCTION_7_41();
    sub_1A5751BDC(v11, v12, v13, v14, v15, v16);
    OUTLINED_FUNCTION_1_88();
    sub_1A5751898();
    v17 = v33;
    *v0 = v25;
    v0[1] = v24;
    v0[2] = v23;
    v0[3] = v22;
    v0[4] = v21;
    v0[5] = v20;
    v0[6] = v19;
    v0[7] = v18;
    v0[8] = v17;
  }
}

void sub_1A572C85C()
{
  _OWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12[4];

  OUTLINED_FUNCTION_4_57();
  sub_1A572C2CC(v2, v3, v4, v5, v6, v7, v8, v12);
  if (!v1)
  {
    v9 = OUTLINED_FUNCTION_7_41();
    sub_1A5751974(v9, v10, v11);
    sub_1A56D0898(v12, v0);
  }
}

void sub_1A572C8D4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _OWORD *a8@<X8>)
{
  uint64_t v8;
  __int128 v14[4];

  sub_1A5751974(a1, a2, a3);
  if (!v8)
  {
    sub_1A5740DE8(a4, a5, a6, a7, v14);
    sub_1A56D0898(v14, a8);
  }
}

void sub_1A572C980()
{
  sub_1A5740104();
}

void sub_1A572C9A8()
{
  sub_1A572C980();
}

uint64_t sub_1A572C9C4(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  __int16 v14;
  char v15;
  _QWORD *v16;
  _QWORD v17[13];

  v7 = __OFADD__(a2, 1);
  v8 = a2 + 1;
  if (v7)
  {
    __break(1u);
  }
  else
  {
    v17[3] = v6;
    v17[11] = v4;
    v17[12] = v5;
    if (v8 >= a3)
    {
      sub_1A5718F9C();
      OUTLINED_FUNCTION_21();
      *v16 = a3;
      return swift_willThrow();
    }
    v10 = result;
    v11 = *(_QWORD *)result;
    v12 = *(_QWORD *)(result + 8);
    v13 = *(_DWORD *)(result + 16);
    v14 = *(_WORD *)(result + 20);
    v15 = *(_BYTE *)(result + 22);
    sub_1A5762B58(v17);
    if (v3)
    {
      *(_QWORD *)v10 = v11;
      *(_QWORD *)(v10 + 8) = v12;
      *(_DWORD *)(v10 + 16) = v13;
      *(_WORD *)(v10 + 20) = v14;
      *(_BYTE *)(v10 + 22) = v15;
      return swift_willThrow();
    }
    return v17[0];
  }
  return result;
}

uint64_t sub_1A572CAA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = sub_1A572C9C4(a1, a2, a3);
  if (!v4)
  {
    *(_QWORD *)a4 = result;
    *(_QWORD *)(a4 + 8) = v7;
    *(_DWORD *)(a4 + 16) = v8;
    *(_WORD *)(a4 + 20) = WORD2(v8);
    *(_BYTE *)(a4 + 22) = BYTE6(v8);
  }
  return result;
}

void sub_1A572CAE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1A5740FC8(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

void sub_1A572CB00()
{
  sub_1A572C85C();
}

uint64_t sub_1A572CB1C()
{
  swift_release();
  return swift_deallocObject();
}

double sub_1A572CB40@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v4;

  return sub_1A572C4B8(a1, a2, a3, v4[2], v4[3], v4[4], v4[5], a4);
}

uint64_t sub_1A572CB5C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1A572CB80(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  sub_1A572C66C(a1, a2, *(_QWORD *(**)(__int128 *__return_ptr, uint64_t, _QWORD, _QWORD))(v2 + 16));
}

_OWORD *sub_1A572CB98@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1A572C284(*(_QWORD *(**)(__int128 *__return_ptr))(v1 + 16), a1);
}

double sub_1A572CBB0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1A572CB40(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_2_73()
{
  return swift_dynamicCast();
}

void OUTLINED_FUNCTION_3_60(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id a26)
{

}

_OWORD *OUTLINED_FUNCTION_6_51(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9)
{
  _OWORD *v9;

  return sub_1A56D0898(&a9, v9);
}

uint64_t OUTLINED_FUNCTION_7_41()
{
  uint64_t v0;

  return v0;
}

id OUTLINED_FUNCTION_8_46(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  void *v26;

  return v26;
}

void sub_1A572CC3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _BYTE v7[16];
  uint64_t (*v8)();
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[16];
  void (*v16)();
  char *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v19 = a4;
  v20 = a5;
  v21 = a6;
  v22 = a7;
  v16 = sub_1A572FB2C;
  v17 = &v18;
  v11 = a4;
  v12 = a5;
  v13 = a6;
  v14 = a7;
  v8 = sub_1A572FB5C;
  v9 = &v10;
  sub_1A576F6DC((uint64_t)sub_1A572FB44, (uint64_t)v15, (uint64_t)sub_1A572FCFC, (uint64_t)v7);
}

double sub_1A572CCF4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t inited;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  double result;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  uint64_t v39;

  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79ADC0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A59AC280;
  v9 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_2_74(v9);
  v10 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v10 + 16) = sub_1A572D15C;
  *(_QWORD *)(v10 + 24) = v4;
  *(_QWORD *)(inited + 32) = sub_1A572DAC8;
  *(_QWORD *)(inited + 40) = v10;
  v11 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_2_74(v11);
  v12 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v12 + 16) = sub_1A572DAE0;
  *(_QWORD *)(v12 + 24) = v4;
  *(_QWORD *)(inited + 48) = sub_1A572FC68;
  *(_QWORD *)(inited + 56) = v12;
  v13 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_2_74(v13);
  v14 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v14 + 16) = sub_1A572DB10;
  *(_QWORD *)(v14 + 24) = v4;
  *(_QWORD *)(inited + 64) = sub_1A572FC68;
  *(_QWORD *)(inited + 72) = v14;
  v15 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_2_74(v15);
  v16 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v16 + 16) = sub_1A572DB40;
  *(_QWORD *)(v16 + 24) = v4;
  *(_QWORD *)(inited + 80) = sub_1A572FC68;
  *(_QWORD *)(inited + 88) = v16;
  v17 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_2_74(v17);
  v18 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v18 + 16) = sub_1A572DB58;
  *(_QWORD *)(v18 + 24) = v4;
  *(_QWORD *)(inited + 96) = sub_1A572FC68;
  *(_QWORD *)(inited + 104) = v18;
  v19 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_2_74(v19);
  v20 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v20 + 16) = sub_1A572DB70;
  *(_QWORD *)(v20 + 24) = v4;
  *(_QWORD *)(inited + 112) = sub_1A572FC68;
  *(_QWORD *)(inited + 120) = v20;
  v21 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_2_74(v21);
  v22 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v22 + 16) = sub_1A572DBA4;
  *(_QWORD *)(v22 + 24) = v4;
  *(_QWORD *)(inited + 128) = sub_1A572FC68;
  *(_QWORD *)(inited + 136) = v22;
  v23 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_2_74(v23);
  v24 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v24 + 16) = sub_1A572DBD8;
  *(_QWORD *)(v24 + 24) = v4;
  *(_QWORD *)(inited + 144) = sub_1A572FC68;
  *(_QWORD *)(inited + 152) = v24;
  v25 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_2_74(v25);
  v26 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v26 + 16) = sub_1A572DBF0;
  *(_QWORD *)(v26 + 24) = v4;
  *(_QWORD *)(inited + 160) = sub_1A572FC68;
  *(_QWORD *)(inited + 168) = v26;
  v27 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_2_74(v27);
  v28 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v28 + 16) = sub_1A572DC08;
  *(_QWORD *)(v28 + 24) = v4;
  *(_QWORD *)(inited + 176) = sub_1A572FC68;
  *(_QWORD *)(inited + 184) = v28;
  swift_retain_n();
  sub_1A5770AF0(inited, a1, a2, a3, 0xD000000000000020, 0x80000001A5A0F5E0, 108);
  swift_setDeallocating();
  sub_1A5774244();
  if (!v39)
  {
    result = *(double *)&v31;
    *(_OWORD *)a4 = v31;
    *(_OWORD *)(a4 + 16) = v32;
    *(_OWORD *)(a4 + 32) = v33;
    *(_OWORD *)(a4 + 48) = v34;
    *(_OWORD *)(a4 + 64) = v35;
    *(_OWORD *)(a4 + 80) = v36;
    *(_QWORD *)(a4 + 96) = v37;
    *(_BYTE *)(a4 + 104) = v38;
  }
  return result;
}

double sub_1A572D06C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  double result;

  sub_1A5751898();
  if (!v8)
  {
    swift_retain();
    *(_QWORD *)a8 = sub_1A5753A04(a1, a2, a3, a4, a5, a6, a7);
    result = 0.0;
    *(_OWORD *)(a8 + 8) = 0u;
    *(_OWORD *)(a8 + 24) = 0u;
    *(_OWORD *)(a8 + 40) = 0u;
    *(_OWORD *)(a8 + 56) = 0u;
    *(_OWORD *)(a8 + 72) = 0u;
    *(_OWORD *)(a8 + 88) = 0u;
    *(_BYTE *)(a8 + 104) = 0;
  }
  return result;
}

uint64_t sub_1A572D138()
{
  swift_release();
  return swift_deallocObject();
}

double sub_1A572D15C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_4_52();
  return sub_1A572D06C(v0, v1, v2, v3, v4, v5, v6, v7);
}

double sub_1A572D174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v9;
  uint64_t v10;
  double result;
  uint64_t v12;
  __int128 v13;
  unsigned int v14;
  unsigned __int8 v15;
  uint64_t v16;
  __int128 v17;

  OUTLINED_FUNCTION_30_18();
  OUTLINED_FUNCTION_9_45();
  if (!v10)
  {
    swift_retain();
    v12 = OUTLINED_FUNCTION_35_15();
    sub_1A5758530(v12);
    *(_OWORD *)v9 = v13;
    *(_QWORD *)(v9 + 16) = v14 | ((unint64_t)v15 << 32);
    *(_QWORD *)(v9 + 24) = v16;
    result = 0.0;
    *(_OWORD *)(v9 + 32) = v17;
    *(_OWORD *)(v9 + 48) = 0u;
    *(_OWORD *)(v9 + 64) = 0u;
    *(_OWORD *)(v9 + 80) = 0u;
    *(_QWORD *)(v9 + 96) = 0;
    *(_BYTE *)(v9 + 104) = a9;
  }
  return result;
}

double sub_1A572D210@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  double result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  _OWORD v22[2];
  unsigned __int8 v23;
  char v24;
  uint64_t v25;

  swift_retain();
  sub_1A57585CC(v22, a1, a2, a3, a4, a5, a6, a7);
  if (!v8)
  {
    v18 = v23;
    v19 = v25;
    v20 = 256;
    if (!v24)
      v20 = 0;
    v21 = v22[1];
    *(_OWORD *)a8 = v22[0];
    *(_OWORD *)(a8 + 16) = v21;
    *(_QWORD *)(a8 + 32) = v20 | v18;
    *(_QWORD *)(a8 + 40) = v19;
    result = 0.0;
    *(_OWORD *)(a8 + 48) = 0u;
    *(_OWORD *)(a8 + 64) = 0u;
    *(_OWORD *)(a8 + 80) = 0u;
    *(_QWORD *)(a8 + 96) = 0;
    *(_BYTE *)(a8 + 104) = 64;
  }
  return result;
}

double sub_1A572D2D8()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  OUTLINED_FUNCTION_30_18();
  OUTLINED_FUNCTION_9_45();
  if (!v1)
  {
    swift_retain();
    OUTLINED_FUNCTION_35_15();
    *(_QWORD *)v0 = sub_1A5760EE4();
    *(_OWORD *)(v0 + 8) = xmmword_1A59ABD60;
    result = 0.0;
    *(_OWORD *)(v0 + 24) = 0u;
    *(_OWORD *)(v0 + 40) = 0u;
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
    *(_OWORD *)(v0 + 88) = 0u;
    *(_BYTE *)(v0 + 104) = 48;
  }
  return result;
}

void sub_1A572D368(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v8;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t *v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;

  sub_1A5751898();
  if (!v8)
  {
    sub_1A5751974(a1, a2, a3);
    v24 = a8;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B2D0);
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1A59ABD10;
    v18 = sub_1A5761038(a1, a2, a3, 0);
    if ((v18 & 0x8000000000000000) != 0)
    {
      sub_1A56E9774();
      swift_allocError();
      *v19 = 0xD000000000000011;
      v19[1] = 0x80000001A5A0F840;
      v19[2] = 0xD000000000000020;
      v19[3] = 0x80000001A5A0F5E0;
      v19[4] = 167;
      swift_willThrow();
      *(_QWORD *)(v17 + 16) = 0;
      swift_release();
    }
    else
    {
      v23 = (uint64_t)&v23;
      *(_QWORD *)(v17 + 32) = v18;
      v25 = v17;
      MEMORY[0x1E0C80A78](v18);
      v22[2] = a4;
      v22[3] = a5;
      v22[4] = a6;
      v22[5] = a7;
      sub_1A5751ECC(a1, a2, a3, (uint64_t)sub_1A572F9B4, (uint64_t)v22, (uint64_t)&v25);
      sub_1A5751974(a1, a2, a3);
      swift_retain();
      v20 = sub_1A5757B60(a1, a2, a3, a4, a5, a6, a7);
      v21 = v24;
      *v24 = v25;
      v21[1] = v20;
      *((_OWORD *)v21 + 1) = 0u;
      *((_OWORD *)v21 + 2) = 0u;
      *((_OWORD *)v21 + 3) = 0u;
      *((_OWORD *)v21 + 4) = 0u;
      *((_OWORD *)v21 + 5) = 0u;
      v21[12] = 0;
      *((_BYTE *)v21 + 104) = -112;
    }
  }
}

void sub_1A572D5E4(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X8>)
{
  uint64_t v4;
  unint64_t v9;
  _QWORD *v10;

  sub_1A5751974(a1, a2, a3);
  if (!v4)
  {
    v9 = sub_1A5761038(a1, a2, a3, 0);
    if ((v9 & 0x8000000000000000) != 0)
    {
      sub_1A56E9774();
      swift_allocError();
      *v10 = 0xD000000000000011;
      v10[1] = 0x80000001A5A0F840;
      v10[2] = 0xD000000000000020;
      v10[3] = 0x80000001A5A0F5E0;
      v10[4] = 167;
      swift_willThrow();
    }
    else
    {
      *a4 = v9;
    }
  }
}

void sub_1A572D6BC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _BYTE v41[5];
  __int16 v42;
  __int16 v43;
  int v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char v48;
  int v49;
  char v50;
  int v51;
  char v52;
  uint64_t v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  unsigned __int8 v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  char v71;
  char v72;
  uint64_t v73;

  sub_1A5751898();
  if (!v4)
  {
    v73 = a4;
    v9 = OUTLINED_FUNCTION_6_52();
    v16 = sub_1A573EE0C(v9, v10, v11, v12, v13, v14, v15);
    v19 = MailboxName.init(_:)(v16, v18, v17 & 0xFFFFFFFFFFFFFFLL);
    sub_1A5751974(a1, a2, a3);
    OUTLINED_FUNCTION_5_58();
    OUTLINED_FUNCTION_19_30();
    v20 = OUTLINED_FUNCTION_6_52();
    sub_1A575F204(v20, v21, v22, v23, v24, v25, v26, v27, v40, *(int *)v41, v41[4], v42, v43, v44, v45, v46, v47, v48, v49,
      v50,
      v51,
      v52,
      v19,
      v54,
      v56,
      v58,
      v60,
      v62);
    swift_release();
    v28 = v68;
    v29 = v70;
    OUTLINED_FUNCTION_5_58();
    v30 = v66;
    v32 = v61;
    v31 = v57;
    if ((v72 & 1) != 0)
    {
      v31 = 0;
      v32 = 0;
      v30 = 0;
      v28 = 0;
      v29 = 0;
      v33 = 1;
      v34 = 1;
      v35 = 1;
      v36 = 1;
      v37 = 1;
      v38 = 1;
      v39 = 1;
    }
    else
    {
      v33 = v59 & 1;
      v34 = v65 & 1;
      v35 = v67 & 1;
      v36 = v69 & 1;
      v37 = v71 & 1;
      v38 = v63 & 0xFFFFFFFF00000001;
      v39 = v64 & 0xFFFFFFFF00000001;
    }
    *(_QWORD *)v73 = v53;
    *(_QWORD *)(v73 + 8) = v55;
    *(_QWORD *)(v73 + 16) = v31;
    *(_QWORD *)(v73 + 24) = v33;
    *(_QWORD *)(v73 + 32) = v32;
    *(_QWORD *)(v73 + 40) = v38;
    *(_QWORD *)(v73 + 48) = v39;
    *(_QWORD *)(v73 + 56) = v34;
    *(_QWORD *)(v73 + 64) = v30;
    *(_QWORD *)(v73 + 72) = v35;
    *(_QWORD *)(v73 + 80) = v28;
    *(_QWORD *)(v73 + 88) = v36;
    *(_QWORD *)(v73 + 96) = v29;
    *(_BYTE *)(v73 + 104) = v37 | 0x50;
  }
}

void sub_1A572D8CC(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, char a5)
{
  uint64_t v5;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v7 = sub_1A5761038(a1, a2, a3, 1);
  if (!v5)
  {
    v8 = v7;
    if ((v7 & 0x8000000000000000) != 0)
    {
      sub_1A56E9774();
      OUTLINED_FUNCTION_21();
      *v9 = 0xD000000000000011;
      v9[1] = 0x80000001A5A0F840;
      OUTLINED_FUNCTION_25_23((uint64_t)v9, 0xD000000000000020);
      OUTLINED_FUNCTION_11_20(v10, v11);
    }
    else
    {
      sub_1A5751898();
      *(_QWORD *)a4 = v8;
      *(_OWORD *)(a4 + 8) = 0u;
      *(_OWORD *)(a4 + 24) = 0u;
      *(_OWORD *)(a4 + 40) = 0u;
      *(_OWORD *)(a4 + 56) = 0u;
      *(_OWORD *)(a4 + 72) = 0u;
      *(_OWORD *)(a4 + 88) = 0u;
      *(_BYTE *)(a4 + 104) = a5;
    }
  }
}

double sub_1A572D9D0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double result;

  swift_retain();
  v17 = sub_1A57588C8(a1, a2, a3, a4, a5, a6, a7);
  if (!v8)
  {
    *(_QWORD *)a8 = v17;
    *(_QWORD *)(a8 + 8) = v18;
    *(_QWORD *)(a8 + 16) = v19;
    result = 0.0;
    *(_OWORD *)(a8 + 24) = 0u;
    *(_OWORD *)(a8 + 40) = 0u;
    *(_OWORD *)(a8 + 56) = 0u;
    *(_OWORD *)(a8 + 72) = 0u;
    *(_OWORD *)(a8 + 88) = 0u;
    *(_BYTE *)(a8 + 104) = 0x80;
  }
  return result;
}

_QWORD *sub_1A572DA74@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, _QWORD *(*a3)(_QWORD *__return_ptr, uint64_t, _QWORD, _QWORD)@<X2>, void *a4@<X8>)
{
  uint64_t v4;
  _QWORD *result;
  _QWORD v7[14];

  result = a3(v7, a1, *a2, a2[1]);
  if (!v4)
    return sub_1A56D4410(v7, a4);
  return result;
}

_QWORD *sub_1A572DAC8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, void *a3@<X8>)
{
  uint64_t v3;

  return sub_1A572DA74(a1, a2, *(_QWORD *(**)(_QWORD *__return_ptr, uint64_t, _QWORD, _QWORD))(v3 + 16), a3);
}

void sub_1A572DAE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A572D174(v0, v1, v2, v3, v4, v5, v6, 0x205453494CLL, 16);
  OUTLINED_FUNCTION_9();
}

void sub_1A572DB10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A572D174(v0, v1, v2, v3, v4, v5, v6, 0x204255534CLL, 32);
  OUTLINED_FUNCTION_9();
}

double sub_1A572DB40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_4_52();
  return sub_1A572D210(v0, v1, v2, v3, v4, v5, v6, v7);
}

void sub_1A572DB58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_4_52();
  sub_1A572D6BC(v0, v1, v2, v3);
}

void sub_1A572DB70()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_4_52();
  sub_1A572D8CC(v0, v1, v2, v3, 96);
  OUTLINED_FUNCTION_9();
}

void sub_1A572DBA4()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_4_52();
  sub_1A572D8CC(v0, v1, v2, v3, 112);
  OUTLINED_FUNCTION_9();
}

void sub_1A572DBD8()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;

  OUTLINED_FUNCTION_4_52();
  sub_1A572D368(v0, v1, v2, v3, v4, v5, v6, v7);
}

double sub_1A572DBF0()
{
  OUTLINED_FUNCTION_4_52();
  return sub_1A572D2D8();
}

double sub_1A572DC08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_4_52();
  return sub_1A572D9D0(v0, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1A572DC20(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  __int16 v9;
  char v10;
  _QWORD *v11;
  uint64_t v12;

  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (a2 + 1 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v11 = a3;
      return swift_willThrow();
    }
    v5 = result;
    v6 = *(_QWORD *)result;
    v7 = *(_QWORD *)(result + 8);
    v8 = *(_DWORD *)(result + 16);
    v9 = *(_WORD *)(result + 20);
    v10 = *(_BYTE *)(result + 22);
    swift_retain();
    sub_1A572DD14(v5, &v12);
    if (v3)
    {
      swift_release();
      *(_QWORD *)v5 = v6;
      *(_QWORD *)(v5 + 8) = v7;
      *(_DWORD *)(v5 + 16) = v8;
      *(_WORD *)(v5 + 20) = v9;
      *(_BYTE *)(v5 + 22) = v10;
      return swift_willThrow();
    }
    swift_release();
    return v12;
  }
  return result;
}

void sub_1A572DD14(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  char v5;
  int v6;
  unsigned int v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  sub_1A5751898();
  if (!v2)
  {
    sub_1A5760B70(a1);
    v6 = v5;
    if (sub_1A577630C(v5))
    {
      sub_1A5751898();
      v7 = (((v6 & 0x3F) << 8) | (v6 >> 6)) + 33217;
      if (v6 >= 0)
        v7 = (v6 + 1);
      v10 = (v7 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * ((4 - (__clz(v7) >> 3)) & 7)));
      *a2 = MEMORY[0x1A85AD9BC](&v10);
      a2[1] = v8;
    }
    else
    {
      sub_1A594C720();
      swift_bridgeObjectRelease();
      sub_1A594B538();
      sub_1A594B5F8();
      swift_bridgeObjectRelease();
      sub_1A56E9774();
      swift_allocError();
      *v9 = 0xD00000000000001BLL;
      v9[1] = 0x80000001A5A0FAB0;
      v9[2] = 0xD000000000000020;
      v9[3] = 0x80000001A5A0F5E0;
      v9[4] = 132;
      swift_willThrow();
    }
  }
}

void sub_1A572DEF0(uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  char v44;
  _QWORD v45[10];
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;

  OUTLINED_FUNCTION_15_39();
  sub_1A5751898();
  if (!v5)
  {
    OUTLINED_FUNCTION_12_1();
    OUTLINED_FUNCTION_3_61();
    sub_1A575F3A4();
    v50 = a5;
    if (v11)
      v12 = v11;
    else
      v12 = MEMORY[0x1E0DEE9D8];
    OUTLINED_FUNCTION_15_39();
    sub_1A5751898();
    v49 = v12;
    OUTLINED_FUNCTION_12_38();
    v48 = &v46;
    MEMORY[0x1E0C80A78](v13);
    v45[6] = a1;
    v45[7] = a2;
    v45[8] = a3;
    v45[9] = a4;
    MEMORY[0x1E0C80A78](v14);
    v45[2] = sub_1A571EF48;
    v45[3] = v15;
    sub_1A576F8EC((uint64_t)sub_1A572E534, 0, (uint64_t)sub_1A572FAFC, (uint64_t)v45);
    v17 = v16;
    v47 = v18;
    OUTLINED_FUNCTION_12_38();
    v19 = OUTLINED_FUNCTION_3_61();
    v26 = sub_1A573EE0C(v19, v20, v21, v22, v23, v24, v25);
    v48 = (uint64_t *)MailboxName.init(_:)(v26, v28, v27 & 0xFFFFFFFFFFFFFFLL);
    HIDWORD(v46) = v29;
    OUTLINED_FUNCTION_12_1();
    OUTLINED_FUNCTION_3_61();
    sub_1A575F3C0();
    v33 = v31;
    v34 = HIDWORD(v46);
    v36 = (uint64_t)v48;
    v35 = v49;
    v37 = v17;
    if (v31)
    {
      v38 = v30;
    }
    else
    {
      v38 = sub_1A574F7B4(MEMORY[0x1E0DEE9D8]);
      v33 = v39;
    }
    v40 = v32;
    v41 = v50;
    v42 = MailboxPath.init(name:pathSeparator:)(v36, v34, v47, v37);
    *(_QWORD *)v41 = v35;
    *(_QWORD *)(v41 + 8) = v42;
    *(_DWORD *)(v41 + 16) = v43;
    *(_BYTE *)(v41 + 20) = v44;
    *(_QWORD *)(v41 + 24) = v38;
    *(_QWORD *)(v41 + 32) = v33;
    *(_QWORD *)(v41 + 40) = v40;
  }
  OUTLINED_FUNCTION_32_17();
}

uint64_t sub_1A572E168(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  int v25;
  int v26;
  int v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  __int16 v39;
  char *v40;
  __int16 v41;
  void (*v42)(uint64_t);
  uint64_t v43;
  uint64_t v44;
  _BYTE v45[40];

  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7961F8);
  v15 = OUTLINED_FUNCTION_20_1();
  *(_OWORD *)(v15 + 16) = xmmword_1A59ABD10;
  swift_retain();
  result = sub_1A5754838(a1, a2, a3, a4, a5, a6, a7);
  if (v7)
  {
    *(_QWORD *)(v15 + 16) = 0;
    OUTLINED_FUNCTION_4_4();
    return v15;
  }
  *(_QWORD *)(v15 + 32) = result;
  *(_QWORD *)(v15 + 40) = v17;
  if (!__OFADD__(a2, 1))
  {
    if (a2 + 1 >= a3)
    {
      sub_1A5718F9C();
      v20 = (void *)OUTLINED_FUNCTION_21();
      *v21 = a3;
    }
    else
    {
      v42 = a4;
      v18 = OUTLINED_FUNCTION_14_33();
      v44 = v19;
      OUTLINED_FUNCTION_22_31(v18);
      v22 = v44 + 1;
      v23 = v15;
      while (1)
      {
        v43 = v23;
        v24 = *(void **)a1;
        v25 = *(_DWORD *)(a1 + 8);
        v26 = *(_DWORD *)(a1 + 12);
        v27 = *(_DWORD *)(a1 + 16);
        v41 = *(_WORD *)(a1 + 20);
        v28 = *(_BYTE *)(a1 + 22);
        if (v22 >= a3)
        {
          sub_1A5718F9C();
          v20 = (void *)OUTLINED_FUNCTION_21();
          *v38 = a3;
          swift_retain();
          v43 = v15;
          v39 = v41;
          swift_willThrow();
          goto LABEL_14;
        }
        OUTLINED_FUNCTION_19_30();
        sub_1A576B64C((void **)a1, v22, a3, 0, 0x5CuLL, 0xE100000000000000, 0);
        swift_release();
        sub_1A5752954(a1, v44, a3);
        ByteBufferView.init(_:)(v30, v31, v29 & 0xFFFFFFFFFFFFFFLL, (uint64_t)v45);
        OUTLINED_FUNCTION_12_1();
        v32 = sub_1A56E6FE8((uint64_t)v45);
        if (!v33)
          break;
        v42(v32);
        swift_release();
        swift_bridgeObjectRelease();
        sub_1A594B5F8();
        swift_release();
        swift_bridgeObjectRelease();
        v23 = v43;
        v34 = *(_QWORD *)(v43 + 16);
        if (v34 >= *(_QWORD *)(v43 + 24) >> 1)
        {
          sub_1A569E274();
          v23 = v37;
        }
        *(_QWORD *)(v23 + 16) = v34 + 1;
        v35 = v23 + 16 * v34;
        *(_QWORD *)(v35 + 32) = 92;
        *(_QWORD *)(v35 + 40) = 0xE100000000000000;
        v36 = OUTLINED_FUNCTION_14_33();
        OUTLINED_FUNCTION_22_31(v36);
        v22 = v44 + 1;
      }
      sub_1A56E9774();
      v20 = (void *)OUTLINED_FUNCTION_21();
      strcpy(v40, "Invalid UTF8");
      v40[13] = 0;
      *((_WORD *)v40 + 7) = -5120;
      *((_QWORD *)v40 + 2) = 0xD000000000000020;
      *((_QWORD *)v40 + 3) = 0x80000001A5A0F5E0;
      OUTLINED_FUNCTION_11_20((uint64_t)v40, 107);
      swift_release();
      v39 = v41;
LABEL_14:
      swift_release();
      *(_QWORD *)a1 = v24;
      *(_DWORD *)(a1 + 8) = v25;
      *(_DWORD *)(a1 + 12) = v26;
      *(_DWORD *)(a1 + 16) = v27;
      *(_WORD *)(a1 + 20) = v39;
      v15 = v43;
      *(_BYTE *)(a1 + 22) = v28;
    }
    swift_willThrow();

    return v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A572E534@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v7;

  result = sub_1A572DC20(a1, a2, a3);
  if (!v4)
  {
    *a4 = result;
    a4[1] = v7;
  }
  return result;
}

uint64_t sub_1A572E55C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _QWORD *a8@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD v40[7];
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;

  v49 = 0;
  *(_QWORD *)&v50 = MEMORY[0x1E0DEE9D8];
  *((_QWORD *)&v50 + 1) = MEMORY[0x1E0DEE9D8];
  v9 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v9 >= a3)
    {
      sub_1A5718F9C();
      OUTLINED_FUNCTION_21();
      *v35 = a3;
      swift_retain();
    }
    else
    {
      v16 = result;
      v45 = a8;
      v17 = *(_QWORD *)result;
      v18 = *(_QWORD *)(result + 8);
      LODWORD(v48) = *(_DWORD *)(result + 16);
      LODWORD(v47) = *(unsigned __int16 *)(result + 20);
      LODWORD(v46) = *(unsigned __int8 *)(result + 22);
      swift_retain();
      swift_retain();
      v19 = OUTLINED_FUNCTION_11_28();
      v25 = sub_1A573EE0C(v19, v20, v21, v22, v23, v24, a7);
      if (!v8)
      {
        v41 = v27;
        v42 = v26;
        v43 = a7;
        v44 = v25;
        sub_1A5751974(v16, v9, a3);
        v28 = OUTLINED_FUNCTION_11_28();
        v34 = sub_1A5741024(v28, v29, v30, v31, v32, v33, a7);
        v47 = (v36 >> 40) & 1;
        v48 = v34;
        v37 = v36;
        swift_release();
        OUTLINED_FUNCTION_17_4();
        v40[6] = v37 & 0x1FFFFFFFFFFLL;
        swift_retain();
        v46 = v37;
        sub_1A566658C(v48, v37, v47);
        sub_1A5724C8C(v48, v37 & 0x1FFFFFFFFFFLL, v44, v42, v41 & 0xFFFFFFFFFFFFFFLL);
        MEMORY[0x1E0C80A78](v38);
        v40[2] = a4;
        v40[3] = a5;
        v40[4] = a6;
        v40[5] = a7;
        sub_1A5751EE8(v16, a2, a3, (uint64_t)sub_1A572FB14, (uint64_t)v40, (uint64_t)&v49);
        OUTLINED_FUNCTION_21_31();
        result = OUTLINED_FUNCTION_20_26();
        v39 = v45;
        *v45 = v49;
        *(_OWORD *)(v39 + 1) = v50;
        return result;
      }
      swift_release();
      *(_QWORD *)v16 = v17;
      *(_QWORD *)(v16 + 8) = v18;
      *(_DWORD *)(v16 + 16) = v48;
      *(_WORD *)(v16 + 20) = v47;
      *(_BYTE *)(v16 + 22) = v46;
    }
    swift_willThrow();
    swift_release();
    OUTLINED_FUNCTION_17_4();
    swift_release();
    return OUTLINED_FUNCTION_4_4();
  }
  return result;
}

void sub_1A572E7FC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_1A5751974(a1, a2, a3);
  if (!v8)
  {
    v17 = __OFADD__(a2, 1);
    v18 = a2 + 1;
    if (v17)
    {
      __break(1u);
    }
    else if (v18 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v22 = a3;
      swift_retain();
      swift_willThrow();
      swift_release();
    }
    else
    {
      swift_retain();
      swift_retain();
      v19 = sub_1A573EE0C(a1, v18, a3, a4, a5, a6, a7);
      v26 = v20;
      v27 = v21;
      v28 = v19;
      sub_1A5751974(a1, v18, a3);
      v23 = sub_1A5741024(a1, v18, a3, a4, a5, a6, a7);
      v25 = v24;
      swift_release();
      swift_release();
      *(_QWORD *)a8 = v28;
      *(_QWORD *)(a8 + 8) = v26;
      *(_DWORD *)(a8 + 16) = v27;
      *(_WORD *)(a8 + 20) = WORD2(v27);
      *(_BYTE *)(a8 + 22) = BYTE6(v27);
      *(_QWORD *)(a8 + 24) = v23;
      *(_BYTE *)(a8 + 36) = BYTE4(v25);
      *(_DWORD *)(a8 + 32) = v25;
      *(_BYTE *)(a8 + 37) = BYTE5(v25) & 1;
    }
  }
}

uint64_t sub_1A572EA08@<X0>(uint64_t (*a1)(void)@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = a1();
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
    *(_DWORD *)(a2 + 16) = v6;
    *(_BYTE *)(a2 + 22) = BYTE6(v6);
    *(_WORD *)(a2 + 20) = WORD2(v6);
    *(_BYTE *)(a2 + 23) = HIBYTE(v6) & 1;
  }
  return result;
}

void sub_1A572EA50(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  sub_1A5751898();
  if (!v3 && (sub_1A5761038(a1, a2, a3, 1) & 0x8000000000000000) != 0)
  {
    sub_1A56E9774();
    swift_allocError();
    *v7 = 0xD000000000000011;
    v7[1] = 0x80000001A5A0F840;
    v7[2] = 0xD000000000000020;
    v7[3] = 0x80000001A5A0F5E0;
    v7[4] = 167;
    swift_willThrow();
  }
}

void sub_1A572EB4C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  sub_1A5751898();
  if (!v7)
    sub_1A5733498(a1, a2, a3, a4, a5, a6, a7);
}

void sub_1A572EBF8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1A5751898();
  if (!v3)
    sub_1A573E438(a1, a2, a3);
}

void sub_1A572ECAC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  sub_1A5751898();
  if (!v3 && (sub_1A5761038(a1, a2, a3, 1) & 0x8000000000000000) != 0)
  {
    sub_1A56E9774();
    swift_allocError();
    *v7 = 0xD000000000000011;
    v7[1] = 0x80000001A5A0F840;
    v7[2] = 0xD000000000000020;
    v7[3] = 0x80000001A5A0F5E0;
    v7[4] = 167;
    swift_willThrow();
  }
}

void sub_1A572EDA4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  sub_1A5751898();
  if (!v3 && (sub_1A5761038(a1, a2, a3, 1) & 0x8000000000000000) != 0)
  {
    sub_1A56E9774();
    swift_allocError();
    *v7 = 0xD000000000000011;
    v7[1] = 0x80000001A5A0F840;
    v7[2] = 0xD000000000000020;
    v7[3] = 0x80000001A5A0F5E0;
    v7[4] = 167;
    swift_willThrow();
  }
}

void sub_1A572EE98(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1A5751898();
  if (!v3)
    sub_1A573E2D8(a1, a2, a3);
}

void sub_1A572EF4C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  sub_1A5751898();
  if (!v3 && (sub_1A5761038(a1, a2, a3, 1) & 0x8000000000000000) != 0)
  {
    sub_1A56E9774();
    swift_allocError();
    *v7 = 0xD000000000000011;
    v7[1] = 0x80000001A5A0F840;
    v7[2] = 0xD000000000000020;
    v7[3] = 0x80000001A5A0F5E0;
    v7[4] = 167;
    swift_willThrow();
  }
}

uint64_t sub_1A572F044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t inited;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;

  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AE60);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A59ABDC0;
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a4;
  v15[3] = a5;
  v15[4] = a6;
  v15[5] = a7;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = sub_1A572F9E4;
  *(_QWORD *)(v16 + 24) = v15;
  *(_QWORD *)(inited + 32) = sub_1A572F9FC;
  *(_QWORD *)(inited + 40) = v16;
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a4;
  v17[3] = a5;
  v17[4] = a6;
  v17[5] = a7;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = sub_1A572FA10;
  *(_QWORD *)(v18 + 24) = v17;
  *(_QWORD *)(inited + 48) = sub_1A572F9FC;
  *(_QWORD *)(inited + 56) = v18;
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = a4;
  v19[3] = a5;
  v19[4] = a6;
  v19[5] = a7;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = sub_1A572FA28;
  *(_QWORD *)(v20 + 24) = v19;
  *(_QWORD *)(inited + 64) = sub_1A572F9FC;
  *(_QWORD *)(inited + 72) = v20;
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = a4;
  v21[3] = a5;
  v21[4] = a6;
  v21[5] = a7;
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = sub_1A572FA40;
  *(_QWORD *)(v22 + 24) = v21;
  *(_QWORD *)(inited + 80) = sub_1A572F9FC;
  *(_QWORD *)(inited + 88) = v22;
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = a4;
  v23[3] = a5;
  v23[4] = a6;
  v23[5] = a7;
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = sub_1A572FA58;
  *(_QWORD *)(v24 + 24) = v23;
  *(_QWORD *)(inited + 96) = sub_1A572F9FC;
  *(_QWORD *)(inited + 104) = v24;
  v25 = (_QWORD *)swift_allocObject();
  v25[2] = a4;
  v25[3] = a5;
  v25[4] = a6;
  v25[5] = a7;
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = sub_1A572FA70;
  *(_QWORD *)(v26 + 24) = v25;
  *(_QWORD *)(inited + 112) = sub_1A572F9FC;
  *(_QWORD *)(inited + 120) = v26;
  v27 = (_QWORD *)swift_allocObject();
  v27[2] = a4;
  v27[3] = a5;
  v27[4] = a6;
  v27[5] = a7;
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = sub_1A572FAAC;
  *(_QWORD *)(v28 + 24) = v27;
  *(_QWORD *)(inited + 128) = sub_1A572F9FC;
  *(_QWORD *)(inited + 136) = v28;
  swift_retain_n();
  v29 = sub_1A5770B0C(inited, a1, a2, a3, 0xD000000000000020, 0x80000001A5A0F5E0, 280);
  swift_setDeallocating();
  sub_1A5774244();
  return v29;
}

void sub_1A572F340(uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  _QWORD *v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  _QWORD *v35;
  uint64_t v36;

  v35 = a5;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AE68);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A59ABD10;
  v11 = OUTLINED_FUNCTION_190();
  v14 = sub_1A572F044(v11, v12, v13, a1, a2, a3, a4);
  if (v5)
  {
    *(_QWORD *)(inited + 16) = 0;
    swift_release();
  }
  else
  {
    v34 = &v28;
    *(_QWORD *)(inited + 32) = v14;
    *(_BYTE *)(inited + 40) = v15;
    v36 = inited;
    MEMORY[0x1E0C80A78](v14);
    v16 = OUTLINED_FUNCTION_190();
    sub_1A5751F04(v16, v17, v18, v19, v20, v21);
    if (*(_QWORD *)(v36 + 16))
    {
      OUTLINED_FUNCTION_18_31();
      __asm { BR              X13 }
    }
    OUTLINED_FUNCTION_18_31();
    v29 = 1;
    v30 = v23;
    v31 = 1;
    v32 = v24;
    v33 = 0;
    LODWORD(v34) = 1;
    v26 = v25;
    swift_bridgeObjectRelease();
    v27 = v35;
    *v35 = 0;
    *((_BYTE *)v27 + 8) = 1;
    v27[2] = 0;
    *((_BYTE *)v27 + 24) = 1;
    *((_DWORD *)v27 + 7) = v26;
    *((_BYTE *)v27 + 32) = 1;
    *((_DWORD *)v27 + 9) = a3;
    *((_BYTE *)v27 + 40) = 1;
    v27[6] = v30;
    *((_BYTE *)v27 + 56) = v29 & 1;
    v27[8] = v32;
    *((_BYTE *)v27 + 72) = v31 & 1;
    v27[10] = v33;
    *((_BYTE *)v27 + 88) = v34 & 1;
  }
  OUTLINED_FUNCTION_32_17();
}

void sub_1A572F5EC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  char v17;

  sub_1A5751974(a1, a2, a3);
  if (!v8)
  {
    *(_QWORD *)a8 = sub_1A572F044(a1, a2, a3, a4, a5, a6, a7);
    *(_BYTE *)(a8 + 8) = v17;
  }
}

void sub_1A572F670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _BYTE v7[16];
  void (*v8)();
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v11 = a4;
  v12 = a5;
  v13 = a6;
  v14 = a7;
  v8 = sub_1A572FB74;
  v9 = &v10;
  sub_1A576F59C((uint64_t)sub_1A572CAE8, (uint64_t)v7, (uint64_t)sub_1A572CAA4, 0);
}

uint64_t sub_1A572F708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  swift_retain();
  return sub_1A57591F4(a1, a2, a3, a4, a5, a6, a7);
}

void sub_1A572F798(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

uint64_t sub_1A572F7C8()
{
  sub_1A594CE88();
  return sub_1A594CE88();
}

uint64_t sub_1A572F82C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(void))((char *)&loc_1A572F838 + dword_1A572F8D4[a2]))();
}

BOOL sub_1A572F848(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return !a4 && a1 == a3;
}

uint64_t sub_1A572F8F0(uint64_t a1, char a2)
{
  _BYTE v5[72];

  sub_1A594CE64();
  sub_1A572F798((uint64_t)v5, a1, a2);
  return sub_1A594CED0();
}

uint64_t sub_1A572F93C()
{
  uint64_t v0;

  return sub_1A572F8F0(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

void sub_1A572F948(uint64_t a1)
{
  uint64_t v1;

  sub_1A572F798(a1, *(_QWORD *)v1, *(_BYTE *)(v1 + 8));
}

uint64_t sub_1A572F954()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  _BYTE v4[72];

  v1 = *(_QWORD *)v0;
  v2 = *(_BYTE *)(v0 + 8);
  sub_1A594CE64();
  sub_1A572F798((uint64_t)v4, v1, v2);
  return sub_1A594CED0();
}

uint64_t sub_1A572F99C(uint64_t a1)
{
  return sub_1A572F82C(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

void sub_1A572F9B4()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;

  OUTLINED_FUNCTION_4_52();
  sub_1A572D5E4(v0, v1, v2, v3);
}

void sub_1A572F9CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_4_52();
  sub_1A572F5EC(v0, v1, v2, v3, v4, v5, v6, v7);
}

void sub_1A572F9E4()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_4_52();
  sub_1A572EA50(v0, v1, v2);
}

uint64_t sub_1A572F9FC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A572FAC4(a1, a2, a3);
}

void sub_1A572FA10()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A572EB4C(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A572FA28()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_4_52();
  sub_1A572EBF8(v0, v1, v2);
}

void sub_1A572FA40()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_4_52();
  sub_1A572ECAC(v0, v1, v2);
}

void sub_1A572FA58()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_4_52();
  sub_1A572EDA4(v0, v1, v2);
}

void sub_1A572FA70()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_4_52();
  sub_1A572EE98(v0, v1, v2);
}

uint64_t sub_1A572FA88()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1A572FAAC()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_4_52();
  sub_1A572EF4C(v0, v1, v2);
}

uint64_t sub_1A572FAC4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v7;

  result = (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v3 + 16))(a1, *a2, a2[1]);
  if (!v4)
  {
    *(_QWORD *)a3 = result;
    *(_BYTE *)(a3 + 8) = v7;
  }
  return result;
}

void sub_1A572FAFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1A5741004(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

void sub_1A572FB14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_4_52();
  sub_1A572E7FC(v0, v1, v2, v3, v4, v5, v6, v7);
}

void sub_1A572FB2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A572F670(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_1A572FB44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A572EA08(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_1A572FB5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  return sub_1A572F708(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A572FB74()
{
  OUTLINED_FUNCTION_4_52();
  sub_1A572C980();
}

uint64_t _s12MailboxValueOwet(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFA && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 249;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 6)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s12MailboxValueOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 250;
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A572FC10(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *_s12MailboxValueOMa()
{
  return &_s12MailboxValueON;
}

unint64_t sub_1A572FC2C()
{
  unint64_t result;

  result = qword_1EE7A9E18;
  if (!qword_1EE7A9E18)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59B6F38, &_s12MailboxValueON);
    atomic_store(result, (unint64_t *)&qword_1EE7A9E18);
  }
  return result;
}

_QWORD *sub_1A572FC68@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, void *a3@<X8>)
{
  return sub_1A572DAC8(a1, a2, a3);
}

uint64_t sub_1A572FCFC@<X0>(uint64_t a1@<X8>)
{
  return sub_1A572FB44(a1);
}

_QWORD *OUTLINED_FUNCTION_2_74(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  result[2] = v1;
  result[3] = v2;
  result[4] = v4;
  result[5] = v3;
  return result;
}

uint64_t OUTLINED_FUNCTION_3_61()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_5_58()
{
  sub_1A5751898();
}

uint64_t OUTLINED_FUNCTION_6_52()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_9_45()
{
  sub_1A5751898();
}

uint64_t OUTLINED_FUNCTION_11_28()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_12_38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1A5751974(v0, v2, v1);
}

uint64_t OUTLINED_FUNCTION_14_33()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_19_30()
{
  return swift_retain_n();
}

uint64_t OUTLINED_FUNCTION_20_26()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1A5666618(v0, *(_QWORD *)(v1 - 128), *(_QWORD *)(v1 - 120));
}

uint64_t OUTLINED_FUNCTION_21_31()
{
  return swift_release();
}

void OUTLINED_FUNCTION_22_31(uint64_t a1)
{
  sub_1A576B3AC(a1);
}

void OUTLINED_FUNCTION_25_23(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 16) = a2;
  *(_QWORD *)(a1 + 24) = (v2 - 32) | 0x8000000000000000;
}

void sub_1A572FE5C(void *a1@<X8>)
{
  uint64_t v1;
  uint64_t inited;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _BYTE __dst[184];
  _BYTE __src[184];
  uint64_t v44;

  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B2A8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A59AC290;
  v3 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_12_37(v3);
  v4 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v4 + 16) = sub_1A573242C;
  *(_QWORD *)(v4 + 24) = v1;
  *(_QWORD *)(inited + 32) = 0x5347414C46;
  *(_QWORD *)(inited + 40) = 0xE500000000000000;
  *(_QWORD *)(inited + 48) = sub_1A572AD4C;
  *(_QWORD *)(inited + 56) = v4;
  v5 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_12_37(v5);
  v6 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v6 + 16) = sub_1A5732444;
  *(_QWORD *)(v6 + 24) = v1;
  *(_QWORD *)(inited + 64) = 0x45504F4C45564E45;
  *(_QWORD *)(inited + 72) = 0xE800000000000000;
  *(_QWORD *)(inited + 80) = sub_1A572BD0C;
  *(_QWORD *)(inited + 88) = v6;
  v7 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_12_37(v7);
  v8 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v8 + 16) = sub_1A573245C;
  *(_QWORD *)(v8 + 24) = v1;
  strcpy((char *)(inited + 96), "INTERNALDATE");
  *(_BYTE *)(inited + 109) = 0;
  *(_WORD *)(inited + 110) = -5120;
  *(_QWORD *)(inited + 112) = sub_1A572BD0C;
  *(_QWORD *)(inited + 120) = v8;
  v9 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_12_37(v9);
  v10 = OUTLINED_FUNCTION_20_1();
  v11 = OUTLINED_FUNCTION_6_53(v10, (uint64_t)sub_1A5732474);
  *(_QWORD *)(inited + 128) = v12 & 0xFFFFFFFFFFFFLL | 0x532E000000000000;
  *(_QWORD *)(inited + 136) = 0xEB00000000455A49;
  *(_QWORD *)(inited + 144) = sub_1A572BD0C;
  *(_QWORD *)(inited + 152) = v11;
  v13 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_12_37(v13);
  v14 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v14 + 16) = sub_1A573248C;
  *(_QWORD *)(v14 + 24) = v1;
  *(_QWORD *)(inited + 160) = 1497648962;
  *(_QWORD *)(inited + 168) = 0xE400000000000000;
  *(_QWORD *)(inited + 176) = sub_1A572BD0C;
  *(_QWORD *)(inited + 184) = v14;
  v15 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_12_37(v15);
  v16 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v16 + 16) = sub_1A57324A4;
  *(_QWORD *)(v16 + 24) = v1;
  strcpy((char *)(inited + 192), "BODYSTRUCTURE");
  *(_WORD *)(inited + 206) = -4864;
  *(_QWORD *)(inited + 208) = sub_1A572BD0C;
  *(_QWORD *)(inited + 216) = v16;
  v17 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_12_37(v17);
  v18 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v18 + 16) = sub_1A57324C0;
  *(_QWORD *)(v18 + 24) = v1;
  *(_QWORD *)(inited + 224) = 4475221;
  *(_QWORD *)(inited + 232) = 0xE300000000000000;
  *(_QWORD *)(inited + 240) = sub_1A572BD0C;
  *(_QWORD *)(inited + 248) = v18;
  v19 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_12_37(v19);
  v20 = OUTLINED_FUNCTION_20_1();
  v21 = OUTLINED_FUNCTION_8_47(v20, (uint64_t)sub_1A57324D8);
  *(_QWORD *)(inited + 256) = v22 & 0xFFFFFFFFFFFFLL | 0x532E000000000000;
  *(_QWORD *)(inited + 264) = 0xEB00000000455A49;
  *(_QWORD *)(inited + 272) = sub_1A572BD0C;
  *(_QWORD *)(inited + 280) = v21;
  *(_QWORD *)(inited + 288) = 0x47534D2D4D472D58;
  *(_QWORD *)(inited + 296) = 0xEA00000000004449;
  *(_QWORD *)(inited + 304) = sub_1A57312E0;
  *(_QWORD *)(inited + 312) = 0;
  *(_QWORD *)(inited + 320) = 0x5248542D4D472D58;
  *(_QWORD *)(inited + 328) = 0xEA00000000004449;
  *(_QWORD *)(inited + 336) = sub_1A57312FC;
  *(_QWORD *)(inited + 344) = 0;
  v23 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_12_37(v23);
  v24 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v24 + 16) = sub_1A57324F0;
  *(_QWORD *)(v24 + 24) = v1;
  *(_QWORD *)(inited + 352) = 0x42414C2D4D472D58;
  *(_QWORD *)(inited + 360) = 0xEB00000000534C45;
  *(_QWORD *)(inited + 368) = sub_1A572BD0C;
  *(_QWORD *)(inited + 376) = v24;
  v25 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_12_37(v25);
  v26 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v26 + 16) = sub_1A5732508;
  *(_QWORD *)(v26 + 24) = v1;
  *(_QWORD *)(inited + 384) = 0x514553444F4DLL;
  *(_QWORD *)(inited + 392) = 0xE600000000000000;
  *(_QWORD *)(inited + 400) = sub_1A572BD0C;
  *(_QWORD *)(inited + 408) = v26;
  v27 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_12_37(v27);
  v28 = OUTLINED_FUNCTION_20_1();
  v29 = OUTLINED_FUNCTION_6_53(v28, (uint64_t)sub_1A5732520);
  *(_QWORD *)(inited + 416) = v30 & 0xFFFFFFFFFFFFLL | 0x542E000000000000;
  *(_QWORD *)(inited + 424) = 0xEB00000000545845;
  *(_QWORD *)(inited + 432) = sub_1A572BD0C;
  *(_QWORD *)(inited + 440) = v29;
  v31 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_12_37(v31);
  v32 = OUTLINED_FUNCTION_20_1();
  v33 = OUTLINED_FUNCTION_6_53(v32, (uint64_t)sub_1A573255C);
  *(_QWORD *)(inited + 448) = v34 & 0xFFFFFFFFFFFFLL | 0x482E000000000000;
  *(_QWORD *)(inited + 456) = 0xED00005245444145;
  *(_QWORD *)(inited + 464) = sub_1A572BD0C;
  *(_QWORD *)(inited + 472) = v33;
  v35 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_12_37(v35);
  v36 = OUTLINED_FUNCTION_20_1();
  v37 = OUTLINED_FUNCTION_8_47(v36, (uint64_t)sub_1A5732574);
  *(_QWORD *)(inited + 480) = v38;
  *(_QWORD *)(inited + 488) = 0xE600000000000000;
  *(_QWORD *)(inited + 496) = sub_1A572BD0C;
  *(_QWORD *)(inited + 504) = v37;
  v39 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_12_37(v39);
  v40 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v40 + 16) = sub_1A573258C;
  *(_QWORD *)(v40 + 24) = v1;
  *(_QWORD *)(inited + 512) = 0x57454956455250;
  *(_QWORD *)(inited + 520) = 0xE700000000000000;
  *(_QWORD *)(inited + 528) = sub_1A572BD0C;
  *(_QWORD *)(inited + 536) = v40;
  swift_retain_n();
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796A68);
  sub_1A594AFEC();
  sub_1A5732B40();
  swift_bridgeObjectRelease();
  if (!v44)
  {
    sub_1A56DDB8C(__src, __dst);
    sub_1A56DDB8C(__dst, a1);
  }
  OUTLINED_FUNCTION_32_17();
}

uint64_t sub_1A5730424(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t inited;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AE00);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A59ABD70;
  v8 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v8);
  v9 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v9 + 16) = sub_1A57306E4;
  *(_QWORD *)(v9 + 24) = v3;
  *(_QWORD *)(inited + 32) = sub_1A5730C38;
  *(_QWORD *)(inited + 40) = v9;
  v10 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v10);
  v11 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v11 + 16) = sub_1A5730C4C;
  *(_QWORD *)(v11 + 24) = v3;
  *(_QWORD *)(inited + 48) = sub_1A5730C38;
  *(_QWORD *)(inited + 56) = v11;
  v12 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v12);
  v13 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v13 + 16) = sub_1A5730C64;
  *(_QWORD *)(v13 + 24) = v3;
  *(_QWORD *)(inited + 64) = sub_1A5730C38;
  *(_QWORD *)(inited + 72) = v13;
  v14 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v14);
  v15 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v15 + 16) = sub_1A5730C7C;
  *(_QWORD *)(v15 + 24) = v3;
  *(_QWORD *)(inited + 80) = sub_1A5730C38;
  *(_QWORD *)(inited + 88) = v15;
  v16 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_5_59(v16);
  v17 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v17 + 16) = sub_1A5730C94;
  *(_QWORD *)(v17 + 24) = v3;
  *(_QWORD *)(inited + 96) = sub_1A5730C38;
  *(_QWORD *)(inited + 104) = v17;
  swift_retain_n();
  v18 = sub_1A5770B28(inited, a1, a2, a3, 0xD000000000000020, 0x80000001A5A0F5E0, 61);
  if (!v20)
    a3 = v18;
  swift_setDeallocating();
  sub_1A5774244();
  return a3;
}

void sub_1A573064C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1A57333D0(a1, a2, a3);
  if (!v3)
    sub_1A5751898();
}

uint64_t sub_1A57306C0()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1A57306E4()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_4_52();
  sub_1A573064C(v0, v1, v2);
}

void sub_1A57306FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  sub_1A5751898();
  if (!v7)
  {
    swift_retain();
    sub_1A5759210(a1, a2, a3, a4, a5, a6, a7);
  }
}

void sub_1A57307B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  sub_1A5751898();
  if (!v7)
  {
    swift_retain();
    sub_1A5759210(a1, a2, a3, a4, a5, a6, a7);
  }
}

void sub_1A573086C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v15;
  _QWORD v16[6];

  sub_1A5751898();
  if (!v7)
  {
    MEMORY[0x1E0C80A78](v15);
    v16[2] = a4;
    v16[3] = a5;
    v16[4] = a6;
    v16[5] = a7;
    sub_1A5760D2C(a1, a2, a3, (uint64_t)sub_1A572316C, (uint64_t)v16, (uint64_t)&type metadata for ByteBuffer);
  }
}

void sub_1A5730948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v15;
  _QWORD v16[6];

  sub_1A5751898();
  if (!v7)
  {
    MEMORY[0x1E0C80A78](v15);
    v16[2] = a4;
    v16[3] = a5;
    v16[4] = a6;
    v16[5] = a7;
    sub_1A5760D2C(a1, a2, a3, (uint64_t)sub_1A5732414, (uint64_t)v16, (uint64_t)&type metadata for URLFetchData);
  }
}

void sub_1A5730A20(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_1A5751974(a1, a2, a3);
  if (!v8)
  {
    v17 = __OFADD__(a2, 1);
    v18 = a2 + 1;
    if (v17)
    {
      __break(1u);
    }
    else if (v18 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v22 = a3;
      swift_retain();
      swift_willThrow();
      swift_release();
    }
    else
    {
      swift_retain();
      swift_retain();
      v19 = sub_1A573EE0C(a1, v18, a3, a4, a5, a6, a7);
      v29 = v20;
      v30 = v21;
      v31 = v19;
      sub_1A5751974(a1, v18, a3);
      sub_1A5740090();
      v24 = v23;
      v26 = v25;
      v28 = v27;
      swift_release();
      swift_release();
      *(_QWORD *)a8 = v31;
      *(_QWORD *)(a8 + 8) = v29;
      *(_DWORD *)(a8 + 16) = v30;
      *(_WORD *)(a8 + 20) = WORD2(v30);
      *(_BYTE *)(a8 + 22) = BYTE6(v30);
      *(_QWORD *)(a8 + 24) = v24;
      *(_QWORD *)(a8 + 32) = v26;
      *(_DWORD *)(a8 + 40) = v28;
      *(_BYTE *)(a8 + 46) = BYTE6(v28);
      *(_WORD *)(a8 + 44) = WORD2(v28);
    }
  }
}

uint64_t sub_1A5730C38@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A5730CAC(a1, a2, a3);
}

void sub_1A5730C4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A57306FC(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A5730C64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A57307B4(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A5730C7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A573086C(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A5730C94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_52();
  sub_1A5730948(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_1A5730CAC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v7;

  result = (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v3 + 16))(a1, *a2, a2[1]);
  if (!v4)
  {
    *(_QWORD *)a3 = result;
    *(_DWORD *)(a3 + 8) = v7;
    *(_BYTE *)(a3 + 12) = BYTE4(v7);
  }
  return result;
}

_QWORD *sub_1A5730CEC@<X0>(_QWORD *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  char v21;
  __int16 v22;
  int v23;
  _QWORD __src[24];

  v9 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v9 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v18 = a3;
      swift_retain();
    }
    else
    {
      v15 = (uint64_t)result;
      v16 = *result;
      v17 = result[1];
      v22 = *((_WORD *)result + 10);
      v23 = *((_DWORD *)result + 4);
      v21 = *((_BYTE *)result + 22);
      swift_retain();
      swift_retain();
      sub_1A5751974(v15, v9, a3);
      if (!v8)
      {
        swift_retain();
        v19 = sub_1A5753A04(v15, v9, a3, a4, a5, a6, a7);
        swift_release();
        swift_release();
        __src[0] = v19;
        sub_1A5732728((uint64_t)__src);
        return sub_1A56DDB8C(__src, a8);
      }
      swift_release();
      *(_QWORD *)v15 = v16;
      *(_QWORD *)(v15 + 8) = v17;
      *(_DWORD *)(v15 + 16) = v23;
      *(_WORD *)(v15 + 20) = v22;
      *(_BYTE *)(v15 + 22) = v21;
    }
    swift_willThrow();
    return (_QWORD *)swift_release();
  }
  return result;
}

void sub_1A5730E78(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  uint64_t v8;
  _OWORD v17[2];
  int v18;
  __int16 v19;
  char v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _OWORD v26[2];
  int v27;
  __int16 v28;
  char v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;

  sub_1A5751974(a1, a2, a3);
  if (!v8)
  {
    swift_retain();
    sub_1A5754BA0(v26, a1, a2, a3, a4, a5, a6, a7);
    v17[0] = v26[0];
    v17[1] = v26[1];
    v18 = v27;
    v19 = v28;
    v20 = v29;
    v21 = v30;
    v22 = v31;
    v23 = v32;
    v24 = v33;
    v25 = v34;
    sub_1A5732714((uint64_t)v17);
    sub_1A56DDB8C(v17, a8);
  }
}

void sub_1A5730F88(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, int a7@<W6>, void *a8@<X8>)
{
  uint64_t v8;
  int v13;
  int v14;
  int v15;
  int v17;
  _QWORD v18[24];

  v13 = a3;
  v14 = a2;
  v15 = a1;
  sub_1A5751974(a1, a2, a3);
  if (!v8)
  {
    swift_retain();
    v18[0] = sub_1A5753954(v15, v14, v13, a4, a5, a6, a7, v17, v18[0], SHIDWORD(v18[0]), v18[1], v18[2], v18[3], v18[4], v18[5], v18[6], v18[7], v18[8], v18[9],
               v18[10],
               v18[11],
               v18[12],
               v18[13]);
    sub_1A5732700((uint64_t)v18);
    sub_1A56DDB8C(v18, a8);
  }
}

void sub_1A5731044(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v4;
  unint64_t v9;
  _QWORD *v10;
  _QWORD __src[23];

  sub_1A5751974(a1, a2, a3);
  if (!v4)
  {
    v9 = sub_1A5761038(a1, a2, a3, 1);
    if ((v9 & 0x8000000000000000) != 0)
    {
      sub_1A56E9774();
      swift_allocError();
      *v10 = 0xD000000000000011;
      v10[1] = 0x80000001A5A0F840;
      v10[2] = 0xD000000000000020;
      v10[3] = 0x80000001A5A0F5E0;
      v10[4] = 167;
      swift_willThrow();
    }
    else
    {
      __src[0] = v9;
      sub_1A57326EC((uint64_t)__src);
      sub_1A56DDB8C(__src, a4);
    }
  }
}

void *sub_1A5731138@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  uint64_t inited;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _BYTE __dst[184];
  _BYTE __src[192];
  uint64_t v24;

  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9E20);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A59ABD40;
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a4;
  v16[3] = a5;
  v16[4] = a6;
  v16[5] = a7;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = sub_1A57326B8;
  *(_QWORD *)(v17 + 24) = v16;
  *(_QWORD *)(inited + 32) = sub_1A572BD0C;
  *(_QWORD *)(inited + 40) = v17;
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = a4;
  v18[3] = a5;
  v18[4] = a6;
  v18[5] = a7;
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = sub_1A57326D4;
  *(_QWORD *)(v19 + 24) = v18;
  *(_QWORD *)(inited + 48) = sub_1A572BD0C;
  *(_QWORD *)(inited + 56) = v19;
  swift_retain_n();
  sub_1A5770C98(inited, a1, a2, a3, 0xD000000000000020, 0x80000001A5A0F5E0, 112);
  swift_setDeallocating();
  if (v24)
    return (void *)sub_1A5774244();
  sub_1A5774244();
  sub_1A56DDB8C(__src, __dst);
  return sub_1A56DDB8C(__dst, a8);
}

void sub_1A57312E0(unint64_t a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  sub_1A5731318(a1, a2, (void (*)(_QWORD *))sub_1A5732668, a3);
}

void sub_1A57312FC(unint64_t a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  sub_1A5731318(a1, a2, (void (*)(_QWORD *))sub_1A5732654, a3);
}

void sub_1A5731318(unint64_t a1@<X0>, uint64_t *a2@<X1>, void (*a3)(_QWORD *)@<X2>, void *a4@<X8>)
{
  uint64_t v4;
  _BYTE __src[184];

  sub_1A573191C(a1, *a2, a2[1], a3, __src);
  if (!v4)
    sub_1A56DDB8C(__src, a4);
}

_QWORD *sub_1A5731368@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD __src[4];
  char v15;
  _QWORD v16[4];
  unsigned __int8 v17;
  int v18;

  result = sub_1A5729BD8(v16);
  if (!v4)
  {
    v10 = v16[0];
    v11 = v16[1];
    v12 = v16[2];
    v13 = v16[3];
    v18 = v17;
    sub_1A5751974(a1, a2, a3);
    sub_1A5751898();
    __src[0] = v10;
    __src[1] = v11;
    __src[2] = v12;
    __src[3] = v13;
    v15 = v18;
    sub_1A5732600((uint64_t)__src);
    return sub_1A56DDB8C(__src, a4);
  }
  return result;
}

void sub_1A5731458(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W7>, void *a5@<X8>)
{
  uint64_t v5;
  _BYTE v7[184];
  _BYTE __src[184];
  _BYTE __dst[184];
  _BYTE v10[192];
  void *v11;

  v11 = a5;
  sub_1A5751974(a1, a2, a3);
  if (!v5)
  {
    sub_1A5719A38();
    sub_1A55DBFD8(v10, v7);
    sub_1A55DBFD8(v7, __src);
    __src[177] = a4;
    memcpy(__dst, __src, 0xB2uLL);
    sub_1A57326A4((uint64_t)__dst);
    sub_1A56DDB8C(__dst, v11);
  }
  OUTLINED_FUNCTION_32_17();
}

void sub_1A5731528(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  uint64_t v8;
  _DWORD v17[48];

  sub_1A5751974(a1, a2, a3);
  if (!v8)
  {
    v17[0] = sub_1A5733498(a1, a2, a3, a4, a5, a6, a7);
    sub_1A5732690((uint64_t)v17);
    sub_1A56DDB8C(v17, a8);
  }
}

void *sub_1A57315DC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  uint64_t v8;
  void *result;
  void *v18;
  unint64_t v19;
  _QWORD *v20;
  _QWORD __src[23];

  swift_retain();
  result = (void *)sub_1A57580C4(a1, a2, a3, a4, a5, a6, a7);
  if (!v8)
  {
    v18 = result;
    sub_1A5751974(a1, a2, a3);
    v19 = sub_1A5761038(a1, a2, a3, 1);
    if ((v19 & 0x8000000000000000) != 0)
    {
      sub_1A56E9774();
      swift_allocError();
      *v20 = 0xD000000000000011;
      v20[1] = 0x80000001A5A0F840;
      v20[2] = 0xD000000000000020;
      v20[3] = 0x80000001A5A0F5E0;
      v20[4] = 167;
      swift_willThrow();
      return (void *)swift_bridgeObjectRelease();
    }
    else
    {
      __src[0] = v18;
      __src[1] = v19;
      sub_1A573267C((uint64_t)__src);
      return sub_1A56DDB8C(__src, a8);
    }
  }
  return result;
}

_QWORD *sub_1A5731740@<X0>(_QWORD *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  char v13;
  __int16 v14;
  int v15;
  _QWORD __src[24];

  v5 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v5 >= a3)
    {
      sub_1A5718F9C();
      swift_allocError();
      *v11 = a3;
      swift_retain();
    }
    else
    {
      v7 = (unint64_t)result;
      v8 = *result;
      v9 = result[1];
      v14 = *((_WORD *)result + 10);
      v15 = *((_DWORD *)result + 4);
      v13 = *((_BYTE *)result + 22);
      swift_retain();
      swift_retain();
      sub_1A5751974(v7, v5, a3);
      if (!v4)
      {
        sub_1A5751898();
        v10 = sub_1A573E2D8(v7, v5, a3);
        sub_1A5751898();
        swift_release();
        swift_release();
        __src[0] = v10;
        sub_1A5732614((uint64_t)__src);
        return sub_1A56DDB8C(__src, a4);
      }
      swift_release();
      *(_QWORD *)v7 = v8;
      *(_QWORD *)(v7 + 8) = v9;
      *(_DWORD *)(v7 + 16) = v15;
      *(_WORD *)(v7 + 20) = v14;
      *(_BYTE *)(v7 + 22) = v13;
    }
    swift_willThrow();
    return (_QWORD *)swift_release();
  }
  return result;
}

void sub_1A573191C(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(_QWORD *)@<X3>, void *a5@<X8>)
{
  uint64_t v5;
  _QWORD __src[23];

  sub_1A5751974(a1, a2, a3);
  if (!v5)
  {
    __src[0] = sub_1A5761038(a1, a2, a3, 0);
    a4(__src);
    sub_1A56DDB8C(__src, a5);
  }
}

void sub_1A57319A8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  uint64_t v8;
  uint64_t v17;
  unint64_t v18;
  unint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t *v24;
  uint64_t v25;
  int v26;
  _QWORD v27[6];
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t *v32;
  uint64_t v33;
  _QWORD __src[24];
  uint64_t v35;

  v35 = MEMORY[0x1E0DEE9D8];
  sub_1A5751974(a1, a2, a3);
  if (!v8)
  {
    OUTLINED_FUNCTION_6_50();
    swift_retain();
    sub_1A575F5EC();
    v33 = v17;
    if (v17)
    {
      v32 = v19;
      v31 = v18;
      v30 = HIDWORD(v18);
      swift_retain_n();
      sub_1A569E330();
      v21 = v20;
      v22 = *(_QWORD *)(v20 + 16);
      v23 = v22 + 1;
      if (v22 >= *(_QWORD *)(v20 + 24) >> 1)
      {
        v29 = v22 + 1;
        v28 = v22;
        sub_1A569E330();
        v23 = v29;
        v22 = v28;
        v21 = v20;
      }
      v24 = v32;
      v32 = &v28;
      *(_QWORD *)(v21 + 16) = v23;
      v25 = v21 + 24 * v22;
      *(_QWORD *)(v25 + 32) = v33;
      v26 = v30;
      *(_DWORD *)(v25 + 40) = v31;
      *(_DWORD *)(v25 + 44) = v26;
      *(_DWORD *)(v25 + 48) = (_DWORD)v24;
      *(_WORD *)(v25 + 52) = WORD2(v24);
      *(_BYTE *)(v25 + 54) = BYTE6(v24);
      v35 = v21;
      MEMORY[0x1E0C80A78](v20);
      v27[2] = a4;
      v27[3] = a5;
      v27[4] = a6;
      v27[5] = a7;
      sub_1A5751F20(a1, a2, a3, (uint64_t)sub_1A573263C, (uint64_t)v27, (uint64_t)&v35);
      OUTLINED_FUNCTION_7_42();
    }
    OUTLINED_FUNCTION_6_50();
    OUTLINED_FUNCTION_7_42();
    __src[0] = v35;
    sub_1A5732628((uint64_t)__src);
    sub_1A56DDB8C(__src, a8);
  }
  OUTLINED_FUNCTION_32_17();
}

void sub_1A5731C14(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  int v17;
  int v18;
  int v19;
  __int16 v20;
  char v21;

  sub_1A5751974(a1, a2, a3);
  if (!v8)
  {
    *(_QWORD *)a8 = sub_1A57410A4(a1, a2, a3, a4, a5, a6, a7);
    *(_DWORD *)(a8 + 8) = v17;
    *(_DWORD *)(a8 + 12) = v18;
    *(_DWORD *)(a8 + 16) = v19;
    *(_WORD *)(a8 + 20) = v20;
    *(_BYTE *)(a8 + 22) = v21;
  }
}

void sub_1A5731CB0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v4;
  _QWORD __src[4];
  char v7;

  sub_1A5751974(a1, a2, a3);
  if (!v4)
  {
    sub_1A5751898();
    __src[0] = 1;
    memset(&__src[1], 0, 24);
    v7 = 0x80;
    sub_1A5732600((uint64_t)__src);
    sub_1A56DDB8C(__src, a4);
  }
}

void sub_1A5731D58(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v4;
  _QWORD __src[4];
  char v7;

  sub_1A5751974(a1, a2, a3);
  if (!v4)
  {
    sub_1A5751898();
    __src[0] = 2;
    memset(&__src[1], 0, 24);
    v7 = 0x80;
    sub_1A5732600((uint64_t)__src);
    sub_1A56DDB8C(__src, a4);
  }
}

void *sub_1A5731E00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  uint64_t v8;
  void *result;
  uint64_t v18;
  char v19;
  char v20;
  _QWORD __src[4];
  char v22;
  void *v23;

  swift_retain();
  result = (void *)sub_1A57580C4(a1, a2, a3, a4, a5, a6, a7);
  if (!v8)
  {
    v23 = result;
    swift_retain();
    v18 = sub_1A575EF14(a1, a2, a3, a4, a5, a6, a7);
    v20 = v19;
    sub_1A5751974(a1, a2, a3);
    sub_1A5751898();
    __src[0] = v23;
    __src[1] = v18;
    __src[2] = v20 & 1;
    __src[3] = 0;
    v22 = 0;
    sub_1A5732600((uint64_t)__src);
    return sub_1A56DDB8C(__src, a8);
  }
  return result;
}

void *sub_1A5731F58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  uint64_t inited;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _BYTE __dst[184];
  _BYTE __src[192];
  uint64_t v26;

  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9E20);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A59ABDA0;
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a4;
  v16[3] = a5;
  v16[4] = a6;
  v16[5] = a7;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = sub_1A57325A4;
  *(_QWORD *)(v17 + 24) = v16;
  *(_QWORD *)(inited + 32) = sub_1A572BD0C;
  *(_QWORD *)(inited + 40) = v17;
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = a4;
  v18[3] = a5;
  v18[4] = a6;
  v18[5] = a7;
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = sub_1A57325BC;
  *(_QWORD *)(v19 + 24) = v18;
  *(_QWORD *)(inited + 48) = sub_1A572BD0C;
  *(_QWORD *)(inited + 56) = v19;
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = a4;
  v20[3] = a5;
  v20[4] = a6;
  v20[5] = a7;
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = sub_1A57325D4;
  *(_QWORD *)(v21 + 24) = v20;
  *(_QWORD *)(inited + 64) = sub_1A572BD0C;
  *(_QWORD *)(inited + 72) = v21;
  swift_retain_n();
  sub_1A5770C98(inited, a1, a2, a3, 0xD000000000000020, 0x80000001A5A0F5E0, 227);
  swift_setDeallocating();
  if (v26)
    return (void *)sub_1A5774244();
  sub_1A5774244();
  sub_1A56DDB8C(__src, __dst);
  return sub_1A56DDB8C(__dst, a8);
}

void sub_1A573214C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  uint64_t v8;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD __src[24];

  sub_1A5751974(a1, a2, a3);
  if (!v8)
  {
    swift_retain();
    sub_1A5752A44(a1, a2, a3, a4, a5, a6, a7);
    if (v18 < v17)
    {
      __break(1u);
    }
    else
    {
      swift_beginAccess();
      v19 = sub_1A594B538();
      v21 = v20;
      swift_release();
      __src[0] = v19;
      __src[1] = v21;
      sub_1A57325EC((uint64_t)__src);
      sub_1A56DDB8C(__src, a8);
    }
  }
}

void sub_1A5732268(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v4;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD __src[24];

  sub_1A5751974(a1, a2, a3);
  if (!v4)
  {
    sub_1A5740D2C();
    if (v7 < v6)
    {
      __break(1u);
    }
    else
    {
      swift_beginAccess();
      v8 = sub_1A594B538();
      v10 = v9;
      swift_release();
      __src[0] = v8;
      __src[1] = v10;
      sub_1A57325EC((uint64_t)__src);
      sub_1A56DDB8C(__src, a4);
    }
  }
}

void sub_1A573237C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v4;
  _QWORD __src[23];

  sub_1A5751974(a1, a2, a3);
  if (!v4)
  {
    sub_1A5751898();
    __src[0] = 0;
    __src[1] = 0;
    sub_1A57325EC((uint64_t)__src);
    sub_1A56DDB8C(__src, a4);
  }
}

void sub_1A5732414()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_4_52();
  sub_1A5730A20(v0, v1, v2, v3, v4, v5, v6, v7);
}

_QWORD *sub_1A573242C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  OUTLINED_FUNCTION_4_52();
  return sub_1A5730CEC(v0, v1, v2, v3, v4, v5, v6, v7);
}

void sub_1A5732444()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  OUTLINED_FUNCTION_4_52();
  sub_1A5730E78(v0, v1, v2, v3, v4, v5, v6, v7);
}

void sub_1A573245C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  void *v7;

  OUTLINED_FUNCTION_4_52();
  sub_1A5730F88(v0, v1, v2, v3, v4, v5, v6, v7);
}

void sub_1A5732474()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  OUTLINED_FUNCTION_4_52();
  sub_1A5731044(v0, v1, v2, v3);
}

void *sub_1A573248C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  OUTLINED_FUNCTION_4_52();
  return sub_1A5731138(v0, v1, v2, v3, v4, v5, v6, v7);
}

void sub_1A57324A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  OUTLINED_FUNCTION_4_52();
  sub_1A5731458(v0, v1, v2, 1, v3);
}

void sub_1A57324C0()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  OUTLINED_FUNCTION_4_52();
  sub_1A5731528(v0, v1, v2, v3, v4, v5, v6, v7);
}

void *sub_1A57324D8()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  OUTLINED_FUNCTION_4_52();
  return sub_1A57315DC(v0, v1, v2, v3, v4, v5, v6, v7);
}

void sub_1A57324F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  OUTLINED_FUNCTION_4_52();
  sub_1A57319A8(v0, v1, v2, v3, v4, v5, v6, v7);
}

_QWORD *sub_1A5732508()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  OUTLINED_FUNCTION_4_52();
  return sub_1A5731740(v0, v1, v2, v3);
}

void sub_1A5732520()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  OUTLINED_FUNCTION_4_52();
  sub_1A5731CB0(v0, v1, v2, v3);
}

uint64_t sub_1A5732538()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1A573255C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  OUTLINED_FUNCTION_4_52();
  sub_1A5731D58(v0, v1, v2, v3);
}

void *sub_1A5732574()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  OUTLINED_FUNCTION_4_52();
  return sub_1A5731E00(v0, v1, v2, v3, v4, v5, v6, v7);
}

void *sub_1A573258C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  OUTLINED_FUNCTION_4_52();
  return sub_1A5731F58(v0, v1, v2, v3, v4, v5, v6, v7);
}

void sub_1A57325A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  OUTLINED_FUNCTION_4_52();
  sub_1A573214C(v0, v1, v2, v3, v4, v5, v6, v7);
}

void sub_1A57325BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  OUTLINED_FUNCTION_4_52();
  sub_1A5732268(v0, v1, v2, v3);
}

void sub_1A57325D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  OUTLINED_FUNCTION_4_52();
  sub_1A573237C(v0, v1, v2, v3);
}

uint64_t sub_1A57325EC(uint64_t result)
{
  *(_WORD *)(result + 176) = *(_WORD *)(result + 176) & 0x1FF | 0xC000;
  return result;
}

uint64_t sub_1A5732600(uint64_t result)
{
  *(_WORD *)(result + 176) = *(_WORD *)(result + 176) & 0x1FF | 0x7000;
  return result;
}

uint64_t sub_1A5732614(uint64_t result)
{
  *(_WORD *)(result + 176) = *(_WORD *)(result + 176) & 0x1FF | 0x8000;
  return result;
}

uint64_t sub_1A5732628(uint64_t result)
{
  *(_WORD *)(result + 176) = *(_WORD *)(result + 176) & 0x1FF | 0xB000;
  return result;
}

void sub_1A573263C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_4_52();
  sub_1A5731C14(v0, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1A5732654(uint64_t result)
{
  *(_WORD *)(result + 176) = *(_WORD *)(result + 176) & 0x1FF | 0xA000;
  return result;
}

uint64_t sub_1A5732668(uint64_t result)
{
  *(_WORD *)(result + 176) = *(_WORD *)(result + 176) & 0x1FF | 0x9000;
  return result;
}

uint64_t sub_1A573267C(uint64_t result)
{
  *(_WORD *)(result + 176) = *(_WORD *)(result + 176) & 0x1FF | 0x6000;
  return result;
}

uint64_t sub_1A5732690(uint64_t result)
{
  *(_WORD *)(result + 176) = *(_WORD *)(result + 176) & 0x1FF | 0x3000;
  return result;
}

uint64_t sub_1A57326A4(uint64_t result)
{
  *(_WORD *)(result + 176) = *(_WORD *)(result + 176) & 0x1FF | 0x5000;
  return result;
}

void sub_1A57326B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  OUTLINED_FUNCTION_4_52();
  sub_1A5731458(v0, v1, v2, 0, v3);
}

_QWORD *sub_1A57326D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  OUTLINED_FUNCTION_4_52();
  return sub_1A5731368(v0, v1, v2, v3);
}

uint64_t sub_1A57326EC(uint64_t result)
{
  *(_WORD *)(result + 176) = *(_WORD *)(result + 176) & 0x1FF | 0x4000;
  return result;
}

uint64_t sub_1A5732700(uint64_t result)
{
  *(_WORD *)(result + 176) = *(_WORD *)(result + 176) & 0x1FF | 0x2000;
  return result;
}

uint64_t sub_1A5732714(uint64_t result)
{
  *(_WORD *)(result + 176) = *(_WORD *)(result + 176) & 0x1FF | 0x1000;
  return result;
}

uint64_t sub_1A5732728(uint64_t result)
{
  *(_WORD *)(result + 176) &= 0x1FFu;
  return result;
}

_QWORD *OUTLINED_FUNCTION_5_59(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  result[2] = v4;
  result[3] = v1;
  result[4] = v3;
  result[5] = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_6_53@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(result + 16) = a2;
  *(_QWORD *)(result + 24) = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_7_42()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_8_47@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(result + 16) = a2;
  *(_QWORD *)(result + 24) = v2;
  return result;
}

uint64_t sub_1A5732834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  _BYTE v10[16];
  void (*v11)(unint64_t, uint64_t, uint64_t);
  char *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[16];
  void (*v19)(unint64_t, uint64_t, uint64_t);
  char *v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v22 = a4;
  v23 = a5;
  v24 = a6;
  v25 = a7;
  v19 = sub_1A5732994;
  v20 = &v21;
  v14 = a4;
  v15 = a5;
  v16 = a6;
  v17 = a7;
  v11 = sub_1A5732ABC;
  v12 = &v13;
  result = sub_1A576FAD0(sub_1A5732AA8, v18, sub_1A5732AA8, v10, a1, a2, a3, 0xD000000000000020, 0x80000001A5A0F5E0, 57);
  if (v7)
    return v9;
  return result;
}

void sub_1A57328DC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1A57333D0(a1, a2, a3);
  if (!v3)
  {
    sub_1A5751898();
    sub_1A57333D0(a1, a2, a3);
  }
}

void sub_1A5732994(unint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A57328DC(a1, a2, a3);
}

void sub_1A57329B0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1A5751898();
  if (!v3)
  {
    sub_1A57333D0(a1, a2, a3);
    sub_1A5751898();
    sub_1A57333D0(a1, a2, a3);
  }
}

uint64_t sub_1A5732AA8@<X0>(uint64_t a1@<X8>)
{
  return sub_1A5732AD8(a1);
}

void sub_1A5732ABC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A57329B0(a1, a2, a3);
}

uint64_t sub_1A5732AD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  char v5;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2)
  {
    *(_QWORD *)a1 = result;
    *(_BYTE *)(a1 + 8) = v5 & 1;
  }
  return result;
}

unint64_t sub_1A5732B0C(uint64_t a1)
{
  uint64_t v1;

  v1 = a1;
  if ((unint64_t)(a1 - 0x100000000) < 0xFFFFFFFF00000001)
    v1 = 0;
  return v1 | ((unint64_t)((unint64_t)(a1 - 0x100000000) < 0xFFFFFFFF00000001) << 32);
}

void sub_1A5732B40()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[40];

  OUTLINED_FUNCTION_12_39();
  OUTLINED_FUNCTION_61_9();
  if (v0)
    goto LABEL_7;
  OUTLINED_FUNCTION_36_17(v1, v2, v3, v4, v5, v6, v7, v8, v26, v28);
  OUTLINED_FUNCTION_1_2();
  sub_1A56E6FE8((uint64_t)v35);
  if (!v9)
  {
    sub_1A56E9774();
    v19 = OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_1_84(v19, v20);
    *(_QWORD *)(v21 + 16) = v22;
    *(_QWORD *)(v21 + 24) = 0x80000001A5A0F5E0;
    OUTLINED_FUNCTION_11_20(v21, 76);
    OUTLINED_FUNCTION_2_4();
LABEL_7:
    OUTLINED_FUNCTION_2_4();
    OUTLINED_FUNCTION_28_20();
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_76_7();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_82();
  v10 = OUTLINED_FUNCTION_57_12();
  OUTLINED_FUNCTION_94();
  if (!v10)
  {
    OUTLINED_FUNCTION_16_32();
    OUTLINED_FUNCTION_41_12();
    OUTLINED_FUNCTION_242();
    OUTLINED_FUNCTION_22_32();
    OUTLINED_FUNCTION_94();
    sub_1A56E9774();
    v23 = OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_70_6(v23, v24);
    *(_QWORD *)(v25 + 16) = 0xD000000000000020;
    *(_QWORD *)(v25 + 24) = 0x80000001A5A0F5E0;
    OUTLINED_FUNCTION_11_20(v25, 78);
    goto LABEL_7;
  }
  v11 = OUTLINED_FUNCTION_94();
  OUTLINED_FUNCTION_34_21(v11, v12, v13, v14, v15, v16, v17, v18, v27, v29, v30, v31, v32, v33, v34);
  OUTLINED_FUNCTION_74_2();
  OUTLINED_FUNCTION_2_4();
LABEL_8:
  OUTLINED_FUNCTION_20_27();
}

void sub_1A5732CB8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  int v31;
  char v32;
  _BYTE v33[40];

  OUTLINED_FUNCTION_13_37();
  OUTLINED_FUNCTION_60_11();
  if (v0)
    goto LABEL_7;
  OUTLINED_FUNCTION_37_19(v1, v2, v3, v4, v5, v6, v7, v8, v22, v23, v25, v26, v27, v28);
  OUTLINED_FUNCTION_1_2();
  sub_1A56E6FE8((uint64_t)v33);
  if (!v9)
  {
    sub_1A56E9774();
    v15 = OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_1_84(v15, v16);
    *(_QWORD *)(v17 + 16) = v18;
    *(_QWORD *)(v17 + 24) = 0x80000001A5A0F5E0;
    OUTLINED_FUNCTION_11_20(v17, 76);
    OUTLINED_FUNCTION_2_4();
LABEL_7:
    OUTLINED_FUNCTION_2_4();
    OUTLINED_FUNCTION_29_20();
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_77_6();
  OUTLINED_FUNCTION_49_8();
  OUTLINED_FUNCTION_82();
  v10 = OUTLINED_FUNCTION_48_10();
  OUTLINED_FUNCTION_94();
  if (!v10)
  {
    OUTLINED_FUNCTION_16_32();
    OUTLINED_FUNCTION_41_12();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_21_32();
    OUTLINED_FUNCTION_94();
    sub_1A56E9774();
    v19 = OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_70_6(v19, v20);
    *(_QWORD *)(v21 + 16) = 0xD000000000000020;
    *(_QWORD *)(v21 + 24) = 0x80000001A5A0F5E0;
    OUTLINED_FUNCTION_11_20(v21, 78);
    goto LABEL_7;
  }
  v11 = OUTLINED_FUNCTION_94();
  OUTLINED_FUNCTION_23_26(v11, v12, v13, v14);
  sub_1A55113D8(v10);
  OUTLINED_FUNCTION_84_1();
  OUTLINED_FUNCTION_2_4();
  *(_OWORD *)v24 = v29;
  *(_OWORD *)(v24 + 16) = v30;
  *(_BYTE *)(v24 + 36) = v32;
  *(_DWORD *)(v24 + 32) = v31;
LABEL_8:
  OUTLINED_FUNCTION_18_32();
}

void sub_1A5732E54()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  char v31;
  _BYTE v32[40];

  OUTLINED_FUNCTION_13_37();
  OUTLINED_FUNCTION_60_11();
  if (v0)
    goto LABEL_7;
  OUTLINED_FUNCTION_37_19(v1, v2, v3, v4, v5, v6, v7, v8, v22, v23, v25, v26, v27, v28);
  OUTLINED_FUNCTION_1_2();
  sub_1A56E6FE8((uint64_t)v32);
  if (!v9)
  {
    sub_1A56E9774();
    v15 = OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_1_84(v15, v16);
    *(_QWORD *)(v17 + 16) = v18;
    *(_QWORD *)(v17 + 24) = 0x80000001A5A0F5E0;
    OUTLINED_FUNCTION_11_20(v17, 76);
    OUTLINED_FUNCTION_2_4();
LABEL_7:
    OUTLINED_FUNCTION_2_4();
    OUTLINED_FUNCTION_29_20();
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_77_6();
  OUTLINED_FUNCTION_49_8();
  OUTLINED_FUNCTION_82();
  v10 = OUTLINED_FUNCTION_48_10();
  OUTLINED_FUNCTION_94();
  if (!v10)
  {
    OUTLINED_FUNCTION_16_32();
    OUTLINED_FUNCTION_41_12();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_21_32();
    OUTLINED_FUNCTION_94();
    sub_1A56E9774();
    v19 = OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_70_6(v19, v20);
    *(_QWORD *)(v21 + 16) = 0xD000000000000020;
    *(_QWORD *)(v21 + 24) = 0x80000001A5A0F5E0;
    OUTLINED_FUNCTION_11_20(v21, 78);
    goto LABEL_7;
  }
  v11 = OUTLINED_FUNCTION_94();
  OUTLINED_FUNCTION_23_26(v11, v12, v13, v14);
  sub_1A55113D8(v10);
  OUTLINED_FUNCTION_84_1();
  OUTLINED_FUNCTION_2_4();
  *(_OWORD *)v24 = v29;
  *(_OWORD *)(v24 + 16) = v30;
  *(_BYTE *)(v24 + 32) = v31;
LABEL_8:
  OUTLINED_FUNCTION_18_32();
}

uint64_t sub_1A5732FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  int v11;
  __int16 v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t *__return_ptr, uint64_t, unint64_t *);
  char *v22;
  _QWORD *v23;
  int v25;
  uint64_t v26;
  __int16 v27;
  char v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _BYTE v32[40];

  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_DWORD *)(a1 + 16);
  v12 = *(_WORD *)(a1 + 20);
  v28 = *(_BYTE *)(a1 + 22);
  swift_retain();
  sub_1A5752938(a1, a2, a3);
  if (v4)
  {
    v16 = v28;
  }
  else
  {
    v27 = v12;
    ByteBufferView.init(_:)(v13, v14, v15 & 0xFFFFFFFFFFFFFFLL, (uint64_t)v32);
    swift_retain();
    sub_1A56E6FE8((uint64_t)v32);
    if (v17)
    {
      v26 = v9;
      v25 = v11;
      v18 = sub_1A594B4B4();
      v20 = v19;
      swift_bridgeObjectRelease();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v21 = (void (*)(uint64_t *__return_ptr, uint64_t, unint64_t *))sub_1A5738078(v18, v20, a4);
      swift_bridgeObjectRelease();
      if (v21)
      {
        swift_bridgeObjectRelease();
        v29 = a2;
        v30 = a3;
        v21(&v31, a1, &v29);
        sub_1A55113D8((uint64_t)v21);
        swift_release();
        swift_release();
        return v31;
      }
      swift_release();
      sub_1A594C720();
      swift_bridgeObjectRelease();
      v29 = 0xD000000000000017;
      v30 = 0x80000001A5A0FAF0;
      sub_1A594B5F8();
      swift_bridgeObjectRelease();
      sub_1A56E9774();
      swift_allocError();
      *v23 = 0xD000000000000017;
      v23[1] = 0x80000001A5A0FAF0;
      v23[2] = 0xD000000000000020;
      v23[3] = 0x80000001A5A0F5E0;
      v23[4] = 78;
      swift_willThrow();
      v11 = v25;
      v12 = v27;
      v16 = v28;
      v9 = v26;
    }
    else
    {
      sub_1A56E9774();
      swift_allocError();
      strcpy(v22, "Invalid UTF8");
      v22[13] = 0;
      *((_WORD *)v22 + 7) = -5120;
      *((_QWORD *)v22 + 2) = 0xD000000000000020;
      *((_QWORD *)v22 + 3) = 0x80000001A5A0F5E0;
      *((_QWORD *)v22 + 4) = 76;
      swift_willThrow();
      swift_release();
      v16 = v28;
    }
  }
  swift_release();
  *(_QWORD *)a1 = v9;
  *(_QWORD *)(a1 + 8) = v10;
  *(_DWORD *)(a1 + 16) = v11;
  *(_WORD *)(a1 + 20) = v12;
  *(_BYTE *)(a1 + 22) = v16;
  return swift_willThrow();
}

uint64_t sub_1A57332C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A573334C(a1, a2, a3, a4, a5, a6, a7, (uint64_t)sub_1A57388E8, (uint64_t)sub_1A5738908, (uint64_t)sub_1A574FFC8, (uint64_t (*)(uint64_t, _BYTE *, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t))sub_1A576F918);
}

uint64_t sub_1A5733308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A573334C(a1, a2, a3, a4, a5, a6, a7, (uint64_t)sub_1A5738484, (uint64_t)sub_1A57384D8, (uint64_t)sub_1A57384A4, (uint64_t (*)(uint64_t, _BYTE *, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t))sub_1A576F918);
}

uint64_t sub_1A573334C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t (*a11)(uint64_t, _BYTE *, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t))
{
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  _BYTE v14[16];
  uint64_t v15;
  char *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v18 = a4;
  v19 = a5;
  v20 = a6;
  v21 = a7;
  v15 = a8;
  v16 = &v17;
  result = a11(a9, v14, a10, 0, a1, a2, a3, 0xD000000000000020, 0x80000001A5A0F5E0, 122);
  if (v11)
    return v13 & 0xFFFFFFFFFFLL;
  return result;
}

unint64_t sub_1A57333D0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t result;
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;

  result = sub_1A5761038(a1, a2, a3, 0);
  if (!v3)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      sub_1A56E9774();
      OUTLINED_FUNCTION_21();
      *v5 = 0xD000000000000011;
      v6 = 0x80000001A5A0F840;
      v7 = 167;
    }
    else
    {
      if (result - 0x100000000 >= 0xFFFFFFFF00000001)
        return result;
      sub_1A56E9774();
      OUTLINED_FUNCTION_21();
      *v5 = 0xD00000000000001DLL;
      v6 = 0x80000001A5A0FB10;
      v7 = 76;
    }
    v5[1] = v6;
    v5[2] = 0xD000000000000020;
    return OUTLINED_FUNCTION_42_11((uint64_t)v5, v7);
  }
  return result;
}

unint64_t sub_1A5733498(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A57334D0(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(void))sub_1A5738948);
}

unint64_t sub_1A57334B4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A57334D0(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(void))sub_1A5732B0C);
}

unint64_t sub_1A57334D0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(void))
{
  uint64_t v8;
  unint64_t result;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;

  result = sub_1A5761038(a1, a2, a3, 0);
  if (!v8)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      sub_1A56E9774();
      OUTLINED_FUNCTION_21();
      *v11 = 0xD000000000000011;
      v12 = 0x80000001A5A0F840;
      v13 = 167;
    }
    else
    {
      result = a8();
      if ((result & 0x100000000) == 0)
        return result;
      sub_1A56E9774();
      OUTLINED_FUNCTION_21();
      *v11 = 0xD00000000000001DLL;
      v12 = 0x80000001A5A0FB10;
      v13 = 76;
    }
    v11[1] = v12;
    v11[2] = 0xD000000000000020;
    return OUTLINED_FUNCTION_42_11((uint64_t)v11, v13);
  }
  return result;
}

void sub_1A5733598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t inited;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  __n128 v28;
  __n128 v29;
  __n128 v30;
  __n128 v31;
  __n128 v32;
  __n128 v33;
  unint64_t v34;
  uint64_t v35;

  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796210);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A59AC280;
  v7 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_2_74(v7);
  v8 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v8 + 16) = sub_1A5738728;
  *(_QWORD *)(v8 + 24) = v3;
  *(_QWORD *)(inited + 32) = sub_1A5738740;
  *(_QWORD *)(inited + 40) = v8;
  v9 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_2_74(v9);
  v10 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v10 + 16) = sub_1A5738758;
  *(_QWORD *)(v10 + 24) = v3;
  *(_QWORD *)(inited + 48) = sub_1A5738934;
  *(_QWORD *)(inited + 56) = v10;
  v11 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_2_74(v11);
  v12 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v12 + 16) = sub_1A5738770;
  *(_QWORD *)(v12 + 24) = v3;
  *(_QWORD *)(inited + 64) = sub_1A5738934;
  *(_QWORD *)(inited + 72) = v12;
  v13 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_2_74(v13);
  v14 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v14 + 16) = sub_1A5738788;
  *(_QWORD *)(v14 + 24) = v3;
  *(_QWORD *)(inited + 80) = sub_1A5738934;
  *(_QWORD *)(inited + 88) = v14;
  v15 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_2_74(v15);
  v16 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v16 + 16) = sub_1A57387A0;
  *(_QWORD *)(v16 + 24) = v3;
  *(_QWORD *)(inited + 96) = sub_1A5738934;
  *(_QWORD *)(inited + 104) = v16;
  v17 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_2_74(v17);
  v18 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v18 + 16) = sub_1A57387B8;
  *(_QWORD *)(v18 + 24) = v3;
  *(_QWORD *)(inited + 112) = sub_1A5738934;
  *(_QWORD *)(inited + 120) = v18;
  v19 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_2_74(v19);
  v20 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v20 + 16) = sub_1A57387D8;
  *(_QWORD *)(v20 + 24) = v3;
  *(_QWORD *)(inited + 128) = sub_1A5738934;
  *(_QWORD *)(inited + 136) = v20;
  v21 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_2_74(v21);
  v22 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v22 + 16) = sub_1A57387F8;
  *(_QWORD *)(v22 + 24) = v3;
  *(_QWORD *)(inited + 144) = sub_1A5738934;
  *(_QWORD *)(inited + 152) = v22;
  v23 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_2_74(v23);
  v24 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v24 + 16) = sub_1A5738810;
  *(_QWORD *)(v24 + 24) = v3;
  *(_QWORD *)(inited + 160) = sub_1A5738934;
  *(_QWORD *)(inited + 168) = v24;
  v25 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_2_74(v25);
  v26 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v26 + 16) = sub_1A5738828;
  *(_QWORD *)(v26 + 24) = v3;
  *(_QWORD *)(inited + 176) = sub_1A5738934;
  *(_QWORD *)(inited + 184) = v26;
  swift_retain_n();
  sub_1A5770CB4(inited, a1, a2, a3, 0xD000000000000020, 0x80000001A5A0F5E0, 160);
  swift_setDeallocating();
  sub_1A5774244();
  if (!v35)
    OUTLINED_FUNCTION_55_11(v34, v28, v29, v30, v31, v32, v33);
}

void sub_1A5733900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1A5733958(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))sub_1A56F7BF8, 94);
}

void sub_1A573392C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1A5733958(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))sub_1A56F709C, 124);
}

void sub_1A5733958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t), uint64_t a9)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;

  OUTLINED_FUNCTION_81_6();
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v18 = v17;
  sub_1A574052C(v15, v13, v11, v19);
  if (!v9)
  {
    v37 = v20;
    v38 = v21;
    sub_1A5751974(v16, v14, v12);
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_78_7();
    v22 = sub_1A5759C1C();
    v24 = v23;
    v25 = a8;
    v27 = v26;
    OUTLINED_FUNCTION_82();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A56E9CF0(v22);
    v28 = v25(v37, v38, v22, v24, v27);
    if (v31 == -1)
    {
      OUTLINED_FUNCTION_41_12();
      swift_bridgeObjectRelease();
      sub_1A594B5F8();
      OUTLINED_FUNCTION_94();
      sub_1A56E9774();
      OUTLINED_FUNCTION_21();
      *v36 = 0xD000000000000017;
      v36[1] = 0x80000001A5A0FAD0;
      v36[2] = 0xD000000000000020;
      v36[3] = 0x80000001A5A0F5E0;
      v36[4] = a9;
      swift_willThrow();
      sub_1A568380C(v22);
      swift_bridgeObjectRelease();
    }
    else
    {
      v32 = v28;
      v33 = v29;
      v34 = v30;
      v35 = v31;
      sub_1A568380C(v22);
      OUTLINED_FUNCTION_94();
      OUTLINED_FUNCTION_9_2();
      *(_QWORD *)v18 = v32;
      *(_QWORD *)(v18 + 8) = v33;
      *(_QWORD *)(v18 + 16) = v34;
      *(_BYTE *)(v18 + 24) = v35;
    }
  }
}

double sub_1A5733BC0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  double result;

  swift_retain();
  sub_1A5759B40();
  if (!v1)
  {
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 24) = v6;
    result = 0.0;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 80) = 0u;
    *(_OWORD *)(a1 + 89) = 0u;
  }
  return result;
}

double sub_1A5733C58@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  double result;
  uint64_t v7;
  uint64_t v8;
  char v9;
  unint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v15[5];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  result = sub_1A572CCF4(a1, a2, a3, (uint64_t)v15);
  if (!v4)
  {
    v7 = v16;
    v8 = v18;
    v9 = v19;
    v10 = v17 | 0x8000000000000000;
    result = *(double *)v15;
    v11 = v15[1];
    v12 = v15[2];
    v13 = v15[3];
    v14 = v15[4];
    *(_OWORD *)a4 = v15[0];
    *(_OWORD *)(a4 + 16) = v11;
    *(_OWORD *)(a4 + 32) = v12;
    *(_OWORD *)(a4 + 48) = v13;
    *(_OWORD *)(a4 + 64) = v14;
    *(_QWORD *)(a4 + 80) = v7;
    *(_QWORD *)(a4 + 88) = v10;
    *(_QWORD *)(a4 + 96) = v8;
    *(_BYTE *)(a4 + 104) = v9;
  }
  return result;
}

double sub_1A5733CBC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  double result;

  v6 = sub_1A5730424(a1, a2, a3);
  if (!v4)
  {
    *(_QWORD *)a4 = v6;
    *(_QWORD *)(a4 + 8) = v7 & 0xFFFFFFFFFFLL;
    result = 0.0;
    *(_OWORD *)(a4 + 16) = 0u;
    *(_OWORD *)(a4 + 32) = 0u;
    *(_OWORD *)(a4 + 48) = 0u;
    *(_OWORD *)(a4 + 64) = 0u;
    *(_OWORD *)(a4 + 80) = 0u;
    *(_QWORD *)(a4 + 96) = 0;
    *(_BYTE *)(a4 + 104) = 2;
  }
  return result;
}

double sub_1A5733D04@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  double result;

  swift_retain();
  sub_1A5759CCC();
  if (!v1)
  {
    *(_QWORD *)a1 = v3;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    result = -0.0;
    *(_OWORD *)(a1 + 88) = xmmword_1A59AC070;
    *(_BYTE *)(a1 + 104) = 2;
  }
  return result;
}

double sub_1A5733DB0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double result;

  swift_retain();
  v17 = sub_1A57565B0(a1, a2, a3, a4, a5, a6, a7);
  if (!v8)
  {
    *(_QWORD *)a8 = v17;
    *(_QWORD *)(a8 + 8) = v18;
    *(_QWORD *)(a8 + 16) = v19;
    *(_OWORD *)(a8 + 24) = 0u;
    *(_OWORD *)(a8 + 40) = 0u;
    *(_OWORD *)(a8 + 56) = 0u;
    *(_OWORD *)(a8 + 72) = 0u;
    result = -0.0;
    *(_OWORD *)(a8 + 88) = xmmword_1A59AC070;
    *(_BYTE *)(a8 + 104) = 4;
  }
  return result;
}

double sub_1A5733E5C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v17;
  double result;

  swift_retain();
  v17 = sub_1A5759E34(a1, a2, a3, a4, a5, a6, a7);
  if (!v8)
  {
    *(_QWORD *)a8 = v17;
    result = 0.0;
    *(_OWORD *)(a8 + 8) = 0u;
    *(_OWORD *)(a8 + 24) = 0u;
    *(_OWORD *)(a8 + 40) = 0u;
    *(_OWORD *)(a8 + 56) = 0u;
    *(_OWORD *)(a8 + 72) = 0u;
    *(_OWORD *)(a8 + 88) = 0u;
    *(_BYTE *)(a8 + 104) = 4;
  }
  return result;
}

double sub_1A5733F00@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;
  __int128 v4;
  __int128 v5;
  unsigned int v6;

  sub_1A5741118();
  if (!v1)
  {
    *(_OWORD *)a1 = v4;
    *(_OWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 32) = v6;
    result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_BYTE *)(a1 + 104) = 8;
  }
  return result;
}

_QWORD *sub_1A5733F5C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, _QWORD *(*a3)(_QWORD *__return_ptr, uint64_t, _QWORD, _QWORD)@<X2>, void *a4@<X8>)
{
  uint64_t v4;
  _QWORD *result;
  _QWORD v7[14];

  result = a3(v7, a1, *a2, a2[1]);
  if (!v4)
    return sub_1A56EFC74(v7, a4);
  return result;
}

void sub_1A5733FB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(__n128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8;
  __n128 v17[6];
  unint64_t v18;

  OUTLINED_FUNCTION_34_19();
  a8(v17, a1, a2, a3, a4, a5, a6, a7);
  if (!v8)
    OUTLINED_FUNCTION_55_11(v18, v17[0], v17[1], v17[2], v17[3], v17[4], v17[5]);
}

void sub_1A5734058(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, int a7@<W6>, unint64_t *a8@<X8>)
{
  uint64_t v8;
  int v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  BOOL v35;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  __int16 v64;
  void *v65;
  int v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _BYTE v77[24];
  uint64_t v78;
  _BYTE v79[48];
  uint64_t v80;

  OUTLINED_FUNCTION_34_19();
  v18 = sub_1A575F608(a1, a2, a3, a4, a5, a6, a7, v17, v52, v53, v55, v57, v59, v61, v63, v65, v67, v69, v70,
          v71,
          v72,
          v73,
          v74,
          v75);
  if (!v8)
  {
    v19 = v18;
    sub_1A575DF00();
    if (__OFADD__(a2, 1))
    {
LABEL_34:
      __break(1u);
    }
    else
    {
      if (a2 + 1 >= a3)
      {
        sub_1A5718F9C();
        OUTLINED_FUNCTION_21();
        *v27 = a3;
        goto LABEL_7;
      }
      v20 = *(_QWORD *)a1;
      v21 = *(unsigned int *)(a1 + 12);
      v22 = *(unsigned int *)(a1 + 16);
      v23 = *(unsigned __int16 *)(a1 + 20);
      v24 = *(unsigned __int8 *)(a1 + 22);
      v80 = *(unsigned int *)(a1 + 8);
      v66 = v22;
      v68 = v21;
      v62 = v24;
      v64 = v23;
      v58 = v22 | (v23 << 32) | (v24 << 48);
      v60 = v80 | (v21 << 32);
      ByteBufferView.init(_:)(v20, v60, v58, (uint64_t)&v72);
      v26 = v75;
      v25 = v76;
      if (v75 == v76)
      {
LABEL_5:
        OUTLINED_FUNCTION_87();
        sub_1A553E5DC((uint64_t)&v72);
        sub_1A571EA80();
        OUTLINED_FUNCTION_21();
        swift_willThrow();
        swift_release();
        *(_QWORD *)a1 = v20;
        *(_DWORD *)(a1 + 8) = v80;
        *(_DWORD *)(a1 + 12) = v68;
        *(_DWORD *)(a1 + 16) = v66;
        *(_WORD *)(a1 + 20) = v64;
        *(_BYTE *)(a1 + 22) = v62;
LABEL_7:
        OUTLINED_FUNCTION_80_4();
LABEL_8:
        sub_1A568380C(v19);
        return;
      }
      v56 = v20;
      v28 = v73;
      v29 = (HIDWORD(v73) - v73);
      if (HIDWORD(v73) >= v73)
      {
        v30 = v72;
        v54 = BYTE6(v74) | ((unint64_t)WORD2(v74) << 8);
        swift_beginAccess();
        v31 = *(_QWORD *)(v30 + 24);
        v20 = v56;
        v32 = v31 + v54 + v28;
        while (1)
        {
          if (v26 >= v25)
          {
            __break(1u);
LABEL_31:
            __break(1u);
LABEL_32:
            __break(1u);
LABEL_33:
            __break(1u);
            goto LABEL_34;
          }
          v33 = v26 - v28;
          if (__OFSUB__(v26, v28))
            goto LABEL_31;
          if (v33 < 0)
            goto LABEL_32;
          if (v33 >= v29)
            goto LABEL_33;
          v34 = *(unsigned __int8 *)(v32 + v33);
          v35 = v34 == 13 || v34 == 10;
          if (v35 || (char)v34 < 1)
            break;
          if (v25 == ++v26)
            goto LABEL_5;
        }
        OUTLINED_FUNCTION_87();
        sub_1A553E5DC((uint64_t)&v72);
        ByteBufferView.init(_:)(v56, v60, v58, (uint64_t)v77);
        OUTLINED_FUNCTION_30();
        sub_1A553E5DC((uint64_t)v77);
        if (__OFSUB__(v26, v78))
          goto LABEL_36;
        v37 = ByteBuffer.readSlice(length:)((int)v26 - (int)v78);
        if (v37)
        {
          v40 = v37;
          v41 = v38;
          v42 = v39;
          swift_release();
          ByteBufferView.init(_:)(v40, v41, v42 & 0xFFFFFFFFFFFFFFLL, (uint64_t)v79);
          swift_retain();
          v43 = sub_1A56E6FE8((uint64_t)v79);
          if (v44)
          {
            v45 = v43;
            v46 = v44;
            OUTLINED_FUNCTION_17_4();
            *a8 = v19;
            a8[1] = v45;
            a8[2] = v46;
            return;
          }
          sub_1A56E9774();
          v47 = OUTLINED_FUNCTION_21();
          OUTLINED_FUNCTION_1_84(v47, v48);
          OUTLINED_FUNCTION_15_35(v49, v50);
          OUTLINED_FUNCTION_11_20(v51, 194);
          OUTLINED_FUNCTION_17_4();
          goto LABEL_8;
        }
LABEL_37:
        __break(1u);
        return;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
}

uint64_t sub_1A5734364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t inited;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;

  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B2B0);
  v12 = OUTLINED_FUNCTION_20_1();
  *(_OWORD *)(v12 + 16) = xmmword_1A59AC2A0;
  *(_QWORD *)(v12 + 32) = 0x5452454C41;
  *(_QWORD *)(v12 + 40) = 0xE500000000000000;
  *(_QWORD *)(v12 + 48) = sub_1A5735E1C;
  *(_QWORD *)(v12 + 56) = 0;
  strcpy((char *)(v12 + 64), "ALREADYEXISTS");
  *(_WORD *)(v12 + 78) = -4864;
  *(_QWORD *)(v12 + 80) = sub_1A5735E4C;
  *(_QWORD *)(v12 + 88) = 0;
  v13 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_4_58(v13);
  v14 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v14 + 16) = sub_1A57380EC;
  *(_QWORD *)(v14 + 24) = v7;
  *(_QWORD *)(v12 + 96) = 0x4955444E45505041;
  *(_QWORD *)(v12 + 104) = 0xE900000000000044;
  *(_QWORD *)(v12 + 112) = sub_1A572B5B8;
  *(_QWORD *)(v12 + 120) = v14;
  OUTLINED_FUNCTION_66_8();
  *(_QWORD *)(v12 + 128) = v15;
  *(_QWORD *)(v12 + 136) = v16;
  *(_QWORD *)(v12 + 144) = sub_1A5735E7C;
  *(_QWORD *)(v12 + 152) = 0;
  OUTLINED_FUNCTION_66_8();
  *(_QWORD *)(v12 + 160) = v17;
  *(_QWORD *)(v12 + 168) = v18;
  *(_QWORD *)(v12 + 176) = sub_1A5735EAC;
  *(_QWORD *)(v12 + 184) = 0;
  v19 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_4_58(v19);
  v20 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v20 + 16) = sub_1A573810C;
  *(_QWORD *)(v20 + 24) = v7;
  *(_QWORD *)(v12 + 192) = 0x5352414843444142;
  *(_QWORD *)(v12 + 200) = 0xEA00000000005445;
  *(_QWORD *)(v12 + 208) = sub_1A572B5B8;
  *(_QWORD *)(v12 + 216) = v20;
  *(_QWORD *)(v12 + 224) = 0x544F4E4E4143;
  *(_QWORD *)(v12 + 232) = 0xE600000000000000;
  *(_QWORD *)(v12 + 240) = sub_1A5735EDC;
  *(_QWORD *)(v12 + 248) = 0;
  v21 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_4_58(v21);
  v22 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v22 + 16) = sub_1A5738124;
  *(_QWORD *)(v22 + 24) = v7;
  *(_QWORD *)(v12 + 256) = 0x494C494241504143;
  *(_QWORD *)(v12 + 264) = 0xEA00000000005954;
  *(_QWORD *)(v12 + 272) = sub_1A572B5B8;
  *(_QWORD *)(v12 + 280) = v22;
  *(_QWORD *)(v12 + 288) = 0x5542544E45494C43;
  *(_QWORD *)(v12 + 296) = 0xE900000000000047;
  *(_QWORD *)(v12 + 304) = sub_1A5735F0C;
  *(_QWORD *)(v12 + 312) = 0;
  *(_QWORD *)(v12 + 320) = 0x4445534F4C43;
  *(_QWORD *)(v12 + 328) = 0xE600000000000000;
  *(_QWORD *)(v12 + 336) = sub_1A5735F3C;
  *(_QWORD *)(v12 + 344) = 0;
  *(_QWORD *)(v12 + 352) = 0xD000000000000011;
  *(_QWORD *)(v12 + 360) = 0x80000001A5A0F680;
  *(_QWORD *)(v12 + 368) = sub_1A5735F6C;
  *(_QWORD *)(v12 + 376) = 0;
  strcpy((char *)(v12 + 384), "CONTACTADMIN");
  *(_BYTE *)(v12 + 397) = 0;
  *(_WORD *)(v12 + 398) = -5120;
  *(_QWORD *)(v12 + 400) = sub_1A5735F9C;
  *(_QWORD *)(v12 + 408) = 0;
  v23 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_4_58(v23);
  v24 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v24 + 16) = sub_1A573813C;
  *(_QWORD *)(v24 + 24) = v7;
  *(_QWORD *)(v12 + 416) = 0x44495559504F43;
  *(_QWORD *)(v12 + 424) = 0xE700000000000000;
  *(_QWORD *)(v12 + 432) = sub_1A572B5B8;
  *(_QWORD *)(v12 + 440) = v24;
  *(_QWORD *)(v12 + 448) = 0x4954505552524F43;
  *(_QWORD *)(v12 + 456) = 0xEA00000000004E4FLL;
  *(_QWORD *)(v12 + 464) = sub_1A5735FCC;
  *(_QWORD *)(v12 + 472) = 0;
  *(_QWORD *)(v12 + 480) = 0x44455249505845;
  *(_QWORD *)(v12 + 488) = 0xE700000000000000;
  *(_QWORD *)(v12 + 496) = sub_1A5735FFC;
  *(_QWORD *)(v12 + 504) = 0;
  strcpy((char *)(v12 + 512), "EXPUNGEISSUED");
  *(_WORD *)(v12 + 526) = -4864;
  *(_QWORD *)(v12 + 528) = sub_1A573602C;
  *(_QWORD *)(v12 + 536) = 0;
  v25 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_4_58(v25);
  v26 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v26 + 16) = sub_1A573815C;
  *(_QWORD *)(v26 + 24) = v7;
  strcpy((char *)(v12 + 544), "HIGHESTMODSEQ");
  *(_WORD *)(v12 + 558) = -4864;
  *(_QWORD *)(v12 + 560) = sub_1A572B5B8;
  *(_QWORD *)(v12 + 568) = v26;
  *(_QWORD *)(v12 + 576) = 0x4553554E49;
  *(_QWORD *)(v12 + 584) = 0xE500000000000000;
  *(_QWORD *)(v12 + 592) = sub_1A573605C;
  *(_QWORD *)(v12 + 600) = 0;
  *(_QWORD *)(v12 + 608) = 0x54494D494CLL;
  *(_QWORD *)(v12 + 616) = 0xE500000000000000;
  *(_QWORD *)(v12 + 624) = sub_1A573608C;
  *(_QWORD *)(v12 + 632) = 0;
  v27 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_4_58(v27);
  v28 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v28 + 16) = sub_1A5738174;
  *(_QWORD *)(v28 + 24) = v7;
  *(_QWORD *)(v12 + 640) = 0x415441444154454DLL;
  *(_QWORD *)(v12 + 648) = 0xE800000000000000;
  *(_QWORD *)(v12 + 656) = sub_1A572B5B8;
  *(_QWORD *)(v12 + 664) = v28;
  v29 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_4_58(v29);
  v30 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v30 + 16) = sub_1A573818C;
  *(_QWORD *)(v30 + 24) = v7;
  *(_QWORD *)(v12 + 672) = 0x4445494649444F4DLL;
  *(_QWORD *)(v12 + 680) = 0xE800000000000000;
  *(_QWORD *)(v12 + 688) = sub_1A572B5B8;
  *(_QWORD *)(v12 + 696) = v30;
  v31 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_4_58(v31);
  v32 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v32 + 16) = sub_1A57381A4;
  *(_QWORD *)(v32 + 24) = v7;
  *(_QWORD *)(v12 + 704) = 0x43415053454D414ELL;
  *(_QWORD *)(v12 + 712) = 0xE900000000000045;
  *(_QWORD *)(v12 + 720) = sub_1A572B5B8;
  *(_QWORD *)(v12 + 728) = v32;
  *(_QWORD *)(v12 + 736) = 0x514553444F4D4F4ELL;
  *(_QWORD *)(v12 + 744) = 0xE800000000000000;
  *(_QWORD *)(v12 + 752) = sub_1A57360BC;
  *(_QWORD *)(v12 + 760) = 0;
  *(_QWORD *)(v12 + 768) = 0x54534958454E4F4ELL;
  *(_QWORD *)(v12 + 776) = 0xEB00000000544E45;
  *(_QWORD *)(v12 + 784) = sub_1A57360EC;
  *(_QWORD *)(v12 + 792) = 0;
  *(_QWORD *)(v12 + 800) = 0x4D5245504F4ELL;
  *(_QWORD *)(v12 + 808) = 0xE600000000000000;
  *(_QWORD *)(v12 + 816) = sub_1A573611C;
  *(_QWORD *)(v12 + 824) = 0;
  *(_QWORD *)(v12 + 832) = 0x4445564153544F4ELL;
  *(_QWORD *)(v12 + 840) = 0xE800000000000000;
  *(_QWORD *)(v12 + 848) = sub_1A573614C;
  *(_QWORD *)(v12 + 856) = 0;
  *(_QWORD *)(v12 + 864) = 0x544F55515245564FLL;
  *(_QWORD *)(v12 + 872) = 0xE900000000000041;
  *(_QWORD *)(v12 + 880) = sub_1A573617C;
  *(_QWORD *)(v12 + 888) = 0;
  *(_QWORD *)(v12 + 896) = 0x4553524150;
  *(_QWORD *)(v12 + 904) = 0xE500000000000000;
  *(_QWORD *)(v12 + 912) = sub_1A57361AC;
  *(_QWORD *)(v12 + 920) = 0;
  v33 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_4_58(v33);
  v34 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v34 + 16) = sub_1A57381BC;
  *(_QWORD *)(v34 + 24) = v7;
  strcpy((char *)(v12 + 928), "PERMANENTFLAGS");
  *(_BYTE *)(v12 + 943) = -18;
  *(_QWORD *)(v12 + 944) = sub_1A572B5B8;
  *(_QWORD *)(v12 + 952) = v34;
  *(_QWORD *)(v12 + 960) = 0x5259434156495250;
  *(_QWORD *)(v12 + 968) = 0xEF44455249555145;
  *(_QWORD *)(v12 + 976) = sub_1A57361DC;
  *(_QWORD *)(v12 + 984) = 0;
  *(_QWORD *)(v12 + 992) = 0x4C4E4F2D44414552;
  *(_QWORD *)(v12 + 1000) = 0xE900000000000059;
  *(_QWORD *)(v12 + 1008) = sub_1A573620C;
  *(_QWORD *)(v12 + 1016) = 0;
  *(_QWORD *)(v12 + 1024) = 0x4952572D44414552;
  *(_QWORD *)(v12 + 1032) = 0xEA00000000004554;
  *(_QWORD *)(v12 + 1040) = sub_1A573623C;
  *(_QWORD *)(v12 + 1048) = 0;
  v35 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_4_58(v35);
  v36 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v36 + 16) = sub_1A57381D4;
  *(_QWORD *)(v36 + 24) = v7;
  *(_QWORD *)(v12 + 1056) = 0x4C41525245464552;
  *(_QWORD *)(v12 + 1064) = 0xE800000000000000;
  *(_QWORD *)(v12 + 1072) = sub_1A572B5B8;
  *(_QWORD *)(v12 + 1080) = v36;
  *(_QWORD *)(v12 + 1088) = 0x5542524556524553;
  *(_QWORD *)(v12 + 1096) = 0xE900000000000047;
  *(_QWORD *)(v12 + 1104) = sub_1A573626C;
  *(_QWORD *)(v12 + 1112) = 0;
  *(_QWORD *)(v12 + 1120) = 0x5441455243595254;
  *(_QWORD *)(v12 + 1128) = 0xE900000000000045;
  *(_QWORD *)(v12 + 1136) = sub_1A573629C;
  *(_QWORD *)(v12 + 1144) = 0;
  v37 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_4_58(v37);
  v38 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v38 + 16) = sub_1A57381EC;
  *(_QWORD *)(v38 + 24) = v7;
  *(_QWORD *)(v12 + 1152) = 0x5458454E444955;
  *(_QWORD *)(v12 + 1160) = 0xE700000000000000;
  *(_QWORD *)(v12 + 1168) = sub_1A572B5B8;
  *(_QWORD *)(v12 + 1176) = v38;
  strcpy((char *)(v12 + 1184), "UIDNOTSTICKY");
  *(_BYTE *)(v12 + 1197) = 0;
  *(_WORD *)(v12 + 1198) = -5120;
  *(_QWORD *)(v12 + 1200) = sub_1A57362CC;
  *(_QWORD *)(v12 + 1208) = 0;
  *(_QWORD *)(v12 + 1216) = 0x4955514552444955;
  *(_QWORD *)(v12 + 1224) = 0xEB00000000444552;
  *(_QWORD *)(v12 + 1232) = sub_1A57362FC;
  *(_QWORD *)(v12 + 1240) = 0;
  v39 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_4_58(v39);
  v40 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v40 + 16) = sub_1A5738204;
  *(_QWORD *)(v40 + 24) = v7;
  *(_QWORD *)(v12 + 1248) = 0x44494C4156444955;
  *(_QWORD *)(v12 + 1256) = 0xEB00000000595449;
  *(_QWORD *)(v12 + 1264) = sub_1A572B5B8;
  *(_QWORD *)(v12 + 1272) = v40;
  *(_QWORD *)(v12 + 1280) = 0x414C494156414E55;
  *(_QWORD *)(v12 + 1288) = 0xEB00000000454C42;
  *(_QWORD *)(v12 + 1296) = sub_1A573632C;
  *(_QWORD *)(v12 + 1304) = 0;
  v41 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_4_58(v41);
  v42 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v42 + 16) = sub_1A573821C;
  *(_QWORD *)(v42 + 24) = v7;
  *(_QWORD *)(v12 + 1312) = 0x4E4545534E55;
  *(_QWORD *)(v12 + 1320) = 0xE600000000000000;
  *(_QWORD *)(v12 + 1328) = sub_1A572B5B8;
  *(_QWORD *)(v12 + 1336) = v42;
  v43 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_4_58(v43);
  v44 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v44 + 16) = sub_1A5738234;
  *(_QWORD *)(v44 + 24) = v7;
  *(_QWORD *)(v12 + 1344) = 0x4843454D4C5255;
  *(_QWORD *)(v12 + 1352) = 0xE700000000000000;
  *(_QWORD *)(v12 + 1360) = sub_1A572B5B8;
  *(_QWORD *)(v12 + 1368) = v44;
  *(_QWORD *)(v12 + 1376) = 0x52545441455355;
  *(_QWORD *)(v12 + 1384) = 0xE700000000000000;
  *(_QWORD *)(v12 + 1392) = sub_1A573635C;
  *(_QWORD *)(v12 + 1400) = 0;
  swift_retain_n();
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796A70);
  v45 = sub_1A594AFEC();
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AEB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A59ABD40;
  v47 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  v47[2] = a4;
  v47[3] = a5;
  v47[4] = a6;
  v47[5] = a7;
  v47[6] = v45;
  v48 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v48 + 16) = sub_1A5738274;
  *(_QWORD *)(v48 + 24) = v47;
  *(_QWORD *)(inited + 32) = sub_1A572B5B8;
  *(_QWORD *)(inited + 40) = v48;
  v49 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_4_58(v49);
  v50 = OUTLINED_FUNCTION_20_1();
  *(_QWORD *)(v50 + 16) = sub_1A5738294;
  *(_QWORD *)(v50 + 24) = v45;
  *(_QWORD *)(inited + 48) = sub_1A572B5B8;
  *(_QWORD *)(inited + 56) = v50;
  OUTLINED_FUNCTION_87();
  v51 = sub_1A5770CD0(inited, a1, a2, a3, 0xD000000000000020, 0x80000001A5A0F5E0, 374);
  swift_setDeallocating();
  sub_1A5774244();
  return v51;
}

void sub_1A5734F0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  __int16 v6;
  char v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v13;
  _QWORD *v14;

  v9 = __OFADD__(a2, 1);
  v10 = a2 + 1;
  if (v9)
  {
    __break(1u);
    return;
  }
  if (v10 >= a3)
  {
    sub_1A5718F9C();
    OUTLINED_FUNCTION_21();
    *v14 = a3;
  }
  else
  {
    OUTLINED_FUNCTION_63_8();
    sub_1A576B3AC(v13);
    if (!v3)
      return;
    *(_QWORD *)a1 = v4;
    *(_QWORD *)(a1 + 8) = v8;
    *(_DWORD *)(a1 + 16) = v5;
    *(_WORD *)(a1 + 20) = v6;
    *(_BYTE *)(a1 + 22) = v7;
  }
  OUTLINED_FUNCTION_80_4();
}

void sub_1A5734FB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v15;
  int v16;
  char v17;

  sub_1A5751974(a1, a2, a3);
  if (!v7)
  {
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = sub_1A573334C(a1, a2, a3, a4, a5, a6, a7, (uint64_t)sub_1A5738484, (uint64_t)sub_1A57384D8, (uint64_t)sub_1A57384A4, (uint64_t (*)(uint64_t, _BYTE *, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t))sub_1A576F918);
    *(_DWORD *)(v15 + 24) = v16;
    *(_BYTE *)(v15 + 28) = v17;
  }
}

void sub_1A57350B4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  sub_1A5751974(a1, a2, a3);
  if (!v3)
  {
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = sub_1A573E2D8(a1, a2, a3);
  }
}

void sub_1A5735180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE __src[256];

  sub_1A5751974(a1, a2, a3);
  if (!v3)
  {
    v4 = swift_allocObject();
    swift_retain();
    sub_1A5759FD0();
    memcpy((void *)(v4 + 16), __src, 0x100uLL);
  }
}

void sub_1A573526C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v7;
  uint64_t v15;
  id v16;
  uint64_t v17;

  swift_retain();
  v15 = sub_1A5754494(a1, a2, a3, a4, a5, a6, a7);
  if (!v7)
  {
    v17 = v15;
    goto LABEL_5;
  }
  v16 = v7;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
  if (swift_dynamicCast())
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v17 = MEMORY[0x1E0DEE9D8];
LABEL_5:
    *(_QWORD *)(swift_allocObject() + 16) = v17;
    return;
  }

}

void sub_1A5735388()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[6];
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;

  OUTLINED_FUNCTION_81_6();
  OUTLINED_FUNCTION_4_57();
  OUTLINED_FUNCTION_14_34();
  if (!v1)
  {
    v21 = v0;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796290);
    v9 = OUTLINED_FUNCTION_20_1();
    *(_OWORD *)(v9 + 16) = xmmword_1A59ABD10;
    OUTLINED_FUNCTION_78_7();
    sub_1A57411C8(v10, v11, v12, v13, v14, v15, v16);
    v20 = (uint64_t)&v20;
    *(_QWORD *)(v9 + 32) = v17;
    *(_QWORD *)(v9 + 40) = v18;
    v22 = v9;
    MEMORY[0x1E0C80A78](v17);
    v19[2] = v8;
    v19[3] = v7;
    v19[4] = v6;
    v19[5] = v5;
    sub_1A5751BA4(v4, v3, v2, (uint64_t)sub_1A5738710, (uint64_t)v19, (uint64_t)&v22);
    sub_1A5751898();
    *v21 = v22;
  }
}

void sub_1A57354F4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _QWORD *a8@<X8>)
{
  uint64_t v8;
  uint64_t v17;
  uint64_t v18;

  sub_1A5751974(a1, a2, a3);
  if (!v8)
  {
    sub_1A57411C8(a1, a2, a3, a4, a5, a6, a7);
    *a8 = v17;
    a8[1] = v18;
  }
}

uint64_t sub_1A5735574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[6];

  v15 = swift_allocObject();
  v18[2] = a4;
  v18[3] = a5;
  v18[4] = a6;
  v18[5] = a7;
  v16 = sub_1A5760D2C(a1, a2, a3, (uint64_t)sub_1A57386F8, (uint64_t)v18, (uint64_t)&type metadata for Capability);
  if (v7)
    return swift_deallocUninitializedObject();
  *(_QWORD *)(v15 + 16) = v16;
  return v15 | 4;
}

void sub_1A5735644()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_33_18();
  sub_1A5751974(v1, v2, v3);
  if (!v0)
  {
    OUTLINED_FUNCTION_19_31();
    swift_retain();
    OUTLINED_FUNCTION_25_24();
    sub_1A575F6DC();
    v5 = v4;
    OUTLINED_FUNCTION_19_31();
    v6 = OUTLINED_FUNCTION_20_1();
    v7 = MEMORY[0x1E0DEE9D8];
    if (v5)
      v7 = v5;
    *(_QWORD *)(v6 + 16) = v7;
  }
  OUTLINED_FUNCTION_17_35();
}

void sub_1A57356E8()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_6_54();
  v2 = v1;
  sub_1A5751974(v3, v4, v5);
  if (!v0)
  {
    OUTLINED_FUNCTION_35_15();
    sub_1A574122C();
    *v2 = v6;
    v2[1] = v7;
  }
}

void sub_1A5735738(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v15;

  sub_1A5751974(a1, a2, a3);
  if (!v7)
  {
    v15 = swift_allocObject();
    *(_DWORD *)(v15 + 16) = sub_1A57334D0(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(void))sub_1A5738948);
  }
}

void sub_1A573580C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  sub_1A5751974(a1, a2, a3);
  if (!v3)
  {
    v7 = swift_allocObject();
    *(_DWORD *)(v7 + 16) = sub_1A573E438(a1, a2, a3);
  }
}

void sub_1A57358D0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  sub_1A5751974(a1, a2, a3);
  if (!v3)
  {
    v7 = swift_allocObject();
    *(_DWORD *)(v7 + 16) = sub_1A57333D0(a1, a2, a3);
  }
}

uint64_t sub_1A573599C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v13;
  uint64_t inited;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v22;

  v13 = a2;
  sub_1A5751974(a1, a2, a3);
  if (!v7)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AEB0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A59ABD20;
    v22 = a3;
    v16 = a6;
    v17 = (_QWORD *)swift_allocObject();
    v17[2] = a4;
    v17[3] = a5;
    v17[4] = v16;
    v17[5] = a7;
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = sub_1A5738680;
    *(_QWORD *)(v18 + 24) = v17;
    *(_QWORD *)(inited + 32) = sub_1A572B5B8;
    *(_QWORD *)(inited + 40) = v18;
    v19 = (_QWORD *)swift_allocObject();
    v19[2] = a4;
    v19[3] = a5;
    v19[4] = v16;
    v19[5] = a7;
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = sub_1A5738698;
    *(_QWORD *)(v20 + 24) = v19;
    *(_QWORD *)(inited + 48) = sub_1A572B5B8;
    *(_QWORD *)(inited + 56) = v20;
    *(_QWORD *)(inited + 64) = sub_1A573638C;
    *(_QWORD *)(inited + 72) = 0;
    *(_QWORD *)(inited + 80) = sub_1A57363BC;
    *(_QWORD *)(inited + 88) = 0;
    swift_retain_n();
    v13 = sub_1A5770CD0(inited, a1, v13, v22, 0xD000000000000020, 0x80000001A5A0F5E0, 289);
    swift_setDeallocating();
    sub_1A5774244();
  }
  return v13;
}

void sub_1A5735B58(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v7;
  _QWORD *v8;

  sub_1A5751898();
  if (!v3)
  {
    v7 = sub_1A5761038(a1, a2, a3, 1);
    if ((v7 & 0x8000000000000000) != 0)
    {
      sub_1A56E9774();
      swift_allocError();
      *v8 = 0xD000000000000011;
      v8[1] = 0x80000001A5A0F840;
      v8[2] = 0xD000000000000020;
      v8[3] = 0x80000001A5A0F5E0;
      v8[4] = 167;
      swift_willThrow();
    }
    else
    {
      *(_QWORD *)(swift_allocObject() + 16) = v7;
    }
  }
}

void sub_1A5735C74(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v7;
  _QWORD *v8;

  sub_1A5751898();
  if (!v3)
  {
    v7 = sub_1A5761038(a1, a2, a3, 1);
    if ((v7 & 0x8000000000000000) != 0)
    {
      sub_1A56E9774();
      swift_allocError();
      *v8 = 0xD000000000000011;
      v8[1] = 0x80000001A5A0F840;
      v8[2] = 0xD000000000000020;
      v8[3] = 0x80000001A5A0F5E0;
      v8[4] = 167;
      swift_willThrow();
    }
    else
    {
      *(_QWORD *)(swift_allocObject() + 16) = v7;
    }
  }
}

unint64_t sub_1A5735D90()
{
  sub_1A5751898();
  return 0x8000000000000058;
}

unint64_t sub_1A5735DD4()
{
  sub_1A5751898();
  return 0x8000000000000060;
}

unint64_t sub_1A5735E1C@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;

  result = sub_1A57365E4();
  if (!v1)
    *a1 = result;
  return result;
}

unint64_t sub_1A5735E4C@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;

  result = sub_1A57365EC();
  if (!v1)
    *a1 = result;
  return result;
}

unint64_t sub_1A5735E7C@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;

  result = sub_1A57365F8();
  if (!v1)
    *a1 = result;
  return result;
}

unint64_t sub_1A5735EAC@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;

  result = sub_1A5736604();
  if (!v1)
    *a1 = result;
  return result;
}

unint64_t sub_1A5735EDC@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;

  result = sub_1A5736610();
  if (!v1)
    *a1 = result;
  return result;
}

unint64_t sub_1A5735F0C@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;

  result = sub_1A573661C();
  if (!v1)
    *a1 = result;
  return result;
}

unint64_t sub_1A5735F3C@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;

  result = sub_1A5736628();
  if (!v1)
    *a1 = result;
  return result;
}

unint64_t sub_1A5735F6C@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;

  result = sub_1A5736634();
  if (!v1)
    *a1 = result;
  return result;
}

unint64_t sub_1A5735F9C@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;

  result = sub_1A5736640();
  if (!v1)
    *a1 = result;
  return result;
}

unint64_t sub_1A5735FCC@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;

  result = sub_1A5736680();
  if (!v1)
    *a1 = result;
  return result;
}

unint64_t sub_1A5735FFC@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;

  result = sub_1A573668C();
  if (!v1)
    *a1 = result;
  return result;
}

unint64_t sub_1A573602C@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;

  result = sub_1A5736698();
  if (!v1)
    *a1 = result;
  return result;
}

unint64_t sub_1A573605C@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;

  result = sub_1A57366A4();
  if (!v1)
    *a1 = result;
  return result;
}

unint64_t sub_1A573608C@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;

  result = sub_1A57366B0();
  if (!v1)
    *a1 = result;
  return result;
}

unint64_t sub_1A57360BC@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;

  result = sub_1A57366BC();
  if (!v1)
    *a1 = result;
  return result;
}

unint64_t sub_1A57360EC@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;

  result = sub_1A57366C8();
  if (!v1)
    *a1 = result;
  return result;
}

unint64_t sub_1A573611C@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;

  result = sub_1A57366D4();
  if (!v1)
    *a1 = result;
  return result;
}

unint64_t sub_1A573614C@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;

  result = sub_1A57366E0();
  if (!v1)
    *a1 = result;
  return result;
}

unint64_t sub_1A573617C@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;

  result = sub_1A57366EC();
  if (!v1)
    *a1 = result;
  return result;
}

unint64_t sub_1A57361AC@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;

  result = sub_1A57366F8();
  if (!v1)
    *a1 = result;
  return result;
}

unint64_t sub_1A57361DC@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;

  result = sub_1A5736704();
  if (!v1)
    *a1 = result;
  return result;
}

unint64_t sub_1A573620C@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;

  result = sub_1A5736710();
  if (!v1)
    *a1 = result;
  return result;
}

unint64_t sub_1A573623C@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;

  result = sub_1A573671C();
  if (!v1)
    *a1 = result;
  return result;
}

unint64_t sub_1A573626C@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;

  result = sub_1A5736728();
  if (!v1)
    *a1 = result;
  return result;
}

unint64_t sub_1A573629C@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;

  result = sub_1A5736734();
  if (!v1)
    *a1 = result;
  return result;
}

unint64_t sub_1A57362CC@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;

  result = sub_1A5736740();
  if (!v1)
    *a1 = result;
  return result;
}

unint64_t sub_1A57362FC@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;

  result = sub_1A573674C();
  if (!v1)
    *a1 = result;
  return result;
}

unint64_t sub_1A573632C@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;

  result = sub_1A5736758();
  if (!v1)
    *a1 = result;
  return result;
}

unint64_t sub_1A573635C@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;

  result = sub_1A5736764();
  if (!v1)
    *a1 = result;
  return result;
}

unint64_t sub_1A573638C@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;

  result = sub_1A5735D90();
  if (!v1)
    *a1 = result;
  return result;
}

unint64_t sub_1A57363BC@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;

  result = sub_1A5735DD4();
  if (!v1)
    *a1 = result;
  return result;
}

void sub_1A57363EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_6_54();
  sub_1A5751974(v1, v2, v3);
  if (!v0)
  {
    OUTLINED_FUNCTION_62_8();
    sub_1A5751898();
    OUTLINED_FUNCTION_1_2();
    OUTLINED_FUNCTION_35_15();
    v4 = sub_1A5760F00();
    *(_QWORD *)(OUTLINED_FUNCTION_20_1() + 16) = v4;
  }
  OUTLINED_FUNCTION_17_35();
}

