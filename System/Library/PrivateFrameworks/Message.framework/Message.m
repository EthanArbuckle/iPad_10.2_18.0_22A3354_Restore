void sub_1A4F93B30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13)
{
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void bindParentAndChild(void *a1, void *a2)
{
  id *v3;
  id v4;
  id v5;
  uint64_t v6;
  id *v7;
  void *v8;
  id v9;
  void *v10;
  _QWORD *v11;

  v11 = a1;
  v3 = a2;
  objc_msgSend(MEMORY[0x1E0D46158], "weakReferenceWithObject:", v11);
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "mf_lock");
  v5 = v3[5];
  if (v4 == v5)
  {
    v7 = 0;
  }
  else
  {
    objc_msgSend(v5, "reference");
    v6 = objc_claimAutoreleasedReturnValue();
    objc_storeStrong(v3 + 5, v4);
    v7 = (id *)v6;
  }
  objc_msgSend(v3, "mf_unlock");
  if (v7)
  {
    objc_msgSend(v7, "mf_lock");
    objc_msgSend(v7[6], "removeObjectIdenticalTo:", v3);
    objc_msgSend(v7, "mf_unlock");
  }
  if (v11)
  {
    objc_msgSend(v11, "mf_lock");
    v8 = (void *)v11[6];
    if (!v8)
    {
      v9 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
      v10 = (void *)v11[6];
      v11[6] = v9;

      v8 = (void *)v11[6];
    }
    objc_msgSend(v8, "addObject:", v3);
    objc_msgSend(v11, "mf_unlock");
  }

}

void sub_1A4F93D70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A4F93E2C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4F93EB0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4F93F90(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4F9400C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F941C4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A4F942C4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4F94444(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4F94534(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v7 = v6;

  _Unwind_Resume(a1);
}

void sub_1A4F94578()
{
  JUMPOUT(0x1A4F94568);
}

void sub_1A4F948D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{

  _Unwind_Resume(a1);
}

void sub_1A4F949C0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void _configureMailboxCache(void *a1)
{
  id *v1;
  uint64_t v2;
  id v3;
  char v4;
  id *v5;
  void *v6;
  const __CFData *v7;
  NSObject *v8;
  void *v9;
  const __CFDictionary *v10;
  void *v11;
  int v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  CFErrorRef error;
  uint8_t buf[4];
  uint64_t v23;
  __int16 v24;
  void *v25;
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  if (objc_msgSend(v1, "_shouldConfigureMailboxCache"))
  {
    objc_msgSend(v1, "mf_lock");
    if (!v1[13])
    {
      v2 = objc_msgSend(v1, "_copyMailboxWithParent:name:attributes:dictionary:", 0, 0, 18, 0);
      v3 = v1[13];
      v1[13] = (id)v2;

      if (objc_msgSend(v1[13], "mailboxType") != 8)
        objc_msgSend(v1[13], "setMailboxType:", 8);
    }
    if ((objc_msgSend(v1, "cacheHasBeenRead") & 1) != 0)
    {
      v4 = 1;
    }
    else
    {
      objc_msgSend(v1, "setCacheHasBeenRead:", 1);
      v5 = v1;
      objc_msgSend(v5, "mailboxCachePath");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      v7 = (const __CFData *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99D50]), "initWithContentsOfFile:options:error:", v6, 1, 0);
      MFLogGeneral();
      v8 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend(v5, "ef_publicDescription");
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543362;
        v23 = (uint64_t)v9;
        _os_log_impl(&dword_1A4F90000, v8, OS_LOG_TYPE_DEFAULT, "Read mailbox cache from disk %{public}@", buf, 0xCu);

      }
      if (!v5[13])
        __assert_rtn("_readMailboxCache", "MailAccount.m", 3402, "self->_rootMailboxUid");
      if (v7)
      {
        error = 0;
        v10 = (const __CFDictionary *)CFPropertyListCreateWithData(0, v7, 1uLL, 0, &error);
        if (error)
        {
          objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "BOOL _readMailboxCache(MailAccount *__strong)");
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          -[__CFError localizedDescription](error, "localizedDescription");
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v17, "handleFailureInFunction:file:lineNumber:description:", v18, CFSTR("MailAccount.m"), 3412, CFSTR("%@"), v19);

        }
        CFDictionaryGetValue(v10, CFSTR("mboxes"));
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        v12 = objc_msgSend(v5, "_readCustomInfoFromMailboxCache:", v10);
        v4 = v12;
        if (v12)
        {
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) != 0)
          {
            MFLogGeneral();
            v13 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
            {
              v20 = objc_msgSend(v11, "count");
              objc_msgSend(v5, "ef_publicDescription");
              v14 = (void *)objc_claimAutoreleasedReturnValue();
              *(_DWORD *)buf = 134218242;
              v23 = v20;
              v24 = 2114;
              v25 = v14;
              _os_log_impl(&dword_1A4F90000, v13, OS_LOG_TYPE_DEFAULT, "loading mailboxes.count:%lu from mailbox cache %{public}@", buf, 0x16u);

            }
            objc_msgSend(v5, "_loadMailboxListingIntoCache:attributes:children:parent:", 0, 0, v11, v5[13]);
          }
        }
        else
        {
          MFLogGeneral();
          v15 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
          {
            objc_msgSend(v5, "ef_publicDescription");
            v16 = (void *)objc_claimAutoreleasedReturnValue();
            _configureMailboxCache_cold_1(v16, (uint64_t)buf, v15);
          }

        }
        if (error)
          CFRelease(error);
        if (v10)
          CFRelease(v10);
      }
      else
      {
        v4 = 0;
      }

    }
    objc_msgSend(v1, "mf_unlock");
    if ((v4 & 1) == 0)
      objc_msgSend(v1, "_repairMailboxCache");
  }
  else
  {
    _invalidateMailboxCache(v1);
  }

}

void sub_1A4F94DC0(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, __int128 buf)
{
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v21;
  id v23;
  NSObject *v24;
  void *v25;

  v21 = v18;

  if (a2 == 1)
  {
    v23 = objc_begin_catch(a1);
    MFLogGeneral();
    v24 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(v14, "ef_publicDescription");
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138543618;
      *(_QWORD *)((char *)&buf + 4) = v25;
      WORD6(buf) = 2112;
      *(_QWORD *)((char *)&buf + 14) = v23;
      _os_log_impl(&dword_1A4F90000, v24, OS_LOG_TYPE_INFO, "Failed to read cached info for %{public}@: %@", (uint8_t *)&buf, 0x16u);

    }
    objc_end_catch();
    JUMPOUT(0x1A4F94CACLL);
  }

  _Unwind_Resume(a1);
}

void sub_1A4F95034(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4F950D8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4F9556C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A4F95618(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F956EC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4F95760(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F95814(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4F958D0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id _stringByAppendingPathComponents(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  _stringByAppendingPathComponentsUsingSpecialDisplayNames(a1, a2, a3, a4, a5, a6, 0);
  return (id)objc_claimAutoreleasedReturnValue();
}

void sub_1A4F95974(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4F95A70(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1A4F95C60(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4F95D38(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F95DD4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id _MFChildWithPredicate(void *a1, unsigned int (*a2)(void *, uint64_t), uint64_t a3)
{
  id *v5;
  id v6;
  id v7;
  uint64_t v8;
  void *i;
  void *v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  objc_msgSend(v5, "mf_lock");
  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v6 = v5[6];
  v7 = (id)objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v7)
  {
    v8 = *(_QWORD *)v13;
    while (2)
    {
      for (i = 0; i != v7; i = (char *)i + 1)
      {
        if (*(_QWORD *)v13 != v8)
          objc_enumerationMutation(v6);
        v10 = *(void **)(*((_QWORD *)&v12 + 1) + 8 * (_QWORD)i);
        if (a2(v10, a3))
        {
          v7 = v10;
          goto LABEL_11;
        }
      }
      v7 = (id)objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
      if (v7)
        continue;
      break;
    }
  }
LABEL_11:

  objc_msgSend(v5, "mf_unlock", (_QWORD)v12);
  return v7;
}

void sub_1A4F95F38(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t mailboxHasName(os_unfair_lock_s *a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;

  v3 = a2;
  -[MFMailboxUid pathComponent](a1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "isEqual:", v3);

  return v5;
}

void sub_1A4F95FBC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4F9606C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F960E0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4F96188(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F962C4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

id _stringByAppendingPathComponentsUsingSpecialDisplayNames(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, int a7)
{
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  BOOL v19;
  int v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  void *v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v37;
  void *v38;
  id v39;
  id v40;

  v13 = a1;
  v14 = a2;
  v15 = a3;
  v16 = a4;
  v39 = a5;
  v40 = a6;
  if (!v15)
  {
    objc_msgSend(v13, "topMailbox");
    v15 = (id)objc_claimAutoreleasedReturnValue();
  }
  v17 = v13;
  v18 = v17;
  v19 = v15 == v17 || v17 == 0;
  v20 = v19;
  v21 = v17;
  if (v19)
    goto LABEL_14;
  v22 = v17;
  do
  {
    objc_msgSend(v22, "parent");
    v21 = (id)objc_claimAutoreleasedReturnValue();

    if (v15 == v21)
      break;
    v22 = v21;
  }
  while (v21);
  if (v20)
  {
LABEL_14:
    v23 = v16;
    goto LABEL_48;
  }
  v37 = v13;
  if (v16)
    v24 = (id)objc_msgSend(v16, "mutableCopyWithZone:", 0, v13);
  else
    v24 = objc_alloc_init(MEMORY[0x1E0CB37A0]);
  v23 = v24;
  v25 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  if (v14)
  {
    v26 = objc_msgSend(v18, "mailboxType");
    if (v39)
    {
      if (v26 != 7 && objc_msgSend(v39, "length") && (objc_msgSend(v18, "isShared") & 1) == 0)
      {
        if (v16 && objc_msgSend(v16, "length"))
          objc_msgSend(v23, "appendString:", CFSTR("/"));
        objc_msgSend(v23, "appendString:", v39, v37);
      }
    }
  }
  v27 = v18;

  v38 = v27;
  v28 = v27;
  do
  {
    objc_msgSend(v14, "persistentNameForMailbox:", v28, v37);
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    if (v29)
    {
      if (v14)
        goto LABEL_30;
    }
    else
    {
      if (a7)
        objc_msgSend(v28, "displayNameUsingSpecialNames");
      else
        objc_msgSend(v28, "name");
      v29 = (void *)objc_claimAutoreleasedReturnValue();
      if (v14)
      {
LABEL_30:
        objc_msgSend(v14, "_pathComponentForUidName:", v29);
        v30 = objc_claimAutoreleasedReturnValue();

        v29 = (void *)v30;
        if (!v30)
          goto LABEL_31;
        goto LABEL_37;
      }
    }
    if (!v29)
    {
LABEL_31:
      v31 = 0;
      goto LABEL_38;
    }
LABEL_37:
    objc_msgSend(v29, "ef_sanitizedFileName");
    v31 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v25, "addObject:", v31);
LABEL_38:

    objc_msgSend(v28, "parent");
    v32 = objc_claimAutoreleasedReturnValue();

    v28 = (void *)v32;
  }
  while ((id)v32 != v15);
  v33 = objc_msgSend(v25, "count");
  if (v33)
  {
    v34 = v33 - 1;
    do
    {
      if (objc_msgSend(v23, "length"))
        objc_msgSend(v23, "appendString:", CFSTR("/"));
      objc_msgSend(v25, "objectAtIndexedSubscript:", v34);
      v35 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v23, "appendString:", v35);

      --v34;
    }
    while (v34 != -1);
  }
  if (v40 && objc_msgSend(v38, "isStore"))
  {
    objc_msgSend(v23, "appendString:", CFSTR("."));
    objc_msgSend(v23, "appendString:", v40);
  }

  v21 = v15;
LABEL_48:

  return v23;
}

void sub_1A4F96604(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, void *a11, void *a12)
{
  void *v12;
  void *v13;
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1A4F966F4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F9684C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4F96CB8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4F96E74(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4F97004(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4F970CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F971E8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4F97240(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id _MFDescendantWithPredicate(void *a1, uint64_t (*a2)(void *, uint64_t), uint64_t a3)
{
  id v5;
  void *v6;
  void *v7;
  void *v8;

  v5 = a1;
  objc_msgSend(v5, "mf_lock");
  objc_msgSend(v5, "depthFirstEnumerator");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = 0;
  do
  {
    objc_msgSend(v6, "nextObject");
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v8)
      break;
    v7 = v8;
  }
  while ((a2(v8, a3) & 1) == 0);
  objc_msgSend(v5, "mf_unlock");

  return v8;
}

void sub_1A4F972E4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

uint64_t mailboxHasExtraAttribute(void *a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;

  v3 = a2;
  objc_msgSend(a1, "extraAttributes");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "containsObject:", v3);

  return v5;
}

void sub_1A4F97368(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4F97954(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F979C0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F97AD8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F97B40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4F97B98(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F97C7C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F97D18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A4F97DD8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F97F10(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  _Unwind_Resume(a1);
}

void sub_1A4F9806C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  os_unfair_lock_s *v11;

  os_unfair_lock_unlock(v11);

  _Unwind_Resume(a1);
}

void sub_1A4F98124(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4F98218(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4F9839C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A4F984C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1A4F98594(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A4F98614(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A4F98734(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F987E0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4F988C4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4F989AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4F98A8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A4F98C58(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4F98D14(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F98E94(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F98FA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A4F992A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A4F993AC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F99434(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F997E8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t progressHandler(uint64_t a1)
{
  if (objc_msgSend(*(id *)(a1 + 8), "shouldCancel"))
    sqlite3_interrupt(*(sqlite3 **)a1);
  return 0;
}

void _MFFlushCurrentInvocation()
{
  const __CFString *v0;
  __CFRunLoop *Current;
  double v2;
  __CFRunLoop *v3;

  v0 = (const __CFString *)*MEMORY[0x1E0C9B280];
  if (CFRunLoopRunInMode((CFRunLoopMode)*MEMORY[0x1E0C9B280], 0.0, 0) == kCFRunLoopRunTimedOut)
  {
    Current = CFRunLoopGetCurrent();
    if (CFRunLoopGetNextTimerFireDate(Current, v0) > 1.17549435e-38)
    {
      v2 = 0.001;
      do
      {
        if (CFRunLoopRunInMode(v0, v2, 0) != kCFRunLoopRunTimedOut)
          break;
        v2 = v2 + v2;
        v3 = CFRunLoopGetCurrent();
      }
      while (CFRunLoopGetNextTimerFireDate(v3, v0) > 1.17549435e-38 && v2 < 10.0);
    }
  }
}

void sub_1A4F99DE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4F99EBC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F99F30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4F9A030(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A4F9A0EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1A4F9A1F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)MFMonitoredInvocation;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_1A4F9A268(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F9A2B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F9A338(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F9A4E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A4F9A5C0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F9A79C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A4F9A850(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F9A90C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F9A9A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4F9AAF4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v7 = v5;

  _Unwind_Resume(a1);
}

void sub_1A4F9ADB4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F9AF48(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4F9B070(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

BOOL _storeOnServerForTuple(void *a1, uint64_t a2)
{
  id v3;
  void *v4;
  void *v5;
  int v6;
  _BOOL8 v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;

  v3 = a1;
  v4 = v3;
  v5 = *(void **)(a2 + 8);
  if (v5)
  {
    v6 = *(unsigned __int8 *)(a2 + 16);
    v7 = *(_BYTE *)(a2 + 16) != 0;
    v8 = v3;
    v9 = v5;
    objc_msgSend(v8, "_objectForAccountInfoKey:", v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    if (v10)
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
      {
        v11 = NSBOOLFromString();
LABEL_9:
        v7 = v11;
        goto LABEL_10;
      }
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
      {
        v11 = objc_msgSend(v10, "BOOLValue");
        goto LABEL_9;
      }
    }
    else
    {
      objc_msgSend(v8, "mf_lock");
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", v6 != 0);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "setAccountProperty:forKey:", v12, v9);

      objc_msgSend(v8, "mf_unlock");
    }
LABEL_10:

    goto LABEL_11;
  }
  v7 = 1;
LABEL_11:

  return v7;
}

void sub_1A4F9B1FC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4F9B2E0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F9B3B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4F9B484(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A4F9B514(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4F9B5DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4F9B79C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4F9B840(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4F9BA34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;

  _Unwind_Resume(a1);
}

void sub_1A4F9BC60(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4F9BD64(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4F9BE20(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F9BEA4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4F9BF4C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F9C220(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4F9C2BC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F9C37C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F9C438(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F9C4CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F9C52C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F9C58C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F9C5EC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F9C65C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F9C6B4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F9C714(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t __cachedMailboxUIDs_block_invoke()
{
  id v0;
  void *v1;

  v0 = objc_alloc_init(MEMORY[0x1E0C99D38]);
  v1 = (void *)cachedMailboxUIDs_cache;
  cachedMailboxUIDs_cache = (uint64_t)v0;

  objc_msgSend((id)cachedMailboxUIDs_cache, "setName:", CFSTR("MailAccount.cachedMailboxUIDs"));
  return objc_msgSend((id)cachedMailboxUIDs_cache, "setCountLimit:", 21);
}

void sub_1A4F9C9FC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4F9CBA8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F9CC7C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4F9CCF8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F9CDD8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A4F9CEC0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4F9CF3C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F9D004(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F9D104(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4F9D1A4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F9D888(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12)
{
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1A4F9DCC8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4F9DDCC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4F9DE7C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F9DEEC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

const __CFString *NSStringFromMailboxUidType(uint64_t a1)
{
  const __CFString *result;
  const __CFString *v2;

  if (a1 > 99)
  {
    switch(a1)
    {
      case 'd':
        result = CFSTR("InboxSpecial");
        break;
      case 'e':
        result = CFSTR("JunkSpecial");
        break;
      case 'f':
        result = CFSTR("ArchiveSpecial");
        break;
      case 'g':
        result = CFSTR("TrashSpecial");
        break;
      case 'h':
        result = CFSTR("SentMessagesSpecial");
        break;
      case 'i':
        result = CFSTR("DraftsSpecial");
        break;
      case 'j':
        result = CFSTR("OutboxSpecial");
        break;
      default:
        result = 0;
        break;
    }
  }
  else
  {
    switch(a1)
    {
      case 0:
        result = CFSTR("Generic");
        break;
      case 1:
        result = CFSTR("Junk");
        break;
      case 2:
        result = CFSTR("Archive");
        break;
      case 3:
        result = CFSTR("Trash");
        break;
      case 4:
        result = CFSTR("Sent");
        break;
      case 5:
        result = CFSTR("Drafts");
        break;
      case 6:
        result = CFSTR("Outbox");
        break;
      case 7:
        result = CFSTR("Inbox");
        break;
      case 8:
        result = CFSTR("Root");
        break;
      default:
        v2 = CFSTR("Rootless");
        if (a1 != -100)
          v2 = 0;
        if (a1 == -500)
          result = CFSTR("Invalid");
        else
          result = v2;
        break;
    }
  }
  return result;
}

void sub_1A4F9E0F0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4F9E244(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4F9E2E4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F9E38C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4F9E460(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4F9E51C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4F9E5E4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4F9E68C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4F9E6EC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F9E794(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4F9E834(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4F9E89C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4F9E900(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id MFCriterionExpressionForDate(void *a1)
{
  long double v1;
  double v2;
  double __y;

  objc_msgSend(a1, "timeIntervalSince1970");
  v2 = v1;
  __y = NAN;
  modf(v1, &__y);
  if (__y == v2)
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%d"), __y, (int)__y);
  else
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%f"), __y, *(_QWORD *)&v2);
  return (id)objc_claimAutoreleasedReturnValue();
}

void sub_1A4F9EA34(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F9EAA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4F9EC84(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4F9EE1C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4F9EF3C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F9F038(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F9F080(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F9F128(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4F9F450(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  void *v19;
  void *v20;
  void *v21;
  id *v22;

  objc_destroyWeak(v22);

  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1A4F9F660(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  id *v3;

  objc_destroyWeak(v3);

  _Unwind_Resume(a1);
}

void sub_1A4F9F990(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12, void *a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;

  _Unwind_Resume(a1);
}

void sub_1A4F9FBE8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_1A4F9FDD0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  v2 = v1;

  _Unwind_Resume(a1);
}

void sub_1A4FA00E4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1A4FA0214(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FA0EF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, _Unwind_Exception *exception_object, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17)
{
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;

  _Unwind_Resume(a1);
}

void sub_1A4FA11C8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FA1218(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FA13F8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4FA15B0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FA16B0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FA1A14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,void *a28)
{
  void *v28;
  void *v29;
  void *v30;
  void *v31;

  _Unwind_Resume(a1);
}

uint64_t ECMailboxTypeFromMailboxUidType(uint64_t result)
{
  switch(result)
  {
    case 0:
    case 8:
      return result;
    case 1:
LABEL_7:
      result = 1;
      break;
    case 2:
LABEL_8:
      result = 2;
      break;
    case 3:
LABEL_9:
      result = 3;
      break;
    case 4:
LABEL_10:
      result = 4;
      break;
    case 5:
LABEL_11:
      result = 5;
      break;
    case 6:
LABEL_12:
      result = 6;
      break;
    case 7:
LABEL_13:
      result = 7;
      break;
    default:
      switch(result)
      {
        case 'd':
          goto LABEL_13;
        case 'e':
          goto LABEL_7;
        case 'f':
          goto LABEL_8;
        case 'g':
          goto LABEL_9;
        case 'h':
          goto LABEL_10;
        case 'i':
          goto LABEL_11;
        case 'j':
          goto LABEL_12;
        default:
          if (result != -100)
            result = -500;
          break;
      }
      break;
  }
  return result;
}

void sub_1A4FA1BE4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FA1C44(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FA1DF8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4FA1EC8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FA1FEC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

id MFLookupLocalizedString(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  __CFString *v7;
  __CFString *v8;
  void *v9;
  void *v10;

  v5 = a1;
  v6 = a2;
  v7 = a3;
  if (v7)
    v8 = v7;
  else
    v8 = CFSTR("Message");
  MFMessageFrameworkBundle();
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "localizedStringForKey:value:table:", v5, v6, v8);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  return v10;
}

void sub_1A4FA2184(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

id MFMessageFrameworkBundle()
{
  void *v0;
  uint64_t v1;
  void *v2;

  v0 = (void *)sMessageFrameworkBundle;
  if (!sMessageFrameworkBundle)
  {
    objc_msgSend(MEMORY[0x1E0CB34D0], "bundleWithIdentifier:", CFSTR("com.apple.Message"));
    v1 = objc_claimAutoreleasedReturnValue();
    v2 = (void *)sMessageFrameworkBundle;
    sMessageFrameworkBundle = v1;

    v0 = (void *)sMessageFrameworkBundle;
  }
  return v0;
}

void sub_1A4FA2250(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FA233C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4FA2464(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1A4FA251C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FA26FC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FA2794(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FA27F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FA28DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FA2A00(void *a1)
{
  void *v1;

  objc_begin_catch(a1);
  JUMPOUT(0x1A4FA2980);
}

void sub_1A4FA2AA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FA2B50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FA2BC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FA3528(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  void *v18;

  _Unwind_Resume(a1);
}

void sub_1A4FA3B78(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11)
{
  void (**v11)(_QWORD);
  void *v12;
  void *v13;

  if (a2 == 1)
  {
    objc_begin_catch(a1);
    if (v11)
      v11[2](v11);
    objc_end_catch();
    JUMPOUT(0x1A4FA3AF8);
  }

  _Unwind_Resume(a1);
}

void sub_1A4FA3D18(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FA3E70(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FA3F14(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FA3FC4(_Unwind_Exception *a1)
{
  void *v1;

  os_unfair_lock_unlock((os_unfair_lock_t)&sSharedInstanceLock);
  _Unwind_Resume(a1);
}

void sub_1A4FA4058(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id MFUserAgent()
{
  return (id)_userAgent;
}

void sub_1A4FA40B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

id MFMailDirectory()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  int v5;
  int v6;
  NSObject *v7;
  NSObject *v8;
  uint8_t buf[4];
  uint64_t v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v0 = (void *)MFMailDirectory___MailDir;
  if (!MFMailDirectory___MailDir)
  {
    objc_msgSend((id)CPSharedResourcesDirectory(), "stringByAppendingPathComponent:", CFSTR("Library"));
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v1, "stringByAppendingPathComponent:", CFSTR("Mail"));
    v2 = objc_claimAutoreleasedReturnValue();
    v3 = (void *)MFMailDirectory___MailDir;
    MFMailDirectory___MailDir = v2;

    objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_msgSend(v4, "fileExistsAtPath:", MFMailDirectory___MailDir) & 1) == 0
      && objc_msgSend(v4, "mf_makeCompletePath:mode:", MFMailDirectory___MailDir, 448))
    {
      v5 = open((const char *)objc_msgSend((id)MFMailDirectory___MailDir, "fileSystemRepresentation"), 0);
      v6 = v5;
      if (v5 < 0)
      {
        MFLogGeneral();
        v8 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412290;
          v11 = MFMailDirectory___MailDir;
          _os_log_impl(&dword_1A4F90000, v8, OS_LOG_TYPE_DEFAULT, "#Warning Could not open fd for %@", buf, 0xCu);
        }

      }
      else
      {
        if (fcntl(v5, 64, 4))
        {
          MFLogGeneral();
          v7 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 138412290;
            v11 = MFMailDirectory___MailDir;
            _os_log_impl(&dword_1A4F90000, v7, OS_LOG_TYPE_DEFAULT, "#Warning Could not set protection class on %@", buf, 0xCu);
          }

        }
        close(v6);
      }
    }

    v0 = (void *)MFMailDirectory___MailDir;
  }
  return v0;
}

void sub_1A4FA4284(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FA4330(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)MFIMAPConnection;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_1A4FA44AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FA471C(_Unwind_Exception *a1)
{
  void *v1;
  os_unfair_lock_s *v2;
  void *v3;

  os_unfair_lock_unlock(v2);
  _Unwind_Resume(a1);
}

void sub_1A4FA47CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FA48A8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FA49AC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FA4B88(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  v8 = v7;

  _Unwind_Resume(a1);
}

void sub_1A4FA4F0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A4FA510C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A4FA52EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)MFConnection;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_1A4FA53B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1A4FA54A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_1A4FA55AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FA5688(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FA5718(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FA5AA4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FA5C00(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FA5DF8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FA5E94(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FA5F34(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FA6388(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1A4FA644C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FA6520(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FA65BC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FA6610(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FA6830(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FA69AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t MFCompareMailboxUids(void *a1, void *a2, void *a3)
{
  os_unfair_lock_s *v5;
  os_unfair_lock_s *v6;
  os_unfair_lock_s *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;

  v5 = a1;
  v6 = a2;
  v7 = v6;
  if (v5 == v6)
  {
    v10 = 0;
    goto LABEL_11;
  }
  if (!v5)
    goto LABEL_6;
  if (!v6)
    goto LABEL_10;
  v8 = -[os_unfair_lock_s mailboxType](v5, "mailboxType");
  v9 = -[os_unfair_lock_s mailboxType](v7, "mailboxType");
  if (v8 && !v9)
    goto LABEL_6;
  if (v9 && !v8)
    goto LABEL_10;
  if (v8 < v9)
  {
LABEL_6:
    v10 = 1;
    goto LABEL_11;
  }
  if (v8 > v9)
  {
LABEL_10:
    v10 = -1;
    goto LABEL_11;
  }
  if (!a3 || (v5[36]._os_unfair_lock_opaque & 0x10) != 0 || (v7[36]._os_unfair_lock_opaque & 0x10) != 0)
  {
    -[os_unfair_lock_s account](v5, "account");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    if (v17)
      -[os_unfair_lock_s displayName](v5, "displayName");
    else
      -[MFMailboxUid pathComponent](v5);
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    -[os_unfair_lock_s account](v7, "account");
    v12 = (id)objc_claimAutoreleasedReturnValue();
    if (v12)
      -[os_unfair_lock_s displayName](v7, "displayName");
    else
      -[MFMailboxUid pathComponent](v7);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v12 = a3;
    -[MFMailboxUid pathComponent](v5);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "_pathComponentForUidName:", v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    -[MFMailboxUid pathComponent](v7);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "_pathComponentForUidName:", v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();

  }
  if (v14 == v16)
  {
    v10 = 0;
  }
  else if (v14)
  {
    if (v16)
    {
      v18 = objc_msgSend(v14, "length");
      objc_msgSend(MEMORY[0x1E0C99DC8], "currentLocale");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = objc_msgSend(v14, "compare:options:range:locale:", v16, 65, 0, v18, v19);

      if (!v10)
      {
        v20 = objc_msgSend(v14, "length");
        objc_msgSend(MEMORY[0x1E0C99DC8], "currentLocale");
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        v10 = objc_msgSend(v14, "compare:options:range:locale:", v16, 64, 0, v20, v21);

      }
    }
    else
    {
      v10 = -1;
    }
  }
  else
  {
    v10 = 1;
  }

LABEL_11:
  return v10;
}

void sub_1A4FA6CB4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v6 = v5;

  _Unwind_Resume(a1);
}

void sub_1A4FA6DCC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1A4FA6E20(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FA6EDC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;
  void *v2;

  os_unfair_lock_unlock(v1);

  _Unwind_Resume(a1);
}

void sub_1A4FA6F88(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FA7020(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FA71E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FA7248(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FA73AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4FA74A0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FA75E8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FA7700(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FA7784(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FA783C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FA78D4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FA7924(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FA79D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1A4FA7A88(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FA7B04(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FA7BCC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1A4FA7C48(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FA7CDC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FA7D40(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FA7E10(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FA8010(_Unwind_Exception *a1)
{
  void *v1;
  os_unfair_lock_s *v2;
  void *v3;
  void *v4;
  void *v5;

  os_unfair_lock_unlock(v2);
  _Unwind_Resume(a1);
}

void sub_1A4FA80C0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FA84F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A4FA8640(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FA88B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FA89C4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t tablesForOptionsAndCriterion(unsigned int a1, void *a2, int a3)
{
  id v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;
  uint64_t v11;

  v5 = a2;
  v6 = addOptionsForCriterion(a1, v5);
  if (a3)
    v7 = v6;
  else
    v7 = v6 & 0xFFBFFFF0;
  if ((v7 & 8) != 0)
  {
    if (_os_feature_enabled_impl())
    {
      if (EMIsGreymatterSupportedWithOverride())
        v8 = 36864;
      else
        v8 = 4096;
    }
    else
    {
      v8 = 4096;
    }
  }
  else
  {
    v8 = 0;
  }
  v9 = _os_feature_enabled_impl();
  v10 = (v7 >> 1) & 2 | (4 * (v7 & 3)) | (((v7 >> 4) & 1) << 10) & 0xFFFFBFFF | (v7 >> 5) & 0x8000 | (((v7 >> 6) & 1) << 14) | (v7 >> 5) & 0x70000 | v8;
  if ((v9 & (v7 >> 5)) != 0)
    v11 = v10 | 0x80000;
  else
    v11 = v10;

  return v11;
}

void sub_1A4FA8B1C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t addOptionsForCriterion(unsigned int a1, void *a2)
{
  id v3;
  int v4;
  int v5;
  int v6;
  int v7;
  unsigned int v8;
  uint64_t v9;

  v3 = a2;
  v4 = objc_msgSend(v3, "includesCriterionSatisfyingPredicate:restrictive:", isReadLaterCriterion, 0);
  v5 = objc_msgSend(v3, "includesCriterionSatisfyingPredicate:restrictive:", isSendLaterCriterion, 0);
  v6 = objc_msgSend(v3, "includesCriterionSatisfyingPredicate:restrictive:", isFollowUpCriterion, 0);
  v7 = objc_msgSend(v3, "includesCriterionSatisfyingPredicate:restrictive:", isSenderBucketCriterion, 0);
  v8 = a1 | 0x100000;
  if (!(v6 | v5 | v4))
    v8 = a1;
  if (v7)
    v9 = v8 | 0x200000;
  else
    v9 = v8;

  return v9;
}

void sub_1A4FA8BE0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FA8D40(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t _criterionCannotUseSearchableIndex(void *a1)
{
  id v1;
  unint64_t v2;
  int v3;
  void *v5;

  v1 = a1;
  v2 = objc_msgSend(v1, "criterionType");
  v3 = 0;
  if (v2 <= 0x29)
  {
    if (((1 << v2) & 0x30A00000204) != 0)
    {
      v3 = 1;
    }
    else if (v2 == 1)
    {
      objc_msgSend(v1, "_attributesForHeaderCriterion");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v3 = objc_msgSend(v5, "count") != 0;

    }
    else if (v2 == 11)
    {
      v3 = objc_msgSend(v1, "preferFullTextSearch");
    }
  }

  return v3 ^ 1u;
}

void sub_1A4FA8E24(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

BOOL isSenderBucketCriterion(void *a1)
{
  return objc_msgSend(a1, "criterionType") == 51;
}

BOOL isSendLaterCriterion(void *a1)
{
  return objc_msgSend(a1, "criterionType") == 49;
}

BOOL isReadLaterCriterion(void *a1)
{
  return objc_msgSend(a1, "criterionType") == 46;
}

BOOL isLibraryIDCriterion(void *a1)
{
  return objc_msgSend(a1, "criterionType") == 24;
}

BOOL isFollowUpCriterion(void *a1)
{
  id v1;
  _BOOL8 v2;

  v1 = a1;
  v2 = objc_msgSend(v1, "criterionType") == 47 || objc_msgSend(v1, "criterionType") == 48;

  return v2;
}

void sub_1A4FA8EFC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FA8F60(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FA9028(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FA90B0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FA93B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1A4FA95C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void MFSetUserAgent(id obj)
{
  objc_storeStrong((id *)&_userAgent, obj);
}

void sub_1A4FA97A8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FA99E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  void *v14;
  void *v15;
  id *v16;
  void *v17;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);

  _Unwind_Resume(a1);
}

void sub_1A4FA9A6C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FA9ACC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FA9B80(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FA9BE0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FA9C60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)MFLibraryStore;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_1A4FA9D00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  void *v9;

  a9.super_class = (Class)_MFWeakObjectCacheRef;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_1A4FA9D70(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FA9F44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, id location)
{
  void *v16;
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);

  _Unwind_Resume(a1);
}

void sub_1A4FA9FF8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FAA43C(_Unwind_Exception *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  void *v13;
  void *v14;
  os_unfair_lock_s *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  va_list va;

  va_start(va, a13);

  os_unfair_lock_unlock(v15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v18 - 144), 8);

  _Unwind_Resume(a1);
}

void sub_1A4FAA9E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1A4FAAB10(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FAAD54(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FAAE54(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v6 = v5;

  _Unwind_Resume(a1);
}

void sub_1A4FAAF60(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FAB0F0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_1A4FAB180(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FAB244(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FAB2B8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FAB3B8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FAB6AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  _Unwind_Resume(a1);
}

void sub_1A4FAB96C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FABA28(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FABA9C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FABB88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  void *v14;
  id *v15;
  void *v16;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1A4FABE88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  void *v20;
  void *v21;

  _Unwind_Resume(a1);
}

void sub_1A4FAC0B0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FAC2CC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4FAC344(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FAC5B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  id *v22;
  void *v23;
  void *v24;

  objc_destroyWeak(v22);
  objc_destroyWeak(&location);

  _Unwind_Resume(a1);
}

void sub_1A4FAC7C4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FAC848(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FAC92C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4FACA9C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FACBA4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FACC68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A4FACDA4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FACF60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1A4FAD0D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1A4FAD2C8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A4FAD3E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1A4FAD478(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FAD648(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FAD6F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FAD8CC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4FADBA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1A4FADDEC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4FAE47C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, void *a13, void *a14, uint64_t a15, void *a16, void *a17, void *a18)
{
  void *v18;
  void *v19;
  void *v20;

  _Unwind_Resume(a1);
}

void clearMailboxUIDCache()
{
  NSObject *v0;
  void *v1;

  +[MailAccount log](MailAccount, "log");
  v0 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_DEBUG))
    clearMailboxUIDCache_cold_1();

  cachedMailboxUIDs();
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "removeAllObjects");

}

void sub_1A4FAE5E8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FAE754(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  v14 = v13;

  _Unwind_Resume(a1);
}

void sub_1A4FAE930(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v7 = v5;

  _Unwind_Resume(a1);
}

id cachedMailboxUIDs()
{
  if (cachedMailboxUIDs_onceToken != -1)
    dispatch_once(&cachedMailboxUIDs_onceToken, &__block_literal_global_838);
  return (id)cachedMailboxUIDs_cache;
}

void sub_1A4FAEAF4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FAEBBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FAEDA4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4FAF0E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12)
{
  void *v12;
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

id getDeliveryAccounts()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  _QWORD v9[2];

  v9[1] = *MEMORY[0x1E0C80C00];
  if (!sDeliveryAccounts)
  {
    +[MFAccountStore sharedAccountStore](MFAccountStore, "sharedAccountStore");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    v9[0] = *MEMORY[0x1E0C8F138];
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v9, 1);
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "accountsWithTypeIdentifiers:error:", v1, 0);
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    v3 = objc_msgSend(v2, "mutableCopy");
    v4 = (void *)sDeliveryAccounts;
    sDeliveryAccounts = v3;

    if (!sDeliveryAccounts || !objc_msgSend((id)sDeliveryAccounts, "count"))
    {
      v5 = +[SMTPAccount newDefaultInstance](SMTPAccount, "newDefaultInstance");
      v6 = objc_msgSend(objc_alloc(MEMORY[0x1E0C99DE8]), "initWithObjects:", v5, 0);
      v7 = (void *)sDeliveryAccounts;
      sDeliveryAccounts = v6;

    }
  }
  return (id)sDeliveryAccounts;
}

void sub_1A4FAF298(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A4FAF540(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_1A4FAF738(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FAF7F8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FAF8D8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FAF958(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FAFEB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_1A4FB017C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1A4FB0244(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FB02F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FB03C0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FB0478(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FB05A4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FB0768(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1A4FB0860(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FB08BC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FB0978(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FB0ADC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FB0C64(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FB0F98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,void *a22)
{
  void *v22;
  void *v23;
  void *v24;
  void *v25;

  _Unwind_Resume(a1);
}

void MFRegisterPowerObserver(void *a1)
{
  id v1;
  id v2;
  void *v3;
  _QWORD v4[4];
  id v5;

  v1 = a1;
  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = __MFRegisterPowerObserver_block_invoke;
  v4[3] = &unk_1E4E88DC8;
  v2 = v1;
  v5 = v2;
  objc_msgSend(MEMORY[0x1E0D1F070], "mainThreadScheduler");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "performBlock:", v4);

}

void sub_1A4FB1088(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1A4FB1108(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FB126C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A4FB1318(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FB14B4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A4FB16C0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FB1AA4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FB1C44(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t _LibraryVersion(sqlite3 *a1)
{
  uint64_t v1;
  sqlite3_stmt *ppStmt;

  ppStmt = 0;
  if (sqlite3_prepare_v2(a1, "SELECT value FROM properties WHERE key = 'version'", -1, &ppStmt, 0))
    return 0;
  if (sqlite3_step(ppStmt) == 100)
    v1 = sqlite3_column_int(ppStmt, 0);
  else
    v1 = 0;
  sqlite3_finalize(ppStmt);
  return v1;
}

void sub_1A4FB1DC8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FB1F00(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FB20A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, void *a8, uint64_t a9, ...)
{
  void *v9;
  void *v10;
  va_list va;

  va_start(va, a9);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4FB223C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FB2480(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FB2510(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FB26D0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FB2904(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FB2974(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FB29E8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FB2A30(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FB2AF8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FB2B70(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FB2BE8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FB2C80(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FB2D0C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FB2DC0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FB2FDC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FB316C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, void *a8, uint64_t a9, ...)
{
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  va_list va;

  va_start(va, a9);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4FB32D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

void sub_1A4FB3954(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, id a18, void *a19)
{
  void *v19;

  _Unwind_Resume(a1);
}

void sub_1A4FB41D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12)
{
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_1A4FB4360(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1A4FB44F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FB461C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A4FB4680(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FB47C0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  _Unwind_Resume(a1);
}

void sub_1A4FB4A4C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  _Unwind_Resume(a1);
}

void sub_1A4FB4B40(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v6 = v5;

  _Unwind_Resume(a1);
}

void sub_1A4FB4C34(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1A4FB4DA8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v6 = v5;

  _Unwind_Resume(a1);
}

void sub_1A4FB4E94(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FB4FDC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

id __tableNamesForTableOptions_block_invoke_2(uint64_t a1)
{
  id v2;
  int v3;
  void *v4;
  int v5;
  void *v6;

  v2 = objc_alloc_init(MEMORY[0x1E0C99E20]);
  v3 = *(_DWORD *)(a1 + 32);
  if ((v3 & 0x20) != 0)
  {
    objc_msgSend(MEMORY[0x1E0D1EB30], "messagesTableName");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "addObject:", v4);

    v3 = *(_DWORD *)(a1 + 32);
  }
  if ((v3 & 4) != 0)
  {
    objc_msgSend(v2, "addObject:", CFSTR("subjects"));
    v3 = *(_DWORD *)(a1 + 32);
  }
  if ((v3 & 8) != 0)
  {
    objc_msgSend(v2, "addObject:", CFSTR("addresses"));
    v3 = *(_DWORD *)(a1 + 32);
  }
  if ((v3 & 0x1000) != 0)
  {
    objc_msgSend(v2, "addObject:", CFSTR("summaries"));
    if (_os_feature_enabled_impl())
    {
      if (EMIsGreymatterSupportedWithOverride())
        objc_msgSend(v2, "addObject:", CFSTR("generated_summaries"));
    }
  }
  v5 = *(_DWORD *)(a1 + 32);
  if ((v5 & 0x100) != 0)
  {
    objc_msgSend(v2, "addObject:", CFSTR("protected_message_data"));
    v5 = *(_DWORD *)(a1 + 32);
  }
  if ((v5 & 0x400) != 0)
  {
    objc_msgSend(v2, "addObject:", CFSTR("conversations"));
    v5 = *(_DWORD *)(a1 + 32);
  }
  if ((v5 & 0x8000) != 0)
  {
    objc_msgSend(v2, "addObject:", CFSTR("message_global_data"));
    v5 = *(_DWORD *)(a1 + 32);
  }
  if ((v5 & 0x10000) != 0)
  {
    objc_msgSend(v2, "addObject:", CFSTR("senders"));
    v5 = *(_DWORD *)(a1 + 32);
  }
  if ((v5 & 0x20000) != 0)
    objc_msgSend(v2, "addObject:", CFSTR("brand_indicators"));
  if (_os_feature_enabled_impl() && (*(_BYTE *)(a1 + 34) & 8) != 0)
  {
    objc_msgSend(MEMORY[0x1E0D1EAA8], "businessAddressesTableName");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "addObject:", v6);

  }
  return v2;
}

void sub_1A4FB5188(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FB5C8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, _Unwind_Exception *exception_object)
{
  void *v9;
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A4FB5F04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FB5FEC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FB607C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FB60E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FB6158(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FB61C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FB6238(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FB62A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FB6318(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FB639C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FB640C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FB6468(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FB660C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  va_list va;

  va_start(va, a9);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4FB673C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FB6920(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t sqlite3_exec_retry(sqlite3 *a1, const char *a2, int (__cdecl *a3)(void *, int, char **, char **), void *a4, char **a5)
{
  char **v5;
  void *v6;
  int (__cdecl *v7)(void *, int, char **, char **);
  const char *v8;
  sqlite3 *v9;
  uint64_t result;

  v5 = a5;
  v6 = a4;
  v7 = a3;
  v8 = a2;
  v9 = a1;
  while (1)
  {
    result = sqlite3_exec(a1, a2, a3, a4, a5);
    if ((_DWORD)result != 262 && result != 5)
      break;
    usleep(0x14u);
    a1 = v9;
    a2 = v8;
    a3 = v7;
    a4 = v6;
    a5 = v5;
  }
  return result;
}

_QWORD *initICUSearchContext()
{
  return _CreateICUSQLiteContext(0, 3);
}

_QWORD *_CreateICUSQLiteContext(uint64_t a1, char a2)
{
  _QWORD *v3;
  __int128 v5;
  uint64_t v6;

  v3 = malloc_type_malloc(0x2D0uLL, 0x10B004031052BF7uLL);
  v3[3] = 0;
  *((_WORD *)v3 + 16) = 65;
  v3[20] = v3 + 4;
  v3[21] = 128;
  v3[22] = 0;
  *((_DWORD *)v3 + 46) = 0;
  v3[24] = v3 + 25;
  *((_DWORD *)v3 + 178) = 256;
  CPICUCreateSearchCollator();
  *(_OWORD *)v3 = v5;
  v3[2] = v6;
  if ((a2 & 1) != 0)
  {
    ucol_setAttribute();
    if ((a2 & 2) != 0)
      goto LABEL_6;
  }
  else if ((a2 & 2) == 0)
  {
    goto LABEL_6;
  }
  ucol_setAttribute();
LABEL_6:
  if ((a2 & 4) != 0)
    ucol_setAttribute();
  v3[3] = usearch_openFromCollator();
  return v3;
}

void _HandleSQLiteError(sqlite3 *a1, void *a2)
{
  id v3;
  int v4;
  int v5;
  NSObject *v6;
  _DWORD v7[2];
  __int16 v8;
  id v9;
  __int16 v10;
  const char *v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = sqlite3_errcode(a1);
  v5 = v4;
  if ((v4 - 100) >= 2 && v4)
  {
    +[MFMailMessageLibraryMigrator log](MFMailMessageLibraryMigrator, "log");
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      v7[0] = 67109634;
      v7[1] = v5;
      v8 = 2114;
      v9 = v3;
      v10 = 2082;
      v11 = sqlite3_errmsg(a1);
      _os_log_impl(&dword_1A4F90000, v6, OS_LOG_TYPE_DEFAULT, "Error %d %{public}@: %{public}s", (uint8_t *)v7, 0x1Cu);
    }

  }
}

void sub_1A4FB6C04(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FB6E60(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A4FB6FA4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FB72E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, void *a17)
{
  void *v17;

  _Unwind_Resume(a1);
}

void sub_1A4FB7658(_Unwind_Exception *a1, uint64_t a2, ...)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  va_list va;

  va_start(va, a2);

  __destructor_8_s0_s8_s16_s72((id *)va);
  _Unwind_Resume(a1);
}

void sub_1A4FB779C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FB784C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FB7A54(_Unwind_Exception *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, void *a9, void *a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  va_list va;

  va_start(va, a14);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __destructor_8_s0_s8_s16_s72(id *a1)
{

}

id tablesForBaseTableAndOtherTables(int a1, unsigned int a2)
{
  const char *v2;
  unsigned int v3;
  const char *v4;
  unsigned int v5;
  const char *v6;
  const char *v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  BOOL v12;
  int v13;
  const char *v14;
  char *v15;
  void *v16;
  char *v18;

  v2 = "messages %s";
  v3 = a2 & 0xFFFFFFBF;
  v4 = "attachments AS attachment JOIN messages ON attachment.message_id = messages.ROWID %s";
  v5 = a2 & 0xFFFEFFFF;
  v6 = "senders JOIN sender_addresses ON senders.ROWID = sender_addresses.sender JOIN messages ON senders_addresses.addre"
       "ss = messages.sender %s";
  v7 = "brand_indicators JOIN messages ON brand_indicators.ROWID = messages.brand_indicator %s";
  v8 = a2 & 0xFFFDFFFF;
  if (a1 != 0x20000)
  {
    v8 = a2;
    v7 = "messages %s";
  }
  if (a1 != 0x10000)
  {
    v5 = v8;
    v6 = v7;
  }
  if (a1 != 64)
  {
    v3 = v5;
    v4 = v6;
  }
  v9 = a2 & 0xFFFFFFFD;
  v10 = a2 & 0xFFFFFFF7;
  v11 = a2 & 0xFFFFFFEF;
  if (a1 == 16)
    v2 = "mailboxes JOIN messages ON mailboxes.ROWID = messages.mailbox %s";
  else
    v11 = a2;
  if (a1 == 8)
    v2 = "addresses AS sender JOIN messages ON sender.ROWID = messages.sender %s";
  else
    v10 = v11;
  if (a1 == 2)
    v2 = "addresses AS recipient JOIN recipients ON recipient.ROWID = recipients.address JOIN messages ON recipients.mess"
         "age = messages.ROWID %s";
  else
    v9 = v10;
  v12 = a1 <= 63;
  if (a1 <= 63)
    v13 = v9;
  else
    v13 = v3;
  if (v12)
    v14 = v2;
  else
    v14 = v4;
  v15 = joinsForTables(v13);
  v18 = (char *)0xAAAAAAAAAAAAAAAALL;
  asprintf(&v18, v14, v15);
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", v18);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  free(v18);
  free(v15);
  return v16;
}

char *joinsForTables(int a1)
{
  const char *v2;
  int v3;
  const char *v4;
  int v5;
  const char *v6;
  const char *v7;
  const char *v8;
  const char *v9;
  const char *v10;
  const char *v11;
  const char *v12;
  const char *v13;
  const char *v14;
  const char *v15;
  char *v17;

  v2 = "";
  if (_os_feature_enabled_impl())
  {
    v3 = EMIsGreymatterSupportedWithOverride();
    v4 = " LEFT OUTER JOIN generated_summaries ON message_global_data.generated_summary = generated_summaries.ROWID";
    if ((a1 & 0x1000) == 0)
      v4 = "";
    if (v3)
      v2 = v4;
    else
      v2 = "";
  }
  v5 = _os_feature_enabled_impl();
  v6 = " LEFT OUTER JOIN business_addresses ON messages.sender = business_addresses.address";
  if ((a1 & 0x80000) == 0)
    v6 = "";
  if (!v5)
    v6 = "";
  v7 = " JOIN searchable_rebuild ON messages.rowid = searchable_rebuild.message_id";
  if ((a1 & 0x40000) == 0)
    v7 = "";
  v8 = " LEFT OUTER JOIN brand_indicators ON messages.brand_indicator = brand_indicators.ROWID";
  if ((a1 & 0x20000) == 0)
    v8 = "";
  v9 = " LEFT OUTER JOIN sender_addresses ON messages.sender = sender_addresses.address LEFT OUTER JOIN senders ON sender"
       "_addresses.sender = senders.ROWID";
  if ((a1 & 0x10000) == 0)
    v9 = "";
  v10 = " LEFT OUTER JOIN message_global_data ON messages.global_message_id = message_global_data.ROWID";
  if ((a1 & 0x8000) == 0)
    v10 = "";
  v11 = " JOIN conversations AS conversations ON messages.conversation_id = conversations.conversation_id";
  if ((a1 & 0x400) == 0)
    v11 = "";
  v12 = " LEFT OUTER JOIN summaries ON messages.summary = summaries.ROWID";
  if ((a1 & 0x1000) == 0)
    v12 = "";
  v13 = " JOIN mailboxes AS mailbox ON messages.mailbox = mailbox.ROWID";
  if ((a1 & 0x10) == 0)
    v13 = "";
  v14 = " LEFT OUTER JOIN addresses AS sender ON messages.sender = sender.ROWID";
  if ((a1 & 8) == 0)
    v14 = "";
  v15 = " LEFT OUTER JOIN subjects ON messages.subject = subjects.ROWID";
  if ((a1 & 4) == 0)
    v15 = "";
  v17 = (char *)0xAAAAAAAAAAAAAAAALL;
  asprintf(&v17, "%s%s%s%s%s%s%s%s%s%s%s", v15, v14, v13, v12, v11, v10, v2, v9, v8, v7, v6);
  return v17;
}

void sub_1A4FB7EB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 64), 8);

  _Unwind_Resume(a1);
}

void sub_1A4FB7F50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FB8414(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, void *a16, uint64_t a17, void *a18, void *a19, void *a20)
{
  void *v20;

  _Unwind_Resume(a1);
}

void sub_1A4FB8AC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12)
{
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_1A4FB8BE8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FB8E74(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FB8FD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1A4FB9034()
{
  JUMPOUT(0x1A4FB9020);
}

void sub_1A4FB90A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FB923C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FB9338(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FB93FC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FB9754(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_1A4FB984C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FB9948(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FB99F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FB9C4C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FB9CF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void __receivingEmailAddressesCache_block_invoke()
{
  id v0;
  void *v1;

  v0 = objc_alloc_init(MEMORY[0x1E0D1EED8]);
  v1 = (void *)receivingEmailAddressesCache__receivingEmailAddressesCache;
  receivingEmailAddressesCache__receivingEmailAddressesCache = (uint64_t)v0;

}

void sub_1A4FBA124(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FBA21C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FBA324(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A4FBA3F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FBA554(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, void *a20)
{
  void *v20;
  id *v21;
  void *v22;
  void *v23;
  uint64_t v24;

  objc_destroyWeak(v21);
  objc_destroyWeak((id *)(v24 - 72));

  _Unwind_Resume(a1);
}

void sub_1A4FBAAF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

BOOL _IsWiFiEnabled(const __SCPreferences *a1)
{
  const __CFBoolean *Value;
  CFTypeID TypeID;
  _BOOL8 v4;

  Value = (const __CFBoolean *)SCPreferencesGetValue(a1, CFSTR("AllowEnable"));
  if (Value && (TypeID = CFNumberGetTypeID(), TypeID == CFGetTypeID(Value)))
    v4 = CFBooleanGetValue(Value) != 0;
  else
    v4 = *MEMORY[0x1E0C9AE50] == (_QWORD)Value;
  SCPreferencesSynchronize(a1);
  return v4;
}

void sub_1A4FBAD8C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FBAEA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A4FBB1F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FBB354(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FBB3D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A4FBB514(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FBB6C4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FBB918(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  void *v14;
  void *v15;
  void *v16;
  id *v17;
  void *v18;
  void *v19;

  v19 = v18;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);

  _Unwind_Resume(a1);
}

void sub_1A4FBBA58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  void *v14;
  id *v15;

  objc_destroyWeak(v15);

  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1A4FBBB50(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FBBCE8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4FBBED0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FBBF94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1A4FBC058(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4FBC490(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15)
{
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  _Unwind_Resume(a1);
}

void sub_1A4FBC764(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A4FBC8C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FBCA54(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FBCAD4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FBCB20(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FBCB98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A4FBCC24(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FBCCD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FBCD64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1A4FBCFA0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4FBD054(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FBD0B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FBD1C8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FBD2C8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FBD348(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FBD3C8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FBD6E4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void __tableNamesForTableOptions_block_invoke()
{
  id v0;
  void *v1;

  v0 = objc_alloc_init(MEMORY[0x1E0D1EED8]);
  v1 = (void *)tableNamesForTableOptions_cachedSets;
  tableNamesForTableOptions_cachedSets = (uint64_t)v0;

}

void sub_1A4FBD7AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FBDE5C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4FBDFC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

uint64_t initPLShouldLogRegisteredEvent(uint64_t a1, uint64_t a2)
{
  if (LoadPowerLog_loadPredicate != -1)
    dispatch_once(&LoadPowerLog_loadPredicate, &__block_literal_global_227);
  softLinkPLShouldLogRegisteredEvent = (uint64_t (*)())dlsym((void *)LoadPowerLog_frameworkLibrary, "PLShouldLogRegisteredEvent");
  return ((uint64_t (*)(uint64_t, uint64_t))softLinkPLShouldLogRegisteredEvent)(a1, a2);
}

uint64_t initPLLogRegisteredEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (LoadPowerLog_loadPredicate != -1)
    dispatch_once(&LoadPowerLog_loadPredicate, &__block_literal_global_227);
  softLinkPLLogRegisteredEvent = (uint64_t (*)())dlsym((void *)LoadPowerLog_frameworkLibrary, "PLLogRegisteredEvent");
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))softLinkPLLogRegisteredEvent)(a1, a2, a3, a4);
}

void sub_1A4FBE10C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FBE190(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FBE2E4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FBE3BC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A4FBE444(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FBE4FC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FBE660(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FBE6E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)SMTPAccount;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_1A4FBE75C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)MFTaskAssertion;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_1A4FBE854(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FBE990(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t block_copy_helper_327(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  swift_retain();
  result = a1;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  return result;
}

void sub_1A4FBEAF4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FBEE50(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FBEF14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FBF07C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FBF1D0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FBF400(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

void sub_1A4FBF548(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FBF828(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A4FBF994(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FBFB0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, void *a8, uint64_t a9, ...)
{
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  va_list va;

  va_start(va, a9);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4FBFCD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;

  _Block_object_dispose((const void *)(v17 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1A4FBFF78(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

const __CFString *expressionForOperator(unint64_t a1)
{
  int v1;
  NSObject *v3;
  _DWORD v4[2];
  uint64_t v5;

  v1 = a1;
  v5 = *MEMORY[0x1E0C80C00];
  if (a1 < 8)
    return off_1E4E88C38[a1];
  MFLogGeneral();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4[0] = 67109120;
    v4[1] = v1;
    _os_log_impl(&dword_1A4F90000, v3, OS_LOG_TYPE_INFO, "unsupported operator %d", (uint8_t *)v4, 8u);
  }

  return CFSTR("=");
}

void sub_1A4FC0320(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4FC2490(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, void *a18)
{
  void *v18;
  void *v19;
  void *v20;

  _Unwind_Resume(a1);
}

void sub_1A4FC2B24(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_1A4FC31D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  _Unwind_Resume(a1);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v4;

  v4 = *a1;
  if (*a1 < 0)
  {
    v2 = MEMORY[0x1A85B185C]((char *)a1 + (int)*a1, -(*a1 >> 32), 0);
    *a1 = v2;
    return v2;
  }
  return v4;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName_0(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1A85B185C]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = a2;
  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
    return *(_QWORD *)a2;
  return v3;
}

uint64_t __swift_project_value_buffer_0(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v4;

  v4 = *a1;
  if (*a1 < 0)
  {
    v2 = MEMORY[0x1A85B1868](255, (char *)a1 + (int)*a1, -(*a1 >> 32), 0);
    *a1 = v2;
    return v2;
  }
  return v4;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract_0(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1A85B1868](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 24);
  if ((*(_DWORD *)(*(_QWORD *)(v2 - 8) + 80) & 0x20000) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1);
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t __swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t *v5;

  v5 = a2;
  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v2 = swift_slowAlloc();
    *a2 = v2;
    return v2;
  }
  return (uint64_t)v5;
}

uint64_t *__swift_allocate_value_buffer_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

void sub_1A4FC37F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FC3964(_Unwind_Exception *a1)
{

  _Unwind_Resume(a1);
}

void sub_1A4FC3B58(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FC3C10(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FC3DE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);

  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1A4FC3F44(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FC4208(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{

  _Unwind_Resume(a1);
}

void sub_1A4FC43BC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FC46C4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void _setUserInfoObjectForKey(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  os_unfair_lock_s *v10;

  v10 = a1;
  v5 = a2;
  v6 = a3;
  os_unfair_lock_lock(v10 + 10);
  v7 = *(void **)&v10[12]._os_unfair_lock_opaque;
  if (v5)
  {
    if (!v7)
    {
      v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E08]), "init");
      v9 = *(void **)&v10[12]._os_unfair_lock_opaque;
      *(_QWORD *)&v10[12]._os_unfair_lock_opaque = v8;

      v7 = *(void **)&v10[12]._os_unfair_lock_opaque;
    }
    objc_msgSend(v7, "setObject:forKey:", v5, v6);
  }
  else if (v7)
  {
    objc_msgSend(v7, "removeObjectForKey:", v6);
  }
  os_unfair_lock_unlock(v10 + 10);

}

void sub_1A4FC4808(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  os_unfair_lock_s *v12;

  os_unfair_lock_unlock(v12);

  _Unwind_Resume(a1);
}

void sub_1A4FC4BD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,void *a29,void *a30)
{
  void *v30;
  void *v31;
  void *v32;
  void *v33;

  _Unwind_Resume(a1);
}

void sub_1A4FC4E88(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FC4F10(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FC50BC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4FC53D4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FC5654(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11)
{

  _Unwind_Resume(a1);
}

void sub_1A4FC573C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FC58BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_1A4FC5930(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FC5998(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FC5B58(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FC5E5C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FC5F04(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FC5FD0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FC6284(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  void *v27;
  void *v28;
  void *v29;
  void *v30;

  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void sub_1A4FC63F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FC6578(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FC663C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FC67D8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FC6870(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FC68DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FC6934(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FC69C0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FC6B04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FC6C00(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FC6F04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11)
{
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1A4FC7004(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FC7094(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A4FC70F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FC7248(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FC72B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FC7320(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A4FC73E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FC74C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FC75E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FC76C0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4FC7734(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FC7784(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FC77D4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FC7884(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FC7944(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A4FC79A4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FC7A10(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FC7A58(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FC7AD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A4FC7B60(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FC7C70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;

  _Unwind_Resume(a1);
}

void sub_1A4FC7EC4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FC810C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_1A4FC8254(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;

  _Unwind_Resume(a1);
}

void sub_1A4FC843C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FC84D4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FC8588(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FC8620(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FC873C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FC8838(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FC8894(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FC8944(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FC8A28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FC8B4C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FC8C34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FC8CDC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FC8D88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FC8E00(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FC8E5C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FC900C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  void *v20;

  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{

}

void sub_1A4FC9190(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FC93C0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FC946C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FC951C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FC95E0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FC965C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FC9760(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v6 = v4;

  _Unwind_Resume(a1);
}

void sub_1A4FC984C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1A4FC9954(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4FC9A90(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FC9B94(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FC9C34(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FC9C88(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FC9D2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A4FC9DB8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FC9E24(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id usernameForConfiguration(void *a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v3 = a2;
  objc_msgSend(a1, "objectForKey:", CFSTR("AccountConfigUsernameIncludesDomain"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4
    || (v5 = objc_msgSend(v3, "rangeOfString:", CFSTR("@")), v5 + v6 >= (unint64_t)objc_msgSend(v3, "length"))
    || (objc_msgSend(v3, "substringWithRange:", 0, v5), (v7 = (id)objc_claimAutoreleasedReturnValue()) == 0))
  {
    v7 = v3;
  }

  return v7;
}

void sub_1A4FC9F50(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void _MFCopyAccountsForAddressAndConfigurations(void *a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  void *v10;
  int v11;
  __CFString *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;

  v21 = a1;
  v7 = a2;
  v8 = a3;
  v9 = a4;
  if (v7)
  {
    objc_msgSend(v7, "objectForKey:", CFSTR("Protocol"));
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = objc_msgSend(v10, "isEqual:", CFSTR("POP"));

    if (v11)
      v12 = CFSTR("POPAccount");
    else
      v12 = CFSTR("IMAPAccount");
    NSClassFromString(&v12->isa);
    v13 = (void *)objc_msgSend((id)objc_opt_class(), "newAccountWithDictionary:", v7);
    objc_msgSend(v9, "setAccount:", v13);

    usernameForConfiguration(v7, v21);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "account");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "setUsername:", v14);

  }
  if (v8)
  {
    v16 = +[MFAccount newAccountWithDictionary:](SMTPAccount, "newAccountWithDictionary:", v8);
    objc_msgSend(v9, "setDeliveryAccount:", v16);

    objc_msgSend(v9, "deliveryAccount");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    if (v17)
    {
      objc_msgSend(v8, "objectForKey:", CFSTR("AuthenticationScheme"));
      v18 = (void *)objc_claimAutoreleasedReturnValue();

      if (v18)
      {
        usernameForConfiguration(v8, v21);
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "deliveryAccount");
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v20, "setUsername:", v19);

      }
    }
  }

}

void sub_1A4FCA108(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;

  v15 = v13;

  _Unwind_Resume(a1);
}

uint64_t _MFCopyAccountsFromDomainNode(uint64_t a1, void *a2, void *a3, void *a4, int a5)
{
  id v9;
  id v10;
  uint64_t v11;
  char v12;
  void *v13;
  uint64_t v14;
  char v15;
  const char *v16;
  void *v17;
  int v18;
  void *v19;
  _QWORD *v20;
  const char *v21;
  void *v22;
  void *v23;
  _QWORD *v24;
  const char *v25;
  uint64_t v26;
  const char *v27;
  uint64_t v28;
  const char *v29;
  void *v30;
  int v32;
  void *v33;
  id v34;
  void *v35;

  v34 = a2;
  v9 = a3;
  v10 = a4;
  v11 = *(_QWORD *)(a1 + 24);
  if (!v9)
  {
    objc_msgSend(MEMORY[0x1E0C99D20], "array");
    v9 = (id)objc_claimAutoreleasedReturnValue();
    if (v11)
      goto LABEL_3;
LABEL_47:
    v13 = 0;
    v30 = 0;
    v14 = 0;
    goto LABEL_48;
  }
  if (!v11)
    goto LABEL_47;
LABEL_3:
  v32 = a5;
  v33 = v9;
  v12 = 0;
  v13 = 0;
  v35 = 0;
  v14 = 0;
  while (1)
  {
    do
    {
      v15 = v12;
      v16 = *(const char **)(v11 + 16);
      if (v16)
      {
        if (!strcmp(*(const char **)(v11 + 16), "name"))
        {
          v11 = *(_QWORD *)(v11 + 48);
          if (!v11)
            goto LABEL_44;
          break;
        }
        if ((_DWORD)v14 != 1 && !strcmp(v16, "service"))
        {
          if (!v35)
          {
            v24 = *(_QWORD **)(v11 + 24);
            while (v24)
            {
              v25 = (const char *)v24[2];
              if (v25 && !strcmp(v25, "protocol"))
              {
                v26 = v24[3];
                if (v26)
                {
                  v27 = *(const char **)(v26 + 80);
                  if (v27)
                  {
                    if (!strcmp(*(const char **)(v26 + 80), "IMAP") || !strcmp(v27, "POP"))
                    {
                      copySingleConfiguration(v11, v33, v10, v32);
                      v14 = 2;
                      v35 = (void *)objc_claimAutoreleasedReturnValue();
                      goto LABEL_24;
                    }
                  }
                }
                break;
              }
              v24 = (_QWORD *)v24[6];
              if (!v24)
                break;
            }
          }
          if (!v13)
          {
            v20 = *(_QWORD **)(v11 + 24);
            while (1)
            {
              if (!v20)
                goto LABEL_23;
              v21 = (const char *)v20[2];
              if (v21)
              {
                if (!strcmp(v21, "protocol"))
                  break;
              }
              v20 = (_QWORD *)v20[6];
              if (!v20)
                goto LABEL_23;
            }
            v28 = v20[3];
            if (!v28 || (v29 = *(const char **)(v28 + 80)) == 0 || strcmp(v29, "SMTP"))
            {
LABEL_23:
              v13 = 0;
              goto LABEL_24;
            }
            copySingleConfiguration(v11, v33, v10, v32);
            v14 = 2;
            v13 = (void *)objc_claimAutoreleasedReturnValue();
          }
        }
        else
        {
          objc_msgSend(v10, "localizedNotes");
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          if (v17 && (v18 = strcmp(v16, "note"), v17, !v18))
          {
            copyLocalizedNotesFromNode(v11);
            v19 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v10, "setLocalizedNotes:", v19);

          }
          else if (!strcmp(v16, "unsupported"))
          {
            v14 = 1;
          }
          else
          {
            v14 = v14;
          }
        }
      }
LABEL_24:
      v11 = *(_QWORD *)(v11 + 48);
      if (!v11)
        goto LABEL_44;
      v12 = 0;
    }
    while ((v15 & 1) == 0);
    objc_msgSend(v10, "account");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = 1;
    if (v22)
    {
      objc_msgSend(v10, "deliveryAccount");
      v23 = (void *)objc_claimAutoreleasedReturnValue();

      v12 = 1;
      if (v23)
        break;
    }
  }
LABEL_44:
  v9 = v33;
  v30 = v35;
  if ((_DWORD)v14 == 2)
  {
    _MFCopyAccountsForAddressAndConfigurations(v34, v35, v13, v10);
    v14 = 2;
  }
LABEL_48:

  return v14;
}

void sub_1A4FCA480(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v16;

  v16 = v11;

  _Unwind_Resume(a1);
}

uint64_t _MFCurrentCapabilities()
{
  return objc_msgSend(MEMORY[0x1E0C99D20], "array");
}

id copySingleConfiguration(uint64_t a1, void *a2, void *a3, int a4)
{
  id v6;
  id v7;
  uint64_t v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  __CFString *v13;
  id v14;
  int v15;
  __CFString *v16;
  int v17;
  int v18;
  id v19;
  void *v20;
  void *v21;
  NSObject *v23;
  const __CFString *v25;
  id v27;
  uint8_t buf[4];
  uint64_t v29;
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v27 = a2;
  v6 = a3;
  v7 = objc_alloc_init(MEMORY[0x1E0C99E08]);
  v8 = *(_QWORD *)(a1 + 24);
  v25 = CFSTR("PortNumber");
  while (v8)
  {
    v9 = *(const char **)(v8 + 16);
    if (v9)
    {
      v10 = *(_QWORD *)(v8 + 24);
      if (v10 && (v11 = *(_QWORD *)(v10 + 80)) != 0)
      {
        if (!strcmp(*(const char **)(v8 + 16), "requires"))
        {
          if (a4)
          {
            objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", v11);
            v13 = (__CFString *)objc_claimAutoreleasedReturnValue();
            if (objc_msgSend(v27, "indexOfObject:", v13) == 0x7FFFFFFFFFFFFFFFLL)
            {
              MFLogGeneral();
              v23 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
              {
                *(_DWORD *)buf = 136315138;
                v29 = -[__CFString UTF8String](objc_retainAutorelease(v13), "UTF8String");
                _os_log_impl(&dword_1A4F90000, v23, OS_LOG_TYPE_INFO, "#ACE-DB ignoring service because capability '%s' is not satisfied", buf, 0xCu);
              }

              v7 = 0;
              break;
            }
            goto LABEL_35;
          }
        }
        else
        {
          objc_msgSend(v6, "localizedNotes");
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          if (v12)
          {

            goto LABEL_17;
          }
          if (!strcmp(v9, "note"))
          {
            copyLocalizedNotesFromNode(v8);
            v21 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v6, "setLocalizedNotes:", v21);

          }
          else
          {
LABEL_17:
            if (!strcmp(v9, "protocol"))
            {
              v13 = CFSTR("Protocol");
              goto LABEL_24;
            }
            v15 = strcmp(v9, "hostname");
            v16 = CFSTR("Hostname");
            if (!v15
              || (v17 = strcmp(v9, "port"), v16 = (__CFString *)v25, !v17)
              || (v18 = strcmp(v9, "authentication"), v16 = CFSTR("AuthenticationScheme"), !v18))
            {
              v13 = v16;
              if (!v13)
              {
LABEL_30:
                v14 = 0;
                goto LABEL_34;
              }
LABEL_24:
              if (v13 == CFSTR("AuthenticationScheme"))
              {
                v19 = (id)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3940]), "initWithUTF8String:", v11);
                objc_msgSend(MEMORY[0x1E0D1E688], "schemeWithName:", v19);
                v20 = (void *)objc_claimAutoreleasedReturnValue();

                if (v20)
                  v14 = v19;
                else
                  v14 = 0;

              }
              else
              {
                v14 = (id)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3940]), "initWithUTF8String:", v11);
              }
              objc_msgSend(v7, "setValue:forKey:", v14, v13, v25);
LABEL_34:

LABEL_35:
              goto LABEL_36;
            }
          }
        }
      }
      else
      {
        if (!strcmp(*(const char **)(v8 + 16), "usernameIncludesDomain"))
        {
          v13 = 0;
          v14 = 0;
          objc_msgSend(v7, "setValue:forKey:", CFSTR("YES"), CFSTR("AccountConfigUsernameIncludesDomain"));
          goto LABEL_34;
        }
        if (!strcmp(v9, "ssl"))
        {
          v13 = 0;
          v14 = 0;
          objc_msgSend(v7, "setValue:forKey:", CFSTR("YES"), CFSTR("SSLEnabled"));
          goto LABEL_34;
        }
      }
      v13 = 0;
      goto LABEL_30;
    }
LABEL_36:
    v8 = *(_QWORD *)(v8 + 48);
    if (!v8)
      break;
  }

  return v7;
}

void sub_1A4FCA878(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  void *v12;
  void *v13;
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

id copyLocalizedNotesFromNode(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  void *v9;
  id v10;

  v1 = *(_QWORD *)(a1 + 24);
  if (v1)
  {
    v2 = 0;
    v3 = 0;
    v4 = 0;
    while (1)
    {
      v5 = *(_QWORD *)(v1 + 24);
      if (!v5)
        goto LABEL_13;
      v6 = *(const char **)(v1 + 16);
      v7 = *(_QWORD *)(v5 + 80);
      if (!v6 || v7 == 0)
        goto LABEL_13;
      if (v3 || strcmp(*(const char **)(v1 + 16), "lang"))
        break;
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", v7);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "lowercaseString");
      v3 = (void *)objc_claimAutoreleasedReturnValue();

      if (!v3)
        goto LABEL_19;
LABEL_14:
      if (v2)
      {
        if (!v4)
          v4 = objc_alloc_init(MEMORY[0x1E0C99E08]);
        objc_msgSend(v4, "setObject:forKey:", v2, v3);

        v3 = 0;
LABEL_18:
        v2 = 0;
      }
LABEL_19:
      v1 = *(_QWORD *)(v1 + 48);
      if (!v1)
        goto LABEL_24;
    }
    if (!v2)
    {
      if (strcmp(v6, "content"))
        goto LABEL_18;
      v2 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3940]), "initWithUTF8String:", v7);
    }
LABEL_13:
    if (!v3)
      goto LABEL_19;
    goto LABEL_14;
  }
  v4 = 0;
  v3 = 0;
  v2 = 0;
LABEL_24:
  v10 = v4;

  return v10;
}

void sub_1A4FCAA54(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

uint64_t _MFCopyAccountsFromDomainData(void *a1, void *a2, void *a3, void *a4, int a5)
{
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  const xmlDoc *Memory;
  xmlDoc *v15;
  xmlNodePtr RootElement;
  uint64_t v17;

  v9 = a1;
  v10 = a2;
  v11 = a3;
  v12 = a4;
  v13 = objc_retainAutorelease(v9);
  Memory = xmlReadMemory((const char *)objc_msgSend(v13, "bytes"), objc_msgSend(v13, "length"), "null", "UTF-8", 1);
  v15 = (xmlDoc *)Memory;
  if (Memory)
  {
    RootElement = xmlDocGetRootElement(Memory);
    if (RootElement)
      v17 = _MFCopyAccountsFromDomainNode((uint64_t)RootElement, v10, v11, v12, a5);
    else
      v17 = 0;
    xmlFreeDoc(v15);
  }
  else
  {
    v17 = 0;
  }

  return v17;
}

void sub_1A4FCAB68(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

_QWORD *domainChildWithName(uint64_t a1, id a2)
{
  _QWORD *v2;
  const char *v3;
  const char *v4;
  _QWORD *v5;
  const char *v6;
  uint64_t v7;
  const char *v8;

  v2 = *(_QWORD **)(a1 + 24);
  v3 = (const char *)objc_msgSend(objc_retainAutorelease(a2), "UTF8String");
  do
  {
    if (!v2)
      break;
    v4 = (const char *)v2[2];
    if (v4)
    {
      if (!strcmp(v4, "domain"))
      {
        v5 = (_QWORD *)v2[3];
        if (v5)
        {
          while (1)
          {
            v6 = (const char *)v5[2];
            if (v6)
            {
              if (!strcmp(v6, "name"))
                break;
            }
            v5 = (_QWORD *)v5[6];
            if (!v5)
              goto LABEL_5;
          }
          v7 = v5[3];
          if (v7)
          {
            v8 = *(const char **)(v7 + 80);
            if (v8)
            {
              if (!strcmp(v8, v3))
                break;
            }
          }
        }
      }
    }
LABEL_5:
    v2 = (_QWORD *)v2[6];
  }
  while (v2);
  return v2;
}

uint64_t _MFCopyAccountsFromDomainsNode(uint64_t a1, void *a2, void *a3, void *a4, int a5)
{
  id v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  _QWORD *v15;
  uint64_t v16;

  v9 = a2;
  v10 = a3;
  v11 = a4;
  objc_msgSend(v9, "emailAddressValue");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "domain");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "lowercaseString");
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  v15 = domainChildWithName(a1, v14);
  if (v15)
    v16 = _MFCopyAccountsFromDomainNode((uint64_t)v15, v9, v10, v11, a5);
  else
    v16 = 0;

  return v16;
}

void sub_1A4FCAD0C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

uint64_t _MFCopyAccountsFromDomainsData(void *a1, void *a2, void *a3, void *a4, int a5)
{
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  const xmlDoc *Memory;
  xmlDoc *v15;
  xmlNodePtr RootElement;
  uint64_t v17;

  v9 = a1;
  v10 = a2;
  v11 = a3;
  v12 = a4;
  v13 = objc_retainAutorelease(v9);
  Memory = xmlReadMemory((const char *)objc_msgSend(v13, "bytes"), objc_msgSend(v13, "length"), "null", "UTF-8", 1);
  v15 = (xmlDoc *)Memory;
  if (Memory)
  {
    RootElement = xmlDocGetRootElement(Memory);
    if (RootElement)
      v17 = _MFCopyAccountsFromDomainsNode((uint64_t)RootElement, v10, v11, v12, a5);
    else
      v17 = 0;
    xmlFreeDoc(v15);
  }
  else
  {
    v17 = 0;
  }

  return v17;
}

void sub_1A4FCAE34(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

uint64_t copyAccountsForEmailAddress(void *a1, void *a2, void *a3, uint64_t a4)
{
  id v7;
  void *v8;
  void *v9;
  void *v10;
  __CFString *v11;
  __CFString *v12;
  void *v13;
  id v14;
  void *v15;
  const __CFString *v16;
  NSObject *v17;
  id v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  NSObject *v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  NSObject *v32;
  NSObject *v33;
  uint64_t v34;
  void *v35;
  void *v36;
  BOOL v37;
  int v38;
  void *v39;
  void *v40;
  const xmlDoc *File;
  xmlDoc *v42;
  xmlNodePtr RootElement;
  NSObject *v44;
  const char *v45;
  void *v47;
  void *v48;
  __CFString *v49;
  id v50;
  id v51;
  uint8_t v52[8];
  uint64_t v53;
  uint8_t buf[4];
  uint64_t v55;
  uint64_t v56;

  v56 = *MEMORY[0x1E0C80C00];
  v7 = a1;
  v50 = a2;
  v51 = a3;
  objc_msgSend(v7, "emailAddressValue");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "domain");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "lowercaseString");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  if (v10)
  {
    if ((_DWORD)a4)
    {
      objc_msgSend(MEMORY[0x1E0C99EA0], "standardUserDefaults");
      v47 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v47, "BOOLForKey:", CFSTR("TestAccountConfiguration")))
      {
        objc_msgSend(v47, "stringForKey:", CFSTR("EasySetupHost"));
        v11 = (__CFString *)objc_claimAutoreleasedReturnValue();
        v12 = v11;
        if (v11 && !-[__CFString isEqualToString:](v11, "isEqualToString:", &stru_1E4F1C8F8))
        {
          v49 = v12;
        }
        else
        {

          v49 = CFSTR("mdev.apple.com");
        }
        objc_msgSend(v47, "objectForKey:", CFSTR("EasySetupUseSSL"));
        v13 = (void *)objc_claimAutoreleasedReturnValue();

        if (v13)
          LODWORD(v13) = objc_msgSend(v47, "BOOLForKey:", CFSTR("EasySetupUseSSL"));
      }
      else
      {
        LODWORD(v13) = 1;
        v49 = CFSTR("iphone-services.apple.com");
      }
      v14 = objc_alloc_init(MEMORY[0x1E0CB3998]);
      v15 = v14;
      if ((_DWORD)v13)
        v16 = CFSTR("https");
      else
        v16 = CFSTR("http");
      objc_msgSend(v14, "setScheme:", v16);
      objc_msgSend(v15, "setHost:", v49);
      objc_msgSend(v15, "setPath:", CFSTR("/iconfig/conf"));
      objc_msgSend(v15, "URL");
      v48 = (void *)objc_claimAutoreleasedReturnValue();
      MFLogGeneral();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
      {
        objc_msgSend(v48, "description");
        v18 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
        *(_DWORD *)buf = 136315138;
        v55 = objc_msgSend(v18, "UTF8String");
        _os_log_impl(&dword_1A4F90000, v17, OS_LOG_TYPE_INFO, "#ACE-DB using url %s", buf, 0xCu);

      }
      objc_msgSend(MEMORY[0x1E0C92C28], "requestWithURL:", v48);
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v19, "setHTTPMethod:", CFSTR("POST"));
      v20 = (void *)MEMORY[0x1E0CB3940];
      EFSystemVersion();
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v20, "stringWithFormat:", CFSTR("Apple iPhone MailConfig v%@"), v21);
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v19, "addValue:forHTTPHeaderField:", v22, CFSTR("User-agent"));

      v23 = (void *)MEMORY[0x1E0CB3940];
      objc_msgSend(v7, "emailAddressValue");
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v24, "domain");
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v23, "stringWithFormat:", CFSTR("domain=%@&version=1"), v25);
      v26 = (void *)objc_claimAutoreleasedReturnValue();

      MFLogGeneral();
      v27 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
      {
        v28 = objc_msgSend(objc_retainAutorelease(v26), "UTF8String");
        *(_DWORD *)buf = 136315138;
        v55 = v28;
        _os_log_impl(&dword_1A4F90000, v27, OS_LOG_TYPE_INFO, "#ACE-DB payload is %s", buf, 0xCu);
      }

      objc_msgSend(v26, "dataUsingEncoding:", 1);
      v29 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v19, "setHTTPBody:", v29);
      v53 = 0;
      v30 = (void *)MFCopyResponseDataForURLRequest(v19);
      v31 = 0;
      if (v30)
      {
        v32 = objc_msgSend(objc_alloc(MEMORY[0x1E0CB3940]), "initWithData:encoding:", v30, 4);
        MFLogGeneral();
        v33 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v33, OS_LOG_TYPE_INFO))
        {
          v34 = -[NSObject UTF8String](objc_retainAutorelease(v32), "UTF8String");
          *(_DWORD *)buf = 136315138;
          v55 = v34;
          _os_log_impl(&dword_1A4F90000, v33, OS_LOG_TYPE_INFO, "#ACE-DB response is %s", buf, 0xCu);
        }

        a4 = _MFCopyAccountsFromDomainData(v30, v7, v50, v51, 0);
      }
      else
      {
        MFLogGeneral();
        v32 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR))
        {
          objc_msgSend(v31, "ef_publicDescription");
          v35 = (void *)objc_claimAutoreleasedReturnValue();
          copyAccountsForEmailAddress_cold_1(v35, buf, v32);
        }
        a4 = 0;
      }

    }
    objc_msgSend(v51, "account");
    v36 = (void *)objc_claimAutoreleasedReturnValue();
    if (v36)
      v37 = 0;
    else
      v37 = (_DWORD)a4 == 0;
    v38 = v37;

    if (v38)
    {
      objc_msgSend(MEMORY[0x1E0CB34D0], "bundleForClass:", objc_opt_class());
      v39 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v39, "pathForResource:ofType:", CFSTR("EmailDomains"), CFSTR("xml"));
      v40 = (void *)objc_claimAutoreleasedReturnValue();

      if (v40)
      {
        File = xmlReadFile((const char *)objc_msgSend(objc_retainAutorelease(v40), "fileSystemRepresentation"), "UTF-8", 1);
        v42 = (xmlDoc *)File;
        if (File)
        {
          RootElement = xmlDocGetRootElement(File);
          if (RootElement)
            a4 = _MFCopyAccountsFromDomainsNode((uint64_t)RootElement, v7, v50, v51, 1);
          else
            a4 = 0;
          xmlFreeDoc(v42);
          goto LABEL_46;
        }
        MFLogGeneral();
        v44 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v44, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)v52 = 0;
          v45 = "Account database: failed to parse db file";
          goto LABEL_42;
        }
      }
      else
      {
        MFLogGeneral();
        v44 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v44, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)v52 = 0;
          v45 = "Account database: couldn't find path to db file";
LABEL_42:
          _os_log_impl(&dword_1A4F90000, v44, OS_LOG_TYPE_INFO, v45, v52, 2u);
        }
      }

      a4 = 0;
LABEL_46:

    }
  }
  else
  {
    a4 = 0;
  }

  return a4;
}

void sub_1A4FCB45C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;

  _Unwind_Resume(a1);
}

uint64_t AccountConfigurationServiceCopyAccountsForEmailAddress(void *a1, void **a2, void **a3, void **a4)
{
  id v7;
  void *v8;
  _MFAccountInformation *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;

  v7 = a1;
  objc_msgSend(MEMORY[0x1E0C99D20], "array");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_alloc_init(_MFAccountInformation);
  v10 = copyAccountsForEmailAddress(v7, v8, v9, 1);
  if (a2)
  {
    -[_MFAccountInformation account](v9, "account");
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = *a2;
    *a2 = (void *)v11;

  }
  if (a3)
  {
    -[_MFAccountInformation deliveryAccount](v9, "deliveryAccount");
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = *a3;
    *a3 = (void *)v13;

  }
  if (a4)
  {
    -[_MFAccountInformation localizedNotes](v9, "localizedNotes");
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = *a4;
    *a4 = (void *)v15;

  }
  return v10;
}

void sub_1A4FCB6BC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t AccountConfigurationServiceCopyAccountsForEmailAddressUsingAccountInfo(void *a1, void *a2, void **a3, void **a4, void **a5)
{
  id v9;
  id v10;
  _MFAccountInformation *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;

  v9 = a1;
  v10 = a2;
  v11 = objc_alloc_init(_MFAccountInformation);
  objc_msgSend(v10, "objectForKeyedSubscript:", CFSTR("Incoming"));
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "objectForKeyedSubscript:", CFSTR("Outgoing"));
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  _MFCopyAccountsForAddressAndConfigurations(v9, v12, v13, v11);

  if (a3)
  {
    -[_MFAccountInformation account](v11, "account");
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = *a3;
    *a3 = (void *)v14;

  }
  if (a4)
  {
    -[_MFAccountInformation deliveryAccount](v11, "deliveryAccount");
    v16 = objc_claimAutoreleasedReturnValue();
    v17 = *a4;
    *a4 = (void *)v16;

  }
  if (a5)
  {
    -[_MFAccountInformation localizedNotes](v11, "localizedNotes");
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = *a5;
    *a5 = (void *)v18;

  }
  if (a3 && !*a3)
    v20 = 1;
  else
    v20 = 2;

  return v20;
}

void sub_1A4FCB80C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A4FCB8F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)MFAccountValidator;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_1A4FCB9D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A4FCBA80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FCBB4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A4FCBBE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FCBCEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A4FCC6A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{

  JUMPOUT(0x1A4FCC868);
}

void sub_1A4FCC710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  void *v16;
  void *v17;

  JUMPOUT(0x1A4FCC868);
}

void sub_1A4FCC73C()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  _Unwind_Exception *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;

  _Unwind_Resume(v6);
}

void sub_1A4FCC754()
{
  void *v0;
  void *v1;

  JUMPOUT(0x1A4FCC844);
}

void sub_1A4FCC770()
{
  void *v0;

  JUMPOUT(0x1A4FCC868);
}

void sub_1A4FCC788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  void *v16;
  void *v17;

  JUMPOUT(0x1A4FCC868);
}

void sub_1A4FCC7A8()
{
  void *v0;

  JUMPOUT(0x1A4FCC844);
}

void sub_1A4FCC7B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  void *v16;
  void *v17;

  JUMPOUT(0x1A4FCC868);
}

void sub_1A4FCC7C0()
{
  JUMPOUT(0x1A4FCC870);
}

void sub_1A4FCC7C8()
{
  JUMPOUT(0x1A4FCC878);
}

void sub_1A4FCC7D0()
{
  void *v0;

  JUMPOUT(0x1A4FCC7D8);
}

void sub_1A4FCC7E4()
{
  JUMPOUT(0x1A4FCC83CLL);
}

void sub_1A4FCC804()
{
  JUMPOUT(0x1A4FCC848);
}

void sub_1A4FCC80C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  void *v16;
  void *v17;

  JUMPOUT(0x1A4FCC868);
}

void sub_1A4FCC828()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  _Unwind_Exception *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;

  _Unwind_Resume(v4);
}

void sub_1A4FCC834()
{
  void *v0;

  JUMPOUT(0x1A4FCC844);
}

id _openConnectionForAccount(void *a1, int a2, uint64_t a3)
{
  id v4;
  void *v5;
  id v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t i;
  void *v17;
  int v18;
  int v19;
  void *v20;
  uint64_t v21;
  void *v22;
  unint64_t v23;
  unint64_t v24;
  void *v25;
  void *v26;
  BOOL v27;
  void *v29;
  void *v30;
  char v31;
  char v32;
  void *v33;
  _QWORD *v36;
  id obj;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  _BYTE v42[128];
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  v4 = a1;
  v5 = v4;
  if (!v4)
  {
    v6 = 0;
    goto LABEL_46;
  }
  if (a2)
    objc_msgSend(v4, "secureConnectionSettings");
  else
    objc_msgSend(v4, "insecureConnectionSettings");
  obj = (id)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v5, "defaultPortNumber", a3);
  v8 = objc_msgSend(v5, "defaultSecurePortNumber");
  v9 = objc_msgSend(v5, "usesSSL");
  v10 = objc_msgSend(v5, "portNumber");
  v11 = v10;
  if (v9)
    v12 = v8;
  else
    v12 = v7;
  if (!v10 || v12 == v10)
    goto LABEL_30;
  v40 = 0u;
  v41 = 0u;
  v38 = 0u;
  v39 = 0u;
  obj = obj;
  v13 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v38, v42, 16);
  if (v13)
  {
    v14 = 0;
    v15 = *(_QWORD *)v39;
    do
    {
      for (i = 0; i != v13; ++i)
      {
        if (*(_QWORD *)v39 != v15)
          objc_enumerationMutation(obj);
        v17 = *(void **)(*((_QWORD *)&v38 + 1) + 8 * i);
        v18 = objc_msgSend(v17, "usesSSL");
        if (v18)
          v19 = v8;
        else
          v19 = v7;
        if (v11 != v19)
        {
          objc_msgSend(v17, "setPortNumber:", objc_msgSend(v5, "portNumber"));
          if (v18)
          {
            v20 = (void *)objc_msgSend(v17, "copy");
            objc_msgSend(v20, "setTryDirectSSL:", objc_msgSend(v17, "tryDirectSSL") ^ 1);
            if (!v14)
              v14 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
            objc_msgSend(v14, "addObject:", v20);

          }
        }
      }
      v13 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v38, v42, 16);
    }
    while (v13);

    if (!v14)
      goto LABEL_30;
    objc_msgSend(obj, "arrayByAddingObjectsFromArray:", v14);
    v21 = objc_claimAutoreleasedReturnValue();

    obj = (id)v21;
  }
  else
  {
    v14 = obj;
  }

LABEL_30:
  +[MFActivityMonitor currentMonitor](MFActivityMonitor, "currentMonitor");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v23 = objc_msgSend(obj, "count");
  v24 = 0;
  v25 = 0;
  v26 = 0;
  while (!v25)
  {
    if (v24 >= v23)
      goto LABEL_44;
LABEL_38:
    objc_msgSend(obj, "objectAtIndex:", v24);
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "applySettingsAsDefault:", v29);
    v30 = (void *)objc_msgSend(v5, "_newConnection");

    v31 = objc_msgSend(v30, "connectUsingAccount:", v5);
    v32 = v31 ^ 1;
    if (!v36)
      v32 = 1;
    if ((v32 & 1) == 0)
      *v36 = objc_retainAutorelease(v29);

    v26 = v30;
    objc_msgSend(v22, "error");
    v33 = (void *)objc_claimAutoreleasedReturnValue();

    ++v24;
    v25 = v33;
    if ((v31 & 1) != 0)
      goto LABEL_45;
  }
  v27 = +[MFConnection shouldTryFallbacksAfterError:](MFConnection, "shouldTryFallbacksAfterError:", v25);
  if (v24 < v23 && v27)
    goto LABEL_38;
LABEL_44:

  v26 = 0;
  v33 = v25;
LABEL_45:
  v6 = v26;

LABEL_46:
  return v6;
}

void sub_1A4FCCC08()
{
  void *v0;

  JUMPOUT(0x1A4FCCC8CLL);
}

void sub_1A4FCCC10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  JUMPOUT(0x1A4FCCC84);
}

void sub_1A4FCCC1C()
{
  JUMPOUT(0x1A4FCCC98);
}

void sub_1A4FCCC28()
{
  void *v0;

  JUMPOUT(0x1A4FCCC8CLL);
}

void sub_1A4FCCC38()
{
  JUMPOUT(0x1A4FCCC88);
}

void sub_1A4FCCC6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;

  JUMPOUT(0x1A4FCCC84);
}

void _closeConnection(void *a1)
{
  id v1;

  v1 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    objc_msgSend(v1, "quit");
  else
    objc_msgSend(v1, "disconnect");

}

void sub_1A4FCCD0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

id _accountTypeString(void *a1)
{
  id v1;
  void *v2;

  v1 = a1;
  objc_msgSend((id)objc_opt_class(), "accountTypeString");
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  return v2;
}

void sub_1A4FCCD58(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FCD150()
{
  void *v0;

  JUMPOUT(0x1A4FCD160);
}

void sub_1A4FCD168()
{
  void *v0;
  void *v1;

  JUMPOUT(0x1A4FCD184);
}

void sub_1A4FCD180(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A4FCD1A4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A4FCD1B0()
{
  JUMPOUT(0x1A4FCD1CCLL);
}

void sub_1A4FCD378(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A4FCD45C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FCD4D4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FCD54C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FCD678(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FCD6FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FCD7F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FCDA28(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FCDAE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FCDB54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FCDBE4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FCDD80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FCDE60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A4FCDF3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FCE0D0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FCE194(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FCE1FC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FCE250(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FCE3D4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FCE468(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FCE51C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FCE6D0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1A4FCE894(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v6 = v5;

  _Unwind_Resume(a1);
}

void sub_1A4FCE928(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)CastleIMAPAccount;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_1A4FCEA1C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FCEAA4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FCED4C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FCEDC8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FCEE5C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FCF374(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12)
{
  void *v12;
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1A4FCF518(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FCF584(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FCF5D0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FCF668(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FCF738(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FCF7A8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FCF930(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A4FCFA3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1A4FCFAEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A4FCFC98(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4FCFD5C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FCFDF4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FCFF40(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FCFFA0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FD01E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A4FD02D4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FD0368(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FD03F4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FD044C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FD0564(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FD05E4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FD0658(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FD0764(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1A4FD0864(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A4FD0954(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FD0C08(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FD0D0C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FD0EE4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FD1274(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FD1434(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FD14A0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FD1508(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_1A4FD19B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, uint64_t a14, void *a15, void *a16, void *a17, void *a18, void *a19)
{

  _Unwind_Resume(a1);
}

void sub_1A4FD1DAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_1A4FD1E70(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FD1ED4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FD1FB8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FD22A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A4FD2AB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18)
{
  void *v18;
  void *v19;
  void *v20;

  _Unwind_Resume(a1);
}

void sub_1A4FD2CA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A4FD2D10(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void _logEvent(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  void *v17;
  id v18;
  void *context;
  id v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _BYTE v25[128];
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v20 = a1;
  context = (void *)MEMORY[0x1A85B0E24]();
  objc_msgSend((id)sLogLock, "lock");
  objc_msgSend(MEMORY[0x1E0C99DF0], "data");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = v11;
  if (a3 && a4)
  {
    if (a5 != 0x7FFFFFFFFFFFFFFFLL && a5 < a4 && a6)
    {
      objc_msgSend(v11, "appendBytes:length:", a3, a5);
      objc_msgSend(v12, "appendBytes:length:", "[Omitted]", 9);
      a4 -= a6 + a5;
      if (!a4)
        goto LABEL_10;
      a3 += a6 + a5;
    }
    objc_msgSend(v12, "appendBytes:length:", a3, a4);
  }
  else
  {
    objc_msgSend(v11, "appendBytes:length:", a3, a4);
  }
LABEL_10:
  v23 = 0u;
  v24 = 0u;
  v21 = 0u;
  v22 = 0u;
  v13 = (id)sLogClasses;
  v14 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
  if (v14)
  {
    v15 = *(_QWORD *)v22;
    do
    {
      for (i = 0; i != v14; ++i)
      {
        if (*(_QWORD *)v22 != v15)
          objc_enumerationMutation(v13);
        v17 = *(void **)(*((_QWORD *)&v21 + 1) + 8 * i);
        if (class_getClassMethod((Class)v17, sel_logConnection_type_data_))
        {
          objc_msgSend(v17, "logConnection:type:data:", v20, a2, v12);
        }
        else
        {
          v18 = objc_retainAutorelease(v12);
          objc_msgSend(v17, "logBytes:length:", objc_msgSend(v18, "bytes"), objc_msgSend(v18, "length"));
        }
        objc_msgSend(v17, "flushLog");
      }
      v14 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
    }
    while (v14);
  }

  objc_msgSend((id)sLogLock, "unlock");
  objc_autoreleasePoolPop(context);

}

void sub_1A4FD2F58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A4FD3054(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FD3140(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1A4FD32EC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FD33E0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FD3608(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A4FD383C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FD3EC0(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, void *a19)
{
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  id v27;
  void *v28;
  void *v29;

  if (a2 == 1)
  {
    v27 = objc_begin_catch(a1);
    +[MFActivityMonitor currentMonitor](MFActivityMonitor, "currentMonitor");
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    +[MFError errorWithException:](MFError, "errorWithException:", v27);
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v28, "setError:", v29);

    objc_end_catch();
    JUMPOUT(0x1A4FD3E44);
  }

  _Unwind_Resume(a1);
}

void sub_1A4FD40D4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FD4260(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t _fillBuffer(void *a1)
{
  id v1;
  void *v2;
  __int16 v3;
  size_t v4;
  void *v5;
  void *v6;
  size_t v7;
  void *v8;
  uint64_t BytesFromSocket;
  void *v10;
  uint64_t v11;
  size_t v12;
  void *v13;
  id v14;
  z_stream *v15;
  Bytef *v16;
  size_t v17;
  void *v18;
  uint64_t v19;
  unsigned int v21;

  v1 = a1;
  v2 = (void *)*((_QWORD *)v1 + 1);
  if (v2)
  {
    objc_msgSend(v2, "encryptionBufferSize");
    v21 = -1431655766;
    if (_readBytesFromSocket(v1, (uint64_t)&v21, 4, 1) != 4)
    {
LABEL_20:
      v11 = 0;
      *((_QWORD *)v1 + 7) = 0;
      goto LABEL_39;
    }
    v3 = v21;
    v4 = bswap32(v21) >> 16;
    if (*((_QWORD *)v1 + 8) != v4)
    {
      v5 = (void *)*((_QWORD *)v1 + 5);
      if (v5)
        v6 = malloc_type_realloc(v5, v4, 0x71DAA138uLL);
      else
        v6 = malloc_type_malloc(v4, 0x71CC2739uLL);
      *((_QWORD *)v1 + 5) = v6;
      *((_QWORD *)v1 + 8) = v4;
    }
    if (v3 && _readBytesFromSocket(v1, *((_QWORD *)v1 + 5), v4, 1) >= 1)
    {
      objc_msgSend(*((id *)v1 + 1), "createDecryptedDataForBytes:length:", *((_QWORD *)v1 + 5), v4);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      if (!v10)
        goto LABEL_20;
    }
    else
    {
      v10 = 0;
    }
    v12 = objc_msgSend(v10, "length");
    v13 = (void *)*((_QWORD *)v1 + 5);
    if (v12 != *((_QWORD *)v1 + 8))
    {
      v13 = malloc_type_realloc(*((void **)v1 + 5), v12, 0xC14EC0F3uLL);
      *((_QWORD *)v1 + 5) = v13;
      *((_QWORD *)v1 + 8) = v12;
    }
    objc_msgSend(v10, "getBytes:length:", v13, v12);
    *((_QWORD *)v1 + 6) = *((_QWORD *)v1 + 8);
    *((_QWORD *)v1 + 7) = 0;

  }
  else
  {
    v7 = *((_QWORD *)v1 + 9);
    if (!v7)
    {
      v7 = 0x8000;
      *((_QWORD *)v1 + 9) = 0x8000;
    }
    v8 = (void *)*((_QWORD *)v1 + 5);
    if (v7 != *((_QWORD *)v1 + 8))
    {
      if (v8)
        v8 = malloc_type_realloc(*((void **)v1 + 5), v7, 0xCCAD1428uLL);
      else
        v8 = malloc_type_malloc(v7, 0xCC8A127AuLL);
      *((_QWORD *)v1 + 5) = v8;
      *((_QWORD *)v1 + 8) = v7;
    }
    BytesFromSocket = _readBytesFromSocket(v1, (uint64_t)v8, v7, 0);
    *((_QWORD *)v1 + 6) = BytesFromSocket & ~(BytesFromSocket >> 63);
    if (BytesFromSocket < 1)
      goto LABEL_20;
  }
  if (*((_BYTE *)v1 + 109))
  {
    v14 = objc_alloc_init(MEMORY[0x1E0D46100]);
    v15 = (z_stream *)*((_QWORD *)v1 + 11);
    v16 = (Bytef *)*((_QWORD *)v1 + 5);
    v15->avail_in = *((_QWORD *)v1 + 6);
    v15->next_in = v16;
    do
    {
      v15->avail_out = NSPageSize();
      v15->next_out = (Bytef *)*((_QWORD *)v1 + 12);
      if (inflate(v15, 0) == -2)
        __assert_rtn("_fillBuffer", "Connection.m", 927, "Z_STREAM_ERROR != err");
      objc_msgSend(v14, "appendBytes:length:", *((_QWORD *)v1 + 12), NSPageSize() - v15->avail_out);
    }
    while (!v15->avail_out);
    v17 = objc_msgSend(v14, "length");
    if (v17)
    {
      *((_QWORD *)v1 + 8) = v17;
      *((_QWORD *)v1 + 6) = v17;
      v18 = malloc_type_realloc(*((void **)v1 + 5), v17, 0x26C0F934uLL);
      *((_QWORD *)v1 + 5) = v18;
      memcpy(v18, (const void *)objc_msgSend(objc_retainAutorelease(v14), "bytes"), *((_QWORD *)v1 + 8));
    }
    else
    {
      *((_QWORD *)v1 + 6) = 0;
    }

  }
  *((_QWORD *)v1 + 7) = 0;
  if (*((uint64_t *)v1 + 6) < 1)
  {
    v11 = 1;
  }
  else
  {
    v11 = 1;
    if (objc_msgSend(*((id *)v1 + 1), "encryptionBufferSize"))
      v19 = 2;
    else
      v19 = 1;
    _logEvent(v1, v19, *((_QWORD *)v1 + 5), *((_QWORD *)v1 + 6), 0x7FFFFFFFFFFFFFFFuLL, 0);
  }
LABEL_39:

  return v11;
}

void sub_1A4FD4570(_Unwind_Exception *exc_buf, int a2)
{
  _QWORD *v2;
  id v4;
  void *v5;
  void *v6;

  if (a2 == 1)
  {
    v4 = objc_begin_catch(exc_buf);
    v2[6] = 0;
    +[MFActivityMonitor currentMonitor](MFActivityMonitor, "currentMonitor");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    +[MFError errorWithException:](MFError, "errorWithException:", v4);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "setError:", v6);

    objc_msgSend(v4, "raise");
    objc_end_catch();
    JUMPOUT(0x1A4FD43C8);
  }

  _Unwind_Resume(exc_buf);
}

void sub_1A4FD4620()
{
  void *v0;
  void *v1;
  void *v2;

  objc_end_catch();
  JUMPOUT(0x1A4FD457CLL);
}

void sub_1A4FD46EC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FD47D0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A4FD48E8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A4FD4CC4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FD4D40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A4FD5210(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, void *a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id a26)
{
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;

  _Block_object_dispose((const void *)(v30 - 128), 8);
  _Block_object_dispose(&a21, 8);

  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__0(uint64_t a1)
{

}

void sub_1A4FD54A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, void *a15)
{
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1A4FD56A0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FD57E0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FD5850(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)MFConnectionSettings;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_1A4FD5A00(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void _setupSSLDomainError(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  __CFString *v8;
  __CFString *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;

  v18 = a1;
  v5 = a2;
  v6 = a3;
  v7 = objc_msgSend(v18, "code") + 9814;
  v8 = CFSTR("The certificate for the server is invalid.");
  v9 = CFSTR("SSL_CERT_CHAIN_INVALID_FORMAT");
  switch(v7)
  {
    case 0:
      v8 = CFSTR("The certificate for this server has expired.");
      v9 = CFSTR("SSL_CERT_EXPIRED_FORMAT");
      goto LABEL_10;
    case 1:
      v8 = CFSTR("There is no root certificate for this server.");
      v9 = CFSTR("SSL_NO_ROOT_CERT_FORMAT");
      goto LABEL_10;
    case 2:
      v8 = CFSTR("The root certificate for this server could not be verified.");
      v9 = CFSTR("SSL_UNKNOWN_ROOT_CERT_FORMAT");
      goto LABEL_10;
    case 3:
    case 4:
    case 5:
      goto LABEL_5;
    case 6:
      v8 = CFSTR("The format of the certificate for the server is bad.");
      v9 = CFSTR("SSL_BAD_CERT_FORMAT");
      goto LABEL_10;
    case 7:
LABEL_10:
      MFLookupLocalizedString(v9, v8, CFSTR("Delayed"));
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      break;
    default:
      if (CFSTR("SSL_CERT_CHAIN_INVALID_FORMAT") == (__CFString *)-9843)
      {
        v10 = (void *)MEMORY[0x1E0CB3940];
        MFLookupLocalizedString(CFSTR("SSL_HOST_MISMATCH_MESSAGE"), CFSTR("The certificate hostname does not match “%@”."), CFSTR("Delayed"));
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "stringWithFormat:", v11, v5);
        v12 = objc_claimAutoreleasedReturnValue();
      }
      else
      {
LABEL_5:
        v13 = (void *)MEMORY[0x1E0CB3940];
        MFLookupLocalizedString(CFSTR("SSL_GENERIC_READ_ERROR"), CFSTR("An SSL error occurred while trying to read data from the server “%@”. Verify that this server supports SSL and that your account settings are correct."), CFSTR("Delayed"));
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "stringWithFormat:", v11, v5);
        v12 = objc_claimAutoreleasedReturnValue();
      }
      v14 = (void *)v12;

      break;
  }
  if (objc_msgSend(v6, "count"))
    objc_msgSend(v18, "setUserInfoObject:forKey:", v6, CFSTR("MFSSLErrorCertificateKey"));
  objc_msgSend(v18, "setLocalizedDescription:", v14);
  v15 = (void *)MEMORY[0x1E0CB3940];
  MFLookupLocalizedString(CFSTR("SSL_ALERT_TITLE_FORMAT"), CFSTR("Unable to verify SSL server %@"), CFSTR("Delayed"));
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "stringWithFormat:", v16, v5);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "setShortDescription:", v17);

}

void sub_1A4FD5EB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  v13 = v12;

  _Unwind_Resume(a1);
}

uint64_t _readBytesFromSocket(void *a1, uint64_t a2, uint64_t a3, int a4)
{
  id *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  int v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  int v26;
  void *v27;
  void *v28;
  uint64_t v29;
  void *v30;
  void *v31;
  id v33;

  v7 = a1;
  +[MFActivityMonitor currentMonitor](MFActivityMonitor, "currentMonitor");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = v7[3];
  if (v9)
  {
    objc_msgSend(v8, "addCancelable:", v9);
    v10 = 0;
    if (a3)
    {
      while (1)
      {
        v11 = objc_msgSend(v9, "readBytesIntoBuffer:maxLength:", a2, a3);
        if (v11 < 0)
          break;
        *((CFAbsoluteTime *)v7 + 4) = CFAbsoluteTimeGetCurrent();
        if (!v11)
          break;
        objc_msgSend(v8, "recordBytesRead:", v11);
        v10 += v11;
        if (a4)
        {
          a2 += v11;
          a3 -= v11;
          if (a3)
            continue;
        }
        goto LABEL_10;
      }
      v10 = -1;
    }
LABEL_10:
    objc_msgSend(v8, "removeCancelable:", v9);
    if (v10 < 0)
    {
      v33 = v8;
      v12 = v9;
      objc_msgSend(v12, "error");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      if (v13)
      {
        objc_msgSend(v12, "error");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v14, "domain");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "error");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        +[MFError errorWithDomain:code:localizedDescription:](MFError, "errorWithDomain:code:localizedDescription:", v15, objc_msgSend(v16, "code"), 0);
        v17 = (void *)objc_claimAutoreleasedReturnValue();

      }
      else
      {
        v17 = 0;
      }

      objc_msgSend(v12, "remoteHostname");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      if (v17)
      {
        objc_msgSend(v17, "domain");
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        v20 = objc_msgSend((id)*MEMORY[0x1E0CB2FE0], "isEqualToString:", v19);

        if (v20)
        {
          if (objc_msgSend(v17, "code") == 60)
          {
            v21 = (void *)MEMORY[0x1E0CB3940];
            MFLookupLocalizedString(CFSTR("CONNECTION_TIMED_OUT"), CFSTR("The connection to the server “%@” on port %d timed out."), CFSTR("Delayed"));
            v22 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v21, "stringWithFormat:", v22, v18, objc_msgSend(v12, "remotePortNumber"));
            v23 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_24:

            goto LABEL_26;
          }
          goto LABEL_25;
        }
        objc_msgSend(v17, "domain");
        v25 = (void *)objc_claimAutoreleasedReturnValue();
        v26 = objc_msgSend((id)*MEMORY[0x1E0CB31B0], "isEqualToString:", v25);

        if (!v26)
        {
LABEL_25:
          v23 = 0;
          goto LABEL_26;
        }
        objc_msgSend(v12, "serverCertificates");
        v27 = (void *)objc_claimAutoreleasedReturnValue();
        _setupSSLDomainError(v17, v18, v27);

        objc_msgSend(v17, "localizedDescription");
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        if (!v23 || objc_msgSend(&stru_1E4F1C8F8, "isEqualToString:", v23))
        {
          v28 = (void *)MEMORY[0x1E0CB3940];
          MFLookupLocalizedString(CFSTR("SSL_GENERIC_READ_ERROR"), CFSTR("An SSL error occurred while trying to read data from the server “%@”. Verify that this server supports SSL and that your account settings are correct."), CFSTR("Delayed"));
          v22 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v28, "stringWithFormat:", v22, v18);
          v29 = objc_claimAutoreleasedReturnValue();

          v23 = (void *)v29;
          goto LABEL_24;
        }
      }
      else
      {
        +[MFError errorWithDomain:code:localizedDescription:](MFError, "errorWithDomain:code:localizedDescription:", CFSTR("MFMessageErrorDomain"), 1045, 0);
        v23 = 0;
        v24 = 0;
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        if (!v17)
        {
LABEL_31:
          objc_msgSend(v33, "setError:", v24);

          objc_msgSend(v12, "close");
          goto LABEL_32;
        }
      }
LABEL_26:
      if ((objc_msgSend(v17, "mf_isUserCancelledError") & 1) != 0)
      {
        v24 = v17;
      }
      else
      {
        if (!v23)
        {
          v30 = (void *)MEMORY[0x1E0CB3940];
          MFLookupLocalizedString(CFSTR("CONNECTION_FAILED"), CFSTR("The mail server “%@” is not responding. Verify that you have entered the correct account info in Mail settings."), CFSTR("Delayed"));
          v31 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v30, "stringWithFormat:", v31, v18);
          v23 = (void *)objc_claimAutoreleasedReturnValue();

        }
        objc_msgSend(v17, "setLocalizedDescription:", v23);
        v24 = v17;
      }
      goto LABEL_31;
    }
  }
  else
  {
    v10 = 0;
  }
LABEL_32:

  return v10;
}

void sub_1A4FD6300(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_0_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 8u);
}

void sub_1A4FD6688(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4FD6778(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FD6A68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,void *a23)
{
  void *v23;
  void *v24;
  void *v25;

  _Unwind_Resume(a1);
}

void sub_1A4FD6DCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{

  _Unwind_Resume(a1);
}

void sub_1A4FD72A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1A4FD74B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1A4FD7628(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FD76A8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FD7714(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

BOOL _isDateCriterion(void *a1)
{
  id v1;
  uint64_t v2;
  _BOOL8 v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v2 = objc_msgSend(v1, "criterionType");
  v4 = v2 == 12 || (v2 & 0xFFFFFFFFFFFFFFFELL) == 10;
  if (v2 == 25)
  {
    v12 = 0u;
    v13 = 0u;
    v10 = 0u;
    v11 = 0u;
    objc_msgSend(v1, "criteria", 0);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
    if (v6)
    {
      v7 = *(_QWORD *)v11;
      while (2)
      {
        for (i = 0; i != v6; ++i)
        {
          if (*(_QWORD *)v11 != v7)
            objc_enumerationMutation(v5);
          if ((_isDateCriterion(*(_QWORD *)(*((_QWORD *)&v10 + 1) + 8 * i)) & 1) == 0)
          {
            v4 = 0;
            goto LABEL_18;
          }
        }
        v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
        if (v6)
          continue;
        break;
      }
    }
    v4 = 1;
LABEL_18:

  }
  return v4;
}

void sub_1A4FD784C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FD78D4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t _isUnreadCriterion(void *a1)
{
  void *v1;
  uint64_t v2;

  objc_msgSend(a1, "name");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = objc_msgSend(v1, "isEqualToString:", CFSTR("UnreadCriterion"));

  return v2;
}

void sub_1A4FD7924(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FD79AC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FD7A28(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FD7A90(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FD7AF8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FD7D90(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FD7EEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FD7F60(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FD83BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, void *a16, void *a17)
{
  void *v17;
  void *v18;
  void *v19;
  void *v20;

  _Unwind_Resume(a1);
}

void sub_1A4FD8684(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

uint64_t MFWalkUpDAErrorChain(id *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;

  if (*a2 == -1)
  {
    if (!a1)
      MFWalkUpDAErrorChain_cold_1();
    v4 = *MEMORY[0x1E0CB3388];
    v5 = *MEMORY[0x1E0D1C3D0];
    while (1)
    {
      objc_msgSend(*a1, "userInfo");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "objectForKey:", v4);
      v7 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(*a1, "userInfo");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "objectForKey:", v5);
      v9 = (void *)objc_claimAutoreleasedReturnValue();

      if (!v7 || !v9)
        break;
      v10 = objc_retainAutorelease(v7);
      *a1 = v10;
      *a2 = (int)objc_msgSend(v9, "intValue");

      if (*a2 != -1)
        return 0;
    }

  }
  return 0;
}

void sub_1A4FD8858(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t MFDAShouldRetryOperationWithStatusCode(uint64_t a1)
{
  return ((unint64_t)(a1 + 1) < 9) & (0x103u >> (a1 + 1));
}

void sub_1A4FD8978(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4FD8A54(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1A4FD8B90(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FD8CF0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FD8E04(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4FD913C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1A4FD9298(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FD9328(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FD93DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FD95B4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FD9678(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FD9930(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, uint64_t a11, uint64_t a12, void *a13, void *a14, void *a15, void *a16)
{
  void *v16;

  _Unwind_Resume(a1);
}

void sub_1A4FDA24C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FDA564(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FDA650(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A4FDA734(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A4FDA7E4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FDA924(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  _Unwind_Resume(a1);
}

void sub_1A4FDA9E8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FDABCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id a26)
{
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;

  _Block_object_dispose(&a21, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__1(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__1(uint64_t a1)
{

}

void sub_1A4FDAD88(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FDAF58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  va_list va;

  va_start(va, a9);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4FDB054(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FDB184(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  void *v7;
  void *v8;
  va_list va;

  va_start(va, a7);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4FDB1F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FDB2D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1A4FDB444(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4FDB8E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FDBA2C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FDBB00(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t mailboxHasFolderID(void *a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;

  v3 = a2;
  objc_msgSend(a1, "folderID");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "isEqual:", v3);

  return v5;
}

void sub_1A4FDBB78(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FDBBE8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FDBCE0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A4FDBE98(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FDC510(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,char a30)
{
  void *v30;
  void *v31;
  void *v32;

  _Block_object_dispose(&a30, 8);
  _Unwind_Resume(a1);
}

void sub_1A4FDC6BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FDC77C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FDC7E0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FDCA1C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FDCBE0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;
  void *v2;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1A4FDCC64(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FDCD30(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FDCFF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1A4FDD1FC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FDD270(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FDD3C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  void *v9;
  void *v10;
  void *v11;

  v11 = v9;

  a9.super_class = (Class)DAMailAccount;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_1A4FDD4F0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A4FDD60C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A4FDD6E0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FDD93C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A4FDDC98(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FDDD24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FDDE00(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4FDDFA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1A4FDE02C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A4FDE098(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A4FDE2B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A4FDE41C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FDE4E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1A4FDE574(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FDE680(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FDE818(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FDE868(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FDE8B4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FDE910(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A4FDE968(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FDE9C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A4FDEC20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id a28)
{
  void *v28;
  void *v29;

  _Block_object_dispose(&a17, 8);
  _Block_object_dispose(&a23, 8);

  _Unwind_Resume(a1);
}

void sub_1A4FDF0C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, void *a18)
{

  _Unwind_Resume(a1);
}

void sub_1A4FDF674(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_1A4FDF8F8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FDFBA0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_1A4FDFD84(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FDFE90(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FDFF1C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FE01A0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4FE0228(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FE02B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FE034C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FE042C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FE05A4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FE0638(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FE06D0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FE0798(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FE0830(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FE0940(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FE0A48(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FE0AEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1A4FE0B8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FE0CEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  void *v9;
  void *v10;
  uint64_t v11;
  va_list va;

  va_start(va, a9);

  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1A4FE0E14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FE0EFC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FE0FB0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FE0FFC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FE104C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FE10B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FE11C8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FE1298(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FE13DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_1A4FE1580(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FE1680(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FE178C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FE1928(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FE19F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FE1A80(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FE1B38(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A4FE1BDC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FE1C48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FE1CEC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FE1DB8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FE1E50(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FE1FB0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FE2070(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FE21A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  void *v12;

  _Unwind_Resume(a1);
}

uint64_t _appendQuotedString(void *a1, uint64_t a2, void *a3)
{
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  int v10;
  int v11;
  char v12;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;

  if (objc_msgSend(a1, "length"))
    objc_msgSend(a1, "appendBytes:length:", ",", 1);
  objc_msgSend(a1, "mf_appendCString:", a2);
  v14 = 61;
  objc_msgSend(a1, "appendBytes:length:", &v14, 1);
  v15 = 34;
  objc_msgSend(a1, "appendBytes:length:", &v15, 1);
  v6 = objc_msgSend(a3, "bytes");
  v7 = objc_msgSend(a3, "length");
  if (v7 >= 1)
  {
    v8 = v6 + v7;
    v9 = (char *)v6;
    while (1)
    {
      v10 = *v9;
      if (v10 == 34 || v10 == 92)
        break;
      if ((unint64_t)++v9 >= v8)
      {
        v11 = 0;
LABEL_10:
        if ((unint64_t)v9 > v6)
          objc_msgSend(a1, "appendBytes:length:", v6, &v9[-v6]);
        if (v11)
        {
          v16 = 92;
          objc_msgSend(a1, "appendBytes:length:", &v16, 1);
          v12 = *v9++;
          v17 = v12;
          objc_msgSend(a1, "appendBytes:length:", &v17, 1);
        }
        v6 = (unint64_t)v9;
        if ((unint64_t)v9 >= v8)
          goto LABEL_15;
      }
    }
    v11 = 1;
    goto LABEL_10;
  }
LABEL_15:
  v18 = 34;
  return objc_msgSend(a1, "appendBytes:length:", &v18, 1);
}

uint64_t _appendValue(void *a1, uint64_t a2, uint64_t a3)
{
  char v7;

  if (objc_msgSend(a1, "length"))
    objc_msgSend(a1, "appendBytes:length:", ",", 1);
  objc_msgSend(a1, "mf_appendCString:", a2);
  v7 = 61;
  objc_msgSend(a1, "appendBytes:length:", &v7, 1);
  return objc_msgSend(a1, "appendData:", a3);
}

CFStringRef copyToken(const UInt8 **a1)
{
  const UInt8 *v1;
  const UInt8 *v2;
  UInt8 v3;
  int64_t v4;
  UInt8 v5;
  const UInt8 *v6;
  int v7;
  BOOL v8;

  v1 = *a1;
  v2 = a1[1];
  if (*a1 >= v2)
    v3 = 0;
  else
LABEL_2:
    v3 = *v1;
  v4 = v2 - v1;
  do
  {
    while (1)
    {
      do
      {
        v5 = v3;
        v3 = 0;
      }
      while (v5 > 0x20u);
      if (((1 << v5) & 0x100002600) == 0)
        break;
      v3 = 0;
      *a1 = ++v1;
      --v4;
      if (v1 < v2)
        goto LABEL_2;
    }
  }
  while (v5);
  v6 = v1;
  if (v1 < v2)
  {
    v6 = v1;
    while (1)
    {
      v7 = *v6;
      if ((v7 - 33) > 0x5D)
        break;
      v8 = (v7 - 34) > 0x3B || ((1 << (v7 - 34)) & 0xE0000007F0024C1) == 0;
      if (!v8 || v7 == 123 || v7 == 125)
        break;
      *a1 = ++v6;
      if (!--v4)
      {
        v6 = v2;
        break;
      }
    }
  }
  if (v1 >= v6)
    return 0;
  else
    return CFStringCreateWithBytesNoCopy(0, v1, v6 - v1, 0x600u, 0, (CFAllocatorRef)*MEMORY[0x1E0C9AE20]);
}

CFDataRef quoted_string(const UInt8 **a1)
{
  const UInt8 *v2;
  unint64_t v3;
  UInt8 v4;
  UInt8 v5;
  const UInt8 *v6;
  CFAllocatorRef *v7;
  CFDataRef v8;
  const __CFAllocator *v9;
  const UInt8 *v10;
  int v11;
  unint64_t v12;

  v2 = *a1;
  v3 = (unint64_t)a1[1];
  if ((unint64_t)*a1 < v3)
  {
LABEL_2:
    v4 = *v2;
    goto LABEL_4;
  }
  v4 = 0;
  do
  {
    while (1)
    {
      do
      {
LABEL_4:
        v5 = v4;
        v4 = 0;
      }
      while (v5 > 0x20u);
      if (((1 << v5) & 0x100002600) == 0)
        break;
      v4 = 0;
      *a1 = ++v2;
      if ((unint64_t)v2 < v3)
        goto LABEL_2;
    }
  }
  while (v5);
  if ((unint64_t)v2 >= v3 || *v2 != 34)
    return 0;
  v6 = v2 + 1;
  *a1 = v6;
  v7 = (CFAllocatorRef *)MEMORY[0x1E0C9AE20];
  if ((unint64_t)v6 >= v3)
  {
    v10 = v6;
    return CFDataCreateWithBytesNoCopy(0, v10, v6 - v10, *v7);
  }
  v8 = 0;
  v9 = (const __CFAllocator *)*MEMORY[0x1E0C9AE20];
  v10 = v6;
  while (1)
  {
    v11 = *v6;
    if (v11 == 92)
    {
      if (!v8)
      {
        v8 = (CFDataRef)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99DF0]), "init");
        v6 = *a1;
      }
      v12 = (unint64_t)a1[1];
      if (v10 < v6)
      {
        -[__CFData appendBytes:length:](v8, "appendBytes:length:", v10, v12 - (_QWORD)v10);
        v6 = *a1;
        v12 = (unint64_t)a1[1];
      }
      if ((unint64_t)(v6 + 1) < v12)
      {
        *a1 = v6 + 1;
        -[__CFData appendBytes:length:](v8, "appendBytes:length:");
        v6 = *a1;
      }
      v10 = v6;
      goto LABEL_24;
    }
    if (v11 == 34)
      break;
LABEL_24:
    *a1 = ++v6;
    if (v6 >= a1[1])
    {
      if (!v8)
        return CFDataCreateWithBytesNoCopy(0, v10, v6 - v10, *v7);
      if (v10 < v6)
        goto LABEL_34;
      return v8;
    }
  }
  if (v8)
  {
    -[__CFData appendBytes:length:](v8, "appendBytes:length:", v10, v6 - v10);
    v10 = *a1;
    v6 = *a1 + 1;
    *a1 = v6;
LABEL_34:
    -[__CFData appendBytes:length:](v8, "appendBytes:length:", v10, v6 - v10);
    return v8;
  }
  v8 = CFDataCreateWithBytesNoCopy(0, v10, v6 - v10, v9);
  v10 = *a1;
  v6 = *a1 + 1;
  *a1 = v6;
  if (v8)
    return v8;
  return CFDataCreateWithBytesNoCopy(0, v10, v6 - v10, *v7);
}

void *copyQuotedTokenList(const UInt8 **a1)
{
  void *v2;
  unsigned __int8 *v3;
  unint64_t v4;
  CFStringRef v5;
  __CFString *v6;
  int v7;
  const UInt8 *v8;
  int v9;
  NSObject *v10;
  uint8_t buf[4];
  int v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  if (*a1 >= a1[1] || **a1 != 34)
    return 0;
  v2 = (void *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99DE8]), "init");
  v3 = (unsigned __int8 *)a1[1];
  v4 = (unint64_t)(*a1 + 1);
  *a1 = (const UInt8 *)v4;
  if (v4 < (unint64_t)v3)
  {
    while (1)
    {
      v5 = copyToken(a1);
      if (!v5)
        break;
      v6 = (__CFString *)v5;
      objc_msgSend(v2, "addObject:", v5);

      v7 = 0;
      v8 = *a1;
LABEL_15:
      if (v8 >= a1[1] || v7 != 0)
        return v2;
    }
    if (*a1 >= a1[1])
    {
      v9 = 0;
    }
    else
    {
      v9 = **a1;
      if (v9 == 44)
      {
LABEL_13:
        v7 = 0;
        goto LABEL_14;
      }
      if (v9 == 34)
      {
        v7 = 1;
LABEL_14:
        v8 = *a1 + 1;
        *a1 = v8;
        goto LABEL_15;
      }
    }
    v10 = MFLogGeneral();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 67109120;
      v14 = v9;
      _os_log_impl(&dword_1A4F90000, v10, OS_LOG_TYPE_INFO, "*** Parse failure(unexpected character '%c'). Ignoring", buf, 8u);
    }
    goto LABEL_13;
  }
  return v2;
}

void *_createResponseData(uint64_t a1, uint64_t a2, int a3)
{
  __int128 v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  CC_MD5_CTX c;
  char data;
  char __str[3];
  unsigned __int8 v28[16];
  unsigned __int8 md[16];
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  data = 58;
  *(_QWORD *)&v6 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v6 + 1) = 0xAAAAAAAAAAAAAAAALL;
  *(_OWORD *)&c.data[13] = v6;
  *(_OWORD *)&c.data[6] = v6;
  *(_OWORD *)&c.data[10] = v6;
  *(_OWORD *)&c.Nl = v6;
  *(_OWORD *)&c.data[2] = v6;
  *(_OWORD *)&c.A = v6;
  v7 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99DF0]), "initWithCapacity:", 32);
  v8 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99DF0]), "initWithCapacity:", 32);
  memset(v28, 170, sizeof(v28));
  CC_MD5_Init(&c);
  if (a3)
    CC_MD5_Update(&c, "AUTHENTICATE", 0xCu);
  CC_MD5_Update(&c, &data, 1u);
  v9 = *(void **)(a2 + 40);
  if (v9)
    CC_MD5_Update(&c, (const void *)objc_msgSend(*(id *)(a2 + 40), "bytes"), objc_msgSend(v9, "length"));
  memset(md, 170, sizeof(md));
  CC_MD5_Final(md, &c);
  v10 = 0;
  do
  {
    memset(__str, 170, sizeof(__str));
    v11 = v10 + 1;
    snprintf(__str, 3uLL, "%02x", md[v10]);
    objc_msgSend(v8, "appendBytes:length:", __str, 2);
    v10 = v11;
  }
  while (v11 != 16);
  CC_MD5_Init(&c);
  v12 = *(void **)(a2 + 24);
  if (v12)
    CC_MD5_Update(&c, (const void *)objc_msgSend(*(id *)(a2 + 24), "bytes"), objc_msgSend(v12, "length"));
  CC_MD5_Update(&c, &data, 1u);
  v13 = *(void **)(a2 + 48);
  if (v13)
    CC_MD5_Update(&c, (const void *)objc_msgSend(*(id *)(a2 + 48), "bytes"), objc_msgSend(v13, "length"));
  CC_MD5_Update(&c, &data, 1u);
  v14 = *(void **)(a2 + 32);
  if (v14)
    CC_MD5_Update(&c, (const void *)objc_msgSend(*(id *)(a2 + 32), "bytes"), objc_msgSend(v14, "length"));
  CC_MD5_Final(v28, &c);
  CC_MD5_Init(&c);
  CC_MD5_Update(&c, v28, 0x10u);
  CC_MD5_Update(&c, &data, 1u);
  v15 = *(void **)(a1 + 8);
  if (v15)
    CC_MD5_Update(&c, (const void *)objc_msgSend(*(id *)(a1 + 8), "bytes"), objc_msgSend(v15, "length"));
  CC_MD5_Update(&c, &data, 1u);
  if (*(_QWORD *)a2)
    CC_MD5_Update(&c, (const void *)objc_msgSend(*(id *)a2, "bytes"), objc_msgSend(*(id *)a2, "length"));
  memset(md, 170, sizeof(md));
  CC_MD5_Final(md, &c);
  v16 = 0;
  do
  {
    memset(__str, 170, sizeof(__str));
    v17 = v16 + 1;
    snprintf(__str, 3uLL, "%02x", md[v16]);
    objc_msgSend(v7, "appendBytes:length:", __str, 2);
    v16 = v17;
  }
  while (v17 != 16);
  CC_MD5_Init(&c);
  if (v7)
    CC_MD5_Update(&c, (const void *)objc_msgSend(v7, "bytes"), objc_msgSend(v7, "length"));
  CC_MD5_Update(&c, &data, 1u);
  v18 = *(void **)(a1 + 8);
  if (v18)
    CC_MD5_Update(&c, (const void *)objc_msgSend(v18, "bytes"), objc_msgSend(v18, "length"));
  CC_MD5_Update(&c, &data, 1u);
  v19 = *(void **)(a2 + 8);
  if (v19)
    CC_MD5_Update(&c, (const void *)objc_msgSend(*(id *)(a2 + 8), "bytes"), objc_msgSend(v19, "length"));
  CC_MD5_Update(&c, &data, 1u);
  if (*(_QWORD *)a2)
    CC_MD5_Update(&c, (const void *)objc_msgSend(*(id *)a2, "bytes"), objc_msgSend(*(id *)a2, "length"));
  CC_MD5_Update(&c, &data, 1u);
  v20 = *(void **)(a2 + 16);
  if (v20)
    CC_MD5_Update(&c, (const void *)objc_msgSend(v20, "bytes"), objc_msgSend(v20, "length"));
  CC_MD5_Update(&c, &data, 1u);
  if (v8)
    CC_MD5_Update(&c, (const void *)objc_msgSend(v8, "bytes"), objc_msgSend(v8, "length"));
  v21 = (void *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99DF0]), "initWithCapacity:", 32);
  memset(md, 170, sizeof(md));
  CC_MD5_Final(md, &c);
  v22 = 0;
  do
  {
    memset(__str, 170, sizeof(__str));
    v23 = v22 + 1;
    snprintf(__str, 3uLL, "%02x", md[v22]);
    objc_msgSend(v21, "appendBytes:length:", __str, 2);
    v22 = v23;
  }
  while (v23 != 16);

  return v21;
}

void sub_1A4FE42CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, void *a11, void *a12)
{
  void *v12;
  void *v13;
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1A4FE4534(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FE4714(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FE49B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A4FE4B68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A4FE4CA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A4FE4E4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

uint64_t _GetTextBreakLocale()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;

  v0 = (void *)_GetTextBreakLocale___TextBreakLocale;
  if (!_GetTextBreakLocale___TextBreakLocale)
  {
    objc_msgSend(MEMORY[0x1E0C99EA0], "standardUserDefaults");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v1, "objectForKey:", CFSTR("AppleTextBreakLocale"));
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "objectAtIndex:", 0);
    v3 = (void *)objc_claimAutoreleasedReturnValue();

    if (v3)
    {
      v4 = v3;
      v5 = (void *)_GetTextBreakLocale___TextBreakLocale;
      _GetTextBreakLocale___TextBreakLocale = (uint64_t)v4;
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99DC8], "currentLocale");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "localeIdentifier");
      v6 = objc_claimAutoreleasedReturnValue();
      v7 = (void *)_GetTextBreakLocale___TextBreakLocale;
      _GetTextBreakLocale___TextBreakLocale = v6;

    }
    v0 = (void *)_GetTextBreakLocale___TextBreakLocale;
  }
  return objc_msgSend(v0, "UTF8String");
}

void sub_1A4FE5048(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FE561C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void _appendParagraphToOutput(void *a1, void *a2, uint64_t a3, void *a4, int a5)
{
  id v9;
  id v10;
  id v11;
  __CFString *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _WORD *v17;
  uint64_t v18;
  unsigned int v19;
  int v20;
  const __CFString *v21;
  const __CFString *v22;
  int v23;
  const __CFString *v24;
  int v26;
  UniChar chars;

  v9 = a1;
  v10 = a2;
  v11 = a4;
  v12 = (__CFString *)v9;
  if (v10)
  {
    if (a3 > 0)
      v13 = a5;
    else
      v13 = 0;
    if (v13 == 1)
    {
      v14 = a3;
      do
      {
        -[__CFString appendString:](v12, "appendString:", CFSTR("<BLOCKQUOTE type=\"cite\">"));
        --v14;
      }
      while (v14);
    }
    if (a5)
    {
      -[__CFString appendString:](v12, "appendString:", CFSTR("<SPAN>"));
      v15 = objc_msgSend(v10, "length");
      v16 = v15;
      if (v15)
      {
        v17 = malloc_type_malloc(2 * v15 + 2, 0x1000040BDFB0063uLL);
        if (v17)
        {
          objc_msgSend(v10, "getCharacters:", v17);
          v26 = v13;
          v18 = 0;
          v19 = 1;
          while (1)
          {
            v20 = (unsigned __int16)v17[v18];
            chars = v20;
            if (v20 == 9)
              v21 = CFSTR(" &nbsp; &nbsp;");
            else
              v21 = 0;
            if (v19 == 1 || v20 != 32)
            {
              v22 = v21;
            }
            else
            {
              v22 = CFSTR("&nbsp;");
              if (v17[v19 - 2] != 32)
              {
                if (!v21)
                  goto LABEL_29;
                goto LABEL_28;
              }
            }
            v23 = chars;
            if (v20 == 60)
            {
              v20 = chars;
              v22 = CFSTR("&lt;");
            }
            if (v20 == 62)
            {
              v24 = CFSTR("&gt;");
            }
            else
            {
              v23 = v20;
              v24 = v22;
            }
            if (v23 != 38 && !v24)
            {
LABEL_29:
              CFStringAppendCharacters(v12, &chars, 1);
              goto LABEL_30;
            }
LABEL_28:
            -[__CFString appendString:](v12, "appendString:");
LABEL_30:
            v18 = v19;
            if (v16 <= v19++)
            {
              free(v17);
              v13 = v26;
              break;
            }
          }
        }
      }
      if (v11)
        -[__CFString appendString:](v12, "appendString:", CFSTR("</SPAN><BR>"));
      if (v13)
      {
        do
        {
          -[__CFString appendString:](v12, "appendString:", CFSTR("</BLOCKQUOTE>"));
          --a3;
        }
        while (a3);
      }
    }
    else
    {
      -[__CFString appendString:](v12, "appendString:", v10);
      if (v11)
        -[__CFString appendString:](v12, "appendString:", v11);
    }
  }

}

void sub_1A4FE58A4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FE5958(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A4FE59BC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FE5A7C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FE5AE4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FE658C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,void *a22)
{
  void *v22;
  void *v23;

  _Unwind_Resume(a1);
}

void sub_1A4FE6898(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FE6A50(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void ___weakDDURLifierClass_block_invoke()
{
  id v0;
  NSObject *v1;
  const char *v2;
  NSObject *v3;
  uint32_t v4;
  int v5;
  char *v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  objc_msgSend((id)GSSystemRootDirectory(), "stringByAppendingPathComponent:", CFSTR("System/Library/PrivateFrameworks/DataDetectorsCore.framework/DataDetectorsCore"));
  v0 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
  if (!dlopen((const char *)objc_msgSend(v0, "fileSystemRepresentation"), 1))
  {
    MFLogGeneral();
    v1 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
    {
      v5 = 136315138;
      v6 = dlerror();
      v2 = "#Warning Failed to load DataDetectorsCore.framework (%s)";
      v3 = v1;
      v4 = 12;
      goto LABEL_7;
    }
LABEL_8:

    goto LABEL_9;
  }
  _weakDDURLifierClass_sDDURLifierClass = (uint64_t)NSClassFromString(CFSTR("DDURLifier"));
  if (!_weakDDURLifierClass_sDDURLifierClass)
  {
    MFLogGeneral();
    v1 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v5) = 0;
      v2 = "#Warning NSClassFromString(@\"DDURLifier\") returned Nil";
      v3 = v1;
      v4 = 2;
LABEL_7:
      _os_log_impl(&dword_1A4F90000, v3, OS_LOG_TYPE_DEFAULT, v2, (uint8_t *)&v5, v4);
      goto LABEL_8;
    }
    goto LABEL_8;
  }
LABEL_9:

}

void sub_1A4FE6C04(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FE6FA0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  _Unwind_Resume(a1);
}

void sub_1A4FE7100(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FE7194(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FE7220(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A4FE7340(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FE7560(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FE75C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FE7660(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FE76C0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FE7808(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FE78AC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FE79A4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FE7A3C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FE7AD4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FE7B28(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FE7B8C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FE7D18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1A4FE7E00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A4FE7EAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A4FE803C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4FE814C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FE82BC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A4FE847C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4FE8840(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, void *a14, void *a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;

  _Unwind_Resume(a1);
}

void sub_1A4FE8948()
{
  JUMPOUT(0x1A4FE8920);
}

void sub_1A4FE8954()
{
  JUMPOUT(0x1A4FE8928);
}

void sub_1A4FE8960()
{
  JUMPOUT(0x1A4FE8930);
}

void sub_1A4FE8968()
{
  JUMPOUT(0x1A4FE8930);
}

void sub_1A4FE89B4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FE8B04(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A4FE8BC4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FE8C58(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FE8E38(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4FE9014(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FE93F0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FE953C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FE96C4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FE9794(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FE99B8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_1A4FE9B5C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FE9C6C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FE9D10(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FE9DD4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FE9E68(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FE9EE0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FE9F34(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FE9F98(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FEA038(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FEA38C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FEA460(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;

  a9.super_class = (Class)IMAPAccount;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void unlockedReleaseNetworkAssertion(void *a1)
{
  _QWORD *v1;
  void *v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v1 = a1;
  v2 = (void *)v1[36];
  if (v2)
  {
    v5 = v1;
    v1[36] = 0;

    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    +[MFNetworkController sharedInstance](MFNetworkController, "sharedInstance");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "removeObserver:name:object:", v5, CFSTR("NetworkConfigurationDidChangeNotification"), v4);

    v1 = v5;
  }

}

void sub_1A4FEA52C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1A4FEA668(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FEA700(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FEA820(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FEA9BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  void *v12;
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1A4FEAA80(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FEAB3C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FEACBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FEAEAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A4FEB04C(void *a1)
{
  objc_begin_catch(a1);
  JUMPOUT(0x1A4FEAF5CLL);
}

void sub_1A4FEB128(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FEB2DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A4FEB3C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FEB620(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FEB84C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_1A4FEB90C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A4FEBBC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A4FEBCA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A4FEBDE4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FEBEB4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FEBF80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A4FEC09C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id _mailboxDictionaryWithName(void *a1, void *a2, unint64_t *a3)
{
  id v5;
  id v6;
  unint64_t v7;
  unint64_t i;
  void *v9;
  void *v10;
  int v11;
  id v12;

  v5 = a1;
  v6 = a2;
  v7 = objc_msgSend(v5, "count");
  if (v7)
  {
    for (i = 0; i < v7; ++i)
    {
      objc_msgSend(v5, "objectAtIndex:", i);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "objectForKey:", CFSTR("MailboxName"));
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = objc_msgSend(v10, "isEqual:", v6);

      if (v11)
      {
        v12 = v9;
        if (a3)
          *a3 = i;
      }
      else
      {
        v12 = 0;
      }

      if (v12)
        break;
    }
  }
  else
  {
    v12 = 0;
  }

  return v12;
}

void sub_1A4FEC1C4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FEC798(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, void *a11, void *a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

void sub_1A4FECBB8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  _Unwind_Resume(a1);
}

void sub_1A4FECCF0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FECF2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1A4FECFBC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FED058(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FED10C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FED224(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FED2F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A4FED388(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FED46C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A4FED620(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4FED7D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1A4FED964(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FEDF84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12)
{
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_1A4FEE32C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FEE410(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FEE464(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FEE518(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A4FEE68C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A4FEE804(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FEEA88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  v16 = v15;

  _Unwind_Resume(a1);
}

void sub_1A4FEEBF0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4FEEF04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13)
{

  _Unwind_Resume(a1);
}

void sub_1A4FEF16C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4FEF314(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FEF504(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FEF77C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FEF958(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FEFA0C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A4FEFC5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1A4FEFE48(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FEFED0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FF01D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12)
{
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1A4FF02DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FF0560(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A4FF0BF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1A4FF0E0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FF10DC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4FF1160(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FF11B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FF1430(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4FF14F4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FF170C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t IMAPNextUidFromSet(UniChar *buffer)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  int64_t v7;
  uint64_t v8;
  UniChar v9;
  uint64_t v10;
  int64_t v11;
  int64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  UniChar v19;
  uint64_t v20;
  int64_t v21;
  int64_t v22;
  CFRange v24;
  CFRange v25;

  v2 = *((_DWORD *)buffer + 51);
  if (v2)
  {
    v3 = *((_DWORD *)buffer + 50);
    if (v3 > v2)
    {
      v4 = v3 - 1;
LABEL_6:
      *((_DWORD *)buffer + 50) = v4;
      return v4;
    }
    if (v3 < v2)
    {
      v4 = v3 + 1;
      goto LABEL_6;
    }
    *((_DWORD *)buffer + 51) = 0;
    v6 = *((_QWORD *)buffer + 23);
    v5 = *((_QWORD *)buffer + 24);
    if (v5 < 1)
      goto LABEL_24;
    if (v6 < 0)
      goto LABEL_24;
    v7 = *((_QWORD *)buffer + 20);
    if (v7 <= v6)
      goto LABEL_24;
    v8 = *((_QWORD *)buffer + 17);
    if (v8)
    {
      v9 = *(_WORD *)(v8 + 2 * (*((_QWORD *)buffer + 19) + v6));
    }
    else
    {
      v10 = *((_QWORD *)buffer + 18);
      if (v10)
      {
        v9 = *(char *)(v10 + *((_QWORD *)buffer + 19) + v6);
      }
      else
      {
        if (*((_QWORD *)buffer + 22) <= v6
          || (v11 = *((_QWORD *)buffer + 21), v12 = *((_QWORD *)buffer + 23), v11 > v6))
        {
          v13 = v6 - 4;
          if ((unint64_t)v6 < 4)
            v13 = 0;
          if (v13 + 64 < v7)
            v7 = v13 + 64;
          *((_QWORD *)buffer + 21) = v13;
          *((_QWORD *)buffer + 22) = v7;
          v24.location = *((_QWORD *)buffer + 19) + v13;
          v24.length = v7 - v13;
          CFStringGetCharacters(*((CFStringRef *)buffer + 16), v24, buffer);
          v11 = *((_QWORD *)buffer + 21);
          v12 = *((_QWORD *)buffer + 23);
          v5 = *((_QWORD *)buffer + 24);
        }
        v9 = buffer[v6 - v11];
        v6 = v12;
      }
    }
    if (v9 != 44)
    {
LABEL_24:
      v14 = 0;
      *((_QWORD *)buffer + 23) = v6 + v5;
    }
    else
    {
      *((_QWORD *)buffer + 23) = v6 + 1;
      v14 = v5 - 1;
    }
    *((_QWORD *)buffer + 24) = v14;
  }
  v4 = IMAPScanUid(buffer);
  *((_DWORD *)buffer + 50) = v4;
  if ((_DWORD)v4)
  {
    v15 = *((_QWORD *)buffer + 24);
    if (v15 >= 1)
    {
      v16 = *((_QWORD *)buffer + 23);
      if ((v16 & 0x8000000000000000) == 0)
      {
        v17 = *((_QWORD *)buffer + 20);
        if (v17 > v16)
        {
          v18 = *((_QWORD *)buffer + 17);
          if (v18)
          {
            v19 = *(_WORD *)(v18 + 2 * (*((_QWORD *)buffer + 19) + v16));
          }
          else
          {
            v20 = *((_QWORD *)buffer + 18);
            if (v20)
            {
              v19 = *(char *)(v20 + *((_QWORD *)buffer + 19) + v16);
            }
            else
            {
              if (*((_QWORD *)buffer + 22) <= v16 || (v21 = *((_QWORD *)buffer + 21), v21 > v16))
              {
                v22 = v16 - 4;
                if ((unint64_t)v16 < 4)
                  v22 = 0;
                if (v22 + 64 < v17)
                  v17 = v22 + 64;
                *((_QWORD *)buffer + 21) = v22;
                *((_QWORD *)buffer + 22) = v17;
                v25.location = *((_QWORD *)buffer + 19) + v22;
                v25.length = v17 - v22;
                CFStringGetCharacters(*((CFStringRef *)buffer + 16), v25, buffer);
                v21 = *((_QWORD *)buffer + 21);
              }
              v19 = buffer[v16 - v21];
            }
          }
          if (v19 == 44)
          {
            *(int64x2_t *)(buffer + 92) = vaddq_s64(*(int64x2_t *)(buffer + 92), (int64x2_t)xmmword_1A5999420);
            return v4;
          }
          if (v19 == 58)
          {
            *(int64x2_t *)(buffer + 92) = vaddq_s64(*(int64x2_t *)(buffer + 92), (int64x2_t)xmmword_1A5999420);
            *((_DWORD *)buffer + 51) = IMAPScanUid(buffer);
            return v4;
          }
          v16 = *((_QWORD *)buffer + 23);
          v15 = *((_QWORD *)buffer + 24);
        }
      }
      *((_QWORD *)buffer + 23) = v16 + v15;
      *((_QWORD *)buffer + 24) = 0;
    }
  }
  return v4;
}

uint64_t IMAPScanUid(UniChar *buffer)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  UniChar v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  CFRange v13;

  if (*((uint64_t *)buffer + 24) < 1)
    return 0;
  v2 = 0;
  v3 = *((_QWORD *)buffer + 23);
  do
  {
    if (v3 < 0)
      break;
    v4 = *((_QWORD *)buffer + 20);
    if (v4 <= v3)
      break;
    v5 = *((_QWORD *)buffer + 17);
    if (v5)
    {
      v6 = *(_WORD *)(v5 + 2 * (*((_QWORD *)buffer + 19) + v3));
    }
    else
    {
      v7 = *((_QWORD *)buffer + 18);
      if (v7)
      {
        v6 = *(char *)(v7 + *((_QWORD *)buffer + 19) + v3);
      }
      else
      {
        if (*((_QWORD *)buffer + 22) <= v3 || (v8 = *((_QWORD *)buffer + 21), v8 > v3))
        {
          v9 = v3 - 4;
          if ((unint64_t)v3 < 4)
            v9 = 0;
          if (v9 + 64 < v4)
            v4 = v9 + 64;
          *((_QWORD *)buffer + 21) = v9;
          *((_QWORD *)buffer + 22) = v4;
          v13.location = *((_QWORD *)buffer + 19) + v9;
          v13.length = v4 - v9;
          CFStringGetCharacters(*((CFStringRef *)buffer + 16), v13, buffer);
          v8 = *((_QWORD *)buffer + 21);
        }
        v6 = buffer[v3 - v8];
      }
    }
    v10 = v6 - 48;
    if (v10 > 9)
      break;
    v2 = v10 + 10 * (_DWORD)v2;
    v11 = *((_QWORD *)buffer + 24);
    v3 = *((_QWORD *)buffer + 23) + 1;
    *((_QWORD *)buffer + 23) = v3;
    *((_QWORD *)buffer + 24) = v11 - 1;
  }
  while (v11 > 1);
  return v2;
}

id MFIMAPDateSearchStringForDate(void *a1)
{
  id v1;
  void *v2;

  v1 = a1;
  if (MFIMAPDateSearchStringForDate_onceToken[0] != -1)
    dispatch_once(MFIMAPDateSearchStringForDate_onceToken, &__block_literal_global_8);
  objc_msgSend((id)MFIMAPDateSearchStringForDate_formatter, "stringFromDate:", v1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  return v2;
}

void sub_1A4FF1BB4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FF1C28(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id MFUIDPlusInfoFromResponse(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  _QWORD v9[3];
  _QWORD v10[4];

  v10[3] = *MEMORY[0x1E0C80C00];
  v1 = a1;
  if (objc_msgSend(v1, "responseType") == 2 && objc_msgSend(v1, "responseCode") == 16)
  {
    objc_msgSend(v1, "responseInfo");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    v3 = v2;
    if (v2 && (unint64_t)objc_msgSend(v2, "count") >= 3)
    {
      v9[0] = CFSTR("UIDVALIDITY");
      objc_msgSend(v3, "objectAtIndexedSubscript:", 0);
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      v10[0] = v4;
      v9[1] = CFSTR("Source UIDS");
      objc_msgSend(v3, "objectAtIndexedSubscript:", 1);
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v10[1] = v5;
      v9[2] = CFSTR("Destination UIDS");
      objc_msgSend(v3, "objectAtIndexedSubscript:", 2);
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      v10[2] = v6;
      objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v10, v9, 3);
      v7 = (void *)objc_claimAutoreleasedReturnValue();

    }
    else
    {
      v7 = 0;
    }

  }
  else
  {
    v7 = 0;
  }

  return v7;
}

void sub_1A4FF1D94(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A4FF1EC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FF2008(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

uint64_t locked_supportsCapability(void *a1, uint64_t a2)
{
  unsigned __int16 *v3;
  void *v4;
  char v5;
  void *v6;
  int v7;
  uint64_t v8;
  char v9;

  v3 = a1;
  if ((((v3[64] | (*((unsigned __int8 *)v3 + 130) << 16)) >> a2) & 1) == 0)
    goto LABEL_12;
  if (a2 > 14)
  {
    if (a2 == 16)
    {
      objc_msgSend(MEMORY[0x1E0C99EA0], "standardUserDefaults");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      v5 = objc_msgSend(v4, "BOOLForKey:", CFSTR("DisableCONDSTORE"));
    }
    else
    {
      if (a2 != 15)
        goto LABEL_13;
      objc_msgSend(MEMORY[0x1E0C99EA0], "standardUserDefaults");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      v5 = objc_msgSend(v4, "BOOLForKey:", CFSTR("DisableESEARCH"));
    }
    goto LABEL_11;
  }
  if (a2 != 5)
  {
    if (a2 != 14)
      goto LABEL_13;
    objc_msgSend(MEMORY[0x1E0C99EA0], "standardUserDefaults");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = objc_msgSend(v4, "BOOLForKey:", CFSTR("DisableCOMPRESS"));
LABEL_11:
    v9 = v5;

    if ((v9 & 1) != 0)
    {
LABEL_12:
      v8 = 0;
      goto LABEL_14;
    }
LABEL_13:
    v8 = 1;
    goto LABEL_14;
  }
  objc_msgSend(MEMORY[0x1E0D1EEA8], "currentDevice");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "isPlatform:", 2);

  v8 = v7 ^ 1u;
LABEL_14:

  return v8;
}

void sub_1A4FF2168(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1A4FF21F4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FF2264(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FF2434(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FF2608(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FF2A30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,void *a21)
{
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;

  _Unwind_Resume(a1);
}

void sub_1A4FF3814(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, void *a14, void *a15, void *a16, void *a17, void *a18, uint64_t a19, uint64_t a20,void *a21,void *a22,void *a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30,void *a31,uint64_t a32,uint64_t a33,void *a34)
{
  void *v34;
  void *v35;
  void *v36;

  _Unwind_Resume(a1);
}

__CFString *MFIMAPStringFromMailboxName(void *a1)
{
  id v1;
  __CFString *v2;

  v1 = a1;
  if (objc_msgSend(v1, "length"))
  {
    _IMAPCreateQuotedString(v1);
    v2 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v2 = CFSTR("\"\"");
  }

  return v2;
}

void sub_1A4FF3B7C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

__CFString *_IMAPCreateQuotedString(void *a1)
{
  __CFString *v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  const char *CStringPtr;
  __CFString *v6;
  uint64_t v7;
  _BOOL4 v8;
  int64_t v9;
  CFIndex v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  UniChar v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  int64_t v20;
  __CFString *Mutable;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  UniChar v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  int64_t v33;
  __CFString *v34;
  __CFString *v36;
  UniChar v37;
  UniChar chars;
  UniChar buffer[8];
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __CFString *v47;
  const UniChar *CharactersPtr;
  const char *v49;
  uint64_t v50;
  int64_t v51;
  int64_t v52;
  int64_t v53;
  CFRange v54;
  CFRange v55;

  v1 = a1;
  v2 = -[__CFString length](v1, "length");
  v3 = v2;
  if (v2)
  {
    *(_QWORD *)&v4 = 0xAAAAAAAAAAAAAAAALL;
    *((_QWORD *)&v4 + 1) = 0xAAAAAAAAAAAAAAAALL;
    v45 = v4;
    v46 = v4;
    v43 = v4;
    v44 = v4;
    v41 = v4;
    v42 = v4;
    *(_OWORD *)buffer = v4;
    v40 = v4;
    chars = -21846;
    v47 = v1;
    v50 = 0;
    v51 = v2;
    v36 = v1;
    CharactersPtr = CFStringGetCharactersPtr(v1);
    if (CharactersPtr)
      CStringPtr = 0;
    else
      CStringPtr = CFStringGetCStringPtr(v1, 0x600u);
    v7 = 0;
    LOBYTE(v8) = 0;
    v9 = 0;
    v49 = CStringPtr;
    v10 = v3 + 2;
    v11 = 64;
    v52 = 0;
    v53 = 0;
    do
    {
      if ((unint64_t)v9 >= 4)
        v12 = 4;
      else
        v12 = v9;
      if (v9 < 0 || (v13 = v51, v51 <= v9))
      {
        v14 = 0;
      }
      else if (CharactersPtr)
      {
        v14 = CharactersPtr[v9 + v50];
      }
      else if (v49)
      {
        v14 = v49[v50 + v9];
      }
      else
      {
        if (v53 <= v9 || (v15 = v52, v52 > v9))
        {
          v16 = -v12;
          v17 = v12 + v7;
          v18 = v11 - v12;
          v19 = v9 + v16;
          v20 = v19 + 64;
          if (v19 + 64 >= v51)
            v20 = v51;
          v52 = v19;
          v53 = v20;
          if (v51 >= v18)
            v13 = v18;
          v54.length = v13 + v17;
          v54.location = v19 + v50;
          CFStringGetCharacters(v47, v54, buffer);
          v15 = v52;
        }
        v14 = buffer[v9 - v15];
      }
      v8 = v8 || CFCharacterSetIsCharacterMember((CFCharacterSetRef)sIMAPNeedsQuoteCharacterSet, v14) != 0;
      if (v14 == 92 || v14 == 34)
        ++v10;
      ++v9;
      --v7;
      ++v11;
    }
    while (v3 != v9);
    v1 = v36;
    if (v8)
    {
      Mutable = CFStringCreateMutable(0, v10);
      chars = 34;
      CFStringAppendCharacters(Mutable, &chars, 1);
      v22 = 0;
      v23 = 0;
      v24 = 64;
      do
      {
        if ((unint64_t)v23 >= 4)
          v25 = 4;
        else
          v25 = v23;
        if (v23 < 0 || (v26 = v51, v51 <= v23))
        {
          chars = 0;
        }
        else
        {
          if (CharactersPtr)
          {
            v27 = CharactersPtr[v23 + v50];
          }
          else if (v49)
          {
            v27 = v49[v50 + v23];
          }
          else
          {
            if (v53 <= v23 || (v28 = v52, v52 > v23))
            {
              v29 = -v25;
              v30 = v25 + v22;
              v31 = v24 - v25;
              v32 = v23 + v29;
              v33 = v32 + 64;
              if (v32 + 64 >= v51)
                v33 = v51;
              v52 = v32;
              v53 = v33;
              if (v51 >= v31)
                v26 = v31;
              v55.length = v26 + v30;
              v55.location = v32 + v50;
              CFStringGetCharacters(v47, v55, buffer);
              v28 = v52;
            }
            v27 = buffer[v23 - v28];
          }
          chars = v27;
          if (v27 == 92 || v27 == 34)
          {
            v37 = 92;
            CFStringAppendCharacters(Mutable, &v37, 1);
          }
        }
        CFStringAppendCharacters(Mutable, &chars, 1);
        ++v23;
        --v22;
        ++v24;
      }
      while (v3 != v23);
      chars = 34;
      v1 = v36;
      CFStringAppendCharacters(Mutable, &chars, 1);
    }
    else
    {
      Mutable = 0;
    }
    if (Mutable)
      v34 = Mutable;
    else
      v34 = v1;
    v6 = v34;

  }
  else
  {
    v6 = CFSTR("\"\"");
  }

  return v6;
}

void sub_1A4FF3EF0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FF4090(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FF4370(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4FF45C0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FF477C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FF48C8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FF5500(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51)
{
  void *v51;

  _Block_object_dispose(&a51, 8);
  _Unwind_Resume(a1);
}

void sub_1A4FF5818(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FF5C8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  void *v12;
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1A4FF6068(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

id _messageFromResponse(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;

  v1 = a1;
  if ((unint64_t)(objc_msgSend(v1, "responseType") - 1) >= 6)
  {
    v3 = 0;
    goto LABEL_7;
  }
  objc_msgSend(v1, "userString");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (!v2)
  {
LABEL_7:
    v4 = 0;
    goto LABEL_8;
  }
  if (objc_msgSend(v2, "isEqualToString:", &stru_1E4F1C8F8))
    v4 = 0;
  else
    v4 = v3;
LABEL_8:
  v5 = v4;

  return v5;
}

void sub_1A4FF6184(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FF6204(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FF63CC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FF68A4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A4FF6AC4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4FF6BB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A4FF6EF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_1A4FF716C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A4FF72C8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FF73EC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FF7690(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A4FF8130(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, void *a17, uint64_t a18, void *a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26)
{
  void *v26;

  _Unwind_Resume(a1);
}

void sub_1A4FF8430(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FF85C0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FF86F8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FF889C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FF8960(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A4FF8B0C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FF8EE4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4FF9168(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FF92D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9)
{
  _Unwind_Resume(exception_object);
}

void sub_1A4FF93A8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FF94B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  void *v16;
  id *v17;
  void *v18;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1A4FF96D4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1A4FF9870(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4FF9AFC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A4FF9DB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, void *a11, id a12)
{
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

uint64_t _processSelectCommand(void *a1, uint64_t a2, void *a3)
{
  id v5;
  _MFIMAPCommandParameters *v6;
  void *v7;
  void *v8;
  _MFIMAPCommandParameters *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t i;
  void *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  id v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  _MFIMAPCommandParameters *v32;
  _BYTE v33[128];
  _MFIMAPCommandParameters *v34;
  _QWORD v35[3];

  v35[1] = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v27 = a3;
  v6 = [_MFIMAPCommandParameters alloc];
  MFIMAPStringFromMailboxName(v27);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v35[0] = v7;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v35, 1);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = -[_MFIMAPCommandParameters initWithCommand:arguments:](v6, "initWithCommand:arguments:", a2, v8);

  objc_msgSend(v5, "mf_lock");
  v34 = v9;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v34, 1);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "_responseFromSendingCommands:", v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  v12 = objc_msgSend(v11, "responseType");
  if (v12 == 2)
  {
    v16 = objc_msgSend(v27, "copy");
    v17 = (void *)*((_QWORD *)v5 + 22);
    *((_QWORD *)v5 + 22) = v16;

    *((_BYTE *)v5 + 152) = *((_BYTE *)v5 + 152) & 0xF8 | 3;
    *((_BYTE *)v5 + 240) &= ~1u;
    v30 = 0u;
    v31 = 0u;
    v28 = 0u;
    v29 = 0u;
    -[_MFIMAPCommandParameters untaggedResponses](v9, "untaggedResponses");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v19 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v28, v33, 16);
    if (v19)
    {
      v20 = *(_QWORD *)v29;
      do
      {
        for (i = 0; i != v19; ++i)
        {
          if (*(_QWORD *)v29 != v20)
            objc_enumerationMutation(v18);
          v22 = *(void **)(*((_QWORD *)&v28 + 1) + 8 * i);
          if (objc_msgSend(v22, "responseType") == 2 && objc_msgSend(v22, "responseCode") == 13)
            *((_BYTE *)v5 + 240) |= 1u;
          if (objc_msgSend(v22, "responseType") == 2 && objc_msgSend(v22, "responseCode") == 5)
          {
            objc_msgSend(v22, "responseInfo");
            v23 = (void *)objc_claimAutoreleasedReturnValue();
            objc_opt_class();
            if ((objc_opt_isKindOfClass() & 1) != 0 && objc_msgSend(v23, "count"))
              v24 = IMAPPermanentFlagsFromArray(v23);
            else
              v24 = 1;
            objc_msgSend(v5, "setPermanentFlags:", v24);

          }
        }
        v19 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v28, v33, 16);
      }
      while (v19);
    }

    if (!objc_msgSend(v5, "permanentFlags"))
      objc_msgSend(v5, "setPermanentFlags:", 2147483774);
    v15 = 1;
  }
  else
  {
    if (v12 == 4 && (char)(32 * *((_BYTE *)v5 + 152)) >= 65)
    {
      v13 = (void *)*((_QWORD *)v5 + 22);
      *((_QWORD *)v5 + 22) = 0;

      *((_BYTE *)v5 + 152) = *((_BYTE *)v5 + 152) & 0xF8 | 2;
      *((_BYTE *)v5 + 240) &= ~1u;
    }
    v14 = (id)objc_msgSend(v5, "_errorForResponse:commandParams:", v11, v9);
    v15 = 0;
  }
  objc_msgSend(v5, "mf_unlock");
  v32 = v9;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v32, 1);
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "didFinishCommands:", v25);

  return v15;
}

void sub_1A4FFA1EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1A4FFA2DC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FFA3C4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FFA4B4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FFA674(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4FFA820(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4FFA950(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FFAAE4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

uint64_t _doUidSearch(void *a1, void *a2, void *a3, _QWORD *a4, BOOL *a5, char a6)
{
  id v10;
  id v11;
  void *v12;
  _MFIMAPCommandParameters *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  void *v32;
  void *v34;
  id v35;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  _MFIMAPCommandParameters *v41;
  _MFIMAPCommandParameters *v42;
  _BYTE v43[128];
  uint64_t v44;

  v44 = *MEMORY[0x1E0C80C00];
  v10 = a1;
  v35 = a2;
  v11 = a3;
  v12 = (void *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99DE8]), "initWithCapacity:", objc_msgSend(v11, "count", v11) + 2 * (v35 != 0));
  v13 = -[_MFIMAPCommandParameters initWithCommand:arguments:]([_MFIMAPCommandParameters alloc], "initWithCommand:arguments:", 24, v12);
  if (v35)
  {
    if ((a6 & 1) == 0)
      objc_msgSend(v12, "addObject:", CFSTR("UID"));
    objc_msgSend(v12, "addObject:", v35);
  }
  v39 = 0u;
  v40 = 0u;
  v37 = 0u;
  v38 = 0u;
  v14 = v11;
  v15 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v37, v43, 16);
  if (v15)
  {
    v16 = *(_QWORD *)v38;
    do
    {
      for (i = 0; i != v15; ++i)
      {
        if (*(_QWORD *)v38 != v16)
          objc_enumerationMutation(v14);
        v18 = (void *)objc_msgSend(v10, "copyArgumentForSearchTerm:", *(_QWORD *)(*((_QWORD *)&v37 + 1) + 8 * i));
        objc_msgSend(v12, "addObject:", v18);

      }
      v15 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v37, v43, 16);
    }
    while (v15);
  }

  v42 = v13;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v42, 1);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "_responseFromSendingCommands:", v19);
  v34 = (void *)objc_claimAutoreleasedReturnValue();

  v20 = objc_msgSend(v34, "responseType");
  if (a5)
    *a5 = v20 == 2;
  if (v20 == 2)
  {
    -[_MFIMAPCommandParameters untaggedResponses](v13, "untaggedResponses");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v22 = objc_msgSend(v21, "count");

    if (v22)
    {
      v23 = 0;
      v24 = 0;
      v25 = 0;
      do
      {
        -[_MFIMAPCommandParameters untaggedResponses](v13, "untaggedResponses");
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v26, "objectAtIndex:", v23);
        v27 = (void *)objc_claimAutoreleasedReturnValue();

        if (objc_msgSend(v27, "responseType") == 14)
        {
          objc_msgSend(v27, "searchResults");
          v28 = (void *)objc_claimAutoreleasedReturnValue();
          v29 = v28;
          if (a4)
          {
            if (v25)
              objc_msgSend(v25, "addObjectsFromArray:", v28);
            else
              v25 = (void *)objc_msgSend(v28, "mutableCopyWithZone:", 0);
          }
          -[_MFIMAPCommandParameters untaggedResponses](v13, "untaggedResponses");
          v30 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v30, "removeObjectAtIndex:", v23);

          --v22;
          v24 = 1;
        }
        else
        {
          ++v23;
        }

      }
      while (v23 < v22);
    }
    else
    {
      v25 = 0;
      v24 = 0;
    }
    v31 = v24 & 1;
  }
  else
  {
    v25 = 0;
    v31 = 0;
  }
  v41 = v13;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v41, 1);
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "didFinishCommands:", v32);

  if (a4)
  {
    objc_msgSend(v25, "sortUsingSelector:", sel_compare_);
    *a4 = objc_retainAutorelease(v25);
  }

  return v31;
}

void sub_1A4FFAEB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11)
{
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1A4FFB12C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A4FFB268(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4FFB388(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4FFB4D8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FFB5BC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FFB7FC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A4FFBAD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1A4FFBC00(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FFBEF4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A4FFC1BC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A4FFC46C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FFC8DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1A4FFCA90(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v6 = v3;

  _Unwind_Resume(a1);
}

void sub_1A4FFCCA8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FFCDB0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FFCF44(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_1A4FFD0BC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4FFD158(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FFD3F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12)
{
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

void sub_1A4FFD7E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, void *a11, void *a12, void *a13, uint64_t a14, void *a15, void *a16)
{

  _Unwind_Resume(a1);
}

void sub_1A4FFDAF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_1A4FFDCD8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FFDD30(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id uidSetForUIDArray(void *a1)
{
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _BYTE v13[128];
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  objc_msgSend(MEMORY[0x1E0CB3788], "indexSet");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = 0u;
  v12 = 0u;
  v9 = 0u;
  v10 = 0u;
  v3 = v1;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
  if (v4)
  {
    v5 = *(_QWORD *)v10;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v10 != v5)
          objc_enumerationMutation(v3);
        v7 = objc_msgSend(*(id *)(*((_QWORD *)&v9 + 1) + 8 * v6), "integerValue", (_QWORD)v9);
        if ((unint64_t)(v7 - 1) <= 0xFFFFFFFE)
          objc_msgSend(v2, "addIndex:", v7);
        ++v6;
      }
      while (v4 != v6);
      v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
    }
    while (v4);
  }

  return v2;
}

void sub_1A4FFDE6C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FFDEF4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FFE060(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id a24)
{
  void *v24;
  void *v25;
  uint64_t v26;

  _Block_object_dispose(&a19, 8);
  _Block_object_dispose((const void *)(v26 - 96), 8);
  _Block_object_dispose((const void *)(v26 - 64), 8);

  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__2(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__2(uint64_t a1)
{

}

void sub_1A4FFE384(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FFE968(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_1A4FFED58(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A4FFF06C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A4FFF2C4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A4FFF40C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FFF604(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FFF7F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1A4FFF8D0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A4FFFA3C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A4FFFC64(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_1A4FFFF18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_1A500012C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A5000594(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{

  _Unwind_Resume(a1);
}

void sub_1A50006EC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5000A98(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5000C34(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5000D84(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5000FD0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5001244(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50013AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50014CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1A5001614(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A50016DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5001788(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5001824(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_0_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0xCu);
}

uint64_t OUTLINED_FUNCTION_3(uint64_t result, uint64_t a2, float a3)
{
  *(float *)a2 = a3;
  *(_QWORD *)(a2 + 4) = result;
  return result;
}

void OUTLINED_FUNCTION_4(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0x16u);
}

void OUTLINED_FUNCTION_7(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 2u);
}

void OUTLINED_FUNCTION_8(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0xCu);
}

void sub_1A5001998(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_1A5001A44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5001BC8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5001C78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)MFInvocationQueue;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_1A5001E0C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5001F30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5002130(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5002280(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50022F0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A500234C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5002400(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A5002564(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5002674(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5002754(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50027B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5002824(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5002EDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,void *a34)
{
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;

  _Unwind_Resume(a1);
}

void sub_1A50031A0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5003264(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1A50033CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_1A5003510(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50035B4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1A5003724(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50037F8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50038B0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5003A28(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A5003C1C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5003D60(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5003E20(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5003ED4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5003F84(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A500402C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A50040CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5004194(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50041F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5004250(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50042B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5004318(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_0_2(void *a1, int a2, os_log_t log, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, a5, 0xCu);
}

void sub_1A500445C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5004554(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50045CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5004614(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A500465C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50046A0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5004708(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5004850(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5004974(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5004A44(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5004AD4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5004C14(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5004CD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5004D54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5004E14(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5004E58(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5004EF8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5004FE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5005038(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50051C4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5005260(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A500530C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A500540C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5005478(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50054CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5005564(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5005608(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5005664(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50056D0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A500577C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5005888(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A50059AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A5005AD0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A5005BF4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A5005D2C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A5005E64(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A5005EF4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5006034(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5006148(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50061A4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50061F8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5006320(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50063C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A5006428(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5006494(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A500676C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  _Unwind_Resume(a1);
}

void sub_1A5006908(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  void *v12;
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1A5006998(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50069FC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5006AB0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5006B18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5006B6C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5006BD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5006C30(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5006C80(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5006CE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5006D3C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5006DA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5006E2C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5006F14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A5007034(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5007464(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A50075E8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50076A0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5007724(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5007824(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_1A50079F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, void *a20)
{
  void *v20;
  void *v21;
  void *v22;
  void *v23;

  _Unwind_Resume(a1);
}

void sub_1A5007B18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A5007C30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1A5007CA8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50081F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__3(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__3(uint64_t a1)
{

}

void sub_1A50083EC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50084CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5008550(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5008694(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void initializeSharedInstance()
{
  MFLibraryStore *v0;
  void *v1;
  void *v2;
  id v3;

  v0 = objc_alloc_init(MFLibraryStore);
  v1 = (void *)sSharedInstance;
  sSharedInstance = (uint64_t)v0;

  v2 = (void *)sSharedInstance;
  +[MFMailMessageLibrary defaultInstance](MFMailMessageLibrary, "defaultInstance");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setLibrary:");

}

void sub_1A500874C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A500883C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50088D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50089C8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5008B04(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5008BFC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5008CD4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5008D80(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5008E18(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5008F80(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5009034(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50091C8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5009364(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1A5009408(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50094F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1A50095EC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50096E8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50097D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id a14)
{
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_1A50098B8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5009ACC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A5009C64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1A5009EB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12)
{
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1A5009FB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A500A01C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A500A090(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A500A168(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A500A248(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A500A35C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A500AAB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, void *a12)
{
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

id partDataFromFullBodyDataWithUnixLineEndings(void *a1, void *a2, void *a3, _BYTE *a4)
{
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  NSObject *v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  int v22;
  void *v23;
  __int16 v24;
  void *v25;
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v7 = a1;
  v8 = a2;
  v9 = a3;
  v11 = objc_msgSend(v9, "range");
  if (v11 == 0x7FFFFFFFFFFFFFFFLL)
    goto LABEL_8;
  v12 = v10;
  v13 = v11 + v10;
  if (v11 + v10 > (unint64_t)objc_msgSend(v7, "length"))
  {
    if (!v11)
    {
      objc_msgSend(v7, "mf_dataByConvertingUnixNewlinesToNetwork");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      v15 = objc_msgSend(v14, "length");

      if (v15 == v13)
      {
        MFLogGeneral();
        v16 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
        {
          objc_msgSend(v8, "messageID");
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v9, "partNumber");
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          v22 = 138543618;
          v23 = v17;
          v24 = 2114;
          v25 = v18;
          _os_log_impl(&dword_1A4F90000, v16, OS_LOG_TYPE_INFO, "#CacheLoads part data matches full body data with network line endings, returning full body data %{public}@:%{public}@", (uint8_t *)&v22, 0x16u);

        }
        v19 = v7;
        goto LABEL_10;
      }
    }
LABEL_8:
    v20 = 0;
    goto LABEL_12;
  }
  objc_msgSend(v7, "mf_subdataWithRange:", v11, v12);
  v19 = (id)objc_claimAutoreleasedReturnValue();
LABEL_10:
  v20 = v19;
  if (a4)
    *a4 = 1;
LABEL_12:

  return v20;
}

void sub_1A500ADC4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

id partDataFromFullBodyData(void *a1, void *a2, void *a3, _BYTE *a4, uint64_t a5, uint64_t a6)
{
  id v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  char v18;

  v11 = a1;
  v12 = a2;
  v13 = a3;
  v18 = 0;
  objc_msgSend(v11, "fullBodyDataForMessage:andHeaderDataIfReadilyAvailable:isComplete:downloadIfNecessary:usePartDatas:didDownload:", v12, 0, &v18, a5, 0, a6);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = v14;
  v16 = 0;
  if (v14 && v18)
  {
    partDataFromFullBodyDataWithUnixLineEndings(v14, v12, v13, a4);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return v16;
}

void sub_1A500AED0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A500B34C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, void *a15)
{
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1A500B900(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;

  _Unwind_Resume(a1);
}

void sub_1A500BD8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11)
{
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_1A500C2A4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_1A500C424(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1A500C510(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_1A500C718(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A500C7D8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A500C860(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A500C8D8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A500CC6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, void *a18)
{
  void *v18;

  _Unwind_Resume(a1);
}

void sub_1A500CDF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  v13 = v12;

  _Unwind_Resume(a1);
}

void sub_1A500CF78(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A500D09C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A500D1CC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  _Unwind_Resume(a1);
}

void sub_1A500D334(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A500D390(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A500D404(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A500D448(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A500D4D4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A500D5E4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A500D698(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A500D738(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A500D7D8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A500D8B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A500DA78(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A500DB40(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A500DBB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A500DC20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A500DC8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A500DD18(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A500DDA0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A500DEFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  v13 = v12;

  _Unwind_Resume(a1);
}

void sub_1A500E128(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

void sub_1A500E324(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A500E3FC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A500E5CC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A500E668(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A500E72C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A500E8B0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A500E970(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A500EA0C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A500EE30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A500F00C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A500F208(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A500F2B8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A500F334(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A500F550(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12)
{
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1A500F624(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A500F674(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id accountWithPathTryResolvingSymlinks(void *a1, int a2)
{
  id v3;
  void *v4;
  BOOL v5;
  uint64_t v6;

  v3 = a1;
  if (objc_msgSend(v3, "length"))
  {
    +[MailAccount _accountWithPath:](MailAccount, "_accountWithPath:", v3);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    if (v4)
      v5 = 1;
    else
      v5 = a2 == 0;
    if (!v5)
    {
      objc_msgSend(v3, "mf_betterStringByResolvingSymlinksInPath");
      v6 = objc_claimAutoreleasedReturnValue();

      +[MailAccount _accountWithPath:](MailAccount, "_accountWithPath:", v6);
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      v3 = (id)v6;
    }
  }
  else
  {
    v4 = 0;
  }

  return v4;
}

void sub_1A500F758(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A500F81C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A500F878(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)MailAccount;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_1A500F934(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A500F9E0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id mailAccountQueue()
{
  if (mailAccountQueue_predicate != -1)
    dispatch_once(&mailAccountQueue_predicate, &__block_literal_global_829);
  return (id)mailAccountQueue_queue;
}

void sub_1A500FABC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A500FB54(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A500FC38(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v6 = v5;

  _Unwind_Resume(a1);
}

void sub_1A500FD20(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A500FDE0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A500FED8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

id encodedURLComponent(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;

  v1 = a1;
  if (v1)
  {
    objc_msgSend(MEMORY[0x1E0C99E98], "ef_accountAllowedCharacterSet");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v1, "stringByAddingPercentEncodingWithAllowedCharacters:", v2);
    v3 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v3 = 0;
  }
  if (v3)
    v4 = v3;
  else
    v4 = v1;
  v5 = v4;

  return v5;
}

void sub_1A500FFA4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5010074(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50101AC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5010208(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5010298(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5010400(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5010520(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50106EC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50107E0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5010868(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50108B4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A501091C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50109E4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5010D70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{

  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__4(uint64_t a1)
{

}

void sub_1A5010F68(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A501120C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A5011400(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50114EC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5011570(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5011600(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A501167C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50116E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5011790(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5011808(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5011BF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11)
{
  void *v11;

  _Unwind_Resume(a1);
}

void _invalidateMailboxCache(void *a1)
{
  id v1;
  id *v2;

  v2 = a1;
  objc_msgSend(v2, "setCacheHasBeenRead:", 0);
  objc_msgSend(v2[13], "invalidate");
  objc_msgSend(v2, "mf_lock");
  v1 = v2[13];
  v2[13] = 0;

  objc_msgSend(v2, "mf_unlock");
}

void sub_1A5011D18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5011E38(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5011E7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5011FB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A501204C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50122E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50123A0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5012424(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A501255C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5012614(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50126FC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50127AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A5012844(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5012AAC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5012BE0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5012C5C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5012D18(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50136A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13, void *a14, uint64_t a15, void *a16, void *a17, void *a18, void *a19, void *a20)
{
  void *v20;
  void *v21;
  void *v22;

  _Unwind_Resume(a1);
}

void sub_1A5013EEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13)
{
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;

  _Unwind_Resume(a1);
}

void sub_1A5014268(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1A50143B4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5014488(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A501451C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50145C4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50147AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50148B0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1A501498C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5014A14(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5014B6C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5014C70(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5014D54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A5014E6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A5014ED8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A5014FA4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A501504C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50150B4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5015244(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5015324(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5015444(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50154E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5015830(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  void *v16;

  _Unwind_Resume(a1);
}

void _recurseIntoFileSystem(void *a1, id *a2)
{
  void *v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;

  objc_msgSend(a1, "objectForKey:", CFSTR("MailboxName"));
  v9 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(a1, "objectForKey:", CFSTR("MailboxAttributes"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "unsignedIntValue");

  v6 = v5;
  if ((v5 & 1) == 0)
  {
    v7 = objc_msgSend(a2[1], "length");
    objc_msgSend(a2[2], "childWithName:", v9);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v8)
      v8 = (void *)objc_msgSend(*a2, "_copyMailboxWithParent:name:attributes:dictionary:", a2[2], v9, v6, 0);
    objc_msgSend(a2[1], "appendString:", CFSTR("/"));
    objc_msgSend(a2[1], "appendString:", v9);
    objc_msgSend(*a2, "_loadEntriesFromFileSystemPath:parent:", a2[1], v8);
    objc_msgSend(a2[1], "deleteCharactersInRange:", v7, objc_msgSend(a2[1], "length") - v7);

  }
}

void sub_1A5015A00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A5015B4C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5015C24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A5015CBC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5015DC0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5015E4C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5015F14(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A5015FCC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50160AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50161D4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50162F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50163C8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A501656C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1A5016750(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A50167F8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5016884(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A501693C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5016A84(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A5016C14(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A5016D40(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5016DA4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5016E28(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5016E9C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5016F24(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5017030(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

CFComparisonResult _MFCompareMailboxDictionariesByName(void *a1, void *a2)
{
  CFComparisonResult v2;
  __CFString *v4;
  __CFString *v5;

  v2 = kCFCompareEqualTo;
  if (a1 && a2)
  {
    objc_msgSend(a1, "objectForKey:", CFSTR("MailboxName"));
    v4 = (__CFString *)objc_claimAutoreleasedReturnValue();
    if (v4)
    {
      objc_msgSend(a2, "objectForKey:", CFSTR("MailboxName"));
      v5 = (__CFString *)objc_claimAutoreleasedReturnValue();
      if (v5)
        v2 = CFStringCompare(v4, v5, 0);
      else
        v2 = kCFCompareEqualTo;

    }
    else
    {
      v2 = kCFCompareEqualTo;
    }

  }
  return v2;
}

void sub_1A50172A0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5017380(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

CFComparisonResult _compareNameWithMailboxDictionary(void *a1, void *a2, void *a3)
{
  uint64_t v4;
  __CFString *v5;
  __CFString *v6;
  CFComparisonResult v7;

  if (a1 == a3)
  {
    v6 = a1;
    objc_msgSend(a2, "objectForKey:", CFSTR("MailboxName"));
    v5 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    objc_msgSend(a1, "objectForKey:", CFSTR("MailboxName"));
    v4 = objc_claimAutoreleasedReturnValue();
    v5 = a2;
    v6 = (__CFString *)v4;
  }
  v7 = kCFCompareEqualTo;
  if (v6 && v5)
    v7 = CFStringCompare(v6, v5, 0);

  return v7;
}

void sub_1A501744C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void __mailAccountQueue_block_invoke()
{
  dispatch_queue_t v0;
  void *v1;
  NSObject *v2;

  dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  v2 = objc_claimAutoreleasedReturnValue();
  v0 = dispatch_queue_create("com.apple.email.MailAccount", v2);
  v1 = (void *)mailAccountQueue_queue;
  mailAccountQueue_queue = (uint64_t)v0;

}

Class initMCCSecretAgentController()
{
  Class result;

  if (LoadicloudMCCKit_loadPredicate != -1)
    dispatch_once(&LoadicloudMCCKit_loadPredicate, &__block_literal_global_832);
  result = objc_getClass("MCCSecretAgentController");
  classMCCSecretAgentController = (uint64_t)result;
  getMCCSecretAgentControllerClass = (uint64_t (*)())MCCSecretAgentControllerFunction;
  return result;
}

id MCCSecretAgentControllerFunction()
{
  return (id)classMCCSecretAgentController;
}

uint64_t mailboxUIDTypeFromECMailboxType(uint64_t result)
{
  switch(result)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return result;
    default:
      if (result != -100)
        result = -500;
      break;
  }
  return result;
}

void sub_1A5017668(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5017750(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A501784C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A5017898()
{
  JUMPOUT(0x1A5017888);
}

void sub_1A50178A0()
{
  JUMPOUT(0x1A501788CLL);
}

void sub_1A5017AB8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5017B84(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1A5017C54(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5017D34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5017D94(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5017E10(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A5017EA8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A5017F50(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5017FE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A501817C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50181E0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5018244(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50182E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A501838C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A501843C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5018540(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50185BC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5018750(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50187C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)MFMailboxUid;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_1A50188BC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5018944(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50189C8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5018A58(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5018AF4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5018BF4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5018CC4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5018D84(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5018E0C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5018E9C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5018F58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A5018FD4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5019044(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50190A8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5019130(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5019184(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5019220(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5019388(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50194AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5019544(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50195D0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

id accountForHeaders(void *a1)
{
  void *v1;
  void *v2;
  void *v3;

  objc_msgSend(a1, "firstSenderAddress");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  +[MailAccount accountContainingEmailAddress:](MailAccount, "accountContainingEmailAddress:", v1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "deliveryAccount");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

void sub_1A501964C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50196FC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A5019780(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A501985C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1A5019AB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1A5019B98(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5019C50(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5019D58(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A5019DE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)MFMailDelivery;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_1A5019E64(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5019F2C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A501A154(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A501A2F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A501A638(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12)
{
  void *v12;
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1A501A7B4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A501A960(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A501AB10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1A501AE08(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;

  v10 = v8;

  _Unwind_Resume(a1);
}

void sub_1A501B070(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1A501B2F0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1A501B3D8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A501B480(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A501B630(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A501B6CC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A501B7AC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A501B9E0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A501BA28(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A501BD98(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A501BF10(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A501BF74(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A501BFC4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A501C014(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A501C05C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A501C120(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A501C1B0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A501C200(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A501C2B0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A501C398(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1A501C448(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A501C4EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A501C6FC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A501C85C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A501CABC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,id a34)
{
  void *v34;
  void *v35;

  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__5(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__5(uint64_t a1)
{

}

void sub_1A501CC08(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A501CC8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A501CD20(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A501CD78(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A501CEA0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A501CEF4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A501CFB8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

unint64_t _MFFlagsBySettingValueForKey(unint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  unsigned int v7;
  uint64_t v8;
  unint64_t v9;
  BOOL v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  NSObject *v21;

  v5 = a2;
  v6 = a3;
  v7 = objc_msgSend(v6, "BOOLValue");
  if (objc_msgSend(v5, "isEqual:", CFSTR("MessageIsRead")))
  {
    if ((a1 & 1) != v7)
      a1 = a1 & 0xFFFFFFFFFFFFFFFELL | v7;
    goto LABEL_16;
  }
  if (objc_msgSend(v5, "isEqual:", CFSTR("MessageIsDeleted")))
  {
    v8 = (a1 >> 1) & 1;
    v9 = a1 & 0xFFFFFFFFFFFFFFFDLL;
    v10 = v7 == 0;
    v11 = 2;
LABEL_11:
    if (v10)
      v11 = 0;
    v12 = v11 | v9;
    if ((_DWORD)v8 != v7)
      a1 = v12;
    goto LABEL_16;
  }
  if (objc_msgSend(v5, "isEqualToString:", CFSTR("MessageWasRepliedTo")))
  {
    v8 = (a1 >> 2) & 1;
    v9 = a1 & 0xFFFFFFFFFFFFFCFBLL;
    v10 = v7 == 0;
    v11 = 4;
    goto LABEL_11;
  }
  if (objc_msgSend(v5, "isEqualToString:", CFSTR("MessageWasForwarded")))
  {
    v8 = (a1 >> 8) & 1;
    v9 = a1 & 0xFFFFFFFFFFFFFCFBLL;
    v10 = v7 == 0;
    v11 = 256;
    goto LABEL_11;
  }
  if (objc_msgSend(v5, "isEqualToString:", CFSTR("MessageWasRedirected")))
  {
    if (((a1 >> 9) & 1) == v7)
      goto LABEL_16;
    v14 = a1 & 0xFFFFFFFFFFFFFCFBLL;
    v15 = v7 == 0;
    v16 = 512;
    goto LABEL_29;
  }
  if (objc_msgSend(v5, "isEqualToString:", CFSTR("MessageIsJunk")))
  {
    if (((a1 >> 21) & 1) == v7)
      goto LABEL_16;
    v14 = a1 & 0xFFFFFFFF7FDFFFFFLL;
    v15 = v7 == 0;
    v16 = 0x200000;
    goto LABEL_29;
  }
  if (objc_msgSend(v5, "isEqualToString:", CFSTR("MessageIsNotJunk")))
  {
    if (((a1 & 0x80000000) != 0) == v7)
      goto LABEL_16;
    v14 = a1 & 0xFFFFFFFF7FDFFFFFLL;
    v15 = v7 == 0;
    v16 = 0x80000000;
    goto LABEL_29;
  }
  if (objc_msgSend(v5, "isEqualToString:", CFSTR("MessageIsFlagged")))
  {
    if (((a1 >> 4) & 1) == v7)
      goto LABEL_16;
    v14 = a1 & 0xFFFFFFFFFFFFFFEFLL;
    v15 = v7 == 0;
    v16 = 16;
    goto LABEL_29;
  }
  if (objc_msgSend(v5, "isEqualToString:", CFSTR("MessageFlagColor")))
  {
    v17 = objc_msgSend(v6, "unsignedIntegerValue");
    if (((a1 >> 41) & 7) != v17)
      a1 = a1 & 0xFFFFF1FFFFFFFFFFLL | ((unint64_t)(v17 & 7) << 41);
    goto LABEL_16;
  }
  if (objc_msgSend(v5, "isEqualToString:", CFSTR("MessageIsServerSearchResult")))
  {
    if (((a1 >> 7) & 1) == v7)
      goto LABEL_16;
    v14 = a1 & 0xFFFFFFFFFFFFFF7FLL;
    v15 = v7 == 0;
    v16 = 128;
    goto LABEL_29;
  }
  if (objc_msgSend(v5, "isEqualToString:", CFSTR("MessageIsThreadSearchResult")))
  {
    if (((a1 >> 20) & 1) == v7)
      goto LABEL_16;
    v14 = a1 & 0xFFFFFFFFFFEFFFFFLL;
    v15 = v7 == 0;
    v16 = 0x100000;
    goto LABEL_29;
  }
  if (objc_msgSend(v5, "isEqualToString:", CFSTR("MessageSenderIsVIP")))
  {
    if (((a1 >> 24) & 1) == v7)
      goto LABEL_16;
    v14 = a1 & 0xFFFFFFFFFEFFFFFFLL;
    v15 = v7 == 0;
    v16 = 0x1000000;
    goto LABEL_29;
  }
  if (objc_msgSend(v5, "isEqualToString:", CFSTR("EMMessageDeliveryStatusInProgress")))
  {
    if (((a1 >> 37) & 1) == v7)
      goto LABEL_16;
    v14 = a1 & 0xFFFFFFDFFFFFFFFFLL;
    v15 = v7 == 0;
    v16 = 0x2000000000;
    goto LABEL_29;
  }
  if (objc_msgSend(v5, "isEqualToString:", CFSTR("MessageQueuedForDelivery")))
  {
    if (((a1 >> 38) & 1) == v7)
      goto LABEL_16;
    v14 = a1 & 0xFFFFFFBFFFFFFFFFLL;
    v15 = v7 == 0;
    v16 = 0x4000000000;
    goto LABEL_29;
  }
  if (objc_msgSend(v5, "isEqualToString:", CFSTR("MessageToContainsAccountAddress")))
  {
    if (((a1 >> 39) & 1) == v7)
      goto LABEL_16;
    v14 = a1 & 0xFFFFFF7FFFFFFFFFLL;
    v15 = v7 == 0;
    v16 = 0x8000000000;
    goto LABEL_29;
  }
  if (objc_msgSend(v5, "isEqualToString:", CFSTR("MessageCcContainsAccountAddress")))
  {
    if (((a1 >> 40) & 1) == v7)
      goto LABEL_16;
    v14 = a1 & 0xFFFFFEFFFFFFFFFFLL;
    v15 = v7 == 0;
    v16 = 0x10000000000;
LABEL_29:
    if (v15)
      v16 = 0;
    a1 = v16 | v14;
    goto LABEL_16;
  }
  if (objc_msgSend(v5, "isEqualToString:", CFSTR("MessageToOrCcContainsAccountAddress")))
  {
    v18 = 0x8000000000;
    if (!v7)
      v18 = 0;
    v19 = v18 | a1 & 0xFFFFFE7FFFFFFFFFLL;
    v20 = 0x10000000000;
    if (!v7)
      v20 = 0;
    a1 = v19 | v20;
  }
  else if ((objc_msgSend(v5, "isEqualToString:", CFSTR("_Encoding")) & 1) == 0
         && (objc_msgSend(v5, "isEqualToString:", CFSTR("MessageChangeReason")) & 1) == 0)
  {
    MFLogGeneral();
    v21 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEBUG))
      _MFFlagsBySettingValueForKey_cold_1((uint64_t)v5, v21);

  }
LABEL_16:

  return a1;
}

void sub_1A501D4B8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

unint64_t MFMessageFlagsByApplyingDictionary(unint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  void *v8;
  void *v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  objc_msgSend(v3, "allKeys", 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
  if (v5)
  {
    v6 = *(_QWORD *)v12;
    do
    {
      for (i = 0; i != v5; ++i)
      {
        if (*(_QWORD *)v12 != v6)
          objc_enumerationMutation(v4);
        v8 = *(void **)(*((_QWORD *)&v11 + 1) + 8 * i);
        objc_msgSend(v3, "objectForKey:", v8);
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        a1 = _MFFlagsBySettingValueForKey(a1, v8, v9);

      }
      v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
    }
    while (v5);
  }

  return a1;
}

void sub_1A501D608(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

unint64_t _MFFlagsBySettingNumberOfAttachments(uint64_t a1, unsigned int a2, int a3, int a4)
{
  char v4;
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v4 = a2;
  else
    v4 = 63;
  if (a2 > 0x3E)
    v4 = 62;
  v5 = 8;
  if (!a4)
    v5 = 0;
  v6 = 0x800000;
  if (!a3)
    v6 = 0;
  return v6 & 0xFFFFFFFFFFFF03FFLL | a1 & 0xFFFFFFFFFF7F03F7 | v5 & 0xFFFFFFFFFFFF03FFLL | ((unint64_t)(v4 & 0x3F) << 10);
}

void sub_1A501D7BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A501D8A0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A501D948(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;

  a9.super_class = (Class)MFMailMessageLibrary;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_1A501DA60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A501DB20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_1A501DD30(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A501DDDC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A501DE74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_1A501DEFC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A501E034(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A501E1A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  void *v15;

  _Unwind_Resume(a1);
}

uint64_t setFlagsForMessage(void *a1, void *a2, unint64_t a3)
{
  id v5;
  id v6;
  void *v7;
  id v8;
  sqlite3_stmt *v9;
  int v10;
  int v11;
  const char *v12;
  int v13;
  const char *v14;
  int v15;
  uint64_t v16;
  int v17;
  const char *v18;
  int v19;
  const char *v20;
  id v21;
  const char *v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  unsigned int v29;

  v5 = a1;
  v6 = a2;
  objc_msgSend(CFSTR("UPDATE messages SET flags = :flags, read = :read, flagged = :flagged, flag_color = :flag_color, deleted = :deleted, sender_vip = :sender_vip, encoding = :encoding, remote_id = :uid"), "stringByAppendingString:", CFSTR(" WHERE ROWID = :rowid"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "preparedStatementForQueryString:", v7);
  v8 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
  v9 = (sqlite3_stmt *)objc_msgSend(v8, "compiled");

  if (v9)
  {
    v10 = sqlite3_bind_parameter_index(v9, ":flags");
    sqlite3_bind_int64(v9, v10, a3);
    v11 = sqlite3_bind_parameter_index(v9, ":read");
    if ((a3 & 1) != 0)
      v12 = "1";
    else
      v12 = "0";
    sqlite3_bind_text(v9, v11, v12, 1, 0);
    v13 = sqlite3_bind_parameter_index(v9, ":flagged");
    if ((a3 & 0x10) != 0)
      v14 = "1";
    else
      v14 = "0";
    sqlite3_bind_text(v9, v13, v14, 1, 0);
    v15 = sqlite3_bind_parameter_index(v9, ":flag_color");
    if ((a3 & 0x10) != 0)
      sqlite3_bind_int64(v9, v15, (a3 >> 41) & 7);
    else
      sqlite3_bind_null(v9, v15);
    v17 = sqlite3_bind_parameter_index(v9, ":deleted");
    if ((a3 & 2) != 0)
      v18 = "1";
    else
      v18 = "0";
    sqlite3_bind_text(v9, v17, v18, 1, 0);
    v19 = sqlite3_bind_parameter_index(v9, ":sender_vip");
    if ((a3 & 0x1000000) != 0)
      v20 = "1";
    else
      v20 = "0";
    sqlite3_bind_text(v9, v19, v20, 1, 0);
    objc_msgSend(v6, "remoteID");
    v21 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
    v22 = (const char *)objc_msgSend(v21, "UTF8String");

    if (v22)
    {
      v23 = sqlite3_bind_parameter_index(v9, ":uid");
      v24 = strlen(v22);
      sqlite3_bind_text(v9, v23, v22, v24, 0);
    }
    else
    {
      v25 = sqlite3_bind_parameter_index(v9, ":uid");
      sqlite3_bind_null(v9, v25);
    }
    v26 = objc_msgSend(v6, "preferredEncoding");
    v27 = sqlite3_bind_parameter_index(v9, ":encoding");
    if (v26 == -1)
      sqlite3_bind_null(v9, v27);
    else
      sqlite3_bind_int(v9, v27, v26);
    v28 = sqlite3_bind_parameter_index(v9, ":rowid");
    sqlite3_bind_int64(v9, v28, objc_msgSend(v6, "libraryID"));
    v29 = sqlite3_step(v9);
    sqlite3_reset(v9);
    objc_msgSend(v5, "checkForConnectionErrorWithMessage:", CFSTR("setting flags"));
    if (v29 == 101)
      v16 = 0;
    else
      v16 = v29;
  }
  else
  {
    v16 = 1;
  }

  return v16;
}

void sub_1A501E4F0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A501EA54(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A501EBC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1A501ED2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, void *a8, uint64_t a9, ...)
{
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  va_list va;

  va_start(va, a9);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A501EEE8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A501F0C8(_Unwind_Exception *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, void *a9, void *a10, uint64_t a11, void *a12, uint64_t a13, ...)
{
  void *v13;
  void *v14;
  void *v15;
  va_list va;

  va_start(va, a13);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A501F164()
{
  JUMPOUT(0x1A501F148);
}

void sub_1A501F37C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A501F4B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1A501F6D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, ...)
{
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  va_list va;

  va_start(va, a11);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A501F8A8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A501F9FC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A501FB3C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A501FBF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1A501FD1C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A501FDDC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5020218(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

id unlockedMailboxUidForMessage(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;

  v3 = a1;
  v4 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    objc_msgSend(v3, "mailboxUidForMessage:", v4);
  else
    objc_msgSend(v4, "mailbox");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

void sub_1A50203D4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5020560(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A5020A2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, uint64_t a11, void *a12, void *a13, void *a14, uint64_t a15, void *a16, void *a17, void *a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30)
{
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;

  _Unwind_Resume(a1);
}

void sub_1A5020DE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_1A5020FBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  v13 = v11;

  _Unwind_Resume(a1);
}

void sub_1A50211B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  void *v15;
  void *v16;
  void *v17;
  void *v18;

  _Unwind_Resume(a1);
}

void sub_1A50212AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50222B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, uint64_t a14, uint64_t a15, void *a16, void *a17, uint64_t a18, void *a19, uint64_t a20,void *a21,void *a22,uint64_t a23,uint64_t a24,void *a25)
{

  _Unwind_Resume(a1);
}

void sub_1A502260C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A50226E4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A502272C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50227E4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A5022C64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18, void *a19, void *a20,void *a21,void *a22)
{
  void *v22;
  void *v23;
  uint64_t v24;

  _Block_object_dispose((const void *)(v24 - 232), 8);

  _Block_object_dispose((const void *)(v24 - 200), 8);
  _Block_object_dispose((const void *)(v24 - 168), 8);

  _Block_object_dispose((const void *)(v24 - 136), 8);
  _Unwind_Resume(a1);
}

void sub_1A5025874(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,void *a61,uint64_t a62,uint64_t a63)
{
  void *a71;
  void *a72;
  void *v72;
  void *v73;
  void *v74;
  void *v75;

  _Block_object_dispose(&STACK[0x458], 8);
  _Block_object_dispose(&STACK[0x488], 8);

  _Block_object_dispose(&STACK[0x4B8], 8);
  _Block_object_dispose(&STACK[0x4D8], 8);
  _Block_object_dispose(&STACK[0x4F8], 8);
  _Block_object_dispose(&STACK[0x518], 8);
  _Block_object_dispose(&STACK[0x538], 8);

  _Block_object_dispose(&STACK[0x568], 8);
  _Block_object_dispose(&STACK[0x598], 8);

  _Block_object_dispose(&STACK[0x5C8], 8);
  _Block_object_dispose(&STACK[0x5F8], 8);

  _Block_object_dispose(&STACK[0x628], 8);
  _Block_object_dispose(&STACK[0x658], 8);

  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__6(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__6(uint64_t a1)
{

}

void sub_1A50265AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1A50266B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A5026734(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50267B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

sqlite3_int64 createRowidForMailbox(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  _QWORD *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  sqlite3 *v14;
  void *v15;
  void *v16;
  sqlite3_int64 v17;
  sqlite3_int64 insert_rowid;
  int v19;
  void *v20;
  void *v21;
  void *v22;
  NSObject *v23;
  void *v24;
  void *v25;
  id v27;
  void *v28;
  uint8_t buf[4];
  sqlite3_int64 v30;
  __int16 v31;
  void *v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v9 = a1;
  v10 = a2;
  v11 = a3;
  v12 = a4;
  v13 = a5;
  v14 = (sqlite3 *)objc_msgSend(v10, "sqlDB");
  objc_msgSend(v12, "objectForKey:", v11);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = v15;
  if (v15)
  {
    v17 = (int)objc_msgSend(v15, "intValue");
  }
  else
  {
    insert_rowid = objc_msgSend(v9, "mailboxIDForURLString:", v11);
    v17 = *MEMORY[0x1E0D1DC08];
    if (insert_rowid == *MEMORY[0x1E0D1DC08])
    {
      v27 = objc_retainAutorelease(v11);
      v19 = sqlite3_exec_printf(v14, "INSERT INTO mailboxes (url) values ('%q')", 0, 0, 0, objc_msgSend(v27, "UTF8String"));
      objc_msgSend(v10, "checkForConnectionErrorWithMessage:", CFSTR("inserting mailbox URL"));
      if (!v19)
      {
        insert_rowid = sqlite3_last_insert_rowid(v14);
        _MFLockGlobalLock();
        v20 = (void *)v9[4];
        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithLongLong:", insert_rowid);
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v20, "setObject:forKeyedSubscript:", v27, v21);

        _MFUnlockGlobalLock();
        v28 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99E98]), "initWithString:", v27);
        v22 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D1E1D8]), "initWithURL:", v28);
        EDLibraryLog();
        v23 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 134218242;
          v30 = insert_rowid;
          v31 = 2114;
          v32 = v22;
          _os_log_impl(&dword_1A4F90000, v23, OS_LOG_TYPE_DEFAULT, "Created rowid %lld from mailbox: %{public}@", buf, 0x16u);
        }

        objc_msgSend(v9, "hookRegistry");
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v24, "persistenceIsAddingMailboxWithDatabaseID:objectID:generationWindow:", insert_rowid, v22, v13);

      }
    }
    if (insert_rowid != v17)
    {
      EFStringWithInt64();
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "setObject:forKey:", v25, v11);

      v17 = insert_rowid;
    }
  }

  return v17;
}

void sub_1A5026A70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_1A5026CB8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t _writeDataHolderForMessageAndPart(void *a1, void *a2, uint64_t a3, void *a4, void *a5, void *a6, uint64_t a7, int a8, void *a9)
{
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  void *v27;
  void *v28;
  void *v30;
  void *v31;
  int v32;
  uint64_t v33;
  __int16 v34;
  int v35;
  __int16 v36;
  id v37;
  uint64_t v38;

  v38 = *MEMORY[0x1E0C80C00];
  v16 = a1;
  v17 = a2;
  v18 = a4;
  v19 = a5;
  v20 = a6;
  v21 = a9;
  objc_msgSend(v20, "data");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v19, "isEqualToString:", CFSTR("summary")))
  {
    v23 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3940]), "initWithData:encoding:", v22, 4);
    v24 = objc_msgSend(v16, "_setSummary:forMessageWithRowID:connection:", v23, a3, v17);

    goto LABEL_14;
  }
  if (_shouldStoreInDatabase(v19, a8))
  {
    v25 = objc_msgSend(v16, "_setMessageData:libraryID:part:partial:complete:connection:", v22, a3, v19, a7, a8 ^ 1u, v17);
LABEL_13:
    v24 = v25;
    goto LABEL_14;
  }
  if (!v18)
    __assert_rtn("_writeDataHolderForMessageAndPart", "MailMessageLibrary.m", 8337, "directory");
  MFPersistenceLog();
  v26 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
  {
    v32 = 134349570;
    v33 = a3;
    v34 = 1026;
    v35 = a7;
    v36 = 2114;
    v37 = v19;
    _os_log_impl(&dword_1A4F90000, v26, OS_LOG_TYPE_DEFAULT, "Writing body data for message database ID: %{public}lld, partial: %{public}d, part: %{public}@", (uint8_t *)&v32, 0x1Cu);
  }

  if (!v19)
  {
    v25 = objc_msgSend(v16, "_writeEmlxFileOfType:forAccount:toDirectory:withData:protectionClass:", a7, v21, v18, v20, 2);
    goto LABEL_13;
  }
  if ((_DWORD)a7)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "BOOL _writeDataHolderForMessageAndPart(MFMailMessageLibrary *__strong, EDPersistenceDatabaseConnection *__strong, EMDatabaseID, EMGlobalMessageID, NSString *__strong, NSString *__strong, MFDataHolder *__strong, BOOL, BOOL, MailAccount *__strong)");
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v30, "handleFailureInFunction:file:lineNumber:description:", v31, CFSTR("MailMessageLibrary.m"), 8340, CFSTR("cannot write partial MIME parts."));

  }
  objc_msgSend(v19, "stringByAppendingPathExtension:", CFSTR("emlxpart"));
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "stringByAppendingPathComponent:", v27);
  v28 = (void *)objc_claimAutoreleasedReturnValue();

  v24 = objc_msgSend(v16, "_writeEmlxFile:withData:protectionClass:purgeable:", v28, v20, 2, objc_msgSend(v21, "supportsPurge"));
LABEL_14:

  return v24;
}

void sub_1A5026FC8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;

  _Unwind_Resume(a1);
}

uint64_t _protectionClassForMailbox(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if (objc_msgSend(v1, "mailboxType") == 6 || objc_msgSend(v1, "mailboxType") == 106)
  {
    v2 = 3;
  }
  else if (objc_msgSend(v1, "isSendLaterMailbox"))
  {
    v2 = 3;
  }
  else
  {
    v2 = 2;
  }

  return v2;
}

void sub_1A50270A8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50271E0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5027270(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;
  void *v2;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1A50272F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  os_unfair_lock_s *v10;
  void *v11;

  os_unfair_lock_unlock(v10);
  _Unwind_Resume(a1);
}

void sub_1A5027374(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5027444(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  void *v15;
  void *v16;
  void *v17;

  v17 = v16;

  _Unwind_Resume(a1);
}

void sub_1A50275D0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5027768(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

void sub_1A5027888(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  uint64_t v15;

  _Block_object_dispose((const void *)(v15 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_1A5027AA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1A5027EC4(_Unwind_Exception *a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  va_list va;

  va_start(va, a12);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A5028008(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A5028118(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A502867C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, void *a14, uint64_t a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;

  _Block_object_dispose((const void *)(v24 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1A50287F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A5028A48(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5028B80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_1A5028C68(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5028E70(_Unwind_Exception *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, ...)
{
  void *v15;
  void *v16;
  void *v17;
  va_list va;

  va_start(va, a15);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A50297D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;

  _Block_object_dispose((const void *)(v16 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1A5029A64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A5029BFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5029D48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

uint64_t handleMessageRow(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  double Current;
  void *v11;
  unint64_t v12;
  unint64_t v13;
  float v14;
  float v15;
  NSObject *v16;
  int v17;
  NSObject *v18;
  double v19;
  uint64_t v20;
  id v21;
  id v22;
  void *v23;
  int v25;
  double v26;
  __int16 v27;
  uint64_t v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v7 = a1;
  v8 = a3;
  v9 = a4;
  Current = CFAbsoluteTimeGetCurrent();
  objc_msgSend(*(id *)a2, "_messageForRow:options:timestamp:connection:isProtectedDataAvailable:recipientsCache:", v7, *(unsigned int *)(a2 + 52), *(_QWORD *)(a2 + 32), v8, *(unsigned __int8 *)(a2 + 64), v9);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a2 + 8), "addObject:", v11);
  v12 = objc_msgSend(*(id *)(a2 + 8), "count");
  v13 = *(unsigned int *)(a2 + 24);
  if (v12 >= v13)
  {
    *(_DWORD *)(a2 + 24) = 2 * v13;
    v15 = *(float *)(a2 + 28) + *(float *)(a2 + 28);
  }
  else
  {
    if (!v12)
      goto LABEL_15;
    v14 = *(float *)(a2 + 28);
    if (Current - *(double *)(a2 + 40) <= v14)
      goto LABEL_15;
    v15 = v14 + (float)((float)(v14 * (float)v12) / (float)v13);
  }
  *(float *)(a2 + 28) = v15;
  MFLogGeneral();
  v16 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
  {
    v17 = *(_DWORD *)(a2 + 48);

    if (!v17)
    {
      MFLogGeneral();
      v18 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
      {
        v19 = *(double *)(a2 + 40);
        v20 = objc_msgSend(*(id *)(a2 + 8), "count");
        v25 = 134218240;
        v26 = Current - v19;
        v27 = 2048;
        v28 = v20;
        _os_log_impl(&dword_1A4F90000, v18, OS_LOG_TYPE_INFO, "#SQLite #Performance %.3f seconds to load first batch of %lu messages", (uint8_t *)&v25, 0x16u);
      }

    }
  }
  else
  {

  }
  if (*(float *)(a2 + 28) > 16.0)
    *(_DWORD *)(a2 + 28) = 1098907648;
  v21 = *(id *)(a2 + 8);
  objc_msgSend(*(id *)(a2 + 16), "newMessagesAvailable:", v21);
  *(_DWORD *)(a2 + 48) += objc_msgSend(v21, "count");
  *(double *)(a2 + 40) = Current;
  v22 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v23 = *(void **)(a2 + 8);
  *(_QWORD *)(a2 + 8) = v22;

LABEL_15:
  return 1;
}

void sub_1A5029FB8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A502A1A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  va_list va;

  va_start(va, a11);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A502A4E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12)
{
  void *v12;
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1A502A6E4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A502A794(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A502A83C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A502A90C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A502A9A0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A502ABC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  void *v26;
  void *v27;
  void *v28;
  uint64_t v29;

  _Block_object_dispose(&a26, 8);
  _Block_object_dispose((const void *)(v29 - 120), 8);

  _Unwind_Resume(a1);
}

void sub_1A502ADF8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A502AF70(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A502B180(_Unwind_Exception *a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  va_list va;

  va_start(va, a16);

  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v19 - 120), 8);

  _Unwind_Resume(a1);
}

void sub_1A502B5E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,id a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,id a36)
{
  void *v36;

  _Block_object_dispose(&a25, 8);
  _Block_object_dispose(&a31, 8);

  _Unwind_Resume(a1);
}

void sub_1A502B74C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

id mimePartFromFilename(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  char v4;
  void *v5;

  v1 = a1;
  v2 = v1;
  if (v1
    && (objc_msgSend(v1, "pathExtension"),
        v3 = (void *)objc_claimAutoreleasedReturnValue(),
        v4 = objc_msgSend(v3, "isEqualToString:", CFSTR("emlxpart")),
        v3,
        (v4 & 1) != 0))
  {
    objc_msgSend(v2, "stringByDeletingPathExtension");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v5 = 0;
  }

  return v5;
}

void sub_1A502B7E8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A502B8D4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A502B9DC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A502BE0C(_Unwind_Exception *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  void *v17;
  void *v18;
  va_list va;

  va_start(va, a17);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A502C06C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  void *v15;
  void *v16;
  void *v17;
  void *v18;

  _Unwind_Resume(a1);
}

void sub_1A502C3F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,void *a29)
{
  void *v29;
  void *v30;
  void *v31;

  _Unwind_Resume(a1);
}

void sub_1A502C538(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{

  _Unwind_Resume(a1);
}

void sub_1A502C688(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A502C88C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A502CA20(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A502CB08(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A502CC48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  void *v22;
  void *v23;
  void *v24;

  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_1A502CEE8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A502D030(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A502D194(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, void *a16)
{
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_1A502D374(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A502D4BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1A502D698(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A502D784(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A502D824(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A502D8E0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A502DA98(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A502DB44(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A502DD04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7, uint64_t a8, uint64_t a9, ...)
{
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  va_list va;

  va_start(va, a9);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A502DF50(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A502E0F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, void *a17)
{
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  _Unwind_Resume(a1);
}

void sub_1A502E2C8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v6 = v3;

  _Unwind_Resume(a1);
}

void sub_1A502E44C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A502E604(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, void *a17)
{
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  _Unwind_Resume(a1);
}

void sub_1A502E76C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A502E8D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  void *v22;
  void *v23;
  void *v24;
  void *v25;

  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_1A502EB08(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A502EC38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A502EDA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id a24)
{
  void *v24;
  void *v25;
  void *v26;
  void *v27;

  _Block_object_dispose(&a19, 8);
  _Unwind_Resume(a1);
}

void sub_1A502EF88(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A502F144(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id a24)
{
  void *v24;
  void *v25;
  void *v26;
  void *v27;

  _Block_object_dispose(&a19, 8);
  _Unwind_Resume(a1);
}

void sub_1A502F328(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A502F4DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;

  _Unwind_Resume(a1);
}

void sub_1A502F658(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;

  _Unwind_Resume(a1);
}

void sub_1A502F770(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A502F9D4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A502FB68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  void *v20;
  void *v21;
  void *v22;
  void *v23;

  v23 = v22;

  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

void sub_1A502FC94(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A502FDC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, void *a17, void *a18)
{
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  _Unwind_Resume(a1);
}

void sub_1A502FF64(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50300D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  void *v22;
  void *v23;
  void *v24;
  void *v25;

  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_1A5030354(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5030474(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_1A503055C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5030694(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

void sub_1A50308F0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50309F0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5030B80(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5030E84(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5031388(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5031524(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50316AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1A503194C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5031A98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_1A5031C14(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5031CF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1A5031EF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1A5032090(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5032278(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  void *v22;
  void *v23;

  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_1A50323D4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5032904(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_1A5032AB8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5032BD0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5032CC0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5032D30(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5032D94(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5032E18(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5032FCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_1A5033138(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  void *v15;
  void *v16;
  void *v17;
  void *v18;

  _Unwind_Resume(a1);
}

void sub_1A50331E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A5033260(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5033344(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  void *v7;
  void *v8;
  va_list va;

  va_start(va, a7);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A5033420(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50334DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A503359C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5033754(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, ...)
{
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  va_list va;

  va_start(va, a9);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A5033874(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5033984(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

void sub_1A5033B18(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5033C40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1A50340EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, void *a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  void *v41;
  void *v42;

  _Block_object_dispose(&a29, 8);
  _Block_object_dispose(&a33, 8);
  _Block_object_dispose(&a37, 8);
  _Block_object_dispose(&a41, 8);

  _Unwind_Resume(a1);
}

void sub_1A503463C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, uint64_t a12, void *a13)
{
  void *v13;
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1A50349D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, void *a17)
{
  void *v17;

  _Unwind_Resume(a1);
}

void sub_1A5034B1C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5034C54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1A5034CC0()
{
  void *v0;

  JUMPOUT(0x1A5034CB0);
}

void sub_1A5034CCC()
{
  JUMPOUT(0x1A5034CB0);
}

void sub_1A5034E08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  _Unwind_Resume(a1);
}

void sub_1A5034EAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50351E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, void *a14, void *a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  _Unwind_Resume(a1);
}

void sub_1A50357E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, uint64_t a11, void *a12, void *a13, void *a14, uint64_t a15, void *a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,void *a37,uint64_t a38,void *a39,void *a40,void *a41,void *a42)
{
  void *v42;
  void *v43;
  void *v44;
  void *v45;

  _Unwind_Resume(a1);
}

void sub_1A5035BBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28)
{
  void *v28;
  void *v29;
  void *v30;
  void *v31;

  _Unwind_Resume(a1);
}

void sub_1A5035C48()
{
  JUMPOUT(0x1A5035C3CLL);
}

void sub_1A5035CA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A5035D5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1A5035E20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A5035EA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5035F88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{

  _Unwind_Resume(a1);
}

void sub_1A5036030(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1A50360E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1A50361B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_1A5036274(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A503644C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;

  _Unwind_Resume(a1);
}

void sub_1A5036518(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A503663C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5036804(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A5036ABC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, ...)
{
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  va_list va;

  va_start(va, a9);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A5036C64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1A5036CF4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5036EE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7, void *a8, uint64_t a9, void *a10, uint64_t a11, ...)
{
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  va_list va;

  va_start(va, a11);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A50371E4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5037330(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A503771C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,void *a26,void *a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  uint64_t v37;

  _Block_object_dispose(&a31, 8);
  _Block_object_dispose((const void *)(v37 - 160), 8);

  _Unwind_Resume(a1);
}

void sub_1A5037958(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, void *a17, void *a18, void *a19)
{
  void *v19;
  void *v20;
  void *v21;

  _Unwind_Resume(a1);
}

void sub_1A5037A70(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5037B04(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id filenameForMIMEPart(void *a1)
{
  objc_msgSend(a1, "stringByAppendingPathExtension:", CFSTR("emlxpart"));
  return (id)objc_claimAutoreleasedReturnValue();
}

void sub_1A5037B6C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5037C08(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5037CE0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

id _dataPathForMessageAndPart(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  __CFString *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;

  v5 = a1;
  v6 = a2;
  v7 = a3;
  objc_msgSend(v5, "bodyMigrator");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "migrateBodyForMessageIfNecessary:", v6);

  v9 = objc_msgSend(v6, "globalMessageID");
  objc_msgSend(v6, "account");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  if (v7)
  {
    objc_msgSend(v7, "stringByAppendingPathExtension:", CFSTR("emlxpart"));
    v11 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v11 = CFSTR("full.emlx");
  }
  objc_msgSend(v5, "messageBasePathForAccount:", v10);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0D1EB20], "messageDataDirectoryURLForGlobalMessageID:basePath:purgeable:", v9, v12, objc_msgSend(v10, "supportsPurge"));
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "URLByAppendingPathComponent:isDirectory:", v11, 0);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v14, "path");
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  return v15;
}

void sub_1A5037E8C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A5038114(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A503826C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50384AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_1A50385C0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5038654(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50386D8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A503874C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5038968(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  void *v9;
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1A5038B9C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v6 = v5;

  _Unwind_Resume(a1);
}

dispatch_data_t mappedDispatchDataFromFileURL(void *a1)
{
  id v1;
  void *v2;
  char v3;
  id v4;
  void *v5;
  size_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  dispatch_data_t v11;
  dispatch_data_t v12;
  NSObject *v13;
  id v15;

  v1 = a1;
  if (v1)
  {
    v2 = (void *)MEMORY[0x1A85B0E24]();
    v15 = 0;
    v3 = objc_msgSend(v1, "getResourceValue:forKey:error:", &v15, *MEMORY[0x1E0C99998], 0);
    v4 = v15;
    v5 = v4;
    if ((v3 & 1) != 0 && (v6 = objc_msgSend(v4, "unsignedLongLongValue")) != 0)
    {
      objc_msgSend(MEMORY[0x1E0CB3608], "fileHandleForReadingFromURL:error:", v1, 0);
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v8 = v7;
      if (v7 && (v9 = mmap(0, v6, 1, 1, objc_msgSend(v7, "fileDescriptor"), 0), (v10 = v9) != 0))
      {
        v11 = dispatch_data_create(v9, v6, 0, (dispatch_block_t)*MEMORY[0x1E0C80CE8]);
        v12 = v11;
        if (v11)
          v13 = v11;
        else
          munmap(v10, v6);

      }
      else
      {
        v12 = 0;
      }

    }
    else
    {
      v12 = 0;
    }

    objc_autoreleasePoolPop(v2);
  }
  else
  {
    v12 = 0;
  }

  return v12;
}

void sub_1A5038D40(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5038EF0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50393F8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A503970C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A503983C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5039CC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;

  _Block_object_dispose(&a19, 8);
  _Unwind_Resume(a1);
}

void sub_1A503A028(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A503A2AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A503A46C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A503A54C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1A503A628(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_1A503A6E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1A503A7DC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A503A8A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1A503AA28(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A503ABE0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v6 = v4;

  _Unwind_Resume(a1);
}

id _bodyDataFromData(void *a1, _QWORD *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  uint8_t v13[16];

  v3 = a1;
  v4 = objc_msgSend(v3, "length");
  v5 = objc_msgSend(v3, "mf_rangeOfRFC822HeaderData");
  v7 = v6;
  if (v6 == v4)
  {
    if (v4)
    {
      objc_msgSend(MEMORY[0x1E0C99D50], "data");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      if (a2)
      {
        v9 = objc_retainAutorelease(v3);
LABEL_7:
        *a2 = v9;
      }
    }
    else
    {
      EDLibraryLog();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)v13 = 0;
        _os_log_impl(&dword_1A4F90000, v11, OS_LOG_TYPE_INFO, "Empty message data", v13, 2u);
      }

      v8 = 0;
    }
  }
  else
  {
    v10 = v5;
    objc_msgSend(v3, "mf_subdataWithRange:", v5 + v6, v4 - (v5 + v6));
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    if (a2)
    {
      objc_msgSend(v3, "mf_subdataWithRange:", v10, v7);
      v9 = (id)objc_claimAutoreleasedReturnValue();
      goto LABEL_7;
    }
  }

  return v8;
}

void sub_1A503AD5C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A503AF78(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A503B0E4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A503B280(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  va_list va;

  va_start(va, a7);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A503B330(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A503B4EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  va_list va;

  va_start(va, a8);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A503B6E0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A503B8A8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v6 = v3;

  _Unwind_Resume(a1);
}

void sub_1A503B998(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A503BBF8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

id _dataForMessageAndPart(void *a1, void *a2, void *a3, char a4, uint64_t a5)
{
  id v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  NSObject *v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, void *);
  void *v26;
  id v27;
  id v28;
  id v29;
  uint64_t *v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t);
  void (*v37)(uint64_t);
  id v38;
  uint8_t buf[4];
  uint64_t v40;
  __int16 v41;
  void *v42;
  __int16 v43;
  id v44;
  uint64_t v45;

  v45 = *MEMORY[0x1E0C80C00];
  v9 = a1;
  v10 = a2;
  v11 = a3;
  if (objc_msgSend(v11, "isEqualToString:", CFSTR("summary")))
    __assert_rtn("_dataForMessageAndPart", "MailMessageLibrary.m", 6172, "![part isEqualToString:MFMessagePartNameSummary]");
  v33 = 0;
  v34 = &v33;
  v35 = 0x3032000000;
  v36 = __Block_byref_object_copy__6;
  v37 = __Block_byref_object_dispose__6;
  v38 = 0;
  objc_msgSend(v9, "database");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "_dataForMessageAndPart");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v23 = MEMORY[0x1E0C809B0];
  v24 = 3221225472;
  v25 = ___dataForMessageAndPart_block_invoke;
  v26 = &unk_1E4E8B048;
  v14 = v9;
  v27 = v14;
  v31 = a5;
  v15 = v11;
  v28 = v15;
  v32 = a4;
  v16 = v10;
  v29 = v16;
  v30 = &v33;
  objc_msgSend(v12, "__performReadWithCaller:usingBlock:", v13, &v23);

  v17 = (void *)v34[5];
  if (v17)
  {
    MFLogGeneral();
    v18 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
    {
      v19 = objc_msgSend((id)v34[5], "length", v23, v24, v25, v26, v27, v28);
      objc_msgSend(v16, "ef_publicDescription");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 134218498;
      v40 = v19;
      v41 = 2114;
      v42 = v20;
      v43 = 2114;
      v44 = v15;
      _os_log_impl(&dword_1A4F90000, v18, OS_LOG_TYPE_INFO, "#CacheLoads data from database of length %lu for message %{public}@ part %{public}@", buf, 0x20u);

    }
    v17 = (void *)v34[5];
  }
  v21 = v17;

  _Block_object_dispose(&v33, 8);
  return v21;
}

void sub_1A503BEC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id a24)
{
  void *v24;
  void *v25;
  void *v26;
  void *v27;

  _Block_object_dispose(&a19, 8);
  _Unwind_Resume(a1);
}

void sub_1A503C09C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A503C1B8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A503C444(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A503C6AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7, uint64_t a8, uint64_t a9, ...)
{
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v14;
  va_list va;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v14 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);

  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);

  _Unwind_Resume(a1);
}

void sub_1A503C73C()
{
  void *v0;

  JUMPOUT(0x1A503C718);
}

void sub_1A503C748()
{
  JUMPOUT(0x1A503C718);
}

void sub_1A503C840(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A503CA58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, ...)
{
  void *v9;
  void *v10;
  void *v11;
  uint64_t v13;
  va_list va;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v13 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);

  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);

  _Unwind_Resume(a1);
}

void sub_1A503CC18(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A503CD68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1A503CF84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, void *a17, void *a18)
{
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;

  _Unwind_Resume(a1);
}

void sub_1A503D198(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

uint64_t handleIterativeSearchRow(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;

  v7 = a1;
  v8 = a3;
  v9 = a4;
  v10 = *(id *)(a2 + 72);
  if (v10)
  {
    if (!*(_BYTE *)(a2 + 80))
      __assert_rtn("handleIterativeSearchRow", "MailMessageLibrary.m", 3021, "c->handlerWantsMessageObjects");
    objc_msgSend(*(id *)a2, "_messageForRow:options:timestamp:connection:isProtectedDataAvailable:recipientsCache:", v7, *(unsigned int *)(a2 + 52), *(_QWORD *)(a2 + 32), v8, *(unsigned __int8 *)(a2 + 64), v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "account");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)a2, "urlForMailboxID:", objc_msgSend(v11, "mailboxID"));
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "mailboxUidForURL:", v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v11, "account");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "storeForMailboxUid:", v14);
    v16 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v11, "setMessageStore:", v16);
    v17 = objc_msgSend(v10, "handleMessage:", v11);

  }
  else
  {
    objc_msgSend(*(id *)a2, "_messageForRow:options:timestamp:connection:isProtectedDataAvailable:recipientsCache:", v7, *(unsigned int *)(a2 + 52), *(_QWORD *)(a2 + 32), v8, *(unsigned __int8 *)(a2 + 64), 0);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a2 + 8), "addObject:", v11);
    v17 = 1;
  }

  return v17;
}

void sub_1A503D39C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A503D4B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{

  _Unwind_Resume(a1);
}

void sub_1A503D578(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A503D640(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A503D840(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_1A503D988(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;

  _Unwind_Resume(a1);
}

void sub_1A503DA80(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A503DB14(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A503DC0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

void sub_1A503DD08(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

id POPUIDsForQuery(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  _QWORD v13[4];
  id v14;
  id v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t);
  void (*v21)(uint64_t);
  id v22;

  v5 = a2;
  v6 = a3;
  v17 = 0;
  v18 = &v17;
  v19 = 0x3032000000;
  v20 = __Block_byref_object_copy__6;
  v21 = __Block_byref_object_dispose__6;
  v22 = 0;
  objc_msgSend(a1, "database");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "POPUIDsForQuery");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 3221225472;
  v13[2] = __POPUIDsForQuery_block_invoke;
  v13[3] = &unk_1E4E89F60;
  v9 = v5;
  v14 = v9;
  v10 = v6;
  v15 = v10;
  v16 = &v17;
  objc_msgSend(v7, "__performReadWithCaller:usingBlock:", v8, v13);

  v11 = (id)v18[5];
  _Block_object_dispose(&v17, 8);

  return v11;
}

void sub_1A503DE84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  void *v22;
  void *v23;
  void *v24;
  void *v25;

  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_1A503DFE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  void *v7;
  void *v8;
  va_list va;

  va_start(va, a7);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A503E1A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1A503E288(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A503E2EC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A503E5B4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A503E6BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;
  void *v15;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1A503E744(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A503E78C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A503E8E0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A503EA30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;
  void *v16;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1A503EB24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A503EC68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_1A503EF5C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A503EFE8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A503F0C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_1A503F438(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A503F558(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;
  void *v15;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1A503F5E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A503F640(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A503F688(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A503F744(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A503F86C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A503F914(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A503FA78(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A503FD80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14, uint64_t a15, void *a16, void *a17, void *a18)
{

  _Unwind_Resume(a1);
}

void sub_1A503FEE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1A503FF50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A503FFCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5040088(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1A50400F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50401F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1A50402CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  v12 = v10;

  _Unwind_Resume(a1);
}

void sub_1A504036C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A50403DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50404F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5040578(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5041A2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,void *a24,void *a25,void *a26,uint64_t a27,void *a28,void *a29,void *a30,void *a31,uint64_t a32,void *a33,void *a34,uint64_t a35,void *a36,void *a37,void *a38,void *a39,void *a40,uint64_t a41,void *a42,void *a43,void *a44,void *a45,void *a46,void *a47,void *a48)
{
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  uint64_t v54;

  *(_QWORD *)(v54 - 240) = a1;

  _Unwind_Resume(*(_Unwind_Exception **)(v54 - 240));
}

void sub_1A5042058(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A504221C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;

  _Unwind_Resume(a1);
}

void sub_1A504245C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1A50426EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;

  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_1A5042804(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{

  _Unwind_Resume(a1);
}

void sub_1A5042920(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1A5042C24(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5042DA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_1A5042F80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1A50430C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_1A50431C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_1A504344C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A5043634(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  va_list va;

  va_start(va, a11);

  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 96), 8);

  _Unwind_Resume(a1);
}

void sub_1A504378C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5043830(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50438FC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1A5043B90(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5043CD8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5043DD4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5043F28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A5043FBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1A50440BC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5044518(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,void *a26,void *a27)
{
  void *v27;
  void *v28;
  void *v29;

  _Unwind_Resume(a1);
}

void sub_1A5044684(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A5044774(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5044A3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, void *a18, void *a19)
{
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;

  _Unwind_Resume(a1);
}

void sub_1A5044E78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_1A5045000(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A504513C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A504521C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A504549C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A50456C0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50457A4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5045B20(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5045C0C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5045C90(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5045E0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1A5045ED8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A5045FE0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50460B0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5046A2C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t _shouldStoreInDatabase(void *a1, int a2)
{
  id v3;
  uint64_t v4;

  v3 = a1;
  if (_shouldStoreInDatabase_onceToken != -1)
    dispatch_once(&_shouldStoreInDatabase_onceToken, &__block_literal_global_2189);
  v4 = objc_msgSend((id)_shouldStoreInDatabase_partsAlwaysStoredInDatabase, "containsObject:", v3) | a2;

  return v4;
}

void sub_1A5046D38(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5046FB8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5047178(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50472A0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5047408(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A504753C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A5047670(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5047714(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A50477CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A5047884(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A5047934(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5047A10(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5047A68(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5047ADC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5047B6C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5047BC0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5047C20(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5047C6C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5047CB0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5047D00(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id __readMailboxURLStringsFromDatabase_block_invoke(uint64_t a1, void *a2)
{
  id v2;
  void *v3;

  v2 = a2;
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%lld"), objc_msgSend(v2, "longLongValue"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

void sub_1A5047EC0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t __readMailboxURLStringsFromDatabase_block_invoke_2(uint64_t a1, void *a2)
{
  id v3;
  sqlite3_stmt *v4;
  sqlite3_int64 v5;
  void *v6;
  void *v7;
  void *v8;
  sqlite3_stmt *ppStmt;

  v3 = a2;
  ppStmt = 0;
  sqlite3_prepare_v2((sqlite3 *)objc_msgSend(v3, "sqlDB"), (const char *)objc_msgSend(objc_retainAutorelease(*(id *)(a1 + 32)), "UTF8String"), -1, &ppStmt, 0);
  objc_msgSend(v3, "checkForConnectionErrorWithMessage:", CFSTR("preparing statement for fetching mailbox URLs"));
  v4 = ppStmt;
  if (ppStmt)
  {
    while (sqlite3_step(v4) == 100)
    {
      v5 = sqlite3_column_int64(ppStmt, 0);
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", sqlite3_column_text(ppStmt, 1));
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      v7 = *(void **)(a1 + 40);
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithLongLong:", v5);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "setObject:forKeyedSubscript:", v6, v8);

      v4 = ppStmt;
    }
    objc_msgSend(v3, "checkForConnectionErrorWithMessage:", CFSTR("iterating results for mailbox URLs"));
    sqlite3_finalize(ppStmt);
  }

  return 1;
}

void sub_1A5047FF8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t ___dataForMessageAndPart_block_invoke(uint64_t a1, void *a2)
{
  id v3;
  __CFString *v4;
  uint64_t v5;
  BOOL v6;
  const __CFString *v7;
  const __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  _BOOL4 v18;
  id v19;
  id v21;
  _QWORD v22[4];
  __int128 v23;
  _QWORD v24[3];

  v24[2] = *MEMORY[0x1E0C80C00];
  v3 = a2;
  if (objc_msgSend(*(id *)(a1 + 32), "isProtectedDataAvailable:", v3))
  {
    v4 = CFSTR("part = ? AND complete IS NOT NULL");
    v5 = *(_QWORD *)(a1 + 40);
    v6 = v5 == 0;
    if (!v5)
      v4 = CFSTR("part IS NULL AND complete IS NOT NULL");
    v7 = CFSTR("part = ?");
    if (v6)
      v7 = CFSTR("part IS NULL");
    if (*(_QWORD *)(a1 + 64))
    {
      v4 = (__CFString *)v7;
      v8 = CFSTR("b.data, a.complete");
    }
    else
    {
      v8 = CFSTR("b.data");
    }
    v9 = v4;
    if (!*(_BYTE *)(a1 + 72))
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@ AND partial IS NULL"), v9);
      v10 = objc_claimAutoreleasedReturnValue();

      v9 = (__CFString *)v10;
    }
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("SELECT %@ FROM message_data AS a JOIN protected_message_data AS b ON a.rowid = b.rowid AND a.message_id = ? AND %@"), v8, v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "preparedStatementForQueryString:", v11);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithLongLong:", objc_msgSend(*(id *)(a1 + 48), "libraryID"));
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v24[0] = v13;
    v14 = *(void **)(a1 + 40);
    v15 = v14;
    if (!v14)
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
    }
    v24[1] = v15;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v24, 2);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v21 = 0;
    v22[0] = MEMORY[0x1E0C809B0];
    v22[1] = 3221225472;
    v22[2] = ___dataForMessageAndPart_block_invoke_2;
    v22[3] = &unk_1E4E8A4E8;
    v23 = *(_OWORD *)(a1 + 56);
    v17 = objc_msgSend(v12, "executeWithIndexedBindings:usingBlock:error:", v16, v22, &v21);
    v18 = v14 == 0;
    v19 = v21;

    if (v18)
    if ((v17 & 1) == 0)
      objc_msgSend(v3, "handleError:message:", v19, CFSTR("Fetching data for message part"));

  }
  else
  {
    v17 = 1;
  }

  return v17;
}

void sub_1A5048284(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void ___dataForMessageAndPart_block_invoke_2(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;

  v9 = a2;
  objc_msgSend(v9, "objectAtIndexedSubscript:", 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "dataValue");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = objc_msgSend(objc_alloc(MEMORY[0x1E0D46080]), "initWithData:", v4);
    v6 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
    v7 = *(void **)(v6 + 40);
    *(_QWORD *)(v6 + 40) = v5;

  }
  if (*(_QWORD *)(a1 + 40))
  {
    objc_msgSend(v9, "objectAtIndexedSubscript:", 1);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    **(_BYTE **)(a1 + 40) = objc_msgSend(v8, "BOOLValue");

  }
}

void sub_1A50483A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A5048500(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void ___shouldStoreInDatabase_block_invoke()
{
  uint64_t v0;
  void *v1;
  _QWORD v2[4];

  v2[3] = *MEMORY[0x1E0C80C00];
  v2[0] = CFSTR("meeting");
  v2[1] = CFSTR("meeting data");
  v2[2] = CFSTR("meeting metadata");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v2, 3);
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)_shouldStoreInDatabase_partsAlwaysStoredInDatabase;
  _shouldStoreInDatabase_partsAlwaysStoredInDatabase = v0;

}

void OUTLINED_FUNCTION_6_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0x16u);
}

uint64_t OUTLINED_FUNCTION_7_0(uint64_t result, uint64_t a2, uint64_t a3, float a4)
{
  *(float *)a3 = a4;
  *(_QWORD *)(a3 + 4) = result;
  *(_WORD *)(a3 + 12) = 2114;
  *(_QWORD *)(a3 + 14) = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_10(uint64_t result, uint64_t a2, float a3)
{
  *(float *)result = a3;
  *(_QWORD *)(result + 4) = a2;
  *(_WORD *)(result + 12) = 2048;
  *(_QWORD *)(result + 14) = 0x4066800000000000;
  return result;
}

void OUTLINED_FUNCTION_11(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 2u);
}

uint64_t OUTLINED_FUNCTION_13(uint64_t result, uint64_t a2, uint64_t a3, float a4)
{
  *(float *)a2 = a4;
  *(_QWORD *)(a2 + 4) = a3;
  *(_WORD *)(a2 + 12) = 2112;
  *(_QWORD *)(a2 + 14) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_15(uint64_t result, uint64_t a2, uint64_t a3, float a4)
{
  *(float *)a3 = a4;
  *(_QWORD *)(a3 + 4) = result;
  *(_WORD *)(a3 + 12) = 2112;
  *(_QWORD *)(a3 + 14) = a2;
  return result;
}

void OUTLINED_FUNCTION_16(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 2u);
}

void sub_1A5048760(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A504887C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A50489CC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A5048C0C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A5048DC8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v6 = v3;

  _Unwind_Resume(a1);
}

void sub_1A5048E78(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5048F2C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5049044(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50490F0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5049154(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50491FC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A504949C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A5049744(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  _Unwind_Resume(a1);
}

void sub_1A5049898(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5049940(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t MFCriterionTypeIsDate(unint64_t a1)
{
  return (a1 < 0x31) & (0x1880000001C00uLL >> a1);
}

void sub_1A5049ADC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5049B5C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5049C00(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A504A098(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, void *a12, void *a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;

  _Unwind_Resume(a1);
}

void sub_1A504A200(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A504A5D4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A504A74C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A504AB00(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A504ACF8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A504AFF4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A504B16C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A504B2B0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A504B3C8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A504B47C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A504B7EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, void *a17)
{

  _Unwind_Resume(a1);
}

void sub_1A504BA00(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A504BB60(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A504BCF4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A504BF54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, void *a11, void *a12)
{
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1A504C048(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A504C0C4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A504C3E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1A504C4FC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A504C824(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A504C9E8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A504CAA0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A504CB2C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A504CC4C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A504CEE4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A504D010(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A504D09C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A504D0F4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A504D170(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A504D21C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A504D388(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A504D420(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A504D478(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A504D4D0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A504D588(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A504D624(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A504D69C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A504D6FC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A504D75C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A504D7F0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1A504D8A4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1A504D91C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A504D9B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A504DA48(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A504DB14(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A504DC38(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A504DCEC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A504DD7C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A504DE54(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A504DEFC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A504DF80(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A504DFEC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A504E294(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A504E42C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1A504E4DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  void *v12;

  _Unwind_Resume(a1);
}

id MFDescriptionForMessageFlags(unint64_t a1)
{
  const char *v2;
  void *v3;
  void *v4;

  v2 = "read";
  if ((a1 & 1) == 0)
    v2 = "unread";
  objc_msgSend(MEMORY[0x1E0CB37A0], "stringWithFormat:", CFSTR("0x%llx (%s"), a1, v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3;
  if ((a1 & 0x200000) != 0)
    objc_msgSend(v3, "appendFormat:", CFSTR(", junk"));
  if ((a1 & 0x80000000) != 0)
    objc_msgSend(v4, "appendFormat:", CFSTR(", not-junk"));
  if ((a1 & 2) != 0)
    objc_msgSend(v4, "appendFormat:", CFSTR(", deleted"));
  if ((a1 & 4) != 0)
    objc_msgSend(v4, "appendFormat:", CFSTR(", answered"));
  if ((a1 & 0x100) != 0)
    objc_msgSend(v4, "appendFormat:", CFSTR(", forwarded"));
  if ((a1 & 0x200) != 0)
    objc_msgSend(v4, "appendFormat:", CFSTR(", redirected"));
  if ((a1 & 0x10) != 0)
  {
    objc_msgSend(v4, "appendFormat:", CFSTR(", flagged"));
    objc_msgSend(v4, "appendFormat:", CFSTR(", flagColor=%lu"), (a1 >> 41) & 7);
  }
  if ((a1 & 0x1000000) != 0)
    objc_msgSend(v4, "appendFormat:", CFSTR(", VIP"));
  if ((a1 & 8) != 0)
    objc_msgSend(v4, "appendFormat:", CFSTR(", encrypted"));
  if ((a1 & 0x800000) != 0)
    objc_msgSend(v4, "appendFormat:", CFSTR(", signed"));
  if ((a1 & 0x20) != 0)
    objc_msgSend(v4, "appendFormat:", CFSTR(", recent"));
  if ((a1 & 0x40) != 0)
    objc_msgSend(v4, "appendFormat:", CFSTR(", draft"));
  if ((a1 & 0x80) != 0)
    objc_msgSend(v4, "appendFormat:", CFSTR(", server search result"));
  if ((a1 & 0x100000) != 0)
    objc_msgSend(v4, "appendFormat:", CFSTR(", thread search result"));
  if ((WORD1(a1) & 7) != 3)
    objc_msgSend(v4, "appendFormat:", CFSTR(", priority=%x"), WORD1(a1) & 7);
  if ((a1 & 0x400000000) != 0)
    objc_msgSend(v4, "appendFormat:", CFSTR(", partial"));
  if ((a1 & 0x2000000000) != 0)
    objc_msgSend(v4, "appendFormat:", CFSTR(", delivery"));
  if ((a1 & 0x100000000) != 0)
    objc_msgSend(v4, "appendFormat:", CFSTR(", temp UID"));
  objc_msgSend(v4, "appendFormat:", CFSTR(")"));
  return v4;
}

void sub_1A504E6F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t _junkLevelForFlags(unint64_t a1)
{
  if ((a1 & 0x200000) != 0)
    return 1;
  else
    return (a1 >> 30) & 2;
}

id MFFlagsObjectForFlags(uint64_t a1)
{
  id v2;
  _QWORD v4[5];

  v2 = objc_alloc(MEMORY[0x1E0D1E780]);
  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = __MFFlagsObjectForFlags_block_invoke;
  v4[3] = &__block_descriptor_40_e33_v16__0___ECMessageFlagsBuilder__8l;
  v4[4] = a1;
  return (id)objc_msgSend(v2, "initWithBuilder:", v4);
}

void sub_1A504E844(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

uint64_t MFMessageFlagsForECMessageFlags(void *a1)
{
  id v1;
  unsigned int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = a1;
  v2 = objc_msgSend(v1, "read");
  v3 = objc_msgSend(v1, "deleted");
  v4 = objc_msgSend(v1, "replied");
  v5 = objc_msgSend(v1, "flagged");
  v6 = v2;
  if (v3)
    v6 = v2 | 2;
  if (v4)
    v6 |= 4uLL;
  if (v5)
    v7 = v6 | 0x10;
  else
    v7 = v6;
  if (objc_msgSend(v1, "flagColor"))
    v7 = v7 & 0xFFFFF1FFFFFFFFFFLL | ((objc_msgSend(v1, "flagColor") & 7) << 41);
  v8 = objc_msgSend(v1, "draft");
  v9 = objc_msgSend(v1, "forwarded");
  v10 = objc_msgSend(v1, "redirected");
  v11 = objc_msgSend(v1, "junkLevel");
  v12 = objc_msgSend(v1, "junkLevel");
  v13 = v7 | 0x40;
  if (!v8)
    v13 = v7;
  if (v9)
    v13 |= 0x100uLL;
  if (v10)
    v13 |= 0x200uLL;
  if (v11 == 1)
    v13 |= 0x200000uLL;
  if (v12 == 2)
    v14 = v13 | 0x80000000;
  else
    v14 = v13;

  return v14;
}

void sub_1A504E96C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id MFFlagChangeObjectForFlagChangeDictionary(void *a1)
{
  id v1;
  id v2;
  id v3;
  void *v4;
  _QWORD v6[4];
  id v7;

  v1 = a1;
  v2 = objc_alloc(MEMORY[0x1E0D1E778]);
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __MFFlagChangeObjectForFlagChangeDictionary_block_invoke;
  v6[3] = &unk_1E4E8B500;
  v3 = v1;
  v7 = v3;
  v4 = (void *)objc_msgSend(v2, "initWithBuilder:", v6);

  return v4;
}

void sub_1A504EA14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1A504EAD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, ...)
{
  void *v7;
  va_list va;

  va_start(va, a7);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A504ED38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

id MFFlagChangeDictionaryForFlagChange(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;

  v1 = a1;
  v2 = (void *)objc_opt_new();
  if (objc_msgSend(v1, "readChanged"))
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", objc_msgSend(v1, "read"));
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "setObject:forKeyedSubscript:", v3, CFSTR("MessageIsRead"));

  }
  if (objc_msgSend(v1, "deletedChanged"))
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", objc_msgSend(v1, "deleted"));
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "setObject:forKeyedSubscript:", v4, CFSTR("MessageIsDeleted"));

  }
  if (objc_msgSend(v1, "repliedChanged"))
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", objc_msgSend(v1, "replied"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "setObject:forKeyedSubscript:", v5, CFSTR("MessageWasRepliedTo"));

  }
  if (objc_msgSend(v1, "flaggedChanged"))
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", objc_msgSend(v1, "flagged"));
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "setObject:forKeyedSubscript:", v6, CFSTR("MessageIsFlagged"));

  }
  if (objc_msgSend(v1, "flagColorChanged"))
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", objc_msgSend(v1, "flagColor"));
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "setObject:forKeyedSubscript:", v7, CFSTR("MessageFlagColor"));

  }
  if (objc_msgSend(v1, "forwardedChanged"))
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", objc_msgSend(v1, "forwarded"));
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "setObject:forKeyedSubscript:", v8, CFSTR("MessageWasForwarded"));

  }
  if (objc_msgSend(v1, "redirectedChanged"))
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", objc_msgSend(v1, "redirected"));
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "setObject:forKeyedSubscript:", v9, CFSTR("MessageWasRedirected"));

  }
  if (objc_msgSend(v1, "junkLevelChanged"))
  {
    v10 = objc_msgSend(v1, "junkLevel");
    if (v10 == 2)
    {
      objc_msgSend(v2, "setObject:forKeyedSubscript:", MEMORY[0x1E0C9AAA0], CFSTR("MessageIsJunk"));
      v12 = MEMORY[0x1E0C9AAB0];
    }
    else
    {
      if (v10 == 1)
        v11 = MEMORY[0x1E0C9AAB0];
      else
        v11 = MEMORY[0x1E0C9AAA0];
      objc_msgSend(v2, "setObject:forKeyedSubscript:", v11, CFSTR("MessageIsJunk"));
      v12 = MEMORY[0x1E0C9AAA0];
    }
    objc_msgSend(v2, "setObject:forKeyedSubscript:", v12, CFSTR("MessageIsNotJunk"));
  }
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v1, "reason"));
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v13, CFSTR("MessageChangeReason"));

  return v2;
}

void sub_1A504F02C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

id MFFlagChangeDictionaryStrippingServerFlags(void *a1)
{
  void *v1;
  void *v2;
  _QWORD v4[10];

  v4[9] = *MEMORY[0x1E0C80C00];
  v1 = (void *)objc_msgSend(a1, "mutableCopy");
  v4[0] = CFSTR("MessageIsRead");
  v4[1] = CFSTR("MessageIsDeleted");
  v4[2] = CFSTR("MessageWasRepliedTo");
  v4[3] = CFSTR("MessageIsFlagged");
  v4[4] = CFSTR("MessageFlagColor");
  v4[5] = CFSTR("MessageWasForwarded");
  v4[6] = CFSTR("MessageWasRedirected");
  v4[7] = CFSTR("MessageIsJunk");
  v4[8] = CFSTR("MessageIsNotJunk");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v4, 9);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "removeObjectsForKeys:", v2);

  return v1;
}

void sub_1A504F158(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

void MFGetFlagsAndMaskForFlagChange(void *a1, uint64_t *a2, uint64_t *a3)
{
  unsigned int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unsigned int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  int v24;
  id v27;

  v27 = a1;
  v3 = objc_msgSend(v27, "read");
  v4 = objc_msgSend(v27, "deleted");
  v5 = objc_msgSend(v27, "replied");
  v6 = objc_msgSend(v27, "flagged");
  v7 = v3;
  if (v4)
    v7 = v3 | 2;
  if (v5)
    v7 |= 4uLL;
  if (v6)
    v8 = v7 | 0x10;
  else
    v8 = v7;
  if (objc_msgSend(v27, "flagColor"))
    v8 = v8 & 0xFFFFF1FFFFFFFFFFLL | ((objc_msgSend(v27, "flagColor") & 7) << 41);
  v24 = objc_msgSend(v27, "draft");
  v23 = objc_msgSend(v27, "forwarded");
  v22 = objc_msgSend(v27, "redirected");
  v21 = objc_msgSend(v27, "junkLevel");
  v9 = objc_msgSend(v27, "junkLevel");
  v10 = objc_msgSend(v27, "readChanged");
  v11 = objc_msgSend(v27, "deletedChanged");
  v12 = objc_msgSend(v27, "repliedChanged");
  v13 = objc_msgSend(v27, "flaggedChanged");
  v14 = objc_msgSend(v27, "flagColorChanged");
  v15 = objc_msgSend(v27, "draftChanged");
  v16 = objc_msgSend(v27, "forwardedChanged");
  v17 = objc_msgSend(v27, "redirectedChanged");
  v18 = objc_msgSend(v27, "junkLevelChanged");
  v19 = v10;
  if (v11)
    v19 = v10 | 2;
  if (v12)
    v19 |= 4uLL;
  if (v13)
    v19 |= 0x10uLL;
  if (v14)
    v19 |= 0xE0000000000uLL;
  if (v15)
    v19 |= 0x40uLL;
  if (v16)
    v19 |= 0x100uLL;
  if (v17)
    v19 |= 0x200uLL;
  v20 = v8 | 0x40;
  if (!v24)
    v20 = v8;
  if (v23)
    v20 |= 0x100uLL;
  if (v22)
    v20 |= 0x200uLL;
  if (v21 == 1)
    v20 |= 0x200000uLL;
  if (v9 == 2)
    v20 |= 0x80000000uLL;
  if (v18)
    v19 |= 0x80200000uLL;
  *a2 = v20;
  *a3 = v19;

}

void sub_1A504F3A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id a14)
{

  _Unwind_Resume(a1);
}

id MFMailDirectoryURL()
{
  if (MFMailDirectoryURL_onceToken != -1)
    dispatch_once(&MFMailDirectoryURL_onceToken, &__block_literal_global_17);
  return (id)MFMailDirectoryURL___MailDirURL;
}

void sub_1A504F454(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

uint64_t MFReadLoggingDefaults()
{
  void *v0;

  objc_msgSend(MEMORY[0x1E0C99EA0], "standardUserDefaults");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "synchronize");

  return +[MFConnection readLoggingDefaults](MFConnection, "readLoggingDefaults");
}

void sub_1A504F4A4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A504F504(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A504F66C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A504F8C4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t (*MFComparatorFunctionForSortOrder(void *a1))()
{
  id v1;
  uint64_t v2;
  uint64_t (*v3)(void *, void *, unsigned __int8 *);
  __CFString *v4;
  uint64_t (*v5)();

  v1 = a1;
  v2 = 0;
  v3 = _compareMsgsByReadStatus;
  v4 = CFSTR("readstatus");
  while ((-[__CFString isEqualToString:](v4, "isEqualToString:", v1) & 1) == 0)
  {
    if (v2 == 64)
    {
      v3 = 0;
      break;
    }
    v4 = *(__CFString **)((char *)&comparators + v2 + 16);
    v3 = *(uint64_t (**)(void *, void *, unsigned __int8 *))((char *)&comparators + v2 + 24);
    v2 += 16;
  }
  if (v3)
    v5 = (uint64_t (*)())v3;
  else
    v5 = _compareMsgsByDateReceived;

  return v5;
}

void sub_1A504F9F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t _compareMsgsByReadStatus(void *a1, void *a2, unsigned __int8 *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  BOOL v11;
  uint64_t v12;
  char v13;
  char v14;
  __int16 v16;
  __int16 v17;
  __int16 v18;
  __int16 v19;

  v5 = a1;
  v6 = a2;
  v7 = objc_msgSend(v5, "messageFlags");
  v8 = objc_msgSend(v6, "messageFlags");
  if (v7 == v8)
    goto LABEL_2;
  v10 = *a3;
  if ((v7 & 1) != 0 && (v8 & 1) == 0)
    goto LABEL_5;
  if ((v8 & 1) != 0 && (v7 & 1) == 0
    || (v13 = objc_msgSend(v5, "messageFlags"), v14 = objc_msgSend(v6, "messageFlags"), (v13 & 4) != 0)
    && (v14 & 4) == 0)
  {
LABEL_10:
    v11 = v10 == 0;
    v12 = -1;
LABEL_11:
    if (v11)
      v9 = v12;
    else
      v9 = -v12;
    goto LABEL_14;
  }
  if ((v14 & 4) != 0 && (v13 & 4) == 0)
    goto LABEL_5;
  if ((v13 & 4) != 0)
  {
LABEL_2:
    v9 = _compareMsgsByDate(v5, v6, a3);
    goto LABEL_14;
  }
  v16 = objc_msgSend(v5, "messageFlags");
  v17 = objc_msgSend(v6, "messageFlags");
  if ((v16 & 0x100) != 0 && (v17 & 0x100) == 0)
    goto LABEL_10;
  if ((v17 & 0x100) != 0 && (v16 & 0x100) == 0)
  {
LABEL_5:
    v11 = v10 == 0;
    v12 = 1;
    goto LABEL_11;
  }
  if ((v16 & 0x100) != 0)
    goto LABEL_2;
  v18 = objc_msgSend(v5, "messageFlags");
  v19 = objc_msgSend(v6, "messageFlags");
  if ((v18 & 0x200) != 0 && (v19 & 0x200) == 0)
    goto LABEL_10;
  if ((v19 & 0x200) == 0)
    goto LABEL_2;
  v9 = v10 ? -1 : 1;
  if ((v18 & 0x200) != 0)
    goto LABEL_2;
LABEL_14:

  return v9;
}

void sub_1A504FB30(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t _compareMsgsBySender(void *a1, void *a2, unsigned __int8 *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  int v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  BOOL v18;

  v5 = a1;
  v6 = a2;
  objc_msgSend(v5, "senderAddressComment");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "senderAddressComment");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if (v7 == v8)
    goto LABEL_25;
  v9 = *a3;
  v10 = v7;
  v11 = v8;
  v12 = v11;
  if (v10 && v11)
  {
    if (v9)
    {
      v11 = v10;
      v13 = v12;
    }
    else
    {
      v13 = v10;
    }
    v14 = objc_msgSend(v11, "localizedCaseInsensitiveCompare:", v13);
  }
  else
  {
    v15 = 1;
    if (v9)
      v15 = -1;
    v16 = -1;
    if (v9)
      v16 = 1;
    if (v11)
      v17 = 1;
    else
      v17 = v10 == 0;
    if (v17)
      v16 = 0;
    v18 = v10 || v11 == 0;
    v14 = v18 ? v16 : v15;
  }

  if (!v14)
LABEL_25:
    v14 = _compareMsgsByDate(v5, v6, a3);

  return v14;
}

void sub_1A504FC6C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

uint64_t _compareMsgsByFlags(void *a1, void *a2, unsigned __int8 *a3)
{
  id v5;
  id v6;
  char v7;
  char v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;

  v5 = a1;
  v6 = a2;
  v7 = objc_msgSend(v5, "messageFlags");
  v8 = objc_msgSend(v6, "messageFlags");
  v9 = *a3;
  if ((v7 & 0x10) != 0 || (v8 & 0x10) == 0)
  {
    if ((v8 & 0x10) != 0 || (!*a3 ? (v10 = -1) : (v10 = 1), (v7 & 0x10) == 0))
    {
      v11 = objc_msgSend(v5, "priority");
      v12 = objc_msgSend(v6, "priority");
      v13 = 1;
      if (v9)
        v13 = -1;
      v14 = -1;
      if (v9)
        v14 = 1;
      if (v12 <= v11)
        v14 = 0;
      if (v12 >= v11)
        v10 = v14;
      else
        v10 = v13;
      if (!v10)
        v10 = _compareMsgsByDate(v5, v6, a3);
    }
  }
  else if (*a3)
  {
    v10 = -1;
  }
  else
  {
    v10 = 1;
  }

  return v10;
}

void sub_1A504FD84(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t _compareMsgsByDate(void *a1, void *a2, unsigned __int8 *a3)
{
  id v5;
  id v6;
  int v7;
  double v8;
  double v9;
  double v10;
  double v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = a1;
  v6 = a2;
  v7 = *a3;
  if (a3[1])
  {
    objc_msgSend(v5, "dateReceivedAsTimeIntervalSince1970");
    v9 = v8;
    objc_msgSend(v6, "dateReceivedAsTimeIntervalSince1970");
  }
  else
  {
    objc_msgSend(v5, "dateSentAsTimeIntervalSince1970");
    v9 = v11;
    objc_msgSend(v6, "dateSentAsTimeIntervalSince1970");
  }
  if (v9 < v10)
    goto LABEL_5;
  if (v9 > v10)
  {
    v12 = v7 == 0;
    v13 = -1;
LABEL_8:
    if (v12)
      v14 = v13;
    else
      v14 = -v13;
    goto LABEL_11;
  }
  if ((objc_opt_respondsToSelector() & 1) == 0 || (objc_opt_respondsToSelector() & 1) == 0)
  {
    v14 = 0;
    goto LABEL_11;
  }
  v16 = objc_msgSend(v5, "libraryID");
  v17 = objc_msgSend(v6, "libraryID");
  if (v16 < v17)
  {
LABEL_5:
    v12 = v7 == 0;
    v13 = 1;
    goto LABEL_8;
  }
  v18 = -1;
  if (v7)
    v18 = 1;
  if (v16 <= v17)
    v14 = 0;
  else
    v14 = v18;
LABEL_11:

  return v14;
}

void sub_1A504FEB4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

id _ef_log_MFMessageWriter()
{
  if (_ef_log_MFMessageWriter_onceToken != -1)
    dispatch_once(&_ef_log_MFMessageWriter_onceToken, &__block_literal_global_18);
  return (id)_ef_log_MFMessageWriter_log;
}

void sub_1A504FFE8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5050124(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  v14 = v13;

  _Unwind_Resume(a1);
}

void _appendPartHeadersToConsumer(void *a1, void *a2, const __CFDictionary *a3, void *a4)
{
  id v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;

  v16 = a1;
  v7 = a2;
  v8 = a4;
  v9 = (void *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D46110]), "init");
  CFDictionaryGetValue(a3, v7);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "type");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(CFSTR("multipart"), "isEqualToString:", v11) & 1) != 0 || objc_msgSend(v10, "length"))
    goto LABEL_3;
  objc_msgSend(v7, "range");
  v14 = v13;

  if (v14)
  {
    objc_msgSend(v7, "range");
    if (v15 != 0x7FFFFFFFFFFFFFFFLL)
    {
      objc_msgSend(v7, "range");
      EFStringWithUnsignedInteger();
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "setHeader:forKey:", v11, CFSTR("x-apple-content-length"));
LABEL_3:

      goto LABEL_4;
    }
    objc_msgSend(v9, "setHeader:forKey:", CFSTR("unknown"), CFSTR("x-apple-content-length"));
  }
LABEL_4:
  appendHeadersToMessageHeaders(v16, v7, v9);
  objc_msgSend(v9, "encodedHeaders");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v12, "length"))
    MFDataConsumerConsumeCompleteData();

}

void sub_1A50502D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void _appendPartDataToConsumer(void *a1, void *a2, void *a3, const __CFDictionary *a4, uint64_t a5)
{
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  int v14;
  void *v15;
  id v16;
  int v17;
  void *v18;
  int v19;
  const char *v20;
  char v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  void *v27;
  _BOOL4 v28;
  void *v29;
  id v30;
  void *v31;
  uint64_t v32;
  void *v33;
  size_t v34;
  const char *v35;
  id v36;
  id v37;

  v36 = a1;
  v9 = a2;
  v37 = a3;
  CFDictionaryGetValue(a4, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v11 = v10;

    CFDictionaryGetValue(a4, v11);
    v12 = objc_claimAutoreleasedReturnValue();

    v9 = v11;
    v10 = (void *)v12;
  }
  if (v10 && objc_msgSend(v10, "length"))
  {
    objc_msgSend(v9, "contentTransferEncoding");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = objc_msgSend(v13, "isEqualToString:", CFSTR("base64"));

    if (v14)
    {
      v15 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D46050]), "initWithConsumer:", v37);
      objc_msgSend(v15, "setStandardLineBreak");
      objc_msgSend(v15, "setAllowSlash:", 1);
      objc_msgSend(v15, "setPadChar:", 61);
      MFDataConsumerConsumeCompleteData();
      objc_msgSend(v15, "done");

    }
    else
    {
      MFDataConsumerConsumeCompleteData();
    }
  }
  objc_msgSend(v9, "type");
  v16 = (id)objc_claimAutoreleasedReturnValue();
  v17 = objc_msgSend(CFSTR("multipart"), "isEqualToString:", v16);

  objc_msgSend(v9, "firstChildPart");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  if (v18)
    v19 = 1;
  else
    v19 = v17;
  if (v19 == 1)
  {
    v33 = v9;
    v31 = v10;
    if (v17
      && (objc_msgSend(v9, "bodyParameterForKey:", CFSTR("boundary")),
          v16 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue()),
          v20 = (const char *)objc_msgSend(v16, "ef_lossyDefaultCStringBytes"),
          v16,
          v20))
    {
      v35 = v20;
      v34 = strlen(v20);
      v21 = 0;
    }
    else
    {
      v34 = 0;
      v35 = 0;
      v21 = 1;
    }
    v32 = *MEMORY[0x1E0D45F28];
    while (1)
    {
      if (!v18)
      {
        v9 = v33;
        v10 = v31;
        if ((v21 & 1) == 0)
        {
          v30 = objc_alloc_init(MEMORY[0x1E0D46100]);
          objc_msgSend(v30, "mf_appendCString:", "\n--");
          objc_msgSend(v30, "appendBytes:length:", v35, v34);
          objc_msgSend(v30, "mf_appendCString:", "--\n");
          MFDataConsumerConsumeCompleteData();

        }
        break;
      }
      v22 = (void *)MEMORY[0x1A85B0E24]();
      CFDictionaryGetValue(a4, v18);
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      if (!v23 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
      {
        v24 = v18;

        v23 = v24;
      }
      if ((a5 & 1) == 0)
      {
        if (v17
          && (objc_msgSend(v33, "subtype"),
              v16 = (id)objc_claimAutoreleasedReturnValue(),
              objc_msgSend(CFSTR("signed"), "isEqualToString:", v16)))
        {

        }
        else
        {
          objc_msgSend(v23, "type");
          v27 = (void *)objc_claimAutoreleasedReturnValue();
          if ((objc_msgSend(v27, "isEqual:", CFSTR("multipart")) & 1) != 0
            || objc_msgSend((id)CFDictionaryGetValue(a4, v23), "length"))
          {
            v28 = 1;
          }
          else
          {
            objc_msgSend(v23, "bodyParameterForKey:", v32);
            v29 = (void *)objc_claimAutoreleasedReturnValue();
            v28 = v29 != 0;

          }
          if (v17)
          {

            if (!v28)
              goto LABEL_25;
          }
          else if (!v28)
          {
            goto LABEL_25;
          }
        }
      }
      if ((v21 & 1) == 0)
      {
        v25 = objc_alloc_init(MEMORY[0x1E0D46100]);
        objc_msgSend(v25, "mf_appendCString:", "\n--");
        objc_msgSend(v25, "appendBytes:length:", v35, v34);
        objc_msgSend(v25, "appendBytes:length:", "\n", 1);
        MFDataConsumerConsumeCompleteData();
        _appendPartHeadersToConsumer(v36, v23, a4, v37);

      }
      _appendPartDataToConsumer(v36, v23, v37, a4, a5);
LABEL_25:
      if ((v21 & 1) != 0)
      {
        v26 = 0;
      }
      else
      {
        objc_msgSend(v18, "nextSiblingPart");
        v26 = objc_claimAutoreleasedReturnValue();
      }

      objc_autoreleasePoolPop(v22);
      v18 = (void *)v26;
    }
  }

}

void sub_1A5050738(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, id a15, void *a16)
{

  _Unwind_Resume(a1);
}

void sub_1A50508F0(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9)
{
  void *v9;
  void *v10;
  void *v11;
  id v14;
  NSObject *v15;
  void *v16;

  if (a2 == 1)
  {
    v14 = objc_begin_catch(a1);
    _ef_log_MFMessageWriter();
    v15 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v14, "reason");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(a9) = 138412290;
      *(_QWORD *)((char *)&a9 + 4) = v16;
      _os_log_impl(&dword_1A4F90000, v15, OS_LOG_TYPE_DEFAULT, "Exception raised during message encoding: %@", (uint8_t *)&a9, 0xCu);

    }
    objc_end_catch();
    JUMPOUT(0x1A50508A8);
  }

  _Unwind_Resume(a1);
}

id _createPartAndDataForString(void *a1, void *a2, void *a3, void *a4, __CFDictionary *a5)
{
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  int v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  char v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;

  v9 = a1;
  v10 = a2;
  v11 = a3;
  v12 = a4;
  v13 = v12;
  if (v10)
  {
    v14 = objc_msgSend(v12, "isEqualToString:", CFSTR("html"));
    if (v14)
    {
      _stringByReplacingNonBreakingSpacesWithString(v10, CFSTR("&nbsp;"));
      v15 = objc_claimAutoreleasedReturnValue();

      v10 = (id)v15;
    }
    if (v11)
    {
      objc_msgSend(v11, "cfStringEncoding");
      v16 = (void *)MFCreateDataWithString();
    }
    else
    {
      v16 = 0;
    }
    if (v16)
      v19 = 1;
    else
      v19 = v14;
    v20 = v11;
    if ((v19 & 1) == 0)
    {
      objc_msgSend(MEMORY[0x1E0D460E8], "charsetForEncoding:", 1536);
      v21 = objc_claimAutoreleasedReturnValue();

      objc_msgSend(v11, "cfStringEncoding");
      v16 = (void *)MFCreateDataWithString();
      v20 = (void *)v21;
    }
    if (v16)
      goto LABEL_19;
    if ((v14 & 1) == 0)
    {
      _stringByReplacingNonBreakingSpacesWithString(v10, CFSTR(" "));
      v22 = objc_claimAutoreleasedReturnValue();

      v10 = (id)v22;
    }
    objc_msgSend(v10, "mf_bestMimeCharsetForMessageDeliveryUsingSubtype:", v13);
    v17 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v11, "cfStringEncoding");
    v16 = (void *)MFCreateDataWithString();
    if (v16)
    {
      v20 = v17;
LABEL_19:
      v18 = objc_alloc_init(MEMORY[0x1E0D460F0]);
      objc_msgSend(v18, "setType:", CFSTR("text"));
      objc_msgSend(v18, "setSubtype:", v13);
      objc_msgSend(v20, "charsetName");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v18, "setBodyParameter:forKey:", v23, CFSTR("charset"));

      CFDictionarySetValue(a5, v18, v16);
      v17 = v20;
      goto LABEL_20;
    }
  }
  else
  {
    v17 = 0;
    v16 = 0;
  }
  v18 = 0;
LABEL_20:
  v24 = v18;

  return v24;
}

void sub_1A5050C2C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  _Unwind_Resume(a1);
}

NSObject *_createOutgoingMessageFromTopLevelMimePart(void *a1, void *a2, void *a3, __CFDictionary *a4)
{
  id *v6;
  NSObject *v7;
  id v8;
  void *v9;
  NSObject *v10;
  void *v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  int v18;
  void *v19;
  int v20;
  void *v21;
  uint64_t v22;
  void *v23;
  NSObject *v24;
  void *v25;
  void *v26;
  NSObject *v27;
  char v28;
  NSObject *v29;
  void *v30;
  NSObject *v31;
  NSObject *v32;
  NSObject *v33;
  void *v34;
  NSObject *v35;
  NSObject *v36;
  NSObject *v37;
  id v38;
  NSObject *v39;
  id v40;
  NSObject *v41;
  void *v42;
  NSObject *v43;
  void *v44;
  NSObject *v45;
  NSObject *v46;
  NSObject *v47;
  void *v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  void *v53;
  void *v54;
  void *v55;
  __CFString *v56;
  __CFString *v57;
  __CFString *v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  void *v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  id v72;
  void *v73;
  void *v74;
  NSObject *v75;
  NSObject *v76;
  NSObject *v77;
  void *v78;
  void *v79;
  __CFString *v80;
  id v82;
  id v83;
  id v84;
  uint8_t buf[16];

  v6 = a1;
  v7 = a2;
  v8 = a3;
  v9 = v8;
  if (v8)
    v82 = v8;
  else
    v82 = objc_alloc_init(MEMORY[0x1E0D46110]);
  _makeOutgoingMessageBody(v6);
  v78 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v78, "message");
  v10 = objc_claimAutoreleasedReturnValue();
  +[MFActivityMonitor currentMonitor](MFActivityMonitor, "currentMonitor");
  v79 = (void *)objc_claimAutoreleasedReturnValue();
  -[NSObject setMessageFlags:](v10, "setMessageFlags:", 1);
  -[NSObject setMutableHeaders:](v10, "setMutableHeaders:", v82);
  v11 = (void *)objc_msgSend(v9, "copyAddressListForResentFrom");
  if (!objc_msgSend(v11, "count"))
  {
    v12 = objc_msgSend(v9, "copyAddressListForSender");

    v11 = (void *)v12;
  }
  if (objc_msgSend(v11, "count"))
  {
    objc_msgSend(v11, "objectAtIndex:", 0);
    v13 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "emailAddressValue");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "simpleAddress");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = v15;
    if (v15)
    {
      v80 = v15;
    }
    else
    {
      objc_msgSend(v13, "stringValue");
      v80 = (__CFString *)objc_claimAutoreleasedReturnValue();
    }

  }
  else
  {
    v80 = &stru_1E4F1C8F8;
  }
  objc_msgSend(v6[4], "objectForKey:", CFSTR("ShouldSign"));
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v18 = objc_msgSend(v17, "intValue");

  objc_msgSend(v6[4], "objectForKey:", CFSTR("ShouldEncrypt"));
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v20 = objc_msgSend(v19, "intValue");

  if (!v20 || !_os_feature_enabled_impl())
  {
LABEL_28:
    if (!v9)
      goto LABEL_38;
    goto LABEL_29;
  }
  objc_msgSend(v6[4], "objectForKey:", CFSTR("AddressMetadata"));
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(MEMORY[0x1E0D1E1A8], "preferenceEnabled:", 35) & 1) != 0)
  {

LABEL_16:
    v22 = *MEMORY[0x1E0D1E5F8];
    objc_msgSend(v9, "firstHeaderForKey:", *MEMORY[0x1E0D1E5F8]);
    v74 = (void *)objc_claimAutoreleasedReturnValue();
    v72 = objc_alloc_init(MEMORY[0x1E0D46110]);
    objc_msgSend(v72, "setHeader:forKey:", v74, v22);
    v73 = (void *)objc_msgSend(v6, "_newDataForMimePart:withPartData:andHeaders:", v7, a4, v72);
    objc_msgSend(v6, "_mimePartWithType:subtype:bodyData:partMap:subparts:", CFSTR("message"), CFSTR("rfc822"));
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v23, "setDisposition:", CFSTR("attachment"));
    objc_msgSend(v23, "setDispositionParameter:forKey:", CFSTR("message.eml"), CFSTR("filename"));
    if (v73 && v23)
    {
      v24 = v23;

      v75 = v24;
      objc_msgSend(MEMORY[0x1E0CB34D0], "mainBundle");
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v25, "localizedStringForKey:value:table:", CFSTR("ENCRYPTED_SUBJECT_LINE_MESSAGE"), &stru_1E4F1C8F8, CFSTR("Main"));
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "setHeader:forKey:", v26, v22);

      _ef_log_MFMessageWriter();
      v27 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A4F90000, v27, OS_LOG_TYPE_DEFAULT, "Wrapped message as message/rfc822", buf, 2u);
      }
      v7 = v75;
    }
    else
    {
      _ef_log_MFMessageWriter();
      v29 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
        _createOutgoingMessageFromTopLevelMimePart_cold_5();

      v27 = v10;
      v10 = 0;
    }

    goto LABEL_28;
  }
  if (objc_msgSend(MEMORY[0x1E0D1E1A8], "preferenceEnabled:", 29))
  {
    v28 = objc_msgSend(v21, "ef_all:", &__block_literal_global_290);

    if ((v28 & 1) == 0)
      goto LABEL_28;
    goto LABEL_16;
  }

  if (!v9)
    goto LABEL_38;
LABEL_29:
  if (v10 && v18)
  {
    v30 = (void *)objc_msgSend(v6, "newDataForMimePart:withPartData:", v7, a4);
    if (v30 && (objc_msgSend(v79, "shouldCancel") & 1) == 0)
    {
      v38 = v6[4];
      v84 = 0;
      v76 = v7;
      v31 = -[NSObject newSignedPartWithData:sender:compositionSpecification:signatureData:](v7, "newSignedPartWithData:sender:compositionSpecification:signatureData:", v30, v80, v38, &v84);
      v33 = v84;
      if (objc_msgSend(MEMORY[0x1E0D1E1A8], "preferenceEnabled:", 28)
        && objc_msgSend(MEMORY[0x1E0D1E1A8], "preferenceEnabled:", 30))
      {
        if (v33 && v31)
          CFDictionarySetValue(a4, v31, v33);
        _ef_log_MFMessageWriter();
        v39 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_1A4F90000, v39, OS_LOG_TYPE_DEFAULT, "Signed message as application/pkcs7-mime", buf, 2u);
        }
      }
      else
      {
        -[NSObject firstChildPart](v31, "firstChildPart");
        v44 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v44, "nextSiblingPart");
        v39 = objc_claimAutoreleasedReturnValue();

        if (v33 && v39)
          CFDictionarySetValue(a4, v39, v33);
        _ef_log_MFMessageWriter();
        v45 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v45, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_1A4F90000, v45, OS_LOG_TYPE_DEFAULT, "Signed message as multipart/signed", buf, 2u);
        }

      }
      if (v31)
        goto LABEL_37;
      _ef_log_MFMessageWriter();
      v46 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR))
        _createOutgoingMessageFromTopLevelMimePart_cold_4();

      v32 = v10;
    }
    else
    {
      v31 = v7;
      _ef_log_MFMessageWriter();
      v32 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR))
        _createOutgoingMessageFromTopLevelMimePart_cold_3();
      v33 = v10;
    }

    v10 = 0;
LABEL_37:

    v7 = v31;
  }
LABEL_38:
  if (v10 && v20)
  {
    v34 = (void *)objc_msgSend(v6, "newDataForMimePart:withPartData:", v7, a4);
    if (v34 && (objc_msgSend(v79, "shouldCancel") & 1) == 0)
    {
      v40 = v6[4];
      v83 = 0;
      v41 = v7;
      v42 = (void *)-[NSObject newEncryptedPartWithData:compositionSpecification:encryptedData:](v7, "newEncryptedPartWithData:compositionSpecification:encryptedData:", v34, v40, &v83);
      v37 = v83;
      v36 = v42;

      if (v37 && v36)
      {
        CFDictionarySetValue(a4, v36, v37);
        _ef_log_MFMessageWriter();
        v43 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_1A4F90000, v43, OS_LOG_TYPE_DEFAULT, "Encrypted message as application/pkcs7-mime", buf, 2u);
        }
      }
      else
      {
        _ef_log_MFMessageWriter();
        v47 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v47, OS_LOG_TYPE_ERROR))
          _createOutgoingMessageFromTopLevelMimePart_cold_2();

        v43 = v10;
        v10 = 0;
      }

      v35 = v36;
    }
    else
    {
      v35 = v7;
      _ef_log_MFMessageWriter();
      v36 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR))
        _createOutgoingMessageFromTopLevelMimePart_cold_1();
      v37 = v10;
      v10 = 0;
    }

    v7 = v35;
  }
  if (!v9 || !v10)
  {
    if (!v10)
      goto LABEL_107;
    goto LABEL_98;
  }
  v48 = (void *)MEMORY[0x1A85B0E24]();
  v77 = v7;
  v49 = (void *)objc_msgSend(v9, "copyAddressListForResentFrom");

  v50 = objc_msgSend(v49, "count");
  if (v50)
  {
    v11 = v49;
  }
  else
  {
    v51 = objc_msgSend(v9, "copyAddressListForSender");

    v11 = (void *)v51;
  }
  if (objc_msgSend(v11, "count"))
  {
    objc_msgSend(v11, "objectAtIndexedSubscript:", 0);
    v52 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v52, "emailAddressValue");
    v53 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v53, "simpleAddress");
    v54 = (void *)objc_claimAutoreleasedReturnValue();
    v55 = v54;
    if (v54)
    {
      v56 = v54;
    }
    else
    {
      objc_msgSend(v52, "stringValue");
      v56 = (__CFString *)objc_claimAutoreleasedReturnValue();
    }
    v58 = v56;

    v57 = v58;
    if (!v58)
    {
      v80 = 0;
      goto LABEL_89;
    }
  }
  else
  {

    v57 = &stru_1E4F1C8F8;
  }
  v80 = v57;
  v59 = -[__CFString rangeOfString:options:](v57, "rangeOfString:options:", CFSTR("@"), 4);
  if (v59 == 0x7FFFFFFFFFFFFFFFLL)
  {
LABEL_89:
    v61 = 0;
    goto LABEL_90;
  }
  -[__CFString substringFromIndex:](v80, "substringFromIndex:", v59 + v60);
  v61 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_90:
  objc_msgSend(MEMORY[0x1E0CB3940], "mf_messageIDStringWithDomainHint:", v61);
  v62 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v62, "length"))
  {
    v63 = *MEMORY[0x1E0D1E5B0];
    if (v50)
    {
      objc_msgSend(v82, "firstHeaderForKey:", *MEMORY[0x1E0D1E5B0]);
      v64 = (void *)objc_claimAutoreleasedReturnValue();
      v65 = objc_msgSend(v64, "length");

      if (v65)
        v63 = *MEMORY[0x1E0D1E5E8];
    }
    objc_msgSend(v82, "setHeader:forKey:", v62, v63);
  }
  v66 = *MEMORY[0x1E0D1E5A8];
  objc_msgSend(v9, "firstHeaderForKey:", *MEMORY[0x1E0D1E5A8]);
  v67 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v67)
  {
    objc_msgSend(MEMORY[0x1E0D460E0], "versionString");
    v68 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "setHeader:forKey:", v68, v66);

  }
  v7 = v77;
  objc_autoreleasePoolPop(v48);
LABEL_98:
  v69 = (void *)MEMORY[0x1A85B0E24]();
  if (_makeMimeHeadersConsistent(v6, v7, a4) && (objc_msgSend(v79, "shouldCancel") & 1) == 0)
  {
    appendHeadersToMessageHeaders(v6, v7, v82);
    _appendPartDataToConsumer(v6, v7, v78, a4, 0);
    if ((!objc_msgSend(v78, "count") || (objc_msgSend(v78, "isLastCharacterNewLine") & 1) == 0)
      && ((_BYTE)v6[2] & 2) == 0)
    {
      v70 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99D50]), "initWithBytesNoCopy:length:freeWhenDone:", "\n", 1, 0);
      MFDataConsumerConsumeCompleteData();

    }
    objc_msgSend(v78, "done");
  }
  else
  {

    v10 = 0;
  }
  objc_autoreleasePoolPop(v69);
LABEL_107:

  return v10;
}

void sub_1A5051680(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, void *a15, void *a16, uint64_t a17, void *a18)
{
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;

  _Unwind_Resume(a1);
}

void sub_1A5051C40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11)
{
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

id _createPlainTextPart(void *a1, void *a2, __CFDictionary *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  int v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  id v21;
  char v22;

  v5 = a1;
  v6 = a2;
  objc_msgSend(v6, "string");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "mf_bestMimeCharsetUsingHint:", 0xFFFFFFFFLL);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0C99EA0], "standardUserDefaults");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v9, "BOOLForKey:", CFSTR("UseFormatFlowedForWrapping"));

  if (v10)
  {
    v22 = 0;
    v21 = 0;
    objc_msgSend(v6, "getFormatFlowedString:insertedTrailingSpaces:encoding:", &v21, &v22, objc_msgSend(v8, "cfStringEncoding"));
    v11 = v21;
    if (v11)
    {
      _createPartAndDataForString(v5, v11, v8, CFSTR("plain"), a3);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "setBodyParameter:forKey:", CFSTR("flowed"), CFSTR("format"));
      if (v22)
        objc_msgSend(v12, "setBodyParameter:forKey:", CFSTR("yes"), CFSTR("delsp"));
    }
    else
    {
      if (v8)
      {
        v13 = (void *)MEMORY[0x1E0CB3940];
        MFLookupLocalizedString(CFSTR("BAD_CHARSET_FORMAT"), CFSTR("Some characters in your message could not be converted to the “%@” text encoding. Please choose a different entry from the “Text Encoding” menu."), CFSTR("Delayed"));
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "displayName");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "stringWithFormat:", v14, v15);
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        +[MFError errorWithDomain:code:localizedDescription:](MFError, "errorWithDomain:code:localizedDescription:", CFSTR("MFMessageErrorDomain"), 1038, v16);
        v17 = (void *)objc_claimAutoreleasedReturnValue();

        MFLookupLocalizedString(CFSTR("BAD_CHARSET_TITLE"), CFSTR("Invalid Text Encoding"), CFSTR("Delayed"));
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v17, "setShortDescription:", v18);

        +[MFActivityMonitor currentMonitor](MFActivityMonitor, "currentMonitor");
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v19, "setError:", v17);

      }
      v12 = 0;
    }
  }
  else
  {
    objc_msgSend(v6, "quotedString:", objc_msgSend(v8, "cfStringEncoding"));
    v11 = (id)objc_claimAutoreleasedReturnValue();
    _createPartAndDataForString(v5, v11, v8, CFSTR("plain"), a3);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return v12;
}

void sub_1A5052058(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

id _createPartForMFAttachment(void *a1, void *a2, int a3, __CFDictionary *a4)
{
  _BYTE *v7;
  id v8;
  void *v9;
  int v10;
  const __CFString *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  char v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  void *v28;
  void *v29;
  _BOOL4 v30;
  void *v31;
  int v32;
  void *v33;
  int v34;
  void *v35;
  void *v36;
  uint64_t v37;
  void *v38;
  void *v39;
  void *v40;
  __CFString *v41;
  __CFString *v42;
  NSObject *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  char v49;
  void *v50;
  int v52;
  void *v53;
  _BYTE *v54;
  id v55;
  void *v56;
  uint8_t buf[4];
  void *v58;
  uint64_t v59;

  v59 = *MEMORY[0x1E0C80C00];
  v7 = a1;
  v8 = a2;
  if ((objc_msgSend(v8, "isImageFile") & 1) != 0
    || (objc_msgSend(v8, "metadataValueForKey:", CFSTR("MFAttachmentIsSinglePagePDFKey")),
        v9 = (void *)objc_claimAutoreleasedReturnValue(),
        v10 = objc_msgSend(v9, "BOOLValue"),
        v9,
        v10))
  {
    v11 = CFSTR("inline");
  }
  else
  {
    v11 = CFSTR("attachment");
  }
  objc_msgSend(v8, "fileName");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  if (v12 && (MFStringCanBeConvertedLosslessly() & 1) == 0)
  {
    v13 = (void *)MFCreateDataWithString();
    if (v13)
    {
      v14 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3940]), "initWithData:encoding:", v13, 1);
      objc_msgSend(v14, "stringByReplacingOccurrencesOfString:withString:", CFSTR("?"), CFSTR("_"));
      v15 = objc_claimAutoreleasedReturnValue();

      v12 = (void *)v15;
    }

  }
  v16 = (void *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D460F0]), "init");
  objc_msgSend(v8, "mailDropMetadata");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v18 = objc_msgSend(v17, "flags");

  if ((v18 & 8) != 0)
    objc_msgSend(v16, "setDispositionParameter:forKey:", v12, CFSTR("remote-image"));
  objc_msgSend(v8, "fileName");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "setDispositionParameter:forKey:", v19, CFSTR("filename"));

  objc_msgSend(v16, "setDisposition:", v11);
  if (objc_msgSend(v7, "shouldWriteAttachmentPlaceholders")
    && objc_msgSend(v8, "isPlaceholder"))
  {
    objc_msgSend(v8, "fetchPlaceholderData");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    objc_msgSend(v8, "fetchDataSynchronously:stripPrivateMetadata:", 0, 1);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
  }
  v21 = v20;
  if (!objc_msgSend(v20, "length"))
  {
    _ef_log_MFMessageWriter();
    v43 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v8, "fileName");
      v44 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v58 = v44;
      _os_log_impl(&dword_1A4F90000, v43, OS_LOG_TYPE_DEFAULT, "Unable to encode %@ as a MIME attachment", buf, 0xCu);

    }
    CFDictionarySetValue(a4, v16, (const void *)objc_msgSend(MEMORY[0x1E0C99D50], "data"));
    if (v16)
      goto LABEL_47;
    goto LABEL_50;
  }
  v53 = v12;
  v54 = v7;
  if ((v7[16] & 4) != 0)
  {
    v22 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3940]), "initWithFormat:", CFSTR("%lu"), objc_msgSend(v21, "length"));
    objc_msgSend(v16, "setDispositionParameter:forKey:", v22, CFSTR("size"));

  }
  objc_msgSend(v8, "fileAttributes");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v23, "objectForKey:", *MEMORY[0x1E0CB2AA8]);
  v56 = (void *)objc_claimAutoreleasedReturnValue();

  CFDictionarySetValue(a4, v16, v21);
  v52 = a3;
  v24 = v16;
  v55 = v8;
  objc_msgSend(v55, "fileName");
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  v26 = objc_alloc_init(MEMORY[0x1E0D46148]);
  objc_msgSend(v55, "mimeType");
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v26, "setMimeType:", v27);

  objc_msgSend(v25, "pathExtension");
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v26, "setPathExtension:", v28);

  objc_msgSend(v26, "setFilename:", v25);
  if (objc_msgSend(v26, "osType") == 1061109567)
    objc_msgSend(v26, "setOsType:", 0);
  objc_msgSend(v26, "mimeType");
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  v30 = v29 == 0;

  objc_msgSend(v26, "pathExtension");
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  v32 = objc_msgSend(&stru_1E4F1C8F8, "isEqualToString:", v31);

  if (v32)
    objc_msgSend(v26, "setPathExtension:", 0);
  objc_msgSend(v26, "pathExtension");
  v33 = (void *)objc_claimAutoreleasedReturnValue();

  if (v33)
    v34 = v30;
  else
    v34 = v30 | 2;
  if (v34)
  {
    MFGetTypeInfo();
    if (!v33)
    {
      objc_msgSend(v26, "pathExtension");
      v35 = (void *)objc_claimAutoreleasedReturnValue();

      if (v35)
      {
        objc_msgSend(v26, "pathExtension");
        v36 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v25, "stringByAppendingPathExtension:", v36);
        v37 = objc_claimAutoreleasedReturnValue();

        v25 = (void *)v37;
        objc_msgSend(v55, "setFileName:", v37);
      }
    }
  }
  objc_msgSend(v26, "mimeType");
  v38 = (void *)objc_claimAutoreleasedReturnValue();

  if (v38)
  {
    objc_msgSend(v26, "mimeType");
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v39, "componentsSeparatedByString:", CFSTR("/"));
    v40 = (void *)objc_claimAutoreleasedReturnValue();

    if (v40 && objc_msgSend(v40, "count") == 2)
    {
      objc_msgSend(v40, "objectAtIndex:", 0);
      v41 = (__CFString *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v40, "objectAtIndex:", 1);
      v42 = (__CFString *)objc_claimAutoreleasedReturnValue();

      if (v41)
        goto LABEL_42;
      goto LABEL_41;
    }

  }
  v42 = 0;
LABEL_41:

  v42 = CFSTR("octet-stream");
  v41 = CFSTR("application");
LABEL_42:
  objc_msgSend(v24, "setType:", v41);
  objc_msgSend(v24, "setSubtype:", v42);

  v45 = v55;
  v12 = v53;
  v7 = v54;
  a3 = v52;
  if (v56)
  {
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%#o"), objc_msgSend(v56, "intValue"));
    v46 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v24, "setBodyParameter:forKey:", v46, CFSTR("x-unix-mode"));

    v45 = v55;
  }
  objc_msgSend(v45, "contentID");
  v47 = (void *)objc_claimAutoreleasedReturnValue();
  if (v47)
    objc_msgSend(v24, "setBodyParameter:forKey:", v47, *MEMORY[0x1E0D45F28]);
  objc_msgSend(v24, "setBodyParameter:forKey:", v53, CFSTR("name"));

  if (v16)
  {
LABEL_47:
    if (a3)
    {
      objc_msgSend(v16, "type");
      v48 = (void *)objc_claimAutoreleasedReturnValue();
      v49 = objc_msgSend(v48, "isEqualToString:", CFSTR("multipart"));

      if ((v49 & 1) == 0)
      {
        objc_msgSend(v8, "contentID");
        v50 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v16, "setContentID:", v50);

      }
    }
  }
LABEL_50:

  return v16;
}

void sub_1A50527F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object, void *a11, void *a12, void *a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;

  _Unwind_Resume(a1);
}

void sub_1A5052A18(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A5052AA8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50532B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,void *a21)
{
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;

  _Unwind_Resume(a1);
}

id _createPartForFileWrapper(void *a1, void *a2, __CFDictionary *a3)
{
  _BYTE *v5;
  id v6;
  id v7;
  int v8;
  __CFString *v9;
  __CFString *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  NSObject *v22;
  id v24;
  id v25;
  uint8_t buf[4];
  id v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  objc_msgSend(v6, "preferredFilename");
  v7 = (id)objc_claimAutoreleasedReturnValue();
  if (v7)
  {
    v8 = objc_msgSend(v6, "isImageFile");
    v9 = CFSTR("attachment");
    if (v8)
      v9 = CFSTR("inline");
    v10 = v9;
    v7 = v7;
    v11 = v7;
    if ((MFStringCanBeConvertedLosslessly() & 1) == 0)
    {
      v12 = (void *)MFCreateDataWithString();
      v11 = v7;
      if (v12)
      {
        v13 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3940]), "initWithData:encoding:", v12, 1);
        objc_msgSend(v13, "stringByReplacingOccurrencesOfString:withString:", CFSTR("?"), CFSTR("_"));
        v11 = (void *)objc_claimAutoreleasedReturnValue();

      }
    }
    v14 = (void *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D460F0]), "init");
    objc_msgSend(v14, "setDispositionParameter:forKey:", v7, CFSTR("filename"));
    objc_msgSend(v14, "setDisposition:", v10);
    if (objc_msgSend(v6, "isSymbolicLink"))
    {
      v15 = (void *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D460F0]), "init");
      v16 = (void *)objc_opt_new();
      v25 = v7;
      _setMimeTypeFromWrapper(v15, &v25, v6);
      v17 = v25;

      appendHeadersToMessageHeaders(v5, v15, v16);
      CFDictionarySetValue(a3, v14, (const void *)objc_msgSend(v16, "encodedHeaders"));
      objc_msgSend(v14, "setType:", CFSTR("message"));
      objc_msgSend(v14, "setSubtype:", CFSTR("external-body"));
      objc_msgSend(v14, "setBodyParameter:forKey:", CFSTR("local-file"), CFSTR("access-type"));
      objc_msgSend(v6, "symbolicLinkDestination");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "setBodyParameter:forKey:", v18, CFSTR("name"));
    }
    else
    {
      if (!objc_msgSend(v6, "isRegularFile"))
      {
        _ef_log_MFMessageWriter();
        v22 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412290;
          v27 = v7;
          _os_log_impl(&dword_1A4F90000, v22, OS_LOG_TYPE_DEFAULT, "Unable to encode %@ as a MIME attachment", buf, 0xCu);
        }

        CFDictionarySetValue(a3, v14, (const void *)objc_msgSend(MEMORY[0x1E0C99D50], "data"));
        goto LABEL_25;
      }
      objc_msgSend(v6, "regularFileContents");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      if (!v15)
      {
        objc_msgSend(MEMORY[0x1E0C99D50], "data");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
      }
      if ((v5[16] & 4) != 0)
      {
        v19 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3940]), "initWithFormat:", CFSTR("%lu"), objc_msgSend(v15, "length"));
        objc_msgSend(v14, "setDispositionParameter:forKey:", v19, CFSTR("size"));

      }
      objc_msgSend(v6, "fileAttributes");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v20, "objectForKey:", *MEMORY[0x1E0CB2AA8]);
      v16 = (void *)objc_claimAutoreleasedReturnValue();

      CFDictionarySetValue(a3, v14, v15);
      v24 = v7;
      _setMimeTypeFromWrapper(v14, &v24, v6);
      v17 = v24;

      if (v16)
      {
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%#o"), objc_msgSend(v16, "intValue"));
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v14, "setBodyParameter:forKey:", v21, CFSTR("x-unix-mode"));

      }
      objc_msgSend(v6, "URL");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      if (v18)
        objc_msgSend(v14, "setBodyParameter:forKey:", v18, *MEMORY[0x1E0D45F28]);
      objc_msgSend(v14, "setBodyParameter:forKey:", v11, CFSTR("name"));
    }

    v7 = v17;
LABEL_25:

    goto LABEL_26;
  }
  v14 = 0;
LABEL_26:

  return v14;
}

void sub_1A5053908(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1A5053C54(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, __int128 buf)
{
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  id v25;
  NSObject *v26;
  void *v27;

  if (a2 == 1)
  {
    v25 = objc_begin_catch(a1);
    _ef_log_MFMessageWriter();
    v26 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v25, "reason");
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v27;
      _os_log_impl(&dword_1A4F90000, v26, OS_LOG_TYPE_DEFAULT, "Exception raised during message encoding: %@", (uint8_t *)&buf, 0xCu);

    }
    objc_end_catch();
    JUMPOUT(0x1A5053C00);
  }

  _Unwind_Resume(a1);
}

void appendHeadersToMessageHeaders(void *a1, void *a2, void *a3)
{
  id *v5;
  id v6;
  id WeakRetained;
  id v8;
  void *v9;
  int v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  const __CFString *v15;
  const __CFString *v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t i;
  uint64_t v30;
  void *v31;
  void *v32;
  void *v33;
  uint64_t v34;
  void *v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t j;
  uint64_t v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  id v52;
  char v53;
  id v54;
  void *v55;
  void *v56;
  id *v57;
  id *location;
  void *v59;
  id v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  _BYTE v69[128];
  _BYTE v70[128];
  char v71[16];
  uint64_t v72;

  v72 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  v60 = a3;
  location = v5 + 3;
  WeakRetained = objc_loadWeakRetained(v5 + 3);
  v57 = v5;
  LOBYTE(a2) = objc_opt_respondsToSelector();

  if ((a2 & 1) != 0)
  {
    v8 = objc_loadWeakRetained(location);
    objc_msgSend(v8, "messageWriter:willGenerateHeadersForMimePart:", v5, v6);

  }
  objc_msgSend(v6, "type");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v9, "isEqualToString:", CFSTR("multipart"));

  if (v10)
  {
    objc_msgSend(v6, "bodyParameterForKey:", CFSTR("boundary"));
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v11)
    {
      v11 = (void *)objc_msgSend(MEMORY[0x1E0D460E0], "copyNewMimeBoundary");
      objc_msgSend(v6, "setBodyParameter:forKey:", v11, CFSTR("boundary"));
    }

  }
  objc_msgSend(v6, "type");
  v12 = objc_claimAutoreleasedReturnValue();
  v55 = (void *)v12;
  objc_msgSend(v6, "subtype");
  v13 = objc_claimAutoreleasedReturnValue();
  v56 = (void *)v13;
  v14 = objc_allocWithZone(MEMORY[0x1E0CB3940]);
  v15 = &stru_1E4F1C8F8;
  if (v12)
    v16 = (const __CFString *)v12;
  else
    v16 = &stru_1E4F1C8F8;
  if (v13)
    v15 = (const __CFString *)v13;
  v59 = (void *)objc_msgSend(v14, "initWithFormat:", CFSTR("%@/%@"), v16, v15);
  v17 = v6;
  objc_msgSend(v17, "dispositionParameterForKey:", CFSTR("filename"));
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  if (v18
    && (objc_msgSend(v17, "bodyParameterForKey:", CFSTR("name")),
        v19 = (void *)objc_claimAutoreleasedReturnValue(),
        v19,
        !v19))
  {
    v21 = (void *)objc_msgSend(v18, "mutableCopyWithZone:", 0);
    objc_msgSend(v21, "replaceOccurrencesOfString:withString:options:range:", CFSTR("\\"), CFSTR("\\\\"), 0, 0, objc_msgSend(v21, "length"));
    objc_msgSend(v21, "replaceOccurrencesOfString:withString:options:range:", CFSTR("\""), CFSTR("\\\""), 0, 0, objc_msgSend(v21, "length"));
    objc_msgSend(v21, "insertString:atIndex:", CFSTR("\""), 0);
    objc_msgSend(v21, "appendString:", CFSTR("\""));
    v22 = (void *)MFCreateDataWithString();
    if (v22
      || (v22 = (void *)MFCreateDataWithString()) != 0
      || (CFStringGetSystemEncoding(), (v22 = (void *)MFCreateDataWithString()) != 0)
      || (CFStringGetSystemEncoding(), (v22 = (void *)MFCreateDataWithString()) != 0))
    {
      strcpy(v71, ";\n\tname=");
      v20 = (void *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99DF0]), "initWithCapacity:", objc_msgSend(v22, "length") + 8);
      objc_msgSend(v20, "appendBytes:length:", v71, 8);
      objc_msgSend(v20, "appendData:", v22);

    }
    else
    {
      v20 = 0;
    }

  }
  else
  {
    v20 = 0;
  }

  objc_msgSend(v17, "bodyParameterKeys");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v23, "count") || v20)
  {
    objc_msgSend(v59, "dataUsingEncoding:allowLossyConversion:", 1, 1);
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    v25 = (void *)objc_msgSend(v24, "mutableCopyWithZone:", 0);

    v67 = 0u;
    v68 = 0u;
    v65 = 0u;
    v66 = 0u;
    v26 = v23;
    v27 = objc_msgSend(v26, "countByEnumeratingWithState:objects:count:", &v65, v70, 16);
    if (v27)
    {
      v28 = *(_QWORD *)v66;
      do
      {
        for (i = 0; i != v27; ++i)
        {
          if (*(_QWORD *)v66 != v28)
            objc_enumerationMutation(v26);
          v30 = *(_QWORD *)(*((_QWORD *)&v65 + 1) + 8 * i);
          objc_msgSend(v17, "bodyParameterForKey:", v30);
          v31 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v25, "mf_appendRFC2231CompliantValue:forKey:", v31, v30);

        }
        v27 = objc_msgSend(v26, "countByEnumeratingWithState:objects:count:", &v65, v70, 16);
      }
      while (v27);
    }

    if (v20)
      objc_msgSend(v25, "appendData:", v20);
    objc_msgSend(v60, "setHeader:forKey:", v25, *MEMORY[0x1E0D1E558]);

  }
  else
  {
    objc_msgSend(v60, "setHeader:forKey:", v59, *MEMORY[0x1E0D1E558]);
  }

  objc_msgSend(v17, "disposition");
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "dispositionParameterKeys");
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  v34 = objc_msgSend(v33, "count");
  if (v32 || v34)
  {
    if (v34)
    {
      v35 = (void *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D46100]), "init");
      if (objc_msgSend(v32, "length"))
      {
        objc_msgSend(v32, "dataUsingEncoding:allowLossyConversion:", 1, 1);
        v36 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v35, "appendData:", v36);

      }
      v63 = 0u;
      v64 = 0u;
      v61 = 0u;
      v62 = 0u;
      v37 = v33;
      v38 = objc_msgSend(v37, "countByEnumeratingWithState:objects:count:", &v61, v69, 16);
      if (v38)
      {
        v39 = *(_QWORD *)v62;
        do
        {
          for (j = 0; j != v38; ++j)
          {
            if (*(_QWORD *)v62 != v39)
              objc_enumerationMutation(v37);
            v41 = *(_QWORD *)(*((_QWORD *)&v61 + 1) + 8 * j);
            objc_msgSend(v17, "dispositionParameterForKey:", v41);
            v42 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v35, "mf_appendRFC2231CompliantValue:forKey:", v42, v41);

          }
          v38 = objc_msgSend(v37, "countByEnumeratingWithState:objects:count:", &v61, v69, 16);
        }
        while (v38);
      }

      objc_msgSend(v60, "setHeader:forKey:", v35, *MEMORY[0x1E0D1E530]);
    }
    else
    {
      objc_msgSend(v60, "setHeader:forKey:", v32, *MEMORY[0x1E0D1E530]);
    }
  }

  objc_msgSend(v17, "contentTransferEncoding");
  v43 = (void *)objc_claimAutoreleasedReturnValue();
  if (v43)
    objc_msgSend(v60, "setHeader:forKey:", v43, *MEMORY[0x1E0D1E550]);

  objc_msgSend(v17, "contentDescription");
  v44 = (void *)objc_claimAutoreleasedReturnValue();
  if (v44)
    objc_msgSend(v60, "setHeader:forKey:", v44, *MEMORY[0x1E0D1E528]);

  objc_msgSend(v17, "contentID");
  v45 = (void *)objc_claimAutoreleasedReturnValue();
  v46 = v45;
  if (v45)
  {
    v47 = (void *)objc_msgSend(v45, "mutableCopyWithZone:", 0);
    objc_msgSend(v60, "setHeader:forKey:", v47, *MEMORY[0x1E0D1E538]);

  }
  objc_msgSend(v17, "languages");
  v48 = (void *)objc_claimAutoreleasedReturnValue();
  v49 = v48;
  if (v48 && objc_msgSend(v48, "count"))
  {
    objc_msgSend(v49, "componentsJoinedByString:", CFSTR(" "));
    v50 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v60, "setHeader:forKey:", v50, *MEMORY[0x1E0D1E540]);

  }
  objc_msgSend(v17, "contentLocation");
  v51 = (void *)objc_claimAutoreleasedReturnValue();
  if (v51)
    objc_msgSend(v60, "setHeader:forKey:", v51, *MEMORY[0x1E0D1E548]);

  v52 = objc_loadWeakRetained(location);
  v53 = objc_opt_respondsToSelector();

  if ((v53 & 1) != 0)
  {
    v54 = objc_loadWeakRetained(location);
    objc_msgSend(v54, "messageWriter:willEncodeHeaders:forMimePart:", v57, v60, v17);

  }
}

void sub_1A5054534(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, void *a18)
{
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  _Unwind_Resume(a1);
}

void sub_1A50547CC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A5054948(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

_MFOutgoingMessageBody *_makeOutgoingMessageBody(void *a1)
{
  Class *v1;
  _MFOutgoingMessageBody *v2;
  id v3;

  v1 = a1;
  v2 = objc_alloc_init(_MFOutgoingMessageBody);
  v3 = objc_alloc_init(v1[1]);
  -[MFMessageBody setMessage:](v2, "setMessage:", v3);
  objc_msgSend(v3, "setMessageBody:", v2);

  return v2;
}

void sub_1A50549F0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t _makeMimeHeadersConsistent(void *a1, void *a2, const __CFDictionary *a3)
{
  id v5;
  uint64_t v6;
  const __CFString *v7;
  uint64_t v8;
  uint64_t v9;
  __CFString *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  int v15;
  id v16;
  unint64_t v17;
  int v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  unsigned __int8 *v25;
  unsigned int v26;
  const __CFString *v28;
  unsigned __int8 *v29;
  BOOL v30;
  BOOL v32;
  unsigned int v33;
  unsigned int v34;
  BOOL v35;
  uint64_t v36;
  void *v37;
  void *v38;
  void *v39;
  char v40;
  void *v41;
  void *v42;
  void *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  _BOOL4 v48;
  void *v49;
  uint64_t v50;
  _BOOL4 v51;
  uint64_t v52;
  void *v54;
  unint64_t v55;
  char v56;
  int v57;
  unsigned int v58;
  id v59;
  unsigned int v60;
  void *v61;
  void *v62;
  id key;
  unsigned __int8 *v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  _BYTE v69[128];
  uint64_t v70;

  v70 = *MEMORY[0x1E0C80C00];
  v64 = a1;
  key = a2;
  CFDictionaryGetValue(a3, key);
  v61 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(key, "type");
  v62 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(CFSTR("multipart"), "isEqualToString:"))
  {
    objc_msgSend(key, "subparts");
    v67 = 0u;
    v68 = 0u;
    v65 = 0u;
    v66 = 0u;
    v5 = (id)objc_claimAutoreleasedReturnValue();
    v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v65, v69, 16);
    if (v6)
    {
      v7 = 0;
      v8 = *(_QWORD *)v66;
      while (2)
      {
        v9 = 0;
        v10 = (__CFString *)v7;
        do
        {
          if (*(_QWORD *)v66 != v8)
            objc_enumerationMutation(v5);
          v11 = *(void **)(*((_QWORD *)&v65 + 1) + 8 * v9);
          if ((_makeMimeHeadersConsistent(v64, v11, a3) & 1) == 0)
          {

            goto LABEL_26;
          }
          objc_msgSend(v11, "contentTransferEncoding");
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          v7 = CFSTR("binary");
          if ((objc_msgSend(v12, "isEqualToString:", CFSTR("binary")) & 1) == 0)
          {
            if (objc_msgSend(v12, "isEqualToString:", CFSTR("8bit")))
            {
              if (-[__CFString isEqualToString:](v10, "isEqualToString:", CFSTR("binary")))
                v7 = v10;
              else
                v7 = CFSTR("8bit");
            }
            else
            {
              v7 = v10;
            }
          }

          ++v9;
          v10 = (__CFString *)v7;
        }
        while (v6 != v9);
        v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v65, v69, 16);
        if (v6)
          continue;
        break;
      }

      if (v7)
        goto LABEL_30;
    }
    else
    {

    }
    v7 = CFSTR("7bit");
LABEL_30:
    objc_msgSend(key, "setContentTransferEncoding:", v7);

    goto LABEL_132;
  }
  if (!v61)
  {
    objc_msgSend(key, "setContentTransferEncoding:", CFSTR("7bit"));
    goto LABEL_132;
  }
  objc_msgSend(key, "contentTransferEncoding");
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  if (v13)
    goto LABEL_132;
  v60 = objc_msgSend(key, "isReadableText");
  v14 = objc_msgSend(v61, "length");
  if (v60)
    v15 = 2;
  else
    v15 = 6;
  v57 = v15;
  v16 = objc_retainAutorelease(v61);
  v17 = objc_msgSend(v16, "bytes");
  if ((objc_msgSend(v62, "isEqualToString:", CFSTR("message")) & 1) != 0)
    LOBYTE(v18) = 1;
  else
    v18 = (v64[16] >> 1) & 1;
  +[MFActivityMonitor currentMonitor](MFActivityMonitor, "currentMonitor");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v20, "canBeCancelled") & 1) == 0)
  {

    v20 = 0;
  }
  if (v14 < 1)
  {
    v36 = 0;
    goto LABEL_96;
  }
  v54 = v16;
  v55 = v14;
  v58 = 0;
  v21 = 0;
  v56 = 0;
  v22 = v17 + v14;
  v23 = 1;
  v24 = 1;
  v25 = (unsigned __int8 *)v17;
  do
  {
    v26 = *v25;
    if (v26 <= 0xD && ((1 << v26) & 0x2401) != 0)
      v24 = 0;
    if (v26 == 10)
    {
      v28 = 0;
      v29 = &v25[~v17];
      if (v21 > (uint64_t)v29)
        v29 = (unsigned __int8 *)v21;
      if ((unint64_t)v25 > v17)
        v21 = (uint64_t)v29;
      v17 = (unint64_t)(v25 + 1);
      goto LABEL_62;
    }
    v30 = v60;
    if (v26 != 27)
      v30 = 0;
    if (v26 == 9 || v26 > 0x1F)
      v32 = (v26 & 0x80u) == 0;
    else
      v32 = v30;
    if (v32)
    {
      v28 = 0;
      if (v25 == (unsigned __int8 *)v17 && (unint64_t)(v25 + 5) < v22)
      {
        if (strncmp("From ", (const char *)v17, 5uLL))
          goto LABEL_61;
        v28 = 0;
        LOBYTE(v18) = 0;
        v56 = 1;
        v21 = 998;
      }
    }
    else
    {
      v33 = v58 + v57;
      v34 = v64[16];
      v58 += v57;
      if ((v34 & 3) != 0)
      {
LABEL_61:
        v28 = 0;
        goto LABEL_62;
      }
      if ((v18 & 1) != 0)
      {
        v28 = 0;
        ++v25;
        LOBYTE(v18) = 1;
        if (!v20)
          continue;
        goto LABEL_73;
      }
      LOBYTE(v18) = 0;
      if (((v55 > v33) & (v34 >> 3)) != 0)
        v28 = 0;
      else
        v28 = CFSTR("base64");
    }
LABEL_62:
    v35 = (uint64_t)&(++v25)[-v17] < 999 && v21 < 999;
    if (v35 || (v18 & 1) != 0)
      goto LABEL_72;
    if ((v64[16] & 8) == 0 || (objc_msgSend(v62, "isEqualToString:", CFSTR("text")) & 1) == 0)
    {
      LOBYTE(v18) = 0;
      v28 = CFSTR("base64");
LABEL_72:
      if (!v20)
        continue;
      goto LABEL_73;
    }
    LOBYTE(v18) = 0;
    if (!v20)
      continue;
LABEL_73:
    if (objc_msgSend(v20, "shouldCancel"))
      v23 = 0;
  }
  while (!v28 && (unint64_t)v25 < v22 && (v23 & 1) != 0);
  if ((v23 & 1) == 0)
  {
LABEL_128:

LABEL_26:
    v19 = 0;
    goto LABEL_133;
  }
  v36 = ~v17 + v22;
  if (v21 > v36)
    v36 = v21;
  if (v22 <= v17)
    v36 = v21;
  v16 = v54;
  if (v28)
    goto LABEL_108;
  if (v56 & 1 | (v36 > 997))
    goto LABEL_101;
  if (!v58)
  {
LABEL_96:
    if (v36 >= 77)
    {
      objc_msgSend(key, "type");
      v37 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v37, "isEqualToString:", CFSTR("text")))
      {
        objc_msgSend(key, "subtype");
        v38 = (void *)objc_claimAutoreleasedReturnValue();
        if ((objc_msgSend(v38, "isEqualToString:", CFSTR("plain")) & 1) != 0)
        {
          objc_msgSend(MEMORY[0x1E0C99EA0], "standardUserDefaults");
          v39 = (void *)objc_claimAutoreleasedReturnValue();
          v40 = objc_msgSend(v39, "BOOLForKey:", CFSTR("UseFormatFlowedForWrapping"));

          if ((v40 & 1) == 0)
            goto LABEL_104;
          goto LABEL_107;
        }

      }
    }
LABEL_107:
    v28 = CFSTR("7bit");
    goto LABEL_108;
  }
  if ((((v64[16] & 3) != 0) & v24) != 0)
  {
    v28 = CFSTR("8bit");
    goto LABEL_108;
  }
LABEL_101:
  if (v56 & 1 | ((v18 & 1) == 0))
  {
    if ((v64[16] & 8) != 0 && objc_msgSend(v54, "length") > (unint64_t)v58)
LABEL_104:
      v28 = CFSTR("quoted-printable");
    else
      v28 = CFSTR("base64");
  }
  else
  {
    v28 = CFSTR("binary");
  }
LABEL_108:
  objc_msgSend(key, "setContentTransferEncoding:", v28);
  if (objc_msgSend(CFSTR("base64"), "isEqualToString:", v28))
  {
    if (v60)
    {
      objc_msgSend(key, "disposition");
      v41 = (void *)objc_claimAutoreleasedReturnValue();
      if ((objc_msgSend(v41, "isEqual:", CFSTR("attachment")) & 1) != 0)
      {
        v42 = 0;
        goto LABEL_121;
      }
      v52 = objc_msgSend(v16, "length");

      if (v52)
      {
        objc_msgSend(v16, "mf_dataByConvertingUnixNewlinesToNetwork");
        v42 = (void *)objc_claimAutoreleasedReturnValue();
        goto LABEL_125;
      }
    }
LABEL_124:
    v42 = 0;
    goto LABEL_125;
  }
  if (!objc_msgSend(CFSTR("quoted-printable"), "isEqualToString:", v28))
    goto LABEL_124;
  v59 = objc_alloc_init(MEMORY[0x1E0D46068]);
  v43 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D46130]), "initWithConsumer:", v59);
  objc_msgSend(v43, "setForTextPart:", v60);
  v44 = objc_msgSend(v16, "length");
  v45 = v20;
  v46 = objc_msgSend(objc_retainAutorelease(v16), "bytes");
  v47 = 0;
  v48 = 0;
  if (v45)
  {
LABEL_114:
    if ((objc_msgSend(v45, "shouldCancel") & 1) == 0)
      goto LABEL_115;
  }
  else
  {
LABEL_115:
    while (1)
    {
      v49 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99D50]), "initWithBytesNoCopy:length:freeWhenDone:", v46 + v47, v44 - v47, 0);
      v50 = objc_msgSend(v43, "appendData:", v49);
      if (v50 < 0)
        break;
      v51 = v50 == 0;
      if (v48 && v51)
        break;
      v47 += v50;

      v48 = v51;
      if (v45)
        goto LABEL_114;
    }

  }
  objc_msgSend(v43, "done");
  objc_msgSend(v59, "done");
  objc_msgSend(v59, "data");
  v42 = (void *)objc_claimAutoreleasedReturnValue();

  v20 = v45;
  v41 = v59;
LABEL_121:

LABEL_125:
  if (v20 && (objc_msgSend(v20, "shouldCancel") & 1) != 0)
  {

    goto LABEL_128;
  }
  if (v42)
    CFDictionarySetValue(a3, key, v42);

LABEL_132:
  v19 = 1;
LABEL_133:

  return v19;
}

void sub_1A50551F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16, void *a17, void *a18)
{
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  _Unwind_Resume(a1);
}

void sub_1A5055524(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5055620(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50557D8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5055908(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50559E0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5055B04(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5055C14(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

id _stringByReplacingNonBreakingSpacesWithString(void *a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  void *v6;
  void *v7;

  v3 = a1;
  v4 = a2;
  v5 = v3;
  v6 = v5;
  if (v5)
  {
    v7 = v5;
    if (objc_msgSend(v5, "rangeOfString:", CFSTR(" ")) != 0x7FFFFFFFFFFFFFFFLL)
    {
      objc_msgSend(v6, "stringByReplacingOccurrencesOfString:withString:", CFSTR(" "), v4);
      v7 = (void *)objc_claimAutoreleasedReturnValue();

    }
  }
  else
  {
    v7 = 0;
  }

  return v7;
}

void sub_1A5055D14(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void _setMimeTypeFromWrapper(void *a1, id *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  _BOOL4 v11;
  void *v12;
  int v13;
  void *v14;
  int v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  __CFString *v22;
  __CFString *v23;
  id v24;

  v24 = a1;
  v5 = a3;
  v6 = *a2;
  v7 = objc_alloc_init(MEMORY[0x1E0D46148]);
  objc_msgSend(v5, "mimeType");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setMimeType:", v8);

  objc_msgSend(v6, "pathExtension");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setPathExtension:", v9);

  objc_msgSend(v7, "setFilename:", v6);
  if (objc_msgSend(v7, "osType") == 1061109567)
    objc_msgSend(v7, "setOsType:", 0);
  objc_msgSend(v7, "mimeType");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = v10 == 0;

  objc_msgSend(v7, "pathExtension");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = objc_msgSend(&stru_1E4F1C8F8, "isEqualToString:", v12);

  if (v13)
    objc_msgSend(v7, "setPathExtension:", 0);
  objc_msgSend(v7, "pathExtension");
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  if (v14)
    v15 = v11;
  else
    v15 = v11 | 2;
  if (v15)
  {
    MFGetTypeInfo();
    if (!v14)
    {
      objc_msgSend(v7, "pathExtension");
      v16 = (void *)objc_claimAutoreleasedReturnValue();

      if (v16)
      {
        v17 = *a2;
        objc_msgSend(v7, "pathExtension");
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v17, "stringByAppendingPathExtension:", v18);
        *a2 = (id)objc_claimAutoreleasedReturnValue();

        objc_msgSend(v5, "setPreferredFilename:", *a2);
        objc_msgSend(v5, "setFilename:", *a2);
      }
    }
  }
  objc_msgSend(v7, "mimeType");
  v19 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v19)
    goto LABEL_18;
  objc_msgSend(v7, "mimeType");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v20, "componentsSeparatedByString:", CFSTR("/"));
  v21 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v21 || objc_msgSend(v21, "count") != 2)
  {

LABEL_18:
    v23 = 0;
LABEL_19:

    v23 = CFSTR("octet-stream");
    v22 = CFSTR("application");
    goto LABEL_20;
  }
  objc_msgSend(v21, "objectAtIndex:", 0);
  v22 = (__CFString *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v21, "objectAtIndex:", 1);
  v23 = (__CFString *)objc_claimAutoreleasedReturnValue();

  if (!v22)
    goto LABEL_19;
LABEL_20:
  objc_msgSend(v24, "setType:", v22);
  objc_msgSend(v24, "setSubtype:", v23);

}

void sub_1A5056024(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

uint64_t ___createOutgoingMessageFromTopLevelMimePart_block_invoke(uint64_t a1, uint64_t a2, void *a3)
{
  return objc_msgSend(a3, "supportsEncryptedSubject");
}

void OUTLINED_FUNCTION_0_3(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void sub_1A50561D0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A50563D8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5056478(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50564E4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5056694(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  objc_sync_exit(v3);
  _Unwind_Resume(a1);
}

void sub_1A505678C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5056B24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, void *a12)
{
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1A5056D50(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5056DC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)MFAccountStore;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_1A50570F8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A50572E4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5057424(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;

  _Unwind_Resume(a1);
}

void sub_1A50575D0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50576BC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A505776C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)MFActivityCondition;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_1A5057990(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  void *v16;
  void *v17;
  void *v18;

  _Unwind_Resume(a1);
}

void sub_1A5057A38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A5057AF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  void *v7;
  va_list va;

  va_start(va, a7);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A5057D80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  id *v24;
  void *v25;

  objc_destroyWeak(v24);
  objc_destroyWeak(&location);

  _Unwind_Resume(a1);
}

void sub_1A50580D8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50581D0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50582CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50583F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)MFAppStateMonitor;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_1A505848C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5058584(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50585FC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A505886C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5058AC8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v1;

  _Unwind_Resume(a1);
}

void sub_1A5058C30(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v1;

  _Unwind_Resume(a1);
}

void sub_1A5058CEC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5058F48(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v1;

  _Unwind_Resume(a1);
}

void sub_1A50590B4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5059230(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50592A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5059540(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_1A50597FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{

  _Unwind_Resume(a1);
}

void sub_1A5059934(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5059AEC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A5059BF4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A5059C5C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A505A124(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A505A3EC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

id EFPromiseAttachmentDataHandler(void *a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  _QWORD v9[4];
  id v10;
  id v11;

  v3 = a1;
  v4 = a2;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v9[2] = __EFPromiseAttachmentDataHandler_block_invoke;
  v9[3] = &unk_1E4E8B828;
  v10 = v4;
  v11 = v3;
  v5 = v3;
  v6 = v4;
  v7 = _Block_copy(v9);

  return v7;
}

__CFData *_stripPrivateFileMetadata(void *a1)
{
  const __CFData *v1;
  CGImageSource *v2;
  CGImageSource *v3;
  __CFData *v4;
  const CGImageMetadata *v5;
  const CGImageMetadata *v6;
  CGMutableImageMetadataRef MutableCopy;
  CGMutableImageMetadataRef v8;
  __CFData *v9;
  const __CFString *Type;
  size_t Count;
  CGImageDestination *v12;
  const __CFDictionary *v13;
  _QWORD v15[4];
  id v16;
  uint64_t *v17;
  CGMutableImageMetadataRef v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  char v22;
  void *values;
  void *keys[2];

  keys[1] = *(void **)MEMORY[0x1E0C80C00];
  v1 = a1;
  v2 = CGImageSourceCreateWithData(v1, 0);
  v3 = v2;
  v4 = v1;
  if (v2)
  {
    v5 = CGImageSourceCopyMetadataAtIndex(v2, 0, 0);
    v6 = v5;
    v4 = v1;
    if (v5)
    {
      MutableCopy = CGImageMetadataCreateMutableCopy(v5);
      v8 = MutableCopy;
      v4 = v1;
      if (MutableCopy)
      {
        v19 = 0;
        v20 = &v19;
        v21 = 0x2020000000;
        v22 = 0;
        v15[0] = MEMORY[0x1E0C809B0];
        v15[1] = 3221225472;
        v15[2] = ___stripPrivateFileMetadata_block_invoke;
        v15[3] = &unk_1E4E8B850;
        v17 = &v19;
        v18 = MutableCopy;
        v16 = &unk_1E4F6A450;
        CGImageMetadataEnumerateTagsUsingBlock(v6, 0, 0, v15);
        v4 = v1;
        if (*((_BYTE *)v20 + 24))
        {
          objc_msgSend(MEMORY[0x1E0C99DF0], "data");
          v9 = (__CFData *)objc_claimAutoreleasedReturnValue();
          Type = CGImageSourceGetType(v3);
          Count = CGImageSourceGetCount(v3);
          v12 = CGImageDestinationCreateWithData(v9, Type, Count, 0);
          v4 = v1;
          if (v12)
          {
            keys[0] = *(void **)MEMORY[0x1E0CBC798];
            values = v8;
            v13 = CFDictionaryCreate((CFAllocatorRef)*MEMORY[0x1E0C9AE00], (const void **)keys, (const void **)&values, 1, MEMORY[0x1E0C9AEB8], MEMORY[0x1E0C9B3A0]);
            v4 = v1;
            if (v13)
            {
              v4 = v1;
              if (CGImageDestinationCopyImageSource(v12, v3, v13, 0))
              {
                v4 = v9;

              }
              CFRelease(v13);
            }
            CFRelease(v12);
          }

        }
        CFRelease(v8);

        _Block_object_dispose(&v19, 8);
      }
      CFRelease(v6);
    }
    CFRelease(v3);
  }

  return v4;
}

void sub_1A505A72C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, ...)
{
  void *v8;
  va_list va;

  va_start(va, a8);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A505AA58(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A505AB90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A505AD68(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A505AE44(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A505AF18(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A505AF84(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A505B1BC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A505B2A8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A505B308(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A505B380(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A505B40C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A505B484(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A505B534(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A505B638(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A505B734(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A505B79C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A505B974(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v3;

  _Unwind_Resume(a1);
}

void sub_1A505BB14(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A505BC40(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A505BCCC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A505BE7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1A505BF38(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A505C034(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A505C178(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A505C1F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A505C264(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A505C2D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A505C45C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A505C4E0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A505C5D8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A505C6F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A505C86C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A505C944(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A505C9AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A505CA50(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A505CAB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A505CBE0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A505CCD4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A505CE30(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A505CFB0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A505D098(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A505D160(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A505D1E0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A505D3A0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A505D5E0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A505D6A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1A505D7BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

uint64_t ___stripPrivateFileMetadata_block_invoke(uint64_t a1, const __CFString *a2, CGImageMetadataTagRef tag)
{
  __CFString *v6;
  void *v7;
  __CFString *v8;

  v6 = (__CFString *)CGImageMetadataTagCopyPrefix(tag);
  if (v6)
  {
    objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", v6);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    if (v7)
    {
      v8 = (__CFString *)CGImageMetadataTagCopyName(tag);
      if (v8 && objc_msgSend(v7, "containsObject:", v8))
      {
        CGImageMetadataRemoveTagWithPath(*(CGMutableImageMetadataRef *)(a1 + 48), 0, a2);
        *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 1;
      }

    }
  }

  return 1;
}

void sub_1A505D88C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_2_0(void *a1@<X0>, const char *a2@<X3>, uint8_t *a3@<X4>, NSObject *a4@<X8>)
{
  _os_log_error_impl(a1, a4, OS_LOG_TYPE_ERROR, a2, a3, 0x16u);
}

uint64_t OUTLINED_FUNCTION_4_1(uint64_t result, uint64_t a2, float a3)
{
  *(float *)a2 = a3;
  *(_QWORD *)(a2 + 4) = 1752392040;
  *(_WORD *)(a2 + 12) = 2112;
  *(_QWORD *)(a2 + 14) = result;
  return result;
}

void sub_1A505D974(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A505D9DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A505DAF8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A505DBE0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A505DC3C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A505DCEC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A505DD54(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A505DEB0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A505DF48(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A505DFEC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A505E18C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A505E250(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A505E2B4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A505E39C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A505E5C8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A505E66C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A505E788(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A505ED78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, void *a15, uint64_t a16, void *a17, void *a18, void *a19)
{
  void *v19;

  _Unwind_Resume(a1);
}

void sub_1A505F054(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, void *a15, void *a16, void *a17, void *a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,void *a26)
{
  void *v26;
  void *v27;

  _Unwind_Resume(a1);
}

void sub_1A505F350(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A505F7EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, void *a11, uint64_t a12, os_activity_scope_state_s state)
{
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  os_activity_scope_leave(&state);
  _Unwind_Resume(a1);
}

void sub_1A505FC7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,id a42)
{
  void *v42;

  _Block_object_dispose(&a37, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__7(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__7(uint64_t a1)
{

}

void sub_1A505FD90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A505FDEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5060094(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A506014C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50601F4(_Unwind_Exception *a1)
{
  void *v1;
  os_unfair_lock_s *v2;
  void *v3;

  os_unfair_lock_unlock(v2);
  _Unwind_Resume(a1);
}

void sub_1A50602A0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5060828(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  _Unwind_Resume(a1);
}

void sub_1A5060CD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1A5060E24(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5060F00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1A5060F48()
{
  JUMPOUT(0x1A5060F38);
}

void sub_1A506103C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A50611D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5061268(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A5061300(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_0_4(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x16u);
}

void sub_1A5061524(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  void *v9;
  void *v10;

  a9.super_class = (Class)MFAttachmentCompositionContext;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_1A5061600(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5061698(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A506170C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50617B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A5061838(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A506190C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50619D8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5061A4C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5061B1C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5061BC4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5061C7C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A5061EC8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_1A5061F98(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5062030(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50620F0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50627C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, void *a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;

  _Unwind_Resume(a1);
}

void sub_1A5062B88(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v7 = v5;

  _Unwind_Resume(a1);
}

void sub_1A5062ED0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5062F9C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5063204(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12)
{
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1A506338C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50633F0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5063508(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50635CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  os_unfair_lock_s *v10;

  os_unfair_lock_unlock(v10);

  _Unwind_Resume(a1);
}

void sub_1A5063690(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A5063744(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5063C3C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  _Unwind_Resume(a1);
}

void sub_1A5063E80(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50640B0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50641D4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5064350(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5064430(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50644E8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5064760(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,void *a25,void *a26)
{
  void *v26;
  void *v27;
  void *v28;

  _Unwind_Resume(a1);
}

void sub_1A50648F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1A5064C44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1A5064D58(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5065154(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A506552C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,id a29)
{
  void *v29;
  void *v30;
  void *v31;
  void *v32;

  _Block_object_dispose(&a18, 8);
  _Block_object_dispose(&a24, 8);

  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__8(uint64_t a1)
{

}

void sub_1A506567C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50659C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,void *a38,uint64_t a39,uint64_t a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,id a46,char a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,id a52)
{

  _Block_object_dispose(&a41, 8);
  _Block_object_dispose(&a47, 8);

  _Unwind_Resume(a1);
}

void sub_1A5065BE0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5065C8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5065DA4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5065ED0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5066108(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;

  _Unwind_Resume(a1);
}

void sub_1A5066314(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50663D0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A50664EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A5066658(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1A5066740(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A50667F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A5066940(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5066B60(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A5066CF0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5066E0C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  objc_end_catch();

  _Unwind_Resume(a1);
}

void sub_1A5066FFC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  objc_end_catch();

  _Unwind_Resume(a1);
}

void sub_1A50671BC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A506725C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50672BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5067358(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50673C8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5067428(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5067510(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5067664(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A50677B8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50678AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5067978(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5067C30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1A5067F04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_1A5067FEC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50680B8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5068294(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v7 = v5;

  _Unwind_Resume(a1);
}

void sub_1A50683C4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5068430(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5068544(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A50686CC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A50687EC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A5068950(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5068A3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A5068B3C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5068DD8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5068FE8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A5069248(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  _Unwind_Resume(a1);
}

void sub_1A506946C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_1A50694B4()
{
  JUMPOUT(0x1A50694A0);
}

void sub_1A5069544(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1A5069648(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50697B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_1A5069808()
{
  JUMPOUT(0x1A50697FCLL);
}

void sub_1A50698B8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A5069978(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5069E10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,void *a21)
{
  void *v21;
  void *v22;
  void *v23;
  void *v24;

  _Unwind_Resume(a1);
}

void sub_1A5069FE8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A506A07C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A506A0DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A506A148(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A506A210(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A506A26C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)MFAttachmentSecurityScope;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_1A506A4CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A506A818(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,id a30)
{
  _Block_object_dispose(&a25, 8);

  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__9(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__9(uint64_t a1)
{

}

void sub_1A506A918(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A506A9A0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A506AC10(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_1A506ADF4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1A506AF54(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A506AFD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A506B0D4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A506B178(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_7_1(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_debug_impl(a1, log, OS_LOG_TYPE_DEBUG, a4, (uint8_t *)va, 0x16u);
}

void sub_1A506B9F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, _Unwind_Exception *exception_object)
{
  void *v20;
  void *v21;

  _Unwind_Resume(a1);
}

void sub_1A506BC6C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A506BD98(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A506BED4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A506C094(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A506C230(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A506C510(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A506C770(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A506C830(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A506C9E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  _Unwind_Resume(a1);
}

void sub_1A506CB4C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A506CC44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A506D2A8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A506D760(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12)
{

  _Unwind_Resume(a1);
}

void sub_1A506DAA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12)
{
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1A506DBDC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A506DCA0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A506DD34(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A506DEC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1A506E064(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A506E0F4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A506E160(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A506E304(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A506E38C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)MFCertificateTrustInfo;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_1A506E440(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A506E484(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A506E5C8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A506E6C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A506E7D0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A506E8BC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A506E964(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A506EAD4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A506EC84(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A506ED58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A506EDE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A506EF5C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A506F0A4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A506F174(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A506F298(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A506F368(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A506F3EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A506F574(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A506F728(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A506F804(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A506F91C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A506FB98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  void *v20;
  void *v21;

  _Block_object_dispose(&a15, 8);

  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__10(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__10(uint64_t a1)
{

}

void sub_1A506FCC8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A506FE18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_0_5(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void sub_1A5070070(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5070118(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

dispatch_source_t MFCreateDiskSpaceObserverSource(NSObject *a1, void *a2)
{
  id v3;
  dispatch_source_t v4;
  dispatch_source_t v5;
  NSObject *v6;
  NSObject *v7;
  _QWORD v9[4];
  NSObject *v10;
  id v11;

  v3 = a2;
  v4 = dispatch_source_create(MEMORY[0x1E0C80DD8], 0, 0xC204uLL, a1);
  v5 = v4;
  if (v4)
  {
    v9[0] = MEMORY[0x1E0C809B0];
    v9[1] = 3221225472;
    v9[2] = __MFCreateDiskSpaceObserverSource_block_invoke;
    v9[3] = &unk_1E4E8BB10;
    v6 = v4;
    v10 = v6;
    v11 = v3;
    dispatch_source_set_event_handler(v6, v9);
    v7 = v6;

  }
  return v5;
}

void sub_1A50702DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5070448(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A50704CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50705E8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A50706A0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50708D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  va_list va;

  va_start(va, a15);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A5070964(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5070A5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A5070C14(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5070F3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A507119C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1A50713C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1A50714F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  void *v9;
  va_list va;

  va_start(va, a9);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A5071630(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1A50716E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A5071750(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A5071BF0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5071C98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5071D28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A5071EDC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t MFCreateExternalConversationID(void *a1)
{
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;

  objc_msgSend(a1, "conversationId");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = v1;
  if (v1)
  {
    objc_msgSend(v1, "mf_encodeBase64");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = MFCreateStringWithData();

  }
  else
  {
    v4 = 0;
  }

  return v4;
}

void sub_1A5072070(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5072234(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A50723A4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A507242C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50724AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50728B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1A5072998(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5072A24(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5072B94(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A5072C6C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5072F48(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_1A5073754(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17)
{
  void *v17;
  void *v18;

  _Unwind_Resume(a1);
}

void sub_1A5073B60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  void *v20;
  void *v21;
  void *v22;
  void *v23;

  _Block_object_dispose(&a15, 8);

  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__11(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__11(uint64_t a1)
{

}

void sub_1A50743A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, void *a15, uint64_t a16, void *a17, uint64_t a18, void *a19)
{
  void *v19;
  uint64_t v20;

  _Block_object_dispose((const void *)(v20 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_1A5074588(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A5074628(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50746B0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5074764(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50748C8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A507494C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5074A28(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5074B08(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5074BE8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

id copyRFC822DataForPlainTextMessage(void *a1, int a2, char a3)
{
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t i;
  void *v19;
  MFMailMimePart *v20;
  id v21;
  void *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  _BOOL4 v26;
  void *v27;
  __CFString *v28;
  void *v29;
  __CFString *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  MFMailMimePart *v35;
  MFMailMimePart *v36;
  MFMessageWriter *v37;
  void *v38;
  id v40;
  void *v42;
  id v43;
  id v44;
  MFMailMimePart *v45;
  MFMailMimePart *v46;
  id v47;
  id obj;
  uint64_t v49;
  MFMailMimePart *v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  _BYTE v56[128];
  uint64_t v57;

  v57 = *MEMORY[0x1E0C80C00];
  v40 = a1;
  v4 = (void *)objc_msgSend(MEMORY[0x1E0D460E0], "copyNewMimeBoundary");
  v47 = v40;
  v44 = v4;
  v5 = objc_alloc_init(MEMORY[0x1E0D46110]);
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("multipart/alternative; boundary=\"%@\""), v44);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setHeader:forKey:", v6, *MEMORY[0x1E0D1E558]);

  objc_msgSend(v47, "subject");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = v5;
  v9 = v7;
  if (v9)
    objc_msgSend(v8, "setHeader:forKey:", v9, *MEMORY[0x1E0D1E5F8]);

  objc_msgSend(v47, "from");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "setAddressListForSender:", v10);

  objc_msgSend(v47, "to");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "setAddressListForTo:", v11);

  objc_msgSend(v47, "cc");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "setAddressListForCc:", v12);

  objc_msgSend(v47, "bcc");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "setAddressListForBcc:", v13);

  objc_msgSend(v8, "encodedHeaders");
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  v43 = (id)objc_msgSend(v14, "mutableCopy");
  v45 = objc_alloc_init(MFMailMimePart);
  -[MFMailMimePart setType:](v45, "setType:", CFSTR("multipart"));
  -[MFMailMimePart setSubtype:](v45, "setSubtype:", CFSTR("alternative"));
  -[MFMailMimePart setBodyParameter:forKey:](v45, "setBodyParameter:forKey:", v44, CFSTR("boundary"));
  v50 = objc_alloc_init(MFMailMimePart);
  -[MFMailMimePart setType:](v50, "setType:", CFSTR("multipart"));
  -[MFMailMimePart setSubtype:](v50, "setSubtype:", CFSTR("mixed"));
  v42 = (void *)objc_msgSend(MEMORY[0x1E0D460E0], "copyNewMimeBoundary");
  -[MFMailMimePart setBodyParameter:forKey:](v50, "setBodyParameter:forKey:");
  -[MFMailMimePart addSubpart:](v45, "addSubpart:", v50);
  v46 = objc_alloc_init(MFMailMimePart);
  -[MFMailMimePart setType:](v46, "setType:", CFSTR("text"));
  -[MFMailMimePart setSubtype:](v46, "setSubtype:", CFSTR("plain"));
  if ((a3 & 1) != 0)
    v15 = 0x7FFFFFFFFFFFFFFFLL;
  else
    v15 = (int)objc_msgSend(v47, "bodySize");
  -[MFMailMimePart setRange:](v46, "setRange:", 0, v15);
  -[MFMailMimePart addSubpart:](v50, "addSubpart:", v46);
  v54 = 0u;
  v55 = 0u;
  v52 = 0u;
  v53 = 0u;
  objc_msgSend(v47, "attachments");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  obj = v16;
  v17 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v52, v56, 16);
  if (v17)
  {
    v49 = *(_QWORD *)v53;
    do
    {
      v51 = v17;
      for (i = 0; i != v51; ++i)
      {
        if (*(_QWORD *)v53 != v49)
          objc_enumerationMutation(obj);
        v19 = *(void **)(*((_QWORD *)&v52 + 1) + 8 * i);
        v20 = objc_alloc_init(MFMailMimePart);
        v21 = objc_alloc_init(MEMORY[0x1E0D46148]);
        objc_msgSend(v19, "displayName");
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v21, "setFilename:", v22);

        if (!MFGetTypeInfo())
          goto LABEL_15;
        objc_msgSend(v21, "mimeType");
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        v24 = objc_msgSend(v23, "rangeOfString:", CFSTR("/"));

        if (v24 == 0x7FFFFFFFFFFFFFFFLL)
          goto LABEL_15;
        objc_msgSend(v21, "mimeType");
        v25 = (void *)objc_claimAutoreleasedReturnValue();
        v26 = objc_msgSend(v25, "length") > (unint64_t)(v24 + 1);

        if (v26)
        {
          objc_msgSend(v21, "mimeType");
          v27 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v27, "substringToIndex:", v24);
          v28 = (__CFString *)objc_claimAutoreleasedReturnValue();

          objc_msgSend(v21, "mimeType");
          v29 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v29, "substringFromIndex:", v24 + 1);
          v30 = (__CFString *)objc_claimAutoreleasedReturnValue();

        }
        else
        {
LABEL_15:
          v28 = CFSTR("application");
          v30 = CFSTR("octet-stream");
        }
        -[MFMailMimePart setType:](v20, "setType:", v28);
        -[MFMailMimePart setSubtype:](v20, "setSubtype:", v30);
        objc_msgSend(v19, "name");
        v31 = (void *)objc_claimAutoreleasedReturnValue();
        -[MFMailMimePart setContentID:](v20, "setContentID:", v31);

        -[MFMailMimePart setDisposition:](v20, "setDisposition:", CFSTR("attachment"));
        objc_msgSend(v19, "displayName");
        v32 = (void *)objc_claimAutoreleasedReturnValue();
        -[MFMailMimePart setDispositionParameter:forKey:](v20, "setDispositionParameter:forKey:", v32, CFSTR("filename"));

        objc_msgSend(v19, "size");
        v33 = (void *)objc_claimAutoreleasedReturnValue();
        -[MFMailMimePart setRange:](v20, "setRange:", 0, objc_msgSend(v33, "integerValue"));

        if (objc_msgSend(v19, "isMostDefinitelyBase64ed"))
          -[MFMailMimePart setContentTransferEncoding:](v20, "setContentTransferEncoding:", CFSTR("base64"));
        -[MFMailMimePart addSubpart:](v50, "addSubpart:", v20);

      }
      v16 = obj;
      v17 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v52, v56, 16);
    }
    while (v17);
  }

  objc_msgSend(v47, "meetingRequestUUID");
  v34 = (void *)objc_claimAutoreleasedReturnValue();

  if (v34)
  {
    v35 = objc_alloc_init(MFMailMimePart);
    -[MFMailMimePart setType:](v35, "setType:", CFSTR("text"));
    -[MFMailMimePart setSubtype:](v35, "setSubtype:", CFSTR("calendar"));
    -[MFMailMimePart setContentID:](v35, "setContentID:", CFSTR("191AF69B-0088-47D2-AD66-6C9D08949C46"));
    -[MFMailMimePart setDisposition:](v35, "setDisposition:", CFSTR("attachment"));
    -[MFMailMimePart setDispositionParameter:forKey:](v35, "setDispositionParameter:forKey:", CFSTR("meeting.ics"), CFSTR("filename"));
    -[MFMailMimePart setRange:](v35, "setRange:", 0, 0);
    -[MFMailMimePart addSubpart:](v50, "addSubpart:", v35);

  }
  if (a2)
  {
    v36 = objc_alloc_init(MFMailMimePart);
    -[MFMailMimePart setType:](v36, "setType:", CFSTR("message"));
    -[MFMailMimePart setSubtype:](v36, "setSubtype:", CFSTR("rfc822"));
    -[MFMailMimePart setRange:](v36, "setRange:", 0, 0x7FFFFFFFFFFFFFFFLL);
    -[MFMailMimePart setIsGenerated:](v36, "setIsGenerated:", 1);
    -[MFMailMimePart addSubpart:](v45, "addSubpart:", v36);

  }
  v37 = objc_alloc_init(MFMessageWriter);
  v38 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99E08]), "initWithCapacity:", 1);
  -[MFMessageWriter appendDataForMimePart:toData:withPartData:](v37, "appendDataForMimePart:toData:withPartData:", v45, v43, v38);

  return v43;
}

void sub_1A50752FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, void *a13, void *a14, void *a15, void *a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21)
{

  _Unwind_Resume(a1);
}

void sub_1A50756C8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A5075AA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, _Unwind_Exception *exception_object, uint64_t a10, void *a11)
{
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1A5075EF0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_1A5076504(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

void sub_1A5076AAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, void *a17, void *a18)
{
  void *v18;

  _Unwind_Resume(a1);
}

void sub_1A507728C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

void sub_1A5077568(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5077694(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50777A8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5077838(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5077938(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5077AC0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5077B20(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5077BC4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5077CC0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5077DD0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5077E38(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5077EDC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A507800C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)_MFDAMSBasicConsumer;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_1A5078274(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5078A48(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18, void *a19, void *a20,void *a21,void *a22)
{
  uint64_t v22;
  id v25;
  NSObject *v26;

  if (a2 == 1)
  {
    v25 = objc_begin_catch(a1);
    MFLogGeneral();
    v26 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)(v22 - 256) = 138412290;
      *(_QWORD *)(v22 - 252) = v25;
      _os_log_impl(&dword_1A4F90000, v26, OS_LOG_TYPE_DEFAULT, "#Warning Caught exception %@", (uint8_t *)(v22 - 256), 0xCu);
    }

    objc_end_catch();
    JUMPOUT(0x1A5078A04);
  }

  _Unwind_Resume(a1);
}

uint64_t insertDAMessages(void *a1, void *a2, void *a3, void *a4, int a5, _QWORD *a6)
{
  void *v9;
  uint64_t v10;
  uint64_t i;
  void *v12;
  void *v13;
  void *v14;
  __CFString *v15;
  uint64_t v16;
  id v17;
  MFBasicMessageDataSection *v18;
  __CFString *v19;
  void *v20;
  void *v21;
  MFBasicMessageDataSection *v22;
  void *v23;
  void *v24;
  MFBasicMessageDataSection *v25;
  id v26;
  MFBasicMessageDataSection *v27;
  void *v28;
  void *v29;
  _BOOL4 v30;
  NSObject *v31;
  unint64_t v32;
  void *v33;
  MFBasicMessageDataSection *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  void *v39;
  id v40;
  void *v41;
  void *v42;
  void *v43;
  double v44;
  double v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t j;
  void *v50;
  unint64_t v51;
  void *v52;
  double v53;
  uint64_t v54;
  id v56;
  void *v57;
  id v58;
  void *v59;
  id v60;
  void *v61;
  id v62;
  id obj;
  char v64;
  uint64_t v65;
  id v66;
  uint64_t v68;
  void *v69;
  __CFString *v70;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  _QWORD v76[4];
  id v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  uint8_t v82[128];
  uint8_t buf[4];
  id v84;
  __int16 v85;
  void *v86;
  _BYTE v87[128];
  uint64_t v88;

  v88 = *MEMORY[0x1E0C80C00];
  v58 = a1;
  v62 = a2;
  v60 = a3;
  v56 = a4;
  objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
  v57 = (void *)objc_claimAutoreleasedReturnValue();
  v66 = objc_alloc_init(MEMORY[0x1E0C99E08]);
  objc_msgSend(v60, "fetchLimits");
  v69 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v62, "persistence");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "hookRegistry");
  v59 = (void *)objc_claimAutoreleasedReturnValue();

  if (a5)
  {
    objc_msgSend(MEMORY[0x1E0C99DE8], "array");
    v61 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v61 = 0;
  }
  if (objc_msgSend(v58, "count"))
    objc_msgSend(v59, "persistenceWillAddNewMessages:", v58);
  v80 = 0u;
  v81 = 0u;
  v78 = 0u;
  v79 = 0u;
  obj = v58;
  v10 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v78, v87, 16);
  if (!v10)
  {

    v35 = 128;
    goto LABEL_48;
  }
  v64 = 0;
  v65 = *(_QWORD *)v79;
  do
  {
    v68 = v10;
    for (i = 0; i != v68; ++i)
    {
      if (*(_QWORD *)v79 != v65)
        objc_enumerationMutation(obj);
      v12 = *(void **)(*((_QWORD *)&v78 + 1) + 8 * i);
      objc_msgSend(v12, "DAMailMessage");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      v14 = v13;
      if (a5)
      {
        objc_msgSend(v13, "longID");
        v15 = (__CFString *)objc_claimAutoreleasedReturnValue();
        if (v15)
        {
          v64 = 1;
        }
        else
        {
          objc_msgSend(v14, "serverID");
          v16 = objc_claimAutoreleasedReturnValue();
          v64 |= v16 == 0;
          if (v16)
            v15 = (__CFString *)v16;
          else
            v15 = CFSTR("Unknown remote identifier. No valid longID or serverID found");
        }
        objc_msgSend(v61, "addObject:", v15);

      }
      v17 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
      objc_msgSend(v66, "setObject:forKeyedSubscript:", v17, v12);
      objc_msgSend(v14, "body");
      v70 = (__CFString *)objc_claimAutoreleasedReturnValue();
      if (v70 && objc_msgSend(v14, "smimeType") != 2)
      {
        v18 = objc_alloc_init(MFBasicMessageDataSection);
        v19 = MFCreateStringByCondensingWhitespace(v70);
        -[MFBasicMessageDataSection setPartName:](v18, "setPartName:", CFSTR("summary"));
        -[__CFString dataUsingEncoding:](v19, "dataUsingEncoding:", 4);
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        -[MFBasicMessageDataSection setData:](v18, "setData:", v20);

        -[MFBasicMessageDataSection setComplete:](v18, "setComplete:", 1);
        -[MFBasicMessageDataSection setPartial:](v18, "setPartial:", 0);
        objc_msgSend(v17, "addObject:", v18);

      }
      objc_msgSend(v14, "meetingRequestUUID");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      if (v21)
      {
        v22 = objc_alloc_init(MFBasicMessageDataSection);
        -[MFBasicMessageDataSection setPartName:](v22, "setPartName:", CFSTR("meeting"));
        objc_msgSend(v21, "dataUsingEncoding:", 4);
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        -[MFBasicMessageDataSection setData:](v22, "setData:", v23);

        -[MFBasicMessageDataSection setComplete:](v22, "setComplete:", 1);
        -[MFBasicMessageDataSection setPartial:](v22, "setPartial:", 0);
        objc_msgSend(v17, "addObject:", v22);
        objc_msgSend(v14, "meetingRequestMetaData");
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        if (v24)
        {
          v25 = objc_alloc_init(MFBasicMessageDataSection);
          -[MFBasicMessageDataSection setPartName:](v25, "setPartName:", CFSTR("meeting data"));
          -[MFBasicMessageDataSection setData:](v25, "setData:", v24);
          -[MFBasicMessageDataSection setComplete:](v25, "setComplete:", 1);
          -[MFBasicMessageDataSection setPartial:](v25, "setPartial:", 0);
          objc_msgSend(v17, "addObject:", v25);

        }
        v26 = objc_alloc_init(MEMORY[0x1E0C99E08]);
        if ((objc_msgSend(v14, "meetingRequestIsActionable") & 1) == 0)
          objc_msgSend(v26, "setObject:forKeyedSubscript:", MEMORY[0x1E0C9AAB0], CFSTR("shouldUseICSRepresentation"));
        if (objc_msgSend(v26, "count"))
        {
          v27 = objc_alloc_init(MFBasicMessageDataSection);
          -[MFBasicMessageDataSection setPartName:](v27, "setPartName:", CFSTR("meeting metadata"));
          objc_msgSend(MEMORY[0x1E0CB36F8], "archivedDataWithRootObject:requiringSecureCoding:error:", v26, 1, 0);
          v28 = (void *)objc_claimAutoreleasedReturnValue();
          -[MFBasicMessageDataSection setData:](v27, "setData:", v28);

          -[MFBasicMessageDataSection setComplete:](v27, "setComplete:", 1);
          -[MFBasicMessageDataSection setPartial:](v27, "setPartial:", 0);
          objc_msgSend(v17, "addObject:", v27);

        }
        if (a6)
        {
          if ((objc_msgSend(v14, "read") & 1) == 0)
          {
            *a6 |= 1uLL;
            objc_msgSend(v60, "meetingStorePersistentID");
            v29 = (void *)objc_claimAutoreleasedReturnValue();
            v30 = v29 == 0;

            if (v30)
              *a6 |= 8uLL;
          }
        }
        MFLogGeneral();
        v31 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v31, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 138412546;
          v84 = v26;
          v85 = 2112;
          v86 = v12;
          _os_log_impl(&dword_1A4F90000, v31, OS_LOG_TYPE_INFO, "Inserting Exchange Calendar meeting Data %@ for message : %@", buf, 0x16u);
        }

LABEL_39:
        copyRFC822DataForPlainTextMessage(v14, v21 == 0, 0);
        v33 = (void *)objc_claimAutoreleasedReturnValue();
        if (v33)
        {
          v34 = objc_alloc_init(MFBasicMessageDataSection);
          -[MFBasicMessageDataSection setPartName:](v34, "setPartName:", 0);
          -[MFBasicMessageDataSection setData:](v34, "setData:", v33);
          -[MFBasicMessageDataSection setComplete:](v34, "setComplete:", 1);
          -[MFBasicMessageDataSection setPartial:](v34, "setPartial:", 1);
          objc_msgSend(v17, "addObject:", v34);

        }
        goto LABEL_42;
      }
      if (a6 && (objc_msgSend(v14, "read") & 1) == 0)
        *a6 |= 9uLL;
      v32 = objc_msgSend(v12, "messageSize");
      if (v32 > objc_msgSend(v69, "fetchMaxBytes"))
        goto LABEL_39;
LABEL_42:

    }
    v10 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v78, v87, 16);
  }
  while (v10);

  v35 = 128;
  if ((v64 & 1) != 0)
    v35 = 0x100000080;
LABEL_48:
  if (a5)
    v36 = v35;
  else
    v36 = 0;
  v37 = objc_alloc_init(MEMORY[0x1E0D1EB70]);
  objc_msgSend(v59, "persistenceWillBeginUpdates");
  objc_msgSend(v62, "addMessages:withMailbox:newMessagesByOldMessage:remoteIDs:setFlags:addPOPUIDs:dataSectionsByMessage:generationWindow:", obj, v56, v57, v61, v36, 0, v66, v37);
  v38 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v38, "count"))
  {
    v39 = (void *)objc_opt_new();
    v76[0] = MEMORY[0x1E0C809B0];
    v76[1] = 3221225472;
    v76[2] = __insertDAMessages_block_invoke;
    v76[3] = &unk_1E4E8BF00;
    v40 = v39;
    v77 = v40;
    objc_msgSend(v57, "enumerateKeysAndObjectsUsingBlock:", v76);
    objc_msgSend(v62, "willStartPersistenceDidAddMessages:", v40);
    objc_msgSend(v59, "persistenceDidAddMessages:generationWindow:", v38, v37);
    objc_msgSend(v62, "didFinishPersistenceDidAddMessages:", v40);
    objc_msgSend(v62, "persistence");
    v41 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v41, "messageChangeManager");
    v42 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v42, "didReflectNewMessages:", v38);

  }
  objc_msgSend(v59, "persistenceDidFinishUpdates");
  objc_msgSend(MEMORY[0x1E0C99D68], "dateWithTimeIntervalSinceNow:", -259200.0);
  v43 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v43, "timeIntervalSince1970");
  v45 = v44;

  v74 = 0u;
  v75 = 0u;
  v72 = 0u;
  v73 = 0u;
  v46 = v38;
  v47 = objc_msgSend(v46, "countByEnumeratingWithState:objects:count:", &v72, v82, 16);
  if (v47)
  {
    v48 = *(_QWORD *)v73;
    do
    {
      for (j = 0; j != v47; ++j)
      {
        if (*(_QWORD *)v73 != v48)
          objc_enumerationMutation(v46);
        v50 = *(void **)(*((_QWORD *)&v72 + 1) + 8 * j);
        v51 = objc_msgSend(v50, "messageSize");
        if (v51 > objc_msgSend(v69, "fetchMaxBytes"))
        {
          objc_msgSend(v50, "headersIfAvailable");
          v52 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v62, "updateThreadingInfoForMessage:fromHeaders:", v50, v52);

        }
        if (a6)
        {
          objc_msgSend(v50, "dateReceivedAsTimeIntervalSince1970");
          if (v53 > v45)
          {
            if ((objc_msgSend(v50, "conversationFlags") & 1) != 0)
              *a6 |= 4uLL;
            if ((objc_msgSend(v50, "messageFlags") & 0x1000000) != 0)
              *a6 |= 2uLL;
          }
        }
      }
      v47 = objc_msgSend(v46, "countByEnumeratingWithState:objects:count:", &v72, v82, 16);
    }
    while (v47);
  }

  v54 = objc_msgSend(v46, "count");
  return v54;
}

void sub_1A50796B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, void *a14, void *a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,void *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,void *a48)
{
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;

  _Unwind_Resume(a1);
}

void sub_1A50799CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5079B24(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5079C38(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5079CA4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5079E88(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5079F88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A507A35C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1A507A4C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1A507A6B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1A507A8DC(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9)
{
  void *v9;
  void *v10;
  void *v11;
  id v14;
  NSObject *v15;

  if (a2 == 1)
  {
    v14 = objc_begin_catch(a1);
    MFLogGeneral();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(a9) = 138412290;
      *(_QWORD *)((char *)&a9 + 4) = v14;
      _os_log_impl(&dword_1A4F90000, v15, OS_LOG_TYPE_DEFAULT, "#Warning Caught exception %@", (uint8_t *)&a9, 0xCu);
    }

    objc_end_catch();
    JUMPOUT(0x1A507A864);
  }

  _Unwind_Resume(a1);
}

void sub_1A507A9DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A507AA40(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A507AB48(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A507AC88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A507ADA0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A507AEDC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A507AF40(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A507B0A8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A507B144(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A507B1CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A507B238(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

uint64_t __insertDAMessages_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return objc_msgSend(*(id *)(a1 + 32), "setObject:forKeyedSubscript:", a2, a3);
}

void sub_1A507B3C4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A507B494(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A507B568(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A507B730(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void ___nextClientID_block_invoke()
{
  void *v0;

  v0 = (void *)_nextClientID___clientID;
  _nextClientID___clientID = (uint64_t)&unk_1E4F69C88;

}

void sub_1A507B8B8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A507B99C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A507BC14(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A507BE9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  void *v12;
  void *v13;

  if (a2 == 1)
  {
    objc_begin_catch(a1);
    NSLog(CFSTR("%s %d : Caught exception %@"));
    objc_end_catch();
    JUMPOUT(0x1A507BDB4);
  }

  _Unwind_Resume(a1);
}

id MFDataFromDispatchData(void *a1)
{
  return a1;
}

void sub_1A507BFC0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A507C460(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object, void *a11, void *a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,void *a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;

  _Unwind_Resume(a1);
}

void sub_1A507C664(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1A507C75C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1A507C804(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A507C8A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A507CAFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  void *v9;
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1A507CBF0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A507D4C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18, void *a19, void *a20,void *a21,void *a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,void *a46,void *a47,void *a48,void *a49,void *a50)
{
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;

  _Unwind_Resume(a1);
}

void sub_1A507D92C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1A507DA04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A507DAAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A507DB10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A507DB80(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A507DBD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A507DC40(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A507DCA8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A507DCFC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

__CFString *MFDBJournalMergeResultString(uint64_t a1)
{
  __CFString *v1;
  char v2;
  uint64_t v3;

  if (a1)
  {
    v1 = &stru_1E4F1C8F8;
    v2 = a1;
    if ((a1 & 2) != 0)
    {
      objc_msgSend(&stru_1E4F1C8F8, "stringByAppendingString:", CFSTR("Failures "));
      v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
    }
    if ((v2 & 1) != 0)
    {
      -[__CFString stringByAppendingString:](v1, "stringByAppendingString:", CFSTR("Interrupted"));
      v3 = objc_claimAutoreleasedReturnValue();

      v1 = (__CFString *)v3;
    }
  }
  else
  {
    v1 = CFSTR("Success");
  }
  return v1;
}

void sub_1A507DDBC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A507DEF0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A507DF74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)MFDbJournal;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_1A507E048(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  objc_sync_exit(v2);

  _Unwind_Resume(a1);
}

void sub_1A507E134(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A507E5EC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A507EA6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,void *a38)
{
  void *v38;
  void *v39;

  _Unwind_Resume(a1);
}

void sub_1A507EBB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_1A507F234(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19)
{
  void *v19;

  _Unwind_Resume(a1);
}

void sub_1A507F3AC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A507F4A4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t _sortFilenamesAlphabetically(void *a1, const char *a2)
{
  return objc_msgSend(a1, "compare:", a2);
}

void sub_1A507F5B0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A507F6F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A507F7F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A507FB54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, _Unwind_Exception *exception_object, void *a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;

  _Unwind_Resume(a1);
}

const __CFString *MFMessageDeliveryStatusString(unint64_t a1)
{
  if (a1 > 9)
    return CFSTR("EMMessageDeliveryStatusFatalError");
  else
    return off_1E4E8C038[a1];
}

void sub_1A507FD2C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A507FE80(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void _copyFunction(void *value, CFMutableSetRef theSet)
{
  CFSetAddValue(theSet, value);
}

uint64_t _intersectsFunction(uint64_t value, uint64_t a2)
{
  if (!*(_BYTE *)a2)
  {
    value = CFSetContainsValue(*(CFSetRef *)(a2 + 8), (const void *)value);
    *(_BYTE *)a2 = (_DWORD)value != 0;
  }
  return value;
}

uint64_t _subsetFunction(uint64_t value, uint64_t a2)
{
  if (*(_BYTE *)a2)
  {
    value = CFSetContainsValue(*(CFSetRef *)(a2 + 8), (const void *)value);
    *(_BYTE *)a2 = (_DWORD)value != 0;
  }
  return value;
}

void _unionFunction(void *value, CFMutableSetRef theSet)
{
  CFSetAddValue(theSet, value);
}

void _minusFunction(void *value, CFMutableSetRef theSet)
{
  CFSetRemoveValue(theSet, value);
}

uint64_t _intersectFunction(void *value, uint64_t a2)
{
  uint64_t result;

  result = CFSetContainsValue(*(CFSetRef *)(a2 + 8), value);
  if (!(_DWORD)result)
    return objc_msgSend(*(id *)a2, "addObject:", value);
  return result;
}

CFTypeRef _retain(int a1, CFTypeRef cf)
{
  return CFRetain(cf);
}

void _release(int a1, CFTypeRef cf)
{
  CFRelease(cf);
}

id _copyEmailDescription(void *a1)
{
  return (id)objc_msgSend(a1, "description");
}

uint64_t _emailEqual(void *a1, void *a2)
{
  uint64_t result;

  if (a1 == a2)
  {
    if (!a1)
      goto LABEL_13;
  }
  else
  {
    result = 0;
    if (!a1 || !a2)
      return result;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
LABEL_13:
    _emailEqual_cold_1();
  if (!a2 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
    _emailEqual_cold_2();
  if (a1 == a2)
    return 1;
  else
    return objc_msgSend(a1, "isEqualToEmail:", a2);
}

void sub_1A50812AC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5081354(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1A50813F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50814A4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1A50815B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1A508163C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50816BC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A508170C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5081790(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5081870(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5081988(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1A5081B9C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A5081DE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1A5082580(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, _Unwind_Exception *exception_object, uint64_t a15, void *a16, void *a17, void *a18, void *a19, uint64_t a20)
{
  void *v20;

  _Unwind_Resume(a1);
}

void sub_1A50827E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)MFFileArchive;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_1A5082894(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5082A74(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t _archive_open_callback()
{
  return 0;
}

uint64_t _archive_write_callback(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void (**v11)(_QWORD, _QWORD, _QWORD);
  void *v12;
  void *v13;
  void *v14;

  v6 = a2;
  objc_msgSend(v6, "readerBlock");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (v7)
  {
    objc_msgSend(v6, "writerBlock");
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    if (v8)
    {
      objc_msgSend(v6, "outputData");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = objc_msgSend(v9, "length");

      if (v10)
      {
        objc_msgSend(v6, "writerBlock");
        v11 = (void (**)(_QWORD, _QWORD, _QWORD))objc_claimAutoreleasedReturnValue();
        objc_msgSend(v6, "outputData");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        ((void (**)(_QWORD, _QWORD, void *))v11)[2](v11, 0, v12);

        objc_msgSend(v6, "outputData");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "setLength:", 0);

      }
    }
  }
  objc_msgSend(v6, "outputData");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "appendBytes:length:", a3, a4);

  return a4;
}

void sub_1A5082C44(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t _archive_close_callback(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void (**v12)(_QWORD, _QWORD, _QWORD);
  void *v13;
  void *v14;
  void (**v15)(_QWORD, _QWORD, _QWORD);

  v2 = a2;
  objc_msgSend(v2, "outputData");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "length");

  if (v4)
  {
    objc_msgSend(v2, "outputData");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = +[MFFileArchiveDirectory rangeOfCentralDirectoryInData:](MFFileArchiveDirectory, "rangeOfCentralDirectoryInData:", v5);
    v8 = v7;

    if (v6 == 0x7FFFFFFFFFFFFFFFLL)
    {
      v4 = 4294967266;
      archive_set_error();
    }
    else
    {
      objc_msgSend(v2, "outputData");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "setLength:", v6 + v8);

      v4 = 0;
    }
    objc_msgSend(v2, "readerBlock");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    if (v10)
    {
      objc_msgSend(v2, "writerBlock");
      v11 = (void *)objc_claimAutoreleasedReturnValue();

      if (v11)
      {
        objc_msgSend(v2, "writerBlock");
        v12 = (void (**)(_QWORD, _QWORD, _QWORD))objc_claimAutoreleasedReturnValue();
        objc_msgSend(v2, "outputData");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        ((void (**)(_QWORD, _QWORD, void *))v12)[2](v12, 0, v13);

        objc_msgSend(v2, "outputData");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v14, "setLength:", 0);

        objc_msgSend(v2, "writerBlock");
        v15 = (void (**)(_QWORD, _QWORD, _QWORD))objc_claimAutoreleasedReturnValue();
        v15[2](v15, 0, 0);

      }
    }
  }

  return v4;
}

void sub_1A5082DFC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5082F08(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5083054(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5083440(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, void *a13)
{

  _Unwind_Resume(a1);
}

void sub_1A5083728(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5083914(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5083A0C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5083B6C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5083C24(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5083D88(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50840E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5084360(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5084428(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A508453C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A50846B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A5084A78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5084BEC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A5084CC8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5084F04(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5085038(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50850F4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A508519C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5085284(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50853FC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A508548C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50855C0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5085788(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50859C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A5085AC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5086128(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A5086528(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A5086758(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50868F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  void *v10;
  void *v11;
  void *v12;
  uint64_t i;

  v12 = v11;

  for (i = 8; i != -8; i -= 8)
  _Unwind_Resume(a1);
}

void sub_1A5086C54(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A5086E68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A5087108(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t _comparePartialFetchResults(void *a1, void *a2)
{
  id v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = a2;
  v4 = objc_msgSend(a1, "startOffset");
  v5 = objc_msgSend(v3, "startOffset");
  if (v4 < v5)
    v6 = -1;
  else
    v6 = v5 != v4;

  return v6;
}

void sub_1A50871A0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A508736C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A5087454(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5087528(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50875E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5087648(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50877C4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5087954(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5087B18(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5087C60(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5087D88(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5087F50(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

unint64_t _lockedFindRangeOfDownloadsWithUid(void *a1, unsigned int a2)
{
  CFArrayRef *v3;
  CFArrayRef v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  void *v11;
  int v12;
  unint64_t v13;
  void *v14;
  int v15;
  const __CFArray *v16;
  CFArrayRef v17;
  CFRange v19;

  v3 = a1;
  v4 = v3[1];
  if (v4)
  {
    v5 = -[__CFArray count](v4, "count");
    v19.location = 0;
    v19.length = v5;
    v6 = CFArrayBSearchValues(v3[1], v19, (const void *)a2, (CFComparatorFunction)_compareDownloadsByUid, (void *)a2);
    v7 = v6;
    v8 = v5 - v6;
    if (v5 > v6)
    {
      v9 = 0;
      v10 = v6 - v5;
      while (1)
      {
        -[__CFArray objectAtIndex:](v3[1], "objectAtIndex:", v7 + v9);
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        v12 = objc_msgSend(v11, "uid");

        if (v12 != a2)
          break;
        ++v9;
        if (!(v10 + v9))
        {
          v9 = v8;
          break;
        }
      }
      if (v9 && v7)
      {
        do
        {
          v13 = v7 - 1;
          -[__CFArray objectAtIndex:](v3[1], "objectAtIndex:", v7 - 1);
          v14 = (void *)objc_claimAutoreleasedReturnValue();
          v15 = objc_msgSend(v14, "uid");

          if (v15 != a2)
            break;
          ++v9;
          --v7;
        }
        while (v13);
      }
    }
  }
  else
  {
    v16 = (const __CFArray *)objc_alloc_init(MEMORY[0x1E0C99DE8]);
    v17 = v3[1];
    v3[1] = v16;

    v7 = 0;
  }

  return v7;
}

void sub_1A50880BC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

MFIMAPSimpleDownload *_getDownload(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  id *v13;
  id v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  void *v19;
  void *v20;
  int v21;
  void *v22;
  void *v23;
  int v24;
  MFIMAPSimpleDownload *v25;
  MFIMAPSimpleDownload *v26;
  unint64_t RangeOfDownloadsWithUid;

  v13 = a1;
  v14 = a3;
  v15 = a8;
  objc_msgSend(v13, "mf_lock");
  RangeOfDownloadsWithUid = _lockedFindRangeOfDownloadsWithUid(v13, a2);
  v17 = v16;
  if (a7 != 0x7FFFFFFFFFFFFFFFLL)
  {
    v26 = -[MFIMAPSimpleDownload initWithUid:section:range:consumer:]([MFIMAPSimpleDownload alloc], "initWithUid:section:range:consumer:", a2, v14, a6, a7, v15);
    goto LABEL_17;
  }
  if (RangeOfDownloadsWithUid >= v16)
    goto LABEL_13;
  v18 = RangeOfDownloadsWithUid;
  do
  {
    objc_msgSend(v13[1], "objectAtIndex:", v18);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
      goto LABEL_9;
    objc_msgSend(v19, "section");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    v21 = objc_msgSend(v20, "isEqualToString:", v14);

    if (!v21)
      goto LABEL_9;
    if (!v15
      || (objc_msgSend(v19, "mainConsumer"),
          v22 = (void *)objc_claimAutoreleasedReturnValue(),
          objc_msgSend(v22, "consumers"),
          v23 = (void *)objc_claimAutoreleasedReturnValue(),
          v24 = objc_msgSend(v23, "containsObject:", v15),
          v23,
          v22,
          v24))
    {
      v25 = v19;
    }
    else
    {
LABEL_9:
      v25 = 0;
    }

    if (v25)
      break;
    ++v18;
  }
  while (v18 < v17);
  a2 = a2;
  if (!v25)
  {
LABEL_13:
    if (a4 == 0xFFFFFFFFLL)
      v26 = -[MFIMAPSimpleDownload initWithUid:section:estimatedLength:consumer:]([MFIMAPSimpleDownload alloc], "initWithUid:section:estimatedLength:consumer:", a2, v14, a5, v15);
    else
      v26 = -[MFIMAPSimpleDownload initWithUid:section:length:consumer:]([MFIMAPSimpleDownload alloc], "initWithUid:section:length:consumer:", a2, v14, a4, v15);
LABEL_17:
    v25 = v26;
    if (v26)
      objc_msgSend(v13[1], "insertObject:atIndex:", v26, RangeOfDownloadsWithUid + v17);
  }
  objc_msgSend(v13, "mf_unlock");

  return v25;
}

void sub_1A508834C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5088488(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void _lockedUpdateDownloadsInRange(void *a1, unint64_t a2, uint64_t a3, void *a4)
{
  id *v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t i;
  void *v13;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  id obj;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _BYTE v25[128];
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v7 = a1;
  v8 = a4;
  v19 = a3;
  if (a3)
  {
    v23 = 0u;
    v24 = 0u;
    v21 = 0u;
    v22 = 0u;
    v18 = v8;
    obj = v8;
    v9 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
    if (v9)
    {
      v10 = a2 + a3;
      v11 = *(_QWORD *)v22;
      do
      {
        for (i = 0; i != v9; ++i)
        {
          if (*(_QWORD *)v22 != v11)
            objc_enumerationMutation(obj);
          v13 = *(void **)(*((_QWORD *)&v21 + 1) + 8 * i);
          if (objc_msgSend(v13, "type") != 8 && a2 < v10)
          {
            v15 = v19;
            v16 = a2;
            do
            {
              objc_msgSend(v7[1], "objectAtIndex:", v16);
              v17 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v17, "handleFetchResult:", v13);

              ++v16;
              --v15;
            }
            while (v15);
          }
        }
        v9 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
      }
      while (v9);
    }

    v8 = v18;
  }

}

void sub_1A5088620(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1A50887FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50888CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5088960(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50889D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

uint64_t _compareDownloadsByUid(void *a1, void *a2, void *a3)
{
  void *v3;
  unsigned int v5;

  v3 = a3;
  v5 = a1;
  if (a1 != a3)
    v5 = objc_msgSend(a1, "uid");
  if (a2 != v3)
    LODWORD(v3) = objc_msgSend(a2, "uid");
  if (v5 < v3)
    return -1;
  else
    return v5 != (_DWORD)v3;
}

void sub_1A508A040(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A508A0D8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A508A308(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A508A350(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id _ef_log_MFIMAPMessageDownload()
{
  if (_ef_log_MFIMAPMessageDownload_onceToken != -1)
    dispatch_once(&_ef_log_MFIMAPMessageDownload_onceToken, &__block_literal_global_35);
  return (id)_ef_log_MFIMAPMessageDownload_log;
}

void sub_1A508A464(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A508A50C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A508A574(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A508A894(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A508A9B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A508AB50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A508AD74(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A508AEF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_1A508AF90(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A508B2B8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A508B56C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void *IMAPCreateArrayForMessageFlags(uint64_t a1, int a2, int a3)
{
  void *v6;
  __CFString **v7;
  BOOL v8;

  v6 = (void *)objc_opt_new();
  v7 = &sMessageFlagsTable;
  do
  {
    if ((*((_DWORD *)v7 + 5) & ~a2) == 0 || (*((_BYTE *)v7 + 16) ? (v8 = a3 == 0) : (v8 = 1), !v8))
    {
      if (((unint64_t)v7[1] & a1) != 0)
        objc_msgSend(v6, "addObject:", *v7);
    }
    v7 += 3;
  }
  while (v7 < _IMAPMessagesStatusKey);
  return v6;
}

void sub_1A508B764(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t IMAPMessageFlagsFromArray(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  __CFString **v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _BYTE v13[128];
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v1 = a1;
  v2 = 0;
  v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
  if (v3)
  {
    v4 = *(_QWORD *)v10;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v10 != v4)
          objc_enumerationMutation(v1);
        v6 = *(void **)(*((_QWORD *)&v9 + 1) + 8 * v5);
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
        {
          v7 = &sMessageFlagsTable;
          while (!objc_msgSend(v6, "ef_caseInsensitiveIsEqualToString:", *v7, (_QWORD)v9))
          {
            v7 += 3;
            if (v7 >= _IMAPMessagesStatusKey)
              goto LABEL_12;
          }
          v2 |= (unint64_t)v7[1];
        }
LABEL_12:
        ++v5;
      }
      while (v5 != v3);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
    }
    while (v3);
  }

  return v2;
}

void sub_1A508B8CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t IMAPPermanentFlagsFromArray(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  __CFString **v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _BYTE v13[128];
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v1 = a1;
  v2 = 0;
  v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
  if (v3)
  {
    v4 = *(_QWORD *)v10;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v10 != v4)
          objc_enumerationMutation(v1);
        v6 = *(void **)(*((_QWORD *)&v9 + 1) + 8 * v5);
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
        {
          v7 = &sMessageFlagsTable;
          while (!objc_msgSend(v6, "ef_caseInsensitiveIsEqualToString:", *v7, (_QWORD)v9))
          {
            v7 += 3;
            if (v7 >= _IMAPMessagesStatusKey)
              goto LABEL_12;
          }
          v2 = *((_DWORD *)v7 + 5) | v2;
        }
LABEL_12:
        ++v5;
      }
      while (v5 != v3);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
    }
    while (v3);
  }

  return v2;
}

void sub_1A508BA4C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A508BAFC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A508BC14(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A508BDF8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t mf_isIMAPAtom(unsigned int a1)
{
  if ((a1 & 0x80) != 0)
    return 0;
  else
    return (mf_isIMAPAtom_atomicMask[a1 >> 5] >> a1) & 1;
}

id _nullOrCFTypeRetain(uint64_t a1, void *a2)
{
  if (a2)
    return a2;
  else
    return 0;
}

void _nullOrCFTypeRelease(uint64_t a1, void *a2)
{
  if (a2)

}

const __CFString *_nullOrCFTypeCopyDescription(uint64_t a1)
{
  if (a1)
    return (const __CFString *)(*(uint64_t (**)(void))(MEMORY[0x1E0C9B378] + 24))();
  else
    return CFSTR("NIL");
}

uint64_t _nullOrCFTypeEqual(const void *a1, const void *a2)
{
  if (!a1)
    return a2 != 0;
  if (a2)
    return CFEqual(a1, a2);
  return 0;
}

CFMutableArrayRef createFixedMutableArray(void *a1)
{
  CFIndex v2;

  v2 = objc_msgSend(a1, "count");
  if (v2)
    return CFArrayCreateMutableCopy(0, v2, (CFArrayRef)a1);
  if (a1)
    return (CFMutableArrayRef)(id)objc_msgSend(MEMORY[0x1E0C99D20], "array");
  return 0;
}

void sub_1A508FAA0(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, __int128 buf)
{
  id v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;

  if (a2 == 1)
  {
    v11 = objc_begin_catch(a1);
    v12 = MFLogGeneral();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      v13 = objc_msgSend(v11, "name");
      v14 = objc_msgSend(v11, "reason");
      LODWORD(buf) = 138412546;
      *(_QWORD *)((char *)&buf + 4) = v13;
      WORD6(buf) = 2112;
      *(_QWORD *)((char *)&buf + 14) = v14;
      _os_log_impl(&dword_1A4F90000, v12, OS_LOG_TYPE_DEFAULT, "#Warning caught %@: %@", (uint8_t *)&buf, 0x16u);
    }
    objc_end_catch();
    JUMPOUT(0x1A508FA50);
  }
  _Unwind_Resume(a1);
}

uint64_t response(void *a1)
{
  int v2;
  uint64_t v3;
  void *v4;
  uint64_t result;

  v2 = objc_msgSend(a1, "lookAhead");
  if (v2 == 42)
  {
    objc_msgSend(a1, "increment");
LABEL_7:
    if ((objc_msgSend(a1, "parseSpace") & 1) == 0)
      objc_msgSend(a1, "emitWarning:", CFSTR("Expected space"));
    response_without_tag(a1);
    goto LABEL_10;
  }
  if (v2 == 43)
  {
    objc_msgSend(a1, "increment");
    objc_msgSend((id)objc_msgSend(a1, "response"), "setResponseType:", 1);
    resp_text(a1);
    goto LABEL_10;
  }
  v3 = objc_msgSend(a1, "copyAtom");
  if (v3)
  {
    v4 = (void *)v3;
    objc_msgSend((id)objc_msgSend(a1, "response"), "setTag:", v3);

    goto LABEL_7;
  }
LABEL_10:
  if (!*(_BYTE *)(objc_msgSend(a1, "response") + 8))
    return objc_msgSend(a1, "emitError:", CFSTR("Incomplete response"));
  result = objc_msgSend(a1, "lookAhead");
  if ((_DWORD)result)
    return objc_msgSend(a1, "emitWarning:", CFSTR("Junk at end of response"));
  return result;
}

void sub_1A508FD60(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

uint64_t MFCreateArrayForMessageFlags(uint64_t a1, int a2)
{
  void *v4;
  char **v5;
  uint64_t v7;

  v4 = 0;
  v5 = &IMAPMessageFlagsTable;
  do
  {
    if (((unint64_t)v5[1] & a1) != 0 && (!*((_BYTE *)v5 + 16) || a2 != 0))
    {
      v7 = objc_msgSend(MEMORY[0x1E0CB3940], "stringWithCString:encoding:", *v5, 1);
      if (v4)
        objc_msgSend(v4, "addObject:", v7);
      else
        v4 = (void *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99DE8]), "initWithObjects:", v7, 0);
    }
    v5 += 3;
  }
  while (v5 < (char **)status_response_KnownStatusCodes);
  if (v4)
    return (uint64_t)v4;
  else
    return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99D20]), "init");
}

uint64_t MFMessageFlagsFromArray(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t *v8;
  _QWORD v10[3];

  v10[2] = *MEMORY[0x1E0C80C00];
  v2 = objc_msgSend(a1, "count");
  v10[0] = 0;
  v10[1] = 0;
  if (!v2)
    return 0;
  v3 = v2;
  v4 = 0;
  do
  {
    while (1)
    {
      v5 = (void *)objc_msgSend((id)objc_msgSend(a1, "objectAtIndex:", --v3), "dataUsingEncoding:allowLossyConversion:", 1, 1);
      v6 = (const char *)objc_msgSend(v5, "bytes");
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
        break;
LABEL_8:
      if (!v3)
        return v4;
    }
    v7 = 0;
    v8 = &qword_1E4E8C570;
    while (*((_BYTE *)v10 + v7) || strncasecmp(v6, (const char *)*(v8 - 1), objc_msgSend(v5, "length")))
    {
      ++v7;
      v8 += 3;
      if (v7 == 16)
        goto LABEL_8;
    }
    *((_BYTE *)v10 + v7) = 1;
    v4 |= *v8;
  }
  while (v3);
  return v4;
}

void resp_text(void *a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  __CFString *v5;
  CFArrayRef v6;
  uint64_t v7;
  void *v8;
  void *v9;
  __CFString *v10;
  uint64_t v11;
  const __CFArray *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  NSObject *v19;
  uint64_t v20;
  void *v21;
  id v22;
  const __CFString *v23;
  uint64_t v24;
  void *v25;
  void *values;
  __CFString *v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  if ((objc_msgSend(a1, "parseSpace") & 1) == 0)
    objc_msgSend(a1, "emitWarning:", CFSTR("Expected space"));
  if (!objc_msgSend(a1, "match:", "["))
  {
    v7 = 0;
    v6 = 0;
    goto LABEL_50;
  }
  v2 = memchr((void *)objc_msgSend(a1, "start"), 93, objc_msgSend(a1, "end") - objc_msgSend(a1, "start"));
  v3 = (void *)objc_msgSend(a1, "start");
  v4 = (uint64_t)v2;
  if (!v2)
    v4 = objc_msgSend(a1, "end");
  v5 = (__CFString *)memchr(v3, 32, v4 - objc_msgSend(a1, "start"));
  if ((objc_msgSend(a1, "match:upToSpecial:", "ALERT", v2) & 1) != 0)
  {
    v6 = 0;
    v7 = 1;
    goto LABEL_47;
  }
  if ((objc_msgSend(a1, "match:upToSpecial:", "UNAVAILABLE", v2) & 1) != 0)
  {
    v6 = 0;
    v7 = 17;
    goto LABEL_47;
  }
  if ((objc_msgSend(a1, "match:upToSpecial:", "AUTHENTICATIONFAILED", v2) & 1) != 0)
  {
    v6 = 0;
    v7 = 18;
    goto LABEL_47;
  }
  if ((objc_msgSend(a1, "match:upToSpecial:", "AUTHORIZATIONFAILED", v2) & 1) != 0)
  {
    v6 = 0;
    v7 = 19;
    goto LABEL_47;
  }
  if ((objc_msgSend(a1, "match:upToSpecial:", "EXPIRED", v2) & 1) != 0)
  {
    v6 = 0;
    v7 = 20;
    goto LABEL_47;
  }
  if ((objc_msgSend(a1, "match:upToSpecial:", "PRIVACYREQUIRED", v2) & 1) != 0)
  {
    v6 = 0;
    v7 = 21;
    goto LABEL_47;
  }
  if ((objc_msgSend(a1, "match:upToSpecial:", "CONTACTADMIN", v2) & 1) != 0)
  {
    v6 = 0;
    v7 = 22;
    goto LABEL_47;
  }
  if ((objc_msgSend(a1, "match:upToSpecial:", "NOPERM", v2) & 1) != 0)
  {
    v6 = 0;
    v7 = 23;
    goto LABEL_47;
  }
  if ((objc_msgSend(a1, "match:upToSpecial:", "INUSE", v2) & 1) != 0)
  {
    v6 = 0;
    v7 = 24;
    goto LABEL_47;
  }
  if ((objc_msgSend(a1, "match:upToSpecial:", "EXPUNGEISSUED", v2) & 1) != 0)
  {
    v6 = 0;
    v7 = 25;
    goto LABEL_47;
  }
  if ((objc_msgSend(a1, "match:upToSpecial:", "CORRUPTION", v2) & 1) != 0)
  {
    v6 = 0;
    v7 = 26;
    goto LABEL_47;
  }
  if ((objc_msgSend(a1, "match:upToSpecial:", "SERVERBUG", v2) & 1) != 0)
  {
    v6 = 0;
    v7 = 27;
    goto LABEL_47;
  }
  if ((objc_msgSend(a1, "match:upToSpecial:", "CANNOT", v2) & 1) != 0)
  {
    v6 = 0;
    v7 = 29;
    goto LABEL_47;
  }
  if ((objc_msgSend(a1, "match:upToSpecial:", "LIMIT", v2) & 1) != 0)
  {
    v6 = 0;
    v7 = 30;
    goto LABEL_47;
  }
  if ((objc_msgSend(a1, "match:upToSpecial:", "OVERQUOTA", v2) & 1) != 0)
  {
    v6 = 0;
    v7 = 31;
    goto LABEL_47;
  }
  if ((objc_msgSend(a1, "match:upToSpecial:", "ALREADYEXISTS", v2) & 1) != 0)
  {
    v6 = 0;
    v7 = 32;
    goto LABEL_47;
  }
  if ((objc_msgSend(a1, "match:upToSpecial:", "NONEXISTENT", v2) & 1) != 0)
  {
    v6 = 0;
    v7 = 33;
    goto LABEL_47;
  }
  if ((objc_msgSend(a1, "match:upToSpecial:", "BADCHARSET", v5) & 1) == 0
    && !objc_msgSend(a1, "match:upToSpecial:", "BADCHARSET", v2))
  {
    if (objc_msgSend(a1, "match:upToSpecial:", "NEWNAME", v5))
    {
      objc_msgSend(a1, "parseSpace");
      v9 = mailbox(a1);
      values = v9;
      objc_msgSend(a1, "parseSpace");
      v10 = mailbox(a1);
      v6 = 0;
      v27 = v10;
      if (v9 && v10)
      {
        v6 = CFArrayCreate(0, (const void **)&values, 2, MEMORY[0x1E0C9B378]);
        v9 = values;
      }

      v7 = 3;
      goto LABEL_47;
    }
    if ((objc_msgSend(a1, "match:upToSpecial:", "PARSE", v2) & 1) != 0)
    {
      v6 = 0;
      v7 = 4;
      goto LABEL_47;
    }
    if ((objc_msgSend(a1, "match:upToSpecial:", "READ-ONLY", v2) & 1) != 0)
    {
      v6 = 0;
      v7 = 6;
      goto LABEL_47;
    }
    if ((objc_msgSend(a1, "match:upToSpecial:", "READ-WRITE", v2) & 1) != 0)
    {
      v6 = 0;
      v7 = 7;
      goto LABEL_47;
    }
    if ((objc_msgSend(a1, "match:upToSpecial:", "TRYCREATE", v2) & 1) != 0)
    {
      v6 = 0;
      v7 = 8;
      goto LABEL_47;
    }
    if (objc_msgSend(a1, "match:upToSpecial:", "UIDNEXT", v5))
    {
      if ((objc_msgSend(a1, "parseSpace") & 1) == 0)
        objc_msgSend(a1, "emitWarning:", CFSTR("Expected space"));
      v6 = (CFArrayRef)objc_msgSend(a1, "copyNumber");
      v7 = 9;
      goto LABEL_47;
    }
    if (objc_msgSend(a1, "match:upToSpecial:", "HIGHESTMODSEQ", v5))
    {
      if ((objc_msgSend(a1, "parseSpace") & 1) == 0)
        objc_msgSend(a1, "emitWarning:", CFSTR("Expected space"));
      v6 = (CFArrayRef)objc_msgSend(a1, "copyNumber");
      v7 = 12;
      goto LABEL_47;
    }
    if (objc_msgSend(a1, "match:upToSpecial:", "UIDVALIDITY", v5))
    {
      if ((objc_msgSend(a1, "parseSpace") & 1) == 0)
        objc_msgSend(a1, "emitWarning:", CFSTR("Expected space"));
      v6 = (CFArrayRef)objc_msgSend(a1, "copyNumber");
      v7 = 10;
      goto LABEL_47;
    }
    if ((objc_msgSend(a1, "match:upToSpecial:", "NOMODSEQ", v2) & 1) != 0)
    {
      v6 = 0;
      v7 = 13;
      goto LABEL_47;
    }
    if (objc_msgSend(a1, "match:upToSpecial:", "UNSEEN", v5))
    {
      if ((objc_msgSend(a1, "parseSpace") & 1) == 0)
        objc_msgSend(a1, "emitWarning:", CFSTR("Expected space"));
      v6 = (CFArrayRef)objc_msgSend(a1, "copyNumber");
      v7 = 11;
      goto LABEL_47;
    }
    if (objc_msgSend(a1, "match:upToSpecial:", "PERMANENTFLAGS", v5))
    {
      if ((objc_msgSend(a1, "parseSpace") & 1) == 0)
        objc_msgSend(a1, "emitWarning:", CFSTR("Expected space"));
      v6 = flags_array(a1);
      v7 = 5;
      goto LABEL_47;
    }
    if (objc_msgSend(a1, "match:upToSpecial:", "CAPABILITY", v5))
    {
      v11 = objc_msgSend(a1, "end");
      if (v2)
        objc_msgSend(a1, "setEnd:", v2);
      v12 = (const __CFArray *)capability_array(a1);
      objc_msgSend(a1, "setEnd:", v11);
      if (!v2)
        v2 = (void *)objc_msgSend(a1, "end");
      objc_msgSend(a1, "setStart:", v2);
      v7 = 14;
      v6 = v12;
      goto LABEL_47;
    }
    if (objc_msgSend(a1, "match:upToSpecial:", "APPENDUID", v5))
    {
      if ((objc_msgSend(a1, "parseSpace") & 1) == 0)
        objc_msgSend(a1, "emitWarning:", CFSTR("Expected space"));
      v13 = (void *)objc_msgSend(a1, "copyNumber");
      if (v13)
      {
        if ((objc_msgSend(a1, "parseSpace") & 1) == 0)
          objc_msgSend(a1, "emitWarning:", CFSTR("Expected space"));
        v14 = (void *)objc_msgSend(a1, "copyNumber");
        if (v14)
        {
          v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99D20]), "initWithObjects:", v13, v14, 0);
          v7 = 15;
LABEL_117:

          v6 = (CFArrayRef)v15;
          goto LABEL_47;
        }
      }
      else
      {
        v14 = 0;
      }
      v7 = 0;
      v15 = 0;
      goto LABEL_117;
    }
    if (!objc_msgSend(a1, "match:upToSpecial:", "COPYUID", v5))
    {
      if (objc_msgSend(a1, "match:upToSpecial:", "CLIENTBUG", v2))
      {
        v19 = MFLogGeneral();
        if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
        {
          LOWORD(values) = 0;
          _os_log_impl(&dword_1A4F90000, v19, OS_LOG_TYPE_INFO, "We did something bad: we just got back a CLIENTBUG from the server.", (uint8_t *)&values, 2u);
        }
        v7 = 0;
        v6 = 0;
      }
      else
      {
        if (!v2)
          v2 = (void *)objc_msgSend(a1, "end");
        v20 = objc_msgSend(a1, "start");
        if (v5)
        {
          v21 = (void *)objc_msgSend(a1, "copyStringFrom:to:withCaseOption:", v20, v5, 1);
          v5 = (__CFString *)objc_msgSend(a1, "copyStringFrom:to:withCaseOption:", (char *)&v5->isa + 1, v2, 0);
        }
        else
        {
          v21 = (void *)objc_msgSend(a1, "copyStringFrom:to:withCaseOption:", v20, v2, 1);
        }
        v22 = objc_allocWithZone(MEMORY[0x1E0C99D20]);
        v23 = &stru_1E4F1C8F8;
        if (v5)
          v23 = v5;
        v24 = objc_msgSend(v22, "initWithObjects:", v21, v23, 0);

        v25 = v2;
        v6 = (CFArrayRef)v24;
        objc_msgSend(a1, "setStart:", v25);
        v7 = 34;
      }
      goto LABEL_47;
    }
    if ((objc_msgSend(a1, "parseSpace") & 1) == 0)
      objc_msgSend(a1, "emitWarning:", CFSTR("Expected space"));
    v16 = (void *)objc_msgSend(a1, "copyNumber");
    if (v16)
    {
      if ((objc_msgSend(a1, "parseSpace") & 1) == 0)
        objc_msgSend(a1, "emitWarning:", CFSTR("Expected space"));
      v17 = (void *)objc_msgSend(a1, "copyMessageSet");
      if (v17)
      {
        if ((objc_msgSend(a1, "parseSpace") & 1) == 0)
          objc_msgSend(a1, "emitWarning:", CFSTR("Expected space"));
        v18 = (void *)objc_msgSend(a1, "copyMessageSet");
        if (v18)
        {
          v6 = (CFArrayRef)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99D20]), "initWithObjects:", v16, v17, v18, 0);
          v7 = 16;
LABEL_125:

          goto LABEL_47;
        }
      }
      else
      {
        v18 = 0;
      }
    }
    else
    {
      v18 = 0;
      v17 = 0;
    }
    v7 = 0;
    v6 = 0;
    goto LABEL_125;
  }
  if (objc_msgSend(a1, "parseSpace"))
    v6 = (CFArrayRef)objc_msgSend(a1, "copyArray");
  else
    v6 = 0;
  v7 = 2;
LABEL_47:
  if ((objc_msgSend(a1, "match:", "]") & 1) == 0)
    objc_msgSend(a1, "emitWarning:", CFSTR("Expected ]"));
  objc_msgSend(a1, "parseSpace");
LABEL_50:
  v8 = (void *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D46080]), "initWithBytes:length:", objc_msgSend(a1, "start"), objc_msgSend(a1, "end") - objc_msgSend(a1, "start"));
  objc_msgSend(a1, "setEnd:", objc_msgSend(a1, "start"));
  objc_msgSend((id)objc_msgSend(a1, "response"), "setUserData:responseCode:responseInfo:", v8, v7, v6);

}

void capability_response(void *a1)
{
  id v2;

  v2 = capability_array(a1);
  objc_msgSend((id)objc_msgSend(a1, "response"), "setCapabilities:", v2);

}

void id_response(void *a1)
{
  void *v2;
  void *v3;
  id v4;

  if ((objc_msgSend(a1, "parseSpace") & 1) == 0)
    objc_msgSend(a1, "emitWarning:", CFSTR("Expected space"));
  v4 = objc_alloc_init(MEMORY[0x1E0C99E08]);
  if (objc_msgSend(a1, "match:", "("))
  {
    while ((objc_msgSend(a1, "match:", ")") & 1) == 0)
    {
      v2 = (void *)objc_msgSend(a1, "copyNilOrString");
      objc_msgSend(a1, "parseSpace");
      v3 = (void *)objc_msgSend(a1, "copyNilOrString");
      objc_msgSend(a1, "parseSpace");
      if (v2 && v3)
        objc_msgSend(v4, "mf_addObject:forKey:", v3, v2);

    }
  }
  else if ((objc_msgSend(a1, "match:", "NIL") & 1) == 0)
  {
    objc_msgSend(a1, "emitWarning:", CFSTR("Expected list or NIL"));
  }
  objc_msgSend((id)objc_msgSend(a1, "response"), "setServerInfo:", v4);

}

void flags_response(void *a1)
{
  __CFArray *v2;

  if ((objc_msgSend(a1, "parseSpace") & 1) == 0)
    objc_msgSend(a1, "emitWarning:", CFSTR("Expected space"));
  v2 = flags_array(a1);
  objc_msgSend((id)objc_msgSend(a1, "response"), "setResponseType:", 12);
  objc_msgSend((id)objc_msgSend(a1, "response"), "setFlags:", v2);

}

void status_response(void *a1)
{
  __CFString *v2;
  void *v3;
  unint64_t v4;
  unint64_t v5;
  _BYTE *v6;
  unint64_t v7;
  _BYTE *v8;
  unint64_t v9;
  unint64_t i;
  __CFString *v11;
  const void *v12;
  unint64_t v13;
  __CFString **v14;
  __CFString *v15;
  __CFDictionary *v16;
  __CFString *v17;
  __CFString *v18;
  CFMutableDictionaryRef theDict;

  objc_msgSend((id)objc_msgSend(a1, "response"), "setResponseType:", 13);
  if ((objc_msgSend(a1, "parseSpace") & 1) == 0)
    objc_msgSend(a1, "emitWarning:", CFSTR("Expected space"));
  v2 = mailbox(a1);
  if ((objc_msgSend(a1, "parseSpace") & 1) == 0)
    objc_msgSend(a1, "emitWarning:", CFSTR("Expected space"));
  v3 = (void *)objc_msgSend(a1, "copyArray");
  if (!v3)
  {
    v5 = objc_msgSend(a1, "end") - 1;
    do
    {
      v6 = (_BYTE *)v5;
      if (v5 <= objc_msgSend(a1, "start"))
        break;
      v5 = (unint64_t)(v6 - 1);
    }
    while (*v6 != 41);
    v7 = (unint64_t)(v6 - 1);
    do
    {
      v8 = (_BYTE *)v7;
      if (v7 <= objc_msgSend(a1, "start"))
        break;
      v7 = (unint64_t)(v8 - 1);
    }
    while (*v8 != 40);
    if ((unint64_t)v8 <= objc_msgSend(a1, "start")
      || (objc_msgSend(a1, "setStart:", v8), (v3 = (void *)objc_msgSend(a1, "copyArray")) == 0))
    {
      theDict = 0;
      goto LABEL_33;
    }
  }
  v4 = objc_msgSend(v3, "count");
  if (v4 <= 1)
  {
    theDict = (CFMutableDictionaryRef)(id)objc_msgSend(MEMORY[0x1E0C99D80], "dictionary");
    goto LABEL_32;
  }
  v9 = v4;
  v18 = v2;
  theDict = CFDictionaryCreateMutable(0, v4 >> 1, MEMORY[0x1E0C9B390], MEMORY[0x1E0C9B3A0]);
  for (i = 1; i < v9; i += 2)
  {
    v11 = (__CFString *)objc_msgSend(v3, "objectAtIndex:", i - 1, v18);
    v12 = (const void *)objc_msgSend(v3, "objectAtIndex:", i);
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
      goto LABEL_28;
    v13 = 0;
    do
    {
      v14 = status_response_KnownStatusCodes[v13];
      v15 = *v14;
      if (*v14 && -[__CFString caseInsensitiveCompare:](v11, "caseInsensitiveCompare:", *v14))
        v15 = 0;
      if (v13 > 4)
        break;
      ++v13;
    }
    while (!v15);
    if (v15)
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0)
        continue;
      v16 = theDict;
      v17 = v15;
    }
    else
    {
LABEL_28:
      v16 = theDict;
      v17 = v11;
    }
    CFDictionarySetValue(v16, v17, v12);
  }
  v2 = v18;
LABEL_32:

LABEL_33:
  objc_msgSend((id)objc_msgSend(a1, "response"), "setMailboxName:statusEntries:", v2, theDict);

}

void search_response(void *a1)
{
  void *v2;
  void *v3;
  __CFArray *theArray;

  theArray = CFArrayCreateMutable(0, 0, MEMORY[0x1E0C9B378]);
  objc_msgSend((id)objc_msgSend(a1, "response"), "setResponseType:", 14);
  if (objc_msgSend(a1, "parseSpace"))
  {
    do
    {
      v2 = (void *)objc_msgSend(a1, "copyNumber");
      if (!v2)
        break;
      v3 = v2;
      CFArrayAppendValue(theArray, v2);

    }
    while ((objc_msgSend(a1, "parseSpace") & 1) != 0);
  }
  objc_msgSend((id)objc_msgSend(a1, "response"), "setSearchResults:", theArray);

}

void list_response(void *a1)
{
  __CFArray *v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  __CFString **v9;
  id v10;
  void *v11;
  __CFString *v12;

  if ((objc_msgSend(a1, "parseSpace") & 1) == 0)
    objc_msgSend(a1, "emitWarning:", CFSTR("Expected space"));
  v2 = flags_array(a1);
  if ((objc_msgSend(a1, "parseSpace") & 1) == 0)
    objc_msgSend(a1, "emitWarning:", CFSTR("Expected space"));
  v3 = (void *)objc_msgSend(a1, "copyNilOrString");
  if (!objc_msgSend(v3, "length"))
  {

    v3 = 0;
  }
  if ((objc_msgSend(a1, "parseSpace") & 1) == 0)
    objc_msgSend(a1, "emitWarning:", CFSTR("Expected space"));
  v12 = mailbox(a1);
  if (v2)
  {
    v11 = v3;
    v4 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
    v5 = -[__CFArray count](v2, "count");
    if (v5)
    {
      v6 = v5;
      v7 = 0;
      do
      {
        while (1)
        {
          v8 = -[__CFArray objectAtIndex:](v2, "objectAtIndex:", --v6, v11);
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) != 0)
            break;
LABEL_17:
          if (!v6)
            goto LABEL_23;
        }
        v9 = &IMAPMailboxAttributeEntries;
        while (-[__CFString compare:options:](*v9, "compare:options:", v8, 1))
        {
          v9 += 2;
          if (v9 >= (__CFString **)&__block_descriptor_40_e8_32o_e25___NSURL_16__0__NSString_8ls32l8)
          {
            objc_msgSend(v4, "insertObject:atIndex:", v8, 0);
            goto LABEL_17;
          }
        }
        v7 |= *((_DWORD *)v9 + 2);
      }
      while (v6);
    }
    else
    {
      v7 = 0;
    }
LABEL_23:
    v10 = v4;

    v2 = (__CFArray *)v7;
    v3 = v11;
  }
  else
  {
    v10 = 0;
  }
  objc_msgSend((id)objc_msgSend(a1, "response", v11), "setMailboxAttributes:separator:mailboxName:extraAttributes:", v2, v3, v12, v10);

}

void fetch_response(void *a1)
{
  unint64_t v2;
  __int128 v3;
  id v4;
  _BOOL4 v5;
  const char *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  MFIMAPFetchResult *v12;
  void *v13;
  NSObject *v14;
  uint64_t v15;
  void *v16;
  const __CFString *v17;
  void *v18;
  void *v19;
  CFTypeID TypeID;
  id v21;
  unint64_t v22;
  id v23;
  void *v24;
  void *v25;
  const __CFString *v26;
  void *v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  unint64_t v31;
  unsigned __int8 *v32;
  const char *v33;
  uint64_t v34;
  unint64_t v35;
  void *v36;
  void *v37;
  const char *v38;
  size_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  BOOL v43;
  int v44;
  uint64_t v45;
  void *v46;
  int v47;
  char *v48;
  char *v49;
  char *v50;
  char v51;
  const __CFString *v52;
  const __CFString *v53;
  __int128 v54;
  uint64_t v55;
  _QWORD v56[5];
  uint8_t buf[24];
  uint64_t v58;

  v58 = *MEMORY[0x1E0C80C00];
  objc_msgSend((id)objc_msgSend(a1, "response"), "setResponseType:", 17);
  if ((objc_msgSend(a1, "parseSpace") & 1) == 0)
    objc_msgSend(a1, "emitWarning:", CFSTR("Expected space"));
  if ((objc_msgSend(a1, "match:", "(") & 1) == 0)
    objc_msgSend(a1, "emitError:", CFSTR("Invalid FETCH response"));
  v2 = objc_msgSend(a1, "start");
  if (v2 < objc_msgSend(a1, "end"))
  {
    v4 = 0;
    v5 = 1;
    v6 = ")";
    *(_QWORD *)&v3 = 138412290;
    v54 = v3;
    while (1)
    {
      if ((objc_msgSend(a1, "match:", v6, v54) & 1) != 0)
        goto LABEL_144;
      if (v4)
      {
        if ((objc_msgSend(a1, "parseSpace") & 1) == 0 && v5)
        {
          objc_msgSend(a1, "emitWarning:", CFSTR("Expected space"));
          goto LABEL_144;
        }
      }
      else
      {
        v4 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
      }
      v7 = (char *)memchr((void *)objc_msgSend(a1, "start"), 32, objc_msgSend(a1, "end") - objc_msgSend(a1, "start"));
      if (!v7)
      {
LABEL_142:
        v53 = CFSTR("Couldn't parse FETCH: no space character in input");
        goto LABEL_143;
      }
      v8 = v7;
      if ((objc_msgSend(a1, "match:upToSpecial:", "BODYSTRUCTURE", v7) & 1) != 0
        || (objc_msgSend(a1, "match:upToSpecial:", "BODY", v8) & 1) != 0)
      {
        break;
      }
      if ((objc_msgSend(a1, "match:upToSpecial:", "ENVELOPE", v8) & 1) != 0)
      {
        v9 = 0;
        v10 = 0;
        v11 = 1;
        goto LABEL_17;
      }
      if ((objc_msgSend(a1, "match:upToSpecial:", "UID", v8) & 1) != 0)
      {
        v9 = 0;
        v10 = 0;
        v11 = 8;
        goto LABEL_17;
      }
      if ((objc_msgSend(a1, "match:upToSpecial:", "X-GM-MSGID", v8) & 1) != 0)
      {
        v9 = 0;
        v10 = 0;
        v11 = 9;
        goto LABEL_17;
      }
      if ((objc_msgSend(a1, "match:upToSpecial:", "RFC822.SIZE", v8) & 1) != 0)
      {
        v9 = 0;
        v10 = 0;
        v11 = 3;
        goto LABEL_17;
      }
      if ((objc_msgSend(a1, "match:upToSpecial:", "RFC822", v8) & 1) != 0)
      {
        v9 = 0;
        v10 = 0;
        v11 = 7;
        goto LABEL_17;
      }
      if ((objc_msgSend(a1, "match:upToSpecial:", "RFC822.HEADER", v8) & 1) != 0
        || (objc_msgSend(a1, "match:upToSpecial:", "HEADER", v8) & 1) != 0)
      {
        v9 = 0;
        v10 = 0;
        v11 = 4;
        goto LABEL_17;
      }
      if ((objc_msgSend(a1, "match:upToSpecial:", "RFC822.TEXT", v8) & 1) != 0
        || (objc_msgSend(a1, "match:upToSpecial:", "TEXT", v8) & 1) != 0)
      {
        v9 = 0;
        v10 = 0;
        v11 = 5;
        goto LABEL_17;
      }
      if ((objc_msgSend(a1, "match:upToSpecial:", "FLAGS", v8) & 1) != 0)
      {
        v9 = 0;
        v10 = 0;
        v11 = 10;
        goto LABEL_17;
      }
      if ((objc_msgSend(a1, "match:upToSpecial:", "MODSEQ", v8) & 1) != 0)
      {
        v9 = 0;
        v10 = 0;
        v11 = 11;
        goto LABEL_17;
      }
      if ((objc_msgSend(a1, "match:upToSpecial:", "INTERNALDATE", v8) & 1) != 0)
      {
        v9 = 0;
        v10 = 0;
        v11 = 2;
        goto LABEL_17;
      }
      if (objc_msgSend(a1, "match:", "BODY["))
      {
        v45 = objc_msgSend(a1, "start");
        if (objc_msgSend(a1, "match:", "HEADER."))
        {
          objc_msgSend(a1, "setStart:", v8 + 1);
          v46 = (void *)objc_msgSend(a1, "copyArray");
          if (v46)

          else
            objc_msgSend(a1, "emitWarning:", CFSTR("Unable to parse header keys array"));
          v50 = (char *)memchr((void *)objc_msgSend(a1, "start"), 32, objc_msgSend(a1, "end") - objc_msgSend(a1, "start"));
          if (!v50)
            goto LABEL_142;
          v8 = v50;
LABEL_133:
          v10 = 0;
          v11 = 4;
        }
        else
        {
          if ((objc_msgSend(a1, "match:upToSpecial:", "HEADER", v8) & 1) != 0)
            goto LABEL_133;
          v48 = (char *)memchr((void *)objc_msgSend(a1, "start"), 93, objc_msgSend(a1, "end") - objc_msgSend(a1, "start"));
          if (!v48)
          {
            v53 = CFSTR("Couldn't parse FETCH: no square brace character in input");
            goto LABEL_143;
          }
          v49 = v48;
          v10 = (void *)objc_msgSend(a1, "copyStringFrom:to:withCaseOption:", v45, v48, 1);
          objc_msgSend(a1, "setStart:", v49 + 1);
          v11 = 7;
        }
        if (objc_msgSend(a1, "match:", "<"))
        {
          *(_QWORD *)buf = 0xAAAAAAAAAAAAAAAALL;
          if (objc_msgSend(a1, "getNumber:", buf))
          {
            v9 = *(_QWORD *)buf;
            v51 = objc_msgSend(a1, "match:", ">");
            v52 = CFSTR("Expected >");
            if ((v51 & 1) != 0)
              goto LABEL_17;
          }
          else
          {
            v9 = 0;
            v52 = CFSTR("Expected number");
          }
          objc_msgSend(a1, "emitWarning:", v52);
        }
        else
        {
          v9 = 0;
        }
LABEL_17:
        objc_msgSend(a1, "isValid");
        goto LABEL_18;
      }
      v47 = objc_msgSend(a1, "match:upToSpecial:", "X-APPLE-REMOTE-LINKS", v8);
      if (v47)
        v11 = 12;
      else
        v11 = 0;
      v10 = 0;
      v9 = 0;
      if (objc_msgSend(a1, "isValid") && !v47)
      {
        v53 = CFSTR("Unrecognized FETCH key");
LABEL_143:
        objc_msgSend(a1, "emitError:", v53);
        goto LABEL_144;
      }
LABEL_18:
      objc_msgSend(a1, "setStart:", v8);
      if ((objc_msgSend(a1, "parseSpace") & 1) == 0)
        objc_msgSend(a1, "emitWarning:", CFSTR("Expected space"));
      objc_msgSend(a1, "logReadChars");
      v12 = -[MFIMAPFetchResult initWithType:]([MFIMAPFetchResult alloc], "initWithType:", v11);
      switch(v11)
      {
        case 1:
          v13 = (void *)objc_msgSend(a1, "copyArray");
          -[MFIMAPFetchResult setEnvelope:](v12, "setEnvelope:", v13);
          goto LABEL_49;
        case 2:
          v13 = (void *)objc_msgSend(a1, "copyDateTime");
          -[MFIMAPFetchResult setInternalDate:](v12, "setInternalDate:", v13);
          v14 = MFLogGeneral();
          if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
          {
            v15 = objc_msgSend(v13, "description");
            *(_DWORD *)buf = v54;
            *(_QWORD *)&buf[4] = v15;
            _os_log_impl(&dword_1A4F90000, v14, OS_LOG_TYPE_INFO, "#Power [Server Fetch Time] InternalDate=%@", buf, 0xCu);
          }
          goto LABEL_49;
        case 3:
          v13 = (void *)objc_msgSend(a1, "copyNumber");
          -[MFIMAPFetchResult setMessageSize:](v12, "setMessageSize:", objc_msgSend(v13, "unsignedIntValue"));
          goto LABEL_49;
        case 4:
          v16 = a1;
          v17 = CFSTR("HEADER");
          goto LABEL_31;
        case 5:
          v16 = a1;
          v17 = CFSTR("TEXT");
LABEL_31:
          v18 = (void *)body_data(v16, (uint64_t)v17);
          if (v9)
            -[MFIMAPFetchResult setStartOffset:](v12, "setStartOffset:", v9);
          if (!v18)
            goto LABEL_50;
          goto LABEL_46;
        case 6:
          v19 = (void *)objc_msgSend(a1, "copyArrayAllowingNulls:", 1);
          if (v19)
          {
            TypeID = CFArrayGetTypeID();
            if (TypeID != CFGetTypeID(v19))
            {

              v19 = 0;
            }
          }
          v5 = v19 != 0;
          -[MFIMAPFetchResult setBodyStructure:](v12, "setBodyStructure:", v19);

          goto LABEL_51;
        case 7:
          v21 = objc_alloc_init(MEMORY[0x1E0CB37A0]);
          objc_msgSend(v21, "appendString:", CFSTR("BODY.PEEK["));
          if (v10)
            objc_msgSend(v21, "appendString:", v10);
          objc_msgSend(v21, "appendString:", CFSTR("]"));
          v18 = (void *)body_data(a1, (uint64_t)v10);
          if (v10)
          {
            -[MFIMAPFetchResult setSection:](v12, "setSection:", v10);

          }
          if (v9)
            -[MFIMAPFetchResult setStartOffset:](v12, "setStartOffset:", v9);

          if (v18)
          {
LABEL_46:
            -[MFIMAPFetchResult setFetchData:](v12, "setFetchData:", v18);

          }
          goto LABEL_50;
        case 8:
          v13 = (void *)objc_msgSend(a1, "copyNumber");
          -[MFIMAPFetchResult setUid:](v12, "setUid:", objc_msgSend(v13, "unsignedIntValue"));
          goto LABEL_49;
        case 9:
          v13 = (void *)objc_msgSend(a1, "copyNumber");
          -[MFIMAPFetchResult setUniqueRemoteId:](v12, "setUniqueRemoteId:", objc_msgSend(v13, "unsignedLongLongValue"));
LABEL_49:

          goto LABEL_50;
        case 10:
          if (!objc_msgSend(a1, "match:", "(") || (objc_msgSend(a1, "match:", v6) & 1) != 0)
          {
            v55 = 0;
            v23 = 0;
            goto LABEL_56;
          }
          v23 = 0;
          v55 = 0;
          v29 = 1;
          break;
        case 11:
          if (!objc_msgSend(a1, "match:", "("))
            goto LABEL_50;
          v24 = (void *)objc_msgSend(a1, "copyNumber");
          -[MFIMAPFetchResult setModSequenceNumber:](v12, "setModSequenceNumber:", objc_msgSend(v24, "unsignedLongLongValue"));

          if ((objc_msgSend(a1, "match:", v6) & 1) != 0)
            goto LABEL_50;
          v25 = a1;
          v26 = CFSTR("Expected a right paren");
          goto LABEL_102;
        case 12:
          v27 = (void *)objc_msgSend(a1, "copyArray");
          if (v27 || (objc_msgSend(a1, "match:", "NIL") & 1) != 0)
          {
            v56[0] = MEMORY[0x1E0C809B0];
            v56[1] = 3221225472;
            v56[2] = __fetch_response_block_invoke;
            v56[3] = &unk_1E4E8C790;
            v56[4] = a1;
            v28 = objc_msgSend(v27, "ef_compactMap:", v56);

            -[MFIMAPFetchResult setAppleRemoteLinks:](v12, "setAppleRemoteLinks:", v28);
          }
          else
          {
            v25 = a1;
            v26 = CFSTR("Couldn't parse FETCH: X-APPLE-REMOTE-LINKS has invalid format");
LABEL_102:
            objc_msgSend(v25, "emitError:", v26);
          }
          goto LABEL_50;
        default:
          goto LABEL_50;
      }
      do
      {
        if ((v29 & 1) == 0)
        {
          while (1)
          {
            v30 = objc_msgSend(a1, "start");
            if (v30 >= objc_msgSend(a1, "end")
              || (objc_msgSend(a1, "parseSpace") & 1) != 0
              || objc_msgSend(a1, "lookAhead") == 41)
            {
              break;
            }
            objc_msgSend(a1, "increment");
          }
          if ((objc_msgSend(a1, "match:", v6) & 1) != 0)
            break;
        }
        if (objc_msgSend(a1, "lookAhead") == 92)
        {
          v31 = objc_msgSend(a1, "start") + 1;
          if (v31 < objc_msgSend(a1, "end") && *(_BYTE *)(objc_msgSend(a1, "start") + 1) == 42)
          {
            v32 = (unsigned __int8 *)(objc_msgSend(a1, "start") + 2);
          }
          else
          {
            v35 = objc_msgSend(a1, "start") + 1;
            do
            {
              v32 = (unsigned __int8 *)v35;
              if (v35 >= objc_msgSend(a1, "end"))
                break;
              ++v35;
            }
            while (mf_isIMAPAtom(*v32));
          }
          if ((uint64_t)&v32[-objc_msgSend(a1, "start")] < 2)
            break;
          v33 = v6;
          v36 = (void *)objc_msgSend(a1, "copyStringFrom:to:withCaseOption:", objc_msgSend(a1, "start"), v32, 0);
          objc_msgSend(a1, "setStart:", v32);
        }
        else
        {
          v33 = v6;
          if (objc_msgSend(a1, "lookAhead") == 34)
            v34 = objc_msgSend(a1, "copyQuotedString");
          else
            v34 = objc_msgSend(a1, "copyAtom");
          v36 = (void *)v34;
        }
        if (!v36)
        {
          v6 = v33;
          break;
        }
        v37 = (void *)objc_msgSend(v36, "dataUsingEncoding:allowLossyConversion:", 1, 1);
        v38 = (const char *)objc_msgSend(v37, "bytes");
        v39 = objc_msgSend(v37, "length");
        v40 = 0;
        do
        {
          v41 = strncasecmp(v38, (&IMAPMessageFlagsTable)[v40], v39);
          v42 = v40 * 8 + 24;
          if (!v41)
            break;
          v43 = v40 == 45;
          v40 += 3;
        }
        while (!v43);
        if (v41)
        {
          v6 = v33;
          if (!v23)
            v23 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
          objc_msgSend(v23, "addObject:", v36);
        }
        else
        {
          v55 |= *(unint64_t *)((char *)&IMAPMessageFlagsTable + v42 - 16);
          v6 = v33;
        }

        v44 = objc_msgSend(a1, "match:", v6);
        v29 = 0;
      }
      while (!v44);
LABEL_56:
      -[MFIMAPFetchResult setMessageFlags:](v12, "setMessageFlags:", v55);
      -[MFIMAPFetchResult setCustomFlagsArray:](v12, "setCustomFlagsArray:", v23);

LABEL_50:
      v5 = 1;
LABEL_51:
      objc_msgSend(v4, "addObject:", v12);

      v22 = objc_msgSend(a1, "start");
      if (v22 >= objc_msgSend(a1, "end"))
        goto LABEL_144;
    }
    v9 = 0;
    v10 = 0;
    v11 = 6;
    goto LABEL_17;
  }
  v4 = 0;
LABEL_144:
  objc_msgSend((id)objc_msgSend(a1, "response"), "setFetchResults:", v4);
  if (v4)

}

void quotaroot_response(void *a1)
{
  void *v2;
  const CFArrayCallBacks *v3;
  uint64_t v4;
  void *v5;
  CFMutableArrayRef Mutable;
  CFAllocatorRef allocator;

  objc_msgSend((id)objc_msgSend(a1, "response"), "setResponseType:", 18);
  if (objc_msgSend(a1, "parseSpace"))
  {
    v2 = (void *)objc_msgSend(a1, "copyAString");
    if (v2 && objc_msgSend(a1, "parseSpace"))
    {
      allocator = 0;
      v3 = (const CFArrayCallBacks *)MEMORY[0x1E0C9B378];
      do
      {
        v4 = objc_msgSend(a1, "copyAString");
        if (!v4)
          break;
        v5 = (void *)v4;
        Mutable = allocator;
        if (!allocator)
          Mutable = CFArrayCreateMutable(0, 0, v3);
        allocator = Mutable;
        -[__CFArray addObject:](Mutable, "addObject:", v5);

      }
      while ((objc_msgSend(a1, "parseSpace") & 1) != 0);
    }
    else
    {
      allocator = 0;
    }
  }
  else
  {
    allocator = 0;
    v2 = 0;
  }
  objc_msgSend((id)objc_msgSend(a1, "response"), "setMailboxName:quotaRootNames:", v2, allocator);

}

void quota_response(void *a1)
{
  void *v2;
  const CFDictionaryKeyCallBacks *v3;
  const CFDictionaryValueCallBacks *v4;
  void *v5;
  void *v6;
  void *v7;
  CFMutableDictionaryRef Mutable;
  CFMutableArrayRef v9;
  CFAllocatorRef allocator;

  objc_msgSend((id)objc_msgSend(a1, "response"), "setResponseType:", 19);
  if ((objc_msgSend(a1, "parseSpace") & 1) == 0)
    objc_msgSend(a1, "emitWarning:", CFSTR("Expected space"));
  v2 = (void *)objc_msgSend(a1, "copyAString");
  if (v2 && objc_msgSend(a1, "parseSpace") && objc_msgSend(a1, "match:", "("))
  {
    allocator = 0;
    v3 = (const CFDictionaryKeyCallBacks *)MEMORY[0x1E0C9AEB8];
    v4 = (const CFDictionaryValueCallBacks *)MEMORY[0x1E0C9B3A0];
    do
    {
      v5 = (void *)objc_msgSend(a1, "copyAtom");
      if ((objc_msgSend(a1, "parseSpace") & 1) == 0)
        objc_msgSend(a1, "emitWarning:", CFSTR("Expected space"));
      v6 = (void *)objc_msgSend(a1, "copyNumber");
      if ((objc_msgSend(a1, "parseSpace") & 1) == 0)
        objc_msgSend(a1, "emitWarning:", CFSTR("Expected space"));
      v7 = (void *)objc_msgSend(a1, "copyNumber");
      if (v5)
      {
        Mutable = CFDictionaryCreateMutable(0, 3, v3, v4);
        -[__CFDictionary setObject:forKey:](Mutable, "setObject:forKey:", v5, CFSTR("_IMAPNameQuotaKey"));
        if (v6)
          -[__CFDictionary setObject:forKey:](Mutable, "setObject:forKey:", v6, CFSTR("_IMAPCurrentUsageQuotaKey"));
        if (v7)
          -[__CFDictionary setObject:forKey:](Mutable, "setObject:forKey:", v7, CFSTR("_IMAPMaxUsageQuotaKey"));
        v9 = allocator;
        if (!allocator)
          v9 = CFArrayCreateMutable(0, 0, MEMORY[0x1E0C9B378]);
        allocator = v9;
        -[__CFArray addObject:](v9, "addObject:", Mutable);

      }
    }
    while ((objc_msgSend(a1, "parseSpace") & 1) != 0);
  }
  else
  {
    allocator = 0;
  }
  objc_msgSend((id)objc_msgSend(a1, "response"), "setQuotaRootName:quotas:", v2, allocator);

}

uint64_t esearch_response(void *a1)
{
  objc_msgSend((id)objc_msgSend(a1, "response"), "setResponseType:", 20);
  return objc_msgSend((id)objc_msgSend(a1, "connection"), "parseESearchResponseWithContext:", a1);
}

void push_response(void *a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;

  if ((objc_msgSend(a1, "parseSpace") & 1) == 0)
    objc_msgSend(a1, "emitWarning:", CFSTR("Expected space"));
  v6 = objc_alloc_init(MEMORY[0x1E0C99E08]);
  v2 = (void *)objc_msgSend(a1, "copyNilOrString");
  objc_msgSend(a1, "parseSpace");
  v3 = objc_msgSend(a1, "copyNilOrString");
  v4 = (void *)v3;
  if (v2 && v3)
  {
    do
    {
      objc_msgSend(v6, "mf_addObject:forKey:", v4, v2);

      objc_msgSend(a1, "parseSpace");
      v2 = (void *)objc_msgSend(a1, "copyNilOrString");
      objc_msgSend(a1, "parseSpace");
      v5 = objc_msgSend(a1, "copyNilOrString");
      v4 = (void *)v5;
    }
    while (v2 && v5);
  }

  objc_msgSend((id)objc_msgSend(a1, "response"), "setServerInfo:", v6);
}

void namespace_response(void *a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  _QWORD v6[2];
  void *(*v7)(uint64_t);
  void *v8;
  void *v9;

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v7 = __namespace_response_block_invoke;
  v8 = &unk_1E4E8C7B8;
  v9 = a1;
  v2 = __namespace_response_block_invoke((uint64_t)v6);
  v3 = __namespace_response_block_invoke((uint64_t)v6);
  v4 = v7((uint64_t)v6);
  v5 = (void *)objc_msgSend(a1, "response");
  objc_msgSend(v5, "setResponseType:", 22);
  objc_msgSend(v5, "setPrivateNamespaces:", v2);
  objc_msgSend(v5, "setPublicNamespaces:", v3);
  objc_msgSend(v5, "setSharedNamespaces:", v4);

}

void other_response(void *a1)
{
  void *v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;

  objc_msgSend((id)objc_msgSend(a1, "response"), "setResponseType:", 23);
  objc_msgSend(a1, "parseSpace");
  v2 = (void *)objc_msgSend(a1, "copyAtom");
  if (objc_msgSend(a1, "parseSpace"))
  {
    v8 = 0;
    while (1)
    {
      v3 = objc_msgSend(a1, "start");
      if (v3 >= objc_msgSend(a1, "end"))
        goto LABEL_19;
      v4 = objc_msgSend(a1, "lookAhead");
      switch(v4)
      {
        case '"':
          v5 = objc_msgSend(a1, "copyQuotedString");
          break;
        case '(':
          v5 = objc_msgSend(a1, "copyArray");
          break;
        case '{':
          v5 = objc_msgSend(a1, "copyLiteralString");
          break;
        default:
          v6 = (void *)objc_msgSend(a1, "copyNumber");
          v7 = v8;
          if (v6)
            goto LABEL_13;
          v5 = objc_msgSend(a1, "copyAtom");
          break;
      }
      v6 = (void *)v5;
      v7 = v8;
      if (v6)
      {
LABEL_13:
        if (!v7)
          v7 = (void *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99DE8]), "init");
        v8 = v7;
        objc_msgSend(v7, "addObject:", v6);

      }
      if ((objc_msgSend(a1, "parseSpace") & 1) == 0)
        goto LABEL_19;
    }
  }
  v8 = 0;
LABEL_19:
  objc_msgSend((id)objc_msgSend(a1, "response"), "setResponseName:parameters:", v2, v8);

}

__CFString *mailbox(void *a1)
{
  void *v1;

  v1 = (void *)objc_msgSend(a1, "copyAString");
  if (!v1 || objc_msgSend(CFSTR("INBOX"), "caseInsensitiveCompare:", v1))
    return (__CFString *)v1;

  return CFSTR("INBOX");
}

__CFArray *flags_array(void *a1)
{
  __CFArray *v2;
  unint64_t v3;
  unsigned __int8 *v4;
  uint64_t v5;
  unint64_t v6;
  void *v7;
  unint64_t v8;

  if (!objc_msgSend(a1, "match:", "("))
    return 0;
  v2 = (__CFArray *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99DE8]), "initWithCapacity:", 3);
  if ((objc_msgSend(a1, "match:", ")") & 1) == 0)
  {
    while (1)
    {
      if (objc_msgSend(a1, "lookAhead") == 92)
      {
        v3 = objc_msgSend(a1, "start") + 1;
        if (v3 < objc_msgSend(a1, "end") && *(_BYTE *)(objc_msgSend(a1, "start") + 1) == 42)
        {
          v4 = (unsigned __int8 *)(objc_msgSend(a1, "start") + 2);
        }
        else
        {
          v6 = objc_msgSend(a1, "start") + 1;
          do
          {
            v4 = (unsigned __int8 *)v6;
            if (v6 >= objc_msgSend(a1, "end"))
              break;
            ++v6;
          }
          while (mf_isIMAPAtom(*v4));
        }
        if ((uint64_t)&v4[-objc_msgSend(a1, "start")] < 2)
          return v2;
        v7 = (void *)objc_msgSend(a1, "copyStringFrom:to:withCaseOption:", objc_msgSend(a1, "start"), v4, 0);
        objc_msgSend(a1, "setStart:", v4);
        if (!v7)
          return v2;
      }
      else
      {
        if (objc_msgSend(a1, "lookAhead") == 34)
          v5 = objc_msgSend(a1, "copyQuotedString");
        else
          v5 = objc_msgSend(a1, "copyAtom");
        v7 = (void *)v5;
        if (!v5)
          return v2;
      }
      CFArrayAppendValue(v2, v7);

      if (!objc_msgSend(a1, "match:", ")"))
      {
        while (1)
        {
          v8 = objc_msgSend(a1, "start");
          if (v8 >= objc_msgSend(a1, "end")
            || (objc_msgSend(a1, "parseSpace") & 1) != 0
            || objc_msgSend(a1, "lookAhead") == 41)
          {
            break;
          }
          objc_msgSend(a1, "increment");
        }
        if ((objc_msgSend(a1, "match:", ")") & 1) == 0)
          continue;
      }
      return v2;
    }
  }
  return v2;
}

void *capability_array(void *a1)
{
  void *v2;
  unsigned __int8 *i;
  void *v4;

  v2 = (void *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99DE8]), "init");
  if (objc_msgSend(a1, "parseSpace"))
  {
    do
    {
      for (i = (unsigned __int8 *)objc_msgSend(a1, "start");
            (unint64_t)i < objc_msgSend(a1, "end") && mf_isIMAPAtom(*i);
      if ((unint64_t)i > objc_msgSend(a1, "start"))
      {
        v4 = (void *)objc_msgSend(a1, "copyStringFrom:to:withCaseOption:", objc_msgSend(a1, "start"), i, 1);
        objc_msgSend(a1, "setStart:", i);
        objc_msgSend(v2, "addObject:", v4);

      }
    }
    while ((objc_msgSend(a1, "parseSpace") & 1) != 0);
  }
  return v2;
}

uint64_t body_data(void *a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t result;

  v4 = objc_msgSend((id)objc_msgSend(a1, "response"), "responseConsumer");
  if (v4)
  {
    v5 = (void *)v4;
    if ((objc_msgSend(a1, "literalWithResponseConsumer:section:", v4, a2) & 1) == 0)
      objc_msgSend(v5, "appendData:forSection:", (id)nilOrString(a1), a2);
    return 0;
  }
  else
  {
    result = objc_msgSend(a1, "copyLiteral");
    if (!result)
      return nilOrString(a1);
  }
  return result;
}

uint64_t __fetch_response_block_invoke(uint64_t a1, uint64_t a2)
{
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    return objc_msgSend(MEMORY[0x1E0C99E98], "ef_urlWithString:", a2);
  objc_msgSend(*(id *)(a1 + 32), "emitWarning:", CFSTR("X-APPLE-REMOTE-LINKS contains non-string value"));
  return 0;
}

uint64_t nilOrString(void *a1)
{
  uint64_t result;
  void *v2;
  void *v3;
  uint64_t v4;

  result = objc_msgSend(a1, "copyNilOrString");
  if (result)
  {
    v2 = (void *)result;
    v3 = (void *)MFCreateDataWithString();

    v4 = objc_msgSend(objc_alloc(MEMORY[0x1E0D46080]), "initWithImmutableData:", v3);
    return v4;
  }
  return result;
}

void *__namespace_response_block_invoke(uint64_t a1)
{
  const __CFArray *v2;
  const __CFArray *v3;
  CFIndex Count;
  void *v5;
  CFIndex v6;
  const __CFArray *ValueAtIndex;
  const __CFArray *v8;
  CFTypeID v9;
  CFIndex v10;
  unint64_t v11;
  const void *v12;
  const void *v13;
  id v14;
  CFIndex v15;
  const void *v16;
  CFIndex v17;
  const void *v18;
  const void *v19;
  void *v20;
  void *v21;
  CFIndex v23;
  void *v24;

  if ((objc_msgSend(*(id *)(a1 + 32), "parseSpace") & 1) == 0)
    objc_msgSend(*(id *)(a1 + 32), "emitWarning:", CFSTR("Expected space"));
  v2 = (const __CFArray *)objc_msgSend(*(id *)(a1 + 32), "copyArrayAllowingNulls:", 1);
  if (v2)
  {
    v3 = v2;
    Count = CFArrayGetCount(v2);
    v5 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99DE8]), "initWithCapacity:", Count);
    if (Count >= 1)
    {
      v6 = 0;
      v23 = Count;
      do
      {
        ValueAtIndex = (const __CFArray *)CFArrayGetValueAtIndex(v3, v6);
        if (ValueAtIndex)
        {
          v8 = ValueAtIndex;
          v9 = CFGetTypeID(ValueAtIndex);
          if (v9 == CFArrayGetTypeID())
          {
            v10 = CFArrayGetCount(v8);
            if (v10 >= 2)
            {
              v11 = v10;
              v12 = CFArrayGetValueAtIndex(v8, 0);
              v13 = CFArrayGetValueAtIndex(v8, 1);
              objc_opt_class();
              if ((objc_opt_isKindOfClass() & 1) == 0 || v13 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
              {
                objc_msgSend(*(id *)(a1 + 32), "emitError:", CFSTR("couldn't parse namespace response: prefix and/or delimiter were not strings"), v23);

                v5 = 0;
              }
              v14 = objc_alloc_init(MEMORY[0x1E0C99E08]);
              objc_msgSend(v14, "setObject:forKeyedSubscript:", v12, CFSTR("_IMAPNamespacePrefixKey"));
              if (v13)
                objc_msgSend(v14, "setObject:forKeyedSubscript:", v13, CFSTR("_IMAPNamespaceDelimiterKey"));
              if (v11 < 3)
              {
                Count = v23;
              }
              else
              {
                if ((v11 & 1) != 0)
                {
                  objc_msgSend(*(id *)(a1 + 32), "emitError:", CFSTR("couldn't parse namespace response extensions: not enough values for keys"));
                  v20 = v5;
                  v5 = 0;
                  Count = v23;
                }
                else
                {
                  v24 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99E08]), "initWithCapacity:", (v11 >> 1) - 1);
                  v15 = 2;
                  do
                  {
                    v16 = CFArrayGetValueAtIndex(v8, v15);
                    v17 = v15 + 1;
                    v18 = CFArrayGetValueAtIndex(v8, v15 + 1);
                    if (v16
                      && (v19 = v18) != 0
                      && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)
                      && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
                    {
                      objc_msgSend(v24, "setObject:forKeyedSubscript:", v19, v16);
                    }
                    else
                    {
                      objc_msgSend(*(id *)(a1 + 32), "emitError:", CFSTR("couldn't parse namespace response extensions: invalid key or value"), v23);

                      v5 = 0;
                    }
                    v15 = v17 + 1;
                  }
                  while (v17 + 1 < (uint64_t)v11);
                  v20 = v24;
                  Count = v23;
                  if (objc_msgSend(v24, "count"))
                    objc_msgSend(v14, "setObject:forKeyedSubscript:", v24, CFSTR("_IMAPNamespaceExtensionsKey"));
                }

              }
              objc_msgSend(v5, "addObject:", v14, v23);

            }
          }
        }
        ++v6;
      }
      while (v6 != Count);
    }
    CFRelease(v3);
  }
  else
  {
    v21 = (void *)objc_msgSend(*(id *)(a1 + 32), "copyAtom");
    if (objc_msgSend(v21, "caseInsensitiveCompare:", CFSTR("NIL")))
      objc_msgSend(*(id *)(a1 + 32), "emitError:", CFSTR("couldn't parse NAMESPACE: unexpected atom"));

    return 0;
  }
  return v5;
}

_QWORD *response_without_tag(void *a1)
{
  unint64_t v2;
  _QWORD *matched;
  _QWORD *result;
  uint64_t (*v5)(void *);
  int v6;
  unint64_t v7;

  v7 = 0xAAAAAAAAAAAAAAAALL;
  if (!objc_msgSend(a1, "getNumber:", &v7))
  {
    if (objc_msgSend((id)objc_msgSend(a1, "response"), "isUntagged"))
      v6 = 1;
    else
      v6 = 2;
    result = matchResponseTableEntry(a1, v6);
    if (!result)
      return result;
    v5 = (uint64_t (*)(void *))result[2];
    if (!v5)
      return result;
    return (_QWORD *)v5(a1);
  }
  if ((objc_msgSend(a1, "parseSpace") & 1) == 0)
    objc_msgSend(a1, "emitWarning:", CFSTR("Expected space"));
  v2 = v7;
  matched = matchResponseTableEntry(a1, 4);
  result = (_QWORD *)objc_msgSend((id)objc_msgSend(a1, "response"), "setNumber:", v2);
  if (matched)
  {
    v5 = (uint64_t (*)(void *))matched[2];
    if (v5)
      return (_QWORD *)v5(a1);
  }
  return result;
}

_QWORD *matchResponseTableEntry(void *a1, int a2)
{
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  uint64_t v7;
  const char *v8;

  v4 = objc_msgSend(a1, "nextSeparator");
  v5 = 0;
  v6 = v4 - objc_msgSend(a1, "start");
  while (1)
  {
    if ((ResponseTypeTable[v5 + 3] & a2) == 0)
      goto LABEL_6;
    v7 = LODWORD(ResponseTypeTable[v5]);
    if (!(_DWORD)v7)
      break;
    if (v6 == v7)
    {
      v8 = (const char *)ResponseTypeTable[v5 + 1];
      if (!strncasecmp(v8, (const char *)objc_msgSend(a1, "start"), v6))
        goto LABEL_9;
    }
LABEL_6:
    v5 += 4;
    if (&ResponseTypeTable[v5] >= __block_literal_global)
      return 0;
  }
  v8 = (const char *)ResponseTypeTable[v5 + 1];
LABEL_9:
  objc_msgSend(a1, "match:", v8);
  objc_msgSend((id)objc_msgSend(a1, "response"), "setResponseType:", (v5 * 8) >> 5);
  return &ResponseTypeTable[v5];
}

id MFMailCopyEventWithExternalIdentifierAndPersistentStoreID(void *a1, void *a2)
{
  void *v3;
  id v4;
  uint64_t v5;
  void *i;
  void *v7;
  void *v8;
  int v9;
  id v10;
  id v11;
  uint64_t v12;
  void *j;
  void *v14;
  void *v15;
  void *v16;
  int v17;
  id v19;
  void *v20;
  id v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _BYTE v30[128];
  _BYTE v31[128];
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v19 = a1;
  v21 = a2;
  MFMailCopySharedEventStore();
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  v29 = 0u;
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v20, "sources");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = (id)objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v26, v31, 16);
  if (v4)
  {
    v5 = *(_QWORD *)v27;
    while (2)
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(_QWORD *)v27 != v5)
          objc_enumerationMutation(v3);
        v7 = *(void **)(*((_QWORD *)&v26 + 1) + 8 * (_QWORD)i);
        objc_msgSend(v7, "externalID");
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        v9 = objc_msgSend(v8, "isEqualToString:", v21);

        if (v9)
        {
          v4 = v7;
          goto LABEL_11;
        }
      }
      v4 = (id)objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v26, v31, 16);
      if (v4)
        continue;
      break;
    }
  }
LABEL_11:

  objc_msgSend(v20, "calendarItemsWithExternalIdentifier:", v19);
  v24 = 0u;
  v25 = 0u;
  v22 = 0u;
  v23 = 0u;
  v10 = (id)objc_claimAutoreleasedReturnValue();
  v11 = (id)objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v22, v30, 16);
  if (v11)
  {
    v12 = *(_QWORD *)v23;
    while (2)
    {
      for (j = 0; j != v11; j = (char *)j + 1)
      {
        if (*(_QWORD *)v23 != v12)
          objc_enumerationMutation(v10);
        v14 = *(void **)(*((_QWORD *)&v22 + 1) + 8 * (_QWORD)j);
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
        {
          objc_msgSend(v14, "calendar");
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v15, "source");
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          v17 = objc_msgSend(v16, "isEqual:", v4);

          if (v17)
          {
            v11 = v14;
            goto LABEL_22;
          }
        }
      }
      v11 = (id)objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v22, v30, 16);
      if (v11)
        continue;
      break;
    }
  }
LABEL_22:

  return v11;
}

void sub_1A5092F94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, _Unwind_Exception *exception_object, void *a10, void *a11, void *a12)
{
  void *v12;

  _Unwind_Resume(a1);
}

id MFMailCopySharedEventStore()
{
  if (MFMailCopySharedEventStore_onceToken != -1)
    dispatch_once(&MFMailCopySharedEventStore_onceToken, &__block_literal_global_36);
  return (id)MFMailCopySharedEventStore_sEventStore;
}

uint64_t MFMailGetEventUIDForUniqueIdentifierAndPersistentStoreID(void *a1, void *a2)
{
  void *v2;
  void *v3;
  uint64_t v4;

  MFMailCopyEventWithExternalIdentifierAndPersistentStoreID(a1, a2);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (v2)
    v4 = objc_msgSend(v2, "rowID");
  else
    v4 = 0xFFFFFFFFLL;

  return v4;
}

void sub_1A50930A0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5093180(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  void *v9;
  void *v10;
  void *v11;

  v11 = v10;

  a9.super_class = (Class)MFLegacyIMAPMailboxTaskManager;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_1A5093400(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50934B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50936FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1A50939E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1A5093E6C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

uint64_t sCompareMethod_block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "compare:");
}

void sub_1A5094C30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,void *a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,_Unwind_Exception *exception_object,uint64_t a36,void *a37)
{
  void *v37;
  void *v38;

  _Unwind_Resume(a1);
}

void sub_1A5095270(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5095350(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5095BD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, void *a18, void *a19, uint64_t a20,uint64_t a21,void *a22)
{
  void *v22;

  _Unwind_Resume(a1);
}

void compactMessagesToUID(void *a1, uint64_t a2, unint64_t a3)
{
  _QWORD *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  void *v12;
  void *v13;
  void *v14;
  NSObject *v15;
  uint64_t v16;
  const char *v17;
  NSObject *v18;
  uint32_t v19;
  uint64_t v20;
  NSObject *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  int v28;
  uint64_t v29;
  __int16 v30;
  _BYTE v31[10];
  int v32;
  __int16 v33;
  int v34;
  _QWORD v35[2];
  _QWORD v36[3];

  v36[2] = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v35[0] = CFSTR("uid");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", a2);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v35[1] = CFSTR("limit");
  v36[0] = v6;
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", a3);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v36[1] = v7;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v36, v35, 2);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  +[MFPowerController powerlog:eventData:](MFPowerController, "powerlog:eventData:", CFSTR("compactMessagesToUID"), v8);

  if (a2)
  {
    objc_msgSend(v5, "account");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "mailbox");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "storeForMailboxUid:", v10);
    v11 = objc_claimAutoreleasedReturnValue();

    -[NSObject serverMessagePersistence](v11, "serverMessagePersistence");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB36B8]), "initWithIndexesInRange:", 1, a2);
    objc_msgSend(v12, "serverMessagesForIMAPUIDs:limit:returnLastEntries:", v13, *MEMORY[0x1E0D1E990], 0);
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    if (objc_msgSend(v14, "count") <= a3)
    {
      +[MFLegacyIMAPMailboxTaskManager log](MFLegacyIMAPMailboxTaskManager, "log");
      v21 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
      {
        v22 = v5[11];
        v28 = 138543874;
        v29 = v22;
        v30 = 1024;
        *(_DWORD *)v31 = objc_msgSend(v14, "count");
        *(_WORD *)&v31[4] = 1024;
        *(_DWORD *)&v31[6] = a3;
        _os_log_impl(&dword_1A4F90000, v21, OS_LOG_TYPE_DEFAULT, "%{public}@: Not compacting messages. Found %u (<= %u).", (uint8_t *)&v28, 0x18u);
      }
      goto LABEL_14;
    }
    if (a2 == 0x7FFFFFFFFFFFFFFFLL)
    {
      +[MFLegacyIMAPMailboxTaskManager log](MFLegacyIMAPMailboxTaskManager, "log");
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
      {
        v16 = v5[11];
        v28 = 138543874;
        v29 = v16;
        v30 = 1024;
        *(_DWORD *)v31 = objc_msgSend(v14, "count");
        *(_WORD *)&v31[4] = 1024;
        *(_DWORD *)&v31[6] = a3;
        v17 = "%{public}@: Compacting all messages. Found %u (> %u).";
        v18 = v15;
        v19 = 24;
LABEL_12:
        _os_log_impl(&dword_1A4F90000, v18, OS_LOG_TYPE_DEFAULT, v17, (uint8_t *)&v28, v19);
      }
    }
    else
    {
      +[MFLegacyIMAPMailboxTaskManager log](MFLegacyIMAPMailboxTaskManager, "log");
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
      {
        v23 = v5[11];
        v28 = 138544130;
        v29 = v23;
        v30 = 2048;
        *(_QWORD *)v31 = a2;
        *(_WORD *)&v31[8] = 1024;
        v32 = objc_msgSend(v14, "count");
        v33 = 1024;
        v34 = a3;
        v17 = "%{public}@: Compacting messages with UIDs <= %lu. Found %u (> %u).";
        v18 = v15;
        v19 = 34;
        goto LABEL_12;
      }
    }

    objc_msgSend(v14, "valueForKey:", CFSTR("remoteID"));
    v21 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "library");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v24, "messageChangeManager");
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "mailbox");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v26, "URL");
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v25, "reflectDeletedMessagesWithRemoteIDs:mailboxURL:", v21, v27);

LABEL_14:
    goto LABEL_15;
  }
  +[MFLegacyIMAPMailboxTaskManager log](MFLegacyIMAPMailboxTaskManager, "log");
  v11 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    v20 = v5[11];
    v28 = 138543362;
    v29 = v20;
    _os_log_impl(&dword_1A4F90000, v11, OS_LOG_TYPE_DEFAULT, "%{public}@: No messages to compact", (uint8_t *)&v28, 0xCu);
  }
LABEL_15:

}

void sub_1A5096100(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A50964B4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A50965F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A5096768(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5096998(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10, ...)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  va_list va;

  va_start(va, a10);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A5096B88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

id fetchArgumentsForCriterion(void *a1, int a2)
{
  int v3;
  uint64_t v4;
  const __CFString *v5;
  NSObject *v6;
  const __CFString *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t i;
  void *v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  void *v39;
  void *v40;
  const __CFString *v41;
  void *v42;
  const __CFString *v43;
  uint64_t v44;
  BOOL v45;
  void *k;
  void *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t m;
  void *v53;
  NSObject *v54;
  int v55;
  char v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t j;
  id v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  unint64_t v67;
  void *v68;
  void *v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  void *v76;
  void *v78;
  void *v79;
  NSObject *v80;
  void *v81;
  id v82;
  id v83;
  int v84;
  uint64_t v85;
  id obj;
  id obja;
  id v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  _QWORD v105[4];
  id v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  _QWORD v115[3];
  _BYTE v116[128];
  _BYTE v117[128];
  _BYTE v118[128];
  _BYTE v119[128];
  uint8_t v120[128];
  uint8_t buf[4];
  id v122;
  uint64_t v123;

  v123 = *MEMORY[0x1E0C80C00];
  v82 = a1;
  v3 = needUTF8ForCriterion(v82);
  objc_msgSend(v82, "expression");
  v81 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v3 & a2) == 1)
    objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithObjects:", CFSTR("CHARSET"), CFSTR("UTF-8"), 0);
  else
    objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v88 = (id)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v82, "criterionType");
  v5 = CFSTR("FROM");
  switch(v4)
  {
    case 25:
      objc_msgSend(MEMORY[0x1E0C99DE8], "array", CFSTR("FROM"));
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      v103 = 0u;
      v104 = 0u;
      v101 = 0u;
      v102 = 0u;
      objc_msgSend(v82, "criteria");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      v22 = objc_msgSend(v21, "countByEnumeratingWithState:objects:count:", &v101, v119, 16);
      if (v22)
      {
        v23 = *(_QWORD *)v102;
        do
        {
          for (i = 0; i != v22; ++i)
          {
            if (*(_QWORD *)v102 != v23)
              objc_enumerationMutation(v21);
            fetchArgumentsForCriterion(*(_QWORD *)(*((_QWORD *)&v101 + 1) + 8 * i), 0);
            v25 = (void *)objc_claimAutoreleasedReturnValue();
            if (v25)
              objc_msgSend(v20, "addObject:", v25);

          }
          v22 = objc_msgSend(v21, "countByEnumeratingWithState:objects:count:", &v101, v119, 16);
        }
        while (v22);
      }

      v26 = objc_msgSend(v20, "count");
      if (v26 == 1)
      {
        objc_msgSend(v20, "objectAtIndex:", 0);
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        if (objc_msgSend(v21, "count") == 1)
        {

          goto LABEL_90;
        }
        if ((a2 & 1) == 0)
        {

          goto LABEL_99;
        }
      }
      else if (!a2)
      {
        goto LABEL_99;
      }
      v55 = objc_msgSend(v82, "allCriteriaMustBeSatisfied");
      v56 = v55;
      if (v26 == 1)
      {

        if ((v56 & 1) == 0)
          goto LABEL_99;
LABEL_90:
        v99 = 0u;
        v100 = 0u;
        v97 = 0u;
        v98 = 0u;
        v57 = v20;
        v58 = objc_msgSend(v57, "countByEnumeratingWithState:objects:count:", &v97, v118, 16);
        if (v58)
        {
          v59 = *(_QWORD *)v98;
          do
          {
            for (j = 0; j != v58; ++j)
            {
              if (*(_QWORD *)v98 != v59)
                objc_enumerationMutation(v57);
              objc_msgSend(v88, "addObjectsFromArray:", *(_QWORD *)(*((_QWORD *)&v97 + 1) + 8 * j));
            }
            v58 = objc_msgSend(v57, "countByEnumeratingWithState:objects:count:", &v97, v118, 16);
          }
          while (v58);
        }
        goto LABEL_118;
      }
      if (v55)
        goto LABEL_90;
LABEL_99:
      if (objc_msgSend(v82, "allCriteriaMustBeSatisfied"))
      {
        v95 = 0u;
        v96 = 0u;
        v93 = 0u;
        v94 = 0u;
        v61 = v20;
        v62 = objc_msgSend(v61, "countByEnumeratingWithState:objects:count:", &v93, v117, 16);
        if (!v62)
        {
LABEL_118:

          goto LABEL_124;
        }
        LOBYTE(v63) = 0;
        v64 = *(_QWORD *)v94;
LABEL_102:
        v65 = 0;
        while (1)
        {
          if (*(_QWORD *)v94 != v64)
            objc_enumerationMutation(v61);
          v66 = *(void **)(*((_QWORD *)&v93 + 1) + 8 * v65);
          if ((v63 & 1) != 0)
          {
            objc_msgSend(v88, "addObjectsFromArray:", *(_QWORD *)(*((_QWORD *)&v93 + 1) + 8 * v65));
          }
          else
          {
            v67 = objc_msgSend(*(id *)(*((_QWORD *)&v93 + 1) + 8 * v65), "count");
            if (!v67)
            {
              v63 = 0;
              goto LABEL_112;
            }
            objc_msgSend(v66, "objectAtIndex:", 0);
            v68 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("(%@"), v68);
            v69 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v88, "addObject:", v69);

            if (v67 >= 2)
            {
              objc_msgSend(v66, "subarrayWithRange:", 1, v67 - 1);
              v70 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v88, "addObjectsFromArray:", v70);

            }
          }
          v63 = 1;
LABEL_112:
          if (v62 == ++v65)
          {
            v71 = objc_msgSend(v61, "countByEnumeratingWithState:objects:count:", &v93, v117, 16);
            v62 = v71;
            if (!v71)
            {

              if (v63)
                objc_msgSend(v88, "addObject:", CFSTR(")"));
              goto LABEL_124;
            }
            goto LABEL_102;
          }
        }
      }
      v72 = objc_msgSend(v20, "count");
      v73 = v72 - 1;
      if (v72 != 1)
      {
        v74 = 0;
        do
        {
          objc_msgSend(v88, "addObject:", CFSTR("(OR"));
          objc_msgSend(v20, "objectAtIndex:", v74);
          v75 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v88, "addObjectsFromArray:", v75);

          ++v74;
        }
        while (v73 != v74);
      }
      objc_msgSend(v20, "lastObject");
      v76 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v88, "addObjectsFromArray:", v76);

      for (; v73; --v73)
        objc_msgSend(v88, "addObject:", CFSTR(")"));
LABEL_124:

LABEL_125:
      return v88;
    case 26:
    case 46:
    case 49:
      MFLogGeneral();
      v6 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        v122 = v82;
        _os_log_impl(&dword_1A4F90000, v6, OS_LOG_TYPE_DEFAULT, "#Warning Ignoring criterion %@ IMAP search", buf, 0xCu);
      }

      goto LABEL_125;
    case 27:
      objc_msgSend(MEMORY[0x1E0CB37A0], "string", CFSTR("FROM"));
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v82, "qualifier") == 7)
        objc_msgSend(v10, "appendString:", CFSTR("NOT "));
      if (fetchArgumentsForCriterion_onceToken != -1)
        dispatch_once(&fetchArgumentsForCriterion_onceToken, &__block_literal_global_424);
      v27 = (void *)fetchArgumentsForCriterion_flagMap;
      objc_msgSend(v82, "expression");
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v27, "objectForKey:", v28);
      v12 = (void *)objc_claimAutoreleasedReturnValue();

      if (!v12)
      {
        objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
        v78 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSArray *fetchArgumentsForCriterion(MFMessageCriterion *__strong, BOOL)");
        v79 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v78, "handleFailureInFunction:file:lineNumber:description:", v79, CFSTR("MFLegacyIMAPMailboxTaskManager.m"), 1062, CFSTR("could not map expression to flag: %@"), v82);

      }
      objc_msgSend(v10, "appendString:", v12);
      objc_msgSend(v88, "addObject:", v10);
LABEL_38:

      goto LABEL_125;
    case 28:
      objc_msgSend(v82, "expression", CFSTR("FROM"));
      v29 = (void *)objc_claimAutoreleasedReturnValue();
      v30 = objc_msgSend(v29, "integerValue");

      v91 = 0u;
      v92 = 0u;
      v89 = 0u;
      v90 = 0u;
      v115[0] = CFSTR("$MailFlagBit0");
      v115[1] = CFSTR("$MailFlagBit1");
      v115[2] = CFSTR("$MailFlagBit2");
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v115, 3);
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      obj = v31;
      v32 = objc_msgSend(v31, "countByEnumeratingWithState:objects:count:", &v89, v116, 16);
      if (v32)
      {
        v33 = 0;
        v34 = *(_QWORD *)v90;
        v35 = ~v30;
        do
        {
          v36 = 0;
          v37 = v33;
          v84 = v33 + v32;
          do
          {
            if (*(_QWORD *)v90 != v34)
              objc_enumerationMutation(obj);
            v38 = *(_QWORD *)(*((_QWORD *)&v89 + 1) + 8 * v36);
            objc_msgSend(MEMORY[0x1E0CB37A0], "string");
            v39 = (void *)objc_claimAutoreleasedReturnValue();
            v40 = v39;
            if (((1 << (v37 + v36)) & (unint64_t)v35) != 0)
              v41 = CFSTR("UNKEYWORD ");
            else
              v41 = CFSTR("KEYWORD ");
            objc_msgSend(v39, "appendString:", v41);
            objc_msgSend(v40, "appendString:", v38);
            objc_msgSend(v88, "addObject:", v40);

            ++v36;
          }
          while (v32 != v36);
          v31 = obj;
          v32 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v89, v116, 16);
          v33 = v84;
        }
        while (v32);
      }

      goto LABEL_125;
    case 29:
    case 30:
    case 31:
    case 32:
    case 34:
    case 36:
    case 37:
    case 38:
    case 39:
    case 42:
    case 43:
    case 44:
    case 45:
    case 47:
    case 48:
LABEL_126:
      MFLogGeneral();
      v80 = objc_claimAutoreleasedReturnValue();
      fetchArgumentsForCriterion_cold_1(v80, (uint64_t)v82);

      __assert_rtn("fetchArgumentsForCriterion", "MFLegacyIMAPMailboxTaskManager.m", 1110, "0 && \"Need to handle criterion for IMAP headers\"");
    case 33:
LABEL_13:
      v14 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
      v105[0] = MEMORY[0x1E0C809B0];
      v105[1] = 3221225472;
      v105[2] = __fetchArgumentsForCriterion_block_invoke;
      v105[3] = &unk_1E4E8CC18;
      v15 = v14;
      v106 = v15;
      objc_msgSend(v82, "tokenizeUsingTokenizationHandler:", v105);
      v16 = v15;
      v17 = v88;
      v18 = objc_msgSend(v16, "count");
      if (v18)
      {
        if (v18 == 1)
        {
          objc_msgSend(v16, "lastObject");
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v17, "addObjectsFromArray:", v19);

        }
        else
        {
          v113 = 0u;
          v114 = 0u;
          v111 = 0u;
          v112 = 0u;
          v83 = v16;
          v44 = objc_msgSend(v83, "countByEnumeratingWithState:objects:count:", &v111, buf, 16);
          if (v44)
          {
            v85 = *(_QWORD *)v112;
            v45 = 1;
            do
            {
              obja = (id)v44;
              for (k = 0; k != obja; k = (char *)k + 1)
              {
                if (*(_QWORD *)v112 != v85)
                  objc_enumerationMutation(v83);
                v47 = *(void **)(*((_QWORD *)&v111 + 1) + 8 * (_QWORD)k);
                if (v45)
                {
                  v109 = 0u;
                  v110 = 0u;
                  v107 = 0u;
                  v108 = 0u;
                  v48 = v47;
                  v49 = objc_msgSend(v48, "countByEnumeratingWithState:objects:count:", &v107, v120, 16);
                  v45 = v49 == 0;
                  if (v49)
                  {
                    v50 = *(_QWORD *)v108;
                    v51 = 1;
                    do
                    {
                      for (m = 0; m != v49; ++m)
                      {
                        if (*(_QWORD *)v108 != v50)
                          objc_enumerationMutation(v48);
                        if ((v51 & 1) != 0)
                        {
                          objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("(%@"), *(_QWORD *)(*((_QWORD *)&v107 + 1) + 8 * m));
                          v53 = (void *)objc_claimAutoreleasedReturnValue();
                          objc_msgSend(v17, "addObject:", v53);

                        }
                        else
                        {
                          objc_msgSend(v17, "addObject:", *(_QWORD *)(*((_QWORD *)&v107 + 1) + 8 * m));
                        }
                        v51 = 0;
                      }
                      v49 = objc_msgSend(v48, "countByEnumeratingWithState:objects:count:", &v107, v120, 16);
                      v51 = 0;
                    }
                    while (v49);
                  }

                }
                else
                {
                  objc_msgSend(v17, "addObjectsFromArray:", v47);
                  v45 = 0;
                }
              }
              v44 = objc_msgSend(v83, "countByEnumeratingWithState:objects:count:", &v111, buf, 16);
            }
            while (v44);
          }

          objc_msgSend(v17, "addObject:", CFSTR(")"));
        }
      }

      goto LABEL_125;
    case 35:
      goto LABEL_18;
    case 40:
      v5 = CFSTR("TO");
      goto LABEL_18;
    case 41:
      v5 = CFSTR("CC");
LABEL_18:
      objc_msgSend(v88, "addObject:", v5);
      addArgumentsForExpression(v81, v3, v88);
      goto LABEL_125;
    default:
      switch(v4)
      {
        case 1:
          objc_msgSend(v82, "criterionIdentifier", CFSTR("FROM"));
          v42 = (void *)objc_claimAutoreleasedReturnValue();
          if ((objc_msgSend(v42, "isEqual:", *MEMORY[0x1E0D1E5F8]) & 1) != 0)
          {
            v43 = CFSTR("SUBJECT");
          }
          else
          {
            if (!objc_msgSend(v42, "isEqualToString:", *MEMORY[0x1E0D1E5B0]))
            {
              MFLogGeneral();
              v54 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v54, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)buf = 138412290;
                v122 = v42;
                _os_log_impl(&dword_1A4F90000, v54, OS_LOG_TYPE_DEFAULT, "#Warning unsupported header criterion type %@", buf, 0xCu);
              }

LABEL_84:
              addArgumentsForExpression(v81, v3, v88);

              goto LABEL_125;
            }
            objc_msgSend(v88, "addObject:", CFSTR("HEADER"));
            if (objc_msgSend(v82, "qualifier") != 3)
              __assert_rtn("fetchArgumentsForCriterion", "MFLegacyIMAPMailboxTaskManager.m", 953, "0 && \"Message ID header criterion must have a MessageRuleIsEqualTo qualifier\"");
            v43 = CFSTR("Message-ID");
          }
          objc_msgSend(v88, "addObject:", v43);
          goto LABEL_84;
        case 2:
          goto LABEL_13;
        case 9:
          objc_msgSend(v88, "addObject:", CFSTR("(OR TO"));
          addArgumentsForExpression(v81, v3, v88);
          objc_msgSend(v88, "addObject:", CFSTR("CC"));
          addArgumentsForExpression(v81, v3, v88);
          objc_msgSend(v88, "addObject:", CFSTR(")"));
          goto LABEL_125;
        case 11:
        case 12:
          if (objc_msgSend(v82, "qualifier", CFSTR("FROM")) == 6)
            v7 = CFSTR("SINCE");
          else
            v7 = CFSTR("BEFORE");
          objc_msgSend(v88, "addObject:", v7);
          v8 = (void *)MEMORY[0x1E0C99D68];
          objc_msgSend(v82, "expression");
          v9 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v9, "doubleValue");
          objc_msgSend(v8, "dateWithTimeIntervalSince1970:");
          v10 = (void *)objc_claimAutoreleasedReturnValue();

          v11 = (void *)MEMORY[0x1E0CB3940];
          MFIMAPDateSearchStringForDate(v10);
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v11, "stringWithFormat:", CFSTR("\"%@\""), v12);
          v13 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v88, "addObject:", v13);

          goto LABEL_38;
        default:
          goto LABEL_126;
      }
  }
}

void sub_1A509787C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  _Unwind_Resume(a1);
}

void sub_1A5097C2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  void *v20;

  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__12(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__12(uint64_t a1)
{

}

void sub_1A5097D74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1A5097EBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  void *v20;
  void *v21;

  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

void sub_1A5098028(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A50982A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22)
{
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;

  _Unwind_Resume(a1);
}

void sub_1A50983C0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A509845C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50984F8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1A50985F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  void *v9;
  va_list va;

  va_start(va, a9);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A50986C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A5098784(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_1A50988A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_1A5098A64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_1A5098C78(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5098F40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id a24)
{
  void *v24;
  os_unfair_lock_s *v25;
  void *v26;

  os_unfair_lock_unlock(v25);
  _Block_object_dispose(&a19, 8);

  _Unwind_Resume(a1);
}

void sub_1A5099000(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50990D0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5099174(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50993A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1A5099514(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5099628(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A5099918(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;

  _Block_object_dispose((const void *)(v16 - 120), 8);
  _Unwind_Resume(a1);
}

void sub_1A5099B90(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5099C5C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void _compactMessageIfNoData(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;

  v11 = a1;
  v5 = a2;
  v6 = a3;
  if (objc_msgSend(v5, "isComplete"))
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      +[MFActivityMonitor currentMonitor](MFActivityMonitor, "currentMonitor");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "error");
      v8 = (void *)objc_claimAutoreleasedReturnValue();

      if (!v8)
      {
        v9 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99D20]), "initWithObjects:", v6, 0);
        objc_msgSend(v11, "library");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "compactMessages:permanently:notifyPersistence:", v9, 1, 0);

      }
    }
  }

}

void sub_1A5099D64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  v14 = v13;

  _Unwind_Resume(a1);
}

void sub_1A5099F18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  void *v22;
  void *v23;
  uint64_t v24;

  _Block_object_dispose(&a17, 8);
  _Block_object_dispose((const void *)(v24 - 96), 8);

  _Unwind_Resume(a1);
}

void sub_1A509A158(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1A509A474(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A509A530(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A509A624(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A509A7D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id a24)
{
  void *v24;
  void *v25;
  uint64_t v26;

  _Block_object_dispose(&a19, 8);
  _Block_object_dispose((const void *)(v26 - 96), 8);

  _Unwind_Resume(a1);
}

void sub_1A509A90C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A509AA78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  void *v22;
  uint64_t v23;

  _Block_object_dispose(&a17, 8);
  _Block_object_dispose((const void *)(v23 - 80), 8);

  _Unwind_Resume(a1);
}

void sub_1A509ABE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A509AC90(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A509AD3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A509ADCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A509B4FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, void *a17, void *a18)
{
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;

  _Unwind_Resume(a1);
}

void sub_1A509B6F0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A509BBAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12)
{
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;

  _Unwind_Resume(a1);
}

void sub_1A509BE18(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A509C038(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A509C104(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A509C25C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A509C3A0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A509C4B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

uint64_t needUTF8ForCriterion(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  void *v6;
  void *v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _BYTE v13[128];
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  if (objc_msgSend(v1, "criterionType") == 25)
  {
    v11 = 0u;
    v12 = 0u;
    v9 = 0u;
    v10 = 0u;
    objc_msgSend(v1, "criteria", 0);
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
    if (v3)
    {
      v4 = *(_QWORD *)v10;
      while (2)
      {
        for (i = 0; i != v3; ++i)
        {
          if (*(_QWORD *)v10 != v4)
            objc_enumerationMutation(v2);
          if ((needUTF8ForCriterion(*(_QWORD *)(*((_QWORD *)&v9 + 1) + 8 * i)) & 1) != 0)
          {
            v3 = 1;
            goto LABEL_13;
          }
        }
        v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
        if (v3)
          continue;
        break;
      }
    }
LABEL_13:

  }
  else
  {
    objc_msgSend(v1, "expression");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "dataUsingEncoding:", 1);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v3 = v7 == 0;

  }
  return v3;
}

void sub_1A509C6FC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void __fetchArgumentsForCriterion_block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  objc_msgSend(v5, "dataUsingEncoding:", 1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "addObject:", CFSTR("(OR FROM"));
  addArgumentsForExpression(v5, v3 == 0, v4);
  objc_msgSend(v4, "addObject:", CFSTR("(OR SUBJECT"));
  addArgumentsForExpression(v5, v3 == 0, v4);
  objc_msgSend(v4, "addObject:", CFSTR("(OR TO"));
  addArgumentsForExpression(v5, v3 == 0, v4);
  objc_msgSend(v4, "addObject:", CFSTR("(OR CC"));
  addArgumentsForExpression(v5, v3 == 0, v4);
  objc_msgSend(v4, "addObject:", CFSTR("BODY"));
  addArgumentsForExpression(v5, v3 == 0, v4);
  objc_msgSend(v4, "addObject:", CFSTR("))))"));

  if (v4)
    objc_msgSend(*(id *)(a1 + 32), "addObject:", v4);

}

void sub_1A509C878(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void addArgumentsForExpression(void *a1, int a2, void *a3)
{
  id v5;
  void *v6;
  id v7;

  v7 = a1;
  v5 = a3;
  if (a2)
    objc_msgSend(v7, "dataUsingEncoding:", 4);
  else
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("\"%@\""), v7);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "addObject:", v6);

}

void sub_1A509C950(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void __fetchArgumentsForCriterion_block_invoke_423()
{
  void *v0;
  uint64_t v1;
  void *v2;
  _QWORD v3[4];
  _QWORD v4[5];

  v4[4] = *MEMORY[0x1E0C80C00];
  v3[0] = CFSTR("MessageIsFlagged");
  v3[1] = CFSTR("MessageIsDeleted");
  v4[0] = CFSTR("FLAGGED");
  v4[1] = CFSTR("DELETED");
  v3[2] = CFSTR("MessageIsRead");
  v3[3] = CFSTR("MessageWasRepliedTo");
  v4[2] = CFSTR("SEEN");
  v4[3] = CFSTR("ANSWERED");
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v4, v3, 4);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "copy");
  v2 = (void *)fetchArgumentsForCriterion_flagMap;
  fetchArgumentsForCriterion_flagMap = v1;

}

void sub_1A509CA5C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_1_0(void *a1, int a2, os_log_t log, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, log, OS_LOG_TYPE_DEBUG, a4, a5, 0xCu);
}

void OUTLINED_FUNCTION_2_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, &a9, 2u);
}

void sub_1A509CCF8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A509CFCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{

  _Unwind_Resume(a1);
}

void sub_1A509D2C8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A509D3F8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A509D72C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A509DA3C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A509DAF0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A509DE24(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A509E158(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A509E480(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A509E584(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A509E85C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A509E9C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A509ECC4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A509EF24(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A509EF98()
{
  void *v0;

  JUMPOUT(0x1A509EF8CLL);
}

void sub_1A509EFA4()
{
  JUMPOUT(0x1A509EF8CLL);
}

uint64_t __Block_byref_object_copy__13(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__13(uint64_t a1)
{

}

void sub_1A509F0A8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A509F138(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A509F1A0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A509F200(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A509F294(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A509F324(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A509F3B0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A509F558(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A509F5E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(obj);

  _Unwind_Resume(a1);
}

void sub_1A509F734(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  objc_sync_exit(v2);
  _Unwind_Resume(a1);
}

void sub_1A509F914(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A509FD28(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A509FFC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;

  objc_sync_exit(v10);
  _Unwind_Resume(a1);
}

void sub_1A50A00BC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50A0220(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sanitizeStringForMarkup(void *a1)
{
  id v1;

  v1 = a1;
  objc_msgSend(v1, "replaceOccurrencesOfString:withString:options:range:", CFSTR("<"), CFSTR("&lt;"),
    2,
    0,
    objc_msgSend(v1, "length"));
  objc_msgSend(v1, "replaceOccurrencesOfString:withString:options:range:", CFSTR(">"), CFSTR("&gt;"),
    2,
    0,
    objc_msgSend(v1, "length"));
  objc_msgSend(v1, "replaceOccurrencesOfString:withString:options:range:", CFSTR("  "), CFSTR("&nbsp; "),
    2,
    0,
    objc_msgSend(v1, "length"));
  objc_msgSend(v1, "replaceOccurrencesOfString:withString:options:range:", CFSTR("\n"), CFSTR("<BR>"), 2, 0, objc_msgSend(v1, "length"));

}

void sub_1A50A0324(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50A0664(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, id a12)
{
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;

  _Unwind_Resume(a1);
}

void sub_1A50A095C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{

  _Unwind_Resume(a1);
}

void sub_1A50A0C70(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;

  v4 = *(void **)(v3 - 160);

  _Unwind_Resume(a1);
}

void sub_1A50A0CEC()
{
  JUMPOUT(0x1A50A0CB4);
}

void sub_1A50A0CF4()
{
  JUMPOUT(0x1A50A0CBCLL);
}

void sub_1A50A0CFC()
{
  JUMPOUT(0x1A50A0CC4);
}

void sub_1A50A0D04()
{
  JUMPOUT(0x1A50A0CCCLL);
}

void sub_1A50A0D0C()
{
  JUMPOUT(0x1A50A0CD4);
}

void sub_1A50A0D14()
{
  JUMPOUT(0x1A50A0CDCLL);
}

void sub_1A50A0EA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A50A10A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1A50A1158(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)MFLockStateMonitor;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_1A50A1390(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;

  v26 = v25;

  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__14(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__14(uint64_t a1)
{

}

void sub_1A50A15A4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50A1698(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A50A1808(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7, uint64_t a8, ...)
{
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  va_list va;

  va_start(va, a8);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A50A1A04(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A50A1AC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50A1BE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  void *v20;
  void *v21;

  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

void sub_1A50A1D34(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50A1DEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50A1ECC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v6 = v5;

  _Unwind_Resume(a1);
}

void sub_1A50A1F90(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A50A208C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A50A2178(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A50A2210(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1A50A2284(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50A22E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50A23DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50A2644(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, _Unwind_Exception *exception_object, uint64_t a10, void *a11, void *a12, int a13, char a14, void *a15)
{
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;

  if ((a14 & 1) != 0)
  {

  }
  if (!v21)

  _Unwind_Resume(a1);
}

void sub_1A50A27CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50A2D1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32)
{
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  uint64_t v36;

  objc_sync_exit(v33);

  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v36 - 144));

  _Unwind_Resume(a1);
}

void sub_1A50A2FE0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50A3114(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50A3194(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

id downloadConfiguration(uint64_t a1, uint64_t a2)
{
  void *v3;

  objc_msgSend(MEMORY[0x1E0C92CA0], "backgroundSessionConfigurationWithIdentifier:", a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "set_sourceApplicationBundleIdentifier:", *MEMORY[0x1E0D4D878]);
  objc_msgSend(v3, "setTimeoutIntervalForRequest:", 30.0);
  objc_msgSend(v3, "setTimeoutIntervalForResource:", 1800.0);
  objc_msgSend(v3, "setAllowsCellularAccess:", a2);
  return v3;
}

void sub_1A50A3218(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50A3298(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50A33C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  v14 = v13;

  _Unwind_Resume(a1);
}

void sub_1A50A3598(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1A50A36D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A50A37FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1A50A38E8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50A39A4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50A3A44(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50A3AE8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50A3D30(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50A3DF8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50A406C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50A40FC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50A4444(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, void *a17, void *a18, void *a19, void *a20)
{
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;

  _Unwind_Resume(a1);
}

void sub_1A50A4CD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  _Block_object_dispose(&a49, 8);

  _Unwind_Resume(a1);
}

void sub_1A50A5238(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50A55E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_1A50A5978(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  _Unwind_Resume(a1);
}

void sub_1A50A5EF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,void *a23,void *a24,void *a25)
{
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;

  _Unwind_Resume(a1);
}

void sub_1A50A61D8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v7 = v6;

  _Unwind_Resume(a1);
}

void sub_1A50A63D4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  v8 = v6;

  _Unwind_Resume(a1);
}

void sub_1A50A664C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A50A689C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A50A6A40(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50A6B58(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50A6D8C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A50A700C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50A71A8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50A72C4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50A766C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, void *a16)
{

  _Unwind_Resume(a1);
}

void sub_1A50A7854(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50A79B0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50A7A14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50A7ABC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50A7D8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15)
{
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;

  _Unwind_Resume(a1);
}

void sub_1A50A8828(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  void *v32;
  void *v33;
  void *v34;
  void *v35;

  _Unwind_Resume(a1);
}

void sub_1A50A8B10(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50A8B60(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50A8E60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, _Unwind_Exception *exception_object, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1A50A9098(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v6 = v4;

  _Unwind_Resume(a1);
}

void sub_1A50A923C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1A50A938C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50A94FC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  v2 = v1;

  _Unwind_Resume(a1);
}

void sub_1A50A9648(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  v2 = v1;

  _Unwind_Resume(a1);
}

void sub_1A50A9804(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  v2 = v1;

  _Unwind_Resume(a1);
}

void sub_1A50A9A30(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_1A50A9B74(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50A9CEC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1A50A9E4C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A50A9F90(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A50AA0E4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  v2 = v1;

  _Unwind_Resume(a1);
}

void sub_1A50AA200(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50AA318(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50AA41C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50AA53C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50AA5C4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50AA788(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50AA848(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1A50AA920(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50AA9B4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50AAB84(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50AAD3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  va_list va;

  va_start(va, a11);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A50AAD9C()
{
  JUMPOUT(0x1A50AAD90);
}

void sub_1A50AAF9C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t performInsert(sqlite3_stmt *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t result;
  id v7;

  v4 = sqlite3_step(a1);
  sqlite3_reset(a1);
  if ((v4 - 100) < 2 || (_DWORD)v4 == 0)
    return 1;
  if (!a2)
    return 0;
  objc_msgSend(MEMORY[0x1E0CB35C8], "ef_SQLiteErrorWithCode:", v4);
  v7 = (id)objc_claimAutoreleasedReturnValue();
  result = 0;
  *a2 = v7;
  return result;
}

void sub_1A50AB108(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50AB4B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, id *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,char a26)
{
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;

  _Block_object_dispose(&a26, 8);
  _Unwind_Resume(a1);
}

void rawAddress(sqlite3_context *a1, uint64_t a2, sqlite3_value **a3)
{
  const unsigned __int8 *v5;
  void *v6;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;

  if ((_DWORD)a2 == 1)
  {
    v5 = sqlite3_value_text(*a3);
    if (v5)
    {
      v15 = (id)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3940]), "initWithBytesNoCopy:length:encoding:freeWhenDone:", v5, sqlite3_value_bytes(*a3), 4, 0);
      objc_msgSend(MEMORY[0x1E0D1E450], "rawAddressFromFullAddress:cacheResults:");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v6, "length"))
        sqlite3_result_text(a1, (const char *)objc_msgSend(objc_retainAutorelease(v6), "UTF8String"), -1, (void (__cdecl *)(void *))0xFFFFFFFFFFFFFFFFLL);
      else
        sqlite3_result_null(a1);

    }
    else
    {
      sqlite3_result_null(a1);
    }
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0D1EB68], "log");
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      rawAddress_cold_1(a2, v8, v9, v10, v11, v12, v13, v14);

  }
}

void sub_1A50AB670(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void displayName(sqlite3_context *a1, uint64_t a2, sqlite3_value **a3)
{
  const unsigned __int8 *v5;
  void *v6;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;

  if ((_DWORD)a2 == 1)
  {
    v5 = sqlite3_value_text(*a3);
    if (v5)
    {
      v15 = (id)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3940]), "initWithBytesNoCopy:length:encoding:freeWhenDone:", v5, sqlite3_value_bytes(*a3), 4, 0);
      objc_msgSend(MEMORY[0x1E0D1E450], "displayNameFromAddress:cacheResults:");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v6, "length") && (objc_msgSend(v6, "isEqualToString:", v15) & 1) == 0)
        sqlite3_result_text(a1, (const char *)objc_msgSend(objc_retainAutorelease(v6), "UTF8String"), -1, (void (__cdecl *)(void *))0xFFFFFFFFFFFFFFFFLL);
      else
        sqlite3_result_text(a1, "", 0, 0);

    }
    else
    {
      sqlite3_result_null(a1);
    }
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0D1EB68], "log");
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      displayName_cold_1(a2, v8, v9, v10, v11, v12, v13, v14);

  }
}

void sub_1A50AB7E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50AB95C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  void *v16;

  _Unwind_Resume(a1);
}

void sub_1A50ABA2C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50ABF18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, void *a17)
{
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  _Unwind_Resume(a1);
}

void sub_1A50ABFEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50AC07C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A50AC27C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id _ef_log_MFMailMessageLibraryBusinessCommonPrefixGroupingUpgradeStep()
{
  if (_ef_log_MFMailMessageLibraryBusinessCommonPrefixGroupingUpgradeStep_onceToken != -1)
    dispatch_once(&_ef_log_MFMailMessageLibraryBusinessCommonPrefixGroupingUpgradeStep_onceToken, &__block_literal_global_41);
  return (id)_ef_log_MFMailMessageLibraryBusinessCommonPrefixGroupingUpgradeStep_log;
}

void sub_1A50AC470(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_1A50AC60C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A50AC708(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50AC888(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  void *v15;
  void *v16;
  void *v17;
  void *v18;

  _Unwind_Resume(a1);
}

void sub_1A50ACA68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1A50ACBD8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A50ACD6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  v21 = v20;

  _Unwind_Resume(a1);
}

void sub_1A50ACE78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A50ACFEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22)
{
  void *v22;
  void *v23;
  void *v24;
  void *v25;

  _Unwind_Resume(a1);
}

void sub_1A50AD0B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50AD1AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1A50AD4B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,id a30)
{
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  uint64_t v34;

  _Block_object_dispose(&a21, 8);
  _Block_object_dispose(&a25, 8);

  _Block_object_dispose((const void *)(v34 - 144), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__15(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__15(uint64_t a1)
{

}

void sub_1A50AD888(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  void *v15;
  void *v16;
  void *v17;
  void *v18;

  _Unwind_Resume(a1);
}

void sub_1A50AD9A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50ADAA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_1A50ADB38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50ADC08(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50ADCCC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50ADD88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50ADE78(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50AE118(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12)
{
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1A50AE364(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A50AE4C0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50AE5F8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50AE800(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_1A50AE980(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50AEB34(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50AEC80(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50AED7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50AEE00(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50AF148(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;

  _Unwind_Resume(a1);
}

void sub_1A50AF4E4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1A50AF63C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_1A50AF724(_Unwind_Exception *a1, int a2)
{
  void *v2;
  void *v3;
  void *v4;
  id v7;
  NSObject *v8;
  uint64_t v9;

  if (a2 == 1)
  {
    v7 = objc_begin_catch(a1);
    EDLibraryLog();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      __78__MFMailMessageLibraryLocalActionsTablesMigrationStep__offlineCacheOperations__block_invoke_cold_1((uint64_t)v7, v8, v9);

    objc_end_catch();
    JUMPOUT(0x1A50AF708);
  }

  _Unwind_Resume(a1);
}

void sub_1A50AF7B4()
{
  void *v0;

  objc_end_catch();
  JUMPOUT(0x1A50AF738);
}

void sub_1A50AFA80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id a28)
{
  void *v28;
  void *v29;
  void *v30;
  void *v31;

  _Block_object_dispose(&a17, 8);
  _Block_object_dispose(&a23, 8);

  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__16(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__16(uint64_t a1)
{

}

void sub_1A50AFBA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50AFC94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50AFDC4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50AFE8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50B02EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;

  _Unwind_Resume(a1);
}

void sub_1A50B04A0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50B0594(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50B0684(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50B0714(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50B0990(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  _Unwind_Resume(a1);
}

void sub_1A50B0A9C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50B0B90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50B0E9C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v3;

  _Unwind_Resume(a1);
}

void sub_1A50B0FFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50B16E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,id a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,id a41,uint64_t a42,uint64_t a43,char a44,uint64_t a45,uint64_t a46,uint64_t a47,char a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,id a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,id a59)
{
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  uint64_t v63;

  _Block_object_dispose(&a30, 8);
  _Block_object_dispose(&a44, 8);

  _Block_object_dispose(&a48, 8);
  _Block_object_dispose(&a54, 8);

  _Block_object_dispose((const void *)(v63 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_1A50B197C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A50B1A3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50B1BBC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A50B1CA8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50B1E04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50B1ED4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50B200C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50B20B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50B2414(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,id a30)
{
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;

  _Block_object_dispose(&a19, 8);
  _Block_object_dispose(&a25, 8);

  _Unwind_Resume(a1);
}

void sub_1A50B2568(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50B2614(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50B27B8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50B2880(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50B2948(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50B2A88(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50B2B18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50B2BC4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50B2CD4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A50B2E44(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50B2F0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50B2FD4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50B3114(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50B31A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50B3250(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50B32E4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50B38D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{

  _Unwind_Resume(a1);
}

void sub_1A50B3D48(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_1A50B3FF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1A50B4450(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, void *a19, void *a20)
{

  _Unwind_Resume(a1);
}

void sub_1A50B4840(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  void *v22;
  void *v23;
  void *v24;
  id *v25;

  objc_destroyWeak(v25);
  objc_destroyWeak(&location);

  _Unwind_Resume(a1);
}

void sub_1A50B4904(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50BD3D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

uint64_t _InitializeSchema(sqlite3 *a1, void *a2)
{
  void *v3;
  int v4;
  void *v5;
  uint64_t v6;

  objc_msgSend(a2, "definitionWithDatabaseName:", 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = _ExecuteSQL(a1, v3, CFSTR("performing statements from schema definition"));

  if (!v4)
    return 0;
  _SQLFromFile();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (v5)
    v6 = _ExecuteSQL(a1, v5, CFSTR("performing statements from file \"triggers.sql\""));
  else
    v6 = 1;

  return v6;
}

void sub_1A50BD99C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

BOOL _FixZeroedConversationHashes(sqlite3 *a1)
{
  int v2;
  _BOOL4 v3;
  id v4;
  int v5;
  sqlite3_int64 v6;
  BOOL v7;
  sqlite3_int64 v8;
  int v9;
  sqlite3_stmt *ppStmt;

  ppStmt = (sqlite3_stmt *)0xAAAAAAAAAAAAAAAALL;
  v2 = sqlite3_prepare_v2(a1, "SELECT rowid FROM messages WHERE conversation_id = 0 or conversation_id is NULL", -1, &ppStmt, 0);
  v3 = v2 == 0;
  v4 = objc_alloc_init(MEMORY[0x1E0D1EF08]);
  if (!v2 && ppStmt)
  {
    while (1)
    {
      v5 = sqlite3_step(ppStmt);
      if (v5 != 100)
        break;
      objc_msgSend(v4, "addIndex:", sqlite3_column_int64(ppStmt, 0));
    }
    _HandleSQLiteError(a1, CFSTR("gathering library ids of messages without conversation hashes"));
    v3 = v5 == 101;
    sqlite3_finalize(ppStmt);
  }
  if (v3)
  {
    if (objc_msgSend(v4, "count"))
    {
      v6 = objc_msgSend(v4, "firstIndex");
      v7 = sqlite3_prepare_v2(a1, "UPDATE messages SET conversation_id = ?, content_index_transaction_id = NULL WHERE rowid = ?", -1, &ppStmt, 0) == 0;
      while (v7 && v6 != 0x7FFFFFFFFFFFFFFFLL)
      {
        v8 = MFUniqueMessageIDHash();
        sqlite3_bind_int64(ppStmt, 1, v8);
        sqlite3_bind_int64(ppStmt, 2, v6);
        v9 = sqlite3_step(ppStmt);
        v7 = v9 == 101;
        if (v9 == 101)
          sqlite3_reset(ppStmt);
        v6 = objc_msgSend(v4, "indexGreaterThanIndex:", v6);
      }
      _HandleSQLiteError(a1, CFSTR("updating messages with new conversation hashes"));
      sqlite3_finalize(ppStmt);
    }
    else
    {
      v7 = 1;
    }
  }
  else
  {
    v7 = 0;
  }

  return v7;
}

void sub_1A50BDB50(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

BOOL _DropMessageDeletedIndex(sqlite3 *a1)
{
  _BOOL8 v2;

  v2 = sqlite3_exec(a1, "DROP INDEX message_deleted_index", 0, 0, 0) == 0;
  _HandleSQLiteError(a1, CFSTR("dropping message deleted index"));
  return v2;
}

BOOL _AddVIPSenderColumn(sqlite3 *a1)
{
  _BOOL8 v2;

  v2 = sqlite3_exec(a1, "ALTER TABLE messages ADD COLUMN sender_vip;", 0, 0, 0) == 0;
  _HandleSQLiteError(a1, CFSTR("adding sender_vip column"));
  return v2;
}

BOOL _AddUniqueRemoteIDColumn(sqlite3 *a1)
{
  int v2;

  v2 = sqlite3_exec(a1, "ALTER TABLE messages ADD COLUMN unique_id;", 0, 0, 0);
  _HandleSQLiteError(a1, CFSTR("adding unique_id column"));
  return v2 == 0;
}

BOOL _AddContentTransactionIDColumn(sqlite3 *a1)
{
  int v2;
  _BOOL8 v3;

  v2 = sqlite3_exec(a1, "ALTER TABLE messages ADD COLUMN content_index_transaction_id INTEGER;", 0, 0, 0);
  _HandleSQLiteError(a1, CFSTR("adding content_index_transaction_id column"));
  if (v2)
    return 0;
  v3 = sqlite3_exec(a1, "CREATE INDEX message_content_index_transaction_id_index ON messages(content_index_transaction_id);",
         0,
         0,
         0) == 0;
  _HandleSQLiteError(a1, CFSTR("adding content_index_transaction_id index"));
  return v3;
}

BOOL _ImproveMessageConversationIndexes(sqlite3 *a1)
{
  _BOOL8 v2;

  v2 = sqlite3_exec(a1, "DROP INDEX IF EXISTS message_conversation_id_index;\n"
         "CREATE INDEX message_conversation_id_index ON messages(conversation_id, mailbox, read, date_received);\n"
         "DROP INDEX IF EXISTS message_oldest_conversation_index;\n"
         "CREATE INDEX message_oldest_conversation_index on messages(mailbox, conversation_id, date_received);",
         0,
         0,
         0) == 0;
  _HandleSQLiteError(a1, CFSTR("replacing conversation indexes"));
  return v2;
}

BOOL _AddSequenceIdentifierIndex(sqlite3 *a1)
{
  _BOOL8 v2;

  v2 = sqlite3_exec(a1, "DROP INDEX IF EXISTS message_sequence_identifier_index;\n"
         "CREATE INDEX message_sequence_identifier_index ON messages(mailbox, remote_id, sequence_identifier);",
         0,
         0,
         0) == 0;
  _HandleSQLiteError(a1, CFSTR("adding sequence identifier index"));
  return v2;
}

uint64_t _AddFlaggedAndAttachmentColumnsAndTriggers(sqlite3 *a1)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  void *v7;

  v2 = sqlite3_exec(a1, "ALTER TABLE mailboxes ADD COLUMN flagged_count INTEGER DEFAULT 0; ALTER TABLE mailboxes ADD COLUMN attachment_c"
         "ount INTEGER DEFAULT 0;",
         0,
         0,
         0);
  _HandleSQLiteError(a1, CFSTR("altering mailboxes table"));
  if (v2)
    return 0;
  v3 = sqlite3_exec(a1, "update mailboxes set flagged_count = (select count(*) from messages where mailbox = mailboxes.rowid AND flags&16 > 0);",
         0,
         0,
         0);
  _HandleSQLiteError(a1, CFSTR("updating flagged_count"));
  if (v3)
    return 0;
  v4 = sqlite3_exec(a1, "update mailboxes set attachment_count = (select count(*) from messages where mailbox = mailboxes.rowid AND (((flags&(63<<10))>>10) BETWEEN 1 AND 62) AND flags&1 = 0);",
         0,
         0,
         0);
  _HandleSQLiteError(a1, CFSTR("updating attachment_count"));
  if (v4)
    return 0;
  _SQLFromFile();
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = _ExecuteSQL(a1, v7, CFSTR("performing statements from file \"triggers.sql\""));

  return v5;
}

void sub_1A50BDE78(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t _AddToCcCountColumnAndTriggers(sqlite3 *a1)
{
  int v2;
  int v3;
  uint64_t v4;
  void *v6;

  v2 = sqlite3_exec(a1, "ALTER TABLE mailboxes ADD COLUMN to_cc_count INTEGER DEFAULT 0;", 0, 0, 0);
  _HandleSQLiteError(a1, CFSTR("altering mailboxes table"));
  if (v2)
    return 0;
  v3 = sqlite3_exec(a1, "INSERT OR REPLACE INTO properties (key, value) VALUES ('MaxRowIdForMigrationToVersion31', (SELECT MAX(rowid) FROM messages));",
         0,
         0,
         0);
  _HandleSQLiteError(a1, CFSTR("adding maxrowid property"));
  if (v3)
    return 0;
  _SQLFromFile();
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = _ExecuteSQL(a1, v6, CFSTR("performing statements from file \"triggers.sql\""));

  return v4;
}

void sub_1A50BDF3C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

BOOL _AddServerOnlyUnreadCountColumn(sqlite3 *a1)
{
  _BOOL8 v2;

  v2 = sqlite3_exec(a1, "ALTER TABLE mailboxes ADD COLUMN server_unread_count INTEGER DEFAULT 0;", 0, 0, 0) == 0;
  _HandleSQLiteError(a1, CFSTR("altering mailboxes table"));
  return v2;
}

uint64_t _SochiFixFlaggedCount(sqlite3 *a1)
{
  int v2;
  uint64_t v3;
  void *v4;

  v2 = sqlite3_exec(a1, "UPDATE mailboxes SET flagged_count = (select count(*) FROM messages WHERE mailbox = mailboxes.rowid AND flags&16 > 0 AND flags&2 == 0);",
         0,
         0,
         0);
  _HandleSQLiteError(a1, CFSTR("updating flagged_count"));
  if (v2)
    return 0;
  _SQLFromFile();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = _ExecuteSQL(a1, v4, CFSTR("performing statements from file \"triggers.sql\""));

  return v3;
}

void sub_1A50BE01C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

BOOL _AddConversationFlags(sqlite3 *a1)
{
  unint64_t v2;
  int v3;

  v2 = 0;
  do
  {
    v3 = sqlite3_exec(a1, off_1E4E8D2F0[v2], 0, 0, 0);
    _HandleSQLiteError(a1, CFSTR("creating conversations and conversation_id_message_id tables"));
    if (v2 > 4)
      break;
    ++v2;
  }
  while (!v3);
  return v3 == 0;
}

BOOL _ResetStatusCountsForDrafts(sqlite3 *a1)
{
  int v2;
  _BOOL4 v3;
  id v4;
  sqlite3_stmt *v5;
  int v6;
  void *v7;
  id v8;
  const char *v9;
  char *v10;
  _BOOL8 v11;
  sqlite3_stmt *ppStmt;

  ppStmt = (sqlite3_stmt *)0xAAAAAAAAAAAAAAAALL;
  v2 = sqlite3_prepare_v2(a1, "SELECT DISTINCT mailbox FROM messages WHERE flags&64 = 64;", -1, &ppStmt, 0);
  v3 = v2 == 0;
  v4 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  if (!v2)
  {
    v5 = ppStmt;
    if (ppStmt)
    {
      while (1)
      {
        v6 = sqlite3_step(v5);
        if (v6 != 100)
          break;
        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithLongLong:", sqlite3_column_int64(ppStmt, 0));
        v7 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v4, "addObject:", v7);

        v5 = ppStmt;
      }
      _HandleSQLiteError(a1, CFSTR("finding mailbox IDs of draft mailboxes"));
      v3 = v6 == 101;
      sqlite3_finalize(ppStmt);
    }
  }
  if (v3)
  {
    objc_msgSend(v4, "componentsJoinedByString:", CFSTR(", "));
    v8 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
    v9 = (const char *)objc_msgSend(v8, "UTF8String");

    v10 = sqlite3_mprintf("UPDATE mailboxes SET last_sync_status_count = 0, most_recent_status_count = 0 WHERE url LIKE 'imap:%%' AND rowid IN (%s)", v9);
    LODWORD(v9) = sqlite3_exec(a1, v10, 0, 0, 0);
    sqlite3_free(v10);
    v11 = (_DWORD)v9 == 0;
    _HandleSQLiteError(a1, CFSTR("updating count columns for non-draft mailboxes"));
  }
  else
  {
    v11 = 0;
  }

  return v11;
}

void sub_1A50BE218(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

BOOL _AddProtectedDataIndexes(sqlite3 *a1)
{
  _BOOL8 v2;

  v2 = sqlite3_exec(a1, "CREATE INDEX IF NOT EXISTS messages_subject_index ON messages(subject);\n"
         "CREATE INDEX IF NOT EXISTS messages_summary_index ON messages(summary);\n"
         "CREATE INDEX IF NOT EXISTS recipients_address_index ON recipients(address);\n",
         0,
         0,
         0) == 0;
  _HandleSQLiteError(a1, CFSTR("Creating indexes to protected data"));
  return v2;
}

BOOL _AddThreadsSendersAndRecipientsIndexes(sqlite3 *a1)
{
  _BOOL8 v2;

  v2 = sqlite3_exec(a1, "CREATE INDEX IF NOT EXISTS thread_senders_address_thread_index ON thread_senders(address, thread);\n"
         "CREATE INDEX IF NOT EXISTS thread_senders_thread_priority_date_index ON thread_senders(thread, priority, date);"
         "\n"
         "CREATE INDEX IF NOT EXISTS thread_recipients_address_thread_index ON thread_recipients(address, thread);\n"
         "CREATE INDEX IF NOT EXISTS thread_recipients_thread_priority_date_index ON thread_recipients(thread, priority, date);\n",
         0,
         0,
         0) == 0;
  _HandleSQLiteError(a1, CFSTR("Creating indexes for thread_senders and thread_recipients"));
  return v2;
}

BOOL _AddThreadsJournaledColumn(sqlite3 *a1)
{
  _BOOL8 v2;

  v2 = sqlite3_exec(a1, "ALTER TABLE threads ADD COLUMN journaled INTEGER NOT NULL DEFAULT 0;\n"
         "CREATE INDEX IF NOT EXISTS threads_journaled_scope_date_conversation_index ON threads(journaled, scope, date, c"
         "onversation);\n"
         "CREATE INDEX IF NOT EXISTS threads_journaled_date_scope_conversation_index ON threads(journaled, date, scope, c"
         "onversation) WHERE journaled = 1;\n"
         "DROP INDEX IF EXISTS threads_scope_read_date_conversation_index;\n"
         "DROP INDEX IF EXISTS threads_scope_flagged_date_conversation_index;\n"
         "DROP INDEX IF EXISTS threads_scope_has_red_flag_date_conversation_index;\n"
         "DROP INDEX IF EXISTS threads_scope_has_orange_flag_date_conversation_index;\n"
         "DROP INDEX IF EXISTS threads_scope_has_yellow_flag_date_conversation_index;\n"
         "DROP INDEX IF EXISTS threads_scope_has_green_flag_date_conversation_index;\n"
         "DROP INDEX IF EXISTS threads_scope_has_blue_flag_date_conversation_index;\n"
         "DROP INDEX IF EXISTS threads_scope_has_purple_flag_date_conversation_index;\n"
         "DROP INDEX IF EXISTS threads_scope_has_gray_flag_date_conversation_index;\n"
         "CREATE INDEX IF NOT EXISTS messages_mailbox_conversation_id_flag_color_date_received_journaled_index ON message"
         "s(mailbox, conversation_id, flag_color, date_received, journaled);\n"
         "DROP INDEX IF EXISTS messages_mailbox_conversation_id_flag_color_date_received_index;\n",
         0,
         0,
         0) == 0;
  _HandleSQLiteError(a1, CFSTR("Adding threads.journaled and tweaking some indexes"));
  return v2;
}

BOOL _AddMessageIndexesForThreadQueries(sqlite3 *a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  const char *v9;
  _QWORD v11[5];

  v11[4] = *MEMORY[0x1E0C80C00];
  v2 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D1EFF8]), "initWithTableName:columnNames:", CFSTR("messages"), &unk_1E4F694D8);
  v11[0] = v2;
  v3 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D1EFF8]), "initWithTableName:columnNames:", CFSTR("messages"), &unk_1E4F694F0);
  v11[1] = v3;
  v4 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D1EFF8]), "initWithTableName:columnNames:", CFSTR("messages"), &unk_1E4F69508);
  v11[2] = v4;
  v5 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D1EFF8]), "initWithTableName:columnNames:", CFSTR("messages"), &unk_1E4F69520);
  v11[3] = v5;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v11, 4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v6, "ef_map:", &__block_literal_global_641);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "componentsJoinedByString:", CFSTR("\n"));
  v8 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
  v9 = (const char *)objc_msgSend(v8, "UTF8String");

  LODWORD(v7) = sqlite3_exec(a1, v9, 0, 0, 0);
  _HandleSQLiteError(a1, CFSTR("Creating indexes for thread_senders and thread_recipients"));

  return (_DWORD)v7 == 0;
}

void sub_1A50BE4E4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

BOOL _AddMessageIDIndex(sqlite3 *a1)
{
  void *v2;
  id v3;
  const char *v4;

  v2 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D1EFF8]), "initWithTableName:columnNames:", CFSTR("messages"), &unk_1E4F69538);
  objc_msgSend(v2, "definitionWithDatabaseName:", 0);
  v3 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
  v4 = (const char *)objc_msgSend(v3, "UTF8String");

  LODWORD(v3) = sqlite3_exec(a1, v4, 0, 0, 0);
  _HandleSQLiteError(a1, CFSTR("Creating messages_message_id_deleted_journaled_read_mailbox_index"));

  return (_DWORD)v3 == 0;
}

void sub_1A50BE5F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

BOOL _AddSenderVIPUnreadCountQueryIndex(sqlite3 *a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  const char *v15;
  _QWORD v17[5];

  v17[4] = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0D1EFC0], "column:", CFSTR("sender_vip"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "equalTo:", &unk_1E4F69D00);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0D1EFC0], "column:", CFSTR("journaled"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "equalTo:", &unk_1E4F69D18);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0D1EFC0], "column:", CFSTR("deleted"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "equalTo:", &unk_1E4F69D18);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0D1EFC0], "column:", CFSTR("read"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "equalTo:", &unk_1E4F69D18);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  v10 = objc_alloc(MEMORY[0x1E0D1EF90]);
  v17[0] = v3;
  v17[1] = v5;
  v17[2] = v7;
  v17[3] = v9;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v17, 4);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = (void *)objc_msgSend(v10, "initWithExpressions:", v11);

  v13 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D1EFF8]), "initWithTableName:columnNames:where:unique:", CFSTR("messages"), &unk_1E4F69550, v12, 0);
  objc_msgSend(v13, "definitionWithDatabaseName:", 0);
  v14 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
  v15 = (const char *)objc_msgSend(v14, "UTF8String");

  LODWORD(v14) = sqlite3_exec(a1, v15, 0, 0, 0);
  _HandleSQLiteError(a1, CFSTR("Creating messages_sender_vip_deleted_journaled_read_message_id_index"));

  return (_DWORD)v14 == 0;
}

void sub_1A50BE82C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

BOOL _AddJournaledUndeletedIndex(sqlite3 *a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  const char *v11;
  _QWORD v13[3];

  v13[2] = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0D1EFC0], "column:", CFSTR("journaled"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "equalTo:", &unk_1E4F69D00);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0D1EFC0], "column:", CFSTR("deleted"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "equalTo:", &unk_1E4F69D18);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  v6 = objc_alloc(MEMORY[0x1E0D1EF90]);
  v13[0] = v3;
  v13[1] = v5;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v13, 2);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)objc_msgSend(v6, "initWithExpressions:", v7);

  v9 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D1EFF8]), "initWithTableName:columnNames:where:unique:", CFSTR("messages"), &unk_1E4F69580, v8, 0);
  objc_msgSend(v9, "definitionWithDatabaseName:", 0);
  v10 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
  v11 = (const char *)objc_msgSend(v10, "UTF8String");

  LODWORD(v10) = sqlite3_exec(a1, v11, 0, 0, 0);
  _HandleSQLiteError(a1, CFSTR("Creating messages_journaled_deleted_date_received_index"));

  return (_DWORD)v10 == 0;
}

void sub_1A50BEA74(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

BOOL _AddThreadJournaledDateIndex(sqlite3 *a1)
{
  id v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  const char *v7;

  v2 = objc_alloc(MEMORY[0x1E0D1EFF8]);
  objc_msgSend(MEMORY[0x1E0D1EFC0], "column:", CFSTR("journaled"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "equalTo:", &unk_1E4F69D00);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(v2, "initWithTableName:columnNames:where:unique:", CFSTR("threads"), &unk_1E4F69598, v4, 0);

  objc_msgSend(v5, "definitionWithDatabaseName:", 0);
  v6 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
  v7 = (const char *)objc_msgSend(v6, "UTF8String");

  LODWORD(v6) = sqlite3_exec(a1, v7, 0, 0, 0);
  _HandleSQLiteError(a1, CFSTR("Creating threads_journaled_date_scope_conversation_index"));

  return (_DWORD)v6 == 0;
}

void sub_1A50BEBD8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

BOOL _AddAppBadgeCountIndexes(sqlite3 *a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  const char *v9;
  _QWORD v11[4];

  v11[3] = *MEMORY[0x1E0C80C00];
  v2 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D1EFF8]), "initWithTableName:columnNames:", CFSTR("messages"), &unk_1E4F695F8);
  v3 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D1EFF8]), "initWithTableName:columnNames:", CFSTR("messages"), &unk_1E4F69610, v2);
  v11[1] = v3;
  v4 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D1EFF8]), "initWithTableName:columnNames:", CFSTR("thread_mailboxes"), &unk_1E4F69628);
  v11[2] = v4;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v11, 3);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v5, "ef_map:", &__block_literal_global_726);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "arrayByAddingObjectsFromArray:", &unk_1E4F69640);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "componentsJoinedByString:", CFSTR("\n"));
  v8 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
  v9 = (const char *)objc_msgSend(v8, "UTF8String");

  LODWORD(v6) = sqlite3_exec(a1, v9, 0, 0, 0);
  _HandleSQLiteError(a1, CFSTR("Creating indexes for app badge count"));

  return (_DWORD)v6 == 0;
}

void sub_1A50BEDA0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t _protectedIndexHasBeenInitialized(void *a1)
{
  id v1;
  uint64_t v2;
  void *v4;
  void *v5;

  v1 = a1;
  if ((objc_msgSend(v1, "protectedDatabaseAttached") & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "BOOL _protectedIndexHasBeenInitialized(EDPersistenceDatabaseConnection *__strong)");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("MFMailMessageLibraryMigrator.m"), 2995, CFSTR("Protected database must be attached"));

  }
  v2 = objc_msgSend(v1, "tableExists:inDatabase:", CFSTR("addresses"), CFSTR("protected"));

  return v2;
}

void sub_1A50BEEB8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

BOOL _ResetSummary(sqlite3 *a1)
{
  _BOOL8 v2;

  v2 = sqlite3_exec(a1, "UPDATE messages SET summary = NULL WHERE summary in (select rowid from protected.summaries where summary = 'This message has no content');\n"
         "DELETE FROM protected.summaries where summary = 'This message has no content'\n",
         0,
         0,
         0) == 0;
  _HandleSQLiteError(a1, CFSTR("Deleting all summaries = 'This message has no content' in protected data"));
  return v2;
}

BOOL _AddDeletedToMessagesConversationIDIndexes(sqlite3 *a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  const char *v11;
  _QWORD v13[6];

  v13[5] = *MEMORY[0x1E0C80C00];
  v2 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D1EFF8]), "initWithTableName:columnNames:", CFSTR("messages"), &unk_1E4F696A0);
  v3 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D1EFF8]), "initWithTableName:columnNames:", CFSTR("messages"), &unk_1E4F696B8, v2);
  v13[1] = v3;
  v4 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D1EFF8]), "initWithTableName:columnNames:", CFSTR("messages"), &unk_1E4F696D0);
  v13[2] = v4;
  v5 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D1EFF8]), "initWithTableName:columnNames:", CFSTR("messages"), &unk_1E4F696E8);
  v13[3] = v5;
  v6 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D1EFF8]), "initWithTableName:columnNames:", CFSTR("messages"), &unk_1E4F69700);
  v13[4] = v6;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v13, 5);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v7, "ef_map:", &__block_literal_global_763);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "arrayByAddingObjectsFromArray:", &unk_1E4F69718);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "componentsJoinedByString:", CFSTR("\n"));
  v10 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
  v11 = (const char *)objc_msgSend(v10, "UTF8String");

  LODWORD(v8) = sqlite3_exec(a1, v11, 0, 0, 0);
  _HandleSQLiteError(a1, CFSTR("Adding deleted to conversation_id indexes"));

  return (_DWORD)v8 == 0;
}

void sub_1A50BF118(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

BOOL _AddFilterIndexesAndRemoveTriggers(sqlite3 *a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  const char *v21;
  void *v23;
  sqlite3 *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  _QWORD v31[3];
  _QWORD v32[2];
  _QWORD v33[3];
  void *v34;
  _QWORD v35[6];

  v35[4] = *MEMORY[0x1E0C80C00];
  v25 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D1F000]), "initWithColumnName:", CFSTR("mailbox"));
  v30 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D1F000]), "initWithColumnName:", CFSTR("date_received"));
  objc_msgSend(MEMORY[0x1E0D1EFC0], "column:", CFSTR("deleted"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "equalTo:", &unk_1E4F69D18);
  v29 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0D1EFC0], "column:", CFSTR("journaled"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "equalTo:", &unk_1E4F69D18);
  v28 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0D1EFC0], "column:", CFSTR("read"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v24 = a1;
  objc_msgSend(v4, "equalTo:", &unk_1E4F69D18);
  v27 = (void *)objc_claimAutoreleasedReturnValue();

  v5 = objc_alloc(MEMORY[0x1E0D1EFF8]);
  v34 = v30;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v34, 1);
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_alloc(MEMORY[0x1E0D1EF90]);
  v33[0] = v29;
  v33[1] = v28;
  v33[2] = v27;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v33, 3);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)objc_msgSend(v6, "initWithExpressions:");
  v8 = (void *)objc_msgSend(v5, "initWithName:tableName:indexedColumns:where:unique:", CFSTR("messages_date_received_deleted0_journaled0_read0_index"), CFSTR("messages"), v26, v7, 0);
  v35[0] = v8;
  v9 = objc_alloc(MEMORY[0x1E0D1EFF8]);
  v32[0] = v25;
  v32[1] = v30;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v32, 2);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = objc_alloc(MEMORY[0x1E0D1EF90]);
  v31[0] = v29;
  v31[1] = v28;
  v31[2] = v27;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v31, 3);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = (void *)objc_msgSend(v11, "initWithExpressions:", v12);
  v14 = (void *)objc_msgSend(v9, "initWithName:tableName:indexedColumns:where:unique:", CFSTR("messages_mailbox_date_received_deleted0_journaled0_read0_index"), CFSTR("messages"), v10, v13, 0);
  v35[1] = v14;
  v15 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D1EFF8]), "initWithTableName:columnNames:", CFSTR("threads"), &unk_1E4F69730);
  v35[2] = v15;
  v16 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D1EFF8]), "initWithTableName:columnNames:", CFSTR("threads"), &unk_1E4F69748);
  v35[3] = v16;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v35, 4);
  v17 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v17, "ef_map:", &__block_literal_global_795);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "arrayByAddingObjectsFromArray:", &unk_1E4F69760);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v19, "componentsJoinedByString:", CFSTR("\n"));
  v20 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
  v21 = (const char *)objc_msgSend(v20, "UTF8String");

  LODWORD(v18) = sqlite3_exec(v24, v21, 0, 0, 0);
  _HandleSQLiteError(v24, CFSTR("Creating indexes for unread filters and dropping triggers"));

  return (_DWORD)v18 == 0;
}

void sub_1A50BF578(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, void *a14, void *a15, void *a16, void *a17)
{
  void *v17;

  _Unwind_Resume(a1);
}

BOOL _ModifyMessagesSearchableMessageIndex(sqlite3 *a1)
{
  _BOOL8 v2;

  v2 = sqlite3_exec(a1, "DROP INDEX IF EXISTS messages_deleted_searchable_message_index;\n"
         "CREATE INDEX IF NOT EXISTS messages_searchable_message_deleted_index ON messages(searchable_message, deleted);\n",
         0,
         0,
         0) == 0;
  _HandleSQLiteError(a1, CFSTR("Replacing messages_deleted_searchable_message_index with messages_searchable_message_deleted_index"));
  return v2;
}

BOOL _AddMessagesMailboxDeletedDateReceivedIndex(sqlite3 *a1)
{
  _BOOL8 v2;

  v2 = sqlite3_exec(a1, "CREATE INDEX IF NOT EXISTS messages_mailbox_deleted_date_received_index ON messages(mailbox, deleted, date_received) WHERE journaled = 0;",
         0,
         0,
         0) == 0;
  _HandleSQLiteError(a1, CFSTR("Adding messages_mailbox_deleted_date_received_index"));
  return v2;
}

uint64_t _UpdateGlobalIDIndex(void *a1)
{
  id v1;
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;

  v1 = a1;
  v2 = objc_msgSend(v1, "executeStatementString:errorMessage:", CFSTR("DROP INDEX IF EXISTS messages_global_message_id_index;"),
         CFSTR("Unable to drop index messages_global_message_id_index"));
  v3 = objc_alloc(MEMORY[0x1E0D1EFF8]);
  objc_msgSend(MEMORY[0x1E0D1EB30], "messagesTableName");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(v3, "initWithTableName:columnNames:", v4, &unk_1E4F69778);

  objc_msgSend(v5, "definitionWithDatabaseName:", 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if ((_DWORD)v2)
    v2 = objc_msgSend(v1, "executeStatementString:errorMessage:", v6, CFSTR("Unable to add index messages_global_message_id_mailbox_index"));

  return v2;
}

void sub_1A50BF810(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void _resetLocalAccountMboxCache()
{
  void *v0;
  void *v1;
  void *v2;
  int v3;
  id v4;
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  uint64_t v9;
  id v10;

  +[LocalAccount localAccount](LocalAccount, "localAccount");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "mailboxCachePath");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = 0;
  v3 = objc_msgSend(v2, "removeItemAtPath:error:", v1, &v10);
  v4 = v10;

  if (v3)
  {
    objc_msgSend(v0, "resetMailboxCache");
    v5 = (id)objc_msgSend(v0, "sendLaterFolder");
    v6 = (id)objc_msgSend(v0, "transientDraftsFolder");
    v7 = +[MailAccount outboxMailboxUid](MailAccount, "outboxMailboxUid");
  }
  else
  {
    +[MFMailMessageLibraryMigrator log](MFMailMessageLibraryMigrator, "log");
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      _resetLocalAccountMboxCache_cold_1((uint64_t)v4, v8, v9);

  }
}

void sub_1A50BF958(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

uint64_t _AddFilterPredicateToInboxThreadScopes(void *a1, uint64_t a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  _QWORD v23[3];

  v23[2] = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = objc_alloc(MEMORY[0x1E0D1F040]);
  v5 = (void *)objc_msgSend(v4, "initWithResultColumn:table:", *MEMORY[0x1E0D1EE00], CFSTR("mailboxes"));
  objc_msgSend(MEMORY[0x1E0D1EFC0], "column:", CFSTR("url"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "endsWith:caseSensitive:", CFSTR("INBOX"), 0);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setWhere:", v7);

  v8 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D1F058]), "initWithTable:conflictResolution:", CFSTR("thread_scopes"), 4);
  objc_msgSend(MEMORY[0x1E0D1EFC0], "column:", CFSTR("filter_predicate"));
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0D1EFF0], "ifNull:second:", v9, &unk_1E4F69D18);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = (void *)MEMORY[0x1E0D1EFB0];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", a2);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "or:with:", v10, v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "setObject:forKeyedSubscript:", v13, CFSTR("filter_predicate"));

  objc_msgSend(MEMORY[0x1E0D1EFC0], "column:", CFSTR("mailbox_type"));
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "equalTo:", &unk_1E4F69D30);
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0D1EFC0], "column:", CFSTR("mailbox"));
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "in:", v5);
  v17 = (void *)objc_claimAutoreleasedReturnValue();

  v18 = (void *)MEMORY[0x1E0D1F020];
  v23[0] = v15;
  v23[1] = v17;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v23, 2);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "combined:", v19);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "setWhereClause:", v20);

  v21 = objc_msgSend(v3, "executeUpdateStatement:error:", v8, 0);
  return v21;
}

void sub_1A50BFBFC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;

  v10 = v6;

  _Unwind_Resume(a1);
}

BOOL _addThreadNewestMessageColumn(void *a1)
{
  id v1;
  _BOOL8 v2;

  v1 = a1;
  v2 = sqlite3_exec((sqlite3 *)objc_msgSend(v1, "sqlDB"), "ALTER TABLE threads ADD COLUMN newest_message INTEGER REFERENCES messages(ROWID) ON DELETE SET NULL;CREATE INDE"
         "X IF NOT EXISTS threads_newest_message_index ON threads(newest_message);",
         0,
         0,
         0) == 0;

  return v2;
}

void sub_1A50BFD14(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50BFE58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A50C0108(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7, uint64_t a8, uint64_t a9, ...)
{
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v14;
  va_list va;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v14 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);

  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);

  _Unwind_Resume(a1);
}

void sub_1A50C0224(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50C03B8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_1A50C0520(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50C0650(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50C07C0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50C0840(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50C0920(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t _ExecuteSQL(sqlite3 *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;

  v5 = a2;
  v6 = a3;
  if (v5 && !sqlite3_exec(a1, (const char *)objc_msgSend(objc_retainAutorelease(v5), "UTF8String"), 0, 0, 0))
  {
    v7 = 1;
  }
  else
  {
    _HandleSQLiteError(a1, v6);
    v7 = 0;
  }

  return v7;
}

void sub_1A50C09F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

id _SQLFromFile()
{
  void *v0;
  __CFString *v1;
  void *v2;
  NSObject *v3;
  NSObject *v4;
  void *v5;
  id v7;
  uint8_t buf[4];
  const __CFString *v9;
  __int16 v10;
  void *v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0CB34D0], "bundleForClass:", objc_opt_class());
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "pathForResource:ofType:", CFSTR("triggers.sql"), 0);
  v1 = (__CFString *)objc_claimAutoreleasedReturnValue();

  if (v1)
  {
    v7 = 0;
    v2 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3940]), "initWithContentsOfFile:encoding:error:", v1, 4, &v7);
    v3 = v7;
    if (!v2)
    {
      +[MFMailMessageLibraryMigrator log](MFMailMessageLibraryMigrator, "log");
      v4 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
      {
        -[NSObject ef_publicDescription](v3, "ef_publicDescription");
        v5 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v9 = v1;
        v10 = 2114;
        v11 = v5;
        _os_log_impl(&dword_1A4F90000, v4, OS_LOG_TYPE_DEFAULT, "Error: failed to get contents of \"%@\": %{public}@", buf, 0x16u);

      }
    }
  }
  else
  {
    +[MFMailMessageLibraryMigrator log](MFMailMessageLibraryMigrator, "log");
    v3 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v9 = CFSTR("triggers.sql");
      _os_log_impl(&dword_1A4F90000, v3, OS_LOG_TYPE_DEFAULT, "Error: failed to find \"%@\"", buf, 0xCu);
    }
    v2 = 0;
  }

  return v2;
}

void sub_1A50C0BBC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

uint64_t _ExecuteQueries(sqlite3 *a1, uint64_t a2, int a3, void *a4)
{
  id v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v7 = a4;
  if (a3 < 1)
  {
    v11 = 1;
  }
  else
  {
    v8 = 0;
    v9 = a3;
    do
    {
      v10 = executeQuery(1, a1, *(const char **)(a2 + 8 * v8), v7);
      v11 = v10;
      if (++v8 < v9)
        v12 = v10;
      else
        v12 = 0;
    }
    while ((v12 & 1) != 0);
  }

  return v11;
}

void sub_1A50C0C84(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t executeQuery(int a1, sqlite3 *a2, const char *a3, void *a4)
{
  uint64_t v6;
  id v7;

  LODWORD(v6) = a1;
  v7 = a4;
  LODWORD(a3) = sqlite3_exec(a2, a3, 0, 0, 0);
  _HandleSQLiteError(a2, v7);
  if ((_DWORD)a3)
    v6 = 0;
  else
    v6 = v6;

  return v6;
}

void sub_1A50C0D00(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50C0E44(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50C11F0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;

  _Unwind_Resume(a1);
}

void sub_1A50C1660(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50C1884(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A50C1A70(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50C1CE4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50C1EEC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50C20A0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50C22D8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A50C23CC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A50C244C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50C252C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50C25CC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50C2910(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50C29BC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A50C2B80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50C352C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,void *a28,void *a29)
{
  void *v29;
  void *v30;

  _Unwind_Resume(a1);
}

void sub_1A50C37CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50C39A0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_1A50C3B10(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50C3D4C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50C3FF4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50C417C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A50C4214(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50C4394(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50C4A5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,void *a27,void *a28)
{
  void *v28;
  void *v29;

  _Unwind_Resume(a1);
}

void sub_1A50C4C00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,void *a38)
{
  void *v38;
  void *v39;

  JUMPOUT(0x1A50C4BD4);
}

void sub_1A50C4C8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50C4F34(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A50C5060(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50C5170(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50C51F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50C54B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22)
{
  void *v22;
  void *v23;

  _Unwind_Resume(a1);
}

void sub_1A50C5604(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1A50C5680(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50C58C8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50C5A1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;

  _Unwind_Resume(a1);
}

void sub_1A50C5B4C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50C5C9C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_1A50C63C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,void *a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,uint64_t a26,os_activity_scope_state_s state)
{

  _Unwind_Resume(a1);
}

void sub_1A50C6724(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A50C6804(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50C6890(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50C6C58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, _Unwind_Exception *exception_object, void *a10, void *a11, void *a12)
{
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

void sub_1A50C6EB4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50C7038(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50C71C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_1A50C72B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1A50C7354(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50C73E8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50C7498(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50C7540(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50C7A74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, void *a17, void *a18, void *a19)
{
  void *v19;
  void *v20;
  void *v21;

  _Unwind_Resume(a1);
}

void sub_1A50C7D60(_Unwind_Exception *a1)
{
  void *v1;
  os_unfair_lock_s *v2;
  void *v3;
  void *v4;
  void *v5;

  os_unfair_lock_unlock(v2);
  _Unwind_Resume(a1);
}

void sub_1A50C7E24(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50C7F54(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  os_unfair_lock_s *v3;
  void *v4;

  os_unfair_lock_unlock(v3);
  _Unwind_Resume(a1);
}

void sub_1A50C7FA4()
{
  JUMPOUT(0x1A50C7F98);
}

void sub_1A50C8160(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50C82CC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A50C83D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1A50C8454(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50C85E8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50C8684(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50C8720(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50C87C0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50C88B8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v6 = v4;

  _Unwind_Resume(a1);
}

void sub_1A50C89C8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50C8A3C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50C8D14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13)
{
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1A50C8E98(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1A50C90D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_1A50C9198(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50C91F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50C92A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A50C937C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50C940C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A50C94BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50C961C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A50C96C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50C9758(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50C9978(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A50C9EA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12, void *a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1A50CA31C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_1A50CA484(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50CA4EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50CA590(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1A50CA654(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A50CA778(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1A50CA810(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50CA8CC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A50CAD94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13, void *a14, void *a15)
{
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_1A50CB014(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1A50CB0B4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50CB174(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A50CB260(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A50CB314(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50CB3A4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50CB51C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50CB8BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, void *a20,void *a21,void *a22,void *a23,void *a24,void *a25,void *a26)
{
  void *v26;
  uint64_t v27;

  _Unwind_Resume(a1);
}

void sub_1A50CB9C8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50CBA54(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50CBC24(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50CBD90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, void *a20)
{
  void *v20;
  void *v21;
  void *v22;

  _Unwind_Resume(a1);
}

void sub_1A50CC14C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A50CC440(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50CC7DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13)
{
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1A50CCA58(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A50CCAF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50CCBEC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50CCEF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A50CD150(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A50CD1F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50CD2F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50CD4B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_activity_scope_state_s state)
{
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  os_activity_scope_leave(&state);
  _Unwind_Resume(a1);
}

void sub_1A50CE630(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,void *a21,void *a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,void *a27,void *a28)
{
  void *v28;
  void *v29;
  void *v30;
  void *v31;

  _Block_object_dispose(&STACK[0x260], 8);
  _Block_object_dispose(&STACK[0x290], 8);

  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__17(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__17(uint64_t a1)
{

}

void sub_1A50CEBE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1A50CED00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19)
{
  void *v19;
  void *v20;

  _Unwind_Resume(a1);
}

void sub_1A50CEDB4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50CEEF0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A50CF0F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A50CF22C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50CF3D4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50CF48C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50CF578(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50CF640(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  if (!v10)

  _Unwind_Resume(a1);
}

void sub_1A50CF79C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22)
{
  void *v22;
  void *v23;
  void *v24;
  void *v25;

  _Unwind_Resume(a1);
}

void sub_1A50CFA0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, void *a15, void *a16, void *a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,void *a24)
{
  void *v24;
  void *v25;
  void *v26;
  void *v27;

  _Unwind_Resume(a1);
}

void sub_1A50CFB5C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50CFDDC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50CFEBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50D002C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50D0148(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1A50D0210(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50D0360(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50D08A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25)
{
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;

  _Unwind_Resume(a1);
}

void sub_1A50D0AF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, os_activity_scope_state_s state)
{
  void *v15;
  void *v16;
  void *v17;
  void *v18;

  os_activity_scope_leave(&state);
  _Unwind_Resume(a1);
}

void sub_1A50D0D00(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50D0EA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

void sub_1A50D0F40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50D1054(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50D1154(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  void *v20;

  _Unwind_Resume(a1);
}

void sub_1A50D1268(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50D1384(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50D1494(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A50D15D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  int v12;
  void *v13;

  if (v12)

  _Unwind_Resume(a1);
}

void sub_1A50D17E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1A50D19B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, uint64_t a16, void *a17, void *a18)
{
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;

  _Unwind_Resume(a1);
}

void sub_1A50D1BAC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A50D1FC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33)
{
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  uint64_t v37;

  _Unwind_Resume(a1);
}

void sub_1A50D2278(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, void *a15, uint64_t a16, void *a17, void *a18, void *a19)
{
  void *v19;
  void *v20;
  void *v21;
  id *v22;
  uint64_t v23;

  objc_destroyWeak(v22);
  objc_destroyWeak((id *)(v23 - 72));

  _Unwind_Resume(a1);
}

void sub_1A50D25EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, void *a16, void *a17, void *a18, void *a19, void *a20,uint64_t a21,uint64_t a22,uint64_t a23,id location,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30)
{
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  id *v35;

  objc_destroyWeak(v35);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a25, 8);

  _Unwind_Resume(a1);
}

void sub_1A50D2C74(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50D2E5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50D3240(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_1A50D3464(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50D376C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, void *a15, void *a16, void *a17)
{
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  _Unwind_Resume(a1);
}

void sub_1A50D39F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, void *a14, void *a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;

  _Unwind_Resume(a1);
}

void sub_1A50D402C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, void *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,id a50,char a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,id a56)
{
  void *v56;
  void *v57;
  void *v58;

  _Block_object_dispose(&a45, 8);
  _Block_object_dispose(&a51, 8);

  _Unwind_Resume(a1);
}

void sub_1A50D41FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50D4260(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50D42AC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50D4430(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1A50D4498()
{
  JUMPOUT(0x1A50D4488);
}

void sub_1A50D44E4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50D48AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1A50D4A94(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50D4C14(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50D4E14(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  _Unwind_Resume(a1);
}

void sub_1A50D5084(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;

  v9 = v7;

  _Unwind_Resume(a1);
}

void sub_1A50D5238(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1A50D52CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{

  _Unwind_Resume(a1);
}

void sub_1A50D5418(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50D54B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1A50D5544(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{

  _Unwind_Resume(a1);
}

void sub_1A50D55F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1A50D56DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  id *v14;
  void *v15;
  uint64_t v16;

  objc_destroyWeak(v14);
  objc_destroyWeak((id *)(v16 - 40));
  _Unwind_Resume(a1);
}

void sub_1A50D5838(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50D58D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1A50D5964(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{

  _Unwind_Resume(a1);
}

void sub_1A50D5A08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1A50D5A9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{

  _Unwind_Resume(a1);
}

void sub_1A50D5B40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1A50D5BD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{

  _Unwind_Resume(a1);
}

void sub_1A50D5C44(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50D5D18(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50D6094(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object, void *a11, void *a12)
{
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  _Unwind_Resume(a1);
}

void sub_1A50D619C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50D62F4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

__CFString *basicSearchExpressionFromCriterion(void *a1)
{
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __CFString *v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  if (objc_msgSend(v1, "criterionType") == 25)
  {
    objc_msgSend(v1, "criteria");
    v10 = 0u;
    v11 = 0u;
    v8 = 0u;
    v9 = 0u;
    v2 = (id)objc_claimAutoreleasedReturnValue();
    v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    if (v3)
    {
      v4 = *(_QWORD *)v9;
LABEL_4:
      v5 = 0;
      while (1)
      {
        if (*(_QWORD *)v9 != v4)
          objc_enumerationMutation(v2);
        basicSearchExpressionFromCriterion(*(_QWORD *)(*((_QWORD *)&v8 + 1) + 8 * v5));
        v6 = (__CFString *)objc_claimAutoreleasedReturnValue();
        if (v6)
          break;
        if (v3 == ++v5)
        {
          v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
          if (v3)
            goto LABEL_4;
          v6 = 0;
          break;
        }
      }
    }
    else
    {
      v6 = &stru_1E4F1C8F8;
    }

  }
  else
  {
    objc_msgSend(v1, "expression");
    v6 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }

  return v6;
}

void sub_1A50D6450(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50D65FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50D67E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A50D68D8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50D6A08(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50D6B20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1A50D6BEC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50D7298(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18, void *a19, void *a20,void *a21,void *a22,void *a23,void *a24,void *a25,void *a26)
{
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;

  _Unwind_Resume(a1);
}

void sub_1A50D7494(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50D7A88(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50D7B8C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50D7BE4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50D7C70(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50D7F84(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50D805C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50D8A48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1A50D8D04(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1A50D8E64(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50D8ED0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50D8FD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50D9054(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50D9440(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{

  _Unwind_Resume(a1);
}

void sub_1A50D95C0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50D964C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50D9948(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A50D9A24(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50D9C04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50D9C60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)MFMessageLoadingContext;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_1A50D9D88(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A50DA074(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50DA264(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1A50DA334(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A50DA4BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;

  _Unwind_Resume(a1);
}

void sub_1A50DA5AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50DA630(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50DA6A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50DA748(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50DA8A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50DB718(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,void *a36)
{
  void *v36;

  _Unwind_Resume(a1);
}

uint64_t _contentLoadedEmptyDocument(void *a1, uint64_t a2)
{
  id v3;
  void *v4;
  uint64_t v5;

  v3 = a1;
  objc_msgSend(v3, "firstObject");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v3, "count") == 1 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    if (a2)
      v5 = objc_msgSend(v4, "isVisuallyEmpty");
    else
      v5 = 1;
  }
  else
  {
    v5 = 0;
  }

  return v5;
}

void sub_1A50DBA18(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50DBB40(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50DBCF0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50DBEBC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50DC16C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_1A50DC2D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50DC598(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, void *a16, void *a17)
{
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;

  _Unwind_Resume(a1);
}

void sub_1A50DC784(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  void *v16;

  _Unwind_Resume(a1);
}

void sub_1A50DC908(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1A50DCA80(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v3;

  _Unwind_Resume(a1);
}

void sub_1A50DD010(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,void *a24,void *a25,void *a26,void *a27)
{
  void *v27;

  _Unwind_Resume(a1);
}

void sub_1A50DD218(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50DD48C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50DD63C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50DD7F0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50DD93C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50DD9CC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50DDB34(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v6 = v4;

  _Unwind_Resume(a1);
}

void sub_1A50DDBBC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50DDC04(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50DDD80(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50DDEC4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50DE170(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id a24)
{
  uint64_t v24;

  _Block_object_dispose(&a19, 8);

  _Block_object_dispose((const void *)(v24 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__18(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__18(uint64_t a1)
{

}

void sub_1A50DE3A8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50DE498(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50DE598(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A50DE690(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50DE76C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1A50DE7E0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50DE8D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_1A50DEACC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1A50DEB90(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50DED64(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50DEEF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50DEF54(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50DEFBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50DF054(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50DF0B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50DF120(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50DF1B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50DF21C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50DF284(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50DF31C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50DF380(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50DF3E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50DF528(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_1A50DF5C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{

  _Unwind_Resume(a1);
}

void sub_1A50DF670(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50DF8B4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50DF950(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50DFAB8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_1A50DFB1C()
{
  JUMPOUT(0x1A50DFB0CLL);
}

uint64_t MFErrorCodeWithDataStatus(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 5)
    return -1;
  else
    return qword_1A59999D8[a1 - 1];
}

void sub_1A50DFC38(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t _NetworkReachabilityCallBack(uint64_t a1, uint64_t a2, void *a3)
{
  return objc_msgSend(a3, "_setFlags:forReachability:", a2, a1);
}

uint64_t _DynamicStoreCallBack(uint64_t a1, uint64_t a2, void *a3)
{
  return objc_msgSend(a3, "_checkKeys:forStore:", a2, a1);
}

uint64_t _WiFiCallBack(uint64_t a1, uint64_t a2, void *a3)
{
  return objc_msgSend(a3, "_handleWiFiNotification:", a2);
}

void sub_1A50DFD1C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50DFE08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)MFNetworkController;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_1A50E019C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50E020C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50E0384(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_1A50E0410(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50E04B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1A50E052C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50E0614(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50E0734(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50E0828(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50E08CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A50E09D8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50E0C24(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A50E0DD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50E0EB0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50E0F04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)MFNWConnectionWrapper;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_1A50E1000(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50E113C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50E16E8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A50E1930(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50E1F00(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50E20CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_1A50E2258(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A50E2340(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50E23CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50E2448(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50E26D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  void *v9;
  void *v10;
  va_list va;

  va_start(va, a9);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A50E27B0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50E2934(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50E2E00(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50E3278(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50E34F4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50E357C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50E38A8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A50E3BAC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50E3D50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1A50E3F34(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50E3F94(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50E4038(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_8_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0x12u);
}

void sub_1A50E4310(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50E4360(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50E48FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

void sub_1A50E4AFC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50E4B78(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50E4C1C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50E4C98(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50E4D0C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50E4D6C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50E4DD4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50E4E98(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50E4F70(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50E4FCC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50E5090(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50E51A4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50E52C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50E535C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50E53EC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50E54C0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A50E551C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50E5590(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50E5630(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A50E5838(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50E58B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50E5B04(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50E60B8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A50E6234(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50E6354(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50E6430(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50E64DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50E6580(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50E67A0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50E6890(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50E68E0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50E6978(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

Class initNNMKContentAttributedStringHTMLParser()
{
  Class result;

  if (LoadNanoMailKitServer_loadPredicate != -1)
    dispatch_once(&LoadNanoMailKitServer_loadPredicate, &__block_literal_global_54);
  result = objc_getClass("NNMKContentAttributedStringHTMLParser");
  classNNMKContentAttributedStringHTMLParser = (uint64_t)result;
  getNNMKContentAttributedStringHTMLParserClass = (uint64_t (*)())NNMKContentAttributedStringHTMLParserFunction;
  return result;
}

id NNMKContentAttributedStringHTMLParserFunction()
{
  return (id)classNNMKContentAttributedStringHTMLParser;
}

Class initNNMKAttachment()
{
  Class result;

  if (LoadNanoMailKitServer_loadPredicate != -1)
    dispatch_once(&LoadNanoMailKitServer_loadPredicate, &__block_literal_global_54);
  result = objc_getClass("NNMKAttachment");
  classNNMKAttachment = (uint64_t)result;
  getNNMKAttachmentClass = (uint64_t (*)())NNMKAttachmentFunction;
  return result;
}

id NNMKAttachmentFunction()
{
  return (id)classNNMKAttachment;
}

Class initNNMKMessage()
{
  Class result;

  if (LoadNanoMailKitServer_loadPredicate != -1)
    dispatch_once(&LoadNanoMailKitServer_loadPredicate, &__block_literal_global_54);
  result = objc_getClass("NNMKMessage");
  classNNMKMessage = (uint64_t)result;
  getNNMKMessageClass = (uint64_t (*)())NNMKMessageFunction;
  return result;
}

id NNMKMessageFunction()
{
  return (id)classNNMKMessage;
}

Class initNNMKMessageContent()
{
  Class result;

  if (LoadNanoMailKitServer_loadPredicate != -1)
    dispatch_once(&LoadNanoMailKitServer_loadPredicate, &__block_literal_global_54);
  result = objc_getClass("NNMKMessageContent");
  classNNMKMessageContent = (uint64_t)result;
  getNNMKMessageContentClass = (uint64_t (*)())NNMKMessageContentFunction;
  return result;
}

id NNMKMessageContentFunction()
{
  return (id)classNNMKMessageContent;
}

Class initNNMKImageAttachment()
{
  Class result;

  if (LoadNanoMailKitServer_loadPredicate != -1)
    dispatch_once(&LoadNanoMailKitServer_loadPredicate, &__block_literal_global_54);
  result = objc_getClass("NNMKImageAttachment");
  classNNMKImageAttachment = (uint64_t)result;
  getNNMKImageAttachmentClass = (uint64_t (*)())NNMKImageAttachmentFunction;
  return result;
}

id NNMKImageAttachmentFunction()
{
  return (id)classNNMKImageAttachment;
}

Class initNNMKImageUtility()
{
  Class result;

  if (LoadNanoMailKitServer_loadPredicate != -1)
    dispatch_once(&LoadNanoMailKitServer_loadPredicate, &__block_literal_global_54);
  result = objc_getClass("NNMKImageUtility");
  classNNMKImageUtility = (uint64_t)result;
  getNNMKImageUtilityClass = (uint64_t (*)())NNMKImageUtilityFunction;
  return result;
}

id NNMKImageUtilityFunction()
{
  return (id)classNNMKImageUtility;
}

void sub_1A50E6CD4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50E6D98(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50E6F60(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50E7154(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A50E75F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void MFPersistenceAdaptorPowerLogDidCreateInstance(char a1)
{
  _QWORD block[4];
  char v2;

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __MFPersistenceAdaptorPowerLogDidCreateInstance_block_invoke;
  block[3] = &__block_descriptor_33_e5_v8__0l;
  v2 = a1;
  if (MFPersistenceAdaptorPowerLogDidCreateInstance_onceToken != -1)
    dispatch_once(&MFPersistenceAdaptorPowerLogDidCreateInstance_onceToken, block);
}

void sub_1A50E7768(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t __powerLogIdentifier_block_invoke()
{
  uint64_t result;

  result = PPSCreateTelemetryIdentifier();
  powerLogIdentifier_identifier = result;
  return result;
}

void sub_1A50E7888(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50E78D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50E79D0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A50E7BE0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A50E7C9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1A50E7D28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1A50E7E00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)MFPersistenceDatabaseConnection_iOS;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_1A50E7ED8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50E7F8C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50E80F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50E81B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50E8268(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50E8318(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50E84D4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void _powerChanged(uint64_t a1, uint64_t a2, uint64_t a3, intptr_t a4)
{
  NSObject *v6;
  unsigned int v7;
  unint64_t v8;
  __CFString *v9;
  uint8_t buf[4];
  __CFString *v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  MFLogGeneral();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    HIDWORD(v8) = a3;
    LODWORD(v8) = a3 + 536870288;
    v7 = v8 >> 4;
    if (v7 < 0xC && ((0xA07u >> v7) & 1) != 0)
    {
      v9 = off_1E4E8E7F0[v7];
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%d"), a3);
      v9 = (__CFString *)objc_claimAutoreleasedReturnValue();
    }
    *(_DWORD *)buf = 138412290;
    v11 = v9;
    _os_log_impl(&dword_1A4F90000, v6, OS_LOG_TYPE_INFO, "Power changed: %@", buf, 0xCu);

  }
  switch((_DWORD)a3)
  {
    case 0xE0000300:
      dispatch_async(MEMORY[0x1E0C80D38], &__block_literal_global_77);
      break;
    case 0xE0000280:
      dispatch_async(MEMORY[0x1E0C80D38], &__block_literal_global_74);
      IOAllowPowerChange(sRootDomainConnect, a4);
      break;
    case 0xE0000270:
      IOAllowPowerChange(sRootDomainConnect, a4);
      break;
  }
}

void sub_1A50E86C0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50E872C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50E87E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)MFPowerController;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_1A50E8934(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50E8C08(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50E8DAC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50E8F24(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50E9048(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void MFUnregisterPowerObserver(void *a1)
{
  id v1;
  id v2;
  void *v3;
  _QWORD v4[4];
  id v5;

  v1 = a1;
  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = __MFUnregisterPowerObserver_block_invoke;
  v4[3] = &unk_1E4E88DC8;
  v2 = v1;
  v5 = v2;
  objc_msgSend(MEMORY[0x1E0D1F070], "mainThreadScheduler");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "performBlock:", v4);

}

void sub_1A50E90F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1A50E91D0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50E92B8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50E932C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t ___powerChanged_block_invoke()
{
  return objc_msgSend((id)sObservers, "makeObjectsPerformSelector:", sel_systemWillSleep);
}

uint64_t ___powerChanged_block_invoke_2()
{
  return objc_msgSend((id)sObservers, "makeObjectsPerformSelector:", sel_systemDidWake);
}

void sub_1A50E97D8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50E996C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50E9A5C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50E9ADC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50E9B68(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50E9C30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  v13 = v11;

  _Unwind_Resume(a1);
}

void sub_1A50E9D9C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50E9E68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  void *v7;
  va_list va;

  va_start(va, a7);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A50E9ED4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50E9F34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50EA07C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50EA160(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50EA220(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50EA39C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50EA470(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50EA674(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50EA730(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A50EA918(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A50EAA24(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50EAAB8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50EAB24(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50EAB94(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50EAEE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  _Unwind_Resume(a1);
}

void sub_1A50EB0F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50EB1FC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1A50EB30C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50EB420(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50EB524(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50EB5CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50EB718(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50EB908(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50EB978(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50EBA58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50EBADC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50EBB6C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50EBE20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12)
{
  void *v12;
  void *v13;
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1A50EBFE4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A50EC120(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A50EC4A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1A50EC5F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A50EC674(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50EC6D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50EC73C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50EC8A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50ECAB4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A50ECDB4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50ECF84(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v6 = v4;

  _Unwind_Resume(a1);
}

void sub_1A50ED220(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1A50ED75C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  void *v20;

  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__19(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__19(uint64_t a1)
{

}

void sub_1A50EDEA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;

  _Unwind_Resume(a1);
}

void sub_1A50EE024(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50EE0DC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50EE54C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17)
{

  _Unwind_Resume(a1);
}

void sub_1A50EE72C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50EE838(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50EE8CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50EEA50(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50EEB60(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50EED20(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50EEE0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)MFSecureMIMECompositionManager;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_1A50EEF84(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50EF0D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1A50EF46C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1A50EF728(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50EF7F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50EF848(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50EFA60(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50EFB80(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50EFD50(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50EFF28(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50F00D0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A50F0128(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50F01CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50F025C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50F0450(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50F060C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50F0800(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50F0A30(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50F0C14(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50F11F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, void *a16, uint64_t a17, void *a18)
{

  _Unwind_Resume(a1);
}

id checkCertificateExpiration(uint64_t a1, void *a2)
{
  id v3;
  double Current;
  double v5;
  double v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  NSObject *v18;
  void *v19;
  uint8_t buf[4];
  uint64_t v22;
  __int16 v23;
  id v24;
  __int16 v25;
  void *v26;
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  Current = CFAbsoluteTimeGetCurrent();
  SecCertificateNotValidBefore();
  v6 = v5;
  SecCertificateNotValidAfter();
  if (Current >= v6)
  {
    v10 = v7;
    if (Current <= v7)
    {
      v11 = 0;
      v12 = 0;
      goto LABEL_11;
    }
    MFLookupLocalizedString(CFSTR("MF_SMIME_CERTIFICATE_EXPIRED_FORMAT"), CFSTR("The certificate for the address “%@” expired on %@."), CFSTR("Delayed"));
    v8 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0C99D68], "dateWithTimeIntervalSinceReferenceDate:", v10);
    v9 = objc_claimAutoreleasedReturnValue();
  }
  else
  {
    MFLookupLocalizedString(CFSTR("MF_SMIME_CERTIFICATE_NOT_YET_VALID_FORMAT"), CFSTR("The certificate for the address “%@” is not valid until %@."), CFSTR("Delayed"));
    v8 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0C99D68], "dateWithTimeIntervalSinceReferenceDate:", v6);
    v9 = objc_claimAutoreleasedReturnValue();
  }
  v11 = (void *)v9;
  v12 = (void *)v8;
  if (!v8)
  {
LABEL_11:
    v17 = 0;
    goto LABEL_12;
  }
  if (!v9)
    __assert_rtn("checkCertificateExpiration", "MFSecureMIMECompositionManager.m", 856, "date");
  v13 = objc_alloc_init(MEMORY[0x1E0CB3578]);
  objc_msgSend(v13, "setDateStyle:", 3);
  objc_msgSend(v13, "setTimeStyle:", 3);
  v14 = (void *)MEMORY[0x1E0CB3940];
  objc_msgSend(v13, "stringFromDate:", v11);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "stringWithFormat:", v12, v3, v15);
  v16 = (void *)objc_claimAutoreleasedReturnValue();

  +[MFError errorWithDomain:code:localizedDescription:](MFError, "errorWithDomain:code:localizedDescription:", CFSTR("MFMessageErrorDomain"), 1035, v16);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  MFLogGeneral();
  v18 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
  {
    objc_msgSend(v17, "ef_publicDescription");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138412802;
    v22 = a1;
    v23 = 2112;
    v24 = v3;
    v25 = 2114;
    v26 = v19;
    _os_log_impl(&dword_1A4F90000, v18, OS_LOG_TYPE_INFO, "#SMIMEErrors Certificate %@ for address %@ is not currently valid: %{public}@", buf, 0x20u);

  }
LABEL_12:

  return v17;
}

void sub_1A50F15A8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  _Unwind_Resume(a1);
}

void sub_1A50F1740(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t MFHasAccountsEntitlement()
{
  if (MFHasAccountsEntitlement_once != -1)
    dispatch_once(&MFHasAccountsEntitlement_once, &__block_literal_global_60);
  return MFHasAccountsEntitlement___hasAccountsEntitlement;
}

void sub_1A50F18C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50F1988(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50F1BAC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50F1C80(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50F1CF4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50F1E28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A50F1EB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50F1F00(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50F1F7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50F1FE0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50F20C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A50F21F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1A50F22B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A50F2324(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50F237C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50F23F8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50F24D4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50F26C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50F28C0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50F2AC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50F2CC0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50F2DC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50F2E60(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50F2F58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50F3040(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50F31F8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50F3318(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50F33C0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50F3810(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1A50F3C2C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50F3D30(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50F402C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  uint64_t v31;

  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v31 - 144), 8);
  _Block_object_dispose((const void *)(v31 - 112), 8);

  _Unwind_Resume(a1);
}

void sub_1A50F4144(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50F4404(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50F44F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50F4780(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50F47FC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50F5708(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, void *a17, void *a18, void *a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,void *a52)
{
  void *v52;

  _Unwind_Resume(a1);
}

void sub_1A50F5A60(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50F5ADC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50F5B64(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50F5C44(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50F5D2C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50F5F7C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50F6218(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A50F62FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50F6524(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A50F6C98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{

  _Unwind_Resume(a1);
}

id _createParameterStringFromBytes(const UInt8 **a1, unint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  const UInt8 *v7;
  unsigned int v8;
  const UInt8 *v9;
  BOOL v10;
  unint64_t v11;
  unsigned int v12;
  int v13;
  __CFString *v14;
  void *v15;
  uint64_t v16;
  const UInt8 *v17;

  v4 = (unint64_t)*a1;
  v5 = MEMORY[0x1E0C80978];
  if ((unint64_t)*a1 < a2)
  {
    v6 = a2 - v4;
    v7 = (const UInt8 *)(v4 + 1);
    while (1)
    {
      v8 = *((char *)v7 - 1);
      if ((v8 & 0x80000000) != 0)
      {
        if (!__maskrune(v8, 0x4000uLL))
        {
LABEL_9:
          v4 = (unint64_t)*a1;
          break;
        }
      }
      else if ((*(_DWORD *)(v5 + 4 * v8 + 60) & 0x4000) == 0)
      {
        goto LABEL_9;
      }
      *a1 = v7++;
      if (!--v6)
      {
        v4 = a2;
        break;
      }
    }
  }
  v9 = (const UInt8 *)(v4 + 1);
  if (v4 + 1 >= a2)
  {
    v10 = 0;
    v9 = (const UInt8 *)a2;
  }
  else
  {
    v10 = 0;
    v11 = ~v4 + a2;
    do
    {
      v12 = *(char *)v9;
      if ((v12 & 0x80000000) != 0)
      {
        if (__maskrune(*(char *)v9, 0x4000uLL))
          goto LABEL_24;
      }
      else if ((*(_DWORD *)(v5 + 4 * v12 + 60) & 0x4000) != 0)
      {
        goto LABEL_24;
      }
      if (v10)
      {
        v10 = 1;
      }
      else
      {
        if ((v12 & 0x80000000) != 0)
          v13 = __maskrune(v12, 0x1000uLL);
        else
          v13 = *(_DWORD *)(v5 + 4 * v12 + 60) & 0x1000;
        v10 = v13 != 0;
      }
      ++v9;
      --v11;
    }
    while (v11);
    v9 = (const UInt8 *)a2;
LABEL_24:
    v4 = (unint64_t)*a1;
  }
  if (v4 >= (unint64_t)v9)
  {
    v15 = 0;
  }
  else
  {
    v14 = (__CFString *)CFStringCreateWithBytes(0, (const UInt8 *)v4, (CFIndex)&v9[-v4], 0x600u, 0);
    v15 = v14;
    if (v14 != 0 && v10)
    {
      -[__CFString uppercaseString](v14, "uppercaseString");
      v16 = objc_claimAutoreleasedReturnValue();

      v15 = (void *)v16;
    }
  }
  if ((unint64_t)(v9 + 1) < a2)
    v17 = v9 + 1;
  else
    v17 = (const UInt8 *)a2;
  *a1 = v17;
  return v15;
}

void sub_1A50F6EDC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50F6FF8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50F71C4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50F72E4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50F7380(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50F74A4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50F75A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50F77AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  void *v18;
  void *v19;
  void *v20;

  _Unwind_Resume(a1);
}

void sub_1A50F7890(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50F7A60(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A50F7C20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  void *v7;
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);

  _Unwind_Resume(a1);
}

void probeMessageUpdate(sqlite3_context *a1, int a2, sqlite3_value **a3)
{
  sqlite3 *v5;
  sqlite3_int64 v6;
  sqlite3_int64 v7;
  sqlite3_int64 v8;
  sqlite3_int64 v9;
  sqlite3_int64 v10;
  uint64_t v11;
  _BOOL4 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;

  if (a2 >= 5)
  {
    v5 = sqlite3_context_db_handle(a1);
    v6 = sqlite3_value_int64(*a3);
    v7 = sqlite3_value_int64(a3[1]);
    v8 = sqlite3_value_int64(a3[2]);
    v9 = sqlite3_value_int64(a3[3]);
    v10 = sqlite3_value_int64(a3[4]);
    duplicateMessageIDs(v5, v9, v6, v10);
    v23 = (id)objc_claimAutoreleasedReturnValue();
    v11 = unreadCountForMailbox(v5, v10);
    v12 = (v8 & 0x100080) == 0 && objc_msgSend(v23, "count") == 0;
    v13 = v11 + v12;
    if ((v8 & 1) != 0)
      v13 = v11;
    v14 = v11 - v12;
    if ((v8 & 1) == 0)
      v14 = v11;
    if ((v7 & 1) != 0)
      v15 = v13;
    else
      v15 = v14;
    v16 = objc_alloc_init(MEMORY[0x1E0CB37A0]);
    objc_msgSend(v16, "appendFormat:", CFSTR("ROW: %lld; "), v6);
    objc_msgSend(v16, "appendFormat:", CFSTR("Count: %ld -> %ld; "), v11, v15);
    objc_msgSend(v16, "appendFormat:", CFSTR("Flags: %llu -> %llu ("), v7, v8);
    NSStringFromBOOL();
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    NSStringFromBOOL();
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "appendFormat:", CFSTR("R: %@ -> %@ | "), v17, v18);

    NSStringFromBOOL();
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    NSStringFromBOOL();
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "appendFormat:", CFSTR("SR: %@ -> %@ | "), v19, v20);

    NSStringFromBOOL();
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    NSStringFromBOOL();
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "appendFormat:", CFSTR("TSR: %@ -> %@); "), v21, v22);

    objc_msgSend(v16, "appendFormat:", CFSTR("dup msgs: %lu;"), objc_msgSend(v23, "count"));
    probUnreadLog(CFSTR("#Update"), v16);
    sqlite3_result_null(a1);

  }
}

void sub_1A50F7E94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{

  _Unwind_Resume(a1);
}

void probeMessageAdd(sqlite3_context *a1, int a2, sqlite3_value **a3)
{
  sqlite3 *v5;
  sqlite3_int64 v6;
  sqlite3_int64 v7;
  sqlite3_int64 v8;
  sqlite3_int64 v9;
  uint64_t v10;
  _BOOL8 v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;

  if (a2 >= 4)
  {
    v5 = sqlite3_context_db_handle(a1);
    v6 = sqlite3_value_int64(*a3);
    v7 = sqlite3_value_int64(a3[1]);
    v8 = sqlite3_value_int64(a3[2]);
    v9 = sqlite3_value_int64(a3[3]);
    duplicateMessageIDs(v5, v8, v6, v9);
    v16 = (id)objc_claimAutoreleasedReturnValue();
    v10 = unreadCountForMailbox(v5, v9);
    v11 = (v7 & 0x100081) == 0 && objc_msgSend(v16, "count") == 0;
    v12 = objc_alloc_init(MEMORY[0x1E0CB37A0]);
    objc_msgSend(v12, "appendFormat:", CFSTR("ROW: %lld; "), v6);
    objc_msgSend(v12, "appendFormat:", CFSTR("Count: %ld -> %ld; "), v10, v11 + v10);
    objc_msgSend(v12, "appendFormat:", CFSTR("Flags: %llu ("), v7);
    NSStringFromBOOL();
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "appendFormat:", CFSTR("R: %@ | "), v13);

    NSStringFromBOOL();
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "appendFormat:", CFSTR("SR: %@ | "), v14);

    NSStringFromBOOL();
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "appendFormat:", CFSTR("TSR: %@); "), v15);

    objc_msgSend(v12, "appendFormat:", CFSTR("dup msgs: %lu;"), objc_msgSend(v16, "count"));
    probUnreadLog(CFSTR("#Add"), v12);
    sqlite3_result_null(a1);

  }
}

void sub_1A50F80D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{

  _Unwind_Resume(a1);
}

void probeMessageDelete(sqlite3_context *a1, int a2, sqlite3_value **a3)
{
  sqlite3 *v5;
  sqlite3_int64 v6;
  sqlite3_int64 v7;
  sqlite3_int64 v8;
  sqlite3_int64 v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;

  if (a2 >= 4)
  {
    v5 = sqlite3_context_db_handle(a1);
    v6 = sqlite3_value_int64(*a3);
    v7 = sqlite3_value_int64(a3[1]);
    v8 = sqlite3_value_int64(a3[2]);
    v9 = sqlite3_value_int64(a3[3]);
    duplicateMessageIDs(v5, v8, v6, v9);
    v16 = (id)objc_claimAutoreleasedReturnValue();
    v10 = unreadCountForMailbox(v5, v9);
    if ((v7 & 0x100081) != 0)
    {
      v11 = 0;
    }
    else if (objc_msgSend(v16, "count"))
    {
      v11 = 0;
    }
    else
    {
      v11 = -1;
    }
    v12 = objc_alloc_init(MEMORY[0x1E0CB37A0]);
    objc_msgSend(v12, "appendFormat:", CFSTR("ROW: %lld; "), v6);
    objc_msgSend(v12, "appendFormat:", CFSTR("Count: %ld -> %ld; "), v10, v11 + v10);
    objc_msgSend(v12, "appendFormat:", CFSTR("Flags: %llu ("), v7);
    NSStringFromBOOL();
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "appendFormat:", CFSTR("R: %@ | "), v13);

    NSStringFromBOOL();
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "appendFormat:", CFSTR("SR: %@ | "), v14);

    NSStringFromBOOL();
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "appendFormat:", CFSTR("TSR: %@); "), v15);

    objc_msgSend(v12, "appendFormat:", CFSTR("dup msgs: %lu;"), objc_msgSend(v16, "count"));
    probUnreadLog(CFSTR("#Delete"), v12);
    sqlite3_result_null(a1);

  }
}

void sub_1A50F8300(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{

  _Unwind_Resume(a1);
}

void sub_1A50F84A4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id duplicateMessageIDs(sqlite3 *a1, sqlite3_int64 a2, sqlite3_int64 a3, sqlite3_int64 a4)
{
  id v8;
  void *v9;
  sqlite3_stmt *ppStmt;

  v8 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  ppStmt = 0;
  sqlite3_prepare_v2(a1, "SELECT message_id FROM messages WHERE message_id = ? AND rowid != ? AND flags&2 > 0 AND mailbox = ? AND (flags&1 = 0 AND flags&128 = 0 AND flags&1048576 = 0)", -1, &ppStmt, 0);
  if (ppStmt)
  {
    sqlite3_bind_int64(ppStmt, 1, a2);
    sqlite3_bind_int64(ppStmt, 2, a3);
    sqlite3_bind_int64(ppStmt, 3, a4);
    while (sqlite3_step(ppStmt) == 100)
    {
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithLongLong:", sqlite3_column_int64(ppStmt, 0));
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "addObject:", v9);

    }
    sqlite3_finalize(ppStmt);
  }
  return v8;
}

void sub_1A50F85B4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t unreadCountForMailbox(sqlite3 *a1, sqlite3_int64 a2)
{
  uint64_t v3;
  sqlite3_stmt *ppStmt;

  ppStmt = 0;
  sqlite3_prepare_v2(a1, "SELECT unread_count FROM mailboxes WHERE ROWID = ?", -1, &ppStmt, 0);
  if (!ppStmt)
    return 0;
  sqlite3_bind_int64(ppStmt, 1, a2);
  if (sqlite3_step(ppStmt) == 100)
    v3 = sqlite3_column_int(ppStmt, 0);
  else
    v3 = 0;
  sqlite3_finalize(ppStmt);
  return v3;
}

void probUnreadLog(__CFString *a1, void *a2)
{
  id v3;
  __CFString *v4;
  __CFString *v5;
  NSObject *v6;
  int v7;
  __CFString *v8;
  __int16 v9;
  uint64_t v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = &stru_1E4F1C8F8;
  if (a1)
    v4 = a1;
  v5 = v4;
  MFLogGeneral();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    v7 = 138412546;
    v8 = v5;
    v9 = 2080;
    v10 = objc_msgSend(objc_retainAutorelease(v3), "UTF8String");
    _os_log_impl(&dword_1A4F90000, v6, OS_LOG_TYPE_INFO, "#UnreadCount [UnreadCount] %@ %s", (uint8_t *)&v7, 0x16u);
  }

}

void sub_1A50F8750(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50F8848(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50F8E40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12, void *a13, void *a14)
{

  _Unwind_Resume(a1);
}

void sub_1A50F9140(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50F9268(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50F9498(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A50F9570(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50F9640(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A50F9740(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1A50F9848(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void _removeDestructionHandler(void *a1, void *a2)
{
  id v3;
  void *v4;
  id object;

  object = a1;
  v3 = a2;
  objc_getAssociatedObject(object, v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setCache:", 0);
  objc_setAssociatedObject(object, v3, 0, (void *)1);

}

void sub_1A50F98F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A50F9A40(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

BOOL _releaseTopStackEntry(uint64_t a1)
{
  id **v2;
  id **v3;
  const __CFArray *v4;
  CFIndex Count;
  id *v6;

  v2 = (id **)_peekCommandStackEntry(a1);
  v3 = v2;
  if (v2)
  {
    if (objc_msgSend(**v2, "isEqualToString:", CFSTR("nofill")))
      *(_DWORD *)(a1 + 208) = *(_DWORD *)(a1 + 208) & 0xC0000000 | (*(_DWORD *)(a1 + 208) - 1) & 0x3FFFFFFF;
    v4 = *(const __CFArray **)(a1 + 224);
    Count = CFArrayGetCount(v4);
    CFArrayRemoveValueAtIndex(v4, Count - 1);
    v6 = v3[1];
    if (v6)

    free(v3);
  }
  return v3 != 0;
}

CFIndex _currentAttributeOfType(uint64_t a1, int a2)
{
  CFIndex result;
  CFIndex v5;
  _QWORD *ValueAtIndex;
  BOOL v7;

  result = CFArrayGetCount(*(CFArrayRef *)(a1 + 224));
  if (result)
  {
    v5 = result - 1;
    do
    {
      ValueAtIndex = CFArrayGetValueAtIndex(*(CFArrayRef *)(a1 + 224), v5);
      if (((*(unsigned __int8 *)(*ValueAtIndex + 8) >> 3) & 3) == a2)
        result = ValueAtIndex[1];
      else
        result = 0;
      v7 = v5-- != 0;
    }
    while (v7 && !result);
  }
  return result;
}

CFStringRef _copyNextToken(uint64_t a1, CFCharacterSetRef theSet)
{
  CFIndex v4;
  CFIndex v5;
  uint64_t v6;
  CFIndex v7;
  uint64_t v8;
  UniChar v9;
  CFIndex v10;
  uint64_t v11;
  UniChar v12;
  CFStringRef result;
  CFIndex v14;
  CFIndex v15;
  int64_t v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  UniChar v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  int64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  CFIndex v30;
  CFIndex v31;
  CFIndex v32;
  CFIndex v33;
  UniChar chars;
  CFRange v35;
  CFRange v36;
  CFRange v37;
  CFRange v38;

  v5 = *(_QWORD *)(a1 + 192);
  v4 = *(_QWORD *)(a1 + 200);
  if (v5 < v4)
  {
    v6 = a1 + 8;
    if (v5 < 0 || (v7 = *(_QWORD *)(a1 + 168), v7 <= v5))
    {
      v9 = 0;
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 144);
      if (v8)
      {
        v9 = *(_WORD *)(v8 + 2 * (*(_QWORD *)(a1 + 160) + v5));
      }
      else
      {
        v28 = *(_QWORD *)(a1 + 152);
        if (v28)
        {
          v9 = *(char *)(v28 + *(_QWORD *)(a1 + 160) + v5);
        }
        else
        {
          if (*(_QWORD *)(a1 + 184) <= v5 || (v30 = *(_QWORD *)(a1 + 176), v30 > v5))
          {
            v31 = v5 - 4;
            if ((unint64_t)v5 < 4)
              v31 = 0;
            if (v31 + 64 < v7)
              v7 = v31 + 64;
            *(_QWORD *)(a1 + 176) = v31;
            *(_QWORD *)(a1 + 184) = v7;
            v36.location = *(_QWORD *)(a1 + 160) + v31;
            v36.length = v7 - v31;
            CFStringGetCharacters(*(CFStringRef *)(a1 + 136), v36, (UniChar *)(a1 + 8));
            v30 = *(_QWORD *)(a1 + 176);
          }
          v9 = *(_WORD *)(v6 + 2 * (v5 - v30));
        }
      }
    }
    if (CFCharacterSetIsCharacterMember(theSet, v9))
    {
      if (v5 < 0 || (v10 = *(_QWORD *)(a1 + 168), v10 <= v5))
      {
        v12 = 0;
      }
      else
      {
        v11 = *(_QWORD *)(a1 + 144);
        if (v11)
        {
          v12 = *(_WORD *)(v11 + 2 * (*(_QWORD *)(a1 + 160) + v5));
        }
        else
        {
          v29 = *(_QWORD *)(a1 + 152);
          if (v29)
          {
            v12 = *(char *)(v29 + *(_QWORD *)(a1 + 160) + v5);
          }
          else
          {
            if (*(_QWORD *)(a1 + 184) <= v5 || (v32 = *(_QWORD *)(a1 + 176), v32 > v5))
            {
              v33 = v5 - 4;
              if ((unint64_t)v5 < 4)
                v33 = 0;
              if (v33 + 64 < v10)
                v10 = v33 + 64;
              *(_QWORD *)(a1 + 176) = v33;
              *(_QWORD *)(a1 + 184) = v10;
              v37.location = *(_QWORD *)(a1 + 160) + v33;
              v37.length = v10 - v33;
              CFStringGetCharacters(*(CFStringRef *)(a1 + 136), v37, (UniChar *)(a1 + 8));
              v32 = *(_QWORD *)(a1 + 176);
            }
            v12 = *(_WORD *)(v6 + 2 * (v5 - v32));
          }
        }
      }
      chars = v12;
      result = CFStringCreateWithCharacters(0, &chars, 1);
      ++v5;
      goto LABEL_43;
    }
    v4 = *(_QWORD *)(a1 + 200);
  }
  if (v5 >= v4)
  {
    result = 0;
  }
  else
  {
    v14 = -v5;
    v15 = v5 + 64;
    v16 = v5;
    do
    {
      if ((unint64_t)v16 >= 4)
        v17 = 4;
      else
        v17 = v16;
      if (v16 < 0 || (v18 = *(_QWORD *)(a1 + 168), v18 <= v16))
      {
        v20 = 0;
      }
      else
      {
        v19 = *(_QWORD *)(a1 + 144);
        if (v19)
        {
          v20 = *(_WORD *)(v19 + 2 * (v16 + *(_QWORD *)(a1 + 160)));
        }
        else
        {
          v21 = *(_QWORD *)(a1 + 152);
          if (v21)
          {
            v20 = *(char *)(v21 + *(_QWORD *)(a1 + 160) + v16);
          }
          else
          {
            if (*(_QWORD *)(a1 + 184) <= v16 || (v22 = *(_QWORD *)(a1 + 176), v22 > v16))
            {
              v23 = -v17;
              v24 = v17 + v14;
              v25 = v15 - v17;
              v26 = v16 + v23;
              v27 = v26 + 64;
              if (v26 + 64 >= v18)
                v27 = *(_QWORD *)(a1 + 168);
              *(_QWORD *)(a1 + 176) = v26;
              *(_QWORD *)(a1 + 184) = v27;
              if (v18 >= v25)
                v18 = v25;
              v35.length = v18 + v24;
              v35.location = v26 + *(_QWORD *)(a1 + 160);
              CFStringGetCharacters(*(CFStringRef *)(a1 + 136), v35, (UniChar *)(a1 + 8));
              v22 = *(_QWORD *)(a1 + 176);
            }
            v20 = *(_WORD *)(a1 + 8 - 2 * v22 + 2 * v16);
          }
        }
      }
      if (CFCharacterSetIsCharacterMember(theSet, v20))
        break;
      ++v16;
      --v14;
      ++v15;
    }
    while (v16 < *(_QWORD *)(a1 + 200));
    if (v16 <= v5)
    {
      result = 0;
    }
    else
    {
      v38.location = v5;
      v38.length = v16 - v5;
      result = CFStringCreateWithSubstring(0, *(CFStringRef *)(a1 + 136), v38);
    }
    v5 = v16;
  }
LABEL_43:
  *(_QWORD *)(a1 + 192) = v5;
  return result;
}

const void *_peekCommandStackEntry(uint64_t a1)
{
  CFIndex Count;

  Count = CFArrayGetCount(*(CFArrayRef *)(a1 + 224));
  if (Count < 1)
    return 0;
  else
    return CFArrayGetValueAtIndex(*(CFArrayRef *)(a1 + 224), Count - 1);
}

id MFMimeDataCreateStringFromHeaderBytes()
{
  return (id)_MFCreateStringFromHeaderBytes();
}

void sub_1A50FBD08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A50FBDC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A50FBEA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;

  v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1A50FBF94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;

  v12 = v11;

  _Unwind_Resume(a1);
}

uint64_t EFBreakIfInDebugger()
{
  uint64_t result;
  size_t v1;
  _DWORD __b[162];
  int v3[2];
  int v4;
  pid_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  memset(__b, 170, sizeof(__b));
  __b[8] = 0;
  *(_QWORD *)v3 = 0xE00000001;
  v4 = 1;
  v5 = getpid();
  v1 = 648;
  result = sysctl(v3, 4u, __b, &v1, 0, 0);
  if (!(_DWORD)result && (__b[8] & 0x800) != 0)
    __debugbreak();
  return result;
}

void sub_1A50FC144(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50FC2AC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50FC4B8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A50FC58C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A50FC8FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_1A50FCB98(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50FCC6C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A50FE2B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A50FE438(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

__CFString *MFCreateStringByCondensingWhitespace(__CFString *a1)
{
  const __CFAllocator *v2;
  __CFString *Mutable;
  uint64_t v4;
  __int128 v5;
  const UniChar *CharactersPtr;
  const char *CStringPtr;
  uint64_t v8;
  BOOL v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  UniChar v14;
  BOOL v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  int64_t v21;
  unsigned int v22;
  uint64_t v24;
  UniChar chars;
  UniChar buffer[8];
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __CFString *v36;
  const UniChar *v37;
  const char *v38;
  uint64_t v39;
  int64_t v40;
  int64_t v41;
  int64_t v42;
  CFRange v43;

  if (!a1)
    return 0;
  v2 = (const __CFAllocator *)MFGetMappedAllocator();
  Mutable = CFStringCreateMutable(v2, 0);
  v4 = -[__CFString length](a1, "length");
  *(_QWORD *)&v5 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v5 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v34 = v5;
  v35 = v5;
  v32 = v5;
  v33 = v5;
  v30 = v5;
  v31 = v5;
  *(_OWORD *)buffer = v5;
  v29 = v5;
  v36 = a1;
  v39 = 0;
  v40 = v4;
  CharactersPtr = CFStringGetCharactersPtr(a1);
  CStringPtr = 0;
  v37 = CharactersPtr;
  if (!CharactersPtr)
    CStringPtr = CFStringGetCStringPtr(a1, 0x600u);
  v38 = CStringPtr;
  v41 = 0;
  v42 = 0;
  if (v4)
  {
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v11 = 64;
    do
    {
      if ((unint64_t)v10 >= 4)
        v12 = 4;
      else
        v12 = v10;
      chars = -21846;
      if (v10 < 0 || (v13 = v40, v40 <= v10))
      {
        v15 = 0;
        chars = 0;
      }
      else
      {
        if (v37)
        {
          v14 = v37[v10 + v39];
        }
        else if (v38)
        {
          v14 = v38[v39 + v10];
        }
        else
        {
          if (v42 <= v10 || (v16 = v41, v41 > v10))
          {
            v17 = -v12;
            v18 = v12 + v8;
            v19 = v11 - v12;
            v20 = v10 + v17;
            v21 = v20 + 64;
            if (v20 + 64 >= v40)
              v21 = v40;
            v41 = v20;
            v42 = v21;
            if (v40 >= v19)
              v13 = v19;
            v43.length = v13 + v18;
            v43.location = v20 + v39;
            CFStringGetCharacters(v36, v43, buffer);
            v16 = v41;
          }
          v14 = buffer[v10 - v16];
        }
        v22 = v14;
        v15 = v14 == 13 || (unsigned __int16)(v14 - 9) < 2u || v14 == 32;
        chars = v14;
        v24 = (1 << v14) & 0x100002600;
        if (v22 <= 0x20 && v24 != 0)
        {
          if (v10 != 0 && !v9)
            CFStringAppend(Mutable, CFSTR(" "));
          goto LABEL_15;
        }
      }
      CFStringAppendCharacters(Mutable, &chars, 1);
LABEL_15:
      ++v10;
      --v8;
      ++v11;
      v9 = v15;
    }
    while (v4 != v10);
  }
  return Mutable;
}

void sub_1A5100188(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5100204(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A51002A4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A51002F8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5100358(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t MFCopyResponseDataForURLRequest(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;

  v1 = a1;
  MFUserAgent();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (v2 && (objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v2, "sourceApplicationBundleIdentifier");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v3 = 0;
  }
  v4 = EFCopyResponseDataForURLRequest();

  return v4;
}

void sub_1A510040C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A51008C0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A5100970(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5100BEC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  _Unwind_Resume(a1);
}

void sub_1A5100CB0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5100D34(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5100E34(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5100F10(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5101078(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5101364(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A51014D0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A510157C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A510170C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5101888(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A510199C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5101A44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5101B80(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5101C88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5101DD8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A5101EF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A51021FC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5102384(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5102714(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A510283C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5102B14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A5102C38(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5102CC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1A5102DBC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5102E08(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5103114(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1A51032FC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1A51035E0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5103BBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1A5103DC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5103E24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5103E80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5104114(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12)
{
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_1A5104494(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__20(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__20(uint64_t a1)
{

}

void sub_1A510463C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5104930(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5104A90(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5104D20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1A5104FE8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A5105844(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1A5105DA8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A51064C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,void *a21)
{
  void *v21;
  void *v22;

  _Unwind_Resume(a1);
}

void sub_1A5106F30(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

uint64_t _ExtractContentWithTag(uint64_t a1, int a2)
{
  int v3;
  int v4;
  int v5;
  uint64_t result;

  v3 = SecCmsMessageContentLevelCount();
  if (v3 < 1)
    return 0;
  v4 = v3;
  v5 = 0;
  while (1)
  {
    SecCmsMessageContentLevel();
    if (SecCmsContentInfoGetContentTypeTag() == a2)
    {
      result = SecCmsContentInfoGetContent();
      if (result)
        break;
    }
    if (v4 == ++v5)
      return 0;
  }
  return result;
}

void sub_1A51073A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)_MFSecCMSDecoder;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_1A51074DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5107974(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_1A5107AA8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5107D10(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5107F40(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  v8 = v5;

  _Unwind_Resume(a1);
}

void sub_1A5108488(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A5108760(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_1A5108870(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A5108B84(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_1A5109110(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A51094F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A51096E8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A51097B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)_MFSecCMSEncoder;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_1A510994C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_9_1(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = a1;
}

void sub_1A5109B54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5109C18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A5109D84(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A510A024(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12)
{
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_1A510A124(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A510A1C0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A510A23C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A510A320(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A510A390(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A510A568(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A510A854(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A510A94C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1A510AAC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A510AB70(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A510ABC4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A510ACA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A510ADB4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A510B8F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, void *a19, void *a20,uint64_t a21,void *a22,void *a23,void *a24)
{
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;

  _Unwind_Resume(a1);
}

const __CFString *MFMFSMTPFailureReasonString(unint64_t a1)
{
  if (a1 > 7)
    return CFSTR("MFSMTPFailureReasonUnknown");
  else
    return off_1E4E8EEE0[a1];
}

void sub_1A510BE44(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A510BF1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A510BF90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A510C0D8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A510C1BC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A510C380(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A510C444(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A510C598(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  void *v22;
  void *v23;
  void *v24;

  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__21(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__21(uint64_t a1)
{

}

void sub_1A510C720(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A510C860(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  void *v22;
  void *v23;

  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_1A510C9D4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A510CAC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;

  _Unwind_Resume(a1);
}

void sub_1A510CD84(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A510CED8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  void *v7;
  void *v8;
  va_list va;

  va_start(va, a7);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A510CFC4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A510D088(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A510D140(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A510D254(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, ...)
{
  void *v9;
  void *v10;
  void *v11;
  va_list va;

  va_start(va, a9);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A510D370(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t sqlite3_exec_printf(sqlite3 *a1, char *a2, int (__cdecl *a3)(void *, int, char **, char **), void *a4, char **a5, ...)
{
  char *v9;
  uint64_t v10;
  va_list va;

  va_start(va, a5);
  v9 = sqlite3_vmprintf(a2, va);
  v10 = sqlite3_exec(a1, v9, a3, a4, a5);
  sqlite3_free(v9);
  return v10;
}

void MFLogSQLiteError(sqlite3 *a1, int a2, void *a3)
{
  id v5;
  NSObject *v6;
  NSObject *v7;
  const char *v8;
  int v9;
  char *v10;
  int __errnum;
  uint8_t buf[4];
  int v13;
  __int16 v14;
  sqlite3 *v15;
  __int16 v16;
  id v17;
  __int16 v18;
  const char *v19;
  __int16 v20;
  int v21;
  __int16 v22;
  char *v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  if (a2 == 10)
  {
    __errnum = 0;
    sqlite3_file_control(a1, 0, 4, &__errnum);
    MFLogGeneral();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v8 = sqlite3_errmsg(a1);
      v9 = __errnum;
      v10 = strerror(__errnum);
      *(_DWORD *)buf = 67110402;
      v13 = a2;
      v14 = 2048;
      v15 = a1;
      v16 = 2114;
      v17 = v5;
      v18 = 2082;
      v19 = v8;
      v20 = 1024;
      v21 = v9;
      v22 = 2080;
      v23 = v10;
      _os_log_error_impl(&dword_1A4F90000, v6, OS_LOG_TYPE_ERROR, "Error %d on connection %p %{public}@: %{public}s - I/O error %d (%s)", buf, 0x36u);
    }

  }
  else
  {
    MFLogGeneral();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 67109890;
      v13 = a2;
      v14 = 2048;
      v15 = a1;
      v16 = 2114;
      v17 = v5;
      v18 = 2082;
      v19 = sqlite3_errmsg(a1);
      _os_log_error_impl(&dword_1A4F90000, v7, OS_LOG_TYPE_ERROR, "Error %d on connection %p %{public}@: %{public}s", buf, 0x26u);
    }

  }
}

void sub_1A510D608(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

__CFString *MFNSStringFromColumnInStatement(sqlite3_stmt *a1, int a2)
{
  const unsigned __int8 *v2;
  __CFString *v3;

  v2 = sqlite3_column_text(a1, a2);
  if (v2)
    v3 = (__CFString *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3940]), "initWithUTF8String:", v2);
  else
    v3 = &stru_1E4F1C8F8;
  return v3;
}

id MFDatabaseEncodedStringForAddressList(void *a1)
{
  objc_msgSend(a1, "componentsJoinedByString:", CFSTR("\r\r\n"));
  return (id)objc_claimAutoreleasedReturnValue();
}

id MFAddressListFromDatabaseEncodedString(void *a1)
{
  id v1;
  uint64_t v2;
  void *v3;

  v1 = a1;
  if (objc_msgSend(v1, "length"))
  {
    objc_msgSend(v1, "componentsSeparatedByString:", CFSTR("\r\r\n"));
    v2 = objc_claimAutoreleasedReturnValue();
  }
  else
  {
    if (!v1)
    {
      v3 = 0;
      goto LABEL_6;
    }
    objc_msgSend(MEMORY[0x1E0C99D20], "array");
    v2 = objc_claimAutoreleasedReturnValue();
  }
  v3 = (void *)v2;
LABEL_6:

  return v3;
}

void sub_1A510D70C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void _DisposeICUSQLiteContext(_QWORD *a1)
{
  void *v2;
  _QWORD *v3;
  _QWORD *v4;

  if (a1)
  {
    usearch_close();
    CPICUReleaseSearchCollator();
    v2 = (void *)a1[22];
    if (v2)
      free(v2);
    v3 = (_QWORD *)a1[24];
    if (v3 && v3 != a1 + 25)
      free(v3);
    v4 = (_QWORD *)a1[20];
    if (v4)
    {
      if (v4 != a1 + 4)
        free(v4);
    }
    free(a1);
  }
}

UChar *_ICUSQLiteMatch(const char *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  char *v8;
  size_t v9;
  int32_t v10;
  size_t v11;
  char *v12;
  void *v13;
  UChar *v14;
  UChar *v15;
  void *v16;
  int32_t v17;
  int32_t v18;
  UChar *result;
  UChar *v20;
  void *v21;
  int32_t v22;
  int v23;
  BOOL v24;
  int v25;
  _BOOL4 v26;
  int32_t v27;
  int32_t pDestLength;
  UErrorCode pErrorCode;

  pErrorCode = U_ZERO_ERROR;
  v8 = *(char **)(a4 + 160);
  if (!strcmp(v8, a2) && *(_QWORD *)(a4 + 176))
    goto LABEL_19;
  pDestLength = 0;
  v9 = strlen(a2);
  if (!v9)
    return 0;
  v10 = v9;
  v11 = v9 + 1;
  if (v9 + 1 <= *(_QWORD *)(a4 + 168))
  {
    v11 = *(_QWORD *)(a4 + 168);
  }
  else
  {
    v12 = (char *)malloc_type_malloc(v9 + 1, 0x100004077774924uLL);
    if (!v12)
      return 0;
    v8 = v12;
    v13 = *(void **)(a4 + 160);
    if (v13 != (void *)(a4 + 32))
      free(v13);
    *(_QWORD *)(a4 + 160) = v8;
    *(_QWORD *)(a4 + 168) = v11;
  }
  strlcpy(v8, a2, v11);
  u_strFromUTF8(*(UChar **)(a4 + 176), *(_DWORD *)(a4 + 184), &pDestLength, a2, v10, &pErrorCode);
  if (pErrorCode != U_BUFFER_OVERFLOW_ERROR && *(_QWORD *)(a4 + 176))
    goto LABEL_17;
  v14 = (UChar *)malloc_type_malloc(2 * pDestLength + 2, 0x1000040BDFB0063uLL);
  if (!v14)
    return 0;
  v15 = v14;
  v16 = *(void **)(a4 + 176);
  if (v16)
    free(v16);
  *(_QWORD *)(a4 + 176) = v15;
  v17 = pDestLength + 1;
  *(_DWORD *)(a4 + 184) = pDestLength + 1;
  pErrorCode = U_ZERO_ERROR;
  u_strFromUTF8(v15, v17, &pDestLength, a2, v10, &pErrorCode);
LABEL_17:
  usearch_setPattern();
  if (pErrorCode >= U_ILLEGAL_ARGUMENT_ERROR)
  {
    **(_BYTE **)(a4 + 160) = 0;
    return 0;
  }
LABEL_19:
  v27 = 0;
  v18 = strlen(a1);
  if (v18 < 1)
    return 0;
  u_strFromUTF8(*(UChar **)(a4 + 192), *(_DWORD *)(a4 + 712), &v27, a1, v18, &pErrorCode);
  if (pErrorCode == U_BUFFER_OVERFLOW_ERROR)
  {
    result = (UChar *)malloc_type_malloc(2 * v27 + 2, 0x1000040BDFB0063uLL);
    if (!result)
      return result;
    v20 = result;
    v21 = *(void **)(a4 + 192);
    if (v21 != (void *)(a4 + 200))
      free(v21);
    *(_QWORD *)(a4 + 192) = v20;
    v22 = v27 + 1;
    *(_DWORD *)(a4 + 712) = v27 + 1;
    pErrorCode = U_ZERO_ERROR;
    u_strFromUTF8(v20, v22, &v27, a1, v18, &pErrorCode);
  }
  usearch_setText();
  if (a3 != 3)
  {
    v25 = usearch_first();
    v26 = 0;
    switch(a3)
    {
      case 0:
        v26 = v25 != -1;
        goto LABEL_40;
      case 1:
        v24 = v25 == -1;
        goto LABEL_37;
      case 2:
        v24 = v25 == 0;
        goto LABEL_37;
      case 4:
        if (v25)
          goto LABEL_35;
        v24 = usearch_getMatchedLength() == v27;
        goto LABEL_37;
      default:
        goto LABEL_40;
    }
  }
  v23 = usearch_last();
  if (v23 == -1)
  {
LABEL_35:
    v26 = 0;
  }
  else
  {
    v24 = usearch_getMatchedLength() + v23 == v27;
LABEL_37:
    v26 = v24;
  }
LABEL_40:
  if (pErrorCode < U_ILLEGAL_ARGUMENT_ERROR)
    return (UChar *)v26;
  else
    return 0;
}

void ICUSearch(sqlite3_context *a1, int a2, sqlite3_value **a3)
{
  const unsigned __int8 *v5;
  const unsigned __int8 *v6;
  int v7;
  BOOL v8;
  NSObject *v10;
  uint64_t v11;
  void *v12;
  int v13;
  _DWORD v14[2];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  if (a2 == 3)
  {
    v5 = sqlite3_value_text(*a3);
    v6 = sqlite3_value_text(a3[1]);
    v7 = sqlite3_value_int(a3[2]);
    if (v5)
      v8 = v6 == 0;
    else
      v8 = 1;
    if (v8)
    {
      if (v6 && v7 == 1)
        sqlite3_result_int(a1, 1);
      else
        sqlite3_result_null(a1);
    }
    else
    {
      v11 = v7;
      v12 = sqlite3_user_data(a1);
      v13 = _ICUSQLiteMatch((const char *)v5, (const char *)v6, v11, (uint64_t)v12);
      sqlite3_result_int(a1, v13);
    }
  }
  else
  {
    sqlite3_result_null(a1);
    MFLogGeneral();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      v14[0] = 67109120;
      v14[1] = a2;
      _os_log_impl(&dword_1A4F90000, v10, OS_LOG_TYPE_INFO, "wrong number of arguments (%d) to icusearch", (uint8_t *)v14, 8u);
    }

  }
}

void CPSearch(sqlite3_context *a1, int a2, sqlite3_value **a3)
{
  const unsigned __int8 *v5;
  const unsigned __int8 *v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  NSObject *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  void *v22;
  int v23;
  _DWORD v24[2];
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  if (a2 == 3)
  {
    v5 = sqlite3_value_text(*a3);
    v6 = sqlite3_value_text(a3[1]);
    v7 = sqlite3_value_int(a3[2]);
    v8 = v7;
    if (v5)
      v9 = v6 == 0;
    else
      v9 = 1;
    if (v9)
    {
      if (v6 && (_DWORD)v7 == 1)
        sqlite3_result_int(a1, 1);
      else
        sqlite3_result_null(a1);
    }
    else
    {
      v12 = sqlite3_user_data(a1);
      if (objc_msgSend(v12, "lastSearchStringLength")
        && !strcmp((const char *)v6, (const char *)objc_msgSend(v12, "lastSearchString")))
      {
        objc_msgSend(v12, "lastMatcher");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        v13 = (void *)strlen((const char *)v6);
        if (v13)
        {
          if (objc_msgSend(v12, "lastSearchString"))
            free((void *)objc_msgSend(v12, "lastSearchString"));
          objc_msgSend(v12, "setLastSearchString:", strdup((const char *)v6));
          objc_msgSend(v12, "setLastSearchStringLength:", v13);
          v14 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99D50]), "initWithBytesNoCopy:length:freeWhenDone:", objc_msgSend(v12, "lastSearchString"), v13, 0);
          objc_msgSend(v12, "matchers");
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v15, "objectForKeyedSubscript:", v14);
          v13 = (void *)objc_claimAutoreleasedReturnValue();

          if (!v13)
          {
            v16 = objc_alloc(MEMORY[0x1E0CFA9B0]);
            objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", v6);
            v17 = (void *)objc_claimAutoreleasedReturnValue();
            v13 = (void *)objc_msgSend(v16, "initWithSearchString:options:", v17, (*MEMORY[0x1E0CFAA58] | *MEMORY[0x1E0CFAA50]) | *MEMORY[0x1E0CFAA60]);

            objc_msgSend(v12, "matchers");
            v18 = (void *)objc_claimAutoreleasedReturnValue();

            if (!v18)
            {
              v19 = objc_alloc_init(MEMORY[0x1E0C99E08]);
              objc_msgSend(v12, "setMatchers:", v19);

            }
            objc_msgSend(v12, "matchers");
            v20 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(MEMORY[0x1E0C99D50], "dataWithData:", v14);
            v21 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v20, "setObject:forKey:", v13, v21);

          }
          objc_msgSend(v12, "setLastMatcher:", v13);

        }
      }
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", v5);
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      v23 = objc_msgSend(v13, "matches:matchType:", v22, v8);

      sqlite3_result_int(a1, v23);
    }
  }
  else
  {
    sqlite3_result_null(a1);
    MFLogGeneral();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      v24[0] = 67109120;
      v24[1] = a2;
      _os_log_impl(&dword_1A4F90000, v11, OS_LOG_TYPE_INFO, "wrong number of arguments (%d) to icusearch", (uint8_t *)v24, 8u);
    }

  }
}

void sub_1A510E0D8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void _MFMoveDatabase(void *a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  id v6;
  const std::__fs::filesystem::path *v7;
  id v8;
  const std::__fs::filesystem::path *v9;
  std::error_code *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t i;
  uint64_t v14;
  id v15;
  const std::__fs::filesystem::path *v16;
  id v17;
  const std::__fs::filesystem::path *v18;
  std::error_code *v19;
  id v20;
  id v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint8_t v26[128];
  uint8_t buf[4];
  id v28;
  __int16 v29;
  id v30;
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v20 = a2;
  objc_msgSend(v3, "lastPathComponent");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v20, "stringByAppendingPathComponent:", v4);
  v21 = (id)objc_claimAutoreleasedReturnValue();

  EDLibraryLog();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 138412546;
    v28 = v3;
    v29 = 2112;
    v30 = v21;
    _os_log_impl(&dword_1A4F90000, v5, OS_LOG_TYPE_INFO, "Renaming database %@ to %@", buf, 0x16u);
  }

  v6 = objc_retainAutorelease(v3);
  v7 = (const std::__fs::filesystem::path *)objc_msgSend(v6, "fileSystemRepresentation");
  v8 = objc_retainAutorelease(v21);
  v9 = (const std::__fs::filesystem::path *)objc_msgSend(v8, "fileSystemRepresentation");
  rename(v7, v9, v10);
  v22 = 0u;
  v23 = 0u;
  v24 = 0u;
  v25 = 0u;
  v11 = objc_msgSend(&unk_1E4F69A30, "countByEnumeratingWithState:objects:count:", &v22, v26, 16);
  if (v11)
  {
    v12 = *(_QWORD *)v23;
    do
    {
      for (i = 0; i != v11; ++i)
      {
        if (*(_QWORD *)v23 != v12)
          objc_enumerationMutation(&unk_1E4F69A30);
        v14 = *(_QWORD *)(*((_QWORD *)&v22 + 1) + 8 * i);
        objc_msgSend(v6, "stringByAppendingString:", v14);
        v15 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
        v16 = (const std::__fs::filesystem::path *)objc_msgSend(v15, "fileSystemRepresentation");
        objc_msgSend(v8, "stringByAppendingString:", v14);
        v17 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
        v18 = (const std::__fs::filesystem::path *)objc_msgSend(v17, "fileSystemRepresentation");
        rename(v16, v18, v19);

      }
      v11 = objc_msgSend(&unk_1E4F69A30, "countByEnumeratingWithState:objects:count:", &v22, v26, 16);
    }
    while (v11);
  }

}

void sub_1A510E37C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

uint64_t MFCreateURLForContentID(void *a1)
{
  __CFString *v1;
  __CFString *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  CFStringRef v7;
  __CFString *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  CFRange v14;

  v1 = a1;
  v2 = v1;
  if (v1)
  {
    v3 = -[__CFString rangeOfString:](v1, "rangeOfString:", CFSTR("<"));
    v5 = v4;
    v6 = -[__CFString rangeOfString:](v2, "rangeOfString:", CFSTR(">"));
    if (v3 == 0x7FFFFFFFFFFFFFFFLL || v6 == 0x7FFFFFFFFFFFFFFFLL || v6 <= v3 + v5)
    {
      v7 = v2;
    }
    else
    {
      v14.location = v3 + v5;
      v14.length = v6 - (v3 + v5);
      v7 = CFStringCreateWithSubstring(0, v2, v14);
    }
    v8 = (__CFString *)v7;
    objc_msgSend(MEMORY[0x1E0C99E98], "ef_defaultAllowedCharacterSet");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    -[__CFString stringByAddingPercentEncodingWithAllowedCharacters:](v8, "stringByAddingPercentEncodingWithAllowedCharacters:", v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue();

    if (v10)
    {
      objc_msgSend(CFSTR("cid"), "stringByAppendingFormat:", CFSTR(":%@"), v10);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E98]), "initWithString:", v11);

    }
    else
    {
      v12 = 0;
    }

  }
  else
  {
    v12 = 0;
  }

  return v12;
}

void sub_1A510E50C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A510E61C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t _SortWebAttachmentSources(void *a1, void *a2)
{
  id v3;
  id v4;
  char isKindOfClass;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v3 = a1;
  v4 = a2;
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();
  objc_opt_class();
  v6 = isKindOfClass ^ objc_opt_isKindOfClass();
  v7 = -1;
  if ((isKindOfClass & 1) == 0)
    v7 = 1;
  if ((v6 & 1) != 0)
    v8 = v7;
  else
    v8 = 0;

  return v8;
}

void sub_1A510E6C0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A510E7A0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A510E840(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A510E8B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;

  a9.super_class = (Class)MFWebAttachmentSource;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_1A510E964(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A510E9DC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A510EA3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1A510EBC0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A510EC68(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A510ED4C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A510EDC8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A510EE64(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1A510F100(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1A510F29C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A510F45C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A510F50C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A510F594(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1A510F8B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A510F914(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A510F9B4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A510FA9C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A510FBA8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A510FC6C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A510FD28(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A510FEC0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1A510FFAC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5110024(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A511009C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A51100F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A5110154(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A51101F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

_BYTE *sub_1A5110324@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  *a3 = a1;
  v3 = _s15MailboxActivityVMa();
  return sub_1A51328B4(a2, (_BYTE *)a3 + *(int *)(v3 + 20));
}

uint64_t sub_1A5110368()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 8) & 1) == 0)
  {
    sub_1A594CE7C();
    sub_1A5134870();
  }
  return sub_1A594CE7C();
}

BOOL sub_1A511044C(uint64_t *a1, uint64_t *a2)
{
  char v2;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;

  v12 = 0;
  v13 = 0;
  v10 = 0;
  v11 = 0;
  v5 = *a1;
  v2 = *((_BYTE *)a1 + 8);
  v12 = *a1;
  v13 = v2 & 1;
  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v10 = *a2;
  v11 = v7 & 1;
  if ((v2 & 1) == 0)
  {
    if ((v7 & 1) == 0)
    {
      v9 = v5;
      v8 = v6;
      return static MailboxRowID.== infix(_:_:)(&v9, &v8);
    }
    return 0;
  }
  return (v7 & 1) != 0;
}

uint64_t sub_1A5110558()
{
  sub_1A51105C8();
  return sub_1A594C678();
}

unint64_t sub_1A51105C8()
{
  unint64_t v0;
  uint64_t v2;

  v2 = qword_1EE798AD0;
  if (!qword_1EE798AD0)
  {
    v0 = MEMORY[0x1A85B1874](&unk_1A599B880, &unk_1E4E7DC10);
    atomic_store(v0, (unint64_t *)&qword_1EE798AD0);
    return v0;
  }
  return v2;
}

uint64_t sub_1A5110634()
{
  return sub_1A5110558();
}

uint64_t sub_1A5110648()
{
  return sub_1A5110368();
}

uint64_t sub_1A511065C()
{
  return sub_1A594B160();
}

BOOL sub_1A5110670(uint64_t *a1, uint64_t *a2)
{
  return sub_1A511044C(a1, a2);
}

uint64_t sub_1A5110688(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;
  id v7;
  id v8;
  void (*v9)(char *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  unint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[2];
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;

  v23 = a1;
  v36 = 0;
  v35 = 0;
  v34 = 0;
  v31 = 0;
  v27 = v30;
  v30[0] = 0;
  v30[1] = 0;
  v16 = 0;
  v10 = sub_1A5949B7C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v6 - v12;
  v14 = (v2 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78]((char *)&v6 - v12);
  v15 = (char *)&v6 - v14;
  v36 = (char *)&v6 - v14;
  v17 = (*(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7963A0) - 8) + 64)
       + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v6 - v17;
  v19 = (*(_QWORD *)(*(_QWORD *)(_s18MailboxPersistenceVMa() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v23);
  v25 = (uint64_t)&v6 - v19;
  v35 = v3;
  v34 = v1;
  v20 = v1 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_mailboxPersistence;
  v21 = &v33;
  v22 = 0;
  swift_beginAccess();
  sub_1A5110A0C(v20, v25);
  swift_endAccess();
  v24 = &v32;
  swift_beginAccess();
  v26 = sub_1A52140C4(v23, v25);
  swift_endAccess();
  sub_1A5110B24(v25);
  v31 = v26;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v29 = v26;
  v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE799410);
  sub_1A5110BC4();
  sub_1A594BEA4();
  while (1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE79A970);
    sub_1A594C930();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v18, 1, v10) == 1)
      break;
    v4 = v13;
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v15, v18, v10);
    v8 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v4, v15, v10);
    v7 = (id)sub_1A5949B58();
    v9 = *(void (**)(char *, uint64_t))(v11 + 8);
    v9(v13, v10);
    objc_msgSend(v8, sel_postNotification_, v7);

    v9(v15, v10);
  }
  sub_1A5110C34();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A5110A0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v15;
  uint64_t v16;

  v2 = sub_1A5949EF4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a2, a1);
  v8 = _s18MailboxPersistenceVMa();
  v6 = *(int *)(v8 + 20);
  v7 = *(void **)(a1 + v6);
  v3 = v7;
  *(_QWORD *)(a2 + v6) = v7;
  v4 = *(int *)(v8 + 24);
  v13 = (_QWORD *)(a1 + v4);
  v15 = (_QWORD *)(a2 + v4);
  *(_QWORD *)(a2 + v4) = *(_QWORD *)(a1 + v4);
  v10 = *(_QWORD *)(a1 + v4 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v15[1] = v10;
  v11 = v13[2];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v15[2] = v11;
  v12 = v13[3];
  swift_retain();
  v15[3] = v12;
  v16 = v13[4];
  swift_retain();
  result = a2;
  v15[4] = v16;
  return result;
}

uint64_t sub_1A5110B24(uint64_t a1)
{
  uint64_t v1;

  v1 = sub_1A5949EF4();
  (*(void (**)(uint64_t))(*(_QWORD *)(v1 - 8) + 8))(a1);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return a1;
}

unint64_t sub_1A5110BC4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE799420;
  if (!qword_1EE799420)
  {
    v0 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EE799410);
    v1 = MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF50], v0);
    atomic_store(v1, (unint64_t *)&qword_1EE799420);
    return v1;
  }
  return v3;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1A5110C34()
{
  swift_bridgeObjectRelease();
}

uint64_t sub_1A5110C5C()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v11 = 0;
  v3 = (*(_QWORD *)(*(_QWORD *)(sub_1A594C078() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](0);
  v10 = (uint64_t)&v2 - v3;
  v4 = (*(_QWORD *)(*(_QWORD *)(sub_1A594C048() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v11);
  v9 = (char *)&v2 - v4;
  v5 = (*(_QWORD *)(*(_QWORD *)(sub_1A594AD70() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v11);
  v8 = (char *)&v2 - v5;
  sub_1A5144678();
  v6 = sub_1A594B568();
  v7 = v0;
  sub_1A511327C();
  sub_1A5145440();
  sub_1A51454D4(v10);
  result = sub_1A594C0A8();
  qword_1EE7A0BB8 = result;
  return result;
}

uint64_t *sub_1A5110DB8()
{
  if (qword_1EE79B8B0 != -1)
    swift_once();
  return &qword_1EE7A0BB8;
}

uint64_t sub_1A5110E0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v13;
  char *v14;
  unsigned __int8 *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD v63[10];
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint8_t *v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE **v70;
  uint64_t *v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  int v76;
  int v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t *v81;
  uint32_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  NSObject *v109;
  int v110;
  void *v111;
  id v112;
  _BOOL4 v113;
  int v114;
  int v115;
  unint64_t *v116;
  char *v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  char *v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  char *v137;
  unint64_t v138;
  _BYTE *v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  _BYTE *v143;
  uint64_t v144;
  char v145;
  uint64_t aBlock;
  int v147;
  int v148;
  uint64_t (*v149)(uint64_t);
  void *v150;
  uint64_t (*v151)();
  uint64_t v152;
  uint64_t (*v153)(uint64_t, uint64_t, uint64_t);
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  _BYTE *v157;
  uint64_t v158;
  uint32_t v159;
  char v160;
  char v161;
  char v162;
  _BYTE v163[24];

  v139 = v163;
  v119 = a1;
  v2 = v1;
  v140 = v2;
  memset(v163, 0, sizeof(v163));
  v120 = 0;
  v142 = 0;
  v121 = sub_1A594A764();
  v122 = *(_QWORD *)(v121 - 8);
  v123 = (*(_QWORD *)(v122 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](0);
  v124 = (char *)v63 - v123;
  v125 = _s6LoggerVMa();
  v126 = (*(_QWORD *)(*(_QWORD *)(v125 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v142);
  v127 = (uint64_t)v63 - v126;
  v128 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v5);
  v129 = (uint64_t)v63 - v128;
  v130 = sub_1A594AD34();
  v131 = *(_QWORD *)(v130 - 8);
  v132 = (*(_QWORD *)(v131 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v142);
  v133 = (char *)v63 - v132;
  v134 = sub_1A594AD70();
  v135 = *(_QWORD *)(v134 - 8);
  v136 = (*(_QWORD *)(v135 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v134);
  v137 = (char *)v63 - v136;
  v138 = (*(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE798620) - 8) + 64)
        + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v142);
  v143 = (char *)v63 - v138;
  v7 = type metadata accessor for ConnectionStatus.Error(v6);
  MEMORY[0x1E0C80A78](v7);
  v8 = v139;
  v9 = v140;
  v141 = (char *)v63 - v10;
  *((_QWORD *)v139 + 2) = (char *)v63 - v10;
  v8[1] = a1;
  *v8 = v9;
  Activity.accountStatus.getter(v11);
  v144 = type metadata accessor for Activity.MailboxStatus(v142);
  if ((*(unsigned int (**)(_BYTE *, uint64_t))(*(_QWORD *)(v144 - 8) + 48))(v143, 1) == 1)
    return sub_1A5112334((uint64_t)v143);
  if (swift_getEnumCaseMultiPayload() != 1)
    return sub_1A5112518((uint64_t)v143);
  sub_1A51126CC(v143, v141);
  if (!static ConnectionStatus.Error.Kind.__derived_enum_equals(_:_:)(*v141, 3))
    return sub_1A5112908((uint64_t)v141);
  v116 = (unint64_t *)(v140 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_lastKnownEnvironment);
  v117 = &v162;
  swift_beginAccess();
  v118 = *v116;
  swift_endAccess();
  if ((v118 & 0xFF00) == 0x200)
  {
    v114 = 2;
  }
  else
  {
    v115 = v118 >> 8;
    v114 = BYTE1(v118) & 1;
  }
  v160 = v114;
  v161 = 0;
  if (v114 != 2)
  {
    sub_1A5131A60(&v160, &v145);
    if (v161 != 2)
    {
      v113 = static Environment.AppState.__derived_enum_equals(_:_:)(v145 & 1, v161 & 1);
      goto LABEL_14;
    }
    goto LABEL_16;
  }
  if (v161 != 2)
  {
LABEL_16:
    v113 = 0;
    goto LABEL_14;
  }
  v113 = 1;
LABEL_14:
  if (v113)
  {
    v112 = (id)*sub_1A5110DB8();
    v13 = v112;
    swift_retain();
    v151 = sub_1A51319FC;
    v152 = v140;
    aBlock = MEMORY[0x1E0C809B0];
    v147 = 1107296256;
    v148 = 0;
    v149 = sub_1A5113234;
    v150 = &block_descriptor;
    v111 = _Block_copy(&aBlock);
    sub_1A511327C();
    sub_1A5113290();
    MEMORY[0x1A85AE508](0, v137, v133, v111);
    (*(void (**)(char *, uint64_t))(v131 + 8))(v133, v130);
    (*(void (**)(char *, uint64_t))(v135 + 8))(v137, v134);
    _Block_release(v111);
    swift_release();

    return sub_1A5112908((uint64_t)v141);
  }
  else
  {
    v14 = v124;
    v74 = &OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger;
    sub_1A5112AC0(v140 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger, v129);
    (*(void (**)(char *, uint64_t, uint64_t))(v122 + 16))(v14, v129, v121);
    sub_1A5112B28(v129);
    swift_retain();
    swift_retain();
    sub_1A5112AC0(v140 + *v74, v127);
    v15 = (unsigned __int8 *)(v127 + *(int *)(v125 + 20));
    v76 = *v15;
    v77 = *((_DWORD *)v15 + 1);
    sub_1A5112B28(v127);
    swift_release();
    v75 = 24;
    v91 = 7;
    v16 = swift_allocObject();
    v17 = v77;
    v84 = v16;
    *(_BYTE *)(v16 + 16) = v76;
    *(_DWORD *)(v16 + 20) = v17;
    sub_1A5130E98();
    sub_1A5130E98();
    sub_1A5130E98();
    v18 = swift_allocObject();
    v19 = v77;
    v78 = v18;
    *(_BYTE *)(v18 + 16) = v76;
    *(_DWORD *)(v18 + 20) = v19;
    swift_retain();
    v90 = 32;
    v20 = swift_allocObject();
    v21 = v78;
    v92 = v20;
    *(_QWORD *)(v20 + 16) = sub_1A5130EE0;
    *(_QWORD *)(v20 + 24) = v21;
    sub_1A5130E98();
    sub_1A5130E98();
    swift_release();
    swift_release();
    v109 = sub_1A594A74C();
    v110 = sub_1A594C030();
    v81 = &v158;
    v158 = 23;
    v79 = sub_1A5130F74();
    v80 = sub_1A5130FDC();
    sub_1A5131044();
    sub_1A594B880();
    v82 = v159;
    v88 = 17;
    v94 = swift_allocObject();
    v86 = 16;
    *(_BYTE *)(v94 + 16) = 16;
    v95 = swift_allocObject();
    v89 = 4;
    *(_BYTE *)(v95 + 16) = 4;
    v22 = swift_allocObject();
    v83 = v22;
    *(_QWORD *)(v22 + 16) = sub_1A5130E8C;
    *(_QWORD *)(v22 + 24) = 0;
    v23 = swift_allocObject();
    v24 = v83;
    v96 = v23;
    *(_QWORD *)(v23 + 16) = sub_1A51312FC;
    *(_QWORD *)(v23 + 24) = v24;
    v97 = swift_allocObject();
    *(_BYTE *)(v97 + 16) = 0;
    v98 = swift_allocObject();
    *(_BYTE *)(v98 + 16) = 1;
    v25 = swift_allocObject();
    v26 = v84;
    v85 = v25;
    *(_QWORD *)(v25 + 16) = sub_1A5130E6C;
    *(_QWORD *)(v25 + 24) = v26;
    v27 = swift_allocObject();
    v28 = v85;
    v99 = v27;
    *(_QWORD *)(v27 + 16) = sub_1A51315B4;
    *(_QWORD *)(v27 + 24) = v28;
    v100 = swift_allocObject();
    *(_BYTE *)(v100 + 16) = v86;
    v101 = swift_allocObject();
    *(_BYTE *)(v101 + 16) = v89;
    v29 = swift_allocObject();
    v87 = v29;
    *(_QWORD *)(v29 + 16) = sub_1A5130F68;
    *(_QWORD *)(v29 + 24) = 0;
    v30 = swift_allocObject();
    v31 = v87;
    v102 = v30;
    *(_QWORD *)(v30 + 16) = sub_1A51312FC;
    *(_QWORD *)(v30 + 24) = v31;
    v103 = swift_allocObject();
    *(_BYTE *)(v103 + 16) = 0;
    v104 = swift_allocObject();
    *(_BYTE *)(v104 + 16) = v89;
    v32 = swift_allocObject();
    v33 = v92;
    v93 = v32;
    *(_QWORD *)(v32 + 16) = sub_1A5130F5C;
    *(_QWORD *)(v32 + 24) = v33;
    v34 = swift_allocObject();
    v35 = v93;
    v106 = v34;
    *(_QWORD *)(v34 + 16) = sub_1A5131954;
    *(_QWORD *)(v34 + 24) = v35;
    v108 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A48D0);
    v105 = sub_1A594CD14();
    v107 = v36;
    swift_retain();
    v37 = v94;
    v38 = v107;
    *v107 = sub_1A5131290;
    v38[1] = v37;
    swift_retain();
    v39 = v95;
    v40 = v107;
    v107[2] = sub_1A5131290;
    v40[3] = v39;
    swift_retain();
    v41 = v96;
    v42 = v107;
    v107[4] = sub_1A5131460;
    v42[5] = v41;
    swift_retain();
    v43 = v97;
    v44 = v107;
    v107[6] = sub_1A5131290;
    v44[7] = v43;
    swift_retain();
    v45 = v98;
    v46 = v107;
    v107[8] = sub_1A5131290;
    v46[9] = v45;
    swift_retain();
    v47 = v99;
    v48 = v107;
    v107[10] = sub_1A51315FC;
    v48[11] = v47;
    swift_retain();
    v49 = v100;
    v50 = v107;
    v107[12] = sub_1A5131290;
    v50[13] = v49;
    swift_retain();
    v51 = v101;
    v52 = v107;
    v107[14] = sub_1A5131290;
    v52[15] = v51;
    swift_retain();
    v53 = v102;
    v54 = v107;
    v107[16] = sub_1A5131460;
    v54[17] = v53;
    swift_retain();
    v55 = v103;
    v56 = v107;
    v107[18] = sub_1A5131290;
    v56[19] = v55;
    swift_retain();
    v57 = v104;
    v58 = v107;
    v107[20] = sub_1A5131290;
    v58[21] = v57;
    swift_retain();
    v59 = v106;
    v60 = v107;
    v107[22] = sub_1A513199C;
    v60[23] = v59;
    sub_1A5113324();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v109, (os_log_type_t)v110))
    {
      v61 = v120;
      v67 = (uint8_t *)sub_1A594C348();
      v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
      v66 = 0;
      v68 = sub_1A5130D14(0);
      v69 = sub_1A5130D14(v66);
      v70 = &v157;
      v157 = v67;
      v71 = &v156;
      v156 = v68;
      v72 = &v155;
      v155 = v69;
      sub_1A5130D6C(0, &v157);
      sub_1A5130D6C(4, v70);
      v153 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
      v154 = v94;
      sub_1A5130D80(&v153, (uint64_t)v70, (uint64_t)v71, (uint64_t)v72);
      v73 = v61;
      if (v61)
      {
        __break(1u);
      }
      else
      {
        v153 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v154 = v95;
        sub_1A5130D80(&v153, (uint64_t)&v157, (uint64_t)&v156, (uint64_t)&v155);
        v64 = 0;
        v62 = v64;
        v153 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131460;
        v154 = v96;
        sub_1A5130D80(&v153, (uint64_t)&v157, (uint64_t)&v156, (uint64_t)&v155);
        v63[9] = v62;
        v153 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v154 = v97;
        sub_1A5130D80(&v153, (uint64_t)&v157, (uint64_t)&v156, (uint64_t)&v155);
        v63[8] = 0;
        v153 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v154 = v98;
        sub_1A5130D80(&v153, (uint64_t)&v157, (uint64_t)&v156, (uint64_t)&v155);
        v63[7] = 0;
        v153 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A51315FC;
        v154 = v99;
        sub_1A5130D80(&v153, (uint64_t)&v157, (uint64_t)&v156, (uint64_t)&v155);
        v63[6] = 0;
        v153 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v154 = v100;
        sub_1A5130D80(&v153, (uint64_t)&v157, (uint64_t)&v156, (uint64_t)&v155);
        v63[5] = 0;
        v153 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v154 = v101;
        sub_1A5130D80(&v153, (uint64_t)&v157, (uint64_t)&v156, (uint64_t)&v155);
        v63[4] = 0;
        v153 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131460;
        v154 = v102;
        sub_1A5130D80(&v153, (uint64_t)&v157, (uint64_t)&v156, (uint64_t)&v155);
        v63[3] = 0;
        v153 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v154 = v103;
        sub_1A5130D80(&v153, (uint64_t)&v157, (uint64_t)&v156, (uint64_t)&v155);
        v63[2] = 0;
        v153 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v154 = v104;
        sub_1A5130D80(&v153, (uint64_t)&v157, (uint64_t)&v156, (uint64_t)&v155);
        v63[1] = 0;
        v153 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A513199C;
        v154 = v106;
        sub_1A5130D80(&v153, (uint64_t)&v157, (uint64_t)&v156, (uint64_t)&v155);
        _os_log_impl(&dword_1A4F90000, v109, (os_log_type_t)v110, "[%.*hhx-%.*X] Not renewing credentials with UI prompt since Mail is backgrounded.", v67, v82);
        v63[0] = 0;
        sub_1A5130DC4(v68);
        sub_1A5130DC4(v69);
        sub_1A594C330();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
      }
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }

    (*(void (**)(char *, uint64_t))(v122 + 8))(v124, v121);
    return sub_1A5112908((uint64_t)v141);
  }
}

uint64_t sub_1A5112334(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v10 = type metadata accessor for Activity.MailboxStatus(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(a1, 1)
    && swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = type metadata accessor for ConnectionStatus.Error(0);
    v7 = a1 + *(int *)(v6 + 20);
    v8 = type metadata accessor for ConnectionStatus.Error.Details(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1))
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload <= 3)
        __asm { BR              X8 }
    }
    v2 = a1 + *(int *)(v6 + 24);
    v3 = sub_1A594A0EC();
    v4 = *(_QWORD *)(v3 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t))(v4 + 48))(v2, 1))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  }
  return a1;
}

uint64_t sub_1A5112518(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  type metadata accessor for Activity.MailboxStatus(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = type metadata accessor for ConnectionStatus.Error(0);
    v7 = a1 + *(int *)(v6 + 20);
    v8 = type metadata accessor for ConnectionStatus.Error.Details(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1))
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload <= 3)
        __asm { BR              X8 }
    }
    v2 = a1 + *(int *)(v6 + 24);
    v3 = sub_1A594A0EC();
    v4 = *(_QWORD *)(v3 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t))(v4 + 48))(v2, 1))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  }
  return a1;
}

_BYTE *sub_1A51126CC(_BYTE *a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *__dst;
  _BYTE *__src;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  *a2 = *a1;
  v11 = type metadata accessor for ConnectionStatus.Error(0);
  v12 = *(int *)(v11 + 20);
  v14 = type metadata accessor for ConnectionStatus.Error.Details(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t))(v15 + 48))(&a1[v12], 1))
  {
    v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE798510);
    memcpy(&a2[v12], &a1[v12], *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(&a2[v12], &a1[v12], *(_QWORD *)(v15 + 64));
    }
    else
    {
      v2 = sub_1A594ACEC();
      (*(void (**)(void))(*(_QWORD *)(v2 - 8) + 32))();
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v15 + 56))(&a2[v12], 0, 1, v14);
  }
  __dst = &a2[*(int *)(v11 + 24)];
  __src = &a1[*(int *)(v11 + 24)];
  v8 = sub_1A594A0EC();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t))(v9 + 48))(__src, 1))
  {
    v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE796458);
    memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 32))(__dst, __src, v8);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v9 + 56))(__dst, 0, 1, v8);
  }
  return a2;
}

uint64_t sub_1A5112908(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v6 = type metadata accessor for ConnectionStatus.Error(0);
  v7 = *(int *)(v6 + 20);
  v9 = type metadata accessor for ConnectionStatus.Error.Details(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + v7, 1))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload <= 3)
      __asm { BR              X8 }
  }
  v2 = a1 + *(int *)(v6 + 24);
  v3 = sub_1A594A0EC();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v4 + 48))(v2, 1))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return a1;
}

uint64_t sub_1A5112AC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_1A594A764();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a2, a1);
  v3 = _s6LoggerVMa();
  result = a2;
  *(_QWORD *)(a2 + *(int *)(v3 + 20)) = *(_QWORD *)(a1 + *(int *)(v3 + 20));
  return result;
}

uint64_t sub_1A5112B28(uint64_t a1)
{
  uint64_t v1;

  v1 = sub_1A594A764();
  (*(void (**)(uint64_t))(*(_QWORD *)(v1 - 8) + 8))(a1);
  return a1;
}

uint64_t sub_1A5112B64()
{
  return sub_1A5112B98();
}

uint64_t sub_1A5112B98()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  id v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  _QWORD *v17;
  uint64_t v18;
  id v19;
  _QWORD v21[4];
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  uint64_t *v32;
  _QWORD *v33;
  _BYTE **v34;
  uint64_t *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char *v40;
  unint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t *v56;
  uint32_t v57;
  uint64_t v58;
  int v59;
  NSObject *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  uint64_t aBlock;
  int v67;
  int v68;
  uint64_t (*v69)(uint64_t, uint64_t, void *);
  void *v70;
  void (*v71)(uint64_t, void *);
  uint64_t v72;
  uint64_t v73;
  uint32_t v74;
  uint64_t v75;
  uint64_t v76;

  v76 = 0;
  v75 = 0;
  v38 = 0;
  v58 = 0;
  v51 = sub_1A594A764();
  v50 = *(_QWORD *)(v51 - 8);
  v39 = (*(_QWORD *)(v50 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](0);
  v0 = (char *)v21 - v39;
  v40 = (char *)v21 - v39;
  v1 = _s6LoggerVMa();
  v41 = (*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v1);
  v52 = (uint64_t)v21 - v41;
  v76 = v2;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7993D8);
  v53 = 2;
  v43 = sub_1A594CD14();
  v42 = v3;
  v46 = (id)*MEMORY[0x1E0C8F320];
  v4 = v46;
  v5 = sub_1A594B40C();
  v7 = v6;
  v8 = v42;
  *v42 = v5;
  v8[1] = v7;
  *((_BYTE *)v8 + 16) = 0;
  v45 = (id)*MEMORY[0x1E0C8F330];
  v9 = v45;
  v10 = sub_1A594B40C();
  v11 = v42;
  v12 = v10;
  v13 = v43;
  v42[3] = v12;
  v11[4] = v14;
  *((_BYTE *)v11 + 40) = 0;
  sub_1A5113324();
  v47 = v13;

  v49 = sub_1A594AFEC();
  v75 = v49;
  sub_1A5112AC0(v48 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger, v52);
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v0, v52, v51);
  sub_1A5112B28(v52);
  v60 = sub_1A594A74C();
  v59 = sub_1A594C030();
  v56 = &v73;
  v73 = v53;
  v54 = sub_1A5130F74();
  v55 = sub_1A5130FDC();
  sub_1A5131044();
  sub_1A594B880();
  v57 = v74;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A48D0);
  v61 = sub_1A594CD14();
  if (os_log_type_enabled(v60, (os_log_type_t)v59))
  {
    v15 = v38;
    v28 = (uint8_t *)sub_1A594C348();
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
    v27 = 0;
    v29 = sub_1A5130D14(0);
    v30 = sub_1A5130D14(v27);
    v34 = &v65;
    v65 = v28;
    v35 = &v64;
    v64 = v29;
    v32 = &v63;
    v63 = v30;
    v31 = 0;
    sub_1A5130D6C(0, &v65);
    sub_1A5130D6C(v31, v34);
    v62 = v61;
    v33 = v21;
    MEMORY[0x1E0C80A78](v21);
    v16 = v35;
    v17 = &v21[-6];
    v36 = &v21[-6];
    v17[2] = v34;
    v17[3] = v16;
    v17[4] = v18;
    v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE799E10);
    sub_1A5131B04();
    sub_1A594B7FC();
    if (v15)
    {
      __break(1u);
    }
    else
    {
      _os_log_impl(&dword_1A4F90000, v60, (os_log_type_t)v59, "Renewing credentials.", v28, v57);
      v25 = 0;
      sub_1A5130DC4(v29);
      sub_1A5130DC4(v30);
      sub_1A594C330();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  (*(void (**)(char *, uint64_t))(v50 + 8))(v40, v51);
  v24 = *(id *)(v48 + 128);
  v19 = v24;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v21[0] = MEMORY[0x1E0DEC198];
  v21[1] = MEMORY[0x1E0DEE9B8] + 8;
  v21[2] = MEMORY[0x1E0DEC1A0];
  v21[3] = sub_1A594C9D8();
  v23 = (id)sub_1A594AFBC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_retain();
  v71 = sub_1A5131A74;
  v72 = v48;
  aBlock = MEMORY[0x1E0C809B0];
  v67 = 1107296256;
  v68 = 0;
  v69 = sub_1A511438C;
  v70 = &block_descriptor_68;
  v22 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(v24, sel_renewCredentialsWithOptions_completion_, v23, v22);
  _Block_release(v22);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A5113234(uint64_t a1)
{
  uint64_t v1;
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  v1 = swift_retain();
  v3(v1);
  return swift_release();
}

uint64_t sub_1A511327C()
{
  return sub_1A594AD4C();
}

uint64_t sub_1A5113290()
{
  sub_1A537B24C(0);
  sub_1A594AD34();
  sub_1A514456C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A19F8);
  sub_1A51445DC();
  return sub_1A594C5C4();
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1A5113324()
{
  sub_1A594BAF0();
  sub_1A5131170();
}

void sub_1A5113364(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  char *v13;
  uint64_t v14;
  uint64_t *v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t *v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD v38[3];
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE **v42;
  uint64_t *v43;
  uint64_t *v44;
  uint64_t v45;
  id v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t *v49;
  uint32_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  NSObject *v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint8_t *v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int v70;
  uint64_t *v71;
  _QWORD *v72;
  _BYTE **v73;
  uint64_t *v74;
  _QWORD *v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t *v79;
  uint32_t v80;
  int v81;
  NSObject *v82;
  uint64_t v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint8_t *v88;
  uint64_t v89;
  uint64_t v90;
  unsigned int v91;
  uint64_t *v92;
  _QWORD *v93;
  _BYTE **v94;
  uint64_t *v95;
  _QWORD *v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t *v100;
  uint32_t v101;
  int v102;
  NSObject *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  char *v110;
  unint64_t v111;
  char *v112;
  unint64_t v113;
  char *v114;
  uint64_t v115;
  id v116;
  unint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _BYTE *v128;
  uint64_t v129;
  uint32_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  _BYTE *v134;
  uint64_t v135;
  uint32_t v136;
  uint64_t (*v137)(uint64_t, uint64_t, uint64_t);
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  _BYTE *v141;
  uint64_t v142;
  uint32_t v143;
  id v144;
  uint64_t v145;
  void *v146;
  uint64_t v147;

  v124 = a1;
  v116 = a2;
  v115 = a3;
  v147 = 0;
  v146 = 0;
  v145 = 0;
  v144 = 0;
  v105 = 0;
  v106 = 0;
  v107 = sub_1A594A764();
  v108 = *(_QWORD *)(v107 - 8);
  v109 = (*(_QWORD *)(v108 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](0);
  v110 = (char *)v38 - v109;
  v111 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v4);
  v112 = (char *)v38 - v111;
  v113 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v6);
  v114 = (char *)v38 - v113;
  v120 = *(_QWORD *)(*(_QWORD *)(_s6LoggerVMa() - 8) + 64);
  v117 = (v120 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v116);
  v118 = (uint64_t)v38 - v117;
  v119 = (v120 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v7);
  v121 = (uint64_t)v38 - v119;
  v122 = (v120 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v8);
  v123 = (uint64_t)v38 - v122;
  v147 = v9;
  v146 = v10;
  v145 = v11;
  v12 = v10;
  if (v124)
  {
    if (v124 == 1)
    {
      if (v116)
      {
        v84 = v116;
        v23 = v110;
        v46 = v116;
        v24 = v116;
        v144 = v46;
        sub_1A5112AC0(v115 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger, v118);
        (*(void (**)(char *, uint64_t, uint64_t))(v108 + 16))(v23, v118, v107);
        sub_1A5112B28(v118);
        v25 = v46;
        v53 = 7;
        v54 = swift_allocObject();
        *(_QWORD *)(v54 + 16) = v46;
        v62 = sub_1A594A74C();
        v63 = sub_1A594C018();
        v49 = &v142;
        v142 = 12;
        v47 = sub_1A5130F74();
        v48 = sub_1A5130FDC();
        sub_1A5131044();
        sub_1A594B880();
        v50 = v143;
        v51 = 17;
        v56 = swift_allocObject();
        *(_BYTE *)(v56 + 16) = 64;
        v57 = swift_allocObject();
        *(_BYTE *)(v57 + 16) = 8;
        v52 = 32;
        v26 = swift_allocObject();
        v27 = v54;
        v55 = v26;
        *(_QWORD *)(v26 + 16) = sub_1A5144490;
        *(_QWORD *)(v26 + 24) = v27;
        v28 = swift_allocObject();
        v29 = v55;
        v59 = v28;
        *(_QWORD *)(v28 + 16) = sub_1A5130F5C;
        *(_QWORD *)(v28 + 24) = v29;
        v61 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A48D0);
        v58 = sub_1A594CD14();
        v60 = v30;
        swift_retain();
        v31 = v56;
        v32 = v60;
        *v60 = sub_1A5131290;
        v32[1] = v31;
        swift_retain();
        v33 = v57;
        v34 = v60;
        v60[2] = sub_1A5131290;
        v34[3] = v33;
        swift_retain();
        v35 = v59;
        v36 = v60;
        v60[4] = sub_1A5144560;
        v36[5] = v35;
        sub_1A5113324();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v62, (os_log_type_t)v63))
        {
          v37 = v105;
          v39 = (uint8_t *)sub_1A594C348();
          v38[2] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
          v40 = sub_1A5130D14(1);
          v41 = sub_1A5130D14(0);
          v42 = &v141;
          v141 = v39;
          v43 = &v140;
          v140 = v40;
          v44 = &v139;
          v139 = v41;
          sub_1A5130D6C(2, &v141);
          sub_1A5130D6C(1, v42);
          v137 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v138 = v56;
          sub_1A5130D80(&v137, (uint64_t)v42, (uint64_t)v43, (uint64_t)v44);
          v45 = v37;
          if (v37)
          {
            __break(1u);
          }
          else
          {
            v137 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v138 = v57;
            sub_1A5130D80(&v137, (uint64_t)&v141, (uint64_t)&v140, (uint64_t)&v139);
            v38[0] = 0;
            v137 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5144560;
            v138 = v59;
            sub_1A5130D80(&v137, (uint64_t)&v141, (uint64_t)&v140, (uint64_t)&v139);
            _os_log_impl(&dword_1A4F90000, v62, (os_log_type_t)v63, "Failed to renew credentials: %@", v39, v50);
            sub_1A5130DC4(v40);
            sub_1A5130DC4(v41);
            sub_1A594C330();
            swift_release();
            swift_release();
            swift_release();
          }
        }
        else
        {
          swift_release();
          swift_release();
          swift_release();
        }

        (*(void (**)(char *, uint64_t))(v108 + 8))(v110, v107);
      }
      else
      {
        v18 = v112;
        sub_1A5112AC0(v115 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger, v121);
        (*(void (**)(char *, uint64_t, uint64_t))(v108 + 16))(v18, v121, v107);
        sub_1A5112B28(v121);
        v82 = sub_1A594A74C();
        v81 = sub_1A594C018();
        v79 = &v135;
        v135 = 2;
        v77 = sub_1A5130F74();
        v78 = sub_1A5130FDC();
        sub_1A5131044();
        sub_1A594B880();
        v80 = v136;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A48D0);
        v83 = sub_1A594CD14();
        if (os_log_type_enabled(v82, (os_log_type_t)v81))
        {
          v19 = v105;
          v67 = (uint8_t *)sub_1A594C348();
          v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
          v66 = 0;
          v68 = sub_1A5130D14(0);
          v69 = sub_1A5130D14(v66);
          v73 = &v134;
          v134 = v67;
          v74 = &v133;
          v133 = v68;
          v71 = &v132;
          v132 = v69;
          v70 = 0;
          sub_1A5130D6C(0, &v134);
          sub_1A5130D6C(v70, v73);
          v131 = v83;
          v72 = v38;
          MEMORY[0x1E0C80A78](v38);
          v20 = v74;
          v21 = &v38[-6];
          v75 = &v38[-6];
          v21[2] = v73;
          v21[3] = v20;
          v21[4] = v22;
          v76 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE799E10);
          sub_1A5131B04();
          sub_1A594B7FC();
          if (v19)
          {
            __break(1u);
          }
          else
          {
            _os_log_impl(&dword_1A4F90000, v82, (os_log_type_t)v81, "Failed to renew credentials.", v67, v80);
            v64 = 0;
            sub_1A5130DC4(v68);
            sub_1A5130DC4(v69);
            sub_1A594C330();
            swift_bridgeObjectRelease();
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }

        (*(void (**)(char *, uint64_t))(v108 + 8))(v112, v107);
      }
    }
    else
    {

    }
  }
  else
  {
    v13 = v114;
    sub_1A5112AC0(v115 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger, v123);
    (*(void (**)(char *, uint64_t, uint64_t))(v108 + 16))(v13, v123, v107);
    sub_1A5112B28(v123);
    v103 = sub_1A594A74C();
    v102 = sub_1A594C030();
    v100 = &v129;
    v129 = 2;
    v98 = sub_1A5130F74();
    v99 = sub_1A5130FDC();
    sub_1A5131044();
    sub_1A594B880();
    v101 = v130;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A48D0);
    v104 = sub_1A594CD14();
    if (os_log_type_enabled(v103, (os_log_type_t)v102))
    {
      v14 = v105;
      v88 = (uint8_t *)sub_1A594C348();
      v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
      v87 = 0;
      v89 = sub_1A5130D14(0);
      v90 = sub_1A5130D14(v87);
      v94 = &v128;
      v128 = v88;
      v95 = &v127;
      v127 = v89;
      v92 = &v126;
      v126 = v90;
      v91 = 0;
      sub_1A5130D6C(0, &v128);
      sub_1A5130D6C(v91, v94);
      v125 = v104;
      v93 = v38;
      MEMORY[0x1E0C80A78](v38);
      v15 = v95;
      v16 = &v38[-6];
      v96 = &v38[-6];
      v16[2] = v94;
      v16[3] = v15;
      v16[4] = v17;
      v97 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE799E10);
      sub_1A5131B04();
      sub_1A594B7FC();
      if (v14)
      {
        __break(1u);
      }
      else
      {
        _os_log_impl(&dword_1A4F90000, v103, (os_log_type_t)v102, "Did renew credentials.", v88, v101);
        v85 = 0;
        sub_1A5130DC4(v89);
        sub_1A5130DC4(v90);
        sub_1A594C330();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }

    (*(void (**)(char *, uint64_t))(v108 + 8))(v114, v107);
  }
}

void *sub_1A5114368(void *a1)
{
  id v1;

  v1 = a1;
  return a1;
}

uint64_t sub_1A511438C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;
  void (*v5)(uint64_t, void *);

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  v3 = a3;
  v5(a2, a3);

  return swift_release();
}

id *sub_1A51143F4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  _QWORD *v25;
  id v26;
  char *v27;
  unsigned __int8 *v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  _QWORD *v85;
  id *v86;
  id *v87;
  id *v88;
  uint64_t v89;
  id *result;
  char *v91;
  unsigned __int8 *v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  _QWORD *v123;
  uint64_t v124;
  _QWORD *v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  _QWORD *v131;
  uint64_t v132;
  _QWORD *v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  _QWORD *v137;
  uint64_t v138;
  _QWORD *v139;
  uint64_t v140;
  _QWORD *v141;
  uint64_t v142;
  _QWORD *v143;
  uint64_t v144;
  _QWORD *v145;
  uint64_t v146;
  _QWORD *v147;
  id *v148;
  _BOOL4 v149;
  _BOOL4 v150;
  _BOOL4 v151;
  id v153;
  char *v154;
  unsigned __int8 *v155;
  uint64_t v156;
  int v157;
  uint64_t v158;
  int v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  _QWORD *v180;
  uint64_t v181;
  _QWORD *v182;
  uint64_t v183;
  _QWORD *v184;
  uint64_t v185;
  _QWORD *v186;
  uint64_t v187;
  _QWORD *v188;
  uint64_t v189;
  _QWORD *v190;
  uint64_t v191;
  _QWORD *v192;
  uint64_t v193;
  _QWORD *v194;
  uint64_t v195;
  _QWORD *v196;
  uint64_t v197;
  _QWORD *v198;
  uint64_t v199;
  _QWORD *v200;
  uint64_t v201;
  _QWORD *v202;
  uint64_t v203;
  _QWORD *v204;
  uint64_t v205;
  _QWORD *v206;
  uint64_t v207;
  _QWORD *v208;
  uint64_t v209;
  _QWORD *v210;
  id *v211;
  id *v212;
  char v213;
  uint64_t v214;
  uint64_t v215;
  id *v216;
  id *v217;
  id *v218;
  id *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  id *v233;
  uint64_t v234;
  uint8_t *v235;
  uint64_t v236;
  uint64_t v237;
  _BYTE **v238;
  uint64_t *v239;
  uint64_t *v240;
  id *v241;
  uint64_t *v242;
  uint64_t v243;
  int v244;
  int v245;
  uint64_t v246;
  unint64_t v247;
  unint64_t v248;
  unint64_t v249;
  uint64_t *v250;
  uint32_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  int v255;
  uint64_t v256;
  int v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  _QWORD *v281;
  uint64_t v282;
  NSObject *v283;
  int v284;
  _BOOL4 v285;
  id v286;
  id v287;
  id v288;
  id v289;
  id v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  id *v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  unint64_t v302;
  id *v303;
  int64_t v304;
  unint64_t v305;
  id *v306;
  unint64_t v307;
  id *v308;
  unint64_t v309;
  int64_t v310;
  int64_t v311;
  _BOOL4 v312;
  int64_t v313;
  unint64_t v314;
  id *j;
  unint64_t v316;
  int64_t v317;
  unint64_t v318;
  id *v319;
  int64_t v320;
  _BOOL4 v321;
  int64_t v322;
  unint64_t v323;
  id *v324;
  unint64_t v325;
  unint64_t v326;
  int64_t v327;
  unint64_t v328;
  id *v329;
  int64_t v330;
  int64_t v331;
  _BOOL4 v332;
  unint64_t v333;
  int64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  unint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  unint64_t v347;
  uint64_t v348;
  id *v349;
  _QWORD *v350;
  char *v351;
  id *v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint8_t *v373;
  uint64_t v374;
  uint64_t v375;
  _BYTE **v376;
  uint64_t *v377;
  uint64_t *v378;
  id *v379;
  uint64_t *v380;
  uint64_t v381;
  int v382;
  int v383;
  uint64_t v384;
  unint64_t v385;
  unint64_t v386;
  unint64_t v387;
  uint64_t *v388;
  uint32_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  int v393;
  uint64_t v394;
  int v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  _QWORD *v419;
  uint64_t v420;
  NSObject *v421;
  int v422;
  unsigned int (*v423)(_BYTE *, uint64_t, uint64_t);
  uint64_t *v424;
  uint64_t *v425;
  uint64_t v426;
  int v427;
  id *v428;
  uint64_t v429;
  int v430;
  id *v431;
  uint64_t v432;
  id *i;
  uint64_t *v434;
  uint64_t v435;
  uint64_t v436;
  id **v437;
  char *v438;
  uint64_t v439;
  id *v440;
  id *v441;
  id v442;
  id *v443;
  id *v444;
  id *v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  id *v459;
  uint64_t v460;
  uint8_t *v461;
  uint64_t v462;
  uint64_t v463;
  _BYTE **v464;
  uint64_t *v465;
  uint64_t *v466;
  id *v467;
  uint64_t *v468;
  id v469;
  uint64_t *v470;
  int v471;
  int v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  unint64_t v477;
  unint64_t v478;
  uint64_t *v479;
  uint32_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  int v484;
  uint64_t v485;
  int v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  _QWORD *v510;
  uint64_t v511;
  NSObject *v512;
  int v513;
  id *v514;
  uint64_t v515;
  id v516;
  id v517;
  id v518;
  uint64_t v519;
  int v520;
  int v521;
  id *v522;
  uint64_t v523;
  const char *v524;
  const char *v525;
  const char *v526;
  unint64_t v527;
  _BYTE *v528;
  unint64_t v529;
  _BYTE *v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  unint64_t v534;
  _BYTE *v535;
  unint64_t v536;
  _BYTE *v537;
  unint64_t v538;
  _BYTE *v539;
  unint64_t v540;
  id *v541;
  unint64_t v542;
  _QWORD *v543;
  uint64_t v544;
  uint64_t v545;
  unint64_t v546;
  char *v547;
  unint64_t v548;
  char *v549;
  unint64_t v550;
  char *v551;
  uint64_t v552;
  unint64_t v553;
  uint64_t v554;
  unint64_t v555;
  uint64_t v556;
  unint64_t v557;
  uint64_t v558;
  unint64_t v559;
  uint64_t v560;
  unint64_t v561;
  id *v562;
  unint64_t v563;
  _BYTE *v564;
  unint64_t v565;
  _BYTE *v566;
  uint64_t v567;
  unint64_t v568;
  _QWORD *v569;
  unint64_t v570;
  uint64_t v571;
  uint64_t v572;
  char *v573;
  id *v574;
  uint64_t v575;
  id v576;
  uint64_t *v577;
  id v578;
  uint64_t v579;
  uint64_t v580;
  uint64_t *v581;
  uint64_t v582;
  uint64_t v583;
  unint64_t v584;
  _BYTE *v585;
  char *v586;
  size_t v587;
  id *v588;
  id *v589;
  uint64_t (*v590)(uint64_t, uint64_t, uint64_t);
  uint64_t v591;
  uint64_t v592;
  uint64_t v593;
  _BYTE *v594;
  uint64_t v595;
  uint32_t v596;
  uint64_t v597;
  uint64_t v598;
  id v599;
  uint64_t v600;
  char v601;
  uint64_t v602;
  char v603;
  uint64_t v604;
  uint64_t v605;
  char v606;
  uint64_t v607;
  char v608;
  uint64_t (*v609)(uint64_t, uint64_t, uint64_t);
  uint64_t v610;
  uint64_t v611;
  uint64_t v612;
  _BYTE *v613;
  uint64_t v614;
  char v615;
  uint64_t v616;
  uint32_t v617;
  uint64_t v618;
  uint64_t v619;
  uint64_t v620;
  uint64_t (*v621)(uint64_t, uint64_t, uint64_t);
  uint64_t v622;
  uint64_t v623;
  uint64_t v624;
  _BYTE *v625;
  uint64_t v626;
  uint32_t v627;
  uint64_t v628;
  char v629;
  uint64_t v630;
  char v631;
  uint64_t v632;
  char v633;
  uint64_t v634;
  char v635;
  uint64_t v636;
  uint64_t v637;
  char v638;
  uint64_t v639;
  uint64_t v640;
  uint64_t v641;
  uint64_t v642;
  uint64_t v643;
  uint64_t v644;
  _QWORD v645[6];
  unsigned __int8 v646;
  char v647;
  id *v648;
  uint64_t v649;
  uint64_t v650;
  id *v651;
  uint64_t v652;
  uint64_t v653;
  uint64_t v654;
  _BYTE v655[40];
  id v656;
  char v657;
  uint64_t v658;
  uint64_t v659;
  char *v660;
  char *v661;
  char *v662;
  char *v663;
  char v664;
  char v665;
  _QWORD v666[5];

  v569 = a1;
  v524 = "Fatal error";
  v525 = "Unexpectedly found nil while implicitly unwrapping an Optional value";
  v526 = "Message/Activity.swift";
  v663 = 0;
  v662 = 0;
  v661 = 0;
  v660 = 0;
  v659 = 0;
  v658 = 0;
  v656 = 0;
  v585 = v655;
  v587 = 40;
  memset(v655, 0, sizeof(v655));
  v580 = 0;
  v588 = 0;
  v651 = 0;
  v649 = 0;
  v650 = 0;
  v639 = 0;
  v640 = 0;
  v636 = 0;
  v607 = 0;
  v608 = 0;
  v602 = 0;
  v603 = 0;
  v599 = 0;
  v598 = 0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE798620);
  v527 = (*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v2);
  v528 = (char *)&v216 - v527;
  v529 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78]((char *)&v216 - v527);
  v530 = (char *)&v216 - v529;
  v567 = 0;
  v531 = type metadata accessor for Activity.MailboxStatus(0);
  v532 = *(_QWORD *)(v531 - 8);
  v533 = *(_QWORD *)(v532 + 64);
  v534 = (v533 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v531);
  v535 = (char *)&v216 - v534;
  v663 = (char *)&v216 - v534;
  v536 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v5);
  v537 = (char *)&v216 - v536;
  v538 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78]((char *)&v216 - v536);
  v539 = (char *)&v216 - v538;
  v662 = (char *)&v216 - v538;
  v540 = (*(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE798B30) - 8) + 64)
        + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v567);
  v541 = (id *)((char *)&v216 - v540);
  v542 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for Activity(v7) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v567);
  v543 = (id **)((char *)&v216 - v542);
  v544 = sub_1A594A764();
  v545 = *(_QWORD *)(v544 - 8);
  v546 = (*(_QWORD *)(v545 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v567);
  v547 = (char *)&v216 - v546;
  v548 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v9);
  v549 = (char *)&v216 - v548;
  v550 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v11);
  v551 = (char *)&v216 - v550;
  v552 = _s6LoggerVMa();
  v553 = (*(_QWORD *)(*(_QWORD *)(v552 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v567);
  v554 = (uint64_t)&v216 - v553;
  v555 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v13);
  v556 = (uint64_t)&v216 - v555;
  v557 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v15);
  v558 = (uint64_t)&v216 - v557;
  v559 = (v16 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v17);
  v560 = (uint64_t)&v216 - v559;
  v582 = _s15MailboxActivityVMa();
  v561 = (*(_QWORD *)(*(_QWORD *)(v582 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v582);
  v562 = (id *)((char *)&v216 - v561);
  v661 = (char *)&v216 - v561;
  v563 = (*(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE795E28) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v567);
  v564 = (char *)&v216 - v563;
  v565 = (v18 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v19);
  v566 = (char *)&v216 - v565;
  v568 = (*(_QWORD *)(*(_QWORD *)(_s18MailboxPersistenceVMa() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v567);
  v575 = (uint64_t)&v216 - v568;
  v570 = (*(_QWORD *)(*(_QWORD *)(_s18LastSyncDateHelperVMa() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v569);
  v574 = (id *)((char *)&v216 - v570);
  v660 = (char *)&v216 - v570;
  v659 = v20;
  v658 = v1;
  sub_1A5110E0C(v20);
  v21 = v571;
  v577 = &OBJC_IVAR____TtC7Message18PersistenceAdaptor_activityPersistence;
  v576 = *(id *)(v571 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_activityPersistence);
  v22 = v576;
  v572 = v21 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_mailboxPersistence;
  v573 = &v657;
  v579 = 32;
  swift_beginAccess();
  sub_1A5110A0C(v572, v575);
  swift_endAccess();
  v23 = sub_1A5118248();
  sub_1A511826C((uint64_t)v576, v575, v23, v574);
  v578 = *(id *)(v21 + *v577);
  v24 = v578;
  v656 = v578;
  v581 = &v654;
  swift_beginAccess();
  v583 = *(_QWORD *)(v21 + 88);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_endAccess();
  v584 = sub_1A51105C8();
  v586 = &v664;
  sub_1A594AFE0();
  memcpy(v585, v586, v587);
  v589 = v588;
  while (1)
  {
    v522 = v589;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7991D0);
    sub_1A594B0AC();
    sub_1A5131C3C(v564, v566);
    v523 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE798AC8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t))(*(_QWORD *)(v523 - 8) + 48))(v566, 1) == 1)
      break;
    v519 = *(_QWORD *)v566;
    v520 = v566[8];
    v25 = &v566[*(int *)(v523 + 48)];
    v602 = v519;
    v521 = 1;
    v603 = v520 & 1;
    sub_1A5133E20(v25, v562);
    v600 = v519;
    v601 = v520 & 1 & v521;
    if ((sub_1A51183C8((uint64_t)&v600) & 1) != 0 && (v518 = *v562, v26 = v518, v518))
    {
      v517 = v518;
      v516 = v517;
      v599 = v517;
      if ((v520 & 1) != 0)
      {
        v514 = v522;
      }
      else
      {
        v515 = v519;
        v475 = v519;
        v598 = v519;
        v468 = &v597;
        v597 = v519;
        v469 = objc_msgSend(v516, sel_objectID);
        sub_1A5118610(v468, v469);
        v27 = v551;

        v470 = &OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger;
        sub_1A5112AC0(v571 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger, v560);
        (*(void (**)(char *, uint64_t, uint64_t))(v545 + 16))(v27, v560, v544);
        sub_1A5112B28(v560);
        swift_retain();
        swift_retain();
        sub_1A5112AC0(v571 + *v470, v558);
        v28 = (unsigned __int8 *)(v558 + *(int *)(v552 + 20));
        v471 = *v28;
        v472 = *((_DWORD *)v28 + 1);
        sub_1A5112B28(v558);
        swift_release();
        v474 = 24;
        v491 = 7;
        v29 = swift_allocObject();
        v30 = v472;
        v482 = v29;
        *(_BYTE *)(v29 + 16) = v471;
        *(_DWORD *)(v29 + 20) = v30;
        sub_1A5130E98();
        sub_1A5130E98();
        sub_1A5130E98();
        v31 = swift_allocObject();
        v32 = v472;
        v473 = v31;
        *(_BYTE *)(v31 + 16) = v471;
        *(_DWORD *)(v31 + 20) = v32;
        swift_retain();
        v490 = 32;
        v33 = swift_allocObject();
        v34 = v473;
        v487 = v33;
        *(_QWORD *)(v33 + 16) = sub_1A5130EE0;
        *(_QWORD *)(v33 + 24) = v34;
        sub_1A5130E98();
        sub_1A5130E98();
        swift_release();
        swift_release();
        v476 = swift_allocObject();
        *(_QWORD *)(v476 + 16) = v475;
        swift_retain();
        v35 = swift_allocObject();
        v36 = v476;
        v492 = v35;
        *(_QWORD *)(v35 + 16) = sub_1A5134394;
        *(_QWORD *)(v35 + 24) = v36;
        swift_release();
        v512 = sub_1A594A74C();
        v513 = sub_1A594C030();
        v479 = &v595;
        v595 = 33;
        v477 = sub_1A5130F74();
        v478 = sub_1A5130FDC();
        sub_1A5131044();
        sub_1A594B880();
        v480 = v596;
        v489 = 17;
        v494 = swift_allocObject();
        v484 = 16;
        *(_BYTE *)(v494 + 16) = 16;
        v495 = swift_allocObject();
        v486 = 4;
        *(_BYTE *)(v495 + 16) = 4;
        v37 = swift_allocObject();
        v481 = v37;
        *(_QWORD *)(v37 + 16) = sub_1A5130E8C;
        *(_QWORD *)(v37 + 24) = 0;
        v38 = swift_allocObject();
        v39 = v481;
        v496 = v38;
        *(_QWORD *)(v38 + 16) = sub_1A51312FC;
        *(_QWORD *)(v38 + 24) = v39;
        v497 = swift_allocObject();
        *(_BYTE *)(v497 + 16) = 0;
        v498 = swift_allocObject();
        *(_BYTE *)(v498 + 16) = 1;
        v40 = swift_allocObject();
        v41 = v482;
        v483 = v40;
        *(_QWORD *)(v40 + 16) = sub_1A5130E6C;
        *(_QWORD *)(v40 + 24) = v41;
        v42 = swift_allocObject();
        v43 = v483;
        v499 = v42;
        *(_QWORD *)(v42 + 16) = sub_1A51315B4;
        *(_QWORD *)(v42 + 24) = v43;
        v500 = swift_allocObject();
        *(_BYTE *)(v500 + 16) = v484;
        v501 = swift_allocObject();
        *(_BYTE *)(v501 + 16) = v486;
        v44 = swift_allocObject();
        v485 = v44;
        *(_QWORD *)(v44 + 16) = sub_1A5130F68;
        *(_QWORD *)(v44 + 24) = 0;
        v45 = swift_allocObject();
        v46 = v485;
        v502 = v45;
        *(_QWORD *)(v45 + 16) = sub_1A51312FC;
        *(_QWORD *)(v45 + 24) = v46;
        v503 = swift_allocObject();
        *(_BYTE *)(v503 + 16) = 0;
        v504 = swift_allocObject();
        *(_BYTE *)(v504 + 16) = v486;
        v47 = swift_allocObject();
        v48 = v487;
        v488 = v47;
        *(_QWORD *)(v47 + 16) = sub_1A5130F5C;
        *(_QWORD *)(v47 + 24) = v48;
        v49 = swift_allocObject();
        v50 = v488;
        v505 = v49;
        *(_QWORD *)(v49 + 16) = sub_1A5131954;
        *(_QWORD *)(v49 + 24) = v50;
        v506 = swift_allocObject();
        *(_BYTE *)(v506 + 16) = 32;
        v507 = swift_allocObject();
        *(_BYTE *)(v507 + 16) = 8;
        v51 = swift_allocObject();
        v52 = v492;
        v493 = v51;
        *(_QWORD *)(v51 + 16) = sub_1A51343D8;
        *(_QWORD *)(v51 + 24) = v52;
        v53 = swift_allocObject();
        v54 = v493;
        v509 = v53;
        *(_QWORD *)(v53 + 16) = sub_1A5130F5C;
        *(_QWORD *)(v53 + 24) = v54;
        v511 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A48D0);
        v508 = sub_1A594CD14();
        v510 = v55;
        swift_retain();
        v56 = v494;
        v57 = v510;
        *v510 = sub_1A5131290;
        v57[1] = v56;
        swift_retain();
        v58 = v495;
        v59 = v510;
        v510[2] = sub_1A5131290;
        v59[3] = v58;
        swift_retain();
        v60 = v496;
        v61 = v510;
        v510[4] = sub_1A5131460;
        v61[5] = v60;
        swift_retain();
        v62 = v497;
        v63 = v510;
        v510[6] = sub_1A5131290;
        v63[7] = v62;
        swift_retain();
        v64 = v498;
        v65 = v510;
        v510[8] = sub_1A5131290;
        v65[9] = v64;
        swift_retain();
        v66 = v499;
        v67 = v510;
        v510[10] = sub_1A51315FC;
        v67[11] = v66;
        swift_retain();
        v68 = v500;
        v69 = v510;
        v510[12] = sub_1A5131290;
        v69[13] = v68;
        swift_retain();
        v70 = v501;
        v71 = v510;
        v510[14] = sub_1A5131290;
        v71[15] = v70;
        swift_retain();
        v72 = v502;
        v73 = v510;
        v510[16] = sub_1A5131460;
        v73[17] = v72;
        swift_retain();
        v74 = v503;
        v75 = v510;
        v510[18] = sub_1A5131290;
        v75[19] = v74;
        swift_retain();
        v76 = v504;
        v77 = v510;
        v510[20] = sub_1A5131290;
        v77[21] = v76;
        swift_retain();
        v78 = v505;
        v79 = v510;
        v510[22] = sub_1A513199C;
        v79[23] = v78;
        swift_retain();
        v80 = v506;
        v81 = v510;
        v510[24] = sub_1A5131290;
        v81[25] = v80;
        swift_retain();
        v82 = v507;
        v83 = v510;
        v510[26] = sub_1A5131290;
        v83[27] = v82;
        swift_retain();
        v84 = v509;
        v85 = v510;
        v510[28] = sub_1A5133578;
        v85[29] = v84;
        sub_1A5113324();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v512, (os_log_type_t)v513))
        {
          v86 = v522;
          v461 = (uint8_t *)sub_1A594C348();
          v460 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
          v462 = sub_1A5130D14(0);
          v463 = sub_1A5130D14(1);
          v464 = &v594;
          v594 = v461;
          v465 = &v593;
          v593 = v462;
          v466 = &v592;
          v592 = v463;
          sub_1A5130D6C(2, &v594);
          sub_1A5130D6C(5, v464);
          v590 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v591 = v494;
          sub_1A5130D80(&v590, (uint64_t)v464, (uint64_t)v465, (uint64_t)v466);
          v467 = v86;
          if (v86)
          {
            __break(1u);
          }
          else
          {
            v590 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v591 = v495;
            sub_1A5130D80(&v590, (uint64_t)&v594, (uint64_t)&v593, (uint64_t)&v592);
            v458 = 0;
            v590 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131460;
            v591 = v496;
            sub_1A5130D80(&v590, (uint64_t)&v594, (uint64_t)&v593, (uint64_t)&v592);
            v457 = 0;
            v590 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v591 = v497;
            sub_1A5130D80(&v590, (uint64_t)&v594, (uint64_t)&v593, (uint64_t)&v592);
            v456 = 0;
            v590 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v591 = v498;
            sub_1A5130D80(&v590, (uint64_t)&v594, (uint64_t)&v593, (uint64_t)&v592);
            v455 = 0;
            v590 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A51315FC;
            v591 = v499;
            sub_1A5130D80(&v590, (uint64_t)&v594, (uint64_t)&v593, (uint64_t)&v592);
            v454 = 0;
            v590 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v591 = v500;
            sub_1A5130D80(&v590, (uint64_t)&v594, (uint64_t)&v593, (uint64_t)&v592);
            v453 = 0;
            v590 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v591 = v501;
            sub_1A5130D80(&v590, (uint64_t)&v594, (uint64_t)&v593, (uint64_t)&v592);
            v452 = 0;
            v590 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131460;
            v591 = v502;
            sub_1A5130D80(&v590, (uint64_t)&v594, (uint64_t)&v593, (uint64_t)&v592);
            v451 = 0;
            v590 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v591 = v503;
            sub_1A5130D80(&v590, (uint64_t)&v594, (uint64_t)&v593, (uint64_t)&v592);
            v450 = 0;
            v590 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v591 = v504;
            sub_1A5130D80(&v590, (uint64_t)&v594, (uint64_t)&v593, (uint64_t)&v592);
            v449 = 0;
            v590 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A513199C;
            v591 = v505;
            sub_1A5130D80(&v590, (uint64_t)&v594, (uint64_t)&v593, (uint64_t)&v592);
            v448 = 0;
            v590 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v591 = v506;
            sub_1A5130D80(&v590, (uint64_t)&v594, (uint64_t)&v593, (uint64_t)&v592);
            v447 = 0;
            v590 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v591 = v507;
            sub_1A5130D80(&v590, (uint64_t)&v594, (uint64_t)&v593, (uint64_t)&v592);
            v446 = 0;
            v590 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5133578;
            v591 = v509;
            sub_1A5130D80(&v590, (uint64_t)&v594, (uint64_t)&v593, (uint64_t)&v592);
            v445 = 0;
            _os_log_impl(&dword_1A4F90000, v512, (os_log_type_t)v513, "[%.*hhx-%.*X] Finished EMActivity for '%s'", v461, v480);
            sub_1A5130DC4(v462);
            sub_1A5130DC4(v463);
            sub_1A594C330();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            v459 = v445;
          }
        }
        else
        {
          v87 = v522;
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          v459 = v87;
        }
        v444 = v459;

        (*(void (**)(char *, uint64_t))(v545 + 8))(v551, v544);
        v514 = v444;
      }
      v443 = v514;
      v442 = objc_msgSend(v516, sel_objectID);
      objc_msgSend(v578, sel_activityWithID_finishedWithError_);

      sub_1A51340F4(v562);
      v589 = v443;
    }
    else
    {
      sub_1A51340F4(v562);
      v589 = v522;
    }
  }
  v88 = v522;
  sub_1A5131F90();
  v434 = &v653;
  swift_beginAccess();
  v435 = *(_QWORD *)(v571 + 88);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_endAccess();
  v436 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v652 = v436;
  sub_1A513200C(v569, v543);
  v437 = &v216;
  MEMORY[0x1E0C80A78](&v216);
  v438 = &v213;
  v215 = v89;
  v439 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE799128);
  sub_1A5132414();
  result = (id *)sub_1A594B7C0();
  v440 = v88;
  v441 = result;
  if (!v88)
  {
    v431 = v441;
    sub_1A5132484((uint64_t)v543);
    v651 = v431;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v648 = v431;
    v432 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE799858);
    sub_1A513267C();
    sub_1A594BEA4();
    for (i = v440; ; i = v428)
    {
      v428 = i;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE79A9D8);
      sub_1A594C930();
      v429 = v645[5];
      v430 = v646;
      if ((v647 & 1) != 0)
        break;
      v426 = v429;
      v427 = v430;
      v607 = v429;
      v608 = v430 & 1;
      v424 = &v605;
      v605 = v429;
      v606 = v430 & 1;
      v425 = &v604;
      swift_beginAccess();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE799278);
      sub_1A594AFD4();
      swift_endAccess();
      sub_1A5133C14(v541);
    }
    sub_1A5110C34();
    Activity.accountStatus.getter((uint64_t)v530);
    v423 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v532 + 48);
    if (v423(v530, 1, v531) != 1)
    {
      v91 = v549;
      sub_1A51328B4(v530, v539);
      v380 = &OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger;
      sub_1A5112AC0(v571 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger, v556);
      (*(void (**)(char *, uint64_t, uint64_t))(v545 + 16))(v91, v556, v544);
      sub_1A5112B28(v556);
      swift_retain();
      swift_retain();
      sub_1A5112AC0(v571 + *v380, v558);
      v92 = (unsigned __int8 *)(v558 + *(int *)(v552 + 20));
      v382 = *v92;
      v383 = *((_DWORD *)v92 + 1);
      sub_1A5112B28(v558);
      swift_release();
      v381 = 24;
      v400 = 7;
      v93 = swift_allocObject();
      v94 = v383;
      v391 = v93;
      *(_BYTE *)(v93 + 16) = v382;
      *(_DWORD *)(v93 + 20) = v94;
      sub_1A5130E98();
      sub_1A5130E98();
      sub_1A5130E98();
      v95 = swift_allocObject();
      v96 = v383;
      v384 = v95;
      *(_BYTE *)(v95 + 16) = v382;
      *(_DWORD *)(v95 + 20) = v96;
      swift_retain();
      v399 = 32;
      v97 = swift_allocObject();
      v98 = v384;
      v396 = v97;
      *(_QWORD *)(v97 + 16) = sub_1A5130EE0;
      *(_QWORD *)(v97 + 24) = v98;
      sub_1A5130E98();
      sub_1A5130E98();
      swift_release();
      swift_release();
      sub_1A5132BA4(v539, v537);
      v385 = (*(unsigned __int8 *)(v532 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v532 + 80);
      v401 = swift_allocObject();
      sub_1A51328B4(v537, (_BYTE *)(v401 + v385));
      v421 = sub_1A594A74C();
      v422 = sub_1A594C030();
      v388 = &v616;
      v616 = 33;
      v386 = sub_1A5130F74();
      v387 = sub_1A5130FDC();
      sub_1A5131044();
      sub_1A594B880();
      v389 = v617;
      v398 = 17;
      v403 = swift_allocObject();
      v393 = 16;
      *(_BYTE *)(v403 + 16) = 16;
      v404 = swift_allocObject();
      v395 = 4;
      *(_BYTE *)(v404 + 16) = 4;
      v99 = swift_allocObject();
      v390 = v99;
      *(_QWORD *)(v99 + 16) = sub_1A5130E8C;
      *(_QWORD *)(v99 + 24) = 0;
      v100 = swift_allocObject();
      v101 = v390;
      v405 = v100;
      *(_QWORD *)(v100 + 16) = sub_1A51312FC;
      *(_QWORD *)(v100 + 24) = v101;
      v406 = swift_allocObject();
      *(_BYTE *)(v406 + 16) = 0;
      v407 = swift_allocObject();
      *(_BYTE *)(v407 + 16) = 1;
      v102 = swift_allocObject();
      v103 = v391;
      v392 = v102;
      *(_QWORD *)(v102 + 16) = sub_1A5130E6C;
      *(_QWORD *)(v102 + 24) = v103;
      v104 = swift_allocObject();
      v105 = v392;
      v408 = v104;
      *(_QWORD *)(v104 + 16) = sub_1A51315B4;
      *(_QWORD *)(v104 + 24) = v105;
      v409 = swift_allocObject();
      *(_BYTE *)(v409 + 16) = v393;
      v410 = swift_allocObject();
      *(_BYTE *)(v410 + 16) = v395;
      v106 = swift_allocObject();
      v394 = v106;
      *(_QWORD *)(v106 + 16) = sub_1A5130F68;
      *(_QWORD *)(v106 + 24) = 0;
      v107 = swift_allocObject();
      v108 = v394;
      v411 = v107;
      *(_QWORD *)(v107 + 16) = sub_1A51312FC;
      *(_QWORD *)(v107 + 24) = v108;
      v412 = swift_allocObject();
      *(_BYTE *)(v412 + 16) = 0;
      v413 = swift_allocObject();
      *(_BYTE *)(v413 + 16) = v395;
      v109 = swift_allocObject();
      v110 = v396;
      v397 = v109;
      *(_QWORD *)(v109 + 16) = sub_1A5130F5C;
      *(_QWORD *)(v109 + 24) = v110;
      v111 = swift_allocObject();
      v112 = v397;
      v414 = v111;
      *(_QWORD *)(v111 + 16) = sub_1A5131954;
      *(_QWORD *)(v111 + 24) = v112;
      v415 = swift_allocObject();
      *(_BYTE *)(v415 + 16) = 34;
      v416 = swift_allocObject();
      *(_BYTE *)(v416 + 16) = 8;
      v113 = swift_allocObject();
      v114 = v401;
      v402 = v113;
      *(_QWORD *)(v113 + 16) = sub_1A51330E4;
      *(_QWORD *)(v113 + 24) = v114;
      v115 = swift_allocObject();
      v116 = v402;
      v418 = v115;
      *(_QWORD *)(v115 + 16) = sub_1A5130F5C;
      *(_QWORD *)(v115 + 24) = v116;
      v420 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A48D0);
      v417 = sub_1A594CD14();
      v419 = v117;
      swift_retain();
      v118 = v403;
      v119 = v419;
      *v419 = sub_1A5131290;
      v119[1] = v118;
      swift_retain();
      v120 = v404;
      v121 = v419;
      v419[2] = sub_1A5131290;
      v121[3] = v120;
      swift_retain();
      v122 = v405;
      v123 = v419;
      v419[4] = sub_1A5131460;
      v123[5] = v122;
      swift_retain();
      v124 = v406;
      v125 = v419;
      v419[6] = sub_1A5131290;
      v125[7] = v124;
      swift_retain();
      v126 = v407;
      v127 = v419;
      v419[8] = sub_1A5131290;
      v127[9] = v126;
      swift_retain();
      v128 = v408;
      v129 = v419;
      v419[10] = sub_1A51315FC;
      v129[11] = v128;
      swift_retain();
      v130 = v409;
      v131 = v419;
      v419[12] = sub_1A5131290;
      v131[13] = v130;
      swift_retain();
      v132 = v410;
      v133 = v419;
      v419[14] = sub_1A5131290;
      v133[15] = v132;
      swift_retain();
      v134 = v411;
      v135 = v419;
      v419[16] = sub_1A5131460;
      v135[17] = v134;
      swift_retain();
      v136 = v412;
      v137 = v419;
      v419[18] = sub_1A5131290;
      v137[19] = v136;
      swift_retain();
      v138 = v413;
      v139 = v419;
      v419[20] = sub_1A5131290;
      v139[21] = v138;
      swift_retain();
      v140 = v414;
      v141 = v419;
      v419[22] = sub_1A513199C;
      v141[23] = v140;
      swift_retain();
      v142 = v415;
      v143 = v419;
      v419[24] = sub_1A5131290;
      v143[25] = v142;
      swift_retain();
      v144 = v416;
      v145 = v419;
      v419[26] = sub_1A5131290;
      v145[27] = v144;
      swift_retain();
      v146 = v418;
      v147 = v419;
      v419[28] = sub_1A5133578;
      v147[29] = v146;
      sub_1A5113324();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v421, (os_log_type_t)v422))
      {
        v148 = v428;
        v373 = (uint8_t *)sub_1A594C348();
        v372 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
        v374 = sub_1A5130D14(0);
        v375 = sub_1A5130D14(1);
        v376 = &v613;
        v613 = v373;
        v377 = &v612;
        v612 = v374;
        v378 = &v611;
        v611 = v375;
        sub_1A5130D6C(2, &v613);
        sub_1A5130D6C(5, v376);
        v609 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v610 = v403;
        sub_1A5130D80(&v609, (uint64_t)v376, (uint64_t)v377, (uint64_t)v378);
        v379 = v148;
        if (v148)
        {
          __break(1u);
        }
        else
        {
          v609 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v610 = v404;
          sub_1A5130D80(&v609, (uint64_t)&v613, (uint64_t)&v612, (uint64_t)&v611);
          v371 = 0;
          v609 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131460;
          v610 = v405;
          sub_1A5130D80(&v609, (uint64_t)&v613, (uint64_t)&v612, (uint64_t)&v611);
          v370 = 0;
          v609 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v610 = v406;
          sub_1A5130D80(&v609, (uint64_t)&v613, (uint64_t)&v612, (uint64_t)&v611);
          v369 = 0;
          v609 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v610 = v407;
          sub_1A5130D80(&v609, (uint64_t)&v613, (uint64_t)&v612, (uint64_t)&v611);
          v368 = 0;
          v609 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A51315FC;
          v610 = v408;
          sub_1A5130D80(&v609, (uint64_t)&v613, (uint64_t)&v612, (uint64_t)&v611);
          v367 = 0;
          v609 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v610 = v409;
          sub_1A5130D80(&v609, (uint64_t)&v613, (uint64_t)&v612, (uint64_t)&v611);
          v366 = 0;
          v609 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v610 = v410;
          sub_1A5130D80(&v609, (uint64_t)&v613, (uint64_t)&v612, (uint64_t)&v611);
          v365 = 0;
          v609 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131460;
          v610 = v411;
          sub_1A5130D80(&v609, (uint64_t)&v613, (uint64_t)&v612, (uint64_t)&v611);
          v364 = 0;
          v609 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v610 = v412;
          sub_1A5130D80(&v609, (uint64_t)&v613, (uint64_t)&v612, (uint64_t)&v611);
          v363 = 0;
          v609 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v610 = v413;
          sub_1A5130D80(&v609, (uint64_t)&v613, (uint64_t)&v612, (uint64_t)&v611);
          v362 = 0;
          v609 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A513199C;
          v610 = v414;
          sub_1A5130D80(&v609, (uint64_t)&v613, (uint64_t)&v612, (uint64_t)&v611);
          v361 = 0;
          v609 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v610 = v415;
          sub_1A5130D80(&v609, (uint64_t)&v613, (uint64_t)&v612, (uint64_t)&v611);
          v360 = 0;
          v609 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v610 = v416;
          sub_1A5130D80(&v609, (uint64_t)&v613, (uint64_t)&v612, (uint64_t)&v611);
          v359 = 0;
          v609 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5133578;
          v610 = v418;
          sub_1A5130D80(&v609, (uint64_t)&v613, (uint64_t)&v612, (uint64_t)&v611);
          _os_log_impl(&dword_1A4F90000, v421, (os_log_type_t)v422, "[%.*hhx-%.*X] Account activity: %{public}s.", v373, v389);
          sub_1A5130DC4(v374);
          sub_1A5130DC4(v375);
          sub_1A594C330();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
        }
      }
      else
      {
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
      }

      (*(void (**)(char *, uint64_t))(v545 + 8))(v549, v544);
      v614 = 0;
      v615 = 1;
      sub_1A51187B8((uint64_t)&v614, v539);
      sub_1A5112518((uint64_t)v539);
LABEL_97:
      swift_bridgeObjectRelease();

      sub_1A51182CC((uint64_t)v574);
      return sub_1A51327D8(v574);
    }
    sub_1A5112334((uint64_t)v530);
    Activity.allMailboxIDs.getter(&v644);
    v354 = v644;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_bridgeObjectRelease();
    swift_retain();
    v355 = v354 + 56;
    v357 = (1 << (*(_BYTE *)(v354 + 32) & 0x3F)) - 1;
    v356 = *(_QWORD *)(v354 + 56);
    swift_release();
    v358 = v357 + 1;
    if (v357 + 1 >= 64)
      v353 = v356;
    else
      v353 = v356 & ((1 << (v358 & 0x3F)) - 1);
    v350 = v666;
    v666[0] = v354;
    v666[1] = v355;
    v666[2] = v357;
    v666[3] = 0;
    v666[4] = v353;
    sub_1A51326EC();
    v351 = &v665;
    sub_1A594BC70();
    memcpy(v645, v351, 0x28uLL);
    v352 = v428;
    while (1)
    {
      result = v352;
      v349 = v352;
      if ((v645[0] & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else
      {
        v348 = v645[0];
        v344 = v645[1];
        v345 = v645[2];
        v346 = v645[3];
        v347 = v645[4];
        result = (id *)sub_1A5132754();
        if (v348 < 0)
        {
          v338 = v348 & 0x7FFFFFFFFFFFFFFFLL;
          result = (id *)swift_release();
          __break(1u);
          goto LABEL_41;
        }
        v339 = v348;
        v340 = v344;
        v341 = v345;
        v342 = v346;
        v343 = v347;
      }
      v333 = v343;
      v334 = v342;
      v335 = v341;
      v336 = v340;
      v337 = v339;
      if (v343)
      {
        v326 = (v334 << 6) + __clz(__rbit64(v333));
        v327 = v334;
        v328 = v333 & (v333 - 1);
        v329 = v349;
        goto LABEL_71;
      }
LABEL_41:
      v330 = (v335 + 64) / 0x40uLL;
      v331 = v334 + 1;
      v149 = __OFADD__(v334, 1);
      v332 = v149;
      if (v149)
        goto LABEL_99;
      if (v331 >= v330)
      {
        v322 = v334;
        v323 = v333;
        v324 = v349;
LABEL_74:
        v642 = 0;
        v643 = 0;
        v304 = v322;
        v305 = v323;
        v306 = v324;
        goto LABEL_72;
      }
      if (v332)
        goto LABEL_100;
      v325 = *(_QWORD *)(v336 + 8 * v331);
      if (v325)
      {
        v317 = v331;
        v318 = v325;
        v319 = v349;
      }
      else
      {
        v320 = v331 + 1;
        v150 = __OFADD__(v331, 1);
        v321 = v150;
        if (v150)
          goto LABEL_101;
        if (v320 >= v330)
        {
          v322 = v331;
          v323 = v325;
          v324 = v349;
          goto LABEL_74;
        }
        if (v321)
          goto LABEL_102;
        v316 = *(_QWORD *)(v336 + 8 * v320);
        if (!v316)
        {
          v313 = v320;
          v314 = 0;
          for (j = v349; ; j = v308)
          {
            result = j;
            v308 = j;
            v309 = v314;
            v310 = v313;
            v311 = v313 + 1;
            v151 = __OFADD__(v313, 1);
            v312 = v151;
            if (v151)
              break;
            if (v311 >= v330)
            {
              v322 = v310;
              v323 = v309;
              v324 = v308;
              goto LABEL_74;
            }
            if (v312)
              goto LABEL_104;
            v307 = *(_QWORD *)(v336 + 8 * v311);
            if (v307)
            {
              v317 = v311;
              v318 = v307;
              v319 = v308;
              goto LABEL_70;
            }
            v313 = v311;
            v314 = 0;
          }
          goto LABEL_103;
        }
        v317 = v320;
        v318 = v316;
        v319 = v349;
      }
LABEL_70:
      v326 = (v317 << 6) + __clz(__rbit64(v318));
      v327 = v317;
      v328 = v318 & (v318 - 1);
      v329 = v319;
LABEL_71:
      v303 = v329;
      v302 = v328;
      v301 = v327;
      sub_1A5132794((uint64_t *)(*(_QWORD *)(v337 + 48) + 16 * v326), &v642);
      v641 = v337;
      v304 = v301;
      v305 = v302;
      v306 = v303;
LABEL_72:
      v298 = v306;
      v645[0] = v337;
      v645[1] = v336;
      v645[2] = v335;
      v645[3] = v304;
      v645[4] = v305;
      sub_1A5131FCC();
      v299 = v642;
      v300 = v643;
      if (!v642)
      {
        sub_1A5131F90();
        sub_1A51190D0();
        sub_1A511A2E4();
        goto LABEL_97;
      }
      v296 = v299;
      v297 = v300;
      v294 = v300;
      v293 = v299;
      v639 = v299;
      v640 = v300;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A5480040(v293, v294, (uint64_t)&v637);
      v295 = v637;
      if ((v638 & 1) != 0)
      {
LABEL_95:
        swift_bridgeObjectRelease();
        v352 = v298;
      }
      else
      {
        v292 = v295;
        v291 = v295;
        v636 = v295;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        Activity.subscript.getter(v293, v294, (uint64_t)v528);
        if (v423(v528, 1, v531) == 1)
        {
          sub_1A5112334((uint64_t)v528);
          swift_bridgeObjectRelease();
          goto LABEL_95;
        }
        sub_1A51328B4(v528, v535);
        swift_bridgeObjectRelease();
        v289 = *(id *)(v571 + 128);
        v153 = v289;
        v290 = objc_msgSend(v289, sel_primaryMailboxUid);

        if (v290)
        {
          v288 = v290;
        }
        else
        {
          v213 = 2;
          v214 = 131;
          LODWORD(v215) = 0;
          sub_1A594C9B4();
          __break(1u);
        }
        v286 = v288;
        v287 = objc_msgSend(v288, sel_mailboxRowID);

        sub_1A5480124((uint64_t)v287, (uint64_t)&v634);
        v630 = v291;
        v631 = 0;
        v632 = v634;
        v633 = v635 & 1;
        sub_1A5133584((uint64_t)&v630, (uint64_t)&v620);
        if ((v633 & 1) != 0)
        {
          v285 = 0;
        }
        else
        {
          v619 = v620;
          v618 = v632;
          v285 = static MailboxRowID.== infix(_:_:)(&v619, &v618);
        }
        if (v285)
        {
          v154 = v547;
          v242 = &OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger;
          sub_1A5112AC0(v571 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger, v554);
          (*(void (**)(char *, uint64_t, uint64_t))(v545 + 16))(v154, v554, v544);
          sub_1A5112B28(v554);
          swift_retain();
          swift_retain();
          sub_1A5112AC0(v571 + *v242, v558);
          v155 = (unsigned __int8 *)(v558 + *(int *)(v552 + 20));
          v244 = *v155;
          v245 = *((_DWORD *)v155 + 1);
          sub_1A5112B28(v558);
          swift_release();
          v243 = 24;
          v262 = 7;
          v156 = swift_allocObject();
          v157 = v245;
          v253 = v156;
          *(_BYTE *)(v156 + 16) = v244;
          *(_DWORD *)(v156 + 20) = v157;
          sub_1A5130E98();
          sub_1A5130E98();
          sub_1A5130E98();
          v158 = swift_allocObject();
          v159 = v245;
          v246 = v158;
          *(_BYTE *)(v158 + 16) = v244;
          *(_DWORD *)(v158 + 20) = v159;
          swift_retain();
          v261 = 32;
          v160 = swift_allocObject();
          v161 = v246;
          v258 = v160;
          *(_QWORD *)(v160 + 16) = sub_1A5130EE0;
          *(_QWORD *)(v160 + 24) = v161;
          sub_1A5130E98();
          sub_1A5130E98();
          swift_release();
          swift_release();
          sub_1A5132BA4(v535, v537);
          v247 = (*(unsigned __int8 *)(v532 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v532 + 80);
          v263 = swift_allocObject();
          sub_1A51328B4(v537, (_BYTE *)(v263 + v247));
          v283 = sub_1A594A74C();
          v284 = sub_1A594C030();
          v250 = &v626;
          v626 = 33;
          v248 = sub_1A5130F74();
          v249 = sub_1A5130FDC();
          sub_1A5131044();
          sub_1A594B880();
          v251 = v627;
          v260 = 17;
          v265 = swift_allocObject();
          v255 = 16;
          *(_BYTE *)(v265 + 16) = 16;
          v266 = swift_allocObject();
          v257 = 4;
          *(_BYTE *)(v266 + 16) = 4;
          v162 = swift_allocObject();
          v252 = v162;
          *(_QWORD *)(v162 + 16) = sub_1A5130E8C;
          *(_QWORD *)(v162 + 24) = 0;
          v163 = swift_allocObject();
          v164 = v252;
          v267 = v163;
          *(_QWORD *)(v163 + 16) = sub_1A51312FC;
          *(_QWORD *)(v163 + 24) = v164;
          v268 = swift_allocObject();
          *(_BYTE *)(v268 + 16) = 0;
          v269 = swift_allocObject();
          *(_BYTE *)(v269 + 16) = 1;
          v165 = swift_allocObject();
          v166 = v253;
          v254 = v165;
          *(_QWORD *)(v165 + 16) = sub_1A5130E6C;
          *(_QWORD *)(v165 + 24) = v166;
          v167 = swift_allocObject();
          v168 = v254;
          v270 = v167;
          *(_QWORD *)(v167 + 16) = sub_1A51315B4;
          *(_QWORD *)(v167 + 24) = v168;
          v271 = swift_allocObject();
          *(_BYTE *)(v271 + 16) = v255;
          v272 = swift_allocObject();
          *(_BYTE *)(v272 + 16) = v257;
          v169 = swift_allocObject();
          v256 = v169;
          *(_QWORD *)(v169 + 16) = sub_1A5130F68;
          *(_QWORD *)(v169 + 24) = 0;
          v170 = swift_allocObject();
          v171 = v256;
          v273 = v170;
          *(_QWORD *)(v170 + 16) = sub_1A51312FC;
          *(_QWORD *)(v170 + 24) = v171;
          v274 = swift_allocObject();
          *(_BYTE *)(v274 + 16) = 0;
          v275 = swift_allocObject();
          *(_BYTE *)(v275 + 16) = v257;
          v172 = swift_allocObject();
          v173 = v258;
          v259 = v172;
          *(_QWORD *)(v172 + 16) = sub_1A5130F5C;
          *(_QWORD *)(v172 + 24) = v173;
          v174 = swift_allocObject();
          v175 = v259;
          v276 = v174;
          *(_QWORD *)(v174 + 16) = sub_1A5131954;
          *(_QWORD *)(v174 + 24) = v175;
          v277 = swift_allocObject();
          *(_BYTE *)(v277 + 16) = 34;
          v278 = swift_allocObject();
          *(_BYTE *)(v278 + 16) = 8;
          v176 = swift_allocObject();
          v177 = v263;
          v264 = v176;
          *(_QWORD *)(v176 + 16) = sub_1A51330E4;
          *(_QWORD *)(v176 + 24) = v177;
          v178 = swift_allocObject();
          v179 = v264;
          v280 = v178;
          *(_QWORD *)(v178 + 16) = sub_1A5130F5C;
          *(_QWORD *)(v178 + 24) = v179;
          v282 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A48D0);
          v279 = sub_1A594CD14();
          v281 = v180;
          swift_retain();
          v181 = v265;
          v182 = v281;
          *v281 = sub_1A5131290;
          v182[1] = v181;
          swift_retain();
          v183 = v266;
          v184 = v281;
          v281[2] = sub_1A5131290;
          v184[3] = v183;
          swift_retain();
          v185 = v267;
          v186 = v281;
          v281[4] = sub_1A5131460;
          v186[5] = v185;
          swift_retain();
          v187 = v268;
          v188 = v281;
          v281[6] = sub_1A5131290;
          v188[7] = v187;
          swift_retain();
          v189 = v269;
          v190 = v281;
          v281[8] = sub_1A5131290;
          v190[9] = v189;
          swift_retain();
          v191 = v270;
          v192 = v281;
          v281[10] = sub_1A51315FC;
          v192[11] = v191;
          swift_retain();
          v193 = v271;
          v194 = v281;
          v281[12] = sub_1A5131290;
          v194[13] = v193;
          swift_retain();
          v195 = v272;
          v196 = v281;
          v281[14] = sub_1A5131290;
          v196[15] = v195;
          swift_retain();
          v197 = v273;
          v198 = v281;
          v281[16] = sub_1A5131460;
          v198[17] = v197;
          swift_retain();
          v199 = v274;
          v200 = v281;
          v281[18] = sub_1A5131290;
          v200[19] = v199;
          swift_retain();
          v201 = v275;
          v202 = v281;
          v281[20] = sub_1A5131290;
          v202[21] = v201;
          swift_retain();
          v203 = v276;
          v204 = v281;
          v281[22] = sub_1A513199C;
          v204[23] = v203;
          swift_retain();
          v205 = v277;
          v206 = v281;
          v281[24] = sub_1A5131290;
          v206[25] = v205;
          swift_retain();
          v207 = v278;
          v208 = v281;
          v281[26] = sub_1A5131290;
          v208[27] = v207;
          swift_retain();
          v209 = v280;
          v210 = v281;
          v281[28] = sub_1A5133578;
          v210[29] = v209;
          sub_1A5113324();
          swift_bridgeObjectRelease();
          if (os_log_type_enabled(v283, (os_log_type_t)v284))
          {
            v211 = v298;
            v235 = (uint8_t *)sub_1A594C348();
            v234 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
            v236 = sub_1A5130D14(0);
            v237 = sub_1A5130D14(1);
            v238 = &v625;
            v625 = v235;
            v239 = &v624;
            v624 = v236;
            v240 = &v623;
            v623 = v237;
            sub_1A5130D6C(2, &v625);
            sub_1A5130D6C(5, v238);
            v621 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v622 = v265;
            sub_1A5130D80(&v621, (uint64_t)v238, (uint64_t)v239, (uint64_t)v240);
            v241 = v211;
            if (v211)
            {
              __break(1u);
            }
            else
            {
              v621 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
              v622 = v266;
              sub_1A5130D80(&v621, (uint64_t)&v625, (uint64_t)&v624, (uint64_t)&v623);
              v232 = 0;
              v621 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131460;
              v622 = v267;
              sub_1A5130D80(&v621, (uint64_t)&v625, (uint64_t)&v624, (uint64_t)&v623);
              v231 = 0;
              v621 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
              v622 = v268;
              sub_1A5130D80(&v621, (uint64_t)&v625, (uint64_t)&v624, (uint64_t)&v623);
              v230 = 0;
              v621 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
              v622 = v269;
              sub_1A5130D80(&v621, (uint64_t)&v625, (uint64_t)&v624, (uint64_t)&v623);
              v229 = 0;
              v621 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A51315FC;
              v622 = v270;
              sub_1A5130D80(&v621, (uint64_t)&v625, (uint64_t)&v624, (uint64_t)&v623);
              v228 = 0;
              v621 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
              v622 = v271;
              sub_1A5130D80(&v621, (uint64_t)&v625, (uint64_t)&v624, (uint64_t)&v623);
              v227 = 0;
              v621 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
              v622 = v272;
              sub_1A5130D80(&v621, (uint64_t)&v625, (uint64_t)&v624, (uint64_t)&v623);
              v226 = 0;
              v621 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131460;
              v622 = v273;
              sub_1A5130D80(&v621, (uint64_t)&v625, (uint64_t)&v624, (uint64_t)&v623);
              v225 = 0;
              v621 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
              v622 = v274;
              sub_1A5130D80(&v621, (uint64_t)&v625, (uint64_t)&v624, (uint64_t)&v623);
              v224 = 0;
              v621 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
              v622 = v275;
              sub_1A5130D80(&v621, (uint64_t)&v625, (uint64_t)&v624, (uint64_t)&v623);
              v223 = 0;
              v621 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A513199C;
              v622 = v276;
              sub_1A5130D80(&v621, (uint64_t)&v625, (uint64_t)&v624, (uint64_t)&v623);
              v222 = 0;
              v621 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
              v622 = v277;
              sub_1A5130D80(&v621, (uint64_t)&v625, (uint64_t)&v624, (uint64_t)&v623);
              v221 = 0;
              v621 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
              v622 = v278;
              sub_1A5130D80(&v621, (uint64_t)&v625, (uint64_t)&v624, (uint64_t)&v623);
              v220 = 0;
              v621 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5133578;
              v622 = v280;
              sub_1A5130D80(&v621, (uint64_t)&v625, (uint64_t)&v624, (uint64_t)&v623);
              v219 = 0;
              _os_log_impl(&dword_1A4F90000, v283, (os_log_type_t)v284, "[%.*hhx-%.*X] INBOX Activity: %{public}s.", v235, v251);
              sub_1A5130DC4(v236);
              sub_1A5130DC4(v237);
              sub_1A594C330();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              v233 = v219;
            }
          }
          else
          {
            v212 = v298;
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            v233 = v212;
          }
          v217 = v233;

          (*(void (**)(char *, uint64_t))(v545 + 8))(v547, v544);
          v218 = v217;
        }
        else
        {
          v218 = v298;
        }
        v216 = v218;
        v628 = v291;
        v629 = 0;
        sub_1A51187B8((uint64_t)&v628, v535);
        sub_1A5112518((uint64_t)v535);
        swift_bridgeObjectRelease();
        v352 = v216;
      }
    }
  }
  __break(1u);
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
LABEL_101:
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  __break(1u);
  return result;
}

uint64_t sub_1A5118248()
{
  return sub_1A594CD14();
}

uint64_t sub_1A511826C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t result;
  uint64_t SyncDateHelperVMa;

  *a4 = a1;
  SyncDateHelperVMa = _s18LastSyncDateHelperVMa();
  sub_1A51443CC(a2, (uint64_t)a4 + *(int *)(SyncDateHelperVMa + 20));
  result = SyncDateHelperVMa;
  *(_QWORD *)((char *)a4 + *(int *)(SyncDateHelperVMa + 24)) = a3;
  return result;
}

id *sub_1A51182CC(uint64_t a1)
{
  id *v1;
  _QWORD v3[2];
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id *v10;
  id *v11;

  v5 = a1;
  v11 = 0;
  v3[1] = 0;
  v9 = sub_1A594A0EC();
  v7 = *(_QWORD *)(v9 - 8);
  v4 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](0);
  v8 = (uint64_t)v3 - v4;
  v6 = (*(_QWORD *)(*(_QWORD *)(_s18LastSyncDateHelperVMa() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v5);
  v10 = (id *)((char *)v3 - v6);
  v11 = v1;
  sub_1A5143540(v1, (_QWORD *)((char *)v3 - v6));
  sub_1A5127C30();
  sub_1A5127C44(v8);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  return sub_1A51327D8(v10);
}

uint64_t sub_1A51183C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  _BYTE v15[4];
  int v16;
  uint64_t v17;
  _BOOL4 v18;
  int v19;
  _BOOL4 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  unint64_t v27;
  _BYTE *v28;
  unint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  _BYTE *v37;

  v26 = a1;
  v37 = 0;
  v35 = 0;
  v36 = 0;
  v34 = 0;
  v33 = 0;
  v22 = type metadata accessor for Activity.MailboxStatus(0);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = (*(_QWORD *)(v23 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v22);
  v25 = &v15[-v24];
  v37 = &v15[-v24];
  v27 = (*(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE798620) - 8) + 64)
       + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v26);
  v28 = &v15[-v27];
  v29 = (v2 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v3);
  v30 = &v15[-v29];
  v31 = *(_QWORD *)v10;
  v11 = *(_BYTE *)(v10 + 8);
  v35 = v31;
  v36 = v11 & 1;
  v34 = v1;
  if ((v11 & 1) != 0)
  {
    Activity.accountStatus.getter((uint64_t)v30);
    v20 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v23 + 48))(v30, 1, v22) == 1;
    v18 = v20;
    sub_1A5112334((uint64_t)v30);
    v19 = v18;
  }
  else
  {
    v21 = v31;
    v33 = v31;
    v32 = v31;
    v17 = sub_1A54801A8(&v32, (uint64_t)&v15[-v29], v4, v5, v6, v7, v8, v9);
    Activity.subscript.getter(v17, v12, (uint64_t)v28);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v23 + 48))(v28, 1, v22) == 1)
    {
      sub_1A5112334((uint64_t)v28);
      swift_bridgeObjectRelease();
      v19 = 1;
    }
    else
    {
      sub_1A51328B4(v28, v25);
      swift_bridgeObjectRelease();
      v16 = Activity.MailboxStatus.isSelectedAndInSync.getter();
      sub_1A5112518((uint64_t)v25);
      v19 = v16;
    }
  }
  return v19 & 1;
}

uint64_t sub_1A5118610(uint64_t *a1, id a2)
{
  id v2;
  uint64_t v5;
  _QWORD v6[3];
  id v7;
  uint64_t v8;

  v8 = 0;
  v7 = 0;
  v6[2] = 0;
  v8 = *a1;
  v7 = a2;
  v5 = v8;
  v2 = a2;
  sub_1A5127C20(&v5, (uint64_t)a2, v6);
  _s18LastSyncDateHelperVMa();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A66C8);
  return sub_1A594BA84();
}

uint64_t sub_1A51186C0@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1A51186C8(uint64_t *a1, uint64_t a2)
{
  char v2;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v7 = 0;
  v8 = 0;
  v6 = 0;
  v2 = *((_BYTE *)a1 + 8);
  v7 = *a1;
  v8 = v2 & 1;
  v6 = a2;
  v4 = v7;
  v5 = v2 & 1;
  return sub_1A51183C8((uint64_t)&v4) & 1;
}

uint64_t sub_1A5118740(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  char *v6;

  v3 = a1;
  v5 = type metadata accessor for Activity.MailboxStatus(0);
  v4 = (*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v3 - v4;
  sub_1A5132BA4(v1, (_BYTE *)&v3 - v4);
  return sub_1A594B4A8();
}

id *sub_1A51187B8(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  id v18;
  uint64_t v19;
  id (*v20)(uint64_t *, uint64_t, void *);
  void *v21;
  uint64_t *v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t *v25;
  char *v26;
  uint64_t (*v27)(uint64_t *, uint64_t, id);
  uint64_t *v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t v31;
  void *v32;
  unsigned int v33;
  uint64_t *v34;
  char *v35;
  int v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  _BYTE *v41;
  unint64_t v42;
  _QWORD *v43;
  unint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  unint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  char *v53;
  id *v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  id *v64;
  unsigned int v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  char v71;
  char v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  char v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  char *v84;
  char *v85;

  v50 = a1;
  v49 = a2;
  v85 = 0;
  v84 = 0;
  v82 = 0;
  v83 = 0;
  v81 = 0;
  v80 = 0;
  v47 = 0;
  v38 = (*(_QWORD *)(*(_QWORD *)(_s6LoggerVMa() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](0);
  v39 = (uint64_t)&v19 - v38;
  v4 = type metadata accessor for Activity.MailboxStatus(v3);
  v40 = (*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v4);
  v41 = (char *)&v19 - v40;
  v42 = (*(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE798B30) - 8) + 64)
       + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v47);
  v43 = (uint64_t *)((char *)&v19 - v42);
  v44 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v6);
  v64 = (id *)((char *)&v19 - v44);
  v66 = _s15MailboxActivityVMa();
  v63 = *(_QWORD *)(v66 - 8);
  v45 = (*(_QWORD *)(v63 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v47);
  v46 = (uint64_t *)((char *)&v19 - v45);
  v85 = (char *)&v19 - v45;
  v48 = (*(_QWORD *)(*(_QWORD *)(_s18MailboxPersistenceVMa() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v47);
  v55 = (uint64_t)&v19 - v48;
  v51 = (*(_QWORD *)(*(_QWORD *)(_s18LastSyncDateHelperVMa() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v50);
  v54 = (id *)((char *)&v19 - v51);
  v84 = (char *)&v19 - v51;
  v59 = *v7;
  v60 = *((unsigned __int8 *)v7 + 8);
  v82 = v59;
  v65 = 1;
  v83 = v60 & 1;
  v81 = v8;
  v80 = v2;
  v56 = *(id *)(v2 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_activityPersistence);
  v9 = v56;
  v52 = v2 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_mailboxPersistence;
  v53 = &v79;
  v57 = 32;
  v58 = 0;
  swift_beginAccess();
  sub_1A5110A0C(v52, v55);
  swift_endAccess();
  v10 = sub_1A5118248();
  sub_1A511826C((uint64_t)v56, v55, v10, v54);
  swift_beginAccess();
  v61 = *(_QWORD *)(v2 + 88);
  v62 = &v77;
  v77 = v59;
  v78 = v60 & 1 & v65;
  v11 = sub_1A51105C8();
  MEMORY[0x1A85AD590](v62, v61, &unk_1E4E7DC10, v66, v11);
  if ((*(unsigned int (**)(id *, _QWORD, uint64_t))(v63 + 48))(v64, v65, v66) == 1)
  {
    sub_1A5133C14(v64);
    swift_endAccess();
    v22 = &v75;
    v75 = v59;
    v24 = 1;
    v76 = v60 & 1;
    sub_1A5132BA4(v49, v41);
    v20 = sub_1A511B79C();
    v23 = v17;
    swift_retain();
    v21 = *(void **)(v37 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_activityPersistence);
    v18 = v21;
    sub_1A5112AC0(v37 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger, v39);
    sub_1A5123D70((uint64_t)v22, v41, (uint64_t)v20, v23, v21, v39, v43);
    swift_release();
    swift_release();
    (*(void (**)(_QWORD *, _QWORD, _QWORD, uint64_t))(v63 + 56))(v43, 0, v24, v66);
    v25 = &v73;
    v73 = v59;
    v74 = v60 & 1 & v24;
    v26 = &v72;
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE799278);
    sub_1A594B124();
    swift_endAccess();
  }
  else
  {
    sub_1A5133E20(v64, v46);
    swift_endAccess();
    sub_1A5132BA4((_BYTE *)v46 + *(int *)(v66 + 20), v41);
    v36 = static Activity.MailboxStatus.__derived_enum_equals(_:_:)(v41, v49);
    sub_1A5112518((uint64_t)v41);
    if ((v36 & 1) != 0)
    {
      sub_1A51340F4((id *)v46);
      sub_1A51182CC((uint64_t)v54);
      return sub_1A51327D8(v54);
    }
    v29 = &v70;
    v70 = v59;
    v33 = 1;
    v71 = v60 & 1;
    v32 = *(void **)(v37 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_activityPersistence);
    v12 = v32;
    v27 = (uint64_t (*)(uint64_t *, uint64_t, id))sub_1A511B79C();
    v31 = v13;
    swift_retain();
    v30 = &v19;
    MEMORY[0x1E0C80A78](&v19);
    v28 = &v19 - 4;
    *(&v19 - 2) = (uint64_t)v54;
    sub_1A5112AC0(v14 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger, v15);
    sub_1A511F8EC((uint64_t)v29, (uint64_t)v49, v32, v27, v31, (void (*)(uint64_t *))sub_1A5134868, (uint64_t)v28, v39, v43);
    swift_release();
    sub_1A5112B28(v39);
    swift_release();

    (*(void (**)(_QWORD *, _QWORD, _QWORD, uint64_t))(v63 + 56))(v43, 0, v33, v66);
    v34 = &v68;
    v68 = v59;
    v69 = v60 & 1 & v33;
    v35 = &v67;
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE799278);
    sub_1A594B124();
    swift_endAccess();
    sub_1A51340F4((id *)v46);
  }
  sub_1A51182CC((uint64_t)v54);
  return sub_1A51327D8(v54);
}

uint64_t sub_1A51190D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  char *v5;
  unsigned __int8 *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint8_t *v85;
  uint64_t v86;
  uint64_t v87;
  _BYTE **v88;
  uint64_t *v89;
  uint64_t *v90;
  uint64_t v91;
  id v92;
  id v93;
  uint64_t *v94;
  int v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t *v102;
  uint32_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  uint64_t v108;
  int v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  uint64_t v134;
  NSObject *v135;
  int v136;
  id v137;
  uint64_t v138;
  uint64_t *v139;
  id v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  void *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  char *v152;
  uint64_t v153;
  unint64_t v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  ValueMetadata *v168;
  unint64_t v169;
  uint64_t (*v170)(uint64_t, uint64_t, uint64_t);
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  _BYTE *v174;
  uint64_t v175;
  uint32_t v176;
  id v177;
  uint64_t v178;
  char v179;
  uint64_t v180;
  uint64_t v181;
  char v182;
  _BYTE __b[40];
  void *v184;
  char v185;
  uint64_t v186;
  char v187;
  uint64_t v188;
  char v189;

  v188 = 0;
  v186 = 0;
  v184 = 0;
  memset(__b, 0, sizeof(__b));
  v180 = 0;
  v177 = 0;
  v164 = 0;
  v148 = 0;
  v162 = 0;
  v149 = sub_1A594A764();
  v150 = *(_QWORD *)(v149 - 8);
  v151 = (*(_QWORD *)(v150 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](0);
  v152 = (char *)&v68 - v151;
  v153 = _s6LoggerVMa();
  v154 = (*(_QWORD *)(*(_QWORD *)(v153 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v162);
  v155 = (uint64_t)&v68 - v154;
  v156 = (v1 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v2);
  v157 = (uint64_t)&v68 - v156;
  v158 = type metadata accessor for Activity.MailboxStatus(v3);
  v159 = (*(_QWORD *)(*(_QWORD *)(v158 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v158);
  v160 = (uint64_t)&v68 - v159;
  v188 = v0;
  v161 = &v187;
  swift_beginAccess();
  v167 = *(_QWORD *)(v0 + 80);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_endAccess();
  v186 = v167;
  v168 = &type metadata for MailboxRowID;
  v163 = sub_1A594CD14();
  v169 = sub_1A5134870();
  v165 = sub_1A594BBBC();
  v166 = &v185;
  swift_beginAccess();
  *(_QWORD *)(v0 + 80) = v165;
  swift_bridgeObjectRelease();
  swift_endAccess();
  if ((sub_1A594BC4C() & 1) != 0)
    return swift_bridgeObjectRelease();
  v144 = *(void **)(v147 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_activityPersistence);
  v4 = v144;
  v184 = v144;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v145 = &v189;
  sub_1A594BBC8();
  memcpy(__b, v145, sizeof(__b));
  v146 = v148;
  while (1)
  {
    v142 = v146;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A66D8);
    sub_1A594BC58();
    v143 = v181;
    if ((v182 & 1) != 0)
      break;
    v141 = v143;
    v138 = v143;
    v180 = v143;
    v139 = &v178;
    v178 = v143;
    v179 = 0;
    swift_storeEnumTagMultiPayload();
    v140 = sub_1A511B858((uint64_t)v139, v160, v144);
    sub_1A5112518(v160);
    if (v140)
    {
      v137 = v140;
      v5 = v152;
      v92 = v140;
      v177 = v140;
      v93 = objc_msgSend(v140, sel_objectID);
      objc_msgSend(v144, sel_activityWithID_finishedWithError_);

      v94 = &OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger;
      sub_1A5112AC0(v147 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger, v157);
      (*(void (**)(char *, uint64_t, uint64_t))(v150 + 16))(v5, v157, v149);
      sub_1A5112B28(v157);
      swift_retain();
      swift_retain();
      sub_1A5112AC0(v147 + *v94, v155);
      v6 = (unsigned __int8 *)(v155 + *(int *)(v153 + 20));
      v95 = *v6;
      v96 = *((_DWORD *)v6 + 1);
      sub_1A5112B28(v155);
      swift_release();
      v98 = 24;
      v114 = 7;
      v7 = swift_allocObject();
      v8 = v96;
      v105 = v7;
      *(_BYTE *)(v7 + 16) = v95;
      *(_DWORD *)(v7 + 20) = v8;
      sub_1A5130E98();
      sub_1A5130E98();
      sub_1A5130E98();
      v9 = swift_allocObject();
      v10 = v96;
      v97 = v9;
      *(_BYTE *)(v9 + 16) = v95;
      *(_DWORD *)(v9 + 20) = v10;
      swift_retain();
      v113 = 32;
      v11 = swift_allocObject();
      v12 = v97;
      v110 = v11;
      *(_QWORD *)(v11 + 16) = sub_1A5130EE0;
      *(_QWORD *)(v11 + 24) = v12;
      sub_1A5130E98();
      sub_1A5130E98();
      swift_release();
      swift_release();
      v99 = swift_allocObject();
      *(_QWORD *)(v99 + 16) = v138;
      swift_retain();
      v13 = swift_allocObject();
      v14 = v99;
      v115 = v13;
      *(_QWORD *)(v13 + 16) = sub_1A5134394;
      *(_QWORD *)(v13 + 24) = v14;
      swift_release();
      v135 = sub_1A594A74C();
      v136 = sub_1A594C030();
      v102 = &v175;
      v175 = 33;
      v100 = sub_1A5130F74();
      v101 = sub_1A5130FDC();
      sub_1A5131044();
      sub_1A594B880();
      v103 = v176;
      v112 = 17;
      v117 = swift_allocObject();
      v107 = 16;
      *(_BYTE *)(v117 + 16) = 16;
      v118 = swift_allocObject();
      v109 = 4;
      *(_BYTE *)(v118 + 16) = 4;
      v15 = swift_allocObject();
      v104 = v15;
      *(_QWORD *)(v15 + 16) = sub_1A5130E8C;
      *(_QWORD *)(v15 + 24) = 0;
      v16 = swift_allocObject();
      v17 = v104;
      v119 = v16;
      *(_QWORD *)(v16 + 16) = sub_1A51312FC;
      *(_QWORD *)(v16 + 24) = v17;
      v120 = swift_allocObject();
      *(_BYTE *)(v120 + 16) = 0;
      v121 = swift_allocObject();
      *(_BYTE *)(v121 + 16) = 1;
      v18 = swift_allocObject();
      v19 = v105;
      v106 = v18;
      *(_QWORD *)(v18 + 16) = sub_1A5130E6C;
      *(_QWORD *)(v18 + 24) = v19;
      v20 = swift_allocObject();
      v21 = v106;
      v122 = v20;
      *(_QWORD *)(v20 + 16) = sub_1A51315B4;
      *(_QWORD *)(v20 + 24) = v21;
      v123 = swift_allocObject();
      *(_BYTE *)(v123 + 16) = v107;
      v124 = swift_allocObject();
      *(_BYTE *)(v124 + 16) = v109;
      v22 = swift_allocObject();
      v108 = v22;
      *(_QWORD *)(v22 + 16) = sub_1A5130F68;
      *(_QWORD *)(v22 + 24) = 0;
      v23 = swift_allocObject();
      v24 = v108;
      v125 = v23;
      *(_QWORD *)(v23 + 16) = sub_1A51312FC;
      *(_QWORD *)(v23 + 24) = v24;
      v126 = swift_allocObject();
      *(_BYTE *)(v126 + 16) = 0;
      v127 = swift_allocObject();
      *(_BYTE *)(v127 + 16) = v109;
      v25 = swift_allocObject();
      v26 = v110;
      v111 = v25;
      *(_QWORD *)(v25 + 16) = sub_1A5130F5C;
      *(_QWORD *)(v25 + 24) = v26;
      v27 = swift_allocObject();
      v28 = v111;
      v128 = v27;
      *(_QWORD *)(v27 + 16) = sub_1A5131954;
      *(_QWORD *)(v27 + 24) = v28;
      v129 = swift_allocObject();
      *(_BYTE *)(v129 + 16) = 32;
      v130 = swift_allocObject();
      *(_BYTE *)(v130 + 16) = 8;
      v29 = swift_allocObject();
      v30 = v115;
      v116 = v29;
      *(_QWORD *)(v29 + 16) = sub_1A51343D8;
      *(_QWORD *)(v29 + 24) = v30;
      v31 = swift_allocObject();
      v32 = v116;
      v132 = v31;
      *(_QWORD *)(v31 + 16) = sub_1A5130F5C;
      *(_QWORD *)(v31 + 24) = v32;
      v134 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A48D0);
      v131 = sub_1A594CD14();
      v133 = v33;
      swift_retain();
      v34 = v117;
      v35 = v133;
      *v133 = sub_1A5131290;
      v35[1] = v34;
      swift_retain();
      v36 = v118;
      v37 = v133;
      v133[2] = sub_1A5131290;
      v37[3] = v36;
      swift_retain();
      v38 = v119;
      v39 = v133;
      v133[4] = sub_1A5131460;
      v39[5] = v38;
      swift_retain();
      v40 = v120;
      v41 = v133;
      v133[6] = sub_1A5131290;
      v41[7] = v40;
      swift_retain();
      v42 = v121;
      v43 = v133;
      v133[8] = sub_1A5131290;
      v43[9] = v42;
      swift_retain();
      v44 = v122;
      v45 = v133;
      v133[10] = sub_1A51315FC;
      v45[11] = v44;
      swift_retain();
      v46 = v123;
      v47 = v133;
      v133[12] = sub_1A5131290;
      v47[13] = v46;
      swift_retain();
      v48 = v124;
      v49 = v133;
      v133[14] = sub_1A5131290;
      v49[15] = v48;
      swift_retain();
      v50 = v125;
      v51 = v133;
      v133[16] = sub_1A5131460;
      v51[17] = v50;
      swift_retain();
      v52 = v126;
      v53 = v133;
      v133[18] = sub_1A5131290;
      v53[19] = v52;
      swift_retain();
      v54 = v127;
      v55 = v133;
      v133[20] = sub_1A5131290;
      v55[21] = v54;
      swift_retain();
      v56 = v128;
      v57 = v133;
      v133[22] = sub_1A513199C;
      v57[23] = v56;
      swift_retain();
      v58 = v129;
      v59 = v133;
      v133[24] = sub_1A5131290;
      v59[25] = v58;
      swift_retain();
      v60 = v130;
      v61 = v133;
      v133[26] = sub_1A5131290;
      v61[27] = v60;
      swift_retain();
      v62 = v132;
      v63 = v133;
      v133[28] = sub_1A5133578;
      v63[29] = v62;
      sub_1A5113324();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v135, (os_log_type_t)v136))
      {
        v64 = v142;
        v85 = (uint8_t *)sub_1A594C348();
        v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
        v86 = sub_1A5130D14(0);
        v87 = sub_1A5130D14(1);
        v88 = &v174;
        v174 = v85;
        v89 = &v173;
        v173 = v86;
        v90 = &v172;
        v172 = v87;
        sub_1A5130D6C(2, &v174);
        sub_1A5130D6C(5, v88);
        v170 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v171 = v117;
        sub_1A5130D80(&v170, (uint64_t)v88, (uint64_t)v89, (uint64_t)v90);
        v91 = v64;
        if (v64)
        {
          __break(1u);
        }
        else
        {
          v170 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v171 = v118;
          sub_1A5130D80(&v170, (uint64_t)&v174, (uint64_t)&v173, (uint64_t)&v172);
          v82 = 0;
          v66 = v82;
          v170 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131460;
          v171 = v119;
          sub_1A5130D80(&v170, (uint64_t)&v174, (uint64_t)&v173, (uint64_t)&v172);
          v81 = v66;
          v170 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v171 = v120;
          sub_1A5130D80(&v170, (uint64_t)&v174, (uint64_t)&v173, (uint64_t)&v172);
          v80 = 0;
          v170 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v171 = v121;
          sub_1A5130D80(&v170, (uint64_t)&v174, (uint64_t)&v173, (uint64_t)&v172);
          v79 = 0;
          v170 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A51315FC;
          v171 = v122;
          sub_1A5130D80(&v170, (uint64_t)&v174, (uint64_t)&v173, (uint64_t)&v172);
          v78 = 0;
          v170 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v171 = v123;
          sub_1A5130D80(&v170, (uint64_t)&v174, (uint64_t)&v173, (uint64_t)&v172);
          v77 = 0;
          v170 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v171 = v124;
          sub_1A5130D80(&v170, (uint64_t)&v174, (uint64_t)&v173, (uint64_t)&v172);
          v76 = 0;
          v170 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131460;
          v171 = v125;
          sub_1A5130D80(&v170, (uint64_t)&v174, (uint64_t)&v173, (uint64_t)&v172);
          v75 = 0;
          v170 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v171 = v126;
          sub_1A5130D80(&v170, (uint64_t)&v174, (uint64_t)&v173, (uint64_t)&v172);
          v74 = 0;
          v170 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v171 = v127;
          sub_1A5130D80(&v170, (uint64_t)&v174, (uint64_t)&v173, (uint64_t)&v172);
          v73 = 0;
          v170 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A513199C;
          v171 = v128;
          sub_1A5130D80(&v170, (uint64_t)&v174, (uint64_t)&v173, (uint64_t)&v172);
          v72 = 0;
          v170 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v171 = v129;
          sub_1A5130D80(&v170, (uint64_t)&v174, (uint64_t)&v173, (uint64_t)&v172);
          v71 = 0;
          v170 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v171 = v130;
          sub_1A5130D80(&v170, (uint64_t)&v174, (uint64_t)&v173, (uint64_t)&v172);
          v70 = 0;
          v170 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5133578;
          v171 = v132;
          sub_1A5130D80(&v170, (uint64_t)&v174, (uint64_t)&v173, (uint64_t)&v172);
          v69 = 0;
          _os_log_impl(&dword_1A4F90000, v135, (os_log_type_t)v136, "[%.*hhx-%.*X] Finished EMActivity for pending '%s'.", v85, v103);
          sub_1A5130DC4(v86);
          sub_1A5130DC4(v87);
          sub_1A594C330();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          v83 = v69;
        }
      }
      else
      {
        v65 = v142;
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        v83 = v65;
      }
      v68 = v83;

      (*(void (**)(char *, uint64_t))(v150 + 8))(v152, v149);
      v146 = v68;
    }
    else
    {
      v146 = v142;
    }
  }
  sub_1A5131F90();

  return swift_bridgeObjectRelease();
}

id *sub_1A511A2E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  char *v9;
  unsigned __int8 *v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint8_t *v79;
  uint64_t v80;
  uint64_t v81;
  _BYTE **v82;
  uint64_t *v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  int v88;
  int v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t *v93;
  uint32_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  NSObject *v121;
  int v122;
  id v123;
  uint64_t *v124;
  void *v125;
  id v126;
  id v127;
  id v128;
  id v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  char *v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  unint64_t v147;
  id *v148;
  uint64_t v149;
  uint64_t *v150;
  uint64_t v151;
  id *v152;
  unsigned int v153;
  uint64_t v154;
  id v155;
  id v156;
  uint64_t (*v157)(uint64_t, uint64_t, uint64_t);
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  _BYTE *v161;
  uint64_t v162;
  uint32_t v163;
  uint64_t v164;
  char v165;
  id v166;
  uint64_t v167;
  char v168;
  uint64_t v169;
  char *v170;

  v170 = 0;
  v169 = 0;
  v166 = 0;
  v146 = 0;
  v131 = 0;
  v156 = 0;
  v155 = 0;
  v144 = 0;
  v132 = sub_1A594A764();
  v133 = *(_QWORD *)(v132 - 8);
  v134 = (*(_QWORD *)(v133 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](0);
  v135 = (char *)&v62 - v134;
  v136 = _s6LoggerVMa();
  v137 = (*(_QWORD *)(*(_QWORD *)(v136 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v144);
  v138 = (uint64_t)&v62 - v137;
  v139 = (v1 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v2);
  v140 = (uint64_t)&v62 - v139;
  v141 = type metadata accessor for Activity.MailboxStatus(v3);
  v142 = (*(_QWORD *)(*(_QWORD *)(v141 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v141);
  v143 = (uint64_t)&v62 - v142;
  v145 = (*(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE798B30) - 8) + 64)
        + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v144);
  v152 = (id *)((char *)&v62 - v145);
  v154 = _s15MailboxActivityVMa();
  v151 = *(_QWORD *)(v154 - 8);
  v147 = (*(_QWORD *)(v151 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v154);
  v148 = (id *)((char *)&v62 - v147);
  v170 = (char *)&v62 - v147;
  v169 = v0;
  swift_beginAccess();
  v149 = *(_QWORD *)(v0 + 88);
  v150 = &v167;
  v167 = 0;
  v153 = 1;
  v168 = 1;
  v4 = sub_1A51105C8();
  MEMORY[0x1A85AD590](v150, v149, &unk_1E4E7DC10, v154, v4);
  if ((*(unsigned int (**)(id *, _QWORD, uint64_t))(v151 + 48))(v152, v153, v154) == 1)
  {
    sub_1A5133C14(v152);
    return (id *)swift_endAccess();
  }
  else
  {
    sub_1A5133E20(v152, v148);
    swift_endAccess();
    v129 = *v148;
    v5 = v129;
    if (v129)
    {
      v128 = v129;
      v127 = v129;
      v155 = v129;
      v6 = v129;
      v166 = v127;

LABEL_19:
      v64 = *(id *)(v130 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_activityPersistence);
      v60 = v64;
      v62 = v166;
      v61 = v166;
      v63 = objc_msgSend(v62, sel_objectID);

      objc_msgSend(v64, sel_activityWithID_finishedWithError_, v63, 0);
      sub_1A5126B4C(v130);
      return sub_1A51340F4(v148);
    }
    v7 = v130;
    v124 = &v164;
    v164 = 0;
    v165 = 1;
    swift_storeEnumTagMultiPayload();
    v125 = *(void **)(v7 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_activityPersistence);
    v8 = v125;
    v126 = sub_1A511B858((uint64_t)v124, v143, v125);

    sub_1A5112518(v143);
    if (v126)
    {
      v123 = v126;
      v65 = v126;
      v156 = v126;
      v59 = v126;
      v166 = v65;

      goto LABEL_19;
    }
    v9 = v135;
    v86 = &OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger;
    sub_1A5112AC0(v130 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger, v140);
    (*(void (**)(char *, uint64_t, uint64_t))(v133 + 16))(v9, v140, v132);
    sub_1A5112B28(v140);
    swift_retain();
    swift_retain();
    sub_1A5112AC0(v130 + *v86, v138);
    v10 = (unsigned __int8 *)(v138 + *(int *)(v136 + 20));
    v88 = *v10;
    v89 = *((_DWORD *)v10 + 1);
    sub_1A5112B28(v138);
    swift_release();
    v87 = 24;
    v103 = 7;
    v11 = swift_allocObject();
    v12 = v89;
    v96 = v11;
    *(_BYTE *)(v11 + 16) = v88;
    *(_DWORD *)(v11 + 20) = v12;
    sub_1A5130E98();
    sub_1A5130E98();
    sub_1A5130E98();
    v13 = swift_allocObject();
    v14 = v89;
    v90 = v13;
    *(_BYTE *)(v13 + 16) = v88;
    *(_DWORD *)(v13 + 20) = v14;
    swift_retain();
    v102 = 32;
    v15 = swift_allocObject();
    v16 = v90;
    v104 = v15;
    *(_QWORD *)(v15 + 16) = sub_1A5130EE0;
    *(_QWORD *)(v15 + 24) = v16;
    sub_1A5130E98();
    sub_1A5130E98();
    swift_release();
    swift_release();
    v121 = sub_1A594A74C();
    v122 = sub_1A594C018();
    v93 = &v162;
    v162 = 23;
    v91 = sub_1A5130F74();
    v92 = sub_1A5130FDC();
    sub_1A5131044();
    sub_1A594B880();
    v94 = v163;
    v100 = 17;
    v106 = swift_allocObject();
    v98 = 16;
    *(_BYTE *)(v106 + 16) = 16;
    v107 = swift_allocObject();
    v101 = 4;
    *(_BYTE *)(v107 + 16) = 4;
    v17 = swift_allocObject();
    v95 = v17;
    *(_QWORD *)(v17 + 16) = sub_1A5130E8C;
    *(_QWORD *)(v17 + 24) = 0;
    v18 = swift_allocObject();
    v19 = v95;
    v108 = v18;
    *(_QWORD *)(v18 + 16) = sub_1A51312FC;
    *(_QWORD *)(v18 + 24) = v19;
    v109 = swift_allocObject();
    *(_BYTE *)(v109 + 16) = 0;
    v110 = swift_allocObject();
    *(_BYTE *)(v110 + 16) = 1;
    v20 = swift_allocObject();
    v21 = v96;
    v97 = v20;
    *(_QWORD *)(v20 + 16) = sub_1A5130E6C;
    *(_QWORD *)(v20 + 24) = v21;
    v22 = swift_allocObject();
    v23 = v97;
    v111 = v22;
    *(_QWORD *)(v22 + 16) = sub_1A51315B4;
    *(_QWORD *)(v22 + 24) = v23;
    v112 = swift_allocObject();
    *(_BYTE *)(v112 + 16) = v98;
    v113 = swift_allocObject();
    *(_BYTE *)(v113 + 16) = v101;
    v24 = swift_allocObject();
    v99 = v24;
    *(_QWORD *)(v24 + 16) = sub_1A5130F68;
    *(_QWORD *)(v24 + 24) = 0;
    v25 = swift_allocObject();
    v26 = v99;
    v114 = v25;
    *(_QWORD *)(v25 + 16) = sub_1A51312FC;
    *(_QWORD *)(v25 + 24) = v26;
    v115 = swift_allocObject();
    *(_BYTE *)(v115 + 16) = 0;
    v116 = swift_allocObject();
    *(_BYTE *)(v116 + 16) = v101;
    v27 = swift_allocObject();
    v28 = v104;
    v105 = v27;
    *(_QWORD *)(v27 + 16) = sub_1A5130F5C;
    *(_QWORD *)(v27 + 24) = v28;
    v29 = swift_allocObject();
    v30 = v105;
    v118 = v29;
    *(_QWORD *)(v29 + 16) = sub_1A5131954;
    *(_QWORD *)(v29 + 24) = v30;
    v120 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A48D0);
    v117 = sub_1A594CD14();
    v119 = v31;
    swift_retain();
    v32 = v106;
    v33 = v119;
    *v119 = sub_1A5131290;
    v33[1] = v32;
    swift_retain();
    v34 = v107;
    v35 = v119;
    v119[2] = sub_1A5131290;
    v35[3] = v34;
    swift_retain();
    v36 = v108;
    v37 = v119;
    v119[4] = sub_1A5131460;
    v37[5] = v36;
    swift_retain();
    v38 = v109;
    v39 = v119;
    v119[6] = sub_1A5131290;
    v39[7] = v38;
    swift_retain();
    v40 = v110;
    v41 = v119;
    v119[8] = sub_1A5131290;
    v41[9] = v40;
    swift_retain();
    v42 = v111;
    v43 = v119;
    v119[10] = sub_1A51315FC;
    v43[11] = v42;
    swift_retain();
    v44 = v112;
    v45 = v119;
    v119[12] = sub_1A5131290;
    v45[13] = v44;
    swift_retain();
    v46 = v113;
    v47 = v119;
    v119[14] = sub_1A5131290;
    v47[15] = v46;
    swift_retain();
    v48 = v114;
    v49 = v119;
    v119[16] = sub_1A5131460;
    v49[17] = v48;
    swift_retain();
    v50 = v115;
    v51 = v119;
    v119[18] = sub_1A5131290;
    v51[19] = v50;
    swift_retain();
    v52 = v116;
    v53 = v119;
    v119[20] = sub_1A5131290;
    v53[21] = v52;
    swift_retain();
    v54 = v118;
    v55 = v119;
    v119[22] = sub_1A513199C;
    v55[23] = v54;
    sub_1A5113324();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v121, (os_log_type_t)v122))
    {
      v56 = v131;
      v79 = (uint8_t *)sub_1A594C348();
      v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
      v78 = 0;
      v80 = sub_1A5130D14(0);
      v81 = sub_1A5130D14(v78);
      v82 = &v161;
      v161 = v79;
      v83 = &v160;
      v160 = v80;
      v84 = &v159;
      v159 = v81;
      sub_1A5130D6C(0, &v161);
      sub_1A5130D6C(4, v82);
      v157 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
      v158 = v106;
      sub_1A5130D80(&v157, (uint64_t)v82, (uint64_t)v83, (uint64_t)v84);
      v85 = v56;
      if (v56)
      {
        __break(1u);
      }
      else
      {
        v157 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v158 = v107;
        sub_1A5130D80(&v157, (uint64_t)&v161, (uint64_t)&v160, (uint64_t)&v159);
        v76 = 0;
        v57 = v76;
        v157 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131460;
        v158 = v108;
        sub_1A5130D80(&v157, (uint64_t)&v161, (uint64_t)&v160, (uint64_t)&v159);
        v75 = v57;
        v157 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v158 = v109;
        sub_1A5130D80(&v157, (uint64_t)&v161, (uint64_t)&v160, (uint64_t)&v159);
        v74 = 0;
        v157 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v158 = v110;
        sub_1A5130D80(&v157, (uint64_t)&v161, (uint64_t)&v160, (uint64_t)&v159);
        v73 = 0;
        v157 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A51315FC;
        v158 = v111;
        sub_1A5130D80(&v157, (uint64_t)&v161, (uint64_t)&v160, (uint64_t)&v159);
        v72 = 0;
        v157 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v158 = v112;
        sub_1A5130D80(&v157, (uint64_t)&v161, (uint64_t)&v160, (uint64_t)&v159);
        v71 = 0;
        v157 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v158 = v113;
        sub_1A5130D80(&v157, (uint64_t)&v161, (uint64_t)&v160, (uint64_t)&v159);
        v70 = 0;
        v157 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131460;
        v158 = v114;
        sub_1A5130D80(&v157, (uint64_t)&v161, (uint64_t)&v160, (uint64_t)&v159);
        v69 = 0;
        v157 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v158 = v115;
        sub_1A5130D80(&v157, (uint64_t)&v161, (uint64_t)&v160, (uint64_t)&v159);
        v68 = 0;
        v157 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v158 = v116;
        sub_1A5130D80(&v157, (uint64_t)&v161, (uint64_t)&v160, (uint64_t)&v159);
        v67 = 0;
        v157 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A513199C;
        v158 = v118;
        sub_1A5130D80(&v157, (uint64_t)&v161, (uint64_t)&v160, (uint64_t)&v159);
        _os_log_impl(&dword_1A4F90000, v121, (os_log_type_t)v122, "[%.*hhx-%.*X] Unable to create account scope activity.", v79, v94);
        v66 = 0;
        sub_1A5130DC4(v80);
        sub_1A5130DC4(v81);
        sub_1A594C330();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
      }
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }

    (*(void (**)(char *, uint64_t))(v133 + 8))(v135, v132);
    sub_1A5126B4C(v130);
    return sub_1A51340F4(v148);
  }
}

id (*sub_1A511B79C())(uint64_t *a1, uint64_t a2, void *a3)
{
  swift_retain();
  return sub_1A5143538;
}

id sub_1A511B7D4(uint64_t *a1, uint64_t a2, void *a3, uint64_t a4)
{
  char v4;
  uint64_t v6;
  char v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v11 = 0;
  v12 = 0;
  v10 = 0;
  v9 = 0;
  v8 = 0;
  v4 = *((_BYTE *)a1 + 8);
  v11 = *a1;
  v12 = v4 & 1;
  v10 = a2;
  v9 = a3;
  v8 = a4;
  v6 = v11;
  v7 = v4 & 1;
  return sub_1A511B858((uint64_t)&v6, a2, a3);
}

id sub_1A511B858(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  id v26;
  id v27;
  char *v28;
  unsigned __int8 *v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  id v78;
  char *v79;
  unsigned __int8 *v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  _QWORD *v123;
  uint64_t v124;
  _QWORD *v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  _QWORD *v131;
  uint64_t v132;
  _QWORD *v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  _QWORD *v137;
  uint64_t v138;
  _QWORD *v139;
  id v140;
  unint64_t v141;
  id v142;
  _QWORD *v143;
  _QWORD *v144;
  uint64_t v145;
  _QWORD *v146;
  uint64_t v147;
  id v148;
  char *v150;
  id v151;
  unint64_t v152;
  uint64_t v153;
  int v154;
  char *v155;
  unsigned __int8 *v156;
  uint64_t v157;
  int v158;
  uint64_t v159;
  int v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  _QWORD *v183;
  uint64_t v184;
  _QWORD *v185;
  uint64_t v186;
  _QWORD *v187;
  uint64_t v188;
  _QWORD *v189;
  uint64_t v190;
  _QWORD *v191;
  uint64_t v192;
  _QWORD *v193;
  uint64_t v194;
  _QWORD *v195;
  uint64_t v196;
  _QWORD *v197;
  uint64_t v198;
  _QWORD *v199;
  uint64_t v200;
  _QWORD *v201;
  uint64_t v202;
  _QWORD *v203;
  uint64_t v204;
  _QWORD *v205;
  uint64_t v206;
  _QWORD *v207;
  uint64_t v208;
  _QWORD *v209;
  uint64_t v210;
  _QWORD *v211;
  uint64_t v212;
  _QWORD *v213;
  uint64_t v214;
  char *v215;
  unsigned __int8 *v216;
  uint64_t v217;
  int v218;
  uint64_t v219;
  int v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  _QWORD *v243;
  uint64_t v244;
  _QWORD *v245;
  uint64_t v246;
  _QWORD *v247;
  uint64_t v248;
  _QWORD *v249;
  uint64_t v250;
  _QWORD *v251;
  uint64_t v252;
  _QWORD *v253;
  uint64_t v254;
  _QWORD *v255;
  uint64_t v256;
  _QWORD *v257;
  uint64_t v258;
  _QWORD *v259;
  uint64_t v260;
  _QWORD *v261;
  uint64_t v262;
  _QWORD *v263;
  uint64_t v264;
  _QWORD *v265;
  uint64_t v266;
  _QWORD *v267;
  uint64_t v268;
  _QWORD *v269;
  uint64_t v270;
  _QWORD *v271;
  uint64_t v272;
  _QWORD *v273;
  uint64_t v274;
  _QWORD v276[14];
  uint8_t *v277;
  uint64_t v278;
  uint64_t v279;
  _BYTE **v280;
  uint64_t *v281;
  uint64_t *v282;
  uint64_t v283;
  uint64_t *v284;
  int v285;
  int v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  unint64_t v290;
  unint64_t v291;
  uint64_t *v292;
  uint32_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  int v297;
  uint64_t v298;
  int v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  _QWORD *v323;
  uint64_t v324;
  NSObject *v325;
  int v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint8_t *v341;
  uint64_t v342;
  uint64_t v343;
  _BYTE **v344;
  uint64_t *v345;
  uint64_t *v346;
  uint64_t v347;
  uint64_t *v348;
  int v349;
  int v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  unint64_t v354;
  unint64_t v355;
  uint64_t *v356;
  uint32_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  int v361;
  uint64_t v362;
  int v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  _QWORD *v387;
  uint64_t v388;
  NSObject *v389;
  int v390;
  _BOOL4 v391;
  uint64_t v392;
  _QWORD *v393;
  uint64_t *v394;
  uint64_t v395;
  uint64_t v396;
  id v397;
  id v398;
  uint64_t v399;
  int v400;
  uint64_t v401;
  id v402;
  id v403;
  uint64_t v404;
  id *v405;
  _QWORD *v406;
  void (*v407)(char *, uint64_t);
  id v408;
  id v409;
  _QWORD *v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  unint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint8_t *v431;
  uint64_t v432;
  uint64_t v433;
  _BYTE **v434;
  uint64_t *v435;
  uint64_t *v436;
  uint64_t v437;
  uint64_t *v438;
  int v439;
  int v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  unint64_t v444;
  unint64_t v445;
  uint64_t *v446;
  uint32_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  int v451;
  uint64_t v452;
  int v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  _QWORD *v477;
  uint64_t v478;
  NSObject *v479;
  int v480;
  id v481;
  id v482;
  id v483;
  id v484;
  id v485;
  uint64_t v486;
  char *v487;
  uint64_t v488;
  id v489;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  uint8_t *v504;
  uint64_t v505;
  uint64_t v506;
  _BYTE **v507;
  uint64_t *v508;
  uint64_t *v509;
  uint64_t v510;
  uint64_t *v511;
  uint64_t v512;
  int v513;
  int v514;
  uint64_t v515;
  unint64_t v516;
  unint64_t v517;
  uint64_t *v518;
  uint32_t v519;
  uint64_t v520;
  uint64_t v521;
  uint64_t v522;
  int v523;
  uint64_t v524;
  uint64_t v525;
  int v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  uint64_t v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  uint64_t v540;
  uint64_t v541;
  uint64_t v542;
  uint64_t v543;
  _QWORD *v544;
  uint64_t v545;
  NSObject *v546;
  int v547;
  id v548;
  id v549;
  id v550;
  id v551;
  id v552;
  uint64_t v553;
  uint64_t *v554;
  int v555;
  uint64_t v556;
  id v557;
  uint64_t v558;
  uint64_t v559;
  uint64_t v560;
  unint64_t v561;
  uint64_t v562;
  uint64_t v563;
  uint64_t v564;
  unint64_t v565;
  char *v566;
  unint64_t v567;
  char *v568;
  uint64_t v569;
  uint64_t v570;
  unint64_t v571;
  char *v572;
  unint64_t v573;
  char *v574;
  unint64_t v575;
  char *v576;
  unint64_t v577;
  char *v578;
  uint64_t v579;
  uint64_t v580;
  unint64_t v581;
  uint64_t v582;
  unint64_t v583;
  uint64_t v584;
  unint64_t v585;
  uint64_t v586;
  unint64_t v587;
  uint64_t v588;
  unint64_t v589;
  uint64_t v590;
  id v591;
  uint64_t v592;
  uint64_t v593;
  unint64_t v594;
  uint64_t v595;
  uint64_t v596;
  int v597;
  id v598;
  id v599;
  uint64_t (*v600)(uint64_t, uint64_t, uint64_t);
  uint64_t v601;
  uint64_t v602;
  uint64_t v603;
  _BYTE *v604;
  uint64_t v605;
  uint32_t v606;
  uint64_t v607;
  id v608;
  _QWORD v609[4];
  uint64_t (*v610)(uint64_t, uint64_t, uint64_t);
  uint64_t v611;
  uint64_t v612;
  uint64_t v613;
  _BYTE *v614;
  uint64_t v615;
  uint32_t v616;
  uint64_t (*v617)(uint64_t, uint64_t, uint64_t);
  uint64_t v618;
  uint64_t v619;
  uint64_t v620;
  _BYTE *v621;
  uint64_t v622;
  uint32_t v623;
  BOOL v624;
  uint64_t v625;
  char v626;
  uint64_t v627;
  _QWORD v628[2];
  char v629;
  uint64_t v630;
  id v631;
  uint64_t v632;
  id v633;
  id v634;
  uint64_t (*v635)(uint64_t, uint64_t, uint64_t);
  uint64_t v636;
  uint64_t v637;
  uint64_t v638;
  _BYTE *v639;
  uint64_t v640;
  uint32_t v641;
  uint64_t v642;
  char v643;
  uint64_t v644;
  id v645;
  id v646;
  uint64_t v647;
  uint64_t v648;
  uint64_t v649;
  uint64_t v650;
  char v651;
  char *v652;

  v593 = a1;
  v592 = a2;
  v591 = a3;
  v652 = 0;
  v650 = 0;
  v651 = 0;
  v649 = 0;
  v648 = 0;
  v647 = 0;
  v646 = 0;
  v645 = 0;
  v644 = 0;
  v560 = 0;
  v634 = 0;
  v633 = 0;
  v632 = 0;
  v631 = 0;
  v630 = 0;
  v624 = 0;
  v599 = 0;
  v598 = 0;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE796458);
  v561 = (*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v4);
  v562 = (uint64_t)v276 - v561;
  v579 = 0;
  v563 = sub_1A594A0EC();
  v564 = *(_QWORD *)(v563 - 8);
  v565 = (*(_QWORD *)(v564 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v579);
  v566 = (char *)v276 - v565;
  v567 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v6);
  v568 = (char *)v276 - v567;
  v652 = (char *)v276 - v567;
  v569 = sub_1A594A764();
  v570 = *(_QWORD *)(v569 - 8);
  v571 = (*(_QWORD *)(v570 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v579);
  v572 = (char *)v276 - v571;
  v573 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v8);
  v574 = (char *)v276 - v573;
  v575 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v10);
  v576 = (char *)v276 - v575;
  v577 = (v11 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v12);
  v578 = (char *)v276 - v577;
  v580 = _s6LoggerVMa();
  v581 = (*(_QWORD *)(*(_QWORD *)(v580 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v579);
  v582 = (uint64_t)v276 - v581;
  v583 = (v13 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v14);
  v584 = (uint64_t)v276 - v583;
  v585 = (v15 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v16);
  v586 = (uint64_t)v276 - v585;
  v587 = (v17 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v18);
  v588 = (uint64_t)v276 - v587;
  v589 = (v19 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v20);
  v590 = (uint64_t)v276 - v589;
  v594 = (*(_QWORD *)(*(_QWORD *)(_s18MailboxPersistenceVMa() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v593);
  v595 = (uint64_t)v276 - v594;
  v596 = *v21;
  v597 = *((unsigned __int8 *)v21 + 8);
  v650 = v596;
  v651 = v597 & 1;
  v649 = v22;
  v648 = v23;
  v647 = v3;
  if ((v597 & 1) == 0)
  {
    v558 = v596;
    v76 = v595;
    v488 = v596;
    v644 = v596;
    v486 = v559 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_mailboxPersistence;
    v487 = &v643;
    swift_beginAccess();
    sub_1A5110A0C(v486, v76);
    swift_endAccess();
    v642 = v488;
    v489 = (id)sub_1A5219298((uint64_t)&v642);
    sub_1A5110B24(v595);
    if (v489)
    {
      v485 = v489;
      v483 = v489;
      v634 = v489;
      v484 = objc_msgSend(v489, sel_objectID);
      if (v484)
      {
        v482 = v484;
        v481 = v484;
        v633 = v484;
        v77 = v483;
        v646 = v483;
        v78 = v481;
        v645 = v481;

        goto LABEL_27;
      }

    }
    v79 = v576;
    v438 = &OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger;
    sub_1A5112AC0(v559 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger, v586);
    (*(void (**)(char *, uint64_t, uint64_t))(v570 + 16))(v79, v586, v569);
    sub_1A5112B28(v586);
    swift_retain();
    swift_retain();
    sub_1A5112AC0(v559 + *v438, v588);
    v80 = (unsigned __int8 *)(v588 + *(int *)(v580 + 20));
    v439 = *v80;
    v440 = *((_DWORD *)v80 + 1);
    sub_1A5112B28(v588);
    swift_release();
    v442 = 24;
    v458 = 7;
    v81 = swift_allocObject();
    v82 = v440;
    v449 = v81;
    *(_BYTE *)(v81 + 16) = v439;
    *(_DWORD *)(v81 + 20) = v82;
    sub_1A5130E98();
    sub_1A5130E98();
    sub_1A5130E98();
    v83 = swift_allocObject();
    v84 = v440;
    v441 = v83;
    *(_BYTE *)(v83 + 16) = v439;
    *(_DWORD *)(v83 + 20) = v84;
    swift_retain();
    v457 = 32;
    v85 = swift_allocObject();
    v86 = v441;
    v454 = v85;
    *(_QWORD *)(v85 + 16) = sub_1A5130EE0;
    *(_QWORD *)(v85 + 24) = v86;
    sub_1A5130E98();
    sub_1A5130E98();
    swift_release();
    swift_release();
    v443 = swift_allocObject();
    *(_QWORD *)(v443 + 16) = v488;
    swift_retain();
    v87 = swift_allocObject();
    v88 = v443;
    v459 = v87;
    *(_QWORD *)(v87 + 16) = sub_1A5134394;
    *(_QWORD *)(v87 + 24) = v88;
    swift_release();
    v479 = sub_1A594A74C();
    v480 = sub_1A594C018();
    v446 = &v640;
    v640 = 33;
    v444 = sub_1A5130F74();
    v445 = sub_1A5130FDC();
    sub_1A5131044();
    sub_1A594B880();
    v447 = v641;
    v456 = 17;
    v461 = swift_allocObject();
    v451 = 16;
    *(_BYTE *)(v461 + 16) = 16;
    v462 = swift_allocObject();
    v453 = 4;
    *(_BYTE *)(v462 + 16) = 4;
    v89 = swift_allocObject();
    v448 = v89;
    *(_QWORD *)(v89 + 16) = sub_1A5130E8C;
    *(_QWORD *)(v89 + 24) = 0;
    v90 = swift_allocObject();
    v91 = v448;
    v463 = v90;
    *(_QWORD *)(v90 + 16) = sub_1A51312FC;
    *(_QWORD *)(v90 + 24) = v91;
    v464 = swift_allocObject();
    *(_BYTE *)(v464 + 16) = 0;
    v465 = swift_allocObject();
    *(_BYTE *)(v465 + 16) = 1;
    v92 = swift_allocObject();
    v93 = v449;
    v450 = v92;
    *(_QWORD *)(v92 + 16) = sub_1A5130E6C;
    *(_QWORD *)(v92 + 24) = v93;
    v94 = swift_allocObject();
    v95 = v450;
    v466 = v94;
    *(_QWORD *)(v94 + 16) = sub_1A51315B4;
    *(_QWORD *)(v94 + 24) = v95;
    v467 = swift_allocObject();
    *(_BYTE *)(v467 + 16) = v451;
    v468 = swift_allocObject();
    *(_BYTE *)(v468 + 16) = v453;
    v96 = swift_allocObject();
    v452 = v96;
    *(_QWORD *)(v96 + 16) = sub_1A5130F68;
    *(_QWORD *)(v96 + 24) = 0;
    v97 = swift_allocObject();
    v98 = v452;
    v469 = v97;
    *(_QWORD *)(v97 + 16) = sub_1A51312FC;
    *(_QWORD *)(v97 + 24) = v98;
    v470 = swift_allocObject();
    *(_BYTE *)(v470 + 16) = 0;
    v471 = swift_allocObject();
    *(_BYTE *)(v471 + 16) = v453;
    v99 = swift_allocObject();
    v100 = v454;
    v455 = v99;
    *(_QWORD *)(v99 + 16) = sub_1A5130F5C;
    *(_QWORD *)(v99 + 24) = v100;
    v101 = swift_allocObject();
    v102 = v455;
    v472 = v101;
    *(_QWORD *)(v101 + 16) = sub_1A5131954;
    *(_QWORD *)(v101 + 24) = v102;
    v473 = swift_allocObject();
    *(_BYTE *)(v473 + 16) = 32;
    v474 = swift_allocObject();
    *(_BYTE *)(v474 + 16) = 8;
    v103 = swift_allocObject();
    v104 = v459;
    v460 = v103;
    *(_QWORD *)(v103 + 16) = sub_1A51343D8;
    *(_QWORD *)(v103 + 24) = v104;
    v105 = swift_allocObject();
    v106 = v460;
    v476 = v105;
    *(_QWORD *)(v105 + 16) = sub_1A5130F5C;
    *(_QWORD *)(v105 + 24) = v106;
    v478 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A48D0);
    v475 = sub_1A594CD14();
    v477 = v107;
    swift_retain();
    v108 = v461;
    v109 = v477;
    *v477 = sub_1A5131290;
    v109[1] = v108;
    swift_retain();
    v110 = v462;
    v111 = v477;
    v477[2] = sub_1A5131290;
    v111[3] = v110;
    swift_retain();
    v112 = v463;
    v113 = v477;
    v477[4] = sub_1A5131460;
    v113[5] = v112;
    swift_retain();
    v114 = v464;
    v115 = v477;
    v477[6] = sub_1A5131290;
    v115[7] = v114;
    swift_retain();
    v116 = v465;
    v117 = v477;
    v477[8] = sub_1A5131290;
    v117[9] = v116;
    swift_retain();
    v118 = v466;
    v119 = v477;
    v477[10] = sub_1A51315FC;
    v119[11] = v118;
    swift_retain();
    v120 = v467;
    v121 = v477;
    v477[12] = sub_1A5131290;
    v121[13] = v120;
    swift_retain();
    v122 = v468;
    v123 = v477;
    v477[14] = sub_1A5131290;
    v123[15] = v122;
    swift_retain();
    v124 = v469;
    v125 = v477;
    v477[16] = sub_1A5131460;
    v125[17] = v124;
    swift_retain();
    v126 = v470;
    v127 = v477;
    v477[18] = sub_1A5131290;
    v127[19] = v126;
    swift_retain();
    v128 = v471;
    v129 = v477;
    v477[20] = sub_1A5131290;
    v129[21] = v128;
    swift_retain();
    v130 = v472;
    v131 = v477;
    v477[22] = sub_1A513199C;
    v131[23] = v130;
    swift_retain();
    v132 = v473;
    v133 = v477;
    v477[24] = sub_1A5131290;
    v133[25] = v132;
    swift_retain();
    v134 = v474;
    v135 = v477;
    v477[26] = sub_1A5131290;
    v135[27] = v134;
    swift_retain();
    v136 = v476;
    v137 = v477;
    v477[28] = sub_1A5133578;
    v137[29] = v136;
    sub_1A5113324();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v479, (os_log_type_t)v480))
    {
      v138 = v560;
      v431 = (uint8_t *)sub_1A594C348();
      v430 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
      v432 = sub_1A5130D14(0);
      v433 = sub_1A5130D14(1);
      v434 = &v639;
      v639 = v431;
      v435 = &v638;
      v638 = v432;
      v436 = &v637;
      v637 = v433;
      sub_1A5130D6C(2, &v639);
      sub_1A5130D6C(5, v434);
      v635 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
      v636 = v461;
      sub_1A5130D80(&v635, (uint64_t)v434, (uint64_t)v435, (uint64_t)v436);
      v437 = v138;
      if (v138)
      {
        __break(1u);
      }
      else
      {
        v635 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v636 = v462;
        sub_1A5130D80(&v635, (uint64_t)&v639, (uint64_t)&v638, (uint64_t)&v637);
        v429 = 0;
        v635 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131460;
        v636 = v463;
        sub_1A5130D80(&v635, (uint64_t)&v639, (uint64_t)&v638, (uint64_t)&v637);
        v428 = 0;
        v635 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v636 = v464;
        sub_1A5130D80(&v635, (uint64_t)&v639, (uint64_t)&v638, (uint64_t)&v637);
        v427 = 0;
        v635 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v636 = v465;
        sub_1A5130D80(&v635, (uint64_t)&v639, (uint64_t)&v638, (uint64_t)&v637);
        v426 = 0;
        v635 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A51315FC;
        v636 = v466;
        sub_1A5130D80(&v635, (uint64_t)&v639, (uint64_t)&v638, (uint64_t)&v637);
        v425 = 0;
        v635 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v636 = v467;
        sub_1A5130D80(&v635, (uint64_t)&v639, (uint64_t)&v638, (uint64_t)&v637);
        v424 = 0;
        v635 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v636 = v468;
        sub_1A5130D80(&v635, (uint64_t)&v639, (uint64_t)&v638, (uint64_t)&v637);
        v423 = 0;
        v635 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131460;
        v636 = v469;
        sub_1A5130D80(&v635, (uint64_t)&v639, (uint64_t)&v638, (uint64_t)&v637);
        v422 = 0;
        v635 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v636 = v470;
        sub_1A5130D80(&v635, (uint64_t)&v639, (uint64_t)&v638, (uint64_t)&v637);
        v421 = 0;
        v635 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v636 = v471;
        sub_1A5130D80(&v635, (uint64_t)&v639, (uint64_t)&v638, (uint64_t)&v637);
        v420 = 0;
        v635 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A513199C;
        v636 = v472;
        sub_1A5130D80(&v635, (uint64_t)&v639, (uint64_t)&v638, (uint64_t)&v637);
        v419 = 0;
        v635 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v636 = v473;
        sub_1A5130D80(&v635, (uint64_t)&v639, (uint64_t)&v638, (uint64_t)&v637);
        v418 = 0;
        v635 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v636 = v474;
        sub_1A5130D80(&v635, (uint64_t)&v639, (uint64_t)&v638, (uint64_t)&v637);
        v417 = 0;
        v635 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5133578;
        v636 = v476;
        sub_1A5130D80(&v635, (uint64_t)&v639, (uint64_t)&v638, (uint64_t)&v637);
        _os_log_impl(&dword_1A4F90000, v479, (os_log_type_t)v480, "[%.*hhx-%.*X] EMActivity: Unable to get mailbox for '%s'.", v431, v447);
        sub_1A5130DC4(v432);
        sub_1A5130DC4(v433);
        sub_1A594C330();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
      }
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }

    (*(void (**)(char *, uint64_t))(v570 + 8))(v576, v569);
    return (id)v579;
  }
  v24 = v595;
  v553 = v559 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_mailboxPersistence;
  v554 = &v607;
  swift_beginAccess();
  sub_1A5110A0C(v553, v24);
  swift_endAccess();
  v25 = MailboxName.inbox.unsafeMutableAddressor();
  v556 = *v25;
  v555 = *((_DWORD *)v25 + 2);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v557 = (id)sub_1A52190C0(v556, v555);
  swift_bridgeObjectRelease();
  sub_1A5110B24(v595);
  if (!v557)
  {
LABEL_9:
    v28 = v578;
    v511 = &OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger;
    sub_1A5112AC0(v559 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger, v590);
    (*(void (**)(char *, uint64_t, uint64_t))(v570 + 16))(v28, v590, v569);
    sub_1A5112B28(v590);
    swift_retain();
    swift_retain();
    sub_1A5112AC0(v559 + *v511, v588);
    v29 = (unsigned __int8 *)(v588 + *(int *)(v580 + 20));
    v513 = *v29;
    v514 = *((_DWORD *)v29 + 1);
    sub_1A5112B28(v588);
    swift_release();
    v512 = 24;
    v528 = 7;
    v30 = swift_allocObject();
    v31 = v514;
    v521 = v30;
    *(_BYTE *)(v30 + 16) = v513;
    *(_DWORD *)(v30 + 20) = v31;
    sub_1A5130E98();
    sub_1A5130E98();
    sub_1A5130E98();
    v32 = swift_allocObject();
    v33 = v514;
    v515 = v32;
    *(_BYTE *)(v32 + 16) = v513;
    *(_DWORD *)(v32 + 20) = v33;
    swift_retain();
    v527 = 32;
    v34 = swift_allocObject();
    v35 = v515;
    v529 = v34;
    *(_QWORD *)(v34 + 16) = sub_1A5130EE0;
    *(_QWORD *)(v34 + 24) = v35;
    sub_1A5130E98();
    sub_1A5130E98();
    swift_release();
    swift_release();
    v546 = sub_1A594A74C();
    v547 = sub_1A594C018();
    v518 = &v605;
    v605 = 23;
    v516 = sub_1A5130F74();
    v517 = sub_1A5130FDC();
    sub_1A5131044();
    sub_1A594B880();
    v519 = v606;
    v525 = 17;
    v531 = swift_allocObject();
    v523 = 16;
    *(_BYTE *)(v531 + 16) = 16;
    v532 = swift_allocObject();
    v526 = 4;
    *(_BYTE *)(v532 + 16) = 4;
    v36 = swift_allocObject();
    v520 = v36;
    *(_QWORD *)(v36 + 16) = sub_1A5130E8C;
    *(_QWORD *)(v36 + 24) = 0;
    v37 = swift_allocObject();
    v38 = v520;
    v533 = v37;
    *(_QWORD *)(v37 + 16) = sub_1A51312FC;
    *(_QWORD *)(v37 + 24) = v38;
    v534 = swift_allocObject();
    *(_BYTE *)(v534 + 16) = 0;
    v535 = swift_allocObject();
    *(_BYTE *)(v535 + 16) = 1;
    v39 = swift_allocObject();
    v40 = v521;
    v522 = v39;
    *(_QWORD *)(v39 + 16) = sub_1A5130E6C;
    *(_QWORD *)(v39 + 24) = v40;
    v41 = swift_allocObject();
    v42 = v522;
    v536 = v41;
    *(_QWORD *)(v41 + 16) = sub_1A51315B4;
    *(_QWORD *)(v41 + 24) = v42;
    v537 = swift_allocObject();
    *(_BYTE *)(v537 + 16) = v523;
    v538 = swift_allocObject();
    *(_BYTE *)(v538 + 16) = v526;
    v43 = swift_allocObject();
    v524 = v43;
    *(_QWORD *)(v43 + 16) = sub_1A5130F68;
    *(_QWORD *)(v43 + 24) = 0;
    v44 = swift_allocObject();
    v45 = v524;
    v539 = v44;
    *(_QWORD *)(v44 + 16) = sub_1A51312FC;
    *(_QWORD *)(v44 + 24) = v45;
    v540 = swift_allocObject();
    *(_BYTE *)(v540 + 16) = 0;
    v541 = swift_allocObject();
    *(_BYTE *)(v541 + 16) = v526;
    v46 = swift_allocObject();
    v47 = v529;
    v530 = v46;
    *(_QWORD *)(v46 + 16) = sub_1A5130F5C;
    *(_QWORD *)(v46 + 24) = v47;
    v48 = swift_allocObject();
    v49 = v530;
    v543 = v48;
    *(_QWORD *)(v48 + 16) = sub_1A5131954;
    *(_QWORD *)(v48 + 24) = v49;
    v545 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A48D0);
    v542 = sub_1A594CD14();
    v544 = v50;
    swift_retain();
    v51 = v531;
    v52 = v544;
    *v544 = sub_1A5131290;
    v52[1] = v51;
    swift_retain();
    v53 = v532;
    v54 = v544;
    v544[2] = sub_1A5131290;
    v54[3] = v53;
    swift_retain();
    v55 = v533;
    v56 = v544;
    v544[4] = sub_1A5131460;
    v56[5] = v55;
    swift_retain();
    v57 = v534;
    v58 = v544;
    v544[6] = sub_1A5131290;
    v58[7] = v57;
    swift_retain();
    v59 = v535;
    v60 = v544;
    v544[8] = sub_1A5131290;
    v60[9] = v59;
    swift_retain();
    v61 = v536;
    v62 = v544;
    v544[10] = sub_1A51315FC;
    v62[11] = v61;
    swift_retain();
    v63 = v537;
    v64 = v544;
    v544[12] = sub_1A5131290;
    v64[13] = v63;
    swift_retain();
    v65 = v538;
    v66 = v544;
    v544[14] = sub_1A5131290;
    v66[15] = v65;
    swift_retain();
    v67 = v539;
    v68 = v544;
    v544[16] = sub_1A5131460;
    v68[17] = v67;
    swift_retain();
    v69 = v540;
    v70 = v544;
    v544[18] = sub_1A5131290;
    v70[19] = v69;
    swift_retain();
    v71 = v541;
    v72 = v544;
    v544[20] = sub_1A5131290;
    v72[21] = v71;
    swift_retain();
    v73 = v543;
    v74 = v544;
    v544[22] = sub_1A513199C;
    v74[23] = v73;
    sub_1A5113324();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v546, (os_log_type_t)v547))
    {
      v75 = v560;
      v504 = (uint8_t *)sub_1A594C348();
      v502 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
      v503 = 0;
      v505 = sub_1A5130D14(0);
      v506 = sub_1A5130D14(v503);
      v507 = &v604;
      v604 = v504;
      v508 = &v603;
      v603 = v505;
      v509 = &v602;
      v602 = v506;
      sub_1A5130D6C(0, &v604);
      sub_1A5130D6C(4, v507);
      v600 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
      v601 = v531;
      sub_1A5130D80(&v600, (uint64_t)v507, (uint64_t)v508, (uint64_t)v509);
      v510 = v75;
      if (v75)
      {
        __break(1u);
      }
      else
      {
        v600 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v601 = v532;
        sub_1A5130D80(&v600, (uint64_t)&v604, (uint64_t)&v603, (uint64_t)&v602);
        v501 = 0;
        v600 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131460;
        v601 = v533;
        sub_1A5130D80(&v600, (uint64_t)&v604, (uint64_t)&v603, (uint64_t)&v602);
        v500 = 0;
        v600 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v601 = v534;
        sub_1A5130D80(&v600, (uint64_t)&v604, (uint64_t)&v603, (uint64_t)&v602);
        v499 = 0;
        v600 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v601 = v535;
        sub_1A5130D80(&v600, (uint64_t)&v604, (uint64_t)&v603, (uint64_t)&v602);
        v498 = 0;
        v600 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A51315FC;
        v601 = v536;
        sub_1A5130D80(&v600, (uint64_t)&v604, (uint64_t)&v603, (uint64_t)&v602);
        v497 = 0;
        v600 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v601 = v537;
        sub_1A5130D80(&v600, (uint64_t)&v604, (uint64_t)&v603, (uint64_t)&v602);
        v496 = 0;
        v600 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v601 = v538;
        sub_1A5130D80(&v600, (uint64_t)&v604, (uint64_t)&v603, (uint64_t)&v602);
        v495 = 0;
        v600 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131460;
        v601 = v539;
        sub_1A5130D80(&v600, (uint64_t)&v604, (uint64_t)&v603, (uint64_t)&v602);
        v494 = 0;
        v600 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v601 = v540;
        sub_1A5130D80(&v600, (uint64_t)&v604, (uint64_t)&v603, (uint64_t)&v602);
        v493 = 0;
        v600 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v601 = v541;
        sub_1A5130D80(&v600, (uint64_t)&v604, (uint64_t)&v603, (uint64_t)&v602);
        v492 = 0;
        v600 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A513199C;
        v601 = v543;
        sub_1A5130D80(&v600, (uint64_t)&v604, (uint64_t)&v603, (uint64_t)&v602);
        _os_log_impl(&dword_1A4F90000, v546, (os_log_type_t)v547, "[%.*hhx-%.*X] EMActivity: Unable to get Inbox mailbox for account status.", v504, v519);
        v491 = 0;
        sub_1A5130DC4(v505);
        sub_1A5130DC4(v506);
        sub_1A594C330();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
      }
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }

    (*(void (**)(char *, uint64_t))(v570 + 8))(v578, v569);
    return (id)v579;
  }
  v552 = v557;
  v550 = v557;
  v599 = v557;
  v551 = objc_msgSend(v557, sel_objectID);
  if (!v551)
  {

    goto LABEL_9;
  }
  v549 = v551;
  v548 = v551;
  v598 = v551;
  v26 = v550;
  v646 = v550;
  v27 = v548;
  v645 = v548;

LABEL_27:
  v411 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE79A280);
  v412 = sub_1A594CD14();
  v410 = v139;
  sub_1A5135634(MEMORY[0x1E0D1DB88], v139);
  v409 = v645;
  v140 = v645;
  v413 = 0;
  v141 = sub_1A5135668();
  v142 = v409;
  v143 = v410;
  v410[4] = v141;
  v143[1] = v142;
  sub_1A5135634(MEMORY[0x1E0D1DB78], v143 + 5);
  sub_1A512777C();
  sub_1A51279E8();
  v144 = v410;
  v410[9] = MEMORY[0x1E0DEB418];
  v144[6] = v145;
  sub_1A5135634(MEMORY[0x1E0D1DB90], v144 + 10);
  v146 = v410;
  v147 = v412;
  v410[14] = MEMORY[0x1E0DEAFA0];
  *((_BYTE *)v146 + 88) = 1;
  sub_1A5113324();
  v415 = v147;
  v414 = type metadata accessor for EMActivityUserInfoKey();
  v416 = sub_1A513576C();
  v632 = sub_1A594AFEC();
  if ((v597 & 1) == 0)
  {
    v408 = v646;
    v148 = v646;
    sub_1A5127A04(v562);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v564 + 48))(v562, 1, v563) != 1)
    {
      v150 = v566;
      (*(void (**)(char *, uint64_t, uint64_t))(v564 + 32))(v568, v562, v563);

      v403 = (id)*MEMORY[0x1E0D1DB80];
      v151 = v403;
      (*(void (**)(char *, char *, uint64_t))(v564 + 16))(v150, v568, v563);
      v404 = sub_1A594A074();
      v152 = sub_1A51361FC();
      v406 = v609;
      v609[3] = v152;
      v609[0] = v404;
      v405 = &v608;
      v608 = v403;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7992F8);
      sub_1A594B124();
      v407 = *(void (**)(char *, uint64_t))(v564 + 8);
      v407(v566, v563);
      v407(v568, v563);
    }
    else
    {
      sub_1A513618C(v562);

    }
  }
  v396 = v632;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v397 = (id)sub_1A594AFBC();
  swift_bridgeObjectRelease();
  v398 = objc_msgSend(v591, sel_startActivityOfType_userInfo_, 1, v397);

  v631 = v398;
  v401 = sub_1A51272B8();
  v399 = v153;
  v400 = v154;
  v402 = objc_msgSend(v398, sel_objectID);
  sub_1A5127404(v401, v399, v400 & 1, (uint64_t)v402);

  if ((v597 & 1) == 0)
  {
    v395 = v596;
    v392 = v596;
    v630 = v596;
    v393 = v628;
    v628[0] = v596;
    v394 = &v627;
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE79B720);
    sub_1A594BC40();
    swift_endAccess();
    v625 = v628[1];
    v626 = v629 & 1;
    v391 = (v629 & 1) == 0;
    v624 = v391;
    if (v391)
    {
      v155 = v574;
      v348 = &OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger;
      sub_1A5112AC0(v559 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger, v584);
      (*(void (**)(char *, uint64_t, uint64_t))(v570 + 16))(v155, v584, v569);
      sub_1A5112B28(v584);
      swift_retain();
      swift_retain();
      sub_1A5112AC0(v559 + *v348, v588);
      v156 = (unsigned __int8 *)(v588 + *(int *)(v580 + 20));
      v349 = *v156;
      v350 = *((_DWORD *)v156 + 1);
      sub_1A5112B28(v588);
      swift_release();
      v352 = 24;
      v368 = 7;
      v157 = swift_allocObject();
      v158 = v350;
      v359 = v157;
      *(_BYTE *)(v157 + 16) = v349;
      *(_DWORD *)(v157 + 20) = v158;
      sub_1A5130E98();
      sub_1A5130E98();
      sub_1A5130E98();
      v159 = swift_allocObject();
      v160 = v350;
      v351 = v159;
      *(_BYTE *)(v159 + 16) = v349;
      *(_DWORD *)(v159 + 20) = v160;
      swift_retain();
      v367 = 32;
      v161 = swift_allocObject();
      v162 = v351;
      v364 = v161;
      *(_QWORD *)(v161 + 16) = sub_1A5130EE0;
      *(_QWORD *)(v161 + 24) = v162;
      sub_1A5130E98();
      sub_1A5130E98();
      swift_release();
      swift_release();
      v353 = swift_allocObject();
      *(_QWORD *)(v353 + 16) = v392;
      swift_retain();
      v163 = swift_allocObject();
      v164 = v353;
      v369 = v163;
      *(_QWORD *)(v163 + 16) = sub_1A5134394;
      *(_QWORD *)(v163 + 24) = v164;
      swift_release();
      v389 = sub_1A594A74C();
      v390 = sub_1A594C030();
      v356 = &v615;
      v615 = 33;
      v354 = sub_1A5130F74();
      v355 = sub_1A5130FDC();
      sub_1A5131044();
      sub_1A594B880();
      v357 = v616;
      v366 = 17;
      v371 = swift_allocObject();
      v361 = 16;
      *(_BYTE *)(v371 + 16) = 16;
      v372 = swift_allocObject();
      v363 = 4;
      *(_BYTE *)(v372 + 16) = 4;
      v165 = swift_allocObject();
      v358 = v165;
      *(_QWORD *)(v165 + 16) = sub_1A5130E8C;
      *(_QWORD *)(v165 + 24) = 0;
      v166 = swift_allocObject();
      v167 = v358;
      v373 = v166;
      *(_QWORD *)(v166 + 16) = sub_1A51312FC;
      *(_QWORD *)(v166 + 24) = v167;
      v374 = swift_allocObject();
      *(_BYTE *)(v374 + 16) = 0;
      v375 = swift_allocObject();
      *(_BYTE *)(v375 + 16) = 1;
      v168 = swift_allocObject();
      v169 = v359;
      v360 = v168;
      *(_QWORD *)(v168 + 16) = sub_1A5130E6C;
      *(_QWORD *)(v168 + 24) = v169;
      v170 = swift_allocObject();
      v171 = v360;
      v376 = v170;
      *(_QWORD *)(v170 + 16) = sub_1A51315B4;
      *(_QWORD *)(v170 + 24) = v171;
      v377 = swift_allocObject();
      *(_BYTE *)(v377 + 16) = v361;
      v378 = swift_allocObject();
      *(_BYTE *)(v378 + 16) = v363;
      v172 = swift_allocObject();
      v362 = v172;
      *(_QWORD *)(v172 + 16) = sub_1A5130F68;
      *(_QWORD *)(v172 + 24) = 0;
      v173 = swift_allocObject();
      v174 = v362;
      v379 = v173;
      *(_QWORD *)(v173 + 16) = sub_1A51312FC;
      *(_QWORD *)(v173 + 24) = v174;
      v380 = swift_allocObject();
      *(_BYTE *)(v380 + 16) = 0;
      v381 = swift_allocObject();
      *(_BYTE *)(v381 + 16) = v363;
      v175 = swift_allocObject();
      v176 = v364;
      v365 = v175;
      *(_QWORD *)(v175 + 16) = sub_1A5130F5C;
      *(_QWORD *)(v175 + 24) = v176;
      v177 = swift_allocObject();
      v178 = v365;
      v382 = v177;
      *(_QWORD *)(v177 + 16) = sub_1A5131954;
      *(_QWORD *)(v177 + 24) = v178;
      v383 = swift_allocObject();
      *(_BYTE *)(v383 + 16) = 32;
      v384 = swift_allocObject();
      *(_BYTE *)(v384 + 16) = 8;
      v179 = swift_allocObject();
      v180 = v369;
      v370 = v179;
      *(_QWORD *)(v179 + 16) = sub_1A51343D8;
      *(_QWORD *)(v179 + 24) = v180;
      v181 = swift_allocObject();
      v182 = v370;
      v386 = v181;
      *(_QWORD *)(v181 + 16) = sub_1A5130F5C;
      *(_QWORD *)(v181 + 24) = v182;
      v388 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A48D0);
      v385 = sub_1A594CD14();
      v387 = v183;
      swift_retain();
      v184 = v371;
      v185 = v387;
      *v387 = sub_1A5131290;
      v185[1] = v184;
      swift_retain();
      v186 = v372;
      v187 = v387;
      v387[2] = sub_1A5131290;
      v187[3] = v186;
      swift_retain();
      v188 = v373;
      v189 = v387;
      v387[4] = sub_1A5131460;
      v189[5] = v188;
      swift_retain();
      v190 = v374;
      v191 = v387;
      v387[6] = sub_1A5131290;
      v191[7] = v190;
      swift_retain();
      v192 = v375;
      v193 = v387;
      v387[8] = sub_1A5131290;
      v193[9] = v192;
      swift_retain();
      v194 = v376;
      v195 = v387;
      v387[10] = sub_1A51315FC;
      v195[11] = v194;
      swift_retain();
      v196 = v377;
      v197 = v387;
      v387[12] = sub_1A5131290;
      v197[13] = v196;
      swift_retain();
      v198 = v378;
      v199 = v387;
      v387[14] = sub_1A5131290;
      v199[15] = v198;
      swift_retain();
      v200 = v379;
      v201 = v387;
      v387[16] = sub_1A5131460;
      v201[17] = v200;
      swift_retain();
      v202 = v380;
      v203 = v387;
      v387[18] = sub_1A5131290;
      v203[19] = v202;
      swift_retain();
      v204 = v381;
      v205 = v387;
      v387[20] = sub_1A5131290;
      v205[21] = v204;
      swift_retain();
      v206 = v382;
      v207 = v387;
      v387[22] = sub_1A513199C;
      v207[23] = v206;
      swift_retain();
      v208 = v383;
      v209 = v387;
      v387[24] = sub_1A5131290;
      v209[25] = v208;
      swift_retain();
      v210 = v384;
      v211 = v387;
      v387[26] = sub_1A5131290;
      v211[27] = v210;
      swift_retain();
      v212 = v386;
      v213 = v387;
      v387[28] = sub_1A5133578;
      v213[29] = v212;
      sub_1A5113324();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v389, (os_log_type_t)v390))
      {
        v214 = v560;
        v341 = (uint8_t *)sub_1A594C348();
        v340 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
        v342 = sub_1A5130D14(0);
        v343 = sub_1A5130D14(1);
        v344 = &v614;
        v614 = v341;
        v345 = &v613;
        v613 = v342;
        v346 = &v612;
        v612 = v343;
        sub_1A5130D6C(2, &v614);
        sub_1A5130D6C(5, v344);
        v610 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v611 = v371;
        sub_1A5130D80(&v610, (uint64_t)v344, (uint64_t)v345, (uint64_t)v346);
        v347 = v214;
        if (v214)
        {
          __break(1u);
        }
        else
        {
          v610 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v611 = v372;
          sub_1A5130D80(&v610, (uint64_t)&v614, (uint64_t)&v613, (uint64_t)&v612);
          v339 = 0;
          v610 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131460;
          v611 = v373;
          sub_1A5130D80(&v610, (uint64_t)&v614, (uint64_t)&v613, (uint64_t)&v612);
          v338 = 0;
          v610 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v611 = v374;
          sub_1A5130D80(&v610, (uint64_t)&v614, (uint64_t)&v613, (uint64_t)&v612);
          v337 = 0;
          v610 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v611 = v375;
          sub_1A5130D80(&v610, (uint64_t)&v614, (uint64_t)&v613, (uint64_t)&v612);
          v336 = 0;
          v610 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A51315FC;
          v611 = v376;
          sub_1A5130D80(&v610, (uint64_t)&v614, (uint64_t)&v613, (uint64_t)&v612);
          v335 = 0;
          v610 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v611 = v377;
          sub_1A5130D80(&v610, (uint64_t)&v614, (uint64_t)&v613, (uint64_t)&v612);
          v334 = 0;
          v610 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v611 = v378;
          sub_1A5130D80(&v610, (uint64_t)&v614, (uint64_t)&v613, (uint64_t)&v612);
          v333 = 0;
          v610 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131460;
          v611 = v379;
          sub_1A5130D80(&v610, (uint64_t)&v614, (uint64_t)&v613, (uint64_t)&v612);
          v332 = 0;
          v610 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v611 = v380;
          sub_1A5130D80(&v610, (uint64_t)&v614, (uint64_t)&v613, (uint64_t)&v612);
          v331 = 0;
          v610 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v611 = v381;
          sub_1A5130D80(&v610, (uint64_t)&v614, (uint64_t)&v613, (uint64_t)&v612);
          v330 = 0;
          v610 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A513199C;
          v611 = v382;
          sub_1A5130D80(&v610, (uint64_t)&v614, (uint64_t)&v613, (uint64_t)&v612);
          v329 = 0;
          v610 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v611 = v383;
          sub_1A5130D80(&v610, (uint64_t)&v614, (uint64_t)&v613, (uint64_t)&v612);
          v328 = 0;
          v610 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v611 = v384;
          sub_1A5130D80(&v610, (uint64_t)&v614, (uint64_t)&v613, (uint64_t)&v612);
          v327 = 0;
          v610 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5133578;
          v611 = v386;
          sub_1A5130D80(&v610, (uint64_t)&v614, (uint64_t)&v613, (uint64_t)&v612);
          _os_log_impl(&dword_1A4F90000, v389, (os_log_type_t)v390, "[%.*hhx-%.*X] Created EMActivity for '%s'. Removed pending.", v341, v357);
          sub_1A5130DC4(v342);
          sub_1A5130DC4(v343);
          sub_1A594C330();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
        }
      }
      else
      {
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
      }

      (*(void (**)(char *, uint64_t))(v570 + 8))(v574, v569);
    }
    else
    {
      v215 = v572;
      v284 = &OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger;
      sub_1A5112AC0(v559 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger, v582);
      (*(void (**)(char *, uint64_t, uint64_t))(v570 + 16))(v215, v582, v569);
      sub_1A5112B28(v582);
      swift_retain();
      swift_retain();
      sub_1A5112AC0(v559 + *v284, v588);
      v216 = (unsigned __int8 *)(v588 + *(int *)(v580 + 20));
      v285 = *v216;
      v286 = *((_DWORD *)v216 + 1);
      sub_1A5112B28(v588);
      swift_release();
      v288 = 24;
      v304 = 7;
      v217 = swift_allocObject();
      v218 = v286;
      v295 = v217;
      *(_BYTE *)(v217 + 16) = v285;
      *(_DWORD *)(v217 + 20) = v218;
      sub_1A5130E98();
      sub_1A5130E98();
      sub_1A5130E98();
      v219 = swift_allocObject();
      v220 = v286;
      v287 = v219;
      *(_BYTE *)(v219 + 16) = v285;
      *(_DWORD *)(v219 + 20) = v220;
      swift_retain();
      v303 = 32;
      v221 = swift_allocObject();
      v222 = v287;
      v300 = v221;
      *(_QWORD *)(v221 + 16) = sub_1A5130EE0;
      *(_QWORD *)(v221 + 24) = v222;
      sub_1A5130E98();
      sub_1A5130E98();
      swift_release();
      swift_release();
      v289 = swift_allocObject();
      *(_QWORD *)(v289 + 16) = v392;
      swift_retain();
      v223 = swift_allocObject();
      v224 = v289;
      v305 = v223;
      *(_QWORD *)(v223 + 16) = sub_1A5134394;
      *(_QWORD *)(v223 + 24) = v224;
      swift_release();
      v325 = sub_1A594A74C();
      v326 = sub_1A594C030();
      v292 = &v622;
      v622 = 33;
      v290 = sub_1A5130F74();
      v291 = sub_1A5130FDC();
      sub_1A5131044();
      sub_1A594B880();
      v293 = v623;
      v302 = 17;
      v307 = swift_allocObject();
      v297 = 16;
      *(_BYTE *)(v307 + 16) = 16;
      v308 = swift_allocObject();
      v299 = 4;
      *(_BYTE *)(v308 + 16) = 4;
      v225 = swift_allocObject();
      v294 = v225;
      *(_QWORD *)(v225 + 16) = sub_1A5130E8C;
      *(_QWORD *)(v225 + 24) = 0;
      v226 = swift_allocObject();
      v227 = v294;
      v309 = v226;
      *(_QWORD *)(v226 + 16) = sub_1A51312FC;
      *(_QWORD *)(v226 + 24) = v227;
      v310 = swift_allocObject();
      *(_BYTE *)(v310 + 16) = 0;
      v311 = swift_allocObject();
      *(_BYTE *)(v311 + 16) = 1;
      v228 = swift_allocObject();
      v229 = v295;
      v296 = v228;
      *(_QWORD *)(v228 + 16) = sub_1A5130E6C;
      *(_QWORD *)(v228 + 24) = v229;
      v230 = swift_allocObject();
      v231 = v296;
      v312 = v230;
      *(_QWORD *)(v230 + 16) = sub_1A51315B4;
      *(_QWORD *)(v230 + 24) = v231;
      v313 = swift_allocObject();
      *(_BYTE *)(v313 + 16) = v297;
      v314 = swift_allocObject();
      *(_BYTE *)(v314 + 16) = v299;
      v232 = swift_allocObject();
      v298 = v232;
      *(_QWORD *)(v232 + 16) = sub_1A5130F68;
      *(_QWORD *)(v232 + 24) = 0;
      v233 = swift_allocObject();
      v234 = v298;
      v315 = v233;
      *(_QWORD *)(v233 + 16) = sub_1A51312FC;
      *(_QWORD *)(v233 + 24) = v234;
      v316 = swift_allocObject();
      *(_BYTE *)(v316 + 16) = 0;
      v317 = swift_allocObject();
      *(_BYTE *)(v317 + 16) = v299;
      v235 = swift_allocObject();
      v236 = v300;
      v301 = v235;
      *(_QWORD *)(v235 + 16) = sub_1A5130F5C;
      *(_QWORD *)(v235 + 24) = v236;
      v237 = swift_allocObject();
      v238 = v301;
      v318 = v237;
      *(_QWORD *)(v237 + 16) = sub_1A5131954;
      *(_QWORD *)(v237 + 24) = v238;
      v319 = swift_allocObject();
      *(_BYTE *)(v319 + 16) = 32;
      v320 = swift_allocObject();
      *(_BYTE *)(v320 + 16) = 8;
      v239 = swift_allocObject();
      v240 = v305;
      v306 = v239;
      *(_QWORD *)(v239 + 16) = sub_1A51343D8;
      *(_QWORD *)(v239 + 24) = v240;
      v241 = swift_allocObject();
      v242 = v306;
      v322 = v241;
      *(_QWORD *)(v241 + 16) = sub_1A5130F5C;
      *(_QWORD *)(v241 + 24) = v242;
      v324 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A48D0);
      v321 = sub_1A594CD14();
      v323 = v243;
      swift_retain();
      v244 = v307;
      v245 = v323;
      *v323 = sub_1A5131290;
      v245[1] = v244;
      swift_retain();
      v246 = v308;
      v247 = v323;
      v323[2] = sub_1A5131290;
      v247[3] = v246;
      swift_retain();
      v248 = v309;
      v249 = v323;
      v323[4] = sub_1A5131460;
      v249[5] = v248;
      swift_retain();
      v250 = v310;
      v251 = v323;
      v323[6] = sub_1A5131290;
      v251[7] = v250;
      swift_retain();
      v252 = v311;
      v253 = v323;
      v323[8] = sub_1A5131290;
      v253[9] = v252;
      swift_retain();
      v254 = v312;
      v255 = v323;
      v323[10] = sub_1A51315FC;
      v255[11] = v254;
      swift_retain();
      v256 = v313;
      v257 = v323;
      v323[12] = sub_1A5131290;
      v257[13] = v256;
      swift_retain();
      v258 = v314;
      v259 = v323;
      v323[14] = sub_1A5131290;
      v259[15] = v258;
      swift_retain();
      v260 = v315;
      v261 = v323;
      v323[16] = sub_1A5131460;
      v261[17] = v260;
      swift_retain();
      v262 = v316;
      v263 = v323;
      v323[18] = sub_1A5131290;
      v263[19] = v262;
      swift_retain();
      v264 = v317;
      v265 = v323;
      v323[20] = sub_1A5131290;
      v265[21] = v264;
      swift_retain();
      v266 = v318;
      v267 = v323;
      v323[22] = sub_1A513199C;
      v267[23] = v266;
      swift_retain();
      v268 = v319;
      v269 = v323;
      v323[24] = sub_1A5131290;
      v269[25] = v268;
      swift_retain();
      v270 = v320;
      v271 = v323;
      v323[26] = sub_1A5131290;
      v271[27] = v270;
      swift_retain();
      v272 = v322;
      v273 = v323;
      v323[28] = sub_1A5133578;
      v273[29] = v272;
      sub_1A5113324();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v325, (os_log_type_t)v326))
      {
        v274 = v560;
        v277 = (uint8_t *)sub_1A594C348();
        v276[13] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
        v278 = sub_1A5130D14(0);
        v279 = sub_1A5130D14(1);
        v280 = &v621;
        v621 = v277;
        v281 = &v620;
        v620 = v278;
        v282 = &v619;
        v619 = v279;
        sub_1A5130D6C(2, &v621);
        sub_1A5130D6C(5, v280);
        v617 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v618 = v307;
        sub_1A5130D80(&v617, (uint64_t)v280, (uint64_t)v281, (uint64_t)v282);
        v283 = v274;
        if (v274)
        {
          __break(1u);
        }
        else
        {
          v617 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v618 = v308;
          sub_1A5130D80(&v617, (uint64_t)&v621, (uint64_t)&v620, (uint64_t)&v619);
          v276[12] = 0;
          v617 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131460;
          v618 = v309;
          sub_1A5130D80(&v617, (uint64_t)&v621, (uint64_t)&v620, (uint64_t)&v619);
          v276[11] = 0;
          v617 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v618 = v310;
          sub_1A5130D80(&v617, (uint64_t)&v621, (uint64_t)&v620, (uint64_t)&v619);
          v276[10] = 0;
          v617 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v618 = v311;
          sub_1A5130D80(&v617, (uint64_t)&v621, (uint64_t)&v620, (uint64_t)&v619);
          v276[9] = 0;
          v617 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A51315FC;
          v618 = v312;
          sub_1A5130D80(&v617, (uint64_t)&v621, (uint64_t)&v620, (uint64_t)&v619);
          v276[8] = 0;
          v617 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v618 = v313;
          sub_1A5130D80(&v617, (uint64_t)&v621, (uint64_t)&v620, (uint64_t)&v619);
          v276[7] = 0;
          v617 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v618 = v314;
          sub_1A5130D80(&v617, (uint64_t)&v621, (uint64_t)&v620, (uint64_t)&v619);
          v276[6] = 0;
          v617 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131460;
          v618 = v315;
          sub_1A5130D80(&v617, (uint64_t)&v621, (uint64_t)&v620, (uint64_t)&v619);
          v276[5] = 0;
          v617 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v618 = v316;
          sub_1A5130D80(&v617, (uint64_t)&v621, (uint64_t)&v620, (uint64_t)&v619);
          v276[4] = 0;
          v617 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v618 = v317;
          sub_1A5130D80(&v617, (uint64_t)&v621, (uint64_t)&v620, (uint64_t)&v619);
          v276[3] = 0;
          v617 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A513199C;
          v618 = v318;
          sub_1A5130D80(&v617, (uint64_t)&v621, (uint64_t)&v620, (uint64_t)&v619);
          v276[2] = 0;
          v617 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v618 = v319;
          sub_1A5130D80(&v617, (uint64_t)&v621, (uint64_t)&v620, (uint64_t)&v619);
          v276[1] = 0;
          v617 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v618 = v320;
          sub_1A5130D80(&v617, (uint64_t)&v621, (uint64_t)&v620, (uint64_t)&v619);
          v276[0] = 0;
          v617 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5133578;
          v618 = v322;
          sub_1A5130D80(&v617, (uint64_t)&v621, (uint64_t)&v620, (uint64_t)&v619);
          _os_log_impl(&dword_1A4F90000, v325, (os_log_type_t)v326, "[%.*hhx-%.*X] Created EMActivity for '%s'.", v277, v293);
          sub_1A5130DC4(v278);
          sub_1A5130DC4(v279);
          sub_1A594C330();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
        }
      }
      else
      {
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
      }

      (*(void (**)(char *, uint64_t))(v570 + 8))(v572, v569);
    }
  }
  sub_1A5110C34();

  return v398;
}

void sub_1A511F878(uint64_t *a1, id a2, uint64_t a3)
{
  id v3;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;

  v8 = 0;
  v7 = 0;
  v6 = 0;
  v8 = *a1;
  v7 = a2;
  v6 = a3;
  v5 = v8;
  v3 = a2;
  sub_1A5118610(&v5, a2);

}

id *sub_1A511F8EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t (*a4)(uint64_t *, uint64_t, id)@<X3>, uint64_t a5@<X4>, void (*a6)(uint64_t *)@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  id *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  int v33;
  unsigned __int8 *v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unsigned __int8 *v109;
  uint64_t v110;
  int v111;
  uint64_t v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  uint64_t v141;
  _QWORD *v142;
  uint64_t v143;
  _QWORD *v144;
  uint64_t v145;
  _QWORD *v146;
  uint64_t v147;
  _QWORD *v148;
  uint64_t v149;
  _QWORD *v150;
  uint64_t v151;
  _QWORD *v152;
  uint64_t v153;
  _QWORD *v154;
  uint64_t v155;
  _QWORD *v156;
  uint64_t v157;
  _QWORD *v158;
  uint64_t v159;
  _QWORD *v160;
  uint64_t v161;
  _QWORD *v162;
  uint64_t v163;
  _QWORD *v164;
  uint64_t v165;
  _QWORD *v166;
  uint64_t v167;
  _QWORD *v168;
  uint64_t v169;
  _QWORD *v170;
  uint64_t v171;
  _QWORD *v172;
  uint64_t v173;
  _QWORD *v174;
  uint64_t v175;
  _QWORD *v176;
  uint64_t v177;
  uint64_t v178;
  id v179;
  char *v180;
  unsigned __int8 *v181;
  uint64_t v182;
  int v183;
  uint64_t v184;
  int v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  _QWORD *v208;
  uint64_t v209;
  _QWORD *v210;
  uint64_t v211;
  _QWORD *v212;
  uint64_t v213;
  _QWORD *v214;
  uint64_t v215;
  _QWORD *v216;
  uint64_t v217;
  _QWORD *v218;
  uint64_t v219;
  _QWORD *v220;
  uint64_t v221;
  _QWORD *v222;
  uint64_t v223;
  _QWORD *v224;
  uint64_t v225;
  _QWORD *v226;
  uint64_t v227;
  _QWORD *v228;
  uint64_t v229;
  _QWORD *v230;
  uint64_t v231;
  _QWORD *v232;
  uint64_t v233;
  _QWORD *v234;
  uint64_t v235;
  _QWORD *v236;
  uint64_t v237;
  _QWORD *v238;
  uint64_t v239;
  uint64_t v240;
  id v241;
  id v242;
  unsigned __int8 *v243;
  uint64_t v244;
  int v245;
  uint64_t v246;
  int v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  _QWORD *v270;
  uint64_t v271;
  _QWORD *v272;
  uint64_t v273;
  _QWORD *v274;
  uint64_t v275;
  _QWORD *v276;
  uint64_t v277;
  _QWORD *v278;
  uint64_t v279;
  _QWORD *v280;
  uint64_t v281;
  _QWORD *v282;
  uint64_t v283;
  _QWORD *v284;
  uint64_t v285;
  _QWORD *v286;
  uint64_t v287;
  _QWORD *v288;
  uint64_t v289;
  _QWORD *v290;
  uint64_t v291;
  _QWORD *v292;
  uint64_t v293;
  _QWORD *v294;
  uint64_t v295;
  _QWORD *v296;
  uint64_t v297;
  _QWORD *v298;
  uint64_t v299;
  _QWORD *v300;
  uint64_t v301;
  void *v302;
  void *v303;
  void *v304;
  id v305;
  void *v307[13];
  void *v308;
  uint64_t v309;
  uint8_t *v310;
  uint64_t v311;
  uint64_t v312;
  _BYTE **v313;
  uint64_t *v314;
  uint64_t *v315;
  uint64_t v316;
  int v317;
  int v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  unint64_t v323;
  unint64_t v324;
  uint64_t *v325;
  uint32_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  int v330;
  uint64_t v331;
  int v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  _QWORD *v356;
  uint64_t v357;
  NSObject *v358;
  int v359;
  uint64_t v360;
  id v361;
  id v362;
  id v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint8_t *v378;
  uint64_t v379;
  uint64_t v380;
  _BYTE **v381;
  uint64_t *v382;
  uint64_t *v383;
  uint64_t v384;
  uint64_t *v385;
  id v386;
  int v387;
  int v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  unint64_t v393;
  unint64_t v394;
  uint64_t *v395;
  uint32_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  int v400;
  uint64_t v401;
  int v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  _QWORD *v426;
  uint64_t v427;
  NSObject *v428;
  int v429;
  uint64_t v430;
  id v431;
  id v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint8_t *v450;
  uint64_t v451;
  uint64_t v452;
  _BYTE **v453;
  uint64_t *v454;
  uint64_t *v455;
  uint64_t v456;
  int v457;
  int v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  unint64_t v463;
  unint64_t v464;
  uint64_t *v465;
  uint32_t v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  int v470;
  uint64_t v471;
  int v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  int v477;
  uint64_t v478;
  int v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  _QWORD *v503;
  uint64_t v504;
  NSObject *v505;
  int v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  uint64_t *v511;
  uint64_t State;
  uint64_t *v513;
  id v514;
  uint64_t v515;
  uint64_t v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  uint64_t v535;
  uint64_t v536;
  uint8_t *v537;
  uint64_t v538;
  uint64_t v539;
  _BYTE **v540;
  uint64_t *v541;
  uint64_t *v542;
  uint64_t v543;
  int v544;
  int v545;
  uint64_t v546;
  uint64_t v547;
  uint64_t v548;
  uint64_t v549;
  unint64_t v550;
  unint64_t v551;
  uint64_t *v552;
  uint32_t v553;
  uint64_t v554;
  int v555;
  uint64_t v556;
  uint64_t v557;
  int v558;
  uint64_t v559;
  int v560;
  uint64_t v561;
  uint64_t v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  int v566;
  uint64_t v567;
  uint64_t v568;
  uint64_t v569;
  uint64_t v570;
  uint64_t v571;
  uint64_t v572;
  uint64_t v573;
  uint64_t v574;
  uint64_t v575;
  uint64_t v576;
  uint64_t v577;
  uint64_t v578;
  uint64_t v579;
  uint64_t v580;
  uint64_t v581;
  uint64_t v582;
  uint64_t v583;
  uint64_t v584;
  uint64_t v585;
  uint64_t v586;
  uint64_t v587;
  uint64_t v588;
  uint64_t v589;
  _QWORD *v590;
  uint64_t v591;
  NSObject *v592;
  int v593;
  uint64_t v594;
  uint64_t v595;
  _BOOL4 v596;
  int v597;
  uint64_t v598;
  unint64_t v599;
  uint64_t v600;
  unint64_t v601;
  int v602;
  int v603;
  void *v604;
  id v605;
  void *v606;
  id v607;
  _QWORD *v608;
  uint64_t v609;
  uint64_t v610;
  unint64_t v611;
  uint64_t v612;
  unint64_t v613;
  uint64_t v614;
  unint64_t v615;
  uint64_t v616;
  uint64_t v617;
  uint64_t v618;
  uint64_t v619;
  unint64_t v620;
  char *v621;
  unint64_t v622;
  char *v623;
  unint64_t v624;
  char *v625;
  unint64_t v626;
  char *v627;
  uint64_t v628;
  id v629;
  uint64_t (*v630)(uint64_t *, uint64_t, id);
  uint64_t v631;
  void (*v632)(uint64_t *);
  uint64_t v633;
  uint64_t v634;
  uint64_t v635;
  unint64_t v636;
  id *v637;
  uint64_t v638;
  int v639;
  id v640;
  __n128 v641;
  uint64_t (*v642)(uint64_t, uint64_t, uint64_t);
  uint64_t v643;
  uint64_t v644;
  uint64_t v645;
  _BYTE *v646;
  uint64_t v647;
  uint32_t v648;
  uint64_t v649;
  uint64_t (*v650)(uint64_t, uint64_t, uint64_t);
  uint64_t v651;
  uint64_t v652;
  uint64_t v653;
  _BYTE *v654;
  uint64_t v655;
  uint32_t v656;
  uint64_t v657;
  uint64_t v658;
  uint64_t v659;
  uint64_t v660;
  uint64_t v661;
  __n128 v662;
  char v663;
  uint64_t v664;
  uint64_t v665;
  char v666;
  unint64_t v667;
  unint64_t v668;
  char v669;
  uint64_t v670;
  uint64_t v671;
  char v672;
  uint64_t (*v673)(uint64_t, uint64_t, uint64_t);
  uint64_t v674;
  uint64_t v675;
  uint64_t v676;
  _BYTE *v677;
  uint64_t v678;
  uint32_t v679;
  uint64_t v680;
  uint64_t v681;
  uint64_t (*v682)(uint64_t, uint64_t, uint64_t);
  uint64_t v683;
  uint64_t v684;
  uint64_t v685;
  _BYTE *v686;
  uint64_t v687;
  uint32_t v688;
  uint64_t v689;
  void *v690;
  id v691;
  uint64_t v692;
  char v693;
  id *v694;
  uint64_t v695;
  uint64_t v696;
  uint64_t v697;
  uint64_t v698;
  uint64_t v699;
  uint64_t v700;
  uint64_t v701;
  uint64_t v702;
  char v703;
  char *v704;

  v608 = a9;
  v635 = a1;
  v628 = a2;
  v629 = a3;
  v630 = a4;
  v631 = a5;
  v632 = a6;
  v633 = a7;
  v634 = a8;
  v704 = 0;
  v702 = 0;
  v703 = 0;
  v701 = 0;
  v700 = 0;
  v698 = 0;
  v699 = 0;
  v696 = 0;
  v697 = 0;
  v695 = 0;
  v694 = 0;
  v691 = 0;
  v690 = 0;
  v689 = 0;
  v609 = 0;
  v681 = 0;
  v670 = 0;
  v671 = 0;
  v672 = 0;
  v667 = 0;
  v668 = 0;
  v669 = 0;
  v661 = 0;
  v660 = 0;
  v657 = 0;
  v649 = 0;
  v617 = 0;
  v610 = _s6LoggerVMa();
  v611 = (*(_QWORD *)(*(_QWORD *)(v610 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](0);
  v612 = (uint64_t)v307 - v611;
  v613 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v11);
  v614 = (uint64_t)v307 - v613;
  v615 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v13);
  v616 = (uint64_t)v307 - v615;
  v618 = sub_1A594A764();
  v619 = *(_QWORD *)(v618 - 8);
  v620 = (*(_QWORD *)(v619 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v617);
  v621 = (char *)v307 - v620;
  v622 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v15);
  v623 = (char *)v307 - v622;
  v624 = (v16 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v17);
  v625 = (char *)v307 - v624;
  v626 = (v18 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v19);
  v627 = (char *)v307 - v626;
  v636 = (*(_QWORD *)(*(_QWORD *)(_s15MailboxActivityVMa() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v635);
  v637 = (void **)((char *)v307 - v636);
  v704 = (char *)v307 - v636;
  v638 = *v20;
  v639 = *((unsigned __int8 *)v20 + 8);
  v702 = v638;
  v703 = v639 & 1;
  v701 = v21;
  v700 = v22;
  v698 = v23;
  v699 = v24;
  v696 = v25;
  v697 = v26;
  v695 = v27;
  v694 = v9;
  sub_1A513660C(v9, (void **)((char *)v307 - v636));
  v640 = *v9;
  v28 = v640;
  if (v640)
  {
    v607 = v640;
    v605 = v640;
    v691 = v640;
    sub_1A5126CF8();
    v606 = v29;
    if (v29)
    {
      if (v606 == (void *)1)
      {
        v179 = *v637;
        *v637 = 0;

        v431 = objc_msgSend(v605, sel_objectID);
        objc_msgSend(v629, sel_activityWithID_finishedWithError_);

        if ((v639 & 1) == 0)
        {
          v430 = v638;
          v391 = v638;
          v681 = v638;
          v385 = &v680;
          v680 = v638;
          v386 = objc_msgSend(v605, sel_objectID);
          v632(v385);
          v180 = v623;

          (*(void (**)(char *, uint64_t, uint64_t))(v619 + 16))(v180, v634, v618);
          sub_1A5112AC0(v634, v616);
          sub_1A5112AC0(v616, v614);
          sub_1A5136A08(v616, v612);
          v181 = (unsigned __int8 *)(v614 + *(int *)(v610 + 20));
          v387 = *v181;
          v388 = *((_DWORD *)v181 + 1);
          sub_1A5112B28(v614);
          v390 = 24;
          v407 = 7;
          v182 = swift_allocObject();
          v183 = v388;
          v398 = v182;
          *(_BYTE *)(v182 + 16) = v387;
          *(_DWORD *)(v182 + 20) = v183;
          sub_1A5130E98();
          sub_1A5130E98();
          sub_1A5130E98();
          v184 = swift_allocObject();
          v185 = v388;
          v389 = v184;
          *(_BYTE *)(v184 + 16) = v387;
          *(_DWORD *)(v184 + 20) = v185;
          swift_retain();
          v406 = 32;
          v186 = swift_allocObject();
          v187 = v389;
          v403 = v186;
          *(_QWORD *)(v186 + 16) = sub_1A5130EE0;
          *(_QWORD *)(v186 + 24) = v187;
          sub_1A5130E98();
          sub_1A5130E98();
          swift_release();
          sub_1A5112B28(v612);
          v392 = swift_allocObject();
          *(_QWORD *)(v392 + 16) = v391;
          swift_retain();
          v188 = swift_allocObject();
          v189 = v392;
          v408 = v188;
          *(_QWORD *)(v188 + 16) = sub_1A5134394;
          *(_QWORD *)(v188 + 24) = v189;
          swift_release();
          v428 = sub_1A594A74C();
          v429 = sub_1A594C030();
          v395 = &v678;
          v678 = 33;
          v393 = sub_1A5130F74();
          v394 = sub_1A5130FDC();
          sub_1A5131044();
          sub_1A594B880();
          v396 = v679;
          v405 = 17;
          v410 = swift_allocObject();
          v400 = 16;
          *(_BYTE *)(v410 + 16) = 16;
          v411 = swift_allocObject();
          v402 = 4;
          *(_BYTE *)(v411 + 16) = 4;
          v190 = swift_allocObject();
          v397 = v190;
          *(_QWORD *)(v190 + 16) = sub_1A5130E8C;
          *(_QWORD *)(v190 + 24) = 0;
          v191 = swift_allocObject();
          v192 = v397;
          v412 = v191;
          *(_QWORD *)(v191 + 16) = sub_1A51312FC;
          *(_QWORD *)(v191 + 24) = v192;
          v413 = swift_allocObject();
          *(_BYTE *)(v413 + 16) = 0;
          v414 = swift_allocObject();
          *(_BYTE *)(v414 + 16) = 1;
          v193 = swift_allocObject();
          v194 = v398;
          v399 = v193;
          *(_QWORD *)(v193 + 16) = sub_1A5130E6C;
          *(_QWORD *)(v193 + 24) = v194;
          v195 = swift_allocObject();
          v196 = v399;
          v415 = v195;
          *(_QWORD *)(v195 + 16) = sub_1A51315B4;
          *(_QWORD *)(v195 + 24) = v196;
          v416 = swift_allocObject();
          *(_BYTE *)(v416 + 16) = v400;
          v417 = swift_allocObject();
          *(_BYTE *)(v417 + 16) = v402;
          v197 = swift_allocObject();
          v401 = v197;
          *(_QWORD *)(v197 + 16) = sub_1A5130F68;
          *(_QWORD *)(v197 + 24) = 0;
          v198 = swift_allocObject();
          v199 = v401;
          v418 = v198;
          *(_QWORD *)(v198 + 16) = sub_1A51312FC;
          *(_QWORD *)(v198 + 24) = v199;
          v419 = swift_allocObject();
          *(_BYTE *)(v419 + 16) = 0;
          v420 = swift_allocObject();
          *(_BYTE *)(v420 + 16) = v402;
          v200 = swift_allocObject();
          v201 = v403;
          v404 = v200;
          *(_QWORD *)(v200 + 16) = sub_1A5130F5C;
          *(_QWORD *)(v200 + 24) = v201;
          v202 = swift_allocObject();
          v203 = v404;
          v421 = v202;
          *(_QWORD *)(v202 + 16) = sub_1A5131954;
          *(_QWORD *)(v202 + 24) = v203;
          v422 = swift_allocObject();
          *(_BYTE *)(v422 + 16) = 32;
          v423 = swift_allocObject();
          *(_BYTE *)(v423 + 16) = 8;
          v204 = swift_allocObject();
          v205 = v408;
          v409 = v204;
          *(_QWORD *)(v204 + 16) = sub_1A51343D8;
          *(_QWORD *)(v204 + 24) = v205;
          v206 = swift_allocObject();
          v207 = v409;
          v425 = v206;
          *(_QWORD *)(v206 + 16) = sub_1A5130F5C;
          *(_QWORD *)(v206 + 24) = v207;
          v427 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A48D0);
          v424 = sub_1A594CD14();
          v426 = v208;
          swift_retain();
          v209 = v410;
          v210 = v426;
          *v426 = sub_1A5131290;
          v210[1] = v209;
          swift_retain();
          v211 = v411;
          v212 = v426;
          v426[2] = sub_1A5131290;
          v212[3] = v211;
          swift_retain();
          v213 = v412;
          v214 = v426;
          v426[4] = sub_1A5131460;
          v214[5] = v213;
          swift_retain();
          v215 = v413;
          v216 = v426;
          v426[6] = sub_1A5131290;
          v216[7] = v215;
          swift_retain();
          v217 = v414;
          v218 = v426;
          v426[8] = sub_1A5131290;
          v218[9] = v217;
          swift_retain();
          v219 = v415;
          v220 = v426;
          v426[10] = sub_1A51315FC;
          v220[11] = v219;
          swift_retain();
          v221 = v416;
          v222 = v426;
          v426[12] = sub_1A5131290;
          v222[13] = v221;
          swift_retain();
          v223 = v417;
          v224 = v426;
          v426[14] = sub_1A5131290;
          v224[15] = v223;
          swift_retain();
          v225 = v418;
          v226 = v426;
          v426[16] = sub_1A5131460;
          v226[17] = v225;
          swift_retain();
          v227 = v419;
          v228 = v426;
          v426[18] = sub_1A5131290;
          v228[19] = v227;
          swift_retain();
          v229 = v420;
          v230 = v426;
          v426[20] = sub_1A5131290;
          v230[21] = v229;
          swift_retain();
          v231 = v421;
          v232 = v426;
          v426[22] = sub_1A513199C;
          v232[23] = v231;
          swift_retain();
          v233 = v422;
          v234 = v426;
          v426[24] = sub_1A5131290;
          v234[25] = v233;
          swift_retain();
          v235 = v423;
          v236 = v426;
          v426[26] = sub_1A5131290;
          v236[27] = v235;
          swift_retain();
          v237 = v425;
          v238 = v426;
          v426[28] = sub_1A5133578;
          v238[29] = v237;
          sub_1A5113324();
          swift_bridgeObjectRelease();
          if (os_log_type_enabled(v428, (os_log_type_t)v429))
          {
            v239 = v609;
            v378 = (uint8_t *)sub_1A594C348();
            v377 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
            v379 = sub_1A5130D14(0);
            v380 = sub_1A5130D14(1);
            v381 = &v677;
            v677 = v378;
            v382 = &v676;
            v676 = v379;
            v383 = &v675;
            v675 = v380;
            sub_1A5130D6C(2, &v677);
            sub_1A5130D6C(5, v381);
            v673 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v674 = v410;
            sub_1A5130D80(&v673, (uint64_t)v381, (uint64_t)v382, (uint64_t)v383);
            v384 = v239;
            if (v239)
            {
              __break(1u);
            }
            else
            {
              v673 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
              v674 = v411;
              sub_1A5130D80(&v673, (uint64_t)&v677, (uint64_t)&v676, (uint64_t)&v675);
              v376 = 0;
              v240 = v376;
              v673 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131460;
              v674 = v412;
              sub_1A5130D80(&v673, (uint64_t)&v677, (uint64_t)&v676, (uint64_t)&v675);
              v375 = v240;
              v673 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
              v674 = v413;
              sub_1A5130D80(&v673, (uint64_t)&v677, (uint64_t)&v676, (uint64_t)&v675);
              v374 = 0;
              v673 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
              v674 = v414;
              sub_1A5130D80(&v673, (uint64_t)&v677, (uint64_t)&v676, (uint64_t)&v675);
              v373 = 0;
              v673 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A51315FC;
              v674 = v415;
              sub_1A5130D80(&v673, (uint64_t)&v677, (uint64_t)&v676, (uint64_t)&v675);
              v372 = 0;
              v673 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
              v674 = v416;
              sub_1A5130D80(&v673, (uint64_t)&v677, (uint64_t)&v676, (uint64_t)&v675);
              v371 = 0;
              v673 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
              v674 = v417;
              sub_1A5130D80(&v673, (uint64_t)&v677, (uint64_t)&v676, (uint64_t)&v675);
              v370 = 0;
              v673 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131460;
              v674 = v418;
              sub_1A5130D80(&v673, (uint64_t)&v677, (uint64_t)&v676, (uint64_t)&v675);
              v369 = 0;
              v673 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
              v674 = v419;
              sub_1A5130D80(&v673, (uint64_t)&v677, (uint64_t)&v676, (uint64_t)&v675);
              v368 = 0;
              v673 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
              v674 = v420;
              sub_1A5130D80(&v673, (uint64_t)&v677, (uint64_t)&v676, (uint64_t)&v675);
              v367 = 0;
              v673 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A513199C;
              v674 = v421;
              sub_1A5130D80(&v673, (uint64_t)&v677, (uint64_t)&v676, (uint64_t)&v675);
              v366 = 0;
              v673 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
              v674 = v422;
              sub_1A5130D80(&v673, (uint64_t)&v677, (uint64_t)&v676, (uint64_t)&v675);
              v365 = 0;
              v673 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
              v674 = v423;
              sub_1A5130D80(&v673, (uint64_t)&v677, (uint64_t)&v676, (uint64_t)&v675);
              v364 = 0;
              v673 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5133578;
              v674 = v425;
              sub_1A5130D80(&v673, (uint64_t)&v677, (uint64_t)&v676, (uint64_t)&v675);
              _os_log_impl(&dword_1A4F90000, v428, (os_log_type_t)v429, "[%.*hhx-%.*X] Finished EMActivity for '%s'. Updated last sync date.", v378, v396);
              sub_1A5130DC4(v379);
              sub_1A5130DC4(v380);
              sub_1A594C330();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
            }
          }
          else
          {
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
          }

          (*(void (**)(char *, uint64_t))(v619 + 8))(v623, v618);
        }
      }
      else
      {
        v604 = v606;
        v361 = v606;
        v690 = v606;
        v241 = *v637;
        *v637 = 0;

        v363 = objc_msgSend(v605, sel_objectID);
        v242 = v361;
        v362 = (id)sub_1A5949D98();

        objc_msgSend(v629, sel_activityWithID_finishedWithError_, v363, v362);
        if ((v639 & 1) == 0)
        {
          v360 = v638;
          v321 = v638;
          v689 = v638;
          (*(void (**)(char *, uint64_t, uint64_t))(v619 + 16))(v621, v634, v618);
          sub_1A5112AC0(v634, v616);
          sub_1A5112AC0(v616, v614);
          sub_1A5136A08(v616, v612);
          v243 = (unsigned __int8 *)(v614 + *(int *)(v610 + 20));
          v317 = *v243;
          v318 = *((_DWORD *)v243 + 1);
          sub_1A5112B28(v614);
          v320 = 24;
          v337 = 7;
          v244 = swift_allocObject();
          v245 = v318;
          v328 = v244;
          *(_BYTE *)(v244 + 16) = v317;
          *(_DWORD *)(v244 + 20) = v245;
          sub_1A5130E98();
          sub_1A5130E98();
          sub_1A5130E98();
          v246 = swift_allocObject();
          v247 = v318;
          v319 = v246;
          *(_BYTE *)(v246 + 16) = v317;
          *(_DWORD *)(v246 + 20) = v247;
          swift_retain();
          v336 = 32;
          v248 = swift_allocObject();
          v249 = v319;
          v333 = v248;
          *(_QWORD *)(v248 + 16) = sub_1A5130EE0;
          *(_QWORD *)(v248 + 24) = v249;
          sub_1A5130E98();
          sub_1A5130E98();
          swift_release();
          sub_1A5112B28(v612);
          v322 = swift_allocObject();
          *(_QWORD *)(v322 + 16) = v321;
          swift_retain();
          v250 = swift_allocObject();
          v251 = v322;
          v338 = v250;
          *(_QWORD *)(v250 + 16) = sub_1A5134394;
          *(_QWORD *)(v250 + 24) = v251;
          swift_release();
          v358 = sub_1A594A74C();
          v359 = sub_1A594C018();
          v325 = &v687;
          v687 = 33;
          v323 = sub_1A5130F74();
          v324 = sub_1A5130FDC();
          sub_1A5131044();
          sub_1A594B880();
          v326 = v688;
          v335 = 17;
          v340 = swift_allocObject();
          v330 = 16;
          *(_BYTE *)(v340 + 16) = 16;
          v341 = swift_allocObject();
          v332 = 4;
          *(_BYTE *)(v341 + 16) = 4;
          v252 = swift_allocObject();
          v327 = v252;
          *(_QWORD *)(v252 + 16) = sub_1A5130E8C;
          *(_QWORD *)(v252 + 24) = 0;
          v253 = swift_allocObject();
          v254 = v327;
          v342 = v253;
          *(_QWORD *)(v253 + 16) = sub_1A51312FC;
          *(_QWORD *)(v253 + 24) = v254;
          v343 = swift_allocObject();
          *(_BYTE *)(v343 + 16) = 0;
          v344 = swift_allocObject();
          *(_BYTE *)(v344 + 16) = 1;
          v255 = swift_allocObject();
          v256 = v328;
          v329 = v255;
          *(_QWORD *)(v255 + 16) = sub_1A5130E6C;
          *(_QWORD *)(v255 + 24) = v256;
          v257 = swift_allocObject();
          v258 = v329;
          v345 = v257;
          *(_QWORD *)(v257 + 16) = sub_1A51315B4;
          *(_QWORD *)(v257 + 24) = v258;
          v346 = swift_allocObject();
          *(_BYTE *)(v346 + 16) = v330;
          v347 = swift_allocObject();
          *(_BYTE *)(v347 + 16) = v332;
          v259 = swift_allocObject();
          v331 = v259;
          *(_QWORD *)(v259 + 16) = sub_1A5130F68;
          *(_QWORD *)(v259 + 24) = 0;
          v260 = swift_allocObject();
          v261 = v331;
          v348 = v260;
          *(_QWORD *)(v260 + 16) = sub_1A51312FC;
          *(_QWORD *)(v260 + 24) = v261;
          v349 = swift_allocObject();
          *(_BYTE *)(v349 + 16) = 0;
          v350 = swift_allocObject();
          *(_BYTE *)(v350 + 16) = v332;
          v262 = swift_allocObject();
          v263 = v333;
          v334 = v262;
          *(_QWORD *)(v262 + 16) = sub_1A5130F5C;
          *(_QWORD *)(v262 + 24) = v263;
          v264 = swift_allocObject();
          v265 = v334;
          v351 = v264;
          *(_QWORD *)(v264 + 16) = sub_1A5131954;
          *(_QWORD *)(v264 + 24) = v265;
          v352 = swift_allocObject();
          *(_BYTE *)(v352 + 16) = 32;
          v353 = swift_allocObject();
          *(_BYTE *)(v353 + 16) = 8;
          v266 = swift_allocObject();
          v267 = v338;
          v339 = v266;
          *(_QWORD *)(v266 + 16) = sub_1A51343D8;
          *(_QWORD *)(v266 + 24) = v267;
          v268 = swift_allocObject();
          v269 = v339;
          v355 = v268;
          *(_QWORD *)(v268 + 16) = sub_1A5130F5C;
          *(_QWORD *)(v268 + 24) = v269;
          v357 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A48D0);
          v354 = sub_1A594CD14();
          v356 = v270;
          swift_retain();
          v271 = v340;
          v272 = v356;
          *v356 = sub_1A5131290;
          v272[1] = v271;
          swift_retain();
          v273 = v341;
          v274 = v356;
          v356[2] = sub_1A5131290;
          v274[3] = v273;
          swift_retain();
          v275 = v342;
          v276 = v356;
          v356[4] = sub_1A5131460;
          v276[5] = v275;
          swift_retain();
          v277 = v343;
          v278 = v356;
          v356[6] = sub_1A5131290;
          v278[7] = v277;
          swift_retain();
          v279 = v344;
          v280 = v356;
          v356[8] = sub_1A5131290;
          v280[9] = v279;
          swift_retain();
          v281 = v345;
          v282 = v356;
          v356[10] = sub_1A51315FC;
          v282[11] = v281;
          swift_retain();
          v283 = v346;
          v284 = v356;
          v356[12] = sub_1A5131290;
          v284[13] = v283;
          swift_retain();
          v285 = v347;
          v286 = v356;
          v356[14] = sub_1A5131290;
          v286[15] = v285;
          swift_retain();
          v287 = v348;
          v288 = v356;
          v356[16] = sub_1A5131460;
          v288[17] = v287;
          swift_retain();
          v289 = v349;
          v290 = v356;
          v356[18] = sub_1A5131290;
          v290[19] = v289;
          swift_retain();
          v291 = v350;
          v292 = v356;
          v356[20] = sub_1A5131290;
          v292[21] = v291;
          swift_retain();
          v293 = v351;
          v294 = v356;
          v356[22] = sub_1A513199C;
          v294[23] = v293;
          swift_retain();
          v295 = v352;
          v296 = v356;
          v356[24] = sub_1A5131290;
          v296[25] = v295;
          swift_retain();
          v297 = v353;
          v298 = v356;
          v356[26] = sub_1A5131290;
          v298[27] = v297;
          swift_retain();
          v299 = v355;
          v300 = v356;
          v356[28] = sub_1A5133578;
          v300[29] = v299;
          sub_1A5113324();
          swift_bridgeObjectRelease();
          if (os_log_type_enabled(v358, (os_log_type_t)v359))
          {
            v301 = v609;
            v310 = (uint8_t *)sub_1A594C348();
            v309 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
            v311 = sub_1A5130D14(0);
            v312 = sub_1A5130D14(1);
            v313 = &v686;
            v686 = v310;
            v314 = &v685;
            v685 = v311;
            v315 = &v684;
            v684 = v312;
            sub_1A5130D6C(2, &v686);
            sub_1A5130D6C(5, v313);
            v682 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v683 = v340;
            sub_1A5130D80(&v682, (uint64_t)v313, (uint64_t)v314, (uint64_t)v315);
            v316 = v301;
            if (v301)
            {
              __break(1u);
            }
            else
            {
              v682 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
              v683 = v341;
              sub_1A5130D80(&v682, (uint64_t)&v686, (uint64_t)&v685, (uint64_t)&v684);
              v308 = 0;
              v302 = v308;
              v682 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131460;
              v683 = v342;
              sub_1A5130D80(&v682, (uint64_t)&v686, (uint64_t)&v685, (uint64_t)&v684);
              v307[12] = v302;
              v682 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
              v683 = v343;
              sub_1A5130D80(&v682, (uint64_t)&v686, (uint64_t)&v685, (uint64_t)&v684);
              v307[11] = 0;
              v682 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
              v683 = v344;
              sub_1A5130D80(&v682, (uint64_t)&v686, (uint64_t)&v685, (uint64_t)&v684);
              v307[10] = 0;
              v682 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A51315FC;
              v683 = v345;
              sub_1A5130D80(&v682, (uint64_t)&v686, (uint64_t)&v685, (uint64_t)&v684);
              v307[9] = 0;
              v682 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
              v683 = v346;
              sub_1A5130D80(&v682, (uint64_t)&v686, (uint64_t)&v685, (uint64_t)&v684);
              v307[8] = 0;
              v682 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
              v683 = v347;
              sub_1A5130D80(&v682, (uint64_t)&v686, (uint64_t)&v685, (uint64_t)&v684);
              v307[7] = 0;
              v682 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131460;
              v683 = v348;
              sub_1A5130D80(&v682, (uint64_t)&v686, (uint64_t)&v685, (uint64_t)&v684);
              v307[6] = 0;
              v682 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
              v683 = v349;
              sub_1A5130D80(&v682, (uint64_t)&v686, (uint64_t)&v685, (uint64_t)&v684);
              v307[5] = 0;
              v682 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
              v683 = v350;
              sub_1A5130D80(&v682, (uint64_t)&v686, (uint64_t)&v685, (uint64_t)&v684);
              v307[4] = 0;
              v682 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A513199C;
              v683 = v351;
              sub_1A5130D80(&v682, (uint64_t)&v686, (uint64_t)&v685, (uint64_t)&v684);
              v307[3] = 0;
              v682 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
              v683 = v352;
              sub_1A5130D80(&v682, (uint64_t)&v686, (uint64_t)&v685, (uint64_t)&v684);
              v307[2] = 0;
              v682 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
              v683 = v353;
              sub_1A5130D80(&v682, (uint64_t)&v686, (uint64_t)&v685, (uint64_t)&v684);
              v307[1] = 0;
              v682 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5133578;
              v683 = v355;
              sub_1A5130D80(&v682, (uint64_t)&v686, (uint64_t)&v685, (uint64_t)&v684);
              _os_log_impl(&dword_1A4F90000, v358, (os_log_type_t)v359, "[%.*hhx-%.*X] Finished EMActivity for '%s' with error.", v310, v326);
              sub_1A5130DC4(v311);
              sub_1A5130DC4(v312);
              sub_1A594C330();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
            }
          }
          else
          {
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
          }

          (*(void (**)(char *, uint64_t))(v619 + 8))(v621, v618);
        }

      }
LABEL_94:

      goto LABEL_98;
    }
    v598 = sub_1A5127038();
    v600 = v30;
    v602 = v31;
    v670 = v598;
    v671 = v30;
    v597 = 1;
    v672 = v31 & 1;
    v599 = sub_1A51272B8();
    v601 = v32;
    v603 = v33;
    v667 = v599;
    v668 = v32;
    v669 = v33 & 1 & v597;
    v662.n128_u64[0] = v599;
    v662.n128_u64[1] = v32;
    v663 = v669;
    v664 = v598;
    v665 = v600;
    v666 = v602 & 1 & v597;
    if (v669)
    {
      if ((v666 & 1) != 0)
      {
        v596 = 1;
LABEL_11:
        if (v596)
        {
          v516 = v609;
        }
        else
        {
          if ((v639 & 1) != 0)
          {
            v594 = v609;
          }
          else
          {
            v595 = v638;
            v548 = v638;
            v649 = v638;
            (*(void (**)(char *, uint64_t, uint64_t))(v619 + 16))(v627, v634, v618);
            sub_1A5112AC0(v634, v616);
            sub_1A5112AC0(v616, v614);
            sub_1A5136A08(v616, v612);
            v34 = (unsigned __int8 *)(v614 + *(int *)(v610 + 20));
            v544 = *v34;
            v545 = *((_DWORD *)v34 + 1);
            sub_1A5112B28(v614);
            v547 = 24;
            v568 = 7;
            v35 = swift_allocObject();
            v36 = v545;
            v556 = v35;
            *(_BYTE *)(v35 + 16) = v544;
            *(_DWORD *)(v35 + 20) = v36;
            sub_1A5130E98();
            sub_1A5130E98();
            sub_1A5130E98();
            v37 = swift_allocObject();
            v38 = v545;
            v546 = v37;
            *(_BYTE *)(v37 + 16) = v544;
            *(_DWORD *)(v37 + 20) = v38;
            swift_retain();
            v567 = 32;
            v39 = swift_allocObject();
            v40 = v546;
            v561 = v39;
            *(_QWORD *)(v39 + 16) = sub_1A5130EE0;
            *(_QWORD *)(v39 + 24) = v40;
            sub_1A5130E98();
            sub_1A5130E98();
            swift_release();
            sub_1A5112B28(v612);
            v549 = swift_allocObject();
            *(_QWORD *)(v549 + 16) = v548;
            swift_retain();
            v41 = swift_allocObject();
            v42 = v549;
            v563 = v41;
            *(_QWORD *)(v41 + 16) = sub_1A5134394;
            *(_QWORD *)(v41 + 24) = v42;
            swift_release();
            v43 = swift_allocObject();
            v44 = v601;
            v45 = v603;
            v569 = v43;
            *(_QWORD *)(v43 + 16) = v599;
            *(_QWORD *)(v43 + 24) = v44;
            v555 = 1;
            *(_BYTE *)(v43 + 32) = v45 & 1;
            v592 = sub_1A594A74C();
            v593 = sub_1A594C030();
            v552 = &v647;
            v647 = 43;
            v550 = sub_1A5130F74();
            v551 = sub_1A5130FDC();
            sub_1A5131044();
            sub_1A594B880();
            v553 = v648;
            v565 = 17;
            v571 = swift_allocObject();
            v558 = 16;
            *(_BYTE *)(v571 + 16) = 16;
            v572 = swift_allocObject();
            v560 = 4;
            *(_BYTE *)(v572 + 16) = 4;
            v46 = swift_allocObject();
            v554 = v46;
            *(_QWORD *)(v46 + 16) = sub_1A5130E8C;
            *(_QWORD *)(v46 + 24) = 0;
            v47 = swift_allocObject();
            v48 = v554;
            v573 = v47;
            *(_QWORD *)(v47 + 16) = sub_1A51312FC;
            *(_QWORD *)(v47 + 24) = v48;
            v574 = swift_allocObject();
            *(_BYTE *)(v574 + 16) = 0;
            v575 = swift_allocObject();
            *(_BYTE *)(v575 + 16) = v555;
            v49 = swift_allocObject();
            v50 = v556;
            v557 = v49;
            *(_QWORD *)(v49 + 16) = sub_1A5130E6C;
            *(_QWORD *)(v49 + 24) = v50;
            v51 = swift_allocObject();
            v52 = v557;
            v576 = v51;
            *(_QWORD *)(v51 + 16) = sub_1A51315B4;
            *(_QWORD *)(v51 + 24) = v52;
            v577 = swift_allocObject();
            *(_BYTE *)(v577 + 16) = v558;
            v578 = swift_allocObject();
            *(_BYTE *)(v578 + 16) = v560;
            v53 = swift_allocObject();
            v559 = v53;
            *(_QWORD *)(v53 + 16) = sub_1A5130F68;
            *(_QWORD *)(v53 + 24) = 0;
            v54 = swift_allocObject();
            v55 = v559;
            v579 = v54;
            *(_QWORD *)(v54 + 16) = sub_1A51312FC;
            *(_QWORD *)(v54 + 24) = v55;
            v580 = swift_allocObject();
            *(_BYTE *)(v580 + 16) = 0;
            v581 = swift_allocObject();
            *(_BYTE *)(v581 + 16) = v560;
            v56 = swift_allocObject();
            v57 = v561;
            v562 = v56;
            *(_QWORD *)(v56 + 16) = sub_1A5130F5C;
            *(_QWORD *)(v56 + 24) = v57;
            v58 = swift_allocObject();
            v59 = v562;
            v582 = v58;
            *(_QWORD *)(v58 + 16) = sub_1A5131954;
            *(_QWORD *)(v58 + 24) = v59;
            v583 = swift_allocObject();
            *(_BYTE *)(v583 + 16) = 32;
            v584 = swift_allocObject();
            v566 = 8;
            *(_BYTE *)(v584 + 16) = 8;
            v60 = swift_allocObject();
            v61 = v563;
            v564 = v60;
            *(_QWORD *)(v60 + 16) = sub_1A51343D8;
            *(_QWORD *)(v60 + 24) = v61;
            v62 = swift_allocObject();
            v63 = v564;
            v585 = v62;
            *(_QWORD *)(v62 + 16) = sub_1A5130F5C;
            *(_QWORD *)(v62 + 24) = v63;
            v586 = swift_allocObject();
            *(_BYTE *)(v586 + 16) = 34;
            v587 = swift_allocObject();
            *(_BYTE *)(v587 + 16) = v566;
            v64 = swift_allocObject();
            v65 = v569;
            v570 = v64;
            *(_QWORD *)(v64 + 16) = sub_1A5137C18;
            *(_QWORD *)(v64 + 24) = v65;
            v66 = swift_allocObject();
            v67 = v570;
            v589 = v66;
            *(_QWORD *)(v66 + 16) = sub_1A5130F5C;
            *(_QWORD *)(v66 + 24) = v67;
            v591 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A48D0);
            v588 = sub_1A594CD14();
            v590 = v68;
            swift_retain();
            v69 = v571;
            v70 = v590;
            *v590 = sub_1A5131290;
            v70[1] = v69;
            swift_retain();
            v71 = v572;
            v72 = v590;
            v590[2] = sub_1A5131290;
            v72[3] = v71;
            swift_retain();
            v73 = v573;
            v74 = v590;
            v590[4] = sub_1A5131460;
            v74[5] = v73;
            swift_retain();
            v75 = v574;
            v76 = v590;
            v590[6] = sub_1A5131290;
            v76[7] = v75;
            swift_retain();
            v77 = v575;
            v78 = v590;
            v590[8] = sub_1A5131290;
            v78[9] = v77;
            swift_retain();
            v79 = v576;
            v80 = v590;
            v590[10] = sub_1A51315FC;
            v80[11] = v79;
            swift_retain();
            v81 = v577;
            v82 = v590;
            v590[12] = sub_1A5131290;
            v82[13] = v81;
            swift_retain();
            v83 = v578;
            v84 = v590;
            v590[14] = sub_1A5131290;
            v84[15] = v83;
            swift_retain();
            v85 = v579;
            v86 = v590;
            v590[16] = sub_1A5131460;
            v86[17] = v85;
            swift_retain();
            v87 = v580;
            v88 = v590;
            v590[18] = sub_1A5131290;
            v88[19] = v87;
            swift_retain();
            v89 = v581;
            v90 = v590;
            v590[20] = sub_1A5131290;
            v90[21] = v89;
            swift_retain();
            v91 = v582;
            v92 = v590;
            v590[22] = sub_1A513199C;
            v92[23] = v91;
            swift_retain();
            v93 = v583;
            v94 = v590;
            v590[24] = sub_1A5131290;
            v94[25] = v93;
            swift_retain();
            v95 = v584;
            v96 = v590;
            v590[26] = sub_1A5131290;
            v96[27] = v95;
            swift_retain();
            v97 = v585;
            v98 = v590;
            v590[28] = sub_1A5133578;
            v98[29] = v97;
            swift_retain();
            v99 = v586;
            v100 = v590;
            v590[30] = sub_1A5131290;
            v100[31] = v99;
            swift_retain();
            v101 = v587;
            v102 = v590;
            v590[32] = sub_1A5131290;
            v102[33] = v101;
            swift_retain();
            v103 = v589;
            v104 = v590;
            v590[34] = sub_1A5133578;
            v104[35] = v103;
            sub_1A5113324();
            swift_bridgeObjectRelease();
            if (os_log_type_enabled(v592, (os_log_type_t)v593))
            {
              v105 = v609;
              v537 = (uint8_t *)sub_1A594C348();
              v536 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
              v538 = sub_1A5130D14(0);
              v539 = sub_1A5130D14(2);
              v540 = &v646;
              v646 = v537;
              v541 = &v645;
              v645 = v538;
              v542 = &v644;
              v644 = v539;
              sub_1A5130D6C(2, &v646);
              sub_1A5130D6C(6, v540);
              v642 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
              v643 = v571;
              sub_1A5130D80(&v642, (uint64_t)v540, (uint64_t)v541, (uint64_t)v542);
              v543 = v105;
              if (v105)
              {
                __break(1u);
              }
              else
              {
                v642 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
                v643 = v572;
                sub_1A5130D80(&v642, (uint64_t)&v646, (uint64_t)&v645, (uint64_t)&v644);
                v534 = 0;
                v107 = v534;
                v642 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131460;
                v643 = v573;
                sub_1A5130D80(&v642, (uint64_t)&v646, (uint64_t)&v645, (uint64_t)&v644);
                v533 = v107;
                v642 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
                v643 = v574;
                sub_1A5130D80(&v642, (uint64_t)&v646, (uint64_t)&v645, (uint64_t)&v644);
                v532 = 0;
                v642 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
                v643 = v575;
                sub_1A5130D80(&v642, (uint64_t)&v646, (uint64_t)&v645, (uint64_t)&v644);
                v531 = 0;
                v642 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A51315FC;
                v643 = v576;
                sub_1A5130D80(&v642, (uint64_t)&v646, (uint64_t)&v645, (uint64_t)&v644);
                v530 = 0;
                v642 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
                v643 = v577;
                sub_1A5130D80(&v642, (uint64_t)&v646, (uint64_t)&v645, (uint64_t)&v644);
                v529 = 0;
                v642 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
                v643 = v578;
                sub_1A5130D80(&v642, (uint64_t)&v646, (uint64_t)&v645, (uint64_t)&v644);
                v528 = 0;
                v642 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131460;
                v643 = v579;
                sub_1A5130D80(&v642, (uint64_t)&v646, (uint64_t)&v645, (uint64_t)&v644);
                v527 = 0;
                v642 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
                v643 = v580;
                sub_1A5130D80(&v642, (uint64_t)&v646, (uint64_t)&v645, (uint64_t)&v644);
                v526 = 0;
                v642 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
                v643 = v581;
                sub_1A5130D80(&v642, (uint64_t)&v646, (uint64_t)&v645, (uint64_t)&v644);
                v525 = 0;
                v642 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A513199C;
                v643 = v582;
                sub_1A5130D80(&v642, (uint64_t)&v646, (uint64_t)&v645, (uint64_t)&v644);
                v524 = 0;
                v642 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
                v643 = v583;
                sub_1A5130D80(&v642, (uint64_t)&v646, (uint64_t)&v645, (uint64_t)&v644);
                v523 = 0;
                v642 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
                v643 = v584;
                sub_1A5130D80(&v642, (uint64_t)&v646, (uint64_t)&v645, (uint64_t)&v644);
                v522 = 0;
                v642 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5133578;
                v643 = v585;
                sub_1A5130D80(&v642, (uint64_t)&v646, (uint64_t)&v645, (uint64_t)&v644);
                v521 = 0;
                v642 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
                v643 = v586;
                sub_1A5130D80(&v642, (uint64_t)&v646, (uint64_t)&v645, (uint64_t)&v644);
                v520 = 0;
                v642 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
                v643 = v587;
                sub_1A5130D80(&v642, (uint64_t)&v646, (uint64_t)&v645, (uint64_t)&v644);
                v519 = 0;
                v642 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5133578;
                v643 = v589;
                sub_1A5130D80(&v642, (uint64_t)&v646, (uint64_t)&v645, (uint64_t)&v644);
                v518 = 0;
                _os_log_impl(&dword_1A4F90000, v592, (os_log_type_t)v593, "[%.*hhx-%.*X] Updating EMActivity status for '%s': %{public}s", v537, v553);
                sub_1A5130DC4(v538);
                sub_1A5130DC4(v539);
                sub_1A594C330();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                v535 = v518;
              }
            }
            else
            {
              v106 = v609;
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              v535 = v106;
            }
            v517 = v535;

            (*(void (**)(char *, uint64_t))(v619 + 8))(v627, v618);
            v594 = v517;
          }
          v515 = v594;
          v514 = objc_msgSend(v605, sel_objectID);
          sub_1A5127404(v599, v601, v603 & 1, (uint64_t)v514);

          v516 = v515;
        }
        v508 = v516;
        v509 = sub_1A5127578();
        v661 = v509;
        sub_1A512777C();
        v510 = v108;
        v660 = v108;
        v513 = &v659;
        v659 = v509;
        v511 = &v658;
        v658 = v108;
        State = type metadata accessor for EMActivityFetchState();
        sub_1A51374C0();
        if ((sub_1A594B37C() & 1) == 0)
        {
          if ((v639 & 1) == 0)
          {
            v507 = v638;
            v460 = v638;
            v657 = v638;
            (*(void (**)(char *, uint64_t, uint64_t))(v619 + 16))(v625, v634, v618);
            sub_1A5112AC0(v634, v616);
            sub_1A5112AC0(v616, v614);
            sub_1A5136A08(v616, v612);
            v109 = (unsigned __int8 *)(v614 + *(int *)(v610 + 20));
            v457 = *v109;
            v458 = *((_DWORD *)v109 + 1);
            sub_1A5112B28(v614);
            v462 = 24;
            v481 = 7;
            v110 = swift_allocObject();
            v111 = v458;
            v468 = v110;
            *(_BYTE *)(v110 + 16) = v457;
            *(_DWORD *)(v110 + 20) = v111;
            sub_1A5130E98();
            sub_1A5130E98();
            sub_1A5130E98();
            v112 = swift_allocObject();
            v113 = v458;
            v459 = v112;
            *(_BYTE *)(v112 + 16) = v457;
            *(_DWORD *)(v112 + 20) = v113;
            swift_retain();
            v480 = 32;
            v114 = swift_allocObject();
            v115 = v459;
            v473 = v114;
            *(_QWORD *)(v114 + 16) = sub_1A5130EE0;
            *(_QWORD *)(v114 + 24) = v115;
            sub_1A5130E98();
            sub_1A5130E98();
            swift_release();
            sub_1A5112B28(v612);
            v461 = swift_allocObject();
            *(_QWORD *)(v461 + 16) = v460;
            swift_retain();
            v116 = swift_allocObject();
            v117 = v461;
            v475 = v116;
            *(_QWORD *)(v116 + 16) = sub_1A5134394;
            *(_QWORD *)(v116 + 24) = v117;
            swift_release();
            v482 = swift_allocObject();
            *(_QWORD *)(v482 + 16) = v510;
            v505 = sub_1A594A74C();
            v506 = sub_1A594C030();
            v465 = &v655;
            v655 = 43;
            v463 = sub_1A5130F74();
            v464 = sub_1A5130FDC();
            sub_1A5131044();
            sub_1A594B880();
            v466 = v656;
            v478 = 17;
            v484 = swift_allocObject();
            v470 = 16;
            *(_BYTE *)(v484 + 16) = 16;
            v485 = swift_allocObject();
            v472 = 4;
            *(_BYTE *)(v485 + 16) = 4;
            v118 = swift_allocObject();
            v467 = v118;
            *(_QWORD *)(v118 + 16) = sub_1A5130E8C;
            *(_QWORD *)(v118 + 24) = 0;
            v119 = swift_allocObject();
            v120 = v467;
            v486 = v119;
            *(_QWORD *)(v119 + 16) = sub_1A51312FC;
            *(_QWORD *)(v119 + 24) = v120;
            v487 = swift_allocObject();
            *(_BYTE *)(v487 + 16) = 0;
            v488 = swift_allocObject();
            *(_BYTE *)(v488 + 16) = 1;
            v121 = swift_allocObject();
            v122 = v468;
            v469 = v121;
            *(_QWORD *)(v121 + 16) = sub_1A5130E6C;
            *(_QWORD *)(v121 + 24) = v122;
            v123 = swift_allocObject();
            v124 = v469;
            v489 = v123;
            *(_QWORD *)(v123 + 16) = sub_1A51315B4;
            *(_QWORD *)(v123 + 24) = v124;
            v490 = swift_allocObject();
            *(_BYTE *)(v490 + 16) = v470;
            v491 = swift_allocObject();
            *(_BYTE *)(v491 + 16) = v472;
            v125 = swift_allocObject();
            v471 = v125;
            *(_QWORD *)(v125 + 16) = sub_1A5130F68;
            *(_QWORD *)(v125 + 24) = 0;
            v126 = swift_allocObject();
            v127 = v471;
            v492 = v126;
            *(_QWORD *)(v126 + 16) = sub_1A51312FC;
            *(_QWORD *)(v126 + 24) = v127;
            v493 = swift_allocObject();
            *(_BYTE *)(v493 + 16) = 0;
            v494 = swift_allocObject();
            *(_BYTE *)(v494 + 16) = v472;
            v128 = swift_allocObject();
            v129 = v473;
            v474 = v128;
            *(_QWORD *)(v128 + 16) = sub_1A5130F5C;
            *(_QWORD *)(v128 + 24) = v129;
            v130 = swift_allocObject();
            v131 = v474;
            v495 = v130;
            *(_QWORD *)(v130 + 16) = sub_1A5131954;
            *(_QWORD *)(v130 + 24) = v131;
            v496 = swift_allocObject();
            v477 = 32;
            *(_BYTE *)(v496 + 16) = 32;
            v497 = swift_allocObject();
            v479 = 8;
            *(_BYTE *)(v497 + 16) = 8;
            v132 = swift_allocObject();
            v133 = v475;
            v476 = v132;
            *(_QWORD *)(v132 + 16) = sub_1A51343D8;
            *(_QWORD *)(v132 + 24) = v133;
            v134 = swift_allocObject();
            v135 = v476;
            v498 = v134;
            *(_QWORD *)(v134 + 16) = sub_1A5130F5C;
            *(_QWORD *)(v134 + 24) = v135;
            v499 = swift_allocObject();
            *(_BYTE *)(v499 + 16) = v477;
            v500 = swift_allocObject();
            *(_BYTE *)(v500 + 16) = v479;
            v136 = swift_allocObject();
            v137 = v482;
            v483 = v136;
            *(_QWORD *)(v136 + 16) = sub_1A5137648;
            *(_QWORD *)(v136 + 24) = v137;
            v138 = swift_allocObject();
            v139 = v483;
            v502 = v138;
            *(_QWORD *)(v138 + 16) = sub_1A5130F5C;
            *(_QWORD *)(v138 + 24) = v139;
            v504 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A48D0);
            v501 = sub_1A594CD14();
            v503 = v140;
            swift_retain();
            v141 = v484;
            v142 = v503;
            *v503 = sub_1A5131290;
            v142[1] = v141;
            swift_retain();
            v143 = v485;
            v144 = v503;
            v503[2] = sub_1A5131290;
            v144[3] = v143;
            swift_retain();
            v145 = v486;
            v146 = v503;
            v503[4] = sub_1A5131460;
            v146[5] = v145;
            swift_retain();
            v147 = v487;
            v148 = v503;
            v503[6] = sub_1A5131290;
            v148[7] = v147;
            swift_retain();
            v149 = v488;
            v150 = v503;
            v503[8] = sub_1A5131290;
            v150[9] = v149;
            swift_retain();
            v151 = v489;
            v152 = v503;
            v503[10] = sub_1A51315FC;
            v152[11] = v151;
            swift_retain();
            v153 = v490;
            v154 = v503;
            v503[12] = sub_1A5131290;
            v154[13] = v153;
            swift_retain();
            v155 = v491;
            v156 = v503;
            v503[14] = sub_1A5131290;
            v156[15] = v155;
            swift_retain();
            v157 = v492;
            v158 = v503;
            v503[16] = sub_1A5131460;
            v158[17] = v157;
            swift_retain();
            v159 = v493;
            v160 = v503;
            v503[18] = sub_1A5131290;
            v160[19] = v159;
            swift_retain();
            v161 = v494;
            v162 = v503;
            v503[20] = sub_1A5131290;
            v162[21] = v161;
            swift_retain();
            v163 = v495;
            v164 = v503;
            v503[22] = sub_1A513199C;
            v164[23] = v163;
            swift_retain();
            v165 = v496;
            v166 = v503;
            v503[24] = sub_1A5131290;
            v166[25] = v165;
            swift_retain();
            v167 = v497;
            v168 = v503;
            v503[26] = sub_1A5131290;
            v168[27] = v167;
            swift_retain();
            v169 = v498;
            v170 = v503;
            v503[28] = sub_1A5133578;
            v170[29] = v169;
            swift_retain();
            v171 = v499;
            v172 = v503;
            v503[30] = sub_1A5131290;
            v172[31] = v171;
            swift_retain();
            v173 = v500;
            v174 = v503;
            v503[32] = sub_1A5131290;
            v174[33] = v173;
            swift_retain();
            v175 = v502;
            v176 = v503;
            v503[34] = sub_1A5133578;
            v176[35] = v175;
            sub_1A5113324();
            swift_bridgeObjectRelease();
            if (os_log_type_enabled(v505, (os_log_type_t)v506))
            {
              v177 = v508;
              v450 = (uint8_t *)sub_1A594C348();
              v449 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
              v451 = sub_1A5130D14(0);
              v452 = sub_1A5130D14(2);
              v453 = &v654;
              v654 = v450;
              v454 = &v653;
              v653 = v451;
              v455 = &v652;
              v652 = v452;
              sub_1A5130D6C(2, &v654);
              sub_1A5130D6C(6, v453);
              v650 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
              v651 = v484;
              sub_1A5130D80(&v650, (uint64_t)v453, (uint64_t)v454, (uint64_t)v455);
              v456 = v177;
              if (v177)
              {
                __break(1u);
              }
              else
              {
                v650 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
                v651 = v485;
                sub_1A5130D80(&v650, (uint64_t)&v654, (uint64_t)&v653, (uint64_t)&v652);
                v448 = 0;
                v178 = v448;
                v650 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131460;
                v651 = v486;
                sub_1A5130D80(&v650, (uint64_t)&v654, (uint64_t)&v653, (uint64_t)&v652);
                v447 = v178;
                v650 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
                v651 = v487;
                sub_1A5130D80(&v650, (uint64_t)&v654, (uint64_t)&v653, (uint64_t)&v652);
                v446 = 0;
                v650 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
                v651 = v488;
                sub_1A5130D80(&v650, (uint64_t)&v654, (uint64_t)&v653, (uint64_t)&v652);
                v445 = 0;
                v650 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A51315FC;
                v651 = v489;
                sub_1A5130D80(&v650, (uint64_t)&v654, (uint64_t)&v653, (uint64_t)&v652);
                v444 = 0;
                v650 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
                v651 = v490;
                sub_1A5130D80(&v650, (uint64_t)&v654, (uint64_t)&v653, (uint64_t)&v652);
                v443 = 0;
                v650 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
                v651 = v491;
                sub_1A5130D80(&v650, (uint64_t)&v654, (uint64_t)&v653, (uint64_t)&v652);
                v442 = 0;
                v650 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131460;
                v651 = v492;
                sub_1A5130D80(&v650, (uint64_t)&v654, (uint64_t)&v653, (uint64_t)&v652);
                v441 = 0;
                v650 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
                v651 = v493;
                sub_1A5130D80(&v650, (uint64_t)&v654, (uint64_t)&v653, (uint64_t)&v652);
                v440 = 0;
                v650 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
                v651 = v494;
                sub_1A5130D80(&v650, (uint64_t)&v654, (uint64_t)&v653, (uint64_t)&v652);
                v439 = 0;
                v650 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A513199C;
                v651 = v495;
                sub_1A5130D80(&v650, (uint64_t)&v654, (uint64_t)&v653, (uint64_t)&v652);
                v438 = 0;
                v650 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
                v651 = v496;
                sub_1A5130D80(&v650, (uint64_t)&v654, (uint64_t)&v653, (uint64_t)&v652);
                v437 = 0;
                v650 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
                v651 = v497;
                sub_1A5130D80(&v650, (uint64_t)&v654, (uint64_t)&v653, (uint64_t)&v652);
                v436 = 0;
                v650 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5133578;
                v651 = v498;
                sub_1A5130D80(&v650, (uint64_t)&v654, (uint64_t)&v653, (uint64_t)&v652);
                v435 = 0;
                v650 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
                v651 = v499;
                sub_1A5130D80(&v650, (uint64_t)&v654, (uint64_t)&v653, (uint64_t)&v652);
                v434 = 0;
                v650 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
                v651 = v500;
                sub_1A5130D80(&v650, (uint64_t)&v654, (uint64_t)&v653, (uint64_t)&v652);
                v433 = 0;
                v650 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5133578;
                v651 = v502;
                sub_1A5130D80(&v650, (uint64_t)&v654, (uint64_t)&v653, (uint64_t)&v652);
                _os_log_impl(&dword_1A4F90000, v505, (os_log_type_t)v506, "[%.*hhx-%.*X] Updating EMActivity state for '%s': %s", v450, v466);
                sub_1A5130DC4(v451);
                sub_1A5130DC4(v452);
                sub_1A594C330();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
              }
            }
            else
            {
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
            }

            (*(void (**)(char *, uint64_t))(v619 + 8))(v625, v618);
          }
          v432 = objc_msgSend(v605, sel_objectID);
          sub_1A512794C(v510, (uint64_t)v432);

        }
        goto LABEL_94;
      }
    }
    else
    {
      sub_1A51380DC(&v662, &v641);
      if ((v666 & 1) == 0)
      {
        v596 = static Activity.MailboxStatus.Info.FetchProgress.__derived_struct_equals(_:_:)(v641.n128_i64[0], v641.n128_i64[1], v664, v665);
        goto LABEL_11;
      }
    }
    v596 = 0;
    goto LABEL_11;
  }
  sub_1A5126CF8();
  v307[0] = v303;
  if (v303)
  {
    sub_1A51369CC(v307[0]);
  }
  else
  {
    v692 = v638;
    v693 = v639 & 1;
    v304 = (void *)v630(&v692, v628, v629);
    v305 = *v637;
    *v637 = v304;

  }
LABEL_98:
  sub_1A513660C(v637, v608);
  sub_1A5126C50((uint64_t)v637, v628);
  return sub_1A51340F4(v637);
}

id *sub_1A5123D70@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t (*v17)(_QWORD, double);
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  unsigned __int8 *v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  id v81;
  id v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint8_t *v99;
  uint64_t v100;
  uint64_t v101;
  _BYTE **v102;
  uint64_t *v103;
  uint64_t *v104;
  uint64_t v105;
  int v106;
  int v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  uint64_t *v114;
  uint32_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  int v119;
  uint64_t v120;
  int v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  uint64_t v146;
  NSObject *v147;
  int v148;
  uint64_t v149;
  id v150;
  void *v151;
  id v152;
  void *v153;
  id v154;
  _QWORD *v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  uint64_t v159;
  unint64_t v160;
  uint64_t v161;
  unint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  char *v167;
  uint64_t v168;
  unint64_t v169;
  uint64_t v170;
  id v171;
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  uint64_t v175;
  unint64_t v176;
  uint64_t v177;
  int v178;
  _BYTE *v179;
  _BYTE *v180;
  uint64_t v181;
  _QWORD *v182;
  id *v183;
  id v184;
  uint64_t (*v185)(uint64_t, uint64_t, uint64_t);
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  _BYTE *v189;
  uint64_t v190;
  uint32_t v191;
  uint64_t v192;
  void *v193;
  id v194;
  uint64_t v195;
  char v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t (*v199)(_QWORD, double);
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char v203;
  char *v204;

  v155 = a7;
  v173 = a1;
  v179 = a2;
  v172 = a3;
  v171 = a5;
  v170 = a6;
  v204 = 0;
  v202 = 0;
  v203 = 0;
  v201 = 0;
  v199 = 0;
  v200 = 0;
  v198 = 0;
  v197 = 0;
  v194 = 0;
  v193 = 0;
  v192 = 0;
  v156 = 0;
  v168 = 0;
  v157 = _s6LoggerVMa();
  v158 = (*(_QWORD *)(*(_QWORD *)(v157 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](0);
  v159 = (uint64_t)&v83 - v158;
  v160 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v9);
  v161 = (uint64_t)&v83 - v160;
  v162 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v11);
  v163 = (uint64_t)&v83 - v162;
  v164 = sub_1A594A764();
  v165 = *(_QWORD *)(v164 - 8);
  v166 = (*(_QWORD *)(v165 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v168);
  v167 = (char *)&v83 - v166;
  v169 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for Activity.MailboxStatus(v12) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v168);
  v180 = (char *)&v83 - v169;
  v175 = *(_QWORD *)(*(_QWORD *)(_s15MailboxActivityVMa() - 8) + 64);
  v174 = (v175 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v173);
  v182 = (id *)((char *)&v83 - v174);
  v176 = (v175 + 15) & 0xFFFFFFFFFFFFFFF0;
  v14 = MEMORY[0x1E0C80A78](v13);
  v183 = (id *)((char *)&v83 - v176);
  v204 = (char *)&v83 - v176;
  v177 = *v15;
  v178 = *((unsigned __int8 *)v15 + 8);
  v202 = v177;
  v203 = v178 & 1;
  v201 = v16;
  v199 = v17;
  v200 = a4;
  v198 = v18;
  v197 = v19;
  v195 = v177;
  v196 = v178 & 1;
  v181 = v17(&v195, v14);
  sub_1A5132BA4(v179, v180);
  sub_1A5110324(v181, v180, v182);
  sub_1A5133E20(v182, v183);
  v184 = *v183;
  v20 = v184;
  if (v184)
  {
    v154 = v184;
    v152 = v184;
    v194 = v184;
    sub_1A5126CF8();
    v153 = v21;
    if ((unint64_t)v21 <= 1)
    {
      sub_1A51369CC(v153);

    }
    else
    {
      v151 = v153;
      v150 = v151;
      v193 = v151;
      if ((v178 & 1) == 0)
      {
        v149 = v177;
        v110 = v177;
        v192 = v177;
        (*(void (**)(char *, uint64_t, uint64_t))(v165 + 16))(v167, v170, v164);
        sub_1A5112AC0(v170, v163);
        sub_1A5112AC0(v163, v161);
        sub_1A5136A08(v163, v159);
        v22 = (unsigned __int8 *)(v161 + *(int *)(v157 + 20));
        v106 = *v22;
        v107 = *((_DWORD *)v22 + 1);
        sub_1A5112B28(v161);
        v109 = 24;
        v126 = 7;
        v23 = swift_allocObject();
        v24 = v107;
        v117 = v23;
        *(_BYTE *)(v23 + 16) = v106;
        *(_DWORD *)(v23 + 20) = v24;
        sub_1A5130E98();
        sub_1A5130E98();
        sub_1A5130E98();
        v25 = swift_allocObject();
        v26 = v107;
        v108 = v25;
        *(_BYTE *)(v25 + 16) = v106;
        *(_DWORD *)(v25 + 20) = v26;
        swift_retain();
        v125 = 32;
        v27 = swift_allocObject();
        v28 = v108;
        v122 = v27;
        *(_QWORD *)(v27 + 16) = sub_1A5130EE0;
        *(_QWORD *)(v27 + 24) = v28;
        sub_1A5130E98();
        sub_1A5130E98();
        swift_release();
        sub_1A5112B28(v159);
        v111 = swift_allocObject();
        *(_QWORD *)(v111 + 16) = v110;
        swift_retain();
        v29 = swift_allocObject();
        v30 = v111;
        v127 = v29;
        *(_QWORD *)(v29 + 16) = sub_1A5134394;
        *(_QWORD *)(v29 + 24) = v30;
        swift_release();
        v147 = sub_1A594A74C();
        v148 = sub_1A594C030();
        v114 = &v190;
        v190 = 33;
        v112 = sub_1A5130F74();
        v113 = sub_1A5130FDC();
        sub_1A5131044();
        sub_1A594B880();
        v115 = v191;
        v124 = 17;
        v129 = swift_allocObject();
        v119 = 16;
        *(_BYTE *)(v129 + 16) = 16;
        v130 = swift_allocObject();
        v121 = 4;
        *(_BYTE *)(v130 + 16) = 4;
        v31 = swift_allocObject();
        v116 = v31;
        *(_QWORD *)(v31 + 16) = sub_1A5130E8C;
        *(_QWORD *)(v31 + 24) = 0;
        v32 = swift_allocObject();
        v33 = v116;
        v131 = v32;
        *(_QWORD *)(v32 + 16) = sub_1A51312FC;
        *(_QWORD *)(v32 + 24) = v33;
        v132 = swift_allocObject();
        *(_BYTE *)(v132 + 16) = 0;
        v133 = swift_allocObject();
        *(_BYTE *)(v133 + 16) = 1;
        v34 = swift_allocObject();
        v35 = v117;
        v118 = v34;
        *(_QWORD *)(v34 + 16) = sub_1A5130E6C;
        *(_QWORD *)(v34 + 24) = v35;
        v36 = swift_allocObject();
        v37 = v118;
        v134 = v36;
        *(_QWORD *)(v36 + 16) = sub_1A51315B4;
        *(_QWORD *)(v36 + 24) = v37;
        v135 = swift_allocObject();
        *(_BYTE *)(v135 + 16) = v119;
        v136 = swift_allocObject();
        *(_BYTE *)(v136 + 16) = v121;
        v38 = swift_allocObject();
        v120 = v38;
        *(_QWORD *)(v38 + 16) = sub_1A5130F68;
        *(_QWORD *)(v38 + 24) = 0;
        v39 = swift_allocObject();
        v40 = v120;
        v137 = v39;
        *(_QWORD *)(v39 + 16) = sub_1A51312FC;
        *(_QWORD *)(v39 + 24) = v40;
        v138 = swift_allocObject();
        *(_BYTE *)(v138 + 16) = 0;
        v139 = swift_allocObject();
        *(_BYTE *)(v139 + 16) = v121;
        v41 = swift_allocObject();
        v42 = v122;
        v123 = v41;
        *(_QWORD *)(v41 + 16) = sub_1A5130F5C;
        *(_QWORD *)(v41 + 24) = v42;
        v43 = swift_allocObject();
        v44 = v123;
        v140 = v43;
        *(_QWORD *)(v43 + 16) = sub_1A5131954;
        *(_QWORD *)(v43 + 24) = v44;
        v141 = swift_allocObject();
        *(_BYTE *)(v141 + 16) = 32;
        v142 = swift_allocObject();
        *(_BYTE *)(v142 + 16) = 8;
        v45 = swift_allocObject();
        v46 = v127;
        v128 = v45;
        *(_QWORD *)(v45 + 16) = sub_1A51343D8;
        *(_QWORD *)(v45 + 24) = v46;
        v47 = swift_allocObject();
        v48 = v128;
        v144 = v47;
        *(_QWORD *)(v47 + 16) = sub_1A5130F5C;
        *(_QWORD *)(v47 + 24) = v48;
        v146 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A48D0);
        v143 = sub_1A594CD14();
        v145 = v49;
        swift_retain();
        v50 = v129;
        v51 = v145;
        *v145 = sub_1A5131290;
        v51[1] = v50;
        swift_retain();
        v52 = v130;
        v53 = v145;
        v145[2] = sub_1A5131290;
        v53[3] = v52;
        swift_retain();
        v54 = v131;
        v55 = v145;
        v145[4] = sub_1A5131460;
        v55[5] = v54;
        swift_retain();
        v56 = v132;
        v57 = v145;
        v145[6] = sub_1A5131290;
        v57[7] = v56;
        swift_retain();
        v58 = v133;
        v59 = v145;
        v145[8] = sub_1A5131290;
        v59[9] = v58;
        swift_retain();
        v60 = v134;
        v61 = v145;
        v145[10] = sub_1A51315FC;
        v61[11] = v60;
        swift_retain();
        v62 = v135;
        v63 = v145;
        v145[12] = sub_1A5131290;
        v63[13] = v62;
        swift_retain();
        v64 = v136;
        v65 = v145;
        v145[14] = sub_1A5131290;
        v65[15] = v64;
        swift_retain();
        v66 = v137;
        v67 = v145;
        v145[16] = sub_1A5131460;
        v67[17] = v66;
        swift_retain();
        v68 = v138;
        v69 = v145;
        v145[18] = sub_1A5131290;
        v69[19] = v68;
        swift_retain();
        v70 = v139;
        v71 = v145;
        v145[20] = sub_1A5131290;
        v71[21] = v70;
        swift_retain();
        v72 = v140;
        v73 = v145;
        v145[22] = sub_1A513199C;
        v73[23] = v72;
        swift_retain();
        v74 = v141;
        v75 = v145;
        v145[24] = sub_1A5131290;
        v75[25] = v74;
        swift_retain();
        v76 = v142;
        v77 = v145;
        v145[26] = sub_1A5131290;
        v77[27] = v76;
        swift_retain();
        v78 = v144;
        v79 = v145;
        v145[28] = sub_1A5133578;
        v79[29] = v78;
        sub_1A5113324();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v147, (os_log_type_t)v148))
        {
          v80 = v156;
          v99 = (uint8_t *)sub_1A594C348();
          v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
          v100 = sub_1A5130D14(0);
          v101 = sub_1A5130D14(1);
          v102 = &v189;
          v189 = v99;
          v103 = &v188;
          v188 = v100;
          v104 = &v187;
          v187 = v101;
          sub_1A5130D6C(2, &v189);
          sub_1A5130D6C(5, v102);
          v185 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v186 = v129;
          sub_1A5130D80(&v185, (uint64_t)v102, (uint64_t)v103, (uint64_t)v104);
          v105 = v80;
          if (v80)
          {
            __break(1u);
          }
          else
          {
            v185 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v186 = v130;
            sub_1A5130D80(&v185, (uint64_t)&v189, (uint64_t)&v188, (uint64_t)&v187);
            v97 = 0;
            v185 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131460;
            v186 = v131;
            sub_1A5130D80(&v185, (uint64_t)&v189, (uint64_t)&v188, (uint64_t)&v187);
            v96 = 0;
            v185 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v186 = v132;
            sub_1A5130D80(&v185, (uint64_t)&v189, (uint64_t)&v188, (uint64_t)&v187);
            v95 = 0;
            v185 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v186 = v133;
            sub_1A5130D80(&v185, (uint64_t)&v189, (uint64_t)&v188, (uint64_t)&v187);
            v94 = 0;
            v185 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A51315FC;
            v186 = v134;
            sub_1A5130D80(&v185, (uint64_t)&v189, (uint64_t)&v188, (uint64_t)&v187);
            v93 = 0;
            v185 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v186 = v135;
            sub_1A5130D80(&v185, (uint64_t)&v189, (uint64_t)&v188, (uint64_t)&v187);
            v92 = 0;
            v185 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v186 = v136;
            sub_1A5130D80(&v185, (uint64_t)&v189, (uint64_t)&v188, (uint64_t)&v187);
            v91 = 0;
            v185 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131460;
            v186 = v137;
            sub_1A5130D80(&v185, (uint64_t)&v189, (uint64_t)&v188, (uint64_t)&v187);
            v90 = 0;
            v185 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v186 = v138;
            sub_1A5130D80(&v185, (uint64_t)&v189, (uint64_t)&v188, (uint64_t)&v187);
            v89 = 0;
            v185 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v186 = v139;
            sub_1A5130D80(&v185, (uint64_t)&v189, (uint64_t)&v188, (uint64_t)&v187);
            v88 = 0;
            v185 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A513199C;
            v186 = v140;
            sub_1A5130D80(&v185, (uint64_t)&v189, (uint64_t)&v188, (uint64_t)&v187);
            v87 = 0;
            v185 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v186 = v141;
            sub_1A5130D80(&v185, (uint64_t)&v189, (uint64_t)&v188, (uint64_t)&v187);
            v86 = 0;
            v185 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v186 = v142;
            sub_1A5130D80(&v185, (uint64_t)&v189, (uint64_t)&v188, (uint64_t)&v187);
            v85 = 0;
            v185 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5133578;
            v186 = v144;
            sub_1A5130D80(&v185, (uint64_t)&v189, (uint64_t)&v188, (uint64_t)&v187);
            _os_log_impl(&dword_1A4F90000, v147, (os_log_type_t)v148, "[%.*hhx-%.*X] Marking EMActivity for '%s' as failed.", v99, v115);
            sub_1A5130DC4(v100);
            sub_1A5130DC4(v101);
            sub_1A594C330();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
          }
        }
        else
        {
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
        }

        (*(void (**)(char *, uint64_t))(v165 + 8))(v167, v164);
      }
      v84 = objc_msgSend(v152, sel_objectID);
      v81 = v150;
      v83 = (id)sub_1A5949D98();

      objc_msgSend(v171, sel_activityWithID_finishedWithError_, v84, v83);
    }
  }
  sub_1A513660C(v183, v155);
  sub_1A5112B28(v170);

  sub_1A5112518((uint64_t)v179);
  return sub_1A51340F4(v183);
}

uint64_t sub_1A5125508()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t result;
  id v7;
  char *v8;
  unsigned __int8 *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[13];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint8_t *v71;
  uint64_t v72;
  uint64_t v73;
  _BYTE **v74;
  uint64_t *v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t *v78;
  int v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t *v86;
  uint32_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  NSObject *v119;
  int v120;
  id v121;
  id v122;
  id v123;
  uint64_t v124;
  void *v125;
  uint64_t v126;
  void *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t *v139;
  uint64_t i;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  unint64_t v151;
  uint64_t v152;
  unint64_t v153;
  id v154;
  uint64_t v155;
  uint64_t v156;
  _QWORD *v157;
  unsigned int v158;
  void *v159;
  uint64_t (*v160)(uint64_t, uint64_t, uint64_t);
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  _BYTE *v164;
  uint64_t v165;
  uint32_t v166;
  void *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  _QWORD v176[2];
  char v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  _BYTE __b[88];
  uint64_t v186;
  uint64_t v187;

  v187 = 0;
  v186 = 0;
  memset(__b, 0, sizeof(__b));
  v142 = 0;
  v159 = 0;
  v147 = 0;
  v143 = sub_1A594A764();
  v144 = *(_QWORD *)(v143 - 8);
  v145 = (*(_QWORD *)(v144 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](0);
  v146 = (char *)v67 - v145;
  v148 = _s6LoggerVMa();
  v149 = (*(_QWORD *)(*(_QWORD *)(v148 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v147);
  v150 = (uint64_t)v67 - v149;
  v151 = (v1 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v2);
  v152 = (uint64_t)v67 - v151;
  v156 = sub_1A594AED8();
  v155 = *(_QWORD *)(v156 - 8);
  v153 = (*(_QWORD *)(v155 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v156);
  v157 = (_QWORD *)((char *)v67 - v153);
  v187 = v0;
  swift_retain();
  v154 = *(id *)(v0 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_workloop);
  v3 = v154;
  v4 = v155;
  *v157 = v154;
  (*(void (**)(void))(v4 + 104))();
  v158 = sub_1A594AEF0();
  (*(void (**)(_QWORD *, uint64_t))(v155 + 8))(v157, v156);
  result = v158;
  if ((v158 & 1) != 0)
  {
    swift_release();
    v135 = 0;
    v186 = 0;
    v130 = &v177;
    v136 = 0;
    swift_beginAccess();
    v129 = *(_QWORD *)(v141 + 88);
    v128 = _s15MailboxActivityVMa();
    sub_1A51105C8();
    v133 = sub_1A594B094();
    swift_endAccess();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v132 = v176;
    v176[0] = v133;
    v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE79B8D8);
    sub_1A51385D0();
    sub_1A594B778();
    sub_1A5110C34();
    v134 = v176[1];
    swift_bridgeObjectRelease();
    v139 = &v175;
    v175 = v134;
    v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1028);
    v138 = sub_1A5138640();
    sub_1A51386A4();
    sub_1A594CA8C();
    sub_1A5110C34();
    v168 = v178;
    v169 = v179;
    v170 = v180;
    v171 = v181;
    v172 = v182;
    v173 = v183;
    v174 = v184;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1060);
    sub_1A594C8E8();
    for (i = v142; ; i = v126)
    {
      v126 = i;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1038);
      result = sub_1A594C8F4();
      v127 = v167;
      if (!v167)
        break;
      v125 = v127;
      v123 = v127;
      v159 = v127;
      v124 = v186 + 1;
      if (__OFADD__(v186, 1))
        goto LABEL_25;
      v186 = v124;
      v122 = *(id *)(v141 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_activityPersistence);
      v7 = v122;
      v121 = objc_msgSend(v123, sel_objectID);
      objc_msgSend(v122, sel_activityWithID_finishedWithError_);

    }
    v8 = v146;
    sub_1A5138714();
    v78 = &OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger;
    sub_1A5112AC0(v141 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger, v152);
    (*(void (**)(char *, uint64_t, uint64_t))(v144 + 16))(v8, v152, v143);
    sub_1A5112B28(v152);
    swift_retain();
    swift_retain();
    sub_1A5112AC0(v141 + *v78, v150);
    v9 = (unsigned __int8 *)(v150 + *(int *)(v148 + 20));
    v79 = *v9;
    v80 = *((_DWORD *)v9 + 1);
    sub_1A5112B28(v150);
    swift_release();
    v82 = 24;
    v98 = 7;
    v10 = swift_allocObject();
    v11 = v80;
    v89 = v10;
    *(_BYTE *)(v10 + 16) = v79;
    *(_DWORD *)(v10 + 20) = v11;
    sub_1A5130E98();
    sub_1A5130E98();
    sub_1A5130E98();
    v12 = swift_allocObject();
    v13 = v80;
    v81 = v12;
    *(_BYTE *)(v12 + 16) = v79;
    *(_DWORD *)(v12 + 20) = v13;
    swift_retain();
    v97 = 32;
    v14 = swift_allocObject();
    v15 = v81;
    v94 = v14;
    *(_QWORD *)(v14 + 16) = sub_1A5130EE0;
    *(_QWORD *)(v14 + 24) = v15;
    sub_1A5130E98();
    sub_1A5130E98();
    swift_release();
    swift_release();
    v83 = v186;
    v99 = swift_allocObject();
    *(_QWORD *)(v99 + 16) = v83;
    v119 = sub_1A594A74C();
    v120 = sub_1A594C030();
    v86 = &v165;
    v165 = 33;
    v84 = sub_1A5130F74();
    v85 = sub_1A5130FDC();
    sub_1A5131044();
    sub_1A594B880();
    v87 = v166;
    v96 = 17;
    v101 = swift_allocObject();
    v91 = 16;
    *(_BYTE *)(v101 + 16) = 16;
    v102 = swift_allocObject();
    v93 = 4;
    *(_BYTE *)(v102 + 16) = 4;
    v16 = swift_allocObject();
    v88 = v16;
    *(_QWORD *)(v16 + 16) = sub_1A5130E8C;
    *(_QWORD *)(v16 + 24) = 0;
    v17 = swift_allocObject();
    v18 = v88;
    v103 = v17;
    *(_QWORD *)(v17 + 16) = sub_1A51312FC;
    *(_QWORD *)(v17 + 24) = v18;
    v104 = swift_allocObject();
    *(_BYTE *)(v104 + 16) = 0;
    v105 = swift_allocObject();
    *(_BYTE *)(v105 + 16) = 1;
    v19 = swift_allocObject();
    v20 = v89;
    v90 = v19;
    *(_QWORD *)(v19 + 16) = sub_1A5130E6C;
    *(_QWORD *)(v19 + 24) = v20;
    v21 = swift_allocObject();
    v22 = v90;
    v106 = v21;
    *(_QWORD *)(v21 + 16) = sub_1A51315B4;
    *(_QWORD *)(v21 + 24) = v22;
    v107 = swift_allocObject();
    *(_BYTE *)(v107 + 16) = v91;
    v108 = swift_allocObject();
    *(_BYTE *)(v108 + 16) = v93;
    v23 = swift_allocObject();
    v92 = v23;
    *(_QWORD *)(v23 + 16) = sub_1A5130F68;
    *(_QWORD *)(v23 + 24) = 0;
    v24 = swift_allocObject();
    v25 = v92;
    v109 = v24;
    *(_QWORD *)(v24 + 16) = sub_1A51312FC;
    *(_QWORD *)(v24 + 24) = v25;
    v110 = swift_allocObject();
    *(_BYTE *)(v110 + 16) = 0;
    v111 = swift_allocObject();
    *(_BYTE *)(v111 + 16) = v93;
    v26 = swift_allocObject();
    v27 = v94;
    v95 = v26;
    *(_QWORD *)(v26 + 16) = sub_1A5130F5C;
    *(_QWORD *)(v26 + 24) = v27;
    v28 = swift_allocObject();
    v29 = v95;
    v112 = v28;
    *(_QWORD *)(v28 + 16) = sub_1A5131954;
    *(_QWORD *)(v28 + 24) = v29;
    v113 = swift_allocObject();
    *(_BYTE *)(v113 + 16) = 0;
    v114 = swift_allocObject();
    *(_BYTE *)(v114 + 16) = 8;
    v30 = swift_allocObject();
    v31 = v99;
    v100 = v30;
    *(_QWORD *)(v30 + 16) = sub_1A5138828;
    *(_QWORD *)(v30 + 24) = v31;
    v32 = swift_allocObject();
    v33 = v100;
    v116 = v32;
    *(_QWORD *)(v32 + 16) = sub_1A5138BDC;
    *(_QWORD *)(v32 + 24) = v33;
    v118 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A48D0);
    v115 = sub_1A594CD14();
    v117 = v34;
    swift_retain();
    v35 = v101;
    v36 = v117;
    *v117 = sub_1A5131290;
    v36[1] = v35;
    swift_retain();
    v37 = v102;
    v38 = v117;
    v117[2] = sub_1A5131290;
    v38[3] = v37;
    swift_retain();
    v39 = v103;
    v40 = v117;
    v117[4] = sub_1A5131460;
    v40[5] = v39;
    swift_retain();
    v41 = v104;
    v42 = v117;
    v117[6] = sub_1A5131290;
    v42[7] = v41;
    swift_retain();
    v43 = v105;
    v44 = v117;
    v117[8] = sub_1A5131290;
    v44[9] = v43;
    swift_retain();
    v45 = v106;
    v46 = v117;
    v117[10] = sub_1A51315FC;
    v46[11] = v45;
    swift_retain();
    v47 = v107;
    v48 = v117;
    v117[12] = sub_1A5131290;
    v48[13] = v47;
    swift_retain();
    v49 = v108;
    v50 = v117;
    v117[14] = sub_1A5131290;
    v50[15] = v49;
    swift_retain();
    v51 = v109;
    v52 = v117;
    v117[16] = sub_1A5131460;
    v52[17] = v51;
    swift_retain();
    v53 = v110;
    v54 = v117;
    v117[18] = sub_1A5131290;
    v54[19] = v53;
    swift_retain();
    v55 = v111;
    v56 = v117;
    v117[20] = sub_1A5131290;
    v56[21] = v55;
    swift_retain();
    v57 = v112;
    v58 = v117;
    v117[22] = sub_1A513199C;
    v58[23] = v57;
    swift_retain();
    v59 = v113;
    v60 = v117;
    v117[24] = sub_1A5131290;
    v60[25] = v59;
    swift_retain();
    v61 = v114;
    v62 = v117;
    v117[26] = sub_1A5131290;
    v62[27] = v61;
    swift_retain();
    v63 = v116;
    v64 = v117;
    v117[28] = sub_1A5138C24;
    v64[29] = v63;
    sub_1A5113324();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v119, (os_log_type_t)v120))
    {
      v65 = v126;
      v71 = (uint8_t *)sub_1A594C348();
      v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
      v70 = 0;
      v72 = sub_1A5130D14(0);
      v73 = sub_1A5130D14(v70);
      v74 = &v164;
      v164 = v71;
      v75 = &v163;
      v163 = v72;
      v76 = &v162;
      v162 = v73;
      sub_1A5130D6C(0, &v164);
      sub_1A5130D6C(5, v74);
      v160 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
      v161 = v101;
      sub_1A5130D80(&v160, (uint64_t)v74, (uint64_t)v75, (uint64_t)v76);
      v77 = v65;
      if (v65)
      {
        __break(1u);
      }
      else
      {
        v160 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v161 = v102;
        sub_1A5130D80(&v160, (uint64_t)&v164, (uint64_t)&v163, (uint64_t)&v162);
        v68 = 0;
        v66 = v68;
        v160 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131460;
        v161 = v103;
        sub_1A5130D80(&v160, (uint64_t)&v164, (uint64_t)&v163, (uint64_t)&v162);
        v67[12] = v66;
        v160 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v161 = v104;
        sub_1A5130D80(&v160, (uint64_t)&v164, (uint64_t)&v163, (uint64_t)&v162);
        v67[11] = 0;
        v160 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v161 = v105;
        sub_1A5130D80(&v160, (uint64_t)&v164, (uint64_t)&v163, (uint64_t)&v162);
        v67[10] = 0;
        v160 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A51315FC;
        v161 = v106;
        sub_1A5130D80(&v160, (uint64_t)&v164, (uint64_t)&v163, (uint64_t)&v162);
        v67[9] = 0;
        v160 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v161 = v107;
        sub_1A5130D80(&v160, (uint64_t)&v164, (uint64_t)&v163, (uint64_t)&v162);
        v67[8] = 0;
        v160 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v161 = v108;
        sub_1A5130D80(&v160, (uint64_t)&v164, (uint64_t)&v163, (uint64_t)&v162);
        v67[7] = 0;
        v160 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131460;
        v161 = v109;
        sub_1A5130D80(&v160, (uint64_t)&v164, (uint64_t)&v163, (uint64_t)&v162);
        v67[6] = 0;
        v160 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v161 = v110;
        sub_1A5130D80(&v160, (uint64_t)&v164, (uint64_t)&v163, (uint64_t)&v162);
        v67[5] = 0;
        v160 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v161 = v111;
        sub_1A5130D80(&v160, (uint64_t)&v164, (uint64_t)&v163, (uint64_t)&v162);
        v67[4] = 0;
        v160 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A513199C;
        v161 = v112;
        sub_1A5130D80(&v160, (uint64_t)&v164, (uint64_t)&v163, (uint64_t)&v162);
        v67[3] = 0;
        v160 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v161 = v113;
        sub_1A5130D80(&v160, (uint64_t)&v164, (uint64_t)&v163, (uint64_t)&v162);
        v67[2] = 0;
        v160 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v161 = v114;
        sub_1A5130D80(&v160, (uint64_t)&v164, (uint64_t)&v163, (uint64_t)&v162);
        v67[1] = 0;
        v160 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5138C24;
        v161 = v116;
        sub_1A5130D80(&v160, (uint64_t)&v164, (uint64_t)&v163, (uint64_t)&v162);
        _os_log_impl(&dword_1A4F90000, v119, (os_log_type_t)v120, "[%.*hhx-%.*X] Finished %ld activities as part of tear down.", v71, v87);
        v67[0] = 0;
        sub_1A5130DC4(v72);
        sub_1A5130DC4(v73);
        sub_1A594C330();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
      }
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v144 + 8))(v146, v143);
  }
  else
  {
    __break(1u);
LABEL_25:
    __break(1u);
  }
  return result;
}

_QWORD *sub_1A5126750@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1A5135634(a1, a2);
}

uint64_t sub_1A5126790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[5];
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v9 = a1;
  v12 = a2;
  v13 = a3;
  v19 = 0;
  v18 = 0;
  v17 = 0;
  v20 = a2;
  v10 = (*(_QWORD *)(*(_QWORD *)(a2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3 = MEMORY[0x1E0C80A78](a3);
  v19 = v4;
  v18 = v11;
  (*(void (**)(char *, double))(v5 + 16))((char *)v7 - v10, v3);
  swift_retain();
  v14 = sub_1A594B7C0();
  v8 = v14;
  swift_release();
  v17 = v8;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v7[3] = &v16;
  v16 = v8;
  v7[4] = &v15;
  swift_beginAccess();
  v7[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE79B720);
  v7[2] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7997D0);
  sub_1A5138D10();
  sub_1A594BCAC();
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

BOOL sub_1A5126910(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = 0;
  v4 = 0;
  v5 = *a1;
  v4 = a2;
  v3 = v5;
  return !sub_1A5126968((uint64_t)&v3);
}

BOOL sub_1A5126968(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  unint64_t v3;
  id v4;
  uint64_t v6;
  void *v7;
  _BOOL4 v8;
  _BOOL4 v9;
  id v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  id *v17;
  unsigned int v18;
  uint64_t v19;
  id v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;

  v12 = a1;
  v25 = 0;
  v24 = 0;
  v13 = (*(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE798B30) - 8) + 64)
       + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v12);
  v17 = (id *)((char *)&v6 - v13);
  v14 = *v2;
  v25 = v14;
  v24 = v1;
  swift_beginAccess();
  v15 = *(_QWORD *)(v1 + 88);
  v16 = &v22;
  v22 = v14;
  v18 = 1;
  v23 = 0;
  v19 = _s15MailboxActivityVMa();
  v3 = sub_1A51105C8();
  MEMORY[0x1A85AD590](v16, v15, &unk_1E4E7DC10, v19, v3);
  if ((*(uint64_t (**)(id *, _QWORD))(*(_QWORD *)(v19 - 8) + 48))(v17, v18) == 0)
  {
    v10 = *v17;
    v4 = v10;
    sub_1A5133C14(v17);
    swift_endAccess();
    v11 = v10;
  }
  else
  {
    v7 = 0;
    sub_1A5133C14(v17);
    swift_endAccess();
    v11 = v7;
  }
  v21 = v11;
  v9 = v11 != 0;
  v8 = v9;
  sub_1A5138D80(&v21);
  return v8;
}

uint64_t sub_1A5126B4C(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(char *, uint64_t);
  unint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t *v7;
  char *v8;
  char *v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v6 = a1;
  v13 = 0;
  v4 = (*(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE798B30) - 8) + 64)
      + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v4 - v4;
  v13 = v1;
  v2 = *(void (**)(char *, uint64_t))(*(_QWORD *)(_s15MailboxActivityVMa() - 8) + 56);
  v5 = 1;
  v2(v8, 1);
  v7 = &v11;
  v11 = 0;
  v12 = v5 & 1;
  v9 = &v10;
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE799278);
  sub_1A594B124();
  return swift_endAccess();
}

_BYTE *sub_1A5126C50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;

  v10 = a1;
  v7 = a2;
  v13 = 0;
  v12 = 0;
  v9 = 0;
  v8 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for Activity.MailboxStatus(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v6 - v8;
  v13 = v2;
  v12 = v3;
  sub_1A5132BA4(v3, (_BYTE *)&v6 - v8);
  v4 = _s15MailboxActivityVMa();
  return sub_1A51432B8(v11, (_BYTE *)(v10 + *(int *)(v4 + 20)));
}

void sub_1A5126CF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE v5[64];
  uint64_t v6;
  unint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  unint64_t v10;
  _BYTE *v11;
  unint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int16 v22;
  _BYTE *v23;
  _BYTE *v24;

  v23 = 0;
  v24 = 0;
  v19 = 0;
  v20 = 0;
  v21 = 0;
  v22 = 0;
  v9 = 0;
  v6 = type metadata accessor for SyncError();
  v7 = (*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](0);
  v8 = &v5[-v7];
  v10 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for ConnectionStatus.Error(v0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v9);
  v11 = &v5[-v10];
  v12 = (v1 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v2);
  v13 = &v5[-v12];
  v24 = &v5[-v12];
  v16 = type metadata accessor for Activity.MailboxStatus(v3);
  v15 = (*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v14);
  v17 = &v5[-v15];
  v23 = v4;
  sub_1A5132BA4(v4, &v5[-v15]);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  __asm { BR              X8 }
}

uint64_t sub_1A5126E78()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 200) = *(_QWORD *)(v0 - 168);
  return *(_QWORD *)(v0 - 200);
}

uint64_t sub_1A5127038()
{
  void *v0;
  uint64_t result;
  Swift::Int remaining;
  id v5;
  Swift::Int v6;
  char v7;
  uint64_t v8;
  char v9;

  v5 = objc_msgSend(v0, sel_progress);
  if (!v5)
    return 0;
  objc_msgSend(v5, sel_totalUnitCount);
  sub_1A5138C84();
  sub_1A51391C4();
  sub_1A513922C();
  sub_1A594B928();
  if ((v9 & 1) != 0
    || (objc_msgSend(v5, sel_completedUnitCount), result = sub_1A594B928(), (v7 & 1) != 0
                                                                         || v8 <= 0
                                                                         || v6 < 0
                                                                         || v8 < v6))
  {

    return 0;
  }
  if (!__OFSUB__(v8, v6))
  {
    remaining = Activity.MailboxStatus.Info.FetchProgress.init(remaining:completed:)(v8 - v6, v6).remaining;

    return remaining;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A51272B8()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;

  v14 = 0;
  v13 = 0;
  v11 = type metadata accessor for Activity.MailboxStatus(0);
  v10 = (*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v9);
  v12 = (uint64_t)&v5 - v10;
  v14 = v0;
  sub_1A5132BA4(v0, (_BYTE *)&v5 - v10);
  if (swift_getEnumCaseMultiPayload())
  {
    v5 = 0;
    sub_1A5112518(v12);
    v6 = v5;
    v7 = v5;
    v8 = 1;
  }
  else
  {
    v1 = *(_QWORD *)(v12 + 8);
    v2 = *(_QWORD *)(v12 + 16);
    v3 = *(unsigned __int8 *)(v12 + 24);
    v13 = v12;
    v6 = v1;
    v7 = v2;
    v8 = v3;
  }
  return v6;
}

uint64_t sub_1A51273B8()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE795DD0);
  return sub_1A594B4A8();
}

id sub_1A5127404(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  id v8;
  uint64_t v9;
  uint64_t v10;

  if ((a3 & 1) != 0)
    return objc_msgSend(v8, sel_activityWithID_setCompletedCount_totalCount_, a4, 0, -1);
  sub_1A5139294();
  sub_1A51392FC();
  sub_1A5131044();
  sub_1A594B934();
  Activity.MailboxStatus.Info.FetchProgress.total.getter(a1, a2);
  sub_1A594B934();
  return objc_msgSend(v8, sel_activityWithID_setCompletedCount_totalCount_, a4, v10, v9);
}

uint64_t sub_1A5127578()
{
  void *v0;
  id v1;
  uint64_t v2;
  char v3;
  char v6;
  BOOL v7;
  id v8;
  void *v9;
  id v10;
  _QWORD v11[4];
  void *v12;

  v12 = v0;
  v8 = objc_msgSend(v0, sel_userInfo);
  type metadata accessor for EMActivityUserInfoKey();
  sub_1A513576C();
  sub_1A594AFC8();
  v9 = (void *)*MEMORY[0x1E0D1DB78];
  v1 = (id)*MEMORY[0x1E0D1DB78];
  v10 = v9;
  MEMORY[0x1A85AD590](v11);
  sub_1A5138D80(&v10);
  swift_bridgeObjectRelease();
  if (v11[3])
  {
    v7 = (swift_dynamicCast() & 1) == 0;

    v6 = v7;
  }
  else
  {

    sub_1A5139364((uint64_t)v11);
    v6 = 1;
  }
  if ((v6 & 1) != 0)
    return 3;
  sub_1A5127BFC();
  if ((v3 & 1) != 0)
    return 3;
  else
    return v2;
}

void sub_1A512777C()
{
  _BYTE *v0;
  _QWORD v1[5];
  unint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t EnumCaseMultiPayload;
  uint64_t v6;
  _BYTE *v7;

  v1[2] = 3;
  v7 = 0;
  v6 = 0;
  v1[3] = 0;
  v3 = type metadata accessor for Activity.MailboxStatus(0);
  v2 = (*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v1[4]);
  v4 = (char *)v1 - v2;
  v7 = v0;
  sub_1A5132BA4(v0, (_BYTE *)v1 - v2);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  __asm { BR              X8 }
}

uint64_t sub_1A5127834()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 120) = *(_QWORD *)(v0 - 104);
  return *(_QWORD *)(v0 - 120);
}

uint64_t sub_1A5127914()
{
  type metadata accessor for EMActivityFetchState();
  return sub_1A594B4A8();
}

uint64_t sub_1A512794C(uint64_t a1, uint64_t a2)
{
  id v2;
  id v5;
  id v6;
  uint64_t v7;

  sub_1A51279E8();
  v7 = sub_1A594BCDC();
  v6 = (id)*MEMORY[0x1E0D1DB78];
  v2 = (id)*MEMORY[0x1E0D1DB78];
  objc_msgSend(v5, sel_activityWithID_setUserInfoObject_forKey_, a2, v7, v6);

  return swift_unknownObjectRelease();
}

_BYTE *sub_1A51279D0@<X0>(_BYTE *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1A51126CC(a1, a2);
}

uint64_t sub_1A5127A04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  char *v21;

  v9 = a1;
  v21 = 0;
  v20 = 0;
  v19 = 0;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A66E0);
  v10 = (*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v1);
  v11 = (uint64_t)&v6 - v10;
  v12 = sub_1A594C21C();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = MEMORY[0x1E0C80A78](v16);
  v15 = (char *)&v6 - v14;
  v21 = (char *)&v6 - v14;
  v20 = v3;
  v17 = objc_msgSend(v3, sel_mailboxRowID, v2);
  v19 = v17;
  v18 = objc_msgSend(v16, sel_mailboxPersistence);
  if (v18)
  {
    v8 = v18;
    v7 = v18;
    sub_1A594C228();

  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  }
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_1A51393A4(v11);
    v5 = sub_1A594A0EC();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v9, 1);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v15, v11, v12);
    sub_1A594C210();
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
}

_QWORD *sub_1A5127C20@<X0>(_QWORD *result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = *result;
  a3[1] = a2;
  return result;
}

uint64_t sub_1A5127C30()
{
  return sub_1A594A0E0();
}

uint64_t sub_1A5127C44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t SyncDateHelperVMa;
  uint64_t v29;
  unint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  unsigned int v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  _QWORD v39[3];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v24 = a1;
  v42 = 0;
  v41 = 0;
  v23 = 0;
  v39[0] = 0;
  v39[1] = 0;
  v34 = 0;
  v35 = 0;
  v25 = 0;
  v26 = (*(_QWORD *)(*(_QWORD *)(_s18MailboxPersistenceVMa() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](0);
  v27 = (uint64_t)&v7 - v26;
  v42 = v2;
  v41 = v1;
  SyncDateHelperVMa = _s18LastSyncDateHelperVMa();
  v32 = *(_QWORD *)(v1 + *(int *)(SyncDateHelperVMa + 24));
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v31 = &v40;
  v40 = v32;
  v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A66C8);
  v30 = sub_1A5139414();
  v33 = sub_1A594BE5C();
  sub_1A5110C34();
  swift_bridgeObjectRelease();
  result = v33;
  if ((v33 & 1) == 0)
  {
    v4 = v23;
    sub_1A5110A0C((uint64_t)v22 + *(int *)(SyncDateHelperVMa + 20), v27);
    v18 = *(uint64_t *)((char *)v22 + *(int *)(SyncDateHelperVMa + 24));
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v39[2] = v18;
    result = sub_1A5127FA4((void (*)(char *, char *))sub_1A5127F84, 0, v29, (uint64_t)&type metadata for MailboxRowID, MEMORY[0x1E0DEDCE8], v30, MEMORY[0x1E0DEDD18], v19);
    v20 = v4;
    v21 = result;
    if (v4)
    {
      __break(1u);
    }
    else
    {
      v15 = v21;
      sub_1A5110C34();
      sub_1A5219404();
      swift_bridgeObjectRelease();
      sub_1A5110B24(v27);
      v16 = *(uint64_t *)((char *)v22 + *(int *)(SyncDateHelperVMa + 24));
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v38 = v16;
      sub_1A594BEA4();
      for (i = v20; ; i = v12)
      {
        v12 = i;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A66F0);
        sub_1A594C930();
        v13 = v36;
        v14 = v37;
        if (v37 == (void *)1)
          break;
        v10 = v13;
        v11 = v14;
        v9 = v14;
        v34 = v13;
        v35 = v14;
        v8 = *v22;
        v5 = v8;
        v6 = v9;
        sub_1A5128790(v24, v9);

      }
      result = (uint64_t)v39;
      sub_1A5110C34();
    }
  }
  return result;
}

_QWORD *sub_1A5127F84@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1A5127FA4(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v14;
  _QWORD v15[2];
  void (*v16)(char *, _QWORD);
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t i;
  uint64_t v29;
  void (*v30)(char *, char *);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  const char *v35;
  const char *v36;
  const char *v37;
  const char *v38;
  const char *v39;
  const char *v40;
  uint64_t v41;
  unint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t AssociatedTypeWitness;
  uint64_t v47;
  unint64_t v48;
  char *v49;
  unint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char *v57;
  unint64_t v58;
  char *v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v30 = a1;
  v31 = a2;
  v53 = a3;
  v44 = a4;
  v32 = a5;
  v52 = a6;
  v34 = a8;
  v35 = "Fatal error";
  v36 = "Index out of bounds";
  v37 = "Swift/Collection.swift";
  v38 = "Range requires lowerBound <= upperBound";
  v39 = "Swift/Range.swift";
  v40 = "Index out of range";
  v67 = a3;
  v66 = a4;
  v65 = a5;
  v41 = *(_QWORD *)(a5 - 8);
  v42 = (*(_QWORD *)(v41 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](a1);
  v43 = (char *)v15 - v42;
  v45 = 0;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v47 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v48 = (*(_QWORD *)(v47 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8 = MEMORY[0x1E0C80A78](v45);
  v49 = (char *)v15 - v48;
  v50 = (*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v8);
  v51 = (char *)v15 - v50;
  v54 = swift_getAssociatedTypeWitness();
  v55 = *(_QWORD *)(v54 - 8);
  v56 = (*(_QWORD *)(v55 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v10 = MEMORY[0x1E0C80A78](v53);
  v57 = (char *)v15 - v56;
  v58 = (v11 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v10);
  v59 = (char *)v15 - v58;
  v60 = sub_1A594BD78();
  if (v60)
  {
    v64 = sub_1A594C8B8();
    v29 = sub_1A594C8C4();
    sub_1A594C840();
    result = sub_1A594BD60();
    if (v60 >= 0)
    {
      v27 = 0;
      for (i = v33; ; i = v18)
      {
        v25 = i;
        v26 = v27;
        if (v27 == v60)
          goto LABEL_17;
        if (v26 < 0 || v26 >= v60)
          goto LABEL_16;
        v62 = v26;
        if (v60 < 0)
          goto LABEL_15;
        if (v26 >= v60)
          break;
        v24 = v26 + 1;
        if (__OFADD__(v26, 1))
        {
          __break(1u);
          return result;
        }
        v63 = 0;
        v23 = v24;
LABEL_18:
        v22 = v23;
        if ((v63 & 1) != 0)
        {
          (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v57, v59, v54);
          sub_1A594C66C();
          (*(void (**)(char *, uint64_t))(v55 + 8))(v57, v54);
          v19 = v64;
          swift_retain();
          swift_release();
          v20 = v19;
          v21 = v25;
          return v20;
        }
        v17 = &v61;
        v16 = (void (*)(char *, _QWORD))sub_1A594BED4();
        (*(void (**)(char *))(v47 + 16))(v49);
        v16(v17, 0);
        v14 = v25;
        v30(v49, v43);
        v18 = v14;
        if (v14)
        {
          (*(void (**)(char *, uint64_t))(v47 + 8))(v49, AssociatedTypeWitness);
          (*(void (**)(char *, uint64_t))(v55 + 8))(v59, v54);
          sub_1A5139FB0();
          (*(void (**)(uint64_t, char *, uint64_t))(v41 + 32))(v34, v43, v32);
          return v15[1];
        }
        (*(void (**)(char *, uint64_t))(v47 + 8))(v49, AssociatedTypeWitness);
        sub_1A594C894();
        sub_1A594BDC0();
        result = v18;
        v27 = v22;
      }
      sub_1A594C9B4();
      __break(1u);
LABEL_15:
      sub_1A594C9B4();
      __break(1u);
LABEL_16:
      sub_1A594CA68();
      __break(1u);
LABEL_17:
      v62 = 0;
      v63 = 1;
      v23 = v26;
      goto LABEL_18;
    }
    sub_1A594C9B4();
    __break(1u);
  }
  v20 = sub_1A594B9F4();
  v21 = v33;
  return v20;
}

void sub_1A5128790(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;

  v13 = a1;
  v18 = a2;
  v22 = 0;
  v21 = 0;
  v20 = 0;
  v19 = 0;
  v14 = sub_1A594A0EC();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = (*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v18);
  v17 = (char *)&v7 - v16;
  v22 = v3;
  v21 = v4;
  v20 = v2;
  v5 = v4;
  if (v18)
  {
    v11 = v18;
    v10 = v18;
    v19 = v18;
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v13, v14);
    v9 = sub_1A594A074();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    v8 = (id)*MEMORY[0x1E0D1DB80];
    v6 = v8;
    objc_msgSend(v12, sel_activityWithID_setUserInfoObject_forKey_, v10, v9, v8);

    swift_unknownObjectRelease();
  }
}

uint64_t sub_1A51288E8()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1A594B568();
  qword_1EE798E28 = result;
  qword_1EE798E30 = v1;
  return result;
}

uint64_t *sub_1A5128928()
{
  if (qword_1EE798E40 != -1)
    swift_once();
  return &qword_1EE798E28;
}

uint64_t static SyncError.errorDomain.getter()
{
  uint64_t v1;

  v1 = *sub_1A5128928();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

void SyncError.errorCode.getter()
{
  _QWORD v0[3];
  unint64_t v1;
  unsigned __int8 *v2;
  int v3;
  uint64_t v4;
  _BYTE *v5;

  v5 = 0;
  v1 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for ConnectionStatus.Error(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = (unsigned __int8 *)v0 - v1;
  v5 = (_BYTE *)MEMORY[0x1E0C80A78](v0[2]);
  sub_1A5138E0C(v5, (_BYTE *)v0 - v1);
  v3 = *v2;
  sub_1A5112908((uint64_t)v2);
  v4 = v3;
  __asm { BR              X8 }
}

uint64_t sub_1A5128A60()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 72) = 1;
  return *(_QWORD *)(v0 - 72);
}

uint64_t SyncError.errorUserInfo.getter()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  id v28;
  id v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[2];
  _QWORD v43[4];
  uint64_t v44;
  uint64_t v45;

  v45 = 0;
  v20 = &v44;
  v44 = 0;
  v19 = 0;
  v0 = type metadata accessor for ConnectionStatus.Error(0);
  v17 = *(_QWORD *)(*(_QWORD *)(v0 - 8) + 64);
  v16 = (v17 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v0);
  v33 = (char *)&v12 - v16;
  v18 = v16;
  MEMORY[0x1E0C80A78]((char *)&v12 - v16);
  v1 = (char *)&v12 - v18;
  v22 = (uint64_t)&v12 - v18;
  v45 = v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7993E8);
  sub_1A594CD14();
  v21 = MEMORY[0x1E0DEA968];
  v44 = sub_1A594AFEC();
  v28 = (id)*MEMORY[0x1E0CB2D50];
  v3 = v28;
  v24 = sub_1A594B40C();
  v23 = v4;
  sub_1A5138E0C(v30, v1);
  sub_1A5128DA0();
  v26 = v43;
  v43[3] = v21;
  v43[0] = v5;
  v43[1] = v6;
  sub_1A5112908(v22);
  v25 = v42;
  v42[0] = v24;
  v42[1] = v23;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7992E0);
  sub_1A594B124();
  v7 = v33;

  v29 = (id)*MEMORY[0x1E0CB2D68];
  v8 = v29;
  v31 = sub_1A594B40C();
  v32 = v9;
  sub_1A5138E0C(v30, v7);
  v34 = sub_1A512A6E0();
  v35 = v10;
  sub_1A5112908((uint64_t)v33);
  if (v35)
  {
    v14 = v34;
    v15 = v35;
    v41 = MEMORY[0x1E0DEA968];
    v38 = v34;
    v39 = v35;
  }
  else
  {
    v38 = 0;
    v39 = 0;
    v40 = 0;
    v41 = 0;
  }
  v36 = v31;
  v37 = v32;
  v12 = &v44;
  sub_1A594B124();

  v13 = v44;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5110C34();
  return v13;
}

void sub_1A5128DA0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[167];
  int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v40 = 0;
  v9 = 0;
  v36 = 0;
  v37 = 0;
  v34 = 0;
  v35 = 0;
  v32 = 0;
  v33 = 0;
  v30 = 0;
  v31 = 0;
  v28 = 0;
  v29 = 0;
  v26 = 0;
  v27 = 0;
  v24 = 0;
  v25 = 0;
  v22 = 0;
  v23 = 0;
  v20 = 0;
  v21 = 0;
  v18 = 0;
  v19 = 0;
  v16 = 0;
  v17 = 0;
  v14 = 0;
  v15 = 0;
  v12 = 0;
  v13 = 0;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE796458);
  v6 = (*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v10);
  v0 = (char *)v3 - v6;
  v7 = (uint64_t)v3 - v6;
  v40 = v1;
  v2 = type metadata accessor for ConnectionStatus.Error(0);
  sub_1A5139484(&v8[*(int *)(v2 + 24)], v0);
  sub_1A52195A4((void (*)(char *, char *))sub_1A512BECC, v9, v10, MEMORY[0x1E0DEDCE8], MEMORY[0x1E0DEA968], v11, (uint64_t)&v38);
  sub_1A513618C(v7);
  v3[165] = v38;
  v3[166] = v39;
  v36 = v38;
  v37 = v39;
  v4 = *v8;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v5 = v4;
  __asm { BR              X8 }
}

uint64_t sub_1A512A6E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[32];
  uint64_t EnumCaseMultiPayload;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;

  v45 = 0;
  v44 = 0;
  v42 = 0;
  v43 = 0;
  v40 = 0;
  v41 = 0;
  v38 = 0;
  v39 = 0;
  v36 = 0;
  v37 = 0;
  v34 = 0;
  v35 = 0;
  v32 = 0;
  v33 = 0;
  v30 = 0;
  v31 = 0;
  v29 = 0;
  v27 = 0;
  v28 = 0;
  v26 = 0;
  v24 = 0;
  v25 = 0;
  v23 = 0;
  v21 = 0;
  v22 = 0;
  v20 = 0;
  v18 = 0;
  v19 = 0;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE798510);
  v9 = (*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v1);
  v17 = (char *)v7 - v9;
  v10 = 0;
  v16 = type metadata accessor for ConnectionStatus.Error.Details(0);
  v15 = *(_QWORD *)(v16 - 8);
  v11 = (*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v7 - v11;
  v13 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = MEMORY[0x1E0C80A78](v2);
  v14 = (char *)v7 - v13;
  v45 = (char *)v7 - v13;
  v44 = v0;
  v5 = type metadata accessor for ConnectionStatus.Error(v4);
  sub_1A51395A8((const void *)(v0 + *(int *)(v5 + 20)), v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v17, 1, v16) != 1)
  {
    sub_1A5139894(v17, v14);
    sub_1A5139930();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    __asm { BR              X8 }
  }
  v7[0] = 0;
  sub_1A5139790((uint64_t)v17);
  return v7[0];
}

uint64_t sub_1A512BE10()
{
  return static SyncError.errorDomain.getter();
}

void sub_1A512BE24()
{
  SyncError.errorCode.getter();
}

uint64_t sub_1A512BE38()
{
  return SyncError.errorUserInfo.getter();
}

uint64_t sub_1A512BE4C()
{
  sub_1A5139C4C();
  return sub_1A594CE10();
}

uint64_t sub_1A512BE78()
{
  sub_1A5139C4C();
  return sub_1A594CE04();
}

uint64_t sub_1A512BEA4()
{
  return sub_1A594CE40();
}

uint64_t sub_1A512BEB8()
{
  return sub_1A594CE1C();
}

void sub_1A512BECC(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  void *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  id v26;
  uint64_t *v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;

  v27 = a2;
  v22 = a1;
  v31 = 0;
  v30 = 0;
  v13 = 0;
  v24 = sub_1A594A0EC();
  v23 = *(_QWORD *)(v24 - 8);
  v12 = (*(_QWORD *)(v23 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](0);
  v25 = (char *)&v11 - v12;
  v16 = sub_1A594A170();
  v15 = *(_QWORD *)(v16 - 8);
  v14 = (*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v11 - v14;
  v31 = v2;
  sub_1A5143254();
  v29 = sub_1A512C114();
  v30 = v29;
  v18 = objc_msgSend((id)objc_opt_self(), sel_currentLocale);
  sub_1A594A158();
  v3 = (void *)sub_1A594A140();
  v4 = v25;
  v19 = v3;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v16);

  objc_msgSend(v29, sel_setLocale_, v19);
  sub_1A594B568();
  v20 = v5;
  v21 = (id)sub_1A594B3F4();
  swift_bridgeObjectRelease();
  objc_msgSend(v29, sel_setLocalizedDateFormatFromTemplate_, v21);

  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v4, v22, v24);
  v26 = (id)sub_1A594A074();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v24);
  v28 = objc_msgSend(v29, sel_stringFromDate_, v26);

  v6 = sub_1A594B40C();
  v7 = v27;
  v8 = v6;
  v9 = v28;
  *v27 = v8;
  v7[1] = v10;

}

id sub_1A512C114()
{
  id v0;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return sub_1A512DF4C();
}

id sub_1A512C140()
{
  return objc_msgSend((id)objc_opt_self(), sel_mainBundle);
}

uint64_t sub_1A512C16C()
{
  return sub_1A594B568();
}

id sub_1A512C194(unsigned int a1)
{
  id v1;

  v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return sub_1A512DF6C(a1);
}

void sub_1A512C1D0(_QWORD *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[16];
  void *(*v11)@<X0>(uint64_t@<X0>, uint64_t@<X1>, void *@<X8>);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v14 = v1;
  swift_beginAccess();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_endAccess();
  sub_1A5134870();
  v6 = sub_1A594BC10();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v7 = *(_QWORD *)(v1 + 88);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_endAccess();
  v13 = v7;
  v11 = sub_1A512C348;
  v12 = 0;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE799278);
  v2 = sub_1A5139CE8();
  sub_1A5127FA4((void (*)(char *, char *))sub_1A5139CBC, (uint64_t)v10, v8, (uint64_t)&unk_1E4E7E7F0, MEMORY[0x1E0DEDCE8], v2, MEMORY[0x1E0DEDD18], v9);
  sub_1A5110C34();
  nullsub_1(v6);
  *a1 = v3;
  a1[1] = v4;
}

void *sub_1A512C348@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  id *v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id *v10;
  uint64_t *v11;
  void *v12;
  _QWORD *v13;
  uint64_t v14;
  char v15;
  id *v16;
  uint64_t v17;
  char v18;
  _QWORD v19[6];

  v12 = a3;
  v7 = a1;
  v8 = a2;
  v17 = 0;
  v18 = 0;
  v16 = 0;
  v9 = (*(_QWORD *)(*(_QWORD *)(_s15MailboxActivityVMa() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v8);
  v10 = (id *)((char *)&v7 - v9);
  v4 = *(_QWORD *)v3;
  LOBYTE(v3) = *(_BYTE *)(v3 + 8);
  v17 = v4;
  v18 = v3 & 1;
  v16 = v5;
  v11 = &v14;
  v14 = v4;
  v15 = v3 & 1;
  sub_1A513660C(v5, (uint64_t *)((char *)&v7 - v9));
  v13 = v19;
  sub_1A512C42C((uint64_t)v11, v10, v19);
  return memcpy(v12, v13, 0x30uLL);
}

uint64_t sub_1A512C42C@<X0>(uint64_t a1@<X0>, id *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  id *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  id v40;
  _QWORD v41[9];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  _QWORD __b[6];

  v32 = a3;
  v35 = a1;
  v34 = a2;
  memset(__b, 0, sizeof(__b));
  v44 = 0;
  v45 = 0;
  v43 = 0;
  v42 = 0;
  v33 = 0;
  v36 = type metadata accessor for Activity.MailboxStatus(0);
  v37 = (*(_QWORD *)(*(_QWORD *)(v36 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v35);
  v38 = (char *)v19 - v37;
  v39 = *v3;
  v4 = *((_BYTE *)v3 + 8);
  v44 = v39;
  v45 = v4 & 1;
  v43 = v5;
  __b[2] = 0;
  __b[3] = 0;
  if ((v4 & 1) != 0)
  {
    __b[0] = 0;
    __b[1] = 0;
  }
  else
  {
    v31 = v39;
    v42 = v39;
    v41[4] = v39;
    v41[2] = sub_1A594B4A8();
    v41[3] = v6;
    sub_1A5139D58();
    sub_1A594BE50();
    v28 = v41[8];
    v29 = MEMORY[0x1A85ADB78](v41[5], v41[6], v41[7]);
    v30 = v7;
    swift_bridgeObjectRelease();
    __b[0] = v29;
    __b[1] = v30;
  }
  v8 = v33;
  v26 = *v34;
  v9 = v26;
  v40 = v26;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE799F30);
  result = sub_1A512DA08((void (*)(char *, char *))sub_1A512D8E4, 0, v10, MEMORY[0x1E0DEDCE8], MEMORY[0x1E0DEA968], v27, (uint64_t)v41);
  if (v8)
  {
    __break(1u);
  }
  else
  {
    sub_1A5138D80(&v40);
    v22 = v41[0];
    v23 = v41[1];
    v19[1] = __b;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    __b[2] = v22;
    __b[3] = v23;
    swift_bridgeObjectRelease();
    v12 = _s15MailboxActivityVMa();
    sub_1A5132BA4((_BYTE *)v34 + *(int *)(v12 + 20), v38);
    v25 = sub_1A594B4A8();
    v24 = v13;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    __b[4] = v25;
    __b[5] = v24;
    v20 = __b[0];
    v21 = __b[1];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A51340F4(v34);
    sub_1A5139DC0();
    v14 = v21;
    v15 = v22;
    v16 = v23;
    v17 = v24;
    v18 = v32;
    result = v25;
    *v32 = v20;
    v18[1] = v14;
    v18[2] = v15;
    v18[3] = v16;
    v18[4] = result;
    v18[5] = v17;
  }
  return result;
}

void *sub_1A512C7B8@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t, uint64_t)@<X1>, void *a3@<X8>)
{
  uint64_t v3;
  _BYTE v8[48];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE798AC8);
  a2(a1, a1 + *(int *)(v3 + 48));
  return memcpy(a3, v8, 0x30uLL);
}

BOOL sub_1A512C834(char a1, char a2)
{
  uint64_t v3;
  uint64_t v4;

  if (a1)
  {
    if (a1 == 1)
      v4 = 1;
    else
      v4 = 2;
  }
  else
  {
    v4 = 0;
  }
  if (a2)
  {
    if (a2 == 1)
      v3 = 1;
    else
      v3 = 2;
  }
  else
  {
    v3 = 0;
  }
  return v4 == v3;
}

uint64_t sub_1A512C908()
{
  return sub_1A594CE7C();
}

uint64_t sub_1A512C9B0()
{
  char v2;
  char v3;
  char v4;
  unsigned __int8 v5;

  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B568();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v4 = sub_1A594B580();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v4 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v5 = 0;
LABEL_8:
    swift_bridgeObjectRelease();
    return v5;
  }
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B568();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v3 = sub_1A594B580();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v3 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v5 = 1;
    goto LABEL_8;
  }
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B568();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v2 = sub_1A594B580();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v5 = 2;
    goto LABEL_8;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 3;
}

uint64_t sub_1A512CBE0()
{
  return 3;
}

uint64_t sub_1A512CBF8()
{
  sub_1A5139E00();
  return sub_1A594C678();
}

uint64_t sub_1A512CC40()
{
  return 0;
}

uint64_t sub_1A512CC5C()
{
  return sub_1A594B568();
}

BOOL sub_1A512CD2C(char *a1, char *a2)
{
  return sub_1A512C834(*a1, *a2);
}

uint64_t sub_1A512CD4C()
{
  return sub_1A512CBF8();
}

uint64_t sub_1A512CD64()
{
  return sub_1A512C908();
}

uint64_t sub_1A512CD7C()
{
  return sub_1A512CC5C();
}

uint64_t sub_1A512CD94@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A512C9B0();
  *a1 = result;
  return result;
}

uint64_t sub_1A512CDBC()
{
  return sub_1A512CC40();
}

uint64_t sub_1A512CDD8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A512CBE0();
  *a1 = result;
  return result;
}

uint64_t sub_1A512CE00()
{
  sub_1A5139E6C();
  return sub_1A594CFB4();
}

uint64_t sub_1A512CE2C()
{
  sub_1A5139E6C();
  return sub_1A594CFC0();
}

uint64_t sub_1A512CE58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  _QWORD v6[2];
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  uint64_t v33;
  _QWORD *v34;

  v17 = a1;
  v34 = 0;
  v33 = 0;
  v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE79AD58);
  v18 = *(_QWORD *)(v27 - 8);
  v19 = (*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v22 = (char *)v6 - v19;
  v34 = (_QWORD *)MEMORY[0x1E0C80A78](v17);
  v33 = v1;
  v20 = v34[3];
  v21 = v34[4];
  __swift_project_boxed_opaque_existential_1(v34, v20);
  sub_1A5139E6C();
  sub_1A594CF3C();
  v2 = v24;
  v25 = *v23;
  v26 = v23[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v32 = 0;
  sub_1A594CBD0();
  v28 = v2;
  v29 = v2;
  if (v2)
  {
    v7 = v29;
    swift_bridgeObjectRelease();
    result = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v22, v27);
    v8 = v7;
  }
  else
  {
    swift_bridgeObjectRelease();
    v3 = v28;
    v13 = v23[2];
    v14 = v23[3];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v31 = 1;
    sub_1A594CBD0();
    v15 = v3;
    v16 = v3;
    if (v3)
    {
      v6[1] = v16;
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v22, v27);
    }
    else
    {
      swift_bridgeObjectRelease();
      v4 = v15;
      v9 = v23[4];
      v10 = v23[5];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v30 = 2;
      sub_1A594CC18();
      v11 = v4;
      v12 = v4;
      if (v4)
        v6[0] = v12;
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v22, v27);
    }
  }
  return result;
}

BOOL sub_1A512D0F8(char a1, char a2)
{
  return ((a1 & 1) != 0) == (unint64_t)((a2 & 1) != 0);
}

uint64_t sub_1A512D17C()
{
  return sub_1A594CE7C();
}

uint64_t sub_1A512D1F8()
{
  char v2;
  char v3;
  char v4;

  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B568();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v3 = sub_1A594B580();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v3 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
LABEL_6:
    swift_bridgeObjectRelease();
    return v4 & 1;
  }
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B568();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v2 = sub_1A594B580();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v4 = 1;
    goto LABEL_6;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 2;
}

uint64_t sub_1A512D394()
{
  return 2;
}

uint64_t sub_1A512D3AC()
{
  sub_1A5139ED8();
  return sub_1A594C678();
}

uint64_t sub_1A512D404()
{
  return 0;
}

uint64_t sub_1A512D428()
{
  return sub_1A594B568();
}

uint64_t sub_1A512D4B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[7];
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;

  v11 = a1;
  v17 = a2;
  v10 = a3;
  v27 = 0;
  v25 = 0;
  v26 = 0;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE79AD68);
  v12 = *(_QWORD *)(v18 - 8);
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v16 = (char *)v8 - v13;
  v27 = (_QWORD *)MEMORY[0x1E0C80A78](v11);
  v25 = v3;
  v26 = v4;
  v14 = v27[3];
  v15 = v27[4];
  __swift_project_boxed_opaque_existential_1(v27, v14);
  sub_1A5139F44();
  sub_1A594CF3C();
  v5 = v19;
  v24 = 0;
  sub_1A594CC30();
  v20 = v5;
  v21 = v5;
  if (v5)
  {
    v8[1] = v21;
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v16, v18);
  }
  else
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v8[5] = &v23;
    v23 = v10;
    v8[3] = &v22;
    v22 = 1;
    v8[4] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE799900);
    sub_1A5142B18();
    v6 = v20;
    sub_1A594CC3C();
    v8[6] = v6;
    v9 = v6;
    if (v6)
      v8[0] = v9;
    sub_1A5110C34();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v16, v18);
  }
}

uint64_t sub_1A512D6CC(uint64_t a1)
{
  const void *v1;
  _BYTE __dst[48];

  memcpy(__dst, v1, sizeof(__dst));
  return sub_1A512CE58(a1);
}

BOOL sub_1A512D740(_BYTE *a1, _BYTE *a2)
{
  return sub_1A512D0F8(*a1 & 1, *a2 & 1);
}

uint64_t sub_1A512D768()
{
  return sub_1A512D3AC();
}

uint64_t sub_1A512D784()
{
  return sub_1A512D17C();
}

uint64_t sub_1A512D7A0()
{
  return sub_1A512D428();
}

uint64_t sub_1A512D7BC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A512D1F8();
  *a1 = result;
  return result;
}

uint64_t sub_1A512D7E4()
{
  return sub_1A512D404();
}

uint64_t sub_1A512D804@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A512D394();
  *a1 = result;
  return result;
}

uint64_t sub_1A512D82C()
{
  sub_1A5139F44();
  return sub_1A594CFB4();
}

uint64_t sub_1A512D858()
{
  sub_1A5139F44();
  return sub_1A594CFC0();
}

uint64_t sub_1A512D884(uint64_t a1)
{
  uint64_t *v1;

  return sub_1A512D4B0(a1, *v1, v1[1]);
}

uint64_t sub_1A512D8E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v2;

  sub_1A594CCFC();
  sub_1A594B568();
  sub_1A594CCF0();
  swift_bridgeObjectRelease();
  sub_1A5138640();
  sub_1A51431E4();
  sub_1A594CCD8();
  sub_1A594B568();
  sub_1A594CCF0();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5139FD8();
  result = sub_1A594B550();
  *a1 = result;
  a1[1] = v2;
  return result;
}

uint64_t sub_1A512DA08@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  _QWORD v17[2];
  uint64_t v18;
  void (*v19)(char *, char *);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  unint64_t v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v18 = a7;
  v19 = a1;
  v20 = a2;
  v21 = a3;
  v22 = a4;
  v23 = a5;
  v25 = a6;
  v37 = a4;
  v36 = a5;
  v26 = *(_QWORD *)(a4 - 8);
  v27 = (*(_QWORD *)(v26 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8 = MEMORY[0x1E0C80A78](v7);
  v28 = (char *)v17 - v27;
  v33 = *(_QWORD *)(v9 + 16);
  v35 = v33;
  v32 = *(_QWORD *)(v33 - 8);
  v29 = (*(_QWORD *)(v32 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v10 = MEMORY[0x1E0C80A78](v8);
  v30 = (char *)v17 - v29;
  v31 = (*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v12 = (const void *)MEMORY[0x1E0C80A78](v10);
  v34 = (char *)v17 - v31;
  sub_1A5143138(v12, (char *)v17 - v31, v13, v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v34, 1, v33) == 1)
  {
    result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v18, 1);
    v17[1] = v24;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v30, v34, v33);
    v16 = v24;
    v19(v30, v28);
    v17[0] = v16;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v30, v33);
    if (v16)
    {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(v25, v28, v22);
    }
    else
    {
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v18, 0, 1);
      return v17[0];
    }
  }
  return result;
}

id sub_1A512DF4C()
{
  void *v0;

  return objc_msgSend(v0, sel_init);
}

id sub_1A512DF6C(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, sel_initWithInt_, a1);
}

uint64_t sub_1A512DF90()
{
  sub_1A5142594();
  return sub_1A594CD74() & 1;
}

uint64_t sub_1A512DFD8()
{
  sub_1A5142414();
  sub_1A5142FE8();
  return sub_1A594CB10();
}

uint64_t sub_1A512E010()
{
  sub_1A5142414();
  sub_1A5142FE8();
  return sub_1A594CAEC();
}

uint64_t sub_1A512E058()
{
  sub_1A5142414();
  sub_1A5142FE8();
  return sub_1A594CAF8() & 1;
}

uint64_t sub_1A512E0A4()
{
  sub_1A5142414();
  sub_1A5142FE8();
  return sub_1A594CB04();
}

uint64_t sub_1A512E0EC()
{
  sub_1A5142414();
  sub_1A5142484();
  return sub_1A594CABC();
}

uint64_t sub_1A512E12C()
{
  sub_1A5142414();
  sub_1A5142484();
  return sub_1A594CAE0();
}

uint64_t sub_1A512E174()
{
  sub_1A5142414();
  sub_1A5142484();
  return sub_1A594CAC8();
}

uint64_t sub_1A512E1BC()
{
  sub_1A5142604();
  sub_1A5142C00();
  return sub_1A594CB10();
}

uint64_t sub_1A512E1F4()
{
  sub_1A5142604();
  sub_1A5142C00();
  return sub_1A594CAEC();
}

uint64_t sub_1A512E23C()
{
  sub_1A5142604();
  sub_1A5142C00();
  return sub_1A594CAF8() & 1;
}

uint64_t sub_1A512E288()
{
  sub_1A5142604();
  sub_1A5142C00();
  return sub_1A594CB04();
}

uint64_t sub_1A512E2D0()
{
  sub_1A5142604();
  return sub_1A594CABC();
}

uint64_t sub_1A512E30C()
{
  sub_1A5142604();
  return sub_1A594CAE0();
}

uint64_t sub_1A512E350()
{
  sub_1A5142604();
  return sub_1A594CAC8();
}

void sub_1A512E394(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  sub_1A5127BFC();
  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = v2 & 1;
}

void sub_1A512E3CC(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1A51279E8();
  *a1 = v1;
}

uint64_t sub_1A512E3F8()
{
  sub_1A51453D0();
  return sub_1A594CD74() & 1;
}

uint64_t sub_1A512E440()
{
  sub_1A5142CD8();
  return sub_1A594CD74() & 1;
}

uint64_t sub_1A512E488()
{
  sub_1A5142674();
  sub_1A51426E4();
  return sub_1A594D044();
}

uint64_t sub_1A512E4C8()
{
  sub_1A5142674();
  return sub_1A594CFF0() & 1;
}

uint64_t sub_1A512E500()
{
  sub_1A5142674();
  return sub_1A594D014();
}

uint64_t sub_1A512E53C()
{
  sub_1A5142674();
  return sub_1A594CFFC();
}

uint64_t sub_1A512E578()
{
  sub_1A5142674();
  return sub_1A594D008();
}

uint64_t sub_1A512E5B4()
{
  sub_1A5142674();
  return sub_1A594CFCC() & 1;
}

uint64_t sub_1A512E5F4()
{
  sub_1A5142674();
  return sub_1A594CFD8();
}

uint64_t sub_1A512E630()
{
  sub_1A5142674();
  return sub_1A594CFE4();
}

uint64_t sub_1A512E66C()
{
  sub_1A5142674();
  sub_1A51426E4();
  return sub_1A594D038();
}

uint64_t sub_1A512E6AC()
{
  sub_1A5142674();
  sub_1A51426E4();
  return sub_1A594D020();
}

uint64_t sub_1A512E6EC()
{
  sub_1A5142674();
  sub_1A51426E4();
  return sub_1A594D02C();
}

uint64_t sub_1A512E72C()
{
  return sub_1A594C588();
}

uint64_t sub_1A512E740()
{
  return sub_1A594C5A0() & 1;
}

uint64_t sub_1A512E758()
{
  return sub_1A594C570() & 1;
}

uint64_t sub_1A512E770()
{
  return sub_1A594C57C() & 1;
}

uint64_t sub_1A512E788()
{
  return sub_1A594C594() & 1;
}

uint64_t sub_1A512E7A0()
{
  return sub_1A594C5B8();
}

uint64_t sub_1A512E7D8()
{
  return sub_1A594C5AC();
}

uint64_t sub_1A512E7EC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = nullsub_1(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1A512E818()
{
  sub_1A5141D90();
  return sub_1A594CD74() & 1;
}

uint64_t sub_1A512E860()
{
  sub_1A514274C();
  sub_1A51427BC();
  return sub_1A594D044();
}

uint64_t sub_1A512E8A0()
{
  sub_1A514274C();
  return sub_1A594CFF0() & 1;
}

uint64_t sub_1A512E8D8()
{
  sub_1A514274C();
  return sub_1A594D014();
}

uint64_t sub_1A512E914()
{
  sub_1A514274C();
  return sub_1A594CFFC();
}

uint64_t sub_1A512E950()
{
  sub_1A514274C();
  return sub_1A594D008();
}

uint64_t sub_1A512E98C()
{
  sub_1A514274C();
  return sub_1A594CFCC() & 1;
}

uint64_t sub_1A512E9CC()
{
  sub_1A514274C();
  return sub_1A594CFD8();
}

uint64_t sub_1A512EA08()
{
  sub_1A514274C();
  return sub_1A594CFE4();
}

uint64_t sub_1A512EA44()
{
  sub_1A514274C();
  sub_1A51427BC();
  return sub_1A594D038();
}

uint64_t sub_1A512EA84()
{
  sub_1A514274C();
  sub_1A51427BC();
  return sub_1A594D020();
}

uint64_t sub_1A512EAC4()
{
  sub_1A514274C();
  sub_1A51427BC();
  return sub_1A594D02C();
}

uint64_t sub_1A512EB04()
{
  sub_1A5142DB8();
  sub_1A5142C00();
  return sub_1A594CB10();
}

uint64_t sub_1A512EB3C()
{
  sub_1A5142DB8();
  sub_1A5142C00();
  return sub_1A594CAEC();
}

uint64_t sub_1A512EB84()
{
  sub_1A5142DB8();
  sub_1A5142C00();
  return sub_1A594CAF8() & 1;
}

uint64_t sub_1A512EBD0()
{
  sub_1A5142DB8();
  sub_1A5142C00();
  return sub_1A594CB04();
}

uint64_t sub_1A512EC18()
{
  sub_1A5142824();
  sub_1A5130F74();
  return sub_1A594D044();
}

uint64_t sub_1A512EC58()
{
  sub_1A5142824();
  return sub_1A594CFF0() & 1;
}

uint64_t sub_1A512EC90()
{
  sub_1A5142824();
  return sub_1A594D014();
}

uint64_t sub_1A512ECCC()
{
  sub_1A5142824();
  return sub_1A594CFFC();
}

uint64_t sub_1A512ED08()
{
  sub_1A5142824();
  return sub_1A594D008();
}

uint64_t sub_1A512ED44()
{
  sub_1A5142824();
  return sub_1A594CFCC() & 1;
}

uint64_t sub_1A512ED84()
{
  sub_1A5142824();
  return sub_1A594CFD8();
}

uint64_t sub_1A512EDC0()
{
  sub_1A5142824();
  return sub_1A594CFE4();
}

uint64_t sub_1A512EDFC()
{
  sub_1A5142824();
  sub_1A5130F74();
  return sub_1A594D038();
}

uint64_t sub_1A512EE3C()
{
  sub_1A5142824();
  sub_1A5130F74();
  return sub_1A594D020();
}

uint64_t sub_1A512EE7C()
{
  sub_1A5142824();
  sub_1A5130F74();
  return sub_1A594D02C();
}

uint64_t sub_1A512EEBC@<X0>(unsigned int *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result;

  result = nullsub_1(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1A512EEE8()
{
  sub_1A5145360();
  return sub_1A594CD74() & 1;
}

uint64_t sub_1A512EF30()
{
  sub_1A5142894();
  sub_1A51426E4();
  return sub_1A594D044();
}

uint64_t sub_1A512EF70()
{
  sub_1A5142894();
  return sub_1A594CFF0() & 1;
}

uint64_t sub_1A512EFA8()
{
  sub_1A5142894();
  return sub_1A594D014();
}

uint64_t sub_1A512EFE4()
{
  sub_1A5142894();
  return sub_1A594CFFC();
}

uint64_t sub_1A512F020()
{
  sub_1A5142894();
  return sub_1A594D008();
}

uint64_t sub_1A512F05C()
{
  sub_1A5142894();
  return sub_1A594CFCC() & 1;
}

uint64_t sub_1A512F09C()
{
  sub_1A5142894();
  return sub_1A594CFD8();
}

uint64_t sub_1A512F0D8()
{
  sub_1A5142894();
  return sub_1A594CFE4();
}

uint64_t sub_1A512F114()
{
  sub_1A5142894();
  sub_1A51426E4();
  return sub_1A594D038();
}

uint64_t sub_1A512F154()
{
  sub_1A5142894();
  sub_1A51426E4();
  return sub_1A594D020();
}

uint64_t sub_1A512F194()
{
  sub_1A5142894();
  sub_1A51426E4();
  return sub_1A594D02C();
}

uint64_t sub_1A512F1D4()
{
  sub_1A5142904();
  sub_1A51426E4();
  return sub_1A594D044();
}

uint64_t sub_1A512F214()
{
  sub_1A5142904();
  return sub_1A594CFF0() & 1;
}

uint64_t sub_1A512F24C()
{
  sub_1A5142904();
  return sub_1A594D014();
}

uint64_t sub_1A512F288()
{
  sub_1A5142904();
  return sub_1A594CFFC();
}

uint64_t sub_1A512F2C4()
{
  sub_1A5142904();
  return sub_1A594D008();
}

uint64_t sub_1A512F300()
{
  sub_1A5142904();
  return sub_1A594CFCC() & 1;
}

uint64_t sub_1A512F340()
{
  sub_1A5142904();
  return sub_1A594CFD8();
}

uint64_t sub_1A512F37C()
{
  sub_1A5142904();
  return sub_1A594CFE4();
}

uint64_t sub_1A512F3B8()
{
  sub_1A5142904();
  sub_1A51426E4();
  return sub_1A594D038();
}

uint64_t sub_1A512F3F8()
{
  sub_1A5142904();
  sub_1A51426E4();
  return sub_1A594D020();
}

uint64_t sub_1A512F438()
{
  sub_1A5142904();
  sub_1A51426E4();
  return sub_1A594D02C();
}

uint64_t sub_1A512F478()
{
  sub_1A5142974();
  sub_1A51426E4();
  return sub_1A594D044();
}

uint64_t sub_1A512F4B8()
{
  sub_1A5142974();
  return sub_1A594CFF0() & 1;
}

uint64_t sub_1A512F4F0()
{
  sub_1A5142974();
  return sub_1A594D014();
}

uint64_t sub_1A512F52C()
{
  sub_1A5142974();
  return sub_1A594CFFC();
}

uint64_t sub_1A512F568()
{
  sub_1A5142974();
  return sub_1A594D008();
}

uint64_t sub_1A512F5A4()
{
  sub_1A5142974();
  return sub_1A594CFCC() & 1;
}

uint64_t sub_1A512F5E4()
{
  sub_1A5142974();
  return sub_1A594CFD8();
}

uint64_t sub_1A512F620()
{
  sub_1A5142974();
  return sub_1A594CFE4();
}

uint64_t sub_1A512F65C()
{
  sub_1A5142974();
  sub_1A51426E4();
  return sub_1A594D038();
}

uint64_t sub_1A512F69C()
{
  sub_1A5142974();
  sub_1A51426E4();
  return sub_1A594D020();
}

uint64_t sub_1A512F6DC()
{
  sub_1A5142974();
  sub_1A51426E4();
  return sub_1A594D02C();
}

uint64_t sub_1A512F71C()
{
  sub_1A51429E4();
  sub_1A5142C00();
  return sub_1A594CB10();
}

uint64_t sub_1A512F754()
{
  sub_1A51429E4();
  sub_1A5142C00();
  return sub_1A594CAEC();
}

uint64_t sub_1A512F79C()
{
  sub_1A51429E4();
  sub_1A5142C00();
  return sub_1A594CAF8() & 1;
}

uint64_t sub_1A512F7E8()
{
  sub_1A51429E4();
  sub_1A5142C00();
  return sub_1A594CB04();
}

uint64_t sub_1A512F830()
{
  sub_1A51429E4();
  return sub_1A594CABC();
}

uint64_t sub_1A512F86C()
{
  sub_1A51429E4();
  return sub_1A594CAE0();
}

uint64_t sub_1A512F8B0()
{
  sub_1A51429E4();
  return sub_1A594CAC8();
}

uint64_t sub_1A512F8F4()
{
  sub_1A51415D4();
  return sub_1A594CD74() & 1;
}

uint64_t sub_1A512F93C()
{
  sub_1A51411B4();
  return sub_1A594CD74() & 1;
}

uint64_t sub_1A512F984()
{
  sub_1A5142A54();
  sub_1A5142C00();
  return sub_1A594CB10();
}

uint64_t sub_1A512F9BC()
{
  sub_1A5142A54();
  sub_1A5142C00();
  return sub_1A594CAEC();
}

uint64_t sub_1A512FA04()
{
  sub_1A5142A54();
  sub_1A5142C00();
  return sub_1A594CAF8() & 1;
}

uint64_t sub_1A512FA50()
{
  sub_1A5142A54();
  sub_1A5142C00();
  return sub_1A594CB04();
}

uint64_t sub_1A512FA98()
{
  sub_1A5142A54();
  return sub_1A594CABC();
}

uint64_t sub_1A512FAD4()
{
  sub_1A5142A54();
  return sub_1A594CAE0();
}

uint64_t sub_1A512FB18()
{
  sub_1A5142A54();
  return sub_1A594CAC8();
}

uint64_t sub_1A512FB5C()
{
  sub_1A51430C8();
  sub_1A5142C00();
  return sub_1A594CB10();
}

uint64_t sub_1A512FB94()
{
  sub_1A51430C8();
  sub_1A5142C00();
  return sub_1A594CAEC();
}

uint64_t sub_1A512FBDC()
{
  sub_1A51430C8();
  sub_1A5142C00();
  return sub_1A594CAF8() & 1;
}

uint64_t sub_1A512FC28()
{
  sub_1A51430C8();
  sub_1A5142C00();
  return sub_1A594CB04();
}

uint64_t sub_1A512FC70()
{
  sub_1A514086C();
  sub_1A5143058();
  return sub_1A594CD74() & 1;
}

uint64_t sub_1A512FCBC()
{
  sub_1A51430C8();
  return sub_1A594CABC();
}

uint64_t sub_1A512FCF8()
{
  sub_1A51430C8();
  return sub_1A594CAE0();
}

uint64_t sub_1A512FD3C()
{
  sub_1A51430C8();
  return sub_1A594CAC8();
}

uint64_t sub_1A512FD80()
{
  sub_1A5140974();
  return sub_1A594CD74() & 1;
}

uint64_t sub_1A512FDC8()
{
  sub_1A5140A7C();
  return sub_1A594CD74() & 1;
}

uint64_t sub_1A512FE10()
{
  sub_1A5140B00();
  return sub_1A594C564();
}

uint64_t sub_1A512FE4C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  result = nullsub_1(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_1A512FE88@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t result;

  result = nullsub_1(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_1A512FEB4()
{
  sub_1A5142F08();
  sub_1A51426E4();
  return sub_1A594D044();
}

uint64_t sub_1A512FEF4()
{
  sub_1A5142F08();
  return sub_1A594CFF0() & 1;
}

uint64_t sub_1A512FF2C()
{
  sub_1A5142F08();
  return sub_1A594D014();
}

uint64_t sub_1A512FF68()
{
  sub_1A5142F08();
  return sub_1A594CFFC();
}

uint64_t sub_1A512FFA4()
{
  sub_1A5142F08();
  return sub_1A594D008();
}

uint64_t sub_1A512FFE0()
{
  sub_1A5142F08();
  return sub_1A594CFCC() & 1;
}

uint64_t sub_1A5130020()
{
  sub_1A5142F08();
  return sub_1A594CFD8();
}

uint64_t sub_1A513005C()
{
  sub_1A5142F08();
  return sub_1A594CFE4();
}

uint64_t sub_1A5130098()
{
  sub_1A5142F08();
  sub_1A51426E4();
  return sub_1A594D038();
}

uint64_t sub_1A51300D8()
{
  sub_1A5142F08();
  sub_1A51426E4();
  return sub_1A594D020();
}

uint64_t sub_1A5130118()
{
  sub_1A5142F08();
  sub_1A51426E4();
  return sub_1A594D02C();
}

uint64_t sub_1A5130158()
{
  sub_1A5140C8C();
  return sub_1A594CD74() & 1;
}

uint64_t sub_1A51301A0()
{
  sub_1A5140D10();
  return sub_1A594C564();
}

uint64_t sub_1A51301DC()
{
  sub_1A5141A78();
  return sub_1A594CD74() & 1;
}

uint64_t sub_1A5130224()
{
  sub_1A5141AFC();
  return sub_1A594C564();
}

uint64_t sub_1A5130260@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  result = nullsub_1(*a1);
  *(_DWORD *)a2 = result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

uint64_t sub_1A513029C@<X0>(_DWORD *a1@<X8>)
{
  unsigned int *v1;
  uint64_t result;

  result = nullsub_1(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_1A51302C8()
{
  sub_1A5140D94();
  return sub_1A594CD74() & 1;
}

uint64_t sub_1A5130310()
{
  sub_1A5140E18();
  return sub_1A594C564();
}

uint64_t sub_1A513034C()
{
  sub_1A5140E9C();
  return sub_1A594CD74() & 1;
}

uint64_t sub_1A5130394()
{
  sub_1A5140F20();
  return sub_1A594C564();
}

uint64_t sub_1A51303D0()
{
  sub_1A5140FA4();
  return sub_1A594CD74() & 1;
}

uint64_t sub_1A5130418()
{
  sub_1A5141028();
  return sub_1A594C564();
}

uint64_t sub_1A5130454()
{
  sub_1A51410AC();
  return sub_1A594CD74() & 1;
}

uint64_t sub_1A513049C()
{
  sub_1A5142D48();
  sub_1A51314C0();
  return sub_1A594D044();
}

uint64_t sub_1A51304DC()
{
  sub_1A5142D48();
  return sub_1A594CFF0() & 1;
}

uint64_t sub_1A5130514()
{
  sub_1A5142D48();
  return sub_1A594D014();
}

uint64_t sub_1A5130550()
{
  sub_1A5142D48();
  return sub_1A594CFFC();
}

uint64_t sub_1A513058C()
{
  sub_1A5142D48();
  return sub_1A594D008();
}

uint64_t sub_1A51305C8()
{
  sub_1A5142D48();
  return sub_1A594CFCC() & 1;
}

uint64_t sub_1A5130608()
{
  sub_1A5142D48();
  return sub_1A594CFD8();
}

uint64_t sub_1A5130644()
{
  sub_1A5142D48();
  return sub_1A594CFE4();
}

uint64_t sub_1A5130680()
{
  sub_1A5142D48();
  sub_1A51314C0();
  return sub_1A594D038();
}

uint64_t sub_1A51306C0()
{
  sub_1A5142D48();
  sub_1A51314C0();
  return sub_1A594D020();
}

uint64_t sub_1A5130700()
{
  sub_1A5142D48();
  sub_1A51314C0();
  return sub_1A594D02C();
}

void *sub_1A5130740@<X0>(_QWORD *a1@<X8>)
{
  void *result;

  result = sub_1A5130774();
  *a1 = result;
  return result;
}

void *sub_1A5130774()
{
  id v0;
  void *v2;

  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v2 = (void *)sub_1A594B3F4();
  v0 = v2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v2;
}

uint64_t sub_1A51307CC@<X0>(uint64_t *a1@<X8>)
{
  void **v1;
  uint64_t result;
  uint64_t v3;

  result = sub_1A51307FC(*v1);
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A51307FC(void *a1)
{
  id v1;
  uint64_t v4;

  v1 = a1;
  v4 = sub_1A594B40C();

  return v4;
}

uint64_t sub_1A5130848()
{
  sub_1A5141448();
  return sub_1A594CD74() & 1;
}

id sub_1A5130890@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = sub_1A51308BC(*a1);
  *a2 = result;
  return result;
}

id sub_1A51308BC(void *a1)
{
  id v1;
  id v2;
  id v5;

  v1 = a1;
  type metadata accessor for ProgressUserInfoKey();
  sub_1A51430C8();
  sub_1A5142C00();
  v5 = (id)sub_1A594CB10();
  v2 = v5;

  return v5;
}

uint64_t sub_1A513093C@<X0>(uint64_t *a1@<X8>)
{
  void **v1;
  uint64_t result;

  result = sub_1A5130968(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_1A5130968(void *a1)
{
  id v1;
  uint64_t v4;

  v1 = a1;
  type metadata accessor for ProgressUserInfoKey();
  sub_1A51430C8();
  sub_1A5142C00();
  sub_1A594CB04();

  return v4;
}

uint64_t sub_1A51309DC()
{
  sub_1A513576C();
  sub_1A5142414();
  sub_1A5142484();
  return sub_1A594CAD4();
}

uint64_t sub_1A5130A28()
{
  sub_1A5145258();
  return sub_1A594CD74() & 1;
}

uint64_t sub_1A5130A70()
{
  sub_1A5142F78();
  sub_1A5142604();
  return sub_1A594CAD4();
}

uint64_t sub_1A5130AB8()
{
  sub_1A5141E14();
  return sub_1A594C564();
}

uint64_t sub_1A5130AF4()
{
  sub_1A5142E28();
  sub_1A5142DB8();
  return sub_1A594CAD4();
}

uint64_t sub_1A5130B3C()
{
  sub_1A5142E98();
  sub_1A51429E4();
  return sub_1A594CAD4();
}

uint64_t sub_1A5130B84()
{
  sub_1A5141658();
  return sub_1A594C564();
}

uint64_t sub_1A5130BC0()
{
  sub_1A5142C68();
  sub_1A5142A54();
  return sub_1A594CAD4();
}

uint64_t sub_1A5130C08()
{
  sub_1A5142484();
  sub_1A51430C8();
  return sub_1A594CAD4();
}

uint64_t sub_1A5130C50()
{
  sub_1A5142DB8();
  return sub_1A594CABC();
}

uint64_t sub_1A5130C8C()
{
  sub_1A5142DB8();
  return sub_1A594CAE0();
}

uint64_t sub_1A5130CD0()
{
  sub_1A5142DB8();
  return sub_1A594CAC8();
}

uint64_t sub_1A5130D14(uint64_t a1)
{
  if (a1)
    return sub_1A594C348();
  else
    return 0;
}

uint64_t sub_1A5130D6C(uint64_t result, _BYTE **a2)
{
  _BYTE *v2;

  v2 = *a2;
  *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_1A5130D80(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_1A5130DC4(uint64_t result)
{
  if (result)
  {
    sub_1A594C33C();
    return sub_1A594C330();
  }
  return result;
}

uint64_t sub_1A5130E30(uint64_t result)
{
  return result;
}

uint64_t sub_1A5130E44()
{
  return swift_deallocObject();
}

uint64_t sub_1A5130E6C()
{
  uint64_t v0;
  uint64_t v2;

  LOBYTE(v2) = *(_BYTE *)(v0 + 16);
  HIDWORD(v2) = *(_DWORD *)(v0 + 20);
  return sub_1A5130E30(v2);
}

uint64_t sub_1A5130E8C()
{
  return 2;
}

uint64_t sub_1A5130E98()
{
  return 0;
}

uint64_t sub_1A5130EA4(uint64_t a1)
{
  return HIDWORD(a1);
}

uint64_t sub_1A5130EB8()
{
  return swift_deallocObject();
}

uint64_t sub_1A5130EE0()
{
  uint64_t v0;
  uint64_t v2;

  LOBYTE(v2) = *(_BYTE *)(v0 + 16);
  HIDWORD(v2) = *(_DWORD *)(v0 + 20);
  return sub_1A5130EA4(v2);
}

uint64_t sub_1A5130F00(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1A5130F20()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5130F5C()
{
  uint64_t v0;

  return sub_1A5130F00(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1A5130F68()
{
  return 8;
}

unint64_t sub_1A5130F74()
{
  unint64_t v0;
  uint64_t v2;

  v2 = qword_1EE7A48C0;
  if (!qword_1EE7A48C0)
  {
    v0 = MEMORY[0x1A85B1874](MEMORY[0x1E0DEE148], MEMORY[0x1E0DEE0F8]);
    atomic_store(v0, (unint64_t *)&qword_1EE7A48C0);
    return v0;
  }
  return v2;
}

unint64_t sub_1A5130FDC()
{
  unint64_t v0;
  uint64_t v2;

  v2 = qword_1EE7A48B0;
  if (!qword_1EE7A48B0)
  {
    v0 = MEMORY[0x1A85B1874](MEMORY[0x1E0DEE120], MEMORY[0x1E0DEE0F8]);
    atomic_store(v0, (unint64_t *)&qword_1EE7A48B0);
    return v0;
  }
  return v2;
}

unint64_t sub_1A5131044()
{
  unint64_t v0;
  uint64_t v2;

  v2 = qword_1EE7A47D0;
  if (!qword_1EE7A47D0)
  {
    v0 = MEMORY[0x1A85B1874](MEMORY[0x1E0DEB460], MEMORY[0x1E0DEB418]);
    atomic_store(v0, (unint64_t *)&qword_1EE7A47D0);
    return v0;
  }
  return v2;
}

uint64_t sub_1A51310AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v4)(void);
  uint64_t v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v12 = a3;
  v9 = a4;
  v10 = *(_QWORD *)(a3 - 8);
  v8 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = (void (*)(void))MEMORY[0x1E0C80A78](a1);
  v11 = (char *)&v7 - v8;
  v4();
  v13 = sub_1A594CC9C();
  v14 = v5;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v11, v12);
  return v13;
}

uint64_t sub_1A5131154(uint64_t a1)
{
  return sub_1A5131168(a1);
}

uint64_t sub_1A5131168(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16);
}

void sub_1A5131170()
{
  _QWORD *v0;

  *v0 = *v0;
}

uint64_t sub_1A513117C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_1A51311B0@<X0>(uint64_t (*a1)(void)@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_1A51311E4@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result;

  result = a1();
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (result <= 0x7FFFFFFF)
  {
    *a2 = result;
    return result;
  }
  __break(1u);
  return result;
}

_BYTE **sub_1A5131254(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

uint64_t sub_1A5131268()
{
  return swift_deallocObject();
}

_BYTE **sub_1A5131290(_BYTE **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1A5131254(a1, a2, a3, *(_BYTE *)(v3 + 16));
}

uint64_t sub_1A5131298()
{
  return swift_deallocObject();
}

uint64_t sub_1A51312C0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51312FC@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1A51311E4(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_1A5131308(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[16];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v15 = a1;
  v18 = a6;
  v13[1] = a7;
  v22 = a6;
  v16 = *(_QWORD *)(a6 - 8);
  v13[0] = (*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7 = MEMORY[0x1E0C80A78](a1);
  v17 = (uint64_t)v13 - v13[0];
  v8(v7);
  v14 = sub_1A594C960() >> 3;
  v20 = *v15;
  v21 = v20 + v14;
  sub_1A5131800(v17, sub_1A514464C, (uint64_t)v19, v18, MEMORY[0x1E0DEDCE8], MEMORY[0x1E0DEE9C0] + 8, MEMORY[0x1E0DEDD18], v13[2]);
  v9 = v16;
  v10 = v17;
  v11 = v18;
  *v15 += v14;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v10, v11);
}

uint64_t sub_1A5131424()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5131460(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;

  v8 = *(_QWORD *)(v3 + 16);
  v9 = *(_QWORD *)(v3 + 24);
  v4 = sub_1A51314C0();
  return sub_1A5131308(a1, a2, a3, v8, v9, MEMORY[0x1E0DEDBC8], v4);
}

unint64_t sub_1A51314C0()
{
  unint64_t v0;
  uint64_t v2;

  v2 = qword_1EE7A4170;
  if (!qword_1EE7A4170)
  {
    v0 = MEMORY[0x1A85B1874](MEMORY[0x1E0DEDC10], MEMORY[0x1E0DEDBC8]);
    atomic_store(v0, (unint64_t *)&qword_1EE7A4170);
    return v0;
  }
  return v2;
}

uint64_t sub_1A5131528()
{
  return swift_deallocObject();
}

uint64_t sub_1A5131550()
{
  return swift_deallocObject();
}

uint64_t sub_1A5131578()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51315B4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_1A51311B0(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_1A51315C0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51315FC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;

  v8 = *(_QWORD *)(v3 + 16);
  v9 = *(_QWORD *)(v3 + 24);
  v4 = sub_1A513165C();
  return sub_1A5131308(a1, a2, a3, v8, v9, MEMORY[0x1E0DEDE70], v4);
}

unint64_t sub_1A513165C()
{
  unint64_t v0;
  uint64_t v2;

  v2 = qword_1EE79B480;
  if (!qword_1EE79B480)
  {
    v0 = MEMORY[0x1A85B1874](MEMORY[0x1E0DEDEB0], MEMORY[0x1E0DEDE70]);
    atomic_store(v0, (unint64_t *)&qword_1EE79B480);
    return v0;
  }
  return v2;
}

uint64_t sub_1A51316C4()
{
  return swift_deallocObject();
}

uint64_t sub_1A51316EC()
{
  return swift_deallocObject();
}

uint64_t sub_1A5131714()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5131750()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A513178C()
{
  return swift_deallocObject();
}

uint64_t sub_1A51317B4()
{
  return swift_deallocObject();
}

uint64_t sub_1A51317DC()
{
  return sub_1A594C3CC();
}

uint64_t sub_1A5131800(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t (*v17)(void);
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v17 = a2;
  v13 = a5;
  v14 = a8;
  v23 = a4;
  v22 = a5;
  v21 = a6;
  v15 = *(_QWORD *)(a5 - 8);
  v16 = (*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v9 = MEMORY[0x1E0C80A78]();
  v18 = (char *)&v12 - v16;
  v20 = v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64);
  result = v17();
  v19 = v8;
  if (v8)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(v14, v18, v13);
  return result;
}

uint64_t sub_1A51318E4@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_1A5131918()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5131954@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1A51318E4(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_1A5131960()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A513199C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;

  v8 = *(_QWORD *)(v3 + 16);
  v9 = *(_QWORD *)(v3 + 24);
  v4 = sub_1A5130F74();
  return sub_1A5131308(a1, a2, a3, v8, v9, MEMORY[0x1E0DEE0F8], v4);
}

uint64_t sub_1A51319FC()
{
  return sub_1A5112B64();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  swift_retain();
  result = a1;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  return result;
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

_BYTE *sub_1A5131A60(_BYTE *a1, _BYTE *a2)
{
  _BYTE *result;

  result = a2;
  *a2 = *a1;
  return result;
}

void sub_1A5131A74(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1A5113364(a1, a2, v2);
}

uint64_t block_copy_helper_66(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  swift_retain();
  result = a1;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  return result;
}

uint64_t block_destroy_helper_67()
{
  return swift_release();
}

uint64_t sub_1A5131AD8(uint64_t (**a1)(uint64_t, uint64_t, uint64_t))
{
  uint64_t *v1;

  return sub_1A5130D80(a1, v1[2], v1[3], v1[4]);
}

unint64_t sub_1A5131B04()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE799E20;
  if (!qword_1EE799E20)
  {
    v0 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EE799E10);
    v1 = MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF38], v0);
    atomic_store(v1, (unint64_t *)&qword_1EE799E20);
    return v1;
  }
  return v3;
}

uint64_t _s15MailboxActivityVMa()
{
  uint64_t v1;

  v1 = qword_1EE798B20;
  if (!qword_1EE798B20)
    return swift_getSingletonMetadata();
  return v1;
}

uint64_t _s18LastSyncDateHelperVMa()
{
  uint64_t v1;

  v1 = qword_1EE7A6848;
  if (!qword_1EE7A6848)
    return swift_getSingletonMetadata();
  return v1;
}

_BYTE *sub_1A5131C3C(_BYTE *a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *__dst;
  _BYTE *__src;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v24;
  uint64_t v25;

  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE798AC8);
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t))(v25 + 48))(a1, 1))
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE795E28);
    memcpy(a2, a1, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    *(_QWORD *)a2 = *(_QWORD *)a1;
    a2[8] = a1[8];
    v17 = &a2[*(int *)(v24 + 48)];
    v18 = &a1[*(int *)(v24 + 48)];
    *v17 = *v18;
    v2 = _s15MailboxActivityVMa();
    v19 = (char *)v17 + *(int *)(v2 + 20);
    v20 = (char *)v18 + *(int *)(v2 + 20);
    v21 = type metadata accessor for Activity.MailboxStatus(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *v19 = *v20;
      v12 = type metadata accessor for ConnectionStatus.Error(0);
      __dst = &v19[*(int *)(v12 + 20)];
      __src = &v20[*(int *)(v12 + 20)];
      v15 = type metadata accessor for ConnectionStatus.Error.Details(0);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t))(v16 + 48))(__src, 1))
      {
        v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE798510);
        memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(__dst, __src, *(_QWORD *)(v16 + 64));
        }
        else
        {
          v3 = sub_1A594ACEC();
          (*(void (**)(_BYTE *, _BYTE *))(*(_QWORD *)(v3 - 8) + 32))(__dst, __src);
          swift_storeEnumTagMultiPayload();
        }
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
      }
      v8 = &v19[*(int *)(v12 + 24)];
      v9 = &v20[*(int *)(v12 + 24)];
      v10 = sub_1A594A0EC();
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t))(v11 + 48))(v9, 1))
      {
        v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE796458);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 32))(v8, v9, v10);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v25 + 56))(a2, 0, 1, v24);
  }
  return a2;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1A5131F90()
{
  sub_1A5131FCC();
}

uint64_t sub_1A5131FCC()
{
  return swift_release();
}

_QWORD *sub_1A513200C(_QWORD *a1, _QWORD *a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *__dst;
  char *__src;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v14 = *a1;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  *a2 = v14;
  v16 = a1[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  a2[1] = v16;
  v17 = *(int *)(type metadata accessor for Activity(0) + 24);
  v19 = type metadata accessor for ConnectionStatus.Error(0);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t))(v20 + 48))((char *)a1 + v17, 1))
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE798550);
    memcpy((char *)a2 + v17, (char *)a1 + v17, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  }
  else
  {
    *((_BYTE *)a2 + v17) = *((_BYTE *)a1 + v17);
    __dst = (char *)a2 + v17 + *(int *)(v19 + 20);
    __src = (char *)a1 + v17 + *(int *)(v19 + 20);
    v13 = *(_QWORD *)(type metadata accessor for ConnectionStatus.Error.Details(0) - 8);
    if (!(*(unsigned int (**)(char *, uint64_t))(v13 + 48))(__src, 1))
    {
      v2 = (char *)&loc_1A513214C + dword_1A51323DC[swift_getEnumCaseMultiPayload()];
      __asm { BR              X8 }
    }
    v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE798510);
    memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64));
    v7 = (char *)a2 + v17 + *(int *)(v19 + 24);
    v8 = (char *)a1 + v17 + *(int *)(v19 + 24);
    v9 = sub_1A594A0EC();
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v10 + 48))(v8, 1))
    {
      v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE796458);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))((char *)a2 + v17, 0, 1, v19);
  }
  return a2;
}

uint64_t sub_1A51323EC(uint64_t *a1)
{
  uint64_t v1;

  return sub_1A51186C8(a1, *(_QWORD *)(v1 + 16)) & 1;
}

unint64_t sub_1A5132414()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE799120;
  if (!qword_1EE799120)
  {
    v0 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE799128);
    v1 = MEMORY[0x1A85B1874](MEMORY[0x1E0DE9ED0], v0);
    atomic_store(v1, (unint64_t *)&qword_1EE799120);
    return v1;
  }
  return v3;
}

uint64_t sub_1A5132484(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = *(int *)(type metadata accessor for Activity(0) + 24);
  v10 = type metadata accessor for ConnectionStatus.Error(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(a1 + v8, 1))
  {
    v6 = a1 + v8 + *(int *)(v10 + 20);
    v7 = type metadata accessor for ConnectionStatus.Error.Details(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1))
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload <= 3)
        __asm { BR              X8 }
    }
    v2 = a1 + v8 + *(int *)(v10 + 24);
    v3 = sub_1A594A0EC();
    v4 = *(_QWORD *)(v3 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t))(v4 + 48))(v2, 1))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  }
  return a1;
}

unint64_t sub_1A513267C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE799860;
  if (!qword_1EE799860)
  {
    v0 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE799858);
    v1 = MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF50], v0);
    atomic_store(v1, (unint64_t *)&qword_1EE799860);
    return v1;
  }
  return v3;
}

unint64_t sub_1A51326EC()
{
  unint64_t v0;
  uint64_t v2;

  v2 = qword_1EE798440;
  if (!qword_1EE798440)
  {
    v0 = MEMORY[0x1A85B1874](&protocol conformance descriptor for OpaqueMailboxID, &type metadata for OpaqueMailboxID);
    atomic_store(v0, (unint64_t *)&qword_1EE798440);
    return v0;
  }
  return v2;
}

uint64_t sub_1A5132754()
{
  return swift_retain();
}

_QWORD *sub_1A5132794(uint64_t *a1, _QWORD *a2)
{
  _QWORD *result;
  uint64_t v4;

  v4 = *a1;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  result = a2;
  *a2 = v4;
  a2[1] = a1[1];
  return result;
}

id *sub_1A51327D8(id *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(_s18LastSyncDateHelperVMa() + 20);
  v1 = sub_1A5949EF4();
  (*(void (**)(void))(*(_QWORD *)(v1 - 8) + 8))();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

_BYTE *sub_1A51328B4(_BYTE *a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v6;
  _BYTE *__src;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *__dst;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v17;

  v17 = type metadata accessor for Activity.MailboxStatus(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a2 = *a1;
    v10 = type metadata accessor for ConnectionStatus.Error(0);
    __dst = &a2[*(int *)(v10 + 20)];
    v12 = &a1[*(int *)(v10 + 20)];
    v13 = type metadata accessor for ConnectionStatus.Error.Details(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t))(v14 + 48))(v12, 1))
    {
      v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE798510);
      memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(__dst, v12, *(_QWORD *)(v14 + 64));
      }
      else
      {
        v2 = sub_1A594ACEC();
        (*(void (**)(_BYTE *, _BYTE *))(*(_QWORD *)(v2 - 8) + 32))(__dst, v12);
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
    }
    v6 = &a2[*(int *)(v10 + 24)];
    __src = &a1[*(int *)(v10 + 24)];
    v8 = sub_1A594A0EC();
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t))(v9 + 48))(__src, 1))
    {
      v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE796458);
      memcpy(v6, __src, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 32))(v6, __src, v8);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a2, a1, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  return a2;
}

uint64_t sub_1A5132B18()
{
  return swift_deallocObject();
}

uint64_t sub_1A5132B40()
{
  return swift_deallocObject();
}

uint64_t sub_1A5132B68()
{
  swift_release();
  return swift_deallocObject();
}

_BYTE *sub_1A5132BA4(_BYTE *a1, _BYTE *a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *__dst;
  _BYTE *__src;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v16;

  v16 = type metadata accessor for Activity.MailboxStatus(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a2 = *a1;
    v10 = type metadata accessor for ConnectionStatus.Error(0);
    v11 = &a2[*(int *)(v10 + 20)];
    v12 = &a1[*(int *)(v10 + 20)];
    v13 = *(_QWORD *)(type metadata accessor for ConnectionStatus.Error.Details(0) - 8);
    if (!(*(unsigned int (**)(_BYTE *, uint64_t))(v13 + 48))(v12, 1))
    {
      v2 = (char *)&loc_1A5132C80 + dword_1A5132ED4[swift_getEnumCaseMultiPayload()];
      __asm { BR              X8 }
    }
    v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE798510);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64));
    __dst = &a2[*(int *)(v10 + 24)];
    __src = &a1[*(int *)(v10 + 24)];
    v8 = sub_1A594A0EC();
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t))(v9 + 48))(__src, 1))
    {
      v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE796458);
      memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 16))(__dst, __src, v8);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v9 + 56))(__dst, 0, 1, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a2, a1, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  return a2;
}

uint64_t sub_1A5132EE4()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v0 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Activity.MailboxStatus(0) - 8) + 80);
  v10 = (v0 + 16) & ~v0;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = type metadata accessor for ConnectionStatus.Error(0);
    v7 = v9 + v10 + *(int *)(v6 + 20);
    v8 = type metadata accessor for ConnectionStatus.Error.Details(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1))
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload <= 3)
        __asm { BR              X8 }
    }
    v2 = v9 + v10 + *(int *)(v6 + 24);
    v3 = sub_1A594A0EC();
    v4 = *(_QWORD *)(v3 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t))(v4 + 48))(v2, 1))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  }
  return swift_deallocObject();
}

uint64_t sub_1A51330E4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Activity.MailboxStatus(0) - 8) + 80);
  return sub_1A5118740(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_1A5133114()
{
  return swift_deallocObject();
}

uint64_t sub_1A513313C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5133164()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51331A0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51331DC()
{
  return swift_deallocObject();
}

uint64_t sub_1A5133204()
{
  return swift_deallocObject();
}

uint64_t sub_1A513322C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5133268()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51332A4()
{
  return swift_deallocObject();
}

uint64_t sub_1A51332CC()
{
  return swift_deallocObject();
}

uint64_t sub_1A51332F4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5133330()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A513336C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5133394()
{
  return swift_deallocObject();
}

uint64_t sub_1A51333BC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51333F8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5133434()
{
  return swift_deallocObject();
}

uint64_t sub_1A513345C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5133484()
{
  swift_release();
  return swift_deallocObject();
}

_QWORD *sub_1A51334C0(_QWORD *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *result;
  uint64_t v8;

  v4 = a4();
  sub_1A51436D0(v4, v5, a3);
  v8 = *a1;
  sub_1A594C3CC();
  swift_bridgeObjectRelease();
  result = a1;
  *a1 = v8 + 8;
  return result;
}

uint64_t sub_1A513353C()
{
  swift_release();
  return swift_deallocObject();
}

_QWORD *sub_1A5133578(_QWORD *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  return sub_1A51334C0(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_1A5133584(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = a2;
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_BYTE *)(a2 + 8) = *(_BYTE *)(a1 + 8);
  return result;
}

uint64_t sub_1A51335A0()
{
  return swift_deallocObject();
}

uint64_t sub_1A51335C8()
{
  return swift_deallocObject();
}

uint64_t sub_1A51335F0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A513362C()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v0 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Activity.MailboxStatus(0) - 8) + 80);
  v10 = (v0 + 16) & ~v0;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = type metadata accessor for ConnectionStatus.Error(0);
    v7 = v9 + v10 + *(int *)(v6 + 20);
    v8 = type metadata accessor for ConnectionStatus.Error.Details(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1))
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload <= 3)
        __asm { BR              X8 }
    }
    v2 = v9 + v10 + *(int *)(v6 + 24);
    v3 = sub_1A594A0EC();
    v4 = *(_QWORD *)(v3 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t))(v4 + 48))(v2, 1))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  }
  return swift_deallocObject();
}

uint64_t sub_1A513382C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5133854()
{
  return swift_deallocObject();
}

uint64_t sub_1A513387C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51338B8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51338F4()
{
  return swift_deallocObject();
}

uint64_t sub_1A513391C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5133944()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5133980()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51339BC()
{
  return swift_deallocObject();
}

uint64_t sub_1A51339E4()
{
  return swift_deallocObject();
}

uint64_t sub_1A5133A0C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5133A48()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5133A84()
{
  return swift_deallocObject();
}

uint64_t sub_1A5133AAC()
{
  return swift_deallocObject();
}

uint64_t sub_1A5133AD4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5133B10()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5133B4C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5133B74()
{
  return swift_deallocObject();
}

uint64_t sub_1A5133B9C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5133BD8()
{
  swift_release();
  return swift_deallocObject();
}

id *sub_1A5133C14(id *a1)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t EnumCaseMultiPayload;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v11 = _s15MailboxActivityVMa();
  if (!(*(unsigned int (**)(id *, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(a1, 1))
  {

    v9 = (char *)a1 + *(int *)(v11 + 20);
    type metadata accessor for Activity.MailboxStatus(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = type metadata accessor for ConnectionStatus.Error(0);
      v7 = &v9[*(int *)(v6 + 20)];
      v8 = type metadata accessor for ConnectionStatus.Error.Details(0);
      if (!(*(unsigned int (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1))
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload <= 3)
          __asm { BR              X8 }
      }
      v2 = &v9[*(int *)(v6 + 24)];
      v3 = sub_1A594A0EC();
      v4 = *(_QWORD *)(v3 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t))(v4 + 48))(v2, 1))
        (*(void (**)(char *, uint64_t))(v4 + 8))(v2, v3);
    }
  }
  return a1;
}

_QWORD *sub_1A5133E20(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *__dst;
  char *__src;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v18;

  *a2 = *a1;
  v16 = *(int *)(_s15MailboxActivityVMa() + 20);
  v18 = type metadata accessor for Activity.MailboxStatus(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *((_BYTE *)a2 + v16) = *((_BYTE *)a1 + v16);
    v10 = type metadata accessor for ConnectionStatus.Error(0);
    __dst = (char *)a2 + v16 + *(int *)(v10 + 20);
    __src = (char *)a1 + v16 + *(int *)(v10 + 20);
    v13 = type metadata accessor for ConnectionStatus.Error.Details(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v14 + 48))(__src, 1))
    {
      v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE798510);
      memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(__dst, __src, *(_QWORD *)(v14 + 64));
      }
      else
      {
        v2 = sub_1A594ACEC();
        (*(void (**)(char *, char *))(*(_QWORD *)(v2 - 8) + 32))(__dst, __src);
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
    }
    v6 = (char *)a2 + v16 + *(int *)(v10 + 24);
    v7 = (char *)a1 + v16 + *(int *)(v10 + 24);
    v8 = sub_1A594A0EC();
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v9 + 48))(v7, 1))
    {
      v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE796458);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy((char *)a2 + v16, (char *)a1 + v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  return a2;
}

id *sub_1A51340F4(id *a1)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t EnumCaseMultiPayload;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v9 = *(int *)(_s15MailboxActivityVMa() + 20);
  type metadata accessor for Activity.MailboxStatus(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = type metadata accessor for ConnectionStatus.Error(0);
    v7 = (char *)a1 + v9 + *(int *)(v6 + 20);
    v8 = type metadata accessor for ConnectionStatus.Error.Details(0);
    if (!(*(unsigned int (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1))
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload <= 3)
        __asm { BR              X8 }
    }
    v2 = (char *)a1 + v9 + *(int *)(v6 + 24);
    v3 = sub_1A594A0EC();
    v4 = *(_QWORD *)(v3 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t))(v4 + 48))(v2, 1))
      (*(void (**)(char *, uint64_t))(v4 + 8))(v2, v3);
  }
  return a1;
}

uint64_t sub_1A51342E0()
{
  return swift_deallocObject();
}

uint64_t sub_1A5134308()
{
  return swift_deallocObject();
}

uint64_t sub_1A5134330()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A513436C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5134394@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1A51186C0(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1A513439C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51343D8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v1 = sub_1A5134418();
  return sub_1A51310AC(v4, v3, (uint64_t)&type metadata for MailboxRowID, v1);
}

unint64_t sub_1A5134418()
{
  unint64_t v0;
  uint64_t v2;

  v2 = qword_1EE798A10;
  if (!qword_1EE798A10)
  {
    v0 = MEMORY[0x1A85B1874](&protocol conformance descriptor for MailboxRowID, &type metadata for MailboxRowID);
    atomic_store(v0, (unint64_t *)&qword_1EE798A10);
    return v0;
  }
  return v2;
}

uint64_t sub_1A5134480()
{
  return swift_deallocObject();
}

uint64_t sub_1A51344A8()
{
  return swift_deallocObject();
}

uint64_t sub_1A51344D0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A513450C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5134548()
{
  return swift_deallocObject();
}

uint64_t sub_1A5134570()
{
  return swift_deallocObject();
}

uint64_t sub_1A5134598()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51345D4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5134610()
{
  return swift_deallocObject();
}

uint64_t sub_1A5134638()
{
  return swift_deallocObject();
}

uint64_t sub_1A5134660()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A513469C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51346D8()
{
  return swift_deallocObject();
}

uint64_t sub_1A5134700()
{
  return swift_deallocObject();
}

uint64_t sub_1A5134728()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5134764()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51347A0()
{
  return swift_deallocObject();
}

uint64_t sub_1A51347C8()
{
  return swift_deallocObject();
}

uint64_t sub_1A51347F0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A513482C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1A5134868(uint64_t *a1, void *a2)
{
  uint64_t v2;

  sub_1A511F878(a1, a2, *(_QWORD *)(v2 + 16));
}

unint64_t sub_1A5134870()
{
  unint64_t v0;
  uint64_t v2;

  v2 = qword_1EE798A00;
  if (!qword_1EE798A00)
  {
    v0 = MEMORY[0x1A85B1874](&protocol conformance descriptor for MailboxRowID, &type metadata for MailboxRowID);
    atomic_store(v0, (unint64_t *)&qword_1EE798A00);
    return v0;
  }
  return v2;
}

uint64_t sub_1A51348D8()
{
  return swift_deallocObject();
}

uint64_t sub_1A5134900()
{
  return swift_deallocObject();
}

uint64_t sub_1A5134928()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5134964()
{
  return swift_deallocObject();
}

uint64_t sub_1A513498C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51349C8()
{
  return swift_deallocObject();
}

uint64_t sub_1A51349F0()
{
  return swift_deallocObject();
}

uint64_t sub_1A5134A18()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5134A54()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5134A90()
{
  return swift_deallocObject();
}

uint64_t sub_1A5134AB8()
{
  return swift_deallocObject();
}

uint64_t sub_1A5134AE0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5134B1C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5134B58()
{
  return swift_deallocObject();
}

uint64_t sub_1A5134B80()
{
  return swift_deallocObject();
}

uint64_t sub_1A5134BA8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5134BE4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5134C20()
{
  return swift_deallocObject();
}

uint64_t sub_1A5134C48()
{
  return swift_deallocObject();
}

uint64_t sub_1A5134C70()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5134CAC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5134CE8()
{
  return swift_deallocObject();
}

uint64_t sub_1A5134D10()
{
  return swift_deallocObject();
}

uint64_t sub_1A5134D38()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5134D74()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5134DB0()
{
  return swift_deallocObject();
}

uint64_t sub_1A5134DD8()
{
  return swift_deallocObject();
}

uint64_t sub_1A5134E00()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5134E3C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5134E64()
{
  return swift_deallocObject();
}

uint64_t sub_1A5134E8C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5134EC8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5134F04()
{
  return swift_deallocObject();
}

uint64_t sub_1A5134F2C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5134F54()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5134F90()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5134FCC()
{
  return swift_deallocObject();
}

uint64_t sub_1A5134FF4()
{
  return swift_deallocObject();
}

uint64_t sub_1A513501C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5135058()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5135094()
{
  return swift_deallocObject();
}

uint64_t sub_1A51350BC()
{
  return swift_deallocObject();
}

uint64_t sub_1A51350E4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5135120()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A513515C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5135184()
{
  return swift_deallocObject();
}

uint64_t sub_1A51351AC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51351E8()
{
  return swift_deallocObject();
}

uint64_t sub_1A5135210()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A513524C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5135274()
{
  return swift_deallocObject();
}

uint64_t sub_1A513529C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51352D8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5135314()
{
  return swift_deallocObject();
}

uint64_t sub_1A513533C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5135364()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51353A0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51353DC()
{
  return swift_deallocObject();
}

uint64_t sub_1A5135404()
{
  return swift_deallocObject();
}

uint64_t sub_1A513542C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5135468()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51354A4()
{
  return swift_deallocObject();
}

uint64_t sub_1A51354CC()
{
  return swift_deallocObject();
}

uint64_t sub_1A51354F4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5135530()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A513556C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5135594()
{
  return swift_deallocObject();
}

uint64_t sub_1A51355BC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51355F8()
{
  swift_release();
  return swift_deallocObject();
}

_QWORD *sub_1A5135634(id *a1, _QWORD *a2)
{
  id v2;
  _QWORD *result;
  id v4;

  v4 = *a1;
  v2 = *a1;
  result = a2;
  *a2 = v4;
  return result;
}

unint64_t sub_1A5135668()
{
  unint64_t ObjCClassMetadata;
  uint64_t v2;

  v2 = qword_1EE79A078;
  if (!qword_1EE79A078)
  {
    objc_opt_self();
    ObjCClassMetadata = swift_getObjCClassMetadata();
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1EE79A078);
    return ObjCClassMetadata;
  }
  return v2;
}

uint64_t type metadata accessor for EMActivityUserInfoKey()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  v4 = qword_1EE79A270;
  if (!qword_1EE79A270)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    v4 = ForeignTypeMetadata;
    if (!v0)
    {
      v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1EE79A270);
      return v1;
    }
  }
  return v4;
}

unint64_t sub_1A513576C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE79A230;
  if (!qword_1EE79A230)
  {
    v0 = type metadata accessor for EMActivityUserInfoKey();
    v1 = MEMORY[0x1A85B1874](&unk_1A599B83C, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE79A230);
    return v1;
  }
  return v3;
}

uint64_t sub_1A51357DC()
{
  return swift_deallocObject();
}

uint64_t sub_1A5135804()
{
  return swift_deallocObject();
}

uint64_t sub_1A513582C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5135868()
{
  return swift_deallocObject();
}

uint64_t sub_1A5135890()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51358CC()
{
  return swift_deallocObject();
}

uint64_t sub_1A51358F4()
{
  return swift_deallocObject();
}

uint64_t sub_1A513591C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5135958()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5135994()
{
  return swift_deallocObject();
}

uint64_t sub_1A51359BC()
{
  return swift_deallocObject();
}

uint64_t sub_1A51359E4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5135A20()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5135A5C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5135A84()
{
  return swift_deallocObject();
}

uint64_t sub_1A5135AAC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5135AE8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5135B24()
{
  return swift_deallocObject();
}

uint64_t sub_1A5135B4C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5135B74()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5135BB0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5135BEC()
{
  return swift_deallocObject();
}

uint64_t sub_1A5135C14()
{
  return swift_deallocObject();
}

uint64_t sub_1A5135C3C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5135C78()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5135CB4()
{
  return swift_deallocObject();
}

uint64_t sub_1A5135CDC()
{
  return swift_deallocObject();
}

uint64_t sub_1A5135D04()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5135D40()
{
  return swift_deallocObject();
}

uint64_t sub_1A5135D68()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5135DA4()
{
  return swift_deallocObject();
}

uint64_t sub_1A5135DCC()
{
  return swift_deallocObject();
}

uint64_t sub_1A5135DF4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5135E30()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5135E6C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5135E94()
{
  return swift_deallocObject();
}

uint64_t sub_1A5135EBC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5135EF8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5135F34()
{
  return swift_deallocObject();
}

uint64_t sub_1A5135F5C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5135F84()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5135FC0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5135FFC()
{
  return swift_deallocObject();
}

uint64_t sub_1A5136024()
{
  return swift_deallocObject();
}

uint64_t sub_1A513604C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5136088()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51360C4()
{
  return swift_deallocObject();
}

uint64_t sub_1A51360EC()
{
  return swift_deallocObject();
}

uint64_t sub_1A5136114()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5136150()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A513618C(uint64_t a1)
{
  uint64_t v3;
  uint64_t v4;

  v3 = sub_1A594A0EC();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v4 + 48))(a1, 1))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return a1;
}

unint64_t sub_1A51361FC()
{
  unint64_t ObjCClassMetadata;
  uint64_t v2;

  v2 = qword_1EE79A5A0;
  if (!qword_1EE79A5A0)
  {
    objc_opt_self();
    ObjCClassMetadata = swift_getObjCClassMetadata();
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1EE79A5A0);
    return ObjCClassMetadata;
  }
  return v2;
}

uint64_t sub_1A5136260()
{
  return swift_deallocObject();
}

uint64_t sub_1A5136288()
{
  return swift_deallocObject();
}

uint64_t sub_1A51362B0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51362EC()
{
  return swift_deallocObject();
}

uint64_t sub_1A5136314()
{
  return swift_deallocObject();
}

uint64_t sub_1A513633C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5136378()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51363B4()
{
  return swift_deallocObject();
}

uint64_t sub_1A51363DC()
{
  return swift_deallocObject();
}

uint64_t sub_1A5136404()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5136440()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A513647C()
{
  return swift_deallocObject();
}

uint64_t sub_1A51364A4()
{
  return swift_deallocObject();
}

uint64_t sub_1A51364CC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5136508()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5136544()
{
  return swift_deallocObject();
}

uint64_t sub_1A513656C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5136594()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51365D0()
{
  swift_release();
  return swift_deallocObject();
}

_QWORD *sub_1A513660C(id *a1, _QWORD *a2)
{
  id v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *__dst;
  char *__src;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  id v16;
  uint64_t v17;
  uint64_t v19;

  v16 = *a1;
  v2 = *a1;
  *a2 = v16;
  v17 = *(int *)(_s15MailboxActivityVMa() + 20);
  v19 = type metadata accessor for Activity.MailboxStatus(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *((_BYTE *)a2 + v17) = *((_BYTE *)a1 + v17);
    v11 = type metadata accessor for ConnectionStatus.Error(0);
    v12 = (char *)a2 + v17 + *(int *)(v11 + 20);
    v13 = (char *)a1 + v17 + *(int *)(v11 + 20);
    v14 = *(_QWORD *)(type metadata accessor for ConnectionStatus.Error.Details(0) - 8);
    if (!(*(unsigned int (**)(char *, uint64_t))(v14 + 48))(v13, 1))
    {
      v3 = (char *)&loc_1A5136740 + dword_1A51369BC[swift_getEnumCaseMultiPayload()];
      __asm { BR              X8 }
    }
    v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE798510);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
    __dst = (char *)a2 + v17 + *(int *)(v11 + 24);
    __src = (char *)a1 + v17 + *(int *)(v11 + 24);
    v9 = sub_1A594A0EC();
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v10 + 48))(__src, 1))
    {
      v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE796458);
      memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(__dst, __src, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(__dst, 0, 1, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy((char *)a2 + v17, (char *)a1 + v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  return a2;
}

void sub_1A51369CC(void *a1)
{
  if ((unint64_t)a1 > 1)

}

uint64_t sub_1A5136A08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_1A594A764();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(a2, a1);
  v3 = _s6LoggerVMa();
  result = a2;
  *(_QWORD *)(a2 + *(int *)(v3 + 20)) = *(_QWORD *)(a1 + *(int *)(v3 + 20));
  return result;
}

uint64_t sub_1A5136A70()
{
  return swift_deallocObject();
}

uint64_t sub_1A5136A98()
{
  return swift_deallocObject();
}

uint64_t sub_1A5136AC0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5136AFC()
{
  return swift_deallocObject();
}

uint64_t sub_1A5136B24()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5136B60()
{
  return swift_deallocObject();
}

uint64_t sub_1A5136B88()
{
  return swift_deallocObject();
}

uint64_t sub_1A5136BB0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5136BEC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5136C28()
{
  return swift_deallocObject();
}

uint64_t sub_1A5136C50()
{
  return swift_deallocObject();
}

uint64_t sub_1A5136C78()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5136CB4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5136CF0()
{
  return swift_deallocObject();
}

uint64_t sub_1A5136D18()
{
  return swift_deallocObject();
}

uint64_t sub_1A5136D40()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5136D7C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5136DB8()
{
  return swift_deallocObject();
}

uint64_t sub_1A5136DE0()
{
  return swift_deallocObject();
}

uint64_t sub_1A5136E08()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5136E44()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5136E80()
{
  return swift_deallocObject();
}

uint64_t sub_1A5136EA8()
{
  return swift_deallocObject();
}

uint64_t sub_1A5136ED0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5136F0C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5136F48()
{
  return swift_deallocObject();
}

uint64_t sub_1A5136F70()
{
  return swift_deallocObject();
}

uint64_t sub_1A5136F98()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5136FD4()
{
  return swift_deallocObject();
}

uint64_t sub_1A5136FFC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5137038()
{
  return swift_deallocObject();
}

uint64_t sub_1A5137060()
{
  return swift_deallocObject();
}

uint64_t sub_1A5137088()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51370C4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5137100()
{
  return swift_deallocObject();
}

uint64_t sub_1A5137128()
{
  return swift_deallocObject();
}

uint64_t sub_1A5137150()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A513718C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51371C8()
{
  return swift_deallocObject();
}

uint64_t sub_1A51371F0()
{
  return swift_deallocObject();
}

uint64_t sub_1A5137218()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5137254()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5137290()
{
  return swift_deallocObject();
}

uint64_t sub_1A51372B8()
{
  return swift_deallocObject();
}

uint64_t sub_1A51372E0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A513731C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5137358()
{
  return swift_deallocObject();
}

uint64_t sub_1A5137380()
{
  return swift_deallocObject();
}

uint64_t sub_1A51373A8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51373E4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t type metadata accessor for EMActivityFetchState()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  v4 = qword_1EE79A188;
  if (!qword_1EE79A188)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    v4 = ForeignTypeMetadata;
    if (!v0)
    {
      v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1EE79A188);
      return v1;
    }
  }
  return v4;
}

unint64_t sub_1A51374C0()
{
  uint64_t State;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE79A170;
  if (!qword_1EE79A170)
  {
    State = type metadata accessor for EMActivityFetchState();
    v1 = MEMORY[0x1A85B1874](&unk_1A599B810, State);
    atomic_store(v1, (unint64_t *)&qword_1EE79A170);
    return v1;
  }
  return v3;
}

uint64_t sub_1A5137530()
{
  return swift_deallocObject();
}

uint64_t sub_1A5137558()
{
  return swift_deallocObject();
}

uint64_t sub_1A5137580()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51375BC()
{
  return swift_deallocObject();
}

uint64_t sub_1A51375E4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5137620()
{
  return swift_deallocObject();
}

uint64_t sub_1A5137648()
{
  return sub_1A5127914();
}

uint64_t sub_1A5137650()
{
  return swift_deallocObject();
}

uint64_t sub_1A5137678()
{
  return swift_deallocObject();
}

uint64_t sub_1A51376A0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51376DC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5137718()
{
  return swift_deallocObject();
}

uint64_t sub_1A5137740()
{
  return swift_deallocObject();
}

uint64_t sub_1A5137768()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51377A4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51377E0()
{
  return swift_deallocObject();
}

uint64_t sub_1A5137808()
{
  return swift_deallocObject();
}

uint64_t sub_1A5137830()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A513786C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51378A8()
{
  return swift_deallocObject();
}

uint64_t sub_1A51378D0()
{
  return swift_deallocObject();
}

uint64_t sub_1A51378F8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5137934()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5137970()
{
  return swift_deallocObject();
}

uint64_t sub_1A5137998()
{
  return swift_deallocObject();
}

uint64_t sub_1A51379C0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51379FC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5137A38()
{
  return swift_deallocObject();
}

uint64_t sub_1A5137A60()
{
  return swift_deallocObject();
}

uint64_t sub_1A5137A88()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5137AC4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5137B00()
{
  return swift_deallocObject();
}

uint64_t sub_1A5137B28()
{
  return swift_deallocObject();
}

uint64_t sub_1A5137B50()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5137B8C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5137BB4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5137BF0()
{
  return swift_deallocObject();
}

uint64_t sub_1A5137C18()
{
  return sub_1A51273B8();
}

uint64_t sub_1A5137C2C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5137C54()
{
  return swift_deallocObject();
}

uint64_t sub_1A5137C7C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5137CB8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5137CF4()
{
  return swift_deallocObject();
}

uint64_t sub_1A5137D1C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5137D44()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5137D80()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5137DBC()
{
  return swift_deallocObject();
}

uint64_t sub_1A5137DE4()
{
  return swift_deallocObject();
}

uint64_t sub_1A5137E0C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5137E48()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5137E84()
{
  return swift_deallocObject();
}

uint64_t sub_1A5137EAC()
{
  return swift_deallocObject();
}

uint64_t sub_1A5137ED4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5137F10()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5137F4C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5137F74()
{
  return swift_deallocObject();
}

uint64_t sub_1A5137F9C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5137FD8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5138014()
{
  return swift_deallocObject();
}

uint64_t sub_1A513803C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5138064()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51380A0()
{
  swift_release();
  return swift_deallocObject();
}

__n128 sub_1A51380DC(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  a2[1].n128_u8[0] = a1[1].n128_u8[0];
  return result;
}

uint64_t sub_1A51380F8()
{
  return swift_deallocObject();
}

uint64_t sub_1A5138120()
{
  return swift_deallocObject();
}

uint64_t sub_1A5138148()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5138184()
{
  return swift_deallocObject();
}

uint64_t sub_1A51381AC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51381E8()
{
  return swift_deallocObject();
}

uint64_t sub_1A5138210()
{
  return swift_deallocObject();
}

uint64_t sub_1A5138238()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5138274()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51382B0()
{
  return swift_deallocObject();
}

uint64_t sub_1A51382D8()
{
  return swift_deallocObject();
}

uint64_t sub_1A5138300()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A513833C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5138378()
{
  return swift_deallocObject();
}

uint64_t sub_1A51383A0()
{
  return swift_deallocObject();
}

uint64_t sub_1A51383C8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5138404()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5138440()
{
  return swift_deallocObject();
}

uint64_t sub_1A5138468()
{
  return swift_deallocObject();
}

uint64_t sub_1A5138490()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51384CC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5138508()
{
  return swift_deallocObject();
}

uint64_t sub_1A5138530()
{
  return swift_deallocObject();
}

uint64_t sub_1A5138558()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5138594()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1A51385D0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE7A0CC0;
  if (!qword_1EE7A0CC0)
  {
    v0 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE79B8D8);
    v1 = MEMORY[0x1A85B1874](MEMORY[0x1E0DE9F98], v0);
    atomic_store(v1, (unint64_t *)&qword_1EE7A0CC0);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5138640()
{
  unint64_t ObjCClassMetadata;
  uint64_t v2;

  v2 = qword_1EE799F20;
  if (!qword_1EE799F20)
  {
    objc_opt_self();
    ObjCClassMetadata = swift_getObjCClassMetadata();
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1EE799F20);
    return ObjCClassMetadata;
  }
  return v2;
}

unint64_t sub_1A51386A4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE7A1018;
  if (!qword_1EE7A1018)
  {
    v0 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE7A1028);
    v1 = MEMORY[0x1A85B1874](MEMORY[0x1E0DEC330], v0);
    atomic_store(v1, (unint64_t *)&qword_1EE7A1018);
    return v1;
  }
  return v3;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1A5138714()
{
  sub_1A5131FCC();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_1A5138774()
{
  return swift_deallocObject();
}

uint64_t sub_1A513879C()
{
  return swift_deallocObject();
}

uint64_t sub_1A51387C4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5138800()
{
  return swift_deallocObject();
}

void sub_1A5138828()
{
  sub_1A512677C();
}

uint64_t sub_1A5138830()
{
  return swift_deallocObject();
}

uint64_t sub_1A5138858()
{
  return swift_deallocObject();
}

uint64_t sub_1A5138880()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51388BC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51388F8()
{
  return swift_deallocObject();
}

uint64_t sub_1A5138920()
{
  return swift_deallocObject();
}

uint64_t sub_1A5138948()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5138984()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51389C0()
{
  return swift_deallocObject();
}

uint64_t sub_1A51389E8()
{
  return swift_deallocObject();
}

uint64_t sub_1A5138A10()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5138A4C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5138A88()
{
  return swift_deallocObject();
}

uint64_t sub_1A5138AB0()
{
  return swift_deallocObject();
}

uint64_t sub_1A5138AD8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5138B14()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5138B50()
{
  return swift_deallocObject();
}

uint64_t sub_1A5138B78()
{
  return swift_deallocObject();
}

uint64_t sub_1A5138BA0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5138BDC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1A513117C(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_1A5138BE8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5138C24(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;

  v8 = *(_QWORD *)(v3 + 16);
  v9 = *(_QWORD *)(v3 + 24);
  v4 = sub_1A5138C84();
  return sub_1A5131308(a1, a2, a3, v8, v9, MEMORY[0x1E0DEB418], v4);
}

unint64_t sub_1A5138C84()
{
  unint64_t v0;
  uint64_t v2;

  v2 = qword_1EE7A40B0;
  if (!qword_1EE7A40B0)
  {
    v0 = MEMORY[0x1A85B1874](MEMORY[0x1E0DEB470], MEMORY[0x1E0DEB418]);
    atomic_store(v0, (unint64_t *)&qword_1EE7A40B0);
    return v0;
  }
  return v2;
}

BOOL sub_1A5138CEC(uint64_t *a1)
{
  uint64_t v1;

  return sub_1A5126910(a1, v1);
}

unint64_t sub_1A5138D10()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE7A0E60;
  if (!qword_1EE7A0E60)
  {
    v0 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE7997D0);
    v1 = MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF38], v0);
    atomic_store(v1, (unint64_t *)&qword_1EE7A0E60);
    return v1;
  }
  return v3;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1A5138D80(id *a1)
{

}

uint64_t type metadata accessor for SyncError()
{
  uint64_t v1;

  v1 = qword_1EE798E60;
  if (!qword_1EE798E60)
    return swift_getSingletonMetadata();
  return v1;
}

_BYTE *sub_1A5138E0C(_BYTE *a1, _BYTE *a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *__dst;
  _BYTE *__src;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  *a2 = *a1;
  v11 = type metadata accessor for ConnectionStatus.Error(0);
  v12 = *(int *)(v11 + 20);
  v14 = *(_QWORD *)(type metadata accessor for ConnectionStatus.Error.Details(0) - 8);
  if (!(*(unsigned int (**)(_BYTE *, uint64_t))(v14 + 48))(&a1[v12], 1))
  {
    v2 = (char *)&loc_1A5138EB8 + dword_1A5139144[swift_getEnumCaseMultiPayload()];
    __asm { BR              X8 }
  }
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE798510);
  memcpy(&a2[v12], &a1[v12], *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64));
  __dst = &a2[*(int *)(v11 + 24)];
  __src = &a1[*(int *)(v11 + 24)];
  v8 = sub_1A594A0EC();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t))(v9 + 48))(__src, 1))
  {
    v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE796458);
    memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 16))(__dst, __src, v8);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v9 + 56))(__dst, 0, 1, v8);
  }
  return a2;
}

unint64_t sub_1A5139154()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE798E58;
  if (!qword_1EE798E58)
  {
    v0 = type metadata accessor for SyncError();
    v1 = MEMORY[0x1A85B1874](&protocol conformance descriptor for SyncError, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE798E58);
    return v1;
  }
  return v3;
}

unint64_t sub_1A51391C4()
{
  unint64_t v0;
  uint64_t v2;

  v2 = qword_1EE7A40A0;
  if (!qword_1EE7A40A0)
  {
    v0 = MEMORY[0x1A85B1874](MEMORY[0x1E0DEB440], MEMORY[0x1E0DEB418]);
    atomic_store(v0, (unint64_t *)&qword_1EE7A40A0);
    return v0;
  }
  return v2;
}

unint64_t sub_1A513922C()
{
  unint64_t v0;
  uint64_t v2;

  v2 = qword_1EE7A4198;
  if (!qword_1EE7A4198)
  {
    v0 = MEMORY[0x1A85B1874](MEMORY[0x1E0DEDCA0], MEMORY[0x1E0DEDC60]);
    atomic_store(v0, (unint64_t *)&qword_1EE7A4198);
    return v0;
  }
  return v2;
}

unint64_t sub_1A5139294()
{
  unint64_t v0;
  uint64_t v2;

  v2 = qword_1EE7A41B0;
  if (!qword_1EE7A41B0)
  {
    v0 = MEMORY[0x1A85B1874](MEMORY[0x1E0DEDCB0], MEMORY[0x1E0DEDC60]);
    atomic_store(v0, (unint64_t *)&qword_1EE7A41B0);
    return v0;
  }
  return v2;
}

unint64_t sub_1A51392FC()
{
  unint64_t v0;
  uint64_t v2;

  v2 = qword_1EE7A4178;
  if (!qword_1EE7A4178)
  {
    v0 = MEMORY[0x1A85B1874](MEMORY[0x1E0DEDC88], MEMORY[0x1E0DEDC60]);
    atomic_store(v0, (unint64_t *)&qword_1EE7A4178);
    return v0;
  }
  return v2;
}

uint64_t sub_1A5139364(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 24))
    __swift_destroy_boxed_opaque_existential_0(a1);
  return a1;
}

uint64_t sub_1A51393A4(uint64_t a1)
{
  uint64_t v3;
  uint64_t v4;

  v3 = sub_1A594C21C();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v4 + 48))(a1, 1))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return a1;
}

unint64_t sub_1A5139414()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE7A66E8;
  if (!qword_1EE7A66E8)
  {
    v0 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EE7A66C8);
    v1 = MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF50], v0);
    atomic_store(v1, (unint64_t *)&qword_1EE7A66E8);
    return v1;
  }
  return v3;
}

void *sub_1A5139484(const void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1A594A0EC();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t))(v7 + 48))(a1, 1))
  {
    v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE796458);
    memcpy(a2, a1, *(_QWORD *)(*(_QWORD *)(v2 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a2, a1, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a2, 0, 1, v6);
  }
  return a2;
}

unint64_t sub_1A5139540()
{
  unint64_t v0;
  uint64_t v2;

  v2 = qword_1EE7990C0;
  if (!qword_1EE7990C0)
  {
    v0 = MEMORY[0x1A85B1874](MEMORY[0x1E0CB1A70], MEMORY[0x1E0DEA968]);
    atomic_store(v0, (unint64_t *)&qword_1EE7990C0);
    return v0;
  }
  return v2;
}

void *sub_1A51395A8(const void *a1, void *a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v7;

  v7 = type metadata accessor for ConnectionStatus.Error.Details(0);
  if (!(*(unsigned int (**)(const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(a1, 1))
  {
    v2 = (char *)&loc_1A5139618 + *((int *)qword_1A5139780 + swift_getEnumCaseMultiPayload());
    __asm { BR              X8 }
  }
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE798510);
  memcpy(a2, a1, *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64));
  return a2;
}

uint64_t sub_1A5139790(uint64_t a1)
{
  unint64_t EnumCaseMultiPayload;
  uint64_t v4;

  v4 = type metadata accessor for ConnectionStatus.Error.Details(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload <= 3)
      __asm { BR              X8 }
  }
  return a1;
}

void *sub_1A5139894(const void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v6;

  v6 = type metadata accessor for ConnectionStatus.Error.Details(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a2, a1, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    v2 = sub_1A594ACEC();
    (*(void (**)(void *, const void *))(*(_QWORD *)(v2 - 8) + 32))(a2, a1);
    swift_storeEnumTagMultiPayload();
  }
  return a2;
}

void sub_1A5139930()
{
  char *v0;

  type metadata accessor for ConnectionStatus.Error.Details(0);
  v0 = (char *)&loc_1A5139974 + dword_1A5139A94[swift_getEnumCaseMultiPayload()];
  __asm { BR              X8 }
}

uint64_t sub_1A5139984()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  v1 = sub_1A594ACEC();
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 8) + 16))(v3, *(_QWORD *)(v0 - 24));
  swift_storeEnumTagMultiPayload();
  return v3;
}

uint64_t sub_1A5139AA4(uint64_t a1)
{
  unint64_t EnumCaseMultiPayload;

  type metadata accessor for ConnectionStatus.Error.Details(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload <= 3)
    __asm { BR              X8 }
  return a1;
}

unint64_t sub_1A5139B78()
{
  unint64_t ObjCClassMetadata;
  uint64_t v2;

  v2 = qword_1EE79A5E8;
  if (!qword_1EE79A5E8)
  {
    objc_opt_self();
    ObjCClassMetadata = swift_getObjCClassMetadata();
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1EE79A5E8);
    return ObjCClassMetadata;
  }
  return v2;
}

unint64_t sub_1A5139BDC()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE7A6700;
  if (!qword_1EE7A6700)
  {
    v0 = sub_1A5139B78();
    v1 = MEMORY[0x1A85B1874](MEMORY[0x1E0DEFD08], v0);
    atomic_store(v1, (unint64_t *)&qword_1EE7A6700);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5139C4C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE798E48;
  if (!qword_1EE798E48)
  {
    v0 = type metadata accessor for SyncError();
    v1 = MEMORY[0x1A85B1874](&protocol conformance descriptor for SyncError, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE798E48);
    return v1;
  }
  return v3;
}

void *sub_1A5139CBC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;

  return sub_1A512C7B8(a1, *(void (**)(uint64_t, uint64_t))(v2 + 16), a2);
}

unint64_t sub_1A5139CE8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE799280;
  if (!qword_1EE799280)
  {
    v0 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE799278);
    v1 = MEMORY[0x1A85B1874](MEMORY[0x1E0DEA0E0], v0);
    atomic_store(v1, (unint64_t *)&qword_1EE799280);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5139D58()
{
  unint64_t v0;
  uint64_t v2;

  v2 = qword_1EE795EB8;
  if (!qword_1EE795EB8)
  {
    v0 = MEMORY[0x1A85B1874](MEMORY[0x1E0DEA9A8], MEMORY[0x1E0DEA968]);
    atomic_store(v0, (unint64_t *)&qword_1EE795EB8);
    return v0;
  }
  return v2;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1A5139DC0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

unint64_t sub_1A5139E00()
{
  unint64_t v0;
  uint64_t v2;

  v2 = qword_1EE7A6708;
  if (!qword_1EE7A6708)
  {
    v0 = MEMORY[0x1A85B1874](&unk_1A599B7D0, &unk_1E4E7E760);
    atomic_store(v0, (unint64_t *)&qword_1EE7A6708);
    return v0;
  }
  return v2;
}

unint64_t sub_1A5139E6C()
{
  unint64_t v0;
  uint64_t v2;

  v2 = qword_1EE798B80;
  if (!qword_1EE798B80)
  {
    v0 = MEMORY[0x1A85B1874](&unk_1A599B780, &unk_1E4E7E760);
    atomic_store(v0, (unint64_t *)&qword_1EE798B80);
    return v0;
  }
  return v2;
}

unint64_t sub_1A5139ED8()
{
  unint64_t v0;
  uint64_t v2;

  v2 = qword_1EE7A6718;
  if (!qword_1EE7A6718)
  {
    v0 = MEMORY[0x1A85B1874](&unk_1A599B740, &unk_1E4E7E878);
    atomic_store(v0, (unint64_t *)&qword_1EE7A6718);
    return v0;
  }
  return v2;
}

unint64_t sub_1A5139F44()
{
  unint64_t v0;
  uint64_t v2;

  v2 = qword_1EE798BB0;
  if (!qword_1EE798BB0)
  {
    v0 = MEMORY[0x1A85B1874](&unk_1A599B6F0, &unk_1E4E7E878);
    atomic_store(v0, (unint64_t *)&qword_1EE798BB0);
    return v0;
  }
  return v2;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1A5139FB0()
{
  swift_release();
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1A5139FD8()
{
  swift_bridgeObjectRelease();
}

uint64_t sub_1A513A000(uint64_t a1)
{
  sub_1A513A034(*(_QWORD *)a1, *(unsigned int *)(a1 + 8), *(_BYTE *)(a1 + 12));
  return a1;
}

uint64_t sub_1A513A034(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3 == 1)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_1A513A070()
{
  return sub_1A5139154();
}

unint64_t sub_1A513A084(_QWORD *a1, id *a2, uint64_t a3)
{
  id v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *__dst;
  _BYTE *__src;
  uint64_t v15;
  id v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;
  id v20;
  int v25;

  v25 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v25 & 0x20000) != 0)
  {
    v20 = *a2;
    swift_retain();
    *a1 = v20;
    return *a1 + ((v25 + 16) & ~(unint64_t)v25);
  }
  else
  {
    v16 = *a2;
    v3 = *a2;
    *a1 = v16;
    v17 = (char *)a1 + *(int *)(a3 + 20);
    v18 = (char *)a2 + *(int *)(a3 + 20);
    v19 = type metadata accessor for Activity.MailboxStatus(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *v17 = *v18;
      v12 = type metadata accessor for ConnectionStatus.Error(0);
      __dst = &v17[*(int *)(v12 + 20)];
      __src = &v18[*(int *)(v12 + 20)];
      v15 = *(_QWORD *)(type metadata accessor for ConnectionStatus.Error.Details(0) - 8);
      if (!(*(unsigned int (**)(_BYTE *, uint64_t))(v15 + 48))(__src, 1))
      {
        v4 = (char *)&loc_1A513A1F8 + *((int *)qword_1A513A458 + swift_getEnumCaseMultiPayload());
        __asm { BR              X8 }
      }
      v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE798510);
      memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
      v8 = &v17[*(int *)(v12 + 24)];
      v9 = &v18[*(int *)(v12 + 24)];
      v10 = sub_1A594A0EC();
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t))(v11 + 48))(v9, 1))
      {
        v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE796458);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    return (unint64_t)a1;
  }
}

uint64_t sub_1A513A468(id *a1, uint64_t a2)
{
  uint64_t result;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v11 = *(int *)(a2 + 20);
  type metadata accessor for Activity.MailboxStatus(0);
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v7 = type metadata accessor for ConnectionStatus.Error(0);
    v8 = (char *)a1 + v11 + *(int *)(v7 + 20);
    v9 = type metadata accessor for ConnectionStatus.Error.Details(0);
    if (!(*(unsigned int (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1))
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload <= 3)
        __asm { BR              X8 }
    }
    v3 = (char *)a1 + v11 + *(int *)(v7 + 24);
    v4 = sub_1A594A0EC();
    v5 = *(_QWORD *)(v4 - 8);
    result = (*(uint64_t (**)(char *, uint64_t))(v5 + 48))(v3, 1);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v3, v4);
  }
  return result;
}

_QWORD *sub_1A513A648(_QWORD *a1, id *a2, uint64_t a3)
{
  id v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *__dst;
  char *__src;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  id v16;
  uint64_t v19;
  uint64_t v21;

  v16 = *a2;
  v3 = *a2;
  *a1 = v16;
  v19 = *(int *)(a3 + 20);
  v21 = type metadata accessor for Activity.MailboxStatus(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *((_BYTE *)a1 + v19) = *((_BYTE *)a2 + v19);
    v12 = type metadata accessor for ConnectionStatus.Error(0);
    v13 = (char *)a1 + v19 + *(int *)(v12 + 20);
    v14 = (char *)a2 + v19 + *(int *)(v12 + 20);
    v15 = *(_QWORD *)(type metadata accessor for ConnectionStatus.Error.Details(0) - 8);
    if (!(*(unsigned int (**)(char *, uint64_t))(v15 + 48))(v14, 1))
    {
      v4 = (char *)&loc_1A513A774 + *((int *)qword_1A513A9F0 + swift_getEnumCaseMultiPayload());
      __asm { BR              X8 }
    }
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE798510);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
    __dst = (char *)a1 + v19 + *(int *)(v12 + 24);
    __src = (char *)a2 + v19 + *(int *)(v12 + 24);
    v10 = sub_1A594A0EC();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v11 + 48))(__src, 1))
    {
      v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE796458);
      memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, __src, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy((char *)a1 + v19, (char *)a2 + v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  return a1;
}

void **sub_1A513AA00(void **a1, id *a2, uint64_t a3)
{
  id v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *__dst;
  char *__src;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v22;

  v18 = *a1;
  v17 = *a2;
  v3 = *a2;
  *a1 = v17;

  v22 = *(int *)(a3 + 20);
  if ((char *)a1 + v22 != (char *)a2 + v22)
  {
    sub_1A5112518((uint64_t)a1 + v22);
    v16 = type metadata accessor for Activity.MailboxStatus(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *((_BYTE *)a1 + v22) = *((_BYTE *)a2 + v22);
      v12 = type metadata accessor for ConnectionStatus.Error(0);
      v13 = (char *)a1 + v22 + *(int *)(v12 + 20);
      v14 = (char *)a2 + v22 + *(int *)(v12 + 20);
      v15 = *(_QWORD *)(type metadata accessor for ConnectionStatus.Error.Details(0) - 8);
      if (!(*(unsigned int (**)(char *, uint64_t))(v15 + 48))(v14, 1))
      {
        v4 = (char *)&loc_1A513AB6C + dword_1A513ADEC[swift_getEnumCaseMultiPayload()];
        __asm { BR              X8 }
      }
      v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE798510);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
      __dst = (char *)a1 + v22 + *(int *)(v12 + 24);
      __src = (char *)a2 + v22 + *(int *)(v12 + 24);
      v10 = sub_1A594A0EC();
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t))(v11 + 48))(__src, 1))
      {
        v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE796458);
        memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, __src, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy((char *)a1 + v22, (char *)a2 + v22, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
  }
  return a1;
}

_QWORD *sub_1A513ADFC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v7;
  char *__src;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *__dst;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v19;

  *a1 = *a2;
  v17 = *(int *)(a3 + 20);
  v19 = type metadata accessor for Activity.MailboxStatus(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *((_BYTE *)a1 + v17) = *((_BYTE *)a2 + v17);
    v11 = type metadata accessor for ConnectionStatus.Error(0);
    __dst = (char *)a1 + v17 + *(int *)(v11 + 20);
    v13 = (char *)a2 + v17 + *(int *)(v11 + 20);
    v14 = type metadata accessor for ConnectionStatus.Error.Details(0);
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v15 + 48))(v13, 1))
    {
      v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE798510);
      memcpy(__dst, v13, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(__dst, v13, *(_QWORD *)(v15 + 64));
      }
      else
      {
        v3 = sub_1A594ACEC();
        (*(void (**)(char *, char *))(*(_QWORD *)(v3 - 8) + 32))(__dst, v13);
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
    }
    v7 = (char *)a1 + v17 + *(int *)(v11 + 24);
    __src = (char *)a2 + v17 + *(int *)(v11 + 24);
    v9 = sub_1A594A0EC();
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v10 + 48))(__src, 1))
    {
      v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE796458);
      memcpy(v7, __src, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, __src, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy((char *)a1 + v17, (char *)a2 + v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  return a1;
}

void **sub_1A513B0C0(void **a1, void **a2, uint64_t a3)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *__dst;
  char *__src;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v22;

  v4 = *a1;
  *a1 = *a2;

  v22 = *(int *)(a3 + 20);
  if ((char *)a1 + v22 != (char *)a2 + v22)
  {
    sub_1A5112518((uint64_t)a1 + v22);
    v18 = type metadata accessor for Activity.MailboxStatus(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *((_BYTE *)a1 + v22) = *((_BYTE *)a2 + v22);
      v13 = type metadata accessor for ConnectionStatus.Error(0);
      __dst = (char *)a1 + v22 + *(int *)(v13 + 20);
      __src = (char *)a2 + v22 + *(int *)(v13 + 20);
      v16 = type metadata accessor for ConnectionStatus.Error.Details(0);
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t))(v17 + 48))(__src, 1))
      {
        v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE798510);
        memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(__dst, __src, *(_QWORD *)(v17 + 64));
        }
        else
        {
          v5 = sub_1A594ACEC();
          (*(void (**)(char *, char *))(*(_QWORD *)(v5 - 8) + 32))(__dst, __src);
          swift_storeEnumTagMultiPayload();
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
      }
      v9 = (char *)a1 + v22 + *(int *)(v13 + 24);
      v10 = (char *)a2 + v22 + *(int *)(v13 + 24);
      v11 = sub_1A594A0EC();
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t))(v12 + 48))(v10, 1))
      {
        v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE796458);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy((char *)a1 + v22, (char *)a2 + v22, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1A513B3CC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A513B3E8(char *a1, unsigned int a2, uint64_t a3)
{
  int v3;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  int v8;

  if (a2 == 2147483646)
  {
    v8 = -1;
    if (*(_QWORD *)a1 < 0x100000000uLL)
      v8 = *(_QWORD *)a1;
    v3 = v8 - 1;
    if (v8 - 1 < 0)
      v3 = -1;
    return (v3 + 1);
  }
  else
  {
    v5 = type metadata accessor for Activity.MailboxStatus(0);
    v6 = *(_QWORD *)(v5 - 8);
    if (a2 == *(_DWORD *)(v6 + 84))
      return (*(unsigned int (**)(char *, _QWORD, uint64_t))(v6 + 48))(&a1[*(int *)(a3 + 20)], a2, v5);
    else
      __break(1u);
  }
  return v7;
}

uint64_t sub_1A513B4DC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1A513B4F8(char *result, unsigned int a2, int a3, uint64_t a4)
{
  uint64_t v4;
  char *v5;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)result = a2;
  }
  else
  {
    result = (char *)type metadata accessor for Activity.MailboxStatus(0);
    v4 = *((_QWORD *)result - 1);
    if (a3 == *(_DWORD *)(v4 + 84))
      return (char *)(*(uint64_t (**)(char *, _QWORD, _QWORD, char *))(v4 + 56))(&v5[*(int *)(a4 + 20)], a2, a2, result);
    else
      __break(1u);
  }
  return result;
}

uint64_t sub_1A513B5AC()
{
  unint64_t v0;
  uint64_t v2;

  v2 = type metadata accessor for Activity.MailboxStatus(319);
  if (v0 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return v2;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)result = *(_QWORD *)a2;
  *(_BYTE *)(result + 8) = *(_BYTE *)(a2 + 8);
  return result;
}

uint64_t sub_1A513B67C(uint64_t a1, int a2)
{
  int v3;

  if (a2)
  {
    if (*(_BYTE *)(a1 + 9))
      v3 = *(_QWORD *)a1;
    else
      v3 = -1;
  }
  else
  {
    v3 = -1;
  }
  return (v3 + 1);
}

uint64_t sub_1A513B7AC(uint64_t result, int a2, int a3)
{
  uint64_t v3;
  _BYTE *v4;

  v3 = result;
  v4 = (_BYTE *)(result + 9);
  if (a2)
  {
    result = 0;
    *(_BYTE *)(v3 + 8) = 0;
    *(_QWORD *)v3 = (a2 - 1);
    if (a3)
      *v4 = 1;
  }
  else if (a3)
  {
    *v4 = 0;
  }
  return result;
}

uint64_t sub_1A513B944(uint64_t a1)
{
  return MEMORY[0x1E0EAF720](a1, 1);
}

uint64_t sub_1A513B96C(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1E0EAF728](a1, a2, 1);
}

void *_s13ActivityScopeOMa()
{
  return &unk_1E4E7DC10;
}

id *sub_1A513B9A8(id *a1, id *a2)
{
  id v2;
  id v4;

  if ((unint64_t)*a2 <= 1)
  {
    *a1 = *a2;
  }
  else
  {
    v4 = *a2;
    v2 = *a2;
    *a1 = v4;
  }
  return a1;
}

void sub_1A513BA18(id *a1)
{
  if ((unint64_t)*a1 > 1)

}

id *sub_1A513BA5C(id *a1, id *a2)
{
  id v2;
  id v3;
  id v4;
  id v6;
  id v7;

  if ((unint64_t)*a1 <= 1)
  {
    if ((unint64_t)*a2 <= 1)
    {
      *a1 = *a2;
    }
    else
    {
      v6 = *a2;
      v4 = *a2;
      *a1 = v6;
    }
  }
  else if ((unint64_t)*a2 <= 1)
  {

    *a1 = *a2;
  }
  else
  {
    v7 = *a2;
    v2 = *a2;
    v3 = *a1;
    *a1 = v7;

  }
  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

id *sub_1A513BB58(id *a1, id *a2)
{
  id v2;

  if ((unint64_t)*a1 <= 1)
  {
    *a1 = *a2;
  }
  else if ((unint64_t)*a2 <= 1)
  {

    *a1 = *a2;
  }
  else
  {
    v2 = *a1;
    *a1 = *a2;

  }
  return a1;
}

uint64_t sub_1A513BC30(uint64_t a1, unsigned int a2)
{
  int v2;
  int v4;
  int v5;

  if (a2)
  {
    if (a2 > 0x7FFFFFFD && *(_BYTE *)(a1 + 8))
    {
      v5 = *(_QWORD *)a1 + 2147483645;
    }
    else
    {
      v4 = -1;
      if (*(_QWORD *)a1 < 0x100000000uLL)
        v4 = *(_QWORD *)a1;
      v2 = v4 - 2;
      if (v4 - 2 < 0)
        v2 = -1;
      v5 = v2;
    }
  }
  else
  {
    v5 = -1;
  }
  return (v5 + 1);
}

uint64_t sub_1A513BDAC(uint64_t result, unsigned int a2, unsigned int a3)
{
  _BOOL4 v3;

  v3 = a3 > 0x7FFFFFFD;
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = a2 - 2147483646;
    if (a3 > 0x7FFFFFFD)
    {
      if (v3)
        *(_BYTE *)(result + 8) = 1;
      else
        __break(1u);
    }
  }
  else
  {
    if (a3 > 0x7FFFFFFD)
    {
      if (v3)
        *(_BYTE *)(result + 8) = 0;
      else
        __break(1u);
    }
    if (a2)
      *(_QWORD *)result = a2 + 1;
  }
  return result;
}

uint64_t sub_1A513BFB0(uint64_t a1)
{
  unint64_t v1;

  v1 = sub_1A513BFEC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 48))(a1, 2);
}

unint64_t sub_1A513BFEC()
{
  unint64_t ObjCClassMetadata;
  uint64_t v2;

  v2 = qword_1EE79A5B0;
  if (!qword_1EE79A5B0)
  {
    objc_opt_self();
    ObjCClassMetadata = swift_getObjCClassMetadata();
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1EE79A5B0);
    return ObjCClassMetadata;
  }
  return v2;
}

uint64_t sub_1A513C050(uint64_t a1, unsigned int a2)
{
  unint64_t v2;

  v2 = sub_1A513BFEC();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, a2, 2);
}

void *_s18EmailActivityStateOMa()
{
  return &unk_1E4E79170;
}

unint64_t sub_1A513C0A8(_QWORD *a1, id *a2, uint64_t a3)
{
  id v3;
  uint64_t v4;
  id v5;
  id v7;
  uint64_t v8;
  void *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  int v26;

  v26 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v26 & 0x20000) != 0)
  {
    v21 = *a2;
    swift_retain();
    *a1 = v21;
    return *a1 + ((v26 + 16) & ~(unint64_t)v26);
  }
  else
  {
    v7 = *a2;
    v3 = *a2;
    *a1 = v7;
    v10 = (char *)a1 + *(int *)(a3 + 20);
    v11 = (char *)a2 + *(int *)(a3 + 20);
    v4 = sub_1A5949EF4();
    (*(void (**)(char *, char *))(*(_QWORD *)(v4 - 8) + 16))(v10, v11);
    v12 = _s18MailboxPersistenceVMa();
    v8 = *(int *)(v12 + 20);
    v9 = *(void **)&v11[v8];
    v5 = v9;
    *(_QWORD *)&v10[v8] = v9;
    v17 = &v10[*(int *)(v12 + 24)];
    v16 = &v11[*(int *)(v12 + 24)];
    *(_QWORD *)v17 = *(_QWORD *)v16;
    v13 = *((_QWORD *)v16 + 1);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    *((_QWORD *)v17 + 1) = v13;
    v14 = *((_QWORD *)v16 + 2);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    *((_QWORD *)v17 + 2) = v14;
    v15 = *((_QWORD *)v16 + 3);
    swift_retain();
    *((_QWORD *)v17 + 3) = v15;
    v18 = *((_QWORD *)v16 + 4);
    swift_retain();
    *((_QWORD *)v17 + 4) = v18;
    v19 = *(int *)(a3 + 24);
    v20 = *(uint64_t *)((char *)a2 + v19);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    *(_QWORD *)((char *)a1 + v19) = v20;
    return (unint64_t)a1;
  }
}

uint64_t sub_1A513C28C(id *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(int *)(a2 + 20);
  v2 = sub_1A5949EF4();
  (*(void (**)(void))(*(_QWORD *)(v2 - 8) + 8))();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1A513C35C(_QWORD *a1, id *a2, uint64_t a3)
{
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  _QWORD *result;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v23;
  uint64_t v24;

  v8 = *a2;
  v3 = *a2;
  *a1 = v8;
  v9 = *(int *)(a3 + 20);
  v4 = sub_1A5949EF4();
  v12 = (char *)a1 + v9;
  (*(void (**)(void))(*(_QWORD *)(v4 - 8) + 16))();
  v13 = _s18MailboxPersistenceVMa();
  v10 = *(int *)(v13 + 20);
  v11 = *(id *)((char *)a2 + v9 + v10);
  v5 = v11;
  *(_QWORD *)&v12[v10] = v11;
  v6 = *(int *)(v13 + 24);
  v17 = (id *)((char *)a2 + v9 + v6);
  v18 = (_QWORD *)((char *)a1 + v9 + v6);
  *(_QWORD *)&v12[v6] = *v17;
  v14 = v17[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v18[1] = v14;
  v15 = v17[2];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v18[2] = v15;
  v16 = v17[3];
  swift_retain();
  v18[3] = v16;
  v19 = v17[4];
  swift_retain();
  v18[4] = v19;
  v23 = *(int *)(a3 + 24);
  v24 = *(uint64_t *)((char *)a2 + v23);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  result = a1;
  *(_QWORD *)((char *)a1 + v23) = v24;
  return result;
}

void **sub_1A513C4E4(void **a1, id *a2, uint64_t a3)
{
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v22;
  void *v23;

  v9 = *a2;
  v3 = *a2;
  v4 = *a1;
  *a1 = v9;

  v10 = *(int *)(a3 + 20);
  v5 = sub_1A5949EF4();
  (*(void (**)(void))(*(_QWORD *)(v5 - 8) + 24))();
  v13 = _s18MailboxPersistenceVMa();
  v11 = *(int *)(v13 + 20);
  v12 = *(id *)((char *)a2 + v10 + v11);
  v6 = v12;
  v7 = *(void **)((char *)a1 + v10 + v11);
  *(void **)((char *)a1 + v10 + v11) = v12;

  v17 = (id *)((char *)a2 + v10 + *(int *)(v13 + 24));
  v18 = (void **)((char *)a1 + v10 + *(int *)(v13 + 24));
  *v18 = *v17;
  v14 = v17[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v18[1] = v14;
  swift_bridgeObjectRelease();
  v15 = v17[2];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v18[2] = v15;
  swift_bridgeObjectRelease();
  v16 = v17[3];
  swift_retain();
  v18[3] = v16;
  swift_release();
  v19 = v17[4];
  swift_retain();
  v18[4] = v19;
  swift_release();
  v22 = *(int *)(a3 + 24);
  v23 = *(id *)((char *)a2 + v22);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  *(void **)((char *)a1 + v22) = v23;
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_1A513C6C0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v3 = sub_1A5949EF4();
  (*(void (**)(void))(*(_QWORD *)(v3 - 8) + 32))();
  v4 = _s18MailboxPersistenceVMa();
  *(_QWORD *)((char *)a1 + v6 + *(int *)(v4 + 20)) = *(_QWORD *)((char *)a2 + v6 + *(int *)(v4 + 20));
  memcpy((char *)a1 + v6 + *(int *)(v4 + 24), (char *)a2 + v6 + *(int *)(v4 + 24), 0x28uLL);
  result = a1;
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  return result;
}

void **sub_1A513C790(void **a1, void **a2, uint64_t a3)
{
  void *v4;
  uint64_t v5;
  void **v6;
  void *v7;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v4 = *a1;
  *a1 = *a2;

  v9 = *(int *)(a3 + 20);
  v5 = sub_1A5949EF4();
  (*(void (**)(void))(*(_QWORD *)(v5 - 8) + 40))();
  v10 = _s18MailboxPersistenceVMa();
  v6 = (void **)((char *)a1 + v9 + *(int *)(v10 + 20));
  v7 = *v6;
  *v6 = *(void **)((char *)a2 + v9 + *(int *)(v10 + 20));

  v11 = (void **)((char *)a2 + v9 + *(int *)(v10 + 24));
  v12 = (void **)((char *)a1 + v9 + *(int *)(v10 + 24));
  *v12 = *v11;
  v12[1] = v11[1];
  swift_bridgeObjectRelease();
  v12[2] = v11[2];
  swift_bridgeObjectRelease();
  v12[3] = v11[3];
  swift_release();
  v12[4] = v11[4];
  swift_release();
  *(void **)((char *)a1 + *(int *)(a3 + 24)) = *(void **)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A513C8F8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A513C914(char *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  int v7;

  if (a2 == 0x7FFFFFFF)
  {
    v7 = -1;
    if (*(_QWORD *)a1 < 0x100000000uLL)
      v7 = *(_QWORD *)a1;
    return (v7 + 1);
  }
  else
  {
    v4 = _s18MailboxPersistenceVMa();
    v5 = *(_QWORD *)(v4 - 8);
    if (a2 == *(_DWORD *)(v5 + 84))
      return (*(unsigned int (**)(char *, _QWORD, uint64_t))(v5 + 48))(&a1[*(int *)(a3 + 20)], a2, v4);
    else
      __break(1u);
  }
  return v6;
}

uint64_t sub_1A513C9F0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1A513CA0C(char *result, unsigned int a2, int a3, uint64_t a4)
{
  uint64_t v4;
  char *v5;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = a2 - 1;
  }
  else
  {
    result = (char *)_s18MailboxPersistenceVMa();
    v4 = *((_QWORD *)result - 1);
    if (a3 == *(_DWORD *)(v4 + 84))
      return (char *)(*(uint64_t (**)(char *, _QWORD, _QWORD, char *))(v4 + 56))(&v5[*(int *)(a4 + 20)], a2, a2, result);
    else
      __break(1u);
  }
  return result;
}

uint64_t sub_1A513CABC()
{
  unint64_t v0;
  uint64_t v2;

  v2 = _s18MailboxPersistenceVMa();
  if (v0 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return v2;
}

_QWORD *sub_1A513CB88(_QWORD *a1, _QWORD *a2)
{
  id v2;
  _QWORD *result;
  void *v4;

  *a1 = *a2;
  v4 = (void *)a2[1];
  v2 = v4;
  result = a1;
  a1[1] = v4;
  return result;
}

void sub_1A513CBC4(uint64_t a1)
{

}

_QWORD *sub_1A513CBDC(_QWORD *a1, _QWORD *a2)
{
  id v2;
  void *v4;
  id v5;

  *a1 = *a2;
  v5 = (id)a1[1];
  v4 = (void *)a2[1];
  v2 = v4;
  a1[1] = v4;

  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_QWORD *sub_1A513CC38(_QWORD *a1, _QWORD *a2)
{
  void *v3;

  *a1 = *a2;
  v3 = (void *)a1[1];
  a1[1] = a2[1];

  return a1;
}

uint64_t sub_1A513CC74(uint64_t a1, unsigned int a2)
{
  int v2;
  int v4;
  int v5;

  if (a2)
  {
    if (a2 > 0x7FFFFFFE && *(_BYTE *)(a1 + 16))
    {
      v5 = *(_OWORD *)a1 + 2147483646;
    }
    else
    {
      v4 = -1;
      if (*(_QWORD *)(a1 + 8) < 0x100000000uLL)
        v4 = *(_QWORD *)(a1 + 8);
      v2 = v4 - 1;
      if (v4 - 1 < 0)
        v2 = -1;
      v5 = v2;
    }
  }
  else
  {
    v5 = -1;
  }
  return (v5 + 1);
}

uint64_t sub_1A513CDEC(uint64_t result, unsigned int a2, unsigned int a3)
{
  _BOOL4 v3;

  v3 = a3 > 0x7FFFFFFE;
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 > 0x7FFFFFFE)
    {
      if (v3)
        *(_BYTE *)(result + 16) = 1;
      else
        __break(1u);
    }
  }
  else
  {
    if (a3 > 0x7FFFFFFE)
    {
      if (v3)
        *(_BYTE *)(result + 16) = 0;
      else
        __break(1u);
    }
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

void *_s18LastSyncDateHelperV6UpdateVMa()
{
  return &unk_1E4E92D38;
}

unint64_t initializeBufferWithCopyOfBuffer for SyncError(_QWORD *a1, uint64_t *a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v6;
  char *__src;
  uint64_t v8;
  uint64_t v9;
  char *__dst;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v17;
  int v18;

  v17 = type metadata accessor for ConnectionStatus.Error(0);
  v18 = *(_DWORD *)(*(_QWORD *)(v17 - 8) + 80);
  if ((v18 & 0x20000) != 0)
  {
    v13 = *a2;
    swift_retain();
    *a1 = v13;
    return *a1 + ((v18 + 16) & ~(unint64_t)v18);
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    __dst = (char *)a1 + *(int *)(v17 + 20);
    v11 = (char *)a2 + *(int *)(v17 + 20);
    v12 = *(_QWORD *)(type metadata accessor for ConnectionStatus.Error.Details(0) - 8);
    if (!(*(unsigned int (**)(char *, uint64_t))(v12 + 48))(v11, 1))
    {
      v2 = (char *)&loc_1A513D10C + dword_1A513D33C[swift_getEnumCaseMultiPayload()];
      __asm { BR              X8 }
    }
    v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE798510);
    memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64));
    v6 = (char *)a1 + *(int *)(v17 + 24);
    __src = (char *)a2 + *(int *)(v17 + 24);
    v8 = sub_1A594A0EC();
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v9 + 48))(__src, 1))
    {
      v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE796458);
      memcpy(v6, __src, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, __src, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
    return (unint64_t)a1;
  }
}

uint64_t destroy for SyncError(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v6 = type metadata accessor for ConnectionStatus.Error(0);
  v7 = *(int *)(v6 + 20);
  v9 = type metadata accessor for ConnectionStatus.Error.Details(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + v7, 1))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload <= 3)
      __asm { BR              X8 }
  }
  v2 = a1 + *(int *)(v6 + 24);
  v3 = sub_1A594A0EC();
  v4 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 48))(v2, 1);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return result;
}

_BYTE *initializeWithCopy for SyncError(_BYTE *a1, _BYTE *a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *__dst;
  _BYTE *__src;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  *a1 = *a2;
  v11 = type metadata accessor for ConnectionStatus.Error(0);
  v12 = *(int *)(v11 + 20);
  v14 = *(_QWORD *)(type metadata accessor for ConnectionStatus.Error.Details(0) - 8);
  if (!(*(unsigned int (**)(_BYTE *, uint64_t))(v14 + 48))(&a2[v12], 1))
  {
    v2 = (char *)&loc_1A513D5AC + *((int *)qword_1A513D838 + swift_getEnumCaseMultiPayload());
    __asm { BR              X8 }
  }
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE798510);
  memcpy(&a1[v12], &a2[v12], *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64));
  __dst = &a1[*(int *)(v11 + 24)];
  __src = &a2[*(int *)(v11 + 24)];
  v8 = sub_1A594A0EC();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t))(v9 + 48))(__src, 1))
  {
    v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE796458);
    memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 16))(__dst, __src, v8);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v9 + 56))(__dst, 0, 1, v8);
  }
  return a1;
}

_BYTE *assignWithCopy for SyncError(_BYTE *a1, _BYTE *a2)
{
  char *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *__src;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(_BYTE *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  unsigned int (*v19)(_BYTE *, uint64_t, uint64_t);

  *a1 = *a2;
  v15 = type metadata accessor for ConnectionStatus.Error(0);
  v16 = *(int *)(v15 + 20);
  v18 = type metadata accessor for ConnectionStatus.Error.Details(0);
  v19 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48);
  if (((unsigned int (*)(_BYTE *, uint64_t))v19)(&a1[v16], 1))
  {
    if (!v19(&a2[v16], 1, v18))
    {
      v4 = (char *)&loc_1A513DB68 + dword_1A513DE9C[swift_getEnumCaseMultiPayload()];
      __asm { BR              X8 }
    }
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE798510);
    memcpy(&a1[v16], &a2[v16], *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  }
  else if (v19(&a2[v16], 1, v18))
  {
    sub_1A5139AA4((uint64_t)&a1[v16]);
    v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE798510);
    memcpy(&a1[v16], &a2[v16], *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64));
  }
  else if (&a1[v16] != &a2[v16])
  {
    sub_1A5139AA4((uint64_t)&a1[v16]);
    v2 = (char *)&loc_1A513D960 + dword_1A513DEAC[swift_getEnumCaseMultiPayload()];
    __asm { BR              X8 }
  }
  v10 = &a1[*(int *)(v15 + 24)];
  __src = &a2[*(int *)(v15 + 24)];
  v11 = sub_1A594A0EC();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48);
  if (((unsigned int (*)(_BYTE *, uint64_t))v13)(v10, 1))
  {
    if (v13(__src, 1, v11))
    {
      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE796458);
      memcpy(v10, __src, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 16))(v10, __src, v11);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    }
  }
  else if (v13(__src, 1, v11))
  {
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v10, v11);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE796458);
    memcpy(v10, __src, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 24))(v10, __src, v11);
  }
  return a1;
}

_BYTE *initializeWithTake for SyncError(_BYTE *a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *__dst;
  _BYTE *__src;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  *a1 = *a2;
  v11 = type metadata accessor for ConnectionStatus.Error(0);
  v12 = *(int *)(v11 + 20);
  v14 = type metadata accessor for ConnectionStatus.Error.Details(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t))(v15 + 48))(&a2[v12], 1))
  {
    v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE798510);
    memcpy(&a1[v12], &a2[v12], *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(&a1[v12], &a2[v12], *(_QWORD *)(v15 + 64));
    }
    else
    {
      v2 = sub_1A594ACEC();
      (*(void (**)(void))(*(_QWORD *)(v2 - 8) + 32))();
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v15 + 56))(&a1[v12], 0, 1, v14);
  }
  __dst = &a1[*(int *)(v11 + 24)];
  __src = &a2[*(int *)(v11 + 24)];
  v8 = sub_1A594A0EC();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t))(v9 + 48))(__src, 1))
  {
    v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE796458);
    memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 32))(__dst, __src, v8);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v9 + 56))(__dst, 0, 1, v8);
  }
  return a1;
}

_BYTE *assignWithTake for SyncError(_BYTE *a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *__src;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(_BYTE *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(_BYTE *, uint64_t, uint64_t);

  *a1 = *a2;
  v15 = type metadata accessor for ConnectionStatus.Error(0);
  v16 = *(int *)(v15 + 20);
  v18 = type metadata accessor for ConnectionStatus.Error.Details(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v19 + 48);
  if (((unsigned int (*)(_BYTE *, uint64_t))v20)(&a1[v16], 1))
  {
    if (v20(&a2[v16], 1, v18))
    {
      v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE798510);
      memcpy(&a1[v16], &a2[v16], *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(&a1[v16], &a2[v16], *(_QWORD *)(v19 + 64));
      }
      else
      {
        v4 = sub_1A594ACEC();
        (*(void (**)(void))(*(_QWORD *)(v4 - 8) + 32))();
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v19 + 56))(&a1[v16], 0, 1, v18);
    }
  }
  else if (v20(&a2[v16], 1, v18))
  {
    sub_1A5139AA4((uint64_t)&a1[v16]);
    v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE798510);
    memcpy(&a1[v16], &a2[v16], *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64));
  }
  else if (&a1[v16] != &a2[v16])
  {
    sub_1A5139AA4((uint64_t)&a1[v16]);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(&a1[v16], &a2[v16], *(_QWORD *)(v19 + 64));
    }
    else
    {
      v2 = sub_1A594ACEC();
      (*(void (**)(void))(*(_QWORD *)(v2 - 8) + 32))();
      swift_storeEnumTagMultiPayload();
    }
  }
  v10 = &a1[*(int *)(v15 + 24)];
  __src = &a2[*(int *)(v15 + 24)];
  v11 = sub_1A594A0EC();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48);
  if (((unsigned int (*)(_BYTE *, uint64_t))v13)(v10, 1))
  {
    if (v13(__src, 1, v11))
    {
      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE796458);
      memcpy(v10, __src, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 32))(v10, __src, v11);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    }
  }
  else if (v13(__src, 1, v11))
  {
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v10, v11);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE796458);
    memcpy(v10, __src, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 40))(v10, __src, v11);
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for SyncError()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A513E568(uint64_t a1, unsigned int a2)
{
  uint64_t v2;

  v2 = type metadata accessor for ConnectionStatus.Error(0);
  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 8) + 48))(a1, a2);
}

uint64_t storeEnumTagSinglePayload for SyncError()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A513E5C4(uint64_t a1, unsigned int a2)
{
  uint64_t v2;

  v2 = type metadata accessor for ConnectionStatus.Error(0);
  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 8) + 56))(a1, a2);
}

uint64_t sub_1A513E608()
{
  unint64_t v0;
  uint64_t v2;

  v2 = type metadata accessor for ConnectionStatus.Error(319);
  if (v0 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return v2;
}

_QWORD *sub_1A513E6B4(_QWORD *a1, _QWORD *a2)
{
  _QWORD *result;
  uint64_t v4;

  *a1 = *a2;
  v4 = a2[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  result = a1;
  a1[1] = v4;
  return result;
}

uint64_t destroy for RecentMailboxes.Element()
{
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1A513E708(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  *a1 = *a2;
  v3 = a2[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1A513E750(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
}

uint64_t sub_1A513E78C(uint64_t a1, unsigned int a2)
{
  int v3;
  int v4;

  if (a2)
  {
    if (a2 > 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    {
      v4 = *(_OWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v3 = -1;
      if (*(_QWORD *)(a1 + 8) < 0x100000000uLL)
        v3 = *(_QWORD *)(a1 + 8);
      v4 = v3;
    }
  }
  else
  {
    v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_1A513E8EC(uint64_t result, unsigned int a2, unsigned int a3)
{
  _BOOL4 v3;

  v3 = a3 > 0x7FFFFFFF;
  if (a2 > 0x7FFFFFFF)
  {
    *(_OWORD *)result = a2 + 0x80000000;
    if (a3 > 0x7FFFFFFF)
    {
      if (v3)
        *(_BYTE *)(result + 16) = 1;
      else
        __break(1u);
    }
  }
  else
  {
    if (a3 > 0x7FFFFFFF)
    {
      if (v3)
        *(_BYTE *)(result + 16) = 0;
      else
        __break(1u);
    }
    if (a2)
      *(_QWORD *)(result + 8) = a2 - 1;
  }
  return result;
}

void *_s21ActivityCapturedStateVMa()
{
  return &unk_1E4E7E908;
}

uint64_t sub_1A513EB08(_QWORD *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a2;
  swift_retain();
  *a1 = v4;
  return *a1 + 16;
}

uint64_t sub_1A513EB44()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1A513EB80(_QWORD *a1, _QWORD *a2)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;

  *a1 = *a2;
  v3 = a2[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  a1[1] = v3;
  a1[2] = a2[2];
  v4 = a2[3];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  a1[3] = v4;
  a1[4] = a2[4];
  v7 = a2[5];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  result = a1;
  a1[5] = v7;
  return result;
}

_QWORD *sub_1A513EC08(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  *a1 = *a2;
  v3 = a2[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  a1[1] = v3;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v4 = a2[3];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  a1[3] = v4;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  v6 = a2[5];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> __swift_memcpy48_8(void *a1, const void *a2)
{
  memcpy(a1, a2, 0x30uLL);
}

_QWORD *sub_1A513ECE0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A513ED60(uint64_t a1, int a2)
{
  int v3;
  int v4;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 48))
    {
      v4 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v3 = -1;
      if (!HIDWORD(*(_QWORD *)(a1 + 40)))
        v3 = *(_QWORD *)(a1 + 40);
      v4 = v3;
    }
  }
  else
  {
    v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_1A513EE78(uint64_t result, unsigned int a2, unsigned int a3)
{
  _BOOL4 v3;

  v3 = a3 > 0x7FFFFFFF;
  if (a2 > 0x7FFFFFFF)
  {
    *(_QWORD *)result = a2 + 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)(result + 32) = 0;
    *(_QWORD *)(result + 40) = 0;
    if (a3 > 0x7FFFFFFF)
    {
      if (v3)
        *(_BYTE *)(result + 48) = 1;
      else
        __break(1u);
    }
  }
  else
  {
    if (a3 > 0x7FFFFFFF)
    {
      if (v3)
        *(_BYTE *)(result + 48) = 0;
      else
        __break(1u);
    }
    if (a2)
      *(_QWORD *)(result + 40) = a2 - 1;
  }
  return result;
}

void *_s21ActivityCapturedStateV16CapturedActivityVMa()
{
  return &unk_1E4E7E7F0;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t sub_1A513F0A8(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v5;
  int v6;
  unsigned int v7;
  int v8;

  if (a2)
  {
    if (a2 <= 0xFD)
      goto LABEL_15;
    v7 = ((a2 + 2) >> 8) + 1;
    v8 = 1;
    if (v7 >= 0x100)
    {
      if (v7 >= 0x10000)
        v2 = 4;
      else
        v2 = 2;
      v8 = v2;
    }
    if (v8 == 1)
      v6 = a1[1];
    else
      v6 = v8 == 2 ? *(unsigned __int16 *)(a1 + 1) : *(_DWORD *)(a1 + 1);
    if (v6)
    {
      v5 = (*a1 | ((v6 - 1) << 8)) + 253;
    }
    else
    {
LABEL_15:
      v3 = *a1 - 3;
      if (v3 < 0)
        v3 = -1;
      v5 = v3;
    }
  }
  else
  {
    v5 = -1;
  }
  return (v5 + 1);
}

_BYTE *sub_1A513F258(_BYTE *result, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;
  unsigned int v5;
  int v6;
  int v7;

  v7 = 0;
  if (a3 > 0xFD)
  {
    v5 = ((a3 + 2) >> 8) + 1;
    v6 = 1;
    if (v5 >= 0x100)
    {
      if (v5 >= 0x10000)
        v3 = 4;
      else
        v3 = 2;
      v6 = v3;
    }
    v7 = v6;
  }
  if (a2 > 0xFD)
  {
    v4 = ((a2 - 254) >> 8) + 1;
    *result = a2 + 2;
    if (v7)
    {
      if (v7 == 1)
      {
        result[1] = v4;
      }
      else if (v7 == 2)
      {
        *(_WORD *)(result + 1) = v4;
      }
      else
      {
        *(_DWORD *)(result + 1) = v4;
      }
    }
  }
  else
  {
    if (v7)
    {
      if (v7 == 1)
      {
        result[1] = 0;
      }
      else if (v7 == 2)
      {
        *(_WORD *)(result + 1) = 0;
      }
      else
      {
        *(_DWORD *)(result + 1) = 0;
      }
    }
    if (a2)
      *result = a2 + 2;
  }
  return result;
}

uint64_t sub_1A513F49C(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_1A513F4A4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

void *_s21ActivityCapturedStateV16CapturedActivityV10CodingKeysOMa()
{
  return &unk_1E4E7E760;
}

uint64_t sub_1A513F4C0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v5;
  int v6;
  unsigned int v7;
  int v8;

  if (a2)
  {
    if (a2 <= 0xFE)
      goto LABEL_15;
    v7 = ((a2 + 1) >> 8) + 1;
    v8 = 1;
    if (v7 >= 0x100)
    {
      if (v7 >= 0x10000)
        v2 = 4;
      else
        v2 = 2;
      v8 = v2;
    }
    if (v8 == 1)
      v6 = a1[1];
    else
      v6 = v8 == 2 ? *(unsigned __int16 *)(a1 + 1) : *(_DWORD *)(a1 + 1);
    if (v6)
    {
      v5 = (*a1 | ((v6 - 1) << 8)) + 254;
    }
    else
    {
LABEL_15:
      v3 = *a1 - 2;
      if (v3 < 0)
        v3 = -1;
      v5 = v3;
    }
  }
  else
  {
    v5 = -1;
  }
  return (v5 + 1);
}

_BYTE *sub_1A513F670(_BYTE *result, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;
  unsigned int v5;
  int v6;
  int v7;

  v7 = 0;
  if (a3 > 0xFE)
  {
    v5 = ((a3 + 1) >> 8) + 1;
    v6 = 1;
    if (v5 >= 0x100)
    {
      if (v5 >= 0x10000)
        v3 = 4;
      else
        v3 = 2;
      v6 = v3;
    }
    v7 = v6;
  }
  if (a2 > 0xFE)
  {
    v4 = ((a2 - 255) >> 8) + 1;
    *result = a2 + 1;
    if (v7)
    {
      if (v7 == 1)
      {
        result[1] = v4;
      }
      else if (v7 == 2)
      {
        *(_WORD *)(result + 1) = v4;
      }
      else
      {
        *(_DWORD *)(result + 1) = v4;
      }
    }
  }
  else
  {
    if (v7)
    {
      if (v7 == 1)
      {
        result[1] = 0;
      }
      else if (v7 == 2)
      {
        *(_WORD *)(result + 1) = 0;
      }
      else
      {
        *(_DWORD *)(result + 1) = 0;
      }
    }
    if (a2)
      *result = a2 + 1;
  }
  return result;
}

uint64_t sub_1A513F8B4(_BYTE *a1)
{
  return *a1 & 1;
}

_BYTE *sub_1A513F8C0(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

void *_s21ActivityCapturedStateV10CodingKeysOMa()
{
  return &unk_1E4E7E878;
}

unint64_t sub_1A513F8E4()
{
  return sub_1A513F8F8();
}

unint64_t sub_1A513F8F8()
{
  unint64_t v0;
  uint64_t v2;

  v2 = qword_1EE798BD8;
  if (!qword_1EE798BD8)
  {
    v0 = MEMORY[0x1A85B1874](&unk_1A599AF5C, &unk_1E4E7E908);
    atomic_store(v0, (unint64_t *)&qword_1EE798BD8);
    return v0;
  }
  return v2;
}

uint64_t type metadata accessor for Key()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  v4 = qword_1EE7A6BF0;
  if (!qword_1EE7A6BF0)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    v4 = ForeignTypeMetadata;
    if (!v0)
    {
      v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1EE7A6BF0);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for IMAPCapability()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  v4 = qword_1EE7A6BF8;
  if (!qword_1EE7A6BF8)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    v4 = ForeignTypeMetadata;
    if (!v0)
    {
      v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1EE7A6BF8);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for ECMessageFlagColor()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  v4 = qword_1EE7A6C00;
  if (!qword_1EE7A6C00)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    v4 = ForeignTypeMetadata;
    if (!v0)
    {
      v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1EE7A6C00);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for EMFetchOption()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  v4 = qword_1EE799F98;
  if (!qword_1EE799F98)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    v4 = ForeignTypeMetadata;
    if (!v0)
    {
      v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1EE799F98);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for MessageRuleQualifier()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  v4 = qword_1EE79A1A0;
  if (!qword_1EE79A1A0)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    v4 = ForeignTypeMetadata;
    if (!v0)
    {
      v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1EE79A1A0);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for ECMessageHeaderKey()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  v4 = qword_1EE79A0E8;
  if (!qword_1EE79A0E8)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    v4 = ForeignTypeMetadata;
    if (!v0)
    {
      v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1EE79A0E8);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for CriterionType()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  v4 = qword_1EE7A6C10;
  if (!qword_1EE7A6C10)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    v4 = ForeignTypeMetadata;
    if (!v0)
    {
      v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1EE7A6C10);
      return v1;
    }
  }
  return v4;
}

uint64_t sub_1A513FDC4(uint64_t a1, int a2)
{
  int v3;

  if (a2)
  {
    if (*(_BYTE *)(a1 + 16))
      v3 = *(_OWORD *)a1;
    else
      v3 = -1;
  }
  else
  {
    v3 = -1;
  }
  return (v3 + 1);
}

uint64_t sub_1A513FEF0(uint64_t result, int a2, int a3)
{
  _BOOL4 v3;

  v3 = a3 != 0;
  if (a2)
  {
    *(_OWORD *)result = (a2 - 1);
    if (a3)
    {
      if (v3)
        *(_BYTE *)(result + 16) = 1;
      else
        __break(1u);
    }
  }
  else if (a3)
  {
    if (v3)
      *(_BYTE *)(result + 16) = 0;
    else
      __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for timeval()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  v4 = qword_1EE79A5C8;
  if (!qword_1EE79A5C8)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    v4 = ForeignTypeMetadata;
    if (!v0)
    {
      v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1EE79A5C8);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for EMPersistenceStatisticsKey()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  v4 = qword_1EE79A390;
  if (!qword_1EE79A390)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    v4 = ForeignTypeMetadata;
    if (!v0)
    {
      v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1EE79A390);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for WritingOptions()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  v4 = qword_1EE79A208;
  if (!qword_1EE79A208)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    v4 = ForeignTypeMetadata;
    if (!v0)
    {
      v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1EE79A208);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for MutabilityOptions()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  v4 = qword_1EE796120;
  if (!qword_1EE796120)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    v4 = ForeignTypeMetadata;
    if (!v0)
    {
      v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1EE796120);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for ReadingOptions()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  v4 = qword_1EE79A1D8;
  if (!qword_1EE79A1D8)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    v4 = ForeignTypeMetadata;
    if (!v0)
    {
      v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1EE79A1D8);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for FlowedTextConversionOptions()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  v4 = qword_1EE79A410;
  if (!qword_1EE79A410)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    v4 = ForeignTypeMetadata;
    if (!v0)
    {
      v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1EE79A410);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for MFMessageFlags()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  v4 = qword_1EE7960A8;
  if (!qword_1EE7960A8)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    v4 = ForeignTypeMetadata;
    if (!v0)
    {
      v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1EE7960A8);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for MailboxAttributes()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  v4 = qword_1EE79A0C0;
  if (!qword_1EE79A0C0)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    v4 = ForeignTypeMetadata;
    if (!v0)
    {
      v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1EE79A0C0);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for SearchOptions()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  v4 = qword_1EE7A6C18;
  if (!qword_1EE7A6C18)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    v4 = ForeignTypeMetadata;
    if (!v0)
    {
      v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1EE7A6C18);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for ECTransferMessageActionType()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  v4 = qword_1EE79A3C0;
  if (!qword_1EE79A3C0)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    v4 = ForeignTypeMetadata;
    if (!v0)
    {
      v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1EE79A3C0);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for URLResourceKey()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  v4 = qword_1EE7A1A38;
  if (!qword_1EE7A1A38)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    v4 = ForeignTypeMetadata;
    if (!v0)
    {
      v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1EE7A1A38);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for EDMailboxRowID_s()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  v4 = qword_1EE7A6C20;
  if (!qword_1EE7A6C20)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    v4 = ForeignTypeMetadata;
    if (!v0)
    {
      v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1EE7A6C20);
      return v1;
    }
  }
  return v4;
}

unint64_t sub_1A5140858()
{
  return sub_1A514086C();
}

unint64_t sub_1A514086C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE79A248;
  if (!qword_1EE79A248)
  {
    v0 = type metadata accessor for EMActivityUserInfoKey();
    v1 = MEMORY[0x1A85B1874](&unk_1A599A0EC, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE79A248);
    return v1;
  }
  return v3;
}

unint64_t sub_1A51408DC()
{
  return sub_1A51408F0();
}

unint64_t sub_1A51408F0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE79A260;
  if (!qword_1EE79A260)
  {
    v0 = type metadata accessor for EMActivityUserInfoKey();
    v1 = MEMORY[0x1A85B1874](&unk_1A599A0C0, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE79A260);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5140960()
{
  return sub_1A5140974();
}

unint64_t sub_1A5140974()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE7A4118;
  if (!qword_1EE7A4118)
  {
    v0 = type metadata accessor for URLResourceKey();
    v1 = MEMORY[0x1A85B1874](&unk_1A599A248, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE7A4118);
    return v1;
  }
  return v3;
}

unint64_t sub_1A51409E4()
{
  return sub_1A51409F8();
}

unint64_t sub_1A51409F8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE7A4130;
  if (!qword_1EE7A4130)
  {
    v0 = type metadata accessor for URLResourceKey();
    v1 = MEMORY[0x1A85B1874](&unk_1A599A21C, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE7A4130);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5140A68()
{
  return sub_1A5140A7C();
}

unint64_t sub_1A5140A7C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE7A6C28;
  if (!qword_1EE7A6C28)
  {
    v0 = type metadata accessor for SearchOptions();
    v1 = MEMORY[0x1A85B1874](&unk_1A599A390, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE7A6C28);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5140AEC()
{
  return sub_1A5140B00();
}

unint64_t sub_1A5140B00()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE7A6C30;
  if (!qword_1EE7A6C30)
  {
    v0 = type metadata accessor for SearchOptions();
    v1 = MEMORY[0x1A85B1874](&unk_1A599B5A4, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE7A6C30);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5140B70()
{
  return sub_1A5140B84();
}

unint64_t sub_1A5140B84()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE79A098;
  if (!qword_1EE79A098)
  {
    v0 = type metadata accessor for MailboxAttributes();
    v1 = MEMORY[0x1A85B1874](&unk_1A599B470, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE79A098);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5140BF4()
{
  return sub_1A5140C08();
}

unint64_t sub_1A5140C08()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE79A0B0;
  if (!qword_1EE79A0B0)
  {
    v0 = type metadata accessor for MailboxAttributes();
    v1 = MEMORY[0x1A85B1874](&unk_1A599A408, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE79A0B0);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5140C78()
{
  return sub_1A5140C8C();
}

unint64_t sub_1A5140C8C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE799FD8;
  if (!qword_1EE799FD8)
  {
    v0 = type metadata accessor for MFMessageFlags();
    v1 = MEMORY[0x1A85B1874](&unk_1A599A5A4, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE799FD8);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5140CFC()
{
  return sub_1A5140D10();
}

unint64_t sub_1A5140D10()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE799FE0;
  if (!qword_1EE799FE0)
  {
    v0 = type metadata accessor for MFMessageFlags();
    v1 = MEMORY[0x1A85B1874](&unk_1A599B49C, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE799FE0);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5140D80()
{
  return sub_1A5140D94();
}

unint64_t sub_1A5140D94()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE79A1B8;
  if (!qword_1EE79A1B8)
  {
    v0 = type metadata accessor for ReadingOptions();
    v1 = MEMORY[0x1A85B1874](&unk_1A599A718, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE79A1B8);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5140E04()
{
  return sub_1A5140E18();
}

unint64_t sub_1A5140E18()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE79A1C0;
  if (!qword_1EE79A1C0)
  {
    v0 = type metadata accessor for ReadingOptions();
    v1 = MEMORY[0x1A85B1874](&unk_1A599B29C, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE79A1C0);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5140E88()
{
  return sub_1A5140E9C();
}

unint64_t sub_1A5140E9C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE79A508;
  if (!qword_1EE79A508)
  {
    v0 = type metadata accessor for MutabilityOptions();
    v1 = MEMORY[0x1A85B1874](&unk_1A599A7F0, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE79A508);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5140F0C()
{
  return sub_1A5140F20();
}

unint64_t sub_1A5140F20()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE79A510;
  if (!qword_1EE79A510)
  {
    v0 = type metadata accessor for MutabilityOptions();
    v1 = MEMORY[0x1A85B1874](&unk_1A599B1D0, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE79A510);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5140F90()
{
  return sub_1A5140FA4();
}

unint64_t sub_1A5140FA4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE79A1E8;
  if (!qword_1EE79A1E8)
  {
    v0 = type metadata accessor for WritingOptions();
    v1 = MEMORY[0x1A85B1874](&unk_1A599A8C8, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE79A1E8);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5141014()
{
  return sub_1A5141028();
}

unint64_t sub_1A5141028()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE79A1F0;
  if (!qword_1EE79A1F0)
  {
    v0 = type metadata accessor for WritingOptions();
    v1 = MEMORY[0x1A85B1874](&unk_1A599B104, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE79A1F0);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5141098()
{
  return sub_1A51410AC();
}

unint64_t sub_1A51410AC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE79A368;
  if (!qword_1EE79A368)
  {
    v0 = type metadata accessor for EMPersistenceStatisticsKey();
    v1 = MEMORY[0x1A85B1874](&unk_1A599A96C, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE79A368);
    return v1;
  }
  return v3;
}

unint64_t sub_1A514111C()
{
  return sub_1A5141130();
}

unint64_t sub_1A5141130()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE79A380;
  if (!qword_1EE79A380)
  {
    v0 = type metadata accessor for EMPersistenceStatisticsKey();
    v1 = MEMORY[0x1A85B1874](&unk_1A599A940, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE79A380);
    return v1;
  }
  return v3;
}

unint64_t sub_1A51411A0()
{
  return sub_1A51411B4();
}

unint64_t sub_1A51411B4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE79A0D8;
  if (!qword_1EE79A0D8)
  {
    v0 = type metadata accessor for ECMessageHeaderKey();
    v1 = MEMORY[0x1A85B1874](&unk_1A599AA8C, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE79A0D8);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5141224()
{
  return sub_1A5141238();
}

unint64_t sub_1A5141238()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE7A6C40;
  if (!qword_1EE7A6C40)
  {
    v0 = type metadata accessor for ECMessageHeaderKey();
    v1 = MEMORY[0x1A85B1874](&unk_1A599AA60, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE7A6C40);
    return v1;
  }
  return v3;
}

unint64_t sub_1A51412A8()
{
  return sub_1A51412BC();
}

unint64_t sub_1A51412BC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE79A0C8;
  if (!qword_1EE79A0C8)
  {
    v0 = type metadata accessor for ECMessageHeaderKey();
    v1 = MEMORY[0x1A85B1874](&unk_1A599B094, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE79A0C8);
    return v1;
  }
  return v3;
}

unint64_t sub_1A514132C()
{
  return sub_1A5141340();
}

unint64_t sub_1A5141340()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE799F70;
  if (!qword_1EE799F70)
  {
    v0 = type metadata accessor for EMFetchOption();
    v1 = MEMORY[0x1A85B1874](&unk_1A599AFF0, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE799F70);
    return v1;
  }
  return v3;
}

unint64_t sub_1A51413B0()
{
  return sub_1A51413C4();
}

unint64_t sub_1A51413C4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE796098;
  if (!qword_1EE796098)
  {
    v0 = type metadata accessor for EMFetchOption();
    v1 = MEMORY[0x1A85B1874](&unk_1A599AB8C, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE796098);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5141434()
{
  return sub_1A5141448();
}

unint64_t sub_1A5141448()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE7A6C50;
  if (!qword_1EE7A6C50)
  {
    v0 = type metadata accessor for Key();
    v1 = MEMORY[0x1A85B1874](&unk_1A599AD5C, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE7A6C50);
    return v1;
  }
  return v3;
}

unint64_t sub_1A51414B8()
{
  return sub_1A51414CC();
}

unint64_t sub_1A51414CC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE7A6C58;
  if (!qword_1EE7A6C58)
  {
    v0 = type metadata accessor for Key();
    v1 = MEMORY[0x1A85B1874](&unk_1A599AD30, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE7A6C58);
    return v1;
  }
  return v3;
}

unint64_t sub_1A514153C()
{
  return sub_1A5141550();
}

unint64_t sub_1A5141550()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE7A6C60;
  if (!qword_1EE7A6C60)
  {
    v0 = type metadata accessor for Key();
    v1 = MEMORY[0x1A85B1874](&unk_1A599ADCC, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE7A6C60);
    return v1;
  }
  return v3;
}

unint64_t sub_1A51415C0()
{
  return sub_1A51415D4();
}

unint64_t sub_1A51415D4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE799F78;
  if (!qword_1EE799F78)
  {
    v0 = type metadata accessor for EMFetchOption();
    v1 = MEMORY[0x1A85B1874](&unk_1A599ABC0, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE799F78);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5141644()
{
  return sub_1A5141658();
}

unint64_t sub_1A5141658()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE799F90;
  if (!qword_1EE799F90)
  {
    v0 = type metadata accessor for EMFetchOption();
    v1 = MEMORY[0x1A85B1874](&unk_1A599ABFC, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE799F90);
    return v1;
  }
  return v3;
}

unint64_t sub_1A51416C8()
{
  return sub_1A51416DC();
}

unint64_t sub_1A51416DC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE79A358;
  if (!qword_1EE79A358)
  {
    v0 = type metadata accessor for EMPersistenceStatisticsKey();
    v1 = MEMORY[0x1A85B1874](&unk_1A599A9DC, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE79A358);
    return v1;
  }
  return v3;
}

unint64_t sub_1A514174C()
{
  return sub_1A5141760();
}

unint64_t sub_1A5141760()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE79A1E0;
  if (!qword_1EE79A1E0)
  {
    v0 = type metadata accessor for WritingOptions();
    v1 = MEMORY[0x1A85B1874](&unk_1A599A89C, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE79A1E0);
    return v1;
  }
  return v3;
}

unint64_t sub_1A51417D0()
{
  return sub_1A51417E4();
}

unint64_t sub_1A51417E4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE79A1F8;
  if (!qword_1EE79A1F8)
  {
    v0 = type metadata accessor for WritingOptions();
    v1 = MEMORY[0x1A85B1874](&unk_1A599A868, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE79A1F8);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5141854()
{
  return sub_1A5141868();
}

unint64_t sub_1A5141868()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE79A500;
  if (!qword_1EE79A500)
  {
    v0 = type metadata accessor for MutabilityOptions();
    v1 = MEMORY[0x1A85B1874](&unk_1A599A7C4, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE79A500);
    return v1;
  }
  return v3;
}

unint64_t sub_1A51418D8()
{
  return sub_1A51418EC();
}

unint64_t sub_1A51418EC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE79A518;
  if (!qword_1EE79A518)
  {
    v0 = type metadata accessor for MutabilityOptions();
    v1 = MEMORY[0x1A85B1874](&unk_1A599A790, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE79A518);
    return v1;
  }
  return v3;
}

unint64_t sub_1A514195C()
{
  return sub_1A5141970();
}

unint64_t sub_1A5141970()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE79A1B0;
  if (!qword_1EE79A1B0)
  {
    v0 = type metadata accessor for ReadingOptions();
    v1 = MEMORY[0x1A85B1874](&unk_1A599A6EC, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE79A1B0);
    return v1;
  }
  return v3;
}

unint64_t sub_1A51419E0()
{
  return sub_1A51419F4();
}

unint64_t sub_1A51419F4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE79A1C8;
  if (!qword_1EE79A1C8)
  {
    v0 = type metadata accessor for ReadingOptions();
    v1 = MEMORY[0x1A85B1874](&unk_1A599A6B8, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE79A1C8);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5141A64()
{
  return sub_1A5141A78();
}

unint64_t sub_1A5141A78()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE79A3E0;
  if (!qword_1EE79A3E0)
  {
    v0 = type metadata accessor for FlowedTextConversionOptions();
    v1 = MEMORY[0x1A85B1874](&unk_1A599A67C, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE79A3E0);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5141AE8()
{
  return sub_1A5141AFC();
}

unint64_t sub_1A5141AFC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE79A3F0;
  if (!qword_1EE79A3F0)
  {
    v0 = type metadata accessor for FlowedTextConversionOptions();
    v1 = MEMORY[0x1A85B1874](&unk_1A599B3A4, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE79A3F0);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5141B6C()
{
  return sub_1A5141B80();
}

unint64_t sub_1A5141B80()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE79A3D0;
  if (!qword_1EE79A3D0)
  {
    v0 = type metadata accessor for FlowedTextConversionOptions();
    v1 = MEMORY[0x1A85B1874](&unk_1A599A650, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE79A3D0);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5141BF0()
{
  return sub_1A5141C04();
}

unint64_t sub_1A5141C04()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE79A3F8;
  if (!qword_1EE79A3F8)
  {
    v0 = type metadata accessor for FlowedTextConversionOptions();
    v1 = MEMORY[0x1A85B1874](&unk_1A599A61C, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE79A3F8);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5141C74()
{
  return sub_1A5141C88();
}

unint64_t sub_1A5141C88()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE799FD0;
  if (!qword_1EE799FD0)
  {
    v0 = type metadata accessor for MFMessageFlags();
    v1 = MEMORY[0x1A85B1874](&unk_1A599A578, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE799FD0);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5141CF8()
{
  return sub_1A5141D0C();
}

unint64_t sub_1A5141D0C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE799FE8;
  if (!qword_1EE799FE8)
  {
    v0 = type metadata accessor for MFMessageFlags();
    v1 = MEMORY[0x1A85B1874](&unk_1A599A544, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE799FE8);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5141D7C()
{
  return sub_1A5141D90();
}

unint64_t sub_1A5141D90()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE79A0A0;
  if (!qword_1EE79A0A0)
  {
    v0 = type metadata accessor for MailboxAttributes();
    v1 = MEMORY[0x1A85B1874](&unk_1A599A43C, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE79A0A0);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5141E00()
{
  return sub_1A5141E14();
}

unint64_t sub_1A5141E14()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE79A0A8;
  if (!qword_1EE79A0A8)
  {
    v0 = type metadata accessor for MailboxAttributes();
    v1 = MEMORY[0x1A85B1874](&unk_1A599A478, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE79A0A8);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5141E84()
{
  return sub_1A5141E98();
}

unint64_t sub_1A5141E98()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE7A6C70;
  if (!qword_1EE7A6C70)
  {
    v0 = type metadata accessor for SearchOptions();
    v1 = MEMORY[0x1A85B1874](&unk_1A599A364, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE7A6C70);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5141F08()
{
  return sub_1A5141F1C();
}

unint64_t sub_1A5141F1C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE7A6C78;
  if (!qword_1EE7A6C78)
  {
    v0 = type metadata accessor for SearchOptions();
    v1 = MEMORY[0x1A85B1874](&unk_1A599A330, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE7A6C78);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5141F8C()
{
  return sub_1A5141FA0();
}

unint64_t sub_1A5141FA0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE7A4110;
  if (!qword_1EE7A4110)
  {
    v0 = type metadata accessor for URLResourceKey();
    v1 = MEMORY[0x1A85B1874](&unk_1A599A2B8, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE7A4110);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5142010()
{
  return sub_1A5142024();
}

unint64_t sub_1A5142024()
{
  unint64_t v0;
  uint64_t v2;

  v2 = qword_1EE798BC8;
  if (!qword_1EE798BC8)
  {
    v0 = MEMORY[0x1A85B1874](&unk_1A599AE44, &unk_1E4E7E878);
    atomic_store(v0, (unint64_t *)&qword_1EE798BC8);
    return v0;
  }
  return v2;
}

unint64_t sub_1A5142090()
{
  return sub_1A51420A4();
}

unint64_t sub_1A51420A4()
{
  unint64_t v0;
  uint64_t v2;

  v2 = qword_1EE798BC0;
  if (!qword_1EE798BC0)
  {
    v0 = MEMORY[0x1A85B1874](&unk_1A599AE6C, &unk_1E4E7E878);
    atomic_store(v0, (unint64_t *)&qword_1EE798BC0);
    return v0;
  }
  return v2;
}

unint64_t sub_1A5142110()
{
  return sub_1A5142124();
}

unint64_t sub_1A5142124()
{
  unint64_t v0;
  uint64_t v2;

  v2 = qword_1EE7A6C88;
  if (!qword_1EE7A6C88)
  {
    v0 = MEMORY[0x1A85B1874](&unk_1A599AE94, &unk_1E4E7E878);
    atomic_store(v0, (unint64_t *)&qword_1EE7A6C88);
    return v0;
  }
  return v2;
}

unint64_t sub_1A5142190()
{
  return sub_1A51421A4();
}

unint64_t sub_1A51421A4()
{
  unint64_t v0;
  uint64_t v2;

  v2 = qword_1EE798B90;
  if (!qword_1EE798B90)
  {
    v0 = MEMORY[0x1A85B1874](&unk_1A599AEBC, &unk_1E4E7E760);
    atomic_store(v0, (unint64_t *)&qword_1EE798B90);
    return v0;
  }
  return v2;
}

unint64_t sub_1A5142210()
{
  return sub_1A5142224();
}

unint64_t sub_1A5142224()
{
  unint64_t v0;
  uint64_t v2;

  v2 = qword_1EE798B88;
  if (!qword_1EE798B88)
  {
    v0 = MEMORY[0x1A85B1874](&unk_1A599AEE4, &unk_1E4E7E760);
    atomic_store(v0, (unint64_t *)&qword_1EE798B88);
    return v0;
  }
  return v2;
}

unint64_t sub_1A5142290()
{
  return sub_1A51422A4();
}

unint64_t sub_1A51422A4()
{
  unint64_t v0;
  uint64_t v2;

  v2 = qword_1EE7A6C90;
  if (!qword_1EE7A6C90)
  {
    v0 = MEMORY[0x1A85B1874](&unk_1A599AF0C, &unk_1E4E7E760);
    atomic_store(v0, (unint64_t *)&qword_1EE7A6C90);
    return v0;
  }
  return v2;
}

unint64_t sub_1A5142310()
{
  return sub_1A5142324();
}

unint64_t sub_1A5142324()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE79A238;
  if (!qword_1EE79A238)
  {
    v0 = type metadata accessor for EMActivityUserInfoKey();
    v1 = MEMORY[0x1A85B1874](&unk_1A599A15C, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE79A238);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5142394()
{
  return sub_1A51423A8();
}

unint64_t sub_1A51423A8()
{
  unint64_t v0;
  uint64_t v2;

  v2 = qword_1EE798AE0;
  if (!qword_1EE798AE0)
  {
    v0 = MEMORY[0x1A85B1874](&unk_1A599AF84, &unk_1E4E7DC10);
    atomic_store(v0, (unint64_t *)&qword_1EE798AE0);
    return v0;
  }
  return v2;
}

unint64_t sub_1A5142414()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE79A258;
  if (!qword_1EE79A258)
  {
    v0 = type metadata accessor for EMActivityUserInfoKey();
    v1 = MEMORY[0x1A85B1874](&unk_1A599A128, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE79A258);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5142484()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE79A290;
  if (!qword_1EE79A290)
  {
    v0 = type metadata accessor for ProgressUserInfoKey();
    v1 = MEMORY[0x1A85B1874](&unk_1A599BC3C, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE79A290);
    return v1;
  }
  return v3;
}

uint64_t type metadata accessor for ProgressUserInfoKey()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  v4 = qword_1EE7A48E0;
  if (!qword_1EE7A48E0)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    v4 = ForeignTypeMetadata;
    if (!v0)
    {
      v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1EE7A48E0);
      return v1;
    }
  }
  return v4;
}

unint64_t sub_1A5142594()
{
  uint64_t State;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE79A178;
  if (!qword_1EE79A178)
  {
    State = type metadata accessor for EMActivityFetchState();
    v1 = MEMORY[0x1A85B1874](&unk_1A599A1D4, State);
    atomic_store(v1, (unint64_t *)&qword_1EE79A178);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5142604()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE7A4120;
  if (!qword_1EE7A4120)
  {
    v0 = type metadata accessor for URLResourceKey();
    v1 = MEMORY[0x1A85B1874](&unk_1A599A284, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE7A4120);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5142674()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE7A6C98;
  if (!qword_1EE7A6C98)
  {
    v0 = type metadata accessor for SearchOptions();
    v1 = MEMORY[0x1A85B1874](&unk_1A599A3CC, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE7A6C98);
    return v1;
  }
  return v3;
}

unint64_t sub_1A51426E4()
{
  unint64_t v0;
  uint64_t v2;

  v2 = qword_1EE7990F0;
  if (!qword_1EE7990F0)
  {
    v0 = MEMORY[0x1A85B1874](MEMORY[0x1E0DEBBE0], MEMORY[0x1E0DEBB98]);
    atomic_store(v0, (unint64_t *)&qword_1EE7990F0);
    return v0;
  }
  return v2;
}

unint64_t sub_1A514274C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE799FF8;
  if (!qword_1EE799FF8)
  {
    v0 = type metadata accessor for MFMessageFlags();
    v1 = MEMORY[0x1A85B1874](&unk_1A599A5E0, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE799FF8);
    return v1;
  }
  return v3;
}

unint64_t sub_1A51427BC()
{
  unint64_t v0;
  uint64_t v2;

  v2 = qword_1EE79B4E0;
  if (!qword_1EE79B4E0)
  {
    v0 = MEMORY[0x1A85B1874](MEMORY[0x1E0DEE1D0], MEMORY[0x1E0DEE190]);
    atomic_store(v0, (unint64_t *)&qword_1EE79B4E0);
    return v0;
  }
  return v2;
}

unint64_t sub_1A5142824()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE79A408;
  if (!qword_1EE79A408)
  {
    v0 = type metadata accessor for FlowedTextConversionOptions();
    v1 = MEMORY[0x1A85B1874](&unk_1A599B368, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE79A408);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5142894()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE79A1D0;
  if (!qword_1EE79A1D0)
  {
    v0 = type metadata accessor for ReadingOptions();
    v1 = MEMORY[0x1A85B1874](&unk_1A599A754, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE79A1D0);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5142904()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE79A528;
  if (!qword_1EE79A528)
  {
    v0 = type metadata accessor for MutabilityOptions();
    v1 = MEMORY[0x1A85B1874](&unk_1A599A82C, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE79A528);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5142974()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE79A200;
  if (!qword_1EE79A200)
  {
    v0 = type metadata accessor for WritingOptions();
    v1 = MEMORY[0x1A85B1874](&unk_1A599A904, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE79A200);
    return v1;
  }
  return v3;
}

unint64_t sub_1A51429E4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE79A378;
  if (!qword_1EE79A378)
  {
    v0 = type metadata accessor for EMPersistenceStatisticsKey();
    v1 = MEMORY[0x1A85B1874](&unk_1A599A9A8, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE79A378);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5142A54()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE7A6CA0;
  if (!qword_1EE7A6CA0)
  {
    v0 = type metadata accessor for Key();
    v1 = MEMORY[0x1A85B1874](&unk_1A599AD98, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE7A6CA0);
    return v1;
  }
  return v3;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  int v2;

  v2 = *(_DWORD *)(*(_QWORD *)(a2 - 8) + 80);
  if ((v2 & 0x20000) != 0)
    return (_QWORD *)(*result + ((v2 + 16) & ~(unint64_t)v2));
  return result;
}

unint64_t sub_1A5142B18()
{
  unint64_t v0;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v3 = qword_1EE799908;
  if (!qword_1EE799908)
  {
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE799900);
    v4 = sub_1A5142B94();
    v0 = MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF10], v2, &v4);
    atomic_store(v0, (unint64_t *)&qword_1EE799908);
    return v0;
  }
  return v3;
}

unint64_t sub_1A5142B94()
{
  unint64_t v0;
  uint64_t v2;

  v2 = qword_1EE798BA0;
  if (!qword_1EE798BA0)
  {
    v0 = MEMORY[0x1A85B1874](&unk_1A599AF34, &unk_1E4E7E7F0);
    atomic_store(v0, (unint64_t *)&qword_1EE798BA0);
    return v0;
  }
  return v2;
}

unint64_t sub_1A5142C00()
{
  unint64_t v0;
  uint64_t v2;

  v2 = qword_1EE7A48F0;
  if (!qword_1EE7A48F0)
  {
    v0 = MEMORY[0x1A85B1874](MEMORY[0x1E0CB1A68], MEMORY[0x1E0DEA968]);
    atomic_store(v0, (unint64_t *)&qword_1EE7A48F0);
    return v0;
  }
  return v2;
}

unint64_t sub_1A5142C68()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE7A6CA8;
  if (!qword_1EE7A6CA8)
  {
    v0 = type metadata accessor for Key();
    v1 = MEMORY[0x1A85B1874](&unk_1A599AFAC, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE7A6CA8);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5142CD8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE7A6CB0;
  if (!qword_1EE7A6CB0)
  {
    v0 = type metadata accessor for ECMessageFlagColor();
    v1 = MEMORY[0x1A85B1874](&unk_1A599ACF4, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE7A6CB0);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5142D48()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE799F80;
  if (!qword_1EE799F80)
  {
    v0 = type metadata accessor for EMFetchOption();
    v1 = MEMORY[0x1A85B1874](&unk_1A599B01C, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE799F80);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5142DB8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE7A6CC0;
  if (!qword_1EE7A6CC0)
  {
    v0 = type metadata accessor for ECMessageHeaderKey();
    v1 = MEMORY[0x1A85B1874](&unk_1A599AAC8, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE7A6CC0);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5142E28()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE7A6CC8;
  if (!qword_1EE7A6CC8)
  {
    v0 = type metadata accessor for ECMessageHeaderKey();
    v1 = MEMORY[0x1A85B1874](&unk_1A599AAFC, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE7A6CC8);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5142E98()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE79A350;
  if (!qword_1EE79A350)
  {
    v0 = type metadata accessor for EMPersistenceStatisticsKey();
    v1 = MEMORY[0x1A85B1874](&unk_1A599B0C0, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE79A350);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5142F08()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE79A0B8;
  if (!qword_1EE79A0B8)
  {
    v0 = type metadata accessor for MailboxAttributes();
    v1 = MEMORY[0x1A85B1874](&unk_1A599B568, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE79A0B8);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5142F78()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE7A4100;
  if (!qword_1EE7A4100)
  {
    v0 = type metadata accessor for URLResourceKey();
    v1 = MEMORY[0x1A85B1874](&unk_1A599B6AC, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE7A4100);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5142FE8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE79A2A8;
  if (!qword_1EE79A2A8)
  {
    v0 = type metadata accessor for ProgressUserInfoKey();
    v1 = MEMORY[0x1A85B1874](&unk_1A599BBF0, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE79A2A8);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5143058()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE79A2A0;
  if (!qword_1EE79A2A0)
  {
    v0 = type metadata accessor for ProgressUserInfoKey();
    v1 = MEMORY[0x1A85B1874](&unk_1A599BBC4, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE79A2A0);
    return v1;
  }
  return v3;
}

unint64_t sub_1A51430C8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE7A4908;
  if (!qword_1EE7A4908)
  {
    v0 = type metadata accessor for ProgressUserInfoKey();
    v1 = MEMORY[0x1A85B1874](&unk_1A599BB90, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE7A4908);
    return v1;
  }
  return v3;
}

void *sub_1A5143138(const void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9;

  v9 = *(_QWORD *)(a3 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t))(v9 + 48))(a1, 1))
  {
    memcpy(a2, a1, *(_QWORD *)(*(_QWORD *)(a4 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(a2, a1, a3);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a2, 0, 1, a3);
  }
  return a2;
}

unint64_t sub_1A51431E4()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE799F40;
  if (!qword_1EE799F40)
  {
    v0 = sub_1A5138640();
    v1 = MEMORY[0x1A85B1874](MEMORY[0x1E0CB2120], v0);
    atomic_store(v1, (unint64_t *)&qword_1EE799F40);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5143254()
{
  unint64_t ObjCClassMetadata;
  uint64_t v2;

  v2 = qword_1EE79A048;
  if (!qword_1EE79A048)
  {
    objc_opt_self();
    ObjCClassMetadata = swift_getObjCClassMetadata();
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1EE79A048);
    return ObjCClassMetadata;
  }
  return v2;
}

_BYTE *sub_1A51432B8(_BYTE *a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v6;
  _BYTE *__src;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *__dst;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a2 != a1)
  {
    sub_1A5112518((uint64_t)a2);
    v15 = type metadata accessor for Activity.MailboxStatus(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a2 = *a1;
      v10 = type metadata accessor for ConnectionStatus.Error(0);
      __dst = &a2[*(int *)(v10 + 20)];
      v12 = &a1[*(int *)(v10 + 20)];
      v13 = type metadata accessor for ConnectionStatus.Error.Details(0);
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t))(v14 + 48))(v12, 1))
      {
        v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE798510);
        memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(__dst, v12, *(_QWORD *)(v14 + 64));
        }
        else
        {
          v2 = sub_1A594ACEC();
          (*(void (**)(_BYTE *, _BYTE *))(*(_QWORD *)(v2 - 8) + 32))(__dst, v12);
          swift_storeEnumTagMultiPayload();
        }
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
      }
      v6 = &a2[*(int *)(v10 + 24)];
      __src = &a1[*(int *)(v10 + 24)];
      v8 = sub_1A594A0EC();
      v9 = *(_QWORD *)(v8 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t))(v9 + 48))(__src, 1))
      {
        v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE796458);
        memcpy(v6, __src, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 32))(v6, __src, v8);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a2, a1, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
  }
  return a2;
}

id sub_1A5143538(uint64_t *a1, uint64_t a2, void *a3)
{
  uint64_t v3;

  return sub_1A511B7D4(a1, a2, a3, v3);
}

_QWORD *sub_1A5143540(id *a1, _QWORD *a2)
{
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  _QWORD *result;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v18;
  uint64_t v19;
  uint64_t SyncDateHelperVMa;
  uint64_t v22;
  uint64_t v23;

  v7 = *a1;
  v2 = *a1;
  *a2 = v7;
  SyncDateHelperVMa = _s18LastSyncDateHelperVMa();
  v8 = *(int *)(SyncDateHelperVMa + 20);
  v3 = sub_1A5949EF4();
  v11 = (char *)a2 + v8;
  (*(void (**)(void))(*(_QWORD *)(v3 - 8) + 16))();
  v12 = _s18MailboxPersistenceVMa();
  v9 = *(int *)(v12 + 20);
  v10 = *(id *)((char *)a1 + v8 + v9);
  v4 = v10;
  *(_QWORD *)&v11[v9] = v10;
  v5 = *(int *)(v12 + 24);
  v16 = (id *)((char *)a1 + v8 + v5);
  v18 = (_QWORD *)((char *)a2 + v8 + v5);
  *(_QWORD *)&v11[v5] = *v16;
  v13 = v16[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v18[1] = v13;
  v14 = v16[2];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v18[2] = v14;
  v15 = v16[3];
  swift_retain();
  v18[3] = v15;
  v19 = v16[4];
  swift_retain();
  v18[4] = v19;
  v22 = *(int *)(SyncDateHelperVMa + 24);
  v23 = *(uint64_t *)((char *)a1 + v22);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  result = a2;
  *(_QWORD *)((char *)a2 + v22) = v23;
  return result;
}

uint64_t sub_1A51436D0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  __int16 v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v11;
  _QWORD v12[4];
  _QWORD v13[4];
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;

  v14 = sub_1A5143840((uint64_t)&v17, 0, 0, 1, a1, a2);
  v15 = v3;
  v16 = v4;
  v11 = v17;
  if (v14)
  {
    v12[3] = swift_getObjectType();
    v12[0] = v14;
    v6 = *a3;
    if (*a3)
    {
      sub_1A5143BB4((uint64_t)v12, v6);
      *a3 = v6 + 32;
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  }
  else
  {
    v13[3] = MEMORY[0x1E0DEC2B8];
    v13[0] = a1;
    v13[1] = a2;
    v7 = *a3;
    if (*a3)
    {
      sub_1A5143BB4((uint64_t)v13, v7);
      *a3 = v7 + 32;
    }
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);
  }
  return v11;
}

uint64_t sub_1A5143840(uint64_t result, void *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char v13;
  char v14;
  int64_t v15;
  int64_t v16;
  _QWORD *v17;
  _QWORD v21[4];
  char v22;
  char v23;
  uint64_t v24;

  v17 = (_QWORD *)result;
  v24 = a6;
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (a2)
      {
        if (!a3)
          __break(1u);
        v16 = a3 - (_QWORD)a2;
      }
      else
      {
        v16 = 0;
      }
      v15 = (a6 & 0xF00000000000000uLL) >> 56;
      if (v15 < v16)
      {
        if (a2)
        {
          v21[0] = a5;
          v21[1] = a6 & (-(uint64_t)bswap64(0xFFuLL) - 1);
          sub_1A5143BF8(v21, v15, a2);
          sub_1A594C420();
          *v17 = a2;
          v11 = 0;
          v12 = v15;
          v13 = 1;
          v14 = 0;
LABEL_26:
          v21[2] = v11;
          v21[3] = v12;
          v22 = v13 & 1;
          v23 = v14 & 1;
          return (uint64_t)v11;
        }
        goto LABEL_28;
      }
    }
LABEL_13:
    v6 = sub_1A5143C34(a5, a6);
    *v17 = v7;
    v11 = v6;
    v12 = v8;
    v13 = 0;
    v14 = 1;
    goto LABEL_26;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    if ((a6 & 0xFFFFFFFFFFFFFFFLL) != 0xFFFFFFFFFFFFFFE0)
    {
      v10 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
      goto LABEL_21;
    }
    __break(1u);
  }
  result = sub_1A594C7D4();
  if (!result)
    goto LABEL_29;
  v10 = result;
LABEL_21:
  *v17 = v10;
  if (a6 < 0)
  {
    v9 = 0;
LABEL_25:
    v11 = (_QWORD *)v9;
    v12 = a5 & 0xFFFFFFFFFFFFLL;
    v13 = 0;
    v14 = 0;
    goto LABEL_26;
  }
  if ((a6 & 0xFFFFFFFFFFFFFFFLL) != 0)
  {
    swift_unknownObjectRetain();
    v9 = a6 & 0xFFFFFFFFFFFFFFFLL;
    goto LABEL_25;
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1A5143BB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v2;
  (**(void (***)(uint64_t))(v2 - 8))(a2);
  return a2;
}

void *sub_1A5143BF8(const void *a1, size_t a2, void *__dst)
{
  memcpy(__dst, a1, a2);
  return __dst;
}

_QWORD *sub_1A5143C34(uint64_t a1, uint64_t a2)
{
  _QWORD *result;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v6 = sub_1A5143CE4(a1, a2);
  sub_1A5143E5C();
  v4 = v6[2];
  sub_1A5143ED0(v4);
  sub_1A5143F50(v4, 0);
  sub_1A5131170();
  swift_retain();
  v5 = sub_1A5131154((uint64_t)v6);
  swift_bridgeObjectRelease();
  result = (_QWORD *)v5;
  if (!__OFSUB__(v5, 1))
    return v6;
  __break(1u);
  return result;
}

_QWORD *sub_1A5143CE4(uint64_t a1, uint64_t a2)
{
  _QWORD *result;
  char v3;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD v8[3];

  v8[2] = a2;
  if ((a2 & 0x1000000000000000) != 0)
  {
    v7 = sub_1A594B640();
  }
  else if ((a2 & 0x2000000000000000) != 0)
  {
    v7 = (a2 & 0xF00000000000000uLL) >> 56;
  }
  else
  {
    v7 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v7)
    return (_QWORD *)sub_1A52727F0();
  v5 = sub_1A54C8BBC(v7, 0);
  swift_retain();
  swift_release();
  result = (_QWORD *)sub_1A594C72C();
  v6 = result;
  if ((v3 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    result = v8;
    v8[0] = 0;
    v8[1] = 0xE000000000000000;
    sub_1A5139FD8();
    if (v6 == (_QWORD *)v7)
      return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5143E5C()
{
  uint64_t *v0;
  uint64_t result;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;

  v4 = *v0;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v0 = v4;
  if ((result & 1) == 0)
  {
    v2 = sub_1A5131154(*v3);
    result = sub_1A5143FBC(0, v2 + 1, 1, *v3);
    *v3 = result;
  }
  return result;
}

uint64_t sub_1A5143ED0(uint64_t result)
{
  uint64_t v1;
  uint64_t *v2;

  if (*(_QWORD *)(*(_QWORD *)v1 + 24) >> 1 < result + 1)
  {
    result = sub_1A5143FBC(*(_QWORD *)(*(_QWORD *)v1 + 24) >> 1 != 0, result + 1, 1, *v2);
    *v2 = result;
  }
  return result;
}

uint64_t sub_1A5143F50(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + 1;
  v4 = *v2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  *(_QWORD *)(v4 + 16) = v5;
  swift_release();
  v6 = *v2;
  swift_retain();
  *(_BYTE *)(v6 + 32 + a1) = a2;
  return swift_release();
}

uint64_t sub_1A5143FBC(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t result;
  char *v5;
  size_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v16;

  swift_retain();
  result = swift_retain();
  v16 = *(_QWORD *)(a4 + 24) >> 1;
  if ((a3 & 1) != 0)
  {
    if (v16 < a2)
    {
      if ((unsigned __int128)(v16 * (__int128)2) >> 64 != (2 * v16) >> 63)
      {
        __break(1u);
        return result;
      }
      if (2 * v16 < a2)
        v11 = a2;
      else
        v11 = 2 * v16;
    }
    else
    {
      v11 = *(_QWORD *)(a4 + 24) >> 1;
    }
  }
  else
  {
    v11 = a2;
  }
  v10 = *(_QWORD *)(a4 + 16);
  if (v11 < v10)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v11;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE79B338);
    v8 = (_QWORD *)swift_allocObject();
    if ((_swift_stdlib_has_malloc_size() & 1) != 0)
    {
      v6 = (size_t)v8 + _swift_stdlib_malloc_size(v8);
      swift_retain();
      v8[2] = v10;
      v8[3] = 2 * (v6 - (_QWORD)(v8 + 4));
    }
    else
    {
      swift_retain();
      v8[2] = v10;
      v8[3] = 2 * v9;
    }
    swift_release();
    v7 = (char *)v8;
  }
  else
  {
    v5 = (char *)MEMORY[0x1E0DEE9D8];
    swift_retain();
    v7 = v5;
  }
  if ((a1 & 1) != 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    sub_1A51442F8((char *)(a4 + 32), v10, v7 + 32);
    *(_QWORD *)(a4 + 16) = 0;
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_retain();
    swift_release();
    sub_1A51442C4((const void *)(a4 + 32), v10, v7 + 32);
    swift_unknownObjectRelease();
  }
  return (uint64_t)v7;
}

uint64_t _swift_stdlib_has_malloc_size()
{
  return 1;
}

void *sub_1A51442C4(const void *a1, size_t a2, void *__dst)
{
  return memcpy(__dst, a1, a2);
}

char *sub_1A51442F8(char *result, size_t a2, char *a3)
{
  if (a3 < result || a3 >= &result[a2] || a3 != result)
    return (char *)memmove(a3, result, a2);
  return result;
}

size_t _swift_stdlib_malloc_size(const void *a1)
{
  return malloc_size(a1);
}

uint64_t sub_1A51443CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1A5949EF4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(a2, a1);
  v3 = _s18MailboxPersistenceVMa();
  *(_QWORD *)(a2 + *(int *)(v3 + 20)) = *(_QWORD *)(a1 + *(int *)(v3 + 20));
  memcpy((void *)(a2 + *(int *)(v3 + 24)), (const void *)(a1 + *(int *)(v3 + 24)), 0x28uLL);
  return a2;
}

uint64_t sub_1A5144454()
{
  uint64_t v0;

  return swift_deallocObject();
}

void *sub_1A5144490()
{
  uint64_t v0;

  return sub_1A5114368(*(void **)(v0 + 16));
}

uint64_t sub_1A5144498()
{
  return swift_deallocObject();
}

uint64_t sub_1A51444C0()
{
  return swift_deallocObject();
}

uint64_t sub_1A51444E8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5144524()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1A5144560(uint64_t *a1, _QWORD **a2, uint64_t a3)
{
  uint64_t v3;

  sub_1A5176B04(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

unint64_t sub_1A514456C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE7A19C0;
  if (!qword_1EE7A19C0)
  {
    v0 = sub_1A594AD34();
    v1 = MEMORY[0x1A85B1874](MEMORY[0x1E0DEF510], v0);
    atomic_store(v1, (unint64_t *)&qword_1EE7A19C0);
    return v1;
  }
  return v3;
}

unint64_t sub_1A51445DC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE7A40C0;
  if (!qword_1EE7A40C0)
  {
    v0 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE7A19F8);
    v1 = MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF38], v0);
    atomic_store(v1, (unint64_t *)&qword_1EE7A40C0);
    return v1;
  }
  return v3;
}

uint64_t sub_1A514464C()
{
  return sub_1A51317DC();
}

unint64_t sub_1A5144678()
{
  unint64_t ObjCClassMetadata;
  uint64_t v2;

  v2 = qword_1EE7A4750;
  if (!qword_1EE7A4750)
  {
    objc_opt_self();
    ObjCClassMetadata = swift_getObjCClassMetadata();
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1EE7A4750);
    return ObjCClassMetadata;
  }
  return v2;
}

uint64_t type metadata accessor for ECJunkMailLevel()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  v4 = qword_1EE79A020;
  if (!qword_1EE79A020)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    v4 = ForeignTypeMetadata;
    if (!v0)
    {
      v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1EE79A020);
      return v1;
    }
  }
  return v4;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  return result;
}

uint64_t sub_1A5144790(uint64_t a1, int a2)
{
  int v3;

  if (a2)
  {
    if (*(_BYTE *)(a1 + 24))
      v3 = *(_DWORD *)a1;
    else
      v3 = -1;
  }
  else
  {
    v3 = -1;
  }
  return (v3 + 1);
}

uint64_t sub_1A5144870(uint64_t result, int a2, int a3)
{
  _BOOL4 v3;

  v3 = a3 != 0;
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    if (a3)
    {
      if (v3)
        *(_BYTE *)(result + 24) = 1;
      else
        __break(1u);
    }
  }
  else if (a3)
  {
    if (v3)
      *(_BYTE *)(result + 24) = 0;
    else
      __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for MFMailMessageLibraryUIDMessageSize()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  v4 = qword_1EE79A558;
  if (!qword_1EE79A558)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    v4 = ForeignTypeMetadata;
    if (!v0)
    {
      v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1EE79A558);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for EDMailboxActionType()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  v4 = qword_1EE7A6D30;
  if (!qword_1EE7A6D30)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    v4 = ForeignTypeMetadata;
    if (!v0)
    {
      v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1EE7A6D30);
      return v1;
    }
  }
  return v4;
}

__n128 __swift_memcpy16_4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_1A5144BA0(uint64_t a1, unsigned int a2)
{
  char v3;
  int v4;
  int v5;

  if (a2)
  {
    if (a2 > 0xFE && *(_BYTE *)(a1 + 16))
    {
      v5 = *(_OWORD *)a1 + 254;
    }
    else
    {
      v3 = *(_BYTE *)(a1 + 12);
      v4 = -1;
      if ((v3 & 0xFE) != 0)
        v4 = v3 & 1 | ((v3 & 0xFE) - 2) & 0x7FFFFFFF;
      v5 = v4;
    }
  }
  else
  {
    v5 = -1;
  }
  return (v5 + 1);
}

uint64_t sub_1A5144D0C(uint64_t result, unsigned int a2, unsigned int a3)
{
  _BOOL4 v3;

  v3 = a3 > 0xFE;
  if (a2 > 0xFE)
  {
    *(_OWORD *)result = a2 - 255;
    if (a3 > 0xFE)
    {
      if (v3)
        *(_BYTE *)(result + 16) = 1;
      else
        __break(1u);
    }
  }
  else
  {
    if (a3 > 0xFE)
    {
      if (v3)
        *(_BYTE *)(result + 16) = 0;
      else
        __break(1u);
    }
    if (a2)
      *(_BYTE *)(result + 12) = (a2 - 1) & 1 | (2 * (((a2 - 1) >> 1) + 1));
  }
  return result;
}

uint64_t type metadata accessor for MFMailMessageLibraryIndexedUIDRange()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  v4 = qword_1EE79A568;
  if (!qword_1EE79A568)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    v4 = ForeignTypeMetadata;
    if (!v0)
    {
      v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1EE79A568);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for ECMessageBodyElementAttributes()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  v4 = qword_1EE79A460;
  if (!qword_1EE79A460)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    v4 = ForeignTypeMetadata;
    if (!v0)
    {
      v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1EE79A460);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for os_unfair_lock_s()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  v4 = qword_1EE7960B8;
  if (!qword_1EE7960B8)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    v4 = ForeignTypeMetadata;
    if (!v0)
    {
      v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1EE7960B8);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for BGSystemTaskExpirationReason()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  v4 = qword_1EE7A6D40;
  if (!qword_1EE7A6D40)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    v4 = ForeignTypeMetadata;
    if (!v0)
    {
      v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1EE7A6D40);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for MFActivityMonitorNewMessagesState()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  v4 = qword_1EE79A538;
  if (!qword_1EE79A538)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    v4 = ForeignTypeMetadata;
    if (!v0)
    {
      v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1EE79A538);
      return v1;
    }
  }
  return v4;
}

unint64_t sub_1A5145244()
{
  return sub_1A5145258();
}

unint64_t sub_1A5145258()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE7A48F8;
  if (!qword_1EE7A48F8)
  {
    v0 = type metadata accessor for ProgressUserInfoKey();
    v1 = MEMORY[0x1A85B1874](&unk_1A599BA3C, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE7A48F8);
    return v1;
  }
  return v3;
}

unint64_t sub_1A51452C8()
{
  return sub_1A51452DC();
}

unint64_t sub_1A51452DC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE7A4910;
  if (!qword_1EE7A4910)
  {
    v0 = type metadata accessor for ProgressUserInfoKey();
    v1 = MEMORY[0x1A85B1874](&unk_1A599BA10, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE7A4910);
    return v1;
  }
  return v3;
}

unint64_t sub_1A514534C()
{
  return sub_1A5143058();
}

unint64_t sub_1A5145360()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE79A458;
  if (!qword_1EE79A458)
  {
    v0 = type metadata accessor for ECMessageBodyElementAttributes();
    v1 = MEMORY[0x1A85B1874](&unk_1A599BA78, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE79A458);
    return v1;
  }
  return v3;
}

unint64_t sub_1A51453D0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE79A010;
  if (!qword_1EE79A010)
  {
    v0 = type metadata accessor for ECJunkMailLevel();
    v1 = MEMORY[0x1A85B1874](&unk_1A599BAB4, v0);
    atomic_store(v1, (unint64_t *)&qword_1EE79A010);
    return v1;
  }
  return v3;
}

uint64_t sub_1A5145440()
{
  sub_1A51575E8(0);
  sub_1A594C048();
  sub_1A515AAB8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A47F0);
  sub_1A515AB28();
  return sub_1A594C5C4();
}

uint64_t sub_1A51454D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unsigned int v3;

  v3 = *MEMORY[0x1E0DEF8D0];
  v1 = sub_1A594C078();
  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 8) + 104))(a1, v3);
}

uint64_t sub_1A5145520()
{
  uint64_t v1;

  v1 = sub_1A594A764();
  __swift_allocate_value_buffer(v1, qword_1EE798E10);
  __swift_project_value_buffer(v1, (uint64_t)qword_1EE798E10);
  sub_1A594B568();
  sub_1A594B568();
  return sub_1A594A758();
}

uint64_t sub_1A51455C0()
{
  uint64_t v0;

  if (qword_1EE795E68 != -1)
    swift_once();
  v0 = sub_1A594A764();
  return __swift_project_value_buffer(v0, (uint64_t)qword_1EE798E10);
}

uint64_t sub_1A5145620()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1A594B568();
  qword_1EE7989D8 = result;
  qword_1EE7989E0 = v1;
  return result;
}

uint64_t *sub_1A5145660()
{
  if (qword_1EE7989F0 != -1)
    swift_once();
  return &qword_1EE7989D8;
}

void sub_1A51456B4()
{
  sub_1A514E9BC();
}

id sub_1A51456DC(uint64_t a1)
{
  id v2;

  v2 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithAccountsProvider_, a1);
  swift_unknownObjectRelease();
  return v2;
}

id sub_1A5145728(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  id v3;
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  id v8;
  id v9;
  __int16 v10;
  __int16 v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  id v34;
  objc_super v35;
  uint64_t v36;
  id v37;

  v33 = a1;
  v37 = 0;
  v36 = 0;
  v30 = 0;
  v21 = (*(_QWORD *)(*(_QWORD *)(sub_1A594C078() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](0);
  v29 = (uint64_t)&v21 - v21;
  v22 = (*(_QWORD *)(*(_QWORD *)(sub_1A594C048() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v30);
  v28 = (char *)&v21 - v22;
  v23 = (*(_QWORD *)(*(_QWORD *)(sub_1A594AD70() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1 = (void *)MEMORY[0x1E0C80A78](v32);
  v27 = (char *)&v21 - v23;
  v36 = v2;
  v3 = v1;
  v4 = v32;
  v5 = v32;
  v6 = v32;
  v7 = v32;
  v8 = v32;
  v37 = v32;
  v32[OBJC_IVAR___MFBackFillMessageBodyScheduler_didSetCriteria] = 0;

  v9 = v32;
  *(_QWORD *)&v32[OBJC_IVAR___MFBackFillMessageBodyScheduler_activity] = v30;

  v24 = OBJC_IVAR___MFBackFillMessageBodyScheduler_nextActivityID;
  sub_1A51456B4();
  v11 = v10;
  v12 = v32;
  *(_WORD *)&v32[v24] = v11;

  v31 = OBJC_IVAR___MFBackFillMessageBodyScheduler_queue;
  sub_1A5144678();
  v25 = sub_1A594B568();
  v26 = v13;
  sub_1A511327C();
  sub_1A5145440();
  sub_1A51454D4(v29);
  v14 = sub_1A594C0A8();
  v15 = v32;
  *(_QWORD *)&v32[v31] = v14;

  swift_unknownObjectRetain();
  v16 = v32;
  *(_QWORD *)&v32[OBJC_IVAR___MFBackFillMessageBodyScheduler_accountProvider] = v33;

  v35.receiver = v37;
  v35.super_class = (Class)MFBackFillMessageBodyScheduler;
  v17 = objc_msgSendSuper2(&v35, sel_init);
  v34 = v17;
  v18 = v17;
  v19 = v17;
  v37 = v17;
  sub_1A51459C0();

  swift_unknownObjectRelease();
  return v34;
}

uint64_t sub_1A51459C0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t *v7;
  id v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  const char *v13;
  uint64_t v14;
  void *v15;
  xpc_object_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t *v25;
  uint64_t *v26;
  _BYTE **v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  unint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t *v39;
  uint32_t v40;
  uint64_t v41;
  int v42;
  NSObject *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  uint64_t aBlock;
  int v50;
  int v51;
  uint64_t (*v52)(uint64_t, uint64_t);
  void *v53;
  void (*v54)(_xpc_activity_s *);
  uint64_t v55;
  uint64_t v56;
  uint32_t v57;
  uint64_t v58;

  v58 = 0;
  v31 = 0;
  v41 = 0;
  v36 = sub_1A594A764();
  v35 = *(_QWORD *)(v36 - 8);
  v33 = (*(_QWORD *)(v35 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v36);
  v0 = (char *)&v10 - v33;
  v34 = (char *)&v10 - v33;
  v58 = v1;
  v2 = sub_1A51455C0();
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v0, v2, v36);
  v43 = sub_1A594A74C();
  v42 = sub_1A594C030();
  v39 = &v56;
  v56 = 2;
  v37 = sub_1A5130F74();
  v38 = sub_1A5130FDC();
  sub_1A5131044();
  sub_1A594B880();
  v40 = v57;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A48D0);
  v44 = sub_1A594CD14();
  if (os_log_type_enabled(v43, (os_log_type_t)v42))
  {
    v3 = v31;
    v21 = (uint8_t *)sub_1A594C348();
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
    v20 = 0;
    v22 = sub_1A5130D14(0);
    v23 = sub_1A5130D14(v20);
    v27 = &v48;
    v48 = v21;
    v28 = &v47;
    v47 = v22;
    v25 = &v46;
    v46 = v23;
    v24 = 0;
    sub_1A5130D6C(0, &v48);
    sub_1A5130D6C(v24, v27);
    v45 = v44;
    v26 = &v10;
    MEMORY[0x1E0C80A78](&v10);
    v4 = v28;
    v5 = &v10 - 6;
    v29 = &v10 - 6;
    v5[2] = (uint64_t)v27;
    v5[3] = (uint64_t)v4;
    v5[4] = v6;
    v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE799E10);
    sub_1A5131B04();
    sub_1A594B7FC();
    if (v3)
    {
      __break(1u);
    }
    else
    {
      _os_log_impl(&dword_1A4F90000, v43, (os_log_type_t)v42, "Registering.", v21, v40);
      v18 = 0;
      sub_1A5130DC4(v22);
      sub_1A5130DC4(v23);
      sub_1A594C330();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  (*(void (**)(char *, uint64_t))(v35 + 8))(v34, v36);
  v7 = sub_1A5145660();
  v12 = *v7;
  v17 = v7[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v16 = (xpc_object_t)*MEMORY[0x1E0C80748];
  swift_unknownObjectRetain();
  v11 = swift_allocObject();
  v10 = v11 + 16;
  v8 = v32;
  swift_unknownObjectWeakInit();

  swift_retain();
  v54 = sub_1A515652C;
  v55 = v11;
  aBlock = MEMORY[0x1E0C809B0];
  v50 = 1107296256;
  v51 = 0;
  v52 = sub_1A5147EE4;
  v53 = &block_descriptor_0;
  v15 = _Block_copy(&aBlock);
  swift_release();
  swift_release();
  v14 = sub_1A594B4C0();
  swift_retain();
  swift_release();
  swift_retain();
  v13 = (const char *)(v14 + 32);
  swift_bridgeObjectRelease();
  xpc_activity_register(v13, v16, v15);
  swift_unknownObjectRelease();
  _Block_release(v15);
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

void __swiftcall MFBackFillMessageBodyScheduler.init()(MFBackFillMessageBodyScheduler *__return_ptr retstr)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

uint64_t MFBackFillMessageBodyScheduler.init()()
{
  uint64_t result;
  uint64_t v1;

  if (!"Message_Private.MFBackFillMessageBodyScheduler")
  {
    sub_1A594C9B4();
    __break(1u);
  }
  result = sub_1A5156590((uint64_t)"Message_Private.MFBackFillMessageBodyScheduler", 46, (unint64_t)"", 0, 2, (unint64_t)"", 0, 2, v1, 0, 0);
  __break(1u);
  return result;
}

void sub_1A5146078(_xpc_activity_s *a1, uint64_t a2)
{
  uint64_t v2;
  id v3;
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD v19[4];
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE **v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t *v30;
  uint32_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  NSObject *v43;
  int v44;
  id *v45;
  id v46;
  uint64_t v47;
  id *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _xpc_activity_s *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  xpc_activity_state_t state;
  id v60;
  id v61;
  uint64_t (*v62)(uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  uint64_t v67;
  uint32_t v68;
  xpc_activity_state_t v69;
  uint64_t v70;
  xpc_activity_t v71;

  v53 = a1;
  v52 = a2;
  v71 = 0;
  v70 = 0;
  v69 = 0;
  v51 = 0;
  v58 = 0;
  v54 = sub_1A594A764();
  v55 = *(_QWORD *)(v54 - 8);
  v56 = (*(_QWORD *)(v55 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v57 = (char *)v19 - v56;
  v71 = (xpc_activity_t)MEMORY[0x1E0C80A78](v53);
  v70 = v2 + 16;
  state = xpc_activity_get_state(v71);
  v69 = state;
  if (v58 == state)
  {
    v50 = v52 + 16;
    swift_beginAccess();
    v60 = (id)MEMORY[0x1A85B1A0C](v50);
    if (v60)
    {
      v48 = &v60;
      v49 = v60;
      v3 = v60;
      sub_1A5138D80(v48);
      swift_endAccess();
      sub_1A5146854(v53);

    }
    else
    {
      sub_1A5138D80(&v60);
      swift_endAccess();
    }
  }
  else if (state == 2)
  {
    v47 = v52 + 16;
    swift_beginAccess();
    v61 = (id)MEMORY[0x1A85B1A0C](v47);
    if (v61)
    {
      v45 = &v61;
      v46 = v61;
      v4 = v61;
      sub_1A5138D80(v45);
      swift_endAccess();
      sub_1A51473D4((uint64_t)v53);

    }
    else
    {
      sub_1A5138D80(&v61);
      swift_endAccess();
    }
  }
  else
  {
    v5 = v57;
    v6 = sub_1A51455C0();
    (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v5, v6, v54);
    v34 = 7;
    v35 = swift_allocObject();
    *(_QWORD *)(v35 + 16) = state;
    v43 = sub_1A594A74C();
    v44 = sub_1A594C018();
    v30 = &v67;
    v67 = 12;
    v28 = sub_1A5130F74();
    v29 = sub_1A5130FDC();
    sub_1A5131044();
    sub_1A594B880();
    v31 = v68;
    v32 = 17;
    v37 = swift_allocObject();
    *(_BYTE *)(v37 + 16) = 0;
    v38 = swift_allocObject();
    *(_BYTE *)(v38 + 16) = 8;
    v33 = 32;
    v7 = swift_allocObject();
    v8 = v35;
    v36 = v7;
    *(_QWORD *)(v7 + 16) = sub_1A5158BAC;
    *(_QWORD *)(v7 + 24) = v8;
    v9 = swift_allocObject();
    v10 = v36;
    v40 = v9;
    *(_QWORD *)(v9 + 16) = sub_1A5138BDC;
    *(_QWORD *)(v9 + 24) = v10;
    v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A48D0);
    v39 = sub_1A594CD14();
    v41 = v11;
    swift_retain();
    v12 = v37;
    v13 = v41;
    *v41 = sub_1A5131290;
    v13[1] = v12;
    swift_retain();
    v14 = v38;
    v15 = v41;
    v41[2] = sub_1A5131290;
    v15[3] = v14;
    swift_retain();
    v16 = v40;
    v17 = v41;
    v41[4] = sub_1A5138C24;
    v17[5] = v16;
    sub_1A5113324();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v43, (os_log_type_t)v44))
    {
      v18 = v51;
      v21 = (uint8_t *)sub_1A594C348();
      v19[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
      v20 = 0;
      v22 = sub_1A5130D14(0);
      v23 = sub_1A5130D14(v20);
      v24 = &v66;
      v66 = v21;
      v25 = &v65;
      v65 = v22;
      v26 = &v64;
      v64 = v23;
      sub_1A5130D6C(0, &v66);
      sub_1A5130D6C(1, v24);
      v62 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
      v63 = v37;
      sub_1A5130D80(&v62, (uint64_t)v24, (uint64_t)v25, (uint64_t)v26);
      v27 = v18;
      if (v18)
      {
        __break(1u);
      }
      else
      {
        v62 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v63 = v38;
        sub_1A5130D80(&v62, (uint64_t)&v66, (uint64_t)&v65, (uint64_t)&v64);
        v19[1] = 0;
        v62 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5138C24;
        v63 = v40;
        sub_1A5130D80(&v62, (uint64_t)&v66, (uint64_t)&v65, (uint64_t)&v64);
        _os_log_impl(&dword_1A4F90000, v43, (os_log_type_t)v44, "Unexpected activity state: %ld.", v21, v31);
        v19[0] = 0;
        sub_1A5130DC4(v22);
        sub_1A5130DC4(v23);
        sub_1A594C330();
        swift_release();
        swift_release();
        swift_release();
      }
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
    }

    (*(void (**)(char *, uint64_t))(v55 + 8))(v57, v54);
  }
}

uint64_t sub_1A5146854(_xpc_activity_s *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _xpc_activity_s *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD v26[3];
  uint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  uint64_t *v32;
  _QWORD *v33;
  _BYTE **v34;
  uint64_t *v35;
  _QWORD *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t *v40;
  uint32_t v41;
  int v42;
  NSObject *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE **v50;
  uint64_t *v51;
  uint64_t *v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t *v56;
  uint32_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  NSObject *v69;
  int v70;
  xpc_object_t v71;
  xpc_object_t v72;
  uint64_t v73;
  xpc_activity_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char *v78;
  unint64_t v79;
  char *v80;
  xpc_object_t v81;
  uint64_t v82;
  uint64_t v83;
  xpc_object_t v84;
  unsigned __int8 *v85;
  char *v86;
  int v87;
  xpc_object_t v88;
  uint64_t (*v89)(uint64_t, uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _BYTE *v93;
  uint64_t v94;
  uint32_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _BYTE *v99;
  uint64_t v100;
  uint32_t v101;
  char v102;
  BOOL v103;
  xpc_object_t v104;
  xpc_object_t v105;
  uint64_t v106;
  _xpc_activity_s *v107;

  v74 = a1;
  v107 = 0;
  v106 = 0;
  v105 = 0;
  v104 = 0;
  v103 = 0;
  v83 = 0;
  v73 = 0;
  v88 = 0;
  v75 = sub_1A594A764();
  v76 = *(_QWORD *)(v75 - 8);
  v77 = (*(_QWORD *)(v76 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = MEMORY[0x1E0C80A78](v74);
  v78 = (char *)v26 - v77;
  v79 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = (_xpc_activity_s *)MEMORY[0x1E0C80A78](v2);
  v80 = (char *)v26 - v79;
  v107 = v4;
  v106 = v1;
  v81 = xpc_activity_copy_criteria(v4);
  v105 = v81;
  v84 = sub_1A5148334();
  v104 = v84;
  v85 = (unsigned __int8 *)(v82 + OBJC_IVAR___MFBackFillMessageBodyScheduler_didSetCriteria);
  v86 = &v102;
  swift_beginAccess();
  v87 = *v85;
  swift_endAccess();
  if ((v87 & 1) != 0)
  {
    swift_unknownObjectRetain();
    if (v81)
    {
      v72 = v81;
      v71 = v81;
      v88 = v81;
      v103 = !xpc_equal(v84, v81);
      swift_unknownObjectRelease();
    }
    else
    {
      v103 = 1;
    }
  }
  else
  {
    v103 = 1;
  }
  if (v103)
  {
    v5 = v80;
    v6 = sub_1A51455C0();
    (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v5, v6, v75);
    swift_unknownObjectRetain();
    v60 = 7;
    v61 = swift_allocObject();
    *(_QWORD *)(v61 + 16) = v84;
    v69 = sub_1A594A74C();
    v70 = sub_1A594C030();
    v56 = &v94;
    v94 = 12;
    v54 = sub_1A5130F74();
    v55 = sub_1A5130FDC();
    sub_1A5131044();
    sub_1A594B880();
    v57 = v95;
    v58 = 17;
    v63 = swift_allocObject();
    *(_BYTE *)(v63 + 16) = 34;
    v64 = swift_allocObject();
    *(_BYTE *)(v64 + 16) = 8;
    v59 = 32;
    v7 = swift_allocObject();
    v8 = v61;
    v62 = v7;
    *(_QWORD *)(v7 + 16) = sub_1A5156990;
    *(_QWORD *)(v7 + 24) = v8;
    v9 = swift_allocObject();
    v10 = v62;
    v66 = v9;
    *(_QWORD *)(v9 + 16) = sub_1A5130F5C;
    *(_QWORD *)(v9 + 24) = v10;
    v68 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A48D0);
    v65 = sub_1A594CD14();
    v67 = v11;
    swift_retain();
    v12 = v63;
    v13 = v67;
    *v67 = sub_1A5131290;
    v13[1] = v12;
    swift_retain();
    v14 = v64;
    v15 = v67;
    v67[2] = sub_1A5131290;
    v15[3] = v14;
    swift_retain();
    v16 = v66;
    v17 = v67;
    v67[4] = sub_1A5133578;
    v17[5] = v16;
    sub_1A5113324();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v69, (os_log_type_t)v70))
    {
      v18 = v73;
      v47 = (uint8_t *)sub_1A594C348();
      v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
      v48 = sub_1A5130D14(0);
      v49 = sub_1A5130D14(1);
      v50 = &v93;
      v93 = v47;
      v51 = &v92;
      v92 = v48;
      v52 = &v91;
      v91 = v49;
      sub_1A5130D6C(2, &v93);
      sub_1A5130D6C(1, v50);
      v89 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
      v90 = v63;
      sub_1A5130D80(&v89, (uint64_t)v50, (uint64_t)v51, (uint64_t)v52);
      v53 = v18;
      if (v18)
      {
        __break(1u);
      }
      else
      {
        v89 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v90 = v64;
        sub_1A5130D80(&v89, (uint64_t)&v93, (uint64_t)&v92, (uint64_t)&v91);
        v45 = 0;
        v89 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5133578;
        v90 = v66;
        sub_1A5130D80(&v89, (uint64_t)&v93, (uint64_t)&v92, (uint64_t)&v91);
        _os_log_impl(&dword_1A4F90000, v69, (os_log_type_t)v70, "Checking in: Updating criteria to %{public}s", v47, v57);
        sub_1A5130DC4(v48);
        sub_1A5130DC4(v49);
        sub_1A594C330();
        swift_release();
        swift_release();
        swift_release();
      }
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
    }

    (*(void (**)(char *, uint64_t))(v76 + 8))(v80, v75);
    xpc_activity_set_criteria(v74, v84);
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  else
  {
    v20 = v78;
    v21 = sub_1A51455C0();
    (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v20, v21, v75);
    v43 = sub_1A594A74C();
    v42 = sub_1A594C030();
    v40 = &v100;
    v100 = 2;
    v38 = sub_1A5130F74();
    v39 = sub_1A5130FDC();
    sub_1A5131044();
    sub_1A594B880();
    v41 = v101;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A48D0);
    v44 = sub_1A594CD14();
    if (os_log_type_enabled(v43, (os_log_type_t)v42))
    {
      v22 = v73;
      v28 = (uint8_t *)sub_1A594C348();
      v26[2] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
      v27 = 0;
      v29 = sub_1A5130D14(0);
      v30 = sub_1A5130D14(v27);
      v34 = &v99;
      v99 = v28;
      v35 = &v98;
      v98 = v29;
      v32 = &v97;
      v97 = v30;
      v31 = 0;
      sub_1A5130D6C(0, &v99);
      sub_1A5130D6C(v31, v34);
      v96 = v44;
      v33 = v26;
      MEMORY[0x1E0C80A78](v26);
      v23 = v35;
      v24 = &v26[-6];
      v36 = &v26[-6];
      v24[2] = v34;
      v24[3] = v23;
      v24[4] = v25;
      v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE799E10);
      sub_1A5131B04();
      sub_1A594B7FC();
      if (v22)
      {
        __break(1u);
      }
      else
      {
        _os_log_impl(&dword_1A4F90000, v43, (os_log_type_t)v42, "Checked in.", v28, v41);
        v26[1] = 0;
        sub_1A5130DC4(v29);
        sub_1A5130DC4(v30);
        sub_1A594C330();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }

    (*(void (**)(char *, uint64_t))(v76 + 8))(v78, v75);
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
}

uint64_t sub_1A51473D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _xpc_activity_s *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  _QWORD *v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD v24[2];
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t *v30;
  _QWORD *v31;
  _BYTE **v32;
  uint64_t *v33;
  _QWORD *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t *v38;
  uint32_t v39;
  int v40;
  NSObject *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  void *v45;
  int v46;
  uint32_t *p_cb;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint8_t *v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int v59;
  uint64_t *v60;
  _QWORD *v61;
  _BYTE **v62;
  uint64_t *v63;
  _QWORD *v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t *v68;
  uint32_t v69;
  int v70;
  NSObject *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char *v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _BYTE *v94;
  uint64_t aBlock;
  int v96;
  int v97;
  uint64_t (*v98)(uint64_t);
  void *v99;
  void (*v100)();
  uint64_t v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  uint32_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _BYTE *v109;
  uint64_t v110;
  uint32_t v111;
  uint64_t v112;
  _xpc_activity_s *v113;

  v84 = a1;
  v113 = 0;
  v112 = 0;
  v74 = 0;
  v102 = 0;
  v79 = 0;
  v75 = sub_1A594AD34();
  v76 = *(_QWORD *)(v75 - 8);
  v77 = (*(_QWORD *)(v76 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](0);
  v78 = (char *)v24 - v77;
  v80 = sub_1A594AD70();
  v81 = *(_QWORD *)(v80 - 8);
  v82 = (*(_QWORD *)(v81 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v79);
  v83 = (char *)v24 - v82;
  v85 = sub_1A594A764();
  v86 = *(_QWORD *)(v85 - 8);
  v87 = (*(_QWORD *)(v86 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = MEMORY[0x1E0C80A78](v84);
  v88 = (char *)v24 - v87;
  v89 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = (_xpc_activity_s *)MEMORY[0x1E0C80A78](v2);
  v90 = (char *)v24 - v89;
  v113 = v4;
  v112 = v1;
  if (xpc_activity_set_state(v4, 4))
  {
    v5 = v90;
    v6 = sub_1A51455C0();
    (*(void (**)(char *, uint64_t, uint64_t))(v86 + 16))(v5, v6, v85);
    v71 = sub_1A594A74C();
    v70 = sub_1A594C030();
    v68 = &v104;
    v104 = 2;
    v66 = sub_1A5130F74();
    v67 = sub_1A5130FDC();
    sub_1A5131044();
    sub_1A594B880();
    v69 = v105;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A48D0);
    v72 = sub_1A594CD14();
    if (os_log_type_enabled(v71, (os_log_type_t)v70))
    {
      v7 = v74;
      v56 = (uint8_t *)sub_1A594C348();
      v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
      v55 = 0;
      v57 = sub_1A5130D14(0);
      v58 = sub_1A5130D14(v55);
      v62 = &v94;
      v94 = v56;
      v63 = &v93;
      v93 = v57;
      v60 = &v92;
      v92 = v58;
      v59 = 0;
      sub_1A5130D6C(0, &v94);
      sub_1A5130D6C(v59, v62);
      v91 = v72;
      v61 = v24;
      MEMORY[0x1E0C80A78](v24);
      v8 = v63;
      v9 = &v24[-6];
      v64 = &v24[-6];
      v9[2] = v62;
      v9[3] = v8;
      v9[4] = v10;
      v65 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE799E10);
      sub_1A5131B04();
      sub_1A594B7FC();
      if (v7)
      {
        __break(1u);
      }
      else
      {
        _os_log_impl(&dword_1A4F90000, v71, (os_log_type_t)v70, "Run", v56, v69);
        v53 = 0;
        sub_1A5130DC4(v57);
        sub_1A5130DC4(v58);
        sub_1A594C330();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }

    (*(void (**)(char *, uint64_t))(v86 + 8))(v90, v85);
    v49 = 0;
    _s8ActivityCMa();
    v43 = &v73[OBJC_IVAR___MFBackFillMessageBodyScheduler_nextActivityID];
    v44 = &v103;
    v48 = 32;
    swift_beginAccess();
    v46 = *(unsigned __int16 *)v43;
    swift_endAccess();
    swift_unknownObjectRetain();
    v11 = v73;
    p_cb = &OBJC_PROTOCOL___ECIMAPLocalActionReplayerDelegate.cb;
    v45 = *(void **)&v73[OBJC_IVAR___MFBackFillMessageBodyScheduler_queue];
    v12 = v45;
    v52 = sub_1A51487F8(v46, v84, v73, v45);
    v102 = v52;
    v51 = *(id *)&v73[*((_QWORD *)p_cb + 489)];
    v13 = v51;
    v14 = v73;
    swift_retain();
    v15 = swift_allocObject();
    v16 = v52;
    *(_QWORD *)(v15 + 16) = v73;
    *(_QWORD *)(v15 + 24) = v16;
    v100 = sub_1A5157810;
    v101 = v15;
    aBlock = MEMORY[0x1E0C809B0];
    v96 = 1107296256;
    v97 = 0;
    v98 = sub_1A5113234;
    v99 = &block_descriptor_24;
    v50 = _Block_copy(&aBlock);
    sub_1A511327C();
    sub_1A5113290();
    MEMORY[0x1A85AE508](v49, v83, v78, v50);
    (*(void (**)(char *, uint64_t))(v76 + 8))(v78, v75);
    (*(void (**)(char *, uint64_t))(v81 + 8))(v83, v80);
    _Block_release(v50);
    swift_release();

    swift_release();
    return sub_1A5148740((uint64_t)v73);
  }
  else
  {
    v18 = v88;
    v19 = sub_1A51455C0();
    (*(void (**)(char *, uint64_t, uint64_t))(v86 + 16))(v18, v19, v85);
    v41 = sub_1A594A74C();
    v40 = sub_1A594C018();
    v38 = &v110;
    v110 = 2;
    v36 = sub_1A5130F74();
    v37 = sub_1A5130FDC();
    sub_1A5131044();
    sub_1A594B880();
    v39 = v111;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A48D0);
    v42 = sub_1A594CD14();
    if (os_log_type_enabled(v41, (os_log_type_t)v40))
    {
      v20 = v74;
      v26 = (uint8_t *)sub_1A594C348();
      v24[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
      v25 = 0;
      v27 = sub_1A5130D14(0);
      v28 = sub_1A5130D14(v25);
      v32 = &v109;
      v109 = v26;
      v33 = &v108;
      v108 = v27;
      v30 = &v107;
      v107 = v28;
      v29 = 0;
      sub_1A5130D6C(0, &v109);
      sub_1A5130D6C(v29, v32);
      v106 = v42;
      v31 = v24;
      MEMORY[0x1E0C80A78](v24);
      v21 = v33;
      v22 = &v24[-6];
      v34 = &v24[-6];
      v22[2] = v32;
      v22[3] = v21;
      v22[4] = v23;
      v35 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE799E10);
      sub_1A5131B04();
      sub_1A594B7FC();
      if (v20)
      {
        __break(1u);
      }
      else
      {
        _os_log_impl(&dword_1A4F90000, v41, (os_log_type_t)v40, "Unable to set state to CONTINUE.", v26, v39);
        v24[0] = 0;
        sub_1A5130DC4(v27);
        sub_1A5130DC4(v28);
        sub_1A594C330();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v86 + 8))(v88, v85);
  }
}

uint64_t sub_1A5147EE4(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  v3(a2);
  swift_unknownObjectRelease();
  return swift_release();
}

uint64_t sub_1A5147F44()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t *v20;
  uint64_t *v21;
  _BYTE **v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint32_t v34;
  uint64_t v35;
  int v36;
  NSObject *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  uint32_t v44;
  uint64_t v45;

  v45 = 0;
  v26 = 0;
  v35 = 0;
  v30 = sub_1A594A764();
  v29 = *(_QWORD *)(v30 - 8);
  v27 = (*(_QWORD *)(v29 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v30);
  v0 = (char *)&v9 - v27;
  v28 = (char *)&v9 - v27;
  v45 = v1;
  v2 = sub_1A51455C0();
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v0, v2, v30);
  v37 = sub_1A594A74C();
  v36 = sub_1A594C030();
  v33 = &v43;
  v43 = 2;
  v31 = sub_1A5130F74();
  v32 = sub_1A5130FDC();
  sub_1A5131044();
  sub_1A594B880();
  v34 = v44;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A48D0);
  v38 = sub_1A594CD14();
  if (os_log_type_enabled(v37, (os_log_type_t)v36))
  {
    v3 = v26;
    v16 = (uint8_t *)sub_1A594C348();
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
    v15 = 0;
    v17 = sub_1A5130D14(0);
    v18 = sub_1A5130D14(v15);
    v22 = &v42;
    v42 = v16;
    v23 = &v41;
    v41 = v17;
    v20 = &v40;
    v40 = v18;
    v19 = 0;
    sub_1A5130D6C(0, &v42);
    sub_1A5130D6C(v19, v22);
    v39 = v38;
    v21 = &v9;
    MEMORY[0x1E0C80A78](&v9);
    v4 = v23;
    v5 = &v9 - 6;
    v24 = &v9 - 6;
    v5[2] = (uint64_t)v22;
    v5[3] = (uint64_t)v4;
    v5[4] = v6;
    v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE799E10);
    sub_1A5131B04();
    sub_1A594B7FC();
    if (v3)
    {
      __break(1u);
    }
    else
    {
      _os_log_impl(&dword_1A4F90000, v37, (os_log_type_t)v36, "Un-registering.", v16, v34);
      v13 = 0;
      sub_1A5130DC4(v17);
      sub_1A5130DC4(v18);
      sub_1A594C330();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  (*(void (**)(char *, uint64_t))(v29 + 8))(v28, v30);
  v7 = sub_1A5145660();
  v9 = *v7;
  v12 = v7[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v11 = sub_1A594B4C0();
  swift_retain();
  swift_release();
  swift_retain();
  v10 = (const char *)(v11 + 32);
  swift_bridgeObjectRelease();
  xpc_activity_unregister(v10);
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

xpc_object_t sub_1A5148334()
{
  char *v1;
  char *v2;
  char *v3;
  char *key;
  int64_t *v5;
  xpc_object_t empty;

  empty = xpc_dictionary_create_empty();
  xpc_dictionary_set_BOOL(empty, (const char *)*MEMORY[0x1E0C80898], 1);
  v5 = (int64_t *)MEMORY[0x1E0C807B8];
  xpc_dictionary_set_int64(empty, (const char *)*MEMORY[0x1E0C807A8], *MEMORY[0x1E0C807B8]);
  xpc_dictionary_set_int64(empty, (const char *)*MEMORY[0x1E0C80760], *MEMORY[0x1E0C807D0]);
  xpc_dictionary_set_int64(empty, (const char *)*MEMORY[0x1E0C80790], *v5);
  if (*MEMORY[0x1E0C80788])
  {
    xpc_dictionary_set_int64(empty, (const char *)*MEMORY[0x1E0C80788], *MEMORY[0x1E0C807D0]);
  }
  else
  {
    sub_1A594C9B4();
    __break(1u);
    xpc_dictionary_set_int64(empty, key, *MEMORY[0x1E0C807D0]);
  }
  xpc_dictionary_set_string(empty, (const char *)*MEMORY[0x1E0C80878], (const char *)*MEMORY[0x1E0C80888]);
  xpc_dictionary_set_BOOL(empty, (const char *)*MEMORY[0x1E0C80738], 0);
  if (*MEMORY[0x1E0C808C8])
  {
    xpc_dictionary_set_BOOL(empty, (const char *)*MEMORY[0x1E0C808C8], 1);
  }
  else
  {
    sub_1A594C9B4();
    __break(1u);
    xpc_dictionary_set_BOOL(empty, v3, 1);
  }
  if (*MEMORY[0x1E0C80818])
  {
    xpc_dictionary_set_int64(empty, (const char *)*MEMORY[0x1E0C80818], 104857600);
  }
  else
  {
    sub_1A594C9B4();
    __break(1u);
    xpc_dictionary_set_int64(empty, v2, 104857600);
  }
  if (*MEMORY[0x1E0C80858])
  {
    xpc_dictionary_set_int64(empty, (const char *)*MEMORY[0x1E0C80858], 0x100000);
  }
  else
  {
    sub_1A594C9B4();
    __break(1u);
    xpc_dictionary_set_int64(empty, v1, 0x100000);
  }
  return empty;
}

uint64_t sub_1A5148678()
{
  return sub_1A514868C();
}

uint64_t sub_1A514868C()
{
  uint64_t v1;
  void *v3;

  v3 = (void *)xpc_copy_clean_description();
  if (!v3)
    return sub_1A594B568();
  v1 = sub_1A594B610();
  sub_1A51564CC(v3);
  return v1;
}

uint64_t sub_1A5148740(uint64_t a1)
{
  __int16 v1;
  _WORD *v4;
  __int16 v5;

  swift_beginAccess();
  swift_endAccess();
  sub_1A51502EC();
  v5 = v1;
  v4 = (_WORD *)(a1 + OBJC_IVAR___MFBackFillMessageBodyScheduler_nextActivityID);
  swift_beginAccess();
  *v4 = v5;
  return swift_endAccess();
}

uint64_t sub_1A51487F8(__int16 a1, uint64_t a2, void *a3, void *a4)
{
  swift_allocObject();
  return sub_1A514EB8C(a1, a2, a3, a4);
}

void sub_1A5148858(uint64_t a1, uint64_t a2)
{
  sub_1A514889C(a2);
}

void sub_1A514889C(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  char *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[5];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE **v40;
  uint64_t *v41;
  uint64_t *v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t *v46;
  uint32_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  NSObject *v64;
  int v65;
  char *v66;
  char *v67;
  _BOOL4 v68;
  _BOOL4 v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  uint64_t v80;
  unint64_t v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  int v86;
  char v87;
  uint64_t (*v88)(uint64_t, uint64_t, uint64_t);
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _BYTE *v92;
  uint64_t v93;
  uint32_t v94;
  uint64_t v95;
  char v96;
  char *v97;
  uint64_t v98;

  v80 = a1;
  v98 = 0;
  v97 = 0;
  v74 = 0;
  v75 = 0;
  v76 = sub_1A594A764();
  v77 = *(_QWORD *)(v76 - 8);
  v78 = (*(_QWORD *)(v77 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](0);
  v79 = (char *)v33 - v78;
  v84 = sub_1A594AED8();
  v83 = *(_QWORD *)(v84 - 8);
  v81 = (*(_QWORD *)(v83 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = MEMORY[0x1E0C80A78](v80);
  v85 = (_QWORD *)((char *)v33 - v81);
  v98 = v2;
  v97 = v1;
  v3 = v1;
  v82 = *(id *)&v1[OBJC_IVAR___MFBackFillMessageBodyScheduler_queue];
  v4 = v82;
  v5 = v83;
  *v85 = v82;
  (*(void (**)(void))(v5 + 104))();
  v86 = sub_1A594AEF0();
  (*(void (**)(_QWORD *, uint64_t))(v83 + 8))(v85, v84);
  if ((v86 & 1) != 0)
  {

    v70 = &v73[OBJC_IVAR___MFBackFillMessageBodyScheduler_activity];
    v71 = &v96;
    swift_beginAccess();
    v72 = *(_QWORD *)v70;
    swift_retain();
    swift_endAccess();
    v95 = v72;
    v69 = v72 == 0;
    v68 = v69;
    sub_1A5139FB0();
    if (v68)
    {
      v6 = v80;
      swift_retain();
      v66 = &v73[OBJC_IVAR___MFBackFillMessageBodyScheduler_activity];
      v67 = &v87;
      swift_beginAccess();
      *(_QWORD *)v66 = v6;
      swift_release();
      swift_endAccess();
      sub_1A514A578();
    }
    else
    {
      v7 = v79;
      v8 = sub_1A51455C0();
      (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v7, v8, v76);
      swift_retain();
      v9 = v73;
      v52 = 7;
      v53 = swift_allocObject();
      *(_QWORD *)(v53 + 16) = v73;
      v64 = sub_1A594A74C();
      v65 = sub_1A594C018();
      v46 = &v93;
      v93 = 10;
      v44 = sub_1A5130F74();
      v45 = sub_1A5130FDC();
      sub_1A5131044();
      sub_1A594B880();
      v47 = v94;
      v49 = 17;
      v55 = swift_allocObject();
      *(_BYTE *)(v55 + 16) = 0;
      v56 = swift_allocObject();
      v50 = 2;
      *(_BYTE *)(v56 + 16) = 2;
      v51 = 32;
      v10 = swift_allocObject();
      v11 = v80;
      v48 = v10;
      *(_QWORD *)(v10 + 16) = sub_1A5157878;
      *(_QWORD *)(v10 + 24) = v11;
      v12 = swift_allocObject();
      v13 = v48;
      v57 = v12;
      *(_QWORD *)(v12 + 16) = sub_1A5157984;
      *(_QWORD *)(v12 + 24) = v13;
      v58 = swift_allocObject();
      *(_BYTE *)(v58 + 16) = 0;
      v59 = swift_allocObject();
      *(_BYTE *)(v59 + 16) = v50;
      v14 = swift_allocObject();
      v15 = v53;
      v54 = v14;
      *(_QWORD *)(v14 + 16) = sub_1A51578BC;
      *(_QWORD *)(v14 + 24) = v15;
      v16 = swift_allocObject();
      v17 = v54;
      v61 = v16;
      *(_QWORD *)(v16 + 16) = sub_1A5157984;
      *(_QWORD *)(v16 + 24) = v17;
      v63 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A48D0);
      v60 = sub_1A594CD14();
      v62 = v18;
      swift_retain();
      v19 = v55;
      v20 = v62;
      *v62 = sub_1A5131290;
      v20[1] = v19;
      swift_retain();
      v21 = v56;
      v22 = v62;
      v62[2] = sub_1A5131290;
      v22[3] = v21;
      swift_retain();
      v23 = v57;
      v24 = v62;
      v62[4] = sub_1A51579CC;
      v24[5] = v23;
      swift_retain();
      v25 = v58;
      v26 = v62;
      v62[6] = sub_1A5131290;
      v26[7] = v25;
      swift_retain();
      v27 = v59;
      v28 = v62;
      v62[8] = sub_1A5131290;
      v28[9] = v27;
      swift_retain();
      v29 = v61;
      v30 = v62;
      v62[10] = sub_1A51579CC;
      v30[11] = v29;
      sub_1A5113324();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v64, (os_log_type_t)v65))
      {
        v31 = v74;
        v37 = (uint8_t *)sub_1A594C348();
        v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
        v36 = 0;
        v38 = sub_1A5130D14(0);
        v39 = sub_1A5130D14(v36);
        v40 = &v92;
        v92 = v37;
        v41 = &v91;
        v91 = v38;
        v42 = &v90;
        v90 = v39;
        sub_1A5130D6C(0, &v92);
        sub_1A5130D6C(2, v40);
        v88 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v89 = v55;
        sub_1A5130D80(&v88, (uint64_t)v40, (uint64_t)v41, (uint64_t)v42);
        v43 = v31;
        if (v31)
        {
          __break(1u);
        }
        else
        {
          v88 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v89 = v56;
          sub_1A5130D80(&v88, (uint64_t)&v92, (uint64_t)&v91, (uint64_t)&v90);
          v34 = 0;
          v32 = v34;
          v88 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A51579CC;
          v89 = v57;
          sub_1A5130D80(&v88, (uint64_t)&v92, (uint64_t)&v91, (uint64_t)&v90);
          v33[4] = v32;
          v88 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v89 = v58;
          sub_1A5130D80(&v88, (uint64_t)&v92, (uint64_t)&v91, (uint64_t)&v90);
          v33[3] = 0;
          v88 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v89 = v59;
          sub_1A5130D80(&v88, (uint64_t)&v92, (uint64_t)&v91, (uint64_t)&v90);
          v33[2] = 0;
          v88 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A51579CC;
          v89 = v61;
          sub_1A5130D80(&v88, (uint64_t)&v92, (uint64_t)&v91, (uint64_t)&v90);
          _os_log_impl(&dword_1A4F90000, v64, (os_log_type_t)v65, "Received new activity '%hx', but already have an existing one %hx.", v37, v47);
          v33[1] = 0;
          sub_1A5130DC4(v38);
          sub_1A5130DC4(v39);
          sub_1A594C330();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
        }
      }
      else
      {
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
      }

      (*(void (**)(char *, uint64_t))(v77 + 8))(v79, v76);
      sub_1A51494E4(3u);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1A51493D0(uint64_t a1)
{
  return *(unsigned __int16 *)(a1
                             + OBJC_IVAR____TtCE7MessageCSo30MFBackFillMessageBodySchedulerP33_8C94728D29B9D9CACC7F5FFB5564322B8Activity_id);
}

uint64_t sub_1A51493E0(uint64_t a1)
{
  unsigned int v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  v4 = (uint64_t *)(a1 + OBJC_IVAR___MFBackFillMessageBodyScheduler_activity);
  swift_beginAccess();
  v5 = *v4;
  swift_retain();
  swift_endAccess();
  if (v5)
  {
    v3 = v5;
  }
  else
  {
    sub_1A594C9B4();
    __break(1u);
  }
  v2 = *(unsigned __int16 *)(v3
                           + OBJC_IVAR____TtCE7MessageCSo30MFBackFillMessageBodySchedulerP33_8C94728D29B9D9CACC7F5FFB5564322B8Activity_id);
  swift_release();
  return v2;
}

void sub_1A51494E4(unsigned int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  id v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  id *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint8_t *v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int v69;
  _BYTE **v70;
  uint64_t *v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t *v77;
  uint32_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  NSObject *v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint8_t *v101;
  uint64_t v102;
  uint64_t v103;
  unsigned int v104;
  _BYTE **v105;
  uint64_t *v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  uint64_t *v112;
  uint32_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  NSObject *v129;
  int v130;
  char *v131;
  uint64_t v132;
  int v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  char *v137;
  int v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  char *v145;
  unint64_t v146;
  char *v147;
  unsigned int v148;
  unint64_t v149;
  id v150;
  uint64_t v151;
  uint64_t v152;
  _QWORD *v153;
  int v154;
  uint64_t (*v155)(uint64_t, uint64_t, uint64_t);
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  _BYTE *v159;
  uint64_t v160;
  uint32_t v161;
  uint64_t (*v162)(uint64_t, uint64_t, uint64_t);
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  _BYTE *v166;
  id v167;
  uint64_t v168;
  uint32_t v169;
  char v170;
  char v171;
  char v172;
  uint64_t v173;
  char v174;

  v148 = a1;
  v174 = 0;
  v173 = 0;
  v140 = 0;
  v141 = 0;
  v142 = sub_1A594A764();
  v143 = *(_QWORD *)(v142 - 8);
  v144 = (*(_QWORD *)(v143 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = MEMORY[0x1E0C80A78](0);
  v145 = (char *)&v58 - v144;
  v146 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v2);
  v147 = (char *)&v58 - v146;
  v152 = sub_1A594AED8();
  v151 = *(_QWORD *)(v152 - 8);
  v149 = (*(_QWORD *)(v151 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = MEMORY[0x1E0C80A78](v148);
  v153 = (id **)((char *)&v58 - v149);
  v174 = v4;
  v173 = v1;
  swift_retain();
  v150 = *(id *)(v1
               + OBJC_IVAR____TtCE7MessageCSo30MFBackFillMessageBodySchedulerP33_8C94728D29B9D9CACC7F5FFB5564322B8Activity_queue);
  v5 = v150;
  v6 = v151;
  *v153 = v150;
  (*(void (**)(void))(v6 + 104))();
  v154 = sub_1A594AEF0();
  (*(void (**)(_QWORD *, uint64_t))(v151 + 8))(v153, v152);
  if ((v154 & 1) != 0)
  {
    swift_release();
    v137 = &v172;
    swift_beginAccess();
    v138 = *(unsigned __int8 *)(v139 + 48);
    swift_endAccess();
    if ((v138 & 1) == 0)
    {
      v135 = &v171;
      v136 = 0;
      swift_beginAccess();
      *(_BYTE *)(v139 + 48) = 1;
      swift_endAccess();
      swift_beginAccess();
      if (*(_QWORD *)(v139 + 40))
      {
        v134 = *(_QWORD *)(v139 + 40);
        swift_unknownObjectRetain();
        swift_endAccess();
        swift_getObjectType();
        sub_1A594C114();
        swift_unknownObjectRelease();
      }
      else
      {
        swift_endAccess();
      }
      v131 = &v170;
      swift_beginAccess();
      *(_QWORD *)(v139 + 40) = 0;
      swift_unknownObjectRelease();
      swift_endAccess();
      v132 = *(_QWORD *)(v139 + 24);
      swift_unknownObjectRetain();
      sub_1A5150318(v148);
      v133 = xpc_activity_set_completion_status();
      swift_unknownObjectRelease();
      if ((v133 & 1) != 0)
      {
        v32 = v145;
        v33 = sub_1A51455C0();
        (*(void (**)(char *, uint64_t, uint64_t))(v143 + 16))(v32, v33, v142);
        swift_retain();
        v74 = 16;
        v80 = 17;
        v82 = 7;
        v83 = swift_allocObject();
        *(_BYTE *)(v83 + 16) = v148;
        v94 = sub_1A594A74C();
        v95 = sub_1A594C030();
        v77 = &v168;
        v168 = v74;
        v75 = sub_1A5130F74();
        v76 = sub_1A5130FDC();
        sub_1A5131044();
        sub_1A594B880();
        v78 = v169;
        v85 = swift_allocObject();
        *(_BYTE *)(v85 + 16) = 0;
        v86 = swift_allocObject();
        *(_BYTE *)(v86 + 16) = 2;
        v81 = 32;
        v34 = swift_allocObject();
        v35 = v139;
        v79 = v34;
        *(_QWORD *)(v34 + 16) = sub_1A5157878;
        *(_QWORD *)(v34 + 24) = v35;
        v36 = swift_allocObject();
        v37 = v79;
        v87 = v36;
        *(_QWORD *)(v36 + 16) = sub_1A5157984;
        *(_QWORD *)(v36 + 24) = v37;
        v88 = swift_allocObject();
        *(_BYTE *)(v88 + 16) = 34;
        v89 = swift_allocObject();
        *(_BYTE *)(v89 + 16) = 8;
        v38 = swift_allocObject();
        v39 = v83;
        v84 = v38;
        *(_QWORD *)(v38 + 16) = sub_1A5157B84;
        *(_QWORD *)(v38 + 24) = v39;
        v40 = swift_allocObject();
        v41 = v84;
        v91 = v40;
        *(_QWORD *)(v40 + 16) = sub_1A5130F5C;
        *(_QWORD *)(v40 + 24) = v41;
        v93 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A48D0);
        v90 = sub_1A594CD14();
        v92 = v42;
        swift_retain();
        v43 = v85;
        v44 = v92;
        *v92 = sub_1A5131290;
        v44[1] = v43;
        swift_retain();
        v45 = v86;
        v46 = v92;
        v92[2] = sub_1A5131290;
        v46[3] = v45;
        swift_retain();
        v47 = v87;
        v48 = v92;
        v92[4] = sub_1A51579CC;
        v48[5] = v47;
        swift_retain();
        v49 = v88;
        v50 = v92;
        v92[6] = sub_1A5131290;
        v50[7] = v49;
        swift_retain();
        v51 = v89;
        v52 = v92;
        v92[8] = sub_1A5131290;
        v52[9] = v51;
        swift_retain();
        v53 = v91;
        v54 = v92;
        v92[10] = sub_1A5133578;
        v54[11] = v53;
        sub_1A5113324();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v94, (os_log_type_t)v95))
        {
          v55 = v140;
          v66 = (uint8_t *)sub_1A594C348();
          v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
          v67 = sub_1A5130D14(0);
          v68 = sub_1A5130D14(1);
          v70 = &v166;
          v166 = v66;
          v71 = &v165;
          v165 = v67;
          v72 = &v164;
          v164 = v68;
          v69 = 2;
          sub_1A5130D6C(2, &v166);
          sub_1A5130D6C(v69, v70);
          v162 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v163 = v85;
          sub_1A5130D80(&v162, (uint64_t)v70, (uint64_t)v71, (uint64_t)v72);
          v73 = v55;
          if (v55)
          {
            __break(1u);
          }
          else
          {
            v162 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v163 = v86;
            sub_1A5130D80(&v162, (uint64_t)&v166, (uint64_t)&v165, (uint64_t)&v164);
            v64 = 0;
            v56 = v64;
            v162 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A51579CC;
            v163 = v87;
            sub_1A5130D80(&v162, (uint64_t)&v166, (uint64_t)&v165, (uint64_t)&v164);
            v63 = v56;
            v162 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v163 = v88;
            sub_1A5130D80(&v162, (uint64_t)&v166, (uint64_t)&v165, (uint64_t)&v164);
            v62 = 0;
            v162 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v163 = v89;
            sub_1A5130D80(&v162, (uint64_t)&v166, (uint64_t)&v165, (uint64_t)&v164);
            v61 = 0;
            v162 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5133578;
            v163 = v91;
            sub_1A5130D80(&v162, (uint64_t)&v166, (uint64_t)&v165, (uint64_t)&v164);
            _os_log_impl(&dword_1A4F90000, v94, (os_log_type_t)v95, "%hx: Completed with status: %{public}s", v66, v78);
            sub_1A5130DC4(v67);
            sub_1A5130DC4(v68);
            sub_1A594C330();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
          }
        }
        else
        {
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
        }

        (*(void (**)(char *, uint64_t))(v143 + 8))(v145, v142);
      }
      else
      {
        v7 = v147;
        v8 = sub_1A51455C0();
        (*(void (**)(char *, uint64_t, uint64_t))(v143 + 16))(v7, v8, v142);
        swift_retain();
        v109 = 16;
        v115 = 17;
        v117 = 7;
        v118 = swift_allocObject();
        *(_BYTE *)(v118 + 16) = v148;
        v129 = sub_1A594A74C();
        v130 = sub_1A594C018();
        v112 = &v160;
        v160 = v109;
        v110 = sub_1A5130F74();
        v111 = sub_1A5130FDC();
        sub_1A5131044();
        sub_1A594B880();
        v113 = v161;
        v120 = swift_allocObject();
        *(_BYTE *)(v120 + 16) = 0;
        v121 = swift_allocObject();
        *(_BYTE *)(v121 + 16) = 2;
        v116 = 32;
        v9 = swift_allocObject();
        v10 = v139;
        v114 = v9;
        *(_QWORD *)(v9 + 16) = sub_1A5157878;
        *(_QWORD *)(v9 + 24) = v10;
        v11 = swift_allocObject();
        v12 = v114;
        v122 = v11;
        *(_QWORD *)(v11 + 16) = sub_1A5157984;
        *(_QWORD *)(v11 + 24) = v12;
        v123 = swift_allocObject();
        *(_BYTE *)(v123 + 16) = 34;
        v124 = swift_allocObject();
        *(_BYTE *)(v124 + 16) = 8;
        v13 = swift_allocObject();
        v14 = v118;
        v119 = v13;
        *(_QWORD *)(v13 + 16) = sub_1A5157B84;
        *(_QWORD *)(v13 + 24) = v14;
        v15 = swift_allocObject();
        v16 = v119;
        v126 = v15;
        *(_QWORD *)(v15 + 16) = sub_1A5130F5C;
        *(_QWORD *)(v15 + 24) = v16;
        v128 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A48D0);
        v125 = sub_1A594CD14();
        v127 = v17;
        swift_retain();
        v18 = v120;
        v19 = v127;
        *v127 = sub_1A5131290;
        v19[1] = v18;
        swift_retain();
        v20 = v121;
        v21 = v127;
        v127[2] = sub_1A5131290;
        v21[3] = v20;
        swift_retain();
        v22 = v122;
        v23 = v127;
        v127[4] = sub_1A51579CC;
        v23[5] = v22;
        swift_retain();
        v24 = v123;
        v25 = v127;
        v127[6] = sub_1A5131290;
        v25[7] = v24;
        swift_retain();
        v26 = v124;
        v27 = v127;
        v127[8] = sub_1A5131290;
        v27[9] = v26;
        swift_retain();
        v28 = v126;
        v29 = v127;
        v127[10] = sub_1A5133578;
        v29[11] = v28;
        sub_1A5113324();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v129, (os_log_type_t)v130))
        {
          v30 = v140;
          v101 = (uint8_t *)sub_1A594C348();
          v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
          v102 = sub_1A5130D14(0);
          v103 = sub_1A5130D14(1);
          v105 = &v159;
          v159 = v101;
          v106 = &v158;
          v158 = v102;
          v107 = &v157;
          v157 = v103;
          v104 = 2;
          sub_1A5130D6C(2, &v159);
          sub_1A5130D6C(v104, v105);
          v155 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v156 = v120;
          sub_1A5130D80(&v155, (uint64_t)v105, (uint64_t)v106, (uint64_t)v107);
          v108 = v30;
          if (v30)
          {
            __break(1u);
          }
          else
          {
            v155 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v156 = v121;
            sub_1A5130D80(&v155, (uint64_t)&v159, (uint64_t)&v158, (uint64_t)&v157);
            v99 = 0;
            v31 = v99;
            v155 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A51579CC;
            v156 = v122;
            sub_1A5130D80(&v155, (uint64_t)&v159, (uint64_t)&v158, (uint64_t)&v157);
            v98 = v31;
            v155 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v156 = v123;
            sub_1A5130D80(&v155, (uint64_t)&v159, (uint64_t)&v158, (uint64_t)&v157);
            v97 = 0;
            v155 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v156 = v124;
            sub_1A5130D80(&v155, (uint64_t)&v159, (uint64_t)&v158, (uint64_t)&v157);
            v96 = 0;
            v155 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5133578;
            v156 = v126;
            sub_1A5130D80(&v155, (uint64_t)&v159, (uint64_t)&v158, (uint64_t)&v157);
            _os_log_impl(&dword_1A4F90000, v129, (os_log_type_t)v130, "%hx: Failed to set completion status to %{public}s", v101, v113);
            sub_1A5130DC4(v102);
            sub_1A5130DC4(v103);
            sub_1A594C330();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
          }
        }
        else
        {
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
        }

        (*(void (**)(char *, uint64_t))(v143 + 8))(v147, v142);
      }
      v60 = v139 + 16;
      swift_beginAccess();
      v167 = (id)MEMORY[0x1A85B1A0C](v60);
      if (v167)
      {
        v58 = &v167;
        v59 = v167;
        v57 = v167;
        sub_1A5138D80(v58);
        swift_endAccess();
        sub_1A514AAC4(v139);

      }
      else
      {
        sub_1A5138D80(&v167);
        swift_endAccess();
      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1A514A578()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD v16[4];
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE **v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint32_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  NSObject *v45;
  int v46;
  uint64_t (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  uint64_t v52;
  uint32_t v53;
  uint64_t v54;

  v54 = 0;
  v25 = 0;
  v29 = sub_1A594A764();
  v28 = *(_QWORD *)(v29 - 8);
  v26 = (*(_QWORD *)(v28 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v29);
  v0 = (char *)v16 - v26;
  v27 = (char *)v16 - v26;
  v54 = v1;
  v2 = sub_1A51455C0();
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v0, v2, v29);
  swift_retain();
  v45 = sub_1A594A74C();
  v46 = sub_1A594C018();
  v32 = &v52;
  v52 = 6;
  v30 = sub_1A5130F74();
  v31 = sub_1A5130FDC();
  sub_1A5131044();
  sub_1A594B880();
  v3 = v33;
  v34 = v53;
  v35 = 17;
  v37 = 7;
  v39 = swift_allocObject();
  *(_BYTE *)(v39 + 16) = 0;
  v40 = swift_allocObject();
  *(_BYTE *)(v40 + 16) = 2;
  v36 = 32;
  v4 = swift_allocObject();
  v38 = v4;
  *(_QWORD *)(v4 + 16) = sub_1A5157878;
  *(_QWORD *)(v4 + 24) = v3;
  v5 = swift_allocObject();
  v6 = v38;
  v42 = v5;
  *(_QWORD *)(v5 + 16) = sub_1A5157984;
  *(_QWORD *)(v5 + 24) = v6;
  v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A48D0);
  v41 = sub_1A594CD14();
  v43 = v7;
  swift_retain();
  v8 = v39;
  v9 = v43;
  *v43 = sub_1A5131290;
  v9[1] = v8;
  swift_retain();
  v10 = v40;
  v11 = v43;
  v43[2] = sub_1A5131290;
  v11[3] = v10;
  swift_retain();
  v12 = v42;
  v13 = v43;
  v43[4] = sub_1A51579CC;
  v13[5] = v12;
  sub_1A5113324();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(v45, (os_log_type_t)v46))
  {
    v14 = v25;
    v18 = (uint8_t *)sub_1A594C348();
    v16[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
    v17 = 0;
    v19 = sub_1A5130D14(0);
    v20 = sub_1A5130D14(v17);
    v21 = &v51;
    v51 = v18;
    v22 = &v50;
    v50 = v19;
    v23 = &v49;
    v49 = v20;
    sub_1A5130D6C(0, &v51);
    sub_1A5130D6C(1, v21);
    v47 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
    v48 = v39;
    sub_1A5130D80(&v47, (uint64_t)v21, (uint64_t)v22, (uint64_t)v23);
    v24 = v14;
    if (v14)
    {
      __break(1u);
    }
    else
    {
      v47 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
      v48 = v40;
      sub_1A5130D80(&v47, (uint64_t)&v51, (uint64_t)&v50, (uint64_t)&v49);
      v16[1] = 0;
      v47 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A51579CC;
      v48 = v42;
      sub_1A5130D80(&v47, (uint64_t)&v51, (uint64_t)&v50, (uint64_t)&v49);
      _os_log_impl(&dword_1A4F90000, v45, (os_log_type_t)v46, "%hx: Running.", v18, v34);
      v16[0] = 0;
      sub_1A5130DC4(v19);
      sub_1A5130DC4(v20);
      sub_1A594C330();
      swift_release();
      swift_release();
      swift_release();
    }
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
  }

  (*(void (**)(char *, uint64_t))(v28 + 8))(v27, v29);
  sub_1A514EE08();
  return sub_1A514FB18();
}

uint64_t sub_1A514AAC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD v34[3];
  uint64_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE **v39;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t *v45;
  uint32_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  NSObject *v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint8_t *v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE **v66;
  uint64_t *v67;
  uint64_t *v68;
  uint64_t v69;
  _QWORD *v70;
  char *v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t *v74;
  uint32_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  NSObject *v86;
  int v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  char *v99;
  unint64_t v100;
  char *v101;
  uint64_t *v102;
  char *v103;
  uint64_t v104;
  uint64_t (*v105)(uint64_t, uint64_t, uint64_t);
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _BYTE *v109;
  uint64_t v110;
  uint32_t v111;
  char v112;
  uint64_t (*v113)(uint64_t, uint64_t, uint64_t);
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _BYTE *v117;
  uint64_t v118;
  uint32_t v119;
  char v120;
  uint64_t v121;
  uint64_t v122;

  v95 = a1;
  v122 = 0;
  v121 = 0;
  v94 = 0;
  v93 = 0;
  v96 = sub_1A594A764();
  v97 = *(_QWORD *)(v96 - 8);
  v98 = (*(_QWORD *)(v97 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = MEMORY[0x1E0C80A78](v95);
  v99 = (char *)v34 - v98;
  v100 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = MEMORY[0x1E0C80A78](v2);
  v101 = (char *)v34 - v100;
  v122 = v4;
  v121 = v1;
  v102 = (uint64_t *)(v1 + OBJC_IVAR___MFBackFillMessageBodyScheduler_activity);
  v103 = &v120;
  swift_beginAccess();
  v104 = *v102;
  swift_retain();
  swift_endAccess();
  if (v104)
  {
    v91 = v104;
    v90 = v104;
  }
  else
  {
    v90 = 0;
  }
  v88 = v90;
  swift_retain();
  v89 = sub_1A594CDBC();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  if ((v89 & 1) != 0)
  {
    v5 = v101;
    v70 = (_QWORD *)(v92 + OBJC_IVAR___MFBackFillMessageBodyScheduler_activity);
    v71 = &v112;
    swift_beginAccess();
    *v70 = 0;
    swift_release();
    swift_endAccess();
    v6 = sub_1A51455C0();
    (*(void (**)(char *, uint64_t, uint64_t))(v97 + 16))(v5, v6, v96);
    swift_retain();
    v86 = sub_1A594A74C();
    v87 = sub_1A594C030();
    v74 = &v110;
    v110 = 6;
    v72 = sub_1A5130F74();
    v73 = sub_1A5130FDC();
    sub_1A5131044();
    sub_1A594B880();
    v75 = v111;
    v76 = 17;
    v78 = 7;
    v80 = swift_allocObject();
    *(_BYTE *)(v80 + 16) = 0;
    v81 = swift_allocObject();
    *(_BYTE *)(v81 + 16) = 2;
    v77 = 32;
    v7 = swift_allocObject();
    v8 = v95;
    v79 = v7;
    *(_QWORD *)(v7 + 16) = sub_1A5157878;
    *(_QWORD *)(v7 + 24) = v8;
    v9 = swift_allocObject();
    v10 = v79;
    v83 = v9;
    *(_QWORD *)(v9 + 16) = sub_1A5157984;
    *(_QWORD *)(v9 + 24) = v10;
    v85 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A48D0);
    v82 = sub_1A594CD14();
    v84 = v11;
    swift_retain();
    v12 = v80;
    v13 = v84;
    *v84 = sub_1A5131290;
    v13[1] = v12;
    swift_retain();
    v14 = v81;
    v15 = v84;
    v84[2] = sub_1A5131290;
    v15[3] = v14;
    swift_retain();
    v16 = v83;
    v17 = v84;
    v84[4] = sub_1A51579CC;
    v17[5] = v16;
    sub_1A5113324();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v86, (os_log_type_t)v87))
    {
      v18 = v93;
      v63 = (uint8_t *)sub_1A594C348();
      v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
      v62 = 0;
      v64 = sub_1A5130D14(0);
      v65 = sub_1A5130D14(v62);
      v66 = &v109;
      v109 = v63;
      v67 = &v108;
      v108 = v64;
      v68 = &v107;
      v107 = v65;
      sub_1A5130D6C(0, &v109);
      sub_1A5130D6C(1, v66);
      v105 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
      v106 = v80;
      sub_1A5130D80(&v105, (uint64_t)v66, (uint64_t)v67, (uint64_t)v68);
      v69 = v18;
      if (v18)
      {
        __break(1u);
      }
      else
      {
        v105 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v106 = v81;
        sub_1A5130D80(&v105, (uint64_t)&v109, (uint64_t)&v108, (uint64_t)&v107);
        v60 = 0;
        v105 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A51579CC;
        v106 = v83;
        sub_1A5130D80(&v105, (uint64_t)&v109, (uint64_t)&v108, (uint64_t)&v107);
        _os_log_impl(&dword_1A4F90000, v86, (os_log_type_t)v87, "Activity '%hx' did complete.", v63, v75);
        v59 = 0;
        sub_1A5130DC4(v64);
        sub_1A5130DC4(v65);
        sub_1A594C330();
        swift_release();
        swift_release();
        swift_release();
      }
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v97 + 8))(v101, v96);
  }
  else
  {
    v20 = v99;
    v21 = sub_1A51455C0();
    (*(void (**)(char *, uint64_t, uint64_t))(v97 + 16))(v20, v21, v96);
    swift_retain();
    v57 = sub_1A594A74C();
    v58 = sub_1A594C018();
    v45 = &v118;
    v118 = 6;
    v43 = sub_1A5130F74();
    v44 = sub_1A5130FDC();
    sub_1A5131044();
    sub_1A594B880();
    v46 = v119;
    v47 = 17;
    v49 = 7;
    v51 = swift_allocObject();
    *(_BYTE *)(v51 + 16) = 0;
    v52 = swift_allocObject();
    *(_BYTE *)(v52 + 16) = 2;
    v48 = 32;
    v22 = swift_allocObject();
    v23 = v95;
    v50 = v22;
    *(_QWORD *)(v22 + 16) = sub_1A5157878;
    *(_QWORD *)(v22 + 24) = v23;
    v24 = swift_allocObject();
    v25 = v50;
    v54 = v24;
    *(_QWORD *)(v24 + 16) = sub_1A5157984;
    *(_QWORD *)(v24 + 24) = v25;
    v56 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A48D0);
    v53 = sub_1A594CD14();
    v55 = v26;
    swift_retain();
    v27 = v51;
    v28 = v55;
    *v55 = sub_1A5131290;
    v28[1] = v27;
    swift_retain();
    v29 = v52;
    v30 = v55;
    v55[2] = sub_1A5131290;
    v30[3] = v29;
    swift_retain();
    v31 = v54;
    v32 = v55;
    v55[4] = sub_1A51579CC;
    v32[5] = v31;
    sub_1A5113324();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v57, (os_log_type_t)v58))
    {
      v33 = v93;
      v36 = (uint8_t *)sub_1A594C348();
      v34[2] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
      v35 = 0;
      v37 = sub_1A5130D14(0);
      v38 = sub_1A5130D14(v35);
      v39 = &v117;
      v117 = v36;
      v40 = &v116;
      v116 = v37;
      v41 = &v115;
      v115 = v38;
      sub_1A5130D6C(0, &v117);
      sub_1A5130D6C(1, v39);
      v113 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
      v114 = v51;
      sub_1A5130D80(&v113, (uint64_t)v39, (uint64_t)v40, (uint64_t)v41);
      v42 = v33;
      if (v33)
      {
        __break(1u);
      }
      else
      {
        v113 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v114 = v52;
        sub_1A5130D80(&v113, (uint64_t)&v117, (uint64_t)&v116, (uint64_t)&v115);
        v34[1] = 0;
        v113 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A51579CC;
        v114 = v54;
        sub_1A5130D80(&v113, (uint64_t)&v117, (uint64_t)&v116, (uint64_t)&v115);
        _os_log_impl(&dword_1A4F90000, v57, (os_log_type_t)v58, "Activity '%hx' did complete, but we no longer have a reference to it.", v36, v46);
        v34[0] = 0;
        sub_1A5130DC4(v37);
        sub_1A5130DC4(v38);
        sub_1A594C330();
        swift_release();
        swift_release();
        swift_release();
      }
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v97 + 8))(v99, v96);
  }
}

uint64_t sub_1A514B824()
{
  uint64_t v0;
  uint64_t v3;
  unsigned __int8 v4;

  sub_1A594CD14();
  *(_QWORD *)v0 = "complete";
  *(_QWORD *)(v0 + 8) = 8;
  *(_BYTE *)(v0 + 16) = 2;
  *(_QWORD *)(v0 + 24) = "pendingWork";
  *(_QWORD *)(v0 + 32) = 11;
  *(_BYTE *)(v0 + 40) = 2;
  *(_QWORD *)(v0 + 48) = "noWork";
  *(_QWORD *)(v0 + 56) = 6;
  *(_BYTE *)(v0 + 64) = 2;
  *(_QWORD *)(v0 + 72) = "error";
  *(_QWORD *)(v0 + 80) = 5;
  *(_BYTE *)(v0 + 88) = 2;
  *(_QWORD *)(v0 + 96) = "deallocated";
  *(_QWORD *)(v0 + 104) = 11;
  *(_BYTE *)(v0 + 112) = 2;
  sub_1A5113324();
  v3 = sub_1A594CB28();
  swift_bridgeObjectRelease();
  switch(v3)
  {
    case 0:
      v4 = 0;
LABEL_12:
      swift_bridgeObjectRelease();
      return v4;
    case 1:
      v4 = 1;
      goto LABEL_12;
    case 2:
      v4 = 2;
      goto LABEL_12;
    case 3:
      v4 = 3;
      goto LABEL_12;
    case 4:
      v4 = 4;
      goto LABEL_12;
  }
  swift_bridgeObjectRelease();
  return 5;
}

void sub_1A514BA24(char a1)
{
  __asm { BR              X8 }
}

uint64_t sub_1A514BA64()
{
  return sub_1A594B568();
}

uint64_t sub_1A514BB54()
{
  sub_1A515812C();
  return sub_1A594CD74() & 1;
}

uint64_t sub_1A514BB9C()
{
  sub_1A515812C();
  return sub_1A594B8F8();
}

uint64_t sub_1A514BBD8()
{
  sub_1A515812C();
  return sub_1A594B910();
}

uint64_t sub_1A514BC1C()
{
  sub_1A515812C();
  return sub_1A594B904();
}

uint64_t sub_1A514BC60@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A514B824();
  *a1 = result;
  return result;
}

void sub_1A514BC94(_QWORD *a1@<X8>)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;

  sub_1A514BA24(*v1);
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1A514BCC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v9 = a1;
  v8 = a2;
  v11 = a2;
  v7 = *(_QWORD *)(a2 - 8);
  v5 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](a1);
  v6 = (uint64_t)&v4 - v5;
  (*(void (**)(void))(v2 + 16))();
  v10 = sub_1A5343670(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v9, v8);
  return v10;
}

void sub_1A514BD64()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtCE7MessageCSo30MFBackFillMessageBodyScheduler7Request__deferred);
  swift_retain();
  sub_1A514BE24((void (*)(uint64_t))sub_1A514BE00, 0, v1, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0DEAFA0]);
  swift_release();
}

_BYTE *sub_1A514BE00@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_1A514BE24(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1A53481AC(a1, a2, a3, a4, a5);
}

void sub_1A514BE88(char a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v4[32];
  uint64_t v5;
  char v6;

  v6 = a1 & 1;
  v5 = v1;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtCE7MessageCSo30MFBackFillMessageBodyScheduler7Request__deferred);
  swift_retain();
  v4[16] = a1 & 1;
  sub_1A514BE24((void (*)(uint64_t))sub_1A5158198, (uint64_t)v4, v3, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0DEE9C0] + 8);
  swift_release();
}

_BYTE *sub_1A514BF4C(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

id sub_1A514BF80(uint64_t a1, __int16 a2)
{
  objc_class *v2;
  id v3;

  v3 = objc_allocWithZone(v2);
  return sub_1A514BFC0(a1, a2);
}

id sub_1A514BFC0(uint64_t a1, __int16 a2)
{
  char *v2;
  char *v3;
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  id v8;
  uint64_t v10;
  char *v12;
  objc_class *ObjectType;
  id v15;
  objc_super v16;
  char v17;
  __int16 v18;
  uint64_t v19;
  id v20;

  ObjectType = (objc_class *)swift_getObjectType();
  v19 = a1;
  v18 = a2;
  v3 = v2;
  v4 = v2;
  v5 = v2;
  v6 = v2;
  v7 = v2;
  v20 = v2;
  swift_weakInit();

  v10 = OBJC_IVAR____TtCE7MessageCSo30MFBackFillMessageBodyScheduler7Request__deferred;
  v17 = 0;
  *(_QWORD *)&v2[v10] = sub_1A514BCC4((uint64_t)&v17, MEMORY[0x1E0DEAFA0]);

  swift_retain();
  swift_beginAccess();
  swift_weakAssign();
  swift_release();
  swift_endAccess();

  *(_WORD *)&v12[OBJC_IVAR____TtCE7MessageCSo30MFBackFillMessageBodyScheduler7Request_activityID] = *(_WORD *)(a1 + OBJC_IVAR____TtCE7MessageCSo30MFBackFillMessageBodySchedulerP33_8C94728D29B9D9CACC7F5FFB5564322B8Activity_id);
  *(_WORD *)&v12[OBJC_IVAR____TtCE7MessageCSo30MFBackFillMessageBodyScheduler7Request_id] = a2;

  v16.receiver = v20;
  v16.super_class = ObjectType;
  v15 = objc_msgSendSuper2(&v16, sel_init);
  v8 = v15;
  v20 = v15;
  swift_release();

  return v15;
}

uint64_t sub_1A514C1CC()
{
  uint64_t v0;

  return *(unsigned __int16 *)(v0 + OBJC_IVAR____TtCE7MessageCSo30MFBackFillMessageBodyScheduler7Request_id);
}

BOOL sub_1A514C244()
{
  char v0;
  id v1;
  uint64_t Strong;
  BOOL v4;
  id v5;
  char v6;

  sub_1A514BD64();
  v6 = v0;
  v1 = v5;
  if ((v6 & 1) != 0)
  {
    v4 = 1;
  }
  else
  {
    swift_beginAccess();
    Strong = swift_weakLoadStrong();
    swift_endAccess();
    sub_1A5139FB0();
    v4 = Strong == 0;
  }

  return v4;
}

void sub_1A514C340()
{
  sub_1A514BE88(1);
}

id sub_1A514C370()
{
  uint64_t v0;
  id v1;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  objc_super v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t Strong;
  uint64_t aBlock;
  int v22;
  int v23;
  uint64_t (*v24)(uint64_t);
  void *v25;
  void (*v26)();
  uint64_t v27;
  uint64_t v28;
  objc_super v29;
  char v30;
  uint64_t v31;

  v8.super_class = (Class)swift_getObjectType();
  v31 = 0;
  v28 = 0;
  v9 = 0;
  v10 = sub_1A594AD34();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](0);
  v13 = (char *)&v3 - v12;
  v14 = sub_1A594AD70();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = (*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v3 - v16;
  v31 = v0;
  v18 = v0 + OBJC_IVAR____TtCE7MessageCSo30MFBackFillMessageBodyScheduler7Request_activity;
  v19 = &v30;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  swift_endAccess();
  if (Strong)
  {
    v7 = Strong;
    v6 = Strong;
    v28 = Strong;
    v5 = *(id *)(Strong
               + OBJC_IVAR____TtCE7MessageCSo30MFBackFillMessageBodySchedulerP33_8C94728D29B9D9CACC7F5FFB5564322B8Activity_queue);
    v1 = v5;
    swift_retain();
    v26 = sub_1A51581C0;
    v27 = v6;
    aBlock = MEMORY[0x1E0C809B0];
    v22 = 1107296256;
    v23 = 0;
    v24 = sub_1A5113234;
    v25 = &block_descriptor_180;
    v4 = _Block_copy(&aBlock);
    sub_1A511327C();
    sub_1A5113290();
    MEMORY[0x1A85AE508](0, v17, v13, v4);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    _Block_release(v4);
    swift_release();

    swift_release();
  }
  v29 = v8;
  return objc_msgSendSuper2(&v29, sel_dealloc);
}

void sub_1A514C5C4()
{
  sub_1A514C600(0, 4);
}

void sub_1A514C600(void *a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t *, _QWORD);
  uint64_t *v54;
  uint64_t v55;
  id v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD v120[4];
  uint64_t v121;
  uint64_t v122;
  uint8_t *v123;
  uint64_t v124;
  uint64_t v125;
  unsigned int v126;
  _BYTE **v127;
  uint64_t *v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  unint64_t v133;
  uint64_t *v134;
  uint32_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  _QWORD *v149;
  uint64_t v150;
  NSObject *v151;
  int v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint8_t *v161;
  uint64_t v162;
  uint64_t v163;
  _BYTE **v164;
  uint64_t *v165;
  uint64_t *v166;
  uint64_t v167;
  id v168;
  unint64_t v169;
  unint64_t v170;
  uint64_t *v171;
  uint32_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  int v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  _QWORD *v192;
  uint64_t v193;
  NSObject *v194;
  int v195;
  id v196;
  uint64_t v197;
  uint64_t *v198;
  uint64_t *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint8_t *v208;
  uint64_t v209;
  uint64_t v210;
  _BYTE **v211;
  uint64_t *v212;
  uint64_t *v213;
  uint64_t v214;
  uint64_t v215;
  unint64_t v216;
  unint64_t v217;
  uint64_t *v218;
  uint32_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  int v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  _QWORD *v239;
  uint64_t v240;
  NSObject *v241;
  int v242;
  uint64_t v243;
  uint64_t v244;
  char *v245;
  uint64_t v246;
  uint64_t v247;
  id v248;
  _QWORD *v249;
  _QWORD *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  id v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  unint64_t v260;
  char *v261;
  unint64_t v262;
  char *v263;
  unint64_t v264;
  char *v265;
  int v266;
  id v267;
  unint64_t v268;
  id v269;
  uint64_t v270;
  uint64_t v271;
  _QWORD *v272;
  int v273;
  uint64_t (*v274)(uint64_t, uint64_t, uint64_t);
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  _BYTE *v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint32_t v282;
  uint64_t v283;
  uint64_t v284;
  char v285;
  uint64_t v286;
  char v287;
  id v288;
  uint64_t (*v289)(uint64_t, uint64_t, uint64_t);
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  _BYTE *v293;
  uint64_t v294;
  uint32_t v295;
  id v296;
  uint64_t (*v297)(uint64_t, uint64_t, uint64_t);
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  _BYTE *v301;
  uint64_t v302;
  uint32_t v303;
  uint64_t v304;
  char v305;
  uint64_t v306;

  v267 = a1;
  v266 = a2;
  v306 = 0;
  v305 = 0;
  v304 = 0;
  v256 = 0;
  v296 = 0;
  v288 = 0;
  v283 = 0;
  v257 = 0;
  v258 = sub_1A594A764();
  v259 = *(_QWORD *)(v258 - 8);
  v260 = (*(_QWORD *)(v259 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3 = MEMORY[0x1E0C80A78](0);
  v261 = (char *)v120 - v260;
  v262 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  v5 = MEMORY[0x1E0C80A78](v3);
  v263 = (char *)v120 - v262;
  v264 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v5);
  v265 = (char *)v120 - v264;
  v271 = sub_1A594AED8();
  v270 = *(_QWORD *)(v271 - 8);
  v268 = (*(_QWORD *)(v270 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7 = MEMORY[0x1E0C80A78](v267);
  v272 = (_QWORD *)((char *)v120 - v268);
  v306 = v7;
  v305 = v8;
  v304 = v2;
  swift_retain();
  v269 = *(id *)(v2
               + OBJC_IVAR____TtCE7MessageCSo30MFBackFillMessageBodySchedulerP33_8C94728D29B9D9CACC7F5FFB5564322B8Activity_queue);
  v9 = v269;
  v10 = v270;
  *v272 = v269;
  (*(void (**)(void))(v10 + 104))();
  v273 = sub_1A594AEF0();
  (*(void (**)(_QWORD *, uint64_t))(v270 + 8))(v272, v271);
  if ((v273 & 1) != 0)
  {
    swift_release();
    v11 = v267;
    if (!v267)
    {
      v253 = v256;
      goto LABEL_21;
    }
    v254 = v267;
    v12 = v256;
    v248 = v267;
    v288 = v267;
    v247 = 32;
    v245 = &v285;
    swift_beginAccess();
    v246 = *(_QWORD *)(v255 + 32);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_endAccess();
    v284 = v246;
    v13 = v248;
    v249 = v120;
    MEMORY[0x1E0C80A78](v120);
    v250 = &v120[-4];
    v120[-2] = v14;
    v251 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE799CF8);
    sub_1A51586C8();
    sub_1A594BDD8();
    v252 = v12;
    if (!v12)
    {

      sub_1A5110C34();
      v244 = v286;
      if ((v287 & 1) == 0)
      {
        v243 = v244;
        v15 = v265;
        v215 = v244;
        v283 = v244;
        v16 = sub_1A51455C0();
        (*(void (**)(char *, uint64_t, uint64_t))(v259 + 16))(v15, v16, v258);
        swift_retain();
        v223 = 17;
        v226 = 7;
        v17 = swift_allocObject();
        v18 = v248;
        v221 = v17;
        *(_BYTE *)(v17 + 16) = v266;
        v19 = v18;
        v227 = swift_allocObject();
        *(_QWORD *)(v227 + 16) = v248;
        v241 = sub_1A594A74C();
        v242 = sub_1A594C030();
        v218 = &v281;
        v281 = 20;
        v216 = sub_1A5130F74();
        v217 = sub_1A5130FDC();
        sub_1A5131044();
        sub_1A594B880();
        v219 = v282;
        v229 = swift_allocObject();
        *(_BYTE *)(v229 + 16) = 0;
        v230 = swift_allocObject();
        v224 = 2;
        *(_BYTE *)(v230 + 16) = 2;
        v225 = 32;
        v20 = swift_allocObject();
        v21 = v255;
        v220 = v20;
        *(_QWORD *)(v20 + 16) = sub_1A5157878;
        *(_QWORD *)(v20 + 24) = v21;
        v22 = swift_allocObject();
        v23 = v220;
        v231 = v22;
        *(_QWORD *)(v22 + 16) = sub_1A5157984;
        *(_QWORD *)(v22 + 24) = v23;
        v232 = swift_allocObject();
        *(_BYTE *)(v232 + 16) = 34;
        v233 = swift_allocObject();
        *(_BYTE *)(v233 + 16) = 8;
        v24 = swift_allocObject();
        v25 = v221;
        v222 = v24;
        *(_QWORD *)(v24 + 16) = sub_1A5157B84;
        *(_QWORD *)(v24 + 24) = v25;
        v26 = swift_allocObject();
        v27 = v222;
        v234 = v26;
        *(_QWORD *)(v26 + 16) = sub_1A5130F5C;
        *(_QWORD *)(v26 + 24) = v27;
        v235 = swift_allocObject();
        *(_BYTE *)(v235 + 16) = 0;
        v236 = swift_allocObject();
        *(_BYTE *)(v236 + 16) = v224;
        v28 = swift_allocObject();
        v29 = v227;
        v228 = v28;
        *(_QWORD *)(v28 + 16) = sub_1A5158440;
        *(_QWORD *)(v28 + 24) = v29;
        v30 = swift_allocObject();
        v31 = v228;
        v238 = v30;
        *(_QWORD *)(v30 + 16) = sub_1A5157984;
        *(_QWORD *)(v30 + 24) = v31;
        v240 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A48D0);
        v237 = sub_1A594CD14();
        v239 = v32;
        swift_retain();
        v33 = v229;
        v34 = v239;
        *v239 = sub_1A5131290;
        v34[1] = v33;
        swift_retain();
        v35 = v230;
        v36 = v239;
        v239[2] = sub_1A5131290;
        v36[3] = v35;
        swift_retain();
        v37 = v231;
        v38 = v239;
        v239[4] = sub_1A51579CC;
        v38[5] = v37;
        swift_retain();
        v39 = v232;
        v40 = v239;
        v239[6] = sub_1A5131290;
        v40[7] = v39;
        swift_retain();
        v41 = v233;
        v42 = v239;
        v239[8] = sub_1A5131290;
        v42[9] = v41;
        swift_retain();
        v43 = v234;
        v44 = v239;
        v239[10] = sub_1A5133578;
        v44[11] = v43;
        swift_retain();
        v45 = v235;
        v46 = v239;
        v239[12] = sub_1A5131290;
        v46[13] = v45;
        swift_retain();
        v47 = v236;
        v48 = v239;
        v239[14] = sub_1A5131290;
        v48[15] = v47;
        swift_retain();
        v49 = v238;
        v50 = v239;
        v239[16] = sub_1A51579CC;
        v50[17] = v49;
        sub_1A5113324();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v241, (os_log_type_t)v242))
        {
          v51 = v252;
          v208 = (uint8_t *)sub_1A594C348();
          v207 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
          v209 = sub_1A5130D14(0);
          v210 = sub_1A5130D14(1);
          v211 = &v278;
          v278 = v208;
          v212 = &v277;
          v277 = v209;
          v213 = &v276;
          v276 = v210;
          sub_1A5130D6C(2, &v278);
          sub_1A5130D6C(3, v211);
          v274 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v275 = v229;
          sub_1A5130D80(&v274, (uint64_t)v211, (uint64_t)v212, (uint64_t)v213);
          v214 = v51;
          if (v51)
          {
            __break(1u);
          }
          else
          {
            v274 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v275 = v230;
            sub_1A5130D80(&v274, (uint64_t)&v278, (uint64_t)&v277, (uint64_t)&v276);
            v206 = 0;
            v52 = v206;
            v274 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A51579CC;
            v275 = v231;
            sub_1A5130D80(&v274, (uint64_t)&v278, (uint64_t)&v277, (uint64_t)&v276);
            v205 = v52;
            v274 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v275 = v232;
            sub_1A5130D80(&v274, (uint64_t)&v278, (uint64_t)&v277, (uint64_t)&v276);
            v204 = 0;
            v274 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v275 = v233;
            sub_1A5130D80(&v274, (uint64_t)&v278, (uint64_t)&v277, (uint64_t)&v276);
            v203 = 0;
            v274 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5133578;
            v275 = v234;
            sub_1A5130D80(&v274, (uint64_t)&v278, (uint64_t)&v277, (uint64_t)&v276);
            v202 = 0;
            v274 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v275 = v235;
            sub_1A5130D80(&v274, (uint64_t)&v278, (uint64_t)&v277, (uint64_t)&v276);
            v201 = 0;
            v274 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v275 = v236;
            sub_1A5130D80(&v274, (uint64_t)&v278, (uint64_t)&v277, (uint64_t)&v276);
            v200 = 0;
            v274 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A51579CC;
            v275 = v238;
            sub_1A5130D80(&v274, (uint64_t)&v278, (uint64_t)&v277, (uint64_t)&v276);
            _os_log_impl(&dword_1A4F90000, v241, (os_log_type_t)v242, "%hx: Received '%{public}s' from request #%hu.", v208, v219);
            sub_1A5130DC4(v209);
            sub_1A5130DC4(v210);
            sub_1A594C330();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
          }
        }
        else
        {
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
        }

        (*(void (**)(char *, uint64_t))(v259 + 8))(v265, v258);
        v199 = &v280;
        swift_beginAccess();
        v198 = &v279;
        v53 = (void (*)(uint64_t *, _QWORD))sub_1A594BB20();
        v54 = v198;
        *(_BYTE *)(v55 + 8) = v266;
        v53(v54, 0);
        swift_endAccess();

LABEL_44:
        sub_1A51513E0();
        return;
      }

      v253 = v252;
LABEL_21:
      v197 = v253;
      v56 = v267;
      if (v267)
      {
        v196 = v267;
        v57 = v263;
        v168 = v267;
        v296 = v267;
        v58 = sub_1A51455C0();
        (*(void (**)(char *, uint64_t, uint64_t))(v259 + 16))(v57, v58, v258);
        swift_retain();
        v176 = 17;
        v179 = 7;
        v59 = swift_allocObject();
        v60 = v168;
        v174 = v59;
        *(_BYTE *)(v59 + 16) = v266;
        v61 = v60;
        v180 = swift_allocObject();
        *(_QWORD *)(v180 + 16) = v168;
        v194 = sub_1A594A74C();
        v195 = sub_1A594C030();
        v171 = &v294;
        v294 = 20;
        v169 = sub_1A5130F74();
        v170 = sub_1A5130FDC();
        sub_1A5131044();
        sub_1A594B880();
        v172 = v295;
        v182 = swift_allocObject();
        *(_BYTE *)(v182 + 16) = 0;
        v183 = swift_allocObject();
        v177 = 2;
        *(_BYTE *)(v183 + 16) = 2;
        v178 = 32;
        v62 = swift_allocObject();
        v63 = v255;
        v173 = v62;
        *(_QWORD *)(v62 + 16) = sub_1A5157878;
        *(_QWORD *)(v62 + 24) = v63;
        v64 = swift_allocObject();
        v65 = v173;
        v184 = v64;
        *(_QWORD *)(v64 + 16) = sub_1A5157984;
        *(_QWORD *)(v64 + 24) = v65;
        v185 = swift_allocObject();
        *(_BYTE *)(v185 + 16) = 34;
        v186 = swift_allocObject();
        *(_BYTE *)(v186 + 16) = 8;
        v66 = swift_allocObject();
        v67 = v174;
        v175 = v66;
        *(_QWORD *)(v66 + 16) = sub_1A5157B84;
        *(_QWORD *)(v66 + 24) = v67;
        v68 = swift_allocObject();
        v69 = v175;
        v187 = v68;
        *(_QWORD *)(v68 + 16) = sub_1A5130F5C;
        *(_QWORD *)(v68 + 24) = v69;
        v188 = swift_allocObject();
        *(_BYTE *)(v188 + 16) = 0;
        v189 = swift_allocObject();
        *(_BYTE *)(v189 + 16) = v177;
        v70 = swift_allocObject();
        v71 = v180;
        v181 = v70;
        *(_QWORD *)(v70 + 16) = sub_1A5158440;
        *(_QWORD *)(v70 + 24) = v71;
        v72 = swift_allocObject();
        v73 = v181;
        v191 = v72;
        *(_QWORD *)(v72 + 16) = sub_1A5157984;
        *(_QWORD *)(v72 + 24) = v73;
        v193 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A48D0);
        v190 = sub_1A594CD14();
        v192 = v74;
        swift_retain();
        v75 = v182;
        v76 = v192;
        *v192 = sub_1A5131290;
        v76[1] = v75;
        swift_retain();
        v77 = v183;
        v78 = v192;
        v192[2] = sub_1A5131290;
        v78[3] = v77;
        swift_retain();
        v79 = v184;
        v80 = v192;
        v192[4] = sub_1A51579CC;
        v80[5] = v79;
        swift_retain();
        v81 = v185;
        v82 = v192;
        v192[6] = sub_1A5131290;
        v82[7] = v81;
        swift_retain();
        v83 = v186;
        v84 = v192;
        v192[8] = sub_1A5131290;
        v84[9] = v83;
        swift_retain();
        v85 = v187;
        v86 = v192;
        v192[10] = sub_1A5133578;
        v86[11] = v85;
        swift_retain();
        v87 = v188;
        v88 = v192;
        v192[12] = sub_1A5131290;
        v88[13] = v87;
        swift_retain();
        v89 = v189;
        v90 = v192;
        v192[14] = sub_1A5131290;
        v90[15] = v89;
        swift_retain();
        v91 = v191;
        v92 = v192;
        v192[16] = sub_1A51579CC;
        v92[17] = v91;
        sub_1A5113324();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v194, (os_log_type_t)v195))
        {
          v93 = v197;
          v161 = (uint8_t *)sub_1A594C348();
          v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
          v162 = sub_1A5130D14(0);
          v163 = sub_1A5130D14(1);
          v164 = &v293;
          v293 = v161;
          v165 = &v292;
          v292 = v162;
          v166 = &v291;
          v291 = v163;
          sub_1A5130D6C(2, &v293);
          sub_1A5130D6C(3, v164);
          v289 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v290 = v182;
          sub_1A5130D80(&v289, (uint64_t)v164, (uint64_t)v165, (uint64_t)v166);
          v167 = v93;
          if (v93)
          {
            __break(1u);
          }
          else
          {
            v289 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v290 = v183;
            sub_1A5130D80(&v289, (uint64_t)&v293, (uint64_t)&v292, (uint64_t)&v291);
            v159 = 0;
            v94 = v159;
            v289 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A51579CC;
            v290 = v184;
            sub_1A5130D80(&v289, (uint64_t)&v293, (uint64_t)&v292, (uint64_t)&v291);
            v158 = v94;
            v289 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v290 = v185;
            sub_1A5130D80(&v289, (uint64_t)&v293, (uint64_t)&v292, (uint64_t)&v291);
            v157 = 0;
            v289 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v290 = v186;
            sub_1A5130D80(&v289, (uint64_t)&v293, (uint64_t)&v292, (uint64_t)&v291);
            v156 = 0;
            v289 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5133578;
            v290 = v187;
            sub_1A5130D80(&v289, (uint64_t)&v293, (uint64_t)&v292, (uint64_t)&v291);
            v155 = 0;
            v289 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v290 = v188;
            sub_1A5130D80(&v289, (uint64_t)&v293, (uint64_t)&v292, (uint64_t)&v291);
            v154 = 0;
            v289 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v290 = v189;
            sub_1A5130D80(&v289, (uint64_t)&v293, (uint64_t)&v292, (uint64_t)&v291);
            v153 = 0;
            v289 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A51579CC;
            v290 = v191;
            sub_1A5130D80(&v289, (uint64_t)&v293, (uint64_t)&v292, (uint64_t)&v291);
            _os_log_impl(&dword_1A4F90000, v194, (os_log_type_t)v195, "%hx: Received '%{public}s' from unknown request #%hu.", v161, v172);
            sub_1A5130DC4(v162);
            sub_1A5130DC4(v163);
            sub_1A594C330();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
          }
        }
        else
        {
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
        }

        (*(void (**)(char *, uint64_t))(v259 + 8))(v263, v258);
      }
      else
      {
        v95 = v261;
        v96 = sub_1A51455C0();
        (*(void (**)(char *, uint64_t, uint64_t))(v259 + 16))(v95, v96, v258);
        swift_retain();
        v131 = 16;
        v137 = 17;
        v139 = 7;
        v140 = swift_allocObject();
        *(_BYTE *)(v140 + 16) = v266;
        v151 = sub_1A594A74C();
        v152 = sub_1A594C018();
        v134 = &v302;
        v302 = v131;
        v132 = sub_1A5130F74();
        v133 = sub_1A5130FDC();
        sub_1A5131044();
        sub_1A594B880();
        v135 = v303;
        v142 = swift_allocObject();
        *(_BYTE *)(v142 + 16) = 0;
        v143 = swift_allocObject();
        *(_BYTE *)(v143 + 16) = 2;
        v138 = 32;
        v97 = swift_allocObject();
        v98 = v255;
        v136 = v97;
        *(_QWORD *)(v97 + 16) = sub_1A5157878;
        *(_QWORD *)(v97 + 24) = v98;
        v99 = swift_allocObject();
        v100 = v136;
        v144 = v99;
        *(_QWORD *)(v99 + 16) = sub_1A5157984;
        *(_QWORD *)(v99 + 24) = v100;
        v145 = swift_allocObject();
        *(_BYTE *)(v145 + 16) = 34;
        v146 = swift_allocObject();
        *(_BYTE *)(v146 + 16) = 8;
        v101 = swift_allocObject();
        v102 = v140;
        v141 = v101;
        *(_QWORD *)(v101 + 16) = sub_1A5157B84;
        *(_QWORD *)(v101 + 24) = v102;
        v103 = swift_allocObject();
        v104 = v141;
        v148 = v103;
        *(_QWORD *)(v103 + 16) = sub_1A5130F5C;
        *(_QWORD *)(v103 + 24) = v104;
        v150 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A48D0);
        v147 = sub_1A594CD14();
        v149 = v105;
        swift_retain();
        v106 = v142;
        v107 = v149;
        *v149 = sub_1A5131290;
        v107[1] = v106;
        swift_retain();
        v108 = v143;
        v109 = v149;
        v149[2] = sub_1A5131290;
        v109[3] = v108;
        swift_retain();
        v110 = v144;
        v111 = v149;
        v149[4] = sub_1A51579CC;
        v111[5] = v110;
        swift_retain();
        v112 = v145;
        v113 = v149;
        v149[6] = sub_1A5131290;
        v113[7] = v112;
        swift_retain();
        v114 = v146;
        v115 = v149;
        v149[8] = sub_1A5131290;
        v115[9] = v114;
        swift_retain();
        v116 = v148;
        v117 = v149;
        v149[10] = sub_1A5133578;
        v117[11] = v116;
        sub_1A5113324();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v151, (os_log_type_t)v152))
        {
          v118 = v197;
          v123 = (uint8_t *)sub_1A594C348();
          v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
          v124 = sub_1A5130D14(0);
          v125 = sub_1A5130D14(1);
          v127 = &v301;
          v301 = v123;
          v128 = &v300;
          v300 = v124;
          v129 = &v299;
          v299 = v125;
          v126 = 2;
          sub_1A5130D6C(2, &v301);
          sub_1A5130D6C(v126, v127);
          v297 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v298 = v142;
          sub_1A5130D80(&v297, (uint64_t)v127, (uint64_t)v128, (uint64_t)v129);
          v130 = v118;
          if (v118)
          {
            __break(1u);
          }
          else
          {
            v297 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v298 = v143;
            sub_1A5130D80(&v297, (uint64_t)&v301, (uint64_t)&v300, (uint64_t)&v299);
            v121 = 0;
            v119 = v121;
            v297 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A51579CC;
            v298 = v144;
            sub_1A5130D80(&v297, (uint64_t)&v301, (uint64_t)&v300, (uint64_t)&v299);
            v120[3] = v119;
            v297 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v298 = v145;
            sub_1A5130D80(&v297, (uint64_t)&v301, (uint64_t)&v300, (uint64_t)&v299);
            v120[2] = 0;
            v297 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v298 = v146;
            sub_1A5130D80(&v297, (uint64_t)&v301, (uint64_t)&v300, (uint64_t)&v299);
            v120[1] = 0;
            v297 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5133578;
            v298 = v148;
            sub_1A5130D80(&v297, (uint64_t)&v301, (uint64_t)&v300, (uint64_t)&v299);
            _os_log_impl(&dword_1A4F90000, v151, (os_log_type_t)v152, "%hx: Received '%{public}s' without request.", v123, v135);
            sub_1A5130DC4(v124);
            sub_1A5130DC4(v125);
            sub_1A594C330();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
          }
        }
        else
        {
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
        }

        (*(void (**)(char *, uint64_t))(v259 + 8))(v261, v258);
      }
      goto LABEL_44;
    }
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1A514E2D8()
{
  sub_1A594CCFC();
  sub_1A594B568();
  sub_1A594CCF0();
  swift_bridgeObjectRelease();
  sub_1A51589F4();
  sub_1A514E4A4();
  sub_1A594B6DC();
  sub_1A594CCE4();
  sub_1A5139FD8();
  sub_1A594B568();
  sub_1A594CCF0();
  swift_bridgeObjectRelease();
  sub_1A594CCD8();
  sub_1A594B568();
  sub_1A594CCF0();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5139FD8();
  return sub_1A594B550();
}

uint64_t sub_1A514E4A4()
{
  return 0;
}

uint64_t sub_1A514E4BC(unsigned int a1)
{
  uint64_t v1;
  unsigned int v2;
  uint64_t result;
  id v4;
  id v5;
  uint64_t v6;
  id v7;
  char v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  int v24;
  uint64_t v25;
  char *v26;
  uint64_t Strong;
  uint64_t aBlock;
  int v29;
  int v30;
  uint64_t (*v31)(uint64_t);
  void *v32;
  void (*v33)();
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  unsigned int v39;

  v19 = a1;
  v39 = 0;
  v38 = 0;
  v37 = 0;
  v35 = 0;
  v14 = 0;
  v15 = sub_1A594AD34();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = (*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](0);
  v18 = (char *)&v9 - v17;
  v20 = sub_1A594AD70();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = (*(_QWORD *)(v21 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v9 - v22;
  v39 = v2;
  v38 = v1;
  v24 = sub_1A514E750(v2);
  v37 = v24;
  v25 = v1 + OBJC_IVAR____TtCE7MessageCSo30MFBackFillMessageBodyScheduler7Request_activity;
  v26 = &v36;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  swift_endAccess();
  result = Strong;
  if (Strong)
  {
    v12 = Strong;
    v11 = Strong;
    v35 = Strong;
    v10 = *(id *)(Strong
                + OBJC_IVAR____TtCE7MessageCSo30MFBackFillMessageBodySchedulerP33_8C94728D29B9D9CACC7F5FFB5564322B8Activity_queue);
    v4 = v10;
    swift_retain();
    v5 = v13;
    v6 = swift_allocObject();
    v7 = v13;
    v8 = v24;
    *(_QWORD *)(v6 + 16) = v11;
    *(_QWORD *)(v6 + 24) = v7;
    *(_BYTE *)(v6 + 32) = v8;
    v33 = sub_1A5158AA0;
    v34 = v6;
    aBlock = MEMORY[0x1E0C809B0];
    v29 = 1107296256;
    v30 = 0;
    v31 = sub_1A5113234;
    v32 = &block_descriptor_329;
    v9 = _Block_copy(&aBlock);
    sub_1A511327C();
    sub_1A5113290();
    MEMORY[0x1A85AE508](0, v23, v18, v9);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
    _Block_release(v9);
    swift_release();

    return swift_release();
  }
  return result;
}

uint64_t sub_1A514E750(unsigned int a1)
{
  if (a1 <= 3uLL)
    __asm { BR              X8 }
  return 3;
}

void sub_1A514E7E4(int a1, id a2, int a3)
{
  id v3;

  v3 = a2;
  sub_1A514C600(a2, a3);

}

uint64_t sub_1A514E88C()
{
  uint64_t result;
  uint64_t v1;

  if (!"Message.Request")
  {
    sub_1A594C9B4();
    __break(1u);
  }
  result = sub_1A5156590((uint64_t)"Message.Request", 15, (unint64_t)"init()", 6, 2, (unint64_t)"Message/BackFillMessageBodies.swift", 35, 2, v1, 0x9AuLL, 0x11uLL);
  __break(1u);
  return result;
}

uint64_t sub_1A514E9D8()
{
  uint64_t result;
  __int16 v1;

  v1 = 0;
  result = sub_1A514BCC4((uint64_t)&v1, MEMORY[0x1E0DEE068]);
  qword_1EE79A478 = result;
  return result;
}

uint64_t *sub_1A514EA0C()
{
  if (qword_1EE79A488 != -1)
    swift_once();
  return &qword_1EE79A478;
}

void sub_1A514EA60()
{
  uint64_t v0;

  v0 = *sub_1A514EA0C();
  swift_retain();
  sub_1A514BE24((void (*)(uint64_t))sub_1A514EAEC, 0, v0, MEMORY[0x1E0DEE068], (uint64_t)&unk_1E4E85F28);
  swift_release();
}

void sub_1A514EAEC(_WORD *a1@<X0>, _WORD *a2@<X8>)
{
  __int16 v2;

  ++*a1;
  sub_1A514E9BC();
  *a2 = v2;
}

uint64_t sub_1A514EB38()
{
  uint64_t v1;

  v1 = sub_1A594CD14();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5110C34();
  return v1;
}

uint64_t sub_1A514EB8C(__int16 a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v12;

  swift_unknownObjectWeakInit();
  *(_QWORD *)(v4 + 32) = sub_1A514EB38();
  *(_QWORD *)(v4 + 40) = 0;
  *(_BYTE *)(v4 + 48) = 0;
  *(_BYTE *)(v4 + 49) = 0;
  sub_1A594A0E0();
  *(_WORD *)(v4
           + OBJC_IVAR____TtCE7MessageCSo30MFBackFillMessageBodySchedulerP33_8C94728D29B9D9CACC7F5FFB5564322B8Activity_id) = a1;
  v5 = a3;
  swift_beginAccess();
  swift_unknownObjectWeakAssign();

  swift_endAccess();
  swift_unknownObjectRetain();
  *(_QWORD *)(v4 + 24) = a2;
  v6 = a4;
  *(_QWORD *)(v4
            + OBJC_IVAR____TtCE7MessageCSo30MFBackFillMessageBodySchedulerP33_8C94728D29B9D9CACC7F5FFB5564322B8Activity_queue) = a4;

  swift_unknownObjectRelease();
  return v12;
}

uint64_t sub_1A514ECB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  swift_beginAccess();
  if (*(_QWORD *)(v0 + 40))
  {
    swift_unknownObjectRetain();
    swift_endAccess();
    swift_getObjectType();
    sub_1A594C114();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_endAccess();
  }
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectRelease();
  sub_1A5110C34();
  sub_1A5158AC8();
  v3 = v4
     + OBJC_IVAR____TtCE7MessageCSo30MFBackFillMessageBodySchedulerP33_8C94728D29B9D9CACC7F5FFB5564322B8Activity_startDate;
  v1 = sub_1A594A0EC();
  (*(void (**)(uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v3);
  objc_release(*(id *)(v4
                     + OBJC_IVAR____TtCE7MessageCSo30MFBackFillMessageBodySchedulerP33_8C94728D29B9D9CACC7F5FFB5564322B8Activity_queue));
  return v4;
}

uint64_t sub_1A514EDC8()
{
  sub_1A514ECB4();
  return swift_deallocClassInstance();
}

unint64_t sub_1A514EE08()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  unint64_t result;
  uint64_t v4;
  __int16 v5;
  id v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE **v48;
  uint64_t *v49;
  uint64_t *v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t *v56;
  uint32_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  NSObject *v73;
  int v74;
  id v75;
  id v76;
  char *v77;
  char *v78;
  id v79;
  void *v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t i;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  char *v93;
  unint64_t v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  unsigned int v99;
  uint64_t (*v100)(uint64_t, uint64_t, uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _BYTE *v104;
  uint64_t v105;
  uint32_t v106;
  id v107;
  id v108;
  id v109;
  char v110;
  char v111[8];
  id v112;
  void *v113;
  void *v114;
  uint64_t v115;
  _QWORD v116[2];
  char v117;
  uint64_t v118;

  v118 = 0;
  v116[0] = 0;
  v116[1] = 0;
  v113 = 0;
  v112 = 0;
  v107 = 0;
  v88 = 0;
  v89 = 0;
  v90 = sub_1A594A764();
  v91 = *(_QWORD *)(v90 - 8);
  v92 = (*(_QWORD *)(v91 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](0);
  v93 = (char *)&v34 - v92;
  v97 = sub_1A594AED8();
  v96 = *(_QWORD *)(v97 - 8);
  v94 = (*(_QWORD *)(v96 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v97);
  v98 = (uint64_t *)((char *)&v34 - v94);
  v118 = v0;
  swift_retain();
  v95 = *(id *)(v0
              + OBJC_IVAR____TtCE7MessageCSo30MFBackFillMessageBodySchedulerP33_8C94728D29B9D9CACC7F5FFB5564322B8Activity_queue);
  v1 = v95;
  v2 = v96;
  *v98 = v95;
  (*(void (**)(void))(v2 + 104))();
  v99 = sub_1A594AEF0();
  (*(void (**)(_QWORD *, uint64_t))(v96 + 8))(v98, v97);
  result = v99;
  if ((v99 & 1) != 0)
  {
    v4 = v87;
    swift_release();
    v83 = sub_1A594CD14();
    v84 = &v117;
    swift_beginAccess();
    *(_QWORD *)(v4 + 32) = v83;
    swift_bridgeObjectRelease();
    swift_endAccess();
    v115 = sub_1A515040C();
    v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE799AF8);
    sub_1A5158AF0();
    sub_1A594BEA4();
    for (i = v88; ; i = v35)
    {
      v81 = i;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE79AA18);
      sub_1A594C930();
      v82 = v114;
      if (!v114)
        break;
      v80 = v82;
      v79 = v82;
      v113 = v82;
      _s7RequestCMa();
      swift_retain();
      sub_1A514EA60();
      v76 = sub_1A514BF80(v87, v5);
      v112 = v76;
      v6 = v76;
      v77 = v111;
      sub_1A5150530(v76, 5, (uint64_t)v111);
      v78 = &v110;
      swift_beginAccess();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE799CF8);
      sub_1A594BA84();
      swift_endAccess();
      v109 = v79;
      v108 = v79;
      if (v79)
        v75 = v108;
      else
        v75 = 0;
      v7 = v93;
      v52 = v75;
      v107 = v75;
      v8 = sub_1A51455C0();
      (*(void (**)(char *, uint64_t, uint64_t))(v91 + 16))(v7, v8, v90);
      swift_retain();
      v53 = 16;
      v61 = 7;
      v62 = swift_allocObject();
      *(_QWORD *)(v62 + 16) = v52;
      v73 = sub_1A594A74C();
      v74 = sub_1A594C030();
      v56 = &v105;
      v105 = v53;
      v54 = sub_1A5130F74();
      v55 = sub_1A5130FDC();
      sub_1A5131044();
      sub_1A594B880();
      v57 = v106;
      v59 = 17;
      v64 = swift_allocObject();
      *(_BYTE *)(v64 + 16) = 0;
      v65 = swift_allocObject();
      *(_BYTE *)(v65 + 16) = 2;
      v60 = 32;
      v9 = swift_allocObject();
      v10 = v87;
      v58 = v9;
      *(_QWORD *)(v9 + 16) = sub_1A5157878;
      *(_QWORD *)(v9 + 24) = v10;
      v11 = swift_allocObject();
      v12 = v58;
      v66 = v11;
      *(_QWORD *)(v11 + 16) = sub_1A5157984;
      *(_QWORD *)(v11 + 24) = v12;
      v67 = swift_allocObject();
      *(_BYTE *)(v67 + 16) = 0;
      v68 = swift_allocObject();
      *(_BYTE *)(v68 + 16) = 8;
      v13 = swift_allocObject();
      v14 = v62;
      v63 = v13;
      *(_QWORD *)(v13 + 16) = sub_1A5158BAC;
      *(_QWORD *)(v13 + 24) = v14;
      v15 = swift_allocObject();
      v16 = v63;
      v70 = v15;
      *(_QWORD *)(v15 + 16) = sub_1A5138BDC;
      *(_QWORD *)(v15 + 24) = v16;
      v72 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A48D0);
      v69 = sub_1A594CD14();
      v71 = v17;
      swift_retain();
      v18 = v64;
      v19 = v71;
      *v71 = sub_1A5131290;
      v19[1] = v18;
      swift_retain();
      v20 = v65;
      v21 = v71;
      v71[2] = sub_1A5131290;
      v21[3] = v20;
      swift_retain();
      v22 = v66;
      v23 = v71;
      v71[4] = sub_1A51579CC;
      v23[5] = v22;
      swift_retain();
      v24 = v67;
      v25 = v71;
      v71[6] = sub_1A5131290;
      v25[7] = v24;
      swift_retain();
      v26 = v68;
      v27 = v71;
      v71[8] = sub_1A5131290;
      v27[9] = v26;
      swift_retain();
      v28 = v70;
      v29 = v71;
      v71[10] = sub_1A5158D44;
      v29[11] = v28;
      sub_1A5113324();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v73, (os_log_type_t)v74))
      {
        v30 = v81;
        v45 = (uint8_t *)sub_1A594C348();
        v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
        v44 = 0;
        v46 = sub_1A5130D14(0);
        v47 = sub_1A5130D14(v44);
        v48 = &v104;
        v104 = v45;
        v49 = &v103;
        v103 = v46;
        v50 = &v102;
        v102 = v47;
        sub_1A5130D6C(0, &v104);
        sub_1A5130D6C(2, v48);
        v100 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v101 = v64;
        sub_1A5130D80(&v100, (uint64_t)v48, (uint64_t)v49, (uint64_t)v50);
        v51 = v30;
        if (v30)
        {
          __break(1u);
        }
        else
        {
          v100 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v101 = v65;
          sub_1A5130D80(&v100, (uint64_t)&v104, (uint64_t)&v103, (uint64_t)&v102);
          v41 = 0;
          v32 = v41;
          v100 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A51579CC;
          v101 = v66;
          sub_1A5130D80(&v100, (uint64_t)&v104, (uint64_t)&v103, (uint64_t)&v102);
          v40 = v32;
          v100 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v101 = v67;
          sub_1A5130D80(&v100, (uint64_t)&v104, (uint64_t)&v103, (uint64_t)&v102);
          v39 = 0;
          v100 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v101 = v68;
          sub_1A5130D80(&v100, (uint64_t)&v104, (uint64_t)&v103, (uint64_t)&v102);
          v38 = 0;
          v100 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5158D44;
          v101 = v70;
          sub_1A5130D80(&v100, (uint64_t)&v104, (uint64_t)&v103, (uint64_t)&v102);
          v37 = 0;
          _os_log_impl(&dword_1A4F90000, v73, (os_log_type_t)v74, "%hx: Starting back-filling messages on task manager %lx.", v45, v57);
          v36 = 0;
          sub_1A5130DC4(v46);
          sub_1A5130DC4(v47);
          sub_1A594C330();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          v42 = v37;
        }
      }
      else
      {
        v31 = v81;
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        v42 = v31;
      }
      v35 = v42;

      (*(void (**)(char *, uint64_t))(v91 + 8))(v93, v90);
      swift_getObjectType();
      v33 = v76;
      objc_msgSend(v79, sel_startBackFillingMessageBodyDownloadWithRequest_, v76);
      swift_unknownObjectRelease();

      swift_unknownObjectRelease();
    }
    result = (unint64_t)v116;
    sub_1A5110C34();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A514FB18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t result;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  _QWORD v12[3];
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(void);
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  void (*v24)(_QWORD *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char *v31;
  unint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  unint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  unint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  unsigned int v58;
  char v59;
  uint64_t aBlock;
  int v61;
  int v62;
  uint64_t (*v63)(uint64_t);
  void *v64;
  uint64_t (*v65)();
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;

  v69 = 0;
  v68 = 0;
  v67 = 0;
  v48 = 0;
  v28 = sub_1A594AE84();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = (*(_QWORD *)(v29 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1 = MEMORY[0x1E0C80A78](0);
  v31 = (char *)v12 - v30;
  v32 = (v2 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v1);
  v33 = (char *)v12 - v32;
  v34 = sub_1A594AD10();
  v35 = *(_QWORD *)(v34 - 8);
  v36 = (*(_QWORD *)(v35 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3 = MEMORY[0x1E0C80A78](v48);
  v37 = (_QWORD *)((char *)v12 - v36);
  v38 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v3);
  v39 = (_QWORD *)((char *)v12 - v38);
  v69 = (char *)v12 - v38;
  v40 = sub_1A594AD34();
  v41 = *(_QWORD *)(v40 - 8);
  v42 = (*(_QWORD *)(v41 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v48);
  v43 = (char *)v12 - v42;
  v44 = sub_1A594AD70();
  v45 = *(_QWORD *)(v44 - 8);
  v46 = (*(_QWORD *)(v45 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v48);
  v47 = (char *)v12 - v46;
  v49 = sub_1A594C0CC();
  v50 = *(_QWORD *)(v49 - 8);
  v51 = (*(_QWORD *)(v50 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v48);
  v52 = (char *)v12 - v51;
  v56 = sub_1A594AED8();
  v55 = *(_QWORD *)(v56 - 8);
  v53 = (*(_QWORD *)(v55 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v56);
  v57 = (_QWORD *)((char *)v12 - v53);
  v68 = v0;
  swift_retain();
  v54 = *(id *)(v0
              + OBJC_IVAR____TtCE7MessageCSo30MFBackFillMessageBodySchedulerP33_8C94728D29B9D9CACC7F5FFB5564322B8Activity_queue);
  v5 = v54;
  v6 = v55;
  *v57 = v54;
  (*(void (**)(void))(v6 + 104))();
  v58 = sub_1A594AEF0();
  (*(void (**)(_QWORD *, uint64_t))(v55 + 8))(v57, v56);
  result = v58;
  if ((v58 & 1) != 0)
  {
    swift_release();
    swift_beginAccess();
    if (*(_QWORD *)(v27 + 40))
    {
      v26 = *(_QWORD *)(v27 + 40);
      swift_unknownObjectRetain();
      swift_endAccess();
      swift_getObjectType();
      sub_1A594C114();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_endAccess();
    }
    v12[0] = 0;
    v12[2] = sub_1A5158DA4();
    v12[1] = sub_1A594CD14();
    sub_1A5158E08();
    sub_1A594C564();
    v13 = *(id *)(v27
                + OBJC_IVAR____TtCE7MessageCSo30MFBackFillMessageBodySchedulerP33_8C94728D29B9D9CACC7F5FFB5564322B8Activity_queue);
    v8 = v13;
    v9 = sub_1A594C0D8();
    v25 = v9;

    (*(void (**)(char *, uint64_t))(v50 + 8))(v52, v49);
    v67 = v9;
    ObjectType = swift_getObjectType();
    v18 = swift_allocObject();
    v14 = v18 + 16;
    swift_retain();
    v15 = v27;
    swift_weakInit();
    swift_release();
    swift_retain();
    v65 = sub_1A5158EB4;
    v66 = v18;
    aBlock = MEMORY[0x1E0C809B0];
    v61 = 1107296256;
    v62 = 0;
    v63 = sub_1A5113234;
    v64 = &block_descriptor_369;
    v17 = _Block_copy(&aBlock);
    sub_1A51553FC();
    sub_1A515541C();
    sub_1A594C0E4();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v43, v40);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v47, v44);
    _Block_release(v17);
    swift_release();
    swift_release();
    v10 = v35;
    *v39 = 2;
    v19 = MEMORY[0x1E0DEF4A0];
    v20 = *(void (**)(void))(v10 + 104);
    v20();
    v21 = swift_getObjectType();
    sub_1A594AE6C();
    sub_1A594AE78();
    v22 = *(void (**)(char *, uint64_t))(v29 + 8);
    v22(v31, v28);
    v11 = v20;
    *v37 = 1;
    v11();
    MEMORY[0x1A85AE700](v33, v39, v37, v21);
    v24 = *(void (**)(_QWORD *, uint64_t))(v35 + 8);
    v24(v37, v34);
    v22(v33, v28);
    swift_unknownObjectRetain();
    v23 = &v59;
    swift_beginAccess();
    *(_QWORD *)(v27 + 40) = v25;
    swift_unknownObjectRelease();
    swift_endAccess();
    sub_1A51554B4();
    v24(v39, v34);
    return swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1A51502EC()
{
  sub_1A514E9BC();
}

void sub_1A5150318(char a1)
{
  __asm { BR              X8 }
}

uint64_t sub_1A5150350()
{
  return 0;
}

void sub_1A51503A8(char a1)
{
  sub_1A514BA24(a1);
}

BOOL sub_1A51503BC()
{
  uint64_t v0;
  _xpc_activity_s *activity;
  BOOL should_defer;

  activity = *(_xpc_activity_s **)(v0 + 24);
  swift_unknownObjectRetain();
  should_defer = xpc_activity_should_defer(activity);
  swift_unknownObjectRelease();
  return should_defer;
}

uint64_t sub_1A515040C()
{
  uint64_t v0;
  id v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v8 = 0;
  swift_beginAccess();
  v6 = (id)MEMORY[0x1A85B1A0C](v0 + 16);
  if (v6)
  {
    v3 = v6;
    v1 = v6;
    sub_1A5138D80(&v6);
    swift_endAccess();
    v4 = sub_1A515057C();

    v5 = v4;
  }
  else
  {
    sub_1A5138D80(&v6);
    swift_endAccess();
    v5 = 0;
  }
  if (v5)
    return v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE799FA8);
  v7 = sub_1A594CD14();
  sub_1A5110C34();
  return v7;
}

void sub_1A5150530(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  swift_unknownObjectWeakInit();

  *(_BYTE *)(a3 + 8) = a2;
}

uint64_t sub_1A515057C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v29[5];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE **v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t *v44;
  uint32_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  NSObject *v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char *v72;
  id v73;
  id v74;
  uint64_t v75;
  uint64_t KeyPath;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t (*v80)(uint64_t, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _BYTE *v84;
  uint64_t v85;
  uint32_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;

  v91 = 0;
  v90 = 0;
  v87 = 0;
  v69 = sub_1A594A764();
  v70 = *(_QWORD *)(v69 - 8);
  v71 = (*(_QWORD *)(v70 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v69);
  v72 = (char *)v29 - v71;
  v91 = v0;
  v74 = *(id *)(v0 + OBJC_IVAR___MFBackFillMessageBodyScheduler_accountProvider);
  swift_unknownObjectRetain();
  swift_getObjectType();
  v73 = objc_msgSend(v74, sel_mailAccounts);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE79A630);
  v75 = sub_1A594B958();
  v90 = v75;

  swift_unknownObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v89 = v75;
  KeyPath = swift_getKeyPath();
  swift_retain();
  v77 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE799D88);
  sub_1A5158F5C();
  v1 = sub_1A594C7F8();
  v78 = 0;
  v79 = v1;
  v65 = v1;
  swift_release();
  swift_release();
  v88 = v65;
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE799FA8);
  sub_1A5158FCC();
  v2 = sub_1A594B76C();
  v67 = 0;
  v68 = v2;
  v3 = v72;
  v40 = v2;
  sub_1A5110C34();
  v87 = v40;
  v4 = sub_1A51455C0();
  (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v3, v4, v69);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v41 = 24;
  v51 = 7;
  v46 = swift_allocObject();
  *(_QWORD *)(v46 + 16) = v40;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v52 = swift_allocObject();
  *(_QWORD *)(v52 + 16) = v75;
  v63 = sub_1A594A74C();
  v64 = sub_1A594C030();
  v44 = &v85;
  v85 = 22;
  v42 = sub_1A5130F74();
  v43 = sub_1A5130FDC();
  sub_1A5131044();
  sub_1A594B880();
  v45 = v86;
  v48 = 17;
  v54 = swift_allocObject();
  *(_BYTE *)(v54 + 16) = 0;
  v55 = swift_allocObject();
  v49 = 8;
  *(_BYTE *)(v55 + 16) = 8;
  v50 = 32;
  v5 = swift_allocObject();
  v6 = v46;
  v47 = v5;
  *(_QWORD *)(v5 + 16) = sub_1A5159078;
  *(_QWORD *)(v5 + 24) = v6;
  v7 = swift_allocObject();
  v8 = v47;
  v56 = v7;
  *(_QWORD *)(v7 + 16) = sub_1A5138BDC;
  *(_QWORD *)(v7 + 24) = v8;
  v57 = swift_allocObject();
  *(_BYTE *)(v57 + 16) = 0;
  v58 = swift_allocObject();
  *(_BYTE *)(v58 + 16) = v49;
  v9 = swift_allocObject();
  v10 = v52;
  v53 = v9;
  *(_QWORD *)(v9 + 16) = sub_1A51590BC;
  *(_QWORD *)(v9 + 24) = v10;
  v11 = swift_allocObject();
  v12 = v53;
  v60 = v11;
  *(_QWORD *)(v11 + 16) = sub_1A5138BDC;
  *(_QWORD *)(v11 + 24) = v12;
  v62 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A48D0);
  v59 = sub_1A594CD14();
  v61 = v13;
  swift_retain();
  v14 = v54;
  v15 = v61;
  *v61 = sub_1A5131290;
  v15[1] = v14;
  swift_retain();
  v16 = v55;
  v17 = v61;
  v61[2] = sub_1A5131290;
  v17[3] = v16;
  swift_retain();
  v18 = v56;
  v19 = v61;
  v61[4] = sub_1A5138C24;
  v19[5] = v18;
  swift_retain();
  v20 = v57;
  v21 = v61;
  v61[6] = sub_1A5131290;
  v21[7] = v20;
  swift_retain();
  v22 = v58;
  v23 = v61;
  v61[8] = sub_1A5131290;
  v23[9] = v22;
  swift_retain();
  v24 = v60;
  v25 = v61;
  v61[10] = sub_1A5138C24;
  v25[11] = v24;
  sub_1A5113324();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(v63, (os_log_type_t)v64))
  {
    v26 = v67;
    v33 = (uint8_t *)sub_1A594C348();
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
    v32 = 0;
    v34 = sub_1A5130D14(0);
    v35 = sub_1A5130D14(v32);
    v36 = &v84;
    v84 = v33;
    v37 = &v83;
    v83 = v34;
    v38 = &v82;
    v82 = v35;
    sub_1A5130D6C(0, &v84);
    sub_1A5130D6C(2, v36);
    v80 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
    v81 = v54;
    sub_1A5130D80(&v80, (uint64_t)v36, (uint64_t)v37, (uint64_t)v38);
    v39 = v26;
    if (v26)
    {
      __break(1u);
    }
    else
    {
      v80 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
      v81 = v55;
      sub_1A5130D80(&v80, (uint64_t)&v84, (uint64_t)&v83, (uint64_t)&v82);
      v30 = 0;
      v27 = v30;
      v80 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5138C24;
      v81 = v56;
      sub_1A5130D80(&v80, (uint64_t)&v84, (uint64_t)&v83, (uint64_t)&v82);
      v29[4] = v27;
      v80 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
      v81 = v57;
      sub_1A5130D80(&v80, (uint64_t)&v84, (uint64_t)&v83, (uint64_t)&v82);
      v29[3] = 0;
      v80 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
      v81 = v58;
      sub_1A5130D80(&v80, (uint64_t)&v84, (uint64_t)&v83, (uint64_t)&v82);
      v29[2] = 0;
      v80 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5138C24;
      v81 = v60;
      sub_1A5130D80(&v80, (uint64_t)&v84, (uint64_t)&v83, (uint64_t)&v82);
      _os_log_impl(&dword_1A4F90000, v63, (os_log_type_t)v64, "Found %ld task managers for %ld accounts.", v33, v45);
      v29[1] = 0;
      sub_1A5130DC4(v34);
      sub_1A5130DC4(v35);
      sub_1A594C330();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }

  (*(void (**)(char *, uint64_t))(v70 + 8))(v72, v69);
  swift_bridgeObjectRelease();
  return v40;
}

uint64_t sub_1A515102C@<X0>(void **a1@<X0>, _BYTE *a2@<X8>)
{
  void *v3;

  v3 = *a1;
  swift_unknownObjectRetain();
  swift_getObjectType();
  *a2 = objc_msgSend(v3, sel_isActive) & 1;
  return swift_unknownObjectRelease();
}

uint64_t sub_1A5151090()
{
  char v1;

  swift_unknownObjectRetain();
  swift_retain();
  swift_getAtKeyPath();
  swift_unknownObjectRelease();
  swift_release();
  return v1 & 1;
}

void sub_1A5151100(_QWORD *a1@<X8>)
{
  void *v1;
  uint64_t v3;

  swift_unknownObjectRetain();
  objc_opt_self();
  v3 = swift_dynamicCastObjCClass();
  if (v3)
  {
    v1 = (void *)v3;
  }
  else
  {
    swift_unknownObjectRelease();
    v1 = 0;
  }
  if (v1)
  {
    *a1 = objc_msgSend(v1, sel_taskManager);

  }
  else
  {
    *a1 = 0;
  }
}

uint64_t sub_1A51511F0(uint64_t a1)
{
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE799FA8);
  return MEMORY[0x1A85ADEB4](a1, v1);
}

uint64_t sub_1A5151224(uint64_t a1)
{
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE79A630);
  return MEMORY[0x1A85ADEB4](a1, v1);
}

uint64_t sub_1A5151258(uint64_t a1, void *a2)
{
  id v2;
  id v3;
  id v4;
  char v6;
  char v7;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  uint64_t v17;

  swift_getObjectType();
  v17 = a1;
  v16 = a2;
  v10 = (id)MEMORY[0x1A85B1A0C]();
  v2 = v10;
  v3 = a2;
  v4 = a2;
  v14 = v10;
  v15 = a2;
  if (!v10)
  {
    if (!v15)
    {
      sub_1A5138D80(&v14);
      v7 = 1;
      goto LABEL_7;
    }
    goto LABEL_8;
  }
  sub_1A5135634(&v14, &v13);
  if (!v15)
  {

LABEL_8:
    sub_1A515A910(&v14);
    v7 = 0;
    goto LABEL_7;
  }
  v12 = v13;
  v11 = v15;
  v6 = sub_1A594C2D0();

  sub_1A5138D80(&v14);
  v7 = v6;
LABEL_7:

  return v7 & 1;
}

uint64_t sub_1A51513D0(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + OBJC_IVAR____TtCE7MessageCSo30MFBackFillMessageBodyScheduler7Request_id);
}

void sub_1A51513E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  double v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD v109[12];
  uint64_t v110;
  uint64_t v111;
  uint8_t *v112;
  uint64_t v113;
  uint64_t v114;
  _BYTE **v115;
  uint64_t *v116;
  uint64_t *v117;
  uint64_t v118;
  uint32_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  int v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  NSObject *v147;
  int v148;
  uint64_t v149;
  void (*v150)(char *, uint64_t);
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint8_t *v166;
  uint64_t v167;
  uint64_t v168;
  _BYTE **v169;
  uint64_t *v170;
  uint64_t *v171;
  uint64_t v172;
  void (*v173)(char *, uint64_t, uint64_t);
  uint64_t v174;
  unint64_t v175;
  unint64_t v176;
  uint64_t *v177;
  unint64_t v178;
  uint32_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  int v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  _QWORD *v202;
  uint64_t v203;
  NSObject *v204;
  int v205;
  uint64_t v206;
  char *v207;
  void (*v208)(char *, uint64_t);
  double v209;
  long double v210;
  unsigned int v211;
  unsigned int v212;
  char *v213;
  uint64_t v214;
  unsigned int v215;
  char *v216;
  int v217;
  uint64_t v218;
  const char *v219;
  const char *v220;
  const char *v221;
  const char *v222;
  const char *v223;
  uint64_t v224;
  uint64_t v225;
  _QWORD *v226;
  unint64_t v227;
  char *v228;
  unint64_t v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  unint64_t v234;
  char *v235;
  unint64_t v236;
  char *v237;
  unint64_t v238;
  id v239;
  uint64_t v240;
  uint64_t v241;
  _QWORD *v242;
  int v243;
  char v244;
  uint64_t (*v245)(uint64_t, uint64_t, uint64_t);
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  _BYTE *v249;
  uint64_t (*v250)(uint64_t, uint64_t, uint64_t);
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  _BYTE *v254[2];
  uint32_t v255;
  uint64_t v256;
  uint32_t v257;
  uint64_t v258;
  char v259;
  char v260;
  char v261;
  uint64_t v262;

  v219 = "Fatal error";
  v220 = "Double value cannot be converted to Int because it is either infinite or NaN";
  v221 = "Swift/IntegerTypes.swift";
  v222 = "Double value cannot be converted to Int because the result would be less than Int.min";
  v223 = "Double value cannot be converted to Int because the result would be greater than Int.max";
  v262 = 0;
  v258 = 0;
  v224 = 0;
  v244 = 0;
  v231 = 0;
  v225 = sub_1A594A764();
  v226 = *(_QWORD **)(v225 - 8);
  v227 = (v226[8] + 15) & 0xFFFFFFFFFFFFFFF0;
  v1 = MEMORY[0x1E0C80A78](0);
  v228 = (char *)v109 - v227;
  v229 = (v2 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v1);
  v230 = (char *)v109 - v229;
  v232 = sub_1A594A0EC();
  v233 = *(_QWORD *)(v232 - 8);
  v234 = (*(_QWORD *)(v233 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3 = MEMORY[0x1E0C80A78](v231);
  v235 = (char *)v109 - v234;
  v236 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v3);
  v237 = (char *)v109 - v236;
  v241 = sub_1A594AED8();
  v240 = *(_QWORD *)(v241 - 8);
  v238 = (*(_QWORD *)(v240 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v241);
  v242 = (_QWORD *)((char *)v109 - v238);
  v262 = v0;
  swift_retain();
  v239 = *(id *)(v0
               + OBJC_IVAR____TtCE7MessageCSo30MFBackFillMessageBodySchedulerP33_8C94728D29B9D9CACC7F5FFB5564322B8Activity_queue);
  v5 = v239;
  v6 = v240;
  *v242 = v239;
  (*(void (**)(void))(v6 + 104))();
  v243 = sub_1A594AEF0();
  (*(void (**)(_QWORD *, uint64_t))(v240 + 8))(v242, v241);
  if ((v243 & 1) != 0)
  {
    swift_release();
    v216 = &v261;
    swift_beginAccess();
    v217 = *(unsigned __int8 *)(v218 + 48);
    swift_endAccess();
    if ((v217 & 1) == 0)
    {
      v213 = &v260;
      swift_beginAccess();
      v214 = *(_QWORD *)(v218 + 32);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_endAccess();
      v215 = sub_1A5154298(v214);
      if (v215 == 5)
      {
        swift_bridgeObjectRelease();
        sub_1A594A0D4();
        v206 = v218
             + OBJC_IVAR____TtCE7MessageCSo30MFBackFillMessageBodySchedulerP33_8C94728D29B9D9CACC7F5FFB5564322B8Activity_startDate;
        v207 = &v259;
        swift_beginAccess();
        (*(void (**)(char *, uint64_t, uint64_t))(v233 + 16))(v235, v206, v232);
        swift_endAccess();
        sub_1A594A05C();
        v209 = v7;
        v208 = *(void (**)(char *, uint64_t))(v233 + 8);
        v208(v235, v232);
        v208(v237, v232);
        v210 = floor(v209 / 60.0);
        if (((*(_QWORD *)&v210 >> 52) & 0x7FFLL) == 0x7FF)
        {
          sub_1A594C9B4();
          __break(1u);
        }
        if (v210 <= -9.22337204e18)
        {
          sub_1A594C9B4();
          __break(1u);
        }
        if (v210 >= 9.22337204e18)
        {
          sub_1A594C9B4();
          __break(1u);
        }
        v8 = v230;
        v174 = (uint64_t)v210;
        v258 = (uint64_t)v210;
        v9 = sub_1A51455C0();
        v173 = (void (*)(char *, uint64_t, uint64_t))v226[2];
        v173(v8, v9, v225);
        swift_retain();
        swift_retain();
        swift_retain();
        v186 = 7;
        v187 = swift_allocObject();
        *(_QWORD *)(v187 + 16) = v174;
        v204 = sub_1A594A74C();
        v205 = sub_1A594C030();
        v177 = &v256;
        v256 = 36;
        v175 = sub_1A5130F74();
        v176 = sub_1A5130FDC();
        v178 = sub_1A5131044();
        sub_1A594B880();
        v179 = v257;
        v183 = 17;
        v189 = swift_allocObject();
        *(_BYTE *)(v189 + 16) = 0;
        v190 = swift_allocObject();
        *(_BYTE *)(v190 + 16) = 2;
        v185 = 32;
        v10 = swift_allocObject();
        v11 = v218;
        v180 = v10;
        *(_QWORD *)(v10 + 16) = sub_1A5157878;
        *(_QWORD *)(v10 + 24) = v11;
        v12 = swift_allocObject();
        v13 = v180;
        v191 = v12;
        *(_QWORD *)(v12 + 16) = sub_1A5157984;
        *(_QWORD *)(v12 + 24) = v13;
        v192 = swift_allocObject();
        *(_BYTE *)(v192 + 16) = 0;
        v193 = swift_allocObject();
        v184 = 8;
        *(_BYTE *)(v193 + 16) = 8;
        v14 = swift_allocObject();
        v15 = v218;
        v181 = v14;
        *(_QWORD *)(v14 + 16) = sub_1A5159254;
        *(_QWORD *)(v14 + 24) = v15;
        v16 = swift_allocObject();
        v17 = v181;
        v194 = v16;
        *(_QWORD *)(v16 + 16) = sub_1A5138BDC;
        *(_QWORD *)(v16 + 24) = v17;
        v195 = swift_allocObject();
        *(_BYTE *)(v195 + 16) = 0;
        v196 = swift_allocObject();
        *(_BYTE *)(v196 + 16) = v184;
        v18 = swift_allocObject();
        v19 = v218;
        v182 = v18;
        *(_QWORD *)(v18 + 16) = sub_1A515925C;
        *(_QWORD *)(v18 + 24) = v19;
        v20 = swift_allocObject();
        v21 = v182;
        v197 = v20;
        *(_QWORD *)(v20 + 16) = sub_1A5138BDC;
        *(_QWORD *)(v20 + 24) = v21;
        v198 = swift_allocObject();
        *(_BYTE *)(v198 + 16) = 0;
        v199 = swift_allocObject();
        *(_BYTE *)(v199 + 16) = v184;
        v22 = swift_allocObject();
        v23 = v187;
        v188 = v22;
        *(_QWORD *)(v22 + 16) = sub_1A5158BAC;
        *(_QWORD *)(v22 + 24) = v23;
        v24 = swift_allocObject();
        v25 = v188;
        v201 = v24;
        *(_QWORD *)(v24 + 16) = sub_1A5138BDC;
        *(_QWORD *)(v24 + 24) = v25;
        v203 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A48D0);
        v200 = sub_1A594CD14();
        v202 = v26;
        swift_retain();
        v27 = v189;
        v28 = v202;
        *v202 = sub_1A5131290;
        v28[1] = v27;
        swift_retain();
        v29 = v190;
        v30 = v202;
        v202[2] = sub_1A5131290;
        v30[3] = v29;
        swift_retain();
        v31 = v191;
        v32 = v202;
        v202[4] = sub_1A51579CC;
        v32[5] = v31;
        swift_retain();
        v33 = v192;
        v34 = v202;
        v202[6] = sub_1A5131290;
        v34[7] = v33;
        swift_retain();
        v35 = v193;
        v36 = v202;
        v202[8] = sub_1A5131290;
        v36[9] = v35;
        swift_retain();
        v37 = v194;
        v38 = v202;
        v202[10] = sub_1A5138C24;
        v38[11] = v37;
        swift_retain();
        v39 = v195;
        v40 = v202;
        v202[12] = sub_1A5131290;
        v40[13] = v39;
        swift_retain();
        v41 = v196;
        v42 = v202;
        v202[14] = sub_1A5131290;
        v42[15] = v41;
        swift_retain();
        v43 = v197;
        v44 = v202;
        v202[16] = sub_1A5138C24;
        v44[17] = v43;
        swift_retain();
        v45 = v198;
        v46 = v202;
        v202[18] = sub_1A5131290;
        v46[19] = v45;
        swift_retain();
        v47 = v199;
        v48 = v202;
        v202[20] = sub_1A5131290;
        v48[21] = v47;
        swift_retain();
        v49 = v201;
        v50 = v202;
        v202[22] = sub_1A5138C24;
        v50[23] = v49;
        sub_1A5113324();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v204, (os_log_type_t)v205))
        {
          v51 = v224;
          v166 = (uint8_t *)sub_1A594C348();
          v164 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
          v165 = 0;
          v167 = sub_1A5130D14(0);
          v168 = sub_1A5130D14(v165);
          v169 = &v249;
          v249 = v166;
          v170 = &v248;
          v248 = v167;
          v171 = &v247;
          v247 = v168;
          sub_1A5130D6C(0, &v249);
          sub_1A5130D6C(4, v169);
          v245 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v246 = v189;
          sub_1A5130D80(&v245, (uint64_t)v169, (uint64_t)v170, (uint64_t)v171);
          v172 = v51;
          if (v51)
          {
            __break(1u);
          }
          else
          {
            v245 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v246 = v190;
            sub_1A5130D80(&v245, (uint64_t)&v249, (uint64_t)&v248, (uint64_t)&v247);
            v162 = 0;
            v53 = v162;
            v245 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A51579CC;
            v246 = v191;
            sub_1A5130D80(&v245, (uint64_t)&v249, (uint64_t)&v248, (uint64_t)&v247);
            v161 = v53;
            v245 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v246 = v192;
            sub_1A5130D80(&v245, (uint64_t)&v249, (uint64_t)&v248, (uint64_t)&v247);
            v160 = 0;
            v245 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v246 = v193;
            sub_1A5130D80(&v245, (uint64_t)&v249, (uint64_t)&v248, (uint64_t)&v247);
            v159 = 0;
            v245 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5138C24;
            v246 = v194;
            sub_1A5130D80(&v245, (uint64_t)&v249, (uint64_t)&v248, (uint64_t)&v247);
            v158 = 0;
            v245 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v246 = v195;
            sub_1A5130D80(&v245, (uint64_t)&v249, (uint64_t)&v248, (uint64_t)&v247);
            v157 = 0;
            v245 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v246 = v196;
            sub_1A5130D80(&v245, (uint64_t)&v249, (uint64_t)&v248, (uint64_t)&v247);
            v156 = 0;
            v245 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5138C24;
            v246 = v197;
            sub_1A5130D80(&v245, (uint64_t)&v249, (uint64_t)&v248, (uint64_t)&v247);
            v155 = 0;
            v245 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v246 = v198;
            sub_1A5130D80(&v245, (uint64_t)&v249, (uint64_t)&v248, (uint64_t)&v247);
            v154 = 0;
            v245 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v246 = v199;
            sub_1A5130D80(&v245, (uint64_t)&v249, (uint64_t)&v248, (uint64_t)&v247);
            v153 = 0;
            v245 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5138C24;
            v246 = v201;
            sub_1A5130D80(&v245, (uint64_t)&v249, (uint64_t)&v248, (uint64_t)&v247);
            v152 = 0;
            _os_log_impl(&dword_1A4F90000, v204, (os_log_type_t)v205, "%hx: %ld out of %ld are still running after %ld minute(s).", v166, v179);
            v151 = 0;
            sub_1A5130DC4(v167);
            sub_1A5130DC4(v168);
            sub_1A594C330();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            v163 = v152;
          }
        }
        else
        {
          v52 = v224;
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          v163 = v52;
        }
        v149 = v163;

        v150 = (void (*)(char *, uint64_t))v226[1];
        v150(v230, v225);
        if (v174 > 5)
        {
          v54 = v228;
          v55 = sub_1A51455C0();
          v173(v54, v55, v225);
          swift_retain();
          swift_retain();
          swift_retain();
          v128 = 7;
          v123 = swift_allocObject();
          *(_QWORD *)(v123 + 16) = v174;
          swift_retain();
          v147 = sub_1A594A74C();
          v148 = sub_1A594C018();
          v254[1] = (_BYTE *)46;
          sub_1A594B880();
          v119 = v255;
          v125 = 17;
          v130 = swift_allocObject();
          *(_BYTE *)(v130 + 16) = 0;
          v131 = swift_allocObject();
          *(_BYTE *)(v131 + 16) = 2;
          v127 = 32;
          v56 = swift_allocObject();
          v57 = v218;
          v120 = v56;
          *(_QWORD *)(v56 + 16) = sub_1A5157878;
          *(_QWORD *)(v56 + 24) = v57;
          v58 = swift_allocObject();
          v59 = v120;
          v132 = v58;
          *(_QWORD *)(v58 + 16) = sub_1A5157984;
          *(_QWORD *)(v58 + 24) = v59;
          v133 = swift_allocObject();
          *(_BYTE *)(v133 + 16) = 0;
          v134 = swift_allocObject();
          v126 = 8;
          *(_BYTE *)(v134 + 16) = 8;
          v60 = swift_allocObject();
          v61 = v218;
          v121 = v60;
          *(_QWORD *)(v60 + 16) = sub_1A5159254;
          *(_QWORD *)(v60 + 24) = v61;
          v62 = swift_allocObject();
          v63 = v121;
          v135 = v62;
          *(_QWORD *)(v62 + 16) = sub_1A5138BDC;
          *(_QWORD *)(v62 + 24) = v63;
          v136 = swift_allocObject();
          *(_BYTE *)(v136 + 16) = 0;
          v137 = swift_allocObject();
          *(_BYTE *)(v137 + 16) = v126;
          v64 = swift_allocObject();
          v65 = v218;
          v122 = v64;
          *(_QWORD *)(v64 + 16) = sub_1A515925C;
          *(_QWORD *)(v64 + 24) = v65;
          v66 = swift_allocObject();
          v67 = v122;
          v138 = v66;
          *(_QWORD *)(v66 + 16) = sub_1A5138BDC;
          *(_QWORD *)(v66 + 24) = v67;
          v139 = swift_allocObject();
          *(_BYTE *)(v139 + 16) = 0;
          v140 = swift_allocObject();
          *(_BYTE *)(v140 + 16) = v126;
          v68 = swift_allocObject();
          v69 = v123;
          v124 = v68;
          *(_QWORD *)(v68 + 16) = sub_1A5158BAC;
          *(_QWORD *)(v68 + 24) = v69;
          v70 = swift_allocObject();
          v71 = v124;
          v141 = v70;
          *(_QWORD *)(v70 + 16) = sub_1A5138BDC;
          *(_QWORD *)(v70 + 24) = v71;
          v142 = swift_allocObject();
          *(_BYTE *)(v142 + 16) = 32;
          v143 = swift_allocObject();
          *(_BYTE *)(v143 + 16) = v126;
          v72 = swift_allocObject();
          v73 = v218;
          v129 = v72;
          *(_QWORD *)(v72 + 16) = sub_1A51595D4;
          *(_QWORD *)(v72 + 24) = v73;
          v74 = swift_allocObject();
          v75 = v129;
          v145 = v74;
          *(_QWORD *)(v74 + 16) = sub_1A5130F5C;
          *(_QWORD *)(v74 + 24) = v75;
          v144 = sub_1A594CD14();
          v146 = v76;
          swift_retain();
          v77 = v130;
          v78 = v146;
          *v146 = sub_1A5131290;
          v78[1] = v77;
          swift_retain();
          v79 = v131;
          v80 = v146;
          v146[2] = sub_1A5131290;
          v80[3] = v79;
          swift_retain();
          v81 = v132;
          v82 = v146;
          v146[4] = sub_1A51579CC;
          v82[5] = v81;
          swift_retain();
          v83 = v133;
          v84 = v146;
          v146[6] = sub_1A5131290;
          v84[7] = v83;
          swift_retain();
          v85 = v134;
          v86 = v146;
          v146[8] = sub_1A5131290;
          v86[9] = v85;
          swift_retain();
          v87 = v135;
          v88 = v146;
          v146[10] = sub_1A5138C24;
          v88[11] = v87;
          swift_retain();
          v89 = v136;
          v90 = v146;
          v146[12] = sub_1A5131290;
          v90[13] = v89;
          swift_retain();
          v91 = v137;
          v92 = v146;
          v146[14] = sub_1A5131290;
          v92[15] = v91;
          swift_retain();
          v93 = v138;
          v94 = v146;
          v146[16] = sub_1A5138C24;
          v94[17] = v93;
          swift_retain();
          v95 = v139;
          v96 = v146;
          v146[18] = sub_1A5131290;
          v96[19] = v95;
          swift_retain();
          v97 = v140;
          v98 = v146;
          v146[20] = sub_1A5131290;
          v98[21] = v97;
          swift_retain();
          v99 = v141;
          v100 = v146;
          v146[22] = sub_1A5138C24;
          v100[23] = v99;
          swift_retain();
          v101 = v142;
          v102 = v146;
          v146[24] = sub_1A5131290;
          v102[25] = v101;
          swift_retain();
          v103 = v143;
          v104 = v146;
          v146[26] = sub_1A5131290;
          v104[27] = v103;
          swift_retain();
          v105 = v145;
          v106 = v146;
          v146[28] = sub_1A5133578;
          v106[29] = v105;
          sub_1A5113324();
          swift_bridgeObjectRelease();
          if (os_log_type_enabled(v147, (os_log_type_t)v148))
          {
            v107 = v149;
            v112 = (uint8_t *)sub_1A594C348();
            v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
            v113 = sub_1A5130D14(0);
            v114 = sub_1A5130D14(1);
            v115 = v254;
            v254[0] = v112;
            v116 = &v253;
            v253 = v113;
            v117 = &v252;
            v252 = v114;
            sub_1A5130D6C(2, v254);
            sub_1A5130D6C(5, v115);
            v250 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v251 = v130;
            sub_1A5130D80(&v250, (uint64_t)v115, (uint64_t)v116, (uint64_t)v117);
            v118 = v107;
            if (v107)
            {
              __break(1u);
            }
            else
            {
              v250 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
              v251 = v131;
              sub_1A5130D80(&v250, (uint64_t)v254, (uint64_t)&v253, (uint64_t)&v252);
              v110 = 0;
              v108 = v110;
              v250 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A51579CC;
              v251 = v132;
              sub_1A5130D80(&v250, (uint64_t)v254, (uint64_t)&v253, (uint64_t)&v252);
              v109[11] = v108;
              v250 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
              v251 = v133;
              sub_1A5130D80(&v250, (uint64_t)v254, (uint64_t)&v253, (uint64_t)&v252);
              v109[10] = 0;
              v250 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
              v251 = v134;
              sub_1A5130D80(&v250, (uint64_t)v254, (uint64_t)&v253, (uint64_t)&v252);
              v109[9] = 0;
              v250 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5138C24;
              v251 = v135;
              sub_1A5130D80(&v250, (uint64_t)v254, (uint64_t)&v253, (uint64_t)&v252);
              v109[8] = 0;
              v250 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
              v251 = v136;
              sub_1A5130D80(&v250, (uint64_t)v254, (uint64_t)&v253, (uint64_t)&v252);
              v109[7] = 0;
              v250 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
              v251 = v137;
              sub_1A5130D80(&v250, (uint64_t)v254, (uint64_t)&v253, (uint64_t)&v252);
              v109[6] = 0;
              v250 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5138C24;
              v251 = v138;
              sub_1A5130D80(&v250, (uint64_t)v254, (uint64_t)&v253, (uint64_t)&v252);
              v109[5] = 0;
              v250 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
              v251 = v139;
              sub_1A5130D80(&v250, (uint64_t)v254, (uint64_t)&v253, (uint64_t)&v252);
              v109[4] = 0;
              v250 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
              v251 = v140;
              sub_1A5130D80(&v250, (uint64_t)v254, (uint64_t)&v253, (uint64_t)&v252);
              v109[3] = 0;
              v250 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5138C24;
              v251 = v141;
              sub_1A5130D80(&v250, (uint64_t)v254, (uint64_t)&v253, (uint64_t)&v252);
              v109[2] = 0;
              v250 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
              v251 = v142;
              sub_1A5130D80(&v250, (uint64_t)v254, (uint64_t)&v253, (uint64_t)&v252);
              v109[1] = 0;
              v250 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
              v251 = v143;
              sub_1A5130D80(&v250, (uint64_t)v254, (uint64_t)&v253, (uint64_t)&v252);
              v109[0] = 0;
              v250 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5133578;
              v251 = v145;
              sub_1A5130D80(&v250, (uint64_t)v254, (uint64_t)&v253, (uint64_t)&v252);
              _os_log_impl(&dword_1A4F90000, v147, (os_log_type_t)v148, "%hx: %ld out of %ld are still running after %ld minute(s): %s", v112, v119);
              sub_1A5130DC4(v113);
              sub_1A5130DC4(v114);
              sub_1A594C330();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
            }
          }
          else
          {
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
          }

          v150(v228, v225);
        }
      }
      else
      {
        v212 = v215;
        v211 = v215;
        v244 = v215;
        swift_bridgeObjectRelease();
        sub_1A51494E4(v211);
      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1A5153988()
{
  uint64_t v1;

  swift_beginAccess();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_endAccess();
  v1 = sub_1A51539F4();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1A51539F4()
{
  uint64_t v1;

  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE799CF8);
  sub_1A51599C4();
  sub_1A594B7CC();
  sub_1A5110C34();
  return v1;
}

uint64_t sub_1A5153AAC(uint64_t a1)
{
  uint64_t v3;
  uint64_t v4;

  swift_beginAccess();
  v3 = *(_QWORD *)(a1 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_endAccess();
  v4 = sub_1A5153B18(v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1A5153B18(uint64_t a1)
{
  uint64_t v3;

  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v3 = MEMORY[0x1A85ADEB4](a1, &unk_1E4E85F50);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1A5153B6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v25 = a1;
  v23 = sub_1A594CCFC();
  v24 = v1;
  sub_1A594B568();
  sub_1A594CCF0();
  swift_bridgeObjectRelease();
  v18 = MEMORY[0x1A85B1A0C](a1);
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE79A490);
  sub_1A512DA08((void (*)(char *, char *))sub_1A5153EA8, 0, v2, MEMORY[0x1E0DEDCE8], MEMORY[0x1E0DEA968], v9, (uint64_t)&v19);
  sub_1A5138D80((id *)&v18);
  v16 = v19;
  v17 = v20;
  if (v20)
  {
    v21 = v16;
    v22 = v17;
  }
  else
  {
    v21 = sub_1A594B568();
    v22 = v3;
    sub_1A5139FD8();
  }
  v14 = v21;
  v15 = v22;
  v7 = MEMORY[0x1E0DEA968];
  sub_1A594CCE4();
  sub_1A5139FD8();
  sub_1A594B568();
  sub_1A594CCF0();
  swift_bridgeObjectRelease();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE79A4D8);
  sub_1A512DA08((void (*)(char *, char *))sub_1A51540B4, 0, v4, MEMORY[0x1E0DEDCE8], v7, v9, (uint64_t)&v10);
  if (v11)
  {
    v12 = v10;
    v13 = v11;
  }
  else
  {
    v12 = sub_1A594B568();
    v13 = v5;
    sub_1A5139FD8();
  }
  sub_1A594CCE4();
  sub_1A5139FD8();
  sub_1A594B568();
  sub_1A594CCF0();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5139FD8();
  return sub_1A594B550();
}

uint64_t sub_1A5153EA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v2;

  sub_1A594CCFC();
  sub_1A594B568();
  sub_1A594CCF0();
  swift_bridgeObjectRelease();
  sub_1A594CCD8();
  sub_1A594B568();
  sub_1A594CCF0();
  swift_bridgeObjectRelease();
  sub_1A594CCD8();
  sub_1A594B568();
  sub_1A594CCF0();
  swift_bridgeObjectRelease();
  sub_1A514BD64();
  sub_1A594CCD8();
  sub_1A594B568();
  sub_1A594CCF0();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5139FD8();
  result = sub_1A594B550();
  *a1 = result;
  a1[1] = v2;
  return result;
}

void sub_1A51540B4(char *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  sub_1A514BA24(*a1);
  *a2 = v2;
  a2[1] = v3;
}

uint64_t sub_1A51540F4()
{
  unint64_t v0;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_beginAccess();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_endAccess();
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE799CF8);
  v0 = sub_1A51586C8();
  sub_1A5127FA4((void (*)(char *, char *))sub_1A5154258, 0, v3, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEDCE8], v0, MEMORY[0x1E0DEDD18], v4);
  sub_1A5110C34();
  sub_1A594B568();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE799A30);
  sub_1A515A8A0();
  v2 = sub_1A594B268();
  swift_bridgeObjectRelease();
  sub_1A5110C34();
  return v2;
}

uint64_t sub_1A5154258@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1A5153B6C(a1);
  *a2 = result;
  a2[1] = v3;
  return result;
}

uint64_t sub_1A5154298(uint64_t a1)
{
  uint64_t v3;
  uint64_t v4;

  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE799CF8);
  sub_1A51599C4();
  sub_1A594B76C();
  sub_1A5110C34();
  v4 = MEMORY[0x1A85ADEB4]();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v3 = MEMORY[0x1A85ADEB4](a1, &unk_1E4E85F50);
  swift_bridgeObjectRelease();
  if (v4 == v3)
  {
    return sub_1A51546D4();
  }
  else
  {
    swift_bridgeObjectRelease();
    return 5;
  }
}

uint64_t sub_1A51543D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  char v4;
  void *v5;
  uint64_t v7;
  _BYTE v8[16];
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v14 = 0;
  v15 = 0;
  v16 = 0;
  v9 = 0;
  v17 = a1;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v7 = MEMORY[0x1A85ADEB4](a1, &unk_1E4E85F50);
  swift_bridgeObjectRelease();
  if (v7 < 0)
  {
    sub_1A594C9B4();
    __break(1u);
  }
  v12 = 0;
  v13 = v7;
  v14 = sub_1A594BEB0();
  v15 = v1;
  v16 = v2;
  while (1)
  {
    result = sub_1A594C93C();
    v10 = result;
    v11 = v4 & 1;
    if ((v4 & 1) != 0)
      break;
    v9 = result;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594BB2C();
    swift_bridgeObjectRelease();
    v5 = (void *)MEMORY[0x1A85B1A0C](v8);
    sub_1A5159A34();
    if (v5)
    {
      sub_1A514C340();

    }
  }
  return result;
}

uint64_t sub_1A51545B8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A5154600();
  *a1 = result;
  return result;
}

uint64_t sub_1A5154600()
{
  uint64_t v0;
  BOOL v2;
  uint64_t v4;
  uint64_t v5;

  v5 = v0;
  if (*(_BYTE *)(v0 + 8) == 5)
  {
    v4 = MEMORY[0x1A85B1A0C]();
    v2 = v4 == 0;
    sub_1A5138D80((id *)&v4);
    if (v2)
      return 3;
    else
      return 5;
  }
  else
  {
    return *(unsigned __int8 *)(v0 + 8);
  }
}

uint64_t sub_1A51546D4()
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unsigned __int8 v4;

  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE799D20);
  sub_1A5159A58();
  v3 = sub_1A594BE5C();
  sub_1A5110C34();
  if ((v3 & 1) != 0)
  {
    v4 = 0;
  }
  else
  {
    sub_1A5159AC8();
    sub_1A5159B38();
    if ((sub_1A594B85C() & 1) != 0)
    {
      if ((sub_1A594B760() & 1) != 0)
      {
        v4 = 0;
      }
      else
      {
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A5159BA4();
        v1 = sub_1A594C7F8();
        v4 = sub_1A51546D4(v1);
      }
    }
    else if ((sub_1A594B85C() & 1) != 0)
    {
      if ((sub_1A594B760() & 1) != 0)
      {
        v4 = 1;
      }
      else
      {
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A5159BA4();
        v2 = sub_1A594C7F8();
        v4 = sub_1A51546D4(v2);
      }
    }
    else if ((sub_1A594B85C() & 1) != 0)
    {
      v4 = 3;
    }
    else
    {
      v4 = 2;
    }
  }
  swift_bridgeObjectRelease();
  return v4;
}

_BYTE *sub_1A51549AC(_QWORD *a1, void *a2)
{
  _BYTE *result;
  BOOL v4;
  BOOL v5;
  _BYTE v8[16];
  id v9[3];

  v9[2] = a1;
  v9[1] = a2;
  v9[0] = (id)MEMORY[0x1A85B1A0C]();
  v5 = v9[0] != 0;
  sub_1A5138D80(v9);
  sub_1A515A864((uint64_t)a2, (uint64_t)v8);
  v4 = v5 && v8[8] == 5;
  result = v8;
  sub_1A5159A34();
  if (v4)
  {
    if (__OFADD__(*a1, 1))
      __break(1u);
    else
      ++*a1;
  }
  return result;
}

uint64_t sub_1A5154AE8()
{
  sub_1A515812C();
  return sub_1A594CD74() & 1;
}

uint64_t sub_1A5154B58()
{
  sub_1A5159B38();
  return (sub_1A594B37C() ^ 1) & 1;
}

uint64_t sub_1A5154BD0()
{
  sub_1A515812C();
  return sub_1A594CD74() & 1;
}

uint64_t sub_1A5154C44()
{
  sub_1A5159B38();
  return (sub_1A594B37C() ^ 1) & 1;
}

uint64_t sub_1A5154CC0()
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_retain();
    sub_1A5139FB0();
    swift_endAccess();
    sub_1A5154D74();
    return swift_release();
  }
  else
  {
    sub_1A5139FB0();
    return swift_endAccess();
  }
}

void sub_1A5154D74()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD v17[5];
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE **v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t *v28;
  uint32_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  NSObject *v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  unint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  int v54;
  uint64_t (*v55)(uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  uint64_t v60;
  uint32_t v61;
  uint64_t v62;

  v62 = 0;
  v43 = 0;
  v44 = 0;
  v45 = sub_1A594A764();
  v46 = *(_QWORD *)(v45 - 8);
  v47 = (*(_QWORD *)(v46 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](0);
  v48 = (char *)v17 - v47;
  v52 = sub_1A594AED8();
  v51 = *(_QWORD *)(v52 - 8);
  v49 = (*(_QWORD *)(v51 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v52);
  v53 = (_QWORD *)((char *)v17 - v49);
  v62 = v0;
  swift_retain();
  v50 = *(id *)(v0
              + OBJC_IVAR____TtCE7MessageCSo30MFBackFillMessageBodySchedulerP33_8C94728D29B9D9CACC7F5FFB5564322B8Activity_queue);
  v1 = v50;
  v2 = v51;
  *v53 = v50;
  (*(void (**)(void))(v2 + 104))();
  v54 = sub_1A594AEF0();
  (*(void (**)(_QWORD *, uint64_t))(v51 + 8))(v53, v52);
  if ((v54 & 1) != 0)
  {
    v3 = v48;
    swift_release();
    v4 = sub_1A51455C0();
    (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v3, v4, v45);
    swift_retain();
    v40 = sub_1A594A74C();
    v41 = sub_1A594C00C();
    v28 = &v60;
    v60 = 6;
    v26 = sub_1A5130F74();
    v27 = sub_1A5130FDC();
    sub_1A5131044();
    sub_1A594B880();
    v29 = v61;
    v30 = 17;
    v32 = 7;
    v34 = swift_allocObject();
    *(_BYTE *)(v34 + 16) = 0;
    v35 = swift_allocObject();
    *(_BYTE *)(v35 + 16) = 2;
    v31 = 32;
    v5 = swift_allocObject();
    v6 = v42;
    v33 = v5;
    *(_QWORD *)(v5 + 16) = sub_1A5157878;
    *(_QWORD *)(v5 + 24) = v6;
    v7 = swift_allocObject();
    v8 = v33;
    v37 = v7;
    *(_QWORD *)(v7 + 16) = sub_1A5157984;
    *(_QWORD *)(v7 + 24) = v8;
    v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A48D0);
    v36 = sub_1A594CD14();
    v38 = v9;
    swift_retain();
    v10 = v34;
    v11 = v38;
    *v38 = sub_1A5131290;
    v11[1] = v10;
    swift_retain();
    v12 = v35;
    v13 = v38;
    v38[2] = sub_1A5131290;
    v13[3] = v12;
    swift_retain();
    v14 = v37;
    v15 = v38;
    v38[4] = sub_1A51579CC;
    v15[5] = v14;
    sub_1A5113324();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v40, (os_log_type_t)v41))
    {
      v16 = v43;
      v19 = (uint8_t *)sub_1A594C348();
      v17[4] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
      v18 = 0;
      v20 = sub_1A5130D14(0);
      v21 = sub_1A5130D14(v18);
      v22 = &v59;
      v59 = v19;
      v23 = &v58;
      v58 = v20;
      v24 = &v57;
      v57 = v21;
      sub_1A5130D6C(0, &v59);
      sub_1A5130D6C(1, v22);
      v55 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
      v56 = v34;
      sub_1A5130D80(&v55, (uint64_t)v22, (uint64_t)v23, (uint64_t)v24);
      v25 = v16;
      if (v16)
      {
        __break(1u);
      }
      else
      {
        v55 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v56 = v35;
        sub_1A5130D80(&v55, (uint64_t)&v59, (uint64_t)&v58, (uint64_t)&v57);
        v17[2] = 0;
        v55 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A51579CC;
        v56 = v37;
        sub_1A5130D80(&v55, (uint64_t)&v59, (uint64_t)&v58, (uint64_t)&v57);
        _os_log_impl(&dword_1A4F90000, v40, (os_log_type_t)v41, "%hx: Timer fired", v19, v29);
        v17[1] = 0;
        sub_1A5130DC4(v20);
        sub_1A5130DC4(v21);
        sub_1A594C330();
        swift_release();
        swift_release();
        swift_release();
      }
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
    }

    (*(void (**)(char *, uint64_t))(v46 + 8))(v48, v45);
    if (sub_1A51503BC())
      sub_1A51554F0();
    sub_1A51513E0();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1A51553FC()
{
  return sub_1A594AD4C();
}

uint64_t sub_1A515541C()
{
  sub_1A537B24C(0);
  sub_1A594AD34();
  sub_1A514456C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A19F8);
  sub_1A51445DC();
  return sub_1A594C5C4();
}

uint64_t sub_1A51554B4()
{
  swift_getObjectType();
  return sub_1A594C120();
}

unint64_t sub_1A51554F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  unint64_t result;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39[2];
  uint64_t v40;
  void *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t i;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE **v58;
  uint64_t *v59;
  uint64_t *v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t *v64;
  uint32_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  NSObject *v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint8_t *v86;
  uint64_t v87;
  uint64_t v88;
  _BYTE **v89;
  uint64_t *v90;
  uint64_t *v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t *v95;
  uint32_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  NSObject *v107;
  int v108;
  char *v109;
  int v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  char *v117;
  unint64_t v118;
  char *v119;
  unint64_t v120;
  id v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  unsigned int v125;
  uint64_t (*v126)(uint64_t, uint64_t, uint64_t);
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _BYTE *v130;
  uint64_t v131;
  uint32_t v132;
  uint64_t (*v133)(uint64_t, uint64_t, uint64_t);
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _BYTE *v137;
  void *v138;
  void *v139;
  uint64_t v140;
  _QWORD v141[2];
  char v142;
  char v143;
  uint64_t v144;
  uint32_t v145;
  char v146;
  uint64_t v147;

  v147 = 0;
  v141[0] = 0;
  v141[1] = 0;
  v138 = 0;
  v112 = 0;
  v113 = 0;
  v114 = sub_1A594A764();
  v115 = *(_QWORD *)(v114 - 8);
  v116 = (*(_QWORD *)(v115 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1 = MEMORY[0x1E0C80A78](0);
  v117 = (char *)v39 - v116;
  v118 = (v2 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v1);
  v119 = (char *)v39 - v118;
  v123 = sub_1A594AED8();
  v122 = *(_QWORD *)(v123 - 8);
  v120 = (*(_QWORD *)(v122 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v123);
  v124 = (id *)((char *)v39 - v120);
  v147 = v0;
  swift_retain();
  v121 = *(id *)(v0
               + OBJC_IVAR____TtCE7MessageCSo30MFBackFillMessageBodySchedulerP33_8C94728D29B9D9CACC7F5FFB5564322B8Activity_queue);
  v3 = v121;
  v4 = v122;
  *v124 = v121;
  (*(void (**)(void))(v4 + 104))();
  v125 = sub_1A594AEF0();
  (*(void (**)(_QWORD *, uint64_t))(v122 + 8))(v124, v123);
  result = v125;
  if ((v125 & 1) != 0)
  {
    swift_release();
    v109 = &v146;
    swift_beginAccess();
    v110 = *(unsigned __int8 *)(v111 + 49);
    swift_endAccess();
    if ((v110 & 1) != 0)
    {
      v6 = v119;
      v7 = sub_1A51455C0();
      (*(void (**)(char *, uint64_t, uint64_t))(v115 + 16))(v6, v7, v114);
      swift_retain();
      v107 = sub_1A594A74C();
      v108 = sub_1A594C030();
      v95 = &v131;
      v131 = 6;
      v93 = sub_1A5130F74();
      v94 = sub_1A5130FDC();
      sub_1A5131044();
      sub_1A594B880();
      v96 = v132;
      v97 = 17;
      v99 = 7;
      v101 = swift_allocObject();
      *(_BYTE *)(v101 + 16) = 0;
      v102 = swift_allocObject();
      *(_BYTE *)(v102 + 16) = 2;
      v98 = 32;
      v8 = swift_allocObject();
      v9 = v111;
      v100 = v8;
      *(_QWORD *)(v8 + 16) = sub_1A5157878;
      *(_QWORD *)(v8 + 24) = v9;
      v10 = swift_allocObject();
      v11 = v100;
      v104 = v10;
      *(_QWORD *)(v10 + 16) = sub_1A5157984;
      *(_QWORD *)(v10 + 24) = v11;
      v106 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A48D0);
      v103 = sub_1A594CD14();
      v105 = v12;
      swift_retain();
      v13 = v101;
      v14 = v105;
      *v105 = sub_1A5131290;
      v14[1] = v13;
      swift_retain();
      v15 = v102;
      v16 = v105;
      v105[2] = sub_1A5131290;
      v16[3] = v15;
      swift_retain();
      v17 = v104;
      v18 = v105;
      v105[4] = sub_1A51579CC;
      v18[5] = v17;
      sub_1A5113324();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v107, (os_log_type_t)v108))
      {
        v19 = v112;
        v86 = (uint8_t *)sub_1A594C348();
        v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
        v85 = 0;
        v87 = sub_1A5130D14(0);
        v88 = sub_1A5130D14(v85);
        v89 = &v130;
        v130 = v86;
        v90 = &v129;
        v129 = v87;
        v91 = &v128;
        v128 = v88;
        sub_1A5130D6C(0, &v130);
        sub_1A5130D6C(1, v89);
        v126 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v127 = v101;
        sub_1A5130D80(&v126, (uint64_t)v89, (uint64_t)v90, (uint64_t)v91);
        v92 = v19;
        if (v19)
        {
          __break(1u);
        }
        else
        {
          v126 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v127 = v102;
          sub_1A5130D80(&v126, (uint64_t)&v130, (uint64_t)&v129, (uint64_t)&v128);
          v82 = 0;
          v21 = v82;
          v126 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A51579CC;
          v127 = v104;
          sub_1A5130D80(&v126, (uint64_t)&v130, (uint64_t)&v129, (uint64_t)&v128);
          v81 = v21;
          _os_log_impl(&dword_1A4F90000, v107, (os_log_type_t)v108, "%hx: Still waiting for work to be deferred.", v86, v96);
          v80 = 0;
          sub_1A5130DC4(v87);
          sub_1A5130DC4(v88);
          sub_1A594C330();
          swift_release();
          swift_release();
          swift_release();
          v83 = v81;
        }
      }
      else
      {
        v20 = v112;
        swift_release();
        swift_release();
        swift_release();
        v83 = v20;
      }
      v78 = v83;

      (*(void (**)(char *, uint64_t))(v115 + 8))(v119, v114);
      v79 = v78;
    }
    else
    {
      v22 = v117;
      v23 = sub_1A51455C0();
      (*(void (**)(char *, uint64_t, uint64_t))(v115 + 16))(v22, v23, v114);
      swift_retain();
      v76 = sub_1A594A74C();
      v77 = sub_1A594C030();
      v64 = &v144;
      v144 = 6;
      v62 = sub_1A5130F74();
      v63 = sub_1A5130FDC();
      sub_1A5131044();
      sub_1A594B880();
      v65 = v145;
      v66 = 17;
      v68 = 7;
      v70 = swift_allocObject();
      *(_BYTE *)(v70 + 16) = 0;
      v71 = swift_allocObject();
      *(_BYTE *)(v71 + 16) = 2;
      v67 = 32;
      v24 = swift_allocObject();
      v25 = v111;
      v69 = v24;
      *(_QWORD *)(v24 + 16) = sub_1A5157878;
      *(_QWORD *)(v24 + 24) = v25;
      v26 = swift_allocObject();
      v27 = v69;
      v73 = v26;
      *(_QWORD *)(v26 + 16) = sub_1A5157984;
      *(_QWORD *)(v26 + 24) = v27;
      v75 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A48D0);
      v72 = sub_1A594CD14();
      v74 = v28;
      swift_retain();
      v29 = v70;
      v30 = v74;
      *v74 = sub_1A5131290;
      v30[1] = v29;
      swift_retain();
      v31 = v71;
      v32 = v74;
      v74[2] = sub_1A5131290;
      v32[3] = v31;
      swift_retain();
      v33 = v73;
      v34 = v74;
      v74[4] = sub_1A51579CC;
      v34[5] = v33;
      sub_1A5113324();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v76, (os_log_type_t)v77))
      {
        v35 = v112;
        v55 = (uint8_t *)sub_1A594C348();
        v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
        v54 = 0;
        v56 = sub_1A5130D14(0);
        v57 = sub_1A5130D14(v54);
        v58 = &v137;
        v137 = v55;
        v59 = &v136;
        v136 = v56;
        v60 = &v135;
        v135 = v57;
        sub_1A5130D6C(0, &v137);
        sub_1A5130D6C(1, v58);
        v133 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
        v134 = v70;
        sub_1A5130D80(&v133, (uint64_t)v58, (uint64_t)v59, (uint64_t)v60);
        v61 = v35;
        if (v35)
        {
          __break(1u);
        }
        else
        {
          v133 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v134 = v71;
          sub_1A5130D80(&v133, (uint64_t)&v137, (uint64_t)&v136, (uint64_t)&v135);
          v51 = 0;
          v37 = v51;
          v133 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A51579CC;
          v134 = v73;
          sub_1A5130D80(&v133, (uint64_t)&v137, (uint64_t)&v136, (uint64_t)&v135);
          v50 = v37;
          _os_log_impl(&dword_1A4F90000, v76, (os_log_type_t)v77, "%hx: Work needs to be deferred.", v55, v65);
          v49 = 0;
          sub_1A5130DC4(v56);
          sub_1A5130DC4(v57);
          sub_1A594C330();
          swift_release();
          swift_release();
          swift_release();
          v52 = v50;
        }
      }
      else
      {
        v36 = v112;
        swift_release();
        swift_release();
        swift_release();
        v52 = v36;
      }
      v48 = v52;

      (*(void (**)(char *, uint64_t))(v115 + 8))(v117, v114);
      v47 = &v143;
      swift_beginAccess();
      *(_BYTE *)(v111 + 49) = 1;
      swift_endAccess();
      v79 = v48;
    }
    v38 = v111;
    v45 = v79;
    v42 = &v142;
    swift_beginAccess();
    v43 = *(_QWORD *)(v38 + 32);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_endAccess();
    sub_1A51543D8(v43);
    swift_bridgeObjectRelease();
    v140 = sub_1A515040C();
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE799AF8);
    sub_1A5158AF0();
    sub_1A594BEA4();
    for (i = v45; ; i = v40)
    {
      v40 = i;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE79AA18);
      sub_1A594C930();
      v41 = v139;
      if (!v139)
        break;
      v39[1] = v41;
      v39[0] = v41;
      v138 = v41;
      swift_getObjectType();
      objc_msgSend(v39[0], sel_stopBackFillingMessageBodyDownload);
      swift_unknownObjectRelease();
    }
    result = (unint64_t)v141;
    sub_1A5110C34();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1A51564CC(void *a1)
{
  free(a1);
}

uint64_t sub_1A51564F0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1A515652C(_xpc_activity_s *a1)
{
  uint64_t v1;

  sub_1A5146078(a1, v1);
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  swift_retain();
  result = a1;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  return result;
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_1A5156590@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, unint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>, unint64_t a10, unint64_t a11)
{
  unsigned int v11;
  uint64_t result;
  char v13[8];
  uint64_t v14;
  uint64_t (*v15)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t@<X8>);
  char *v16;
  uint64_t v17[2];
  uint64_t *v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  int v27;
  unint64_t v28;
  unint64_t v29;
  const char *v30;
  const char *v31;
  const char *v32;
  const char *v33;
  const char *v34;
  const char *v35;
  const char *v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;

  v20 = a9;
  v21 = a1;
  v22 = a2;
  v23 = a3;
  v24 = a4;
  v25 = a6;
  v26 = a7;
  v27 = a8;
  v28 = a10;
  v29 = a11;
  v30 = "Fatal error";
  v31 = "Unexpectedly found nil while unwrapping an Optional value";
  v32 = "Swift/StaticString.swift";
  v33 = "Not enough bits to represent the passed value";
  v34 = "Swift/Integers.swift";
  v35 = "UnsafeBufferPointer with negative count";
  v36 = "Swift/UnsafeBufferPointer.swift";
  v37 = 0;
  v39 = a6;
  v40 = a7;
  v41 = a8;
  v42 = a1;
  v43 = a2;
  v44 = a10;
  v45 = a11;
  if ((a5 & 1) != 0)
  {
    if (v23 <= 0xFFFFFFFF)
    {
      v19 = v23;
      if ((v23 < 0xD800 || v19 > 0xDFFF) && v19 <= 0x10FFFF)
      {
        v18 = v17;
        MEMORY[0x1E0C80A78](v17);
        v15 = sub_1A515A944;
        v16 = &v38;
        sub_1A51569C8((uint64_t (*)(uint64_t *, uint64_t))sub_1A515A984, (uint64_t)v13, v11);
        return (uint64_t)v18;
      }
      v13[0] = 2;
      v14 = 148;
      LODWORD(v15) = 0;
      sub_1A594C9B4();
      __break(1u);
    }
    v13[0] = 2;
    v14 = 3455;
    LODWORD(v15) = 0;
    sub_1A594C9B4();
    __break(1u);
  }
  if (v23)
    v46 = v23;
  else
    v46 = 0;
  v17[0] = v46;
  if (!v46)
  {
    v13[0] = 2;
    v14 = 136;
    LODWORD(v15) = 0;
    sub_1A594C9B4();
    __break(1u);
  }
  if (v24 >= 0)
    return sub_1A5156D0C(v17[0], v24, v25, v26, v27, v21, v22, v28, v20, v29);
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5156954()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A5156990()
{
  return sub_1A5148678();
}

uint64_t sub_1A5156998(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_1A51569C8(uint64_t (*a1)(uint64_t *, uint64_t), uint64_t a2, unsigned int a3)
{
  uint64_t result;
  uint64_t v4;
  unsigned int v5;
  int v6;
  int v7;
  uint64_t v8;

  if (a3 < 0x80uLL)
  {
    if (a3 > 0xFF)
      goto LABEL_12;
    v5 = (a3 + 1);
  }
  else
  {
    v7 = (a3 & 0x3F) << 8;
    if (a3 >> 6 < 0x20uLL)
    {
      v5 = (v7 | (a3 >> 6)) + 33217;
    }
    else
    {
      v6 = (v7 | (a3 >> 6) & 0x3F) << 8;
      if (a3 >> 12 < 0x10uLL)
        v5 = (v6 | (a3 >> 12)) + 8487393;
      else
        v5 = ((a3 >> 18) | ((v6 | (a3 >> 12) & 0x3F) << 8)) - 2122219023;
    }
  }
  v4 = 4 - ((uint64_t)__clz(v5) >> 3);
  v8 = (v5 - 0x101010101010101) & ((1 << ((8 * v4) & 0x3F)) - 1);
  if (v4 >= 0)
    return a1(&v8, v4);
  sub_1A594CA68();
  __break(1u);
LABEL_12:
  result = sub_1A594C9B4();
  __break(1u);
  return result;
}

uint64_t sub_1A5156D0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t a9@<X8>, unint64_t a10)
{
  unsigned int v10;
  uint64_t result;
  char v12[8];
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  const char *v29;
  const char *v30;
  const char *v31;
  const char *v32;
  const char *v33;
  const char *v34;
  const char *v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;

  v20 = a9;
  v21 = a1;
  v22 = a2;
  v23 = a3;
  v24 = a4;
  v25 = a6;
  v26 = a7;
  v27 = a8;
  v28 = a10;
  v29 = "Fatal error";
  v30 = "Unexpectedly found nil while unwrapping an Optional value";
  v31 = "Swift/StaticString.swift";
  v32 = "Not enough bits to represent the passed value";
  v33 = "Swift/Integers.swift";
  v34 = "UnsafeBufferPointer with negative count";
  v35 = "Swift/UnsafeBufferPointer.swift";
  v36 = 0;
  v38 = a6;
  v39 = a7;
  v40 = a1;
  v41 = a2;
  v42 = a8;
  v43 = a10;
  if ((a5 & 1) != 0)
  {
    if (v23 <= 0xFFFFFFFF)
    {
      v19 = v23;
      if ((v23 < 0xD800 || v19 > 0xDFFF) && v19 <= 0x10FFFF)
      {
        v18 = &v16;
        MEMORY[0x1E0C80A78](&v16);
        v14 = sub_1A515A9AC;
        v15 = &v37;
        sub_1A51569C8((uint64_t (*)(uint64_t *, uint64_t))sub_1A515A984, (uint64_t)v12, v10);
        return (uint64_t)v18;
      }
      v12[0] = 2;
      v13 = 148;
      LODWORD(v14) = 0;
      sub_1A594C9B4();
      __break(1u);
    }
    v12[0] = 2;
    v13 = 3455;
    LODWORD(v14) = 0;
    sub_1A594C9B4();
    __break(1u);
  }
  if (v23)
    v44 = v23;
  else
    v44 = 0;
  v17 = v44;
  if (!v44)
  {
    v12[0] = 2;
    v13 = 136;
    LODWORD(v14) = 0;
    sub_1A594C9B4();
    __break(1u);
  }
  if (v24 >= 0)
    return sub_1A51570A0(v17, v24, v25, v26, v21, v22, v27, v28);
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A51570A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, unint64_t a8)
{
  uint64_t result;

  if (!a3)
  {
    sub_1A594C9B4();
    __break(1u);
  }
  if (a4 >= (uint64_t)0xFFFFFFFF80000000)
  {
    if (a4 <= 0x7FFFFFFF)
    {
      if (!a5)
      {
        sub_1A594C9B4();
        __break(1u);
      }
      if (a6 >= (uint64_t)0xFFFFFFFF80000000)
      {
        if (a6 <= 0x7FFFFFFF)
        {
          if (!a1)
          {
            sub_1A594C9B4();
            __break(1u);
          }
          if (a2 >= (uint64_t)0xFFFFFFFF80000000)
          {
            if (a2 <= 0x7FFFFFFF)
            {
              if (a7 <= 0xFFFFFFFF)
              {
                if (a8 <= 0xFFFFFFFF)
                  return _swift_stdlib_reportUnimplementedInitializerInFile();
                sub_1A594C9B4();
                __break(1u);
              }
              sub_1A594C9B4();
              __break(1u);
            }
            sub_1A594C9B4();
            __break(1u);
          }
          sub_1A594C9B4();
          __break(1u);
        }
        sub_1A594C9B4();
        __break(1u);
      }
      sub_1A594C9B4();
      __break(1u);
    }
    sub_1A594C9B4();
    __break(1u);
  }
  result = sub_1A594C9B4();
  __break(1u);
  return result;
}

uint64_t sub_1A51575E8(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = result;
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    if (result > 0)
    {
      sub_1A594C048();
      v1 = sub_1A594BA18();
      *(_QWORD *)(v1 + 16) = v4;
      v3 = v1;
    }
    else
    {
      v2 = MEMORY[0x1E0DEE9D8];
      swift_retain();
      v3 = v2;
    }
    sub_1A594C048();
    return v3;
  }
  return result;
}

uint64_t sub_1A51576A0()
{
  return swift_deallocObject();
}

uint64_t sub_1A51576C8()
{
  return swift_deallocObject();
}

uint64_t sub_1A51576F0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A515772C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t _s8ActivityCMa()
{
  uint64_t v1;

  v1 = qword_1EE79A4E8;
  if (!qword_1EE79A4E8)
    return swift_getSingletonMetadata();
  return v1;
}

uint64_t sub_1A51577CC()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1A5157810()
{
  uint64_t v0;

  sub_1A5148858(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t block_copy_helper_22(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  swift_retain();
  result = a1;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  return result;
}

{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  swift_retain();
  result = a1;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  return result;
}

uint64_t block_destroy_helper_23()
{
  return swift_release();
}

{
  return swift_release();
}

uint64_t sub_1A5157878()
{
  uint64_t v0;

  return sub_1A51493D0(v0);
}

uint64_t sub_1A5157880()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1A51578BC()
{
  uint64_t v0;

  return sub_1A51493E0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1A51578C4()
{
  return swift_deallocObject();
}

uint64_t sub_1A51578EC()
{
  return swift_deallocObject();
}

uint64_t sub_1A5157914@<X0>(uint64_t (*a1)(void)@<X0>, _WORD *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_1A5157948()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5157984@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1A5157914(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_1A5157990()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51579CC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;

  v8 = *(_QWORD *)(v3 + 16);
  v9 = *(_QWORD *)(v3 + 24);
  v4 = sub_1A5157A2C();
  return sub_1A5131308(a1, a2, a3, v8, v9, MEMORY[0x1E0DEE068], v4);
}

unint64_t sub_1A5157A2C()
{
  unint64_t v0;
  uint64_t v2;

  v2 = qword_1EE79B4A0;
  if (!qword_1EE79B4A0)
  {
    v0 = MEMORY[0x1A85B1874](MEMORY[0x1E0DEE0B0], MEMORY[0x1E0DEE068]);
    atomic_store(v0, (unint64_t *)&qword_1EE79B4A0);
    return v0;
  }
  return v2;
}

uint64_t sub_1A5157A94()
{
  return swift_deallocObject();
}

uint64_t sub_1A5157ABC()
{
  return swift_deallocObject();
}

uint64_t sub_1A5157AE4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5157B20()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5157B5C()
{
  return swift_deallocObject();
}

void sub_1A5157B84()
{
  uint64_t v0;

  sub_1A51503A8(*(_BYTE *)(v0 + 16));
}

uint64_t sub_1A5157B8C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5157BB4()
{
  return swift_deallocObject();
}

uint64_t sub_1A5157BDC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5157C18()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5157C54()
{
  return swift_deallocObject();
}

uint64_t sub_1A5157C7C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5157CA4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5157CE0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5157D1C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5157D44()
{
  return swift_deallocObject();
}

uint64_t sub_1A5157D6C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5157D94()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5157DD0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5157E0C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5157E34()
{
  return swift_deallocObject();
}

uint64_t sub_1A5157E5C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5157E98()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5157ED4()
{
  return swift_deallocObject();
}

uint64_t sub_1A5157EFC()
{
  return swift_deallocObject();
}

uint64_t sub_1A5157F24()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5157F60()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5157F9C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5157FC4()
{
  return swift_deallocObject();
}

uint64_t sub_1A5157FEC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5158028()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5158064()
{
  return swift_deallocObject();
}

uint64_t sub_1A515808C()
{
  return swift_deallocObject();
}

uint64_t sub_1A51580B4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51580F0()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1A515812C()
{
  unint64_t v0;
  uint64_t v2;

  v2 = qword_1EE79A4C8;
  if (!qword_1EE79A4C8)
  {
    v0 = MEMORY[0x1A85B1874](&unk_1A599BEE0, &unk_1E4E86020);
    atomic_store(v0, (unint64_t *)&qword_1EE79A4C8);
    return v0;
  }
  return v2;
}

_BYTE *sub_1A5158198(_BYTE *a1)
{
  uint64_t v1;

  return sub_1A514BF4C(a1, *(_BYTE *)(v1 + 16) & 1);
}

void sub_1A51581C0()
{
  sub_1A514C5C4();
}

uint64_t block_copy_helper_178(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  swift_retain();
  result = a1;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  return result;
}

uint64_t block_destroy_helper_179()
{
  return swift_release();
}

uint64_t sub_1A5158224()
{
  return swift_deallocObject();
}

uint64_t sub_1A515824C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5158274()
{
  return swift_deallocObject();
}

uint64_t sub_1A515829C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51582D8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5158314()
{
  return swift_deallocObject();
}

uint64_t sub_1A515833C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5158364()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51583A0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51583DC()
{
  return swift_deallocObject();
}

uint64_t sub_1A5158404()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1A5158440()
{
  uint64_t v0;

  return sub_1A51513D0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1A5158448()
{
  return swift_deallocObject();
}

uint64_t sub_1A5158470()
{
  return swift_deallocObject();
}

uint64_t sub_1A5158498()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51584D4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5158510()
{
  return swift_deallocObject();
}

uint64_t sub_1A5158538()
{
  return swift_deallocObject();
}

uint64_t sub_1A5158560()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A515859C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51585D8()
{
  return swift_deallocObject();
}

uint64_t sub_1A5158600()
{
  return swift_deallocObject();
}

uint64_t sub_1A5158628()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5158664()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51586A0(uint64_t a1)
{
  uint64_t v1;

  return sub_1A5151258(a1, *(void **)(v1 + 16)) & 1;
}

unint64_t sub_1A51586C8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE799D10;
  if (!qword_1EE799D10)
  {
    v0 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EE799CF8);
    v1 = MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF50], v0);
    atomic_store(v1, (unint64_t *)&qword_1EE799D10);
    return v1;
  }
  return v3;
}

uint64_t sub_1A5158738()
{
  return swift_deallocObject();
}

uint64_t sub_1A5158760()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1A515879C()
{
  return swift_deallocObject();
}

uint64_t sub_1A51587C4()
{
  return swift_deallocObject();
}

uint64_t sub_1A51587EC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5158828()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5158864()
{
  return swift_deallocObject();
}

uint64_t sub_1A515888C()
{
  return swift_deallocObject();
}

uint64_t sub_1A51588B4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51588F0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A515892C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5158954()
{
  return swift_deallocObject();
}

uint64_t sub_1A515897C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51589B8()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1A51589F4()
{
  unint64_t v0;
  uint64_t v2;

  v2 = qword_1EE79B498;
  if (!qword_1EE79B498)
  {
    v0 = MEMORY[0x1A85B1874](MEMORY[0x1E0DEE0A0], MEMORY[0x1E0DEE068]);
    atomic_store(v0, (unint64_t *)&qword_1EE79B498);
    return v0;
  }
  return v2;
}

uint64_t sub_1A5158A5C()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_1A5158AA0()
{
  uint64_t v0;

  sub_1A514E7E4(*(_QWORD *)(v0 + 16), *(id *)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

uint64_t block_destroy_helper_328()
{
  return swift_release();
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1A5158AC8()
{
  swift_unknownObjectRelease();
}

unint64_t sub_1A5158AF0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE799B00;
  if (!qword_1EE799B00)
  {
    v0 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE799AF8);
    v1 = MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF50], v0);
    atomic_store(v1, (unint64_t *)&qword_1EE799B00);
    return v1;
  }
  return v3;
}

uint64_t _s7RequestCMa()
{
  return objc_opt_self();
}

uint64_t sub_1A5158B84()
{
  return swift_deallocObject();
}

uint64_t sub_1A5158BAC()
{
  uint64_t v0;

  return nullsub_1(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1A5158BB4()
{
  return swift_deallocObject();
}

uint64_t sub_1A5158BDC()
{
  return swift_deallocObject();
}

uint64_t sub_1A5158C04()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5158C40()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5158C7C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5158CA4()
{
  return swift_deallocObject();
}

uint64_t sub_1A5158CCC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5158D08()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5158D44(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;

  v8 = *(_QWORD *)(v3 + 16);
  v9 = *(_QWORD *)(v3 + 24);
  v4 = sub_1A51426E4();
  return sub_1A5131308(a1, a2, a3, v8, v9, MEMORY[0x1E0DEBB98], v4);
}

unint64_t sub_1A5158DA4()
{
  unint64_t ObjCClassMetadata;
  uint64_t v2;

  v2 = qword_1EE7A4138;
  if (!qword_1EE7A4138)
  {
    objc_opt_self();
    ObjCClassMetadata = swift_getObjCClassMetadata();
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1EE7A4138);
    return ObjCClassMetadata;
  }
  return v2;
}

unint64_t sub_1A5158E08()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE79A120;
  if (!qword_1EE79A120)
  {
    v0 = sub_1A594C0CC();
    v1 = MEMORY[0x1A85B1874](MEMORY[0x1E0DEF948], v0);
    atomic_store(v1, (unint64_t *)&qword_1EE79A120);
    return v1;
  }
  return v3;
}

uint64_t sub_1A5158E78()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A5158EB4()
{
  return sub_1A5154CC0();
}

uint64_t block_copy_helper_367(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  swift_retain();
  result = a1;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  return result;
}

uint64_t block_destroy_helper_368()
{
  return swift_release();
}

char *keypath_get_selector_isActive()
{
  return sel_isActive;
}

uint64_t sub_1A5158F24@<X0>(void **a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1A515102C(a1, a2);
}

uint64_t sub_1A5158F38()
{
  return sub_1A5151090() & 1;
}

unint64_t sub_1A5158F5C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE799DA0;
  if (!qword_1EE799DA0)
  {
    v0 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EE799D88);
    v1 = MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF60], v0);
    atomic_store(v1, (unint64_t *)&qword_1EE799DA0);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5158FCC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE799D98;
  if (!qword_1EE799D98)
  {
    v0 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EE799D88);
    v1 = MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF38], v0);
    atomic_store(v1, (unint64_t *)&qword_1EE799D98);
    return v1;
  }
  return v3;
}

uint64_t sub_1A515903C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A5159078()
{
  uint64_t v0;

  return sub_1A51511F0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1A5159080()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A51590BC()
{
  uint64_t v0;

  return sub_1A5151224(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1A51590C4()
{
  return swift_deallocObject();
}

uint64_t sub_1A51590EC()
{
  return swift_deallocObject();
}

uint64_t sub_1A5159114()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5159150()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A515918C()
{
  return swift_deallocObject();
}

uint64_t sub_1A51591B4()
{
  return swift_deallocObject();
}

uint64_t sub_1A51591DC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5159218()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5159254()
{
  return sub_1A5153988();
}

uint64_t sub_1A515925C()
{
  uint64_t v0;

  return sub_1A5153AAC(v0);
}

uint64_t sub_1A5159264()
{
  return swift_deallocObject();
}

uint64_t sub_1A515928C()
{
  return swift_deallocObject();
}

uint64_t sub_1A51592B4()
{
  return swift_deallocObject();
}

uint64_t sub_1A51592DC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5159318()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5159354()
{
  return swift_deallocObject();
}

uint64_t sub_1A515937C()
{
  return swift_deallocObject();
}

uint64_t sub_1A51593A4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51593E0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A515941C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5159444()
{
  return swift_deallocObject();
}

uint64_t sub_1A515946C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51594A8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51594E4()
{
  return swift_deallocObject();
}

uint64_t sub_1A515950C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5159534()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5159570()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51595AC()
{
  return swift_deallocObject();
}

uint64_t sub_1A51595D4()
{
  return sub_1A51540F4();
}

uint64_t sub_1A51595DC()
{
  return swift_deallocObject();
}

uint64_t sub_1A5159604()
{
  return swift_deallocObject();
}

uint64_t sub_1A515962C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5159668()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51596A4()
{
  return swift_deallocObject();
}

uint64_t sub_1A51596CC()
{
  return swift_deallocObject();
}

uint64_t sub_1A51596F4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5159730()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A515976C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5159794()
{
  return swift_deallocObject();
}

uint64_t sub_1A51597BC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51597F8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5159834()
{
  return swift_deallocObject();
}

uint64_t sub_1A515985C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5159884()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51598C0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A51598FC()
{
  return swift_deallocObject();
}

uint64_t sub_1A5159924()
{
  return swift_deallocObject();
}

uint64_t sub_1A515994C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5159988()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1A51599C4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE799D08;
  if (!qword_1EE799D08)
  {
    v0 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EE799CF8);
    v1 = MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF38], v0);
    atomic_store(v1, (unint64_t *)&qword_1EE799D08);
    return v1;
  }
  return v3;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1A5159A34()
{
  swift_unknownObjectWeakDestroy();
}

unint64_t sub_1A5159A58()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE799D38;
  if (!qword_1EE799D38)
  {
    v0 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EE799D20);
    v1 = MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF50], v0);
    atomic_store(v1, (unint64_t *)&qword_1EE799D38);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5159AC8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE799D30;
  if (!qword_1EE799D30)
  {
    v0 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EE799D20);
    v1 = MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF38], v0);
    atomic_store(v1, (unint64_t *)&qword_1EE799D30);
    return v1;
  }
  return v3;
}

unint64_t sub_1A5159B38()
{
  unint64_t v0;
  uint64_t v2;

  v2 = qword_1EE79A4B8;
  if (!qword_1EE79A4B8)
  {
    v0 = MEMORY[0x1A85B1874](&unk_1A599BEB8, &unk_1E4E86020);
    atomic_store(v0, (unint64_t *)&qword_1EE79A4B8);
    return v0;
  }
  return v2;
}

unint64_t sub_1A5159BA4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE799D40;
  if (!qword_1EE799D40)
  {
    v0 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EE799D20);
    v1 = MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF60], v0);
    atomic_store(v1, (unint64_t *)&qword_1EE799D40);
    return v1;
  }
  return v3;
}

uint64_t sub_1A5159C14()
{
  return swift_deallocObject();
}

uint64_t sub_1A5159C3C()
{
  return swift_deallocObject();
}

uint64_t sub_1A5159C64()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5159CA0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5159CDC()
{
  return swift_deallocObject();
}

uint64_t sub_1A5159D04()
{
  return swift_deallocObject();
}

uint64_t sub_1A5159D2C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5159D68()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5159DA4()
{
  return swift_deallocObject();
}

uint64_t sub_1A5159DCC()
{
  return swift_deallocObject();
}

uint64_t sub_1A5159DF4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5159E30()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t type metadata accessor for MFBackFillMessageBodyScheduler()
{
  unint64_t ObjCClassMetadata;
  uint64_t v2;

  v2 = qword_1EE7A6FF0;
  if (!qword_1EE7A6FF0)
  {
    objc_opt_self();
    ObjCClassMetadata = swift_getObjCClassMetadata();
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1EE7A6FF0);
    return ObjCClassMetadata;
  }
  return v2;
}

uint64_t sub_1A5159ED0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v5;
  int v6;
  unsigned int v7;
  int v8;

  if (a2)
  {
    if (a2 <= 0xFB)
      goto LABEL_15;
    v7 = ((a2 + 4) >> 8) + 1;
    v8 = 1;
    if (v7 >= 0x100)
    {
      if (v7 >= 0x10000)
        v2 = 4;
      else
        v2 = 2;
      v8 = v2;
    }
    if (v8 == 1)
      v6 = a1[1];
    else
      v6 = v8 == 2 ? *(unsigned __int16 *)(a1 + 1) : *(_DWORD *)(a1 + 1);
    if (v6)
    {
      v5 = (*a1 | ((v6 - 1) << 8)) + 251;
    }
    else
    {
LABEL_15:
      v3 = *a1 - 5;
      if (v3 < 0)
        v3 = -1;
      v5 = v3;
    }
  }
  else
  {
    v5 = -1;
  }
  return (v5 + 1);
}

_BYTE *sub_1A515A080(_BYTE *result, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;
  unsigned int v5;
  int v6;
  int v7;

  v7 = 0;
  if (a3 > 0xFB)
  {
    v5 = ((a3 + 4) >> 8) + 1;
    v6 = 1;
    if (v5 >= 0x100)
    {
      if (v5 >= 0x10000)
        v3 = 4;
      else
        v3 = 2;
      v6 = v3;
    }
    v7 = v6;
  }
  if (a2 > 0xFB)
  {
    v4 = ((a2 - 252) >> 8) + 1;
    *result = a2 + 4;
    if (v7)
    {
      if (v7 == 1)
      {
        result[1] = v4;
      }
      else if (v7 == 2)
      {
        *(_WORD *)(result + 1) = v4;
      }
      else
      {
        *(_DWORD *)(result + 1) = v4;
      }
    }
  }
  else
  {
    if (v7)
    {
      if (v7 == 1)
      {
        result[1] = 0;
      }
      else if (v7 == 2)
      {
        *(_WORD *)(result + 1) = 0;
      }
      else
      {
        *(_DWORD *)(result + 1) = 0;
      }
    }
    if (a2)
      *result = a2 + 4;
  }
  return result;
}

void *_s8ActivityC6StatusOMa()
{
  return &unk_1E4E86020;
}

void *_s7RequestC2IDVMa()
{
  return &unk_1E4E85F28;
}

uint64_t sub_1A515A2EC()
{
  return _s8ActivityCMa();
}

uint64_t sub_1A515A304()
{
  unint64_t v0;
  uint64_t updated;

  updated = sub_1A594A0EC();
  if (v0 <= 0x3F)
  {
    updated = swift_updateClassMetadata2();
    if (!updated)
      return 0;
  }
  return updated;
}

void *_s8ActivityC2IDVMa()
{
  return &unk_1E4E85FF8;
}

void *_s7RunningVMa()
{
  return &unk_1E4E85FD0;
}

uint64_t sub_1A515A44C()
{
  return swift_unknownObjectWeakDestroy();
}

uint64_t sub_1A515A460(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  swift_unknownObjectWeakCopyInit();
  result = a1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return result;
}

uint64_t sub_1A515A494(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  swift_unknownObjectWeakCopyAssign();
  result = a1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return result;
}

uint64_t sub_1A515A4C8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  swift_unknownObjectWeakTakeInit();
  result = a1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return result;
}

uint64_t sub_1A515A4FC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  swift_unknownObjectWeakTakeAssign();
  result = a1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return result;
}

uint64_t sub_1A515A530(uint64_t a1, unsigned int a2)
{
  int v2;
  int v3;
  int v5;

  if (a2)
  {
    if (a2 > 0xFA && *(_BYTE *)(a1 + 9))
    {
      v5 = *(_QWORD *)a1 + 250;
    }
    else
    {
      v2 = *(unsigned __int8 *)(a1 + 8) - 5;
      if (v2 < 0)
        v2 = -1;
      v3 = v2 - 1;
      if (v3 < 0)
        v3 = -1;
      v5 = v3;
    }
  }
  else
  {
    v5 = -1;
  }
  return (v5 + 1);
}

uint64_t sub_1A515A68C(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;
  _BYTE *v4;

  v3 = result;
  v4 = (_BYTE *)(result + 9);
  if (a2 > 0xFA)
  {
    result = 0;
    *(_BYTE *)(v3 + 8) = 0;
    *(_QWORD *)v3 = a2 - 251;
    if (a3 >= 0xFB)
      *v4 = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *v4 = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 5;
  }
  return result;
}

void *_s7RunningV7ElementVMa()
{
  return &unk_1E4E85F50;
}

unint64_t sub_1A515A850()
{
  return sub_1A5159B38();
}

uint64_t sub_1A515A864(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  swift_unknownObjectWeakCopyInit();
  result = a2;
  *(_BYTE *)(a2 + 8) = *(_BYTE *)(a1 + 8);
  return result;
}

unint64_t sub_1A515A8A0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE795F78;
  if (!qword_1EE795F78)
  {
    v0 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE799A30);
    v1 = MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF20], v0);
    atomic_store(v1, (unint64_t *)&qword_1EE795F78);
    return v1;
  }
  return v3;
}

id *sub_1A515A910(id *a1)
{

  return a1;
}

uint64_t sub_1A515A944@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_1A5156D0C(a1, a2, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_BYTE *)(v3 + 32), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), *(_QWORD *)(v3 + 56), a3, *(_QWORD *)(v3 + 64));
}

uint64_t sub_1A515A984(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A5156998(a1, a2, *(uint64_t (**)(void))(v2 + 16));
}

uint64_t sub_1A515A9AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A51570A0(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

uint64_t sub_1A515A9C8()
{
  return swift_deallocObject();
}

uint64_t sub_1A515A9F0()
{
  return swift_deallocObject();
}

uint64_t sub_1A515AA18()
{
  return swift_deallocObject();
}

uint64_t sub_1A515AA40()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A515AA7C()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1A515AAB8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE7A4870;
  if (!qword_1EE7A4870)
  {
    v0 = sub_1A594C048();
    v1 = MEMORY[0x1A85B1874](MEMORY[0x1E0DEF828], v0);
    atomic_store(v1, (unint64_t *)&qword_1EE7A4870);
    return v1;
  }
  return v3;
}

unint64_t sub_1A515AB28()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE7A4838;
  if (!qword_1EE7A4838)
  {
    v0 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EE7A47F0);
    v1 = MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF38], v0);
    atomic_store(v1, (unint64_t *)&qword_1EE7A4838);
    return v1;
  }
  return v3;
}

id sub_1A515AB98(void *a1, void *a2)
{
  objc_class *v2;
  id v3;

  v3 = objc_allocWithZone(v2);
  return sub_1A515ABD8(a1, a2);
}

id sub_1A515ABD8(void *a1, void *a2)
{
  char *v2;
  char *v3;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  objc_class *ObjectType;
  id v45;
  id v46;
  id v47;
  objc_super v48;
  uint64_t v49;
  id v50;
  id v51;

  v46 = a1;
  v45 = a2;
  v3 = v2;
  v4 = v46;
  v43 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  v51 = 0;
  v50 = 0;
  v49 = 0;
  v42 = 0;
  v36 = sub_1A594C078();
  v35 = *(_QWORD *)(v36 - 8);
  v26 = (*(_QWORD *)(v35 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](0);
  v41 = (char *)&v25 - v26;
  v29 = sub_1A594C048();
  v27 = (*(_QWORD *)(*(_QWORD *)(v29 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v42);
  v40 = (char *)&v25 - v27;
  v28 = (*(_QWORD *)(*(_QWORD *)(sub_1A594AD70() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v43);
  v39 = (char *)&v25 - v28;
  v50 = v4;
  v49 = v5;
  v7 = v6;
  v8 = v43;
  v9 = v43;
  v10 = v43;
  v11 = v43;
  v12 = v43;
  v51 = v43;
  *(_QWORD *)&v43[OBJC_IVAR____TtCC7Message18PersistenceAdaptor19ClientStateObserver_token] = v42;

  swift_weakInit();
  v13 = v4;
  v14 = v43;
  *(_QWORD *)&v43[OBJC_IVAR____TtCC7Message18PersistenceAdaptor19ClientStateObserver_queue] = v4;

  v15 = v45;
  v16 = v43;
  *(_QWORD *)&v43[OBJC_IVAR____TtCC7Message18PersistenceAdaptor19ClientStateObserver_mailboxPersistence] = v45;

  v34 = sub_1A5144678();
  v30 = sub_1A594C0B4();
  v32 = v17;
  v18 = sub_1A594B568();
  v31 = v19;
  v37 = MEMORY[0x1A85AD9D4](v30, v32, v18);
  v38 = v20;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A594AD58();
  v33 = sub_1A594CD14();
  sub_1A515AAB8();
  sub_1A594C564();
  (*(void (**)(char *, _QWORD, uint64_t))(v35 + 104))(v41, *MEMORY[0x1E0DEF8D8], v36);
  v21 = sub_1A594C0A8();
  v22 = v43;
  *(_QWORD *)&v43[OBJC_IVAR____TtCC7Message18PersistenceAdaptor19ClientStateObserver_observerQueue] = v21;

  v48.receiver = v51;
  v48.super_class = ObjectType;
  v47 = objc_msgSendSuper2(&v48, sel_init);
  v23 = v47;
  v51 = v47;

  return v47;
}

id sub_1A515AEF4()
{
  uint64_t v0;
  id v2;
  objc_super v3;
  uint64_t *v4;
  uint64_t v5;
  objc_super v6;
  uint64_t v7;

  v3.super_class = (Class)swift_getObjectType();
  v7 = v0;
  v4 = (uint64_t *)(v0 + OBJC_IVAR____TtCC7Message18PersistenceAdaptor19ClientStateObserver_token);
  swift_beginAccess();
  v5 = *v4;
  swift_unknownObjectRetain();
  swift_endAccess();
  if (v5)
  {
    v2 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
    swift_unknownObjectRetain();
    swift_getObjectType();
    objc_msgSend(v2, sel_removeObserver_, v5);
    swift_unknownObjectRelease();

    swift_unknownObjectRelease();
  }
  v6 = v3;
  return objc_msgSendSuper2(&v6, sel_dealloc);
}

void sub_1A515B0D0(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  char *v3;
  id v4;
  uint64_t v5;
  id v6;
  char *v7;
  id v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  void *v26;
  id v27;
  uint64_t v28;
  char *v29;
  char *v30;
  id v31;
  id v32;
  _BOOL4 v33;
  _BOOL4 v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  int v54;
  uint64_t v55;
  int v56;
  int v57;
  uint64_t (*v58)(uint64_t);
  void *v59;
  uint64_t (*v60)();
  uint64_t v61;
  char v62;
  uint64_t aBlock;
  int v64;
  int v65;
  uint64_t (*v66)(uint64_t, void *);
  void *v67;
  void (*v68)(uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  char v76;
  char *v77;
  uint64_t v78;

  v48 = a1;
  v78 = 0;
  v77 = 0;
  v43 = 0;
  v39 = sub_1A594AD34();
  v40 = *(_QWORD *)(v39 - 8);
  v41 = (*(_QWORD *)(v40 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](0);
  v42 = (char *)&v13 - v41;
  v44 = sub_1A594AD70();
  v45 = *(_QWORD *)(v44 - 8);
  v46 = (*(_QWORD *)(v45 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v43);
  v47 = (char *)&v13 - v46;
  v52 = sub_1A594AED8();
  v51 = *(_QWORD *)(v52 - 8);
  v49 = (*(_QWORD *)(v51 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v48);
  v53 = (uint64_t *)((char *)&v13 - v49);
  v78 = v2;
  v77 = v1;
  v3 = v1;
  v50 = *(id *)&v1[OBJC_IVAR____TtCC7Message18PersistenceAdaptor19ClientStateObserver_queue];
  v4 = v50;
  v5 = v51;
  *v53 = v50;
  (*(void (**)(void))(v5 + 104))();
  v54 = sub_1A594AEF0();
  (*(void (**)(_QWORD *, uint64_t))(v51 + 8))(v53, v52);
  if ((v54 & 1) != 0)
  {

    v35 = &v38[OBJC_IVAR____TtCC7Message18PersistenceAdaptor19ClientStateObserver_token];
    v36 = &v76;
    swift_beginAccess();
    v37 = *(_QWORD *)v35;
    swift_unknownObjectRetain();
    swift_endAccess();
    v75 = v37;
    v34 = v37 == 0;
    v33 = v34;
    sub_1A5158AC8();
    if (v33)
    {
      swift_retain();
      v29 = &v38[OBJC_IVAR____TtCC7Message18PersistenceAdaptor19ClientStateObserver_persistenceAdaptor];
      v30 = &v74;
      swift_beginAccess();
      swift_weakAssign();
      swift_release();
      swift_endAccess();
      v31 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
      v32 = (id)*MEMORY[0x1E0D1E970];
      v6 = v32;
      v70 = 0;
      v71 = 0;
      v72 = 0;
      v73 = 0;
      v28 = 0;
      v17 = 0;
      v22 = 24;
      v23 = 7;
      v15 = swift_allocObject();
      v13 = v15 + 16;
      v7 = v38;
      v14 = v38;
      swift_unknownObjectWeakInit();

      swift_retain();
      v68 = sub_1A515BB3C;
      v69 = v15;
      v24 = MEMORY[0x1E0C809B0];
      aBlock = MEMORY[0x1E0C809B0];
      v25 = 1107296256;
      v64 = 1107296256;
      v65 = 0;
      v66 = sub_1A515C270;
      v67 = &block_descriptor_1;
      v16 = _Block_copy(&aBlock);
      swift_release();
      swift_release();
      v18 = 0;
      v20 = objc_msgSend(v31, sel_addObserverForName_object_queue_usingBlock_, v32, v17);
      _Block_release(v16);
      swift_unknownObjectRelease();

      v19 = &v38[OBJC_IVAR____TtCC7Message18PersistenceAdaptor19ClientStateObserver_token];
      v21 = &v62;
      swift_beginAccess();
      *(_QWORD *)v19 = v20;
      swift_unknownObjectRelease();
      swift_endAccess();
      v27 = *(id *)&v38[OBJC_IVAR____TtCC7Message18PersistenceAdaptor19ClientStateObserver_observerQueue];
      v8 = v27;
      v9 = v38;
      v10 = swift_allocObject();
      v11 = v24;
      v12 = v25;
      *(_QWORD *)(v10 + 16) = v38;
      v60 = sub_1A515C410;
      v61 = v10;
      v55 = v11;
      v56 = v12;
      v57 = 0;
      v58 = sub_1A5113234;
      v59 = &block_descriptor_6;
      v26 = _Block_copy(&v55);
      sub_1A511327C();
      sub_1A5113290();
      MEMORY[0x1A85AE508](0, v47, v42, v26);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v42, v39);
      (*(void (**)(char *, uint64_t))(v45 + 8))(v47, v44);
      _Block_release(v26);
      swift_release();

    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1A515B8C8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1A515B904(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  id *v6;
  char *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t aBlock;
  int v23;
  int v24;
  uint64_t (*v25)(uint64_t);
  void *v26;
  void (*v27)();
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;

  v16 = a1;
  v15 = a2;
  v31 = 0;
  v30 = 0;
  v10 = 0;
  v11 = sub_1A594AD34();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](0);
  v14 = (char *)&v6 - v13;
  v17 = sub_1A594AD70();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v6 - v19;
  v31 = v2;
  v21 = v3 + 16;
  v30 = v3 + 16;
  swift_beginAccess();
  v29 = (char *)MEMORY[0x1A85B1A0C](v21);
  if (v29)
  {
    v6 = (id *)&v29;
    v7 = v29;
    v4 = v29;
    sub_1A5138D80(v6);
    swift_endAccess();
    v9 = *(id *)&v7[OBJC_IVAR____TtCC7Message18PersistenceAdaptor19ClientStateObserver_observerQueue];
    v5 = v9;

    swift_retain();
    v27 = sub_1A515C93C;
    v28 = v15;
    aBlock = MEMORY[0x1E0C809B0];
    v23 = 1107296256;
    v24 = 0;
    v25 = sub_1A5113234;
    v26 = &block_descriptor_15;
    v8 = _Block_copy(&aBlock);
    sub_1A511327C();
    sub_1A5113290();
    MEMORY[0x1A85AE508](0, v20, v14, v8);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    _Block_release(v8);
    swift_release();

  }
  else
  {
    sub_1A5138D80((id *)&v29);
    swift_endAccess();
  }
}

void sub_1A515BB3C(uint64_t a1)
{
  uint64_t v1;

  sub_1A515B904(a1, v1);
}

void sub_1A515BB44(uint64_t a1)
{
  id v1;
  id v2;
  uint64_t v3;
  id v4[5];

  v3 = a1 + 16;
  v4[4] = (id)(a1 + 16);
  swift_beginAccess();
  v4[0] = (id)MEMORY[0x1A85B1A0C](v3);
  if (v4[0])
  {
    v2 = v4[0];
    v1 = v4[0];
    sub_1A5138D80(v4);
    swift_endAccess();
    sub_1A515BBF8();

  }
  else
  {
    sub_1A5138D80(v4);
    swift_endAccess();
  }
}

uint64_t sub_1A515BBF8()
{
  char *v0;
  char *v1;
  id v2;
  uint64_t v3;
  uint64_t result;
  id v5;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  unint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  unint64_t v31;
  id v32;
  uint64_t v33;
  id v34;
  id v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char *v46;
  unint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t aBlock;
  int v55;
  int v56;
  uint64_t (*v57)(uint64_t);
  void *v58;
  uint64_t (*v59)();
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;

  v67 = 0;
  v66 = 0;
  v63 = 0;
  v37 = 0;
  v61 = 0;
  v42 = 0;
  v38 = sub_1A594AD34();
  v39 = *(_QWORD *)(v38 - 8);
  v40 = (*(_QWORD *)(v39 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](0);
  v41 = (char *)&v11 - v40;
  v43 = sub_1A594AD70();
  v44 = *(_QWORD *)(v43 - 8);
  v45 = (*(_QWORD *)(v44 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v42);
  v46 = (char *)&v11 - v45;
  v50 = sub_1A594AED8();
  v49 = *(_QWORD *)(v50 - 8);
  v47 = (*(_QWORD *)(v49 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v50);
  v51 = (void **)((char *)&v11 - v47);
  v67 = v0;
  v1 = v0;
  v48 = *(id *)&v0[OBJC_IVAR____TtCC7Message18PersistenceAdaptor19ClientStateObserver_observerQueue];
  v2 = v48;
  v3 = v49;
  *v51 = v48;
  (*(void (**)(void))(v3 + 104))();
  v52 = sub_1A594AEF0();
  (*(void (**)(_QWORD *, uint64_t))(v49 + 8))(v51, v50);
  result = v52;
  if ((v52 & 1) != 0)
  {

    v32 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    v34 = objc_msgSend(v32, sel_visibleMailboxObjectIDs);
    v31 = sub_1A5135668();
    v33 = sub_1A594B958();
    v66 = v33;

    v35 = *(id *)&v36[OBJC_IVAR____TtCC7Message18PersistenceAdaptor19ClientStateObserver_mailboxPersistence];
    v5 = v35;
    if (v35)
    {
      v30 = v35;
      v25 = v35;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v21 = &v53;
      v53 = v33;
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE799B40);
      v22 = sub_1A515C70C();
      sub_1A515C77C();
      v23 = sub_1A594BCD0();
      v24 = (id)sub_1A594BB80();
      swift_bridgeObjectRelease();
      v27 = objc_msgSend(v25, sel_mailboxDatabaseIDsForMailboxObjectIDs_createIfNecessary_, v24, 0);

      v26 = sub_1A5139B78();
      sub_1A515C474();
      v28 = sub_1A594BB8C();

      v29 = v28;
    }
    else
    {
      v29 = 0;
    }
    v64 = v29;
    if (v29)
    {
      v65 = v64;
    }
    else
    {
      v17 = 0;
      v18 = sub_1A5139B78();
      v19 = sub_1A594CD14();
      sub_1A515C474();
      v65 = sub_1A594BBBC();
      sub_1A5110C34();
    }
    v6 = v37;
    v14 = v65;
    v63 = v65;
    v62 = v65;
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE799EC0);
    sub_1A515C528();
    result = sub_1A594B76C();
    v16 = result;
    if (!v6)
    {
      v13 = v16;
      v61 = v16;
      v12 = *(id *)&v36[OBJC_IVAR____TtCC7Message18PersistenceAdaptor19ClientStateObserver_queue];
      v7 = v12;
      v8 = v36;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v9 = swift_allocObject();
      v10 = v13;
      *(_QWORD *)(v9 + 16) = v36;
      *(_QWORD *)(v9 + 24) = v10;
      v59 = sub_1A515C6A4;
      v60 = v9;
      aBlock = MEMORY[0x1E0C809B0];
      v55 = 1107296256;
      v56 = 0;
      v57 = sub_1A5113234;
      v58 = &block_descriptor_12;
      v11 = _Block_copy(&aBlock);
      sub_1A511327C();
      sub_1A5113290();
      MEMORY[0x1A85AE508](0, v46, v41, v11);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v41, v38);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v46, v43);
      _Block_release(v11);
      swift_release();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A515C270(uint64_t a1, void *a2)
{
  uint64_t v2;
  id v3;
  uint64_t v5;
  unint64_t v6;
  void (*v7)(char *);
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;

  v5 = a1;
  v11 = a2;
  v10 = sub_1A5949B7C();
  v8 = *(_QWORD *)(v10 - 8);
  v6 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v5 - v6;
  v7 = *(void (**)(char *))(v2 + 32);
  v12 = *(_QWORD *)(v2 + 40);
  swift_retain();
  v3 = v11;
  sub_1A5949B64();
  v7(v9);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v9, v10);

  return swift_release();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  swift_retain();
  result = a1;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  return result;
}

{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  swift_retain();
  result = a1;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  return result;
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_1A515C3A0()
{
  return sub_1A515BBF8();
}

uint64_t sub_1A515C3D4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1A515C410()
{
  return sub_1A515C3A0();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  swift_retain();
  result = a1;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  return result;
}

{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  swift_retain();
  result = a1;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  return result;
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

{
  return swift_release();
}

unint64_t sub_1A515C474()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE796128;
  if (!qword_1EE796128)
  {
    v0 = sub_1A5139B78();
    v1 = MEMORY[0x1A85B1874](MEMORY[0x1E0DEFCF8], v0);
    atomic_store(v1, (unint64_t *)&qword_1EE796128);
    return v1;
  }
  return v3;
}

uint64_t sub_1A515C4E4@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return MailboxRowID.init(_:)((uint64_t)objc_msgSend(*a1, sel_longLongValue), a2);
}

unint64_t sub_1A515C528()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE799EC8;
  if (!qword_1EE799EC8)
  {
    v0 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE799EC0);
    v1 = MEMORY[0x1A85B1874](MEMORY[0x1E0DEB3D0], v0);
    atomic_store(v1, (unint64_t *)&qword_1EE799EC8);
    return v1;
  }
  return v3;
}

uint64_t sub_1A515C598(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_retain();
    sub_1A5139FB0();
    swift_endAccess();
    sub_1A54088AC(a2);
    return swift_release();
  }
  else
  {
    sub_1A5139FB0();
    return swift_endAccess();
  }
}

uint64_t sub_1A515C660()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A515C6A4()
{
  uint64_t v0;

  return sub_1A515C598(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  swift_retain();
  result = a1;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  return result;
}

{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  swift_retain();
  result = a1;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  return result;
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

{
  return swift_release();
}

unint64_t sub_1A515C70C()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE79A080;
  if (!qword_1EE79A080)
  {
    v0 = sub_1A5135668();
    v1 = MEMORY[0x1A85B1874](MEMORY[0x1E0DEFCF8], v0);
    atomic_store(v1, (unint64_t *)&qword_1EE79A080);
    return v1;
  }
  return v3;
}

unint64_t sub_1A515C77C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v3 = qword_1EE799B48;
  if (!qword_1EE799B48)
  {
    v0 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE799B40);
    v1 = MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF38], v0);
    atomic_store(v1, (unint64_t *)&qword_1EE799B48);
    return v1;
  }
  return v3;
}

uint64_t sub_1A515C7EC()
{
  uint64_t result;
  uint64_t v1;

  if (!"Message.ClientStateObserver")
  {
    sub_1A594C9B4();
    __break(1u);
  }
  result = sub_1A5156590((uint64_t)"Message.ClientStateObserver", 27, (unint64_t)"init()", 6, 2, (unint64_t)"Message/ClientState.swift", 25, 2, v1, 6uLL, 0x11uLL);
  __break(1u);
  return result;
}

uint64_t _s19ClientStateObserverCMa()
{
  return objc_opt_self();
}

void sub_1A515C93C()
{
  uint64_t v0;

  sub_1A515BB44(v0);
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  swift_retain();
  result = a1;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  return result;
}

{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  swift_retain();
  result = a1;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  return result;
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

{
  return swift_release();
}

uint64_t sub_1A515C9A0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  _BOOL4 v29;
  id v30;
  _QWORD *v31;
  const char *v32;
  const char *v33;
  const char *v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  unint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  void *v58;
  char *v59;
  char *v60;

  v31 = a3;
  v52 = a1;
  v49 = a2;
  v32 = "Fatal error";
  v33 = "Unexpectedly found nil while implicitly unwrapping an Optional value";
  v34 = "Message/Configuration.swift";
  v60 = 0;
  v59 = 0;
  v58 = 0;
  v57 = 0;
  v37 = 0;
  v50 = sub_1A594A764();
  v48 = *(_QWORD *)(v50 - 8);
  v35 = (*(_QWORD *)(v48 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v50);
  v51 = (char *)&v14 - v35;
  v36 = (*(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE7985D8) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v37);
  v54 = (uint64_t)&v14 - v36;
  v55 = type metadata accessor for ConnectionConfiguration();
  v53 = *(_QWORD *)(v55 - 8);
  v38 = (*(_QWORD *)(v53 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v37);
  v39 = (uint64_t)&v14 - v38;
  v40 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v4);
  v41 = (uint64_t)&v14 - v40;
  v60 = (char *)&v14 - v40;
  v42 = type metadata accessor for Configuration();
  v43 = *(_QWORD *)(v42 - 8);
  v44 = (*(_QWORD *)(v43 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v52);
  v45 = (uint64_t *)((char *)&v14 - v44);
  v46 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v6);
  v47 = (uint64_t *)((char *)&v14 - v46);
  v59 = (char *)&v14 - v46;
  v58 = v7;
  v57 = v8;
  v9 = v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v51, v49, v50);
  sub_1A515CEB8(v52, v51, v54);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v54, 1, v55) == 1)
  {
    sub_1A515D894(v54);
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v49, v50);

    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v43 + 56))(v31, 1, 1, v42);
  }
  else
  {
    sub_1A515D994(v54, v41);
    v29 = sub_1A515DAD0(v11);
    v56 = v29;
    v12 = v52;
    v30 = objc_msgSend(v52, sel_identifier);
    if (v30)
    {
      v28 = v30;
      v23 = v30;
      v24 = sub_1A594B40C();
      v25 = v13;

      v26 = v24;
      v27 = v25;
    }
    else
    {
      v26 = 0;
      v27 = 0;
    }
    v22 = v27;
    v21 = v26;

    if (v22)
    {
      v19 = v21;
      v20 = v22;
    }
    else
    {
      sub_1A594C9B4();
      __break(1u);
    }
    v15 = v20;
    v16 = v19;
    sub_1A515DB58(v41, v39);
    v18 = 1;
    v17 = 0;
    Configuration.init(logName:connection:mailboxFilter:fetchedMessageMetadata:)(v16, v15, v39, v29, 0, v45);
    sub_1A515DD70(v45, v47);
    sub_1A515DF34(v41);
    sub_1A515E00C(v47, v31);
    (*(void (**)(_QWORD *, _QWORD, _QWORD, uint64_t))(v43 + 56))(v31, v17, v18, v42);
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v49, v50);

    return sub_1A515E2B8((uint64_t)v47);
  }
}

uint64_t sub_1A515CEB8@<X0>(void *a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  void (*v22)(unint64_t, char *, uint64_t);
  uint64_t v23;
  id v24;
  char v25;
  __n128 v26;
  _QWORD v28[2];
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  int v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  void (*v61)(unint64_t, char *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t);
  id v65;
  int v66;
  int v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char *v74;
  unint64_t v75;
  char *v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(void (*)(void), uint64_t);
  uint64_t v99;
  char v100;
  uint64_t v101;
  void *v102;
  char *v103;
  char *v104;
  char *v105;

  v68 = a3;
  v69 = a1;
  v83 = a2;
  v105 = 0;
  v104 = 0;
  v103 = 0;
  v102 = 0;
  v101 = 0;
  v100 = 0;
  v98 = 0;
  v99 = 0;
  v96 = 0;
  v97 = 0;
  v94 = 0;
  v95 = 0;
  v78 = 0;
  v70 = sub_1A594A764();
  v71 = *(_QWORD *)(v70 - 8);
  v72 = *(_QWORD *)(v71 + 64);
  v73 = (v72 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v70);
  v74 = (char *)v28 - v73;
  v75 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78]((char *)v28 - v73);
  v76 = (char *)v28 - v75;
  v105 = (char *)v28 - v75;
  v77 = (*(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE798E80) - 8) + 64)
       + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v78);
  v92 = (uint64_t)v28 - v77;
  v93 = sub_1A594A8D8();
  v91 = *(_QWORD *)(v93 - 8);
  v79 = (*(_QWORD *)(v91 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v78);
  v80 = (uint64_t)v28 - v79;
  v81 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v6);
  v82 = (char *)v28 - v81;
  v104 = (char *)v28 - v81;
  v84 = type metadata accessor for ConnectionConfiguration();
  v85 = *(_QWORD *)(v84 - 8);
  v87 = *(_QWORD *)(v85 + 64);
  v86 = (v87 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v84);
  v88 = (uint64_t)v28 - v86;
  v89 = (v87 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78]((char *)v28 - v86);
  v90 = (uint64_t)v28 - v89;
  v103 = (char *)v28 - v89;
  v102 = a1;
  v101 = v7;
  sub_1A515E3B4(v8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v91 + 48))(v92, 1, v93) == 1)
  {
    sub_1A515E9EC(v92);
LABEL_13:
    (*(void (**)(char *, uint64_t))(v71 + 8))(v83, v70);

    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v85 + 56))(v68, 1, 1, v84);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v91 + 32))(v82, v92, v93);
  v67 = sub_1A51628A0();
  if ((v67 & 0xFC) == 0xFC)
  {
    (*(void (**)(char *, uint64_t))(v91 + 8))(v82, v93);
    goto LABEL_13;
  }
  v66 = v67;
  v55 = v67;
  v100 = v67;
  v57 = *(void (**)(char *, uint64_t, uint64_t))(v71 + 16);
  v57(v76, (uint64_t)v83, v70);
  v58 = 7;
  v63 = swift_allocObject();
  v56 = v63 + 16;
  v9 = v69;
  swift_unknownObjectWeakInit();

  swift_retain();
  v57(v74, (uint64_t)v76, v70);
  v59 = *(unsigned int *)(v71 + 80);
  v60 = (v59 + 24) & ~(unint64_t)v59;
  v10 = swift_allocObject();
  v11 = v60;
  v12 = v74;
  v13 = v71;
  v14 = v70;
  v62 = v10;
  *(_QWORD *)(v10 + 16) = v63;
  v61 = *(void (**)(unint64_t, char *, uint64_t))(v13 + 32);
  v61(v10 + v11, v12, v14);
  v98 = sub_1A515EF34;
  v99 = v62;
  swift_release();
  v64 = *(void (**)(char *, uint64_t))(v71 + 8);
  v64(v76, v70);
  v15 = v69;
  v65 = objc_msgSend(v69, sel_sourceApplicationBundleIdentifier);
  if (v65)
  {
    v54 = v65;
    v49 = v65;
    v50 = sub_1A594B40C();
    v51 = v16;

    v52 = v50;
    v53 = v51;
  }
  else
  {
    v52 = 0;
    v53 = 0;
  }
  v46 = v53;
  v47 = v52;
  v96 = v52;
  v97 = v53;

  v48 = objc_msgSend(v69, sel_networkAccountIdentifier);
  if (v48)
  {
    v45 = v48;
    v40 = v48;
    v41 = sub_1A594B40C();
    v42 = v17;

    v43 = v41;
    v44 = v42;
  }
  else
  {
    v43 = 0;
    v44 = 0;
  }
  v34 = v44;
  v36 = v43;
  v94 = v43;
  v95 = v44;
  (*(void (**)(uint64_t, char *, uint64_t))(v91 + 16))(v80, v82, v93);
  v32 = &unk_1E4E94B60;
  v30 = 24;
  v31 = 7;
  v38 = swift_allocObject();
  v28[1] = v38 + 16;
  v18 = v69;
  swift_unknownObjectWeakInit();

  swift_retain();
  v57(v76, (uint64_t)v83, v70);
  v29 = (v59 + 24) & ~(unint64_t)v59;
  v19 = swift_allocObject();
  v20 = v29;
  v21 = v76;
  v22 = v61;
  v23 = v70;
  v35 = v19;
  *(_QWORD *)(v19 + 16) = v38;
  v22(v19 + v20, v21, v23);
  v37 = swift_allocObject();
  v33 = v37 + 16;
  v24 = v69;
  swift_unknownObjectWeakInit();

  swift_retain();
  v25 = sub_1A5130E98();
  v39 = 1;
  ConnectionConfiguration.init(transportLayerSecurity:transportLayerSecurityOptions:endpoint:prohibitConstrainedPaths:prohibitedInterfaceTypes:sourceApplicationBundleIdentifier:networkAccountIdentifier:makeCredentials:getPushInformation:finishPushRegistration:)(v55, v80, v25 & 1, 0, v47, v46, v36, v88, v34, (uint64_t)sub_1A515EF34, v62, (uint64_t)sub_1A515F264, v35, (uint64_t)sub_1A516166C, v37);
  swift_release();
  swift_release();
  v26 = sub_1A515D994(v88, v90);
  (*(void (**)(char *, uint64_t, __n128))(v91 + 8))(v82, v93, v26);
  sub_1A515DB58(v90, v68);
  (*(void (**)(uint64_t, _QWORD, _QWORD, uint64_t))(v85 + 56))(v68, 0, v39, v84);
  v64(v83, v70);

  return sub_1A515DF34(v90);
}

uint64_t sub_1A515D894(uint64_t a1)
{
  uint64_t v1;
  uint64_t v4;

  v4 = type metadata accessor for ConnectionConfiguration();
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1))
  {
    v1 = sub_1A594A8D8();
    (*(void (**)(uint64_t))(*(_QWORD *)(v1 - 8) + 8))(a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
  return a1;
}

__n128 sub_1A515D994(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  __n128 result;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v2 = sub_1A594A8D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(a2, a1);
  v3 = (int *)type metadata accessor for ConnectionConfiguration();
  *(_BYTE *)(a2 + v3[5]) = *(_BYTE *)(a1 + v3[5]);
  *(_QWORD *)(a2 + v3[6]) = *(_QWORD *)(a1 + v3[6]);
  *(_BYTE *)(a2 + v3[7]) = *(_BYTE *)(a1 + v3[7]);
  *(_OWORD *)(a2 + v3[8]) = *(_OWORD *)(a1 + v3[8]);
  result = *(__n128 *)(a1 + v3[9]);
  *(__n128 *)(a2 + v3[9]) = result;
  v5 = (uint64_t *)(a1 + v3[10]);
  v6 = *v5;
  v7 = v5[1];
  v8 = (_QWORD *)(a2 + v3[10]);
  *v8 = v6;
  v8[1] = v7;
  v9 = (uint64_t *)(a1 + v3[11]);
  v10 = *v9;
  v11 = v9[1];
  v12 = (_QWORD *)(a2 + v3[11]);
  *v12 = v10;
  v12[1] = v11;
  v13 = v3[12];
  v14 = *(_QWORD *)(a1 + v13);
  v15 = *(_QWORD *)(a1 + v13 + 8);
  v16 = (_QWORD *)(a2 + v13);
  *v16 = v14;
  v16[1] = v15;
  return result;
}

BOOL sub_1A515DAD0(uint64_t a1)
{
  char v2;
  _BYTE v3[24];
  void *v4;
  unint64_t v5;

  nullsub_1(a1);
  v4 = &unk_1E4E770E8;
  v5 = sub_1A5161AF4();
  v2 = sub_1A594A398();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v3);
  return (v2 & 1) == 0;
}

uint64_t sub_1A515DB58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t result;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = sub_1A594A8D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a2, a1);
  v22 = (int *)type metadata accessor for ConnectionConfiguration();
  *(_BYTE *)(a2 + v22[5]) = *(_BYTE *)(a1 + v22[5]);
  v9 = v22[6];
  v10 = *(_QWORD *)(a1 + v9);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  *(_QWORD *)(a2 + v9) = v10;
  *(_BYTE *)(a2 + v22[7]) = *(_BYTE *)(a1 + v22[7]);
  v3 = v22[8];
  v11 = a2 + v3;
  *(_QWORD *)(a2 + v3) = *(_QWORD *)(a1 + v3);
  v12 = *(_QWORD *)(a1 + v3 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  *(_QWORD *)(v11 + 8) = v12;
  v4 = v22[9];
  v13 = a2 + v4;
  *(_QWORD *)(a2 + v4) = *(_QWORD *)(a1 + v4);
  v14 = *(_QWORD *)(a1 + v4 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  *(_QWORD *)(v13 + 8) = v14;
  v15 = v22[10];
  v16 = *(_QWORD *)(a1 + v15);
  v17 = *(_QWORD *)(a1 + v15 + 8);
  swift_retain();
  v5 = (_QWORD *)(a2 + v15);
  *v5 = v16;
  v5[1] = v17;
  v19 = v22[11];
  v20 = *(_QWORD *)(a1 + v19);
  v21 = *(_QWORD *)(a1 + v19 + 8);
  swift_retain();
  v6 = (_QWORD *)(a2 + v19);
  *v6 = v20;
  v6[1] = v21;
  v24 = v22[12];
  v25 = *(_QWORD *)(a1 + v24);
  v26 = *(_QWORD *)(a1 + v24 + 8);
  swift_retain();
  result = a2;
  v8 = (_QWORD *)(a2 + v24);
  *v8 = v25;
  v8[1] = v26;
  return result;
}

__n128 sub_1A515DD70(_OWORD *a1, _OWORD *a2)
{
  uint64_t v2;
  int *v3;
  __n128 result;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  int *v20;

  *a2 = *a1;
  v20 = (int *)type metadata accessor for Configuration();
  v18 = v20[5];
  v2 = sub_1A594A8D8();
  v19 = (char *)a2 + v18;
  (*(void (**)(void))(*(_QWORD *)(v2 - 8) + 32))();
  v3 = (int *)type metadata accessor for ConnectionConfiguration();
  v19[v3[5]] = *((_BYTE *)a1 + v18 + v3[5]);
  *(_QWORD *)&v19[v3[6]] = *(_QWORD *)((char *)a1 + v18 + v3[6]);
  v19[v3[7]] = *((_BYTE *)a1 + v18 + v3[7]);
  *(_OWORD *)&v19[v3[8]] = *(_OWORD *)((char *)a1 + v18 + v3[8]);
  result = *(__n128 *)((char *)a1 + v18 + v3[9]);
  *(__n128 *)&v19[v3[9]] = result;
  v5 = (uint64_t *)((char *)a1 + v18 + v3[10]);
  v6 = *v5;
  v7 = v5[1];
  v8 = (_QWORD *)((char *)a2 + v18 + v3[10]);
  *v8 = v6;
  v8[1] = v7;
  v9 = (uint64_t *)((char *)a1 + v18 + v3[11]);
  v10 = *v9;
  v11 = v9[1];
  v12 = (_QWORD *)((char *)a2 + v18 + v3[11]);
  *v12 = v10;
  v12[1] = v11;
  v13 = v3[12];
  v14 = (uint64_t *)((char *)a1 + v18 + v13);
  v15 = *v14;
  v16 = v14[1];
  v17 = (_QWORD *)((char *)a2 + v18 + v13);
  *v17 = v15;
  v17[1] = v16;
  *((_BYTE *)a2 + v20[6]) = *((_BYTE *)a1 + v20[6]) & 1;
  *((_BYTE *)a2 + v20[7]) = *((_BYTE *)a1 + v20[7]) & 1;
  return result;
}

uint64_t sub_1A515DF34(uint64_t a1)
{
  uint64_t v1;

  v1 = sub_1A594A8D8();
  (*(void (**)(uint64_t))(*(_QWORD *)(v1 - 8) + 8))(a1);
  type metadata accessor for ConnectionConfiguration();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

_QWORD *sub_1A515E00C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *result;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;

  *a2 = *a1;
  v9 = a1[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  a2[1] = v9;
  v29 = (int *)type metadata accessor for Configuration();
  v10 = v29[5];
  v2 = sub_1A594A8D8();
  v25 = (char *)a2 + v10;
  (*(void (**)(void))(*(_QWORD *)(v2 - 8) + 16))();
  v20 = (int *)type metadata accessor for ConnectionConfiguration();
  v25[v20[5]] = *((_BYTE *)a1 + v10 + v20[5]);
  v11 = v20[6];
  v12 = *(_QWORD *)((char *)a1 + v10 + v11);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  *(_QWORD *)&v25[v11] = v12;
  v25[v20[7]] = *((_BYTE *)a1 + v10 + v20[7]);
  v3 = v20[8];
  v13 = (char *)a2 + v10 + v3;
  *(_QWORD *)&v25[v3] = *(_QWORD *)((char *)a1 + v10 + v3);
  v14 = *(_QWORD *)((char *)a1 + v10 + v3 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  *((_QWORD *)v13 + 1) = v14;
  v4 = v20[9];
  v15 = (char *)a2 + v10 + v4;
  *(_QWORD *)&v25[v4] = *(_QWORD *)((char *)a1 + v10 + v4);
  v16 = *(_QWORD *)((char *)a1 + v10 + v4 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  *((_QWORD *)v15 + 1) = v16;
  v17 = v20[10];
  v18 = *(_QWORD *)((char *)a1 + v10 + v17);
  v19 = *(_QWORD *)((char *)a1 + v10 + v17 + 8);
  swift_retain();
  v5 = (_QWORD *)((char *)a2 + v10 + v17);
  *v5 = v18;
  v5[1] = v19;
  v21 = v20[11];
  v22 = *(_QWORD *)((char *)a1 + v10 + v21);
  v23 = *(_QWORD *)((char *)a1 + v10 + v21 + 8);
  swift_retain();
  v6 = (_QWORD *)((char *)a2 + v10 + v21);
  *v6 = v22;
  v6[1] = v23;
  v26 = v20[12];
  v27 = *(_QWORD *)((char *)a1 + v10 + v26);
  v28 = *(_QWORD *)((char *)a1 + v10 + v26 + 8);
  swift_retain();
  result = a2;
  v8 = (_QWORD *)((char *)a2 + v10 + v26);
  *v8 = v27;
  v8[1] = v28;
  *((_BYTE *)a2 + v29[6]) = *((_BYTE *)a1 + v29[6]) & 1;
  *((_BYTE *)a2 + v29[7]) = *((_BYTE *)a1 + v29[7]) & 1;
  return result;
}

uint64_t sub_1A515E2B8(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  type metadata accessor for Configuration();
  v1 = sub_1A594A8D8();
  (*(void (**)(void))(*(_QWORD *)(v1 - 8) + 8))();
  type metadata accessor for ConnectionConfiguration();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_1A515E3B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  unint64_t v28;
  unint64_t v29;
  unsigned int *v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  unint64_t v49;
  char *v50;
  unint64_t v51;
  char *v52;
  id v53;
  id v54;
  __int16 v55;
  unsigned int v56;
  unsigned __int16 v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  char *v62;
  char *v63;

  v42 = a1;
  v63 = 0;
  v62 = 0;
  v61 = 0;
  v59 = 0;
  v60 = 0;
  v55 = 0;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE795E70);
  v43 = (*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v1);
  v44 = (uint64_t)&v14 - v43;
  v45 = sub_1A594A8CC();
  v46 = *(_QWORD *)(v45 - 8);
  v47 = (*(_QWORD *)(v46 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v53);
  v48 = (char *)&v14 - v47;
  v63 = (char *)&v14 - v47;
  v49 = (v2 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v3);
  v50 = (char *)&v14 - v49;
  v51 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1E0C80A78](v5);
  v52 = (char *)&v14 - v51;
  v62 = (char *)&v14 - v51;
  v61 = v6;
  v7 = v6;
  v54 = objc_msgSend(v53, sel_hostname);
  if (v54)
  {
    v41 = v54;
    v36 = v54;
    v37 = sub_1A594B40C();
    v38 = v8;

    v39 = v37;
    v40 = v38;
  }
  else
  {
    v39 = 0;
    v40 = 0;
  }
  v34 = v40;
  v35 = v39;
  if (v40)
  {
    v32 = v35;
    v33 = v34;
    v25 = v34;
    v26 = v35;
    v59 = v35;
    v60 = v34;

    v9 = v53;
    v27 = objc_msgSend(v53, sel_portNumber);

    v30 = &v56;
    v56 = v27;
    v28 = sub_1A5157A2C();
    v29 = sub_1A5161B60();
    sub_1A5161BC8();
    sub_1A594B874();
    v31 = v57;
    if ((v58 & 1) == 0)
    {
      v24 = v31;
      v22 = v31;
      v55 = v31;
      v23 = sub_1A51628A0();
      if ((v23 & 0xFC) == 0xFC)
        goto LABEL_23;
      v21 = v23;
      v20 = (v23 >> 6) & 3;
      if (v23 >> 6)
      {
        if (v20 == 1)
        {
          if ((_WORD)v22)
          {
LABEL_23:
            sub_1A594A8B4();
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45) == 1)
            {
              sub_1A5161C30(v44);
              v10 = sub_1A594A8D8();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v42, 1);
              return swift_bridgeObjectRelease();
            }
            v19 = *(void (**)(char *, uint64_t, uint64_t))(v46 + 32);
            v19(v48, v44, v45);
            (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v50, v48, v45);
            v19(v52, (uint64_t)v50, v45);
            (*(void (**)(char *, uint64_t))(v46 + 8))(v48, v45);
            goto LABEL_26;
          }
          sub_1A594A8A8();
          (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v52, v50, v45);
LABEL_26:
          v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE798E70);
          v15 = v42 + *(int *)(v12 + 48);
          sub_1A594A890();
          (*(void (**)(uint64_t, char *, uint64_t))(v46 + 16))(v15, v52, v45);
          v16 = *MEMORY[0x1E0CCE290];
          v18 = sub_1A594A8D8();
          v17 = *(_QWORD *)(v18 - 8);
          (*(void (**)(uint64_t, _QWORD))(v17 + 104))(v42, v16);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(v42, 0, 1, v18);
          return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v52, v45);
        }
        if ((_WORD)v22)
          goto LABEL_23;
      }
      else if ((_WORD)v22)
      {
        goto LABEL_23;
      }
      sub_1A594A89C();
      (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v52, v50, v45);
      goto LABEL_26;
    }
    swift_bridgeObjectRelease();
  }
  else
  {

  }
  v13 = sub_1A594A8D8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v42, 1);
}

uint64_t sub_1A515E9EC(uint64_t a1)
{
  uint64_t v3;
  uint64_t v4;

  v3 = sub_1A594A8D8();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v4 + 48))(a1, 1))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return a1;
}

uint64_t sub_1A515EA5C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1A515EA98(void (*a1)(void), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD v5[6];
  _QWORD v6[5];
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t *v11;
  _QWORD *v12;
  _BYTE **v13;
  uint64_t *v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint32_t v20;
  int v21;
  NSObject *v22;
  uint64_t v23;
  void (*v24)(void);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  uint32_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(void);
  uint64_t v42;

  v24 = a1;
  v25 = a2;
  v26 = a4;
  v27 = 0;
  v31 = 0;
  v41 = a1;
  v42 = a2;
  v28 = a3 + 16;
  v40 = a3 + 16;
  v39 = a4;
  v29 = &v38;
  swift_beginAccess();
  v30 = (id)MEMORY[0x1A85B1A0C](v28);
  swift_endAccess();
  if (v30)
  {
    sub_1A5162A64(v26, (uint64_t)v24, v25);

  }
  else
  {
    v22 = sub_1A594A74C();
    v21 = sub_1A594C018();
    v19 = &v36;
    v36 = 2;
    v17 = sub_1A5130F74();
    v18 = sub_1A5130FDC();
    sub_1A5131044();
    sub_1A594B880();
    v20 = v37;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A48D0);
    v23 = sub_1A594CD14();
    if (os_log_type_enabled(v22, (os_log_type_t)v21))
    {
      v7 = (uint8_t *)sub_1A594C348();
      v6[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
      v6[4] = 0;
      v8 = sub_1A5130D14(0);
      v9 = sub_1A5130D14(0);
      v13 = &v35;
      v35 = v7;
      v14 = &v34;
      v34 = v8;
      v11 = &v33;
      v33 = v9;
      v10 = 0;
      sub_1A5130D6C(0, &v35);
      sub_1A5130D6C(0, &v35);
      v32 = v23;
      v12 = v6;
      MEMORY[0x1E0C80A78](v6);
      v15 = v5;
      v5[2] = v13;
      v5[3] = v14;
      v5[4] = v4;
      v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE799E10);
      sub_1A5131B04();
      sub_1A594B7FC();
      _os_log_impl(&dword_1A4F90000, v22, (os_log_type_t)v21, "No account while trying to create credentials.", v7, v20);
      v6[2] = 0;
      sub_1A5130DC4(v8);
      sub_1A5130DC4(v9);
      sub_1A594C330();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }

    swift_retain();
    v6[1] = sub_1A594CD14();
    v24();
    swift_bridgeObjectRelease();
    swift_release();
  }
}

uint64_t sub_1A515EEA8()
{
  uint64_t v0;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v4 = sub_1A594A764();
  v2 = *(_QWORD *)(v4 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v4);
  return swift_deallocObject();
}

void sub_1A515EF34(void (*a1)(void), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1A594A764() - 8) + 80);
  sub_1A515EA98(a1, a2, *(_QWORD *)(v2 + 16), v2 + ((v3 + 24) & ~v3));
}

uint64_t sub_1A515EF84(void *a1, void *a2, uint64_t a3, void *a4)
{
  id v4;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v25;
  id v26[8];
  _QWORD v27[8];
  _QWORD v28[8];

  v26[6] = a1;
  v26[7] = a2;
  v25 = a3 + 16;
  v26[5] = (id)(a3 + 16);
  v26[4] = a4;
  swift_retain();
  swift_beginAccess();
  v26[0] = (id)MEMORY[0x1A85B1A0C](v25);
  if (v26[0])
  {
    v6 = v26[0];
    v4 = v26[0];
    sub_1A5138D80(v26);
    swift_endAccess();
    sub_1A515F2B4((uint64_t)a4, v27);
    v7 = v27[0];
    v8 = v27[1];
    v9 = v27[2];
    v10 = v27[3];
    v11 = v27[4];
    v12 = v27[5];
    v13 = v27[6];
    v14 = v27[7];

    v15 = v7;
    v16 = v8;
    v17 = v9;
    v18 = v10;
    v19 = v11;
    v20 = v12;
    v21 = v13;
    v22 = v14;
  }
  else
  {
    sub_1A5138D80(v26);
    swift_endAccess();
    v15 = 0;
    v16 = 0;
    v17 = 0;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    v22 = 0;
  }
  v28[0] = v15;
  v28[1] = v16;
  v28[2] = v17;
  v28[3] = v18;
  v28[4] = v19;
  v28[5] = v20;
  v28[6] = v21;
  v28[7] = v22;
  ((void (*)(_QWORD *))a1)(v28);
  sub_1A5162844(v15, v16, v17);
  return swift_release();
}

uint64_t sub_1A515F1D8()
{
  uint64_t v0;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v4 = sub_1A594A764();
  v2 = *(_QWORD *)(v4 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v4);
  return swift_deallocObject();
}

uint64_t sub_1A515F264(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1A594A764() - 8) + 80);
  return sub_1A515EF84(a1, a2, *(_QWORD *)(v2 + 16), (void *)(v2 + ((v3 + 24) & ~v3)));
}

void sub_1A515F2B4(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  unint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _BYTE *v69;
  _BYTE *v70;
  _BYTE *v71;
  _BYTE *v72;
  _BYTE *v73;
  _BYTE *v74;
  _BYTE *v75;
  _BYTE v76[16];
  _BYTE **v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD v80[3];
  uint8_t *v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t *v85;
  _QWORD *v86;
  _BYTE **v87;
  uint64_t *v88;
  _BYTE *v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t *v93;
  uint32_t v94;
  int v95;
  NSObject *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint8_t *v101;
  uint64_t v102;
  uint64_t v103;
  int v104;
  uint64_t *v105;
  _QWORD *v106;
  _BYTE **v107;
  uint64_t *v108;
  _BYTE *v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t *v113;
  uint32_t v114;
  int v115;
  NSObject *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint8_t *v121;
  uint64_t v122;
  uint64_t v123;
  int v124;
  uint64_t *v125;
  _QWORD *v126;
  _BYTE **v127;
  uint64_t *v128;
  _BYTE *v129;
  uint64_t v130;
  unint64_t v131;
  unint64_t v132;
  uint64_t *v133;
  uint32_t v134;
  int v135;
  NSObject *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint8_t *v141;
  uint64_t v142;
  uint64_t v143;
  int v144;
  uint64_t *v145;
  _QWORD *v146;
  _BYTE **v147;
  uint64_t *v148;
  _BYTE *v149;
  uint64_t v150;
  uint32_t v151;
  int v152;
  NSObject *v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t *v157;
  uint64_t v158;
  _BYTE *v159;
  _BYTE *v160;
  _BYTE *v161;
  _BYTE *v162;
  _BYTE *v163;
  _BYTE *v164;
  _BYTE *v165;
  _BYTE *v166;
  _BYTE *v167;
  _BYTE *v168;
  _BYTE *v169;
  _BYTE *v170;
  _BYTE *v171;
  _BYTE *v172;
  _BYTE *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  id v180;
  id v181;
  id v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  id v187;
  unsigned int v188;
  id v189;
  uint64_t v190;
  uint64_t v191;
  id v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  id v197;
  id v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  id v203;
  id v204;
  unint64_t v205;
  uint64_t v206;
  uint64_t v207;
  void *v208;
  uint64_t v209;
  unint64_t v210;
  unint64_t v211;
  uint64_t v212;
  id v213;
  uint64_t v214;
  unint64_t v215;
  uint64_t v216;
  unint64_t v217;
  id v218;
  id v219;
  id v220;
  id v221;
  uint64_t v222;
  id v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint8_t *v240;
  uint64_t v241;
  uint64_t v242;
  _BYTE **v243;
  uint64_t *v244;
  uint64_t *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  unint64_t v249;
  unint64_t v250;
  uint64_t *v251;
  unint64_t v252;
  uint32_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  int v259;
  uint64_t v260;
  uint64_t v261;
  int v262;
  uint64_t v263;
  int v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  _QWORD *v285;
  uint64_t v286;
  NSObject *v287;
  int v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t *v291;
  int v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  id v299;
  uint64_t v300;
  uint64_t v301;
  id v302;
  id v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  id v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  id v315;
  id v316;
  id v317;
  unsigned int v318;
  id v319;
  _QWORD *v320;
  id v321;
  uint64_t v322;
  const char *v323;
  const char *v324;
  const char *v325;
  uint64_t v326;
  uint64_t v327;
  id v328;
  _BYTE *v329;
  uint64_t (*v330)(uint64_t, uint64_t, uint64_t);
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  _BYTE *v334[9];
  uint64_t v335;
  unsigned int v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  _BYTE *v344[2];
  uint32_t v345;
  uint64_t v346;
  uint32_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  _BYTE *v351;
  uint64_t v352;
  uint32_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  _BYTE *v361;
  uint64_t v362;
  uint32_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  _BYTE *v367;
  uint64_t v368;
  uint32_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  unsigned int v374;
  _BYTE *v375;
  _BYTE *v376;
  _BYTE *v377;
  _BYTE *v378;
  _BYTE *v379;
  _BYTE *v380;
  _BYTE *v381;

  v320 = a2;
  v327 = a1;
  v322 = 0x786F626C69616DLL;
  v323 = "Fatal error";
  v324 = "Unexpectedly found nil while implicitly unwrapping an Optional value";
  v325 = "Message/Configuration.swift";
  v370 = 0;
  v371 = 0;
  v326 = 0;
  v357 = 0;
  v355 = 0;
  v339 = 0;
  v340 = 0;
  v337 = 0;
  v338 = 0;
  memset(&v334[1], 0, 0x40uLL);
  v373 = v327;
  v372 = v2;
  v328 = MFUserAgent();
  v329 = 0;
  if (v328)
  {
    v319 = v328;
  }
  else
  {
    LOBYTE(v77) = 2;
    v78 = 101;
    LODWORD(v79) = 0;
    sub_1A594C9B4();
    __break(1u);
  }
  v317 = v319;
  swift_getObjectType();
  v318 = objc_msgSend(v319, sel_canRegisterForAPSPush);
  swift_unknownObjectRelease();
  if ((v318 & 1) == 0)
    goto LABEL_65;
  v3 = v321;
  v316 = objc_msgSend(v321, sel_uniqueID);
  if (v316)
  {
    v315 = v316;
    v310 = v316;
    v311 = sub_1A594B40C();
    v312 = v4;

    v313 = v311;
    v314 = v312;
  }
  else
  {
    v313 = 0;
    v314 = 0;
  }
  v308 = v314;
  v309 = v313;
  if (!v314)
  {

LABEL_65:
    v166 = v329;
    v167 = v329;
    v168 = v329;
    v169 = v329;
    v170 = v329;
    v171 = v329;
    v172 = v329;
    v173 = v329;
    goto LABEL_66;
  }
  v306 = v309;
  v307 = v308;
  v304 = v308;
  v305 = v309;
  v370 = v309;
  v371 = v308;

  v5 = objc_msgSend(v321, sel_shouldRegisterForPush);
  if ((v5 & 1) != 0)
  {
    v303 = objc_msgSend(v321, sel_mailboxNamesForPushRegistration);
    if (v303)
    {
      v302 = v303;
      v299 = v303;
      v300 = sub_1A594BB8C();

      v301 = v300;
    }
    else
    {
      v301 = 0;
    }
    v298 = v301;
    if (v301)
    {
      v297 = v298;
      v293 = v298;
      v357 = v298;
      v356 = v298;
      v294 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE799EB0);
      sub_1A5161D00();
      v295 = v326;
      v296 = sub_1A594B76C();
      v289 = v296;
      v355 = v296;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v291 = &v354;
      v354 = v296;
      v290 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE799438);
      sub_1A5161D70();
      v292 = sub_1A594BE5C();
      sub_1A5110C34();
      if ((v292 & 1) != 0)
      {
        v136 = sub_1A594A74C();
        v135 = sub_1A594C030();
        v133 = &v352;
        v352 = 2;
        v131 = sub_1A5130F74();
        v132 = sub_1A5130FDC();
        sub_1A5131044();
        sub_1A594B880();
        v134 = v353;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A48D0);
        v137 = sub_1A594CD14();
        if (os_log_type_enabled(v136, (os_log_type_t)v135))
        {
          v121 = (uint8_t *)sub_1A594C348();
          v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
          v120 = 0;
          v122 = sub_1A5130D14(0);
          v123 = sub_1A5130D14(0);
          v127 = &v351;
          v351 = v121;
          v128 = &v350;
          v350 = v122;
          v125 = &v349;
          v349 = v123;
          v124 = 0;
          sub_1A5130D6C(0, &v351);
          sub_1A5130D6C(0, &v351);
          v348 = v137;
          v126 = v80;
          MEMORY[0x1E0C80A78](v80);
          v129 = v76;
          v77 = v127;
          v78 = (uint64_t)v128;
          v79 = v65;
          v130 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE799E10);
          sub_1A5131B04();
          sub_1A594B7FC();
          _os_log_impl(&dword_1A4F90000, v136, (os_log_type_t)v135, "APNS: empty mailboxes", v121, v134);
          v118 = 0;
          sub_1A5130DC4(v122);
          sub_1A5130DC4(v123);
          sub_1A594C330();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
        }

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v166 = v329;
        v167 = v329;
        v168 = v329;
        v169 = v329;
        v170 = v329;
        v171 = v329;
        v172 = v329;
        v173 = v329;
      }
      else
      {
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v260 = 24;
        v266 = 7;
        v254 = swift_allocObject();
        *(_QWORD *)(v254 + 16) = v289;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v247 = swift_allocObject();
        *(_QWORD *)(v247 + 16) = v289;
        swift_retain();
        v265 = 32;
        v6 = swift_allocObject();
        v7 = v247;
        v257 = v6;
        *(_QWORD *)(v6 + 16) = sub_1A5161E60;
        *(_QWORD *)(v6 + 24) = v7;
        swift_release();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v248 = swift_allocObject();
        *(_QWORD *)(v248 + 16) = v289;
        swift_retain();
        v8 = swift_allocObject();
        v9 = v248;
        v267 = v8;
        *(_QWORD *)(v8 + 16) = sub_1A5161FD4;
        *(_QWORD *)(v8 + 24) = v9;
        swift_release();
        v287 = sub_1A594A74C();
        v288 = sub_1A594C030();
        v251 = &v346;
        v346 = 52;
        v249 = sub_1A5130F74();
        v250 = sub_1A5130FDC();
        v252 = sub_1A5131044();
        sub_1A594B880();
        v253 = v347;
        v263 = 17;
        v269 = swift_allocObject();
        *(_BYTE *)(v269 + 16) = 0;
        v270 = swift_allocObject();
        v264 = 8;
        *(_BYTE *)(v270 + 16) = 8;
        v10 = swift_allocObject();
        v11 = v254;
        v255 = v10;
        *(_QWORD *)(v10 + 16) = sub_1A5161E1C;
        *(_QWORD *)(v10 + 24) = v11;
        v12 = swift_allocObject();
        v13 = v255;
        v271 = v12;
        *(_QWORD *)(v12 + 16) = sub_1A5138BDC;
        *(_QWORD *)(v12 + 24) = v13;
        v272 = swift_allocObject();
        v259 = 112;
        *(_BYTE *)(v272 + 16) = 112;
        v273 = swift_allocObject();
        *(_BYTE *)(v273 + 16) = v264;
        v256 = swift_allocObject();
        *(_QWORD *)(v256 + 16) = v322;
        v14 = swift_allocObject();
        v15 = v256;
        v274 = v14;
        *(_QWORD *)(v14 + 16) = sub_1A5134394;
        *(_QWORD *)(v14 + 24) = v15;
        v275 = swift_allocObject();
        v262 = 37;
        *(_BYTE *)(v275 + 16) = 37;
        v276 = swift_allocObject();
        *(_BYTE *)(v276 + 16) = v264;
        v16 = swift_allocObject();
        v17 = v257;
        v258 = v16;
        *(_QWORD *)(v16 + 16) = sub_1A5161F8C;
        *(_QWORD *)(v16 + 24) = v17;
        v18 = swift_allocObject();
        v19 = v258;
        v277 = v18;
        *(_QWORD *)(v18 + 16) = sub_1A5130F5C;
        *(_QWORD *)(v18 + 24) = v19;
        v278 = swift_allocObject();
        *(_BYTE *)(v278 + 16) = v259;
        v279 = swift_allocObject();
        *(_BYTE *)(v279 + 16) = v264;
        v261 = swift_allocObject();
        *(_QWORD *)(v261 + 16) = v322;
        v20 = swift_allocObject();
        v21 = v261;
        v280 = v20;
        *(_QWORD *)(v20 + 16) = sub_1A5134394;
        *(_QWORD *)(v20 + 24) = v21;
        v281 = swift_allocObject();
        *(_BYTE *)(v281 + 16) = v262;
        v282 = swift_allocObject();
        *(_BYTE *)(v282 + 16) = v264;
        v22 = swift_allocObject();
        v23 = v267;
        v268 = v22;
        *(_QWORD *)(v22 + 16) = sub_1A5161F8C;
        *(_QWORD *)(v22 + 24) = v23;
        v24 = swift_allocObject();
        v25 = v268;
        v284 = v24;
        *(_QWORD *)(v24 + 16) = sub_1A5130F5C;
        *(_QWORD *)(v24 + 24) = v25;
        v286 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A48D0);
        v283 = sub_1A594CD14();
        v285 = v26;
        swift_retain();
        v27 = v269;
        v28 = v285;
        *v285 = sub_1A5131290;
        v28[1] = v27;
        swift_retain();
        v29 = v270;
        v30 = v285;
        v285[2] = sub_1A5131290;
        v30[3] = v29;
        swift_retain();
        v31 = v271;
        v32 = v285;
        v285[4] = sub_1A5138C24;
        v32[5] = v31;
        swift_retain();
        v33 = v272;
        v34 = v285;
        v285[6] = sub_1A5131290;
        v34[7] = v33;
        swift_retain();
        v35 = v273;
        v36 = v285;
        v285[8] = sub_1A5131290;
        v36[9] = v35;
        swift_retain();
        v37 = v274;
        v38 = v285;
        v285[10] = sub_1A51622E4;
        v38[11] = v37;
        swift_retain();
        v39 = v275;
        v40 = v285;
        v285[12] = sub_1A5131290;
        v40[13] = v39;
        swift_retain();
        v41 = v276;
        v42 = v285;
        v285[14] = sub_1A5131290;
        v42[15] = v41;
        swift_retain();
        v43 = v277;
        v44 = v285;
        v285[16] = sub_1A5133578;
        v44[17] = v43;
        swift_retain();
        v45 = v278;
        v46 = v285;
        v285[18] = sub_1A5131290;
        v46[19] = v45;
        swift_retain();
        v47 = v279;
        v48 = v285;
        v285[20] = sub_1A5131290;
        v48[21] = v47;
        swift_retain();
        v49 = v280;
        v50 = v285;
        v285[22] = sub_1A51622E4;
        v50[23] = v49;
        swift_retain();
        v51 = v281;
        v52 = v285;
        v285[24] = sub_1A5131290;
        v52[25] = v51;
        swift_retain();
        v53 = v282;
        v54 = v285;
        v285[26] = sub_1A5131290;
        v54[27] = v53;
        swift_retain();
        v55 = v284;
        v56 = v285;
        v285[28] = sub_1A5133578;
        v56[29] = v55;
        sub_1A5113324();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v287, (os_log_type_t)v288))
        {
          v240 = (uint8_t *)sub_1A594C348();
          v239 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
          v241 = sub_1A5130D14(0);
          v242 = sub_1A5130D14(2);
          v243 = v334;
          v334[0] = v240;
          v244 = &v333;
          v333 = v241;
          v245 = &v332;
          v332 = v242;
          sub_1A5130D6C(3, v334);
          sub_1A5130D6C(5, v334);
          v330 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
          v331 = v269;
          sub_1A5130D80(&v330, (uint64_t)v334, (uint64_t)&v333, (uint64_t)&v332);
          v246 = v295;
          if (v295)
          {
            __break(1u);
          }
          else
          {
            v330 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v331 = v270;
            sub_1A5130D80(&v330, (uint64_t)v334, (uint64_t)&v333, (uint64_t)&v332);
            v237 = 0;
            v330 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5138C24;
            v331 = v271;
            sub_1A5130D80(&v330, (uint64_t)v334, (uint64_t)&v333, (uint64_t)&v332);
            v236 = 0;
            v330 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v331 = v272;
            sub_1A5130D80(&v330, (uint64_t)v334, (uint64_t)&v333, (uint64_t)&v332);
            v235 = 0;
            v330 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v331 = v273;
            sub_1A5130D80(&v330, (uint64_t)v334, (uint64_t)&v333, (uint64_t)&v332);
            v234 = 0;
            v330 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A51622E4;
            v331 = v274;
            sub_1A5130D80(&v330, (uint64_t)v334, (uint64_t)&v333, (uint64_t)&v332);
            v233 = 0;
            v330 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v331 = v275;
            sub_1A5130D80(&v330, (uint64_t)v334, (uint64_t)&v333, (uint64_t)&v332);
            v232 = 0;
            v330 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v331 = v276;
            sub_1A5130D80(&v330, (uint64_t)v334, (uint64_t)&v333, (uint64_t)&v332);
            v231 = 0;
            v330 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5133578;
            v331 = v277;
            sub_1A5130D80(&v330, (uint64_t)v334, (uint64_t)&v333, (uint64_t)&v332);
            v230 = 0;
            v330 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v331 = v278;
            sub_1A5130D80(&v330, (uint64_t)v334, (uint64_t)&v333, (uint64_t)&v332);
            v229 = 0;
            v330 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v331 = v279;
            sub_1A5130D80(&v330, (uint64_t)v334, (uint64_t)&v333, (uint64_t)&v332);
            v228 = 0;
            v330 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A51622E4;
            v331 = v280;
            sub_1A5130D80(&v330, (uint64_t)v334, (uint64_t)&v333, (uint64_t)&v332);
            v227 = 0;
            v330 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v331 = v281;
            sub_1A5130D80(&v330, (uint64_t)v334, (uint64_t)&v333, (uint64_t)&v332);
            v226 = 0;
            v330 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5131290;
            v331 = v282;
            sub_1A5130D80(&v330, (uint64_t)v334, (uint64_t)&v333, (uint64_t)&v332);
            v225 = 0;
            v330 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5133578;
            v331 = v284;
            sub_1A5130D80(&v330, (uint64_t)v334, (uint64_t)&v333, (uint64_t)&v332);
            v224 = 0;
            _os_log_impl(&dword_1A4F90000, v287, (os_log_type_t)v288, "APNS: %ld mailbox(es) {'%{sensitive,mask.mailbox}s', '%{sensitive,mask.mailbox}s'}", v240, v253);
            sub_1A5130DC4(v241);
            sub_1A5130DC4(v242);
            sub_1A594C330();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            v238 = 0;
          }
        }
        else
        {
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          v238 = v295;
        }
        v222 = v238;

        v223 = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
        if (v223)
        {
          v221 = v223;
        }
        else
        {
          LOBYTE(v77) = 2;
          v78 = 129;
          LODWORD(v79) = 0;
          sub_1A594C9B4();
          __break(1u);
        }
        v219 = v221;
        swift_getObjectType();
        v220 = objc_msgSend(v221, sel_copyDeviceToken);
        if (v220)
        {
          v218 = v220;
          v213 = v220;
          v214 = sub_1A5949F90();
          v215 = v57;

          v216 = v214;
          v217 = v215;
        }
        else
        {
          v216 = 0;
          v217 = 0xF000000000000000;
        }
        v211 = v217;
        v212 = v216;
        if ((v217 & 0xF000000000000000) == 0xF000000000000000)
        {
          v155 = 0;
          swift_unknownObjectRelease();
          v208 = 0;
        }
        else
        {
          v209 = v212;
          v210 = v211;
          v205 = v211;
          v206 = v212;
          v207 = sub_1A5949F78();
          sub_1A51625F0(v212, v211);
          swift_unknownObjectRelease();
          v208 = (void *)v207;
        }
        v204 = v208;
        if (v208)
        {
          v203 = v204;
          v197 = v204;
          v198 = objc_msgSend(v204, sel_ef_hexString);
          v199 = sub_1A594B40C();
          v200 = v58;

          v201 = v199;
          v202 = v200;
        }
        else
        {
          v201 = 0;
          v202 = 0;
        }
        v195 = v202;
        v196 = v201;
        if (v202)
        {
          v193 = v196;
          v194 = v195;
          v190 = v195;
          v191 = v196;
          v339 = v196;
          v340 = v195;
          v192 = MFUserAgent();
          if (v192)
          {
            v189 = v192;
          }
          else
          {
            LOBYTE(v77) = 2;
            v78 = 135;
            LODWORD(v79) = 0;
            sub_1A594C9B4();
            __break(1u);
          }
          v187 = v189;
          swift_getObjectType();
          v188 = objc_msgSend(v189, sel_isMaild);
          swift_unknownObjectRelease();
          if ((v188 & 1) != 0)
          {
            v182 = (id)*MEMORY[0x1E0D4D878];
            v59 = v182;
            v183 = sub_1A594B40C();
            v184 = v60;

            v185 = v183;
            v186 = v184;
          }
          else
          {
            v180 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
            v181 = objc_msgSend(v180, sel_bundleIdentifier);
            if (v181)
            {
              v176 = sub_1A594B40C();
              v177 = v61;

              v178 = v176;
              v179 = v177;
            }
            else
            {
              v178 = 0;
              v179 = 0;
            }

            v185 = v178;
            v186 = v179;
          }
          v174 = v186;
          v175 = v185;
          if (v186)
          {
            v337 = v175;
            v338 = v174;
            objc_msgSend(v321, sel_apsVersion);
            sub_1A51279E8();
            v157 = &v335;
            v335 = v62;
            v156 = sub_1A51314C0();
            sub_1A5162588();
            sub_1A594B934();
            PushRegistrationInfo.init(apsVersion:accountID:deviceToken:subtopic:mailboxes:)(v336, v305, v304, v191, v190, v175, v174, v289, (uint64_t)&v374);
            v158 = v374;
            v159 = v375;
            v160 = v376;
            v161 = v377;
            v162 = v378;
            v163 = v379;
            v164 = v380;
            v165 = v381;
            LODWORD(v334[1]) = v374;
            v334[2] = v375;
            v334[3] = v376;
            v334[4] = v377;
            v334[5] = v378;
            v334[6] = v379;
            v334[7] = v380;
            v334[8] = v381;
            swift_bridgeObjectRelease();
            v166 = (_BYTE *)v158;
            v167 = v159;
            v168 = v160;
            v169 = v161;
            v170 = v162;
            v171 = v163;
            v172 = v164;
            v173 = v165;
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v166 = v329;
            v167 = v329;
            v168 = v329;
            v169 = v329;
            v170 = v329;
            v171 = v329;
            v172 = v329;
            v173 = v329;
          }
        }
        else
        {
          v153 = sub_1A594A74C();
          v152 = sub_1A594C030();
          v344[1] = (_BYTE *)2;
          sub_1A594B880();
          v151 = v345;
          v154 = sub_1A594CD14();
          if (os_log_type_enabled(v153, (os_log_type_t)v152))
          {
            v63 = v222;
            v141 = (uint8_t *)sub_1A594C348();
            v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
            v140 = 0;
            v142 = sub_1A5130D14(0);
            v143 = sub_1A5130D14(0);
            v147 = v344;
            v344[0] = v141;
            v148 = &v343;
            v343 = v142;
            v145 = &v342;
            v342 = v143;
            v144 = 0;
            sub_1A5130D6C(0, v344);
            sub_1A5130D6C(0, v344);
            v341 = v154;
            v146 = v80;
            MEMORY[0x1E0C80A78](v80);
            v149 = v76;
            v77 = v147;
            v78 = (uint64_t)v148;
            v79 = v64;
            v150 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE799E10);
            sub_1A5131B04();
            sub_1A594B7FC();
            if (v63)
            {
              __break(1u);
            }
            else
            {
              _os_log_impl(&dword_1A4F90000, v153, (os_log_type_t)v152, "APNS: no device token", v141, v151);
              v138 = 0;
              sub_1A5130DC4(v142);
              sub_1A5130DC4(v143);
              sub_1A594C330();
              swift_bridgeObjectRelease();
            }
          }
          else
          {
            swift_bridgeObjectRelease();
          }

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v166 = v329;
          v167 = v329;
          v168 = v329;
          v169 = v329;
          v170 = v329;
          v171 = v329;
          v172 = v329;
          v173 = v329;
        }
      }
    }
    else
    {
      v116 = sub_1A594A74C();
      v115 = sub_1A594C030();
      v113 = &v362;
      v362 = 2;
      v111 = sub_1A5130F74();
      v112 = sub_1A5130FDC();
      sub_1A5131044();
      sub_1A594B880();
      v114 = v363;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A48D0);
      v117 = sub_1A594CD14();
      if (os_log_type_enabled(v116, (os_log_type_t)v115))
      {
        v101 = (uint8_t *)sub_1A594C348();
        v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
        v100 = 0;
        v102 = sub_1A5130D14(0);
        v103 = sub_1A5130D14(0);
        v107 = &v361;
        v361 = v101;
        v108 = &v360;
        v360 = v102;
        v105 = &v359;
        v359 = v103;
        v104 = 0;
        sub_1A5130D6C(0, &v361);
        sub_1A5130D6C(0, &v361);
        v358 = v117;
        v106 = v80;
        MEMORY[0x1E0C80A78](v80);
        v109 = v76;
        v77 = v107;
        v78 = (uint64_t)v108;
        v79 = v66;
        v110 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE799E10);
        sub_1A5131B04();
        sub_1A594B7FC();
        _os_log_impl(&dword_1A4F90000, v116, (os_log_type_t)v115, "APNS: no mailboxes", v101, v114);
        v98 = 0;
        sub_1A5130DC4(v102);
        sub_1A5130DC4(v103);
        sub_1A594C330();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
      }

      swift_bridgeObjectRelease();
      v166 = v329;
      v167 = v329;
      v168 = v329;
      v169 = v329;
      v170 = v329;
      v171 = v329;
      v172 = v329;
      v173 = v329;
    }
  }
  else
  {
    v96 = sub_1A594A74C();
    v95 = sub_1A594C030();
    v93 = &v368;
    v368 = 2;
    v91 = sub_1A5130F74();
    v92 = sub_1A5130FDC();
    sub_1A5131044();
    sub_1A594B880();
    v94 = v369;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7A48D0);
    v97 = sub_1A594CD14();
    if (os_log_type_enabled(v96, (os_log_type_t)v95))
    {
      v81 = (uint8_t *)sub_1A594C348();
      v80[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7A1A40);
      v80[2] = 0;
      v82 = sub_1A5130D14(0);
      v83 = sub_1A5130D14(0);
      v87 = &v367;
      v367 = v81;
      v88 = &v366;
      v366 = v82;
      v85 = &v365;
      v365 = v83;
      v84 = 0;
      sub_1A5130D6C(0, &v367);
      sub_1A5130D6C(0, &v367);
      v364 = v97;
      v86 = v80;
      MEMORY[0x1E0C80A78](v80);
      v89 = v76;
      v77 = v87;
      v78 = (uint64_t)v88;
      v79 = v67;
      v90 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE799E10);
      sub_1A5131B04();
      sub_1A594B7FC();
      _os_log_impl(&dword_1A4F90000, v96, (os_log_type_t)v95, "APNS: shouldRegisterForPush: NO", v81, v94);
      v80[0] = 0;
      sub_1A5130DC4(v82);
      sub_1A5130DC4(v83);
      sub_1A594C330();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }

    swift_bridgeObjectRelease();
    v166 = v329;
    v167 = v329;
    v168 = v329;
    v169 = v329;
    v170 = v329;
    v171 = v329;
    v172 = v329;
    v173 = v329;
  }
LABEL_66:
  v68 = v320;
  v69 = v167;
  v70 = v168;
  v71 = v169;
  v72 = v170;
  v73 = v171;
  v74 = v172;
  v75 = v173;
  *v320 = v166;
  v68[1] = v69;
  v68[2] = v70;
  v68[3] = v71;
  v68[4] = v72;
  v68[5] = v73;
  v68[6] = v74;
  v68[7] = v75;
}

