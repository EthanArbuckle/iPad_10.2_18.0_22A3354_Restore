double (*RunningSyncRequests.Change.Completed.kind.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t RunningSyncRequests.Change.Completed.createdAt.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t RunningSyncRequests.Change.Completed.createdAt.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

double (*RunningSyncRequests.Change.Completed.createdAt.modify())(_QWORD)
{
  return nullsub_1;
}

BOOL static RunningSyncRequests.Change.Completed.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return ((a3 ^ a1) & 0xFF00000000) == 0 && (_DWORD)a1 == (_DWORD)a3 && a2 == a4;
}

BOOL sub_1A54FC564(uint64_t a1, uint64_t a2)
{
  return *(_DWORD *)a1 == *(_DWORD *)a2
      && *(unsigned __int8 *)(a1 + 4) == *(unsigned __int8 *)(a2 + 4)
      && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
}

ValueMetadata *type metadata accessor for RunningSyncRequests()
{
  return &type metadata for RunningSyncRequests;
}

uint64_t destroy for RunningSyncRequests.Change(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  return __swift_destroy_boxed_opaque_existential_1(a1 + 40);
}

uint64_t initializeWithCopy for RunningSyncRequests.Change(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  return a1;
}

uint64_t *assignWithCopy for RunningSyncRequests.Change(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  __swift_assign_boxed_opaque_existential_1(a1 + 5, a2 + 5);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy80_8_0(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for RunningSyncRequests.Change(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for RunningSyncRequests.Change(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RunningSyncRequests.Change(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RunningSyncRequests.Change()
{
  return &type metadata for RunningSyncRequests.Change;
}

uint64_t __swift_memcpy5_4(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_BYTE *)(result + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for RunningSyncRequests.Change.Started(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 5))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 4);
  v4 = v3 >= 4;
  v5 = v3 - 4;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for RunningSyncRequests.Change.Started(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 5) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 5) = 0;
    if (a2)
      *(_BYTE *)(result + 4) = a2 + 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for RunningSyncRequests.Change.Started()
{
  return &type metadata for RunningSyncRequests.Change.Started;
}

uint64_t getEnumTagSinglePayload for RunningSyncRequests.Change.Completed(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 4);
  v4 = v3 >= 4;
  v5 = v3 - 4;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for RunningSyncRequests.Change.Completed(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_BYTE *)(result + 4) = a2 + 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for RunningSyncRequests.Change.Completed()
{
  return &type metadata for RunningSyncRequests.Change.Completed;
}

uint64_t sub_1A54FCA28(uint64_t a1)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

void sub_1A54FCA5C(uint64_t a1)
{
  __asm { BR              X10 }
}

unint64_t sub_1A54FCA9C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  sub_1A54FD2C4(v2);
  sub_1A54FD2C4(v2);
  sub_1A54FD2C4(v1);
  sub_1A54FCA5C(v2);
  v4 = v3;
  sub_1A54FD2C4(v1);
  sub_1A54FCA5C(v1);
  v6 = v5;
  if (((v4 >> 59) & 0x1E | (v4 >> 2) & 1) == 0x18)
  {
    v7 = *(_QWORD **)((v4 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
    if (((v5 >> 59) & 0x1E | (v5 >> 2) & 1) == 0x18)
    {
      v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      v9 = swift_allocObject();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A54EB73C(v8);
      sub_1A54FD258(v2);
      sub_1A54FD258(v1);
      sub_1A54E472C(v6);
      sub_1A54E472C(v4);
      sub_1A54FD258(v0);
      *(_QWORD *)(v9 + 16) = v7;
      return v9 | 0xC000000000000000;
    }
    else
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A54E42F8(v6);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v7 = sub_1A54EFFAC(0, v7[2] + 1, 1, v7);
      v15 = v7[2];
      v14 = v7[3];
      if (v15 >= v14 >> 1)
        v7 = sub_1A54EFFAC((_QWORD *)(v14 > 1), v15 + 1, 1, v7);
      v16 = swift_allocObject();
      v7[2] = v15 + 1;
      v7[v15 + 4] = v6;
      sub_1A54FD258(v2);
      sub_1A54FD258(v1);
      sub_1A54E472C(v6);
      sub_1A54E472C(v4);
      sub_1A54FD258(v0);
      *(_QWORD *)(v16 + 16) = v7;
      return v16 | 0xC000000000000000;
    }
  }
  else if (((v5 >> 59) & 0x1E | (v5 >> 2) & 1) == 0x18)
  {
    v11 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AF80);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1A59ABD10;
    *(_QWORD *)(v12 + 32) = v4;
    v19 = v12;
    sub_1A54E42F8(v4);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v13 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54EB73C(v13);
    sub_1A54FD258(v2);
    sub_1A54FD258(v1);
    sub_1A54E472C(v4);
    swift_bridgeObjectRelease();
    sub_1A54E472C(v6);
    sub_1A54FD258(v0);
    *(_QWORD *)(v11 + 16) = v19;
    return v11 | 0xC000000000000000;
  }
  else
  {
    v17 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AF80);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1A59ABD40;
    *(_QWORD *)(v18 + 32) = v4;
    *(_QWORD *)(v18 + 40) = v6;
    sub_1A54E42F8(v6);
    sub_1A54E42F8(v4);
    sub_1A54FD258(v2);
    sub_1A54FD258(v1);
    sub_1A54E472C(v4);
    sub_1A54E472C(v6);
    sub_1A54FD258(v0);
    *(_QWORD *)(v17 + 16) = v18;
    return v17 | 0xC000000000000000;
  }
}

uint64_t sub_1A54FD234()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1A54FD258(unint64_t result)
{
  switch(result >> 60)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
      result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A54FD288()
{
  return swift_deallocObject();
}

uint64_t sub_1A54FD298()
{
  uint64_t v0;

  sub_1A54E472C(*(_QWORD *)(v0 + 16));
  sub_1A54E472C(*(_QWORD *)(v0 + 24));
  return swift_deallocObject();
}

unint64_t sub_1A54FD2C4(unint64_t result)
{
  switch(result >> 60)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
      result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A54FD2F4()
{
  uint64_t v0;

  sub_1A54E472C(*(_QWORD *)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1A54FD318()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A54FD344()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1A54FD368(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  unint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(unsigned __int8 *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(unsigned __int8 *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  if (sub_1A553639C(*(_QWORD *)a1, *(_QWORD *)a2) && (sub_1A54FA5A8(v2, v5) & 1) != 0 && ((v3 ^ v6) & 1) == 0)
    return sub_1A54FA980(v4, v7);
  else
    return 0;
}

uint64_t sub_1A54FD3F0(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  char v18;
  _OWORD v20[4];
  __int16 v21;
  _OWORD v22[4];
  __int16 v23;
  _OWORD v24[11];
  _OWORD v25[11];

  v2 = *(_OWORD *)(a1 + 144);
  v24[8] = *(_OWORD *)(a1 + 128);
  v24[9] = v2;
  v3 = *(_OWORD *)(a1 + 176);
  v24[10] = *(_OWORD *)(a1 + 160);
  v4 = *(_OWORD *)(a1 + 80);
  v24[4] = *(_OWORD *)(a1 + 64);
  v24[5] = v4;
  v5 = *(_OWORD *)(a1 + 112);
  v24[6] = *(_OWORD *)(a1 + 96);
  v24[7] = v5;
  v6 = *(_OWORD *)(a1 + 16);
  v24[0] = *(_OWORD *)a1;
  v24[1] = v6;
  v7 = *(_OWORD *)(a1 + 48);
  v24[2] = *(_OWORD *)(a1 + 32);
  v24[3] = v7;
  v8 = *(_OWORD *)(a1 + 192);
  v9 = *(_OWORD *)(a1 + 224);
  v20[2] = *(_OWORD *)(a1 + 208);
  v20[3] = v9;
  v20[0] = v3;
  v20[1] = v8;
  v10 = *(_OWORD *)(a2 + 144);
  v25[8] = *(_OWORD *)(a2 + 128);
  v25[9] = v10;
  v11 = *(_OWORD *)(a2 + 176);
  v25[10] = *(_OWORD *)(a2 + 160);
  v12 = *(_OWORD *)(a2 + 80);
  v25[4] = *(_OWORD *)(a2 + 64);
  v25[5] = v12;
  v13 = *(_OWORD *)(a2 + 112);
  v25[6] = *(_OWORD *)(a2 + 96);
  v25[7] = v13;
  v14 = *(_OWORD *)(a2 + 16);
  v25[0] = *(_OWORD *)a2;
  v25[1] = v14;
  v15 = *(_OWORD *)(a2 + 48);
  v25[2] = *(_OWORD *)(a2 + 32);
  v25[3] = v15;
  v16 = *(_OWORD *)(a2 + 192);
  v17 = *(_OWORD *)(a2 + 224);
  v22[2] = *(_OWORD *)(a2 + 208);
  v22[3] = v17;
  v21 = *(_WORD *)(a1 + 240);
  v23 = *(_WORD *)(a2 + 240);
  v22[0] = v11;
  v22[1] = v16;
  if (sub_1A5502B44((uint64_t)v24, (uint64_t)v25))
    v18 = static RemoteMailbox.__derived_struct_equals(_:_:)(v20, v22);
  else
    v18 = 0;
  return v18 & 1;
}

__n128 sub_1A54FD4C8@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  unsigned __int8 v2;
  unint64_t v3;
  __n128 result;

  v2 = v1[1].n128_u8[0];
  v3 = v1[1].n128_u64[1];
  result = *v1;
  *a1 = *v1;
  a1[1].n128_u8[0] = v2;
  a1[1].n128_u64[1] = v3;
  a1[2].n128_u64[0] = 0;
  return result;
}

uint64_t sub_1A54FD4E4()
{
  return 2;
}

unint64_t sub_1A54FD4EC()
{
  uint64_t v0;
  unint64_t v1;

  v1 = sub_1A54FF41C(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16), *(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1A54FD548(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1A54FD558(a1, a2, a3, *(_QWORD *)v3, *(_QWORD *)(v3 + 8), *(_BYTE *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_1A54FD558(uint64_t result, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  uint64_t v8;
  char v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __int128 *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  unsigned int v22;
  char v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *__dst;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  int v53;
  int v56;
  uint64_t v57;
  uint64_t v58;
  __int128 __src;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;

  v8 = a4;
  v9 = a6 & 1;
  if (!a2)
    goto LABEL_32;
  if (!a3)
  {
    v13 = 0;
    v36 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
    __break(1u);
    return result;
  }
  v10 = *(_QWORD *)(a4 + 16);
  if (!v10)
  {
LABEL_32:
    v13 = 0;
    v36 = 0;
    goto LABEL_35;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v41 = result;
  v42 = a4 + 32;
  v14 = 1;
  v43 = a6 & 1;
  v37 = a3;
  while (2)
  {
    __dst = v11;
    v40 = v12;
    v38 = v14;
    if (v13 < v10)
    {
      v15 = (__int128 *)(v42 + 176 * v13++);
      while (1)
      {
        v16 = v15[9];
        v67 = v15[8];
        v68 = v16;
        v69 = v15[10];
        v17 = v15[5];
        v63 = v15[4];
        v64 = v17;
        v18 = v15[7];
        v65 = v15[6];
        v66 = v18;
        v19 = v15[1];
        __src = *v15;
        v60 = v19;
        v20 = v15[3];
        v61 = v15[2];
        v62 = v20;
        if (*(_QWORD *)(a5 + 16))
        {
          v57 = *((_QWORD *)&__src + 1);
          v58 = __src;
          v21 = DWORD2(v60);
          v22 = DWORD1(v64);
          v23 = BYTE8(v64);
          v24 = sub_1A54FDC30(v60, DWORD2(v60));
          if ((v25 & 1) != 0)
            break;
        }
LABEL_25:
        v34 = *(_QWORD *)(v8 + 16);
        if (v13 == v34)
        {
          v36 = v40;
          result = v41;
          v9 = v43;
          goto LABEL_35;
        }
        v15 += 11;
        if (v13++ >= v34)
          goto LABEL_36;
      }
      v26 = *(_QWORD *)(a5 + 56) + 72 * v24;
      v27 = *(_QWORD *)v26;
      v52 = *(_BYTE *)(v26 + 12);
      v53 = *(_DWORD *)(v26 + 8);
      v56 = *(unsigned __int16 *)(v26 + 14);
      v51 = *(_BYTE *)(v26 + 16);
      v49 = *(_QWORD *)(v26 + 32);
      v50 = *(_QWORD *)(v26 + 24);
      v47 = *(_QWORD *)(v26 + 48);
      v48 = *(_QWORD *)(v26 + 40);
      v46 = *(_QWORD *)(v26 + 56);
      v44 = *(_BYTE *)(v26 + 65);
      v45 = *(_BYTE *)(v26 + 64);
      sub_1A54E3150((uint64_t)&__src);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v28 = *(unsigned __int16 *)RemoteMailbox.Attributes.noSelect.unsafeMutableAddressor();
      v29 = *(unsigned __int16 *)RemoteMailbox.Attributes.nonExistent.unsafeMutableAddressor();
      if (v28)
      {
        if ((v29 & ~v28) == 0)
        {
LABEL_15:
          if ((v28 & v56) != 0)
          {
LABEL_24:
            sub_1A54E31EC((uint64_t)&__src);
            swift_bridgeObjectRelease();
            v8 = a4;
            goto LABEL_25;
          }
LABEL_16:
          if (!v43
            || (v30 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0(),
                v31 = MailboxName.isInbox.getter(v30, v21),
                swift_bridgeObjectRelease(),
                (v31 & 1) != 0)
            || (v23 & 1) == 0 && ((BYTE12(v65) & 1) != 0 || DWORD2(v65) < v22)
            || *(_QWORD *)(a7 + 16)
            && (v32 = sub_1A54FDC94(v58, v57), (v33 & 1) != 0)
            && (~*(unsigned __int16 *)(*(_QWORD *)(a7 + 56) + 2 * v32) & 0x3FFF) != 0)
          {
            memmove(__dst, &__src, 0xB0uLL);
            *((_QWORD *)__dst + 22) = v27;
            *((_DWORD *)__dst + 46) = v53;
            __dst[188] = v52;
            *((_WORD *)__dst + 95) = v56;
            __dst[192] = v51;
            *((_QWORD *)__dst + 25) = v50;
            *((_QWORD *)__dst + 26) = v49;
            *((_QWORD *)__dst + 27) = v48;
            *((_QWORD *)__dst + 28) = v47;
            *((_QWORD *)__dst + 29) = v46;
            __dst[240] = v45;
            __dst[241] = v44;
            a3 = v37;
            v36 = v38;
            if (v38 == v37)
              goto LABEL_37;
            v11 = __dst + 248;
            v14 = v38 + 1;
            v8 = a4;
            v10 = *(_QWORD *)(a4 + 16);
            v12 = v38;
            result = v41;
            v9 = v43;
            if (v10 == v13)
              goto LABEL_35;
            continue;
          }
          goto LABEL_24;
        }
      }
      else if (!v29)
      {
        goto LABEL_16;
      }
      v28 |= v29;
      goto LABEL_15;
    }
    break;
  }
LABEL_36:
  __break(1u);
LABEL_37:
  v36 = a3;
  result = v41;
  v8 = a4;
  v9 = v43;
LABEL_35:
  *(_QWORD *)result = v8;
  *(_QWORD *)(result + 8) = a5;
  *(_BYTE *)(result + 16) = v9;
  *(_QWORD *)(result + 24) = a7;
  *(_QWORD *)(result + 32) = v13;
  return v36;
}

uint64_t sub_1A54FD8A4()
{
  return sub_1A594B790();
}

uint64_t sub_1A54FD8C4@<X0>(uint64_t a1@<X8>)
{
  _OWORD *v1;
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  __int128 *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  unsigned int v18;
  char v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  int v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _OWORD v53[11];
  char v54;
  char v55;
  char v56;
  char v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  _BYTE v69[264];

  v3 = v2[4];
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v3 == v5)
  {
LABEL_2:
    sub_1A54FF3A8((uint64_t)v53);
    goto LABEL_3;
  }
  if (v3 < v5)
  {
    v1 = v53;
    v7 = *(_QWORD *)(v52 + 8);
    v8 = (__int128 *)(v4 + 176 * v3 + 32);
    while (1)
    {
      v9 = *v8;
      v10 = v8[2];
      v59 = v8[1];
      v60 = v10;
      v11 = v8[3];
      v12 = v8[4];
      v13 = v8[6];
      v63 = v8[5];
      v64 = v13;
      v61 = v11;
      v62 = v12;
      v14 = v8[7];
      v15 = v8[8];
      v16 = v8[10];
      v67 = v8[9];
      v68 = v16;
      v65 = v14;
      v66 = v15;
      v58 = v9;
      if (!*(_QWORD *)(v7 + 16))
        goto LABEL_23;
      v50 = *((_QWORD *)&v58 + 1);
      v51 = v58;
      v17 = DWORD2(v59);
      v18 = DWORD1(v63);
      v19 = BYTE8(v63);
      v20 = sub_1A54FDC30(v59, DWORD2(v59));
      if ((v21 & 1) == 0)
        goto LABEL_23;
      v22 = *(_QWORD *)(v7 + 56) + 72 * v20;
      v23 = *(_QWORD *)v22;
      v38 = *(_DWORD *)(v22 + 8);
      v39 = *(_BYTE *)(v22 + 12);
      v40 = *(_BYTE *)(v22 + 16);
      v41 = *(_QWORD *)(v22 + 24);
      v42 = *(_QWORD *)(v22 + 32);
      v43 = *(_QWORD *)(v22 + 40);
      v44 = *(_QWORD *)(v22 + 48);
      v45 = *(_QWORD *)(v22 + 56);
      v46 = *(_BYTE *)(v22 + 64);
      v47 = *(_BYTE *)(v22 + 65);
      v48 = *(unsigned __int16 *)(v22 + 14);
      sub_1A54E3150((uint64_t)&v58);
      v49 = v23;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v24 = *(unsigned __int16 *)RemoteMailbox.Attributes.noSelect.unsafeMutableAddressor();
      v25 = *(unsigned __int16 *)RemoteMailbox.Attributes.nonExistent.unsafeMutableAddressor();
      if (!v24)
        break;
      if ((v25 & ~v24) != 0)
        goto LABEL_12;
LABEL_13:
      if ((v24 & v48) == 0)
      {
LABEL_14:
        if ((*(_BYTE *)(v52 + 16) & 1) == 0)
          goto LABEL_26;
        v26 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v27 = MailboxName.isInbox.getter(v26, v17);
        swift_bridgeObjectRelease();
        if ((v27 & 1) != 0 || (v19 & 1) == 0 && ((BYTE12(v64) & 1) != 0 || DWORD2(v64) < v18))
          goto LABEL_26;
        v28 = *(_QWORD *)(v52 + 24);
        if (*(_QWORD *)(v28 + 16))
        {
          v29 = sub_1A54FDC94(v51, v50);
          if ((v30 & 1) != 0 && (~*(unsigned __int16 *)(*(_QWORD *)(v28 + 56) + 2 * v29) & 0x3FFF) != 0)
            goto LABEL_26;
        }
      }
      sub_1A54E31EC((uint64_t)&v58);
      swift_bridgeObjectRelease();
LABEL_23:
      *(_QWORD *)(v52 + 32) = ++v3;
      v31 = *(_QWORD *)(v4 + 16);
      if (v3 == v31)
        goto LABEL_2;
      v8 += 11;
      if (v3 >= v31)
        goto LABEL_25;
    }
    if (!v25)
      goto LABEL_14;
LABEL_12:
    v24 |= v25;
    goto LABEL_13;
  }
LABEL_25:
  __break(1u);
LABEL_26:
  v32 = v1[25];
  v1[8] = v1[24];
  v1[9] = v32;
  v1[10] = v1[26];
  v33 = v1[21];
  v53[4] = v1[20];
  v53[5] = v33;
  v34 = v1[23];
  v53[6] = v1[22];
  v53[7] = v34;
  v35 = v1[17];
  v53[0] = v1[16];
  v53[1] = v35;
  v36 = v1[19];
  v53[2] = v1[18];
  v53[3] = v36;
  *((_QWORD *)v1 + 22) = v49;
  *((_DWORD *)v1 + 46) = v38;
  v54 = v39;
  *((_WORD *)v1 + 95) = v48;
  v55 = v40;
  *((_QWORD *)v1 + 25) = v41;
  *((_QWORD *)v1 + 26) = v42;
  *((_QWORD *)v1 + 27) = v43;
  *((_QWORD *)v1 + 28) = v44;
  *((_QWORD *)v1 + 29) = v45;
  v56 = v46;
  v57 = v47;
  nullsub_1(v53);
  *(_QWORD *)(v52 + 32) = v3 + 1;
LABEL_3:
  sub_1A54FF3D4((uint64_t)v53, (uint64_t)v69);
  return sub_1A54FF3D4((uint64_t)v69, a1);
}

uint64_t sub_1A54FDBAC@<X0>(uint64_t a1@<X8>)
{
  _BYTE v3[256];

  sub_1A54FD8C4((uint64_t)v3);
  return sub_1A54FF3D4((uint64_t)v3, a1);
}

unint64_t sub_1A54FDBE8()
{
  unint64_t result;

  result = qword_1EE7A85B0;
  if (!qword_1EE7A85B0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A3A70, &_s17FilteredMailboxesV8IteratorVN);
    atomic_store(result, (unint64_t *)&qword_1EE7A85B0);
  }
  return result;
}

unint64_t sub_1A54FDC30(uint64_t a1, unsigned int a2)
{
  uint64_t v4;

  sub_1A594CE64();
  sub_1A594CE88();
  v4 = sub_1A594CED0();
  return sub_1A54FE1A8(a1, a2, v4);
}

unint64_t sub_1A54FDC94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1A594CE64();
  sub_1A594CE88();
  v4 = sub_1A594CED0();
  return sub_1A54FE2CC(a1, a2, v4);
}

unint64_t sub_1A54FDCF4(int a1)
{
  uint64_t v2;

  sub_1A594CE64();
  sub_1A594CEAC();
  v2 = sub_1A594CED0();
  return sub_1A54FE3E4(a1, v2);
}

uint64_t sub_1A54FDD58(uint64_t a1, unint64_t a2)
{
  uint64_t v4;

  sub_1A594CE64();
  sub_1A54E42B4(a1, a2);
  sub_1A5949F9C();
  sub_1A54E46E8(a1, a2);
  v4 = sub_1A594CED0();
  return sub_1A54FE480(a1, a2, v4);
}

void sub_1A54FDDD4(uint64_t a1, uint64_t a2)
{
  sub_1A594CE64();
  __asm { BR              X10 }
}

uint64_t sub_1A54FDE24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  sub_1A594CE88();
  sub_1A54E3414();
  MessageIdentifierSet.hash(into:)((uint64_t)&v5, v2, v1 & 0xFFFFFFFFFFLL);
  v3 = sub_1A594CED0();
  return sub_1A54FE908(v2, v1, v0, v3);
}

void sub_1A54FDEE8(uint64_t a1)
{
  sub_1A594CE64();
  swift_beginAccess();
  __asm { BR              X10 }
}

uint64_t sub_1A54FDF50()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  sub_1A594CE88();
  sub_1A54E4334(v2, v1, SBYTE4(v1));
  sub_1A54E3414();
  MessageIdentifierSet.hash(into:)((uint64_t)&v5, v2, v1 & 0xFFFFFFFFFFLL);
  sub_1A54FA2A8(v2, v1);
  v3 = sub_1A594CED0();
  return sub_1A54FEC6C(v0, v3);
}

unint64_t sub_1A54FE060(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1A594CE64();
  sub_1A594B1D8();
  v4 = sub_1A594CED0();
  return sub_1A54FEFF8(a1, a2, v4);
}

unint64_t sub_1A54FE0C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _BYTE v6[72];

  sub_1A594CE64();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54F55DC((uint64_t)v6, a1);
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54F55DC((uint64_t)v6, a2);
  swift_bridgeObjectRelease();
  v4 = sub_1A594CED0();
  return sub_1A54FF0D8(a1, a2, v4);
}

unint64_t sub_1A54FE150(uint64_t a1)
{
  uint64_t v2;

  sub_1A594CE64();
  MoveOrCopy.hash(into:)();
  v2 = sub_1A594CED0();
  return sub_1A54FF1D4(a1, v2);
}

unint64_t sub_1A54FE1A8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  uint64_t v12;
  unsigned __int8 *v13;
  int v14;
  int v15;
  int v16;

  v5 = -1 << *(_BYTE *)(v3 + 32);
  result = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = ~v5;
    while (1)
    {
      v8 = *(_QWORD *)(v3 + 48) + 16 * result;
      if ((*(unsigned int *)(v8 + 8) | ((unint64_t)*(unsigned int *)(v8 + 8) << 32)) == (a2 | ((unint64_t)a2 << 32)))
      {
        v9 = *(_QWORD *)v8;
        v10 = *(_QWORD *)(v9 + 16);
        if (v10 == *(_QWORD *)(a1 + 16))
        {
          if (!v10 || v9 == a1)
            return result;
          if (*(unsigned __int8 *)(v9 + 32) == *(unsigned __int8 *)(a1 + 32))
          {
            if (v10 == 1)
              return result;
            if (*(unsigned __int8 *)(v9 + 33) == *(unsigned __int8 *)(a1 + 33))
            {
              if (v10 == 2)
                return result;
              if (*(unsigned __int8 *)(v9 + 34) == *(unsigned __int8 *)(a1 + 34))
              {
                if (v10 == 3)
                  return result;
                if (*(unsigned __int8 *)(v9 + 35) == *(unsigned __int8 *)(a1 + 35))
                  break;
              }
            }
          }
        }
      }
LABEL_3:
      result = (result + 1) & v7;
      if (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) == 0)
        return result;
    }
    v11 = (unsigned __int8 *)(v9 + 36);
    v12 = v10 - 4;
    v13 = (unsigned __int8 *)(a1 + 36);
    while (v12)
    {
      v15 = *v11++;
      v14 = v15;
      v16 = *v13++;
      --v12;
      if (v14 != v16)
        goto LABEL_3;
    }
  }
  return result;
}

unint64_t sub_1A54FE2CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  uint64_t v12;
  unsigned __int8 *v13;
  int v14;
  int v15;
  int v16;

  v5 = -1 << *(_BYTE *)(v3 + 32);
  result = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = ~v5;
    while (1)
    {
      v8 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * result);
      if (v8[1] == a2)
      {
        v9 = *v8;
        v10 = *(_QWORD *)(v9 + 16);
        if (v10 == *(_QWORD *)(a1 + 16))
        {
          if (!v10 || v9 == a1)
            return result;
          if (*(unsigned __int8 *)(v9 + 32) == *(unsigned __int8 *)(a1 + 32))
          {
            if (v10 == 1)
              return result;
            if (*(unsigned __int8 *)(v9 + 33) == *(unsigned __int8 *)(a1 + 33))
            {
              if (v10 == 2)
                return result;
              if (*(unsigned __int8 *)(v9 + 34) == *(unsigned __int8 *)(a1 + 34))
              {
                if (v10 == 3)
                  return result;
                if (*(unsigned __int8 *)(v9 + 35) == *(unsigned __int8 *)(a1 + 35))
                  break;
              }
            }
          }
        }
      }
LABEL_3:
      result = (result + 1) & v7;
      if (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) == 0)
        return result;
    }
    v11 = (unsigned __int8 *)(v9 + 36);
    v12 = v10 - 4;
    v13 = (unsigned __int8 *)(a1 + 36);
    while (v12)
    {
      v15 = *v11++;
      v14 = v15;
      v16 = *v13++;
      --v12;
      if (v14 != v16)
        goto LABEL_3;
    }
  }
  return result;
}

unint64_t sub_1A54FE3E4(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_DWORD *)(v7 + 4 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_DWORD *)(v7 + 4 * result) == a1)
          break;
      }
    }
  }
  return result;
}

uint64_t sub_1A54FE480(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v4 = -1 << *(_BYTE *)(v3 + 32);
  v5 = a3 & ~v4;
  if (((*(_QWORD *)(v3 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
    __asm { BR              X8 }
  return a3 & ~v4;
}

uint64_t sub_1A54FE908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v5 = -1 << *(_BYTE *)(v4 + 32);
  v6 = a4 & ~v5;
  if (((*(_QWORD *)(v4 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
    __asm { BR              X9 }
  return a4 & ~v5;
}

uint64_t sub_1A54FEC6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    swift_beginAccess();
    v5 = *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v4);
    swift_beginAccess();
    __asm { BR              X9 }
  }
  return a2 & ~v3;
}

unint64_t sub_1A54FEFF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1A594CD38() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1A594CD38() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1A54FF0D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v4 = -1 << *(_BYTE *)(v3 + 32);
  v5 = a3 & ~v4;
  if (((*(_QWORD *)(v3 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v8 = ~v4;
    do
    {
      v9 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v5);
      v10 = *v9;
      v11 = v9[1];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      if ((sub_1A54ED500(v10, a1) & 1) != 0)
      {
        v12 = sub_1A54ED500(v11, a2);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v12 & 1) != 0)
          return v5;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v5 = (v5 + 1) & v8;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

unint64_t sub_1A54FF1D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  char v15;
  _OWORD v17[2];
  uint64_t v18;
  _OWORD v19[2];
  uint64_t v20;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48) + 40 * i;
    v8 = *(_QWORD *)(v7 + 32);
    v9 = *(_OWORD *)(v7 + 16);
    v19[0] = *(_OWORD *)v7;
    v19[1] = v9;
    v20 = v8;
    sub_1A5500680((uint64_t)v19);
    v10 = static MoveOrCopy.__derived_struct_equals(_:_:)(v19, a1);
    sub_1A55006C0((uint64_t)v19);
    if ((v10 & 1) == 0)
    {
      v11 = ~v4;
      for (i = (i + 1) & v11; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v11)
      {
        v12 = *(_QWORD *)(v2 + 48) + 40 * i;
        v13 = *(_QWORD *)(v12 + 32);
        v14 = *(_OWORD *)(v12 + 16);
        v17[0] = *(_OWORD *)v12;
        v17[1] = v14;
        v18 = v13;
        sub_1A5500680((uint64_t)v17);
        v15 = static MoveOrCopy.__derived_struct_equals(_:_:)(v17, a1);
        sub_1A55006C0((uint64_t)v17);
        if ((v15 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

BOOL sub_1A54FF30C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL8 result;
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (*(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(a2 + 32))
    return 0;
  if (v2 == 1)
    return 1;
  if (*(unsigned __int8 *)(a1 + 33) != *(unsigned __int8 *)(a2 + 33))
    return 0;
  if (v2 == 2)
    return 1;
  if (*(unsigned __int8 *)(a1 + 34) != *(unsigned __int8 *)(a2 + 34))
    return 0;
  v4 = (unsigned __int8 *)(a1 + 35);
  v5 = (unsigned __int8 *)(a2 + 35);
  v6 = v2 - 3;
  do
  {
    result = v6 == 0;
    if (!v6)
      break;
    v8 = *v4++;
    v7 = v8;
    v9 = *v5++;
    --v6;
  }
  while (v7 == v9);
  return result;
}

double sub_1A54FF3A8(uint64_t a1)
{
  double result;

  *(_WORD *)(a1 + 240) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t sub_1A54FF3D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797CD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A54FF41C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  unint64_t v6;
  unint64_t result;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  unsigned int v20;
  char v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  char *v32;
  unint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  BOOL v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char v56;
  int v57;
  char v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  unint64_t v62;
  __int128 __src;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;

  v6 = *(_QWORD *)(a1 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v59 = a4;
  result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v62 = v6;
  if (!v6)
  {
    v10 = 0;
LABEL_41:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_42:
    result = swift_bridgeObjectRelease();
    v42 = v8[3];
    if (v42 >= 2)
    {
      v43 = v42 >> 1;
      v41 = __OFSUB__(v43, v10);
      v44 = v43 - v10;
      if (v41)
      {
LABEL_47:
        __break(1u);
        goto LABEL_48;
      }
      v8[2] = v44;
    }
    return (unint64_t)v8;
  }
  v9 = 0;
  v10 = 0;
  v11 = MEMORY[0x1E0DEE9D8] + 32;
  while (2)
  {
    if (v9 >= v62)
    {
      __break(1u);
      goto LABEL_47;
    }
    v45 = v11;
    v46 = v10;
    v47 = v8;
    for (i = 176 * v9++ + 32; ; i += 176)
    {
      v13 = *(_OWORD *)(a1 + i + 144);
      v72 = *(_OWORD *)(a1 + i + 128);
      v73 = v13;
      v74 = *(_OWORD *)(a1 + i + 160);
      v14 = *(_OWORD *)(a1 + i + 80);
      v68 = *(_OWORD *)(a1 + i + 64);
      v69 = v14;
      v15 = *(_OWORD *)(a1 + i + 112);
      v70 = *(_OWORD *)(a1 + i + 96);
      v71 = v15;
      v16 = *(_OWORD *)(a1 + i + 16);
      __src = *(_OWORD *)(a1 + i);
      v65 = v16;
      v17 = *(_OWORD *)(a1 + i + 48);
      v66 = *(_OWORD *)(a1 + i + 32);
      v67 = v17;
      if (*(_QWORD *)(a2 + 16))
      {
        v18 = __src;
        v19 = DWORD2(v65);
        v20 = DWORD1(v69);
        v21 = BYTE8(v69);
        v22 = sub_1A54FDC30(v65, DWORD2(v65));
        if ((v23 & 1) != 0)
          break;
      }
LABEL_22:
      if (v62 == v9)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v10 = v46;
        v8 = v47;
        goto LABEL_42;
      }
      ++v9;
    }
    v24 = *(_QWORD *)(a2 + 56) + 72 * v22;
    v25 = *(_QWORD *)v24;
    v56 = *(_BYTE *)(v24 + 12);
    v57 = *(_DWORD *)(v24 + 8);
    v60 = *(unsigned __int16 *)(v24 + 14);
    v55 = *(_BYTE *)(v24 + 16);
    v53 = *(_QWORD *)(v24 + 32);
    v54 = *(_QWORD *)(v24 + 24);
    v51 = *(_QWORD *)(v24 + 48);
    v52 = *(_QWORD *)(v24 + 40);
    v50 = *(_QWORD *)(v24 + 56);
    v49 = *(_BYTE *)(v24 + 64);
    v58 = *(_BYTE *)(v24 + 65);
    sub_1A54E3150((uint64_t)&__src);
    v61 = v25;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v26 = *(unsigned __int16 *)RemoteMailbox.Attributes.noSelect.unsafeMutableAddressor();
    result = (unint64_t)RemoteMailbox.Attributes.nonExistent.unsafeMutableAddressor();
    v27 = *(unsigned __int16 *)result;
    if (!v26)
    {
      if (!*(_WORD *)result)
        goto LABEL_13;
      goto LABEL_11;
    }
    if ((v27 & ~v26) != 0)
LABEL_11:
      v26 |= v27;
    if ((v26 & v60) != 0)
    {
LABEL_21:
      sub_1A54E31EC((uint64_t)&__src);
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
LABEL_13:
    if ((a3 & 1) != 0)
    {
      v28 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v29 = MailboxName.isInbox.getter(v28, v19);
      result = swift_bridgeObjectRelease();
      if ((v29 & 1) == 0 && ((v21 & 1) != 0 || (BYTE12(v70) & 1) == 0 && DWORD2(v70) >= v20))
      {
        if (!*(_QWORD *)(v59 + 16))
          goto LABEL_21;
        result = sub_1A54FDC94(v18, *((uint64_t *)&v18 + 1));
        if ((v30 & 1) == 0 || (~*(unsigned __int16 *)(*(_QWORD *)(v59 + 56) + 2 * result) & 0x3FFF) == 0)
          goto LABEL_21;
      }
    }
    v31 = v46;
    if (v46)
    {
      v8 = v47;
      v32 = (char *)v45;
    }
    else
    {
      v33 = v47[3];
      if ((uint64_t)((v33 >> 1) + 0x4000000000000000) < 0)
        goto LABEL_49;
      v34 = v33 & 0xFFFFFFFFFFFFFFFELL;
      if (v34 <= 1)
        v35 = 1;
      else
        v35 = v34;
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A85B8);
      v8 = (_QWORD *)swift_allocObject();
      v36 = (uint64_t)(_swift_stdlib_malloc_size_0(v8) - 32) / 248;
      v8[2] = v35;
      v8[3] = 2 * v36;
      v37 = (char *)(v8 + 4);
      v38 = v47[3] >> 1;
      v39 = 248 * v38;
      if (v47[2])
      {
        v40 = (char *)(v47 + 4);
        if (v8 != v47 || v37 >= &v40[v39])
          memmove(v8 + 4, v40, 248 * v38);
        v47[2] = 0;
      }
      v32 = &v37[v39];
      v31 = (v36 & 0x7FFFFFFFFFFFFFFFLL) - v38;
      result = swift_release();
    }
    v41 = __OFSUB__(v31, 1);
    v10 = v31 - 1;
    if (!v41)
    {
      result = (unint64_t)memmove(v32, &__src, 0xB0uLL);
      *((_QWORD *)v32 + 22) = v61;
      *((_DWORD *)v32 + 46) = v57;
      v32[188] = v56;
      *((_WORD *)v32 + 95) = v60;
      v32[192] = v55;
      *((_QWORD *)v32 + 25) = v54;
      *((_QWORD *)v32 + 26) = v53;
      *((_QWORD *)v32 + 27) = v52;
      *((_QWORD *)v32 + 28) = v51;
      *((_QWORD *)v32 + 29) = v50;
      v32[240] = v49;
      v32[241] = v58;
      v11 = (uint64_t)(v32 + 248);
      if (v62 != v9)
        continue;
      goto LABEL_41;
    }
    break;
  }
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
  return result;
}

void sub_1A54FF84C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t *v6;
  uint64_t v7;
  unint64_t *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t *v14;
  int v15;
  char v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  BOOL v21;
  unint64_t v22;

  v3 = *(_QWORD *)(a3 + 16);
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A85C0);
    v6 = (unint64_t *)swift_allocObject();
    v7 = (uint64_t)(_swift_stdlib_malloc_size_0(v6) - 32) / 24;
    v6[2] = v3;
    v8 = v6 + 2;
    v6[3] = 2 * v7;
    v9 = v7 & 0x7FFFFFFFFFFFFFFFLL;
    v10 = (int *)(a2 + 32);
    v11 = *(_QWORD *)(a2 + 16);
    v12 = (char *)(a3 + 41);
    v13 = 4;
    do
    {
      if (!v11)
      {
        __break(1u);
        goto LABEL_12;
      }
      v14 = &v6[v13];
      v15 = *v10++;
      --v9;
      v16 = *v12;
      v17 = *(v12 - 1);
      v18 = *(_QWORD *)(v12 - 9);
      *(_DWORD *)v14 = v15;
      v14[1] = v18;
      *((_BYTE *)v14 + 16) = v17;
      *((_BYTE *)v14 + 17) = v16;
      v13 += 3;
      --v11;
      v12 += 16;
      --v3;
    }
    while (v3);
    v19 = v6[3];
    if (v19 >= 2)
      goto LABEL_8;
  }
  else
  {
    v8 = (unint64_t *)(MEMORY[0x1E0DEE9D8] + 16);
    v19 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 24);
    v9 = v19 >> 1;
    if (v19 >= 2)
    {
LABEL_8:
      v20 = v19 >> 1;
      v21 = __OFSUB__(v20, v9);
      v22 = v20 - v9;
      if (v21)
LABEL_12:
        __break(1u);
      else
        *v8 = v22;
    }
  }
}

void sub_1A54FF96C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_1A54FF9CC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x1A54FFBB8);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

uint64_t _s17FilteredMailboxesV8IteratorVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t _s17FilteredMailboxesV8IteratorVwca(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t _s17FilteredMailboxesV8IteratorVwta(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for MailboxSelectionFailure(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MailboxSelectionFailure(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s17FilteredMailboxesV8IteratorVMa()
{
  return &_s17FilteredMailboxesV8IteratorVN;
}

uint64_t destroy for DisplayPartTree.ChildNodes.Iterator()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s17FilteredMailboxesVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t _s17FilteredMailboxesVwca(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8_0(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t _s17FilteredMailboxesVwta(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s17FilteredMailboxesVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ByteBufferAllocator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s17FilteredMailboxesVMa()
{
  return &_s17FilteredMailboxesVN;
}

uint64_t _s17FilteredMailboxesV7ElementVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 72) >= 3uLL)
    swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s17FilteredMailboxesV7ElementVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v7 = a2 + 72;
  v6 = *(_QWORD *)(a2 + 72);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v6 >= 3)
  {
    *(_QWORD *)(a1 + 72) = v6;
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    *(_QWORD *)(a1 + 72) = *(_QWORD *)v7;
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(v7 + 8);
  }
  *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 113) = *(_OWORD *)(a2 + 113);
  v8 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v8;
  v10 = *(_QWORD *)(a2 + 152);
  v9 = *(_QWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_QWORD *)(a1 + 152) = v10;
  *(_QWORD *)(a1 + 160) = v9;
  *(_DWORD *)(a1 + 172) = *(_DWORD *)(a2 + 172);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_DWORD *)(a1 + 184) = *(_DWORD *)(a2 + 184);
  *(_BYTE *)(a1 + 188) = *(_BYTE *)(a2 + 188);
  *(_WORD *)(a1 + 190) = *(_WORD *)(a2 + 190);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 226) = *(_OWORD *)(a2 + 226);
  swift_retain();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t _s17FilteredMailboxesV7ElementVwca(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  int v11;
  int v12;
  char v13;
  char v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  v4 = *(_DWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  *(_DWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v6;
  v7 = (_QWORD *)(a1 + 72);
  v9 = (_QWORD *)(a2 + 72);
  v8 = *(_QWORD *)(a2 + 72);
  if (*(_QWORD *)(a1 + 72) >= 3uLL)
  {
    if (v8 >= 3)
    {
      *(_QWORD *)(a1 + 72) = v8;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    }
    else
    {
      sub_1A550037C(a1 + 72);
      v11 = *(_DWORD *)(a2 + 80);
      *v7 = *v9;
      *(_DWORD *)(a1 + 80) = v11;
    }
  }
  else if (v8 >= 3)
  {
    *(_QWORD *)(a1 + 72) = v8;
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    v10 = *v9;
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    *v7 = v10;
  }
  v12 = *(_DWORD *)(a2 + 84);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_DWORD *)(a1 + 84) = v12;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_retain();
  swift_release();
  v13 = *(_BYTE *)(a2 + 108);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 108) = v13;
  v14 = *(_BYTE *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 128) = v14;
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = v15;
  *(_DWORD *)(a1 + 172) = *(_DWORD *)(a2 + 172);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 184) = *(_DWORD *)(a2 + 184);
  *(_BYTE *)(a1 + 188) = *(_BYTE *)(a2 + 188);
  *(_WORD *)(a1 + 190) = *(_WORD *)(a2 + 190);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  v16 = *(_OWORD *)(a2 + 200);
  v17 = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 226) = *(_OWORD *)(a2 + 226);
  *(_OWORD *)(a1 + 216) = v17;
  *(_OWORD *)(a1 + 200) = v16;
  return a1;
}

uint64_t sub_1A550037C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A85C8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

__n128 __swift_memcpy242_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __n128 result;
  __int128 v12;
  __int128 v13;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  v5 = a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  v8 = a2[8];
  v9 = a2[9];
  v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  result = (__n128)a2[12];
  v12 = a2[13];
  v13 = a2[14];
  *(_WORD *)(a1 + 240) = *((_WORD *)a2 + 120);
  *(_OWORD *)(a1 + 208) = v12;
  *(_OWORD *)(a1 + 224) = v13;
  *(__n128 *)(a1 + 192) = result;
  return result;
}

uint64_t _s17FilteredMailboxesV7ElementVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 72);
  v6 = *(_QWORD *)(a1 + 72);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  if (v6 >= 3)
  {
    if (v5 >= 3)
    {
      *(_QWORD *)(a1 + 72) = v5;
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
      goto LABEL_6;
    }
    sub_1A550037C(a1 + 72);
  }
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
LABEL_6:
  *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_release();
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 108) = *(_BYTE *)(a2 + 108);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_DWORD *)(a1 + 172) = *(_DWORD *)(a2 + 172);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 184) = *(_DWORD *)(a2 + 184);
  *(_BYTE *)(a1 + 188) = *(_BYTE *)(a2 + 188);
  *(_WORD *)(a1 + 190) = *(_WORD *)(a2 + 190);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 226) = *(_OWORD *)(a2 + 226);
  return a1;
}

uint64_t _s17FilteredMailboxesV7ElementVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 242))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s17FilteredMailboxesV7ElementVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 232) = 0;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 240) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 242) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 242) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s17FilteredMailboxesV7ElementVMa()
{
  return &_s17FilteredMailboxesV7ElementVN;
}

uint64_t sub_1A5500680(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54E42B4(v2, v3);
  return a1;
}

uint64_t sub_1A55006C0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  swift_bridgeObjectRelease();
  sub_1A54E46E8(v2, v3);
  return a1;
}

uint64_t _s12LocalMailboxVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 72) >= 3uLL)
    swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s12LocalMailboxVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v7 = a2 + 72;
  v6 = *(_QWORD *)(a2 + 72);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v6 >= 3)
  {
    *(_QWORD *)(a1 + 72) = v6;
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    *(_QWORD *)(a1 + 72) = *(_QWORD *)v7;
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(v7 + 8);
  }
  *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 113) = *(_OWORD *)(a2 + 113);
  v8 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v8;
  v10 = *(_QWORD *)(a2 + 152);
  v9 = *(_QWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_QWORD *)(a1 + 152) = v10;
  *(_QWORD *)(a1 + 160) = v9;
  *(_DWORD *)(a1 + 172) = *(_DWORD *)(a2 + 172);
  swift_retain();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t _s12LocalMailboxVwca(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  int v11;
  int v12;
  char v13;
  char v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  v4 = *(_DWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  *(_DWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v6;
  v7 = (_QWORD *)(a1 + 72);
  v9 = (_QWORD *)(a2 + 72);
  v8 = *(_QWORD *)(a2 + 72);
  if (*(_QWORD *)(a1 + 72) >= 3uLL)
  {
    if (v8 >= 3)
    {
      *(_QWORD *)(a1 + 72) = v8;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    }
    else
    {
      sub_1A550037C(a1 + 72);
      v11 = *(_DWORD *)(a2 + 80);
      *v7 = *v9;
      *(_DWORD *)(a1 + 80) = v11;
    }
  }
  else if (v8 >= 3)
  {
    *(_QWORD *)(a1 + 72) = v8;
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    v10 = *v9;
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    *v7 = v10;
  }
  v12 = *(_DWORD *)(a2 + 84);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_DWORD *)(a1 + 84) = v12;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_retain();
  swift_release();
  v13 = *(_BYTE *)(a2 + 108);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 108) = v13;
  v14 = *(_BYTE *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 128) = v14;
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = v15;
  *(_DWORD *)(a1 + 172) = *(_DWORD *)(a2 + 172);
  return a1;
}

__n128 __swift_memcpy176_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(__n128 *)(a1 + 112) = result;
  *(_OWORD *)(a1 + 128) = v8;
  return result;
}

uint64_t _s12LocalMailboxVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 72);
  v6 = *(_QWORD *)(a1 + 72);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  if (v6 >= 3)
  {
    if (v5 >= 3)
    {
      *(_QWORD *)(a1 + 72) = v5;
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
      goto LABEL_6;
    }
    sub_1A550037C(a1 + 72);
  }
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
LABEL_6:
  *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_release();
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 108) = *(_BYTE *)(a2 + 108);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_DWORD *)(a1 + 172) = *(_DWORD *)(a2 + 172);
  return a1;
}

uint64_t _s12LocalMailboxVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 176))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s12LocalMailboxVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 176) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 176) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s12LocalMailboxVMa()
{
  return &_s12LocalMailboxVN;
}

uint64_t sub_1A5500C80(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v16;
  int64_t v17;
  char v18;

  v6 = a3 + 56;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v12 = 0;
  while (v9)
  {
    v13 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v14 = v13 | (v12 << 6);
LABEL_5:
    v18 = *(_BYTE *)(*(_QWORD *)(a3 + 48) + v14);
    result = a1(&v18);
    if (v3)
      return swift_release();
  }
  if (__OFADD__(v12++, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v12 >= v10)
    return swift_release();
  v16 = *(_QWORD *)(v6 + 8 * v12);
  if (v16)
  {
LABEL_19:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v12 << 6);
    goto LABEL_5;
  }
  v17 = v12 + 1;
  if (v12 + 1 >= v10)
    return swift_release();
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
    goto LABEL_18;
  v17 = v12 + 2;
  if (v12 + 2 >= v10)
    return swift_release();
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
    goto LABEL_18;
  v17 = v12 + 3;
  if (v12 + 3 >= v10)
    return swift_release();
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
    goto LABEL_18;
  v17 = v12 + 4;
  if (v12 + 4 >= v10)
    return swift_release();
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
LABEL_18:
    v12 = v17;
    goto LABEL_19;
  }
  while (1)
  {
    v12 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v12 >= v10)
      return swift_release();
    v16 = *(_QWORD *)(v6 + 8 * v12);
    ++v17;
    if (v16)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1A5500DF8(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t i;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;

  v6 = a3 + 56;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v12 = 0;
  if (!v9)
    goto LABEL_5;
LABEL_4:
  v13 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (i = v13 | (v12 << 6); ; i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    v18 = *(_QWORD *)(a3 + 48) + 16 * i;
    v19 = *(_QWORD *)v18;
    LODWORD(v18) = *(_DWORD *)(v18 + 8);
    v20 = v19;
    v21 = v18;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    a1(&v20);
    if (v3)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
    result = swift_bridgeObjectRelease();
    if (v9)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v12++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v12 >= v10)
      return swift_release();
    v16 = *(_QWORD *)(v6 + 8 * v12);
    if (!v16)
      break;
LABEL_17:
    v9 = (v16 - 1) & v16;
  }
  v17 = v12 + 1;
  if (v12 + 1 >= v10)
    return swift_release();
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
    goto LABEL_16;
  v17 = v12 + 2;
  if (v12 + 2 >= v10)
    return swift_release();
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
    goto LABEL_16;
  v17 = v12 + 3;
  if (v12 + 3 >= v10)
    return swift_release();
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
    goto LABEL_16;
  v17 = v12 + 4;
  if (v12 + 4 >= v10)
    return swift_release();
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
LABEL_16:
    v12 = v17;
    goto LABEL_17;
  }
  while (1)
  {
    v12 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v12 >= v10)
      return swift_release();
    v16 = *(_QWORD *)(v6 + 8 * v12);
    ++v17;
    if (v16)
      goto LABEL_17;
  }
LABEL_28:
  __break(1u);
  return result;
}

BOOL sub_1A5500FAC(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _OWORD v13[11];
  _OWORD v14[11];

  v2 = a1[9];
  v13[8] = a1[8];
  v13[9] = v2;
  v13[10] = a1[10];
  v3 = a1[5];
  v13[4] = a1[4];
  v13[5] = v3;
  v4 = a1[7];
  v13[6] = a1[6];
  v13[7] = v4;
  v5 = a1[1];
  v13[0] = *a1;
  v13[1] = v5;
  v6 = a1[3];
  v13[2] = a1[2];
  v13[3] = v6;
  v7 = a2[9];
  v14[8] = a2[8];
  v14[9] = v7;
  v14[10] = a2[10];
  v8 = a2[5];
  v14[4] = a2[4];
  v14[5] = v8;
  v9 = a2[7];
  v14[6] = a2[6];
  v14[7] = v9;
  v10 = a2[1];
  v14[0] = *a2;
  v14[1] = v10;
  v11 = a2[3];
  v14[2] = a2[2];
  v14[3] = v11;
  return sub_1A5502B44((uint64_t)v13, (uint64_t)v14);
}

BOOL sub_1A550103C(unsigned int *a1, unsigned int *a2)
{
  return sub_1A5502AC4(*a1 | ((unint64_t)*((unsigned __int8 *)a1 + 4) << 32), *((_QWORD *)a1 + 1), *((_QWORD *)a1 + 2), *((_BYTE *)a1 + 24), *a2 | ((unint64_t)*((unsigned __int8 *)a2 + 4) << 32), *((_QWORD *)a2 + 1), *((_QWORD *)a2 + 2), *((_BYTE *)a2 + 24));
}

_DWORD *sub_1A550108C@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result & 0xFFFFFF;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

void sub_1A55010A0(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

uint64_t sub_1A55010AC()
{
  sub_1A594CE64();
  sub_1A594CEAC();
  return sub_1A594CED0();
}

uint64_t sub_1A55010F0()
{
  return sub_1A594CEAC();
}

uint64_t sub_1A5501118()
{
  sub_1A594CE64();
  sub_1A594CEAC();
  return sub_1A594CED0();
}

BOOL sub_1A5501158(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1A550116C(uint64_t *a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  char v20;
  uint64_t v21;
  uint64_t result;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _OWORD v63[28];
  _BYTE v64[440];
  uint64_t v65;
  int v66;
  uint64_t v67;
  char v68;
  _QWORD v69[9];
  unsigned __int16 v70;
  unsigned __int8 v71;
  _OWORD v72[3];
  _OWORD v73[2];
  _OWORD v74[3];
  _OWORD v75[3];

  v47 = a5;
  v48 = a7;
  LODWORD(v52) = a2;
  sub_1A55032A0((uint64_t)a1, (uint64_t)v69, &qword_1EE798180);
  v55 = v69[0];
  v56 = v69[1];
  v57 = v69[2];
  v58 = v69[3];
  v59 = v69[4];
  v60 = v69[5];
  v61 = v69[6];
  v62 = v69[7];
  v53 = v70 | (v71 << 16);
  v54 = v69[8];
  v46 = _s12LocalMailboxV6LoggerVMa();
  MEMORY[0x1E0C80A78](v46);
  v49 = (uint64_t)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v45 - v12;
  v14 = sub_1A594A764();
  v50 = *(_QWORD *)(v14 - 8);
  v51 = v14;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(v7 + 96);
  v18 = v7;
  sub_1A55032A0((uint64_t)a1, (uint64_t)v72, &qword_1EE798180);
  if (*(_QWORD *)&v72[0])
  {
    v74[0] = v72[0];
    v74[1] = v72[1];
    v74[2] = v72[2];
    v75[0] = v73[0];
    *(_OWORD *)((char *)v75 + 11) = *(_OWORD *)((char *)v73 + 11);
    if ((DWORD2(v74[0]) | ((unint64_t)DWORD2(v74[0]) << 32)) == (*(unsigned int *)(v7 + 24) | ((unint64_t)*(unsigned int *)(v7 + 24) << 32))
      && sub_1A54FF30C(*(uint64_t *)&v74[0], *(_QWORD *)(v7 + 16)))
    {
      sub_1A5503538(a1);
      sub_1A5503538(a1);
      swift_retain();
      sub_1A5526DE8((uint64_t)v74, a3 & 0x1010101, (uint64_t)v64);
      swift_release();
      sub_1A5503320(v55);
      v19 = *(_DWORD *)(v7 + 84);
      v20 = *(_BYTE *)(v7 + 88);
      memcpy((char *)v63 + 4, v64, 0x1B5uLL);
      v68 = v20;
      _s13SelectedStateV8_StorageCMa();
      v21 = swift_allocObject();
      *(_DWORD *)(v21 + 16) = (_DWORD)v52;
      memcpy((void *)(v21 + 20), v63, 0x1B9uLL);
      *(_DWORD *)(v21 + 464) = v19;
      *(_BYTE *)(v21 + 468) = v68;
      result = swift_release();
      *(_QWORD *)(v7 + 96) = v21;
      return result;
    }
    sub_1A5503538(a1);
  }
  swift_retain();
  if (!v17)
    return sub_1A5503320(v55);
  swift_beginAccess();
  if (*(_DWORD *)(v17 + 16) != (_DWORD)v52)
  {
    swift_release();
    return sub_1A5503320(v55);
  }
  swift_beginAccess();
  v23 = *(_OWORD *)(v17 + 304);
  v63[2] = *(_OWORD *)(v17 + 288);
  v63[3] = v23;
  *(_QWORD *)((char *)&v63[3] + 13) = *(_QWORD *)(v17 + 317);
  v24 = *(_OWORD *)(v17 + 272);
  v63[0] = *(_OWORD *)(v17 + 256);
  v63[1] = v24;
  swift_retain_n();
  sub_1A5503358((uint64_t)v63);
  v25 = sub_1A55357C4();
  sub_1A5503408((uint64_t)v63);
  v26 = *(_QWORD *)(v25 + 16);
  swift_bridgeObjectRelease();
  if (v26)
  {
    v28 = v50;
    v27 = v51;
    v29 = v48;
    (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v16, v48, v51);
    sub_1A55034B8(v29, (uint64_t)v13, (uint64_t (*)(_QWORD))_s12LocalMailboxV6LoggerVMa);
    v30 = v49;
    sub_1A55034B8(v29, v49, (uint64_t (*)(_QWORD))_s12LocalMailboxV6LoggerVMa);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v31 = sub_1A594A74C();
    v32 = sub_1A594C000();
    v33 = v32;
    if (os_log_type_enabled(v31, v32))
    {
      v34 = swift_slowAlloc();
      v48 = swift_slowAlloc();
      v67 = v48;
      *(_DWORD *)v34 = 68158979;
      LODWORD(v65) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v34 + 8) = 256;
      v52 = v16;
      v35 = v46;
      v36 = *(int *)(v46 + 20);
      LODWORD(v47) = v33;
      v37 = v13[v36];
      sub_1A55034FC((uint64_t)v13, (uint64_t (*)(_QWORD))_s12LocalMailboxV6LoggerVMa);
      LOBYTE(v65) = v37;
      sub_1A594C3CC();
      *(_WORD *)(v34 + 11) = 1040;
      LODWORD(v65) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v34 + 17) = 512;
      v38 = *(int *)(v35 + 20);
      v39 = v49;
      v40 = v49 + v38;
      LOWORD(v65) = *(_WORD *)(v49 + v38 + 2);
      sub_1A594C3CC();
      *(_WORD *)(v34 + 21) = 2160;
      v65 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v34 + 31) = 2085;
      v41 = *(_DWORD *)(v40 + 16);
      v65 = *(_QWORD *)(v40 + 8);
      v66 = v41;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v42 = sub_1A594B4A8();
      v65 = sub_1A55791B0(v42, v43, &v67);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC(v39, (uint64_t (*)(_QWORD))_s12LocalMailboxV6LoggerVMa);
      _os_log_impl(&dword_1A4F90000, v31, (os_log_type_t)v47, "[%.*hhx-{%.*hx}-%{sensitive,mask.mailbox}s] Mailbox has pending updates while being deselected.", (uint8_t *)v34, 0x29u);
      v44 = v48;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v44, -1, -1);
      MEMORY[0x1A85B1964](v34, -1, -1);

      (*(void (**)(char *, uint64_t))(v50 + 8))(v52, v51);
    }
    else
    {
      sub_1A55034FC((uint64_t)v13, (uint64_t (*)(_QWORD))_s12LocalMailboxV6LoggerVMa);
      sub_1A55034FC(v30, (uint64_t (*)(_QWORD))_s12LocalMailboxV6LoggerVMa);

      (*(void (**)(char *, uint64_t))(v28 + 8))(v16, v27);
    }
    Set<>.formNonEmpty()();
  }
  swift_release_n();
  sub_1A5503320(v55);
  swift_release();
  result = swift_release();
  *(_QWORD *)(v18 + 96) = 0;
  return result;
}

uint64_t sub_1A55017F0(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v10;
  uint64_t i;
  unsigned int *v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _BYTE v23[8];
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unsigned int v29;
  unsigned __int8 v30;

  v6 = *(_QWORD **)(v3 + 152);
  v5 = (_QWORD *)(v3 + 152);
  v4 = v6;
  v7 = v6[2];
  if (v7)
  {
    v10 = 0;
    for (i = 10; LODWORD(v4[i - 6]) != (_DWORD)result; i += 7)
    {
      if (v7 == ++v10)
        return result;
    }
    if (BYTE4(a3) == 255)
    {
      sub_1A55A2444(v10, (uint64_t)v23);
      return sub_1A5503B08(v24, v25, v26, v27, v28, v29 | ((unint64_t)v30 << 32));
    }
    else
    {
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1A554B694(v4);
        v4 = (_QWORD *)result;
      }
      if (v10 >= v4[2])
      {
        __break(1u);
      }
      else
      {
        v12 = (unsigned int *)&v4[i];
        v13 = v4[i - 2];
        if ((v13 & 0x8000000000000000) == 0)
        {
          v21 = *((_QWORD *)v12 - 1);
          v22 = *v12 | ((unint64_t)*((unsigned __int8 *)v12 + 4) << 32);
          v14 = *((_QWORD *)v12 - 4);
          v20 = *((_QWORD *)v12 - 3);
          v15 = *((_QWORD *)v12 - 5);
          v16 = sub_1A54E3414();
          v17 = MessageIdentifierSet.init()(&type metadata for UID, v16);
          v19 = v18;
          sub_1A5503BA0(a2, a3);
          result = sub_1A5503B08(v15, v14, v20, v13, v21, v22);
          *((_QWORD *)v12 - 5) = a2;
          *((_QWORD *)v12 - 4) = a3 & 0xFFFFFFFFFFLL;
          *((_QWORD *)v12 - 3) = v17;
          *((_QWORD *)v12 - 2) = v19 & 0xFFFFFFFFFFLL | 0x8000000000000000;
          *((_QWORD *)v12 - 1) = 0;
          *((_BYTE *)v12 + 4) = -1;
          *v12 = 0;
        }
        *v5 = v4;
      }
    }
  }
  return result;
}

uint64_t sub_1A550196C(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v9;
  unsigned int *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;

  v38 = result;
  v5 = *(_QWORD **)(v4 + 152);
  v6 = v5[2];
  if (v6)
  {
    result = swift_isUniquelyReferenced_nonNull_native();
    v33 = v4;
    if ((result & 1) == 0)
    {
LABEL_14:
      result = (uint64_t)sub_1A554B694(v5);
      v5 = (_QWORD *)result;
    }
    v9 = 0;
    v34 = a4 & 0xFFFFFFFFFFLL;
    v35 = a2 & 0xFFFFFFFFFFLL;
    v10 = (unsigned int *)(v5 + 10);
    v36 = v5;
    v37 = v6;
    do
    {
      if (v9 >= v5[2])
      {
        __break(1u);
        goto LABEL_14;
      }
      v21 = *((_QWORD *)v10 - 2);
      if ((v21 & 0x8000000000000000) != 0)
      {
        v22 = *((_QWORD *)v10 - 5);
        v23 = *((_QWORD *)v10 - 4);
        v24 = *((_QWORD *)v10 - 3);
        v56 = *v10 | ((unint64_t)*((unsigned __int8 *)v10 + 4) << 32);
        v57 = *((_QWORD *)v10 - 1);
        v25 = sub_1A54E3414();
        v45 = v22;
        v49 = v49 & 0xFFFFFF0000000000 | v23 & 0xFFFFFFFFFFLL;
        v50 = v50 & 0xFFFFFF0000000000 | v35;
        MessageIdentifierSet.intersection(_:)(v22, v49, v38, v50);
        v27 = v26;
        v29 = v28;
        v30 = HIDWORD(v28);
        v51 = v51 & 0xFFFFFF0000000000 | v28 & 0xFFFFFFFFFFLL;
        v46 = v24;
        v52 = v52 & 0xFFFFFF0000000000 | v21 & 0xFFFFFFFFFFLL;
        MessageIdentifierSet.union(_:)(v26, v51, v24, v52);
        v43 = v32;
        v44 = v31;
        sub_1A54E3458(v27, v29, v30);
        a2 = BYTE4(v56);
        v47 = v21;
        if (BYTE4(v56) == 255)
        {
          v42 = MessageIdentifierSet.init()(&type metadata for UID, v25);
          v12 = v11;
          a2 = HIDWORD(v11);
          v13 = v57;
        }
        else
        {
          v13 = v57;
          v42 = v57;
          v12 = v56;
        }
        sub_1A5503BA0(v13, v56);
        v54 = v23 & 0xFFFFFFFFFFLL | v54 & 0xFFFFFF0000000000;
        v55 = v55 & 0xFFFFFF0000000000 | v34;
        MessageIdentifierSet.intersection(_:)(v22, v54, a3, v55);
        v15 = v14;
        v17 = v16;
        v40 = HIDWORD(v16);
        v53 = v53 & 0xFFFFFF0000000000 | v16 & 0xFFFFFFFFFFLL;
        a4 = v42;
        v48 = v48 & 0xFFFFFF0000000000 | v12 | ((unint64_t)a2 << 32);
        MessageIdentifierSet.union(_:)(v14, v53, v42, v48);
        v41 = v18;
        v20 = v19;
        sub_1A54E3458(v15, v17, v40);
        sub_1A54E3458(v42, v12, a2);
        sub_1A54E4334(v45, v23, SBYTE4(v23));
        result = sub_1A5503B08(v45, v23, v46, v47, v57, v56);
        *((_QWORD *)v10 - 5) = v45;
        *((_QWORD *)v10 - 4) = v23 & 0xFFFFFFFFFFLL;
        *((_QWORD *)v10 - 3) = v44;
        *((_QWORD *)v10 - 2) = v43 & 0xFFFFFFFFFFLL | 0x8000000000000000;
        *((_QWORD *)v10 - 1) = v41;
        *((_BYTE *)v10 + 4) = BYTE4(v20);
        *v10 = v20;
        v5 = v36;
        v6 = v37;
      }
      ++v9;
      v10 += 14;
    }
    while (v6 != v9);
    *(_QWORD *)(v33 + 152) = v5;
  }
  return result;
}

uint64_t sub_1A5501C44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  _BYTE __src[456];

  v2 = v1;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v4 = sub_1A5502FB4(v1 + 144, a1);
  result = swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(*(_QWORD *)(v1 + 144) + 16);
  if (v6 < v4)
    goto LABEL_32;
  sub_1A558AA90(v4, v6);
  v28 = a1 + 56;
  v7 = 1 << *(_BYTE *)(a1 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a1 + 56);
  v29 = (unint64_t)(v7 + 63) >> 6;
  result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v10 = 0;
  while (1)
  {
    while (v9)
    {
      v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v12 = v11 | (v10 << 6);
      if (*(_QWORD *)(v2 + 96))
        goto LABEL_24;
    }
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v13 >= v29)
      return swift_release();
    v14 = *(_QWORD *)(v28 + 8 * v13);
    ++v10;
    if (!v14)
    {
      v10 = v13 + 1;
      if (v13 + 1 >= v29)
        return swift_release();
      v14 = *(_QWORD *)(v28 + 8 * v10);
      if (!v14)
      {
        v10 = v13 + 2;
        if (v13 + 2 >= v29)
          return swift_release();
        v14 = *(_QWORD *)(v28 + 8 * v10);
        if (!v14)
          break;
      }
    }
LABEL_23:
    v9 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v10 << 6);
    if (*(_QWORD *)(v2 + 96))
    {
LABEL_24:
      v16 = a1;
      v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
      v18 = *v17;
      v19 = v17[1];
      sub_1A54E42B4(*v17, v19);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v20 = *(_QWORD *)(v2 + 96);
        swift_beginAccess();
        sub_1A5502F44(v20 + 16, (uint64_t)__src);
        _s13SelectedStateV8_StorageCMa();
        v21 = swift_allocObject();
        memcpy((void *)(v21 + 16), __src, 0x1C5uLL);
        *(_QWORD *)(v2 + 96) = v21;
        swift_release();
      }
      v22 = *(_QWORD *)(v2 + 96);
      swift_beginAccess();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v23 = sub_1A54FDD58(v18, v19);
      v25 = v24;
      swift_bridgeObjectRelease();
      if ((v25 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v27 = *(_QWORD *)(v22 + 328);
        *(_QWORD *)(v22 + 328) = 0x8000000000000000;
        if (!isUniquelyReferenced_nonNull_native)
          sub_1A554EC04();
        sub_1A54E46E8(*(_QWORD *)(*(_QWORD *)(v27 + 48) + 16 * v23), *(_QWORD *)(*(_QWORD *)(v27 + 48) + 16 * v23 + 8));
        sub_1A554DC0C(v23, v27);
        *(_QWORD *)(v22 + 328) = v27;
        swift_bridgeObjectRelease();
      }
      swift_endAccess();
      result = sub_1A54E46E8(v18, v19);
      a1 = v16;
    }
  }
  v15 = v13 + 3;
  if (v15 >= v29)
    return swift_release();
  v14 = *(_QWORD *)(v28 + 8 * v15);
  if (v14)
  {
    v10 = v15;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v29)
      return swift_release();
    v14 = *(_QWORD *)(v28 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_23;
  }
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1A5501F3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int v5;
  char v6;
  int v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v15[5];
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  _BYTE v19[16];
  int v20;
  char v21;
  uint64_t v22;
  char v23;

  v15[3] = a2;
  result = sub_1A5500C80((uint64_t (*)(char *))sub_1A5503260, (uint64_t)v15, a1);
  v4 = *(_QWORD *)(v2 + 96);
  if (v4)
  {
    result = swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)(v4 + 152) + 16) == 15
      && !*(_QWORD *)(*(_QWORD *)(v4 + 160) + 16)
      && !*(_QWORD *)(*(_QWORD *)(v4 + 168) + 16))
    {
      v5 = *(_DWORD *)(v4 + 464);
      v6 = *(_BYTE *)(v4 + 468);
      sub_1A54E30E0(v4 + 24, (uint64_t)v19);
      v7 = v20;
      v8 = v21;
      v9 = v22;
      v10 = v23;
      swift_retain();
      sub_1A54E311C((uint64_t)v19);
      if ((v8 & 1) != 0 || (v10 & 1) != 0)
      {
        result = swift_release();
        v12 = 0;
        v13 = 0;
        v14 = 1;
      }
      else
      {
        v16 = v9;
        UIDValidityWith.init(uidValidity:value:)(v7, (uint64_t)&v16, (uint64_t)&type metadata for ModificationSequenceValue, v11, &v17);
        result = swift_release();
        v14 = 0;
        v12 = v17;
        v13 = v18;
      }
      *(_DWORD *)(v2 + 104) = v5;
      *(_BYTE *)(v2 + 108) = v6;
      *(_QWORD *)(v2 + 112) = v12;
      *(_QWORD *)(v2 + 120) = v13;
      *(_BYTE *)(v2 + 128) = v14;
    }
  }
  return result;
}

uint64_t sub_1A5502074(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  os_log_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  unsigned __int8 v36;
  os_log_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[57];
  uint64_t v44[4];
  unsigned int v45;
  char v46;

  v6 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A594A764();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  v41 = v14;
  v42 = v13;
  (*(void (**)(char *, uint64_t))(v14 + 16))(v11, a3);
  sub_1A55034B8(a3, (uint64_t)v8, type metadata accessor for MailboxTaskLogger);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v15 = sub_1A594A74C();
  v16 = sub_1A594C000();
  v17 = v16;
  if (os_log_type_enabled(v15, v16))
  {
    v18 = swift_slowAlloc();
    v40 = a2;
    v19 = v18;
    v39 = swift_slowAlloc();
    v44[0] = v39;
    *(_DWORD *)v19 = 68159491;
    LODWORD(v43[0]) = 2;
    v45 = v12;
    sub_1A594C3CC();
    *(_WORD *)(v19 + 8) = 256;
    v20 = *(int *)(v6 + 20);
    v38 = v17;
    v21 = &v8[v20];
    LOBYTE(v43[0]) = v8[v20];
    sub_1A594C3CC();
    *(_WORD *)(v19 + 11) = 2082;
    v37 = v15;
    v22 = *((_QWORD *)v21 + 1);
    v23 = *((_QWORD *)v21 + 2);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v43[0] = sub_1A55791B0(v22, v23, v44);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 21) = 1040;
    LODWORD(v43[0]) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v19 + 27) = 512;
    LOWORD(v43[0]) = *((_WORD *)v21 + 12);
    sub_1A594C3CC();
    *(_WORD *)(v19 + 31) = 2160;
    v43[0] = 0x786F626C69616DLL;
    sub_1A594C3CC();
    *(_WORD *)(v19 + 41) = 2085;
    v24 = *((_DWORD *)v21 + 10);
    v43[0] = *((_QWORD *)v21 + 4);
    LODWORD(v43[1]) = v24;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v25 = sub_1A594B4A8();
    v43[0] = sub_1A55791B0(v25, v26, v44);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC((uint64_t)v8, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v19 + 51) = 2080;
    v27 = sub_1A5553D38(v45);
    v43[0] = sub_1A55791B0(v27, v28, v44);
    v12 = v45;
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    v29 = v37;
    _os_log_impl(&dword_1A4F90000, v37, (os_log_type_t)v38, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Marking step %s as complete.", (uint8_t *)v19, 0x3Du);
    v30 = v39;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v30, -1, -1);
    v31 = v19;
    a2 = v40;
    MEMORY[0x1A85B1964](v31, -1, -1);

  }
  else
  {
    sub_1A55034FC((uint64_t)v8, type metadata accessor for MailboxTaskLogger);

  }
  (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v42);
  result = *(_QWORD *)(a2 + 96);
  if (result)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v33 = *(_QWORD *)(a2 + 96);
      swift_beginAccess();
      sub_1A5502F44(v33 + 16, (uint64_t)v43);
      _s13SelectedStateV8_StorageCMa();
      v34 = swift_allocObject();
      memcpy((void *)(v34 + 16), v43, 0x1C5uLL);
      *(_QWORD *)(a2 + 96) = v34;
      swift_release();
    }
    v35 = *(uint64_t **)(a2 + 96);
    swift_beginAccess();
    if (sub_1A54E9FCC(v12, v35[20]))
    {
      sub_1A554B85C(v12);
      v36 = v12;
    }
    else
    {
      if (!sub_1A54E9FCC(v12, v35[19]) || !sub_1A54E9FCC(v12, v35[21]))
      {
        sub_1A54F3290(&v46, v12);
        return swift_endAccess();
      }
      v36 = v12;
    }
    sub_1A554B85C(v36);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_1A5502548()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  int v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  char *v24;
  os_signpost_id_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v30;
  NSObject *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  char v42[8];
  uint64_t v43;

  v1 = v0;
  v2 = sub_1A594A62C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v30 - v7;
  v9 = sub_1A594A65C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = tracingSignposter.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  OSSignpostID.init(engine:kind:idA:idB:)();
  sub_1A54E3150(v0);
  sub_1A54E3150(v0);
  sub_1A54E3150(v0);
  sub_1A54E3150(v0);
  sub_1A54E3150(v0);
  sub_1A54E3150(v0);
  v14 = sub_1A594A650();
  v37 = sub_1A594C150();
  if ((sub_1A594C318() & 1) != 0)
  {
    v31 = v14;
    v32 = v10;
    v34 = v9;
    v35 = v3;
    v15 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
    v33 = v6;
    v36 = v2;
    v15(v6, v8, v2);
    v16 = swift_slowAlloc();
    v30 = swift_slowAlloc();
    v41 = v30;
    *(_DWORD *)v16 = 141558787;
    v38 = 0x786F626C69616DLL;
    sub_1A594C3CC();
    *(_WORD *)(v16 + 12) = 2085;
    v17 = *(_DWORD *)(v1 + 24);
    v38 = *(_QWORD *)(v1 + 16);
    v39 = v17;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v18 = sub_1A594B4A8();
    v38 = sub_1A55791B0(v18, v19, &v41);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A54E31EC(v1);
    sub_1A54E31EC(v1);
    *(_WORD *)(v16 + 22) = 2048;
    v20 = *(_QWORD *)(*(_QWORD *)(v1 + 136) + 16);
    sub_1A54E31EC(v1);
    v38 = v20;
    sub_1A594C3CC();
    sub_1A54E31EC(v1);
    *(_WORD *)(v16 + 32) = 1024;
    sub_1A55032A0(v1 + 96, (uint64_t)v42, &qword_1EE797CB0);
    sub_1A55032A0((uint64_t)v42, (uint64_t)&v43, &qword_1EE797CB0);
    v21 = v43;
    if (v43)
    {
      swift_beginAccess();
      sub_1A54E30E0(v21 + 24, (uint64_t)&v38);
      LODWORD(v21) = sub_1A555486C(v40);
      sub_1A54E311C((uint64_t)&v38);
    }
    sub_1A54E31EC(v1);
    v23 = v31;
    v22 = v32;
    LODWORD(v38) = v21;
    sub_1A594C3CC();
    sub_1A54E31EC(v1);
    v24 = v33;
    v25 = sub_1A594A620();
    _os_signpost_emit_with_name_impl(&dword_1A4F90000, v23, (os_signpost_type_t)v37, v25, "LocalMailbox", "Mailbox %{sensitive,mask.mailbox}s syncs: %ld, steps: %u", (uint8_t *)v16, 0x26u);
    v26 = v30;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v26, -1, -1);
    MEMORY[0x1A85B1964](v16, -1, -1);

    v27 = v36;
    v28 = *(void (**)(char *, uint64_t))(v35 + 8);
    v28(v8, v36);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v34);
    return ((uint64_t (*)(char *, uint64_t))v28)(v24, v27);
  }
  else
  {
    sub_1A54E31EC(v1);
    sub_1A54E31EC(v1);

    sub_1A54E31EC(v1);
    sub_1A54E31EC(v1);
    sub_1A54E31EC(v1);
    sub_1A54E31EC(v1);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

uint64_t sub_1A5502970(void (*a1)(uint64_t *__return_ptr))
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  __int128 v9;

  a1(&v3);
  v9 = v4;
  v1 = v3;
  sub_1A5503278((uint64_t)&v9);
  v7 = v5;
  v8 = v6;
  sub_1A54F81BC((uint64_t)&v7);
  return v1;
}

uint64_t sub_1A55029CC(void (*a1)(_QWORD *__return_ptr))
{
  uint64_t v1;
  _QWORD v3[5];
  int v4;
  uint64_t v5;
  int v6;

  a1(v3);
  v1 = v3[1];
  v5 = v3[4];
  v6 = v4;
  sub_1A54F81BC((uint64_t)&v5);
  return v1;
}

uint64_t sub_1A5502A1C(void (*a1)(uint64_t *__return_ptr))
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  unsigned __int16 v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  __int128 v10;

  a1(&v3);
  v10 = v4;
  v1 = v5;
  sub_1A5503278((uint64_t)&v10);
  v8 = v6;
  v9 = v7;
  sub_1A54F81BC((uint64_t)&v8);
  return v1;
}

uint64_t sub_1A5502A78(void (*a1)(uint64_t *__return_ptr))
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  __int128 v6;

  a1(&v3);
  v1 = v5;
  v6 = v4;
  sub_1A5503278((uint64_t)&v6);
  return v1;
}

BOOL sub_1A5502AC4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, int a6, uint64_t a7, char a8)
{
  int v8;
  _BOOL8 result;
  unint64_t v10;
  int v11;
  uint64_t v12;
  _QWORD v13[2];
  char v14;

  if ((a1 & 0x100000000) != 0)
  {
    if ((a5 & 0x100000000) == 0)
      return 0;
    goto LABEL_6;
  }
  v8 = a1;
  result = 0;
  if ((a5 & 0x100000000) == 0 && v8 == (_DWORD)a5)
  {
LABEL_6:
    if ((a4 & 1) == 0)
    {
      v13[0] = a2;
      v13[1] = a3;
      v14 = 0;
      if ((a8 & 1) != 0)
        return 0;
      v11 = a6;
      v12 = a7;
      v10 = sub_1A5502F00();
      return (static UIDValidityWith<A>.__derived_struct_equals(_:_:)(v13, &v11, (uint64_t)&type metadata for ModificationSequenceValue, v10) & 1) != 0;
    }
    return (a8 & 1) != 0;
  }
  return result;
}

BOOL sub_1A5502B44(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _BOOL8 result;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  int v19;
  _BYTE v20[226];
  int v21;
  char v22;
  _BYTE v23[425];
  int v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32[2];
  uint64_t v33;
  char v34;
  uint64_t v35[2];
  _BYTE v36[24];
  _OWORD v37[4];
  _OWORD v38[2];
  _OWORD v39[4];
  _OWORD v40[2];

  v4 = *(_OWORD *)(a1 + 48);
  v39[2] = *(_OWORD *)(a1 + 32);
  v39[3] = v4;
  v40[0] = *(_OWORD *)(a1 + 64);
  *(_OWORD *)((char *)v40 + 9) = *(_OWORD *)(a1 + 73);
  v5 = *(_OWORD *)(a1 + 16);
  v39[0] = *(_OWORD *)a1;
  v39[1] = v5;
  v6 = *(_OWORD *)(a2 + 16);
  v37[0] = *(_OWORD *)a2;
  v37[1] = v6;
  v7 = *(_OWORD *)(a2 + 32);
  v8 = *(_OWORD *)(a2 + 48);
  v9 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)((char *)v38 + 9) = *(_OWORD *)(a2 + 73);
  v37[3] = v8;
  v38[0] = v9;
  v37[2] = v7;
  if ((static MailboxOfInterest.__derived_struct_equals(_:_:)(v39, v37) & 1) == 0)
    return 0;
  v10 = *(_QWORD *)(a1 + 96);
  v11 = *(_QWORD *)(a2 + 96);
  if (v10)
  {
    if (!v11)
      return 0;
    swift_beginAccess();
    sub_1A5502F44(v10 + 16, (uint64_t)v23);
    swift_beginAccess();
    sub_1A5502F44(v11 + 16, (uint64_t)&v19);
    if (*(_DWORD *)v23 == v19)
    {
      swift_retain();
      swift_retain();
      if ((sub_1A55294E0((uint64_t)&v23[8], (uint64_t)v20) & 1) != 0)
      {
        v12 = v22;
        if ((v25 & 1) != 0)
        {
          if (v22)
          {
LABEL_18:
            sub_1A5502F80((uint64_t)&v19);
            sub_1A5502F80((uint64_t)v23);
            swift_release();
            swift_release();
            goto LABEL_19;
          }
        }
        else
        {
          if (v24 != v21)
            v12 = 1;
          if ((v12 & 1) == 0)
            goto LABEL_18;
        }
      }
    }
    else
    {
      swift_retain();
      swift_retain();
    }
    sub_1A5502F80((uint64_t)&v19);
    sub_1A5502F80((uint64_t)v23);
    swift_release();
    swift_release();
    return 0;
  }
  if (v11)
    return 0;
LABEL_19:
  *(_OWORD *)v23 = *(_OWORD *)(a1 + 104);
  *(_OWORD *)&v23[9] = *(_OWORD *)(a1 + 113);
  v14 = *(_QWORD *)(a2 + 112);
  v15 = *(_QWORD *)(a2 + 120);
  v16 = *(_BYTE *)(a2 + 128);
  if ((v23[4] & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 108) & 1) == 0)
      return 0;
  }
  else
  {
    result = 0;
    if ((*(_BYTE *)(a2 + 108) & 1) != 0 || *(_DWORD *)v23 != *(_DWORD *)(a2 + 104))
      return result;
  }
  sub_1A55032A0((uint64_t)&v23[8], (uint64_t)v36, &qword_1EE7984F8);
  sub_1A55032A0((uint64_t)v36, (uint64_t)&v19, &qword_1EE7984F8);
  if ((v20[8] & 1) != 0)
  {
    if ((v16 & 1) != 0)
      goto LABEL_29;
    return 0;
  }
  sub_1A55032A0((uint64_t)v36, (uint64_t)&v28, &qword_1EE7984F8);
  if ((v16 & 1) != 0)
    return 0;
  LODWORD(v26) = v14;
  v27 = v15;
  v17 = sub_1A5502F00();
  if ((static UIDValidityWith<A>.__derived_struct_equals(_:_:)(&v28, &v26, (uint64_t)&type metadata for ModificationSequenceValue, v17) & 1) == 0)return 0;
LABEL_29:
  if ((sub_1A54ECF6C(*(_QWORD *)(a1 + 136), *(_QWORD *)(a2 + 136)) & 1) == 0
    || (sub_1A5536AF0(*(_QWORD *)(a1 + 144), *(_QWORD *)(a2 + 144)) & 1) == 0
    || (sub_1A55370D8(*(_QWORD *)(a1 + 152), *(_QWORD *)(a2 + 152)) & 1) == 0)
  {
    return 0;
  }
  v33 = *(_QWORD *)(a1 + 160);
  v34 = *(_BYTE *)(a1 + 168);
  v30 = *(_QWORD *)(a2 + 160);
  v31 = *(_BYTE *)(a2 + 168);
  sub_1A5502EC4(&v33, (uint64_t)v35);
  sub_1A5502EC4(&v30, (uint64_t)v32);
  sub_1A5502EC4(v35, (uint64_t)&v26);
  if (!(_BYTE)v27)
  {
    v18 = v26;
    sub_1A5502EC4(v32, (uint64_t)&v28);
    result = 0;
    if (v29)
      return result;
    goto LABEL_37;
  }
  if (v27 == 1)
  {
    v18 = v26;
    sub_1A5502EC4(v32, (uint64_t)&v28);
    result = 0;
    if (v29 != 1)
      return result;
LABEL_37:
    if (v18 != v28)
      return result;
    return *(_DWORD *)(a1 + 172) == *(_DWORD *)(a2 + 172);
  }
  sub_1A5502EC4(v32, (uint64_t)&v28);
  result = 0;
  if (v29 == 2 && !v28)
    return *(_DWORD *)(a1 + 172) == *(_DWORD *)(a2 + 172);
  return result;
}

uint64_t sub_1A5502EC4(uint64_t *a1, uint64_t a2)
{
  __swift_memcpy9_8_0(a2, a1);
  return a2;
}

unint64_t sub_1A5502F00()
{
  unint64_t result;

  result = qword_1EE796EC8;
  if (!qword_1EE796EC8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ModificationSequenceValue, &type metadata for ModificationSequenceValue);
    atomic_store(result, (unint64_t *)&qword_1EE796EC8);
  }
  return result;
}

uint64_t sub_1A5502F44(uint64_t a1, uint64_t a2)
{
  _s13SelectedStateV7WrappedVwcp(a2, a1);
  return a2;
}

uint64_t sub_1A5502F80(uint64_t a1)
{
  _s13SelectedStateV7WrappedVwxx(a1);
  return a1;
}

uint64_t sub_1A5502FB4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t result;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v30;
  uint64_t v31;
  int v32;
  int v33;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if (!v3)
    return 0;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v4 = 0;
  v5 = 0;
  while (1)
  {
    v6 = v2[v4 + 5];
    v7 = v2[v4 + 6];
    sub_1A54E42B4(v6, v7);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54E42B4(v6, v7);
    v8 = sub_1A54EA298(v6, v7, a2);
    sub_1A54E46E8(v6, v7);
    sub_1A54E46E8(v6, v7);
    swift_bridgeObjectRelease();
    if ((v8 & 1) != 0)
      break;
    ++v5;
    v4 += 4;
    if (v3 == v5)
    {
      swift_bridgeObjectRelease();
      return v2[2];
    }
  }
  result = swift_bridgeObjectRelease();
  v10 = v5 + 1;
  if (!__OFADD__(v5, 1))
  {
    v11 = v2[2];
    while (v10 != v11)
    {
      if (v10 >= v11)
      {
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
      v13 = &v2[v4];
      v14 = v2[v4 + 9];
      v15 = v2[v4 + 10];
      sub_1A54E42B4(v14, v15);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A54E42B4(v14, v15);
      v16 = sub_1A54EA298(v14, v15, a2);
      sub_1A54E46E8(v14, v15);
      sub_1A54E46E8(v14, v15);
      result = swift_bridgeObjectRelease();
      if ((v16 & 1) == 0)
      {
        if (v10 != v5)
        {
          if ((v5 & 0x8000000000000000) != 0)
            goto LABEL_25;
          v17 = v2[2];
          if (v5 >= v17)
            goto LABEL_26;
          if (v10 >= v17)
            goto LABEL_27;
          v18 = (uint64_t)&v2[4 * v5 + 4];
          v19 = *(_QWORD *)(v18 + 24);
          v32 = *(_DWORD *)v18;
          v33 = *((_DWORD *)v13 + 16);
          v21 = v13[9];
          v20 = v13[10];
          v22 = v13[11];
          v30 = *(_QWORD *)(v18 + 16);
          v31 = *(_QWORD *)(v18 + 8);
          sub_1A54E42B4(v31, v30);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A54E42B4(v21, v20);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v2 = sub_1A554B6A8(v2);
          v23 = &v2[4 * v5];
          v24 = v23[5];
          v25 = v23[6];
          *((_DWORD *)v23 + 8) = v33;
          v23[5] = v21;
          v23[6] = v20;
          v23[7] = v22;
          sub_1A54E46E8(v24, v25);
          result = swift_bridgeObjectRelease();
          if (v10 >= v2[2])
            goto LABEL_28;
          v26 = &v2[v4];
          v27 = v2[v4 + 9];
          v28 = v2[v4 + 10];
          *((_DWORD *)v26 + 16) = v32;
          v26[9] = v31;
          v26[10] = v30;
          v26[11] = v19;
          sub_1A54E46E8(v27, v28);
          result = swift_bridgeObjectRelease();
          *(_QWORD *)a1 = v2;
        }
        if (__OFADD__(v5++, 1))
          goto LABEL_24;
      }
      ++v10;
      v11 = v2[2];
      v4 += 4;
    }
    return v5;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1A5503260(unsigned __int8 *a1)
{
  uint64_t v1;

  return sub_1A5502074(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1A5503278(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A55032A0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName_0(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t _s12LocalMailboxV6LoggerVMa()
{
  uint64_t result;

  result = qword_1EE7A8628;
  if (!qword_1EE7A8628)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A5503320(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A5503358(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  uint64_t v11;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(unsigned int *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(unsigned int *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v6 = *(unsigned int *)(a1 + 64);
  v7 = *(_BYTE *)(a1 + 28);
  v8 = *(_BYTE *)(a1 + 52);
  v9 = *(_BYTE *)(a1 + 68);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54E4334(v2, v3, v7);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54E4334(v4, v5, v8);
  sub_1A54E4334(v11, v6, v9);
  return a1;
}

uint64_t sub_1A5503408(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  uint64_t v11;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(unsigned int *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(unsigned int *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v6 = *(unsigned int *)(a1 + 64);
  v7 = *(_BYTE *)(a1 + 28);
  v8 = *(_BYTE *)(a1 + 52);
  v9 = *(_BYTE *)(a1 + 68);
  swift_bridgeObjectRelease();
  sub_1A54E3458(v2, v3, v7);
  swift_bridgeObjectRelease();
  sub_1A54E3458(v4, v5, v8);
  sub_1A54E3458(v11, v6, v9);
  return a1;
}

uint64_t sub_1A55034B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A55034FC(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t *sub_1A5503538(uint64_t *a1)
{
  sub_1A550358C(*a1);
  return a1;
}

uint64_t sub_1A550358C(uint64_t result)
{
  if (result)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return result;
}

uint64_t *sub_1A55035C8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A594A764();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *v9 = *v10;
    *((_WORD *)v9 + 1) = *((_WORD *)v10 + 1);
    *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
    *((_DWORD *)v9 + 4) = *((_DWORD *)v10 + 4);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return a1;
}

uint64_t sub_1A5503674(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1A594A764();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A55036BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1A594A764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  *(_WORD *)(v8 + 2) = *(_WORD *)(v9 + 2);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_DWORD *)(v8 + 16) = *(_DWORD *)(v9 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t sub_1A550373C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1A594A764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  *(_WORD *)(v8 + 2) = *(_WORD *)(v9 + 2);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v8 + 16) = *(_DWORD *)(v9 + 16);
  return a1;
}

uint64_t sub_1A55037C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1A594A764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_DWORD *)(v8 + 16) = *(_DWORD *)(v9 + 16);
  return a1;
}

uint64_t sub_1A5503834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1A594A764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  *(_WORD *)(v8 + 2) = *(_WORD *)(v9 + 2);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  swift_bridgeObjectRelease();
  *(_DWORD *)(v8 + 16) = *(_DWORD *)(v9 + 16);
  return a1;
}

uint64_t sub_1A55038B8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A55038C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1A594A764();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1A5503944()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A5503950(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1A594A764();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1A55039CC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A594A764();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *_s12LocalMailboxV9TracingIDVMa()
{
  return &_s12LocalMailboxV9TracingIDVN;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for Action.UnreadCountOutsideWindowOfInterest.Count(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Action.UnreadCountOutsideWindowOfInterest.Count(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 25) = v3;
  return result;
}

ValueMetadata *_s12LocalMailboxV9SyncPointVMa()
{
  return &_s12LocalMailboxV9SyncPointVN;
}

unint64_t sub_1A5503AC4()
{
  unint64_t result;

  result = qword_1EE797CC0;
  if (!qword_1EE797CC0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A3CAC, &_s12LocalMailboxV9TracingIDVN);
    atomic_store(result, (unint64_t *)&qword_1EE797CC0);
  }
  return result;
}

uint64_t sub_1A5503B08(unint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v11;

  if ((a4 & 0x8000000000000000) != 0)
  {
    v11 = HIDWORD(a4);
    sub_1A54E3458(a1, a2, SBYTE4(a2));
    sub_1A54E3458(a3, a4, v11);
    return sub_1A5503B8C(a5, a6);
  }
  else
  {
    sub_1A54E472C(a1);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1A5503B8C(uint64_t result, uint64_t a2)
{
  if (BYTE4(a2) != 255)
    return sub_1A54E3458(result, a2, SBYTE4(a2));
  return result;
}

uint64_t sub_1A5503BA0(uint64_t result, uint64_t a2)
{
  if (BYTE4(a2) != 255)
    return sub_1A54E4334(result, a2, SBYTE4(a2));
  return result;
}

uint64_t sub_1A5503BB4(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  unint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1A54F4C48(0, v1, 0);
    v2 = v11;
    v4 = (unint64_t *)(a1 + 48);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      sub_1A54E42B4(v5, *v4);
      v8 = *(_QWORD *)(v11 + 16);
      v7 = *(_QWORD *)(v11 + 24);
      if (v8 >= v7 >> 1)
        sub_1A54F4C48(v7 > 1, v8 + 1, 1);
      v4 += 4;
      *(_QWORD *)(v11 + 16) = v8 + 1;
      v9 = v11 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v5;
      *(_QWORD *)(v9 + 40) = v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1A5503C8C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  char v16;
  unint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v20;

  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v10 = 0;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v10 << 6);
LABEL_22:
    result = sub_1A54FDC2C(*(unsigned int *)(*(_QWORD *)(a1 + 56) + 24 * v12));
    if ((v16 & 1) != 0)
    {
      v17 = result;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v19 = *a2;
      v20 = *a2;
      *a2 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1A554FA80();
        v19 = v20;
      }
      sub_1A554E368(v17, v19);
      *a2 = v19;
      result = swift_bridgeObjectRelease();
    }
  }
  v13 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v13 >= v8)
    return swift_release();
  v14 = *(_QWORD *)(v4 + 8 * v13);
  ++v10;
  if (v14)
    goto LABEL_21;
  v10 = v13 + 1;
  if (v13 + 1 >= v8)
    return swift_release();
  v14 = *(_QWORD *)(v4 + 8 * v10);
  if (v14)
    goto LABEL_21;
  v10 = v13 + 2;
  if (v13 + 2 >= v8)
    return swift_release();
  v14 = *(_QWORD *)(v4 + 8 * v10);
  if (v14)
    goto LABEL_21;
  v10 = v13 + 3;
  if (v13 + 3 >= v8)
    return swift_release();
  v14 = *(_QWORD *)(v4 + 8 * v10);
  if (v14)
  {
LABEL_21:
    v7 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v10 << 6);
    goto LABEL_22;
  }
  v15 = v13 + 4;
  if (v15 >= v8)
    return swift_release();
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
    v10 = v15;
    goto LABEL_21;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v8)
      return swift_release();
    v14 = *(_QWORD *)(v4 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_21;
  }
LABEL_28:
  __break(1u);
  return result;
}

double sub_1A5503E44@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W7>, _OWORD *a4@<X8>, uint64_t a5, uint64_t a6, char a7, char a8)
{
  __int128 *v8;
  __int128 *v9;
  double result;
  __int128 v15;
  _OWORD v16[2];
  __int128 v17;
  unsigned __int8 v18;
  _BYTE v19[64];

  v9 = v8;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5504330(a5 & 0x1010101FFFF01, v9, a1, a2, a8, (uint64_t)v19);
  sub_1A5504A88((uint64_t)v19, (uint64_t)v16);
  if (v18 == 255)
  {
    sub_1A5510284((uint64_t)v19, &qword_1EE7A8660);
    result = 0.0;
    *a4 = 0u;
    a4[1] = 0u;
    a4[2] = 0u;
  }
  else
  {
    if ((v18 & 1) == 0)
      __asm { BR              X10 }
    sub_1A5510284((uint64_t)v19, &qword_1EE7A8660);
    v15 = v16[1];
    *a4 = v16[0];
    a4[1] = v15;
    result = *(double *)&v17;
    a4[2] = v17;
  }
  return result;
}

BOOL sub_1A5504214(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  if ((sub_1A559D708(a1, a2, a3) & 1) == 0)
    return 0;
  sub_1A550EF18((uint64_t)a1, (uint64_t)v10);
  if ((a5 & 1) == 0)
  {
    v7 = v11;
    v8 = v12;
    __swift_project_boxed_opaque_existential_1_0(v10, v11);
    LOBYTE(v7) = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 48))(v7, v8);
    sub_1A550E928((uint64_t)v10);
    return (v7 & 1) == 0;
  }
  sub_1A550E928((uint64_t)v10);
  return 1;
}

uint64_t sub_1A55042A8(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  __int128 v12;
  __int16 v13;
  uint64_t v14;
  int v15;

  v6 = a1 & 1;
  v7 = *(_DWORD *)(a5 + 172);
  v8 = *(_QWORD *)(a5 + 8);
  v9 = *(_QWORD *)(a5 + 16);
  v10 = *(_DWORD *)(a5 + 24);
  *(_QWORD *)&v12 = *(_QWORD *)a5;
  *((_QWORD *)&v12 + 1) = v8;
  v13 = v7;
  v14 = v9;
  v15 = v10;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  LOBYTE(a2) = sub_1A559DB18(&v12, v6, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a2 & 1;
}

uint64_t sub_1A5504330@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W5>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  __int128 v31;
  __int128 v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  __int128 v61;
  __int128 v67;
  __int16 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  ValueMetadata *v73;
  int v74;
  char v75;
  __int128 v76;
  __int128 v77;
  __int16 v78;
  uint64_t v79;
  int v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  _OWORD v88[3];

  v10 = *((_QWORD *)a2 + 12);
  if (!v10)
  {
    v30 = *((_DWORD *)a2 + 43);
    v31 = a2[1];
    v84 = *a2;
    v85 = v31;
    v32 = a2[3];
    v86 = a2[2];
    v87 = v32;
    v88[0] = a2[4];
    *(_OWORD *)((char *)v88 + 9) = *(__int128 *)((char *)a2 + 73);
    v33 = MailboxOfInterest.uidValidity.getter();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v71 = sub_1A5552638((uint64_t)&unk_1E4EF2238);
    v72 = 1;
    v76 = 0u;
    v77 = 0u;
    v78 = 256;
    v67 = v84;
    v68 = v30;
    v69 = v85;
    LODWORD(v70) = DWORD2(v85);
    v73 = &type metadata for ReSyncMailbox;
    v79 = v85;
    v80 = DWORD2(v85);
    sub_1A550F734();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594C6B4();
    v74 = v33;
    v75 = BYTE4(v33) & 1;
    sub_1A551070C((uint64_t)&v67, (uint64_t)&v79);
    v34 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797390);
    v35 = sub_1A5510748(&qword_1EE797388, &qword_1EE797390);
    v36 = swift_allocObject();
    sub_1A551070C((uint64_t)&v79, v36 + 16);
    v37 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v36 + 168) = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v36 + 176) = v37;
    if (qword_1EE7972D0 != -1)
      swift_once();
    v38 = qword_1EE7F9248;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A55107D4((uint64_t)&v79);
    *(_QWORD *)&v81 = v36;
    *((_QWORD *)&v82 + 1) = v34;
    *(_QWORD *)&v83 = v35;
    *((_QWORD *)&v83 + 1) = v38;
    sub_1A55107D4((uint64_t)&v67);
    if ((sub_1A559D708(&v81, a3, a4) & 1) != 0)
    {
      sub_1A550EF18((uint64_t)&v81, (uint64_t)&v67);
      if ((a5 & 1) != 0)
      {
        sub_1A550E928((uint64_t)&v67);
LABEL_35:
        v61 = v82;
        *(_OWORD *)a6 = v81;
        *(_OWORD *)(a6 + 16) = v61;
        *(_OWORD *)(a6 + 32) = v83;
        *(_BYTE *)(a6 + 48) = 1;
        goto LABEL_38;
      }
      v58 = v69;
      v59 = v70;
      __swift_project_boxed_opaque_existential_1_0(&v67, v69);
      v60 = (*(uint64_t (**)(uint64_t, uint64_t))(v59 + 48))(v58, v59);
      sub_1A550E928((uint64_t)&v67);
      if ((v60 & 1) == 0)
        goto LABEL_35;
    }
    sub_1A550E928((uint64_t)&v81);
    *(_OWORD *)a6 = 0u;
    *(_OWORD *)(a6 + 16) = 0u;
    *(_OWORD *)(a6 + 32) = 0u;
    *(_BYTE *)(a6 + 48) = -1;
    goto LABEL_38;
  }
  swift_beginAccess();
  sub_1A54E30E0(v10 + 24, (uint64_t)&v67);
  swift_retain();
  v12 = sub_1A55285D4(a1 & 0x1010101FFFF01);
  v14 = v13;
  v16 = v15;
  sub_1A54E311C((uint64_t)&v67);
  if (sub_1A54E9FCC(0, v12) && !sub_1A54E9FCC(0, v14))
  {
    v39 = 0;
    v40 = v12 + 56;
    v41 = v14 + 56;
    while (*(_QWORD *)(v12 + 16))
    {
      v42 = *((unsigned __int8 *)&unk_1E4E71090 + v39 + 32);
      v43 = v41;
      sub_1A594CE64();
      sub_1A594CE88();
      v44 = sub_1A594CED0();
      v45 = -1 << *(_BYTE *)(v12 + 32);
      v46 = v44 & ~v45;
      if (((*(_QWORD *)(v40 + ((v46 >> 3) & 0xFFFFFFFFFFFFF8)) >> v46) & 1) == 0)
        break;
      v41 = v43;
      v47 = *(_QWORD *)(v12 + 48);
      if (*(unsigned __int8 *)(v47 + v46) != v42)
      {
        v48 = ~v45;
        do
        {
          v46 = (v46 + 1) & v48;
          if (((*(_QWORD *)(v40 + ((v46 >> 3) & 0xFFFFFFFFFFFFF8)) >> v46) & 1) == 0)
            goto LABEL_37;
        }
        while (*(unsigned __int8 *)(v47 + v46) != v42);
      }
      if (*(_QWORD *)(v14 + 16))
      {
        sub_1A594CE64();
        sub_1A594CE88();
        v49 = sub_1A594CED0();
        v41 = v43;
        v50 = -1 << *(_BYTE *)(v14 + 32);
        v51 = v49 & ~v50;
        if (((*(_QWORD *)(v43 + ((v51 >> 3) & 0xFFFFFFFFFFFFF8)) >> v51) & 1) != 0)
        {
          v52 = *(_QWORD *)(v14 + 48);
          if (*(unsigned __int8 *)(v52 + v51) == v42)
            break;
          v53 = ~v50;
          while (1)
          {
            v51 = (v51 + 1) & v53;
            if (((*(_QWORD *)(v43 + ((v51 >> 3) & 0xFFFFFFFFFFFFF8)) >> v51) & 1) == 0)
              break;
            if (*(unsigned __int8 *)(v52 + v51) == v42)
              goto LABEL_37;
          }
        }
      }
      if (++v39 == 15)
      {
        if (sub_1A54E9FCC(0, v16))
          goto LABEL_4;
        break;
      }
    }
LABEL_37:
    *(_QWORD *)a6 = v10;
    *(_QWORD *)(a6 + 8) = v12;
    *(_QWORD *)(a6 + 16) = v14;
    *(_QWORD *)(a6 + 24) = v16;
    *(_BYTE *)(a6 + 48) = 0;
  }
  else
  {
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v17 = *((_DWORD *)a2 + 43);
    v18 = a2[1];
    v84 = *a2;
    v85 = v18;
    v19 = a2[3];
    v86 = a2[2];
    v87 = v19;
    v88[0] = a2[4];
    *(_OWORD *)((char *)v88 + 9) = *(__int128 *)((char *)a2 + 73);
    v20 = v84;
    v21 = v85;
    v22 = DWORD2(v85);
    v23 = MailboxOfInterest.uidValidity.getter();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v71 = sub_1A5552638((uint64_t)&unk_1E4EF2238);
    v72 = 1;
    v76 = 0u;
    v77 = 0u;
    v78 = 256;
    v67 = v20;
    v68 = v17;
    v69 = v21;
    LODWORD(v70) = v22;
    v73 = &type metadata for ReSyncMailbox;
    v79 = v21;
    v80 = v22;
    sub_1A550F734();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594C6B4();
    v74 = v23;
    v75 = BYTE4(v23) & 1;
    sub_1A551070C((uint64_t)&v67, (uint64_t)&v79);
    v24 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797390);
    v25 = sub_1A5510748(&qword_1EE797388, &qword_1EE797390);
    v26 = swift_allocObject();
    sub_1A551070C((uint64_t)&v79, v26 + 16);
    v27 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v26 + 168) = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v26 + 176) = v27;
    if (qword_1EE7972D0 != -1)
      swift_once();
    v28 = qword_1EE7F9248;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A55107D4((uint64_t)&v79);
    *(_QWORD *)&v81 = v26;
    *((_QWORD *)&v82 + 1) = v24;
    *(_QWORD *)&v83 = v25;
    *((_QWORD *)&v83 + 1) = v28;
    sub_1A55107D4((uint64_t)&v67);
    if ((sub_1A559D708(&v81, a3, a4) & 1) != 0)
    {
      sub_1A550EF18((uint64_t)&v81, (uint64_t)&v67);
      v29 = a6;
      if ((a5 & 1) != 0)
      {
        sub_1A550E928((uint64_t)&v67);
        swift_release();
LABEL_32:
        v57 = v82;
        *(_OWORD *)a6 = v81;
        *(_OWORD *)(a6 + 16) = v57;
        *(_OWORD *)(a6 + 32) = v83;
        *(_BYTE *)(a6 + 48) = 1;
        goto LABEL_38;
      }
      v54 = v69;
      v55 = v70;
      __swift_project_boxed_opaque_existential_1_0(&v67, v69);
      v56 = (*(uint64_t (**)(uint64_t, uint64_t))(v55 + 48))(v54, v55);
      sub_1A550E928((uint64_t)&v67);
      swift_release();
      if ((v56 & 1) == 0)
        goto LABEL_32;
    }
    else
    {
      swift_release();
      v29 = a6;
    }
    sub_1A550E928((uint64_t)&v81);
    *(_OWORD *)v29 = 0u;
    *(_OWORD *)(v29 + 16) = 0u;
    *(_OWORD *)(v29 + 32) = 0u;
    *(_BYTE *)(v29 + 48) = -1;
  }
LABEL_38:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A5504A88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8660);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5504AD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, __int16 a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, char a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  LOBYTE(v20) = a17;
  LOBYTE(v19) = a14;
  LOWORD(v18) = a12;
  return sub_1A5505FE8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, v18, a13, v19, a15, a16, v20, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A5504B44);
}

BOOL sub_1A5504B34(_QWORD *a1)
{
  uint64_t v1;

  return sub_1A5504214(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40));
}

double sub_1A5504B44@<D0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (*a5)(__int128 *)@<X4>, uint64_t a6@<X5>, uint64_t (*a7)(uint64_t)@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t (*a10)(_QWORD), uint64_t a11, uint64_t a12, __int16 a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, char a18)
{
  uint64_t v18;
  uint64_t v19;
  double result;
  __int128 v28;
  uint64_t v29;
  unint64_t v30;
  __int128 v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  __int16 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  unsigned int v64;
  unsigned int v65;
  BOOL v66;
  char v67;
  unsigned int v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t (*v75)(__int128 *);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  unint64_t v85;
  unint64_t v86;
  _OWORD *v87;
  _BYTE v90[184];
  __int128 v91;
  __int128 v92;
  __int128 v93;
  char v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int16 v99;
  uint64_t v100;
  int v101;

  v19 = v18;
  sub_1A5506080(a1, a5, a12 & 0xFF01010101010101, a14, a15 & 1, a17, (uint64_t)&v91, a18 & 1);
  if (v94 == 1)
  {
    sub_1A550E814((uint64_t)&v91, a9);
    return result;
  }
  v86 = a2;
  v87 = (_OWORD *)a9;
  v81 = a12 & 0xFF01010101010101;
  v85 = a3;
  v28 = v91;
  v29 = v92;
  v30 = DWORD2(v92) | ((unint64_t)BYTE12(v92) << 32);
  v84 = a16 & 0x1FFFF01;
  sub_1A55062D0((_QWORD *)a1, a5, (uint64_t)&v91);
  if (v94 == 1)
  {
    swift_bridgeObjectRelease();
    sub_1A5503B8C(v29, v30);
    sub_1A550E814((uint64_t)&v91, (uint64_t)v87);
    return result;
  }
  v79 = v29;
  v80 = a4;
  v82 = DWORD2(v91);
  v83 = BYTE12(v91);
  v31 = v92;
  v77 = v91;
  v32 = *(_DWORD *)(v18 + 172);
  v33 = *(_QWORD *)(v18 + 8);
  v34 = *(_QWORD *)(v18 + 16);
  v35 = *(_DWORD *)(v19 + 24);
  *(_QWORD *)&v98 = *(_QWORD *)v19;
  *((_QWORD *)&v98 + 1) = v33;
  v99 = v32;
  v100 = v34;
  v101 = v35;
  v36 = *(_QWORD *)(v19 + 144);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v37 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v38 = sub_1A5503BB4(v37);
  v73 = v36;
  swift_bridgeObjectRelease();
  v39 = sub_1A55526A8(v38);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v40 = *(_QWORD *)(a1 + 328);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5602184(&v98, v39, v40, (uint64_t)&v91);
  v78 = v30;
  if ((_QWORD)v91)
  {
    sub_1A550E85C((uint64_t)&v91, (uint64_t)v90);
    v41 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797488);
    v42 = sub_1A5510748(&qword_1EE797480, &qword_1EE797488);
    v43 = swift_allocObject();
    sub_1A550E85C((uint64_t)v90, v43 + 16);
    v44 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v43 + 136) = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v43 + 144) = v44;
    if (qword_1EE797C48 != -1)
      swift_once();
    v45 = qword_1EE7F9260;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A550E8F4((uint64_t)v90);
    sub_1A550E8F4((uint64_t)&v91);
    *(_QWORD *)&v95 = v43;
    *((_QWORD *)&v96 + 1) = v41;
    *(_QWORD *)&v97 = v42;
    *((_QWORD *)&v97 + 1) = v45;
    if ((a5(&v95) & 1) != 0)
    {
      sub_1A54E3458(v77, v82, v83);
      swift_bridgeObjectRelease();
      sub_1A5503B8C(v79, v30);
      v46 = v96;
      *v87 = v95;
      v87[1] = v46;
      result = *(double *)&v97;
      v87[2] = v97;
      return result;
    }
    v75 = a5;
    v76 = a6;
    sub_1A550E928((uint64_t)&v95);
    v48 = v82;
    v47 = v83;
  }
  else
  {
    v75 = a5;
    v76 = a6;
    sub_1A5510284((uint64_t)&v91, &qword_1EE795D20);
    v48 = v82;
    v47 = v83;
  }
  v49 = a16 & 0x1010101FFFF01;
  sub_1A5509CA0(0, a1, v86, v85, v75, v84, &v91, v77, v48 | (v47 << 32), v31, *((uint64_t *)&v31 + 1), (uint64_t)&unk_1E4EF2498, v19, a7);
  if (*((_QWORD *)&v92 + 1))
  {
    v50 = v77;
    v51 = v48;
    v52 = v47;
LABEL_26:
    sub_1A54E3458(v50, v51, v52);
LABEL_27:
    swift_bridgeObjectRelease();
    sub_1A5503B8C(v79, v78);
LABEL_28:
    v60 = v92;
    *v87 = v91;
    v87[1] = v60;
    result = *(double *)&v93;
    v87[2] = v93;
    return result;
  }
  v72 = v48 | (v47 << 32);
  sub_1A5510284((uint64_t)&v91, &qword_1EE7974B0);
  v53 = v19;
  if ((a10(0) & 1) == 0)
  {
    sub_1A5509CA0(1, a1, v86, v85, v75, v84, &v91, v77, v72, v31, *((uint64_t *)&v31 + 1), (uint64_t)&unk_1E4EF24C0, v19, a7);
    if (*((_QWORD *)&v92 + 1))
    {
LABEL_25:
      v50 = v77;
      v51 = v82;
      v52 = v83;
      goto LABEL_26;
    }
    sub_1A5510284((uint64_t)&v91, &qword_1EE7974B0);
  }
  v54 = a13 & 0x101;
  v55 = v76;
  sub_1A550AA20(v86, v85, v75, v81, &v91);
  if (*((_QWORD *)&v92 + 1))
    goto LABEL_25;
  sub_1A5510284((uint64_t)&v91, &qword_1EE7974B0);
  if (*(_QWORD *)(v86 + 16) != 15)
    goto LABEL_24;
  if (*(_QWORD *)(v85 + 16))
    goto LABEL_24;
  if (*(_QWORD *)(v80 + 16))
    goto LABEL_24;
  v56 = *(_QWORD *)(a1 + 264);
  v57 = *(_QWORD *)(a1 + 272);
  v58 = *(unsigned int *)(a1 + 280);
  v63 = *(_QWORD *)(a1 + 288);
  v69 = *(_QWORD *)(a1 + 296);
  v64 = *(_DWORD *)(a1 + 304);
  v74 = *(_QWORD *)(a1 + 312);
  v59 = *(_BYTE *)(a1 + 284);
  v65 = *(_DWORD *)(a1 + 280);
  v67 = *(_BYTE *)(a1 + 308);
  v68 = *(_DWORD *)(a1 + 320);
  v70 = *(_BYTE *)(a1 + 324);
  sub_1A54E4334(v77, v82, v83);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54E4334(v57, v58, v59);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54E4334(v69, v64, v67);
  sub_1A54E4334(v74, v68, v70);
  v66 = sub_1A55312C4(SBYTE2(a16), v77, v72, v31, *((uint64_t *)&v31 + 1), v56, v63);
  v49 = a16 & 0x1010101FFFF01;
  sub_1A54E3458(v77, v82, v83);
  swift_bridgeObjectRelease();
  sub_1A54E3458(v57, v65, v59);
  swift_bridgeObjectRelease();
  sub_1A54E3458(v69, v64, v67);
  sub_1A54E3458(v74, v68, v70);
  if (v66 || *(_QWORD *)(*(_QWORD *)(a1 + 328) + 16) || *(_QWORD *)(*(_QWORD *)(v53 + 152) + 16))
  {
LABEL_24:
    sub_1A54E3150(v53);
    swift_retain();
    sub_1A5509934(v86, v85, v80, v75, v53, a1, &v91);
    if (*((_QWORD *)&v92 + 1))
      goto LABEL_25;
    sub_1A5510284((uint64_t)&v91, &qword_1EE7974B0);
    v71 = v78 & 0xFFFFFFFFFFLL;
    sub_1A550AE28(v86, v85, v80, v28, *((uint64_t *)&v28 + 1), v79, v78 & 0xFFFFFFFFFFLL, &v91, v75, v76, v81, SHIDWORD(v81), v54, a14, a15 & 1, v49);
    if (*((_QWORD *)&v92 + 1)
      || (sub_1A5510284((uint64_t)&v91, &qword_1EE7974B0),
          sub_1A54E3150(v53),
          swift_retain(),
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0(),
          sub_1A5503BA0(v79, v78),
          sub_1A5509558(v86, v85, v80, v75, v53, v28, *((uint64_t *)&v28 + 1), &v91, v79, v71, a1, v49, BYTE1(v49), SHIDWORD(v49), v81, SWORD2(v81)), *((_QWORD *)&v92 + 1)))
    {
      sub_1A54E3458(v77, v82, v83);
      goto LABEL_27;
    }
    sub_1A5510284((uint64_t)&v91, &qword_1EE7974B0);
    sub_1A54E3150(v53);
    swift_retain();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5503BA0(v79, v78);
    LOWORD(v62) = a13 & 0x101;
    sub_1A5509224(v86, v85, v80, v75, v53, v28, *((uint64_t *)&v28 + 1), &v91, v79, v71, a1, v81, v62, a14, a15 & 1, v49);
    if (*((_QWORD *)&v92 + 1)
      || (sub_1A5510284((uint64_t)&v91, &qword_1EE7974B0),
          sub_1A54E3150(v53),
          sub_1A5508EC8(v86, v85, v80, v75, v53, &v91),
          *((_QWORD *)&v92 + 1)))
    {
      sub_1A54E3458(v77, v82, v83);
      swift_bridgeObjectRelease();
      sub_1A5503B8C(v79, v78);
      v61 = v92;
      *v87 = v91;
      v87[1] = v61;
      result = *(double *)&v93;
      v87[2] = v93;
      return result;
    }
    sub_1A5510284((uint64_t)&v91, &qword_1EE7974B0);
    if (*(_QWORD *)(v73 + 16))
    {
      sub_1A54E3458(v77, v82, v83);
    }
    else
    {
      if (*(_QWORD *)(*(_QWORD *)(v53 + 152) + 16))
        goto LABEL_40;
      sub_1A550A888(0, (uint64_t)&unk_1E4EF24E8, v86, v85, v80, v75, v53, &v91, a1, v84, a7, a8, v77, v72, v31, *((uint64_t *)&v31 + 1));
      if (*((_QWORD *)&v92 + 1))
      {
        swift_bridgeObjectRelease();
        sub_1A5503B8C(v79, v78);
        sub_1A54E3458(v77, v82, v83);
        goto LABEL_28;
      }
      sub_1A5510284((uint64_t)&v91, &qword_1EE7974B0);
      if ((a10(0) & 1) != 0)
      {
LABEL_40:
        sub_1A54E3458(v77, v82, v83);
      }
      else
      {
        sub_1A550A888(1, (uint64_t)&unk_1E4EF2510, v86, v85, v80, v75, v53, &v91, a1, v84, a7, a8, v77, v72, v31, *((uint64_t *)&v31 + 1));
        sub_1A54E3458(v77, v82, v83);
        if (*((_QWORD *)&v92 + 1))
          goto LABEL_27;
        sub_1A5510284((uint64_t)&v91, &qword_1EE7974B0);
      }
      v55 = v76;
    }
    sub_1A550B314(a1, v86, v85, v80, v28, *((uint64_t *)&v28 + 1), v79, v71, &v91, v75, v55, v81, v54, a14, a15 & 1);
    if (*((_QWORD *)&v92 + 1))
      goto LABEL_27;
    sub_1A5510284((uint64_t)&v91, &qword_1EE7974B0);
    sub_1A54E3150(v53);
    sub_1A5508B08(v86, v85, v80, v75, v53, v81, &v91);
    if (*((_QWORD *)&v92 + 1))
      goto LABEL_27;
    sub_1A5510284((uint64_t)&v91, &qword_1EE7974B0);
    sub_1A54E3150(v53);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5503BA0(v79, v78);
    sub_1A5508804(v86, v85, v80, v75, v53, *((uint64_t *)&v28 + 1), &v91, v79, v71, v81);
    swift_bridgeObjectRelease();
    sub_1A5503B8C(v79, v78);
    if (*((_QWORD *)&v92 + 1))
      goto LABEL_28;
    sub_1A5510284((uint64_t)&v91, &qword_1EE7974B0);
    sub_1A54E3150(v53);
    sub_1A5508388(v86, v85, v80, v75, v76, v53, &v91);
    if (*((_QWORD *)&v92 + 1))
      goto LABEL_28;
    sub_1A5510284((uint64_t)&v91, &qword_1EE7974B0);
    sub_1A54E3150(v53);
    sub_1A550809C(v86, v85, v80, v75, v53, v81, &v91);
    if (*((_QWORD *)&v92 + 1))
      goto LABEL_28;
    sub_1A5510284((uint64_t)&v91, &qword_1EE7974B0);
  }
  else
  {
    sub_1A54E3458(v77, v82, v83);
    swift_bridgeObjectRelease();
    sub_1A5503B8C(v79, v78);
  }
  result = 0.0;
  v87[1] = 0u;
  v87[2] = 0u;
  *v87 = 0u;
  return result;
}

double sub_1A55057F0@<D0>(_QWORD *a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (*a5)(__int128 *)@<X4>, uint64_t a6@<X5>, uint64_t (*a7)(uint64_t)@<X6>, uint64_t a8@<X7>, _OWORD *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, __int16 a13, uint64_t a14, unsigned __int8 a15, uint64_t a16, uint64_t a17, char a18)
{
  uint64_t v18;
  uint64_t v19;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  double result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  _OWORD *v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _OWORD *v58;
  uint64_t (*v59)(uint64_t);
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  _BYTE v64[168];
  __int128 v65;
  __int128 v66;
  __int128 v67;
  char v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int16 v73;
  uint64_t v74;
  int v75;

  v19 = v18;
  v62 = a8;
  v63 = a2;
  v59 = a7;
  v60 = a3;
  v25 = *(_DWORD *)(v18 + 172);
  v26 = *(_QWORD *)v18;
  v27 = *(_QWORD *)(v18 + 8);
  v28 = *(_QWORD *)(v18 + 16);
  v29 = *(_DWORD *)(v19 + 24);
  *(_QWORD *)&v72 = v26;
  *((_QWORD *)&v72 + 1) = v27;
  v73 = v25;
  v74 = v28;
  v75 = v29;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v30 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v31 = sub_1A5503BB4(v30);
  swift_bridgeObjectRelease();
  v32 = sub_1A55526A8(v31);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v33 = a1[41];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5602184(&v72, v32, v33, (uint64_t)&v65);
  v61 = a4;
  if ((_QWORD)v65)
  {
    sub_1A550E85C((uint64_t)&v65, (uint64_t)v64);
    v34 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797488);
    v35 = sub_1A5510748(&qword_1EE797480, &qword_1EE797488);
    v36 = swift_allocObject();
    sub_1A550E85C((uint64_t)v64, v36 + 16);
    v37 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v36 + 136) = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v36 + 144) = v37;
    if (qword_1EE797C48 != -1)
      swift_once();
    v38 = qword_1EE7F9260;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A550E8F4((uint64_t)v64);
    sub_1A550E8F4((uint64_t)&v65);
    *(_QWORD *)&v69 = v36;
    *((_QWORD *)&v70 + 1) = v34;
    *(_QWORD *)&v71 = v35;
    *((_QWORD *)&v71 + 1) = v38;
    if ((a5(&v69) & 1) != 0)
    {
      v39 = v70;
      *a9 = v69;
      a9[1] = v39;
      result = *(double *)&v71;
      a9[2] = v71;
      return result;
    }
    sub_1A550E928((uint64_t)&v69);
  }
  else
  {
    sub_1A5510284((uint64_t)&v65, &qword_1EE795D20);
  }
  v41 = a16 & 0x1010101FFFF01;
  sub_1A55062D0(a1, a5, (uint64_t)&v65);
  if (v68 == 1)
  {
    sub_1A550E814((uint64_t)&v65, (uint64_t)a9);
  }
  else
  {
    v58 = a9;
    v42 = v65;
    v43 = DWORD2(v65);
    v44 = BYTE12(v65);
    v45 = a6;
    v46 = v60;
    v57 = v45;
    sub_1A5509CA0(0, (unint64_t)a1, v63, v60, a5, v41, &v65, v65, DWORD2(v65) | ((unint64_t)BYTE12(v65) << 32), v66, *((uint64_t *)&v66 + 1), (uint64_t)&unk_1E4EF2538, v19, v59);
    sub_1A54E3458(v42, v43, v44);
    if (*((_QWORD *)&v66 + 1))
    {
      v47 = v66;
      v48 = v58;
      *v58 = v65;
      v48[1] = v47;
      result = *(double *)&v67;
      v48[2] = v67;
    }
    else
    {
      v52 = a17;
      v51 = a15;
      v56 = a14;
      v55 = a11;
      v54 = a10;
      v49 = sub_1A5510284((uint64_t)&v65, &qword_1EE7974B0);
      v53 = &v50;
      MEMORY[0x1E0C80A78](v49);
      return sub_1A5505BDC((uint64_t)a1, v63, v46, v61, a5, v57, v58, v54, v55, a12 & 0xFF01010101010101, a13 & 0x101, v56, v51 & 1, v41, v52, a18 & 1);
    }
  }
  return result;
}

double sub_1A5505BDC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (*a5)(__int128 *)@<X4>, uint64_t a6@<X5>, _OWORD *a7@<X8>, uint64_t a8, uint64_t a9, uint64_t a10, __int16 a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, char a16)
{
  uint64_t v16;
  __int128 v22;
  double result;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  __int128 v30;
  uint64_t v31;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  char v37;

  sub_1A550AA20(a2, a3, a5, a10 & 0xFF01010101010101, &v34);
  if (*((_QWORD *)&v35 + 1))
  {
    v22 = v35;
    *a7 = v34;
    a7[1] = v22;
    result = *(double *)&v36;
    a7[2] = v36;
  }
  else
  {
    v31 = a4;
    sub_1A5510284((uint64_t)&v34, &qword_1EE7974B0);
    v24 = *(_QWORD *)(v16 + 152);
    v25 = *(_QWORD *)(v24 + 16);
    if (v25)
    {
      v26 = (uint64_t *)(v24 + 64);
      while (1)
      {
        v27 = *v26;
        v26 += 7;
        if (v27 < 0)
          break;
        if (!--v25)
          goto LABEL_7;
      }
      sub_1A5506080(a1, a5, a10 & 0xFF01010101010101, a12, a13 & 1, a15, (uint64_t)&v34, a16 & 1);
      if ((v37 & 1) != 0)
      {
        sub_1A550E814((uint64_t)&v34, (uint64_t)a7);
      }
      else
      {
        v28 = v35;
        v29 = DWORD2(v35) | ((unint64_t)BYTE12(v35) << 32);
        sub_1A550AE28(a2, a3, v31, v34, *((uint64_t *)&v34 + 1), v35, v29, &v34, a5, a6, a10 & 0x101, (a10 & 0xFF01010101010101) >> 32, a11 & 0x101, a12, a13 & 1, a14 & 0x1010101FFFF01);
        swift_bridgeObjectRelease();
        sub_1A5503B8C(v28, v29);
        if (*((_QWORD *)&v35 + 1))
        {
          v30 = v35;
          *a7 = v34;
          a7[1] = v30;
          result = *(double *)&v36;
          a7[2] = v36;
        }
        else
        {
          sub_1A5510284((uint64_t)&v34, &qword_1EE7974B0);
          result = 0.0;
          a7[1] = 0u;
          a7[2] = 0u;
          *a7 = 0u;
        }
      }
    }
    else
    {
LABEL_7:
      result = 0.0;
      a7[1] = 0u;
      a7[2] = 0u;
      *a7 = 0u;
    }
  }
  return result;
}

uint64_t sub_1A5505E14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  if (*(_QWORD *)(a3 + 16) && (v5 = sub_1A54FDC30(*(_QWORD *)(a4 + 16), *(_DWORD *)(a4 + 24)), (v6 & 1) != 0))
  {
    v7 = *(_QWORD *)(a3 + 56) + 16 * v5;
    v8 = *(_QWORD *)v7;
    sub_1A54E4334(*(_QWORD *)v7, *(unsigned int *)(v7 + 8), *(_BYTE *)(v7 + 12));
  }
  else
  {
    v9 = sub_1A54E3414();
    return MessageIdentifierSet.init()(&type metadata for UID, v9);
  }
  return v8;
}

uint64_t sub_1A5505EA8()
{
  uint64_t *v0;

  return sub_1A5505E14(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1A5505EB4(char a1)
{
  uint64_t *v1;

  return sub_1A55042A8(a1 & 1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1A5505EC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, __int16 a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, char a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  LOBYTE(v20) = a17;
  LOBYTE(v19) = a14;
  LOWORD(v18) = a12;
  return sub_1A5505FE8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, v18, a13, v19, a15, a16, v20, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A5505BDC);
}

uint64_t objectdestroyTm()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 88) >= 3uLL)
    swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A5505F88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, __int16 a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, char a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  LOBYTE(v20) = a17;
  LOBYTE(v19) = a14;
  LOWORD(v18) = a12;
  return sub_1A5505FE8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, v18, a13, v19, a15, a16, v20, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A55057F0);
}

uint64_t sub_1A5505FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t (*a18)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  return a18(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_1A5506080@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(__int128 *)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X5>, char a5@<W6>, uint64_t a6@<X7>, uint64_t a7@<X8>, char a8)
{
  uint64_t v8;
  uint64_t v9;
  __int16 v12;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  __int16 v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  char v26;
  uint64_t v27;
  char v28;
  unsigned __int8 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  uint64_t v38;
  uint64_t (*v39)(__int128 *);
  uint64_t v40;
  uint64_t v41;
  _BYTE v43[176];
  _BYTE v44[176];
  __int128 v45;
  __int128 v46;
  __int128 v47;
  _QWORD v48[2];
  __int16 v49;
  uint64_t v50;
  int v51;

  v9 = v8;
  v12 = WORD2(a3);
  swift_beginAccess();
  v16 = *(_QWORD *)(a1 + 336);
  v17 = *(_QWORD *)(a1 + 344);
  v18 = *(_QWORD *)(a1 + 352);
  v19 = *(unsigned int *)(a1 + 360);
  v20 = v19 | ((unint64_t)*(unsigned __int8 *)(a1 + 364) << 32);
  if (v17)
  {
    *(_QWORD *)a7 = v16;
    *(_QWORD *)(a7 + 8) = v17;
    *(_QWORD *)(a7 + 16) = v18;
    *(_DWORD *)(a7 + 24) = v19;
    *(_BYTE *)(a7 + 28) = BYTE4(v20);
    *(_BYTE *)(a7 + 48) = 0;
  }
  else
  {
    v39 = a2;
    v40 = *(_QWORD *)(a1 + 352);
    v41 = *(_QWORD *)(a1 + 336);
    v21 = a5 & 1;
    v22 = *(_DWORD *)(v9 + 172);
    v23 = *(_QWORD *)(v9 + 8);
    v24 = *(_QWORD *)(v9 + 16);
    v25 = *(_DWORD *)(v9 + 24);
    v26 = *(_BYTE *)(v9 + 48);
    v48[0] = *(_QWORD *)v9;
    v48[1] = v23;
    v49 = v22;
    v50 = v24;
    v51 = v25;
    v38 = *(_QWORD *)(a1 + 24);
    v27 = *(unsigned int *)(a1 + 32);
    v28 = (v26 & 1) == 0;
    v29 = *(_BYTE *)(a1 + 36);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v44[0] = v29;
    sub_1A55BF3D4((uint64_t)v48, a6, a8 & 1, a4, v21, v38, v27 | ((unint64_t)v29 << 32), v28, (uint64_t)v44, v12 & 1, (unsigned __int16)(v12 & 0x101) >> 8);
    sub_1A550F010((uint64_t)v44, (uint64_t)v43);
    v30 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797468);
    v31 = sub_1A5510748(&qword_1EE797460, &qword_1EE797468);
    v32 = swift_allocObject();
    sub_1A550F010((uint64_t)v43, v32 + 16);
    v33 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v32 + 192) = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v32 + 200) = v33;
    if (qword_1EE797AC8 != -1)
      swift_once();
    v34 = qword_1EE7F9258;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A550F0F4((uint64_t)v43);
    *(_QWORD *)&v45 = v32;
    *((_QWORD *)&v46 + 1) = v30;
    *(_QWORD *)&v47 = v31;
    *((_QWORD *)&v47 + 1) = v34;
    sub_1A550F0F4((uint64_t)v44);
    if ((v39(&v45) & 1) != 0)
    {
      v35 = v46;
      *(_OWORD *)a7 = v45;
      *(_OWORD *)(a7 + 16) = v35;
      v36 = v47;
    }
    else
    {
      sub_1A550E928((uint64_t)&v45);
      v36 = 0uLL;
      *(_OWORD *)a7 = 0u;
      *(_OWORD *)(a7 + 16) = 0u;
    }
    *(_OWORD *)(a7 + 32) = v36;
    *(_BYTE *)(a7 + 48) = 1;
    v18 = v40;
    v16 = v41;
  }
  return sub_1A550F128(v16, v17, v18, v20);
}

uint64_t sub_1A55062D0@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(__int128 *)@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  unint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  int v34;
  uint64_t (*v35)(__int128 *);
  uint64_t v36;
  int v37;
  uint64_t v38;
  char v39;
  ValueMetadata *v40;
  uint64_t v41;
  uint64_t v42;
  __int16 v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  int v47;
  char v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;

  swift_beginAccess();
  v7 = a1[47];
  if ((~v7 & 0xFF00000000) == 0)
  {
    v8 = *((_DWORD *)v3 + 43);
    v9 = *v3;
    v10 = v3[1];
    v11 = v3[2];
    v12 = *((_DWORD *)v3 + 6);
    v38 = MEMORY[0x1E0DEE9E8];
    v39 = 0;
    v47 = 0;
    v48 = -1;
    v46 = 0;
    v40 = &type metadata for DetermineNewestMessages;
    v36 = v11;
    v37 = v12;
    sub_1A550F734();
    swift_bridgeObjectRetain_n();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594C6B4();
    v41 = v9;
    v42 = v10;
    v43 = v8;
    v44 = v11;
    v45 = v12;
    sub_1A550F778((uint64_t)&v38, (uint64_t)&v36);
    v13 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797478);
    v14 = sub_1A5510748(&qword_1EE797470, &qword_1EE797478);
    v15 = swift_allocObject();
    sub_1A550F778((uint64_t)&v36, v15 + 16);
    v16 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v15 + 136) = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v15 + 144) = v16;
    if (qword_1EE797AF0 != -1)
      swift_once();
    v17 = qword_1EE7F96C8;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A550F824((uint64_t)&v36);
    *(_QWORD *)&v49 = v15;
    *((_QWORD *)&v50 + 1) = v13;
    *(_QWORD *)&v51 = v14;
    *((_QWORD *)&v51 + 1) = v17;
    sub_1A550F824((uint64_t)&v38);
    result = a2(&v49);
    if ((result & 1) == 0)
    {
      result = sub_1A550E928((uint64_t)&v49);
      v19 = 0uLL;
      *(_OWORD *)a3 = 0u;
      *(_OWORD *)(a3 + 16) = 0u;
LABEL_14:
      *(_OWORD *)(a3 + 32) = v19;
      *(_BYTE *)(a3 + 48) = 1;
      return result;
    }
LABEL_13:
    v32 = v50;
    *(_OWORD *)a3 = v49;
    *(_OWORD *)(a3 + 16) = v32;
    v19 = v51;
    goto LABEL_14;
  }
  v20 = a1[46];
  v21 = a1[48];
  v22 = a1[49];
  v23 = HIDWORD(v7);
  if (v22 > 130 || v21 > 130)
  {
    v35 = a2;
    v34 = *((_DWORD *)v3 + 43);
    v24 = *v3;
    v33 = v3[1];
    v25 = v3[2];
    v26 = *((_DWORD *)v3 + 6);
    v38 = MEMORY[0x1E0DEE9E8];
    v39 = 0;
    v47 = 0;
    v48 = -1;
    v46 = 0;
    v40 = &type metadata for DetermineNewestMessages;
    v36 = v25;
    v37 = v26;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A550F858(v20, v7);
    sub_1A550F734();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594C6B4();
    v41 = v24;
    v42 = v33;
    v43 = v34;
    v44 = v25;
    v45 = v26;
    sub_1A550F778((uint64_t)&v38, (uint64_t)&v36);
    v27 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797478);
    v28 = sub_1A5510748(&qword_1EE797470, &qword_1EE797478);
    v29 = swift_allocObject();
    sub_1A550F778((uint64_t)&v36, v29 + 16);
    v30 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v29 + 136) = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v29 + 144) = v30;
    if (qword_1EE797AF0 != -1)
      swift_once();
    v31 = qword_1EE7F96C8;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A550F824((uint64_t)&v36);
    *(_QWORD *)&v49 = v29;
    *((_QWORD *)&v50 + 1) = v27;
    *(_QWORD *)&v51 = v28;
    *((_QWORD *)&v51 + 1) = v31;
    sub_1A550F824((uint64_t)&v38);
    if ((v35(&v49) & 1) != 0)
    {
      result = sub_1A550F870(v20, v7);
      goto LABEL_13;
    }
    result = sub_1A550E928((uint64_t)&v49);
    v23 = HIDWORD(v7);
  }
  else
  {
    result = sub_1A54E4334(v20, v7, SBYTE4(v7));
  }
  *(_QWORD *)a3 = v20;
  *(_DWORD *)(a3 + 8) = v7;
  *(_BYTE *)(a3 + 12) = v23;
  *(_QWORD *)(a3 + 16) = v21;
  *(_QWORD *)(a3 + 24) = v22;
  *(_BYTE *)(a3 + 48) = 0;
  return result;
}

uint64_t sub_1A55066B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(__int128 *)@<X3>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, _OWORD *a8@<X8>, uint64_t a9, uint64_t a10, unsigned __int8 *a11, char a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, __int16 a18, char a19)
{
  uint64_t v24;
  uint64_t v25;
  char v26;
  __int16 v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  char v31;
  uint64_t v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _OWORD *v52;
  __int128 v53;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE v63[280];
  _QWORD v64[3];
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int16 v71;
  uint64_t v72;
  int v73;

  v24 = a10;
  if (qword_1EE797BA8 != -1)
    swift_once();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v25 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v26 = sub_1A550EAD4(v25, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v58 = a2;
  swift_bridgeObjectRelease();
  v59 = a1;
  swift_bridgeObjectRelease();
  if ((v26 & 1) != 0)
  {
    v27 = *(_DWORD *)(a5 + 172);
    v28 = *(_QWORD *)(a5 + 8);
    v29 = *(_QWORD *)(a5 + 16);
    v30 = *(_DWORD *)(a5 + 24);
    v57 = *(_QWORD *)(a5 + 40);
    v31 = *(_BYTE *)(a5 + 48);
    *(_QWORD *)&v70 = *(_QWORD *)a5;
    *((_QWORD *)&v70 + 1) = v28;
    v71 = v27;
    v72 = v29;
    v73 = v30;
    v56 = v31 & 1;
    v55 = a5;
    v32 = *(_QWORD *)(a5 + 152);
    swift_beginAccess();
    v33 = a11[145];
    v34 = a11[146];
    v35 = a11[147];
    v36 = a11[148];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5503BA0(a9, a10);
    if (v36)
      v37 = 0x1000000;
    else
      v37 = 0;
    if (v35)
      v38 = 0x10000;
    else
      v38 = 0;
    if (v34)
      v39 = 256;
    else
      v39 = 0;
    v40 = v39 | v33 | v38 | v37;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A55E797C(&v70, a6, a7, a9, a10 & 0xFFFFFFFFFFLL, v32, v57, v56, (uint64_t)v64, v40, SBYTE1(v40), SBYTE2(v40), SHIBYTE(v40), a13 & 1, a19 & 1);
    if (v64[0])
    {
      sub_1A550ED78((uint64_t)v64, (uint64_t)v63);
      v41 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8668);
      v42 = sub_1A5510748(&qword_1EE7A8670, &qword_1EE7A8668);
      v43 = swift_allocObject();
      sub_1A550ED78((uint64_t)v63, v43 + 16);
      v44 = MEMORY[0x1E0DEE9D8];
      *(_QWORD *)(v43 + 296) = MEMORY[0x1E0DEE9D8];
      *(_QWORD *)(v43 + 304) = v44;
      v45 = qword_1EE7F96D0;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A550EEC0((uint64_t)v63);
      sub_1A550EEC0((uint64_t)v64);
      *(_QWORD *)&v67 = v43;
      *((_QWORD *)&v68 + 1) = v41;
      *(_QWORD *)&v69 = v42;
      *((_QWORD *)&v69 + 1) = v45;
      __swift_project_boxed_opaque_existential_1_0(&v67, v41);
      v46 = *(_QWORD *)((*(uint64_t (**)(uint64_t, uint64_t))(v42 + 40))(v41, v42) + 16);
      swift_bridgeObjectRelease();
      sub_1A550EF18((uint64_t)&v67, (uint64_t)v64);
      if (v46)
      {
        v47 = v65;
        v48 = v66;
        __swift_project_boxed_opaque_existential_1_0(v64, v65);
        v49 = (*(uint64_t (**)(uint64_t, uint64_t))(v48 + 40))(v47, v48);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v50 = sub_1A550E95C(v49, v59, v58, a3);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A550E928((uint64_t)v64);
        v52 = a8;
        v51 = v55;
        if ((v50 & 1) == 0)
          goto LABEL_22;
      }
      else
      {
        sub_1A550E928((uint64_t)v64);
        v52 = a8;
        v51 = v55;
      }
      if ((a4(&v67) & 1) != 0)
      {
        v53 = v68;
        *v52 = v67;
        v52[1] = v53;
        v52[2] = v69;
LABEL_23:
        sub_1A54E31EC(v51);
        v24 = a10;
        goto LABEL_24;
      }
LABEL_22:
      sub_1A550E928((uint64_t)&v67);
      v52[1] = 0u;
      v52[2] = 0u;
      *v52 = 0u;
      goto LABEL_23;
    }
    sub_1A5510284((uint64_t)v64, &qword_1EE797BB8);
    v24 = a10;
    a5 = v55;
  }
  a8[1] = 0u;
  a8[2] = 0u;
  *a8 = 0u;
  sub_1A54E31EC(a5);
LABEL_24:
  swift_bridgeObjectRelease();
  sub_1A5503B8C(a9, v24);
  return swift_release();
}

uint64_t sub_1A5506AF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(__int128 *)@<X3>, uint64_t a5@<X5>, uint64_t a6@<X7>, _OWORD *a7@<X8>, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  __int128 v27;
  _BYTE v31[128];
  _QWORD v32[3];
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;

  if (qword_1EE797C88 != -1)
    swift_once();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v15 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v16 = sub_1A550EAD4(v15, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v16 & 1) == 0)
    goto LABEL_13;
  sub_1A550BD4C(a5, a6, a10 & 0x1010101FFFF01, (uint64_t)v32);
  if (!v32[0])
  {
    sub_1A5510284((uint64_t)v32, &qword_1EE7A8678);
LABEL_13:
    a7[1] = 0u;
    a7[2] = 0u;
    *a7 = 0u;
    goto LABEL_14;
  }
  sub_1A550EF54((uint64_t)v32, (uint64_t)v31);
  v17 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7974A8);
  v18 = sub_1A5510748(&qword_1EE7974A0, &qword_1EE7974A8);
  v19 = swift_allocObject();
  sub_1A550EF54((uint64_t)v31, v19 + 16);
  v20 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v19 + 144) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v19 + 152) = v20;
  v21 = qword_1EE7F9270;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A550EFDC((uint64_t)v31);
  sub_1A550EFDC((uint64_t)v32);
  *(_QWORD *)&v35 = v19;
  *((_QWORD *)&v36 + 1) = v17;
  *(_QWORD *)&v37 = v18;
  *((_QWORD *)&v37 + 1) = v21;
  __swift_project_boxed_opaque_existential_1_0(&v35, v17);
  v22 = *(_QWORD *)((*(uint64_t (**)(uint64_t, uint64_t))(v18 + 40))(v17, v18) + 16);
  swift_bridgeObjectRelease();
  sub_1A550EF18((uint64_t)&v35, (uint64_t)v32);
  if (v22)
  {
    v23 = v33;
    v24 = v34;
    __swift_project_boxed_opaque_existential_1_0(v32, v33);
    v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 40))(v23, v24);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v26 = sub_1A550E95C(v25, a1, a2, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A550E928((uint64_t)v32);
    if ((v26 & 1) == 0)
      goto LABEL_12;
  }
  else
  {
    sub_1A550E928((uint64_t)v32);
  }
  if ((a4(&v35) & 1) == 0)
  {
LABEL_12:
    sub_1A550E928((uint64_t)&v35);
    goto LABEL_13;
  }
  v27 = v36;
  *a7 = v35;
  a7[1] = v27;
  a7[2] = v37;
LABEL_14:
  sub_1A54E31EC(a5);
  swift_bridgeObjectRelease();
  return sub_1A5503B8C(a8, a9);
}

uint64_t sub_1A5506DDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(__int128 *)@<X3>, uint64_t a5@<X5>, char a6@<W6>, uint64_t a7@<X7>, _OWORD *a8@<X8>, char a9)
{
  uint64_t v16;
  char v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  _OWORD *v36;
  _BYTE v38[144];
  _QWORD v39[3];
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  _QWORD v45[2];
  __int16 v46;
  uint64_t v47;
  int v48;
  _OWORD v49[3];
  _OWORD v50[3];

  if (qword_1EE7978A0 != -1)
    swift_once();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v16 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v17 = sub_1A550EAD4(v16, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v17 & 1) != 0)
  {
    v36 = a8;
    v18 = *(_DWORD *)(a5 + 172);
    v19 = *(_QWORD *)(a5 + 8);
    v20 = *(_QWORD *)(a5 + 16);
    v21 = *(_DWORD *)(a5 + 24);
    v45[0] = *(_QWORD *)a5;
    v45[1] = v19;
    v46 = v18;
    v47 = v20;
    v48 = v21;
    swift_beginAccess();
    v22 = *(_OWORD *)(a7 + 304);
    v49[2] = *(_OWORD *)(a7 + 288);
    v50[0] = v22;
    *(_QWORD *)((char *)v50 + 13) = *(_QWORD *)(a7 + 317);
    v23 = *(_OWORD *)(a7 + 272);
    v49[0] = *(_OWORD *)(a7 + 256);
    v49[1] = v23;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5503358((uint64_t)v49);
    sub_1A55FDB40((uint64_t)v45, a6 & 1, (uint64_t)v49, a9 & 1, (uint64_t)v39);
    sub_1A550F888((uint64_t)v39, (uint64_t)v38);
    v24 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797428);
    v25 = sub_1A5510748(&qword_1EE797420, &qword_1EE797428);
    v26 = swift_allocObject();
    sub_1A550F888((uint64_t)v38, v26 + 16);
    v27 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v26 + 160) = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v26 + 168) = v27;
    v28 = qword_1EE7F96B0;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A550F928((uint64_t)v38);
    sub_1A550F928((uint64_t)v39);
    *(_QWORD *)&v42 = v26;
    *((_QWORD *)&v43 + 1) = v24;
    *(_QWORD *)&v44 = v25;
    *((_QWORD *)&v44 + 1) = v28;
    __swift_project_boxed_opaque_existential_1_0(&v42, v24);
    v29 = *(_QWORD *)((*(uint64_t (**)(uint64_t, uint64_t))(v25 + 40))(v24, v25) + 16);
    swift_bridgeObjectRelease();
    sub_1A550EF18((uint64_t)&v42, (uint64_t)v39);
    if (v29)
    {
      v30 = v40;
      v31 = v41;
      __swift_project_boxed_opaque_existential_1_0(v39, v40);
      v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 40))(v30, v31);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v33 = sub_1A550E95C(v32, a1, a2, a3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A550E928((uint64_t)v39);
      if ((v33 & 1) == 0)
        goto LABEL_11;
    }
    else
    {
      sub_1A550E928((uint64_t)v39);
    }
    if ((a4(&v42) & 1) == 0)
    {
LABEL_11:
      sub_1A550E928((uint64_t)&v42);
      v36[1] = 0u;
      v36[2] = 0u;
      *v36 = 0u;
      goto LABEL_12;
    }
    v34 = v43;
    *v36 = v42;
    v36[1] = v34;
    v36[2] = v44;
  }
  else
  {
    a8[1] = 0u;
    a8[2] = 0u;
    *a8 = 0u;
  }
LABEL_12:
  sub_1A54E31EC(a5);
  return swift_release();
}

uint64_t sub_1A5507114@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(__int128 *)@<X3>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, _OWORD *a8@<X8>, uint64_t a9, uint64_t a10, int a11, char a12, char a13)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  __int16 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  unint64_t v27;
  char v28;
  _QWORD *v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  __int128 v42;
  uint64_t v44;
  uint64_t v48;
  int v49;
  _QWORD v50[2];
  __int16 v51;
  uint64_t v52;
  uint64_t v53;
  ValueMetadata *v54;
  uint64_t v55;
  int v56;
  BOOL v57;
  char v58;
  char v59;
  uint64_t v60;
  char v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;

  v19 = a9;
  v18 = a10;
  if (qword_1EE797A20 != -1)
    swift_once();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v20 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v21 = sub_1A550EAD4(v20, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v21 & 1) != 0)
  {
    v44 = a1;
    v22 = *(_DWORD *)(a5 + 172);
    v24 = *(_QWORD *)a5;
    v23 = *(_QWORD *)(a5 + 8);
    v25 = *(_QWORD *)(a5 + 16);
    v26 = *(_DWORD *)(a5 + 24);
    v27 = *(_QWORD *)(a5 + 40);
    v28 = *(_BYTE *)(a5 + 48);
    BYTE4(v53) = 1;
    v61 = 1;
    v50[0] = v24;
    v50[1] = v23;
    v51 = v22;
    v52 = v25;
    LODWORD(v53) = v26;
    v60 = 0;
    v54 = &type metadata for DetectRemovedMessages;
    v48 = v25;
    v49 = v26;
    swift_bridgeObjectRetain_n();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5503BA0(a9, a10);
    sub_1A550F734();
    sub_1A594C6B4();
    v29 = sub_1A56111B4(a6, a7, a9, a10 & 0xFFFFFFFFFFLL, v27, v28 & 1);
    swift_bridgeObjectRelease();
    sub_1A5503B8C(a9, a10);
    v30 = sub_1A550C284((uint64_t)v29);
    swift_bridgeObjectRelease();
    if ((v28 & 1) != 0)
      v31 = 0;
    else
      v31 = FetchedWindow.upperBound.getter(v27);
    v55 = v30;
    v56 = v31;
    v57 = (v28 & 1) != 0;
    v58 = a12 & 1;
    v59 = a13 & 1;
    sub_1A550FF10((uint64_t)v50, (uint64_t)&v48);
    v32 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797448);
    v33 = sub_1A5510748(&qword_1EE797440, &qword_1EE797448);
    v34 = swift_allocObject();
    sub_1A550FF10((uint64_t)&v48, v34 + 16);
    v35 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v34 + 136) = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v34 + 144) = v35;
    v36 = qword_1EE7F9250;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A550FF98((uint64_t)&v48);
    sub_1A550FF98((uint64_t)v50);
    *(_QWORD *)&v62 = v34;
    *((_QWORD *)&v63 + 1) = v32;
    *(_QWORD *)&v64 = v33;
    *((_QWORD *)&v64 + 1) = v36;
    __swift_project_boxed_opaque_existential_1_0(&v62, v32);
    v37 = *(_QWORD *)((*(uint64_t (**)(uint64_t, uint64_t))(v33 + 40))(v32, v33) + 16);
    swift_bridgeObjectRelease();
    sub_1A550EF18((uint64_t)&v62, (uint64_t)v50);
    v19 = a9;
    if (v37)
    {
      v38 = v52;
      v39 = v53;
      __swift_project_boxed_opaque_existential_1_0(v50, v52);
      v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 40))(v38, v39);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v41 = sub_1A550E95C(v40, v44, a2, a3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A550E928((uint64_t)v50);
      v18 = a10;
      if ((v41 & 1) == 0)
        goto LABEL_14;
    }
    else
    {
      sub_1A550E928((uint64_t)v50);
      v18 = a10;
    }
    if ((a4(&v62) & 1) != 0)
    {
      v42 = v63;
      *a8 = v62;
      a8[1] = v42;
      a8[2] = v64;
LABEL_15:
      sub_1A54E31EC(a5);
      goto LABEL_16;
    }
LABEL_14:
    sub_1A550E928((uint64_t)&v62);
    a8[1] = 0u;
    a8[2] = 0u;
    *a8 = 0u;
    goto LABEL_15;
  }
  a8[1] = 0u;
  a8[2] = 0u;
  *a8 = 0u;
  sub_1A54E31EC(a5);
LABEL_16:
  swift_bridgeObjectRelease();
  return sub_1A5503B8C(v19, v18);
}

double sub_1A550752C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(__int128 *)@<X3>, void (*a5)(_QWORD *__return_ptr, uint64_t)@<X5>, _OWORD *a6@<X8>)
{
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  __int128 v24;
  double result;
  _BYTE v27[112];
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  double v33[4];

  if (qword_1EE797C78 != -1)
    swift_once();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v11 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v12 = sub_1A550EAD4(v11, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = swift_bridgeObjectRelease();
  if ((v12 & 1) == 0)
    goto LABEL_13;
  a5(v28, v13);
  if (v28[0])
  {
    sub_1A550FE88((uint64_t)v28, (uint64_t)v27);
    v14 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797498);
    v15 = sub_1A5510748(&qword_1EE797490, &qword_1EE797498);
    v16 = swift_allocObject();
    sub_1A550FE88((uint64_t)v27, v16 + 16);
    v17 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v16 + 128) = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v16 + 136) = v17;
    v18 = qword_1EE7F9268;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A550FE54((uint64_t)v27);
    sub_1A550FE54((uint64_t)v28);
    *(_QWORD *)&v31 = v16;
    *((_QWORD *)&v32 + 1) = v14;
    *(_QWORD *)&v33[0] = v15;
    *(_QWORD *)&v33[1] = v18;
    __swift_project_boxed_opaque_existential_1_0(&v31, v14);
    v19 = *(_QWORD *)((*(uint64_t (**)(uint64_t, uint64_t))(v15 + 40))(v14, v15) + 16);
    swift_bridgeObjectRelease();
    sub_1A550EF18((uint64_t)&v31, (uint64_t)v28);
    if (v19)
    {
      v20 = v29;
      v21 = v30;
      __swift_project_boxed_opaque_existential_1_0(v28, v29);
      v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 40))(v20, v21);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v23 = sub_1A550E95C(v22, a1, a2, a3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A550E928((uint64_t)v28);
      if ((v23 & 1) == 0)
      {
LABEL_12:
        sub_1A550E928((uint64_t)&v31);
        goto LABEL_13;
      }
    }
    else
    {
      sub_1A550E928((uint64_t)v28);
    }
    if ((a4(&v31) & 1) != 0)
    {
      v24 = v32;
      *a6 = v31;
      a6[1] = v24;
      result = v33[0];
      a6[2] = *(_OWORD *)v33;
      return result;
    }
    goto LABEL_12;
  }
  sub_1A5510284((uint64_t)v28, &qword_1EE795D28);
LABEL_13:
  result = 0.0;
  a6[1] = 0u;
  a6[2] = 0u;
  *a6 = 0u;
  return result;
}

uint64_t sub_1A55077C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(__int128 *)@<X3>, uint64_t a5@<X5>, __int16 a6@<W6>, _OWORD *a7@<X8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v18;
  uint64_t v19;
  char v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  unint64_t v39;
  uint64_t v40;
  char v42;
  _BYTE v44[152];
  _QWORD v45[3];
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  _QWORD v51[2];
  __int16 v52;
  uint64_t v53;
  int v54;

  v42 = HIBYTE(a6);
  v18 = a14;
  if (qword_1EE7A8548 != -1)
    swift_once();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v19 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v20 = sub_1A550EAD4(v19, a1, a2);
  swift_bridgeObjectRelease();
  v40 = a3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v20 & 1) != 0)
  {
    v21 = *(_DWORD *)(a5 + 172);
    v22 = *(_QWORD *)(a5 + 8);
    v23 = *(_QWORD *)(a5 + 16);
    v24 = *(_DWORD *)(a5 + 24);
    v39 = *(_QWORD *)(a5 + 40);
    v25 = *(_BYTE *)(a5 + 48);
    v51[0] = *(_QWORD *)a5;
    v51[1] = v22;
    v52 = v21;
    v53 = v23;
    v54 = v24;
    swift_beginAccess();
    v26 = *(_BYTE *)(a10 + 56);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5503BA0(a13, a14);
    sub_1A55B3D88((uint64_t)v51, v42 & 1, v26, a11, a12, a13, a14 & 0xFFFFFFFFFFLL, (uint64_t)v45, v39, v25 & 1);
    sub_1A55100F4((uint64_t)v45, (uint64_t)v44);
    v27 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A86B8);
    v28 = sub_1A5510748(&qword_1EE7A86C0, &qword_1EE7A86B8);
    v29 = swift_allocObject();
    sub_1A55100F4((uint64_t)v44, v29 + 16);
    v30 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v29 + 168) = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v29 + 176) = v30;
    v31 = qword_1EE7F9AA0;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A551018C((uint64_t)v44);
    sub_1A551018C((uint64_t)v45);
    *(_QWORD *)&v48 = v29;
    *((_QWORD *)&v49 + 1) = v27;
    *(_QWORD *)&v50 = v28;
    *((_QWORD *)&v50 + 1) = v31;
    __swift_project_boxed_opaque_existential_1_0(&v48, v27);
    v32 = *(_QWORD *)((*(uint64_t (**)(uint64_t, uint64_t))(v28 + 40))(v27, v28) + 16);
    swift_bridgeObjectRelease();
    sub_1A550EF18((uint64_t)&v48, (uint64_t)v45);
    if (v32)
    {
      v33 = v46;
      v34 = v47;
      __swift_project_boxed_opaque_existential_1_0(v45, v46);
      v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 40))(v33, v34);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v36 = sub_1A550E95C(v35, a1, a2, v40);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A550E928((uint64_t)v45);
      if ((v36 & 1) == 0)
        goto LABEL_11;
    }
    else
    {
      sub_1A550E928((uint64_t)v45);
    }
    if ((a4(&v48) & 1) != 0)
    {
      v37 = v49;
      *a7 = v48;
      a7[1] = v37;
      a7[2] = v50;
LABEL_12:
      sub_1A54E31EC(a5);
      v18 = a14;
      goto LABEL_13;
    }
LABEL_11:
    sub_1A550E928((uint64_t)&v48);
    a7[1] = 0u;
    a7[2] = 0u;
    *a7 = 0u;
    goto LABEL_12;
  }
  a7[1] = 0u;
  a7[2] = 0u;
  *a7 = 0u;
  sub_1A54E31EC(a5);
LABEL_13:
  swift_bridgeObjectRelease();
  swift_release();
  return sub_1A5503B8C(a13, v18);
}

double sub_1A5507B74@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(__int128 *)@<X3>, void (*a5)(_QWORD *__return_ptr, uint64_t)@<X5>, _OWORD *a6@<X8>)
{
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  __int128 v24;
  double result;
  _BYTE v27[144];
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  double v33[4];

  if (qword_1EE7A8550 != -1)
    swift_once();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v11 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v12 = sub_1A550EAD4(v11, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = swift_bridgeObjectRelease();
  if ((v12 & 1) == 0)
    goto LABEL_13;
  a5(v28, v13);
  if (v28[0])
  {
    sub_1A551005C((uint64_t)v28, (uint64_t)v27);
    v14 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A86A8);
    v15 = sub_1A5510748(&qword_1EE7A86B0, &qword_1EE7A86A8);
    v16 = swift_allocObject();
    sub_1A551005C((uint64_t)v27, v16 + 16);
    v17 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v16 + 160) = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v16 + 168) = v17;
    v18 = qword_1EE7F9AA8;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A550FDD4((uint64_t)v27);
    sub_1A550FDD4((uint64_t)v28);
    *(_QWORD *)&v31 = v16;
    *((_QWORD *)&v32 + 1) = v14;
    *(_QWORD *)&v33[0] = v15;
    *(_QWORD *)&v33[1] = v18;
    __swift_project_boxed_opaque_existential_1_0(&v31, v14);
    v19 = *(_QWORD *)((*(uint64_t (**)(uint64_t, uint64_t))(v15 + 40))(v14, v15) + 16);
    swift_bridgeObjectRelease();
    sub_1A550EF18((uint64_t)&v31, (uint64_t)v28);
    if (v19)
    {
      v20 = v29;
      v21 = v30;
      __swift_project_boxed_opaque_existential_1_0(v28, v29);
      v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 40))(v20, v21);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v23 = sub_1A550E95C(v22, a1, a2, a3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A550E928((uint64_t)v28);
      if ((v23 & 1) == 0)
      {
LABEL_12:
        sub_1A550E928((uint64_t)&v31);
        goto LABEL_13;
      }
    }
    else
    {
      sub_1A550E928((uint64_t)v28);
    }
    if ((a4(&v31) & 1) != 0)
    {
      v24 = v32;
      *a6 = v31;
      a6[1] = v24;
      result = v33[0];
      a6[2] = *(_OWORD *)v33;
      return result;
    }
    goto LABEL_12;
  }
  sub_1A5510284((uint64_t)v28, &qword_1EE7A8698);
LABEL_13:
  result = 0.0;
  a6[1] = 0u;
  a6[2] = 0u;
  *a6 = 0u;
  return result;
}

double sub_1A5507E08@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(__int128 *)@<X3>, void (*a5)(_QWORD *__return_ptr, uint64_t)@<X5>, _OWORD *a6@<X8>)
{
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  __int128 v24;
  double result;
  _BYTE v27[136];
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  double v33[4];

  if (qword_1EE795C10 != -1)
    swift_once();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v11 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v12 = sub_1A550EAD4(v11, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = swift_bridgeObjectRelease();
  if ((v12 & 1) == 0)
    goto LABEL_13;
  a5(v28, v13);
  if (v28[0])
  {
    sub_1A550FFCC((uint64_t)v28, (uint64_t)v27);
    v14 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797458);
    v15 = sub_1A5510748(&qword_1EE797450, &qword_1EE797458);
    v16 = swift_allocObject();
    sub_1A550FFCC((uint64_t)v27, v16 + 16);
    v17 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v16 + 152) = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v16 + 160) = v17;
    v18 = qword_1EE7F96C0;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A550FE14((uint64_t)v27);
    sub_1A550FE14((uint64_t)v28);
    *(_QWORD *)&v31 = v16;
    *((_QWORD *)&v32 + 1) = v14;
    *(_QWORD *)&v33[0] = v15;
    *(_QWORD *)&v33[1] = v18;
    __swift_project_boxed_opaque_existential_1_0(&v31, v14);
    v19 = *(_QWORD *)((*(uint64_t (**)(uint64_t, uint64_t))(v15 + 40))(v14, v15) + 16);
    swift_bridgeObjectRelease();
    sub_1A550EF18((uint64_t)&v31, (uint64_t)v28);
    if (v19)
    {
      v20 = v29;
      v21 = v30;
      __swift_project_boxed_opaque_existential_1_0(v28, v29);
      v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 40))(v20, v21);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v23 = sub_1A550E95C(v22, a1, a2, a3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A550E928((uint64_t)v28);
      if ((v23 & 1) == 0)
      {
LABEL_12:
        sub_1A550E928((uint64_t)&v31);
        goto LABEL_13;
      }
    }
    else
    {
      sub_1A550E928((uint64_t)v28);
    }
    if ((a4(&v31) & 1) != 0)
    {
      v24 = v32;
      *a6 = v31;
      a6[1] = v24;
      result = v33[0];
      a6[2] = *(_OWORD *)v33;
      return result;
    }
    goto LABEL_12;
  }
  sub_1A5510284((uint64_t)v28, &qword_1EE7A86A0);
LABEL_13:
  result = 0.0;
  a6[1] = 0u;
  a6[2] = 0u;
  *a6 = 0u;
  return result;
}

uint64_t sub_1A550809C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(__int128 *)@<X3>, uint64_t a5@<X5>, char a6@<W6>, _OWORD *a7@<X8>)
{
  uint64_t v13;
  char v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  __int128 v30;
  _BYTE v32[192];
  _QWORD v33[3];
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int16 v40;
  uint64_t v41;
  int v42;

  if (qword_1EE7978C0 != -1)
    swift_once();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v13 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v14 = sub_1A550EAD4(v13, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v14 & 1) == 0)
  {
    a7[1] = 0u;
    a7[2] = 0u;
    *a7 = 0u;
    return sub_1A54E31EC(a5);
  }
  v15 = *(_DWORD *)(a5 + 172);
  v16 = *(_QWORD *)(a5 + 8);
  v17 = *(_QWORD *)(a5 + 16);
  v18 = *(_DWORD *)(a5 + 24);
  *(_QWORD *)&v39 = *(_QWORD *)a5;
  *((_QWORD *)&v39 + 1) = v16;
  v40 = v15;
  v41 = v17;
  v42 = v18;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5612A7C(&v39, a6 & 1, (uint64_t)v33);
  sub_1A550F95C((uint64_t)v33, (uint64_t)v32);
  v19 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797438);
  v20 = sub_1A5510748(&qword_1EE797430, &qword_1EE797438);
  v21 = swift_allocObject();
  sub_1A550F95C((uint64_t)v32, v21 + 16);
  v22 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v21 + 208) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v21 + 216) = v22;
  v23 = qword_1EE7F96B8;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A550FA2C((uint64_t)v32);
  sub_1A550FA2C((uint64_t)v33);
  *(_QWORD *)&v36 = v21;
  *((_QWORD *)&v37 + 1) = v19;
  *(_QWORD *)&v38 = v20;
  *((_QWORD *)&v38 + 1) = v23;
  __swift_project_boxed_opaque_existential_1_0(&v36, v19);
  v24 = *(_QWORD *)((*(uint64_t (**)(uint64_t, uint64_t))(v20 + 40))(v19, v20) + 16);
  swift_bridgeObjectRelease();
  sub_1A550EF18((uint64_t)&v36, (uint64_t)v33);
  if (v24)
  {
    v25 = v34;
    v26 = v35;
    __swift_project_boxed_opaque_existential_1_0(v33, v34);
    v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 40))(v25, v26);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v28 = sub_1A550E95C(v27, a1, a2, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A550E928((uint64_t)v33);
    if ((v28 & 1) == 0)
      goto LABEL_11;
  }
  else
  {
    sub_1A550E928((uint64_t)v33);
  }
  if ((a4(&v36) & 1) == 0)
  {
LABEL_11:
    sub_1A550E928((uint64_t)&v36);
    a7[1] = 0u;
    a7[2] = 0u;
    *a7 = 0u;
    return sub_1A54E31EC(a5);
  }
  v30 = v37;
  *a7 = v36;
  a7[1] = v30;
  a7[2] = v38;
  return sub_1A54E31EC(a5);
}

uint64_t sub_1A5508388@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(__int128 *)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _OWORD *a7@<X8>)
{
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  _OWORD *v42;
  __int128 v44;
  _OWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(__int128 *);
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;

  v50 = a5;
  v51 = a4;
  v12 = (int *)type metadata accessor for UploadMessages(0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v52 = (uint64_t)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v45 - v15;
  if (qword_1EE797738 != -1)
    swift_once();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v17 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v18 = sub_1A550EAD4(v17, a1, a2);
  swift_bridgeObjectRelease();
  v49 = a3;
  swift_bridgeObjectRelease();
  v47 = a2;
  swift_bridgeObjectRelease();
  v48 = a1;
  swift_bridgeObjectRelease();
  if ((v18 & 1) == 0)
  {
    a7[1] = 0u;
    a7[2] = 0u;
    *a7 = 0u;
    return sub_1A54E31EC(a6);
  }
  v45 = a7;
  v19 = *(_DWORD *)(a6 + 172);
  v20 = *(_QWORD *)a6;
  v21 = *(_QWORD *)(a6 + 8);
  v22 = *(_QWORD *)(a6 + 16);
  v46 = a6;
  v23 = *(_DWORD *)(a6 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  *((_QWORD *)v16 + 5) = sub_1A5552638((uint64_t)&unk_1E4EF2448);
  v16[48] = 0;
  v24 = &v16[v12[10]];
  v25 = type metadata accessor for UploadMessages.PendingUpload(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 1, 1, v25);
  *(_OWORD *)&v16[v12[11]] = xmmword_1A59ABD50;
  v16[v12[15]] = 0;
  *(_QWORD *)v16 = v20;
  *((_QWORD *)v16 + 1) = v21;
  *((_WORD *)v16 + 8) = v19;
  *((_QWORD *)v16 + 3) = v22;
  *((_DWORD *)v16 + 8) = v23;
  *((_QWORD *)v16 + 7) = v12;
  *(_QWORD *)&v56 = v22;
  DWORD2(v56) = v23;
  sub_1A550F734();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594C6B4();
  v26 = MEMORY[0x1E0DEE9D8];
  *((_QWORD *)v16 + 13) = MEMORY[0x1E0DEE9D8];
  *((_QWORD *)v16 + 14) = v26;
  *((_QWORD *)v16 + 15) = v26 + 32;
  *((_OWORD *)v16 + 8) = xmmword_1A59ABD60;
  *(_QWORD *)&v16[v12[12]] = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)&v16[v12[13]] = v26;
  *(_QWORD *)&v16[v12[14]] = v26;
  v27 = v52;
  sub_1A550FA60((uint64_t)v16, v52);
  v28 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7973D8);
  *((_QWORD *)&v54 + 1) = v28;
  *(_QWORD *)&v55 = sub_1A5510748(&qword_1EE7973D0, &qword_1EE7973D8);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v53);
  sub_1A550FA60(v27, (uint64_t)boxed_opaque_existential_1);
  v30 = (uint64_t *)((char *)boxed_opaque_existential_1 + *(int *)(v28 + 36));
  *v30 = v26;
  v30[1] = v26;
  v31 = qword_1EE7F9688;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A550FAA4(v27);
  *((_QWORD *)&v55 + 1) = v31;
  v56 = v53;
  v57 = v54;
  v58 = v55;
  sub_1A550FAA4((uint64_t)v16);
  v60 = v57;
  v61 = v58;
  v59 = v56;
  v32 = *((_QWORD *)&v57 + 1);
  v33 = v58;
  __swift_project_boxed_opaque_existential_1_0(&v59, *((uint64_t *)&v57 + 1));
  v34 = *(_QWORD *)((*(uint64_t (**)(uint64_t, uint64_t))(v33 + 40))(v32, v33) + 16);
  swift_bridgeObjectRelease();
  sub_1A550EF18((uint64_t)&v59, (uint64_t)&v56);
  if (v34)
  {
    v35 = *((_QWORD *)&v57 + 1);
    v36 = v58;
    __swift_project_boxed_opaque_existential_1_0(&v56, *((uint64_t *)&v57 + 1));
    v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 40))(v35, v36);
    v38 = v48;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v39 = v47;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v40 = v49;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v41 = sub_1A550E95C(v37, v38, v39, v40);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A550E928((uint64_t)&v56);
    v42 = v45;
    if ((v41 & 1) == 0)
      goto LABEL_11;
  }
  else
  {
    sub_1A550E928((uint64_t)&v56);
    v42 = v45;
  }
  if ((v51(&v59) & 1) == 0)
  {
LABEL_11:
    sub_1A550E928((uint64_t)&v59);
    v42[1] = 0u;
    v42[2] = 0u;
    *v42 = 0u;
    return sub_1A54E31EC(v46);
  }
  v44 = v60;
  *v42 = v59;
  v42[1] = v44;
  v42[2] = v61;
  return sub_1A54E31EC(v46);
}

uint64_t sub_1A5508804@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(__int128 *)@<X3>, uint64_t a5@<X5>, uint64_t a6@<X7>, _OWORD *a7@<X8>, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  __int128 v27;
  _BYTE v31[152];
  _QWORD v32[3];
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;

  if (qword_1EE797850 != -1)
    swift_once();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v15 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v16 = sub_1A550EAD4(v15, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v16 & 1) == 0)
    goto LABEL_13;
  sub_1A550BCAC(a5, a6, a10 & 0xFF01010101010101, (uint64_t)v32);
  if (!v32[0])
  {
    sub_1A5510284((uint64_t)v32, &qword_1EE7A8690);
LABEL_13:
    a7[1] = 0u;
    a7[2] = 0u;
    *a7 = 0u;
    goto LABEL_14;
  }
  sub_1A550FAE0((uint64_t)v32, (uint64_t)v31);
  v17 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797408);
  v18 = sub_1A5510748(&qword_1EE797400, &qword_1EE797408);
  v19 = swift_allocObject();
  sub_1A550FAE0((uint64_t)v31, v19 + 16);
  v20 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v19 + 160) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v19 + 168) = v20;
  v21 = qword_1EE7F96A0;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A550FB68((uint64_t)v31);
  sub_1A550FB68((uint64_t)v32);
  *(_QWORD *)&v35 = v19;
  *((_QWORD *)&v36 + 1) = v17;
  *(_QWORD *)&v37 = v18;
  *((_QWORD *)&v37 + 1) = v21;
  __swift_project_boxed_opaque_existential_1_0(&v35, v17);
  v22 = *(_QWORD *)((*(uint64_t (**)(uint64_t, uint64_t))(v18 + 40))(v17, v18) + 16);
  swift_bridgeObjectRelease();
  sub_1A550EF18((uint64_t)&v35, (uint64_t)v32);
  if (v22)
  {
    v23 = v33;
    v24 = v34;
    __swift_project_boxed_opaque_existential_1_0(v32, v33);
    v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 40))(v23, v24);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v26 = sub_1A550E95C(v25, a1, a2, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A550E928((uint64_t)v32);
    if ((v26 & 1) == 0)
      goto LABEL_12;
  }
  else
  {
    sub_1A550E928((uint64_t)v32);
  }
  if ((a4(&v35) & 1) == 0)
  {
LABEL_12:
    sub_1A550E928((uint64_t)&v35);
    goto LABEL_13;
  }
  v27 = v36;
  *a7 = v35;
  a7[1] = v27;
  a7[2] = v37;
LABEL_14:
  sub_1A54E31EC(a5);
  swift_bridgeObjectRelease();
  return sub_1A5503B8C(a8, a9);
}

uint64_t sub_1A5508B08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(__int128 *)@<X3>, uint64_t a5@<X5>, int a6@<W6>, _OWORD *a7@<X8>)
{
  uint64_t v13;
  char v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  int v21;
  char v22;
  uint64_t v23;
  int v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v36;
  uint64_t (*v37)(__int128 *);
  uint64_t v38;
  _OWORD *v39;
  char v40;
  uint64_t v41;
  int v42;
  _QWORD v43[2];
  __int16 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  ValueMetadata *v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  char v55;
  char v56;
  uint64_t v57;
  int v58;
  char v59;
  uint64_t v60;
  int v61;
  char v62;
  uint64_t v63;
  char v64;
  __int16 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;

  v40 = BYTE2(a6);
  if (qword_1EE797818 != -1)
    swift_once();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v13 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v14 = sub_1A550EAD4(v13, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v14 & 1) == 0)
  {
    a7[1] = 0u;
    a7[2] = 0u;
    *a7 = 0u;
    return sub_1A54E31EC(a5);
  }
  v37 = a4;
  v38 = a5;
  v39 = a7;
  v15 = *(_DWORD *)(a5 + 172);
  v17 = *(_QWORD *)a5;
  v16 = *(_QWORD *)(a5 + 8);
  v18 = *(_QWORD *)(a5 + 16);
  v19 = *(_DWORD *)(a5 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v47 = sub_1A5552638((uint64_t)&unk_1E4EF23F8);
  v48 = 0;
  v20 = MEMORY[0x1E0DEE9D8];
  v57 = sub_1A55C19FC(MEMORY[0x1E0DEE9D8]);
  v58 = v21;
  v59 = v22;
  v23 = sub_1A55C19FC(v20);
  v61 = v24;
  v62 = v25;
  v63 = 0;
  v64 = 1;
  v65 = 0;
  v43[0] = v17;
  v43[1] = v16;
  v44 = v15;
  v45 = v18;
  LODWORD(v46) = v19;
  v60 = v23;
  v49 = &type metadata for UploadFlagChanges;
  v41 = v18;
  v42 = v19;
  sub_1A550F734();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594C6B4();
  v50 = 0u;
  v51 = 0u;
  v52 = 0u;
  v53 = 0u;
  v54 = 0u;
  v55 = 2;
  v56 = v40 & 1;
  sub_1A550FB9C((uint64_t)v43, (uint64_t)&v41);
  v26 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7973F8);
  v27 = sub_1A5510748(&qword_1EE7973F0, &qword_1EE7973F8);
  v28 = swift_allocObject();
  sub_1A550FB9C((uint64_t)&v41, v28 + 16);
  *(_QWORD *)(v28 + 256) = v20;
  *(_QWORD *)(v28 + 264) = v20;
  v29 = qword_1EE7F9698;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A550FD18((uint64_t)&v41);
  sub_1A550FD18((uint64_t)v43);
  *(_QWORD *)&v66 = v28;
  *((_QWORD *)&v67 + 1) = v26;
  *(_QWORD *)&v68 = v27;
  *((_QWORD *)&v68 + 1) = v29;
  __swift_project_boxed_opaque_existential_1_0(&v66, v26);
  v30 = *(_QWORD *)((*(uint64_t (**)(uint64_t, uint64_t))(v27 + 40))(v26, v27) + 16);
  swift_bridgeObjectRelease();
  sub_1A550EF18((uint64_t)&v66, (uint64_t)v43);
  if (v30)
  {
    v31 = v45;
    v32 = v46;
    __swift_project_boxed_opaque_existential_1_0(v43, v45);
    v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 40))(v31, v32);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v34 = sub_1A550E95C(v33, a1, a2, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A550E928((uint64_t)v43);
    if ((v34 & 1) == 0)
      goto LABEL_11;
  }
  else
  {
    sub_1A550E928((uint64_t)v43);
  }
  if ((v37(&v66) & 1) == 0)
  {
LABEL_11:
    sub_1A550E928((uint64_t)&v66);
    v39[1] = 0u;
    v39[2] = 0u;
    *v39 = 0u;
    return sub_1A54E31EC(v38);
  }
  v36 = v67;
  *v39 = v66;
  v39[1] = v36;
  v39[2] = v68;
  return sub_1A54E31EC(v38);
}

uint64_t sub_1A5508EC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(__int128 *)@<X3>, uint64_t a5@<X5>, _OWORD *a6@<X8>)
{
  uint64_t v12;
  char v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v30;
  uint64_t (*v31)(__int128 *);
  uint64_t v32;
  int v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  ValueMetadata *v41;
  char v42;
  unint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;

  if (qword_1EE7977F0 != -1)
    swift_once();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v12 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v13 = sub_1A550EAD4(v12, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v13 & 1) == 0)
  {
    a6[1] = 0u;
    a6[2] = 0u;
    *a6 = 0u;
    return sub_1A54E31EC(a5);
  }
  v31 = a4;
  v14 = *(_DWORD *)(a5 + 172);
  v16 = *(_QWORD *)a5;
  v15 = *(_QWORD *)(a5 + 8);
  v17 = *(_QWORD *)(a5 + 16);
  v18 = *(_DWORD *)(a5 + 24);
  v34 = sub_1A54F8ABC((uint64_t)&unk_1E4EF2300);
  v35 = 0;
  v42 = 0;
  v44 = 0;
  v36 = v16;
  v37 = v15;
  LOWORD(v38) = v14;
  v39 = v17;
  v40 = v18;
  v43 = sub_1A558ABF8(MEMORY[0x1E0DEE9D8]);
  v41 = &type metadata for UpdateLocalFlags;
  v32 = v17;
  v33 = v18;
  sub_1A550F734();
  swift_bridgeObjectRetain_n();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594C6B4();
  sub_1A55101C0((uint64_t)&v34, (uint64_t)&v32);
  v19 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7973E8);
  v20 = sub_1A5510748(&qword_1EE7973E0, &qword_1EE7973E8);
  v21 = swift_allocObject();
  sub_1A55101C0((uint64_t)&v32, v21 + 16);
  v22 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v21 + 144) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v21 + 152) = v22;
  v23 = qword_1EE7F9690;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5510250((uint64_t)&v32);
  sub_1A5510250((uint64_t)&v34);
  *(_QWORD *)&v45 = v21;
  *((_QWORD *)&v46 + 1) = v19;
  *(_QWORD *)&v47 = v20;
  *((_QWORD *)&v47 + 1) = v23;
  __swift_project_boxed_opaque_existential_1_0(&v45, v19);
  v24 = *(_QWORD *)((*(uint64_t (**)(uint64_t, uint64_t))(v20 + 40))(v19, v20) + 16);
  swift_bridgeObjectRelease();
  sub_1A550EF18((uint64_t)&v45, (uint64_t)&v34);
  if (v24)
  {
    v25 = v37;
    v26 = v38;
    __swift_project_boxed_opaque_existential_1_0(&v34, v37);
    v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 40))(v25, v26);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v28 = sub_1A550E95C(v27, a1, a2, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A550E928((uint64_t)&v34);
    if ((v28 & 1) == 0)
      goto LABEL_11;
  }
  else
  {
    sub_1A550E928((uint64_t)&v34);
  }
  if ((v31(&v45) & 1) == 0)
  {
LABEL_11:
    sub_1A550E928((uint64_t)&v45);
    a6[1] = 0u;
    a6[2] = 0u;
    *a6 = 0u;
    return sub_1A54E31EC(a5);
  }
  v30 = v46;
  *a6 = v45;
  a6[1] = v30;
  a6[2] = v47;
  return sub_1A54E31EC(a5);
}

uint64_t sub_1A5509224@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(__int128 *)@<X3>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, _OWORD *a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, __int16 a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16)
{
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  __int128 v34;
  uint64_t v36;
  _BYTE v39[248];
  _QWORD v40[3];
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;

  if (qword_1EE797288 != -1)
    swift_once();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v22 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v23 = sub_1A550EAD4(v22, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v23 & 1) == 0)
    goto LABEL_13;
  LOBYTE(v36) = a15 & 1;
  sub_1A550B020(a5, a6, a7, a9, a10 & 0xFFFFFFFFFFLL, a11, a12 & 0x101, (uint64_t)v40, a14, v36, a16 & 0x1FFFF01, (a16 & 0x1010101FFFF01uLL) >> 32, (a16 & 0x1010101FFFF01uLL) >> 48);
  if (!v40[0])
  {
    sub_1A5510284((uint64_t)v40, &qword_1EE7A86C8);
LABEL_13:
    a8[1] = 0u;
    a8[2] = 0u;
    *a8 = 0u;
    goto LABEL_14;
  }
  sub_1A55102C0((uint64_t)v40, (uint64_t)v39);
  v24 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7973C8);
  v25 = sub_1A5510748(&qword_1EE7973C0, &qword_1EE7973C8);
  v26 = swift_allocObject();
  sub_1A55102C0((uint64_t)v39, v26 + 16);
  v27 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v26 + 256) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v26 + 264) = v27;
  v28 = qword_1EE7F9678;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A55103B8((uint64_t)v39);
  sub_1A55103B8((uint64_t)v40);
  *(_QWORD *)&v43 = v26;
  *((_QWORD *)&v44 + 1) = v24;
  *(_QWORD *)&v45 = v25;
  *((_QWORD *)&v45 + 1) = v28;
  __swift_project_boxed_opaque_existential_1_0(&v43, v24);
  v29 = *(_QWORD *)((*(uint64_t (**)(uint64_t, uint64_t))(v25 + 40))(v24, v25) + 16);
  swift_bridgeObjectRelease();
  sub_1A550EF18((uint64_t)&v43, (uint64_t)v40);
  if (v29)
  {
    v30 = v41;
    v31 = v42;
    __swift_project_boxed_opaque_existential_1_0(v40, v41);
    v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 40))(v30, v31);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v33 = sub_1A550E95C(v32, a1, a2, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A550E928((uint64_t)v40);
    if ((v33 & 1) == 0)
      goto LABEL_12;
  }
  else
  {
    sub_1A550E928((uint64_t)v40);
  }
  if ((a4(&v43) & 1) == 0)
  {
LABEL_12:
    sub_1A550E928((uint64_t)&v43);
    goto LABEL_13;
  }
  v34 = v44;
  *a8 = v43;
  a8[1] = v34;
  a8[2] = v45;
LABEL_14:
  sub_1A54E31EC(a5);
  swift_bridgeObjectRelease();
  sub_1A5503B8C(a9, a10);
  return swift_release();
}

uint64_t sub_1A5509558@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(__int128 *)@<X3>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, _OWORD *a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, char a12, unsigned __int8 a13, int a14, int a15, __int16 a16)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  char v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  unint64_t v43;
  uint64_t v44;
  _BYTE v49[288];
  _QWORD v50[3];
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  _QWORD v56[2];
  __int16 v57;
  uint64_t v58;
  int v59;
  _BYTE v60[72];

  v20 = a10;
  v21 = a9;
  if (qword_1EE797878 != -1)
    swift_once();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v22 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v23 = sub_1A550EAD4(v22, a1, a2);
  swift_bridgeObjectRelease();
  v44 = a3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v23 & 1) != 0)
  {
    v24 = *(_DWORD *)(a5 + 172);
    v25 = *(_QWORD *)(a5 + 8);
    v26 = *(_QWORD *)(a5 + 16);
    v27 = *(_DWORD *)(a5 + 24);
    v43 = *(_QWORD *)(a5 + 40);
    v28 = *(_BYTE *)(a5 + 48);
    v56[0] = *(_QWORD *)a5;
    v56[1] = v25;
    v57 = v24;
    v58 = v26;
    v59 = v27;
    swift_beginAccess();
    sub_1A5510484(a11 + 400, (uint64_t)v60);
    v29 = *(unsigned int *)(a11 + 32);
    v30 = *(_BYTE *)(a11 + 36);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5503BA0(a9, a10);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A55104C0((uint64_t)v60);
    LOBYTE(v50[0]) = v30;
    v21 = a9;
    sub_1A55EE558((uint64_t)v56, a6, a7, a9, a10 & 0xFFFFFFFFFFLL, (uint64_t)v60, v43, v28 & 1, (uint64_t)v50, v29 | ((unint64_t)v30 << 32), a13, a16 & 0x101);
    sub_1A5510500((uint64_t)v50, (uint64_t)v49);
    v31 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797418);
    v32 = sub_1A5510748(&qword_1EE797410, &qword_1EE797418);
    v33 = swift_allocObject();
    sub_1A5510500((uint64_t)v49, v33 + 16);
    v34 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v33 + 304) = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v33 + 312) = v34;
    v35 = qword_1EE7F96A8;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A55105FC((uint64_t)v49);
    sub_1A55105FC((uint64_t)v50);
    *(_QWORD *)&v53 = v33;
    *((_QWORD *)&v54 + 1) = v31;
    *(_QWORD *)&v55 = v32;
    *((_QWORD *)&v55 + 1) = v35;
    __swift_project_boxed_opaque_existential_1_0(&v53, v31);
    v36 = *(_QWORD *)((*(uint64_t (**)(uint64_t, uint64_t))(v32 + 40))(v31, v32) + 16);
    swift_bridgeObjectRelease();
    sub_1A550EF18((uint64_t)&v53, (uint64_t)v50);
    if (v36)
    {
      v37 = v51;
      v38 = v52;
      __swift_project_boxed_opaque_existential_1_0(v50, v51);
      v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 40))(v37, v38);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v40 = sub_1A550E95C(v39, a1, a2, v44);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A550E928((uint64_t)v50);
      if ((v40 & 1) == 0)
        goto LABEL_11;
    }
    else
    {
      sub_1A550E928((uint64_t)v50);
    }
    if ((a4(&v53) & 1) != 0)
    {
      v41 = v54;
      *a8 = v53;
      a8[1] = v41;
      a8[2] = v55;
LABEL_12:
      sub_1A54E31EC(a5);
      v20 = a10;
      goto LABEL_13;
    }
LABEL_11:
    sub_1A550E928((uint64_t)&v53);
    a8[1] = 0u;
    a8[2] = 0u;
    *a8 = 0u;
    goto LABEL_12;
  }
  a8[1] = 0u;
  a8[2] = 0u;
  *a8 = 0u;
  sub_1A54E31EC(a5);
LABEL_13:
  swift_bridgeObjectRelease();
  sub_1A5503B8C(v21, v20);
  return swift_release();
}

uint64_t sub_1A5509934@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(__int128 *)@<X3>, uint64_t a5@<X5>, uint64_t a6@<X6>, _OWORD *a7@<X8>)
{
  uint64_t v14;
  char v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t (*v37)(__int128 *);
  _OWORD *v38;
  _BYTE v39[144];
  _QWORD v40[3];
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int16 v47;
  uint64_t v48;
  int v49;

  if (qword_1EE7A0470 != -1)
    swift_once();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v14 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v15 = sub_1A550EAD4(v14, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v15 & 1) == 0)
    goto LABEL_6;
  v37 = a4;
  v38 = a7;
  v16 = *(_DWORD *)(a5 + 172);
  v17 = *(_QWORD *)(a5 + 8);
  v18 = *(_QWORD *)(a5 + 16);
  v19 = *(_DWORD *)(a5 + 24);
  *(_QWORD *)&v46 = *(_QWORD *)a5;
  *((_QWORD *)&v46 + 1) = v17;
  v47 = v16;
  v48 = v18;
  v49 = v19;
  swift_beginAccess();
  v20 = *(_QWORD *)(a6 + 240);
  v21 = *(unsigned int *)(a6 + 248);
  v22 = *(unsigned __int8 *)(a6 + 252);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54E4334(v20, v21, v22);
  sub_1A54E3414();
  v23 = MessageIdentifierSetNonEmpty.init(set:)(v20, v21 | (v22 << 32));
  if ((~v24 & 0xFF00000000) != 0)
  {
    sub_1A5620B50(&v46, v23, v24 & 0xFFFFFFFFFFLL, (uint64_t)v40);
    sub_1A5510630((uint64_t)v40, (uint64_t)v39);
    v26 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A86D0);
    v27 = sub_1A5510748(&qword_1EE7A86D8, &qword_1EE7A86D0);
    v28 = swift_allocObject();
    sub_1A5510630((uint64_t)v39, v28 + 16);
    v29 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v28 + 160) = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v28 + 168) = v29;
    v30 = qword_1EE7F9910;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A55106D8((uint64_t)v39);
    sub_1A55106D8((uint64_t)v40);
    *(_QWORD *)&v43 = v28;
    *((_QWORD *)&v44 + 1) = v26;
    *(_QWORD *)&v45 = v27;
    *((_QWORD *)&v45 + 1) = v30;
    __swift_project_boxed_opaque_existential_1_0(&v43, v26);
    v31 = *(_QWORD *)((*(uint64_t (**)(uint64_t, uint64_t))(v27 + 40))(v26, v27) + 16);
    swift_bridgeObjectRelease();
    sub_1A550EF18((uint64_t)&v43, (uint64_t)v40);
    if (v31)
    {
      v32 = v41;
      v33 = v42;
      __swift_project_boxed_opaque_existential_1_0(v40, v41);
      v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 40))(v32, v33);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v35 = sub_1A550E95C(v34, a1, a2, a3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A550E928((uint64_t)v40);
      if ((v35 & 1) == 0)
        goto LABEL_14;
    }
    else
    {
      sub_1A550E928((uint64_t)v40);
    }
    if ((v37(&v43) & 1) != 0)
    {
      v36 = v44;
      *v38 = v43;
      v38[1] = v36;
      v38[2] = v45;
      goto LABEL_7;
    }
LABEL_14:
    sub_1A550E928((uint64_t)&v43);
    v38[1] = 0u;
    v38[2] = 0u;
    *v38 = 0u;
    goto LABEL_7;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a7 = v38;
LABEL_6:
  a7[1] = 0u;
  a7[2] = 0u;
  *a7 = 0u;
LABEL_7:
  sub_1A54E31EC(a5);
  return swift_release();
}

uint64_t sub_1A5509CA0@<X0>(char a1@<W0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t (*a5)(__int128 *)@<X5>, int a6@<W7>, _OWORD *a7@<X8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t (*a14)(uint64_t))
{
  unint64_t v14;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t result;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  _QWORD *v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  uint64_t v58;
  int *v59;
  int v60;
  uint64_t v61;
  char v62;
  char v63;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v65;
  unint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  char v72;
  char v73;
  _QWORD *v74;
  _QWORD *v75;
  unint64_t v76;
  unint64_t v77;
  int v78;
  uint64_t v79;
  char v80;
  char v81;
  uint64_t v82;
  _QWORD *v83;
  int v84;
  uint64_t v85;
  char v86;
  char v87;
  _QWORD *v88;
  _QWORD *v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  unint64_t v98;
  int v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  int v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  _BYTE *v114;
  unint64_t v115;
  char v116;
  int v117;
  char v118;
  _QWORD *v119;
  _QWORD *v120;
  _BYTE *v121;
  unint64_t v122;
  int v123;
  uint64_t v124;
  char v125;
  _QWORD *v126;
  size_t v127;
  _OWORD *v128;
  unint64_t v129;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  _QWORD *v140;
  uint64_t v142;
  unint64_t v143;
  char v144;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  _QWORD *v149;
  unint64_t v150;
  char v151;
  uint64_t v152;
  unint64_t v153;
  unint64_t v154;
  char v155;
  char v156;
  uint64_t v157;
  char v158;
  uint64_t v159;
  char v160;
  int v161;
  int v162;
  int v163;
  uint64_t v164;
  uint64_t v165;
  int v166;
  char v167;
  char v168;
  __int128 v169;
  uint64_t v170;
  int v171;
  char v172;
  uint64_t v173;
  int v174;
  char v175;
  uint64_t v176;
  char v177;
  char v178;
  ValueMetadata *v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  char v183;
  uint64_t v184;
  int v185;
  __int128 v186;
  uint64_t v187;
  int v188;
  char v189;
  uint64_t v190;
  int v191;
  char v192;
  uint64_t v193;
  int v194;
  char v195;
  __int128 v196;
  __int128 v197;
  __int128 v198;
  _OWORD v199[2];
  __int128 v200;
  char v201;
  uint64_t v202[2];
  __int16 v203;
  uint64_t v204;
  int v205;
  _BYTE v206[45];
  _BYTE v207[13];
  uint64_t v208;
  _BYTE v209[13];
  _QWORD v210[3];

  BYTE2(v14) = BYTE2(a6);
  LOBYTE(v18) = a1;
  if (qword_1EE797250 != -1)
LABEL_78:
    swift_once();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v19 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v20 = sub_1A550EAD4(v19, a3, a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v20 & 1) == 0)
    goto LABEL_71;
  swift_beginAccess();
  v22 = *(_OWORD *)(a2 + 280);
  *(_OWORD *)v206 = *(_OWORD *)(a2 + 264);
  *(_OWORD *)&v206[16] = v22;
  *(_OWORD *)&v206[29] = *(_OWORD *)(a2 + 293);
  *(_QWORD *)v207 = *(_QWORD *)&v206[8];
  *(_QWORD *)&v207[5] = *(_QWORD *)&v206[13];
  *(_QWORD *)&v209[5] = *(_QWORD *)&v206[37];
  v208 = *(_QWORD *)v206;
  *(_QWORD *)v209 = *(_QWORD *)&v206[32];
  v210[0] = *(_QWORD *)&v206[24];
  sub_1A54FCA28((uint64_t)&v208);
  sub_1A550F318((uint64_t)v207);
  sub_1A54FCA28((uint64_t)v210);
  sub_1A550F318((uint64_t)v209);
  v144 = v18 & 1;
  v23 = sub_1A552FFC8(v18 & 1, SBYTE2(v14), a8, a9 & 0xFFFFFFFFFFLL, a10, a11);
  v25 = v24;
  v27 = v26;
  sub_1A54F81BC((uint64_t)&v208);
  sub_1A550F348((uint64_t)v207);
  sub_1A54F81BC((uint64_t)v210);
  v28 = sub_1A550F348((uint64_t)v209);
  if (!*(_QWORD *)(v23 + 16) && !*(_QWORD *)(*(_QWORD *)(a2 + 328) + 16))
  {
    a7[1] = 0u;
    a7[2] = 0u;
    *a7 = 0u;
    swift_bridgeObjectRelease();
    return sub_1A54E3458(v25, v27, SBYTE4(v27));
  }
  v29 = a14(v28);
  v30 = *(_QWORD *)(a2 + 328);
  v32 = v31 & 0xFFFFFFFFFFLL;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v146 = sub_1A550C414(v23, v25, v27 & 0xFFFFFFFFFFLL, v29, v32, v30);
  v35 = v34;
  v148 = *(_QWORD *)(a12 + 16);
  if (!v148)
  {
LABEL_70:
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
LABEL_71:
    a7[1] = 0u;
    a7[2] = 0u;
    *a7 = 0u;
    return result;
  }
  v147 = a12 + 32;
  v143 = v33;
  v142 = v33;
  v140 = v34 + 4;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v36 = 0;
  v149 = v35;
  while (1)
  {
    v152 = v36;
    v151 = *(_BYTE *)(v147 + v36);
    if (v151)
    {
      if (*(_BYTE *)(v147 + v36) == 1)
        v37 = 11;
      else
        v37 = 13;
      BYTE2(v14) = BYTE2(v146);
      v38 = sub_1A552FBE8(v37, v146, v142 | ((HIDWORD(v143) & 1) << 32));
      a3 = v39;
      v40 = HIDWORD(v39);
      v41 = v150 & 0xFFFFFF0000000000 | v39 & 0xFFFFFFFFFFLL;
      v42 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v150 = v41;
      sub_1A550E684(v42, v38, v41);
      v44 = v43;
      sub_1A54E3458(v38, a3, v40);
      swift_bridgeObjectRelease();
      v45 = v44;
      v46 = v44[2];
      if (v46 >= 2)
      {
        a2 = 0;
        v47 = v46 >> 1;
        a4 = v46 - 1;
        v18 = 24 * v46 + 25;
        v48 = 4;
        v153 = v46 >> 1;
        while (1)
        {
          if (a2 != a4)
          {
            v122 = v45[2];
            if (a2 >= v122)
            {
              __break(1u);
LABEL_75:
              __break(1u);
LABEL_76:
              __break(1u);
              goto LABEL_77;
            }
            if (a4 >= v122)
              goto LABEL_75;
            v123 = v45[v48];
            v164 = v45[v48 + 1];
            v156 = BYTE1(v45[v48 + 2]);
            v160 = v45[v48 + 2];
            a3 = *(unsigned int *)((char *)v45 + v18 - 17);
            v124 = *(_QWORD *)((char *)v45 + v18 - 9);
            LODWORD(v14) = *((unsigned __int8 *)v45 + v18 - 1);
            v125 = *((_BYTE *)v45 + v18);
            v126 = v45;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
              v45 = v126;
            else
              v45 = sub_1A554B6D0(v126);
            v120 = &v45[v48];
            *(_DWORD *)v120 = a3;
            v120[1] = v124;
            *((_BYTE *)v120 + 16) = v14;
            *((_BYTE *)v120 + 17) = v125;
            v121 = (char *)v45 + v18;
            *(_DWORD *)(v121 - 17) = v123;
            *(_QWORD *)(v121 - 9) = v164;
            *(v121 - 1) = v160;
            *v121 = v156;
            v47 = v153;
          }
          ++a2;
          --a4;
          v18 -= 24;
          v48 += 3;
          if (v47 == a2)
            goto LABEL_42;
        }
      }
      goto LABEL_43;
    }
    a3 = v35[2];
    if (a3 > 7)
    {
      sub_1A594CD68();
      swift_bridgeObjectRetain_n();
      swift_unknownObjectRetain_n();
      v49 = swift_dynamicCastClass();
      if (!v49)
      {
        swift_bridgeObjectRelease();
        v49 = MEMORY[0x1E0DEE9D8];
      }
      v50 = *(_QWORD *)(v49 + 16);
      swift_release();
      if (v50 == 7)
      {
        v51 = swift_dynamicCastClass();
        if (!v51)
        {
          swift_bridgeObjectRelease();
          v51 = MEMORY[0x1E0DEE9D8];
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B228);
        v51 = swift_allocObject();
        v127 = _swift_stdlib_malloc_size_0((const void *)v51);
        *(_QWORD *)(v51 + 16) = 7;
        *(_QWORD *)(v51 + 24) = 2 * ((uint64_t)(v127 - 32) / 24);
        v128 = (_OWORD *)(v51 + 32);
        v129 = (unint64_t)&v140[3 * a3];
        if (v129 - 168 < v51 + 200 && (unint64_t)v128 < v129)
          goto LABEL_81;
        v131 = *(_OWORD *)(v129 - 168);
        v132 = *(_OWORD *)(v129 - 136);
        *(_OWORD *)(v51 + 48) = *(_OWORD *)(v129 - 152);
        *(_OWORD *)(v51 + 64) = v132;
        *v128 = v131;
        v133 = *(_OWORD *)(v129 - 120);
        v134 = *(_OWORD *)(v129 - 104);
        v135 = *(_OWORD *)(v129 - 72);
        *(_OWORD *)(v51 + 112) = *(_OWORD *)(v129 - 88);
        *(_OWORD *)(v51 + 128) = v135;
        *(_OWORD *)(v51 + 80) = v133;
        *(_OWORD *)(v51 + 96) = v134;
        v136 = *(_OWORD *)(v129 - 56);
        v137 = *(_OWORD *)(v129 - 40);
        v138 = *(_OWORD *)(v129 - 24);
        *(_QWORD *)(v51 + 192) = *(_QWORD *)(v129 - 8);
        *(_OWORD *)(v51 + 160) = v137;
        *(_OWORD *)(v51 + 176) = v138;
        *(_OWORD *)(v51 + 144) = v136;
      }
      swift_bridgeObjectRelease();
      v52 = (_QWORD *)v51;
      v14 = *(_QWORD *)(v51 + 16);
      swift_bridgeObjectRelease();
      if (v14 >= 2)
      {
        a2 = 0;
        v111 = v14 >> 1;
        a4 = v14 - 1;
        v18 = 24 * v14 + 25;
        v112 = 4;
        v45 = v52;
        v154 = v14 >> 1;
        while (1)
        {
          if (a2 != a4)
          {
            v115 = v45[2];
            if (a2 >= v115)
              goto LABEL_76;
            if (a4 >= v115)
            {
LABEL_77:
              __break(1u);
              goto LABEL_78;
            }
            v163 = v45[v112];
            v159 = v45[v112 + 1];
            v155 = v45[v112 + 2];
            v116 = BYTE1(v45[v112 + 2]);
            v117 = *(_DWORD *)((char *)v45 + v18 - 17);
            a3 = *(_QWORD *)((char *)v45 + v18 - 9);
            LODWORD(v14) = *((unsigned __int8 *)v45 + v18 - 1);
            v118 = *((_BYTE *)v45 + v18);
            v119 = v45;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
              v45 = v119;
            else
              v45 = sub_1A554B6D0(v119);
            v113 = &v45[v112];
            *(_DWORD *)v113 = v117;
            v113[1] = a3;
            *((_BYTE *)v113 + 16) = v14;
            *((_BYTE *)v113 + 17) = v118;
            v114 = (char *)v45 + v18;
            *(_DWORD *)(v114 - 17) = v163;
            *(_QWORD *)(v114 - 9) = v159;
            *(v114 - 1) = v155;
            *v114 = v116;
            v111 = v154;
          }
          ++a2;
          --a4;
          v18 -= 24;
          v112 += 3;
          if (v111 == a2)
            goto LABEL_42;
        }
      }
      v45 = (_QWORD *)v51;
      goto LABEL_43;
    }
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v45 = v35;
    v53 = a3 - 2;
    if (a3 >= 2)
    {
      v54 = a3 - 1;
      v55 = v35[2];
      if (!v55)
        goto LABEL_79;
      if (v54 >= v55)
        goto LABEL_80;
      v161 = *((_DWORD *)v35 + 8);
      v157 = v35[5];
      v56 = *((_BYTE *)v35 + 48);
      v57 = *((_BYTE *)v35 + 49);
      v58 = 3 * v54;
      v59 = (int *)&v140[3 * v54];
      v60 = *v59;
      v61 = *((_QWORD *)v59 + 1);
      v62 = *((_BYTE *)v59 + 16);
      v63 = *((_BYTE *)v59 + 17);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v45 = v35;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v45 = sub_1A554B6D0(v149);
      *((_DWORD *)v45 + 8) = v60;
      v45[5] = v61;
      *((_BYTE *)v45 + 48) = v62;
      *((_BYTE *)v45 + 49) = v63;
      v65 = &v45[v58 + 4];
      *(_DWORD *)v65 = v161;
      v65[1] = v157;
      *((_BYTE *)v65 + 16) = v56;
      *((_BYTE *)v65 + 17) = v57;
      v35 = v149;
      if (a3 >> 1 != 1)
      {
        if (a3 != 3)
        {
          v66 = v45[2];
          if (v66 < 2)
            goto LABEL_79;
          if (v53 >= v66)
            goto LABEL_80;
          v162 = *((_DWORD *)v45 + 14);
          v67 = v45[8];
          v68 = *((_BYTE *)v45 + 72);
          v158 = *((_BYTE *)v45 + 73);
          v69 = 3 * v53;
          v70 = v45[v69 + 4];
          v71 = v45[v69 + 5];
          v72 = v45[v69 + 6];
          v73 = BYTE1(v45[v69 + 6]);
          v74 = v45;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v74 = sub_1A554B6D0(v74);
          v45 = v74;
          v75 = &v74[v69];
          *((_DWORD *)v74 + 14) = v70;
          v74[8] = v71;
          *((_BYTE *)v74 + 72) = v72;
          *((_BYTE *)v74 + 73) = v73;
          *((_DWORD *)v75 + 8) = v162;
          v75[5] = v67;
          *((_BYTE *)v75 + 48) = v68;
          *((_BYTE *)v75 + 49) = v158;
          v35 = v149;
        }
        if (a3 >> 1 != 2)
        {
          v76 = a3 - 3;
          if (a3 != 5)
            break;
        }
      }
    }
LABEL_43:
    if (v45[2])
    {
      v90 = *(_DWORD *)(a13 + 172);
      v91 = *(_QWORD *)(a13 + 8);
      v92 = *(_QWORD *)(a13 + 16);
      v93 = *(_DWORD *)(a13 + 24);
      v202[0] = *(_QWORD *)a13;
      v202[1] = v91;
      v203 = v90;
      v204 = v92;
      v205 = v93;
      v94 = (uint64_t)v45;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v176 = sub_1A5552638(MEMORY[0x1E0DEE9D8]);
      v177 = 0;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A55CCADC(v202, v94, v151, (uint64_t)v199);
      v95 = *((_QWORD *)&v200 + 1);
      v180 = v199[0];
      v181 = v199[1];
      v182 = v200;
      v183 = v201;
      v178 = v144;
      v179 = &type metadata for DownloadTask;
      v165 = v92;
      v166 = v93;
      v167 = v144;
      v168 = v151;
      sub_1A550F5DC();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A594C6B4();
      v96 = sub_1A54E3414();
      v97 = MessageIdentifierSet.init()(&type metadata for UID, v96);
      v99 = v98;
      v100 = HIDWORD(v98);
      v101 = MessageIdentifierSet.init()(&type metadata for UID, v96);
      v103 = v102;
      swift_bridgeObjectRelease();
      v165 = v92;
      v166 = v93;
      v104 = MEMORY[0x1E0DEE9D8];
      *(_QWORD *)&v169 = MEMORY[0x1E0DEE9D8];
      *((_QWORD *)&v169 + 1) = MEMORY[0x1E0DEE9D8];
      v170 = v97;
      v171 = v99;
      v172 = v100;
      v173 = v101;
      v174 = v103;
      v175 = BYTE4(v103);
      v193 = sub_1A55CD438();
      v194 = v105;
      v195 = v106;
      v184 = v165;
      v185 = v166;
      v186 = v169;
      v187 = v170;
      v188 = v171;
      v189 = v172;
      v190 = v173;
      v191 = v174;
      v192 = v175;
      sub_1A55CD8C4(v95);
      swift_bridgeObjectRelease();
      sub_1A550F620((uint64_t)&v176, (uint64_t)&v165);
      v107 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7973B0);
      v108 = sub_1A5510748(&qword_1EE7973A8, &qword_1EE7973B0);
      v109 = swift_allocObject();
      sub_1A550F620((uint64_t)&v165, v109 + 16);
      *(_QWORD *)(v109 + 216) = v104;
      *(_QWORD *)(v109 + 224) = v104;
      v110 = qword_1EE7F9670;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A550F6F8((uint64_t)&v165);
      *(_QWORD *)&v196 = v109;
      *((_QWORD *)&v197 + 1) = v107;
      *(_QWORD *)&v198 = v108;
      *((_QWORD *)&v198 + 1) = v110;
      sub_1A550F6F8((uint64_t)&v176);
      if ((a5(&v196) & 1) != 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        v139 = v197;
        *a7 = v196;
        a7[1] = v139;
        a7[2] = v198;
        return result;
      }
      sub_1A550E928((uint64_t)&v196);
      v35 = v149;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v36 = v152 + 1;
    if (v152 + 1 == v148)
    {
      swift_bridgeObjectRelease();
      goto LABEL_70;
    }
  }
  v77 = v45[2];
  if (v77 >= 3)
  {
    if (v76 >= v77)
      goto LABEL_80;
    v78 = *((_DWORD *)v45 + 20);
    v79 = v45[11];
    v80 = *((_BYTE *)v45 + 96);
    v81 = *((_BYTE *)v45 + 97);
    v82 = 3 * v76;
    v83 = &v45[3 * v76];
    v84 = *((_DWORD *)v83 + 8);
    v85 = v83[5];
    v86 = *((_BYTE *)v83 + 48);
    v87 = *((_BYTE *)v83 + 49);
    v88 = v45;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v88 = sub_1A554B6D0(v88);
    v45 = v88;
    v89 = &v88[v82];
    *((_DWORD *)v88 + 20) = v84;
    v88[11] = v85;
    *((_BYTE *)v88 + 96) = v86;
    *((_BYTE *)v88 + 97) = v87;
    *((_DWORD *)v89 + 8) = v78;
    v89[5] = v79;
    *((_BYTE *)v89 + 48) = v80;
    *((_BYTE *)v89 + 49) = v81;
LABEL_42:
    v35 = v149;
    goto LABEL_43;
  }
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

double sub_1A550A888@<D0>(char a1@<W0>, uint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t (*a6)(__int128 *)@<X5>, uint64_t a7@<X7>, _OWORD *a8@<X8>, unint64_t a9, int a10, uint64_t (*a11)(uint64_t), uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  char v22;
  __int128 v23;
  double result;
  __int128 v26;
  __int128 v27;
  double v28[3];

  v22 = a1 & 1;
  sub_1A54E3150(a7);
  swift_retain();
  sub_1A5506DDC(a3, a4, a5, a6, a7, v22, a9, &v26, a10 & 1);
  if (*((_QWORD *)&v27 + 1)
    || (sub_1A5510284((uint64_t)&v26, &qword_1EE7974B0),
        sub_1A5509CA0(v22, a9, a3, a4, a6, a10 & 0x1FFFF01, &v26, a13, a14 & 0xFFFFFFFFFFLL, a15, a16, a2, a7, a11),
        *((_QWORD *)&v27 + 1)))
  {
    v23 = v27;
    *a8 = v26;
    a8[1] = v23;
    result = v28[0];
    a8[2] = *(_OWORD *)v28;
  }
  else
  {
    sub_1A5510284((uint64_t)&v26, &qword_1EE7974B0);
    result = 0.0;
    a8[1] = 0u;
    a8[2] = 0u;
    *a8 = 0u;
  }
  return result;
}

uint64_t sub_1A550AA20@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t (*a3)(__int128 *)@<X4>, unint64_t a4@<X6>, _OWORD *a5@<X8>)
{
  uint64_t v9;
  char v10;
  uint64_t result;
  uint64_t v12;
  unsigned int *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  __int16 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  _OWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  __int16 v51;
  uint64_t v52;
  int v53;
  ValueMetadata *v54;
  uint64_t v55;
  char v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char v61;
  char v62;
  uint64_t v63;
  int v64;
  char v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  _QWORD v69[2];

  if (qword_1EE7972E8 != -1)
    swift_once();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v9 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v10 = sub_1A550EAD4(v9, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
  {
    result = v40[19];
    v69[0] = result;
    v12 = *(_QWORD *)(result + 16);
    if (!v12)
    {
LABEL_12:
      a5[1] = 0u;
      a5[2] = 0u;
      *a5 = 0u;
      return result;
    }
    v38 = HIDWORD(a4) & 1;
    v36 = a5;
    v37 = (a4 >> 40) & 1;
    v13 = (unsigned int *)(_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0() + 80);
    while (1)
    {
      v16 = *((_QWORD *)v13 - 5);
      v15 = *((_QWORD *)v13 - 4);
      v17 = *((_QWORD *)v13 - 3);
      v18 = *((_QWORD *)v13 - 2);
      v19 = *((_QWORD *)v13 - 1);
      v20 = *((unsigned __int8 *)v13 + 4);
      v21 = *v13;
      v22 = v21 | (v20 << 32);
      if ((v18 & 0x8000000000000000) != 0)
      {
        v14 = v21 | (v20 << 32);
        sub_1A550F160(*((_QWORD *)v13 - 5), *((_QWORD *)v13 - 4), *((_QWORD *)v13 - 3), *((_QWORD *)v13 - 2), *((_QWORD *)v13 - 1), v14);
        sub_1A550F160(v16, v15, v17, v18, v19, v14);
        sub_1A54E3458(v16, v15, SBYTE4(v15));
        sub_1A54E3458(v17, v18, SBYTE4(v18));
        sub_1A5503B8C(v19, v14);
        sub_1A5503B08(v16, v15, v17, v18, v19, v14);
      }
      else
      {
        v41 = v12;
        v23 = *(v13 - 12);
        v24 = *((_DWORD *)v40 + 43);
        v26 = *v40;
        v25 = v40[1];
        v27 = v40[2];
        v28 = *((_DWORD *)v40 + 6);
        v47 = 223;
        v56 = 0;
        v63 = 0;
        v65 = -1;
        v64 = 0;
        v48 = v23;
        v49 = v26;
        v50 = v25;
        v51 = v24;
        v52 = v27;
        v53 = v28;
        v55 = MEMORY[0x1E0DEE9E8];
        v54 = &type metadata for SearchMailbox;
        v44 = v23;
        v45 = v27;
        v46 = v28;
        v29 = v22;
        v43 = v22;
        sub_1A550F160(v16, v15, v17, v18, v19, v22);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A550F160(v16, v15, v17, v18, v19, v29);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A54E42F8(v16);
        sub_1A550F1E4();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A594C6B4();
        v57 = v16;
        v58 = v15;
        v59 = v17;
        v60 = v18 & 1;
        v61 = v38;
        v62 = v37;
        sub_1A550F228((uint64_t)&v47, (uint64_t)&v44);
        v30 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7973A0);
        v31 = sub_1A5510748(&qword_1EE797398, &qword_1EE7973A0);
        v42 = v19;
        v32 = swift_allocObject();
        sub_1A550F228((uint64_t)&v44, v32 + 16);
        v33 = MEMORY[0x1E0DEE9D8];
        *(_QWORD *)(v32 + 184) = MEMORY[0x1E0DEE9D8];
        *(_QWORD *)(v32 + 192) = v33;
        v34 = qword_1EE7F9680;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A550F2E4((uint64_t)&v44);
        *(_QWORD *)&v66 = v32;
        *((_QWORD *)&v67 + 1) = v30;
        *(_QWORD *)&v68 = v31;
        *((_QWORD *)&v68 + 1) = v34;
        sub_1A550F2E4((uint64_t)&v47);
        LOBYTE(v34) = a3(&v66);
        sub_1A54E472C(v16);
        swift_bridgeObjectRelease();
        sub_1A5503B08(v16, v15, v17, v18, v42, v43);
        if ((v34 & 1) != 0)
        {
          result = sub_1A54F81BC((uint64_t)v69);
          v35 = v67;
          *v36 = v66;
          v36[1] = v35;
          v36[2] = v68;
          return result;
        }
        sub_1A550E928((uint64_t)&v66);
        v12 = v41;
      }
      v13 += 14;
      if (!--v12)
      {
        result = sub_1A54F81BC((uint64_t)v69);
        a5 = v36;
        goto LABEL_12;
      }
    }
  }
  __break(1u);
  return result;
}

double sub_1A550AE28@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, _OWORD *a8@<X8>, uint64_t (*a9)(__int128 *), uint64_t a10, __int16 a11, int a12, __int16 a13, uint64_t a14, char a15, uint64_t a16)
{
  uint64_t v16;
  __int128 v25;
  double result;
  unsigned __int8 *v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  double v33[3];

  sub_1A54E3150(v16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5503BA0(a6, a7);
  sub_1A5506AF0(a1, a2, a3, a9, v16, a5, &v31, a6, a7 & 0xFFFFFFFFFFLL, a16 & 0x1010101FFFF01);
  if (*((_QWORD *)&v32 + 1))
  {
    v25 = v32;
    *a8 = v31;
    a8[1] = v25;
    result = v33[0];
    a8[2] = *(_OWORD *)v33;
  }
  else
  {
    sub_1A5510284((uint64_t)&v31, &qword_1EE7974B0);
    sub_1A54E3150(v16);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5503BA0(a6, a7);
    v27 = (unsigned __int8 *)swift_retain();
    LOBYTE(v30) = a15 & 1;
    LOWORD(v29) = a13 & 0x101;
    sub_1A55066B4(a1, a2, a3, a9, v16, a4, a5, &v31, a6, a7 & 0xFFFFFFFFFFLL, v27, a11 & 1, (unsigned __int16)(a11 & 0x101) >> 8, v29, a14, v30, a16 & 0x1FFFF01, (a16 & 0x1010101FFFF01uLL) >> 32, (a16 & 0x1010101FFFF01uLL) >> 48);
    if (*((_QWORD *)&v32 + 1))
    {
      v28 = v32;
      *a8 = v31;
      a8[1] = v28;
      result = v33[0];
      a8[2] = *(_OWORD *)v33;
    }
    else
    {
      sub_1A5510284((uint64_t)&v31, &qword_1EE7974B0);
      result = 0.0;
      a8[1] = 0u;
      a8[2] = 0u;
      *a8 = 0u;
    }
  }
  return result;
}

uint64_t sub_1A550B020@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, __int16 a7@<W6>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13)
{
  int v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  unint64_t v25;
  unint64_t v26;
  int v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  int v38;
  int v39;
  int v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  int v50;
  int v51;
  int v52;
  int v53;
  char v54;
  char v55;
  uint64_t v56;
  __int128 v60;
  __int16 v61;
  uint64_t v62;
  int v63;
  unint64_t v64;
  int v65;
  char v66;
  uint64_t v67;
  int v68;
  char v69;
  int v70;
  char v71;

  v55 = HIBYTE(a7);
  v16 = *(_DWORD *)(a1 + 172);
  v17 = *(_QWORD *)(a1 + 8);
  v18 = *(_QWORD *)(a1 + 16);
  v19 = *(_DWORD *)(a1 + 24);
  v56 = *(_QWORD *)(a1 + 40);
  v54 = *(_BYTE *)(a1 + 48);
  *(_QWORD *)&v60 = *(_QWORD *)a1;
  *((_QWORD *)&v60 + 1) = v17;
  v61 = v16;
  v62 = v18;
  v63 = v19;
  swift_beginAccess();
  v21 = *(_QWORD *)(a6 + 400);
  v20 = *(_QWORD *)(a6 + 408);
  v22 = *(_QWORD *)(a6 + 440);
  v49 = *(_QWORD *)(a6 + 448);
  v23 = *(unsigned int *)(a6 + 456) | ((unint64_t)*(unsigned __int8 *)(a6 + 460) << 32);
  v52 = *(unsigned __int8 *)(a6 + 146);
  v53 = *(unsigned __int8 *)(a6 + 145);
  v50 = *(unsigned __int8 *)(a6 + 148);
  v51 = *(unsigned __int8 *)(a6 + 147);
  v24 = *(unsigned __int8 *)(a6 + 460) >> 6;
  if (v24)
  {
    if (v24 == 1)
    {
      v32 = *(_QWORD *)(a6 + 416);
      v45 = *(_QWORD *)(a6 + 424);
      v46 = *(_QWORD *)(a6 + 432);
      v48 = *(_QWORD *)(a6 + 400);
      v47 = HIDWORD(v21) & 1;
      v42 = *(_QWORD *)(a6 + 408);
      v25 = sub_1A54E3414();
      v43 = MessageIdentifierSet.init()(&type metadata for UID, v25);
      v27 = v26;
      v28 = HIDWORD(v26);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v29 = a4;
      sub_1A5503BA0(a4, a5);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v30 = v42;
      sub_1A55103EC(v21, v42, v32, v45, v46, v22, v49, v23);
      v31 = a3;
      v21 = v43;
      LODWORD(v23) = v32;
      v33 = HIDWORD(v32);
      LOBYTE(v32) = v47;
      LODWORD(v22) = v48;
    }
    else
    {
      v34 = sub_1A54E3414();
      v21 = MessageIdentifierSet.init()(&type metadata for UID, v34);
      v27 = v35;
      v28 = HIDWORD(v35);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v29 = a4;
      sub_1A5503BA0(a4, a5);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v36 = sub_1A55C19FC(MEMORY[0x1E0DEE9D8]);
      v31 = a3;
      v30 = v36;
      LODWORD(v22) = 0;
      v33 = HIDWORD(v37);
      LOBYTE(v32) = 1;
      LODWORD(v23) = v37;
    }
  }
  else
  {
    v28 = HIDWORD(v20);
    v32 = HIDWORD(v22) & 1;
    v44 = a3;
    v33 = HIDWORD(v23);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5503BA0(a4, a5);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54E4334(v21, v20, SBYTE4(v20));
    v30 = v49;
    sub_1A54E4334(v49, v23, SBYTE4(v23));
    v27 = v20;
    v31 = v44;
    v29 = a4;
  }
  v64 = v21;
  v65 = v27;
  v66 = v28;
  v67 = v30;
  v68 = v23;
  v69 = v33;
  v70 = v22;
  v71 = v32;
  if (v50)
    v38 = 0x1000000;
  else
    v38 = 0;
  if (v51)
    v39 = 0x10000;
  else
    v39 = 0;
  if (v52)
    v40 = 256;
  else
    v40 = 0;
  return sub_1A55E1FE0(&v60, a2, v31, v29, a5 & 0xFFFFFFFFFFLL, (uint64_t)&v64, v56, v54 & 1, a8, v40 | v53 | v39 | v38, v55 & 1, a13 & 1);
}

double sub_1A550B314@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _OWORD *a9@<X8>, uint64_t (*a10)(__int128 *), uint64_t a11, uint64_t a12, __int16 a13, uint64_t a14, char a15)
{
  uint64_t v15;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  unsigned __int8 v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  __int128 v37;
  __int128 v38;
  char v39;
  double v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, _QWORD);
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  double result;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  double v65;
  uint64_t (*v66)(uint64_t, _QWORD);
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  __int128 *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  char v84;
  uint64_t v90;
  __int128 v94;
  __int128 v95;
  double v96[8];
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  _OWORD v104[2];
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  _OWORD v112[3];
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  _OWORD v117[2];
  _QWORD v118[2];
  __int16 v119;
  uint64_t v120;
  int v121;
  __int128 v122;
  __int16 v123;
  uint64_t v124;
  int v125;

  v15 = a3;
  v17 = 0;
  v18 = 0;
  v84 = BYTE1(a12) & 1;
  v19 = a2 + 56;
  v20 = a3 + 56;
  while (1)
  {
    v21 = v17;
    v22 = *((_BYTE *)&unk_1E4EF23A0 + v18 + 32);
    if (!sub_1A54E9FCC(v22, a2) || sub_1A54E9FCC(v22, v15))
      break;
    v23 = 0;
    while (*(_QWORD *)(a2 + 16))
    {
      v24 = byte_1E4EF23C8[v23 + 32];
      sub_1A594CE64();
      sub_1A594CE88();
      v25 = sub_1A594CED0();
      v15 = a3;
      v26 = -1 << *(_BYTE *)(a2 + 32);
      v27 = v25 & ~v26;
      if (((*(_QWORD *)(v19 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) == 0)
        break;
      v28 = *(_QWORD *)(a2 + 48);
      if (*(unsigned __int8 *)(v28 + v27) != v24)
      {
        v29 = ~v26;
        do
        {
          v27 = (v27 + 1) & v29;
          if (((*(_QWORD *)(v19 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) == 0)
            goto LABEL_3;
        }
        while (*(unsigned __int8 *)(v28 + v27) != v24);
      }
      if (*(_QWORD *)(a3 + 16))
      {
        sub_1A594CE64();
        sub_1A594CE88();
        v30 = sub_1A594CED0();
        v15 = a3;
        v31 = -1 << *(_BYTE *)(a3 + 32);
        v32 = v30 & ~v31;
        if (((*(_QWORD *)(v20 + ((v32 >> 3) & 0xFFFFFFFFFFFFF8)) >> v32) & 1) != 0)
        {
          v33 = *(_QWORD *)(a3 + 48);
          if (*(unsigned __int8 *)(v33 + v32) == v24)
            break;
          v34 = ~v31;
          while (1)
          {
            v32 = (v32 + 1) & v34;
            if (((*(_QWORD *)(v20 + ((v32 >> 3) & 0xFFFFFFFFFFFFF8)) >> v32) & 1) == 0)
              break;
            if (*(unsigned __int8 *)(v33 + v32) == v24)
              goto LABEL_3;
          }
        }
      }
      if (++v23 == 15)
      {
        if (sub_1A54E9FCC(v22, a4))
          goto LABEL_21;
        break;
      }
    }
LABEL_3:
    v17 = 1;
    v18 = 1u;
    if ((v21 & 1) != 0)
    {
      LOBYTE(v74) = a15 & 1;
      LOWORD(v73) = a13 & 0x101;
      sub_1A550BDF4(a2, v15, a4, v90, a1, a5, a6, a7, &v105, a8 & 0xFFFFFFFFFFLL, a12 & 0xFF01010101010101, v73, a14, v74, a10);
      goto LABEL_52;
    }
  }
LABEL_21:
  v35 = v90;
  if ((a12 & 0x10000) == 0)
  {
    v36 = *(_DWORD *)(v90 + 172);
    v37 = *(_OWORD *)(v90 + 16);
    v113 = *(_OWORD *)v90;
    v114 = v37;
    v38 = *(_OWORD *)(v90 + 48);
    v115 = *(_OWORD *)(v90 + 32);
    v116 = v38;
    v117[0] = *(_OWORD *)(v90 + 64);
    *(_OWORD *)((char *)v117 + 9) = *(_OWORD *)(v90 + 73);
    v122 = v113;
    v123 = v36;
    v124 = v114;
    v125 = DWORD2(v114);
    v82 = MailboxOfInterest.highestModificationSequenceValue.getter();
    v80 = v39 & 1;
    swift_beginAccess();
    v78 = *(_QWORD *)(a1 + 48);
    v76 = *(_BYTE *)(a1 + 56);
    sub_1A550FD4C(a1 + 184, (uint64_t)&v94);
    v41 = *((_QWORD *)&v95 + 1);
    v40 = v96[0];
    __swift_project_boxed_opaque_existential_1_0(&v94, *((uint64_t *)&v95 + 1));
    v42 = *(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)&v40 + 24);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v43 = v42(v41, *(_QWORD *)&v40);
    sub_1A550FD94((uint64_t)&v94);
    sub_1A5625248((uint64_t)&v122, v82, v80, v78, v76, v43, v84, (uint64_t)&v97);
    if ((_QWORD)v97)
    {
      LOBYTE(v112[1]) = v104[1];
      v111 = v103;
      v112[0] = v104[0];
      v107 = v99;
      v108 = v100;
      v109 = v101;
      v110 = v102;
      v105 = v97;
      v106 = v98;
      MEMORY[0x1E0C80A78](v44);
      sub_1A5507E08(a2, a3, a4, a10, (void (*)(_QWORD *__return_ptr, uint64_t))sub_1A550FE08, &v97);
      if (*((_QWORD *)&v98 + 1))
      {
        sub_1A550FE14((uint64_t)&v105);
        v45 = v98;
        *a9 = v97;
        a9[1] = v45;
        result = *(double *)&v99;
        a9[2] = v99;
        return result;
      }
      sub_1A5510284((uint64_t)&v97, &qword_1EE7974B0);
      LOBYTE(v74) = a15 & 1;
      LOWORD(v73) = a13 & 0x101;
      sub_1A550BDF4(a2, a3, a4, v90, a1, a5, a6, a7, &v94, a8 & 0xFFFFFFFFFFLL, a12 & 0xFF01010101000101, v73, a14, v74, a10);
      sub_1A550FE14((uint64_t)&v105);
      if (*((_QWORD *)&v95 + 1))
      {
        v59 = v95;
        *a9 = v94;
        a9[1] = v59;
        result = v96[0];
        a9[2] = *(_OWORD *)v96;
        return result;
      }
      v71 = &v94;
      goto LABEL_55;
    }
    sub_1A5510284((uint64_t)&v97, &qword_1EE7A86A0);
    v15 = a3;
    v35 = v90;
  }
  if (sub_1A54E9FCC(4u, a2) && !sub_1A54E9FCC(4u, v15))
  {
    v47 = 0;
    while (*(_QWORD *)(a2 + 16))
    {
      v48 = *((unsigned __int8 *)&unk_1E4E71090 + v47 + 32);
      sub_1A594CE64();
      sub_1A594CE88();
      v49 = sub_1A594CED0();
      v15 = a3;
      v50 = -1 << *(_BYTE *)(a2 + 32);
      v51 = v49 & ~v50;
      if (((*(_QWORD *)(v19 + ((v51 >> 3) & 0xFFFFFFFFFFFFF8)) >> v51) & 1) == 0)
        break;
      v52 = *(_QWORD *)(a2 + 48);
      if (*(unsigned __int8 *)(v52 + v51) != v48)
      {
        v53 = ~v50;
        do
        {
          v51 = (v51 + 1) & v53;
          if (((*(_QWORD *)(v19 + ((v51 >> 3) & 0xFFFFFFFFFFFFF8)) >> v51) & 1) == 0)
            goto LABEL_47;
        }
        while (*(unsigned __int8 *)(v52 + v51) != v48);
      }
      if (*(_QWORD *)(a3 + 16))
      {
        sub_1A594CE64();
        sub_1A594CE88();
        v54 = sub_1A594CED0();
        v15 = a3;
        v55 = -1 << *(_BYTE *)(a3 + 32);
        v56 = v54 & ~v55;
        if (((*(_QWORD *)(v20 + ((v56 >> 3) & 0xFFFFFFFFFFFFF8)) >> v56) & 1) != 0)
        {
          v57 = *(_QWORD *)(a3 + 48);
          if (*(unsigned __int8 *)(v57 + v56) == v48)
            break;
          v58 = ~v55;
          while (1)
          {
            v56 = (v56 + 1) & v58;
            if (((*(_QWORD *)(v20 + ((v56 >> 3) & 0xFFFFFFFFFFFFF8)) >> v56) & 1) == 0)
              break;
            if (*(unsigned __int8 *)(v57 + v56) == v48)
              goto LABEL_47;
          }
        }
      }
      if (++v47 == 15)
      {
        if (sub_1A54E9FCC(4u, a4))
          goto LABEL_51;
        break;
      }
    }
LABEL_47:
    v60 = *(_DWORD *)(v35 + 172);
    v61 = *(_QWORD *)(v35 + 8);
    v62 = *(_QWORD *)(v35 + 16);
    v63 = *(_DWORD *)(v35 + 24);
    v83 = *(_QWORD *)(v35 + 40);
    v79 = *(_BYTE *)(v35 + 48);
    v118[0] = *(_QWORD *)v35;
    v118[1] = v61;
    v119 = v60;
    v120 = v62;
    v121 = v63;
    swift_beginAccess();
    v81 = *(_QWORD *)(a1 + 24);
    v77 = *(_QWORD *)(a1 + 224);
    v75 = *(_BYTE *)(a1 + 232);
    sub_1A550FD4C(a1 + 184, (uint64_t)&v94);
    v64 = *((_QWORD *)&v95 + 1);
    v65 = v96[0];
    __swift_project_boxed_opaque_existential_1_0(&v94, *((uint64_t *)&v95 + 1));
    v66 = *(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)&v65 + 24);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A550FD88(v77, v75);
    v67 = v66(v64, *(_QWORD *)&v65);
    sub_1A550FD94((uint64_t)&v94);
    LOBYTE(v64) = *(_BYTE *)(a1 + 56);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5503BA0(a7, a8);
    sub_1A55B9A58((uint64_t)v118, v81, v77, v75, v67, v84, v64, &v97, a5, a6, a7, a8 & 0xFFFFFFFFFFLL, v83, v79 & 1);
    if ((_QWORD)v97)
    {
      v111 = v103;
      v112[0] = v104[0];
      *(_OWORD *)((char *)v112 + 13) = *(_OWORD *)((char *)v104 + 13);
      v107 = v99;
      v108 = v100;
      v109 = v101;
      v105 = v97;
      v106 = v98;
      v110 = v102;
      MEMORY[0x1E0C80A78](v68);
      sub_1A5507B74(a2, a3, a4, a10, (void (*)(_QWORD *__return_ptr, uint64_t))sub_1A550FDC8, &v97);
      sub_1A550FDD4((uint64_t)&v105);
      if (*((_QWORD *)&v98 + 1))
      {
        v69 = v98;
        *a9 = v97;
        a9[1] = v69;
        result = *(double *)&v99;
        a9[2] = v99;
        return result;
      }
      v71 = &v97;
      goto LABEL_55;
    }
    sub_1A5510284((uint64_t)&v97, &qword_1EE7A8698);
    v15 = a3;
    v35 = v90;
  }
LABEL_51:
  sub_1A54E3150(v35);
  swift_retain();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5503BA0(a7, a8);
  LOBYTE(v72) = a15 & 1;
  sub_1A55077C0(a2, v15, a4, a10, v35, a12 & 0x101, &v105, a14, v72, a1, a5, a6, a7, a8 & 0xFFFFFFFFFFLL);
LABEL_52:
  if (*((_QWORD *)&v106 + 1))
  {
    v70 = v106;
    *a9 = v105;
    a9[1] = v70;
    result = *(double *)&v107;
    a9[2] = v107;
    return result;
  }
  v71 = &v105;
LABEL_55:
  sub_1A5510284((uint64_t)v71, &qword_1EE7974B0);
  result = 0.0;
  a9[1] = 0u;
  a9[2] = 0u;
  *a9 = 0u;
  return result;
}

uint64_t sub_1A550BCAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X5>, uint64_t a4@<X8>)
{
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  __int16 v11;
  _QWORD v13[2];
  __int16 v14;
  uint64_t v15;
  int v16;

  v5 = *(_DWORD *)(a1 + 172);
  v6 = *(_QWORD *)(a2 + 16);
  if (v6)
    v7 = *(_DWORD *)(a2 + 8 * v6 + 24);
  else
    v7 = 1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_DWORD *)(a1 + 24);
  v13[0] = *(_QWORD *)a1;
  v13[1] = v8;
  v14 = v5;
  v15 = v9;
  v16 = v10;
  v11 = WORD2(a3) & 0x101;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return sub_1A55AA098((uint64_t)v13, v7, 1000000, 0, v11, a4);
}

uint64_t sub_1A550BD4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X5>, uint64_t a4@<X8>)
{
  int v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  _QWORD v16[2];
  __int16 v17;
  uint64_t v18;
  int v19;

  v5 = *(_DWORD *)(a1 + 172);
  v6 = *(_QWORD *)(a2 + 16);
  if (v6)
    v7 = *(_DWORD *)(a2 + 8 * v6 + 24);
  else
    v7 = 1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_DWORD *)(a1 + 24);
  v11 = *(_QWORD *)(a1 + 40);
  v12 = *(_BYTE *)(a1 + 48);
  v16[0] = *(_QWORD *)a1;
  v16[1] = v8;
  v17 = v5;
  v18 = v9;
  v13 = v12 & 1;
  v14 = (a3 >> 40) & 1;
  v19 = v10;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return sub_1A5623F10((uint64_t)v16, v7, v14, v11, v13, a4);
}

double sub_1A550BDF4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _OWORD *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t (*a15)(__int128 *))
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  __int128 v42;
  double result;
  __int128 v44;
  char v45;
  char v46;
  uint64_t v47;
  unint64_t v48;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  _QWORD v69[2];
  __int16 v70;
  uint64_t v71;
  int v72;

  v18 = a11;
  if (sub_1A54E9FCC(2u, a1) && !sub_1A54E9FCC(2u, a2))
  {
    v19 = 0;
    v20 = a1 + 56;
    v21 = a2 + 56;
    while (*(_QWORD *)(a1 + 16))
    {
      v22 = *((unsigned __int8 *)&unk_1E4E71090 + v19 + 32);
      v23 = v21;
      sub_1A594CE64();
      sub_1A594CE88();
      v24 = sub_1A594CED0();
      v25 = -1 << *(_BYTE *)(a1 + 32);
      v26 = v24 & ~v25;
      if (((*(_QWORD *)(v20 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) == 0)
        break;
      v21 = v23;
      v27 = *(_QWORD *)(a1 + 48);
      if (*(unsigned __int8 *)(v27 + v26) != v22)
      {
        v28 = ~v25;
        do
        {
          v26 = (v26 + 1) & v28;
          if (((*(_QWORD *)(v20 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) == 0)
            goto LABEL_19;
        }
        while (*(unsigned __int8 *)(v27 + v26) != v22);
      }
      if (*(_QWORD *)(a2 + 16))
      {
        sub_1A594CE64();
        sub_1A594CE88();
        v29 = sub_1A594CED0();
        v21 = v23;
        v18 = a11;
        v30 = -1 << *(_BYTE *)(a2 + 32);
        v31 = v29 & ~v30;
        if (((*(_QWORD *)(v23 + ((v31 >> 3) & 0xFFFFFFFFFFFFF8)) >> v31) & 1) != 0)
        {
          v32 = *(_QWORD *)(a2 + 48);
          if (*(unsigned __int8 *)(v32 + v31) == v22)
            break;
          v33 = ~v30;
          while (1)
          {
            v31 = (v31 + 1) & v33;
            if (((*(_QWORD *)(v23 + ((v31 >> 3) & 0xFFFFFFFFFFFFF8)) >> v31) & 1) == 0)
              break;
            if (*(unsigned __int8 *)(v32 + v31) == v22)
              goto LABEL_19;
          }
        }
      }
      if (++v19 == 15)
      {
        if (sub_1A54E9FCC(2u, a3))
          goto LABEL_23;
        break;
      }
    }
LABEL_19:
    v34 = *(_DWORD *)(a4 + 172);
    v35 = *(_QWORD *)(a4 + 8);
    v36 = *(_QWORD *)(a4 + 16);
    v37 = *(_DWORD *)(a4 + 24);
    v48 = *(_QWORD *)(a4 + 40);
    v38 = *(_BYTE *)(a4 + 48);
    v69[0] = *(_QWORD *)a4;
    v69[1] = v35;
    v70 = v34;
    v71 = v36;
    v72 = v37;
    swift_beginAccess();
    v47 = *(_QWORD *)(a5 + 24);
    v39 = *(_QWORD *)(a5 + 224);
    v46 = v38 & 1;
    v40 = *(_BYTE *)(a5 + 232);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A550FD88(v39, v40);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5503BA0(a8, a10);
    sub_1A55BC0E4((uint64_t)v69, v47, v39, v40, a6, a7, a8, a10 & 0xFFFFFFFFFFLL, &v55, v48, v46, v45, BYTE4(v18) & 1, (unsigned __int16)(WORD2(v18) & 0x101) >> 8);
    if ((_QWORD)v55)
    {
      v66 = v59;
      v67 = v60;
      v68 = v61;
      v62 = v55;
      v63 = v56;
      v64 = v57;
      v65 = v58;
      MEMORY[0x1E0C80A78](v41);
      sub_1A550752C(a1, a2, a3, a15, (void (*)(_QWORD *__return_ptr, uint64_t))sub_1A550FE48, &v55);
      sub_1A550FE54((uint64_t)&v62);
      if (*((_QWORD *)&v56 + 1))
      {
        v42 = v56;
        *a9 = v55;
        a9[1] = v42;
        result = *(double *)&v57;
        a9[2] = v57;
        return result;
      }
      sub_1A5510284((uint64_t)&v55, &qword_1EE7974B0);
      goto LABEL_26;
    }
    sub_1A5510284((uint64_t)&v55, &qword_1EE795D28);
  }
LABEL_23:
  sub_1A54E3150(a4);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5503BA0(a8, a10);
  sub_1A5507114(a1, a2, a3, a15, a4, a6, a7, &v62, a8, a10 & 0xFFFFFFFFFFLL, v18 & 0x1010101, (v18 & 0xFF01010101010101) >> 32, (unsigned __int16)((v18 & 0xFF01010101010101) >> 32) >> 8);
  if (*((_QWORD *)&v63 + 1))
  {
    v44 = v63;
    *a9 = v62;
    a9[1] = v44;
    result = *(double *)&v64;
    a9[2] = v64;
    return result;
  }
  sub_1A5510284((uint64_t)&v62, &qword_1EE7974B0);
LABEL_26:
  result = 0.0;
  a9[1] = 0u;
  a9[2] = 0u;
  *a9 = 0u;
  return result;
}

uint64_t sub_1A550C284(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v20 = MEMORY[0x1E0DEE9D8];
  sub_1A54F4C80(0, 0, 0);
  v2 = *(_QWORD *)(a1 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v2)
  {
    v17 = sub_1A54E3414();
    v3 = 0;
    v4 = (char *)(a1 + 44);
    do
    {
      v5 = *(_QWORD *)(v4 - 12);
      v6 = *((unsigned int *)v4 - 1);
      v7 = *v4;
      v19 = MessageIdentifierSet.init()(&type metadata for UID, v17);
      v9 = v8;
      v18 = MessageIdentifierSet.init()(&type metadata for UID, v17);
      v11 = v10;
      sub_1A54E4334(v5, v6, v7);
      v13 = *(_QWORD *)(v20 + 16);
      v12 = *(_QWORD *)(v20 + 24);
      v14 = v13 + 1;
      if (v13 >= v12 >> 1)
      {
        sub_1A54F4C80(v12 > 1, v13 + 1, 1);
        v14 = v13 + 1;
      }
      v4 += 16;
      *(_QWORD *)(v20 + 16) = v14;
      v15 = v20 + 56 * v13;
      *(_QWORD *)(v15 + 32) = v3;
      *(_QWORD *)(v15 + 40) = v5;
      *(_DWORD *)(v15 + 48) = v6;
      *(_BYTE *)(v15 + 52) = v7;
      *(_QWORD *)(v15 + 56) = v19;
      *(_DWORD *)(v15 + 64) = v9;
      *(_BYTE *)(v15 + 68) = BYTE4(v9);
      *(_QWORD *)(v15 + 72) = v18;
      *(_DWORD *)(v15 + 80) = v11;
      *(_BYTE *)(v15 + 84) = BYTE4(v11);
      *(_BYTE *)(v15 + 85) = 0;
      ++v3;
    }
    while (v2 != v3);
  }
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_1A550C414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  char v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;

  v9 = a1;
  v10 = HIDWORD(a5);
  v48 = a1;
  sub_1A54E3414();
  v11 = a5 & 0xFFFFFFFFFFLL;
  MessageIdentifierSet.startIndex.getter();
  v13 = v12;
  v15 = v14;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v45 = v10;
  v46 = a5;
  sub_1A54E4334(a4, a5, v10);
  MessageIdentifierSet.endIndex.getter();
  if (v13 != v17 || v15 != v16)
  {
    do
    {
      MessageIdentifierSet.subscript.getter();
      v13 = MessageIdentifierSet.index(_:offsetBy:)(v13, v15, 1, a4, v11);
      v15 = v19;
      v20 = sub_1A54FDC2C(v47);
      if ((v21 & 1) != 0)
      {
        v22 = v20;
        v47 = (_QWORD *)v9;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1A554FA80();
          v9 = (uint64_t)v47;
        }
        sub_1A554E368(v22, v9);
        swift_bridgeObjectRelease();
      }
      MessageIdentifierSet.endIndex.getter();
    }
    while (v13 != v24 || v15 != v23);
  }
  v48 = v9;
  sub_1A54E3458(a4, v46, v10);
  sub_1A5503C8C(a6, &v48);
  v25 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v26 = sub_1A550C7F0(v25);
  swift_bridgeObjectRelease();
  v47 = v26;
  swift_retain();
  sub_1A550C77C((uint64_t *)&v47);
  swift_release();
  v42 = (uint64_t)v47;
  MessageIdentifierSet.union(_:)(a4, v11, a2, a3 & 0xFFFFFFFFFFLL);
  v28 = v27;
  v30 = v29;
  swift_bridgeObjectRelease();
  sub_1A54E3458(a2, a3, SBYTE4(a3));
  MessageIdentifierSet.startIndex.getter();
  v32 = v31;
  v34 = v33;
  MessageIdentifierSet.endIndex.getter();
  if (v32 != v36 || v34 != v35)
    MessageIdentifierSet.subscript.getter();
  sub_1A54E3458(v28, v30, SBYTE4(v30));
  v38 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A550F378(v38, a4, v11);
  v40 = v39;
  sub_1A54E3458(a4, v46, v45);
  v47 = (_QWORD *)v40;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A550C77C((uint64_t *)&v47);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v42;
}

uint64_t sub_1A550C77C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A555C13C(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1A550DCA8(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1A550C7E4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1A550C9F8(a1, a2, a3, a4, &qword_1EE79B130);
}

_QWORD *sub_1A550C7F0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  _QWORD *v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B228);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size_0(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 24);
  v5 = sub_1A550CEBC(&v7, (uint64_t)(v3 + 4), v1, a1);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A550F72C();
  if (v5 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

_QWORD *sub_1A550C8E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  size_t v8;
  __n128 v9;
  _QWORD *v10;
  uint64_t v12;

  v3 = *(_QWORD *)(a3 + 16);
  if (!v3)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796238);
  v7 = (_QWORD *)swift_allocObject();
  v8 = _swift_stdlib_malloc_size_0(v7);
  v7[2] = v3;
  v7[3] = 2 * ((uint64_t)(v8 - 32) / 176);
  v10 = sub_1A550D074(&v12, (uint64_t)(v7 + 4), v3, a1, a2, a3, v9);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  swift_release();
  swift_release();
  if (v10 != (_QWORD *)v3)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v7;
}

uint64_t sub_1A550C9EC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1A550C9F8(a1, a2, a3, a4, &qword_1EE79AE90);
}

uint64_t sub_1A550C9F8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t *a5)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  v5 = a4 >> 1;
  v6 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v6)
      return MEMORY[0x1E0DEE9D8];
    v9 = 4 * v6;
    if (v6 <= 0)
    {
      v10 = (char *)MEMORY[0x1E0DEE9D8];
      if (v5 != a3)
      {
LABEL_7:
        if (v6 < 0)
          goto LABEL_19;
        v13 = v10 + 32;
        v14 = (char *)(a2 + 4 * a3);
        if (v14 < &v10[v9 + 32] && v13 < &v14[v9])
          goto LABEL_19;
        memcpy(v13, v14, 4 * v6);
        return (uint64_t)v10;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName_0(a5);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size_0(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 29;
      *((_QWORD *)v10 + 2) = v6;
      *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
      if (v5 != a3)
        goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

_QWORD *sub_1A550CB5C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79ADC8);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size_0(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = sub_1A550D6AC((uint64_t)&v8, (uint64_t)(v3 + 4), v1, a1);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A550F72C();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

_QWORD *sub_1A550CC40(uint64_t a1)
{
  return sub_1A550CC68(a1, &qword_1EE79AF48, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_1A550D8B0);
}

_QWORD *sub_1A550CC54(uint64_t a1)
{
  return sub_1A550CC68(a1, &qword_1EE796268, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_1A550DAAC);
}

_QWORD *sub_1A550CC68(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t *, _QWORD *, uint64_t, uint64_t))
{
  uint64_t v3;
  _QWORD *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName_0(a2);
  v6 = (_QWORD *)swift_allocObject();
  v7 = _swift_stdlib_malloc_size_0(v6);
  v8 = v7 - 32;
  if (v7 < 32)
    v8 = v7 - 17;
  v6[2] = v3;
  v6[3] = 2 * (v8 >> 4);
  v9 = a3(&v11, v6 + 4, v3, a1);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A550F72C();
  if (v9 != v3)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v6;
}

uint64_t sub_1A550CD4C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x1E0DEE9D8];
    v8 = 4 * v5;
    if (v5 <= 0)
    {
      v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0)
          goto LABEL_19;
        v12 = a2 + 32 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8)
          goto LABEL_19;
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A85A0);
      v9 = (_QWORD *)swift_allocObject();
      v10 = _swift_stdlib_malloc_size_0(v9);
      v11 = v10 - 32;
      if (v10 < 32)
        v11 = v10 - 1;
      v9[2] = v5;
      v9[3] = 2 * (v11 >> 5);
      if (v4 != a3)
        goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

_QWORD *sub_1A550CEBC(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  char v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;

  v4 = a4 + 64;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    v13 = *(_QWORD *)(a4 + 56) + 24 * v12;
    v14 = *(_DWORD *)v13;
    v15 = *(_QWORD *)(v13 + 8);
    v16 = *(_BYTE *)(v13 + 16);
    LOBYTE(v13) = *(_BYTE *)(v13 + 17);
    *(_DWORD *)a2 = v14;
    *(_QWORD *)(a2 + 8) = v15;
    *(_BYTE *)(a2 + 16) = v16;
    *(_BYTE *)(a2 + 17) = v13;
    a2 += 24;
    if (v9 == a3)
      goto LABEL_35;
  }
  v17 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v17 >= v10)
    goto LABEL_30;
  v18 = *(_QWORD *)(v4 + 8 * v17);
  if (v18)
    goto LABEL_19;
  v8 += 2;
  if (v17 + 1 >= v10)
  {
    v7 = 0;
    v8 = v17;
    goto LABEL_34;
  }
  v18 = *(_QWORD *)(v4 + 8 * v8);
  if (v18)
  {
LABEL_15:
    v17 = v8;
LABEL_19:
    v20 = __clz(__rbit64(v18));
    v7 = (v18 - 1) & v18;
    v12 = v20 + (v17 << 6);
    v8 = v17;
    goto LABEL_8;
  }
  v19 = v17 + 2;
  if (v17 + 2 >= v10)
    goto LABEL_30;
  v18 = *(_QWORD *)(v4 + 8 * v19);
  if (v18)
  {
LABEL_18:
    v17 = v19;
    goto LABEL_19;
  }
  v8 = v17 + 3;
  if (v17 + 3 >= v10)
  {
    v7 = 0;
    v8 = v17 + 2;
    goto LABEL_34;
  }
  v18 = *(_QWORD *)(v4 + 8 * v8);
  if (v18)
    goto LABEL_15;
  v19 = v17 + 4;
  if (v17 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v18 = *(_QWORD *)(v4 + 8 * v19);
  if (v18)
    goto LABEL_18;
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v18 = *(_QWORD *)(v4 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

_QWORD *sub_1A550D074(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, __n128 a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  char v12;
  uint64_t v13;
  char v14;
  int v15;
  uint64_t v16;
  char v17;
  int v18;
  uint64_t v19;
  int v20;
  int v21;
  char v22;
  int v23;
  uint64_t v24;
  int v25;
  __int16 v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  int v40;
  uint64_t v41;
  int v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;
  unsigned __int32 v48;
  char v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char v61;
  char v62;
  char v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  int v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  __n128 v90;
  _QWORD *v91;
  char v92;
  char v93;
  __int16 v94;
  char v95;
  uint64_t v96;
  __int16 v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  __int16 v102;
  char v103;
  char v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  unsigned __int32 v108;
  int v109;
  char v110;
  uint64_t v111;
  char v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  int v116;
  int v117;
  char v118;
  uint64_t v119;
  int v120;
  char v121;
  uint64_t v122;
  uint64_t v123;
  char v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char v129;
  int v130;
  __int16 v131;
  char v132;
  _DWORD v133[2];
  __int16 v134;
  char v135;
  _DWORD v136[2];
  char v137;
  _DWORD v138[2];
  char v139;
  _DWORD v140[2];
  char v141;
  __int16 v142;
  char v143;
  char v144;

  v7 = a6;
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
    goto LABEL_16;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_16;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(a6 + 16);
    if (v8)
    {
      v67 = a4;
      v68 = result;
      v69 = a5;
      result = *(_QWORD **)(a6 + 32);
      v9 = *(_QWORD *)(a6 + 40);
      v10 = *(_QWORD *)(a6 + 48);
      v11 = *(_DWORD *)(a6 + 64);
      v144 = *(_BYTE *)(a6 + 68);
      v12 = v144;
      v142 = *(_WORD *)(a6 + 69);
      v143 = *(_BYTE *)(a6 + 71);
      v13 = *(_QWORD *)(a6 + 72);
      v141 = *(_BYTE *)(v7 + 80);
      v14 = v141;
      v15 = *(_DWORD *)(v7 + 81);
      *(_DWORD *)((char *)v140 + 3) = *(_DWORD *)(v7 + 84);
      v140[0] = v15;
      v16 = *(_QWORD *)(v7 + 88);
      v139 = *(_BYTE *)(v7 + 96);
      v17 = v139;
      v18 = *(_DWORD *)(v7 + 97);
      *(_DWORD *)((char *)v138 + 3) = *(_DWORD *)(v7 + 100);
      v138[0] = v18;
      v19 = *(_QWORD *)(v7 + 104);
      v21 = *(_DWORD *)(v7 + 112);
      v20 = *(_DWORD *)(v7 + 116);
      v137 = *(_BYTE *)(v7 + 120);
      v22 = v137;
      v23 = *(_DWORD *)(v7 + 121);
      *(_DWORD *)((char *)v136 + 3) = *(_DWORD *)(v7 + 124);
      v136[0] = v23;
      v24 = *(_QWORD *)(v7 + 128);
      v25 = *(_DWORD *)(v7 + 136);
      v92 = *(_BYTE *)(v7 + 140);
      v26 = *(_WORD *)(v7 + 141);
      v135 = *(_BYTE *)(v7 + 143);
      v134 = v26;
      v27 = *(_QWORD *)(v7 + 144);
      v28 = *(_QWORD *)(v7 + 152);
      v29 = *(_BYTE *)(v7 + 160);
      v30 = *(_DWORD *)(v7 + 161);
      *(_DWORD *)((char *)v133 + 3) = *(_DWORD *)(v7 + 164);
      v133[0] = v30;
      v31 = *(_QWORD *)(v7 + 168);
      v32 = *(_QWORD *)(v7 + 176);
      v33 = *(_QWORD *)(v7 + 184);
      v34 = *(_QWORD *)(v7 + 192);
      v35 = *(_BYTE *)(v7 + 200);
      LOWORD(v30) = *(_WORD *)(v7 + 201);
      v132 = *(_BYTE *)(v7 + 203);
      v131 = v30;
      v36 = *(_DWORD *)(v7 + 204);
      v37 = *(_QWORD *)(v7 + 56);
      *(_QWORD *)a2 = result;
      *(_QWORD *)(a2 + 8) = v9;
      *(_QWORD *)(a2 + 16) = v10;
      *(_QWORD *)(a2 + 24) = v37;
      *(_DWORD *)(a2 + 32) = v11;
      *(_BYTE *)(a2 + 36) = v12;
      *(_WORD *)(a2 + 37) = v142;
      *(_BYTE *)(a2 + 39) = v143;
      *(_QWORD *)(a2 + 40) = v13;
      *(_BYTE *)(a2 + 48) = v14;
      *(_DWORD *)(a2 + 49) = v140[0];
      *(_DWORD *)(a2 + 52) = *(_DWORD *)((char *)v140 + 3);
      *(_QWORD *)(a2 + 56) = v16;
      *(_BYTE *)(a2 + 64) = v17;
      v38 = v34;
      v39 = v138[0];
      *(_DWORD *)(a2 + 68) = *(_DWORD *)((char *)v138 + 3);
      *(_DWORD *)(a2 + 65) = v39;
      *(_QWORD *)(a2 + 72) = v19;
      *(_DWORD *)(a2 + 80) = v21;
      *(_DWORD *)(a2 + 84) = v20;
      *(_BYTE *)(a2 + 88) = v22;
      v40 = v136[0];
      *(_DWORD *)(a2 + 92) = *(_DWORD *)((char *)v136 + 3);
      *(_DWORD *)(a2 + 89) = v40;
      *(_QWORD *)(a2 + 96) = v24;
      *(_DWORD *)(a2 + 104) = v25;
      *(_BYTE *)(a2 + 108) = v92;
      LOWORD(v40) = v134;
      *(_BYTE *)(a2 + 111) = v135;
      v41 = v33;
      *(_WORD *)(a2 + 109) = v40;
      *(_QWORD *)(a2 + 112) = v27;
      *(_QWORD *)(a2 + 120) = v28;
      *(_BYTE *)(a2 + 128) = v29;
      v42 = v133[0];
      *(_DWORD *)(a2 + 132) = *(_DWORD *)((char *)v133 + 3);
      *(_DWORD *)(a2 + 129) = v42;
      *(_QWORD *)(a2 + 136) = v31;
      *(_QWORD *)(a2 + 144) = v32;
      *(_QWORD *)(a2 + 152) = v33;
      *(_QWORD *)(a2 + 160) = v34;
      *(_BYTE *)(a2 + 168) = v35;
      v43 = v131;
      *(_BYTE *)(a2 + 171) = v132;
      *(_WORD *)(a2 + 169) = v43;
      *(_DWORD *)(a2 + 172) = v36;
      v44 = v92 & 1;
      v45 = v29 & 1;
      v46 = v144;
      v93 = v141;
      v47 = v139;
      v48 = v37;
      v49 = v137;
      v72 = a3;
      if (a3 != 1)
      {
        v50 = 0;
        v51 = 1;
        v70 = v7;
        v71 = v8;
        while (1)
        {
          v105 = result;
          v106 = v9;
          v107 = v10;
          v108 = v48;
          v109 = v11;
          v110 = v46 & 1;
          v111 = v13;
          v112 = v93 & 1;
          v113 = v16;
          v114 = v47 & 1;
          v115 = v19;
          v116 = v21;
          v117 = v20;
          v118 = v49 & 1;
          v119 = v24;
          v120 = v25;
          v121 = v44 & 1;
          v122 = v27;
          v123 = v28;
          v124 = v45 & 1;
          v125 = v31;
          v126 = v32;
          v127 = v41;
          v128 = v38;
          v129 = v35;
          v130 = v36;
          if (v8 == v51)
          {
            sub_1A54E3150((uint64_t)&v105);
            v8 = v71;
            a3 = v71;
            goto LABEL_15;
          }
          if (v51 >= *(_QWORD *)(v7 + 16))
            break;
          v52 = a2 + v50;
          v91 = *(_QWORD **)(v7 + v50 + 208);
          v88 = *(_QWORD *)(v7 + v50 + 224);
          v89 = *(_QWORD *)(v7 + v50 + 216);
          v86 = *(_DWORD *)(v7 + v50 + 240);
          v104 = *(_BYTE *)(v7 + v50 + 244);
          v102 = *(_WORD *)(v7 + v50 + 245);
          v103 = *(_BYTE *)(v7 + v50 + 247);
          v53 = *(_BYTE *)(v7 + v50 + 256);
          *(_DWORD *)((char *)&v101 + 3) = *(_DWORD *)(v7 + v50 + 260);
          LODWORD(v101) = *(_DWORD *)(v7 + v50 + 257);
          v84 = *(_QWORD *)(v7 + v50 + 264);
          v85 = *(_QWORD *)(v7 + v50 + 248);
          v54 = *(_BYTE *)(v7 + v50 + 272);
          LODWORD(v100) = *(_DWORD *)(v7 + v50 + 273);
          *(_DWORD *)((char *)&v100 + 3) = *(_DWORD *)(v7 + v50 + 276);
          v82 = *(_DWORD *)(v7 + v50 + 292);
          v83 = *(_DWORD *)(v7 + v50 + 288);
          v55 = *(_BYTE *)(v7 + v50 + 296);
          LODWORD(v99) = *(_DWORD *)(v7 + v50 + 297);
          *(_DWORD *)((char *)&v99 + 3) = *(_DWORD *)(v7 + v50 + 300);
          v79 = *(_QWORD *)(v7 + v50 + 304);
          v80 = *(_QWORD *)(v7 + v50 + 280);
          v78 = *(_DWORD *)(v7 + v50 + 312);
          v56 = *(_BYTE *)(v7 + v50 + 316);
          v98 = *(_BYTE *)(v7 + v50 + 319);
          v97 = *(_WORD *)(v7 + v50 + 317);
          v76 = *(_QWORD *)(v7 + v50 + 328);
          v77 = *(_QWORD *)(v7 + v50 + 320);
          v57 = *(_BYTE *)(v7 + v50 + 336);
          *(_DWORD *)((char *)&v96 + 3) = *(_DWORD *)(v7 + v50 + 340);
          LODWORD(v96) = *(_DWORD *)(v7 + v50 + 337);
          v74 = *(_QWORD *)(v7 + v50 + 352);
          v75 = *(_QWORD *)(v7 + v50 + 344);
          v58 = *(_QWORD *)(v7 + v50 + 360);
          v59 = *(_QWORD *)(v7 + v50 + 368);
          v95 = *(_BYTE *)(v7 + v50 + 379);
          v94 = *(_WORD *)(v7 + v50 + 377);
          v60 = *(_BYTE *)(v7 + v50 + 376);
          a7.n128_u64[0] = *(_QWORD *)(v7 + v50 + 232);
          v90 = a7;
          v81 = *(_DWORD *)(v7 + v50 + 380);
          *(_QWORD *)(v52 + 176) = v91;
          *(_BYTE *)(v52 + 212) = v104;
          *(_WORD *)(v52 + 213) = v102;
          *(_BYTE *)(v52 + 215) = v103;
          *(_QWORD *)(v52 + 184) = v89;
          *(_QWORD *)(v52 + 192) = v88;
          *(_QWORD *)(v52 + 200) = a7.n128_u64[0];
          *(_DWORD *)(v52 + 208) = v86;
          *(_QWORD *)(v52 + 216) = v85;
          *(_BYTE *)(v52 + 224) = v53;
          *(_DWORD *)(v52 + 225) = v101;
          *(_DWORD *)(v52 + 228) = *(_DWORD *)((char *)&v101 + 3);
          *(_QWORD *)(v52 + 232) = v84;
          *(_BYTE *)(v52 + 240) = v54;
          *(_DWORD *)(v52 + 244) = *(_DWORD *)((char *)&v100 + 3);
          *(_DWORD *)(v52 + 241) = v100;
          *(_QWORD *)(v52 + 248) = v80;
          *(_DWORD *)(v52 + 256) = v83;
          *(_DWORD *)(v52 + 260) = v82;
          *(_BYTE *)(v52 + 264) = v55;
          *(_DWORD *)(v52 + 268) = *(_DWORD *)((char *)&v99 + 3);
          *(_DWORD *)(v52 + 265) = v99;
          *(_QWORD *)(v52 + 272) = v79;
          *(_DWORD *)(v52 + 280) = v78;
          *(_BYTE *)(v52 + 284) = v56;
          *(_BYTE *)(v52 + 287) = v98;
          *(_WORD *)(v52 + 285) = v97;
          *(_QWORD *)(v52 + 288) = v77;
          *(_QWORD *)(v52 + 296) = v76;
          *(_BYTE *)(v52 + 304) = v57;
          *(_DWORD *)(v52 + 308) = *(_DWORD *)((char *)&v96 + 3);
          *(_DWORD *)(v52 + 305) = v96;
          *(_QWORD *)(v52 + 312) = v75;
          *(_QWORD *)(v52 + 320) = v74;
          *(_QWORD *)(v52 + 328) = v58;
          *(_QWORD *)(v52 + 336) = v59;
          *(_BYTE *)(v52 + 344) = v60;
          v61 = v60;
          *(_BYTE *)(v52 + 347) = v95;
          *(_WORD *)(v52 + 345) = v94;
          *(_DWORD *)(v52 + 348) = v81;
          v62 = v56 & 1;
          v87 = v57 & 1;
          v46 = v104;
          v93 = v53;
          v47 = v54;
          v63 = v55;
          v64 = v51 + 1;
          v65 = v50;
          sub_1A54E3150((uint64_t)&v105);
          v66 = v65;
          v51 = v64;
          v49 = v63;
          v44 = v62;
          v36 = v81;
          v35 = v61;
          v38 = v59;
          v41 = v58;
          v32 = v74;
          v31 = v75;
          v24 = v79;
          v19 = v80;
          v28 = v76;
          v27 = v77;
          v25 = v78;
          v16 = v84;
          v13 = v85;
          v20 = v82;
          v21 = v83;
          v10 = v88;
          v9 = v89;
          result = v91;
          v7 = v70;
          v8 = v71;
          a7.n128_u64[1] = v90.n128_u64[1];
          v48 = v90.n128_u32[0];
          v50 = v66 + 176;
          v11 = v86;
          v45 = v87;
          if (v72 == v51)
            goto LABEL_10;
        }
        __break(1u);
        goto LABEL_18;
      }
LABEL_10:
      v105 = result;
      v106 = v9;
      v107 = v10;
      v108 = v48;
      v109 = v11;
      v110 = v46;
      v111 = v13;
      v112 = v93;
      v113 = v16;
      v114 = v47;
      v115 = v19;
      v116 = v21;
      v117 = v20;
      v118 = v49;
      v119 = v24;
      v120 = v25;
      v121 = v44;
      v122 = v27;
      v123 = v28;
      v124 = v45;
      v125 = v31;
      v126 = v32;
      v127 = v41;
      v128 = v38;
      v129 = v35;
      v130 = v36;
      sub_1A54E3150((uint64_t)&v105);
      a3 = v72;
      v8 = v72;
LABEL_15:
      result = v68;
      a5 = v69;
      a4 = v67;
    }
    else
    {
      a3 = 0;
    }
LABEL_16:
    *result = a4;
    result[1] = a5;
    result[2] = v7;
    result[3] = v8;
    return (_QWORD *)a3;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1A550D6AC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(_QWORD *)(a4 + 48) + 16 * v16;
    v21 = *(_QWORD *)v20;
    LODWORD(v20) = *(_DWORD *)(v20 + 8);
    *(_QWORD *)v11 = v21;
    *(_DWORD *)(v11 + 8) = v20;
    if (v13 == v10)
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_38;
    }
    v11 += 16;
    result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1A550D8B0(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_38;
    }
    v11 += 2;
    result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1A550DAAC(uint64_t result, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (uint64_t *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = *v20;
    v22 = v20[1];
    *v11 = *v20;
    v11[1] = v22;
    if (v13 == v10)
    {
      sub_1A54E42B4(v21, v22);
      goto LABEL_38;
    }
    v11 += 2;
    result = sub_1A54E42B4(v21, v22);
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1A550DCA8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int *v17;
  unsigned int *v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  char *v43;
  char *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  unint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  BOOL v66;
  uint64_t v67;
  char v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  BOOL v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  unint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t i;
  uint64_t v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  char v100;
  char v101;
  char *v103;
  uint64_t v104;
  unint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *__dst;
  uint64_t v119;

  v3 = a1[1];
  result = sub_1A594CC78();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v92 = *a1;
      v93 = *a1 + 24;
      v94 = -1;
      for (i = 1; i != v3; ++i)
      {
        v96 = v94;
        v97 = v93;
        do
        {
          v98 = *(_DWORD *)v97;
          if (*(_DWORD *)v97 >= *(_DWORD *)(v97 - 24))
            break;
          if (!v92)
            goto LABEL_141;
          v99 = *(_QWORD *)(v97 + 8);
          v100 = *(_BYTE *)(v97 + 16);
          v101 = *(_BYTE *)(v97 + 17);
          *(_OWORD *)v97 = *(_OWORD *)(v97 - 24);
          *(_QWORD *)(v97 + 16) = *(_QWORD *)(v97 - 8);
          *(_QWORD *)(v97 - 16) = v99;
          *(_BYTE *)(v97 - 8) = v100;
          *(_BYTE *)(v97 - 7) = v101;
          *(_DWORD *)(v97 - 24) = v98;
          v97 -= 24;
        }
        while (!__CFADD__(v96++, 1));
        v93 += 24;
        --v94;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_146;
  v6 = result;
  v119 = v1;
  v112 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v12 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_103:
      v103 = v12;
      v114 = v9;
      if (v13 >= 2)
      {
        v104 = *v112;
        do
        {
          v105 = v13 - 2;
          if (v13 < 2)
            goto LABEL_132;
          if (!v104)
            goto LABEL_145;
          v106 = v103;
          v107 = *(_QWORD *)&v103[16 * v105 + 32];
          v108 = *(_QWORD *)&v103[16 * v13 + 24];
          sub_1A550E3E4((char *)(v104 + 24 * v107), (char *)(v104 + 24 * *(_QWORD *)&v103[16 * v13 + 16]), v104 + 24 * v108, __dst);
          if (v119)
            break;
          if (v108 < v107)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v106 = sub_1A558A0A4((uint64_t)v106);
          if (v105 >= *((_QWORD *)v106 + 2))
            goto LABEL_134;
          v109 = &v106[16 * v105 + 32];
          *(_QWORD *)v109 = v107;
          *((_QWORD *)v109 + 1) = v108;
          v110 = *((_QWORD *)v106 + 2);
          if (v13 > v110)
            goto LABEL_135;
          memmove(&v106[16 * v13 + 16], &v106[16 * v13 + 32], 16 * (v110 - v13));
          v103 = v106;
          *((_QWORD *)v106 + 2) = v110 - 1;
          v13 = v110 - 1;
        }
        while (v110 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v114 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v114 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v7 = v5 >> 1;
    v8 = sub_1A594BA18();
    *(_QWORD *)(v8 + 16) = v7;
    v114 = v8;
    __dst = (char *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v113 = *a1 + 24;
  v111 = *a1 - 24;
  v12 = (char *)MEMORY[0x1E0DEE9D8];
  v115 = v6;
  v116 = v3;
  v117 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(_DWORD *)(v11 + 24 * v10);
      v16 = *(_DWORD *)(v11 + 24 * v14);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v17 = (unsigned int *)(v113 + 24 * v14);
        v18 = v17;
        while (1)
        {
          v19 = v18[6];
          v18 += 6;
          if (v15 < v16 == v19 >= *v17)
            break;
          ++v10;
          v17 = v18;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14)
          goto LABEL_138;
        if (v14 < v10)
        {
          v20 = 24 * v10;
          v21 = 24 * v14;
          v22 = v10;
          v23 = v14;
          do
          {
            if (v23 != --v22)
            {
              if (!v11)
                goto LABEL_144;
              v24 = v11 + v21;
              v25 = *(_DWORD *)(v11 + v21);
              v26 = v11 + v20;
              v27 = *(_QWORD *)(v11 + v21 + 8);
              v28 = *(_BYTE *)(v11 + v21 + 16);
              v29 = *(_BYTE *)(v11 + v21 + 17);
              v30 = *(_QWORD *)(v11 + v20 - 8);
              *(_OWORD *)v24 = *(_OWORD *)(v11 + v20 - 24);
              *(_QWORD *)(v24 + 16) = v30;
              *(_DWORD *)(v26 - 24) = v25;
              *(_QWORD *)(v26 - 16) = v27;
              *(_BYTE *)(v26 - 8) = v28;
              *(_BYTE *)(v26 - 7) = v29;
            }
            ++v23;
            v20 -= 24;
            v21 += 24;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v10, v14))
      goto LABEL_136;
    if (v10 - v14 >= v6)
      goto LABEL_46;
    v31 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_139;
    if (v31 >= v3)
      v31 = v3;
    if (v31 < v14)
      break;
    if (v10 != v31)
    {
      v32 = v111 + 24 * v10;
      do
      {
        v33 = v14;
        v34 = v32;
        do
        {
          v35 = v34 + 24;
          v36 = *(_DWORD *)(v34 + 24);
          if (v36 >= *(_DWORD *)v34)
            break;
          if (!v11)
            goto LABEL_142;
          v37 = *(_QWORD *)(v34 + 32);
          v38 = *(_BYTE *)(v34 + 40);
          v39 = *(_BYTE *)(v34 + 41);
          *(_OWORD *)v35 = *(_OWORD *)v34;
          v40 = *(_QWORD *)(v34 + 16);
          *(_DWORD *)v34 = v36;
          *(_QWORD *)(v34 + 8) = v37;
          *(_BYTE *)(v34 + 16) = v38;
          *(_BYTE *)(v34 + 17) = v39;
          v34 -= 24;
          ++v33;
          *(_QWORD *)(v35 + 16) = v40;
        }
        while (v10 != v33);
        ++v10;
        v32 += 24;
      }
      while (v10 != v31);
      v10 = v31;
    }
LABEL_46:
    if (v10 < v14)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_1A5589B40(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v42 = *((_QWORD *)v12 + 2);
    v41 = *((_QWORD *)v12 + 3);
    v13 = v42 + 1;
    v11 = v117;
    if (v42 >= v41 >> 1)
    {
      v91 = sub_1A5589B40((char *)(v41 > 1), v42 + 1, 1, v12);
      v11 = v117;
      v12 = v91;
    }
    *((_QWORD *)v12 + 2) = v13;
    v43 = v12 + 32;
    v44 = &v12[16 * v42 + 32];
    *(_QWORD *)v44 = v14;
    *((_QWORD *)v44 + 1) = v10;
    if (v42)
    {
      while (1)
      {
        v45 = v13 - 1;
        if (v13 >= 4)
        {
          v50 = &v43[16 * v13];
          v51 = *((_QWORD *)v50 - 8);
          v52 = *((_QWORD *)v50 - 7);
          v56 = __OFSUB__(v52, v51);
          v53 = v52 - v51;
          if (v56)
            goto LABEL_120;
          v55 = *((_QWORD *)v50 - 6);
          v54 = *((_QWORD *)v50 - 5);
          v56 = __OFSUB__(v54, v55);
          v48 = v54 - v55;
          v49 = v56;
          if (v56)
            goto LABEL_121;
          v57 = v13 - 2;
          v58 = &v43[16 * v13 - 32];
          v60 = *(_QWORD *)v58;
          v59 = *((_QWORD *)v58 + 1);
          v56 = __OFSUB__(v59, v60);
          v61 = v59 - v60;
          if (v56)
            goto LABEL_123;
          v56 = __OFADD__(v48, v61);
          v62 = v48 + v61;
          if (v56)
            goto LABEL_126;
          if (v62 >= v53)
          {
            v80 = &v43[16 * v45];
            v82 = *(_QWORD *)v80;
            v81 = *((_QWORD *)v80 + 1);
            v56 = __OFSUB__(v81, v82);
            v83 = v81 - v82;
            if (v56)
              goto LABEL_130;
            v73 = v48 < v83;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v74 = *((_QWORD *)v12 + 4);
            v75 = *((_QWORD *)v12 + 5);
            v56 = __OFSUB__(v75, v74);
            v67 = v75 - v74;
            v68 = v56;
            goto LABEL_77;
          }
          v47 = *((_QWORD *)v12 + 4);
          v46 = *((_QWORD *)v12 + 5);
          v56 = __OFSUB__(v46, v47);
          v48 = v46 - v47;
          v49 = v56;
        }
        if ((v49 & 1) != 0)
          goto LABEL_122;
        v57 = v13 - 2;
        v63 = &v43[16 * v13 - 32];
        v65 = *(_QWORD *)v63;
        v64 = *((_QWORD *)v63 + 1);
        v66 = __OFSUB__(v64, v65);
        v67 = v64 - v65;
        v68 = v66;
        if (v66)
          goto LABEL_125;
        v69 = &v43[16 * v45];
        v71 = *(_QWORD *)v69;
        v70 = *((_QWORD *)v69 + 1);
        v56 = __OFSUB__(v70, v71);
        v72 = v70 - v71;
        if (v56)
          goto LABEL_128;
        if (__OFADD__(v67, v72))
          goto LABEL_129;
        if (v67 + v72 >= v48)
        {
          v73 = v48 < v72;
LABEL_83:
          if (v73)
            v45 = v57;
          goto LABEL_85;
        }
LABEL_77:
        if ((v68 & 1) != 0)
          goto LABEL_124;
        v76 = &v43[16 * v45];
        v78 = *(_QWORD *)v76;
        v77 = *((_QWORD *)v76 + 1);
        v56 = __OFSUB__(v77, v78);
        v79 = v77 - v78;
        if (v56)
          goto LABEL_127;
        if (v79 < v67)
          goto LABEL_15;
LABEL_85:
        v84 = v45 - 1;
        if (v45 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11)
          goto LABEL_143;
        v85 = v12;
        v86 = &v43[16 * v84];
        v87 = *(_QWORD *)v86;
        v88 = &v43[16 * v45];
        v89 = *((_QWORD *)v88 + 1);
        sub_1A550E3E4((char *)(v11 + 24 * *(_QWORD *)v86), (char *)(v11 + 24 * *(_QWORD *)v88), v11 + 24 * v89, __dst);
        if (v119)
          goto LABEL_93;
        if (v89 < v87)
          goto LABEL_117;
        if (v45 > *((_QWORD *)v85 + 2))
          goto LABEL_118;
        *(_QWORD *)v86 = v87;
        *(_QWORD *)&v43[16 * v84 + 8] = v89;
        v90 = *((_QWORD *)v85 + 2);
        if (v45 >= v90)
          goto LABEL_119;
        v12 = v85;
        v13 = v90 - 1;
        memmove(&v43[16 * v45], v88 + 16, 16 * (v90 - 1 - v45));
        *((_QWORD *)v85 + 2) = v90 - 1;
        v11 = v117;
        if (v90 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v115;
    v3 = v116;
    if (v10 >= v116)
    {
      v9 = v114;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_1A594C9B4();
  __break(1u);
  return result;
}

uint64_t sub_1A550E3E4(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  char *v13;
  char *v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  char *v20;
  char *v21;
  unsigned int v22;
  __int128 v23;
  __int128 v24;
  uint64_t result;
  char *v26;
  char *v27;
  char *v28;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = (a2 - __src) / 24;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 24;
  v27 = __dst;
  v28 = __src;
  if (v9 >= v11)
  {
    if (v10 >= -23)
    {
      v17 = 24 * v11;
      if (__dst != a2 || &a2[v17] <= __dst)
        memmove(__dst, a2, 24 * v11);
      v18 = &v4[v17];
      v26 = &v4[v17];
      v28 = v6;
      if (v7 < v6 && v10 >= 24)
      {
        v19 = a3 - 24;
        v20 = v6;
        while (1)
        {
          v21 = (char *)(v19 + 24);
          v22 = *((_DWORD *)v20 - 6);
          v20 -= 24;
          if (*((_DWORD *)v18 - 6) >= v22)
          {
            v26 = v18 - 24;
            if (v21 < v18 || v19 >= (unint64_t)v18 || v21 != v18)
            {
              v24 = *(_OWORD *)(v18 - 24);
              *(_QWORD *)(v19 + 16) = *((_QWORD *)v18 - 1);
              *(_OWORD *)v19 = v24;
            }
            v20 = v6;
            v18 -= 24;
            if (v6 <= v7)
              goto LABEL_38;
          }
          else
          {
            if (v21 != v6 || v19 >= (unint64_t)v6)
            {
              v23 = *(_OWORD *)v20;
              *(_QWORD *)(v19 + 16) = *((_QWORD *)v20 + 2);
              *(_OWORD *)v19 = v23;
            }
            v28 = v20;
            if (v20 <= v7)
              goto LABEL_38;
          }
          v19 -= 24;
          v6 = v20;
          if (v18 <= v4)
            goto LABEL_38;
        }
      }
      goto LABEL_38;
    }
  }
  else if (v8 >= -23)
  {
    v12 = 24 * v9;
    if (__dst != __src || &__src[v12] <= __dst)
      memmove(__dst, __src, v12);
    v13 = &v4[v12];
    v26 = &v4[v12];
    if ((unint64_t)v6 < a3 && v8 >= 24)
    {
      do
      {
        if (*(_DWORD *)v6 >= *(_DWORD *)v4)
        {
          if (v7 != v4)
          {
            v16 = *(_OWORD *)v4;
            *((_QWORD *)v7 + 2) = *((_QWORD *)v4 + 2);
            *(_OWORD *)v7 = v16;
          }
          v4 += 24;
          v27 = v4;
          v14 = v6;
        }
        else
        {
          v14 = v6 + 24;
          if (v7 < v6 || v7 >= v14 || v7 != v6)
          {
            v15 = *(_OWORD *)v6;
            *((_QWORD *)v7 + 2) = *((_QWORD *)v6 + 2);
            *(_OWORD *)v7 = v15;
          }
        }
        v7 += 24;
        if (v4 >= v13)
          break;
        v6 = v14;
      }
      while ((unint64_t)v14 < a3);
      v28 = v7;
    }
LABEL_38:
    sub_1A5589CE0(&v28, &v27, &v26);
    return 1;
  }
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

void sub_1A550E684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char *v9;
  char *v10;
  int v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v25;
  uint64_t v26;

  v3 = 0;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = a3 & 0xFFFFFFFFFFLL;
  v6 = a1 + 49;
  v23 = MEMORY[0x1E0DEE9D8];
  v22 = a1 + 49;
LABEL_2:
  if (v3 <= v4)
    v7 = v4;
  else
    v7 = v3;
  v8 = v7 + 1;
  v9 = (char *)(v6 + 24 * v3);
  while (v4 != v3)
  {
    if (v8 == ++v3)
    {
      __break(1u);
      return;
    }
    v10 = v9 + 24;
    v11 = *(_DWORD *)(v9 - 17);
    v12 = *(_QWORD *)(v9 - 9);
    v13 = *(v9 - 1);
    v14 = *v9;
    v25 = v11;
    sub_1A54E3414();
    MessageIdentifierSet.contains(_:)((uint64_t)&v25, a2, v5);
    v9 = v10;
    if ((v15 & 1) != 0)
    {
      v16 = v23;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v26 = v23;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1A54F4BF4(0, *(_QWORD *)(v23 + 16) + 1, 1);
        v16 = v26;
      }
      v19 = *(_QWORD *)(v16 + 16);
      v18 = *(_QWORD *)(v16 + 24);
      v20 = v19 + 1;
      if (v19 >= v18 >> 1)
      {
        sub_1A54F4BF4(v18 > 1, v19 + 1, 1);
        v20 = v19 + 1;
        v16 = v26;
      }
      *(_QWORD *)(v16 + 16) = v20;
      v23 = v16;
      v21 = v16 + 24 * v19;
      *(_DWORD *)(v21 + 32) = v11;
      *(_QWORD *)(v21 + 40) = v12;
      *(_BYTE *)(v21 + 48) = v13;
      *(_BYTE *)(v21 + 49) = v14;
      v6 = v22;
      goto LABEL_2;
    }
  }
}

uint64_t sub_1A550E7F0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1A550E814(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7974B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A550E85C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for GetUIDsForDownloadRequests(a2, a1);
  return a2;
}

uint64_t sub_1A550E898()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A550E8F4(uint64_t a1)
{
  destroy for GetUIDsForDownloadRequests(a1);
  return a1;
}

uint64_t sub_1A550E928(uint64_t a1)
{
  destroy for AnyMailboxTask(a1);
  return a1;
}

uint64_t sub_1A550E95C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v18;
  int64_t v19;
  BOOL v20;
  unsigned __int8 v21;

  v8 = result;
  v9 = 0;
  v10 = result + 56;
  v11 = 1 << *(_BYTE *)(result + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(result + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v9 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v9++, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v9 >= v14)
      return 0;
    v18 = *(_QWORD *)(v10 + 8 * v9);
    if (!v18)
      break;
LABEL_18:
    v13 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_19:
    v21 = *(_BYTE *)(*(_QWORD *)(v8 + 48) + v16);
    v20 = sub_1A555467C(&v21, a2, a3, a4);
    result = 1;
    if (v4 || v20)
      return result;
  }
  v19 = v9 + 1;
  if (v9 + 1 >= v14)
    return 0;
  v18 = *(_QWORD *)(v10 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v19 = v9 + 2;
  if (v9 + 2 >= v14)
    return 0;
  v18 = *(_QWORD *)(v10 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v19 = v9 + 3;
  if (v9 + 3 >= v14)
    return 0;
  v18 = *(_QWORD *)(v10 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v19 = v9 + 4;
  if (v9 + 4 >= v14)
    return 0;
  v18 = *(_QWORD *)(v10 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v9 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      return 0;
    v18 = *(_QWORD *)(v10 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1A550EAD4(uint64_t result, uint64_t a2, uint64_t a3)
{
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v15;
  int64_t v16;
  int v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;

  v5 = 0;
  v27 = result;
  v6 = result + 56;
  v7 = 1 << *(_BYTE *)(result + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(result + 56);
  v26 = (unint64_t)(v7 + 63) >> 6;
  v10 = a2 + 56;
  v11 = a3 + 56;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v5 << 6);
      if (!*(_QWORD *)(a2 + 16))
        return 0;
      goto LABEL_21;
    }
    if (__OFADD__(v5++, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v5 >= v26)
      return 1;
    v15 = *(_QWORD *)(v6 + 8 * v5);
    if (!v15)
      break;
LABEL_20:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v5 << 6);
    if (!*(_QWORD *)(a2 + 16))
      return 0;
LABEL_21:
    v17 = *(unsigned __int8 *)(*(_QWORD *)(v27 + 48) + v13);
    sub_1A594CE64();
    sub_1A594CE88();
    result = sub_1A594CED0();
    v18 = -1 << *(_BYTE *)(a2 + 32);
    v19 = result & ~v18;
    if (((*(_QWORD *)(v10 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
      return 0;
    v20 = *(_QWORD *)(a2 + 48);
    if (*(unsigned __int8 *)(v20 + v19) != v17)
    {
      v21 = ~v18;
      do
      {
        v19 = (v19 + 1) & v21;
        if (((*(_QWORD *)(v10 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
          return 0;
      }
      while (*(unsigned __int8 *)(v20 + v19) != v17);
    }
    if (*(_QWORD *)(a3 + 16))
    {
      sub_1A594CE64();
      sub_1A594CE88();
      result = sub_1A594CED0();
      v22 = -1 << *(_BYTE *)(a3 + 32);
      v23 = result & ~v22;
      if (((*(_QWORD *)(v11 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) != 0)
      {
        v24 = *(_QWORD *)(a3 + 48);
        if (*(unsigned __int8 *)(v24 + v23) == v17)
          return 0;
        v25 = ~v22;
        while (1)
        {
          v23 = (v23 + 1) & v25;
          if (((*(_QWORD *)(v11 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
            break;
          if (*(unsigned __int8 *)(v24 + v23) == v17)
            return 0;
        }
      }
    }
  }
  v16 = v5 + 1;
  if (v5 + 1 >= v26)
    return 1;
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
    goto LABEL_19;
  v16 = v5 + 2;
  if (v5 + 2 >= v26)
    return 1;
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
    goto LABEL_19;
  v16 = v5 + 3;
  if (v5 + 3 >= v26)
    return 1;
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
    goto LABEL_19;
  v16 = v5 + 4;
  if (v5 + 4 >= v26)
    return 1;
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
  {
LABEL_19:
    v5 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v5 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v5 >= v26)
      return 1;
    v15 = *(_QWORD *)(v6 + 8 * v5);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1A550ED78(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for FetchSearchResultMessages(a2, a1);
  return a2;
}

uint64_t sub_1A550EDB4()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(v0 + 100) != 255)
  {
    v1 = *(unsigned int *)(v0 + 96) | ((unint64_t)*(unsigned __int8 *)(v0 + 100) << 32);
    sub_1A54E3458(*(_QWORD *)(v0 + 88), v1, SBYTE4(v1));
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  swift_bridgeObjectRelease();
  sub_1A54E3458(*(_QWORD *)(v0 + 168), *(unsigned int *)(v0 + 176), *(_BYTE *)(v0 + 180));
  sub_1A54E3458(*(_QWORD *)(v0 + 184), *(unsigned int *)(v0 + 192), *(_BYTE *)(v0 + 196));
  if (*(unsigned __int8 *)(v0 + 212) != 255)
  {
    v2 = *(unsigned int *)(v0 + 208) | ((unint64_t)*(unsigned __int8 *)(v0 + 212) << 32);
    sub_1A54E3458(*(_QWORD *)(v0 + 200), v2, SBYTE4(v2));
  }
  if (*(unsigned __int8 *)(v0 + 244) != 255)
  {
    v3 = *(unsigned int *)(v0 + 240) | ((unint64_t)*(unsigned __int8 *)(v0 + 244) << 32);
    sub_1A54E3458(*(_QWORD *)(v0 + 232), v3, SBYTE4(v3));
  }
  if (*(_QWORD *)(v0 + 248))
  {
    swift_bridgeObjectRelease();
    sub_1A54E3458(*(_QWORD *)(v0 + 264), *(unsigned int *)(v0 + 272), *(_BYTE *)(v0 + 276));
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A550EEC0(uint64_t a1)
{
  destroy for FetchSearchResultMessages(a1);
  return a1;
}

_QWORD *__swift_project_boxed_opaque_existential_1_0(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_1A550EF18(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for AnyMailboxTask(a2, a1);
  return a2;
}

uint64_t sub_1A550EF54(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for PurgeMessagesOutsideWindowOfInterest(a2, a1);
  return a2;
}

uint64_t sub_1A550EF90()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A550EFDC(uint64_t a1)
{
  destroy for CountUnreadMessages(a1);
  return a1;
}

uint64_t sub_1A550F010(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for DetermineMessageBatches(a2, a1);
  return a2;
}

uint64_t sub_1A550F04C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A550F0B4(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(unsigned int *)(v0 + 184) | ((unint64_t)*(unsigned __int8 *)(v0 + 188) << 32), *(_BYTE *)(v0 + 189));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A550F0B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if (a5 == 1)
  {
    swift_bridgeObjectRelease();
    return sub_1A5503B8C(a3, a4);
  }
  return result;
}

uint64_t sub_1A550F0F4(uint64_t a1)
{
  destroy for DetermineMessageBatches(a1);
  return a1;
}

uint64_t sub_1A550F128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a2)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return sub_1A5503BA0(a3, a4);
  }
  return result;
}

uint64_t sub_1A550F160(unint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v11;

  if ((a4 & 0x8000000000000000) != 0)
  {
    v11 = HIDWORD(a4);
    sub_1A54E4334(a1, a2, SBYTE4(a2));
    sub_1A54E4334(a3, a4, v11);
    return sub_1A5503BA0(a5, a6);
  }
  else
  {
    sub_1A54E42F8(a1);
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
}

unint64_t sub_1A550F1E4()
{
  unint64_t result;

  result = qword_1EE7A8680;
  if (!qword_1EE7A8680)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AAF70, &type metadata for SearchMailbox.SearchID);
    atomic_store(result, (unint64_t *)&qword_1EE7A8680);
  }
  return result;
}

uint64_t sub_1A550F228(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for SearchMailbox(a2, a1);
  return a2;
}

uint64_t sub_1A550F264()
{
  uint64_t v0;
  unint64_t v1;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  swift_bridgeObjectRelease();
  sub_1A54E472C(*(_QWORD *)(v0 + 136));
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(v0 + 180) != 255)
  {
    v1 = *(unsigned int *)(v0 + 176) | ((unint64_t)*(unsigned __int8 *)(v0 + 180) << 32);
    sub_1A54E3458(*(_QWORD *)(v0 + 168), v1, SBYTE4(v1));
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A550F2E4(uint64_t a1)
{
  destroy for SearchMailbox(a1);
  return a1;
}

uint64_t sub_1A550F318(uint64_t a1)
{
  sub_1A54E4334(*(_QWORD *)a1, *(unsigned int *)(a1 + 8), *(_BYTE *)(a1 + 12));
  return a1;
}

uint64_t sub_1A550F348(uint64_t a1)
{
  sub_1A54E3458(*(_QWORD *)a1, *(unsigned int *)(a1 + 8), *(_BYTE *)(a1 + 12));
  return a1;
}

void sub_1A550F378(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t i;
  uint64_t v12;
  int v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  int64_t v29;
  int v31;
  uint64_t v32;

  v4 = 0;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v8 = a3 & 0xFFFFFFFFFFLL;
  v9 = MEMORY[0x1E0DEE9D8];
  if (!v7)
    goto LABEL_7;
LABEL_4:
  v10 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (i = v10 | (v4 << 6); ; i = __clz(__rbit64(v19)) + (v4 << 6))
  {
    v12 = *(_QWORD *)(a1 + 56) + 24 * i;
    v13 = *(_DWORD *)v12;
    v14 = *(_QWORD *)(v12 + 8);
    v15 = *(_BYTE *)(v12 + 16);
    v16 = *(_BYTE *)(v12 + 17);
    v31 = *(_DWORD *)v12;
    sub_1A54E3414();
    MessageIdentifierSet.contains(_:)((uint64_t)&v31, a2, v8);
    if ((v17 & 1) != 0)
    {
      if (v7)
        goto LABEL_4;
    }
    else
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v32 = v9;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1A54F4BF4(0, *(_QWORD *)(v9 + 16) + 1, 1);
        v9 = v32;
      }
      v23 = *(_QWORD *)(v9 + 16);
      v22 = *(_QWORD *)(v9 + 24);
      v24 = v23 + 1;
      if (v23 >= v22 >> 1)
      {
        v26 = *(_QWORD *)(v9 + 16);
        v27 = v23 + 1;
        sub_1A54F4BF4(v22 > 1, v23 + 1, 1);
        v23 = v26;
        v24 = v27;
        v9 = v32;
      }
      *(_QWORD *)(v9 + 16) = v24;
      v25 = v9 + 24 * v23;
      *(_DWORD *)(v25 + 32) = v13;
      *(_QWORD *)(v25 + 40) = v14;
      *(_BYTE *)(v25 + 48) = v15;
      *(_BYTE *)(v25 + 49) = v16;
      if (v7)
        goto LABEL_4;
    }
LABEL_7:
    v18 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v18 >= v29)
      goto LABEL_29;
    v19 = *(_QWORD *)(v28 + 8 * v18);
    ++v4;
    if (!v19)
    {
      v4 = v18 + 1;
      if (v18 + 1 >= v29)
        goto LABEL_29;
      v19 = *(_QWORD *)(v28 + 8 * v4);
      if (!v19)
      {
        v4 = v18 + 2;
        if (v18 + 2 >= v29)
          goto LABEL_29;
        v19 = *(_QWORD *)(v28 + 8 * v4);
        if (!v19)
        {
          v4 = v18 + 3;
          if (v18 + 3 >= v29)
            goto LABEL_29;
          v19 = *(_QWORD *)(v28 + 8 * v4);
          if (!v19)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v19 - 1) & v19;
  }
  v20 = v18 + 4;
  if (v20 >= v29)
  {
LABEL_29:
    swift_release();
    return;
  }
  v19 = *(_QWORD *)(v28 + 8 * v20);
  if (v19)
  {
    v4 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    v4 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v4 >= v29)
      goto LABEL_29;
    v19 = *(_QWORD *)(v28 + 8 * v4);
    ++v20;
    if (v19)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
}

unint64_t sub_1A550F5DC()
{
  unint64_t result;

  result = qword_1EE7A8688;
  if (!qword_1EE7A8688)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A9440, &_s11TaskIDValueVN);
    atomic_store(result, (unint64_t *)&qword_1EE7A8688);
  }
  return result;
}

uint64_t sub_1A550F620(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for DownloadTask(a2, a1);
  return a2;
}

uint64_t sub_1A550F65C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A54E3458(*(_QWORD *)(v0 + 168), *(unsigned int *)(v0 + 176), *(_BYTE *)(v0 + 180));
  sub_1A54E3458(*(_QWORD *)(v0 + 184), *(unsigned int *)(v0 + 192), *(_BYTE *)(v0 + 196));
  sub_1A54E3458(*(_QWORD *)(v0 + 200), *(unsigned int *)(v0 + 208), *(_BYTE *)(v0 + 212));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A550F6F8(uint64_t a1)
{
  destroy for DownloadTask(a1);
  return a1;
}

uint64_t sub_1A550F72C()
{
  return swift_release();
}

unint64_t sub_1A550F734()
{
  unint64_t result;

  result = qword_1EE795BB8;
  if (!qword_1EE795BB8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for MailboxName, &type metadata for MailboxName);
    atomic_store(result, (unint64_t *)&qword_1EE795BB8);
  }
  return result;
}

uint64_t sub_1A550F778(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for DetermineNewestMessages(a2, a1);
  return a2;
}

uint64_t sub_1A550F7B4()
{
  uint64_t v0;
  unint64_t v1;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(v0 + 132) != 255)
  {
    v1 = *(unsigned int *)(v0 + 128) | ((unint64_t)*(unsigned __int8 *)(v0 + 132) << 32);
    sub_1A54E3458(*(_QWORD *)(v0 + 120), v1, SBYTE4(v1));
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A550F824(uint64_t a1)
{
  destroy for DetermineNewestMessages(a1);
  return a1;
}

uint64_t sub_1A550F858(uint64_t result, uint64_t a2)
{
  if ((~a2 & 0xFF00000000) != 0)
    return sub_1A54E4334(result, a2, SBYTE4(a2));
  return result;
}

uint64_t sub_1A550F870(uint64_t result, uint64_t a2)
{
  if ((~a2 & 0xFF00000000) != 0)
    return sub_1A54E3458(result, a2, SBYTE4(a2));
  return result;
}

uint64_t sub_1A550F888(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for FindPendingDownload(a2, a1);
  return a2;
}

uint64_t sub_1A550F8C4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A54E3458(*(_QWORD *)(v0 + 80), *(unsigned int *)(v0 + 88), *(_BYTE *)(v0 + 92));
  __swift_destroy_boxed_opaque_existential_1(v0 + 120);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A550F928(uint64_t a1)
{
  destroy for FindPendingDownload(a1);
  return a1;
}

uint64_t sub_1A550F95C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for MoveAndCopyMessages(a2, a1);
  return a2;
}

uint64_t sub_1A550F998()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A550FA2C(uint64_t a1)
{
  destroy for MoveAndCopyMessages(a1);
  return a1;
}

uint64_t sub_1A550FA60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UploadMessages(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A550FAA4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UploadMessages(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A550FAE0(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for CountUnreadMessages(a2, a1);
  return a2;
}

uint64_t sub_1A550FB1C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A550FB68(uint64_t a1)
{
  destroy for CountUnreadMessages(a1);
  return a1;
}

uint64_t sub_1A550FB9C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for UploadFlagChanges(a2, a1);
  return a2;
}

uint64_t sub_1A550FBD8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  sub_1A550FC70(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192), *(_BYTE *)(v0 + 200));
  sub_1A54E3458(*(_QWORD *)(v0 + 208), *(unsigned int *)(v0 + 216), *(_BYTE *)(v0 + 220));
  sub_1A54E3458(*(_QWORD *)(v0 + 224), *(unsigned int *)(v0 + 232), *(_BYTE *)(v0 + 236));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A550FC70(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a11)
  {
    if (a11 != 1)
      return result;
    sub_1A550FCDC(result, a2, a3);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A550FCDC(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    sub_1A54E3458(result, a2, SBYTE4(a2));
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A550FD18(uint64_t a1)
{
  destroy for UploadFlagChanges(a1);
  return a1;
}

uint64_t sub_1A550FD4C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for PendingServerResponses(a2, a1);
  return a2;
}

uint64_t sub_1A550FD88(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return result;
}

uint64_t sub_1A550FD94(uint64_t a1)
{
  destroy for PendingServerResponses(a1);
  return a1;
}

uint64_t sub_1A550FDC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A551005C(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1A550FDD4(uint64_t a1)
{
  destroy for DetectChangesToMessagesInRecent(a1);
  return a1;
}

uint64_t sub_1A550FE08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A550FFCC(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1A550FE14(uint64_t a1)
{
  destroy for QuickFlagChangesResync(a1);
  return a1;
}

uint64_t sub_1A550FE48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A550FE88(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1A550FE54(uint64_t a1)
{
  destroy for DetectRemovedMessages(a1);
  return a1;
}

uint64_t sub_1A550FE88(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for DetectRemovedMessagesInRecent(a2, a1);
  return a2;
}

uint64_t sub_1A550FEC4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A550FF10(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for DetectRemovedMessages(a2, a1);
  return a2;
}

uint64_t sub_1A550FF4C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A550FF98(uint64_t a1)
{
  destroy for DetectRemovedMessages(a1);
  return a1;
}

uint64_t sub_1A550FFCC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for QuickFlagChangesResync(a2, a1);
  return a2;
}

uint64_t sub_1A5510008()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A551005C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for DetectChangesToMessagesInRecent(a2, a1);
  return a2;
}

uint64_t sub_1A5510098()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A55100F4(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for DetectChangesToMessages(a2, a1);
  return a2;
}

uint64_t sub_1A5510130()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A551018C(uint64_t a1)
{
  destroy for DetectChangesToMessages(a1);
  return a1;
}

uint64_t sub_1A55101C0(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for UpdateLocalFlags(a2, a1);
  return a2;
}

uint64_t sub_1A55101FC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A5510250(uint64_t a1)
{
  destroy for UpdateLocalFlags(a1);
  return a1;
}

uint64_t sub_1A5510284(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName_0(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1A55102C0(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for FetchMessages(a2, a1);
  return a2;
}

uint64_t sub_1A55102FC()
{
  uint64_t v0;
  unint64_t v1;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(v0 + 100) != 255)
  {
    v1 = *(unsigned int *)(v0 + 96) | ((unint64_t)*(unsigned __int8 *)(v0 + 100) << 32);
    sub_1A54E3458(*(_QWORD *)(v0 + 88), v1, SBYTE4(v1));
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  if (*(_QWORD *)(v0 + 152))
  {
    swift_bridgeObjectRelease();
    sub_1A54E3458(*(_QWORD *)(v0 + 168), *(unsigned int *)(v0 + 176), *(_BYTE *)(v0 + 180));
    swift_bridgeObjectRelease();
  }
  sub_1A54E3458(*(_QWORD *)(v0 + 200), *(unsigned int *)(v0 + 208), *(_BYTE *)(v0 + 212));
  sub_1A54E3458(*(_QWORD *)(v0 + 216), *(unsigned int *)(v0 + 224), *(_BYTE *)(v0 + 228));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A55103B8(uint64_t a1)
{
  destroy for FetchMessages(a1);
  return a1;
}

uint64_t sub_1A55103EC(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  uint64_t v9;
  unint64_t v13;
  char v14;

  v9 = (a8 >> 38) & 3;
  if ((_DWORD)v9 == 1)
    return sub_1A54E4334(a2, a3, SBYTE4(a3));
  if (!(_DWORD)v9)
  {
    v13 = HIDWORD(a4);
    v14 = BYTE4(a8);
    sub_1A54E4334(result, a2, SBYTE4(a2));
    sub_1A54E4334(a3, a4, v13);
    return sub_1A54E4334(a7, a8, v14);
  }
  return result;
}

uint64_t sub_1A5510484(uint64_t a1, uint64_t a2)
{
  __swift_memcpy61_8(a2, a1);
  return a2;
}

uint64_t sub_1A55104C0(uint64_t a1)
{
  sub_1A55103EC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(unsigned int *)(a1 + 56) | ((unint64_t)*(unsigned __int8 *)(a1 + 60) << 32));
  return a1;
}

uint64_t sub_1A5510500(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for FindMissingMessages(a2, a1);
  return a2;
}

uint64_t sub_1A551053C()
{
  uint64_t v0;
  unint64_t v1;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(v0 + 164) != 255)
  {
    v1 = *(unsigned int *)(v0 + 160) | ((unint64_t)*(unsigned __int8 *)(v0 + 164) << 32);
    sub_1A54E3458(*(_QWORD *)(v0 + 152), v1, SBYTE4(v1));
  }
  swift_bridgeObjectRelease();
  sub_1A54E3458(*(_QWORD *)(v0 + 224), *(unsigned int *)(v0 + 232), *(_BYTE *)(v0 + 236));
  sub_1A54E3458(*(_QWORD *)(v0 + 240), *(unsigned int *)(v0 + 248), *(_BYTE *)(v0 + 252));
  sub_1A54E3458(*(_QWORD *)(v0 + 256), *(unsigned int *)(v0 + 264), *(_BYTE *)(v0 + 268));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A55105FC(uint64_t a1)
{
  destroy for FindMissingMessages(a1);
  return a1;
}

uint64_t sub_1A5510630(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for NotifyMessagesVanished(a2, a1);
  return a2;
}

uint64_t sub_1A551066C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  sub_1A54E3458(*(_QWORD *)(v0 + 104), *(unsigned int *)(v0 + 112), *(_BYTE *)(v0 + 116));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A55106D8(uint64_t a1)
{
  destroy for NotifyMessagesVanished(a1);
  return a1;
}

uint64_t sub_1A551070C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ReSyncMailbox(a2, a1);
  return a2;
}

uint64_t sub_1A5510748(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract_0(a2);
    result = MEMORY[0x1A85B1874](&unk_1A59A7F84, v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A5510788()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A55107D4(uint64_t a1)
{
  destroy for ReSyncMailbox(a1);
  return a1;
}

uint64_t _s12ResyncResultOwxx(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 48);
  if (v1 >= 2)
    v1 = *(_DWORD *)a1 + 2;
  if (v1 == 1)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t _s12ResyncResultOwcp(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  __int128 v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(unsigned __int8 *)(a2 + 48);
  if (v4 >= 2)
    v4 = *(_DWORD *)a2 + 2;
  if (v4 == 1)
  {
    v5 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v5;
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    v6 = 1;
  }
  else
  {
    v7 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v8;
    swift_retain();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v6 = 0;
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  *(_BYTE *)(a1 + 48) = v6;
  return a1;
}

uint64_t _s12ResyncResultOwca(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 48);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)
    {
      __swift_destroy_boxed_opaque_existential_1(a1);
    }
    else
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v5 = *(unsigned __int8 *)(a2 + 48);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      v6 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v6;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_BYTE *)(a1 + 48) = 1;
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_BYTE *)(a1 + 48) = 0;
      swift_retain();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return a1;
}

__n128 __swift_memcpy49_8_0(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s12ResyncResultOwta(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;
  __int128 v7;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 48);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)
    {
      __swift_destroy_boxed_opaque_existential_1(a1);
    }
    else
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v5 = *(unsigned __int8 *)(a2 + 48);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    }
    else
    {
      LOBYTE(v5) = 0;
      v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
    }
    *(_BYTE *)(a1 + 48) = v5;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for Task(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 >= 2)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Task(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A5510B98(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 48);
  if (result >= 2)
    return (*(_DWORD *)a1 + 2);
  return result;
}

uint64_t sub_1A5510BB4(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 48) = a2;
  return result;
}

ValueMetadata *_s12ResyncResultOMa()
{
  return &_s12ResyncResultON;
}

unint64_t sub_1A5510BF0()
{
  unint64_t result;

  result = qword_1EE7A86E0;
  if (!qword_1EE7A86E0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A3D3C, &_s12PriorityInfoVN);
    atomic_store(result, (unint64_t *)&qword_1EE7A86E0);
  }
  return result;
}

uint64_t sub_1A5510C3C()
{
  sub_1A594CE64();
  sub_1A594CEA0();
  return sub_1A594CED0();
}

uint64_t sub_1A5510C80()
{
  return sub_1A594CEA0();
}

uint64_t sub_1A5510CA8()
{
  sub_1A594CE64();
  sub_1A594CEA0();
  return sub_1A594CED0();
}

BOOL sub_1A5510CE8(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1A5510CFC(__int16 a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _WORD v14[8];

  v2 = sub_1A594CEF4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A86E8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[7] = a1;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A86F0);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1A59ABD40;
  *(_QWORD *)(v9 + 32) = 0x696C696269736976;
  *(_QWORD *)(v9 + 40) = 0xEA00000000007974;
  *(_BYTE *)(v9 + 48) = a1 < 0;
  *(_QWORD *)(v9 + 72) = &_s11UserVisibleON;
  *(_QWORD *)(v9 + 80) = 0x797469726F697270;
  *(_QWORD *)(v9 + 88) = 0xE800000000000000;
  *(_QWORD *)(v9 + 120) = &_s12PriorityInfoV5OrderVN;
  *(_WORD *)(v9 + 96) = a1 & 0x3FFF;
  v10 = *MEMORY[0x1E0DEDFB8];
  v11 = sub_1A594CEE8();
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 104))(v8, v10, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEDFE8], v2);
  return sub_1A594CF00();
}

uint64_t sub_1A5510EC0()
{
  __int16 *v0;

  return sub_1A5510CFC(*v0);
}

uint64_t sub_1A5510EC8()
{
  _WORD *v0;

  if (*v0 == 0x3FFF)
    return 0x656E6F6E2ELL;
  else
    return sub_1A594CC9C();
}

BOOL sub_1A5510F28(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return *a1 < *a2;
}

BOOL sub_1A5510F3C(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_1A5510F50(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_1A5510F64(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return *a2 < *a1;
}

void sub_1A5510F78(_WORD *a1@<X8>)
{
  *a1 = -16385;
}

uint64_t sub_1A5510F84(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  __int16 v11;
  char isUniquelyReferenced_nonNull_native;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  int64_t v29;
  void (*v30)(_WORD *@<X8>);
  int64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  int64_t v35;
  unint64_t v36;
  int64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  unint64_t v43;
  uint64_t v44;
  _BOOL8 v45;
  uint64_t v46;
  char v47;
  unint64_t v48;
  char v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  uint64_t result;

  v3 = (_QWORD *)sub_1A558AD04(MEMORY[0x1E0DEE9D8]);
  v4 = *(_QWORD *)(a2 + 16);
  if (v4)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v5 = 0;
    v6 = (uint64_t *)(a2 + 40);
    while (1)
    {
      v7 = *(v6 - 1);
      v8 = *v6;
      if ((unsigned __int16)v5 >= 0x3FFFu)
        v9 = 0x3FFF;
      else
        v9 = v5;
      if (v3[2])
      {
        sub_1A54FDC94(*(v6 - 1), *v6);
        if ((v10 & 1) != 0)
          goto LABEL_5;
      }
      if (v5 >> 16)
        v11 = -16385;
      else
        v11 = v9 | 0x8000;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v14 = sub_1A54FDC94(v7, v8);
      v15 = v3[2];
      v16 = (v13 & 1) == 0;
      v17 = v15 + v16;
      if (__OFADD__(v15, v16))
        goto LABEL_63;
      v18 = v13;
      if (v3[3] >= v17)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          if ((v13 & 1) == 0)
            goto LABEL_21;
        }
        else
        {
          sub_1A554EF7C();
          if ((v18 & 1) == 0)
            goto LABEL_21;
        }
      }
      else
      {
        sub_1A5580C80(v17, isUniquelyReferenced_nonNull_native);
        v19 = sub_1A54FDC94(v7, v8);
        if ((v18 & 1) != (v20 & 1))
          goto LABEL_66;
        v14 = v19;
        if ((v18 & 1) == 0)
        {
LABEL_21:
          v3[(v14 >> 6) + 8] |= 1 << v14;
          v21 = (uint64_t *)(v3[6] + 16 * v14);
          *v21 = v7;
          v21[1] = v8;
          *(_WORD *)(v3[7] + 2 * v14) = v11;
          v22 = v3[2];
          v23 = __OFADD__(v22, 1);
          v24 = v22 + 1;
          if (v23)
            goto LABEL_64;
          v3[2] = v24;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_4;
        }
      }
      *(_WORD *)(v3[7] + 2 * v14) = v11;
LABEL_4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_5:
      ++v5;
      v6 += 2;
      if (v4 == v5)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  v25 = a1 + 56;
  v26 = 1 << *(_BYTE *)(a1 + 32);
  v27 = -1;
  if (v26 < 64)
    v27 = ~(-1 << v26);
  v28 = v27 & *(_QWORD *)(a1 + 56);
  v29 = (unint64_t)(v26 + 63) >> 6;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v30 = 0;
  v31 = 0;
  while (1)
  {
    if (v28)
    {
      v33 = __clz(__rbit64(v28));
      v28 &= v28 - 1;
      v34 = v33 | (v31 << 6);
    }
    else
    {
      v35 = v31 + 1;
      if (__OFADD__(v31, 1))
        goto LABEL_62;
      if (v35 >= v29)
      {
LABEL_59:
        swift_release();
        sub_1A55113D8((uint64_t)v30);
        return (uint64_t)v3;
      }
      v36 = *(_QWORD *)(v25 + 8 * v35);
      ++v31;
      if (!v36)
      {
        v31 = v35 + 1;
        if (v35 + 1 >= v29)
          goto LABEL_59;
        v36 = *(_QWORD *)(v25 + 8 * v31);
        if (!v36)
        {
          v31 = v35 + 2;
          if (v35 + 2 >= v29)
            goto LABEL_59;
          v36 = *(_QWORD *)(v25 + 8 * v31);
          if (!v36)
          {
            v37 = v35 + 3;
            if (v37 >= v29)
              goto LABEL_59;
            v36 = *(_QWORD *)(v25 + 8 * v37);
            if (!v36)
            {
              while (1)
              {
                v31 = v37 + 1;
                if (__OFADD__(v37, 1))
                  goto LABEL_65;
                if (v31 >= v29)
                  goto LABEL_59;
                v36 = *(_QWORD *)(v25 + 8 * v31);
                ++v37;
                if (v36)
                  goto LABEL_46;
              }
            }
            v31 = v37;
          }
        }
      }
LABEL_46:
      v28 = (v36 - 1) & v36;
      v34 = __clz(__rbit64(v36)) + (v31 << 6);
    }
    v38 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v34);
    v39 = *v38;
    v40 = v38[1];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A55113D8((uint64_t)v30);
    v41 = swift_isUniquelyReferenced_nonNull_native();
    v43 = sub_1A54FDC94(v39, v40);
    v44 = v3[2];
    v45 = (v42 & 1) == 0;
    v46 = v44 + v45;
    if (__OFADD__(v44, v45))
      break;
    v47 = v42;
    if (v3[3] >= v46)
    {
      if ((v41 & 1) == 0)
        sub_1A554EF7C();
    }
    else
    {
      sub_1A5580C80(v46, v41);
      v48 = sub_1A54FDC94(v39, v40);
      if ((v47 & 1) != (v49 & 1))
        goto LABEL_66;
      v43 = v48;
    }
    swift_bridgeObjectRelease();
    if ((v47 & 1) == 0)
    {
      v3[(v43 >> 6) + 8] |= 1 << v43;
      v50 = (uint64_t *)(v3[6] + 16 * v43);
      *v50 = v39;
      v50[1] = v40;
      *(_WORD *)(v3[7] + 2 * v43) = -16385;
      v51 = v3[2];
      v52 = v51 + 1;
      v53 = __OFADD__(v51, 1);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      if (v53)
        goto LABEL_61;
      v3[2] = v52;
    }
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v32 = v3[7];
    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 2 * v43) &= ~0x8000u;
    swift_bridgeObjectRelease();
    v30 = sub_1A5510F78;
  }
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  result = sub_1A594CDF8();
  __break(1u);
  return result;
}

uint64_t sub_1A55113D8(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

ValueMetadata *_s12PriorityInfoV5OrderVMa()
{
  return &_s12PriorityInfoV5OrderVN;
}

ValueMetadata *_s12PriorityInfoVMa()
{
  return &_s12PriorityInfoVN;
}

unint64_t sub_1A551140C()
{
  unint64_t result;

  result = qword_1EE7A86F8;
  if (!qword_1EE7A86F8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A3E08, &_s12PriorityInfoV5OrderVN);
    atomic_store(result, (unint64_t *)&qword_1EE7A86F8);
  }
  return result;
}

uint64_t sub_1A5511458()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  uint64_t i;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;

  result = MEMORY[0x1E0DEE9E8];
  if (*(_BYTE *)(v0 + 24) == 1)
  {
    v2 = *(_QWORD *)v0;
    v3 = *(_QWORD *)(v0 + 8);
    v4 = *(_QWORD *)(v0 + 16);
    v30 = MEMORY[0x1E0DEE9E8];
    v5 = *(_QWORD *)(v2 + 16);
    if (v5)
    {
      v6 = (__int128 *)(v2 + 32);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      for (i = v5 - 1; ; --i)
      {
        v8 = *v6;
        v9 = v6[2];
        v20 = v6[1];
        v21 = v9;
        v19 = v8;
        v10 = v6[3];
        v11 = v6[4];
        v12 = v6[6];
        v24 = v6[5];
        v25 = v12;
        v22 = v10;
        v23 = v11;
        v13 = v6[7];
        v14 = v6[8];
        v15 = v6[10];
        v28 = v6[9];
        v29 = v15;
        v26 = v13;
        v27 = v14;
        if (*(_QWORD *)(v28 + 16))
        {
          v16 = v20;
          v17 = DWORD2(v20);
          sub_1A54E3150((uint64_t)&v19);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A54F2A14((uint64_t)&v18, v16, v17);
          swift_bridgeObjectRelease();
          sub_1A54E31EC((uint64_t)&v19);
        }
        if (!i)
          break;
        v6 += 11;
      }
      sub_1A54E8FCC(v2, v3, v4, 1);
      return v30;
    }
  }
  return result;
}

uint64_t sub_1A5511570()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  uint64_t i;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;

  result = MEMORY[0x1E0DEE9E8];
  if (*(_BYTE *)(v0 + 24) == 1)
  {
    v2 = *(_QWORD *)v0;
    v3 = *(_QWORD *)(v0 + 8);
    v4 = *(_QWORD *)(v0 + 16);
    v30 = MEMORY[0x1E0DEE9E8];
    v5 = *(_QWORD *)(v2 + 16);
    if (v5)
    {
      v6 = (__int128 *)(v2 + 32);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      for (i = v5 - 1; ; --i)
      {
        v8 = *v6;
        v9 = v6[2];
        v20 = v6[1];
        v21 = v9;
        v19 = v8;
        v10 = v6[3];
        v11 = v6[4];
        v12 = v6[6];
        v24 = v6[5];
        v25 = v12;
        v22 = v10;
        v23 = v11;
        v13 = v6[7];
        v14 = v6[8];
        v15 = v6[10];
        v28 = v6[9];
        v29 = v15;
        v26 = v13;
        v27 = v14;
        if (*(_QWORD *)(*((_QWORD *)&v28 + 1) + 16))
        {
          v16 = v20;
          v17 = DWORD2(v20);
          sub_1A54E3150((uint64_t)&v19);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A54F2A14((uint64_t)&v18, v16, v17);
          swift_bridgeObjectRelease();
          sub_1A54E31EC((uint64_t)&v19);
        }
        if (!i)
          break;
        v6 += 11;
      }
      sub_1A54E8FCC(v2, v3, v4, 1);
      return v30;
    }
  }
  return result;
}

uint64_t sub_1A5511688(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  int v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v24 = *(_QWORD *)(a1 + 16);
  v25 = MEMORY[0x1E0DEE9D8];
  sub_1A54F4CF0(0, v1, 0);
  v2 = v25;
  result = sub_1A5520CE4(a1);
  v6 = result;
  v7 = v24;
  v8 = 0;
  v9 = a1 + 64;
  v10 = a1 + 80;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v12 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v9 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v5)
      goto LABEL_24;
    v13 = *(_DWORD *)(*(_QWORD *)(a1 + 48) + 4 * v6);
    v15 = *(_QWORD *)(v25 + 16);
    v14 = *(_QWORD *)(v25 + 24);
    if (v15 >= v14 >> 1)
    {
      v22 = v9;
      v23 = v5;
      v21 = v10;
      result = sub_1A54F4CF0(v14 > 1, v15 + 1, 1);
      v10 = v21;
      v9 = v22;
      v5 = v23;
      v7 = v24;
    }
    *(_QWORD *)(v25 + 16) = v15 + 1;
    *(_DWORD *)(v25 + 4 * v15 + 32) = v13;
    v11 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v11)
      goto LABEL_25;
    v16 = *(_QWORD *)(v9 + 8 * v12);
    if ((v16 & (1 << v6)) == 0)
      goto LABEL_26;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v5)
      goto LABEL_27;
    v17 = v16 & (-2 << (v6 & 0x3F));
    if (v17)
    {
      v11 = __clz(__rbit64(v17)) | v6 & 0xFFFFFFFFFFFFFFC0;
    }
    else
    {
      v18 = v12 + 1;
      v19 = (unint64_t)(v11 + 63) >> 6;
      if (v12 + 1 < v19)
      {
        v20 = *(_QWORD *)(v9 + 8 * v18);
        if (v20)
        {
LABEL_20:
          v11 = __clz(__rbit64(v20)) + (v18 << 6);
        }
        else
        {
          while (v19 - 2 != v12)
          {
            v20 = *(_QWORD *)(v10 + 8 * v12++);
            if (v20)
            {
              v18 = v12 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v8;
    v6 = v11;
    if (v8 == v7)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1A551187C(uint64_t a1)
{
  int64_t v2;
  uint64_t result;
  int *v4;
  int v5;
  int v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1A54F4D0C(0, v2, 0);
    result = v9;
    v4 = (int *)(a1 + 32);
    do
    {
      v6 = *v4;
      v4 += 6;
      v5 = v6;
      v10 = result;
      v8 = *(_QWORD *)(result + 16);
      v7 = *(_QWORD *)(result + 24);
      if (v8 >= v7 >> 1)
      {
        sub_1A54F4D0C(v7 > 1, v8 + 1, 1);
        result = v10;
      }
      *(_QWORD *)(result + 16) = v8 + 1;
      *(_DWORD *)(result + 4 * v8 + 32) = v5;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_1A5511938(uint64_t a1)
{
  return sub_1A5511C08(a1, (uint64_t (*)(_BYTE *, _QWORD))sub_1A54F305C);
}

uint64_t sub_1A5511944(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;

  v1 = result;
  v2 = 0;
  v3 = result + 64;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    v13 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v7)
      return swift_release();
    v14 = *(_QWORD *)(v3 + 8 * v13);
    ++v2;
    if (!v14)
    {
      v2 = v13 + 1;
      if (v13 + 1 >= v7)
        return swift_release();
      v14 = *(_QWORD *)(v3 + 8 * v2);
      if (!v14)
      {
        v2 = v13 + 2;
        if (v13 + 2 >= v7)
          return swift_release();
        v14 = *(_QWORD *)(v3 + 8 * v2);
        if (!v14)
        {
          v2 = v13 + 3;
          if (v13 + 3 >= v7)
            return swift_release();
          v14 = *(_QWORD *)(v3 + 8 * v2);
          if (!v14)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v14 - 1) & v14;
    v9 = __clz(__rbit64(v14)) + (v2 << 6);
LABEL_5:
    v10 = *(_QWORD *)(v1 + 48) + 16 * v9;
    v11 = *(_QWORD *)v10;
    v12 = *(_DWORD *)(v10 + 8);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54F2A14((uint64_t)&v16, v11, v12);
    result = swift_bridgeObjectRelease();
  }
  v15 = v13 + 4;
  if (v15 >= v7)
    return swift_release();
  v14 = *(_QWORD *)(v3 + 8 * v15);
  if (v14)
  {
    v2 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v2 >= v7)
      return swift_release();
    v14 = *(_QWORD *)(v3 + 8 * v2);
    ++v15;
    if (v14)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1A5511AB4(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  char v13;

  v1 = result;
  v2 = 0;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v10 >= v7)
      return swift_release();
    v11 = *(_QWORD *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      v2 = v10 + 1;
      if (v10 + 1 >= v7)
        return swift_release();
      v11 = *(_QWORD *)(v3 + 8 * v2);
      if (!v11)
      {
        v2 = v10 + 2;
        if (v10 + 2 >= v7)
          return swift_release();
        v11 = *(_QWORD *)(v3 + 8 * v2);
        if (!v11)
        {
          v2 = v10 + 3;
          if (v10 + 3 >= v7)
            return swift_release();
          v11 = *(_QWORD *)(v3 + 8 * v2);
          if (!v11)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    result = sub_1A54F3290(&v13, *(unsigned __int8 *)(*(_QWORD *)(v1 + 48) + v9));
  }
  v12 = v10 + 4;
  if (v12 >= v7)
    return swift_release();
  v11 = *(_QWORD *)(v3 + 8 * v12);
  if (v11)
  {
    v2 = v12;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v2 >= v7)
      return swift_release();
    v11 = *(_QWORD *)(v3 + 8 * v2);
    ++v12;
    if (v11)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1A5511BFC(uint64_t a1)
{
  return sub_1A5511C08(a1, (uint64_t (*)(_BYTE *, _QWORD))sub_1A54F4560);
}

uint64_t sub_1A5511C08(uint64_t result, uint64_t (*a2)(_BYTE *, _QWORD))
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  _BYTE v15[4];

  v3 = result;
  v4 = 0;
  v5 = result + 56;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_5;
    }
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v12 >= v9)
      return swift_release();
    v13 = *(_QWORD *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v9)
        return swift_release();
      v13 = *(_QWORD *)(v5 + 8 * v4);
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v9)
          return swift_release();
        v13 = *(_QWORD *)(v5 + 8 * v4);
        if (!v13)
        {
          v4 = v12 + 3;
          if (v12 + 3 >= v9)
            return swift_release();
          v13 = *(_QWORD *)(v5 + 8 * v4);
          if (!v13)
            break;
        }
      }
    }
LABEL_22:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_5:
    result = a2(v15, *(unsigned int *)(*(_QWORD *)(v3 + 48) + 4 * v11));
  }
  v14 = v12 + 4;
  if (v14 >= v9)
    return swift_release();
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      return swift_release();
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1A5511D5C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  uint64_t (*v18)(_BYTE *, _QWORD);
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE __src[456];
  _BYTE v26[40];
  int64_t v27;

  v4 = a1;
  v5 = a1 + 56;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 56);
  v27 = (unint64_t)(v6 + 63) >> 6;
  result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v10 = 0;
  v24 = result;
  while (1)
  {
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_24;
    }
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v13 >= v27)
      return swift_release();
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v10;
    if (!v14)
    {
      v10 = v13 + 1;
      if (v13 + 1 >= v27)
        return swift_release();
      v14 = *(_QWORD *)(v5 + 8 * v10);
      if (!v14)
      {
        v10 = v13 + 2;
        if (v13 + 2 >= v27)
          return swift_release();
        v14 = *(_QWORD *)(v5 + 8 * v10);
        if (!v14)
        {
          v10 = v13 + 3;
          if (v13 + 3 >= v27)
            return swift_release();
          v14 = *(_QWORD *)(v5 + 8 * v10);
          if (!v14)
            break;
        }
      }
    }
LABEL_23:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v10 << 6);
LABEL_24:
    v16 = *(_BYTE *)(*(_QWORD *)(v4 + 48) + v12);
    v18 = (uint64_t (*)(_BYTE *, _QWORD))sub_1A5544C78((uint64_t)v26, a3);
    if (*(_QWORD *)(v17 + 96))
    {
      v19 = v17;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v20 = a3;
        v21 = *(_QWORD *)(v19 + 96);
        v22 = v5;
        swift_beginAccess();
        sub_1A5502F44(v21 + 16, (uint64_t)__src);
        _s13SelectedStateV8_StorageCMa();
        v23 = swift_allocObject();
        memcpy((void *)(v23 + 16), __src, 0x1C5uLL);
        *(_QWORD *)(v19 + 96) = v23;
        v5 = v22;
        a3 = v20;
        v4 = v24;
        swift_release();
      }
      swift_beginAccess();
      sub_1A554B85C(v16);
      swift_endAccess();
    }
    result = v18(v26, 0);
  }
  v15 = v13 + 4;
  if (v15 >= v27)
    return swift_release();
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
  {
    v10 = v15;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v27)
      return swift_release();
    v14 = *(_QWORD *)(v5 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_23;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1A5511FB8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char isUniquelyReferenced_native;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  _OWORD *v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t result;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  int64_t v60;
  uint64_t v61;
  _OWORD v62[6];
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  unsigned int v68;

  v3 = a1;
  v59 = a1 + 64;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v60 = (unint64_t)(v4 + 63) >> 6;
  v57 = a2 + 1;
  v7 = 0;
  v58 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  while (v6)
  {
    v8 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    v9 = v8 | (v7 << 6);
LABEL_23:
    v13 = *(_QWORD *)(v3 + 48) + 16 * v9;
    v14 = *(_QWORD *)v13;
    v15 = *(_DWORD *)(v13 + 8);
    v16 = a2[1];
    v17 = v16 + 32;
    v18 = *(_QWORD *)(v16 + 16);
    if (*a2)
    {
      v19 = sub_1A557FFE0(v14, v15, v17, v18, (_QWORD *)(*a2 + 16));
      if ((v21 & 1) == 0)
      {
        v22 = v19;
        v23 = v20;
        v68 = v15;
        goto LABEL_28;
      }
    }
    else
    {
      v24 = sub_1A557FEEC(v14, v15, v17, v18);
      if ((v25 & 1) == 0)
      {
        v22 = v24;
        v68 = v15;
        v23 = 0;
LABEL_28:
        v27 = *a2;
        v26 = a2[1];
        v28 = *(_QWORD *)(v26 + 16);
        if (*a2)
        {
          swift_beginAccess();
          if ((*(_QWORD *)(v27 + 16) & 0x3FLL) == (*(_QWORD *)(v27 + 24) & 0x3FLL))
          {
            if (!v28)
              goto LABEL_46;
            goto LABEL_39;
          }
          if (v28 > sub_1A594A428())
          {
LABEL_39:
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            isUniquelyReferenced_native = swift_isUniquelyReferenced_native();
            v33 = *a2;
            if ((isUniquelyReferenced_native & 1) == 0)
            {
              if (!v33)
                goto LABEL_75;
              v33 = sub_1A594A434();
              swift_release();
              *a2 = v33;
            }
            if (!v33)
              goto LABEL_74;
            sub_1A555C3B0(v23, (_QWORD *)(v33 + 16), v33 + 32, (uint64_t)a2);
            v34 = v22 + 1;
            if (__OFADD__(v22, 1))
              goto LABEL_70;
            if (v34 < (uint64_t)v22)
              goto LABEL_71;
            sub_1A555C568(v22, v34, a2[1], (_QWORD *)(v33 + 16));
            sub_1A555BC34(v22);
            goto LABEL_60;
          }
LABEL_46:
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v26 = sub_1A555C0B4(v26);
          v35 = *(_QWORD *)(v26 + 16);
          if (v22 >= v35)
            goto LABEL_69;
          v36 = v35 - 1;
          v37 = v35 - 1 - v22;
          if (v37 < 0)
            goto LABEL_76;
          memmove((void *)(v26 + 16 * v22 + 32), (const void *)(v26 + 16 * v22 + 48), 16 * v37);
          *(_QWORD *)(v26 + 16) = v36;
          a2[1] = v26;
          v38 = *a2;
          if (*a2)
          {
            swift_beginAccess();
            v39 = *(_QWORD *)(v38 + 24) & 0x3FLL;
            v40 = *(_QWORD *)(v26 + 16);
            if (v39)
            {
LABEL_56:
              v41 = MEMORY[0x1A85AC8B8](v40);
              if (v39 <= v41)
                v42 = v41;
              else
                v42 = v39;
              v43 = sub_1A555B6A8(v26, v42, 0, v39);
              swift_release();
              *a2 = v43;
              goto LABEL_60;
            }
          }
          else
          {
            v39 = 0;
            v40 = *(_QWORD *)(v26 + 16);
          }
          if (v40 < 0x10)
          {
            swift_release();
            *a2 = 0;
            goto LABEL_60;
          }
          goto LABEL_56;
        }
        if (!v28)
          goto LABEL_46;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v26 = sub_1A555C0B4(v26);
        v29 = *(_QWORD *)(v26 + 16);
        if (v22 >= v29)
          goto LABEL_72;
        v30 = v29 - 1;
        v31 = v29 - 1 - v22;
        if (v31 < 0)
          goto LABEL_76;
        memmove((void *)(v26 + 16 * v22 + 32), (const void *)(v26 + 16 * v22 + 48), 16 * v31);
        *(_QWORD *)(v26 + 16) = v30;
        *v57 = v26;
LABEL_60:
        swift_bridgeObjectRelease();
        v44 = a2[2];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v44 = sub_1A555C194(v44);
        v45 = *(_QWORD *)(v44 + 16);
        if (v22 >= v45)
        {
          __break(1u);
LABEL_68:
          __break(1u);
LABEL_69:
          __break(1u);
LABEL_70:
          __break(1u);
LABEL_71:
          __break(1u);
LABEL_72:
          __break(1u);
          goto LABEL_73;
        }
        v46 = v45 - 1;
        v47 = (_OWORD *)(v44 + 176 * v22);
        v48 = v47[2];
        v49 = v47[4];
        v62[1] = v47[3];
        v62[2] = v49;
        v62[0] = v48;
        v50 = v47[5];
        v51 = v47[6];
        v52 = v47[8];
        v62[5] = v47[7];
        v63 = v52;
        v62[3] = v50;
        v62[4] = v51;
        v53 = v47[9];
        v54 = v47[10];
        v55 = v47[12];
        v66 = v47[11];
        v67 = v55;
        v64 = v53;
        v65 = v54;
        if ((uint64_t)(v46 - v22) < 0)
          goto LABEL_76;
        memmove(v47 + 2, v47 + 13, 176 * (v46 - v22));
        *(_QWORD *)(v44 + 16) = v46;
        a2[2] = v44;
        sub_1A54E31EC((uint64_t)v62);
        if ((_QWORD)v63)
        {
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A54F2A14((uint64_t)&v61, v14, v68);
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        v3 = v58;
      }
    }
  }
  v10 = v7 + 1;
  if (__OFADD__(v7, 1))
    goto LABEL_68;
  if (v10 >= v60)
    return swift_release();
  v11 = *(_QWORD *)(v59 + 8 * v10);
  ++v7;
  if (v11)
    goto LABEL_22;
  v7 = v10 + 1;
  if (v10 + 1 >= v60)
    return swift_release();
  v11 = *(_QWORD *)(v59 + 8 * v7);
  if (v11)
    goto LABEL_22;
  v7 = v10 + 2;
  if (v10 + 2 >= v60)
    return swift_release();
  v11 = *(_QWORD *)(v59 + 8 * v7);
  if (v11)
    goto LABEL_22;
  v7 = v10 + 3;
  if (v10 + 3 >= v60)
    return swift_release();
  v11 = *(_QWORD *)(v59 + 8 * v7);
  if (v11)
  {
LABEL_22:
    v6 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v7 << 6);
    goto LABEL_23;
  }
  v12 = v10 + 4;
  if (v12 >= v60)
    return swift_release();
  v11 = *(_QWORD *)(v59 + 8 * v12);
  if (v11)
  {
    v7 = v12;
    goto LABEL_22;
  }
  while (1)
  {
    v7 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v7 >= v60)
      return swift_release();
    v11 = *(_QWORD *)(v59 + 8 * v7);
    ++v12;
    if (v11)
      goto LABEL_22;
  }
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5512504(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)a2;
  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
      return sub_1A553639C(v4, v5);
  }
  else if ((*(_BYTE *)(a2 + 24) & 1) == 0)
  {
    v8 = *(_QWORD *)(a2 + 8);
    v7 = *(_QWORD *)(a2 + 16);
    v10 = *(_QWORD *)(a1 + 8);
    v9 = *(_QWORD *)(a1 + 16);
    if ((sub_1A54FAAEC(v4, v5) & 1) != 0 && (sub_1A5536178(v10, v8) & 1) != 0)
      return sub_1A55362D4(v9, v7);
  }
  return 0;
}

BOOL sub_1A5512594(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[3];
  _OWORD v8[2];
  _OWORD v9[3];
  _OWORD v10[2];

  v2 = a1[3];
  v7[2] = a1[2];
  v8[0] = v2;
  *(_OWORD *)((char *)v8 + 12) = *(_OWORD *)((char *)a1 + 60);
  v3 = a1[1];
  v7[0] = *a1;
  v7[1] = v3;
  v4 = a2[3];
  v9[2] = a2[2];
  v10[0] = v4;
  *(_OWORD *)((char *)v10 + 12) = *(_OWORD *)((char *)a2 + 60);
  v5 = a2[1];
  v9[0] = *a2;
  v9[1] = v5;
  return sub_1A5521174((uint64_t)v7, (uint64_t)v9);
}

unint64_t sub_1A55125EC()
{
  return sub_1A55125FC(1);
}

unint64_t sub_1A55125F4()
{
  return sub_1A55125FC(2);
}

unint64_t sub_1A55125FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _OWORD *v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  __int128 *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  char v21;
  unint64_t v22;
  uint64_t v23;
  _BOOL8 v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  unint64_t result;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;

  if (*(_BYTE *)(v1 + 24) != 1)
    return sub_1A558B058(MEMORY[0x1E0DEE9D8]);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  if (!v3)
    return MEMORY[0x1E0DEE9E0];
  v44 = *(_QWORD *)(v1 + 16);
  v45 = *(_QWORD *)(v1 + 8);
  v4 = (_OWORD *)_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v5 = v4[10];
  v55 = v4[9];
  v6 = v4[11];
  v7 = v4[12];
  v56 = v5;
  v57 = v6;
  v58 = v7;
  v8 = v4[6];
  v51 = v4[5];
  v52 = v8;
  v9 = v4[8];
  v53 = v4[7];
  v54 = v9;
  v10 = v4[3];
  v48 = v4[2];
  v49 = v10;
  v50 = v4[4];
  v12 = *((_QWORD *)&v48 + 1);
  v11 = v10;
  v47 = DWORD2(v10);
  v46 = (uint64_t)v4;
  v13 = v4 + 13;
  v14 = v3 - 1;
  v15 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  while (1)
  {
    v16 = v53;
    v17 = v48;
    v18 = *((_QWORD *)&v52 + 1);
    sub_1A54E3150((uint64_t)&v48);
    if ((static MailboxOfInterest.LocalModification.__derived_enum_equals(_:_:)(v18, v16, a1, 0) & 1) == 0)
    {
      sub_1A54E31EC((uint64_t)&v48);
      if (!v14)
        goto LABEL_21;
      goto LABEL_19;
    }
    v19 = a1;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v22 = sub_1A54FDC94(v17, v12);
    v23 = v15[2];
    v24 = (v21 & 1) == 0;
    v25 = v23 + v24;
    if (__OFADD__(v23, v24))
      break;
    v26 = v21;
    if (v15[3] >= v25)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v21 & 1) == 0)
          goto LABEL_16;
      }
      else
      {
        sub_1A554F128();
        if ((v26 & 1) == 0)
          goto LABEL_16;
      }
    }
    else
    {
      sub_1A5580F64(v25, isUniquelyReferenced_nonNull_native);
      v27 = sub_1A54FDC94(v17, v12);
      if ((v26 & 1) != (v28 & 1))
        goto LABEL_26;
      v22 = v27;
      if ((v26 & 1) == 0)
      {
LABEL_16:
        v15[(v22 >> 6) + 8] |= 1 << v22;
        v30 = (uint64_t *)(v15[6] + 16 * v22);
        *v30 = v17;
        v30[1] = v12;
        v31 = v15[7] + 16 * v22;
        *(_QWORD *)v31 = v11;
        *(_DWORD *)(v31 + 8) = v47;
        v32 = v15[2];
        v33 = __OFADD__(v32, 1);
        v34 = v32 + 1;
        if (v33)
          goto LABEL_25;
        v15[2] = v34;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_18;
      }
    }
    v29 = v15[7] + 16 * v22;
    swift_bridgeObjectRelease();
    *(_QWORD *)v29 = v11;
    *(_DWORD *)(v29 + 8) = v47;
LABEL_18:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A54E31EC((uint64_t)&v48);
    a1 = v19;
    if (!v14)
    {
LABEL_21:
      sub_1A54E8FCC(v46, v45, v44, 1);
      return (unint64_t)v15;
    }
LABEL_19:
    v35 = *v13;
    v36 = v13[2];
    v49 = v13[1];
    v50 = v36;
    v48 = v35;
    v37 = v13[3];
    v38 = v13[4];
    v39 = v13[6];
    v53 = v13[5];
    v54 = v39;
    v51 = v37;
    v52 = v38;
    v40 = v13[7];
    v41 = v13[8];
    v42 = v13[10];
    v57 = v13[9];
    v58 = v42;
    v56 = v41;
    v55 = v40;
    v12 = *((_QWORD *)&v48 + 1);
    v11 = v49;
    v47 = DWORD2(v49);
    v13 += 11;
    --v14;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  result = sub_1A594CDF8();
  __break(1u);
  return result;
}

unint64_t sub_1A55128F4()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD *v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  __int128 *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  char isUniquelyReferenced_nonNull_native;
  char v25;
  unint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  unint64_t result;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;

  if (*(_BYTE *)(v0 + 24) != 1)
    return sub_1A558B194(MEMORY[0x1E0DEE9D8]);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  v48 = *(_QWORD *)(v0 + 16);
  v49 = *(_QWORD *)(v0 + 8);
  v2 = (_OWORD *)_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v3 = v2[10];
  v60 = v2[9];
  v4 = v2[11];
  v5 = v2[12];
  v61 = v3;
  v62 = v4;
  v63 = v5;
  v6 = v2[6];
  v56 = v2[5];
  v57 = v6;
  v7 = v2[8];
  v58 = v2[7];
  v59 = v7;
  v8 = v2[3];
  v53 = v2[2];
  v54 = v8;
  v55 = v2[4];
  v9 = v8;
  v52 = *((_QWORD *)&v53 + 1);
  v10 = DWORD2(v8);
  v11 = *((_QWORD *)&v57 + 1);
  v12 = v58;
  v50 = (uint64_t)v2;
  v13 = v2 + 13;
  v14 = v1 - 1;
  v15 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  if (*((_QWORD *)&v57 + 1) < 3uLL)
    goto LABEL_16;
LABEL_4:
  v51 = v14;
  v16 = v53;
  v17 = MailboxToRename.init(mailbox:newName:)(v11, v12, v9, v10);
  v19 = v18;
  v21 = v20;
  v23 = v22;
  sub_1A54E3150((uint64_t)&v53);
  sub_1A54E31DC(v11);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v26 = sub_1A54FDC94(v16, v52);
  v27 = v15[2];
  v28 = (v25 & 1) == 0;
  v29 = v27 + v28;
  if (__OFADD__(v27, v28))
  {
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v30 = v25;
  if (v15[3] >= v29)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      if ((v25 & 1) == 0)
        goto LABEL_13;
    }
    else
    {
      sub_1A554F49C();
      if ((v30 & 1) == 0)
        goto LABEL_13;
    }
    goto LABEL_11;
  }
  sub_1A5581554(v29, isUniquelyReferenced_nonNull_native);
  v31 = sub_1A54FDC94(v16, v52);
  if ((v30 & 1) == (v32 & 1))
  {
    v26 = v31;
    if ((v30 & 1) == 0)
    {
LABEL_13:
      v15[(v26 >> 6) + 8] |= 1 << v26;
      v34 = (uint64_t *)(v15[6] + 16 * v26);
      *v34 = v16;
      v34[1] = v52;
      v35 = v15[7] + 32 * v26;
      *(_QWORD *)v35 = v17;
      *(_DWORD *)(v35 + 8) = v19;
      *(_QWORD *)(v35 + 16) = v21;
      *(_DWORD *)(v35 + 24) = v23;
      v36 = v15[2];
      v37 = __OFADD__(v36, 1);
      v38 = v36 + 1;
      if (!v37)
      {
        v15[2] = v38;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_15:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A54E31EC((uint64_t)&v53);
        v14 = v51;
LABEL_16:
        while (v14)
        {
          v39 = *v13;
          v40 = v13[2];
          v54 = v13[1];
          v55 = v40;
          v53 = v39;
          v41 = v13[3];
          v42 = v13[4];
          v43 = v13[6];
          v58 = v13[5];
          v59 = v43;
          v56 = v41;
          v57 = v42;
          v44 = v13[7];
          v45 = v13[8];
          v46 = v13[10];
          v62 = v13[9];
          v63 = v46;
          v61 = v45;
          v60 = v44;
          v9 = v54;
          v52 = *((_QWORD *)&v53 + 1);
          v10 = DWORD2(v54);
          v11 = *((_QWORD *)&v57 + 1);
          v12 = v58;
          v13 += 11;
          --v14;
          if (*((_QWORD *)&v57 + 1) >= 3uLL)
            goto LABEL_4;
        }
        sub_1A54E8FCC(v50, v49, v48, 1);
        return (unint64_t)v15;
      }
      goto LABEL_24;
    }
LABEL_11:
    v33 = v15[7] + 32 * v26;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)v33 = v17;
    *(_DWORD *)(v33 + 8) = v19;
    *(_QWORD *)(v33 + 16) = v21;
    *(_DWORD *)(v33 + 24) = v23;
    goto LABEL_15;
  }
LABEL_25:
  result = sub_1A594CDF8();
  __break(1u);
  return result;
}

uint64_t sub_1A5512C14(uint64_t a1, unsigned int a2, void (*a3)(uint64_t *__return_ptr, _QWORD *))
{
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t result;
  _QWORD *v12;
  uint64_t v13;

  if (*(_BYTE *)(v3 + 24) == 1)
  {
    v5 = *(_QWORD **)v3;
    v6 = *(_QWORD *)(v3 + 8);
    v7 = *(_QWORD *)(v3 + 16);
    v8 = sub_1A5521D48(*(_QWORD *)v3, a1, a2);
    if ((v9 & 1) == 0)
    {
      v10 = v8;
      sub_1A55212D0((uint64_t)v5, v6, v7, 1);
      result = swift_isUniquelyReferenced_nonNull_native();
      v12 = v5;
      if ((result & 1) != 0)
      {
        if ((v10 & 0x8000000000000000) == 0)
          goto LABEL_5;
      }
      else
      {
        result = (uint64_t)sub_1A554B6F8(v5);
        v12 = (_QWORD *)result;
        if ((v10 & 0x8000000000000000) == 0)
        {
LABEL_5:
          if (v10 < v12[2])
          {
            a3(&v13, &v12[22 * v10 + 4]);
            sub_1A54E8FCC((uint64_t)v5, v6, v7, 1);
            result = 0;
            *(_QWORD *)v3 = v12;
            *(_QWORD *)(v3 + 8) = 0;
            *(_QWORD *)(v3 + 16) = 0;
            *(_BYTE *)(v3 + 24) = 1;
            return result;
          }
          goto LABEL_11;
        }
      }
      __break(1u);
LABEL_11:
      __break(1u);
      return result;
    }
  }
  return 1;
}

_OWORD *sub_1A5512D28(uint64_t a1, uint64_t a2, __int128 *a3)
{
  _OWORD *result;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  unsigned __int8 *v13;
  uint64_t v14;
  unsigned __int8 *v15;
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23[2];
  __int128 v24;
  char v25;

  sub_1A55212B8(a3, v23);
  result = sub_1A55212B8(v23, &v24);
  if (v25 != 1 || (v6 = *(_QWORD *)(v24 + 16)) == 0)
  {
LABEL_24:
    v19 = 0;
    v20 = 1;
LABEL_25:
    LOBYTE(v24) = v20;
    return (_OWORD *)(v19 | ((unint64_t)v20 << 40));
  }
  v7 = 0;
  v8 = v24 + 32;
  while (1)
  {
    v9 = (uint64_t *)(v8 + 176 * v7);
    if (v9[1] == a2)
    {
      v10 = *v9;
      v11 = *(_QWORD *)(v10 + 16);
      if (v11 == *(_QWORD *)(a1 + 16))
      {
        if (v11)
          v12 = v10 == a1;
        else
          v12 = 1;
        if (v12)
          goto LABEL_26;
        if (*(unsigned __int8 *)(v10 + 32) == *(unsigned __int8 *)(a1 + 32))
        {
          if (v11 == 1)
            goto LABEL_26;
          if (*(unsigned __int8 *)(v10 + 33) == *(unsigned __int8 *)(a1 + 33))
          {
            if (v11 == 2)
              goto LABEL_26;
            if (*(unsigned __int8 *)(v10 + 34) == *(unsigned __int8 *)(a1 + 34))
            {
              if (v11 == 3)
                goto LABEL_26;
              if (*(unsigned __int8 *)(v10 + 35) == *(unsigned __int8 *)(a1 + 35))
              {
                if (v11 == 4)
                  goto LABEL_26;
                if (*(unsigned __int8 *)(v10 + 36) == *(unsigned __int8 *)(a1 + 36))
                  break;
              }
            }
          }
        }
      }
    }
LABEL_4:
    if (++v7 == v6)
      goto LABEL_24;
  }
  v13 = (unsigned __int8 *)(v10 + 37);
  v14 = v11 - 5;
  v15 = (unsigned __int8 *)(a1 + 37);
  while (v14)
  {
    v17 = *v13++;
    v16 = v17;
    v18 = *v15++;
    --v14;
    if (v16 != v18)
      goto LABEL_4;
  }
LABEL_26:
  if (v7 < v6)
  {
    v21 = *(_QWORD *)(v8 + 176 * v7 + 96);
    v19 = 0x100000000;
    if (v21)
    {
      swift_beginAccess();
      v20 = 0;
      if (*(_BYTE *)(v21 + 44))
        v22 = 0x100000000;
      else
        v22 = 0;
      v19 = v22 | *(unsigned int *)(v21 + 40);
    }
    else
    {
      v20 = 0;
    }
    goto LABEL_25;
  }
  __break(1u);
  return result;
}

_OWORD *sub_1A5512ED4(uint64_t a1, unsigned int a2, __int128 *a3)
{
  _OWORD *result;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v16;
  __int128 v17[2];
  __int128 v18;
  char v19;

  sub_1A55212B8(a3, v17);
  result = sub_1A55212B8(v17, &v18);
  if (v19 != 1)
    return 0;
  v6 = *(_QWORD *)(v18 + 16);
  if (!v6)
    return 0;
  v7 = 0;
  v8 = v18 + 32;
  while (1)
  {
    v9 = v8 + 176 * v7;
    if ((*(unsigned int *)(v9 + 24) | ((unint64_t)*(unsigned int *)(v9 + 24) << 32)) == (a2 | ((unint64_t)a2 << 32)))
    {
      v10 = *(_QWORD *)(v9 + 16);
      v11 = *(_QWORD *)(v10 + 16);
      if (v11 == *(_QWORD *)(a1 + 16))
      {
        if (!v11 || v10 == a1)
          goto LABEL_24;
        if (*(unsigned __int8 *)(v10 + 32) == *(unsigned __int8 *)(a1 + 32))
        {
          if (v11 == 1)
            goto LABEL_24;
          if (*(unsigned __int8 *)(v10 + 33) == *(unsigned __int8 *)(a1 + 33))
          {
            if (v11 == 2)
              goto LABEL_24;
            if (*(unsigned __int8 *)(v10 + 34) == *(unsigned __int8 *)(a1 + 34))
            {
              if (v11 == 3)
                goto LABEL_24;
              if (*(unsigned __int8 *)(v10 + 35) == *(unsigned __int8 *)(a1 + 35))
              {
                if (v11 == 4)
                  goto LABEL_24;
                if (*(unsigned __int8 *)(v10 + 36) == *(unsigned __int8 *)(a1 + 36))
                  break;
              }
            }
          }
        }
      }
    }
LABEL_4:
    if (++v7 == v6)
      return 0;
  }
  v12 = 0;
  v13 = v11 - 5;
  while (v13 != v12)
  {
    v14 = *(unsigned __int8 *)(v10 + v12 + 37);
    v15 = *(unsigned __int8 *)(a1 + 37 + v12++);
    if (v14 != v15)
      goto LABEL_4;
  }
LABEL_24:
  if (v7 < v6)
  {
    v16 = *(unsigned __int16 *)(v8 + 176 * v7 + 172);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return (_OWORD *)v16;
  }
  __break(1u);
  return result;
}

unint64_t sub_1A551306C(uint64_t a1, unsigned int a2, __int128 *a3)
{
  unint64_t result;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  unsigned __int8 *v13;
  uint64_t v14;
  unsigned __int8 *v15;
  int v16;
  int v17;
  unsigned int v18;
  uint64_t v19;
  __int128 v20[2];
  __int128 v21;
  char v22;

  sub_1A55212B8(a3, v20);
  result = (unint64_t)sub_1A55212B8(v20, &v21);
  if (v22 != 1)
    return 0;
  v6 = *(_QWORD *)(v21 + 16);
  if (!v6)
    return 0;
  v7 = 0;
  v8 = v21 + 32;
  while (1)
  {
    v9 = v8 + 176 * v7;
    if ((*(unsigned int *)(v9 + 24) | ((unint64_t)*(unsigned int *)(v9 + 24) << 32)) == (a2 | ((unint64_t)a2 << 32)))
    {
      v10 = *(_QWORD *)(v9 + 16);
      v11 = *(_QWORD *)(v10 + 16);
      if (v11 == *(_QWORD *)(a1 + 16))
      {
        if (v11)
          v12 = v10 == a1;
        else
          v12 = 1;
        if (v12)
          goto LABEL_26;
        if (*(unsigned __int8 *)(v10 + 32) == *(unsigned __int8 *)(a1 + 32))
        {
          if (v11 == 1)
            goto LABEL_26;
          if (*(unsigned __int8 *)(v10 + 33) == *(unsigned __int8 *)(a1 + 33))
          {
            if (v11 == 2)
              goto LABEL_26;
            if (*(unsigned __int8 *)(v10 + 34) == *(unsigned __int8 *)(a1 + 34))
            {
              if (v11 == 3)
                goto LABEL_26;
              if (*(unsigned __int8 *)(v10 + 35) == *(unsigned __int8 *)(a1 + 35))
              {
                if (v11 == 4)
                  goto LABEL_26;
                if (*(unsigned __int8 *)(v10 + 36) == *(unsigned __int8 *)(a1 + 36))
                  break;
              }
            }
          }
        }
      }
    }
LABEL_4:
    if (++v7 == v6)
      return 0;
  }
  v13 = (unsigned __int8 *)(v10 + 37);
  v14 = v11 - 5;
  v15 = (unsigned __int8 *)(a1 + 37);
  while (v14)
  {
    v17 = *v13++;
    v16 = v17;
    v18 = *v15++;
    result = v18;
    --v14;
    if (v16 != v18)
      goto LABEL_4;
  }
LABEL_26:
  if (v7 >= v6)
  {
    __break(1u);
  }
  else
  {
    v19 = v8 + 176 * v7;
    if (*(unsigned __int8 *)(v19 + 168) > 1u)
      return 0;
    else
      return *(_QWORD *)(v19 + 160);
  }
  return result;
}

uint64_t sub_1A5513210()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)v0;
  if ((*(_BYTE *)(v0 + 24) & 1) == 0)
  {
    v9 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return sub_1A5544818(v9);
  }
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = MEMORY[0x1E0DEE9E8];
  v23 = MEMORY[0x1E0DEE9E8];
  v5 = *(_QWORD *)(v1 + 16);
  if (v5)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v6 = v1 + 168;
    do
    {
      v6 += 176;
      v7 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A5511C08(v7, (uint64_t (*)(_BYTE *, _QWORD))sub_1A54F305C);
      --v5;
    }
    while (v5);
    sub_1A54E8FCC(v1, v2, v3, 1);
    v8 = v23;
  }
  else
  {
    v8 = MEMORY[0x1E0DEE9E8];
  }
  v11 = *(_QWORD *)(v0 + 32);
  v22 = v4;
  v23 = v11;
  v12 = v11 + 64;
  v13 = 1 << *(_BYTE *)(v11 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v11 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  result = swift_bridgeObjectRetain_n();
  v17 = 0;
  while (1)
  {
    if (v15)
    {
      v15 &= v15 - 1;
      goto LABEL_12;
    }
    v19 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v19 >= v16)
      goto LABEL_32;
    v20 = *(_QWORD *)(v12 + 8 * v19);
    ++v17;
    if (!v20)
    {
      v17 = v19 + 1;
      if (v19 + 1 >= v16)
        goto LABEL_32;
      v20 = *(_QWORD *)(v12 + 8 * v17);
      if (!v20)
      {
        v17 = v19 + 2;
        if (v19 + 2 >= v16)
          goto LABEL_32;
        v20 = *(_QWORD *)(v12 + 8 * v17);
        if (!v20)
        {
          v17 = v19 + 3;
          if (v19 + 3 >= v16)
            goto LABEL_32;
          v20 = *(_QWORD *)(v12 + 8 * v17);
          if (!v20)
          {
            v17 = v19 + 4;
            if (v19 + 4 >= v16)
              goto LABEL_32;
            v20 = *(_QWORD *)(v12 + 8 * v17);
            if (!v20)
              break;
          }
        }
      }
    }
LABEL_31:
    v15 = (v20 - 1) & v20;
LABEL_12:
    v18 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    result = sub_1A5511C08(v18, (uint64_t (*)(_BYTE *, _QWORD))sub_1A54F305C);
  }
  v21 = v19 + 5;
  if (v21 >= v16)
  {
LABEL_32:
    swift_release();
    sub_1A54F81BC((uint64_t)&v23);
    return sub_1A55732A4(v22, v8);
  }
  v20 = *(_QWORD *)(v12 + 8 * v21);
  if (v20)
  {
    v17 = v21;
    goto LABEL_31;
  }
  while (1)
  {
    v17 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v17 >= v16)
      goto LABEL_32;
    v20 = *(_QWORD *)(v12 + 8 * v17);
    ++v21;
    if (v20)
      goto LABEL_31;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1A5513454()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  __int128 v8[2];
  __int128 v9;
  char v10;

  sub_1A55212B8((__int128 *)v0, v8);
  sub_1A55212B8(v8, &v9);
  if ((v10 & 1) == 0)
    return *(_QWORD *)(v9 + 16) != 0;
  if (*(_QWORD *)(*(_QWORD *)(v0 + 32) + 16))
    return 1;
  v2 = *(_QWORD *)(v9 + 16);
  if (!v2)
    return 0;
  v3 = v2 - 1;
  v4 = (uint64_t *)(v9 + 168);
  do
  {
    v5 = *v4;
    v4 += 22;
    v6 = *(_QWORD *)(v5 + 16);
    result = v6 != 0;
    if (v6)
      v7 = 1;
    else
      v7 = v3 == 0;
    --v3;
  }
  while (!v7);
  return result;
}

uint64_t sub_1A55134EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;

  v3 = v2;
  swift_retain_n();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  swift_bridgeObjectRetain_n();
  v6 = sub_1A594A74C();
  v7 = sub_1A594C030();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    *(_DWORD *)v8 = 68158208;
    sub_1A594C3CC();
    *(_WORD *)(v8 + 8) = 256;
    swift_release();
    sub_1A594C3CC();
    swift_release();
    *(_WORD *)(v8 + 11) = 2048;
    swift_bridgeObjectRelease();
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A4F90000, v6, v7, "[%.*hhx] Received %ld locally known mailboxes.", (uint8_t *)v8, 0x15u);
    MEMORY[0x1A85B1964](v8, -1, -1);

  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  v9 = sub_1A5513EB4(a1, a2);
  v10 = sub_1A55141A8(v9);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  swift_bridgeObjectRelease();
  v17 = sub_1A558AF30(MEMORY[0x1E0DEE9D8]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v3 + 32) = v17;
  if (*(_QWORD *)(v10 + 16))
  {
    swift_retain_n();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v18 = sub_1A594A74C();
    v19 = sub_1A594C030();
    if (!os_log_type_enabled(v18, v19))
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      if (!*(_QWORD *)(v12 + 16))
        goto LABEL_12;
      goto LABEL_10;
    }
    v20 = swift_slowAlloc();
    *(_DWORD *)v20 = 68158208;
    sub_1A594C3CC();
    *(_WORD *)(v20 + 8) = 256;
    swift_release();
    sub_1A594C3CC();
    swift_release();
    *(_WORD *)(v20 + 11) = 2048;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A4F90000, v18, v19, "[%.*hhx] Added %ld locally known mailboxes.", (uint8_t *)v20, 0x15u);
    MEMORY[0x1A85B1964](v20, -1, -1);

  }
  if (!*(_QWORD *)(v12 + 16))
  {
LABEL_12:
    if (!*(_QWORD *)(v16 + 16))
      goto LABEL_17;
    goto LABEL_15;
  }
LABEL_10:
  swift_retain_n();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v21 = sub_1A594A74C();
  v22 = sub_1A594C030();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc();
    *(_DWORD *)v23 = 68158208;
    sub_1A594C3CC();
    *(_WORD *)(v23 + 8) = 256;
    swift_release();
    sub_1A594C3CC();
    swift_release();
    *(_WORD *)(v23 + 11) = 2048;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A4F90000, v21, v22, "[%.*hhx] Removed %ld locally known mailboxes.", (uint8_t *)v23, 0x15u);
    MEMORY[0x1A85B1964](v23, -1, -1);

    goto LABEL_12;
  }

  swift_release_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  if (!*(_QWORD *)(v16 + 16))
    goto LABEL_17;
LABEL_15:
  swift_retain_n();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v24 = sub_1A594A74C();
  v25 = sub_1A594C030();
  if (!os_log_type_enabled(v24, v25))
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    if (!*(_QWORD *)(v14 + 16))
      goto LABEL_23;
    goto LABEL_20;
  }
  v26 = swift_slowAlloc();
  *(_DWORD *)v26 = 68158208;
  sub_1A594C3CC();
  *(_WORD *)(v26 + 8) = 256;
  swift_release();
  sub_1A594C3CC();
  swift_release();
  *(_WORD *)(v26 + 11) = 2048;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A594C3CC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_1A4F90000, v24, v25, "[%.*hhx] Updated %ld locally known mailboxes.", (uint8_t *)v26, 0x15u);
  MEMORY[0x1A85B1964](v26, -1, -1);

LABEL_17:
  if (!*(_QWORD *)(v14 + 16))
    goto LABEL_23;
LABEL_20:
  swift_retain_n();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v27 = sub_1A594A74C();
  v28 = sub_1A594C030();
  if (os_log_type_enabled(v27, v28))
  {
    v29 = swift_slowAlloc();
    *(_DWORD *)v29 = 68158208;
    sub_1A594C3CC();
    *(_WORD *)(v29 + 8) = 256;
    swift_release();
    sub_1A594C3CC();
    swift_release();
    *(_WORD *)(v29 + 11) = 2048;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A4F90000, v27, v28, "[%.*hhx] Need to de-select %ld locally known mailboxes.", (uint8_t *)v29, 0x15u);
    MEMORY[0x1A85B1964](v29, -1, -1);

  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
LABEL_23:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v14;
}

unint64_t sub_1A5513EB4(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t result;
  __int128 v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _BYTE *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  int v31;
  unint64_t v32;
  unint64_t v33;
  __int128 v34;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v37 = MEMORY[0x1E0DEE9E8];
  v38 = MEMORY[0x1E0DEE9E8];
  v2 = *(_QWORD *)(a1 + 16);
  result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v23 = result;
  if (v2)
  {
    v5 = 0;
    v6 = result + 120;
    v20 = v2 - 1;
    v7 = MEMORY[0x1E0DEE9D8];
    v32 = v2;
    v21 = result + 120;
    do
    {
      v24 = v7;
      if (v5 <= v2)
        v8 = v2;
      else
        v8 = v5;
      v33 = v8;
      v9 = (_BYTE *)(v6 + 96 * v5);
      v10 = v5;
      while (1)
      {
        if (v33 == v10)
        {
          __break(1u);
          return result;
        }
        v11 = *((_QWORD *)v9 - 11);
        v12 = *((_QWORD *)v9 - 10);
        v13 = *((_QWORD *)v9 - 9);
        v14 = *((_DWORD *)v9 - 16);
        v30 = *(v9 - 52);
        v31 = *((_DWORD *)v9 - 14);
        v29 = *((_QWORD *)v9 - 6);
        v28 = *(v9 - 40);
        v27 = *((_QWORD *)v9 - 4);
        v15 = *((_QWORD *)v9 - 2);
        *(_QWORD *)&v4 = *((_QWORD *)v9 - 1);
        v34 = v4;
        v25 = *v9;
        v26 = *(v9 - 24);
        v16 = (sub_1A54E9E54(v13, v14, v38) & 1) != 0 ? 0 : sub_1A54EA764(v11, v12, v37) ^ 1;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A54E31DC(v15);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A54F2A14((uint64_t)v35, v13, v14);
        swift_bridgeObjectRelease();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A54F2C18(v35, v11, v12);
        swift_bridgeObjectRelease();
        if ((v16 & 1) != 0)
          break;
        ++v10;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = sub_1A54E3278(v15);
        v9 += 96;
        v2 = v32;
        if (v32 == v10)
        {
          v7 = v24;
          goto LABEL_21;
        }
      }
      v7 = v24;
      result = swift_isUniquelyReferenced_nonNull_native();
      v36 = v24;
      if ((result & 1) == 0)
      {
        result = sub_1A54F4C9C(0, *(_QWORD *)(v24 + 16) + 1, 1);
        v7 = v36;
      }
      v4 = v34;
      v18 = *(_QWORD *)(v7 + 16);
      v17 = *(_QWORD *)(v7 + 24);
      if (v18 >= v17 >> 1)
      {
        result = sub_1A54F4C9C(v17 > 1, v18 + 1, 1);
        v4 = v34;
        v7 = v36;
      }
      v5 = v10 + 1;
      *(_QWORD *)(v7 + 16) = v18 + 1;
      v19 = v7 + 96 * v18;
      *(_QWORD *)(v19 + 32) = v11;
      *(_QWORD *)(v19 + 40) = v12;
      *(_QWORD *)(v19 + 48) = v13;
      *(_DWORD *)(v19 + 56) = v14;
      *(_DWORD *)(v19 + 64) = v31;
      *(_BYTE *)(v19 + 68) = v30;
      *(_QWORD *)(v19 + 72) = v29;
      *(_BYTE *)(v19 + 80) = v28;
      *(_QWORD *)(v19 + 88) = v27;
      *(_BYTE *)(v19 + 96) = v26;
      *(_QWORD *)(v19 + 104) = v15;
      *(_QWORD *)(v19 + 112) = v4;
      *(_BYTE *)(v19 + 120) = v25;
      v2 = v32;
      v6 = v21;
    }
    while (v20 != v10);
  }
  else
  {
    v7 = MEMORY[0x1E0DEE9D8];
  }
LABEL_21:
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v7 + 16) != v2)
    sub_1A551F788(v23, v7, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1A55141A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  __int128 v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 *v28;
  int64_t i;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  int v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _OWORD *v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  char v78;
  unint64_t v79;
  _OWORD *v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  unint64_t v97;
  unint64_t v98;
  _OWORD *v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  char v115;
  char v116;
  uint64_t v117;
  char v118;
  char v119;
  uint64_t v120;
  unsigned int v121;
  uint64_t v122;
  unint64_t v123;
  char v124;
  __int128 *v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  unint64_t v130;
  char v131;
  unint64_t v132;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v134;
  unsigned int v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  char v140;
  uint64_t v141;
  uint64_t v142;
  int v143;
  char v144;
  int v145;
  unsigned int v146;
  char v147;
  unint64_t v148;
  uint64_t v149;
  char v150;
  char v151;
  unsigned int v152;
  void (*v153)(uint64_t);
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  unsigned int v158;
  void (*v159)(uint64_t);
  uint64_t v160;
  uint64_t v161;
  unint64_t v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  char v171;
  _OWORD *v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  char v181;
  uint64_t v182;
  void (*v183)(uint64_t);
  uint64_t v184;
  uint64_t v185;
  unint64_t v186;
  char v187;
  unint64_t v188;
  char v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  _QWORD *v195;
  uint64_t result;
  _QWORD *v197;
  char v198;
  uint64_t v200;
  unsigned int v201;
  uint64_t v202;
  int64_t v203;
  int v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  char v214;
  uint64_t v215;
  uint64_t v216;
  int v217;
  char v218;
  int v219;
  uint64_t v220;
  uint64_t v221;
  char v222;
  uint64_t v223;
  void *__dst;
  char __dsta;
  void *__dstb;
  char v227;
  uint64_t v228;
  uint64_t v229;
  __int128 v230;
  uint64_t v231;
  uint64_t v232;
  _QWORD v233[4];
  _BYTE v234[176];
  uint64_t v235[22];
  uint64_t v236;
  uint64_t v237;
  _OWORD v238[11];
  __int128 v239;
  __int128 v240;
  __int128 v241;
  __int128 v242;
  __int128 v243;
  __int128 v244;
  __int128 v245;
  __int128 v246;
  __int128 v247;
  __int128 v248;
  __int128 v249;
  _OWORD v250[11];
  int v251;
  _BYTE v252[188];
  int v253;
  __int128 v254;
  __int128 v255;
  __int128 v256;
  __int128 v257;
  __int128 v258;
  __int128 v259;
  __int128 v260;
  __int128 v261;
  __int128 v262;
  __int128 v263;
  __int128 v264;
  _BYTE v265[192];
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  __int128 v273;
  __int128 v274;
  __int128 v275;
  __int128 v276;
  _BYTE v277[25];
  __int128 v278;
  uint64_t v279;
  int v280;
  int v281;
  char v282;
  uint64_t v283;
  char v284;
  uint64_t v285;
  char v286;
  uint64_t v287;
  int v288;
  int v289;
  char v290;
  __int128 v291;
  __int128 v292;
  __int128 v293;
  __int128 v294;
  _BYTE v295[25];

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v197 = (_QWORD *)(v1 + 8);
  if ((*(_BYTE *)(v1 + 24) & 1) == 0)
  {
    v18 = a1;
    *(_QWORD *)v252 = MEMORY[0x1E0DEE9E8];
    v19 = *(_QWORD *)(a1 + 16);
    if (v19)
    {
      v209 = v2;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v212 = v3;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v20 = v4;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v21 = v18 + 56;
      do
      {
        v22 = *(_QWORD *)(v21 - 8);
        v23 = *(_DWORD *)v21;
        v24 = *(_QWORD *)(v21 + 48);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A54E31DC(v24);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A54F2A14((uint64_t)v265, v22, v23);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A54E3278(v24);
        v21 += 96;
        --v19;
      }
      while (v19);
      v18 = a1;
      swift_bridgeObjectRelease();
      v25 = *(_QWORD *)v252;
      v4 = v20;
      v2 = v209;
      v3 = v212;
    }
    else
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v25 = MEMORY[0x1E0DEE9E8];
    }
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v52 = sub_1A552251C(v18, v2, v207);
    swift_bridgeObjectRelease_n();
    sub_1A54E8FCC(v2, v3, v4, 0);
    *(_QWORD *)v207 = v52;
    *v197 = 0;
    *(_QWORD *)(v1 + 16) = 0;
    *(_BYTE *)(v207 + 24) = 1;
    v53 = sub_1A558B308(MEMORY[0x1E0DEE9D8]);
    sub_1A55154B0(v3, v53);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A5515900(v4);
    swift_bridgeObjectRelease();
    return v25;
  }
  v269 = MEMORY[0x1E0DEE9E8];
  v270 = MEMORY[0x1E0DEE9E8];
  v271 = MEMORY[0x1E0DEE9E8];
  v272 = MEMORY[0x1E0DEE9E8];
  v5 = *(_QWORD *)(v2 + 16);
  v205 = v4;
  v208 = v2;
  v211 = v3;
  if (v5)
  {
    *(_QWORD *)v265 = MEMORY[0x1E0DEE9D8];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54F4CD4(0, v5, 0);
    v7 = *(_QWORD *)v265;
    v8 = (_BYTE *)(v2 + 120);
    v203 = v5;
    do
    {
      v9 = *((_QWORD *)v8 - 11);
      __dst = (void *)*((_QWORD *)v8 - 10);
      v10 = *((_QWORD *)v8 - 9);
      v11 = *((_DWORD *)v8 - 16);
      v12 = *((_DWORD *)v8 - 14);
      v222 = *(v8 - 52);
      v220 = *((_QWORD *)v8 - 6);
      v218 = *(v8 - 40);
      v216 = *((_QWORD *)v8 - 4);
      v214 = *(v8 - 24);
      v13 = *((_QWORD *)v8 - 2);
      *(_QWORD *)&v6 = *((_QWORD *)v8 - 1);
      v230 = v6;
      v227 = *v8;
      swift_bridgeObjectRetain_n();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A54E31DC(v13);
      *(_QWORD *)v265 = v7;
      v15 = *(_QWORD *)(v7 + 16);
      v14 = *(_QWORD *)(v7 + 24);
      v16 = v15 + 1;
      if (v15 >= v14 >> 1)
      {
        sub_1A54F4CD4(v14 > 1, v15 + 1, 1);
        v16 = v15 + 1;
        v7 = *(_QWORD *)v265;
      }
      *(_QWORD *)(v7 + 16) = v16;
      v17 = v7 + 112 * v15;
      *(_QWORD *)(v17 + 32) = v10;
      *(_DWORD *)(v17 + 40) = v11;
      *(_QWORD *)(v17 + 48) = v9;
      *(_QWORD *)(v17 + 56) = __dst;
      *(_QWORD *)(v17 + 64) = v10;
      *(_DWORD *)(v17 + 72) = v11;
      *(_DWORD *)(v17 + 80) = v12;
      *(_BYTE *)(v17 + 84) = v222;
      *(_QWORD *)(v17 + 88) = v220;
      *(_BYTE *)(v17 + 96) = v218;
      *(_QWORD *)(v17 + 104) = v216;
      *(_BYTE *)(v17 + 112) = v214;
      *(_QWORD *)(v17 + 120) = v13;
      *((_QWORD *)&v6 + 1) = *((_QWORD *)&v230 + 1);
      *(_QWORD *)(v17 + 128) = v230;
      v8 += 176;
      *(_BYTE *)(v17 + 136) = v227;
      --v5;
    }
    while (v5);
    v5 = v203;
    v4 = v205;
    v2 = v208;
    v3 = v211;
  }
  else
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v7 = MEMORY[0x1E0DEE9D8];
    if (!*(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16))
    {
      v26 = MEMORY[0x1E0DEE9E0];
      goto LABEL_14;
    }
  }
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE79AB28);
  v26 = sub_1A594CA5C();
LABEL_14:
  *(_QWORD *)v265 = v26;
  sub_1A5522A74(v7, 1, v265);
  swift_bridgeObjectRelease();
  v202 = *(_QWORD *)v265;
  if (v5)
  {
    *(_QWORD *)&v250[0] = MEMORY[0x1E0DEE9D8];
    sub_1A54F4CB8(0, v5, 0);
    v27 = *(_QWORD *)&v250[0];
    v28 = (__int128 *)(v2 + 32);
    for (i = v5 - 1; ; --i)
    {
      v30 = *v28;
      v31 = v28[2];
      *(_OWORD *)&v252[16] = v28[1];
      *(_OWORD *)&v252[32] = v31;
      *(_OWORD *)v252 = v30;
      v32 = v28[3];
      v33 = v28[4];
      v34 = v28[6];
      *(_OWORD *)&v252[80] = v28[5];
      *(_OWORD *)&v252[96] = v34;
      *(_OWORD *)&v252[48] = v32;
      *(_OWORD *)&v252[64] = v33;
      v35 = v28[7];
      v36 = v28[8];
      v37 = v28[10];
      *(_OWORD *)&v252[144] = v28[9];
      *(_OWORD *)&v252[160] = v37;
      *(_OWORD *)&v252[112] = v35;
      *(_OWORD *)&v252[128] = v36;
      v38 = *(_QWORD *)&v252[16];
      v39 = *(_DWORD *)&v252[24];
      sub_1A54E3150((uint64_t)v252);
      *(_QWORD *)&v250[0] = v27;
      v41 = *(_QWORD *)(v27 + 16);
      v40 = *(_QWORD *)(v27 + 24);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      if (v41 >= v40 >> 1)
      {
        sub_1A54F4CB8(v40 > 1, v41 + 1, 1);
        v27 = *(_QWORD *)&v250[0];
      }
      *(_OWORD *)&v265[4] = *(_OWORD *)v252;
      *(_OWORD *)&v265[20] = *(_OWORD *)&v252[16];
      *(_OWORD *)&v265[68] = *(_OWORD *)&v252[64];
      *(_OWORD *)&v265[84] = *(_OWORD *)&v252[80];
      *(_OWORD *)&v265[36] = *(_OWORD *)&v252[32];
      *(_OWORD *)&v265[52] = *(_OWORD *)&v252[48];
      *(_OWORD *)&v265[148] = *(_OWORD *)&v252[144];
      *(_OWORD *)&v265[164] = *(_OWORD *)&v252[160];
      *(_OWORD *)&v265[100] = *(_OWORD *)&v252[96];
      *(_OWORD *)&v265[116] = *(_OWORD *)&v252[112];
      *(_OWORD *)&v265[132] = *(_OWORD *)&v252[128];
      *(_QWORD *)(v27 + 16) = v41 + 1;
      v42 = v27 + 192 * v41;
      *(_QWORD *)(v42 + 32) = v38;
      *(_DWORD *)(v42 + 40) = v39;
      v43 = *(_OWORD *)v265;
      v44 = *(_OWORD *)&v265[16];
      v45 = *(_OWORD *)&v265[32];
      *(_OWORD *)(v42 + 92) = *(_OWORD *)&v265[48];
      *(_OWORD *)(v42 + 76) = v45;
      *(_OWORD *)(v42 + 60) = v44;
      *(_OWORD *)(v42 + 44) = v43;
      v46 = *(_OWORD *)&v265[64];
      v47 = *(_OWORD *)&v265[80];
      v48 = *(_OWORD *)&v265[96];
      *(_OWORD *)(v42 + 156) = *(_OWORD *)&v265[112];
      *(_OWORD *)(v42 + 140) = v48;
      *(_OWORD *)(v42 + 124) = v47;
      *(_OWORD *)(v42 + 108) = v46;
      v49 = *(_OWORD *)&v265[128];
      v50 = *(_OWORD *)&v265[144];
      v51 = *(_OWORD *)&v265[160];
      *(_DWORD *)(v42 + 220) = *(_DWORD *)&v265[176];
      *(_OWORD *)(v42 + 204) = v51;
      *(_OWORD *)(v42 + 188) = v50;
      *(_OWORD *)(v42 + 172) = v49;
      if (!i)
        break;
      v28 += 11;
    }
    sub_1A54E8FCC(v208, v211, v205, 1);
  }
  else
  {
    sub_1A54E8FCC(v2, v3, v4, 1);
    v27 = MEMORY[0x1E0DEE9D8];
  }
  v54 = a1;
  v55 = MEMORY[0x1E0DEE9D8];
  v236 = 0;
  v237 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain_n();
  v56 = sub_1A555C194(v55);
  v57 = v56;
  v58 = *(_QWORD *)(v27 + 16);
  if (v58)
  {
    v59 = 0;
    v228 = v58 - 1;
    v231 = v56;
    v60 = (_OWORD *)(v27 + 48);
    v61 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v62 = *((_QWORD *)v60 - 2);
      v63 = *((_DWORD *)v60 - 2);
      v64 = v60[6];
      v66 = v60[3];
      v65 = v60[4];
      v244 = v60[5];
      v245 = v64;
      v242 = v66;
      v243 = v65;
      v67 = v60[10];
      v69 = v60[7];
      v68 = v60[8];
      v248 = v60[9];
      v249 = v67;
      v246 = v69;
      v247 = v68;
      v70 = *v60;
      v71 = v60[2];
      v240 = v60[1];
      v241 = v71;
      v239 = v70;
      memmove((char *)v250 + 4, v60, 0xB0uLL);
      *(_QWORD *)v252 = v62;
      *(_DWORD *)&v252[8] = v63;
      *(_OWORD *)&v252[140] = v250[8];
      *(_OWORD *)&v252[156] = v250[9];
      *(_OWORD *)&v252[172] = v250[10];
      v253 = v251;
      *(_OWORD *)&v252[76] = v250[4];
      *(_OWORD *)&v252[92] = v250[5];
      *(_OWORD *)&v252[108] = v250[6];
      *(_OWORD *)&v252[124] = v250[7];
      *(_OWORD *)&v252[12] = v250[0];
      *(_OWORD *)&v252[28] = v250[1];
      *(_OWORD *)&v252[44] = v250[2];
      *(_OWORD *)&v252[60] = v250[3];
      nullsub_1(v252);
      sub_1A55032A0((uint64_t)v252, (uint64_t)v265, &qword_1EE796818);
      v72 = *(_QWORD *)v265;
      v73 = *(_DWORD *)&v265[8];
      v258 = *(_OWORD *)&v265[80];
      v259 = *(_OWORD *)&v265[96];
      v256 = *(_OWORD *)&v265[48];
      v257 = *(_OWORD *)&v265[64];
      v263 = *(_OWORD *)&v265[160];
      v264 = *(_OWORD *)&v265[176];
      v260 = *(_OWORD *)&v265[112];
      v261 = *(_OWORD *)&v265[128];
      v262 = *(_OWORD *)&v265[144];
      v254 = *(_OWORD *)&v265[16];
      v255 = *(_OWORD *)&v265[32];
      v74 = v61 + 32;
      v75 = *(_QWORD *)(v61 + 16);
      if (v59)
      {
        v76 = sub_1A557FFE0(*(uint64_t *)v265, *(unsigned int *)&v265[8], v74, v75, (_QWORD *)(v59 + 16));
        if ((v77 & 1) != 0)
          goto LABEL_33;
      }
      else
      {
        v76 = sub_1A557FEEC(*(uint64_t *)v265, *(unsigned int *)&v265[8], v74, v75);
        if ((v78 & 1) != 0)
        {
LABEL_33:
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A54E3150((uint64_t)&v239);
          sub_1A555B280(v72, v73);
          sub_1A54E3150((uint64_t)&v254);
          v57 = v231;
          v235[0] = v231;
          v98 = *(_QWORD *)(v231 + 16);
          v97 = *(_QWORD *)(v231 + 24);
          if (v98 >= v97 >> 1)
          {
            sub_1A54F4ADC(v97 > 1, v98 + 1, 1);
            v57 = v235[0];
          }
          *(_QWORD *)(v57 + 16) = v98 + 1;
          v99 = (_OWORD *)(v57 + 176 * v98);
          v100 = v254;
          v101 = v256;
          v99[3] = v255;
          v99[4] = v101;
          v99[2] = v100;
          v102 = v257;
          v103 = v258;
          v104 = v260;
          v99[7] = v259;
          v99[8] = v104;
          v99[5] = v102;
          v99[6] = v103;
          v105 = v261;
          v106 = v262;
          v107 = v264;
          v99[11] = v263;
          v99[12] = v107;
          v99[9] = v105;
          v99[10] = v106;
          goto LABEL_36;
        }
      }
      v79 = v76;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A54E3150((uint64_t)&v239);
      if ((v79 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_88:
        __break(1u);
LABEL_89:
        __break(1u);
LABEL_90:
        __break(1u);
        result = swift_release();
        __break(1u);
        return result;
      }
      v57 = v231;
      if (v79 >= *(_QWORD *)(v231 + 16))
        goto LABEL_88;
      v80 = (_OWORD *)(v231 + 176 * v79);
      v81 = v80[2];
      v82 = v80[4];
      v238[1] = v80[3];
      v238[2] = v82;
      v238[0] = v81;
      v83 = v80[5];
      v84 = v80[6];
      v85 = v80[8];
      v238[5] = v80[7];
      v238[6] = v85;
      v238[3] = v83;
      v238[4] = v84;
      v86 = v80[9];
      v87 = v80[10];
      v88 = v80[12];
      v238[9] = v80[11];
      v238[10] = v88;
      v238[7] = v86;
      v238[8] = v87;
      sub_1A54E3150((uint64_t)&v254);
      sub_1A54E31EC((uint64_t)v238);
      v90 = v255;
      v89 = v256;
      v80[2] = v254;
      v80[3] = v90;
      v80[4] = v89;
      v91 = v260;
      v93 = v257;
      v92 = v258;
      v80[7] = v259;
      v80[8] = v91;
      v80[5] = v93;
      v80[6] = v92;
      v94 = v264;
      v96 = v261;
      v95 = v262;
      v80[11] = v263;
      v80[12] = v94;
      v80[9] = v96;
      v80[10] = v95;
LABEL_36:
      sub_1A54E31EC((uint64_t)&v254);
      swift_bridgeObjectRelease();
      if (!v228)
      {
        swift_bridgeObjectRelease_n();
        v54 = a1;
        goto LABEL_40;
      }
      v59 = v236;
      v61 = v237;
      --v228;
      v231 = v57;
      v60 += 12;
    }
  }
  swift_bridgeObjectRelease_n();
LABEL_40:
  swift_bridgeObjectRelease();
  v266 = v236;
  v267 = v237;
  v268 = v57;
  v108 = *(_QWORD *)(v54 + 16);
  if (!v108)
    goto LABEL_84;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v109 = 0;
  do
  {
    v229 = v109;
    v232 = v108;
    v112 = v54 + v109;
    v275 = *(_OWORD *)(v112 + 64);
    v276 = *(_OWORD *)(v112 + 80);
    *(_OWORD *)v277 = *(_OWORD *)(v112 + 96);
    v274 = *(_OWORD *)(v112 + 48);
    *(_OWORD *)&v277[9] = *(_OWORD *)(v112 + 105);
    v273 = *(_OWORD *)(v112 + 32);
    v113 = *(_QWORD *)(v112 + 32);
    v221 = *(_QWORD *)(v112 + 48);
    v223 = *(_QWORD *)(v112 + 40);
    v219 = *(_DWORD *)(v112 + 56);
    v217 = *(_DWORD *)(v112 + 64);
    v114 = *(_BYTE *)(v112 + 68);
    v115 = *(_BYTE *)(v112 + 80);
    v213 = *(_QWORD *)(v112 + 88);
    v215 = *(_QWORD *)(v112 + 72);
    v116 = *(_BYTE *)(v112 + 96);
    v210 = *(_QWORD *)(v112 + 104);
    v117 = *(_QWORD *)(v112 + 112);
    v118 = *(_BYTE *)(v112 + 120);
    v119 = BYTE4(v275);
    v206 = *((_QWORD *)&v276 + 1);
    __dsta = v277[0];
    v120 = v274;
    v204 = v275;
    v121 = DWORD2(v274);
    v122 = v202;
    if (!*(_QWORD *)(v202 + 16)
      || (v200 = *((_QWORD *)&v275 + 1), v198 = v276, v123 = sub_1A54FDC30(v274, DWORD2(v274)), (v124 & 1) == 0))
    {
      sub_1A5522D94((uint64_t)&v273);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v135 = v121;
      v136 = v120;
      v201 = v135;
      sub_1A54F2A14((uint64_t)v252, v120, v135);
      swift_bridgeObjectRelease();
      v137 = *(_QWORD *)(v207 + 32);
      if (*(_QWORD *)(v137 + 16))
      {
        v138 = sub_1A54FDC94(v273, *((uint64_t *)&v273 + 1));
        v139 = MEMORY[0x1E0DEE9E8];
        if ((v140 & 1) != 0)
        {
          v139 = *(_QWORD *)(*(_QWORD *)(v137 + 56) + 8 * v138);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        }
      }
      else
      {
        v139 = MEMORY[0x1E0DEE9E8];
      }
      sub_1A5522D94((uint64_t)&v273);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v141 = Set<>.makeNonEmpty()(v139);
      swift_bridgeObjectRelease();
      v143 = *(_DWORD *)(v207 + 72);
      *(_DWORD *)(v207 + 72) = (v143 + 1) & 0xFFFFFF;
      v144 = v119 | __dsta;
      if ((v144 & 1) != 0)
      {
        v110 = 0;
        v111 = 0;
      }
      else
      {
        *(_QWORD *)&v250[0] = v206;
        UIDValidityWith.init(uidValidity:value:)(v204, (uint64_t)v250, (uint64_t)&type metadata for ModificationSequenceValue, v142, v252);
        v110 = *(unsigned int *)v252;
        v111 = *(_QWORD *)&v252[8];
      }
      LOBYTE(v250[0]) = v114;
      LOBYTE(v254) = v115;
      LOBYTE(v239) = v116;
      LOBYTE(v238[0]) = v118;
      LOBYTE(v236) = 1;
      LOBYTE(v235[0]) = v144;
      *(_QWORD *)v252 = v113;
      *(_QWORD *)&v252[8] = v223;
      *(_QWORD *)&v252[16] = v221;
      *(_DWORD *)&v252[24] = v219;
      *(_DWORD *)&v252[32] = v217;
      v252[36] = v114;
      *(_QWORD *)&v252[40] = v215;
      v252[48] = v115;
      *(_QWORD *)&v252[56] = v213;
      v252[64] = v116;
      *(_QWORD *)&v252[72] = v210;
      *(_QWORD *)&v252[80] = v117;
      v252[88] = v118;
      *(_QWORD *)&v252[96] = 0;
      *(_DWORD *)&v252[104] = 0;
      v252[108] = 1;
      *(_QWORD *)&v252[112] = v110;
      *(_QWORD *)&v252[120] = v111;
      v252[128] = v144;
      *(_QWORD *)&v252[136] = v141;
      *(_QWORD *)&v252[144] = MEMORY[0x1E0DEE9D8];
      *(_QWORD *)&v252[152] = MEMORY[0x1E0DEE9D8];
      *(_QWORD *)&v252[160] = 0;
      v252[168] = 2;
      *(_DWORD *)&v252[172] = v143;
      nullsub_1(v252);
      sub_1A55032A0((uint64_t)v252, (uint64_t)v265, &qword_1EE797CC8);
      sub_1A55559D8((uint64_t)v265, v136, v201);
LABEL_44:
      sub_1A5522DE4((uint64_t)&v273);
      v54 = a1;
      goto LABEL_45;
    }
    v125 = (__int128 *)(*(_QWORD *)(v202 + 56) + 96 * v123);
    v126 = v125[1];
    v291 = *v125;
    v292 = v126;
    v128 = v125[3];
    v127 = v125[4];
    v129 = *(__int128 *)((char *)v125 + 73);
    v293 = v125[2];
    *(_OWORD *)&v295[9] = v129;
    v294 = v128;
    *(_OWORD *)v295 = v127;
    sub_1A5522D94((uint64_t)&v273);
    sub_1A5522D94((uint64_t)&v291);
    if ((static MailboxOfInterest.__derived_struct_equals(_:_:)(&v291, &v273) & 1) != 0)
    {
      sub_1A5522DE4((uint64_t)&v291);
      v130 = sub_1A54FDC30(v120, v121);
      if ((v131 & 1) == 0)
        goto LABEL_44;
      v132 = v130;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)v252 = v202;
      v54 = a1;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1A554F680();
        v122 = *(_QWORD *)v252;
      }
      swift_bridgeObjectRelease();
      v134 = *(_QWORD *)(*(_QWORD *)(v122 + 56) + 96 * v132 + 72);
      v202 = v122;
      sub_1A554DFD4(v132, v122);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_81;
    }
    v145 = *(_DWORD *)&v277[20];
    v146 = v121;
    v147 = v277[24];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54F2A14((uint64_t)v252, v120, v121);
    swift_bridgeObjectRelease();
    v148 = *(_QWORD *)&v295[8];
    v149 = v120;
    v278 = v291;
    v279 = v292;
    v280 = DWORD2(v292);
    v281 = v204;
    v282 = v119;
    v150 = v147;
    v283 = v200;
    v284 = v198;
    v285 = v206;
    v286 = __dsta;
    v287 = *(_QWORD *)&v295[8];
    v288 = *(_DWORD *)&v295[16];
    v289 = v145;
    v290 = v147;
    sub_1A5522D94((uint64_t)&v291);
    v151 = static MailboxOfInterest.__derived_struct_equals(_:_:)(&v273, &v278);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A54E3278(v148);
    sub_1A5522DE4((uint64_t)&v291);
    if ((v151 & 1) != 0)
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v152 = v146;
      v153 = sub_1A5515BAC(&v254, v120, v146);
      v155 = v154;
      sub_1A55032A0(v154, (uint64_t)v250, &qword_1EE797CC8);
      sub_1A55032A0((uint64_t)v250, (uint64_t)v252, &qword_1EE797CC8);
      if (sub_1A5522E34((uint64_t *)v252) != 1)
      {
        *(_DWORD *)(v155 + 84) = v145;
        *(_BYTE *)(v155 + 88) = v150;
      }
      ((void (*)(__int128 *, _QWORD))v153)(&v254, 0);
      swift_bridgeObjectRelease();
      v54 = a1;
      v156 = v202;
      v157 = v149;
      v158 = v152;
      goto LABEL_77;
    }
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    __dstb = (void *)v120;
    v158 = v146;
    v159 = sub_1A5515BAC(&v254, v120, v146);
    v161 = v160;
    sub_1A55032A0(v160, (uint64_t)v250, &qword_1EE797CC8);
    sub_1A55032A0((uint64_t)v250, (uint64_t)v252, &qword_1EE797CC8);
    if (sub_1A5522E34((uint64_t *)v252) != 1)
    {
      v162 = *(_QWORD *)(v161 + 72);
      v164 = v276;
      v163 = *(_OWORD *)v277;
      v165 = *(_OWORD *)&v277[9];
      *(_OWORD *)(v161 + 32) = v275;
      *(_OWORD *)(v161 + 48) = v164;
      v166 = v274;
      *(_OWORD *)v161 = v273;
      *(_OWORD *)(v161 + 16) = v166;
      *(_OWORD *)(v161 + 73) = v165;
      *(_OWORD *)(v161 + 64) = v163;
      sub_1A5522D94((uint64_t)&v273);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E3278(v162);
    }
    ((void (*)(__int128 *, _QWORD))v159)(&v254, 0);
    v54 = a1;
    v156 = v202;
    v157 = (uint64_t)__dstb;
    swift_bridgeObjectRelease();
    v167 = v268;
    v168 = v267 + 32;
    v169 = *(_QWORD *)(v267 + 16);
    if (v266)
    {
      v170 = sub_1A557FFE0((uint64_t)__dstb, v158, v168, v169, (_QWORD *)(v266 + 16));
      if ((v171 & 1) == 0)
        goto LABEL_67;
    }
    else
    {
      v170 = sub_1A557FEEC((uint64_t)__dstb, v158, v168, v169);
      if ((v181 & 1) == 0)
      {
LABEL_67:
        if ((v170 & 0x8000000000000000) != 0)
          goto LABEL_89;
        if (v170 >= *(_QWORD *)(v167 + 16))
          goto LABEL_90;
        v172 = (_OWORD *)(v167 + 176 * v170);
        v173 = v172[2];
        v174 = v172[4];
        v240 = v172[3];
        v241 = v174;
        v239 = v173;
        v175 = v172[5];
        v176 = v172[6];
        v177 = v172[8];
        v244 = v172[7];
        v245 = v177;
        v242 = v175;
        v243 = v176;
        v178 = v172[9];
        v179 = v172[10];
        v180 = v172[12];
        v248 = v172[11];
        v249 = v180;
        v246 = v178;
        v247 = v179;
        memmove(&v254, v172 + 2, 0xB0uLL);
        nullsub_1(&v254);
        sub_1A54E3150((uint64_t)&v239);
        goto LABEL_72;
      }
    }
    sub_1A5522E4C(&v239);
    sub_1A55032A0((uint64_t)&v239, (uint64_t)&v254, &qword_1EE797CC8);
LABEL_72:
    sub_1A55032A0((uint64_t)&v254, (uint64_t)v238, &qword_1EE797CC8);
    sub_1A55032A0((uint64_t)v238, (uint64_t)&v239, &qword_1EE797CC8);
    if (sub_1A5522E34((uint64_t *)&v239) != 1)
    {
      v182 = v260;
      sub_1A55032A0((uint64_t)&v254, (uint64_t)&v236, &qword_1EE797CC8);
      swift_retain();
      sub_1A552304C(&v236, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5522E6C);
      if (v182)
      {
        swift_release();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v183 = sub_1A5515BAC(v233, (uint64_t)__dstb, v158);
        v185 = v184;
        sub_1A55032A0(v184, (uint64_t)v234, &qword_1EE797CC8);
        sub_1A55032A0((uint64_t)v234, (uint64_t)v235, &qword_1EE797CC8);
        if (sub_1A5522E34(v235) != 1)
        {
          *(_QWORD *)(v185 + 96) = 0;
          swift_release();
        }
        ((void (*)(_QWORD *, _QWORD))v183)(v233, 0);
        v157 = (uint64_t)__dstb;
        swift_bridgeObjectRelease();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A54F2A14((uint64_t)v233, (uint64_t)__dstb, v158);
        swift_bridgeObjectRelease();
      }
    }
LABEL_77:
    v186 = sub_1A54FDC30(v157, v158);
    if ((v187 & 1) != 0)
    {
      v188 = v186;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v189 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)v252 = v156;
      if ((v189 & 1) == 0)
      {
        sub_1A554F680();
        v156 = *(_QWORD *)v252;
      }
      swift_bridgeObjectRelease();
      v134 = *(_QWORD *)(*(_QWORD *)(v156 + 56) + 96 * v188 + 72);
      v202 = v156;
      sub_1A554DFD4(v188, v156);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_81:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E3278(v134);
    }
    sub_1A5522DE4((uint64_t)&v273);
LABEL_45:
    v109 = v229 + 96;
    v108 = v232 - 1;
  }
  while (v232 != 1);
  swift_bridgeObjectRelease();
LABEL_84:
  v190 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5511944(v190);
  v191 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5511FB8(v191, &v266);
  swift_bridgeObjectRelease();
  v192 = v266;
  v193 = v267;
  v194 = v268;
  swift_retain();
  swift_retain();
  swift_retain();
  v195 = sub_1A550C8E4(v192, v193, v194);
  swift_release();
  swift_release();
  swift_release();
  sub_1A54E8FCC(*(_QWORD *)v207, *(_QWORD *)(v207 + 8), *(_QWORD *)(v207 + 16), *(_BYTE *)(v207 + 24));
  *(_QWORD *)v207 = v195;
  *v197 = 0;
  v197[1] = 0;
  *(_BYTE *)(v207 + 24) = 1;
  v25 = v269;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v25;
}

uint64_t sub_1A55154B0(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unint64_t v16;
  char v17;
  unint64_t *v18;
  _QWORD *v19;
  int v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  unint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  unint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  unsigned int v60;
  uint64_t v61;

  v3 = result;
  v4 = *(_QWORD *)v2;
  v5 = *(_QWORD *)(v2 + 8);
  v6 = *(_QWORD *)(v2 + 16);
  v7 = *(_BYTE *)(v2 + 24);
  if ((v7 & 1) == 0)
  {
    v45 = *(_BYTE *)(v2 + 24);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    result = sub_1A54E8FCC(v4, v5, v6, 0);
    v7 = v45;
    goto LABEL_40;
  }
  if (!*(_QWORD *)(v4 + 16))
    goto LABEL_39;
  v46 = *(_QWORD *)(v2 + 8);
  v47 = *(_QWORD *)(v2 + 16);
  v49 = *(_BYTE *)(v2 + 24);
  v9 = *(_QWORD *)(result + 16);
  v10 = *(_QWORD **)v2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v11 = 0;
  v51 = (unint64_t *)(v3 + 48);
  v52 = v9;
  v48 = (uint64_t)v10;
  v53 = a2;
  do
  {
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1A554B6F8(v10);
      v10 = (_QWORD *)result;
    }
    if (v11 >= v10[2])
    {
      __break(1u);
      return result;
    }
    v56 = v10 + 4;
    v13 = (uint64_t)&v10[22 * v11 + 4];
    v14 = *(_QWORD *)(v13 + 16);
    v15 = *(_DWORD *)(v13 + 24);
    if (!*(_QWORD *)(a2 + 16) || (v16 = sub_1A54FDC30(v14, v15), (v17 & 1) == 0))
    {
      v57 = 0;
      v58 = 1;
      if (!v9)
        goto LABEL_12;
LABEL_14:
      v54 = v10;
      v55 = v11;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v18 = v51;
      v19 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v59 = v14;
      v60 = v15;
      while (1)
      {
        v20 = *((_DWORD *)v18 - 4);
        v21 = *(v18 - 1);
        v22 = *v18;
        v23 = *(_QWORD *)(v21 + 16);
        if ((*v18 & 4) != 0)
          break;
        if (v23)
        {
          v24 = sub_1A54FDC30(v14, v15);
          if ((v25 & 1) != 0)
          {
            v26 = *(_QWORD *)(v21 + 56) + 24 * v24;
            v28 = *(_QWORD *)v26;
            v27 = *(_QWORD *)(v26 + 8);
            v29 = *(unsigned __int8 *)(v26 + 16);
            if ((v58 & 1) == 0 && (!v57 || (v29 & 1) == 0 && v27 == v57))
            {
              sub_1A5522EEC(v21, v22);
              sub_1A5522EEC(v21, v22);
              swift_bridgeObjectRelease();
              sub_1A54FD258(v22);
              sub_1A5522F20(v21, v22);
LABEL_31:
              v15 = v60;
              goto LABEL_17;
            }
            sub_1A5522EEC(v21, v22);
            sub_1A5522EEC(v21, v22);
            v61 = v28;
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            sub_1A54FD2C4(v22);
            sub_1A54FCA5C(v22);
            v31 = v30;
            swift_bridgeObjectRelease();
            sub_1A54FD258(v22);
            sub_1A5522F20(v21, v22);
            v32 = 0;
LABEL_26:
            v40 = v19;
            v41 = v27;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v40 = sub_1A54F08D0(0, v40[2] + 1, 1, v40);
            v43 = v40[2];
            v42 = v40[3];
            if (v43 >= v42 >> 1)
              v40 = sub_1A54F08D0((_QWORD *)(v42 > 1), v43 + 1, 1, v40);
            v40[2] = v43 + 1;
            v44 = &v40[7 * v43];
            *((_DWORD *)v44 + 8) = v20;
            v44[5] = v31;
            v44[6] = v61;
            v44[7] = v41;
            v44[8] = v29;
            v19 = v40;
            v44[9] = 0;
            *((_BYTE *)v44 + 84) = BYTE4(v32);
            *((_DWORD *)v44 + 20) = v32;
            v14 = v59;
            goto LABEL_31;
          }
          sub_1A5522EEC(v21, v22);
        }
        else
        {
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A54FD2C4(v22);
        }
        sub_1A5522EEC(v21, v22);
        swift_bridgeObjectRelease();
        sub_1A54FD258(v22);
        sub_1A5522F20(v21, v22);
LABEL_17:
        v18 += 3;
        if (!--v9)
        {
          swift_bridgeObjectRelease();
          v12 = (uint64_t)v19;
          swift_bridgeObjectRelease();
          v9 = v52;
          a2 = v53;
          v10 = v54;
          v11 = v55;
          goto LABEL_5;
        }
      }
      if (!v23)
        goto LABEL_17;
      v33 = sub_1A54FDC30(v14, v15);
      if ((v34 & 1) == 0)
        goto LABEL_17;
      v35 = *(_QWORD *)(v21 + 56) + 16 * v33;
      v31 = *(_QWORD *)v35;
      v36 = *(unsigned int *)(v35 + 8);
      v37 = *(unsigned __int8 *)(v35 + 12);
      v38 = sub_1A54E3414();
      v27 = MessageIdentifierSet.init()(&type metadata for UID, v38);
      v61 = v36 | (v37 << 32);
      v29 = v39 & 0xFFFFFFFFFFLL | 0x8000000000000000;
      sub_1A54E4334(v31, v36, v37);
      v32 = 0xFF00000000;
      goto LABEL_26;
    }
    v58 = 0;
    v57 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v16);
    if (v9)
      goto LABEL_14;
LABEL_12:
    v12 = MEMORY[0x1E0DEE9D8];
LABEL_5:
    sub_1A5520E10(v12, &v56[22 * v11 + 19]);
    swift_bridgeObjectRelease();
    ++v11;
  }
  while (v11 != v10[2]);
  result = sub_1A54E8FCC(v48, v46, v47, 1);
  v4 = (uint64_t)v10;
  v2 = v50;
  v7 = v49;
LABEL_39:
  v3 = 0;
  v6 = 0;
LABEL_40:
  *(_QWORD *)v2 = v4;
  *(_QWORD *)(v2 + 8) = v3;
  *(_QWORD *)(v2 + 16) = v6;
  *(_BYTE *)(v2 + 24) = v7;
  return result;
}

uint64_t sub_1A5515900(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  int v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33[2];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;

  v2 = result;
  v4 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v5 = *(_BYTE *)(v1 + 24);
  if ((v5 & 1) == 0)
  {
    v22 = *(_QWORD *)(v1 + 16);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    result = sub_1A54E8FCC((uint64_t)v4, v3, v22, 0);
LABEL_22:
    *(_QWORD *)v35 = v4;
    *(_QWORD *)(v35 + 8) = v3;
    *(_QWORD *)(v35 + 16) = v2;
    *(_BYTE *)(v35 + 24) = v5;
    return result;
  }
  v26 = *(_QWORD *)(v1 + 8);
  if (!v4[2])
  {
LABEL_21:
    v3 = 0;
    v2 = 0;
    goto LABEL_22;
  }
  v23 = *(_QWORD *)(v1 + 16);
  HIDWORD(v25) = *(unsigned __int8 *)(v1 + 24);
  v6 = *(_QWORD *)(result + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v7 = 0;
  v27 = v2 + 72;
  v28 = v6;
  v24 = (uint64_t)v4;
  v29 = v2;
  while (1)
  {
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1A554B6F8(v4);
      v4 = (_QWORD *)result;
    }
    if (v7 >= v4[2])
      break;
    v8 = v4 + 4;
    if (v6)
    {
      v31 = (uint64_t)v4;
      v32 = v7;
      v30 = (uint64_t)(v4 + 4);
      v9 = (uint64_t)&v8[22 * v7];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v10 = (_QWORD *)v27;
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      do
      {
        v13 = *(v10 - 4);
        v14 = *((_DWORD *)v10 - 6);
        v16 = *(v10 - 2);
        v15 = *(v10 - 1);
        v17 = *v10;
        v40 = *((_DWORD *)v10 - 10);
        v41 = v13;
        v42 = v14;
        v43 = v16;
        v44 = v15;
        v45 = v17;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A54E42B4(v16, v15);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A5517B9C((uint64_t)&v40, v9, v35, &v37, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33[0], v33[1], v34, v35, v36,
          v37,
          (os_log_type_t)v38,
          *((uint64_t *)&v38 + 1));
        swift_bridgeObjectRelease();
        sub_1A54E46E8(v16, v15);
        swift_bridgeObjectRelease();
        v18 = v39;
        if (v39 != 1)
        {
          v19 = v37;
          *(_OWORD *)v33 = v38;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v11 = sub_1A54F00CC(0, v11[2] + 1, 1, v11);
          v21 = v11[2];
          v20 = v11[3];
          if (v21 >= v20 >> 1)
            v11 = sub_1A54F00CC((_QWORD *)(v20 > 1), v21 + 1, 1, v11);
          v11[2] = v21 + 1;
          v12 = &v11[4 * v21];
          *((_DWORD *)v12 + 8) = v19;
          *(_OWORD *)(v12 + 5) = *(_OWORD *)v33;
          v12[7] = v18;
        }
        v10 += 6;
        --v6;
      }
      while (v6);
      swift_bridgeObjectRelease();
      v6 = v28;
      v4 = (_QWORD *)v31;
      v7 = v32;
      v8 = (_QWORD *)v30;
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    v8[22 * v7 + 18] = v11;
    swift_bridgeObjectRelease();
    if (++v7 == v4[2])
    {
      result = sub_1A54E8FCC(v24, v26, v23, 1);
      v5 = BYTE4(v25);
      goto LABEL_21;
    }
  }
  __break(1u);
  return result;
}

void (*sub_1A5515BAC(_QWORD *a1, uint64_t a2, unsigned int a3))(uint64_t a1)
{
  uint64_t v3;
  _QWORD *v7;
  char v8;
  uint64_t v9;

  v7 = malloc(0x238uLL);
  *a1 = v7;
  v7[67] = v3;
  *((_DWORD *)v7 + 140) = a3;
  v7[66] = a2;
  sub_1A5522E4C(v7);
  sub_1A55032A0((uint64_t)v7, (uint64_t)(v7 + 22), &qword_1EE797CC8);
  v7[68] = sub_1A55205F4(a2, a3, (_OWORD *)v7 + 11);
  *((_BYTE *)v7 + 564) = v8;
  v7[69] = v9;
  return sub_1A5515C40;
}

void sub_1A5515C40(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(void **)a1;
  v2 = *(_QWORD *)a1 + 176;
  v3 = (_QWORD *)(*(_QWORD *)a1 + 352);
  sub_1A5520980(*(_QWORD *)(*(_QWORD *)a1 + 528), *(_DWORD *)(*(_QWORD *)a1 + 560), *(_QWORD *)(*(_QWORD *)a1 + 544), *(_BYTE *)(*(_QWORD *)a1 + 564) & 1, *(_QWORD *)(*(_QWORD *)a1 + 552), v2);
  sub_1A55032A0(v2, (uint64_t)v3, &qword_1EE797CC8);
  sub_1A552304C(v3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5522E6C);
  free(v1);
}

uint64_t sub_1A5515CB8(uint64_t result, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  unsigned __int8 *v14;
  uint64_t v15;
  unsigned __int8 *v16;
  int v17;
  int v18;
  int v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(_BYTE *, _QWORD);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  _BYTE __src[456];
  _BYTE v29[32];

  v5 = *(_QWORD **)result;
  v6 = *(_QWORD *)(*(_QWORD *)result + 16);
  if (v6)
  {
    v8 = (_QWORD *)result;
    v9 = 0;
    while (1)
    {
      v10 = (uint64_t)&v5[22 * v9 + 4];
      if ((*(unsigned int *)(v10 + 24) | ((unint64_t)*(unsigned int *)(v10 + 24) << 32)) == (a3 | ((unint64_t)a3 << 32)))
      {
        v11 = *(_QWORD *)(v10 + 16);
        v12 = *(_QWORD *)(v11 + 16);
        if (v12 == *(_QWORD *)(a2 + 16))
        {
          if (v12)
            v13 = v11 == a2;
          else
            v13 = 1;
          if (v13)
            goto LABEL_21;
          if (*(unsigned __int8 *)(v11 + 32) == *(unsigned __int8 *)(a2 + 32))
          {
            if (v12 == 1)
              goto LABEL_21;
            if (*(unsigned __int8 *)(v11 + 33) == *(unsigned __int8 *)(a2 + 33))
            {
              if (v12 == 2)
                goto LABEL_21;
              if (*(unsigned __int8 *)(v11 + 34) == *(unsigned __int8 *)(a2 + 34))
              {
                if (v12 == 3)
                  goto LABEL_21;
                if (*(unsigned __int8 *)(v11 + 35) == *(unsigned __int8 *)(a2 + 35))
                  break;
              }
            }
          }
        }
      }
LABEL_3:
      if (++v9 == v6)
        return result;
    }
    v14 = (unsigned __int8 *)(v11 + 36);
    v15 = v12 - 4;
    v16 = (unsigned __int8 *)(a2 + 36);
    while (v15)
    {
      v18 = *v14++;
      v17 = v18;
      v19 = *v16++;
      --v15;
      if (v17 != v19)
        goto LABEL_3;
    }
LABEL_21:
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1A554B6F8(v5);
      v5 = (_QWORD *)result;
    }
    if (v9 >= v5[2])
    {
      __break(1u);
    }
    else
    {
      v20 = &v5[22 * v9];
      v21 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A5511C08(v21, (uint64_t (*)(_BYTE *, _QWORD))sub_1A54F305C);
      Set<>.formNonEmpty()();
      *((_DWORD *)v20 + 34) = 0;
      *((_BYTE *)v20 + 140) = 1;
      *v8 = v5;
      v23 = (uint64_t (*)(_BYTE *, _QWORD))sub_1A5544C78((uint64_t)v29, v9);
      if (*(_QWORD *)(v22 + 96))
      {
        v24 = v22;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          v25 = *(_QWORD *)(v24 + 96);
          swift_beginAccess();
          sub_1A5502F44(v25 + 16, (uint64_t)__src);
          _s13SelectedStateV8_StorageCMa();
          v26 = swift_allocObject();
          memcpy((void *)(v26 + 16), __src, 0x1C5uLL);
          *(_QWORD *)(v24 + 96) = v26;
          swift_release();
        }
        swift_beginAccess();
        sub_1A554B85C(a5);
        sub_1A54F3290(&v27, a5);
        swift_endAccess();
      }
      return v23(v29, 0);
    }
  }
  return result;
}

void sub_1A5515F10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  NSObject *v26;
  os_log_type_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  char *v53;
  int *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  __int128 *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  char v73[8];
  _WORD v74[12];
  uint64_t v75;
  uint64_t v76;
  int v77;
  __int128 v78;

  v65 = type metadata accessor for Task.Logger(0);
  MEMORY[0x1E0C80A78](v65);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A594A764();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v10);
  v14 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if (v14)
  {
    v66 = (char *)&v48 - v11;
    v49 = v7;
    v50 = v12;
    v15 = 0;
    v69 = 0;
    v16 = 0;
    v17 = 0;
    v63 = (__int128 *)v74;
    v62 = &v75;
    v56 = (char *)&v70 + 4;
    v55 = (char *)&v70 + 1;
    v54 = &v71;
    v53 = (char *)&v70 + 2;
    *(_QWORD *)&v13 = 68159235;
    v52 = v13;
    v51 = MEMORY[0x1E0DEE9B8] + 8;
    v57 = v8;
    v64 = a3;
    v61 = a2;
    v68 = v14;
    do
    {
      v18 = *(_QWORD **)a1;
      if (v17 >= *(_QWORD *)(*(_QWORD *)a1 + 16))
      {
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
      if ((sub_1A54E9E54(v18[v15 + 6], v18[v15 + 7], a2) & 1) == 0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v18 = sub_1A554B6F8(v18);
        if (v17 >= v18[2])
          goto LABEL_28;
        v19 = a1;
        if (*(_QWORD *)(v18[v15 + 21] + 16))
        {
          swift_bridgeObjectRelease();
          v18[v15 + 21] = MEMORY[0x1E0DEE9E8];
          *(_QWORD *)a1 = v18;
          if (v16 <= 4)
          {
            v67 = v16;
            v20 = (uint64_t *)(a3 + *(int *)(v65 + 20));
            v21 = a3;
            v22 = *v20;
            v23 = v20[1];
            v24 = v20[2];
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            if (v17 >= v18[2])
              goto LABEL_30;
            MailboxTaskLoggerID.init(id:name:counter:mailbox:)(v22, v23, v24, HIDWORD(v18[v15 + 25]), v18[v15 + 6], v18[v15 + 7], (uint64_t)v73);
            v25 = v66;
            (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v66, v21, v8);
            v78 = *v63;
            v76 = *v62;
            v77 = *((_DWORD *)v62 + 2);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            sub_1A5524B84((uint64_t)&v78);
            sub_1A54FCA28((uint64_t)&v76);
            OUTLINED_FUNCTION_53();
            OUTLINED_FUNCTION_53();
            OUTLINED_FUNCTION_53();
            OUTLINED_FUNCTION_53();
            OUTLINED_FUNCTION_53();
            OUTLINED_FUNCTION_53();
            v26 = sub_1A594A74C();
            v27 = sub_1A594C030();
            v28 = v27;
            if (os_log_type_enabled(v26, v27))
            {
              v29 = v9;
              v31 = *((_QWORD *)&v78 + 1);
              v30 = v78;
              v58 = v76;
              v32 = swift_slowAlloc();
              v60 = swift_slowAlloc();
              v72 = v60;
              *(_DWORD *)v32 = v52;
              LODWORD(v70) = 2;
              sub_1A594C3CC();
              *(_WORD *)(v32 + 8) = 256;
              LOBYTE(v70) = v73[0];
              sub_1A594C3CC();
              *(_WORD *)(v32 + 11) = 2082;
              v59 = v28;
              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
              v33 = v31;
              v9 = v29;
              v70 = sub_1A55791B0(v30, v33, &v72);
              sub_1A594C3CC();
              sub_1A5503278((uint64_t)&v78);
              *(_WORD *)(v32 + 21) = 1040;
              LODWORD(v70) = 2;
              sub_1A594C3CC();
              *(_WORD *)(v32 + 27) = 512;
              LOWORD(v70) = v74[8];
              sub_1A594C3CC();
              *(_WORD *)(v32 + 31) = 2160;
              v70 = 0x786F626C69616DLL;
              sub_1A594C3CC();
              *(_WORD *)(v32 + 41) = 2085;
              v70 = v76;
              v71 = v77;
              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
              v34 = sub_1A594B4A8();
              v70 = sub_1A55791B0(v34, v35, &v72);
              sub_1A594C3CC();
              swift_bridgeObjectRelease();
              sub_1A5503278((uint64_t)&v78);
              sub_1A54F81BC((uint64_t)&v76);
              sub_1A5503278((uint64_t)&v78);
              sub_1A54F81BC((uint64_t)&v76);
              _os_log_impl(&dword_1A4F90000, v26, (os_log_type_t)v59, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Did mark as sync complete.", (uint8_t *)v32, 0x33u);
              v36 = v60;
              swift_arrayDestroy();
              MEMORY[0x1A85B1964](v36, -1, -1);
              v37 = v32;
              v8 = v57;
              MEMORY[0x1A85B1964](v37, -1, -1);

              (*(void (**)(char *, uint64_t))(v29 + 8))(v66, v8);
            }
            else
            {
              sub_1A5503278((uint64_t)&v78);
              sub_1A54F81BC((uint64_t)&v76);
              sub_1A5503278((uint64_t)&v78);
              sub_1A54F81BC((uint64_t)&v76);

              (*(void (**)(char *, uint64_t))(v9 + 8))(v25, v8);
            }
            a2 = v61;
            a1 = v19;
            v16 = v67 + 1;
            a3 = v64;
          }
          v14 = v68;
          if (__OFADD__(v69++, 1))
            goto LABEL_29;
        }
        else
        {
          *(_QWORD *)a1 = v18;
          v14 = v68;
        }
      }
      ++v17;
      v15 += 22;
    }
    while (v14 != v17);
    v39 = v50;
    v40 = (uint64_t)v49;
    if (v16 >= v69)
      return;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v50, a3, v8);
    sub_1A55034B8(a3, v40, type metadata accessor for Task.Logger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v41 = sub_1A594A74C();
    v42 = sub_1A594C030();
    if (!os_log_type_enabled(v41, v42))
    {
      sub_1A55034FC(v40, type metadata accessor for Task.Logger);

      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v39, v8);
      return;
    }
    v68 = v9;
    v43 = swift_slowAlloc();
    v67 = swift_slowAlloc();
    v70 = v67;
    *(_DWORD *)v43 = 68158466;
    LODWORD(v72) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v43 + 8) = 256;
    v44 = (_QWORD *)(v40 + *(int *)(v65 + 20));
    v45 = v44[1];
    v46 = v44[2];
    LOBYTE(v72) = *v44;
    sub_1A594C3CC();
    *(_WORD *)(v43 + 11) = 2082;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v72 = sub_1A55791B0(v45, v46, &v70);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC(v40, type metadata accessor for Task.Logger);
    *(_WORD *)(v43 + 21) = 2048;
    if (!__OFSUB__(v69, v16))
    {
      v72 = v69 - v16;
      sub_1A594C3CC();
      _os_log_impl(&dword_1A4F90000, v41, v42, "[%.*hhx-%{public}s] Did mark %ld more mailboxes as sync complete.", (uint8_t *)v43, 0x1Fu);
      v47 = v67;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v47, -1, -1);
      MEMORY[0x1A85B1964](v43, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v50, v8);
      return;
    }
LABEL_31:
    __break(1u);
  }
}

uint64_t sub_1A5516730(uint64_t a1, unsigned int a2)
{
  __int128 *v2;
  __int128 *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  unsigned __int8 *v13;
  uint64_t v14;
  unsigned __int8 *v15;
  int v16;
  int v17;
  int v18;
  __int128 v19[2];
  __int128 v20;
  char v21;

  v3 = v2;
  sub_1A55212B8(v3, v19);
  sub_1A55212B8(v19, &v20);
  if (v21 != 1)
    return MEMORY[0x1E0DEE9E8];
  v6 = *(_QWORD *)(v20 + 16);
  if (!v6)
    return MEMORY[0x1E0DEE9E8];
  v7 = 0;
  result = MEMORY[0x1E0DEE9E8];
  while (1)
  {
    v9 = v20 + 32 + 176 * v7;
    if ((*(unsigned int *)(v9 + 24) | ((unint64_t)*(unsigned int *)(v9 + 24) << 32)) == (a2 | ((unint64_t)a2 << 32)))
    {
      v10 = *(_QWORD *)(v9 + 16);
      v11 = *(_QWORD *)(v10 + 16);
      if (v11 == *(_QWORD *)(a1 + 16))
      {
        if (v11)
          v12 = v10 == a1;
        else
          v12 = 1;
        if (v12)
          return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        if (*(unsigned __int8 *)(v10 + 32) == *(unsigned __int8 *)(a1 + 32))
        {
          if (v11 == 1)
            return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          if (*(unsigned __int8 *)(v10 + 33) == *(unsigned __int8 *)(a1 + 33))
          {
            if (v11 == 2)
              return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            if (*(unsigned __int8 *)(v10 + 34) == *(unsigned __int8 *)(a1 + 34))
              break;
          }
        }
      }
    }
LABEL_4:
    if (++v7 == v6)
      return result;
  }
  v13 = (unsigned __int8 *)(v10 + 35);
  v14 = v11 - 3;
  v15 = (unsigned __int8 *)(a1 + 35);
  while (v14)
  {
    v17 = *v13++;
    v16 = v17;
    v18 = *v15++;
    --v14;
    if (v16 != v18)
      goto LABEL_4;
  }
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t sub_1A5516874(uint64_t result, uint64_t a2, unsigned int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  unsigned __int8 *v14;
  uint64_t v15;
  unsigned __int8 *v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;

  if (*(_BYTE *)(v3 + 24) == 1)
  {
    v4 = *(_QWORD *)v3;
    v5 = *(_QWORD *)(v3 + 8);
    v6 = *(_QWORD *)(v3 + 16);
    v20 = v4;
    v7 = *(_QWORD *)(v4 + 16);
    if (v7)
    {
      v8 = result;
      v9 = 0;
      while (1)
      {
        v10 = v4 + 32 + 176 * v9;
        if ((*(unsigned int *)(v10 + 24) | ((unint64_t)*(unsigned int *)(v10 + 24) << 32)) == (a3 | ((unint64_t)a3 << 32)))
        {
          v11 = *(_QWORD *)(v10 + 16);
          v12 = *(_QWORD *)(v11 + 16);
          if (v12 == *(_QWORD *)(a2 + 16))
          {
            if (v12)
              v13 = v11 == a2;
            else
              v13 = 1;
            if (v13)
              goto LABEL_22;
            if (*(unsigned __int8 *)(v11 + 32) == *(unsigned __int8 *)(a2 + 32))
            {
              if (v12 == 1)
                goto LABEL_22;
              if (*(unsigned __int8 *)(v11 + 33) == *(unsigned __int8 *)(a2 + 33))
              {
                if (v12 == 2)
                  goto LABEL_22;
                if (*(unsigned __int8 *)(v11 + 34) == *(unsigned __int8 *)(a2 + 34))
                {
                  if (v12 == 3)
                    goto LABEL_22;
                  if (*(unsigned __int8 *)(v11 + 35) == *(unsigned __int8 *)(a2 + 35))
                    break;
                }
              }
            }
          }
        }
LABEL_4:
        if (++v9 == v7)
          goto LABEL_23;
      }
      v14 = (unsigned __int8 *)(v11 + 36);
      v15 = v12 - 4;
      v16 = (unsigned __int8 *)(a2 + 36);
      while (v15)
      {
        v18 = *v14++;
        v17 = v18;
        v19 = *v16++;
        --v15;
        if (v17 != v19)
          goto LABEL_4;
      }
LABEL_22:
      sub_1A55212D0(v4, v5, v6, 1);
      sub_1A5511D5C(v8, (uint64_t)&v20, v9);
      result = sub_1A54E8FCC(v4, v5, v6, 1);
      v4 = v20;
    }
LABEL_23:
    *(_QWORD *)v3 = v4;
    *(_QWORD *)(v3 + 8) = 0;
    *(_QWORD *)(v3 + 16) = 0;
    *(_BYTE *)(v3 + 24) = 1;
  }
  return result;
}

uint64_t sub_1A5516A04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  unsigned __int8 *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  __int128 v23;
  _BYTE v25[4];
  int v26;
  uint64_t v27;
  __int128 v28;
  _OWORD v29[2];

  v26 = a5;
  v27 = a2;
  v8 = type metadata accessor for Task.Logger(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v25[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for MailboxTaskLogger(0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = &v25[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v12);
  v16 = &v25[-v15];
  sub_1A55034B8(a3, (uint64_t)v10, type metadata accessor for Task.Logger);
  LODWORD(a3) = *(_DWORD *)(a1 + 172);
  v17 = sub_1A594A764();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v14, v10, v17);
  v18 = &v10[*(int *)(v8 + 20)];
  v20 = *((_QWORD *)v18 + 1);
  v19 = *((_QWORD *)v18 + 2);
  v21 = *v18;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  MailboxTaskLoggerID.init(id:name:counter:mailbox:)(v21, v20, v19, a3, a4, v26, (uint64_t)&v28);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A55034FC((uint64_t)v10, type metadata accessor for Task.Logger);
  v22 = &v14[*(int *)(v11 + 20)];
  v23 = v29[0];
  *v22 = v28;
  v22[1] = v23;
  *(_OWORD *)((char *)v22 + 28) = *(_OWORD *)((char *)v29 + 12);
  sub_1A5521E68((uint64_t)v14, (uint64_t)v16);
  sub_1A5501F3C(v27, (uint64_t)v16);
  return sub_1A55034FC((uint64_t)v16, type metadata accessor for MailboxTaskLogger);
}

unint64_t sub_1A5516BB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = sub_1A5516C7C();
  if (*(_QWORD *)(v2 + 16) <= *(_QWORD *)(a1 + 16) >> 3)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5588D44(v2);
    swift_bridgeObjectRelease();
    v3 = a1;
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_3;
  }
  else
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v3 = sub_1A5586C18(v2, a1);
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v3 + 16))
    {
LABEL_3:
      v4 = swift_allocObject();
      *(_QWORD *)(v4 + 16) = v3;
      return v4 | 0x9000000000000002;
    }
  }
  swift_bridgeObjectRelease();
  return 0xF000000000000007;
}

uint64_t sub_1A5516C7C()
{
  uint64_t v0;
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  unsigned int *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  _OWORD *v42;
  _OWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;

  if ((*(_BYTE *)(v0 + 24) & 1) != 0)
  {
    v1 = *(_OWORD **)v0;
    v44 = *(_QWORD *)(*(_QWORD *)v0 + 16);
    if (v44)
    {
      v40 = *(_QWORD *)(v0 + 16);
      v41 = *(_QWORD *)(v0 + 8);
      v43 = v1 + 2;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v2 = v1[10];
      v57 = v1[9];
      v58 = v2;
      v3 = v1[12];
      v59 = v1[11];
      v60 = v3;
      v4 = v1[6];
      v53 = v1[5];
      v54 = v4;
      v5 = v1[8];
      v55 = v1[7];
      v56 = v5;
      v6 = v1[3];
      v50 = v1[2];
      v51 = v6;
      v7 = MEMORY[0x1E0DEE9E8];
      v52 = v1[4];
      v8 = 1;
      v9 = *((_QWORD *)&v59 + 1);
      v42 = v1;
      while (1)
      {
        v47 = *(_QWORD *)(v9 + 16);
        if (v47)
        {
          v45 = v8;
          v46 = v9 + 32;
          swift_bridgeObjectRetain_n();
          sub_1A54E3150((uint64_t)&v50);
          v10 = 0;
          do
          {
            v16 = v7 + 56;
            while (1)
            {
              v17 = (unsigned int *)(v46 + 56 * v10);
              v18 = *v17;
              v19 = *((_QWORD *)v17 + 1);
              v20 = *((_QWORD *)v17 + 2);
              v21 = *((_QWORD *)v17 + 3);
              v48 = *((_QWORD *)v17 + 5);
              v49 = *((_QWORD *)v17 + 4);
              v22 = *((unsigned __int8 *)v17 + 52);
              v23 = v17[12];
              ++v10;
              sub_1A594CE64();
              sub_1A594CEAC();
              v24 = sub_1A594CED0();
              v25 = -1 << *(_BYTE *)(v7 + 32);
              v26 = v24 & ~v25;
              if (((*(_QWORD *)(v16 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) == 0)
                break;
              v27 = *(_QWORD *)(v7 + 48);
              if (*(_DWORD *)(v27 + 4 * v26) != (_DWORD)v18)
              {
                v28 = ~v25;
                do
                {
                  v26 = (v26 + 1) & v28;
                  if (((*(_QWORD *)(v16 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) == 0)
                    goto LABEL_6;
                }
                while (*(_DWORD *)(v27 + 4 * v26) != (_DWORD)v18);
              }
              if (v10 == v47)
                goto LABEL_15;
            }
LABEL_6:
            v11 = v23 | (v22 << 32);
            v12 = v21;
            v13 = v21;
            v14 = v11;
            sub_1A550F160(v19, v20, v13, v49, v48, v11);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            sub_1A557CC50(v18, v26, isUniquelyReferenced_nonNull_native);
            swift_bridgeObjectRelease();
            sub_1A5503B08(v19, v20, v12, v49, v48, v14);
          }
          while (v10 != v47);
LABEL_15:
          swift_bridgeObjectRelease_n();
          sub_1A54E31EC((uint64_t)&v50);
          v1 = v42;
          v8 = v45;
        }
        if (v8 == v44)
          break;
        v29 = &v43[11 * v8];
        v30 = *v29;
        v31 = v29[2];
        v51 = v29[1];
        v52 = v31;
        v50 = v30;
        v32 = v29[3];
        v33 = v29[4];
        v34 = v29[6];
        v55 = v29[5];
        v56 = v34;
        v53 = v32;
        v54 = v33;
        v35 = v29[7];
        v36 = v29[8];
        v37 = v29[10];
        v59 = v29[9];
        v60 = v37;
        v57 = v35;
        v58 = v36;
        v9 = *((_QWORD *)&v59 + 1);
        ++v8;
      }
      sub_1A54E8FCC((uint64_t)v1, v41, v40, 1);
    }
    else
    {
      return MEMORY[0x1E0DEE9E8];
    }
  }
  else
  {
    v38 = sub_1A551187C(*(_QWORD *)(v0 + 8));
    v7 = sub_1A555275C(v38);
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_1A5516F70(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  unsigned __int8 *v20;
  uint64_t v21;
  unsigned __int8 *v22;
  int v23;
  int v24;
  int v25;
  _QWORD *v26;

  if (*(_BYTE *)(v5 + 24) == 1)
  {
    v6 = v5;
    v7 = *(_QWORD **)v5;
    v9 = (_QWORD *)(v5 + 8);
    v8 = *(_QWORD *)(v5 + 8);
    v10 = *(_QWORD *)(*(_QWORD *)v5 + 16);
    if (v10)
    {
      v13 = result;
      v14 = 0;
      v15 = *(_QWORD *)(v6 + 16);
      while (1)
      {
        v16 = &v7[22 * v14 + 4];
        if (v16[1] == a3)
        {
          v17 = *v16;
          v18 = *(_QWORD *)(v17 + 16);
          if (v18 == *(_QWORD *)(a2 + 16))
          {
            if (v18)
              v19 = v17 == a2;
            else
              v19 = 1;
            if (v19)
              goto LABEL_23;
            if (*(unsigned __int8 *)(v17 + 32) == *(unsigned __int8 *)(a2 + 32))
            {
              if (v18 == 1)
                goto LABEL_23;
              if (*(unsigned __int8 *)(v17 + 33) == *(unsigned __int8 *)(a2 + 33))
              {
                if (v18 == 2)
                  goto LABEL_23;
                if (*(unsigned __int8 *)(v17 + 34) == *(unsigned __int8 *)(a2 + 34))
                {
                  if (v18 == 3)
                    goto LABEL_23;
                  if (*(unsigned __int8 *)(v17 + 35) == *(unsigned __int8 *)(a2 + 35))
                    break;
                }
              }
            }
          }
        }
LABEL_4:
        if (++v14 == v10)
          goto LABEL_22;
      }
      v20 = (unsigned __int8 *)(v17 + 36);
      v21 = v18 - 4;
      v22 = (unsigned __int8 *)(a2 + 36);
      while (v21)
      {
        v24 = *v20++;
        v23 = v24;
        v25 = *v22++;
        --v21;
        if (v23 != v25)
          goto LABEL_4;
      }
LABEL_23:
      sub_1A55212D0((uint64_t)v7, v8, *(_QWORD *)(v6 + 16), 1);
      result = swift_isUniquelyReferenced_nonNull_native();
      v26 = v7;
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1A554B6F8(v7);
        v26 = (_QWORD *)result;
      }
      if (v14 >= v26[2])
      {
        __break(1u);
        return result;
      }
      sub_1A55017F0(v13, a4, a5 & 0xFFFFFFFFFFLL);
      result = sub_1A54E8FCC((uint64_t)v7, v8, v15, 1);
    }
    else
    {
LABEL_22:
      v26 = v7;
    }
    *(_QWORD *)v6 = v26;
    *v9 = 0;
    v9[1] = 0;
    *(_BYTE *)(v6 + 24) = 1;
  }
  return result;
}

uint64_t sub_1A5517138(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  unsigned __int8 *v21;
  uint64_t v22;
  unsigned __int8 *v23;
  int v24;
  int v25;
  int v26;
  _QWORD *v27;
  uint64_t v28;

  if (*(_BYTE *)(v6 + 24) == 1)
  {
    v7 = v6;
    v8 = *(_QWORD **)v6;
    v10 = (_QWORD *)(v6 + 8);
    v9 = *(_QWORD *)(v6 + 8);
    v11 = *(_QWORD *)(*(_QWORD *)v6 + 16);
    if (v11)
    {
      v16 = 0;
      while (1)
      {
        v17 = &v8[22 * v16 + 4];
        if (v17[1] == a2)
        {
          v18 = *v17;
          v19 = *(_QWORD *)(v18 + 16);
          if (v19 == *(_QWORD *)(result + 16))
          {
            if (v19)
              v20 = v18 == result;
            else
              v20 = 1;
            if (v20)
              goto LABEL_23;
            if (*(unsigned __int8 *)(v18 + 32) == *(unsigned __int8 *)(result + 32))
            {
              if (v19 == 1)
                goto LABEL_23;
              if (*(unsigned __int8 *)(v18 + 33) == *(unsigned __int8 *)(result + 33))
              {
                if (v19 == 2)
                  goto LABEL_23;
                if (*(unsigned __int8 *)(v18 + 34) == *(unsigned __int8 *)(result + 34))
                {
                  if (v19 == 3)
                    goto LABEL_23;
                  if (*(unsigned __int8 *)(v18 + 35) == *(unsigned __int8 *)(result + 35))
                    break;
                }
              }
            }
          }
        }
LABEL_4:
        if (++v16 == v11)
          goto LABEL_22;
      }
      v21 = (unsigned __int8 *)(v18 + 36);
      v22 = v19 - 4;
      v23 = (unsigned __int8 *)(result + 36);
      while (v22)
      {
        v25 = *v21++;
        v24 = v25;
        v26 = *v23++;
        --v22;
        if (v24 != v26)
          goto LABEL_4;
      }
LABEL_23:
      v28 = *(_QWORD *)(v7 + 16);
      sub_1A55212D0((uint64_t)v8, v9, v28, 1);
      result = swift_isUniquelyReferenced_nonNull_native();
      v27 = v8;
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1A554B6F8(v8);
        v27 = (_QWORD *)result;
      }
      if (v16 >= v27[2])
      {
        __break(1u);
        return result;
      }
      sub_1A550196C(a3, a4 & 0xFFFFFFFFFFLL, a5, a6 & 0xFFFFFFFFFFLL);
      result = sub_1A54E8FCC((uint64_t)v8, v9, v28, 1);
    }
    else
    {
LABEL_22:
      v27 = v8;
    }
    *(_QWORD *)v7 = v27;
    *v10 = 0;
    v10[1] = 0;
    *(_BYTE *)(v7 + 24) = 1;
  }
  return result;
}

uint64_t sub_1A5517310(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _BYTE *v6;
  unint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  unsigned __int8 *v16;
  uint64_t v17;
  unsigned __int8 *v18;
  int v19;
  int v20;
  int v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  unint64_t v43;
  char isUniquelyReferenced_nonNull_native;
  unsigned int *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  unsigned int *v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  BOOL v60;
  _QWORD *v61;
  unint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  unint64_t *v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unsigned int v76;
  uint64_t v77;
  unsigned int v78;
  uint64_t v79;
  _BYTE v80[80];

  if (*(_BYTE *)(v3 + 24) == 1)
  {
    v4 = v3;
    v5 = *(_QWORD **)v3;
    v7 = v3 + 8;
    v6 = *(_BYTE **)(v3 + 8);
    v8 = (_QWORD *)v5[2];
    if (!v8)
    {
LABEL_62:
      *(_QWORD *)v4 = v5;
      *(_QWORD *)v7 = 0;
      *(_QWORD *)(v7 + 8) = 0;
      *(_BYTE *)(v4 + 24) = 1;
      return result;
    }
    v9 = (_QWORD *)result;
    v10 = 0;
    v11 = *(_QWORD *)(v4 + 16);
    while (1)
    {
      v12 = &v5[22 * v10 + 4];
      if (v12[1] == a3)
      {
        v13 = *v12;
        v14 = *(_QWORD *)(v13 + 16);
        if (v14 == *(_QWORD *)(a2 + 16))
        {
          if (v14)
            v15 = v13 == a2;
          else
            v15 = 1;
          if (v15)
            goto LABEL_22;
          if (*(unsigned __int8 *)(v13 + 32) == *(unsigned __int8 *)(a2 + 32))
          {
            if (v14 == 1)
              goto LABEL_22;
            if (*(unsigned __int8 *)(v13 + 33) == *(unsigned __int8 *)(a2 + 33))
            {
              if (v14 == 2)
                goto LABEL_22;
              if (*(unsigned __int8 *)(v13 + 34) == *(unsigned __int8 *)(a2 + 34))
              {
                if (v14 == 3)
                  goto LABEL_22;
                if (*(unsigned __int8 *)(v13 + 35) == *(unsigned __int8 *)(a2 + 35))
                  break;
              }
            }
          }
        }
      }
LABEL_4:
      if ((_QWORD *)++v10 == v8)
        goto LABEL_62;
    }
    v16 = (unsigned __int8 *)(v13 + 36);
    v17 = v14 - 4;
    v18 = (unsigned __int8 *)(a2 + 36);
    while (v17)
    {
      v20 = *v16++;
      v19 = v20;
      v21 = *v18++;
      --v17;
      if (v19 != v21)
        goto LABEL_4;
    }
LABEL_22:
    sub_1A55212D0((uint64_t)v5, (uint64_t)v6, *(_QWORD *)(v4 + 16), 1);
    result = swift_isUniquelyReferenced_nonNull_native();
    v22 = v5;
    if ((result & 1) == 0)
      goto LABEL_71;
LABEL_23:
    if (v10 < v22[2])
    {
      v65 = v11;
      v66 = (uint64_t)v6;
      v23 = &v22[22 * v10];
      v26 = v23[23];
      v25 = v23 + 23;
      v24 = v26;
      v11 = *(_QWORD *)(v26 + 16);
      v64 = v22;
      if (!v11)
      {
        v32 = 0;
        v27 = 0;
LABEL_61:
        sub_1A558BD20(v27, v32);
        result = sub_1A54E8FCC((uint64_t)v5, v66, v65, 1);
        v5 = v64;
        goto LABEL_62;
      }
      v69 = v25;
      v61 = v5;
      v62 = v7;
      v63 = v4;
      v27 = 0;
      v4 = v24 + 32;
      v5 = v9 + 7;
      v7 = 56;
      while (1)
      {
        if (v9[2])
        {
          v10 = *(unsigned int *)(v4 + 56 * v27);
          sub_1A594CE64();
          sub_1A594CEAC();
          v6 = v80;
          result = sub_1A594CED0();
          v28 = -1 << *((_BYTE *)v9 + 32);
          v29 = result & ~v28;
          if (((*(_QWORD *)((char *)v5 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) != 0)
          {
            v30 = v9[6];
            if (*(_DWORD *)(v30 + 4 * v29) == (_DWORD)v10)
            {
LABEL_33:
              v32 = v27 + 1;
              if (__OFADD__(v27, 1))
                goto LABEL_74;
              v33 = *v25;
              v34 = *(_QWORD *)(*v25 + 16);
              if (v32 == v34)
              {
LABEL_60:
                v7 = v62;
                v4 = v63;
                v5 = v61;
                if ((uint64_t)v32 < v27)
                  goto LABEL_73;
                goto LABEL_61;
              }
              v67 = v9 + 7;
              v68 = v9;
              while (2)
              {
                if (v32 >= v34)
                {
                  __break(1u);
LABEL_65:
                  __break(1u);
LABEL_66:
                  __break(1u);
LABEL_67:
                  __break(1u);
LABEL_68:
                  __break(1u);
LABEL_69:
                  __break(1u);
LABEL_70:
                  __break(1u);
LABEL_71:
                  result = (uint64_t)sub_1A554B6F8(v5);
                  v22 = (_QWORD *)result;
                  goto LABEL_23;
                }
                v11 = 56 * v32;
                if (v9[2]
                  && (v10 = *(unsigned int *)(v33 + v11 + 32),
                      sub_1A594CE64(),
                      sub_1A594CEAC(),
                      v6 = v80,
                      result = sub_1A594CED0(),
                      v35 = -1 << *((_BYTE *)v9 + 32),
                      v36 = result & ~v35,
                      ((*(_QWORD *)((char *)v5 + ((v36 >> 3) & 0xFFFFFFFFFFFFF8)) >> v36) & 1) != 0))
                {
                  v37 = v9[6];
                  if (*(_DWORD *)(v37 + 4 * v36) != (_DWORD)v10)
                  {
                    v38 = ~v35;
                    do
                    {
                      v36 = (v36 + 1) & v38;
                      if (((*(_QWORD *)((char *)v5 + ((v36 >> 3) & 0xFFFFFFFFFFFFF8)) >> v36) & 1) == 0)
                        goto LABEL_44;
                    }
                    while (*(_DWORD *)(v37 + 4 * v36) != (_DWORD)v10);
                  }
                }
                else
                {
LABEL_44:
                  if (v27 != v32)
                  {
                    if (v27 < 0)
                      goto LABEL_67;
                    v9 = (_QWORD *)*v25;
                    v39 = *(_QWORD *)(*v25 + 16);
                    if (v27 >= v39)
                      goto LABEL_68;
                    if (v32 >= v39)
                      goto LABEL_69;
                    v79 = 7 * v27;
                    v40 = (uint64_t)&v9[7 * v27 + 4];
                    v76 = *(_DWORD *)v40;
                    v77 = 56 * v32;
                    v41 = (char *)v9 + v11 + 32;
                    v78 = *(_DWORD *)v41;
                    v6 = (_BYTE *)*((_QWORD *)v41 + 1);
                    v11 = *((_QWORD *)v41 + 2);
                    v4 = *((_QWORD *)v41 + 3);
                    v7 = *((_QWORD *)v41 + 4);
                    v42 = *((_QWORD *)v41 + 5);
                    v43 = *((unsigned int *)v41 + 12) | ((unint64_t)v41[52] << 32);
                    v74 = *(_QWORD *)(v40 + 16);
                    v75 = *(_QWORD *)(v40 + 8);
                    v72 = *(_QWORD *)(v40 + 32);
                    v73 = *(_QWORD *)(v40 + 24);
                    v70 = *(unsigned int *)(v40 + 48) | ((unint64_t)*(unsigned __int8 *)(v40 + 52) << 32);
                    v71 = *(_QWORD *)(v40 + 40);
                    sub_1A550F160(v75, v74, v73, v72, v71, v70);
                    sub_1A550F160((unint64_t)v6, v11, v4, v7, v42, v43);
                    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                    *v25 = (unint64_t)v9;
                    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                    {
                      v9 = sub_1A554B694(v9);
                      *v69 = (unint64_t)v9;
                    }
                    v45 = (unsigned int *)&v9[v79 + 10];
                    v46 = v9[v79 + 5];
                    v47 = v9[v79 + 6];
                    v48 = v9[v79 + 7];
                    v49 = v9[v79 + 8];
                    v50 = v9[v79 + 9];
                    v51 = *v45 | ((unint64_t)BYTE4(v9[v79 + 10]) << 32);
                    *(v45 - 12) = v78;
                    *((_QWORD *)v45 - 5) = v6;
                    *((_QWORD *)v45 - 4) = v11;
                    *((_QWORD *)v45 - 3) = v4;
                    *((_QWORD *)v45 - 2) = v7;
                    *((_QWORD *)v45 - 1) = v42;
                    *v45 = v43;
                    *((_BYTE *)v45 + 4) = BYTE4(v43);
                    sub_1A5503B08(v46, v47, v48, v49, v50, v51);
                    v25 = v69;
                    v10 = *v69;
                    v52 = swift_isUniquelyReferenced_nonNull_native();
                    *v69 = v10;
                    if ((v52 & 1) == 0)
                    {
                      v10 = (unint64_t)sub_1A554B694((_QWORD *)v10);
                      *v69 = v10;
                    }
                    v5 = v67;
                    v9 = v68;
                    if (v32 >= *(_QWORD *)(v10 + 16))
                      goto LABEL_70;
                    v53 = (unsigned int *)(v10 + v77 + 80);
                    v54 = *(_QWORD *)(v10 + v77 + 40);
                    v55 = *(_QWORD *)(v10 + v77 + 48);
                    v56 = *(_QWORD *)(v10 + v77 + 56);
                    v57 = *(_QWORD *)(v10 + v77 + 64);
                    v58 = *(_QWORD *)(v10 + v77 + 72);
                    v59 = *v53 | ((unint64_t)*(unsigned __int8 *)(v10 + v77 + 84) << 32);
                    *(v53 - 12) = v76;
                    *((_QWORD *)v53 - 5) = v75;
                    *((_QWORD *)v53 - 4) = v74;
                    *((_QWORD *)v53 - 3) = v73;
                    *((_QWORD *)v53 - 2) = v72;
                    *((_QWORD *)v53 - 1) = v71;
                    *v53 = v70;
                    *((_BYTE *)v53 + 4) = BYTE4(v70);
                    result = sub_1A5503B08(v54, v55, v56, v57, v58, v59);
                  }
                  v60 = __OFADD__(v27++, 1);
                  if (v60)
                    goto LABEL_66;
                }
                v60 = __OFADD__(v32++, 1);
                if (v60)
                  goto LABEL_65;
                v33 = *v25;
                v34 = *(_QWORD *)(*v25 + 16);
                if (v32 == v34)
                  goto LABEL_60;
                continue;
              }
            }
            v31 = ~v28;
            while (1)
            {
              v29 = (v29 + 1) & v31;
              if (((*(_QWORD *)((char *)v5 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
                break;
              if (*(_DWORD *)(v30 + 4 * v29) == (_DWORD)v10)
                goto LABEL_33;
            }
          }
        }
        if (++v27 == v11)
        {
          v32 = *(_QWORD *)(*v25 + 16);
          v27 = v11;
          goto LABEL_60;
        }
      }
    }
    __break(1u);
LABEL_73:
    __break(1u);
LABEL_74:
    __break(1u);
  }
  return result;
}

BOOL sub_1A5517884(uint64_t a1, _QWORD *a2)
{
  __swift_project_boxed_opaque_existential_1_0(a2, a2[3]);
  return (sub_1A594B808() & 1) == 0;
}

uint64_t sub_1A551790C()
{
  uint64_t v0;
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  unsigned int *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;

  if (*(_BYTE *)(v0 + 24) != 1)
    return MEMORY[0x1E0DEE9E8];
  v38 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if (!v38)
    return MEMORY[0x1E0DEE9E8];
  v34 = *(_QWORD *)(v0 + 16);
  v35 = *(_QWORD *)(v0 + 8);
  v37 = *(_QWORD *)v0 + 32;
  v1 = (_OWORD *)_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v2 = v1[10];
  v48 = v1[9];
  v49 = v2;
  v3 = v1[12];
  v50 = v1[11];
  v51 = v3;
  v4 = v1[6];
  v44 = v1[5];
  v5 = v1[7];
  v6 = v1[8];
  v45 = v4;
  v46 = v5;
  v47 = v6;
  v7 = v1[3];
  v41 = v1[2];
  v42 = v7;
  v36 = (uint64_t)v1;
  v43 = v1[4];
  v8 = MEMORY[0x1E0DEE9E8];
  v9 = 1;
  v10 = v50;
  v11 = *(_QWORD *)(v50 + 16);
  if (v11)
    goto LABEL_6;
  while (v9 != v38)
  {
    v12 = (__int128 *)(v37 + 176 * v9);
    v13 = *v12;
    v14 = v12[2];
    v42 = v12[1];
    v43 = v14;
    v41 = v13;
    v15 = v12[3];
    v16 = v12[4];
    v17 = v12[6];
    v46 = v12[5];
    v47 = v17;
    v45 = v16;
    v44 = v15;
    v18 = v12[7];
    v19 = v12[8];
    v20 = v12[10];
    v50 = v12[9];
    v51 = v20;
    v48 = v18;
    v49 = v19;
    v10 = v50;
    ++v9;
    v11 = *(_QWORD *)(v50 + 16);
    if (v11)
    {
LABEL_6:
      v39 = v9;
      v40 = v10 + 32;
      swift_bridgeObjectRetain_n();
      sub_1A54E3150((uint64_t)&v41);
      v21 = 0;
      do
      {
        v23 = v8 + 56;
        while (1)
        {
          v24 = (unsigned int *)(v40 + 32 * v21);
          v25 = *v24;
          v26 = *((_QWORD *)v24 + 1);
          v27 = *((_QWORD *)v24 + 2);
          ++v21;
          sub_1A594CE64();
          sub_1A594CEAC();
          v28 = sub_1A594CED0();
          v29 = -1 << *(_BYTE *)(v8 + 32);
          v30 = v28 & ~v29;
          if (((*(_QWORD *)(v23 + ((v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
            break;
          v31 = *(_QWORD *)(v8 + 48);
          if (*(_DWORD *)(v31 + 4 * v30) != (_DWORD)v25)
          {
            v32 = ~v29;
            do
            {
              v30 = (v30 + 1) & v32;
              if (((*(_QWORD *)(v23 + ((v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
                goto LABEL_7;
            }
            while (*(_DWORD *)(v31 + 4 * v30) != (_DWORD)v25);
          }
          if (v21 == v11)
            goto LABEL_16;
        }
LABEL_7:
        sub_1A54E42B4(v26, v27);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        sub_1A557CC64(v25, v30, isUniquelyReferenced_nonNull_native);
        swift_bridgeObjectRelease();
        sub_1A54E46E8(v26, v27);
        swift_bridgeObjectRelease();
      }
      while (v21 != v11);
LABEL_16:
      swift_bridgeObjectRelease_n();
      sub_1A54E31EC((uint64_t)&v41);
      v9 = v39;
    }
  }
  sub_1A54E8FCC(v36, v35, v34, 1);
  return v8;
}

uint64_t sub_1A5517B9C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,os_log_type_t type,uint64_t a22)
{
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if ((*(unsigned int *)(result + 16) | ((unint64_t)*(unsigned int *)(result + 16) << 32)) == (*(unsigned int *)(a2 + 24) | ((unint64_t)*(unsigned int *)(a2 + 24) << 32))
    && (v28 = *(unsigned int *)result,
        v25 = *(_QWORD *)(result + 24),
        v24 = *(_QWORD *)(result + 32),
        v26 = *(_QWORD *)(result + 40),
        result = sub_1A54FF30C(*(_QWORD *)(result + 8), *(_QWORD *)(a2 + 16)),
        (result & 1) != 0))
  {
    v27 = *(_QWORD *)(a3 + 48);
    if (*(_QWORD *)(v27 + 16))
    {
      v29 = v27 + 32;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      __asm { BR              X8 }
    }
    *a4 = v28;
    a4[1] = v25;
    a4[2] = v24;
    a4[3] = v26;
    sub_1A54E42B4(v25, v24);
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    a4[3] = 1;
  }
  return result;
}

uint64_t sub_1A5518534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __int128 *v5;
  __int128 *v6;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  double v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *boxed_opaque_existential_1;
  unint64_t v34;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  unint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  _OWORD *v50;
  uint64_t v51;
  __uint64_t v52;
  _QWORD *v53;
  _BOOL4 v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD v60[11];
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _BOOL4 v66;
  unint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t __s1;
  unint64_t v74;
  uint64_t v75[3];
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  __int128 v82[3];
  _BYTE v83[28];
  uint64_t v84;

  v6 = v5;
  v71 = a3;
  v84 = *MEMORY[0x1E0C80C00];
  v11 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1A594A764();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v72 = (char *)v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = v6[2];
  v18 = v6[3];
  v19 = *v6;
  v82[1] = v6[1];
  v82[2] = v17;
  *(_OWORD *)v83 = v18;
  *(_OWORD *)&v83[12] = *(__int128 *)((char *)v6 + 60);
  v82[0] = v19;
  v61 = a1;
  v64 = a2;
  v20 = (unint64_t)sub_1A5512D28(a1, a2, v82);
  if ((v20 & 0x10000000000) != 0 || (v21 = v20, (v20 & 0x100000000) != 0))
  {
    v36 = v14;
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v72, a5, v14);
    sub_1A55034B8(a5, (uint64_t)v13, type metadata accessor for MailboxTaskLogger);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v37 = sub_1A594A74C();
    v38 = sub_1A594C018();
    v39 = v38;
    if (os_log_type_enabled(v37, v38))
    {
      v40 = swift_slowAlloc();
      LODWORD(v70) = v39;
      v71 = v15;
      v41 = v40;
      v69 = swift_slowAlloc();
      v75[0] = v69;
      *(_DWORD *)v41 = 68159235;
      LODWORD(v78) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v41 + 8) = 256;
      v42 = &v13[*(int *)(v11 + 20)];
      LOBYTE(v78) = *v42;
      sub_1A594C3CC();
      *(_WORD *)(v41 + 11) = 2082;
      v44 = *((_QWORD *)v42 + 1);
      v43 = *((_QWORD *)v42 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v78 = sub_1A55791B0(v44, v43, v75);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 21) = 1040;
      LODWORD(v78) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v41 + 27) = 512;
      LOWORD(v78) = *((_WORD *)v42 + 12);
      sub_1A594C3CC();
      *(_WORD *)(v41 + 31) = 2160;
      v78 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v41 + 41) = 2085;
      v45 = *((_DWORD *)v42 + 10);
      v78 = *((_QWORD *)v42 + 4);
      v79 = v45;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v46 = sub_1A594B4A8();
      v78 = sub_1A55791B0(v46, v47, v75);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v13, type metadata accessor for MailboxTaskLogger);
      _os_log_impl(&dword_1A4F90000, v37, (os_log_type_t)v70, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Trying to add message-to-skip, but mailbox has no UID validity.", (uint8_t *)v41, 0x33u);
      v48 = v69;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v48, -1, -1);
      MEMORY[0x1A85B1964](v41, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v72, v36);
    }
    else
    {
      sub_1A55034FC((uint64_t)v13, type metadata accessor for MailboxTaskLogger);

      return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v72, v36);
    }
  }
  else
  {
    v22 = v71;
    sub_1A54E4334(v71, a4, SBYTE4(a4));
    v23 = v61;
    v24 = sub_1A5521FA8(v61, v64, v82, v22, a4 & 0xFFFFFFFFFFLL);
    sub_1A54E3458(v22, a4, SBYTE4(a4));
    v25 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE795F48);
    v80 = v25;
    v26 = sub_1A5524F80(&qword_1EE799738, &qword_1EE795F48);
    v27 = MEMORY[0x1E0DEE9D8];
    if (v24)
      v27 = v24;
    v81 = v26;
    v78 = v27;
    v28 = __swift_project_boxed_opaque_existential_1_0(&v78, v25);
    v29 = MEMORY[0x1E0C80A78](v28);
    v31 = (_QWORD *)((char *)v60 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v32 + 16))(v31, v29);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v75);
    *boxed_opaque_existential_1 = *v31;
    boxed_opaque_existential_1[1] = 0;
    __swift_mutable_project_boxed_opaque_existential_1_0((uint64_t)v75, AssociatedTypeWitness);
    sub_1A594C3C0();
    v34 = v74;
    if (v74 >> 60 != 15)
    {
      v49 = v21;
      v63 = 0;
      v50 = v6 + 3;
      v51 = __s1;
      v60[1] = v23 + 36;
      v62 = v49;
      v60[3] = v6 + 3;
      v60[2] = (char *)v6 + 56;
      do
      {
        v52 = static MonotonicTime.now()();
        sub_1A5524FC0(v51, v34);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A54E91B8(v52);
        v53 = *(_QWORD **)v50;
        v69 = *(_QWORD *)(*(_QWORD *)v50 + 16);
        if (v69)
        {
          v60[4] = v52;
          v68 = v53 + 4;
          v71 = v34 >> 62;
          v60[8] = HIDWORD(v51);
          v54 = __OFSUB__(HIDWORD(v51), (_DWORD)v51);
          v66 = v54;
          v65 = HIDWORD(v51) - (int)v51;
          v70 = BYTE6(v34);
          v67 = v34;
          v60[10] = v34 & 0x3FFFFFFFFFFFFFFFLL;
          v60[9] = (int)v51;
          v60[7] = v51 >> 32;
          v60[6] = (v51 >> 32) - (int)v51;
          v60[5] = v53;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v55 = v68[1];
          v72 = (char *)v68[4];
          __asm { BR              X8 }
        }
        sub_1A54E42B4(v51, v34);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v53 = sub_1A54EFC70(0, 1, 1, v53);
        v57 = v53[2];
        v56 = v53[3];
        if (v57 >= v56 >> 1)
          v53 = sub_1A54EFC70((_QWORD *)(v56 > 1), v57 + 1, 1, v53);
        v53[2] = v57 + 1;
        v58 = &v53[6 * v57];
        v58[4] = v51;
        v58[5] = v34;
        *((_DWORD *)v58 + 12) = v49;
        v59 = v64;
        v58[7] = v23;
        v58[8] = v59;
        v58[9] = v52;
        sub_1A54E46E8(v51, v34);
        swift_bridgeObjectRelease();
        sub_1A5524FD4(v51, v34);
        *(_QWORD *)v50 = v53;
        __swift_mutable_project_boxed_opaque_existential_1_0((uint64_t)v75, AssociatedTypeWitness);
        sub_1A594C3C0();
        v51 = __s1;
        v34 = v74;
      }
      while (v74 >> 60 != 15);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v75);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v78);
  }
}

uint64_t sub_1A55197F0(uint64_t result, uint64_t a2, unsigned int a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  unsigned __int8 *v16;
  uint64_t v17;
  unsigned __int8 *v18;
  int v19;
  int v20;
  int v21;
  _QWORD *v22;

  if (*(_BYTE *)(v3 + 24) == 1)
  {
    v4 = v3;
    v5 = *(_QWORD **)v3;
    v7 = (_QWORD *)(v3 + 8);
    v6 = *(_QWORD *)(v3 + 8);
    v8 = *(_QWORD *)(*(_QWORD *)v3 + 16);
    if (v8)
    {
      v9 = result;
      v10 = 0;
      v11 = *(_QWORD *)(v4 + 16);
      while (1)
      {
        v12 = (uint64_t)&v5[22 * v10 + 4];
        if ((*(unsigned int *)(v12 + 24) | ((unint64_t)*(unsigned int *)(v12 + 24) << 32)) == (a3 | ((unint64_t)a3 << 32)))
        {
          v13 = *(_QWORD *)(v12 + 16);
          v14 = *(_QWORD *)(v13 + 16);
          if (v14 == *(_QWORD *)(a2 + 16))
          {
            if (v14)
              v15 = v13 == a2;
            else
              v15 = 1;
            if (v15)
              goto LABEL_23;
            if (*(unsigned __int8 *)(v13 + 32) == *(unsigned __int8 *)(a2 + 32))
            {
              if (v14 == 1)
                goto LABEL_23;
              if (*(unsigned __int8 *)(v13 + 33) == *(unsigned __int8 *)(a2 + 33))
              {
                if (v14 == 2)
                  goto LABEL_23;
                if (*(unsigned __int8 *)(v13 + 34) == *(unsigned __int8 *)(a2 + 34))
                {
                  if (v14 == 3)
                    goto LABEL_23;
                  if (*(unsigned __int8 *)(v13 + 35) == *(unsigned __int8 *)(a2 + 35))
                    break;
                }
              }
            }
          }
        }
LABEL_4:
        if (++v10 == v8)
          goto LABEL_22;
      }
      v16 = (unsigned __int8 *)(v13 + 36);
      v17 = v14 - 4;
      v18 = (unsigned __int8 *)(a2 + 36);
      while (v17)
      {
        v20 = *v16++;
        v19 = v20;
        v21 = *v18++;
        --v17;
        if (v19 != v21)
          goto LABEL_4;
      }
LABEL_23:
      sub_1A55212D0((uint64_t)v5, v6, *(_QWORD *)(v4 + 16), 1);
      result = swift_isUniquelyReferenced_nonNull_native();
      v22 = v5;
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1A554B6F8(v5);
        v22 = (_QWORD *)result;
      }
      if (v10 >= v22[2])
      {
        __break(1u);
        return result;
      }
      sub_1A5501C44(v9);
      result = sub_1A54E8FCC((uint64_t)v5, v6, v11, 1);
    }
    else
    {
LABEL_22:
      v22 = v5;
    }
    *(_QWORD *)v4 = v22;
    *v7 = 0;
    v7[1] = 0;
    *(_BYTE *)(v4 + 24) = 1;
  }
  return result;
}

uint64_t sub_1A55199AC(uint64_t result, uint64_t a2, unsigned int a3, uint64_t a4, unint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  unsigned __int8 *v18;
  uint64_t v19;
  unsigned __int8 *v20;
  int v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[304];

  v6 = *(_QWORD **)result;
  v7 = *(_QWORD *)(*(_QWORD *)result + 16);
  if (v7)
  {
    v10 = (_QWORD *)result;
    v11 = 0;
    v12 = HIDWORD(a5);
    v13 = v6 + 4;
    while (1)
    {
      v14 = &v13[22 * v11];
      if ((*((unsigned int *)v14 + 6) | ((unint64_t)*((unsigned int *)v14 + 6) << 32)) == (a3 | ((unint64_t)a3 << 32)))
      {
        v15 = v14[2];
        v16 = *(_QWORD *)(v15 + 16);
        if (v16 == *(_QWORD *)(a2 + 16))
        {
          if (v16)
            v17 = v15 == a2;
          else
            v17 = 1;
          if (v17)
            goto LABEL_21;
          if (*(unsigned __int8 *)(v15 + 32) == *(unsigned __int8 *)(a2 + 32))
          {
            if (v16 == 1)
              goto LABEL_21;
            if (*(unsigned __int8 *)(v15 + 33) == *(unsigned __int8 *)(a2 + 33))
            {
              if (v16 == 2)
                goto LABEL_21;
              if (*(unsigned __int8 *)(v15 + 34) == *(unsigned __int8 *)(a2 + 34))
              {
                if (v16 == 3)
                  goto LABEL_21;
                if (*(unsigned __int8 *)(v15 + 35) == *(unsigned __int8 *)(a2 + 35))
                  break;
              }
            }
          }
        }
      }
LABEL_3:
      if (++v11 == v7)
        return result;
    }
    v18 = (unsigned __int8 *)(v15 + 36);
    v19 = v16 - 4;
    v20 = (unsigned __int8 *)(a2 + 36);
    while (v19)
    {
      v22 = *v18++;
      v21 = v22;
      v23 = *v20++;
      --v19;
      if (v21 != v23)
        goto LABEL_3;
    }
LABEL_21:
    if (v11 >= v7)
    {
      __break(1u);
    }
    else
    {
      v24 = v13[22 * v11 + 12];
      if (!v24)
        return result;
      swift_beginAccess();
      sub_1A54E30E0(v24 + 24, (uint64_t)v27);
      sub_1A54E4334(a4, a5, v12);
      v25 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v26 = sub_1A5521818(v25, a4, a5 & 0xFFFFFFFFFFLL);
      sub_1A54E3458(a4, a5, v12);
      swift_bridgeObjectRelease();
      v5 = sub_1A55526A8(v26);
      swift_bridgeObjectRelease();
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) != 0)
        goto LABEL_24;
    }
    result = (uint64_t)sub_1A554B6F8(v6);
    v6 = (_QWORD *)result;
LABEL_24:
    if (v11 >= v6[2])
    {
      __break(1u);
    }
    else
    {
      sub_1A5501C44(v5);
      swift_bridgeObjectRelease();
      *v10 = v6;
      return sub_1A54E311C((uint64_t)v27);
    }
  }
  return result;
}

uint64_t sub_1A5519BD4@<X0>(int *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  int v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  _BYTE v22[8];
  uint64_t v23;

  v4 = *a1;
  sub_1A55032A0(a2 + 96, (uint64_t)v22, &qword_1EE797CB0);
  result = sub_1A55032A0((uint64_t)v22, (uint64_t)&v23, &qword_1EE797CB0);
  v6 = v23;
  if (!v23)
  {
    v20 = 0;
    v21 = 0xF000000000000000;
LABEL_28:
    *a3 = v20;
    a3[1] = v21;
    return result;
  }
  swift_beginAccess();
  v7 = *(_QWORD *)(v6 + 328);
  v8 = v7 + 64;
  v9 = 1 << *(_BYTE *)(v7 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(v7 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v13 = 0;
  while (v11)
  {
    v14 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    v15 = v14 | (v13 << 6);
LABEL_6:
    if (v4 == *(_DWORD *)(*(_QWORD *)(v7 + 56) + 24 * v15))
    {
      v19 = (uint64_t *)(*(_QWORD *)(v7 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_1A54E42B4(*v19, v21);
LABEL_27:
      result = swift_release();
      goto LABEL_28;
    }
  }
  v16 = v13 + 1;
  if (__OFADD__(v13, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v16 >= v12)
    goto LABEL_26;
  v17 = *(_QWORD *)(v8 + 8 * v16);
  ++v13;
  if (v17)
    goto LABEL_23;
  v13 = v16 + 1;
  if (v16 + 1 >= v12)
    goto LABEL_26;
  v17 = *(_QWORD *)(v8 + 8 * v13);
  if (v17)
    goto LABEL_23;
  v13 = v16 + 2;
  if (v16 + 2 >= v12)
    goto LABEL_26;
  v17 = *(_QWORD *)(v8 + 8 * v13);
  if (v17)
    goto LABEL_23;
  v13 = v16 + 3;
  if (v16 + 3 >= v12)
    goto LABEL_26;
  v17 = *(_QWORD *)(v8 + 8 * v13);
  if (v17)
  {
LABEL_23:
    v11 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v13 << 6);
    goto LABEL_6;
  }
  v18 = v16 + 4;
  if (v18 >= v12)
  {
LABEL_26:
    v20 = 0;
    v21 = 0xF000000000000000;
    goto LABEL_27;
  }
  v17 = *(_QWORD *)(v8 + 8 * v18);
  if (v17)
  {
    v13 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v13 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v13 >= v12)
      goto LABEL_26;
    v17 = *(_QWORD *)(v8 + 8 * v13);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t *sub_1A5519DB8@<X0>(uint64_t *result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int v10;
  unint64_t v11;
  uint64_t v12;

  v3 = *result;
  if ((unint64_t)*result >> 62 == 1
    && *(_BYTE *)(v3 + 24) == 1
    && (v4 = *(_QWORD *)(v3 + 16), ((v4 >> 59) & 0x1E | (v4 >> 2) & 1) == 0x12))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
    v6 = *(_QWORD *)(v5 + 16);
    v7 = MEMORY[0x1E0DEE9D8];
    if (v6)
    {
      v12 = MEMORY[0x1E0DEE9D8];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A54F4D28(0, v6, 0);
      v7 = v12;
      v8 = *(_QWORD *)(v12 + 16);
      v9 = 32;
      do
      {
        v10 = *(_DWORD *)(v5 + v9);
        v11 = *(_QWORD *)(v12 + 24);
        if (v8 >= v11 >> 1)
          sub_1A54F4D28(v11 > 1, v8 + 1, 1);
        *(_QWORD *)(v12 + 16) = v8 + 1;
        *(_DWORD *)(v12 + 4 * v8 + 32) = v10;
        v9 += 48;
        ++v8;
        --v6;
      }
      while (v6);
      result = (uint64_t *)swift_bridgeObjectRelease();
    }
  }
  else
  {
    v7 = MEMORY[0x1E0DEE9D8];
  }
  *a2 = v7;
  return result;
}

uint64_t sub_1A5519EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v9;
  char v10;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  char v23;
  unsigned int v24;
  _BYTE __src[440];
  _QWORD __dst[56];

  v5 = v4;
  v9 = *v4;
  v10 = *((_BYTE *)v5 + 24);
  if ((v10 & 1) == 0)
  {
    v21 = v5[1];
    v20 = v5[2];
    sub_1A55212D0(v9, v21, v20, 0);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    __dst[0] = v9;
    sub_1A55B26C4(a2, a3, a1, isUniquelyReferenced_nonNull_native);
    v14 = (_QWORD *)v9;
    swift_bridgeObjectRelease();
    result = sub_1A54E8FCC(*v5, v5[1], v5[2], *((_BYTE *)v5 + 24));
LABEL_22:
    *v5 = (uint64_t)v14;
    v5[1] = v21;
    v5[2] = v20;
    *((_BYTE *)v5 + 24) = v10;
    return result;
  }
  if (!*(_QWORD *)(v9 + 16))
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v23 = 1;
    v14 = (_QWORD *)v9;
LABEL_21:
    result = sub_1A54E8FCC(v9, v5[1], v5[2], v23);
    v21 = 0;
    v20 = 0;
    goto LABEL_22;
  }
  v24 = a1;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v12 = 0;
  v13 = 0;
  v14 = (_QWORD *)v9;
  while (1)
  {
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1A554B6F8(v14);
      v14 = (_QWORD *)result;
    }
    if (v13 >= v14[2])
      break;
    v16 = v14[v12 + 5];
    v17 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    LOBYTE(v16) = SyncRequest.includes(_:)(v17, v16, a2, a3);
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0 || a4 && (sub_1A54EA764(v14[v12 + 4], v14[v12 + 5], a4) & 1) == 0)
      goto LABEL_6;
    v18 = v14[v12 + 16];
    if (v18)
    {
      swift_beginAccess();
      sub_1A54E30E0(v18 + 24, (uint64_t)__src);
      memcpy(__dst, __src, 0x1B5uLL);
      if (*(_QWORD *)(__dst[16] + 16) != 15 || *(_QWORD *)(__dst[17] + 16))
      {
        sub_1A54E311C((uint64_t)__dst);
      }
      else
      {
        v19 = *(_QWORD *)(__dst[18] + 16);
        sub_1A54E311C((uint64_t)__dst);
        if (!v19)
          goto LABEL_6;
      }
    }
    sub_1A54F305C(__dst, v24);
LABEL_6:
    ++v13;
    v12 += 22;
    if (v13 == v14[2])
    {
      v9 = *v5;
      v23 = *((_BYTE *)v5 + 24);
      goto LABEL_21;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A551A114(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;

  v2 = v1;
  v3 = result;
  v4 = *(_QWORD *)v1;
  v5 = *(_QWORD *)(v1 + 8);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_BYTE *)(v1 + 24);
  if ((v7 & 1) != 0)
  {
    if (!*(_QWORD *)(v4 + 16))
    {
LABEL_12:
      v5 = 0;
      v6 = 0;
      goto LABEL_14;
    }
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v8 = 0;
    v9 = 168;
    v10 = (_QWORD *)v4;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v10 = sub_1A554B6F8(v10);
      if (v8 >= v10[2])
        break;
      sub_1A554B850(v3);
      ++v8;
      v9 += 176;
      if (v8 == v10[2])
      {
        result = sub_1A54E8FCC(v4, v5, v6, 1);
        v4 = (uint64_t)v10;
        goto LABEL_12;
      }
    }
    __break(1u);
  }
  else
  {
    v3 = sub_1A54FDC2C(result);
    v12 = v11;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if ((v12 & 1) == 0)
    {
      result = sub_1A54E8FCC(v4, v5, v6, 0);
      goto LABEL_14;
    }
    v14 = v4;
    v13 = v4;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      goto LABEL_11;
  }
  sub_1A554F8CC();
  v13 = v14;
LABEL_11:
  sub_1A554E1B0(v3, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = sub_1A54E8FCC(v4, v5, v6, 0);
  v4 = v13;
LABEL_14:
  *(_QWORD *)v2 = v4;
  *(_QWORD *)(v2 + 8) = v5;
  *(_QWORD *)(v2 + 16) = v6;
  *(_BYTE *)(v2 + 24) = v7;
  return result;
}

uint64_t sub_1A551A2B0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  unsigned __int8 *v25;
  uint64_t v26;
  unsigned __int8 *v27;
  int v28;
  int v29;
  int v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;

  v2 = a1 + 56;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v8 = 0;
  v34 = v6;
  v35 = v2;
  v33 = result;
  while (1)
  {
LABEL_4:
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_20;
    }
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
    if (v11 >= v6)
      return swift_release();
    v12 = *(_QWORD *)(v2 + 8 * v11);
    ++v8;
    if (!v12)
    {
      v8 = v11 + 1;
      if (v11 + 1 >= v6)
        return swift_release();
      v12 = *(_QWORD *)(v2 + 8 * v8);
      if (!v12)
      {
        v8 = v11 + 2;
        if (v11 + 2 >= v6)
          return swift_release();
        v12 = *(_QWORD *)(v2 + 8 * v8);
        if (!v12)
          break;
      }
    }
LABEL_19:
    v5 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_20:
    if (*((_BYTE *)v1 + 24) == 1)
    {
      v14 = (_QWORD *)*v1;
      v15 = *(_QWORD *)(*v1 + 16);
      if (v15)
      {
        v16 = 0;
        v17 = *(_QWORD *)(result + 48) + 16 * v10;
        v18 = *(_QWORD *)v17;
        v19 = v1[2];
        v20 = *(unsigned int *)(v17 + 8) | ((unint64_t)*(unsigned int *)(v17 + 8) << 32);
        while (1)
        {
          v21 = (uint64_t)&v14[22 * v16 + 4];
          if ((*(unsigned int *)(v21 + 24) | ((unint64_t)*(unsigned int *)(v21 + 24) << 32)) == v20)
          {
            v22 = *(_QWORD *)(v21 + 16);
            v23 = *(_QWORD *)(v22 + 16);
            if (v23 == *(_QWORD *)(v18 + 16))
            {
              if (v23)
                v24 = v22 == v18;
              else
                v24 = 1;
              if (v24)
                goto LABEL_41;
              if (*(unsigned __int8 *)(v22 + 32) == *(unsigned __int8 *)(v18 + 32))
              {
                if (v23 == 1)
                  goto LABEL_41;
                if (*(unsigned __int8 *)(v22 + 33) == *(unsigned __int8 *)(v18 + 33))
                {
                  if (v23 == 2)
                    goto LABEL_41;
                  if (*(unsigned __int8 *)(v22 + 34) == *(unsigned __int8 *)(v18 + 34))
                  {
                    if (v23 == 3)
                      goto LABEL_41;
                    if (*(unsigned __int8 *)(v22 + 35) == *(unsigned __int8 *)(v18 + 35))
                      break;
                  }
                }
              }
            }
          }
LABEL_23:
          if (++v16 == v15)
            goto LABEL_4;
        }
        v25 = (unsigned __int8 *)(v22 + 36);
        v26 = v23 - 4;
        v27 = (unsigned __int8 *)(v18 + 36);
        while (v26)
        {
          v29 = *v25++;
          v28 = v29;
          v30 = *v27++;
          --v26;
          if (v28 != v30)
            goto LABEL_23;
        }
LABEL_41:
        v31 = v1[1];
        sub_1A55212D0(*v1, v31, v1[2], 1);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        result = swift_isUniquelyReferenced_nonNull_native();
        v32 = v14;
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_1A554B6F8(v14);
          v32 = (_QWORD *)result;
        }
        if (v16 >= v32[2])
          goto LABEL_47;
        swift_bridgeObjectRelease();
        v32[22 * v16 + 21] = MEMORY[0x1E0DEE9E8];
        sub_1A54E8FCC((uint64_t)v14, v31, v19, 1);
        swift_bridgeObjectRelease();
        *v1 = (uint64_t)v32;
        result = v33;
        v1[1] = 0;
        v1[2] = 0;
        *((_BYTE *)v1 + 24) = 1;
        v6 = v34;
        v2 = v35;
      }
    }
  }
  v13 = v11 + 3;
  if (v13 >= v6)
    return swift_release();
  v12 = *(_QWORD *)(v2 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_19;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v6)
      return swift_release();
    v12 = *(_QWORD *)(v2 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_19;
  }
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_1A551A58C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, unint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  unsigned __int8 *v16;
  uint64_t v17;
  unsigned __int8 *v18;
  int v19;
  int v20;
  int v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  int v25;
  _QWORD *v26;
  _BYTE __src[456];

  v6 = (_QWORD *)a5;
  v7 = *(_QWORD **)a1;
  v8 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if (!v8)
    return swift_release();
  v10 = 0;
  v11 = v7 + 4;
  while (1)
  {
    v12 = &v11[22 * v10];
    if (v12[1] == a3)
    {
      v13 = *v12;
      v14 = *(_QWORD *)(v13 + 16);
      if (v14 == *(_QWORD *)(a2 + 16))
      {
        if (v14)
          v15 = v13 == a2;
        else
          v15 = 1;
        if (v15)
          goto LABEL_22;
        if (*(unsigned __int8 *)(v13 + 32) == *(unsigned __int8 *)(a2 + 32))
        {
          if (v14 == 1)
            goto LABEL_22;
          if (*(unsigned __int8 *)(v13 + 33) == *(unsigned __int8 *)(a2 + 33))
          {
            if (v14 == 2)
              goto LABEL_22;
            if (*(unsigned __int8 *)(v13 + 34) == *(unsigned __int8 *)(a2 + 34))
            {
              if (v14 == 3)
                goto LABEL_22;
              if (*(unsigned __int8 *)(v13 + 35) == *(unsigned __int8 *)(a2 + 35))
                break;
            }
          }
        }
      }
    }
LABEL_3:
    if (++v10 == v8)
      return swift_release();
  }
  v16 = (unsigned __int8 *)(v13 + 36);
  v17 = v14 - 4;
  v18 = (unsigned __int8 *)(a2 + 36);
  while (v17)
  {
    v20 = *v16++;
    v19 = v20;
    v21 = *v18++;
    --v17;
    if (v19 != v21)
      goto LABEL_3;
  }
LABEL_22:
  if (v10 >= v8)
  {
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v5 = v11[22 * v10 + 12];
  if (!v5)
  {
    if ((a4 & 1) != 0)
    {
      swift_retain();
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) != 0)
        goto LABEL_34;
      goto LABEL_44;
    }
    return swift_release();
  }
  v7 = (_QWORD *)(a5 & 0xFFFFFFFFFFFFFFBLL);
  swift_retain();
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    swift_beginAccess();
    sub_1A5502F44(v5 + 16, (uint64_t)__src);
    _s13SelectedStateV8_StorageCMa();
    v23 = swift_allocObject();
    memcpy((void *)(v23 + 16), __src, 0x1C5uLL);
    swift_release();
    v5 = v23;
  }
  swift_beginAccess();
  swift_retain();
  sub_1A551C9EC(v5 + 24, (uint64_t)v6);
  v6 = *(_QWORD **)a1;
  if (v10 >= *(_QWORD *)(*(_QWORD *)a1 + 16))
    goto LABEL_41;
  v24 = v6[22 * v10 + 16];
  if (!v24)
  {
    swift_beginAccess();
    goto LABEL_37;
  }
  swift_beginAccess();
  v25 = *(_DWORD *)(v24 + 16);
  swift_beginAccess();
  if (v25 != *(_DWORD *)(v5 + 16))
  {
LABEL_37:
    swift_release();
    return swift_release_n();
  }
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_42:
    v6 = sub_1A554B6F8(v6);
  if (v10 < v6[2])
  {
    v6[22 * v10 + 16] = v5;
    swift_release();
    *(_QWORD *)a1 = v6;
    swift_release_n();
    return swift_release();
  }
  __break(1u);
LABEL_44:
  result = (uint64_t)sub_1A554B6F8(v7);
  v7 = (_QWORD *)result;
LABEL_34:
  if (v10 >= v7[2])
  {
    __break(1u);
  }
  else
  {
    v26 = &v7[22 * v10];
    sub_1A5511C08(MEMORY[0x1E0DEE9E8], (uint64_t (*)(_BYTE *, _QWORD))sub_1A54F305C);
    Set<>.formNonEmpty()();
    *((_DWORD *)v26 + 34) = 0;
    *((_BYTE *)v26 + 140) = 1;
    result = swift_release_n();
    *(_QWORD *)a1 = v7;
  }
  return result;
}

uint64_t sub_1A551A904(uint64_t a1, uint64_t a2, unsigned int a3, char a4, unint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  unsigned __int8 *v16;
  uint64_t v17;
  unsigned __int8 *v18;
  int v19;
  int v20;
  int v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  int v25;
  _QWORD *v26;
  _BYTE __src[456];

  v6 = (_QWORD *)a5;
  v7 = *(_QWORD **)a1;
  v8 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if (!v8)
    return swift_release();
  v10 = 0;
  v11 = v7 + 4;
  while (1)
  {
    v12 = &v11[22 * v10];
    if ((*((unsigned int *)v12 + 6) | ((unint64_t)*((unsigned int *)v12 + 6) << 32)) == (a3 | ((unint64_t)a3 << 32)))
    {
      v13 = v12[2];
      v14 = *(_QWORD *)(v13 + 16);
      if (v14 == *(_QWORD *)(a2 + 16))
      {
        if (v14)
          v15 = v13 == a2;
        else
          v15 = 1;
        if (v15)
          goto LABEL_22;
        if (*(unsigned __int8 *)(v13 + 32) == *(unsigned __int8 *)(a2 + 32))
        {
          if (v14 == 1)
            goto LABEL_22;
          if (*(unsigned __int8 *)(v13 + 33) == *(unsigned __int8 *)(a2 + 33))
          {
            if (v14 == 2)
              goto LABEL_22;
            if (*(unsigned __int8 *)(v13 + 34) == *(unsigned __int8 *)(a2 + 34))
            {
              if (v14 == 3)
                goto LABEL_22;
              if (*(unsigned __int8 *)(v13 + 35) == *(unsigned __int8 *)(a2 + 35))
                break;
            }
          }
        }
      }
    }
LABEL_3:
    if (++v10 == v8)
      return swift_release();
  }
  v16 = (unsigned __int8 *)(v13 + 36);
  v17 = v14 - 4;
  v18 = (unsigned __int8 *)(a2 + 36);
  while (v17)
  {
    v20 = *v16++;
    v19 = v20;
    v21 = *v18++;
    --v17;
    if (v19 != v21)
      goto LABEL_3;
  }
LABEL_22:
  if (v10 >= v8)
  {
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v5 = v11[22 * v10 + 12];
  if (!v5)
  {
    if ((a4 & 1) != 0)
    {
      swift_retain();
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) != 0)
        goto LABEL_34;
      goto LABEL_44;
    }
    return swift_release();
  }
  v7 = (_QWORD *)(a5 & 0xFFFFFFFFFFFFFFBLL);
  swift_retain();
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    swift_beginAccess();
    sub_1A5502F44(v5 + 16, (uint64_t)__src);
    _s13SelectedStateV8_StorageCMa();
    v23 = swift_allocObject();
    memcpy((void *)(v23 + 16), __src, 0x1C5uLL);
    swift_release();
    v5 = v23;
  }
  swift_beginAccess();
  swift_retain();
  sub_1A551C9EC(v5 + 24, (uint64_t)v6);
  v6 = *(_QWORD **)a1;
  if (v10 >= *(_QWORD *)(*(_QWORD *)a1 + 16))
    goto LABEL_41;
  v24 = v6[22 * v10 + 16];
  if (!v24)
  {
    swift_beginAccess();
    goto LABEL_37;
  }
  swift_beginAccess();
  v25 = *(_DWORD *)(v24 + 16);
  swift_beginAccess();
  if (v25 != *(_DWORD *)(v5 + 16))
  {
LABEL_37:
    swift_release();
    return swift_release_n();
  }
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_42:
    v6 = sub_1A554B6F8(v6);
  if (v10 < v6[2])
  {
    v6[22 * v10 + 16] = v5;
    swift_release();
    *(_QWORD *)a1 = v6;
    swift_release_n();
    return swift_release();
  }
  __break(1u);
LABEL_44:
  result = (uint64_t)sub_1A554B6F8(v7);
  v7 = (_QWORD *)result;
LABEL_34:
  if (v10 >= v7[2])
  {
    __break(1u);
  }
  else
  {
    v26 = &v7[22 * v10];
    sub_1A5511C08(MEMORY[0x1E0DEE9E8], (uint64_t (*)(_BYTE *, _QWORD))sub_1A54F305C);
    Set<>.formNonEmpty()();
    *((_DWORD *)v26 + 34) = 0;
    *((_BYTE *)v26 + 140) = 1;
    result = swift_release_n();
    *(_QWORD *)a1 = v7;
  }
  return result;
}

void sub_1A551AC88(uint64_t a1, uint64_t a2, unsigned int a3, char a4, void (*a5)(uint64_t), _QWORD *a6)
{
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  unsigned __int8 *v18;
  uint64_t v19;
  unsigned __int8 *v20;
  int v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  _QWORD *v27;
  _BYTE __src[456];

  v7 = *(_QWORD **)a1;
  v8 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if (v8)
  {
    v12 = 0;
    v13 = v7 + 4;
    while (1)
    {
      v14 = &v13[22 * v12];
      if ((*((unsigned int *)v14 + 6) | ((unint64_t)*((unsigned int *)v14 + 6) << 32)) == (a3 | ((unint64_t)a3 << 32)))
      {
        v15 = v14[2];
        v16 = *(_QWORD *)(v15 + 16);
        if (v16 == *(_QWORD *)(a2 + 16))
        {
          if (v16)
            v17 = v15 == a2;
          else
            v17 = 1;
          if (v17)
            goto LABEL_21;
          if (*(unsigned __int8 *)(v15 + 32) == *(unsigned __int8 *)(a2 + 32))
          {
            if (v16 == 1)
              goto LABEL_21;
            if (*(unsigned __int8 *)(v15 + 33) == *(unsigned __int8 *)(a2 + 33))
            {
              if (v16 == 2)
                goto LABEL_21;
              if (*(unsigned __int8 *)(v15 + 34) == *(unsigned __int8 *)(a2 + 34))
              {
                if (v16 == 3)
                  goto LABEL_21;
                if (*(unsigned __int8 *)(v15 + 35) == *(unsigned __int8 *)(a2 + 35))
                  break;
              }
            }
          }
        }
      }
LABEL_3:
      if (++v12 == v8)
        return;
    }
    v18 = (unsigned __int8 *)(v15 + 36);
    v19 = v16 - 4;
    v20 = (unsigned __int8 *)(a2 + 36);
    while (v19)
    {
      v22 = *v18++;
      v21 = v22;
      v23 = *v20++;
      --v19;
      if (v21 != v23)
        goto LABEL_3;
    }
LABEL_21:
    if (v12 >= v8)
    {
      __break(1u);
    }
    else
    {
      v6 = v13[22 * v12 + 12];
      if (!v6)
      {
        if ((a4 & 1) == 0)
          return;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          goto LABEL_33;
        goto LABEL_42;
      }
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        swift_beginAccess();
        sub_1A5502F44(v6 + 16, (uint64_t)__src);
        _s13SelectedStateV8_StorageCMa();
        v24 = swift_allocObject();
        memcpy((void *)(v24 + 16), __src, 0x1C5uLL);
        swift_release();
        v6 = v24;
      }
      v7 = (_QWORD *)(v6 + 16);
      swift_beginAccess();
      a5(v6 + 256);
      swift_endAccess();
      a6 = *(_QWORD **)a1;
      if (v12 < *(_QWORD *)(*(_QWORD *)a1 + 16))
      {
        v25 = a6[22 * v12 + 16];
        if (!v25)
        {
          swift_beginAccess();
          goto LABEL_36;
        }
        swift_beginAccess();
        v26 = *(_DWORD *)(v25 + 16);
        swift_beginAccess();
        if (v26 != *(_DWORD *)v7)
        {
LABEL_36:
          swift_release();
          return;
        }
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          goto LABEL_29;
        goto LABEL_40;
      }
    }
    __break(1u);
LABEL_40:
    a6 = sub_1A554B6F8(a6);
LABEL_29:
    if (v12 < a6[2])
    {
      a6[22 * v12 + 16] = v6;
      swift_release();
      *(_QWORD *)a1 = a6;
      goto LABEL_36;
    }
    __break(1u);
LABEL_42:
    v7 = sub_1A554B6F8(v7);
LABEL_33:
    if (v12 >= v7[2])
    {
      __break(1u);
    }
    else
    {
      v27 = &v7[22 * v12];
      sub_1A5511C08(MEMORY[0x1E0DEE9E8], (uint64_t (*)(_BYTE *, _QWORD))sub_1A54F305C);
      Set<>.formNonEmpty()();
      *((_DWORD *)v27 + 34) = 0;
      *((_BYTE *)v27 + 140) = 1;
      *(_QWORD *)a1 = v7;
    }
  }
}

void sub_1A551AF90(uint64_t a1, uint64_t a2, unsigned int a3, char a4, uint64_t a5, __int16 a6)
{
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  unsigned __int8 *v19;
  uint64_t v20;
  unsigned __int8 *v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  _QWORD *v28;
  _BYTE __src[456];

  v8 = *(_QWORD **)a1;
  v9 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if (v9)
  {
    v13 = 0;
    v14 = v8 + 4;
    while (1)
    {
      v15 = &v14[22 * v13];
      if ((*((unsigned int *)v15 + 6) | ((unint64_t)*((unsigned int *)v15 + 6) << 32)) == (a3 | ((unint64_t)a3 << 32)))
      {
        v16 = v15[2];
        v17 = *(_QWORD *)(v16 + 16);
        if (v17 == *(_QWORD *)(a2 + 16))
        {
          if (v17)
            v18 = v16 == a2;
          else
            v18 = 1;
          if (v18)
            goto LABEL_21;
          if (*(unsigned __int8 *)(v16 + 32) == *(unsigned __int8 *)(a2 + 32))
          {
            if (v17 == 1)
              goto LABEL_21;
            if (*(unsigned __int8 *)(v16 + 33) == *(unsigned __int8 *)(a2 + 33))
            {
              if (v17 == 2)
                goto LABEL_21;
              if (*(unsigned __int8 *)(v16 + 34) == *(unsigned __int8 *)(a2 + 34))
              {
                if (v17 == 3)
                  goto LABEL_21;
                if (*(unsigned __int8 *)(v16 + 35) == *(unsigned __int8 *)(a2 + 35))
                  break;
              }
            }
          }
        }
      }
LABEL_3:
      if (++v13 == v9)
        return;
    }
    v19 = (unsigned __int8 *)(v16 + 36);
    v20 = v17 - 4;
    v21 = (unsigned __int8 *)(a2 + 36);
    while (v20)
    {
      v23 = *v19++;
      v22 = v23;
      v24 = *v21++;
      --v20;
      if (v22 != v24)
        goto LABEL_3;
    }
LABEL_21:
    if (v13 >= v9)
    {
      __break(1u);
    }
    else
    {
      v7 = v14[22 * v13 + 12];
      if (!v7)
      {
        if ((a4 & 1) == 0)
          return;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          goto LABEL_33;
        goto LABEL_42;
      }
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        swift_beginAccess();
        sub_1A5502F44(v7 + 16, (uint64_t)__src);
        _s13SelectedStateV8_StorageCMa();
        v25 = swift_allocObject();
        memcpy((void *)(v25 + 16), __src, 0x1C5uLL);
        swift_release();
        v7 = v25;
      }
      v8 = (_QWORD *)(v7 + 16);
      swift_beginAccess();
      sub_1A552877C(a5 & 0x1010101FFFF01, a6 & 0xFF01);
      swift_endAccess();
      v6 = *(_QWORD **)a1;
      if (v13 < *(_QWORD *)(*(_QWORD *)a1 + 16))
      {
        v26 = v6[22 * v13 + 16];
        if (!v26)
        {
          swift_beginAccess();
          goto LABEL_36;
        }
        swift_beginAccess();
        v27 = *(_DWORD *)(v26 + 16);
        swift_beginAccess();
        if (v27 != *(_DWORD *)v8)
        {
LABEL_36:
          swift_release();
          return;
        }
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          goto LABEL_29;
        goto LABEL_40;
      }
    }
    __break(1u);
LABEL_40:
    v6 = sub_1A554B6F8(v6);
LABEL_29:
    if (v13 < v6[2])
    {
      v6[22 * v13 + 16] = v7;
      swift_release();
      *(_QWORD *)a1 = v6;
      goto LABEL_36;
    }
    __break(1u);
LABEL_42:
    v8 = sub_1A554B6F8(v8);
LABEL_33:
    if (v13 >= v8[2])
    {
      __break(1u);
    }
    else
    {
      v28 = &v8[22 * v13];
      sub_1A5511C08(MEMORY[0x1E0DEE9E8], (uint64_t (*)(_BYTE *, _QWORD))sub_1A54F305C);
      Set<>.formNonEmpty()();
      *((_DWORD *)v28 + 34) = 0;
      *((_BYTE *)v28 + 140) = 1;
      *(_QWORD *)a1 = v8;
    }
  }
}

void sub_1A551B2B0(uint64_t a1, uint64_t a2, unsigned int a3, char a4, void (*a5)(uint64_t, uint64_t), _QWORD *a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  unsigned __int8 *v20;
  uint64_t v21;
  unsigned __int8 *v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  _QWORD *v29;
  _BYTE __src[456];

  v8 = *(_QWORD **)a1;
  v9 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if (v9)
  {
    v14 = 0;
    v15 = v8 + 4;
    while (1)
    {
      v16 = &v15[22 * v14];
      if ((*((unsigned int *)v16 + 6) | ((unint64_t)*((unsigned int *)v16 + 6) << 32)) == (a3 | ((unint64_t)a3 << 32)))
      {
        v17 = v16[2];
        v18 = *(_QWORD *)(v17 + 16);
        if (v18 == *(_QWORD *)(a2 + 16))
        {
          if (v18)
            v19 = v17 == a2;
          else
            v19 = 1;
          if (v19)
            goto LABEL_21;
          if (*(unsigned __int8 *)(v17 + 32) == *(unsigned __int8 *)(a2 + 32))
          {
            if (v18 == 1)
              goto LABEL_21;
            if (*(unsigned __int8 *)(v17 + 33) == *(unsigned __int8 *)(a2 + 33))
            {
              if (v18 == 2)
                goto LABEL_21;
              if (*(unsigned __int8 *)(v17 + 34) == *(unsigned __int8 *)(a2 + 34))
              {
                if (v18 == 3)
                  goto LABEL_21;
                if (*(unsigned __int8 *)(v17 + 35) == *(unsigned __int8 *)(a2 + 35))
                  break;
              }
            }
          }
        }
      }
LABEL_3:
      if (++v14 == v9)
        return;
    }
    v20 = (unsigned __int8 *)(v17 + 36);
    v21 = v18 - 4;
    v22 = (unsigned __int8 *)(a2 + 36);
    while (v21)
    {
      v24 = *v20++;
      v23 = v24;
      v25 = *v22++;
      --v21;
      if (v23 != v25)
        goto LABEL_3;
    }
LABEL_21:
    if (v14 >= v9)
    {
      __break(1u);
    }
    else
    {
      v7 = v15[22 * v14 + 12];
      if (!v7)
      {
        if ((a4 & 1) == 0)
          return;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          goto LABEL_33;
        goto LABEL_42;
      }
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        swift_beginAccess();
        sub_1A5502F44(v7 + 16, (uint64_t)__src);
        _s13SelectedStateV8_StorageCMa();
        v26 = swift_allocObject();
        memcpy((void *)(v26 + 16), __src, 0x1C5uLL);
        swift_release();
        v7 = v26;
      }
      v8 = (_QWORD *)(v7 + 16);
      swift_beginAccess();
      a5(v7 + 24, a7 & 0x1010101FFFF01);
      swift_endAccess();
      a6 = *(_QWORD **)a1;
      if (v14 < *(_QWORD *)(*(_QWORD *)a1 + 16))
      {
        v27 = a6[22 * v14 + 16];
        if (!v27)
        {
          swift_beginAccess();
          goto LABEL_36;
        }
        swift_beginAccess();
        v28 = *(_DWORD *)(v27 + 16);
        swift_beginAccess();
        if (v28 != *(_DWORD *)v8)
        {
LABEL_36:
          swift_release();
          return;
        }
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          goto LABEL_29;
        goto LABEL_40;
      }
    }
    __break(1u);
LABEL_40:
    a6 = sub_1A554B6F8(a6);
LABEL_29:
    if (v14 < a6[2])
    {
      a6[22 * v14 + 16] = v7;
      swift_release();
      *(_QWORD *)a1 = a6;
      goto LABEL_36;
    }
    __break(1u);
LABEL_42:
    v8 = sub_1A554B6F8(v8);
LABEL_33:
    if (v14 >= v8[2])
    {
      __break(1u);
    }
    else
    {
      v29 = &v8[22 * v14];
      sub_1A5511C08(MEMORY[0x1E0DEE9E8], (uint64_t (*)(_BYTE *, _QWORD))sub_1A54F305C);
      Set<>.formNonEmpty()();
      *((_DWORD *)v29 + 34) = 0;
      *((_BYTE *)v29 + 140) = 1;
      *(_QWORD *)a1 = v8;
    }
  }
}

void sub_1A551B5D0(uint64_t a1, uint64_t a2, unsigned int a3, char a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  unsigned __int8 *v17;
  uint64_t v18;
  unsigned __int8 *v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  _QWORD *v33;
  _BYTE __src[456];

  v7 = *(_QWORD **)a1;
  v8 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if (v8)
  {
    v11 = 0;
    v12 = v7 + 4;
    while (1)
    {
      v13 = &v12[22 * v11];
      if ((*((unsigned int *)v13 + 6) | ((unint64_t)*((unsigned int *)v13 + 6) << 32)) == (a3 | ((unint64_t)a3 << 32)))
      {
        v14 = v13[2];
        v15 = *(_QWORD *)(v14 + 16);
        if (v15 == *(_QWORD *)(a2 + 16))
        {
          if (v15)
            v16 = v14 == a2;
          else
            v16 = 1;
          if (v16)
            goto LABEL_21;
          if (*(unsigned __int8 *)(v14 + 32) == *(unsigned __int8 *)(a2 + 32))
          {
            if (v15 == 1)
              goto LABEL_21;
            if (*(unsigned __int8 *)(v14 + 33) == *(unsigned __int8 *)(a2 + 33))
            {
              if (v15 == 2)
                goto LABEL_21;
              if (*(unsigned __int8 *)(v14 + 34) == *(unsigned __int8 *)(a2 + 34))
              {
                if (v15 == 3)
                  goto LABEL_21;
                if (*(unsigned __int8 *)(v14 + 35) == *(unsigned __int8 *)(a2 + 35))
                  break;
              }
            }
          }
        }
      }
LABEL_3:
      if (++v11 == v8)
        return;
    }
    v17 = (unsigned __int8 *)(v14 + 36);
    v18 = v15 - 4;
    v19 = (unsigned __int8 *)(a2 + 36);
    while (v18)
    {
      v21 = *v17++;
      v20 = v21;
      v22 = *v19++;
      --v18;
      if (v20 != v22)
        goto LABEL_3;
    }
LABEL_21:
    if (v11 >= v8)
    {
      __break(1u);
    }
    else
    {
      v6 = (_QWORD *)v12[22 * v11 + 12];
      if (!v6)
      {
        if ((a4 & 1) == 0)
          return;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          goto LABEL_33;
        goto LABEL_42;
      }
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        swift_beginAccess();
        sub_1A5502F44((uint64_t)(v6 + 2), (uint64_t)__src);
        _s13SelectedStateV8_StorageCMa();
        v23 = swift_allocObject();
        memcpy((void *)(v23 + 16), __src, 0x1C5uLL);
        swift_release();
        v6 = (_QWORD *)v23;
      }
      v7 = v6 + 2;
      swift_beginAccess();
      v24 = v6[26];
      v25 = v6[27];
      __swift_project_boxed_opaque_existential_1_0(v6 + 23, v24);
      *(_QWORD *)a5 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 72))(v24, v25);
      *(_BYTE *)(a5 + 8) = v26 & 1;
      v27 = v6[26];
      v28 = v6[27];
      __swift_mutable_project_boxed_opaque_existential_1_0((uint64_t)(v6 + 23), v27);
      (*(void (**)(uint64_t, uint64_t))(v28 + 48))(v27, v28);
      v29 = v6[26];
      v30 = v6[27];
      __swift_mutable_project_boxed_opaque_existential_1_0((uint64_t)(v6 + 23), v29);
      (*(void (**)(uint64_t, uint64_t))(v30 + 80))(v29, v30);
      swift_endAccess();
      v5 = *(_QWORD **)a1;
      if (v11 < *(_QWORD *)(*(_QWORD *)a1 + 16))
      {
        v31 = v5[22 * v11 + 16];
        if (!v31)
        {
          swift_beginAccess();
          goto LABEL_36;
        }
        swift_beginAccess();
        v32 = *(_DWORD *)(v31 + 16);
        swift_beginAccess();
        if (v32 != *(_DWORD *)v7)
        {
LABEL_36:
          swift_release();
          return;
        }
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          goto LABEL_29;
        goto LABEL_40;
      }
    }
    __break(1u);
LABEL_40:
    v5 = sub_1A554B6F8(v5);
LABEL_29:
    if (v11 < v5[2])
    {
      v5[22 * v11 + 16] = v6;
      swift_release();
      *(_QWORD *)a1 = v5;
      goto LABEL_36;
    }
    __break(1u);
LABEL_42:
    v7 = sub_1A554B6F8(v7);
LABEL_33:
    if (v11 >= v7[2])
    {
      __break(1u);
    }
    else
    {
      v33 = &v7[22 * v11];
      sub_1A5511C08(MEMORY[0x1E0DEE9E8], (uint64_t (*)(_BYTE *, _QWORD))sub_1A54F305C);
      Set<>.formNonEmpty()();
      *((_DWORD *)v33 + 34) = 0;
      *((_BYTE *)v33 + 140) = 1;
      *(_QWORD *)a1 = v7;
    }
  }
}

void sub_1A551B950(uint64_t a1, uint64_t a2, unsigned int a3, char a4)
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  unsigned __int8 *v15;
  uint64_t v16;
  unsigned __int8 *v17;
  int v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  _QWORD *v24;
  char v25[24];
  _BYTE __src[456];

  v6 = *(_QWORD **)a1;
  v7 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if (v7)
  {
    v9 = 0;
    v10 = v6 + 4;
    while (1)
    {
      v11 = &v10[22 * v9];
      if ((*((unsigned int *)v11 + 6) | ((unint64_t)*((unsigned int *)v11 + 6) << 32)) == (a3 | ((unint64_t)a3 << 32)))
      {
        v12 = v11[2];
        v13 = *(_QWORD *)(v12 + 16);
        if (v13 == *(_QWORD *)(a2 + 16))
        {
          if (v13)
            v14 = v12 == a2;
          else
            v14 = 1;
          if (v14)
            goto LABEL_21;
          if (*(unsigned __int8 *)(v12 + 32) == *(unsigned __int8 *)(a2 + 32))
          {
            if (v13 == 1)
              goto LABEL_21;
            if (*(unsigned __int8 *)(v12 + 33) == *(unsigned __int8 *)(a2 + 33))
            {
              if (v13 == 2)
                goto LABEL_21;
              if (*(unsigned __int8 *)(v12 + 34) == *(unsigned __int8 *)(a2 + 34))
              {
                if (v13 == 3)
                  goto LABEL_21;
                if (*(unsigned __int8 *)(v12 + 35) == *(unsigned __int8 *)(a2 + 35))
                  break;
              }
            }
          }
        }
      }
LABEL_3:
      if (++v9 == v7)
        return;
    }
    v15 = (unsigned __int8 *)(v12 + 36);
    v16 = v13 - 4;
    v17 = (unsigned __int8 *)(a2 + 36);
    while (v16)
    {
      v19 = *v15++;
      v18 = v19;
      v20 = *v17++;
      --v16;
      if (v18 != v20)
        goto LABEL_3;
    }
LABEL_21:
    if (v9 >= v7)
    {
      __break(1u);
    }
    else
    {
      v5 = v10[22 * v9 + 12];
      if (!v5)
      {
        if ((a4 & 1) == 0)
          return;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          goto LABEL_33;
        goto LABEL_42;
      }
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        swift_beginAccess();
        sub_1A5502F44(v5 + 16, (uint64_t)__src);
        _s13SelectedStateV8_StorageCMa();
        v21 = swift_allocObject();
        memcpy((void *)(v21 + 16), __src, 0x1C5uLL);
        swift_release();
        v5 = v21;
      }
      v6 = (_QWORD *)(v5 + 16);
      swift_beginAccess();
      sub_1A554B85C(8u);
      sub_1A54F3290(v25, 8);
      swift_endAccess();
      v4 = *(_QWORD **)a1;
      if (v9 < *(_QWORD *)(*(_QWORD *)a1 + 16))
      {
        v22 = v4[22 * v9 + 16];
        if (!v22)
        {
          swift_beginAccess();
          goto LABEL_36;
        }
        swift_beginAccess();
        v23 = *(_DWORD *)(v22 + 16);
        swift_beginAccess();
        if (v23 != *(_DWORD *)v6)
        {
LABEL_36:
          swift_release();
          return;
        }
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          goto LABEL_29;
        goto LABEL_40;
      }
    }
    __break(1u);
LABEL_40:
    v4 = sub_1A554B6F8(v4);
LABEL_29:
    if (v9 < v4[2])
    {
      v4[22 * v9 + 16] = v5;
      swift_release();
      *(_QWORD *)a1 = v4;
      goto LABEL_36;
    }
    __break(1u);
LABEL_42:
    v6 = sub_1A554B6F8(v6);
LABEL_33:
    if (v9 >= v6[2])
    {
      __break(1u);
    }
    else
    {
      v24 = &v6[22 * v9];
      sub_1A5511C08(MEMORY[0x1E0DEE9E8], (uint64_t (*)(_BYTE *, _QWORD))sub_1A54F305C);
      Set<>.formNonEmpty()();
      *((_DWORD *)v24 + 34) = 0;
      *((_BYTE *)v24 + 140) = 1;
      *(_QWORD *)a1 = v6;
    }
  }
}

uint64_t sub_1A551BC64(_QWORD *a1, uint64_t a2, unsigned int a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;
  _QWORD *v13;
  unint64_t v14;
  _QWORD *v16;
  unint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  unsigned __int8 *v23;
  uint64_t v24;
  unsigned __int8 *v25;
  int v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t result;
  _QWORD *v35;
  uint64_t v36;
  _BYTE __src[456];

  v11 = a7;
  v13 = (_QWORD *)*a1;
  v14 = *(_QWORD *)(*a1 + 16);
  if (!v14)
    goto LABEL_37;
  v16 = a1;
  v17 = 0;
  v18 = v13 + 4;
  while (1)
  {
    v19 = &v18[22 * v17];
    if ((*((unsigned int *)v19 + 6) | ((unint64_t)*((unsigned int *)v19 + 6) << 32)) == (a3 | ((unint64_t)a3 << 32)))
    {
      v20 = v19[2];
      v21 = *(_QWORD *)(v20 + 16);
      if (v21 == *(_QWORD *)(a2 + 16))
      {
        if (v21)
          v22 = v20 == a2;
        else
          v22 = 1;
        if (v22)
          goto LABEL_21;
        if (*(unsigned __int8 *)(v20 + 32) == *(unsigned __int8 *)(a2 + 32))
        {
          if (v21 == 1)
            goto LABEL_21;
          if (*(unsigned __int8 *)(v20 + 33) == *(unsigned __int8 *)(a2 + 33))
          {
            if (v21 == 2)
              goto LABEL_21;
            if (*(unsigned __int8 *)(v20 + 34) == *(unsigned __int8 *)(a2 + 34))
            {
              if (v21 == 3)
                goto LABEL_21;
              if (*(unsigned __int8 *)(v20 + 35) == *(unsigned __int8 *)(a2 + 35))
                break;
            }
          }
        }
      }
    }
LABEL_3:
    if (++v17 == v14)
      goto LABEL_37;
  }
  v23 = (unsigned __int8 *)(v20 + 36);
  v24 = v21 - 4;
  v25 = (unsigned __int8 *)(a2 + 36);
  while (v24)
  {
    v27 = *v23++;
    v26 = v27;
    v28 = *v25++;
    --v24;
    if (v26 != v28)
      goto LABEL_3;
  }
LABEL_21:
  if (v17 >= v14)
  {
    __break(1u);
    goto LABEL_39;
  }
  v9 = v18[22 * v17 + 12];
  if (v9)
  {
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      swift_beginAccess();
      sub_1A5502F44(v9 + 16, (uint64_t)__src);
      _s13SelectedStateV8_StorageCMa();
      v29 = swift_allocObject();
      memcpy((void *)(v29 + 16), __src, 0x1C5uLL);
      swift_release();
      v9 = v29;
    }
    swift_beginAccess();
    v16 = *(_QWORD **)(v9 + 336);
    v36 = *(_QWORD *)(v9 + 344);
    v30 = *(_QWORD *)(v9 + 352);
    v11 = v9 + 360;
    v31 = *(unsigned int *)(v9 + 360) | ((unint64_t)*(unsigned __int8 *)(v9 + 364) << 32);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5503BA0(a7, a8);
    *(_QWORD *)(v9 + 336) = a5;
    *(_QWORD *)(v9 + 344) = a6;
    *(_QWORD *)(v9 + 352) = a7;
    *(_BYTE *)(v9 + 364) = BYTE4(a8);
    *(_DWORD *)(v9 + 360) = a8;
    sub_1A5524F48((uint64_t)v16, v36, v30, v31);
    v13 = a1;
    v8 = (_QWORD *)*a1;
    if (v17 < *(_QWORD *)(*a1 + 16))
    {
      v32 = v8[22 * v17 + 16];
      if (v32)
      {
        swift_beginAccess();
        v33 = *(_DWORD *)(v32 + 16);
        v16 = (_QWORD *)(v9 + 16);
        swift_beginAccess();
        if (v33 == *(_DWORD *)(v9 + 16))
        {
          swift_retain();
          v11 = a7;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          {
LABEL_29:
            if (v17 < v8[2])
            {
              v8[22 * v17 + 16] = v9;
              swift_release();
              *v13 = v8;
              swift_release();
LABEL_37:
              swift_bridgeObjectRelease();
              return sub_1A5503B8C(v11, a8);
            }
            __break(1u);
            goto LABEL_42;
          }
LABEL_40:
          v8 = sub_1A554B6F8(v8);
          goto LABEL_29;
        }
      }
      else
      {
        swift_beginAccess();
      }
      swift_release();
      v11 = a7;
      goto LABEL_37;
    }
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  if ((a4 & 1) == 0)
    goto LABEL_37;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
LABEL_42:
    result = (uint64_t)sub_1A554B6F8(v13);
    v13 = (_QWORD *)result;
  }
  if (v17 < v13[2])
  {
    v35 = &v13[22 * v17];
    sub_1A5511C08(MEMORY[0x1E0DEE9E8], (uint64_t (*)(_BYTE *, _QWORD))sub_1A54F305C);
    Set<>.formNonEmpty()();
    *((_DWORD *)v35 + 34) = 0;
    *((_BYTE *)v35 + 140) = 1;
    *v16 = v13;
    goto LABEL_37;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A551C004(_QWORD *a1, uint64_t a2, unsigned int a3, char a4, uint64_t a5, unint64_t a6)
{
  _QWORD *v6;
  _DWORD *v8;
  unint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  unsigned __int8 *v19;
  uint64_t v20;
  unsigned __int8 *v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t result;
  _QWORD *v34;
  unint64_t v37;
  _BYTE __src[456];

  v8 = (_DWORD *)a5;
  v9 = HIDWORD(a6);
  v10 = (_QWORD *)*a1;
  v11 = *(_QWORD *)(*a1 + 16);
  if (!v11)
    return sub_1A54E3458(a5, a6, SBYTE4(a6));
  v12 = a1;
  v13 = 0;
  v14 = v10 + 4;
  while (1)
  {
    v15 = &v14[22 * v13];
    if ((*((unsigned int *)v15 + 6) | ((unint64_t)*((unsigned int *)v15 + 6) << 32)) == (a3 | ((unint64_t)a3 << 32)))
    {
      v16 = v15[2];
      v17 = *(_QWORD *)(v16 + 16);
      if (v17 == *(_QWORD *)(a2 + 16))
      {
        if (v17)
          v18 = v16 == a2;
        else
          v18 = 1;
        if (v18)
          goto LABEL_21;
        if (*(unsigned __int8 *)(v16 + 32) == *(unsigned __int8 *)(a2 + 32))
        {
          if (v17 == 1)
            goto LABEL_21;
          if (*(unsigned __int8 *)(v16 + 33) == *(unsigned __int8 *)(a2 + 33))
          {
            if (v17 == 2)
              goto LABEL_21;
            if (*(unsigned __int8 *)(v16 + 34) == *(unsigned __int8 *)(a2 + 34))
            {
              if (v17 == 3)
                goto LABEL_21;
              if (*(unsigned __int8 *)(v16 + 35) == *(unsigned __int8 *)(a2 + 35))
                break;
            }
          }
        }
      }
    }
LABEL_3:
    if (++v13 == v11)
      return sub_1A54E3458(a5, a6, SBYTE4(a6));
  }
  v19 = (unsigned __int8 *)(v16 + 36);
  v20 = v17 - 4;
  v21 = (unsigned __int8 *)(a2 + 36);
  while (v20)
  {
    v23 = *v19++;
    v22 = v23;
    v24 = *v21++;
    --v20;
    if (v22 != v24)
      goto LABEL_3;
  }
LABEL_21:
  if (v13 >= v11)
  {
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v6 = (_QWORD *)v14[22 * v13 + 12];
  if (!v6)
  {
    if ((a4 & 1) != 0)
    {
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) != 0)
        goto LABEL_33;
      goto LABEL_44;
    }
    return sub_1A54E3458(a5, a6, SBYTE4(a6));
  }
  v37 = HIDWORD(a6);
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    swift_beginAccess();
    sub_1A5502F44((uint64_t)(v6 + 2), (uint64_t)__src);
    _s13SelectedStateV8_StorageCMa();
    v25 = swift_allocObject();
    memcpy((void *)(v25 + 16), __src, 0x1C5uLL);
    swift_release();
    v6 = (_QWORD *)v25;
  }
  v8 = v6 + 2;
  swift_beginAccess();
  LOBYTE(v9) = a6;
  v26 = v6[46];
  v27 = v6[47];
  sub_1A54E4334(a5, a6, v37);
  v6[46] = a5;
  v6[47] = a6 & 0xFFFFFFFFFFLL;
  v6[48] = 0;
  v6[49] = 0;
  sub_1A550F870(v26, v27);
  v12 = a1;
  v10 = (_QWORD *)*a1;
  if (v13 >= *(_QWORD *)(*a1 + 16))
    goto LABEL_41;
  v28 = v10[22 * v13 + 16];
  if (!v28)
  {
    swift_beginAccess();
    goto LABEL_37;
  }
  swift_beginAccess();
  v29 = *(_DWORD *)(v28 + 16);
  swift_beginAccess();
  if (v29 != *v8)
  {
LABEL_37:
    swift_release();
    v30 = a5;
    v32 = v37;
    v31 = a6;
    return sub_1A54E3458(v30, v31, v32);
  }
  swift_retain();
  v8 = (_DWORD *)a5;
  LOBYTE(v9) = v37;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_42:
    v10 = sub_1A554B6F8(v10);
  if (v13 < v10[2])
  {
    v10[22 * v13 + 16] = v6;
    swift_release();
    *v12 = v10;
    swift_release();
    v30 = (uint64_t)v8;
    v31 = a6;
    v32 = v9;
    return sub_1A54E3458(v30, v31, v32);
  }
  __break(1u);
LABEL_44:
  result = (uint64_t)sub_1A554B6F8(v10);
  v10 = (_QWORD *)result;
LABEL_33:
  if (v13 >= v10[2])
  {
    __break(1u);
  }
  else
  {
    v34 = &v10[22 * v13];
    sub_1A5511C08(MEMORY[0x1E0DEE9E8], (uint64_t (*)(_BYTE *, _QWORD))sub_1A54F305C);
    Set<>.formNonEmpty()();
    *((_DWORD *)v34 + 34) = 0;
    *((_BYTE *)v34 + 140) = 1;
    result = sub_1A54E3458((uint64_t)v8, a6, v9);
    *v12 = v10;
  }
  return result;
}

uint64_t sub_1A551C3AC(uint64_t a1, uint64_t a2, unsigned int a3, char a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  unsigned __int8 *v17;
  uint64_t v18;
  unsigned __int8 *v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t result;
  _QWORD *v27;
  _BYTE __src[456];

  v8 = *(_QWORD **)a1;
  v9 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if (!v9)
    return sub_1A5524EF4(a5);
  v11 = 0;
  v12 = v8 + 4;
  while (1)
  {
    v13 = &v12[22 * v11];
    if ((*((unsigned int *)v13 + 6) | ((unint64_t)*((unsigned int *)v13 + 6) << 32)) == (a3 | ((unint64_t)a3 << 32)))
    {
      v14 = v13[2];
      v15 = *(_QWORD *)(v14 + 16);
      if (v15 == *(_QWORD *)(a2 + 16))
      {
        if (v15)
          v16 = v14 == a2;
        else
          v16 = 1;
        if (v16)
          goto LABEL_21;
        if (*(unsigned __int8 *)(v14 + 32) == *(unsigned __int8 *)(a2 + 32))
        {
          if (v15 == 1)
            goto LABEL_21;
          if (*(unsigned __int8 *)(v14 + 33) == *(unsigned __int8 *)(a2 + 33))
          {
            if (v15 == 2)
              goto LABEL_21;
            if (*(unsigned __int8 *)(v14 + 34) == *(unsigned __int8 *)(a2 + 34))
            {
              if (v15 == 3)
                goto LABEL_21;
              if (*(unsigned __int8 *)(v14 + 35) == *(unsigned __int8 *)(a2 + 35))
                break;
            }
          }
        }
      }
    }
LABEL_3:
    if (++v11 == v9)
      return sub_1A5524EF4(a5);
  }
  v17 = (unsigned __int8 *)(v14 + 36);
  v18 = v15 - 4;
  v19 = (unsigned __int8 *)(a2 + 36);
  while (v18)
  {
    v21 = *v17++;
    v20 = v21;
    v22 = *v19++;
    --v18;
    if (v20 != v22)
      goto LABEL_3;
  }
LABEL_21:
  if (v11 >= v9)
  {
    __break(1u);
    goto LABEL_40;
  }
  v6 = v12[22 * v11 + 12];
  if (!v6)
  {
    if ((a4 & 1) != 0)
    {
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) != 0)
        goto LABEL_33;
      goto LABEL_43;
    }
    return sub_1A5524EF4(a5);
  }
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    swift_beginAccess();
    sub_1A5502F44(v6 + 16, (uint64_t)__src);
    _s13SelectedStateV8_StorageCMa();
    v23 = swift_allocObject();
    memcpy((void *)(v23 + 16), __src, 0x1C5uLL);
    swift_release();
    v6 = v23;
  }
  v8 = (_QWORD *)(v6 + 16);
  swift_beginAccess();
  sub_1A5532248(a5);
  swift_endAccess();
  v5 = *(_QWORD **)a1;
  if (v11 < *(_QWORD *)(*(_QWORD *)a1 + 16))
  {
    v24 = v5[22 * v11 + 16];
    if (!v24)
    {
      swift_beginAccess();
      goto LABEL_37;
    }
    swift_beginAccess();
    v25 = *(_DWORD *)(v24 + 16);
    swift_beginAccess();
    if (v25 != *(_DWORD *)v8)
    {
LABEL_37:
      swift_release();
      return sub_1A5524EF4(a5);
    }
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      goto LABEL_29;
    goto LABEL_41;
  }
LABEL_40:
  __break(1u);
LABEL_41:
  v5 = sub_1A554B6F8(v5);
LABEL_29:
  if (v11 < v5[2])
  {
    v5[22 * v11 + 16] = v6;
    swift_release();
    *(_QWORD *)a1 = v5;
    goto LABEL_37;
  }
  __break(1u);
LABEL_43:
  result = (uint64_t)sub_1A554B6F8(v8);
  v8 = (_QWORD *)result;
LABEL_33:
  if (v11 >= v8[2])
  {
    __break(1u);
  }
  else
  {
    v27 = &v8[22 * v11];
    sub_1A5511C08(MEMORY[0x1E0DEE9E8], (uint64_t (*)(_BYTE *, _QWORD))sub_1A54F305C);
    Set<>.formNonEmpty()();
    *((_DWORD *)v27 + 34) = 0;
    *((_BYTE *)v27 + 140) = 1;
    result = sub_1A5524EF4(a5);
    *(_QWORD *)a1 = v8;
  }
  return result;
}

void sub_1A551C6E4(uint64_t a1, uint64_t a2, unsigned int a3, char a4, void (*a5)(uint64_t), _QWORD *a6)
{
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  unsigned __int8 *v18;
  uint64_t v19;
  unsigned __int8 *v20;
  int v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  _QWORD *v27;
  _BYTE __src[456];

  v7 = *(_QWORD **)a1;
  v8 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if (v8)
  {
    v12 = 0;
    v13 = v7 + 4;
    while (1)
    {
      v14 = &v13[22 * v12];
      if ((*((unsigned int *)v14 + 6) | ((unint64_t)*((unsigned int *)v14 + 6) << 32)) == (a3 | ((unint64_t)a3 << 32)))
      {
        v15 = v14[2];
        v16 = *(_QWORD *)(v15 + 16);
        if (v16 == *(_QWORD *)(a2 + 16))
        {
          if (v16)
            v17 = v15 == a2;
          else
            v17 = 1;
          if (v17)
            goto LABEL_21;
          if (*(unsigned __int8 *)(v15 + 32) == *(unsigned __int8 *)(a2 + 32))
          {
            if (v16 == 1)
              goto LABEL_21;
            if (*(unsigned __int8 *)(v15 + 33) == *(unsigned __int8 *)(a2 + 33))
            {
              if (v16 == 2)
                goto LABEL_21;
              if (*(unsigned __int8 *)(v15 + 34) == *(unsigned __int8 *)(a2 + 34))
              {
                if (v16 == 3)
                  goto LABEL_21;
                if (*(unsigned __int8 *)(v15 + 35) == *(unsigned __int8 *)(a2 + 35))
                  break;
              }
            }
          }
        }
      }
LABEL_3:
      if (++v12 == v8)
        return;
    }
    v18 = (unsigned __int8 *)(v15 + 36);
    v19 = v16 - 4;
    v20 = (unsigned __int8 *)(a2 + 36);
    while (v19)
    {
      v22 = *v18++;
      v21 = v22;
      v23 = *v20++;
      --v19;
      if (v21 != v23)
        goto LABEL_3;
    }
LABEL_21:
    if (v12 >= v8)
    {
      __break(1u);
    }
    else
    {
      v6 = v13[22 * v12 + 12];
      if (!v6)
      {
        if ((a4 & 1) == 0)
          return;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          goto LABEL_33;
        goto LABEL_42;
      }
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        swift_beginAccess();
        sub_1A5502F44(v6 + 16, (uint64_t)__src);
        _s13SelectedStateV8_StorageCMa();
        v24 = swift_allocObject();
        memcpy((void *)(v24 + 16), __src, 0x1C5uLL);
        swift_release();
        v6 = v24;
      }
      v7 = (_QWORD *)(v6 + 16);
      swift_beginAccess();
      a5(v6 + 24);
      swift_endAccess();
      a6 = *(_QWORD **)a1;
      if (v12 < *(_QWORD *)(*(_QWORD *)a1 + 16))
      {
        v25 = a6[22 * v12 + 16];
        if (!v25)
        {
          swift_beginAccess();
          goto LABEL_36;
        }
        swift_beginAccess();
        v26 = *(_DWORD *)(v25 + 16);
        swift_beginAccess();
        if (v26 != *(_DWORD *)v7)
        {
LABEL_36:
          swift_release();
          return;
        }
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          goto LABEL_29;
        goto LABEL_40;
      }
    }
    __break(1u);
LABEL_40:
    a6 = sub_1A554B6F8(a6);
LABEL_29:
    if (v12 < a6[2])
    {
      a6[22 * v12 + 16] = v6;
      swift_release();
      *(_QWORD *)a1 = a6;
      goto LABEL_36;
    }
    __break(1u);
LABEL_42:
    v7 = sub_1A554B6F8(v7);
LABEL_33:
    if (v12 >= v7[2])
    {
      __break(1u);
    }
    else
    {
      v27 = &v7[22 * v12];
      sub_1A5511C08(MEMORY[0x1E0DEE9E8], (uint64_t (*)(_BYTE *, _QWORD))sub_1A54F305C);
      Set<>.formNonEmpty()();
      *((_DWORD *)v27 + 34) = 0;
      *((_BYTE *)v27 + 140) = 1;
      *(_QWORD *)a1 = v7;
    }
  }
}

void sub_1A551C9EC(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1A551CA20()
{
  return swift_release();
}

uint64_t sub_1A551CA34()
{
  uint64_t v0;
  uint64_t result;

  result = swift_release();
  *(_BYTE *)(v0 + 232) = 1;
  return result;
}

uint64_t sub_1A551CA84(uint64_t result, unsigned int a2, void (*a3)(uint64_t))
{
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  unsigned __int8 *v14;
  uint64_t v15;
  unsigned __int8 *v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;

  if (*((_BYTE *)v3 + 24) == 1)
  {
    v4 = (_QWORD *)*v3;
    v5 = v3[1];
    v6 = *(_QWORD *)(*v3 + 16);
    if (v6)
    {
      v8 = 0;
      v9 = v3[2];
      while (1)
      {
        v10 = (uint64_t)&v4[22 * v8 + 4];
        if ((*(unsigned int *)(v10 + 24) | ((unint64_t)*(unsigned int *)(v10 + 24) << 32)) == (a2 | ((unint64_t)a2 << 32)))
        {
          v11 = *(_QWORD *)(v10 + 16);
          v12 = *(_QWORD *)(v11 + 16);
          if (v12 == *(_QWORD *)(result + 16))
          {
            if (v12)
              v13 = v11 == result;
            else
              v13 = 1;
            if (v13)
              goto LABEL_23;
            if (*(unsigned __int8 *)(v11 + 32) == *(unsigned __int8 *)(result + 32))
            {
              if (v12 == 1)
                goto LABEL_23;
              if (*(unsigned __int8 *)(v11 + 33) == *(unsigned __int8 *)(result + 33))
              {
                if (v12 == 2)
                  goto LABEL_23;
                if (*(unsigned __int8 *)(v11 + 34) == *(unsigned __int8 *)(result + 34))
                {
                  if (v12 == 3)
                    goto LABEL_23;
                  if (*(unsigned __int8 *)(v11 + 35) == *(unsigned __int8 *)(result + 35))
                    break;
                }
              }
            }
          }
        }
LABEL_4:
        if (++v8 == v6)
          goto LABEL_22;
      }
      v14 = (unsigned __int8 *)(v11 + 36);
      v15 = v12 - 4;
      v16 = (unsigned __int8 *)(result + 36);
      while (v15)
      {
        v18 = *v14++;
        v17 = v18;
        v19 = *v16++;
        --v15;
        if (v17 != v19)
          goto LABEL_4;
      }
LABEL_23:
      sub_1A55212D0(*v3, v3[1], v3[2], 1);
      result = swift_isUniquelyReferenced_nonNull_native();
      v20 = (uint64_t)v4;
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1A554B6F8(v4);
        v20 = result;
      }
      if (v8 >= *(_QWORD *)(v20 + 16))
      {
        __break(1u);
        return result;
      }
      a3(v20 + 176 * v8 + 72);
      result = sub_1A54E8FCC((uint64_t)v4, v5, v9, 1);
    }
    else
    {
LABEL_22:
      v20 = *v3;
    }
    *v3 = v20;
    v3[1] = 0;
    v3[2] = 0;
    *((_BYTE *)v3 + 24) = 1;
  }
  return result;
}

uint64_t sub_1A551CC48(uint64_t result, char a2, uint64_t a3, unsigned int a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  unsigned __int8 *v18;
  uint64_t v19;
  unsigned __int8 *v20;
  int v21;
  int v22;
  int v23;
  _QWORD *v24;

  if (*(_BYTE *)(v4 + 24) == 1)
  {
    v5 = v4;
    v6 = *(_QWORD **)v4;
    v8 = (_QWORD *)(v4 + 8);
    v7 = *(_QWORD *)(v4 + 8);
    v9 = *(_QWORD *)(*(_QWORD *)v4 + 16);
    if (v9)
    {
      v10 = result;
      v11 = 0;
      v12 = a2 & 1;
      v13 = *(_QWORD *)(v5 + 16);
      while (1)
      {
        v14 = (uint64_t)&v6[22 * v11 + 4];
        if ((*(unsigned int *)(v14 + 24) | ((unint64_t)*(unsigned int *)(v14 + 24) << 32)) == (a4 | ((unint64_t)a4 << 32)))
        {
          v15 = *(_QWORD *)(v14 + 16);
          v16 = *(_QWORD *)(v15 + 16);
          if (v16 == *(_QWORD *)(a3 + 16))
          {
            if (v16)
              v17 = v15 == a3;
            else
              v17 = 1;
            if (v17)
              goto LABEL_23;
            if (*(unsigned __int8 *)(v15 + 32) == *(unsigned __int8 *)(a3 + 32))
            {
              if (v16 == 1)
                goto LABEL_23;
              if (*(unsigned __int8 *)(v15 + 33) == *(unsigned __int8 *)(a3 + 33))
              {
                if (v16 == 2)
                  goto LABEL_23;
                if (*(unsigned __int8 *)(v15 + 34) == *(unsigned __int8 *)(a3 + 34))
                {
                  if (v16 == 3)
                    goto LABEL_23;
                  if (*(unsigned __int8 *)(v15 + 35) == *(unsigned __int8 *)(a3 + 35))
                    break;
                }
              }
            }
          }
        }
LABEL_4:
        if (++v11 == v9)
          goto LABEL_22;
      }
      v18 = (unsigned __int8 *)(v15 + 36);
      v19 = v16 - 4;
      v20 = (unsigned __int8 *)(a3 + 36);
      while (v19)
      {
        v22 = *v18++;
        v21 = v22;
        v23 = *v20++;
        --v19;
        if (v21 != v23)
          goto LABEL_4;
      }
LABEL_23:
      sub_1A55212D0((uint64_t)v6, v7, *(_QWORD *)(v5 + 16), 1);
      result = swift_isUniquelyReferenced_nonNull_native();
      v24 = v6;
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1A554B6F8(v6);
        v24 = (_QWORD *)result;
      }
      if (v11 >= v24[2])
      {
        __break(1u);
        return result;
      }
      MailboxOfInterest.highestModificationSequenceValue.setter(v10, v12);
      result = sub_1A54E8FCC((uint64_t)v6, v7, v13, 1);
    }
    else
    {
LABEL_22:
      v24 = v6;
    }
    *(_QWORD *)v5 = v24;
    *v8 = 0;
    v8[1] = 0;
    *(_BYTE *)(v5 + 24) = 1;
  }
  return result;
}

uint64_t sub_1A551CE14(uint64_t result, unsigned int a2, uint64_t a3)
{
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  unsigned __int8 *v14;
  uint64_t v15;
  unsigned __int8 *v16;
  int v17;
  int v18;
  int v19;
  _QWORD *v20;
  _QWORD *v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;

  if (*((_BYTE *)v3 + 24) == 1)
  {
    v4 = (_QWORD *)*v3;
    v5 = *(_QWORD *)(*v3 + 16);
    if (v5)
    {
      v7 = 0;
      v8 = v3[1];
      v9 = v3[2];
      while (1)
      {
        v10 = (uint64_t)&v4[22 * v7 + 4];
        if ((*(unsigned int *)(v10 + 24) | ((unint64_t)*(unsigned int *)(v10 + 24) << 32)) == (a2 | ((unint64_t)a2 << 32)))
        {
          v11 = *(_QWORD *)(v10 + 16);
          v12 = *(_QWORD *)(v11 + 16);
          if (v12 == *(_QWORD *)(result + 16))
          {
            if (v12)
              v13 = v11 == result;
            else
              v13 = 1;
            if (v13)
              goto LABEL_21;
            if (*(unsigned __int8 *)(v11 + 32) == *(unsigned __int8 *)(result + 32))
            {
              if (v12 == 1)
                goto LABEL_21;
              if (*(unsigned __int8 *)(v11 + 33) == *(unsigned __int8 *)(result + 33))
              {
                if (v12 == 2)
                  goto LABEL_21;
                if (*(unsigned __int8 *)(v11 + 34) == *(unsigned __int8 *)(result + 34))
                  break;
              }
            }
          }
        }
LABEL_4:
        if (++v7 == v5)
          return result;
      }
      v14 = (unsigned __int8 *)(v11 + 35);
      v15 = v12 - 3;
      v16 = (unsigned __int8 *)(result + 35);
      while (v15)
      {
        v18 = *v14++;
        v17 = v18;
        v19 = *v16++;
        --v15;
        if (v17 != v19)
          goto LABEL_4;
      }
LABEL_21:
      sub_1A55212D0(*v3, v3[1], v3[2], 1);
      result = swift_isUniquelyReferenced_nonNull_native();
      v20 = v4;
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1A554B6F8(v4);
        v20 = (_QWORD *)result;
      }
      if (v7 >= v20[2])
      {
        __break(1u);
      }
      else
      {
        v21 = &v20[22 * v7];
        v22 = *(_OWORD *)(a3 + 16);
        *((_OWORD *)v21 + 4) = *(_OWORD *)a3;
        *((_OWORD *)v21 + 5) = v22;
        *((_BYTE *)v21 + 96) = *(_BYTE *)(a3 + 32);
        v24 = v21[4];
        v23 = v21[5];
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A54E8FCC((uint64_t)v4, v8, v9, 1);
        *v3 = (uint64_t)v20;
        v3[1] = 0;
        v3[2] = 0;
        *((_BYTE *)v3 + 24) = 1;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v25 = sub_1A5524BAC((uint64_t)(v3 + 6), v24, v23);
        result = swift_bridgeObjectRelease();
        v26 = *(_QWORD *)(v3[6] + 16);
        if (v26 >= v25)
        {
          sub_1A558A820(v25, v26);
          return swift_bridgeObjectRelease();
        }
      }
      __break(1u);
    }
  }
  return result;
}

void sub_1A551D03C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD v19[9];
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[160];
  unint64_t v29;

  v24 = a5;
  v23 = a4;
  v7 = sub_1A594A764();
  v26 = *(_QWORD *)(v7 - 8);
  v27 = v7;
  v8 = MEMORY[0x1E0C80A78](v7);
  v9 = MEMORY[0x1E0C80A78](v8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v22 = (char *)v19 - v11;
  MEMORY[0x1E0C80A78](v10);
  v19[8] = (char *)v19 - v12;
  v25 = _s12LocalMailboxV6LoggerVMa();
  v13 = MEMORY[0x1E0C80A78](v25);
  v14 = MEMORY[0x1E0C80A78](v13);
  v15 = MEMORY[0x1E0C80A78](v14);
  v21 = (char *)v19 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19[7] = (char *)v19 - v17;
  sub_1A5523130((_QWORD *)(a1 + 8), v28);
  sub_1A5523130(v28, &v29);
  v18 = (char *)&loc_1A551D1CC + dword_1A551DDE4[v29 >> 60];
  v20 = v5;
  __asm { BR              X11 }
}

void sub_1A551D200(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int16 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _DWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  *(_QWORD *)(v7 - 96) = a1 & 0xFFFFFFFFFFFFFFFLL;
  if (*(_BYTE *)(v5 + 24) == 1)
  {
    v9 = (_QWORD *)(v5 + 8);
    v8 = *(_QWORD *)(v5 + 8);
    if (*(_QWORD *)(*(_QWORD *)v5 + 16))
    {
      *(_QWORD *)(v1 + 24) = v9;
      *(_QWORD *)v1 = *(_QWORD *)(v5 + 16);
      *(_QWORD *)(v1 + 8) = v8;
      *(_OWORD *)(v1 + 2123) = 0u;
      *(_OWORD *)(v1 + 2112) = 0u;
      *(_OWORD *)(v1 + 2096) = 0u;
      *(_OWORD *)(v1 + 2080) = 0u;
      *(_OWORD *)(v1 + 2064) = 0u;
      *(_DWORD *)(v1 + 64) = *v6;
      *(_QWORD *)(v1 + 56) = v3 + OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_l;
      *(_DWORD *)(v1 + 48) = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id);
      *(_QWORD *)(v1 + 40) = v4 & 0xFF01010101010101;
      *(_DWORD *)(v1 + 32) = v2 & 0x101;
      v10 = (_QWORD *)_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v11 = 0;
      v12 = 0;
      *(_QWORD *)(v1 + 16) = v10;
      v13 = *(_QWORD *)(v1 + 88);
      v14 = *(_QWORD *)(v1 + 136);
      do
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v10 = sub_1A554B6F8(v10);
        if (v12 >= v10[2])
        {
          __break(1u);
          JUMPOUT(0x1A551DDB0);
        }
        *(_QWORD *)(v1 + 96) = v10;
        v15 = v10[v11 + 6];
        v16 = v10[v11 + 7];
        v17 = HIDWORD(v10[v11 + 25]);
        v18 = *(_QWORD *)(v1 + 128);
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v18 + 16))(v13, *(_QWORD *)(v1 + 56), v14);
        v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32);
        v20 = *(_QWORD *)(v1 + 80);
        v19(v20, v13, v14);
        v21 = v20 + *(int *)(*(_QWORD *)(v1 + 120) + 20);
        *(_BYTE *)v21 = *(_DWORD *)(v1 + 48);
        *(_WORD *)(v21 + 2) = v17;
        *(_QWORD *)(v21 + 8) = v15;
        *(_DWORD *)(v21 + 16) = v16;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A550116C((uint64_t *)(v1 + 2064), *(_DWORD *)(v1 + 64), *(_QWORD *)(v1 + 40), *(unsigned int *)(v1 + 32), *(_QWORD *)(v1 + 104), *(_DWORD *)(v1 + 112) & 1, v20);
        v10 = *(_QWORD **)(v1 + 96);
        sub_1A55034FC(v20, (uint64_t (*)(_QWORD))_s12LocalMailboxV6LoggerVMa);
        ++v12;
        v11 += 22;
      }
      while (v12 != v10[2]);
      sub_1A54E8FCC(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 8), *(_QWORD *)v1, 1);
      v9 = *(_QWORD **)(v1 + 24);
    }
    else
    {
      v10 = *(_QWORD **)v5;
    }
    v22 = *(_QWORD *)(v1 + 72);
    *(_QWORD *)v22 = v10;
    *v9 = 0;
    v9[1] = 0;
    *(_BYTE *)(v22 + 24) = 1;
  }
  sub_1A551D1E0();
}

uint64_t sub_1A551DE08(uint64_t result, char a2)
{
  if ((a2 & 1) != 0)
    __asm { BR              X10 }
  return result;
}

void sub_1A551E508(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD __src[57];

  if (*(_QWORD *)(a1 + 96))
  {
    v4 = *(_QWORD *)(a1 + 16);
    v5 = *(_DWORD *)(a1 + 24);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v6 = *(_QWORD *)(a1 + 96);
      swift_beginAccess();
      sub_1A5502F44(v6 + 16, (uint64_t)__src);
      _s13SelectedStateV8_StorageCMa();
      v7 = swift_allocObject();
      memcpy((void *)(v7 + 16), __src, 0x1C5uLL);
      *(_QWORD *)(a1 + 96) = v7;
      swift_release();
    }
    v8 = *(_QWORD *)(a1 + 96);
    swift_beginAccess();
    if ((((unint64_t)*(unsigned __int8 *)(v8 + 460) << 32) & 0xC000000000) != 0x4000000000
      || (v9 = *(_QWORD *)(v8 + 416), (v9 & 0x10000000000) != 0))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      *(_QWORD *)(v8 + 400) &= 0x1FFFFFFFFuLL;
      *(_QWORD *)(v8 + 416) = v9 & 0xFFFFFFFFFFLL | 0x10000000000;
      *(_OWORD *)(v8 + 424) = 0u;
      *(_OWORD *)(v8 + 440) = 0u;
      *(_DWORD *)(v8 + 456) = 0;
      *(_BYTE *)(v8 + 460) = 64;
      if (*(_QWORD *)(a1 + 96))
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          v10 = *(_QWORD *)(a1 + 96);
          swift_beginAccess();
          sub_1A5502F44(v10 + 16, (uint64_t)__src);
          _s13SelectedStateV8_StorageCMa();
          v11 = swift_allocObject();
          memcpy((void *)(v11 + 16), __src, 0x1C5uLL);
          *(_QWORD *)(a1 + 96) = v11;
          swift_release();
        }
        swift_beginAccess();
        sub_1A554B85C(0xCu);
        sub_1A54F3290(&v19, 12);
        swift_endAccess();
      }
      swift_retain_n();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v12 = sub_1A594A74C();
      v13 = sub_1A594C030();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = swift_slowAlloc();
        v15 = swift_slowAlloc();
        v19 = v15;
        *(_DWORD *)v14 = 68158467;
        LODWORD(__src[0]) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v14 + 8) = 256;
        v16 = *(_BYTE *)(a2 + OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id);
        swift_release();
        LOBYTE(__src[0]) = v16;
        sub_1A594C3CC();
        swift_release();
        *(_WORD *)(v14 + 11) = 2160;
        __src[0] = 0x786F626C69616DLL;
        sub_1A594C3CC();
        *(_WORD *)(v14 + 21) = 2085;
        __src[0] = v4;
        LODWORD(__src[1]) = v5;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v17 = sub_1A594B4A8();
        __src[0] = sub_1A55791B0(v17, v18, &v19);
        sub_1A594C3CC();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A4F90000, v12, v13, "[%.*hhx] [%{sensitive,mask.mailbox}s] Did mark should temporarily grow window of interest.", (uint8_t *)v14, 0x1Fu);
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v15, -1, -1);
        MEMORY[0x1A85B1964](v14, -1, -1);

      }
      else
      {
        swift_bridgeObjectRelease_n();

        swift_release_n();
      }
    }
  }
}

uint64_t sub_1A551E8EC(uint64_t result, unsigned int a2, uint64_t a3)
{
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  unsigned __int8 *v14;
  uint64_t v15;
  unsigned __int8 *v16;
  int v17;
  int v18;
  int v19;
  _QWORD *v20;
  _QWORD *v21;
  _BYTE v22[16];
  uint64_t v23;
  char v24;

  if (*((_BYTE *)v3 + 24) == 1)
  {
    v4 = (_QWORD *)*v3;
    v5 = *(_QWORD *)(*v3 + 16);
    if (v5)
    {
      v7 = 0;
      v8 = v3[1];
      v9 = v3[2];
      while (1)
      {
        v10 = (uint64_t)&v4[22 * v7 + 4];
        if ((*(unsigned int *)(v10 + 24) | ((unint64_t)*(unsigned int *)(v10 + 24) << 32)) == (a2 | ((unint64_t)a2 << 32)))
        {
          v11 = *(_QWORD *)(v10 + 16);
          v12 = *(_QWORD *)(v11 + 16);
          if (v12 == *(_QWORD *)(result + 16))
          {
            if (v12)
              v13 = v11 == result;
            else
              v13 = 1;
            if (v13)
              goto LABEL_20;
            if (*(unsigned __int8 *)(v11 + 32) == *(unsigned __int8 *)(result + 32))
            {
              if (v12 == 1)
                goto LABEL_20;
              if (*(unsigned __int8 *)(v11 + 33) == *(unsigned __int8 *)(result + 33))
              {
                if (v12 == 2)
                  goto LABEL_20;
                if (*(unsigned __int8 *)(v11 + 34) == *(unsigned __int8 *)(result + 34))
                  break;
              }
            }
          }
        }
LABEL_4:
        if (++v7 == v5)
          return result;
      }
      v14 = (unsigned __int8 *)(v11 + 35);
      v15 = v12 - 3;
      v16 = (unsigned __int8 *)(result + 35);
      while (v15)
      {
        v18 = *v14++;
        v17 = v18;
        v19 = *v16++;
        --v15;
        if (v17 != v19)
          goto LABEL_4;
      }
LABEL_20:
      sub_1A55212D0(*v3, v3[1], v3[2], 1);
      result = swift_isUniquelyReferenced_nonNull_native();
      v20 = v4;
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1A554B6F8(v4);
        v20 = (_QWORD *)result;
      }
      if (v7 >= v20[2])
      {
        __break(1u);
      }
      else
      {
        sub_1A55032A0(a3 + 48, (uint64_t)v22, &qword_1EE799EF0);
        sub_1A55032A0((uint64_t)v22, (uint64_t)&v23, &qword_1EE799EF0);
        if ((v24 & 1) == 0)
        {
          v21 = &v20[22 * v7 + 24];
          if (LOBYTE(v20[22 * v7 + 25]) != 1 || *v21 != v23)
          {
            *v21 = v23;
            LOBYTE(v20[22 * v7 + 25]) = 0;
          }
        }
        result = sub_1A54E8FCC((uint64_t)v4, v8, v9, 1);
        *v3 = (uint64_t)v20;
        v3[1] = 0;
        v3[2] = 0;
        *((_BYTE *)v3 + 24) = 1;
      }
    }
  }
  return result;
}

uint64_t sub_1A551EAD8(uint64_t result)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;

  v2 = v1;
  if (v1[24] == 1)
  {
    v3 = *(_QWORD *)v1;
    v4 = v1 + 8;
    v5 = *(_QWORD *)(*(_QWORD *)v1 + 16);
    if (v5)
    {
      v6 = result;
      v27 = *((_QWORD *)v2 + 1);
      v26 = *((_QWORD *)v2 + 2);
      v7 = v3 + 32;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v8 = 0;
      v9 = 0;
      v10 = v5 - 1;
      v11 = (_QWORD *)v3;
      while (1)
      {
        v12 = *(_OWORD *)(v7 + v8);
        v13 = *(_OWORD *)(v7 + v8 + 32);
        v29 = *(_OWORD *)(v7 + v8 + 16);
        v30 = v13;
        v28 = v12;
        v14 = *(_OWORD *)(v7 + v8 + 48);
        v15 = *(_OWORD *)(v7 + v8 + 64);
        v16 = *(_OWORD *)(v7 + v8 + 96);
        v33 = *(_OWORD *)(v7 + v8 + 80);
        v34 = v16;
        v31 = v14;
        v32 = v15;
        v17 = *(_OWORD *)(v7 + v8 + 112);
        v18 = *(_OWORD *)(v7 + v8 + 128);
        v19 = *(_OWORD *)(v7 + v8 + 160);
        v37 = *(_OWORD *)(v7 + v8 + 144);
        v38 = v19;
        v35 = v17;
        v36 = v18;
        if (*(_QWORD *)(v6 + 16))
        {
          v20 = sub_1A54FDC30(v29, DWORD2(v29));
          if ((v21 & 1) != 0)
          {
            v22 = *(_QWORD *)(v6 + 56) + 48 * v20;
            v23 = *(_QWORD *)(v22 + 16);
            v24 = *(_BYTE *)(v22 + 24);
            sub_1A54E3150((uint64_t)&v28);
            result = swift_isUniquelyReferenced_nonNull_native();
            if ((result & 1) == 0)
            {
              result = (uint64_t)sub_1A554B6F8(v11);
              v11 = (_QWORD *)result;
            }
            if (v9 >= v11[2])
            {
              __break(1u);
              return result;
            }
            if ((v24 & 1) == 0)
            {
              v25 = &v11[v8 / 8];
              if (LOBYTE(v11[v8 / 8 + 25]) != 1 || v25[24] != v23)
              {
                v25[24] = v23;
                *((_BYTE *)v25 + 200) = 0;
              }
            }
            sub_1A54E31EC((uint64_t)&v28);
          }
        }
        if (v10 == v9)
        {
          result = sub_1A54E8FCC(v3, v27, v26, 1);
          v4 = v2 + 8;
          goto LABEL_18;
        }
        v8 += 176;
        ++v9;
      }
    }
    v11 = *(_QWORD **)v1;
LABEL_18:
    *(_QWORD *)v2 = v11;
    *v4 = 0;
    v4[1] = 0;
    v2[24] = 1;
  }
  return result;
}

uint64_t sub_1A551EC6C(uint64_t result, unsigned int a2, uint64_t a3)
{
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  unsigned __int8 *v14;
  uint64_t v15;
  unsigned __int8 *v16;
  int v17;
  int v18;
  int v19;
  _QWORD *v20;
  _QWORD *v21;
  _BYTE v22[16];
  uint64_t v23;
  char v24;

  if (*((_BYTE *)v3 + 24) == 1)
  {
    v4 = (_QWORD *)*v3;
    v5 = *(_QWORD *)(*v3 + 16);
    if (v5)
    {
      v7 = 0;
      v8 = v3[1];
      v9 = v3[2];
      while (1)
      {
        v10 = (uint64_t)&v4[22 * v7 + 4];
        if ((*(unsigned int *)(v10 + 24) | ((unint64_t)*(unsigned int *)(v10 + 24) << 32)) == (a2 | ((unint64_t)a2 << 32)))
        {
          v11 = *(_QWORD *)(v10 + 16);
          v12 = *(_QWORD *)(v11 + 16);
          if (v12 == *(_QWORD *)(result + 16))
          {
            if (v12)
              v13 = v11 == result;
            else
              v13 = 1;
            if (v13)
              goto LABEL_20;
            if (*(unsigned __int8 *)(v11 + 32) == *(unsigned __int8 *)(result + 32))
            {
              if (v12 == 1)
                goto LABEL_20;
              if (*(unsigned __int8 *)(v11 + 33) == *(unsigned __int8 *)(result + 33))
              {
                if (v12 == 2)
                  goto LABEL_20;
                if (*(unsigned __int8 *)(v11 + 34) == *(unsigned __int8 *)(result + 34))
                  break;
              }
            }
          }
        }
LABEL_4:
        if (++v7 == v5)
          return result;
      }
      v14 = (unsigned __int8 *)(v11 + 35);
      v15 = v12 - 3;
      v16 = (unsigned __int8 *)(result + 35);
      while (v15)
      {
        v18 = *v14++;
        v17 = v18;
        v19 = *v16++;
        --v15;
        if (v17 != v19)
          goto LABEL_4;
      }
LABEL_20:
      sub_1A55212D0(*v3, v3[1], v3[2], 1);
      result = swift_isUniquelyReferenced_nonNull_native();
      v20 = v4;
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1A554B6F8(v4);
        v20 = (_QWORD *)result;
      }
      if (v7 >= v20[2])
      {
        __break(1u);
      }
      else
      {
        sub_1A55032A0(a3 + 16, (uint64_t)v22, &qword_1EE799EF0);
        sub_1A55032A0((uint64_t)v22, (uint64_t)&v23, &qword_1EE799EF0);
        if ((v24 & 1) == 0)
        {
          v21 = &v20[22 * v7 + 24];
          if (LOBYTE(v20[22 * v7 + 25]) != 1 || *v21 != v23)
          {
            *v21 = v23;
            LOBYTE(v20[22 * v7 + 25]) = 0;
          }
        }
        result = sub_1A54E8FCC((uint64_t)v4, v8, v9, 1);
        *v3 = (uint64_t)v20;
        v3[1] = 0;
        v3[2] = 0;
        *((_BYTE *)v3 + 24) = 1;
      }
    }
  }
  return result;
}

_QWORD *sub_1A551EE58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v12;
  uint64_t v13;

  if (*(_BYTE *)(v0 + 24) != 1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v12 = *(_QWORD *)(v0 + 16);
  v13 = *(_QWORD *)(v0 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v3 = (_BYTE *)(v1 + 200);
  v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    if (!*v3)
    {
      v6 = *((_QWORD *)v3 - 21);
      v7 = *((_QWORD *)v3 - 20);
      v8 = *((_QWORD *)v3 - 1);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v4 = sub_1A54F0B00(0, v4[2] + 1, 1, v4);
      v10 = v4[2];
      v9 = v4[3];
      if (v10 >= v9 >> 1)
        v4 = sub_1A54F0B00((_QWORD *)(v9 > 1), v10 + 1, 1, v4);
      v4[2] = v10 + 1;
      v5 = &v4[3 * v10];
      v5[4] = v6;
      v5[5] = v7;
      v5[6] = v8;
    }
    v3 += 176;
    --v2;
  }
  while (v2);
  sub_1A54E8FCC(v1, v13, v12, 1);
  return v4;
}

void sub_1A551EF88(int a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint8_t *v33;
  os_signpost_id_t v34;
  uint8_t *v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  NSObject *v38;
  os_signpost_type_t v39;
  _QWORD v40[2];
  int v41;
  uint64_t v42;
  char *v43;
  void (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _OWORD v49[11];

  v47 = sub_1A594A62C();
  v4 = *(_QWORD *)(v47 - 8);
  v5 = MEMORY[0x1E0C80A78](v47);
  v43 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v40 - v7;
  v9 = sub_1A594A65C();
  v48 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (id)*tracingLog.unsafeMutableAddressor();
  v13 = sub_1A594C318();

  if ((v13 & 1) != 0)
  {
    v42 = v4;
    v14 = sub_1A551F32C(a2);
    v16 = v15;
    v17 = *(_QWORD *)(v14 + 16);
    if (v17)
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v18 = 32;
      do
      {
        v19 = *(_OWORD *)(v14 + v18);
        v20 = *(_OWORD *)(v14 + v18 + 32);
        v49[1] = *(_OWORD *)(v14 + v18 + 16);
        v49[2] = v20;
        v49[0] = v19;
        v21 = *(_OWORD *)(v14 + v18 + 48);
        v22 = *(_OWORD *)(v14 + v18 + 64);
        v23 = *(_OWORD *)(v14 + v18 + 96);
        v49[5] = *(_OWORD *)(v14 + v18 + 80);
        v49[6] = v23;
        v49[3] = v21;
        v49[4] = v22;
        v24 = *(_OWORD *)(v14 + v18 + 112);
        v25 = *(_OWORD *)(v14 + v18 + 128);
        v26 = *(_OWORD *)(v14 + v18 + 160);
        v49[9] = *(_OWORD *)(v14 + v18 + 144);
        v49[10] = v26;
        v49[7] = v24;
        v49[8] = v25;
        sub_1A54E3150((uint64_t)v49);
        sub_1A5502548();
        sub_1A54E31EC((uint64_t)v49);
        v18 += 176;
        --v17;
      }
      while (v17);
      swift_bridgeObjectRelease();
    }
    v46 = *(_QWORD *)(v16 + 16);
    if (v46)
    {
      v40[0] = v14;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v45 = tracingSignposter.unsafeMutableAddressor();
      v27 = 0;
      v44 = *(void (**)(char *, uint64_t, uint64_t))(v48 + 16);
      v28 = v42;
      v41 = a1;
      v40[1] = v16;
      v44(v11, v45, v9);
      while (1)
      {
        OSSignpostID.init(engine:kind:idA:idB:)();
        v38 = sub_1A594A650();
        v39 = sub_1A594C150();
        if ((sub_1A594C318() & 1) != 0)
        {
          v29 = v43;
          v30 = v8;
          v31 = v8;
          v32 = v47;
          (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v43, v30, v47);
          v33 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v33 = 0;
          v34 = sub_1A594A620();
          _os_signpost_emit_with_name_impl(&dword_1A4F90000, v38, v39, v34, "LocalMailboxRemoved", "", v33, 2u);
          v35 = v33;
          v28 = v42;
          MEMORY[0x1A85B1964](v35, -1, -1);

          v36 = *(void (**)(char *, uint64_t))(v28 + 8);
          v36(v31, v32);
          (*(void (**)(char *, uint64_t))(v48 + 8))(v11, v9);
          v37 = v32;
          v8 = v31;
          v36(v29, v37);
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v47);
          (*(void (**)(char *, uint64_t))(v48 + 8))(v11, v9);
        }
        if (v46 == ++v27)
          break;
        v44(v11, v45, v9);
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1A551F32C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v11[4];
  _QWORD v12[4];
  _QWORD v13[4];
  _QWORD v14[2];

  v2 = MEMORY[0x1E0DEE9D8];
  v14[0] = MEMORY[0x1E0DEE9D8];
  v14[1] = MEMORY[0x1E0DEE9D8];
  if (*(_BYTE *)(a1 + 24) == 1)
  {
    v2 = *(_QWORD *)a1;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  if (*(_BYTE *)(v1 + 24) == 1)
  {
    v3 = *(_QWORD *)v1;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    v3 = MEMORY[0x1E0DEE9D8];
  }
  KeyPath = (_QWORD *)swift_getKeyPath();
  v5 = MEMORY[0x1E0C80A78](KeyPath);
  v13[2] = v14;
  v6 = MEMORY[0x1E0C80A78](v5);
  v12[2] = v7;
  MEMORY[0x1E0C80A78](v6);
  v11[2] = v8;
  v9 = sub_1A5503AC4();
  Array.findAppendOnlyDiff<A>(from:id:added:removed:update:)(v2, KeyPath, (uint64_t)sub_1A5521E2C, (uint64_t)v13, (void (*)(char *))sub_1A5521E34, (uint64_t)v12, (void (*)(char *, char *))sub_1A5521E3C, (uint64_t)v11, v3, v9);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v14[0];
}

__n128 sub_1A551F480(__n128 *a1, _QWORD **a2)
{
  __n128 v3;
  __n128 v4;
  __n128 v5;
  __n128 v6;
  __n128 v7;
  _QWORD *v8;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v10;
  unint64_t v11;
  __n128 *v12;
  __n128 v13;
  __n128 v14;
  __n128 v15;
  __n128 v16;
  __n128 v17;
  __n128 result;
  __n128 v19;
  __n128 v20;
  __n128 v21;
  __n128 v22;
  __n128 v23;
  __n128 v24;
  __n128 v25;
  __n128 v26;
  __n128 v27;
  __n128 v28;
  __n128 v29;
  __n128 v30;
  __n128 v31;

  v3 = a1[9];
  v29 = a1[8];
  v30 = v3;
  v31 = a1[10];
  v4 = a1[5];
  v25 = a1[4];
  v26 = v4;
  v5 = a1[7];
  v27 = a1[6];
  v28 = v5;
  v6 = a1[1];
  v21 = *a1;
  v22 = v6;
  v7 = a1[3];
  v23 = a1[2];
  v24 = v7;
  v8 = *a2;
  sub_1A54E3150((uint64_t)&v21);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a2 = v8;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v8 = sub_1A54F07A8(0, v8[2] + 1, 1, v8);
    *a2 = v8;
  }
  v11 = v8[2];
  v10 = v8[3];
  if (v11 >= v10 >> 1)
  {
    v8 = sub_1A54F07A8((_QWORD *)(v10 > 1), v11 + 1, 1, v8);
    *a2 = v8;
  }
  v8[2] = v11 + 1;
  v12 = (__n128 *)&v8[22 * v11];
  v13 = v21;
  v14 = v23;
  v12[3] = v22;
  v12[4] = v14;
  v12[2] = v13;
  v15 = v24;
  v16 = v25;
  v17 = v27;
  v12[7] = v26;
  v12[8] = v17;
  v12[5] = v15;
  v12[6] = v16;
  result = v28;
  v19 = v29;
  v20 = v31;
  v12[11] = v30;
  v12[12] = v20;
  v12[9] = result;
  v12[10] = v19;
  return result;
}

uint64_t sub_1A551F58C(uint64_t a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t result;
  unint64_t v6;
  unint64_t v7;

  v3 = *(_DWORD *)(a1 + 172);
  v4 = *(_QWORD *)(a2 + 8);
  result = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a2 + 8) = v4;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1A54F0C24(0, *(_QWORD *)(v4 + 16) + 1, 1, (char *)v4);
    v4 = result;
    *(_QWORD *)(a2 + 8) = result;
  }
  v7 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  if (v7 >= v6 >> 1)
  {
    result = (uint64_t)sub_1A54F0C24((char *)(v6 > 1), v7 + 1, 1, (char *)v4);
    v4 = result;
  }
  *(_QWORD *)(v4 + 16) = v7 + 1;
  *(_DWORD *)(v4 + 4 * v7 + 32) = v3;
  *(_QWORD *)(a2 + 8) = v4;
  return result;
}

__n128 sub_1A551F634(_OWORD *a1, __n128 *a2, _QWORD **a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __n128 v9;
  __n128 v10;
  __n128 v11;
  __n128 v12;
  __n128 v13;
  __n128 result;
  _QWORD *v15;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v17;
  unint64_t v18;
  __n128 *v19;
  __n128 v20;
  __n128 v21;
  __n128 v22;
  __n128 v23;
  __n128 v24;
  __n128 v25;
  __n128 v26;
  _OWORD v27[11];
  __n128 v28;
  __n128 v29;
  __n128 v30;
  __n128 v31;
  __n128 v32;
  __n128 v33;
  __n128 v34;
  __n128 v35;
  __n128 v36;
  __n128 v37;
  __n128 v38;

  v4 = a1[9];
  v27[8] = a1[8];
  v27[9] = v4;
  v27[10] = a1[10];
  v5 = a1[5];
  v27[4] = a1[4];
  v27[5] = v5;
  v6 = a1[7];
  v27[6] = a1[6];
  v27[7] = v6;
  v7 = a1[1];
  v27[0] = *a1;
  v27[1] = v7;
  v8 = a1[3];
  v27[2] = a1[2];
  v27[3] = v8;
  v9 = a2[9];
  v36 = a2[8];
  v37 = v9;
  v38 = a2[10];
  v10 = a2[5];
  v32 = a2[4];
  v33 = v10;
  v11 = a2[7];
  v34 = a2[6];
  v35 = v11;
  v12 = a2[1];
  v28 = *a2;
  v29 = v12;
  v13 = a2[3];
  v30 = a2[2];
  v31 = v13;
  if (!sub_1A5502B44((uint64_t)v27, (uint64_t)&v28))
  {
    v15 = *a3;
    sub_1A54E3150((uint64_t)&v28);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a3 = v15;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v15 = sub_1A54F07A8(0, v15[2] + 1, 1, v15);
      *a3 = v15;
    }
    v18 = v15[2];
    v17 = v15[3];
    if (v18 >= v17 >> 1)
    {
      v15 = sub_1A54F07A8((_QWORD *)(v17 > 1), v18 + 1, 1, v15);
      *a3 = v15;
    }
    v15[2] = v18 + 1;
    v19 = (__n128 *)&v15[22 * v18];
    v20 = v28;
    v21 = v30;
    v19[3] = v29;
    v19[4] = v21;
    v19[2] = v20;
    v22 = v31;
    v23 = v32;
    v24 = v34;
    v19[7] = v33;
    v19[8] = v24;
    v19[5] = v22;
    v19[6] = v23;
    result = v35;
    v25 = v36;
    v26 = v38;
    v19[11] = v37;
    v19[12] = v26;
    v19[9] = result;
    v19[10] = v25;
  }
  return result;
}

void sub_1A551F788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  os_log_type_t v51;
  uint64_t v52;
  uint64_t v53;
  os_log_type_t type;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59[2];
  _OWORD v60[4];
  _OWORD v61[3];

  swift_retain_n();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  swift_bridgeObjectRetain_n();
  v5 = sub_1A594A74C();
  v6 = sub_1A594C018();
  v52 = a1;
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    *(_DWORD *)v7 = 68158208;
    LODWORD(v60[0]) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v7 + 8) = 256;
    v8 = *(_BYTE *)(a3 + OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id);
    swift_release();
    LOBYTE(v60[0]) = v8;
    sub_1A594C3CC();
    swift_release();
    *(_WORD *)(v7 + 11) = 2048;
    v9 = *(_QWORD *)(a1 + 16);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v60[0] = v9;
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A4F90000, v5, v6, "[%.*hhx] Persistence passed list of %ld mailboxes with duplicate names/IDs.", (uint8_t *)v7, 0x15u);
    MEMORY[0x1A85B1964](v7, -1, -1);

  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  v10 = a3;
  v11 = a2;
  v12 = *(_QWORD *)(a2 + 16);
  if (v12)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v13 = 0;
    v14 = 32;
    v49 = a3;
    while (1)
    {
      v15 = *(_OWORD *)(v11 + v14 + 48);
      v60[2] = *(_OWORD *)(v11 + v14 + 32);
      v60[3] = v15;
      v61[0] = *(_OWORD *)(v11 + v14 + 64);
      *(_OWORD *)((char *)v61 + 9) = *(_OWORD *)(v11 + v14 + 73);
      v16 = *(_OWORD *)(v11 + v14 + 16);
      v60[0] = *(_OWORD *)(v11 + v14);
      v60[1] = v16;
      v17 = v60[0];
      swift_bridgeObjectRetain_n();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A5522D94((uint64_t)v60);
      v19 = sub_1A5521304(a1, v17, *((uint64_t *)&v17 + 1), v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v19 + 16) <= 1uLL)
        break;
      v57 = v14;
      v58 = v13;
      v56 = v12;
      swift_retain_n();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v20 = v10;
      v21 = sub_1A594A74C();
      type = sub_1A594C018();
      if (os_log_type_enabled(v21, type))
      {
        v22 = swift_slowAlloc();
        v50 = swift_slowAlloc();
        v59[0] = v50;
        *(_DWORD *)v22 = 68159491;
        sub_1A594C3CC();
        *(_WORD *)(v22 + 8) = 256;
        swift_release();
        sub_1A594C3CC();
        swift_release();
        *(_WORD *)(v22 + 11) = 2048;
        swift_bridgeObjectRelease();
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v22 + 21) = 2080;
        v23 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v24 = OpaqueMailboxID.description.getter(v23);
        v26 = v25;
        swift_bridgeObjectRelease();
        sub_1A55791B0(v24, v26, v59);
        sub_1A594C3CC();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v22 + 31) = 2160;
        sub_1A594C3CC();
        *(_WORD *)(v22 + 41) = 2085;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v27 = sub_1A594B4A8();
        sub_1A55791B0(v27, v28, v59);
        sub_1A594C3CC();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v22 + 51) = 2160;
        sub_1A594C3CC();
        *(_WORD *)(v22 + 61) = 2085;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v29 = sub_1A594B4A8();
        sub_1A55791B0(v29, v30, v59);
        sub_1A594C3CC();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A4F90000, v21, type, "[%.*hhx] Persistence passed %ld copies of mailbox with ID %s \"%{sensitive,mask.mailbox}s\" - \"%{sensitive,mask.mailbox}s\".", (uint8_t *)v22, 0x47u);
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v50, -1, -1);
        v31 = v22;
        a1 = v52;
        MEMORY[0x1A85B1964](v31, -1, -1);

        v10 = v49;
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();

        swift_release_n();
        swift_bridgeObjectRelease_n();
        v10 = v20;
      }
      v13 = v58;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A5522D94((uint64_t)v60);
      v33 = sub_1A5521594(a1, (uint64_t)v60, v32);
      sub_1A5522DE4((uint64_t)v60);
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v33 + 16) < 2uLL)
        goto LABEL_7;
      swift_retain_n();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      sub_1A5522D94((uint64_t)v60);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v34 = v10;
      v35 = sub_1A594A74C();
      v36 = sub_1A594C018();
      if (os_log_type_enabled(v35, v36))
      {
        v37 = swift_slowAlloc();
        v53 = swift_slowAlloc();
        v59[0] = v53;
        *(_DWORD *)v37 = 68159235;
        sub_1A594C3CC();
        *(_WORD *)(v37 + 8) = 256;
        swift_release();
        v51 = v36;
        v11 = a2;
        sub_1A594C3CC();
        swift_release();
        *(_WORD *)(v37 + 11) = 2048;
        swift_bridgeObjectRelease();
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v37 + 21) = 2160;
        sub_1A594C3CC();
        *(_WORD *)(v37 + 31) = 2085;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v38 = sub_1A594B4A8();
        sub_1A55791B0(v38, v39, v59);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A5522DE4((uint64_t)v60);
        sub_1A5522DE4((uint64_t)v60);
        *(_WORD *)(v37 + 41) = 2080;
        v40 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v41 = OpaqueMailboxID.description.getter(v40);
        v43 = v42;
        swift_bridgeObjectRelease();
        sub_1A55791B0(v41, v43, v59);
        sub_1A594C3CC();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v37 + 51) = 2080;
        v44 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v45 = OpaqueMailboxID.description.getter(v44);
        v47 = v46;
        swift_bridgeObjectRelease();
        sub_1A55791B0(v45, v47, v59);
        sub_1A594C3CC();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A4F90000, v35, v51, "[%.*hhx] Persistence passed %ld copies of mailbox with name \"%{sensitive,mask.mailbox}s\" %s - %s.", (uint8_t *)v37, 0x3Du);
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v53, -1, -1);
        v48 = v37;
        v12 = v56;
        MEMORY[0x1A85B1964](v48, -1, -1);

        v10 = v34;
        a1 = v52;
        v14 = v57;
        v13 = v58;
        goto LABEL_9;
      }

      swift_release_n();
      swift_bridgeObjectRelease_n();
      sub_1A5522DE4((uint64_t)v60);
      sub_1A5522DE4((uint64_t)v60);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      v10 = v34;
      a1 = v52;
      v14 = v57;
      v13 = v58;
LABEL_8:
      v11 = a2;
LABEL_9:
      v14 += 96;
      if (!--v12)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    swift_bridgeObjectRelease();
LABEL_7:
    swift_bridgeObjectRelease();
    sub_1A5522DE4((uint64_t)v60);
    goto LABEL_8;
  }
}

uint64_t sub_1A55201C8(uint64_t (*a1)(int *))
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t result;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unsigned int *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  unsigned int v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  int v76;
  char v77;
  unint64_t v78;

  v2 = *(_QWORD **)v1;
  v61 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  if (!v61)
    return 0;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v3 = 0;
  v4 = 0;
  v64 = v2;
  while (1)
  {
    v78 = v4;
    v5 = v2[v3 + 5];
    v6 = v2[v3 + 6];
    v8 = v2[v3 + 7];
    v7 = v2[v3 + 8];
    v9 = v2[v3 + 9];
    v10 = BYTE4(v2[v3 + 10]);
    v11 = LODWORD(v2[v3 + 10]);
    v66 = v11 | (v10 << 32);
    v70 = v2[v3 + 4];
    v71 = v5;
    v72 = v6;
    v73 = v8;
    v74 = v7;
    v75 = v9;
    v77 = v10;
    v76 = v11;
    sub_1A550F160(v5, v6, v8, v7, v9, v66);
    v12 = a1(&v70);
    sub_1A5503B08(v5, v6, v8, v7, v9, v66);
    if (v68)
      return swift_bridgeObjectRelease();
    if ((v12 & 1) != 0)
      break;
    v4 = v78 + 1;
    v3 += 7;
    v2 = v64;
    if (v61 == v78 + 1)
    {
      swift_bridgeObjectRelease();
      return v64[2];
    }
  }
  v14 = v64;
  swift_bridgeObjectRelease();
  result = v78;
  v15 = v78 + 1;
  if (__OFADD__(v78, 1))
    goto LABEL_36;
  v16 = v64[2];
  if (v15 != v16)
  {
    v17 = v3 * 8 + 136;
    while (v15 < v16)
    {
      v67 = v15;
      v78 = result;
      v65 = v14;
      v62 = v17;
      v20 = (unsigned int *)((char *)v14 + v17);
      v21 = *((_QWORD *)v20 - 5);
      v22 = *((_QWORD *)v20 - 4);
      v23 = *((_QWORD *)v20 - 3);
      v24 = *((_QWORD *)v20 - 2);
      v25 = *((_QWORD *)v20 - 1);
      v26 = *((unsigned __int8 *)v20 + 4);
      v27 = *v20;
      v69 = v27 | (v26 << 32);
      v70 = *(v20 - 12);
      v71 = v21;
      v72 = v22;
      v73 = v23;
      v74 = v24;
      v75 = v25;
      v77 = v26;
      v76 = v27;
      sub_1A550F160(v21, v22, v23, v24, v25, v69);
      v28 = a1(&v70);
      sub_1A5503B08(v21, v22, v23, v24, v25, v69);
      if ((v28 & 1) != 0)
      {
        v14 = v65;
        v18 = v67;
        result = v78;
        v19 = v62;
      }
      else
      {
        result = v78;
        v18 = v67;
        if (v67 == v78)
        {
          v14 = v65;
          v19 = v62;
          result = v78 + 1;
          if (__OFADD__(v78, 1))
            goto LABEL_31;
        }
        else
        {
          if ((v78 & 0x8000000000000000) != 0)
            goto LABEL_32;
          v29 = v65[2];
          if (v78 >= v29)
            goto LABEL_33;
          if (v67 >= v29)
            goto LABEL_34;
          v30 = 7 * v78;
          v31 = (uint64_t)&v65[7 * v78 + 4];
          v58 = *(_DWORD *)v31;
          v59 = *(v20 - 12);
          v32 = *((_QWORD *)v20 - 5);
          v33 = *((_QWORD *)v20 - 4);
          v35 = *((_QWORD *)v20 - 3);
          v34 = *((_QWORD *)v20 - 2);
          v36 = *((_QWORD *)v20 - 1);
          v14 = v65;
          v37 = *(unsigned int *)((char *)v65 + v62) | ((unint64_t)*((unsigned __int8 *)v65 + v62 + 4) << 32);
          v52 = *(_QWORD *)(v31 + 8);
          v53 = *(unsigned int *)(v31 + 48) | ((unint64_t)*(unsigned __int8 *)(v31 + 52) << 32);
          v56 = *(_QWORD *)(v31 + 24);
          v57 = *(_QWORD *)(v31 + 16);
          v54 = *(_QWORD *)(v31 + 40);
          v55 = *(_QWORD *)(v31 + 32);
          sub_1A550F160(v52, v57, v56, v55, v54, v53);
          sub_1A550F160(v32, v33, v35, v34, v36, v37);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v14 = sub_1A554B694(v65);
          v38 = (unsigned int *)&v14[v30 + 10];
          v39 = v14[v30 + 5];
          v40 = v14[v30 + 6];
          v41 = v14[v30 + 7];
          v42 = v14[v30 + 8];
          v43 = v14[v30 + 9];
          v44 = *v38 | ((unint64_t)BYTE4(v14[v30 + 10]) << 32);
          *(v38 - 12) = v59;
          *((_QWORD *)v38 - 5) = v32;
          *((_QWORD *)v38 - 4) = v33;
          *((_QWORD *)v38 - 3) = v35;
          *((_QWORD *)v38 - 2) = v34;
          *((_QWORD *)v38 - 1) = v36;
          *v38 = v37;
          *((_BYTE *)v38 + 4) = BYTE4(v37);
          result = sub_1A5503B08(v39, v40, v41, v42, v43, v44);
          v18 = v67;
          if (v67 >= v14[2])
            goto LABEL_35;
          v19 = v62;
          v45 = (char *)v14 + v62;
          v46 = *(_QWORD *)((char *)v14 + v62 - 40);
          v47 = *(_QWORD *)((char *)v14 + v62 - 32);
          v48 = *(_QWORD *)((char *)v14 + v62 - 24);
          v49 = *(_QWORD *)((char *)v14 + v62 - 16);
          v50 = *(_QWORD *)((char *)v14 + v62 - 8);
          v51 = *(unsigned int *)((char *)v14 + v62) | ((unint64_t)*((unsigned __int8 *)v14 + v62 + 4) << 32);
          *((_DWORD *)v45 - 12) = v58;
          *((_QWORD *)v45 - 5) = v52;
          *((_QWORD *)v45 - 4) = v57;
          *((_QWORD *)v45 - 3) = v56;
          *((_QWORD *)v45 - 2) = v55;
          *((_QWORD *)v45 - 1) = v54;
          *(_DWORD *)v45 = v53;
          v45[4] = BYTE4(v53);
          sub_1A5503B08(v46, v47, v48, v49, v50, v51);
          *v60 = v14;
          result = v78 + 1;
          if (__OFADD__(v78, 1))
            goto LABEL_31;
        }
      }
      v15 = v18 + 1;
      v16 = v14[2];
      v17 = v19 + 56;
      if (v15 == v16)
        return result;
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
  }
  return result;
}

unint64_t sub_1A55205F4(uint64_t a1, unsigned int a2, _OWORD *a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t result;
  char v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _OWORD v19[11];
  _BYTE v20[176];
  _QWORD v21[22];
  _BYTE v22[176];
  uint64_t v23[23];

  v5 = v3[1];
  v6 = v5 + 32;
  v7 = *(_QWORD *)(v5 + 16);
  if (*v3)
  {
    v8 = sub_1A557FFE0(a1, a2, v6, v7, (_QWORD *)(*v3 + 16));
    if ((v9 & 1) == 0)
      goto LABEL_3;
    return v8;
  }
  v8 = sub_1A557FEEC(a1, a2, v6, v7);
  if ((v13 & 1) != 0)
    return v8;
LABEL_3:
  sub_1A55032A0((uint64_t)a3, (uint64_t)v21, &qword_1EE797CC8);
  sub_1A552304C(v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5522E6C);
  v11 = v3[2];
  v10 = v3 + 2;
  result = sub_1A5520774(v8, *(_QWORD *)(v11 + 16) - 1);
  if (*(_QWORD *)(*v10 + 16))
  {
    sub_1A5521100(v20);
    sub_1A55032A0((uint64_t)v20, (uint64_t)v22, &qword_1EE797CC8);
    sub_1A55032A0((uint64_t)v22, (uint64_t)v23, &qword_1EE797CC8);
    if (sub_1A5522E34(v23) == 1)
    {
      sub_1A555BEB4(*(_QWORD *)(*v10 + 16) - 1, a3);
    }
    else
    {
      sub_1A55032A0((uint64_t)v22, (uint64_t)v19, &qword_1EE797CC8);
      v14 = v19[9];
      a3[8] = v19[8];
      a3[9] = v14;
      a3[10] = v19[10];
      v15 = v19[5];
      a3[4] = v19[4];
      a3[5] = v15;
      v16 = v19[7];
      a3[6] = v19[6];
      a3[7] = v16;
      v17 = v19[1];
      *a3 = v19[0];
      a3[1] = v17;
      v18 = v19[3];
      a3[2] = v19[2];
      a3[3] = v18;
    }
    nullsub_1(a3);
    return v8;
  }
  __break(1u);
  return result;
}

unint64_t sub_1A5520774(unint64_t result, unint64_t a2)
{
  uint64_t *v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  __int128 *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 *v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  _OWORD v59[11];
  _OWORD v60[11];
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;

  if (result != a2)
  {
    v3 = result;
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v4 = *v2;
      v5 = *(_QWORD *)(*v2 + 16);
      if (v5 > result)
      {
        v7 = (__int128 *)(v4 + 32 + 176 * result);
        v8 = *v7;
        v9 = v7[2];
        v62 = v7[1];
        v63 = v9;
        v61 = v8;
        v10 = v7[3];
        v11 = v7[4];
        v12 = v7[6];
        v66 = v7[5];
        v67 = v12;
        v64 = v10;
        v65 = v11;
        v13 = v7[7];
        v14 = v7[8];
        v15 = v7[10];
        v70 = v7[9];
        v71 = v15;
        v68 = v13;
        v69 = v14;
        if (v5 > a2)
        {
          v16 = (__int128 *)(v4 + 32 + 176 * a2);
          v17 = *v16;
          v18 = v16[2];
          v73 = v16[1];
          v74 = v18;
          v72 = v17;
          v19 = v16[3];
          v20 = v16[4];
          v21 = v16[6];
          v77 = v16[5];
          v78 = v21;
          v75 = v19;
          v76 = v20;
          v22 = v16[7];
          v23 = v16[8];
          v24 = v16[10];
          v81 = v16[9];
          v82 = v24;
          v79 = v22;
          v80 = v23;
          sub_1A54E3150((uint64_t)&v61);
          sub_1A54E3150((uint64_t)&v72);
          result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            result = sub_1A555C194(v4);
            v4 = result;
          }
          if (*(_QWORD *)(v4 + 16) > v3)
          {
            v25 = (__int128 *)(v4 + 32 + 176 * v3);
            v26 = *v25;
            v27 = v25[2];
            v59[1] = v25[1];
            v59[2] = v27;
            v59[0] = v26;
            v28 = v25[3];
            v29 = v25[4];
            v30 = v25[6];
            v59[5] = v25[5];
            v59[6] = v30;
            v59[3] = v28;
            v59[4] = v29;
            v31 = v25[7];
            v32 = v25[8];
            v33 = v25[10];
            v59[9] = v25[9];
            v59[10] = v33;
            v59[7] = v31;
            v59[8] = v32;
            v34 = v72;
            v35 = v74;
            v25[1] = v73;
            v25[2] = v35;
            *v25 = v34;
            v36 = v75;
            v37 = v76;
            v38 = v78;
            v25[5] = v77;
            v25[6] = v38;
            v25[3] = v36;
            v25[4] = v37;
            v39 = v79;
            v40 = v80;
            v41 = v82;
            v25[9] = v81;
            v25[10] = v41;
            v25[7] = v39;
            v25[8] = v40;
            result = sub_1A54E31EC((uint64_t)v59);
            if (*(_QWORD *)(v4 + 16) > a2)
            {
              v42 = (__int128 *)(v4 + 32 + 176 * a2);
              v43 = *v42;
              v44 = v42[2];
              v60[1] = v42[1];
              v60[2] = v44;
              v60[0] = v43;
              v45 = v42[3];
              v46 = v42[4];
              v47 = v42[6];
              v60[5] = v42[5];
              v60[6] = v47;
              v60[3] = v45;
              v60[4] = v46;
              v48 = v42[7];
              v49 = v42[8];
              v50 = v42[10];
              v60[9] = v42[9];
              v60[10] = v50;
              v60[7] = v48;
              v60[8] = v49;
              v51 = v61;
              v52 = v63;
              v42[1] = v62;
              v42[2] = v52;
              *v42 = v51;
              v53 = v64;
              v54 = v65;
              v55 = v67;
              v42[5] = v66;
              v42[6] = v55;
              v42[3] = v53;
              v42[4] = v54;
              v56 = v68;
              v57 = v69;
              v58 = v71;
              v42[9] = v70;
              v42[10] = v58;
              v42[7] = v56;
              v42[8] = v57;
              result = sub_1A54E31EC((uint64_t)v60);
              *v2 = v4;
              return result;
            }
LABEL_15:
            __break(1u);
            return result;
          }
LABEL_14:
          __break(1u);
          goto LABEL_15;
        }
LABEL_13:
        __break(1u);
        goto LABEL_14;
      }
    }
    __break(1u);
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_1A5520980(uint64_t a1, int a2, int64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _OWORD *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t result;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  _OWORD *v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  _OWORD *v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  _OWORD v59[11];
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71[22];
  _QWORD v72[22];

  v7 = v6;
  sub_1A55032A0(a6, (uint64_t)v72, &qword_1EE797CC8);
  if ((a4 & 1) != 0)
  {
    sub_1A55032A0((uint64_t)v72, (uint64_t)v71, &qword_1EE797CC8);
    result = sub_1A5522E34(v71);
    if ((_DWORD)result != 1)
    {
      sub_1A55032A0((uint64_t)v72, (uint64_t)&v60, &qword_1EE797CC8);
      sub_1A54E3150((uint64_t)&v60);
      sub_1A555B280(a1, a2);
      v31 = *(_QWORD *)(v7 + 16);
      v29 = (uint64_t *)(v7 + 16);
      v30 = v31;
      result = swift_isUniquelyReferenced_nonNull_native();
      *v29 = v31;
      if ((result & 1) == 0)
      {
        result = sub_1A54F4ADC(0, *(_QWORD *)(v30 + 16) + 1, 1);
        v30 = *v29;
      }
      v33 = *(_QWORD *)(v30 + 16);
      v32 = *(_QWORD *)(v30 + 24);
      if (v33 >= v32 >> 1)
      {
        result = sub_1A54F4ADC(v32 > 1, v33 + 1, 1);
        v30 = *v29;
      }
      *(_QWORD *)(v30 + 16) = v33 + 1;
      v34 = (_OWORD *)(v30 + 176 * v33);
      v35 = v60;
      v36 = v62;
      v34[3] = v61;
      v34[4] = v36;
      v34[2] = v35;
      v37 = v63;
      v38 = v64;
      v39 = v66;
      v34[7] = v65;
      v34[8] = v39;
      v34[5] = v37;
      v34[6] = v38;
      v40 = v67;
      v41 = v68;
      v42 = v70;
      v34[11] = v69;
      v34[12] = v42;
      v34[9] = v40;
      v34[10] = v41;
      *v29 = v30;
    }
  }
  else
  {
    sub_1A55032A0((uint64_t)v72, (uint64_t)v71, &qword_1EE797CC8);
    if (sub_1A5522E34(v71) == 1)
    {
      v13 = (uint64_t *)(v7 + 16);
      if (*(_QWORD *)(*(_QWORD *)(v7 + 16) + 16) > a3)
      {
        sub_1A555BEB4(a3, &v60);
        v14 = *v13;
        sub_1A54E3150((uint64_t)&v60);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *v13 = v14;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1A54F4ADC(0, *(_QWORD *)(v14 + 16) + 1, 1);
          v14 = *v13;
        }
        v17 = *(_QWORD *)(v14 + 16);
        v16 = *(_QWORD *)(v14 + 24);
        v18 = v17 + 1;
        if (v17 >= v16 >> 1)
        {
          sub_1A54F4ADC(v16 > 1, v17 + 1, 1);
          v18 = v17 + 1;
          v14 = *v13;
        }
        *(_QWORD *)(v14 + 16) = v18;
        v19 = (_OWORD *)(v14 + 176 * v17);
        v20 = v60;
        v21 = v62;
        v19[3] = v61;
        v19[4] = v21;
        v19[2] = v20;
        v22 = v63;
        v23 = v64;
        v24 = v66;
        v19[7] = v65;
        v19[8] = v24;
        v19[5] = v22;
        v19[6] = v23;
        v25 = v67;
        v26 = v68;
        v27 = v70;
        v19[11] = v69;
        v19[12] = v27;
        v19[9] = v25;
        v19[10] = v26;
        sub_1A54E31EC((uint64_t)&v60);
        *v13 = v14;
      }
      sub_1A555B9A8(a3, a5);
      return swift_bridgeObjectRelease();
    }
    else
    {
      v45 = *(_QWORD *)(v7 + 16);
      v43 = (uint64_t *)(v7 + 16);
      v44 = v45;
      sub_1A55032A0((uint64_t)v72, (uint64_t)&v60, &qword_1EE797CC8);
      sub_1A552304C(v72, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A55230B0);
      sub_1A54E3150((uint64_t)&v60);
      v46 = swift_isUniquelyReferenced_nonNull_native();
      *v43 = v45;
      if ((v46 & 1) == 0)
      {
        sub_1A54F4ADC(0, *(_QWORD *)(v44 + 16) + 1, 1);
        v44 = *v43;
      }
      v48 = *(_QWORD *)(v44 + 16);
      v47 = *(_QWORD *)(v44 + 24);
      if (v48 >= v47 >> 1)
        sub_1A54F4ADC(v47 > 1, v48 + 1, 1);
      sub_1A55032A0((uint64_t)v72, (uint64_t)v59, &qword_1EE797CC8);
      v49 = *v43;
      *(_QWORD *)(v49 + 16) = v48 + 1;
      v50 = (_OWORD *)(v49 + 176 * v48);
      v51 = v59[7];
      v52 = v59[8];
      v53 = v59[10];
      v50[11] = v59[9];
      v50[12] = v53;
      v50[9] = v51;
      v50[10] = v52;
      v54 = v59[3];
      v55 = v59[4];
      v56 = v59[6];
      v50[7] = v59[5];
      v50[8] = v56;
      v50[5] = v54;
      v50[6] = v55;
      v57 = v59[0];
      v58 = v59[2];
      v50[3] = v59[1];
      v50[4] = v58;
      v50[2] = v57;
      *v43 = v49;
      sub_1A5520774(a3, *(_QWORD *)(v49 + 16) - 1);
      return (uint64_t)sub_1A552304C(v72, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5522E6C);
    }
  }
  return result;
}

uint64_t sub_1A5520CE4(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_1A5520D70(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 80);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 88);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_1A5520E10(uint64_t a1, _QWORD *a2)
{
  uint64_t result;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  int v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unsigned int v34;
  unsigned __int8 v35;
  uint64_t v36[3];
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  _QWORD v39[3];
  uint64_t v40;
  uint64_t v41;

  v40 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE795F38);
  v41 = sub_1A5524F80(&qword_1EE7996B8, &qword_1EE795F38);
  v39[0] = a1;
  v27 = v39;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  result = sub_1A55201C8((uint64_t (*)(int *))sub_1A5522F54);
  v5 = *(_QWORD *)(*a2 + 16);
  if (v5 < result)
  {
    __break(1u);
  }
  else
  {
    sub_1A558BD20(result, v5);
    v6 = __swift_project_boxed_opaque_existential_1_0(v39, v40);
    v26 = a2;
    MEMORY[0x1E0C80A78](v6);
    (*(void (**)(char *))(v8 + 16))((char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    __swift_allocate_boxed_opaque_existential_1(v36);
    sub_1A594B730();
    v9 = v26;
    while (1)
    {
      __swift_mutable_project_boxed_opaque_existential_1_0((uint64_t)v36, AssociatedTypeWitness);
      sub_1A594C3C0();
      v10 = v32;
      if (v32 > 0xFFFFFFFBFFFFFFFFLL)
        break;
      v11 = v28;
      v12 = v29;
      v14 = v30;
      v13 = v31;
      v15 = v33;
      v16 = v34 | ((unint64_t)v35 << 32);
      v17 = (_QWORD *)*v9;
      v18 = *(_QWORD *)(*v9 + 16);
      if (v18)
      {
        v19 = (int *)(v17 + 4);
        v20 = *(_QWORD *)(*v9 + 16);
        while (1)
        {
          v21 = *v19;
          v19 += 14;
          if (v21 == (_DWORD)v28)
            break;
          if (!--v20)
            goto LABEL_9;
        }
        sub_1A5522FC4(v28, v29, v30, v31, v32, v33, v16);
      }
      else
      {
LABEL_9:
        sub_1A5522F98(v28, v29, v30, v31, v32, v33, v16);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v17 = sub_1A54F00B8(0, v18 + 1, 1, v17);
        v23 = v17[2];
        v22 = v17[3];
        if (v23 >= v22 >> 1)
          v17 = sub_1A54F00B8((_QWORD *)(v22 > 1), v23 + 1, 1, v17);
        v17[2] = v23 + 1;
        v24 = &v17[7 * v23];
        *((_DWORD *)v24 + 8) = v11;
        v24[5] = v12;
        v24[6] = v14;
        v24[7] = v13;
        v24[8] = v10;
        v24[9] = v15;
        *((_BYTE *)v24 + 84) = BYTE4(v16);
        *((_DWORD *)v24 + 20) = v16;
        sub_1A5522FC4(v11, v12, v14, v13, v10, v15, v16);
        v9 = v26;
        *v26 = v17;
      }
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  }
  return result;
}

void sub_1A5521100(void *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = sub_1A555C194(v3);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v5 = v4 - 1;
    memmove(a1, (const void *)(v3 + 176 * (v4 - 1) + 32), 0xB0uLL);
    *(_QWORD *)(v3 + 16) = v5;
    *v1 = v3;
    nullsub_1(a1);
  }
  else
  {
    __break(1u);
  }
}

BOOL sub_1A5521174(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _BOOL8 result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15[2];
  __int128 v16[2];
  __int128 v17;
  uint64_t v18;
  char v19;
  __int128 v20;
  uint64_t v21;
  char v22;

  sub_1A55212B8((__int128 *)a1, v16);
  sub_1A55212B8((__int128 *)a2, v15);
  sub_1A55212B8(v16, &v17);
  v4 = v17;
  if ((v19 & 1) != 0)
  {
    sub_1A55212B8(v15, &v20);
    if ((v22 & 1) == 0 || !sub_1A553639C(v4, v20))
      return 0;
  }
  else
  {
    v12 = *((_QWORD *)&v17 + 1);
    v11 = v18;
    sub_1A55212B8(v15, &v20);
    if ((v22 & 1) != 0)
      return 0;
    v13 = *((_QWORD *)&v20 + 1);
    v14 = v21;
    if ((sub_1A54FAAEC(v4, v20) & 1) == 0 || (sub_1A5536178(v12, v13) & 1) == 0 || (sub_1A55362D4(v11, v14) & 1) == 0)
      return 0;
  }
  if ((sub_1A54FA7E0(*(_QWORD *)(a1 + 32), *(_QWORD *)(a2 + 32)) & 1) == 0
    || (sub_1A54FA980(*(_QWORD *)(a1 + 40), *(_QWORD *)(a2 + 40)) & 1) == 0)
  {
    return 0;
  }
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *(_QWORD *)(a1 + 64);
  v7 = *(_QWORD *)(a2 + 56);
  v8 = *(_QWORD *)(a2 + 64);
  v9 = sub_1A55364B0(*(_QWORD *)(a1 + 48), *(_QWORD *)(a2 + 48));
  result = 0;
  if ((v9 & 1) != 0 && v5 == v7 && v6 == v8)
    return *(_DWORD *)(a1 + 72) == *(_DWORD *)(a2 + 72);
  return result;
}

_OWORD *sub_1A55212B8(__int128 *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = *a1;
  *(_OWORD *)((char *)a2 + 9) = *(__int128 *)((char *)a1 + 9);
  *a2 = v2;
  return a2;
}

uint64_t sub_1A55212D0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) == 0)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t sub_1A5521304(uint64_t result, uint64_t a2, uint64_t a3, __n128 a4)
{
  unint64_t v4;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  char v34;
  __n128 v35;

  v4 = *(_QWORD *)(result + 16);
  if (!v4)
    return MEMORY[0x1E0DEE9D8];
  v7 = 0;
  v8 = result + 32;
  v9 = a2 + 35;
  v10 = MEMORY[0x1E0DEE9D8];
  do
  {
    if (v7 <= v4)
      v11 = v4;
    else
      v11 = v7;
    while (1)
    {
      if (v7 == v11)
      {
        __break(1u);
        return result;
      }
      v12 = v8 + 96 * v7++;
      if (*(_QWORD *)(v12 + 8) == a3)
      {
        v13 = *(unsigned __int8 **)v12;
        v14 = *(_QWORD *)(*(_QWORD *)v12 + 16);
        if (v14 == *(_QWORD *)(a2 + 16))
        {
          if (!v14)
            goto LABEL_22;
          if (v13 == (unsigned __int8 *)a2)
          {
            v13 = (unsigned __int8 *)a2;
            goto LABEL_22;
          }
          if (v13[32] == *(unsigned __int8 *)(a2 + 32))
          {
            if (v14 == 1)
              goto LABEL_22;
            if (v13[33] == *(unsigned __int8 *)(a2 + 33))
            {
              if (v14 == 2)
                goto LABEL_22;
              if (v13[34] == *(unsigned __int8 *)(a2 + 34))
                break;
            }
          }
        }
      }
LABEL_6:
      if (v7 == v4)
        return v10;
    }
    v15 = 0;
    v16 = v14 - 3;
    while (v16 != v15)
    {
      v17 = v13[v15 + 35];
      v18 = *(unsigned __int8 *)(v9 + v15++);
      if (v17 != v18)
        goto LABEL_6;
    }
LABEL_22:
    v34 = *(_BYTE *)(v12 + 88);
    a4.n128_u64[0] = *(_QWORD *)(v12 + 80);
    v35 = a4;
    v19 = *(_QWORD *)(v12 + 72);
    v33 = *(_BYTE *)(v12 + 64);
    v32 = *(_QWORD *)(v12 + 56);
    v31 = *(_BYTE *)(v12 + 48);
    v30 = *(_QWORD *)(v12 + 40);
    v28 = *(_DWORD *)(v12 + 32);
    v29 = *(_BYTE *)(v12 + 36);
    v27 = *(_DWORD *)(v12 + 24);
    v20 = *(_QWORD *)(v12 + 16);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v26 = v20;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54E31DC(v19);
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
      result = sub_1A54F4C9C(0, *(_QWORD *)(v10 + 16) + 1, 1);
    v22 = *(_QWORD *)(v10 + 16);
    v21 = *(_QWORD *)(v10 + 24);
    v23 = v22 + 1;
    v9 = v25;
    if (v22 >= v21 >> 1)
    {
      result = sub_1A54F4C9C(v21 > 1, v22 + 1, 1);
      v23 = v22 + 1;
      v9 = v25;
    }
    *(_QWORD *)(v10 + 16) = v23;
    v24 = v10 + 96 * v22;
    *(_QWORD *)(v24 + 32) = v13;
    *(_QWORD *)(v24 + 40) = a3;
    *(_QWORD *)(v24 + 48) = v26;
    *(_DWORD *)(v24 + 56) = v27;
    *(_DWORD *)(v24 + 64) = v28;
    *(_BYTE *)(v24 + 68) = v29;
    *(_QWORD *)(v24 + 72) = v30;
    *(_BYTE *)(v24 + 80) = v31;
    *(_QWORD *)(v24 + 88) = v32;
    *(_BYTE *)(v24 + 96) = v33;
    *(_QWORD *)(v24 + 104) = v19;
    a4.n128_u64[1] = v35.n128_u64[1];
    *(_QWORD *)(v24 + 112) = v35.n128_u64[0];
    *(_BYTE *)(v24 + 120) = v34;
  }
  while (v7 != v4);
  return v10;
}

uint64_t sub_1A5521594(uint64_t result, uint64_t a2, __n128 a3)
{
  unint64_t v3;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  unsigned __int8 *v15;
  unsigned __int8 *v16;
  uint64_t v17;
  int v18;
  int v19;
  int v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  char v34;
  __n128 v35;

  v3 = *(_QWORD *)(result + 16);
  if (!v3)
    return MEMORY[0x1E0DEE9D8];
  v5 = 0;
  v6 = result + 32;
  v7 = MEMORY[0x1E0DEE9D8];
  do
  {
    if (v5 <= v3)
      v8 = v3;
    else
      v8 = v5;
    while (1)
    {
      if (v5 == v8)
      {
        __break(1u);
        return result;
      }
      v9 = v6 + 96 * v5;
      v10 = *(unsigned int *)(v9 + 24);
      ++v5;
      if ((v10 | (v10 << 32)) == (*(unsigned int *)(a2 + 24) | ((unint64_t)*(unsigned int *)(a2 + 24) << 32)))
      {
        v11 = *(_QWORD *)(v9 + 16);
        v12 = *(_QWORD *)(a2 + 16);
        v13 = *(_QWORD *)(v11 + 16);
        if (v13 == *(_QWORD *)(v12 + 16))
        {
          if (v13)
            v14 = v11 == v12;
          else
            v14 = 1;
          if (v14)
            goto LABEL_23;
          if (*(unsigned __int8 *)(v11 + 32) == *(unsigned __int8 *)(v12 + 32))
          {
            if (v13 == 1)
              goto LABEL_23;
            if (*(unsigned __int8 *)(v11 + 33) == *(unsigned __int8 *)(v12 + 33))
            {
              if (v13 == 2)
                goto LABEL_23;
              if (*(unsigned __int8 *)(v11 + 34) == *(unsigned __int8 *)(v12 + 34))
                break;
            }
          }
        }
      }
LABEL_6:
      if (v5 == v3)
        return v7;
    }
    v15 = (unsigned __int8 *)(v11 + 35);
    v16 = (unsigned __int8 *)(v12 + 35);
    v17 = v13 - 3;
    while (v17)
    {
      v19 = *v15++;
      v18 = v19;
      v20 = *v16++;
      --v17;
      if (v18 != v20)
        goto LABEL_6;
    }
LABEL_23:
    v34 = *(_BYTE *)(v9 + 88);
    a3.n128_u64[0] = *(_QWORD *)(v9 + 80);
    v35 = a3;
    v21 = *(_QWORD *)(v9 + 72);
    v33 = *(_BYTE *)(v9 + 64);
    v32 = *(_QWORD *)(v9 + 56);
    v31 = *(_BYTE *)(v9 + 48);
    v30 = *(_QWORD *)(v9 + 40);
    v28 = *(_DWORD *)(v9 + 32);
    v29 = *(_BYTE *)(v9 + 36);
    v26 = *(_QWORD *)v9;
    v27 = *(_QWORD *)(v9 + 8);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54E31DC(v21);
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
      result = sub_1A54F4C9C(0, *(_QWORD *)(v7 + 16) + 1, 1);
    v23 = *(_QWORD *)(v7 + 16);
    v22 = *(_QWORD *)(v7 + 24);
    v24 = v23 + 1;
    if (v23 >= v22 >> 1)
    {
      result = sub_1A54F4C9C(v22 > 1, v23 + 1, 1);
      v24 = v23 + 1;
    }
    *(_QWORD *)(v7 + 16) = v24;
    v25 = v7 + 96 * v23;
    *(_QWORD *)(v25 + 32) = v26;
    *(_QWORD *)(v25 + 40) = v27;
    *(_QWORD *)(v25 + 48) = v11;
    *(_DWORD *)(v25 + 56) = v10;
    *(_DWORD *)(v25 + 64) = v28;
    *(_BYTE *)(v25 + 68) = v29;
    *(_QWORD *)(v25 + 72) = v30;
    *(_BYTE *)(v25 + 80) = v31;
    *(_QWORD *)(v25 + 88) = v32;
    *(_BYTE *)(v25 + 96) = v33;
    *(_QWORD *)(v25 + 104) = v21;
    a3.n128_u64[1] = v35.n128_u64[1];
    *(_QWORD *)(v25 + 112) = v35.n128_u64[0];
    *(_BYTE *)(v25 + 120) = v34;
  }
  while (v5 != v3);
  return v7;
}

uint64_t sub_1A5521818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t i;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  int v28;

  v5 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = a3 & 0xFFFFFFFFFFLL;
  result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v12 = 0;
  v26 = v5;
  v27 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (!v8)
    goto LABEL_7;
LABEL_4:
  v13 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v13 | (v12 << 6); ; i = __clz(__rbit64(v20)) + (v12 << 6))
  {
    v15 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v17 = *v15;
    v16 = v15[1];
    v28 = *(_DWORD *)(*(_QWORD *)(a1 + 56) + 24 * i);
    sub_1A54E42B4(v17, v16);
    sub_1A54E3414();
    MessageIdentifierSet.contains(_:)((uint64_t)&v28, a2, v10);
    if ((v18 & 1) != 0)
    {
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1A54F09F4(0, v27[2] + 1, 1, v27);
        v27 = (_QWORD *)result;
      }
      v23 = v27[2];
      v22 = v27[3];
      v24 = v23 + 1;
      if (v23 >= v22 >> 1)
      {
        result = (uint64_t)sub_1A54F09F4((_QWORD *)(v22 > 1), v23 + 1, 1, v27);
        v24 = v23 + 1;
        v27 = (_QWORD *)result;
      }
      v27[2] = v24;
      v25 = &v27[2 * v23];
      v25[4] = v17;
      v25[5] = v16;
      v5 = v26;
      if (v8)
        goto LABEL_4;
    }
    else
    {
      result = sub_1A54E46E8(v17, v16);
      if (v8)
        goto LABEL_4;
    }
LABEL_7:
    v19 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v19 >= v9)
      goto LABEL_29;
    v20 = *(_QWORD *)(v5 + 8 * v19);
    ++v12;
    if (!v20)
    {
      v12 = v19 + 1;
      if (v19 + 1 >= v9)
        goto LABEL_29;
      v20 = *(_QWORD *)(v5 + 8 * v12);
      if (!v20)
      {
        v12 = v19 + 2;
        if (v19 + 2 >= v9)
          goto LABEL_29;
        v20 = *(_QWORD *)(v5 + 8 * v12);
        if (!v20)
        {
          v12 = v19 + 3;
          if (v19 + 3 >= v9)
            goto LABEL_29;
          v20 = *(_QWORD *)(v5 + 8 * v12);
          if (!v20)
            break;
        }
      }
    }
LABEL_22:
    v8 = (v20 - 1) & v20;
  }
  v21 = v19 + 4;
  if (v21 >= v9)
  {
LABEL_29:
    swift_release();
    return (uint64_t)v27;
  }
  v20 = *(_QWORD *)(v5 + 8 * v21);
  if (v20)
  {
    v12 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    v12 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v12 >= v9)
      goto LABEL_29;
    v20 = *(_QWORD *)(v5 + 8 * v12);
    ++v21;
    if (v20)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
  return result;
}

_QWORD *sub_1A5521A60(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  unint64_t v30;
  int v31;

  v6 = HIDWORD(a2);
  sub_1A54E3414();
  v7 = a2 & 0xFFFFFFFFFFLL;
  MessageIdentifierSet.startIndex.getter();
  v9 = v8;
  v11 = v10;
  v25 = v6;
  v26 = a2;
  sub_1A54E4334(a1, a2, v6);
  MessageIdentifierSet.endIndex.getter();
  v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v9 == v14 && v11 == v12)
  {
LABEL_14:
    sub_1A54E3458(a1, v26, v25);
  }
  else
  {
    while (1)
    {
      MessageIdentifierSet.subscript.getter();
      v9 = MessageIdentifierSet.index(_:offsetBy:)(v9, v11, 1, a1, v7);
      v11 = v16;
      sub_1A5519BD4(&v31, a3, &v29);
      if (v3)
        break;
      v17 = v30;
      if (v30 >> 60 != 15)
      {
        v27 = v29;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v13 = sub_1A54F09F4(0, v13[2] + 1, 1, v13);
        v19 = v13[2];
        v18 = v13[3];
        v20 = v13;
        if (v19 >= v18 >> 1)
          v20 = sub_1A54F09F4((_QWORD *)(v18 > 1), v19 + 1, 1, v13);
        v20[2] = v19 + 1;
        v13 = v20;
        v21 = &v20[2 * v19];
        v21[4] = v27;
        v21[5] = v17;
      }
      MessageIdentifierSet.endIndex.getter();
      if (v9 == v23 && v11 == v22)
        goto LABEL_14;
    }
    sub_1A54E3458(a1, v26, v25);
    swift_bridgeObjectRelease();
  }
  return v13;
}

uint64_t sub_1A5521C70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  uint64_t v11;
  unsigned __int8 *v12;
  int v13;
  int v14;
  int v15;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return 0;
  result = 0;
  v6 = a1 + 32;
  while (1)
  {
    v7 = (uint64_t *)(v6 + 176 * result);
    if (v7[1] == a3)
    {
      v8 = *v7;
      v9 = *(_QWORD *)(v8 + 16);
      if (v9 == *(_QWORD *)(a2 + 16))
      {
        if (!v9 || v8 == a2)
          return result;
        if (*(unsigned __int8 *)(v8 + 32) == *(unsigned __int8 *)(a2 + 32))
        {
          if (v9 == 1)
            return result;
          if (*(unsigned __int8 *)(v8 + 33) == *(unsigned __int8 *)(a2 + 33))
          {
            if (v9 == 2)
              return result;
            if (*(unsigned __int8 *)(v8 + 34) == *(unsigned __int8 *)(a2 + 34))
              break;
          }
        }
      }
    }
LABEL_3:
    if (++result == v3)
      return 0;
  }
  v10 = (unsigned __int8 *)(v8 + 35);
  v11 = v9 - 3;
  v12 = (unsigned __int8 *)(a2 + 35);
  while (v11)
  {
    v14 = *v10++;
    v13 = v14;
    v15 = *v12++;
    --v11;
    if (v13 != v15)
      goto LABEL_3;
  }
  return result;
}

uint64_t sub_1A5521D48(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  uint64_t v11;
  unsigned __int8 *v12;
  int v13;
  int v14;
  int v15;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return 0;
  result = 0;
  v6 = a1 + 32;
  while (1)
  {
    v7 = v6 + 176 * result;
    if ((*(unsigned int *)(v7 + 24) | ((unint64_t)*(unsigned int *)(v7 + 24) << 32)) == (a3 | ((unint64_t)a3 << 32)))
    {
      v8 = *(_QWORD *)(v7 + 16);
      v9 = *(_QWORD *)(v8 + 16);
      if (v9 == *(_QWORD *)(a2 + 16))
      {
        if (!v9 || v8 == a2)
          return result;
        if (*(unsigned __int8 *)(v8 + 32) == *(unsigned __int8 *)(a2 + 32))
        {
          if (v9 == 1)
            return result;
          if (*(unsigned __int8 *)(v8 + 33) == *(unsigned __int8 *)(a2 + 33))
          {
            if (v9 == 2)
              return result;
            if (*(unsigned __int8 *)(v8 + 34) == *(unsigned __int8 *)(a2 + 34))
              break;
          }
        }
      }
    }
LABEL_3:
    if (++result == v3)
      return 0;
  }
  v10 = (unsigned __int8 *)(v8 + 35);
  v11 = v9 - 3;
  v12 = (unsigned __int8 *)(a2 + 35);
  while (v11)
  {
    v14 = *v10++;
    v13 = v14;
    v15 = *v12++;
    --v11;
    if (v13 != v15)
      goto LABEL_3;
  }
  return result;
}

double sub_1A5521E2C(__n128 *a1)
{
  uint64_t v1;
  double result;

  *(_QWORD *)&result = sub_1A551F480(a1, (_QWORD **)*(_QWORD *)(v1 + 16)).n128_u64[0];
  return result;
}

uint64_t sub_1A5521E34(uint64_t a1)
{
  uint64_t v1;

  return sub_1A551F58C(a1, *(_QWORD *)(v1 + 16));
}

double sub_1A5521E3C(_OWORD *a1, __n128 *a2)
{
  uint64_t v2;
  double result;

  *(_QWORD *)&result = sub_1A551F634(a1, a2, (_QWORD **)*(_QWORD *)(v2 + 16)).n128_u64[0];
  return result;
}

uint64_t sub_1A5521E44()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A5521E68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MailboxTaskLogger(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5521EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t result;
  _QWORD *v13;

  if (*(_BYTE *)(a3 + 24) == 1)
  {
    v6 = *(_QWORD **)a3;
    v7 = *(_QWORD *)(a3 + 8);
    v8 = *(_QWORD *)(a3 + 16);
    v9 = sub_1A5521C70(*(_QWORD *)a3, a1, a2);
    if ((v10 & 1) == 0)
    {
      v11 = v9;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      result = swift_isUniquelyReferenced_nonNull_native();
      v13 = v6;
      if ((result & 1) != 0)
      {
        if ((v11 & 0x8000000000000000) == 0)
          goto LABEL_5;
      }
      else
      {
        result = (uint64_t)sub_1A554B6F8(v6);
        v13 = (_QWORD *)result;
        if ((v11 & 0x8000000000000000) == 0)
        {
LABEL_5:
          if (v11 < v13[2])
          {
            sub_1A551E508((uint64_t)&v13[22 * v11 + 4], a4);
            sub_1A54E8FCC((uint64_t)v6, v7, v8, 1);
            result = 0;
            *(_QWORD *)a3 = v13;
            *(_QWORD *)(a3 + 8) = 0;
            *(_QWORD *)(a3 + 16) = 0;
            *(_BYTE *)(a3 + 24) = 1;
            return result;
          }
          goto LABEL_11;
        }
      }
      __break(1u);
LABEL_11:
      __break(1u);
      return result;
    }
  }
  return 1;
}

unint64_t sub_1A5521FA8(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4, uint64_t a5)
{
  unint64_t result;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  uint64_t v15;
  BOOL v16;
  unsigned __int8 *v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned int v20;
  int v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30[2];
  _OWORD v31[11];
  __int128 v32;
  char v33;

  sub_1A55212B8(a3, v30);
  result = (unint64_t)sub_1A55212B8(v30, &v32);
  v10 = 0;
  if (v33 != 1)
    return (unint64_t)v10;
  v11 = *(_QWORD *)(v32 + 16);
  if (!v11)
    return 0;
  v12 = 0;
  while (1)
  {
    v13 = v32 + 32 + 176 * v12;
    if (*(_QWORD *)(v13 + 8) == a2)
    {
      v14 = *(unsigned __int8 **)v13;
      v15 = *(_QWORD *)(*(_QWORD *)v13 + 16);
      if (v15 == *(_QWORD *)(a1 + 16))
      {
        if (v15)
          v16 = v14 == (unsigned __int8 *)a1;
        else
          v16 = 1;
        if (v16)
          goto LABEL_25;
        result = *(unsigned __int8 *)(a1 + 32);
        if (v14[32] == (_DWORD)result)
        {
          if (v15 == 1)
            goto LABEL_25;
          result = *(unsigned __int8 *)(a1 + 33);
          if (v14[33] == (_DWORD)result)
          {
            if (v15 == 2)
              goto LABEL_25;
            result = *(unsigned __int8 *)(a1 + 34);
            if (v14[34] == (_DWORD)result)
            {
              if (v15 == 3)
                goto LABEL_25;
              result = *(unsigned __int8 *)(a1 + 35);
              if (v14[35] == (_DWORD)result)
              {
                if (v15 == 4)
                  goto LABEL_25;
                result = *(unsigned __int8 *)(a1 + 36);
                if (v14[36] == (_DWORD)result)
                  break;
              }
            }
          }
        }
      }
    }
LABEL_4:
    if (++v12 == v11)
      return 0;
  }
  v17 = v14 + 37;
  v18 = v15 - 5;
  v19 = (unsigned __int8 *)(a1 + 37);
  while (v18)
  {
    v20 = *v17++;
    result = v20;
    v21 = *v19++;
    --v18;
    if ((_DWORD)result != v21)
      goto LABEL_4;
  }
LABEL_25:
  if (v12 < v11)
  {
    v22 = *(_OWORD *)v13;
    v23 = *(_OWORD *)(v13 + 32);
    v31[1] = *(_OWORD *)(v13 + 16);
    v31[2] = v23;
    v31[0] = v22;
    v24 = *(_OWORD *)(v13 + 48);
    v25 = *(_OWORD *)(v13 + 64);
    v26 = *(_OWORD *)(v13 + 80);
    v31[6] = *(_OWORD *)(v13 + 96);
    v31[4] = v25;
    v31[5] = v26;
    v31[3] = v24;
    v27 = *(_OWORD *)(v13 + 112);
    v28 = *(_OWORD *)(v13 + 128);
    v29 = *(_OWORD *)(v13 + 160);
    v31[9] = *(_OWORD *)(v13 + 144);
    v31[10] = v29;
    v31[7] = v27;
    v31[8] = v28;
    sub_1A54E3150((uint64_t)v31);
    v10 = sub_1A5521A60(a4, a5 & 0xFFFFFFFFFFLL, (uint64_t)v31);
    sub_1A54E31EC((uint64_t)v31);
    return (unint64_t)v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A552217C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t *v23;
  uint64_t v24;
  uint64_t v25;

  v23 = (unint64_t *)result;
  v6 = 0;
  v25 = a3 + 64;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v12 = v11 | (v6 << 6);
      goto LABEL_5;
    }
    v18 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v18 >= v10)
      return sub_1A5530570(v23, a2, v24, a3);
    v19 = *(_QWORD *)(v25 + 8 * v18);
    ++v6;
    if (!v19)
    {
      v6 = v18 + 1;
      if (v18 + 1 >= v10)
        return sub_1A5530570(v23, a2, v24, a3);
      v19 = *(_QWORD *)(v25 + 8 * v6);
      if (!v19)
      {
        v6 = v18 + 2;
        if (v18 + 2 >= v10)
          return sub_1A5530570(v23, a2, v24, a3);
        v19 = *(_QWORD *)(v25 + 8 * v6);
        if (!v19)
          break;
      }
    }
LABEL_20:
    v9 = (v19 - 1) & v19;
    v12 = __clz(__rbit64(v19)) + (v6 << 6);
LABEL_5:
    v13 = (unsigned __int8 *)(*(_QWORD *)(a3 + 56) + 16 * v12);
    v14 = *((_QWORD *)v13 + 1);
    v15 = *a4;
    v16 = a4[1];
    v17 = *v13;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    LOBYTE(v16) = SyncRequest.includes(_:)(v15, v16, v17, v14);
    result = swift_bridgeObjectRelease();
    if ((v16 & 1) != 0)
    {
      *(unint64_t *)((char *)v23 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v24++, 1))
      {
        __break(1u);
        return sub_1A5530570(v23, a2, v24, a3);
      }
    }
  }
  v20 = v18 + 3;
  if (v20 >= v10)
    return sub_1A5530570(v23, a2, v24, a3);
  v19 = *(_QWORD *)(v25 + 8 * v20);
  if (v19)
  {
    v6 = v20;
    goto LABEL_20;
  }
  while (1)
  {
    v6 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v6 >= v10)
      return sub_1A5530570(v23, a2, v24, a3);
    v19 = *(_QWORD *)(v25 + 8 * v6);
    ++v20;
    if (v19)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1A5522358(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  char v5;
  unsigned int v6;
  unint64_t v7;
  size_t v8;
  uint64_t isStackAllocationSafe;
  uint64_t v10;
  void *v11;
  _QWORD v13[2];

  v13[1] = *MEMORY[0x1E0C80C00];
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v7 = (unint64_t)((1 << v5) + 63) >> 6;
  v8 = 8 * v7;
  sub_1A5522D94((uint64_t)a2);
  isStackAllocationSafe = sub_1A5522D94((uint64_t)a2);
  if (v6 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    sub_1A5522D94((uint64_t)a2);
    v10 = sub_1A552217C((uint64_t)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, a1, a2);
    sub_1A5522DE4((uint64_t)a2);
    if (v2)
      swift_willThrow();
    sub_1A5522DE4((uint64_t)a2);
    sub_1A5522DE4((uint64_t)a2);
  }
  else
  {
    v11 = (void *)swift_slowAlloc();
    bzero(v11, v8);
    sub_1A5522D94((uint64_t)a2);
    v10 = sub_1A552217C((uint64_t)v11, v7, a1, a2);
    sub_1A5522DE4((uint64_t)a2);
    MEMORY[0x1A85B1964](v11, -1, -1);
    sub_1A5522DE4((uint64_t)a2);
    sub_1A5522DE4((uint64_t)a2);
  }
  return v10;
}

uint64_t sub_1A552251C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v6;
  uint64_t v7;
  uint64_t *v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  __int16 v38;
  int v39;
  int v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v45;
  int64_t v46;
  char v49;
  char v50;
  char v51;
  char v52;
  int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int16 v65;
  char v66;
  _BYTE v67[7];
  char v68;
  __int16 v69;
  char v70;
  char v71;
  _BYTE v72[7];
  char v73;
  char v74;
  char v75;
  __int16 v76;
  char v77;
  char v78;
  _QWORD v79[9];
  uint64_t v80;
  _OWORD v81[2];
  __int128 v82;
  __int128 v83;
  _OWORD v84[2];
  __int128 v85;
  __int128 v86;
  char v87;
  _BYTE v88[16];
  _BYTE v89[8];
  int v90;
  char v91;
  uint64_t v92;
  char v93;

  v4 = v3;
  v6 = *(_QWORD *)(a1 + 16);
  v80 = MEMORY[0x1E0DEE9D8];
  sub_1A54F4ADC(0, v6, 0);
  v63 = v80;
  v46 = v6;
  if (v6)
  {
    v45 = a1 + 32;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v7 = 0;
    while (1)
    {
      v62 = v7;
      v8 = (uint64_t *)(v45 + 96 * v7);
      v9 = *((_OWORD *)v8 + 3);
      v82 = *((_OWORD *)v8 + 2);
      v83 = v9;
      v84[0] = *((_OWORD *)v8 + 4);
      *(_OWORD *)((char *)v84 + 9) = *(_OWORD *)((char *)v8 + 73);
      v10 = *((_OWORD *)v8 + 1);
      v81[0] = *(_OWORD *)v8;
      v81[1] = v10;
      v56 = v8[1];
      v57 = *v8;
      v55 = v8[2];
      v53 = *((_DWORD *)v8 + 8);
      v54 = *((_DWORD *)v8 + 6);
      v51 = *((_BYTE *)v8 + 48);
      v52 = *((_BYTE *)v8 + 36);
      v58 = v8[5];
      v59 = v8[7];
      v60 = v8[9];
      v11 = v8[10];
      v49 = *((_BYTE *)v8 + 88);
      v50 = *((_BYTE *)v8 + 64);
      sub_1A5522D94((uint64_t)v81);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A5522D94((uint64_t)v81);
      v12 = sub_1A5522358(a2, (uint64_t *)v81);
      sub_1A5522DE4((uint64_t)v81);
      swift_bridgeObjectRelease();
      v13 = sub_1A5511688(v12);
      v61 = v4;
      swift_release();
      v14 = *(_QWORD *)(v13 + 16);
      sub_1A5523008();
      v15 = sub_1A594BBD4();
      v16 = v15;
      if (v14)
        break;
LABEL_14:
      swift_bridgeObjectRelease();
      sub_1A5522D94((uint64_t)v81);
      v26 = Set<>.makeNonEmpty()(v16);
      swift_bridgeObjectRelease();
      v27 = *(_DWORD *)(a3 + 72);
      *(_DWORD *)(a3 + 72) = (v27 + 1) & 0xFFFFFF;
      v85 = v82;
      v86 = v83;
      v87 = v84[0];
      sub_1A55032A0((uint64_t)&v85, (uint64_t)v89, &qword_1EE7968D0);
      sub_1A55032A0((uint64_t)&v86 + 8, (uint64_t)v88, &qword_1EE796EE0);
      sub_1A55032A0((uint64_t)v89, (uint64_t)&v90, &qword_1EE7968D0);
      if ((v91 & 1) != 0 || (v28 = v90, sub_1A55032A0((uint64_t)v88, (uint64_t)&v92, &qword_1EE796EE0), (v93 & 1) != 0))
      {
        sub_1A5522DE4((uint64_t)v81);
        v30 = 0;
        v31 = 0;
        v32 = 1;
      }
      else
      {
        v64 = v92;
        UIDValidityWith.init(uidValidity:value:)(v28, (uint64_t)&v64, (uint64_t)&type metadata for ModificationSequenceValue, v29, v79);
        sub_1A5522DE4((uint64_t)v81);
        v32 = 0;
        v30 = LODWORD(v79[0]);
        v31 = v79[1];
      }
      v34 = v62;
      v33 = v63;
      v80 = v63;
      v36 = *(_QWORD *)(v63 + 16);
      v35 = *(_QWORD *)(v63 + 24);
      if (v36 >= v35 >> 1)
      {
        sub_1A54F4ADC(v35 > 1, v36 + 1, 1);
        v34 = v62;
        v33 = v80;
      }
      v7 = v34 + 1;
      v78 = v52;
      v75 = v51;
      v74 = v50;
      v73 = v49;
      v71 = 1;
      v68 = v32;
      *(_QWORD *)(v33 + 16) = v36 + 1;
      v63 = v33;
      v37 = v33 + 176 * v36;
      *(_QWORD *)(v37 + 32) = v57;
      *(_QWORD *)(v37 + 40) = v56;
      *(_QWORD *)(v37 + 48) = v55;
      *(_DWORD *)(v37 + 56) = v54;
      *(_DWORD *)(v37 + 64) = v53;
      *(_BYTE *)(v37 + 68) = v78;
      v38 = v76;
      *(_BYTE *)(v37 + 71) = v77;
      *(_WORD *)(v37 + 69) = v38;
      *(_QWORD *)(v37 + 72) = v58;
      *(_BYTE *)(v37 + 80) = v75;
      v39 = v79[0];
      *(_DWORD *)(v37 + 84) = *(_DWORD *)((char *)v79 + 3);
      *(_DWORD *)(v37 + 81) = v39;
      *(_QWORD *)(v37 + 88) = v59;
      *(_BYTE *)(v37 + 96) = v74;
      v40 = v64;
      *(_DWORD *)(v37 + 100) = *(_DWORD *)((char *)&v64 + 3);
      *(_DWORD *)(v37 + 97) = v40;
      *(_QWORD *)(v37 + 104) = v60;
      *(_QWORD *)(v37 + 112) = v11;
      *(_BYTE *)(v37 + 120) = v73;
      v41 = *(_DWORD *)&v72[3];
      *(_DWORD *)(v37 + 121) = *(_DWORD *)v72;
      *(_DWORD *)(v37 + 124) = v41;
      *(_QWORD *)(v37 + 128) = 0;
      *(_DWORD *)(v37 + 136) = 0;
      *(_BYTE *)(v37 + 140) = v71;
      LOWORD(v41) = v69;
      *(_BYTE *)(v37 + 143) = v70;
      *(_WORD *)(v37 + 141) = v41;
      *(_QWORD *)(v37 + 144) = v30;
      *(_QWORD *)(v37 + 152) = v31;
      *(_BYTE *)(v37 + 160) = v68;
      v42 = *(_DWORD *)v67;
      *(_DWORD *)(v37 + 164) = *(_DWORD *)&v67[3];
      *(_DWORD *)(v37 + 161) = v42;
      *(_QWORD *)(v37 + 168) = v26;
      v43 = MEMORY[0x1E0DEE9D8];
      *(_QWORD *)(v37 + 176) = MEMORY[0x1E0DEE9D8];
      *(_QWORD *)(v37 + 184) = v43;
      *(_QWORD *)(v37 + 192) = 0;
      *(_BYTE *)(v37 + 200) = 2;
      LOBYTE(v43) = v66;
      *(_WORD *)(v37 + 201) = v65;
      *(_BYTE *)(v37 + 203) = v43;
      *(_DWORD *)(v37 + 204) = v27;
      v4 = v61;
      if (v7 == v46)
        goto LABEL_23;
    }
    v17 = 0;
    v18 = v15 + 56;
    while (1)
    {
      v19 = *(unsigned int *)(v13 + 32 + 4 * v17++);
      sub_1A594CE64();
      sub_1A594CEAC();
      v20 = sub_1A594CED0();
      v21 = -1 << *(_BYTE *)(v16 + 32);
      v22 = v20 & ~v21;
      if (((*(_QWORD *)(v18 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
        goto LABEL_12;
      v23 = *(_QWORD *)(v16 + 48);
      if (*(_DWORD *)(v23 + 4 * v22) == (_DWORD)v19)
      {
LABEL_5:
        if (v17 == v14)
          goto LABEL_14;
      }
      else
      {
        v24 = ~v21;
        while (1)
        {
          v22 = (v22 + 1) & v24;
          if (((*(_QWORD *)(v18 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
            break;
          if (*(_DWORD *)(v23 + 4 * v22) == (_DWORD)v19)
            goto LABEL_5;
        }
LABEL_12:
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v79[0] = v16;
        sub_1A557BCF4(v19, v22, isUniquelyReferenced_nonNull_native);
        v16 = v79[0];
        swift_bridgeObjectRelease();
        if (v17 == v14)
          goto LABEL_14;
        v18 = v16 + 56;
      }
    }
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_23:
  swift_bridgeObjectRelease();
  return v63;
}

uint64_t sub_1A5522A74(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int v13;
  int v14;
  char v15;
  _QWORD *v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  char v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v33;
  int v34;
  char v35;
  uint64_t v36;
  int v37;
  int v38;
  char v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  char v43;
  char v44;

  v4 = *(_QWORD *)(a1 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v4)
  {
    v5 = (_BYTE *)(a1 + 136);
    do
    {
      v44 = a2;
      v8 = *((_QWORD *)v5 - 13);
      v9 = *((_DWORD *)v5 - 24);
      v10 = *((_QWORD *)v5 - 11);
      v36 = *((_QWORD *)v5 - 10);
      v11 = *((_QWORD *)v5 - 9);
      v37 = *((_DWORD *)v5 - 16);
      v38 = *((_DWORD *)v5 - 14);
      v39 = *(v5 - 52);
      v40 = *((_QWORD *)v5 - 6);
      v41 = *(v5 - 40);
      v42 = *((_QWORD *)v5 - 4);
      v43 = *(v5 - 24);
      v12 = *((_QWORD *)v5 - 2);
      v13 = *((_DWORD *)v5 - 2);
      v14 = *((_DWORD *)v5 - 1);
      v15 = *v5;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A54E31DC(v12);
      if (!v8)
        break;
      v34 = v14;
      v35 = v15;
      v33 = v4;
      v16 = (_QWORD *)*a3;
      v18 = sub_1A54FDC30(v8, v9);
      v19 = v16[2];
      v20 = (v17 & 1) == 0;
      v21 = v19 + v20;
      if (__OFADD__(v19, v20))
      {
        __break(1u);
LABEL_17:
        __break(1u);
LABEL_18:
        result = sub_1A594CDF8();
        __break(1u);
        return result;
      }
      v22 = v17;
      if (v16[3] >= v21)
      {
        if ((v44 & 1) == 0)
          sub_1A554F680();
      }
      else
      {
        sub_1A5581878(v21, v44 & 1);
        v23 = sub_1A54FDC30(v8, v9);
        if ((v22 & 1) != (v24 & 1))
          goto LABEL_18;
        v18 = v23;
      }
      v25 = (_QWORD *)*a3;
      if ((v22 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v6 = v25[7] + 96 * v18;
        v7 = *(_QWORD *)(v6 + 72);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A54E3278(v7);
        *(_QWORD *)v6 = v10;
        *(_QWORD *)(v6 + 8) = v36;
        *(_QWORD *)(v6 + 16) = v11;
        *(_DWORD *)(v6 + 24) = v37;
        *(_DWORD *)(v6 + 32) = v38;
        *(_BYTE *)(v6 + 36) = v39;
        *(_QWORD *)(v6 + 40) = v40;
        *(_BYTE *)(v6 + 48) = v41;
        *(_QWORD *)(v6 + 56) = v42;
        *(_BYTE *)(v6 + 64) = v43;
        *(_QWORD *)(v6 + 72) = v12;
        *(_DWORD *)(v6 + 80) = v13;
        *(_DWORD *)(v6 + 84) = v34;
        *(_BYTE *)(v6 + 88) = v35;
      }
      else
      {
        v25[(v18 >> 6) + 8] |= 1 << v18;
        v26 = v25[6] + 16 * v18;
        *(_QWORD *)v26 = v8;
        *(_DWORD *)(v26 + 8) = v9;
        v27 = v25[7] + 96 * v18;
        *(_QWORD *)v27 = v10;
        *(_QWORD *)(v27 + 8) = v36;
        *(_QWORD *)(v27 + 16) = v11;
        *(_DWORD *)(v27 + 24) = v37;
        *(_DWORD *)(v27 + 32) = v38;
        *(_BYTE *)(v27 + 36) = v39;
        *(_QWORD *)(v27 + 40) = v40;
        *(_BYTE *)(v27 + 48) = v41;
        *(_QWORD *)(v27 + 56) = v42;
        *(_BYTE *)(v27 + 64) = v43;
        *(_QWORD *)(v27 + 72) = v12;
        *(_DWORD *)(v27 + 80) = v13;
        *(_DWORD *)(v27 + 84) = v34;
        *(_BYTE *)(v27 + 88) = v35;
        v28 = v25[2];
        v29 = __OFADD__(v28, 1);
        v30 = v28 + 1;
        if (v29)
          goto LABEL_17;
        v25[2] = v30;
      }
      v5 += 112;
      a2 = 1;
      v4 = v33 - 1;
    }
    while (v33 != 1);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A5522D94(uint64_t a1)
{
  unint64_t v2;

  v2 = *(_QWORD *)(a1 + 72);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54E31DC(v2);
  return a1;
}

uint64_t sub_1A5522DE4(uint64_t a1)
{
  unint64_t v2;

  v2 = *(_QWORD *)(a1 + 72);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A54E3278(v2);
  return a1;
}

uint64_t sub_1A5522E34(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

double sub_1A5522E4C(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_1A5522E6C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A54E3278(a10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

unint64_t sub_1A5522EEC(uint64_t a1, unint64_t a2)
{
  unint64_t result;

  result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if ((a2 & 4) == 0)
    return sub_1A54FD2C4(a2);
  return result;
}

unint64_t sub_1A5522F20(uint64_t a1, unint64_t a2)
{
  unint64_t result;

  result = swift_bridgeObjectRelease();
  if ((a2 & 4) == 0)
    return sub_1A54FD258(a2);
  return result;
}

BOOL sub_1A5522F54(uint64_t a1)
{
  uint64_t v1;

  return sub_1A5517884(a1, *(_QWORD **)(v1 + 16));
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_1A5522F98(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result;

  if (a5 <= 0xFFFFFFFBFFFFFFFFLL)
    return sub_1A550F160(a2, a3, a4, a5, a6, a7);
  return result;
}

uint64_t sub_1A5522FC4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result;

  if (a5 <= 0xFFFFFFFBFFFFFFFFLL)
    return sub_1A5503B08(a2, a3, a4, a5, a6, a7);
  return result;
}

BOOL sub_1A5522FF0(_DWORD *a1)
{
  uint64_t v1;

  return *a1 == **(_DWORD **)(v1 + 16);
}

unint64_t sub_1A5523008()
{
  unint64_t result;

  result = qword_1EE798368;
  if (!qword_1EE798368)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for SyncRequest.ID, &type metadata for SyncRequest.ID);
    atomic_store(result, (unint64_t *)&qword_1EE798368);
  }
  return result;
}

_QWORD *sub_1A552304C(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21]);
  return a1;
}

uint64_t sub_1A55230B0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  if (result)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54E31DC(a10);
    swift_retain();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return result;
}

_QWORD *sub_1A5523130(_QWORD *a1, _QWORD *a2)
{
  __swift_memcpy8_8_4(a2, a1);
  return a2;
}

void *sub_1A552316C(const void *a1, void *a2)
{
  __swift_memcpy584_8(a2, a1);
  return a2;
}

uint64_t sub_1A55231A8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,unsigned __int8 a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,unsigned __int8 a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unint64_t a65;

  switch(a65 >> 59)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
      sub_1A55235A0(result);
      goto LABEL_9;
    case 5uLL:
    case 6uLL:
    case 9uLL:
    case 0xBuLL:
    case 0xDuLL:
      goto LABEL_9;
    case 7uLL:
    case 8uLL:
      swift_retain();
      swift_retain();
      swift_retain();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_9;
    case 0xAuLL:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_9;
    case 0xCuLL:
      sub_1A55235F0(result, a2);
      goto LABEL_9;
    case 0x11uLL:
    case 0x12uLL:
      return sub_1A54E4334(result, a2, SBYTE4(a2));
    case 0x13uLL:
      sub_1A5523620(a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21,
        a22,
        a23,
        a24,
        a25);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A5523620(a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45,
        a46,
        a47,
        a48,
        a49);
      sub_1A5523AD8(a50, a51, a52, a53, a54, a55);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_9:
      result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      break;
    case 0x14uLL:
      swift_retain();
      swift_retain();
      result = swift_retain();
      break;
    case 0x15uLL:
      result = sub_1A5523B84();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A55235A0(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return sub_1A55235B4(result);
  return result;
}

unint64_t sub_1A55235B4(unint64_t result)
{
  switch((result >> 59) & 0x1E | (result >> 2) & 1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
      result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A55235F0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return result;
}

void sub_1A5523620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int8 a23)
{
  if (a23 != 254)
    sub_1A5523694(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
      a20,
      a21,
      a22,
      a23);
}

void sub_1A5523694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int8 a23)
{
  if (a23 != 255)
    sub_1A552370C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
      a20,
      a21,
      a22,
      a23 & 1);
}

void sub_1A552370C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  if ((a23 & 1) != 0)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5523A30(a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
  }
  else
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A552388C(a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22);
  }
}

void sub_1A552388C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a2 != 1)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A552391C(a3, a4, a5, a6, a7, a8, a9, a10, a11);
  }
}

uint64_t sub_1A552391C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (a2 != 1)
  {
    sub_1A552396C(result, a2);
    return sub_1A55239BC(a6, a7, a8, a9);
  }
  return result;
}

uint64_t sub_1A552396C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return result;
}

uint64_t sub_1A55239BC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return sub_1A5523A00(a2, a3, a4);
  }
  return result;
}

uint64_t sub_1A5523A00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return result;
}

uint64_t sub_1A5523A30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t result;

  if (a2)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    return sub_1A552391C(a4, a5, a6, a7, a8, a9, a10, a11, a12);
  }
  return result;
}

uint64_t sub_1A5523AD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  if (a6)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_retain();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return result;
}

uint64_t sub_1A5523B84()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t sub_1A5523B90(uint64_t a1)
{
  return *(_QWORD *)(a1 + 560) >> 59;
}

#error "1A5523C60: call analysis failed (funcsize=59)"

uint64_t sub_1A5523C88(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,unsigned __int8 a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,unsigned __int8 a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unint64_t a65;

  switch(a65 >> 59)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
      sub_1A5524084(result);
      goto LABEL_3;
    case 5uLL:
    case 6uLL:
    case 9uLL:
    case 0xBuLL:
    case 0xDuLL:
      goto LABEL_3;
    case 7uLL:
    case 8uLL:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      goto LABEL_10;
    case 0xAuLL:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_3;
    case 0xCuLL:
      sub_1A55240D4(result, a2);
      goto LABEL_3;
    case 0x11uLL:
    case 0x12uLL:
      return sub_1A54E3458(result, a2, SBYTE4(a2));
    case 0x13uLL:
      sub_1A5524104(a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21,
        a22,
        a23,
        a24,
        a25);
      swift_bridgeObjectRelease();
      sub_1A5524104(a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45,
        a46,
        a47,
        a48,
        a49);
      sub_1A55245C0(a50, a51, a52, a53, a54, a55);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_3:
      result = swift_bridgeObjectRelease();
      break;
    case 0x14uLL:
      swift_release();
      swift_release();
LABEL_10:
      result = swift_release();
      break;
    case 0x15uLL:
      result = sub_1A552466C();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A5524084(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return sub_1A5524098(result);
  return result;
}

unint64_t sub_1A5524098(unint64_t result)
{
  switch((result >> 59) & 0x1E | (result >> 2) & 1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
      result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A55240D4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1A5524104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int8 a23)
{
  if (a23 != 254)
    sub_1A5524178(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
      a20,
      a21,
      a22,
      a23);
}

void sub_1A5524178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int8 a23)
{
  if (a23 != 255)
    sub_1A55241F0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
      a20,
      a21,
      a22,
      a23 & 1);
}

void sub_1A55241F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  if ((a23 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A5524514(a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A5524370(a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22);
  }
}

void sub_1A5524370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    sub_1A5524400(a3, a4, a5, a6, a7, a8, a9, a10, a11);
  }
}

uint64_t sub_1A5524400(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (a2 != 1)
  {
    sub_1A5524450(result, a2);
    return sub_1A55244A0(a6, a7, a8, a9);
  }
  return result;
}

uint64_t sub_1A5524450(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1A55244A0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return sub_1A55244E4(a2, a3, a4);
  }
  return result;
}

uint64_t sub_1A55244E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A5524514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t result;

  if (a2)
  {
    swift_release();
    swift_release();
    swift_release();
    return sub_1A5524400(a4, a5, a6, a7, a8, a9, a10, a11, a12);
  }
  return result;
}

uint64_t sub_1A55245C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  if (a6)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A552466C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A5524678(uint64_t result)
{
  *(_QWORD *)(result + 560) &= 0x7FFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_1A5524688(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) != 0)
    return swift_retain();
  return result;
}

uint64_t sub_1A552469C(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) != 0)
    return swift_release();
  return result;
}

uint64_t _s14LocalMailboxesOwxx(uint64_t a1)
{
  return sub_1A54E8FCC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t _s14LocalMailboxesOwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1A55212D0(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t _s14LocalMailboxesOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1A55212D0(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  sub_1A54E8FCC(v7, v8, v9, v10);
  return a1;
}

uint64_t _s14LocalMailboxesOwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  sub_1A54E8FCC(v5, v7, v6, v8);
  return a1;
}

uint64_t _s14LocalMailboxesOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s14LocalMailboxesOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A5524868(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_1A5524870(uint64_t result, char a2)
{
  *(_BYTE *)(result + 24) = a2 & 1;
  return result;
}

ValueMetadata *_s14LocalMailboxesOMa()
{
  return &_s14LocalMailboxesON;
}

uint64_t _s5LocalVwxx(uint64_t a1)
{
  sub_1A54E8FCC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s5LocalVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  sub_1A55212D0(*(_QWORD *)a2, v5, v6, v7);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t _s5LocalVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  sub_1A55212D0(*(_QWORD *)a2, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  sub_1A54E8FCC(v8, v9, v10, v11);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  return a1;
}

__n128 __swift_memcpy76_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 60) = *(_OWORD *)(a2 + 60);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t _s5LocalVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  sub_1A54E8FCC(v6, v7, v8, v9);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  return a1;
}

uint64_t _s5LocalVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 76))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s5LocalVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 72) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 76) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 76) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s5LocalVMa()
{
  return &_s5LocalVN;
}

uint64_t sub_1A5524B84(uint64_t a1)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t sub_1A5524BAC(uint64_t result, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  unsigned __int8 *v10;
  uint64_t v11;
  unsigned __int8 *v12;
  int v13;
  int v14;
  int v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 *v20;
  uint64_t v21;
  unsigned __int8 *v22;
  int v23;
  int v24;
  int v25;
  _QWORD *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  unsigned __int8 *v38;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  unint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;

  v42 = (_QWORD *)result;
  v3 = *(_QWORD **)result;
  v4 = *(_QWORD *)(*(_QWORD *)result + 16);
  if (!v4)
    return 0;
  v5 = 0;
  while (1)
  {
    v6 = (uint64_t)&v3[6 * v5 + 4];
    if (*(_QWORD *)(v6 + 32) == a3)
    {
      v7 = *(_QWORD *)(v6 + 24);
      v8 = *(_QWORD *)(v7 + 16);
      if (v8 == *(_QWORD *)(a2 + 16))
      {
        if (v8)
          v9 = v7 == a2;
        else
          v9 = 1;
        if (v9)
          goto LABEL_20;
        if (*(unsigned __int8 *)(v7 + 32) == *(unsigned __int8 *)(a2 + 32))
        {
          if (v8 == 1)
            goto LABEL_20;
          if (*(unsigned __int8 *)(v7 + 33) == *(unsigned __int8 *)(a2 + 33))
          {
            if (v8 == 2)
              goto LABEL_20;
            if (*(unsigned __int8 *)(v7 + 34) == *(unsigned __int8 *)(a2 + 34))
              break;
          }
        }
      }
    }
LABEL_3:
    if (++v5 == v4)
      return *(_QWORD *)(*(_QWORD *)result + 16);
  }
  v10 = (unsigned __int8 *)(v7 + 35);
  v11 = v8 - 3;
  v12 = (unsigned __int8 *)(a2 + 35);
  while (v11)
  {
    v14 = *v10++;
    v13 = v14;
    v15 = *v12++;
    --v11;
    if (v13 != v15)
      goto LABEL_3;
  }
LABEL_20:
  v16 = v5 + 1;
  if (__OFADD__(v5, 1))
    goto LABEL_53;
  if (v16 == v4)
    return v5;
  v37 = v8 - 3;
  v38 = (unsigned __int8 *)(a2 + 35);
  v40 = v8;
  v41 = a3;
  while (v16 < v4)
  {
    v17 = v3 + 4;
    v18 = (uint64_t)&v3[6 * v16 + 4];
    v19 = *(_QWORD *)(v18 + 24);
    if (*(_QWORD *)(v18 + 32) != a3 || *(_QWORD *)(v19 + 16) != v8)
      goto LABEL_36;
    if (!v8 || v19 == a2)
      goto LABEL_43;
    if (*(unsigned __int8 *)(v19 + 32) != *(unsigned __int8 *)(a2 + 32))
      goto LABEL_36;
    if (v8 == 1)
      goto LABEL_43;
    if (*(unsigned __int8 *)(v19 + 33) != *(unsigned __int8 *)(a2 + 33))
      goto LABEL_36;
    if (v8 == 2)
      goto LABEL_43;
    if (*(unsigned __int8 *)(v19 + 34) == *(unsigned __int8 *)(a2 + 34))
    {
      v20 = (unsigned __int8 *)(v19 + 35);
      v21 = v37;
      v22 = v38;
      while (v21)
      {
        v24 = *v20++;
        v23 = v24;
        v25 = *v22++;
        --v21;
        if (v23 != v25)
          goto LABEL_36;
      }
    }
    else
    {
LABEL_36:
      if (v5 != v16)
      {
        if (v5 >= v4)
          goto LABEL_51;
        v50 = *(_QWORD *)(v18 + 32);
        v26 = &v17[6 * v5];
        v45 = *((_DWORD *)v26 + 4);
        v27 = v26[3];
        v43 = v26[5];
        v44 = v26[4];
        v29 = *(_QWORD *)v18;
        v28 = *(_QWORD *)(v18 + 8);
        v48 = *(_DWORD *)(v18 + 16);
        v49 = v17[6 * v16 + 5];
        v46 = v26[1];
        v47 = *v26;
        sub_1A54E42B4(*v26, v46);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A54E42B4(v29, v28);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v3 = sub_1A554B680(v3);
        v30 = (uint64_t)&v3[6 * v5 + 4];
        v31 = *(_QWORD *)v30;
        v32 = *(_QWORD *)(v30 + 8);
        *(_QWORD *)v30 = v29;
        *(_QWORD *)(v30 + 8) = v28;
        *(_DWORD *)(v30 + 16) = v48;
        *(_QWORD *)(v30 + 24) = v19;
        *(_QWORD *)(v30 + 32) = v50;
        *(_QWORD *)(v30 + 40) = v49;
        sub_1A54E46E8(v31, v32);
        result = swift_bridgeObjectRelease();
        if (v16 >= v3[2])
          goto LABEL_52;
        v33 = (uint64_t)&v3[6 * v16 + 4];
        v34 = *(_QWORD *)v33;
        v35 = *(_QWORD *)(v33 + 8);
        *(_QWORD *)v33 = v47;
        *(_QWORD *)(v33 + 8) = v46;
        *(_DWORD *)(v33 + 16) = v45;
        *(_QWORD *)(v33 + 24) = v27;
        *(_QWORD *)(v33 + 32) = v44;
        *(_QWORD *)(v33 + 40) = v43;
        sub_1A54E46E8(v34, v35);
        result = swift_bridgeObjectRelease();
        a3 = v41;
        *v42 = v3;
        v8 = v40;
      }
      v36 = __OFADD__(v5++, 1);
      if (v36)
        goto LABEL_50;
    }
LABEL_43:
    v36 = __OFADD__(v16++, 1);
    if (v36)
      goto LABEL_49;
    v4 = v3[2];
    if (v16 == v4)
      return v5;
  }
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
  return result;
}

uint64_t sub_1A5524EF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = *(unsigned int *)(a1 + 48);
  v4 = *(_BYTE *)(a1 + 52);
  sub_1A54E3458(*(_QWORD *)a1, *(unsigned int *)(a1 + 8), *(_BYTE *)(a1 + 12));
  sub_1A54E3458(v2, v3, v4);
  return a1;
}

uint64_t sub_1A5524F48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return sub_1A5503B8C(a3, a4);
  }
  return result;
}

uint64_t sub_1A5524F80(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract_0(a2);
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF38], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A5524FC0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1A54E42B4(a1, a2);
  return a1;
}

uint64_t sub_1A5524FD4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1A54E46E8(a1, a2);
  return a1;
}

uint64_t sub_1A5524FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v11[3];

  v11[0] = a4;
  v11[1] = a5;
  v11[2] = a6;
  swift_retain();
  swift_retain();
  sub_1A552576C(a1, a2, a3, v11);
  swift_release_n();
  swift_release_n();
  swift_release();
  result = v11[0];
  if (v6)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

BOOL sub_1A5525094(_DWORD *a1, _DWORD *a2)
{
  return *a1 < *a2;
}

BOOL sub_1A55250A8(_DWORD *a1, _DWORD *a2)
{
  return *a2 >= *a1;
}

BOOL sub_1A55250BC(_DWORD *a1, _DWORD *a2)
{
  return *a1 >= *a2;
}

BOOL sub_1A55250D0(_DWORD *a1, _DWORD *a2)
{
  return *a2 < *a1;
}

uint64_t sub_1A55250E4(unsigned int a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _DWORD v15[4];

  v2 = sub_1A594CEF4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A86E8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[3] = a1;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A86F0);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1A59ABD70;
  *(_QWORD *)(v9 + 32) = 0x786F626E497369;
  *(_QWORD *)(v9 + 40) = 0xE700000000000000;
  v10 = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)(v9 + 48) = (a1 & 0x80000000) == 0;
  *(_QWORD *)(v9 + 72) = v10;
  *(_QWORD *)(v9 + 80) = 0x696C696269736976;
  *(_QWORD *)(v9 + 88) = 0xEA00000000007974;
  *(_BYTE *)(v9 + 96) = (a1 & 0x40000000) != 0;
  *(_QWORD *)(v9 + 120) = &_s11UserVisibleON;
  *(_QWORD *)(v9 + 128) = 0xD000000000000010;
  *(_QWORD *)(v9 + 136) = 0x80000001A5A0E000;
  *(_BYTE *)(v9 + 144) = (a1 & 0x20000000) == 0;
  *(_QWORD *)(v9 + 168) = v10;
  strcpy((char *)(v9 + 176), "userPriority");
  *(_BYTE *)(v9 + 189) = 0;
  *(_WORD *)(v9 + 190) = -5120;
  *(_WORD *)(v9 + 192) = (a1 >> 14) & 0x3FFF;
  *(_QWORD *)(v9 + 216) = &_s12PriorityInfoV5OrderVN;
  *(_QWORD *)(v9 + 224) = 0xD000000000000012;
  *(_QWORD *)(v9 + 232) = 0x80000001A5A0E020;
  *(_QWORD *)(v9 + 264) = &_s12PriorityInfoV5OrderVN;
  *(_WORD *)(v9 + 240) = a1 & 0x3FFF;
  v11 = *MEMORY[0x1E0DEDFB8];
  v12 = sub_1A594CEE8();
  v13 = *(_QWORD *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 104))(v8, v11, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEDFE8], v2);
  return sub_1A594CF00();
}

uint64_t sub_1A5525330()
{
  unsigned int *v0;

  return sub_1A55250E4(*v0);
}

unint64_t sub_1A552533C()
{
  unint64_t result;

  result = qword_1EE7A8700;
  if (!qword_1EE7A8700)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A3FF4, &_s15MailboxPriorityVN);
    atomic_store(result, (unint64_t *)&qword_1EE7A8700);
  }
  return result;
}

uint64_t sub_1A5525380@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *a1;
  a2[1] = a1[1];
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

unint64_t sub_1A5525398(uint64_t a1, void (*a2)(uint64_t *__return_ptr, _QWORD *), uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *i;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t result;
  char v17;
  char v18;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t *v34;
  uint64_t *v35;
  int v36;
  uint64_t *v38;
  uint64_t v39;
  unsigned int v40;
  int v41;
  _QWORD v42[2];
  uint64_t *v43;

  v43 = a4;
  v5 = a4[2];
  v38 = a4 + 2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = sub_1A555C088(v5);
  *v38 = v5;
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  v35 = v43 + 1;
  for (i = (_QWORD *)(a1 + 40); ; i += 2)
  {
    v42[0] = *(i - 1);
    v42[1] = *i;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    a2(&v39, v42);
    swift_bridgeObjectRelease();
    v10 = v39;
    v12 = v40;
    v11 = v41;
    v13 = v43[1];
    v14 = v13 + 32;
    v15 = *(_QWORD *)(v13 + 16);
    if (*v43)
    {
      result = sub_1A557FFE0(v39, v40, v14, v15, (_QWORD *)(*v43 + 16));
      if ((v17 & 1) != 0)
      {
        v36 = v11;
        goto LABEL_17;
      }
    }
    else
    {
      result = sub_1A557FEEC(v39, v40, v14, v15);
      if ((v18 & 1) != 0)
      {
        v36 = v11;
LABEL_17:
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *v35 = v13;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1A54F4AC0(0, *(_QWORD *)(v13 + 16) + 1, 1);
          v13 = *v35;
        }
        v21 = *(_QWORD *)(v13 + 16);
        v20 = *(_QWORD *)(v13 + 24);
        v22 = v21 + 1;
        if (v21 >= v20 >> 1)
        {
          sub_1A54F4AC0(v20 > 1, v21 + 1, 1);
          v13 = *v35;
        }
        *(_QWORD *)(v13 + 16) = v22;
        v23 = v13 + 16 * v21;
        *(_QWORD *)(v23 + 32) = v10;
        *(_DWORD *)(v23 + 40) = v12;
        v24 = v43;
        v43[1] = v13;
        v25 = *v24;
        if (*v24)
        {
          swift_beginAccess();
          if (MEMORY[0x1A85AC894](*(_QWORD *)(v25 + 16) & 0x3FLL) > (uint64_t)v21)
          {
            v26 = v43;
            result = swift_isUniquelyReferenced_native();
            v27 = *v26;
            if ((result & 1) == 0)
            {
              if (!v27)
                goto LABEL_45;
              v27 = sub_1A594A434();
              v29 = v43;
              result = swift_release();
              *v29 = v27;
            }
            if (!v27)
              goto LABEL_44;
            sub_1A594A3EC();
            goto LABEL_38;
          }
          v28 = *(_QWORD *)(v25 + 24) & 0x3FLL;
          if (v21 <= 0xE && !v28)
          {
            swift_release();
            *v43 = 0;
            goto LABEL_38;
          }
        }
        else
        {
          if (v21 <= 0xE)
          {
LABEL_38:
            v34 = v38;
            v5 = *v38;
            v33 = swift_isUniquelyReferenced_nonNull_native();
            *v38 = v5;
            if ((v33 & 1) == 0)
            {
              sub_1A54F4B30(0, *(_QWORD *)(v5 + 16) + 1, 1);
              v34 = v38;
              v5 = *v38;
            }
            v9 = *(_QWORD *)(v5 + 16);
            v8 = *(_QWORD *)(v5 + 24);
            if (v9 >= v8 >> 1)
            {
              sub_1A54F4B30(v8 > 1, v9 + 1, 1);
              v34 = v38;
              v5 = *v38;
            }
            *(_QWORD *)(v5 + 16) = v9 + 1;
            *(_DWORD *)(v5 + 4 * v9 + 32) = v36;
            goto LABEL_8;
          }
          v28 = 0;
        }
        v30 = MEMORY[0x1A85AC8B8](v22);
        if (v28 <= v30)
          v31 = v30;
        else
          v31 = v28;
        v32 = sub_1A555B6A8(v13, v31, 0, v28);
        swift_release();
        *v43 = v32;
        goto LABEL_38;
      }
    }
    v34 = v38;
    if ((result & 0x8000000000000000) != 0)
      break;
    if (result >= *(_QWORD *)(v5 + 16))
      goto LABEL_43;
LABEL_8:
    swift_bridgeObjectRelease();
    *v34 = v5;
    if (!--v6)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_1A552576C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  unsigned int *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unsigned int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  unint64_t v23;
  uint64_t *v24;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  unint64_t v40;
  uint64_t *v41;
  uint64_t *v42;
  int v43;

  v6 = a4[2];
  v42 = a4 + 2;
  swift_retain();
  swift_retain();
  swift_retain();
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    result = sub_1A555C088(v6);
    v6 = result;
  }
  *v42 = v6;
  v8 = *(_QWORD *)(a3 + 16);
  if (!v8)
  {
LABEL_43:
    swift_release();
    swift_release();
    return swift_release();
  }
  v9 = (int *)(a3 + 32);
  v41 = a4 + 1;
  v10 = *(_QWORD *)(a2 + 16);
  v11 = (unsigned int *)(a2 + 40);
  while (v10)
  {
    v14 = *((_QWORD *)v11 - 1);
    v15 = *v11;
    v16 = *v9;
    v17 = a4[1];
    v18 = v17 + 32;
    v19 = *(_QWORD *)(v17 + 16);
    if (*a4)
    {
      v43 = *v9;
      v20 = sub_1A557FFE0(v14, v15, v18, v19, (_QWORD *)(*a4 + 16));
      if ((v21 & 1) != 0)
        goto LABEL_18;
    }
    else
    {
      v20 = sub_1A557FEEC(v14, v15, v18, v19);
      if ((v22 & 1) != 0)
      {
        v43 = v16;
LABEL_18:
        swift_bridgeObjectRetain_n();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *v41 = v17;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1A54F4AC0(0, *(_QWORD *)(v17 + 16) + 1, 1);
          v17 = *v41;
        }
        v27 = *(_QWORD *)(v17 + 16);
        v26 = *(_QWORD *)(v17 + 24);
        v28 = v27 + 1;
        v29 = v14;
        if (v27 >= v26 >> 1)
        {
          sub_1A54F4AC0(v26 > 1, v27 + 1, 1);
          v28 = v27 + 1;
          v17 = *v41;
          v29 = v14;
        }
        *(_QWORD *)(v17 + 16) = v28;
        v30 = v17 + 16 * v27;
        *(_QWORD *)(v30 + 32) = v29;
        *(_DWORD *)(v30 + 40) = v15;
        a4[1] = v17;
        v31 = *a4;
        if (*a4)
        {
          v40 = v28;
          swift_beginAccess();
          v24 = v42;
          if (MEMORY[0x1A85AC894](*(_QWORD *)(v31 + 16) & 0x3FLL) > (uint64_t)v27)
          {
            result = swift_isUniquelyReferenced_native();
            v32 = *a4;
            if ((result & 1) == 0)
            {
              if (!v32)
                goto LABEL_48;
              v32 = sub_1A594A434();
              result = swift_release();
              *a4 = v32;
            }
            if (!v32)
              goto LABEL_47;
            sub_1A594A3EC();
            goto LABEL_41;
          }
          v35 = *(_QWORD *)(v31 + 24) & 0x3FLL;
          if (v27 > 0xE)
          {
            v34 = a4;
            v28 = v40;
          }
          else
          {
            v34 = a4;
            v28 = v40;
            if (!v35)
            {
              swift_release();
              *a4 = 0;
LABEL_41:
              v6 = *v24;
              v39 = swift_isUniquelyReferenced_nonNull_native();
              *v24 = v6;
              if ((v39 & 1) == 0)
              {
                sub_1A54F4B30(0, *(_QWORD *)(v6 + 16) + 1, 1);
                v6 = *v24;
              }
              v13 = *(_QWORD *)(v6 + 16);
              v12 = *(_QWORD *)(v6 + 24);
              if (v13 >= v12 >> 1)
              {
                sub_1A54F4B30(v12 > 1, v13 + 1, 1);
                v6 = *v24;
              }
              *(_QWORD *)(v6 + 16) = v13 + 1;
              *(_DWORD *)(v6 + 4 * v13 + 32) = v43;
              goto LABEL_8;
            }
          }
        }
        else
        {
          v33 = v27 > 0xE;
          v34 = a4;
          v24 = v42;
          if (!v33)
            goto LABEL_41;
          v35 = 0;
        }
        v36 = MEMORY[0x1A85AC8B8](v28);
        if (v35 <= v36)
          v37 = v36;
        else
          v37 = v35;
        v38 = sub_1A555B6A8(v17, v37, 0, v35);
        swift_release();
        *v34 = v38;
        goto LABEL_41;
      }
    }
    v23 = v20;
    result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v24 = v42;
    if ((v23 & 0x8000000000000000) != 0)
      goto LABEL_45;
    if (v23 >= *(_QWORD *)(v6 + 16))
      goto LABEL_46;
LABEL_8:
    result = swift_bridgeObjectRelease();
    *v24 = v6;
    --v10;
    v11 += 4;
    ++v9;
    if (!--v8)
      goto LABEL_43;
  }
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_1A5525B50(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t *v9;
  uint64_t inited;
  int v11;
  uint64_t v12;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  __int128 *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  BOOL v42;
  int v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  __int16 v47;
  _BOOL4 v48;
  int v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  unint64_t v57;
  int v58;
  unint64_t v59;
  char v60;
  int v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char v73;
  unint64_t v74;
  unsigned int v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unsigned int v84;
  unint64_t v85;
  unsigned int v86;
  unint64_t v87;
  unint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  char v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unsigned int v96;
  unint64_t v97;
  unint64_t v98;
  _QWORD *v99;
  unint64_t v100;
  unint64_t v101;
  _QWORD *v102;
  char v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t result;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  int v127;
  unint64_t v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  _QWORD *v144;
  _QWORD *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;

  if ((a4 & 1) == 0)
  {
    if ((a7 & 1) != 0)
      return sub_1A555D28C(MEMORY[0x1E0DEE9D8]);
    v9 = MailboxName.inbox.unsafeMutableAddressor();
    if ((sub_1A54E9E54(*v9, *((_DWORD *)v9 + 2), a6) & 1) == 0)
      return sub_1A555D28C(MEMORY[0x1E0DEE9D8]);
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A12A0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A59ABD10;
    v11 = *((_DWORD *)v9 + 2);
    *(_QWORD *)(inited + 32) = *v9;
    *(_DWORD *)(inited + 40) = v11;
    *(_DWORD *)(inited + 44) = 1879048191;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v12 = sub_1A555D28C(inited);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A03B8);
    swift_arrayDestroy();
    return v12;
  }
  v16 = MEMORY[0x1E0DEE9D8];
  v17 = sub_1A555D28C(MEMORY[0x1E0DEE9D8]);
  v19 = v18;
  v21 = v20;
  v147 = v17;
  v148 = v18;
  v144 = (_QWORD *)v16;
  v145 = (_QWORD *)v16;
  v143 = (_QWORD *)v16;
  v22 = sub_1A555D28C(v16);
  v119 = v23;
  v141 = v22;
  v142 = v24;
  v124 = *(_QWORD *)(a1 + 16);
  if (!v124)
  {
LABEL_138:
    *(_QWORD *)&v129 = v17;
    *((_QWORD *)&v129 + 1) = v19;
    *(_QWORD *)&v130 = v21;
    swift_retain();
    swift_retain();
    swift_retain();
    v112 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5525398(v112, (void (*)(uint64_t *__return_ptr, _QWORD *))sub_1A5525380, 0, (uint64_t *)&v129);
    swift_bridgeObjectRelease();
    v113 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5525398(v113, (void (*)(uint64_t *__return_ptr, _QWORD *))sub_1A5525380, 0, (uint64_t *)&v129);
    swift_bridgeObjectRelease();
    v114 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5525398(v114, (void (*)(uint64_t *__return_ptr, _QWORD *))sub_1A5525380, 0, (uint64_t *)&v129);
    swift_bridgeObjectRelease();
    v12 = sub_1A5524FE8(v141, v142, v119, v129, *((uint64_t *)&v129 + 1), v130);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v12;
  }
  v117 = a2;
  v118 = a3;
  v125 = a1 + 32;
  v116 = a1;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v25 = 0;
  v120 = a6;
  while (1)
  {
    v29 = (__int128 *)(v125 + 176 * v25);
    v30 = *v29;
    v31 = v29[2];
    v130 = v29[1];
    v131 = v31;
    v129 = v30;
    v32 = v29[3];
    v33 = v29[4];
    v34 = v29[6];
    v134 = v29[5];
    v135 = v34;
    v132 = v32;
    v133 = v33;
    v35 = v29[7];
    v36 = v29[8];
    v37 = v29[10];
    v138 = v29[9];
    v139 = v37;
    v136 = v35;
    v137 = v36;
    v38 = v129;
    v39 = v130;
    v40 = DWORD2(v130);
    if ((sub_1A54E9E54(v130, DWORD2(v130), a6) & 1) == 0)
      goto LABEL_11;
    sub_1A54E3150((uint64_t)&v129);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v41 = MailboxName.inbox.unsafeMutableAddressor();
    if ((v40 | (v40 << 32)) == (*((unsigned int *)v41 + 2) | ((unint64_t)*((unsigned int *)v41 + 2) << 32)))
    {
      v42 = sub_1A54FF30C(v39, *v41);
      swift_bridgeObjectRelease();
      if (v25 >= 0x10000)
        goto LABEL_135;
      v43 = (unsigned __int16)v25;
      v44 = a8;
      if ((unsigned __int16)v25 < 0x4000u)
        goto LABEL_21;
    }
    else
    {
      swift_bridgeObjectRelease();
      v42 = 0;
      if (v25 >> 16)
      {
LABEL_135:
        v43 = 0x3FFF;
        v44 = a8;
        goto LABEL_21;
      }
      v44 = a8;
      if (!((unsigned __int16)v25 >> 14))
      {
        v43 = (unsigned __int16)v25;
        goto LABEL_21;
      }
    }
    v43 = 0x3FFF;
LABEL_21:
    v123 = v21;
    if (*(_QWORD *)(v44 + 16) && (v45 = sub_1A54FDC94(v38, *((uint64_t *)&v38 + 1)), (v46 & 1) != 0))
    {
      v47 = *(_WORD *)(*(_QWORD *)(v44 + 56) + 2 * v45);
      v48 = v47 < 0;
      v49 = v47 & 0x3FFF;
    }
    else
    {
      v48 = 1;
      v49 = 0x3FFF;
    }
    if ((*((_BYTE *)v29 + 88) & 1) == 0)
    {
      v50 = v125 + 176 * v25;
      if ((*(_BYTE *)(v50 + 108) & 1) != 0 || *(_DWORD *)(v50 + 104) < *((_DWORD *)v29 + 21))
        break;
    }
    if (a5)
    {
      if (*(_QWORD *)(a5 + 16))
      {
        v51 = sub_1A54FDC30(v39, v40);
        if ((v53 & 1) != 0)
        {
          v54 = *(_QWORD *)(a5 + 56) + 72 * v51;
          if ((*(_BYTE *)(v54 + 65) & 1) == 0 && (*(_BYTE *)(v54 + 64) & 1) == 0)
          {
            v55 = *(_QWORD *)(v54 + 56);
            v56 = *(_DWORD *)(v54 + 36);
            v57 = v125 + 176 * v25;
            v58 = *(_DWORD *)(v57 + 112);
            v59 = *(_QWORD *)(v57 + 120);
            v60 = *(_BYTE *)(v57 + 128);
            v126 = v55;
            UIDValidityWith.init(uidValidity:value:)(v56, (uint64_t)&v126, (uint64_t)&type metadata for ModificationSequenceValue, v52, &v127);
            if ((v60 & 1) != 0 || v127 != v58 || v59 < v128)
              break;
          }
        }
      }
    }
    if (!v42)
    {
      if (v48)
        v67 = -536870912;
      else
        v67 = -1610612736;
      v68 = v67 | (v49 << 14) | v43;
      if (v48)
      {
        a6 = v120;
        if (v49 == 0x3FFF)
        {
          v69 = v142 + 32;
          v70 = *(_QWORD *)(v142 + 16);
          if (v141)
          {
            v71 = sub_1A557FFE0(v39, v40, v69, v70, (_QWORD *)(v141 + 16));
            v21 = v123;
            if ((v72 & 1) != 0)
            {
LABEL_128:
              v107 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
              sub_1A555B280(v107, v40);
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v109 = v119;
              v140 = v119;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                sub_1A54F4B30(0, *(_QWORD *)(v119 + 16) + 1, 1);
                v109 = v140;
              }
              v111 = *(_QWORD *)(v109 + 16);
              v110 = *(_QWORD *)(v109 + 24);
              if (v111 >= v110 >> 1)
              {
                sub_1A54F4B30(v110 > 1, v111 + 1, 1);
                v109 = v140;
              }
              *(_QWORD *)(v109 + 16) = v111 + 1;
              v119 = v109;
              v106 = v109 + 4 * v111;
LABEL_133:
              *(_DWORD *)(v106 + 32) = v68;
              swift_bridgeObjectRelease();
LABEL_134:
              sub_1A54E31EC((uint64_t)&v129);
              goto LABEL_11;
            }
          }
          else
          {
            v71 = sub_1A557FEEC(v39, v40, v69, v70);
            v21 = v123;
            if ((v103 & 1) != 0)
              goto LABEL_128;
          }
          v104 = v71;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v105 = v119;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v105 = sub_1A555C088(v119);
          if ((v104 & 0x8000000000000000) != 0)
            goto LABEL_153;
          if (v104 >= *(_QWORD *)(v105 + 16))
            goto LABEL_154;
          v119 = v105;
          v106 = v105 + 4 * v104;
          goto LABEL_133;
        }
        v92 = v143;
        v93 = v143[2];
        if (!v93 || (v94 = v93 - 1, v68 >= HIDWORD(v143[2 * v93 + 3])))
        {
          swift_bridgeObjectRetain_n();
          v21 = v123;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v92 = sub_1A54EFA24(0, v93 + 1, 1, v92);
          v98 = v92[2];
          v97 = v92[3];
          if (v98 >= v97 >> 1)
            v92 = sub_1A54EFA24((_QWORD *)(v97 > 1), v98 + 1, 1, v92);
          v92[2] = v98 + 1;
          v99 = &v92[2 * v98];
          v99[4] = v39;
          *((_DWORD *)v99 + 10) = v40;
          *((_DWORD *)v99 + 11) = v68;
          sub_1A54E31EC((uint64_t)&v129);
          swift_bridgeObjectRelease();
          v143 = v92;
          goto LABEL_11;
        }
        v79 = 0;
        v21 = v123;
        do
        {
          while (1)
          {
            if (__OFSUB__(v94, v79))
            {
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
              goto LABEL_146;
            }
            v95 = v79 + (v94 - v79) / 2;
            if (__OFADD__(v79, (v94 - v79) / 2))
              goto LABEL_144;
            if (v95 >= v93)
              goto LABEL_145;
            v96 = HIDWORD(v143[2 * v95 + 5]);
            if (v96 >= v68)
              break;
            v79 = v95 + 1;
            if (v94 < (uint64_t)(v95 + 1))
              goto LABEL_109;
          }
          if (v68 >= v96)
            goto LABEL_134;
          v94 = v95 - 1;
        }
        while ((uint64_t)(v95 - 1) >= v79);
LABEL_109:
        if (v93 < v79)
          goto LABEL_155;
        if (v79 < 0)
          goto LABEL_156;
LABEL_111:
        swift_bridgeObjectRetain_n();
        sub_1A5589050(v79, v79, v39, v40 | (v68 << 32));
        sub_1A54E31EC((uint64_t)&v129);
        swift_bridgeObjectRelease();
        goto LABEL_11;
      }
LABEL_69:
      v21 = v123;
      a6 = v120;
      v80 = v145;
      v81 = v145[2];
      if (!v81 || (v82 = v81 - 1, v68 >= HIDWORD(v145[2 * v81 + 3])))
      {
        swift_bridgeObjectRetain_n();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v80 = sub_1A54EFA24(0, v81 + 1, 1, v80);
        v88 = v80[2];
        v87 = v80[3];
        if (v88 >= v87 >> 1)
          v80 = sub_1A54EFA24((_QWORD *)(v87 > 1), v88 + 1, 1, v80);
        v80[2] = v88 + 1;
        v89 = &v80[2 * v88];
        v89[4] = v39;
        *((_DWORD *)v89 + 10) = v40;
        *((_DWORD *)v89 + 11) = v68;
        sub_1A54E31EC((uint64_t)&v129);
        swift_bridgeObjectRelease();
        v145 = v80;
        goto LABEL_11;
      }
      v79 = 0;
      do
      {
        while (1)
        {
          if (__OFSUB__(v82, v79))
          {
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
            goto LABEL_143;
          }
          v83 = v79 + (v82 - v79) / 2;
          if (__OFADD__(v79, (v82 - v79) / 2))
            goto LABEL_141;
          if (v83 >= v81)
            goto LABEL_142;
          v84 = HIDWORD(v145[2 * v83 + 5]);
          if (v84 >= v68)
            break;
          v79 = v83 + 1;
          if (v82 < (uint64_t)(v83 + 1))
            goto LABEL_79;
        }
        if (v68 >= v84)
          goto LABEL_134;
        v82 = v83 - 1;
      }
      while ((uint64_t)(v83 - 1) >= v79);
LABEL_79:
      if (v81 < v79)
        goto LABEL_151;
      if (v79 < 0)
        goto LABEL_152;
      goto LABEL_111;
    }
    if (v48)
      v61 = 1610612736;
    else
      v61 = 0x20000000;
LABEL_44:
    v62 = v61 | (v49 << 14) | v43;
    v63 = v148 + 32;
    v64 = *(_QWORD *)(v148 + 16);
    if (v147)
    {
      v65 = sub_1A557FFE0(v39, v40, v63, v64, (_QWORD *)(v147 + 16));
      v21 = v123;
      if ((v66 & 1) == 0)
        goto LABEL_56;
    }
    else
    {
      v65 = sub_1A557FEEC(v39, v40, v63, v64);
      v21 = v123;
      if ((v73 & 1) == 0)
      {
LABEL_56:
        v74 = v65;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v21 = sub_1A555C088(v21);
        if ((v74 & 0x8000000000000000) != 0)
          goto LABEL_149;
        if (v74 >= *(_QWORD *)(v21 + 16))
          goto LABEL_150;
        v28 = v21 + 4 * v74;
        goto LABEL_10;
      }
    }
    v90 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A555B280(v90, v40);
    v91 = swift_isUniquelyReferenced_nonNull_native();
    v146 = v21;
    if ((v91 & 1) == 0)
    {
      sub_1A54F4B30(0, *(_QWORD *)(v21 + 16) + 1, 1);
      v21 = v146;
    }
    v27 = *(_QWORD *)(v21 + 16);
    v26 = *(_QWORD *)(v21 + 24);
    if (v27 >= v26 >> 1)
    {
      sub_1A54F4B30(v26 > 1, v27 + 1, 1);
      v21 = v146;
    }
    *(_QWORD *)(v21 + 16) = v27 + 1;
    v28 = v21 + 4 * v27;
LABEL_10:
    *(_DWORD *)(v28 + 32) = v62;
    swift_bridgeObjectRelease();
    sub_1A54E31EC((uint64_t)&v129);
    a6 = v120;
LABEL_11:
    if (++v25 == v124)
    {
      sub_1A54E8FCC(v116, v117, v118, 1);
      v17 = v147;
      v19 = v148;
      goto LABEL_138;
    }
  }
  if (v42)
  {
    if (v48)
      v61 = 0x40000000;
    else
      v61 = 0;
    goto LABEL_44;
  }
  if (v48)
    v75 = -1073741824;
  else
    v75 = 0x80000000;
  v68 = v75 | (v49 << 14) | v43;
  if (!v48)
    goto LABEL_69;
  v76 = v144;
  v77 = v144[2];
  v21 = v123;
  a6 = v120;
  if (!v77 || (v78 = v77 - 1, v68 >= HIDWORD(v144[2 * v77 + 3])))
  {
    swift_bridgeObjectRetain_n();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v76 = sub_1A54EFA24(0, v77 + 1, 1, v76);
    v101 = v76[2];
    v100 = v76[3];
    if (v101 >= v100 >> 1)
      v76 = sub_1A54EFA24((_QWORD *)(v100 > 1), v101 + 1, 1, v76);
    v76[2] = v101 + 1;
    v102 = &v76[2 * v101];
    v102[4] = v39;
    *((_DWORD *)v102 + 10) = v40;
    *((_DWORD *)v102 + 11) = v68;
    sub_1A54E31EC((uint64_t)&v129);
    swift_bridgeObjectRelease();
    v144 = v76;
    goto LABEL_11;
  }
  v79 = 0;
  while (!__OFSUB__(v78, v79))
  {
    v85 = v79 + (v78 - v79) / 2;
    if (__OFADD__(v79, (v78 - v79) / 2))
      goto LABEL_147;
    if (v85 >= v77)
      goto LABEL_148;
    v86 = HIDWORD(v144[2 * v85 + 5]);
    if (v86 < v68)
    {
      v79 = v85 + 1;
      if (v78 < (uint64_t)(v85 + 1))
        goto LABEL_89;
    }
    else
    {
      if (v68 >= v86)
        goto LABEL_134;
      v78 = v85 - 1;
      if ((uint64_t)(v85 - 1) < v79)
      {
LABEL_89:
        if (v77 < v79)
          goto LABEL_157;
        if (v79 < 0)
          goto LABEL_158;
        goto LABEL_111;
      }
    }
  }
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
  swift_release();
  swift_release();
  result = swift_release();
  __break(1u);
  return result;
}

ValueMetadata *_s15MailboxPriorityVMa()
{
  return &_s15MailboxPriorityVN;
}

uint64_t sub_1A5526714()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v1 = 0;
  v2 = v0[16];
  v3 = v0[17];
  v20 = v0[18];
  v4 = v2 + 56;
  v5 = v3 + 56;
  do
  {
    v6 = byte_1E4E6AD30[v1 + 32];
    if (!sub_1A54E9FCC(v6, v2) || sub_1A54E9FCC(v6, v3))
      return 1;
    v7 = 0;
    ++v1;
    while (*(_QWORD *)(v2 + 16))
    {
      v8 = byte_1E4E6AD00[v7 + 32];
      sub_1A594CE64();
      sub_1A594CE88();
      v9 = sub_1A594CED0();
      v10 = -1 << *(_BYTE *)(v2 + 32);
      v11 = v9 & ~v10;
      if (((*(_QWORD *)(v4 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
        break;
      v12 = *(_QWORD *)(v2 + 48);
      if (*(unsigned __int8 *)(v12 + v11) != v8)
      {
        v13 = ~v10;
        do
        {
          v11 = (v11 + 1) & v13;
          if (((*(_QWORD *)(v4 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
            goto LABEL_3;
        }
        while (*(unsigned __int8 *)(v12 + v11) != v8);
      }
      if (*(_QWORD *)(v3 + 16))
      {
        sub_1A594CE64();
        sub_1A594CE88();
        v14 = sub_1A594CED0();
        v15 = -1 << *(_BYTE *)(v3 + 32);
        v16 = v14 & ~v15;
        if (((*(_QWORD *)(v5 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
        {
          v17 = *(_QWORD *)(v3 + 48);
          if (*(unsigned __int8 *)(v17 + v16) == v8)
            break;
          v18 = ~v15;
          while (1)
          {
            v16 = (v16 + 1) & v18;
            if (((*(_QWORD *)(v5 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
              break;
            if (*(unsigned __int8 *)(v17 + v16) == v8)
              goto LABEL_3;
          }
        }
      }
      if (++v7 == 15)
      {
        if (sub_1A54E9FCC(v6, v20))
          return 1;
        break;
      }
    }
LABEL_3:
    ;
  }
  while (v1 != 7);
  return 0;
}

uint64_t sub_1A55268FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  char v16;

  v2 = a1 + 56;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v6)
      return swift_release();
    v14 = *(_QWORD *)(v2 + 8 * v13);
    ++v8;
    if (!v14)
    {
      v8 = v13 + 1;
      if (v13 + 1 >= v6)
        return swift_release();
      v14 = *(_QWORD *)(v2 + 8 * v8);
      if (!v14)
      {
        v8 = v13 + 2;
        if (v13 + 2 >= v6)
          return swift_release();
        v14 = *(_QWORD *)(v2 + 8 * v8);
        if (!v14)
        {
          v8 = v13 + 3;
          if (v13 + 3 >= v6)
            return swift_release();
          v14 = *(_QWORD *)(v2 + 8 * v8);
          if (!v14)
            break;
        }
      }
    }
LABEL_22:
    v5 = (v14 - 1) & v14;
    v10 = __clz(__rbit64(v14)) + (v8 << 6);
LABEL_5:
    v11 = *(_QWORD *)(a1 + 48);
    v12 = *(unsigned __int8 *)(v11 + v10);
    sub_1A554B85C(*(_BYTE *)(v11 + v10));
    result = sub_1A54F3290(&v16, v12);
  }
  v15 = v13 + 4;
  if (v15 >= v6)
    return swift_release();
  v14 = *(_QWORD *)(v2 + 8 * v15);
  if (v14)
  {
    v8 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    v8 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v8 >= v6)
      return swift_release();
    v14 = *(_QWORD *)(v2 + 8 * v8);
    ++v15;
    if (v14)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1A5526A78()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  _BYTE v41[440];
  _BYTE v42[376];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  char v48;
  unsigned __int8 v49;
  uint64_t v50;
  int v51;
  char v52;
  uint64_t v53;
  int v54;
  char v55;
  int v56;
  char v57;

  v1 = (uint64_t)v0;
  v2 = v0[16];
  v3 = v0[17];
  v4 = v0[18];
  if (sub_1A54E9FCC(0xCu, v2) && !sub_1A54E9FCC(0xCu, v3))
  {
    v7 = 0;
    v8 = v2 + 56;
    v9 = v3 + 56;
    while (*(_QWORD *)(v2 + 16))
    {
      v10 = *((unsigned __int8 *)&unk_1E4E71090 + v7 + 32);
      sub_1A594CE64();
      sub_1A594CE88();
      v11 = sub_1A594CED0();
      v12 = -1 << *(_BYTE *)(v2 + 32);
      v13 = v11 & ~v12;
      if (((*(_QWORD *)(v8 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
        break;
      v14 = *(_QWORD *)(v2 + 48);
      if (*(unsigned __int8 *)(v14 + v13) != v10)
      {
        v15 = ~v12;
        do
        {
          v13 = (v13 + 1) & v15;
          if (((*(_QWORD *)(v8 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
            goto LABEL_22;
        }
        while (*(unsigned __int8 *)(v14 + v13) != v10);
      }
      if (*(_QWORD *)(v3 + 16))
      {
        sub_1A594CE64();
        sub_1A594CE88();
        v16 = sub_1A594CED0();
        v17 = -1 << *(_BYTE *)(v3 + 32);
        v18 = v16 & ~v17;
        if (((*(_QWORD *)(v9 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) != 0)
        {
          v19 = *(_QWORD *)(v3 + 48);
          if (*(unsigned __int8 *)(v19 + v18) == v10)
            break;
          v20 = ~v17;
          while (1)
          {
            v18 = (v18 + 1) & v20;
            if (((*(_QWORD *)(v9 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
              break;
            if (*(unsigned __int8 *)(v19 + v18) == v10)
              goto LABEL_22;
          }
        }
      }
      if (++v7 == 15)
      {
        if (sub_1A54E9FCC(0xCu, v4))
          goto LABEL_3;
        break;
      }
    }
LABEL_22:
    sub_1A54E30E0((uint64_t)v0, (uint64_t)v42);
    if (!(v49 >> 6))
    {
      v21 = v46;
      v22 = v44;
      v23 = v43;
      v50 = v43;
      v51 = v44;
      v52 = BYTE4(v44);
      v39 = v45;
      v53 = v45;
      v54 = v46;
      v55 = BYTE4(v46);
      v56 = v47;
      v57 = v48 & 1;
      sub_1A5531E98();
      v25 = v24;
      v27 = v26;
      v40 = HIDWORD(v26);
      sub_1A54E3414();
      MessageIdentifierSet.intersection(_:)(v25, v27 & 0xFFFFFFFFFFLL, v23, v22 & 0xFFFFFFFFFFLL);
      v29 = v28;
      v31 = v30;
      v32 = HIDWORD(v30);
      v33 = MessageIdentifierSet.count.getter(v28, v30 & 0xFFFFFFFFFFLL);
      sub_1A54E3458(v29, v31, v32);
      if (v33 >= 1)
      {
        MessageIdentifierSet.intersection(_:)(v25, v27 & 0xFFFFFFFFFFLL, v39, v21 & 0xFFFFFFFFFFLL);
        v35 = v34;
        v37 = v36;
        v38 = HIDWORD(v36);
        sub_1A54E3458(v25, v27, v40);
        MessageIdentifierSet.count.getter(v35, v37 & 0xFFFFFFFFFFLL);
        sub_1A54E3458(v35, v37, v38);
        goto LABEL_4;
      }
      sub_1A54E3458(v25, v27, v40);
    }
    sub_1A54E311C((uint64_t)v42);
    sub_1A54E30E0(v1, (uint64_t)v41);
    v5 = sub_1A5526714() ^ 1;
    goto LABEL_5;
  }
LABEL_3:
  sub_1A54E30E0((uint64_t)v0, (uint64_t)v42);
LABEL_4:
  sub_1A54E311C((uint64_t)v42);
  sub_1A54E30E0(v1, (uint64_t)v41);
  v5 = 0;
LABEL_5:
  sub_1A54E311C((uint64_t)v41);
  return v5 & 1;
}

unint64_t sub_1A5526DE8@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  int v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  unint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  int v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  int v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  int v56;
  unint64_t v57;
  uint64_t v58;
  int v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  unint64_t v64;
  _OWORD v65[5];
  char v66;
  _BYTE v67[16];
  char v68[8];
  char v69[8];
  uint64_t v70;
  char v71;
  uint64_t v72[2];
  uint64_t v73;
  char v74;

  v4 = a1;
  v5 = a3;
  *(_QWORD *)(a3 + 24) = 0;
  *(_BYTE *)(a3 + 32) = 1;
  v6 = a3 + 8;
  v7 = a3 + 16;
  *(_QWORD *)(a3 + 320) = 0;
  *(_QWORD *)(a3 + 328) = 0;
  *(_QWORD *)(a3 + 312) = 0;
  *(_QWORD *)(a3 + 333) = 0;
  *(_QWORD *)(a3 + 344) = 0;
  *(_QWORD *)(a3 + 352) = 0xFF00000000;
  *(_QWORD *)(a3 + 360) = 0;
  *(_QWORD *)(a3 + 368) = 0;
  *(_QWORD *)a3 = *(_QWORD *)(a1 + 24);
  sub_1A55032A0(a1 + 48, (uint64_t)v69, &qword_1EE795BE8);
  sub_1A55032A0((uint64_t)v69, v6, &qword_1EE795BE8);
  sub_1A55032A0(v4 + 56, (uint64_t)v68, &qword_1EE7968D0);
  sub_1A55032A0((uint64_t)v68, v7, &qword_1EE7968D0);
  sub_1A55032A0(v4 + 64, (uint64_t)v67, &qword_1EE798178);
  sub_1A55032A0((uint64_t)v67, (uint64_t)&v70, &qword_1EE798178);
  v8 = MEMORY[0x1E0DEE9D8];
  if ((v71 & 1) != 0
    || (sub_1A5529B54(&v70, (uint64_t)v72), sub_1A5529B54(v72, (uint64_t)&v73), (v74 & 1) != 0)
    || (a2 & 0x10000) != 0)
  {
    v16 = sub_1A555D3EC(v8);
    v18 = v17;
    v20 = v19;
    *(_QWORD *)(v5 + 184) = &_s14BasicResponsesVN;
    *(_QWORD *)(v5 + 192) = sub_1A5529A80();
    v21 = (_QWORD *)swift_allocObject();
    *(_QWORD *)(v5 + 160) = v21;
    v21[2] = v16;
    v21[3] = v18;
    v21[4] = v20;
    v21[5] = v8;
    v15 = v21 + 7;
    v21[6] = 1;
  }
  else
  {
    *(_QWORD *)(v5 + 24) = v73;
    *(_BYTE *)(v5 + 32) = 0;
    v9 = sub_1A555D3EC(v8);
    v11 = v10;
    v13 = v12;
    *(_QWORD *)(v5 + 184) = &_s18CondStoreResponsesVN;
    *(_QWORD *)(v5 + 192) = sub_1A5529B90();
    v14 = (_QWORD *)swift_allocObject();
    *(_QWORD *)(v5 + 160) = v14;
    v14[2] = v8;
    v14[3] = v9;
    v14[4] = v11;
    v14[5] = v13;
    v15 = v14 + 8;
    v14[6] = v8;
    v14[7] = 0;
  }
  *v15 = 1;
  v22 = sub_1A55C19FC(v8);
  *(_QWORD *)(v5 + 200) = v8;
  *(_BYTE *)(v5 + 208) = 0;
  *(_QWORD *)(v5 + 216) = v22;
  *(_DWORD *)(v5 + 224) = v23;
  *(_BYTE *)(v5 + 228) = v24;
  v25 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v5 + 128) = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v5 + 136) = v25;
  *(_QWORD *)(v5 + 144) = v25;
  v26 = *(_QWORD *)(v4 + 40);
  if (v26)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5529B0C(v4);
LABEL_19:
    v43 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54F76C8(v43, (uint64_t)v65);
    v44 = v65[3];
    *(_OWORD *)(v5 + 72) = v65[2];
    *(_OWORD *)(v5 + 88) = v44;
    *(_OWORD *)(v5 + 104) = v65[4];
    *(_BYTE *)(v5 + 120) = v66;
    v45 = v65[1];
    *(_OWORD *)(v5 + 40) = v65[0];
    *(_OWORD *)(v5 + 56) = v45;
    v46 = sub_1A54F7F44(v26);
    *(_BYTE *)(v5 + 121) = v46 & 1;
    *(_BYTE *)(v5 + 122) = BYTE1(v46) & 1;
    *(_BYTE *)(v5 + 123) = BYTE2(v46) & 1;
    *(_BYTE *)(v5 + 124) = HIBYTE(v46) & 1;
    *(_QWORD *)(v5 + 152) = v25;
    v47 = MEMORY[0x1E0DEE9D8];
    v64 = sub_1A558A994(MEMORY[0x1E0DEE9D8]);
    v48 = sub_1A54E3414();
    v49 = MessageIdentifierSet.init()(&type metadata for UID, v48);
    v51 = v50;
    v52 = HIDWORD(v50);
    v53 = sub_1A558A994(v47);
    v54 = MessageIdentifierSet.init()(&type metadata for UID, v48);
    v56 = v55;
    v57 = HIDWORD(v55);
    v58 = MessageIdentifierSet.init()(&type metadata for UID, v48);
    *(_WORD *)(v5 + 232) = 0;
    *(_BYTE *)(v5 + 234) = 0;
    *(_QWORD *)(v5 + 240) = v64;
    *(_QWORD *)(v5 + 248) = v49;
    *(_DWORD *)(v5 + 256) = v51;
    *(_BYTE *)(v5 + 260) = v52;
    *(_QWORD *)(v5 + 264) = v53;
    *(_QWORD *)(v5 + 272) = v54;
    *(_DWORD *)(v5 + 280) = v56;
    *(_BYTE *)(v5 + 284) = v57;
    *(_QWORD *)(v5 + 288) = v58;
    *(_DWORD *)(v5 + 296) = v59;
    *(_BYTE *)(v5 + 300) = v60;
    result = sub_1A5572DBC(MEMORY[0x1E0DEE9D8]);
    *(_QWORD *)(v5 + 304) = result;
    *(_OWORD *)(v5 + 376) = 0u;
    *(_OWORD *)(v5 + 392) = 0u;
    *(_OWORD *)(v5 + 408) = 0u;
    *(_QWORD *)(v5 + 424) = 0;
    *(_BYTE *)(v5 + 436) = 0x80;
    *(_DWORD *)(v5 + 432) = 0;
    return result;
  }
  v27 = *(_QWORD *)(v4 + 16);
  v28 = *(_QWORD *)(v27 + 16);
  if (!v28)
  {
LABEL_18:
    v26 = sub_1A55525A4(v8);
    swift_bridgeObjectRelease();
    sub_1A5529B0C(v4);
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  v61 = v4;
  v62 = v5;
  *(_QWORD *)&v65[0] = v8;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54F4BA0(0, v28, 0);
  result = sub_1A558A0B8(v27);
  v30 = result;
  v32 = v31;
  v34 = v33 & 1;
  while ((v30 & 0x8000000000000000) == 0 && v30 < 1 << *(_BYTE *)(v27 + 32))
  {
    if (((*(_QWORD *)(v27 + 56 + (((unint64_t)v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
      goto LABEL_21;
    if (*(_DWORD *)(v27 + 36) != (_DWORD)v32)
      goto LABEL_22;
    v63 = v34;
    v35 = (uint64_t *)(*(_QWORD *)(v27 + 48) + 16 * v30);
    v36 = *v35;
    v37 = v35[1];
    *(_QWORD *)&v65[0] = v8;
    v38 = *(_QWORD *)(v8 + 16);
    v39 = *(_QWORD *)(v8 + 24);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v38 >= v39 >> 1)
    {
      sub_1A54F4BA0(v39 > 1, v38 + 1, 1);
      v8 = *(_QWORD *)&v65[0];
    }
    *(_QWORD *)(v8 + 16) = v38 + 1;
    v40 = v8 + 16 * v38;
    *(_QWORD *)(v40 + 32) = v36;
    *(_QWORD *)(v40 + 40) = v37;
    result = sub_1A558A15C(v30, v32, v63 & 1, v27);
    v30 = result;
    v32 = v41;
    v34 = v42 & 1;
    if (!--v28)
    {
      sub_1A5529B00(result, v41, v34);
      swift_bridgeObjectRelease();
      v4 = v61;
      v5 = v62;
      v25 = MEMORY[0x1E0DEE9E8];
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_1A55272B8(char *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t result;
  unint64_t v45;
  unint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  NSObject *v75;
  os_log_type_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  NSObject *v104;
  os_log_type_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t (*v118)(uint64_t, uint64_t);
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  os_log_type_t v132;
  int v133;
  uint64_t v134;
  uint64_t v135;
  char v136;
  uint64_t v137;
  unint64_t v138;
  int v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  const void *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  os_log_type_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char v155;
  uint64_t v156;
  uint64_t v157;
  int v158;
  uint64_t v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  int v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  unint64_t *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  int v181;
  uint64_t v182;
  uint64_t v183[73];
  _BYTE v184[584];
  _BYTE v185[584];
  _QWORD v186[73];
  _BYTE v187[592];

  v176 = a5;
  v168 = a3;
  v169 = a4;
  v167 = a2;
  sub_1A552316C(a1, v184);
  sub_1A552316C(v184, v187);
  v174 = _s12LocalMailboxV6LoggerVMa();
  MEMORY[0x1E0C80A78](v174);
  v173 = (unint64_t)&v163 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v170 = (uint64_t)&v163 - v8;
  MEMORY[0x1E0C80A78](v9);
  v172 = (uint64_t)&v163 - v10;
  MEMORY[0x1E0C80A78](v11);
  v166 = (uint64_t)&v163 - v12;
  MEMORY[0x1E0C80A78](v13);
  v164 = (uint64_t)&v163 - v14;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v163 - v16;
  MEMORY[0x1E0C80A78](v18);
  v165 = (uint64_t)&v163 - v19;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v163 - v21;
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v163 - v24;
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v163 - v27;
  v29 = sub_1A594A764();
  v30 = *(_QWORD *)(v29 - 8);
  v178 = v29;
  v179 = v30;
  MEMORY[0x1E0C80A78](v29);
  v32 = (char *)&v163 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v33);
  v171 = (uint64_t)&v163 - v34;
  MEMORY[0x1E0C80A78](v35);
  v37 = (char *)&v163 - v36;
  MEMORY[0x1E0C80A78](v38);
  v40 = (char *)&v163 - v39;
  MEMORY[0x1E0C80A78](v41);
  v43 = (char *)&v163 - v42;
  v175 = a1;
  sub_1A552316C(a1, v185);
  result = sub_1A5523B90((uint64_t)v185);
  switch((int)result)
  {
    case 14:
      v45 = *(unsigned int *)sub_1A5524678((uint64_t)v185);
      v46 = v177;
      sub_1A554B85C(0xCu);
      sub_1A54F3290(v186, 12);
      v47 = v178;
      v48 = v179;
      v49 = v176;
      (*(void (**)(char *, uint64_t, uint64_t))(v179 + 16))(v43, v176, v178);
      sub_1A5529EE8(v49, (uint64_t)v28);
      v50 = (uint64_t)v25;
      sub_1A5529EE8(v49, (uint64_t)v25);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v51 = sub_1A594A74C();
      v52 = sub_1A594C030();
      v53 = v52;
      if (os_log_type_enabled(v51, v52))
      {
        v54 = swift_slowAlloc();
        v173 = v45;
        v55 = v54;
        v176 = swift_slowAlloc();
        v183[0] = v176;
        *(_DWORD *)v55 = 68159235;
        LODWORD(v186[0]) = 2;
        v175 = v43;
        sub_1A594C3CC();
        *(_WORD *)(v55 + 8) = 256;
        LODWORD(v172) = v53;
        v56 = v174;
        v57 = v28[*(int *)(v174 + 20)];
        sub_1A5529F2C((uint64_t)v28);
        LOBYTE(v186[0]) = v57;
        sub_1A594C3CC();
        *(_WORD *)(v55 + 11) = 1040;
        LODWORD(v186[0]) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v55 + 17) = 512;
        v58 = v50 + *(int *)(v56 + 20);
        LOWORD(v186[0]) = *(_WORD *)(v58 + 2);
        sub_1A594C3CC();
        *(_WORD *)(v55 + 21) = 2160;
        v186[0] = 0x786F626C69616DLL;
        sub_1A594C3CC();
        *(_WORD *)(v55 + 31) = 2085;
        v59 = *(_DWORD *)(v58 + 16);
        v186[0] = *(_QWORD *)(v58 + 8);
        LODWORD(v186[1]) = v59;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v60 = sub_1A594B4A8();
        v186[0] = sub_1A55791B0(v60, v61, v183);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A5529F2C(v50);
        *(_WORD *)(v55 + 41) = 1024;
        v62 = v173;
        LODWORD(v186[0]) = v173;
        sub_1A594C3CC();
        _os_log_impl(&dword_1A4F90000, v51, (os_log_type_t)v172, "[%.*hhx-{%.*hx}-%{sensitive,mask.mailbox}s] Updating message count to %u", (uint8_t *)v55, 0x2Fu);
        v63 = v176;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v63, -1, -1);
        MEMORY[0x1A85B1964](v55, -1, -1);

        result = (*(uint64_t (**)(char *, uint64_t))(v179 + 8))(v175, v178);
        *v177 = v62;
      }
      else
      {
        sub_1A5529F2C((uint64_t)v28);
        sub_1A5529F2C(v50);

        result = (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v43, v47);
        *v46 = v45;
      }
      return result;
    case 16:
      v64 = *(unsigned int *)sub_1A5524678((uint64_t)v185);
      v65 = (uint64_t *)v177;
      LODWORD(v175) = v64;
      sub_1A553839C(v64);
      v66 = v179;
      if ((~v65[44] & 0xFF00000000) == 0)
        goto LABEL_7;
      v67 = v65[46];
      v68 = __OFADD__(v67, 1);
      v69 = v67 + 1;
      if (v68)
        goto LABEL_30;
      v65[46] = v69;
LABEL_7:
      v70 = *v65 - 1;
      if (*v65 >= 1)
      {
        *v65 = v70;
        v71 = (unint64_t *)v40;
        v72 = v176;
        v73 = v178;
        (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v40, v176, v178);
        sub_1A5529EE8(v72, (uint64_t)v22);
        v74 = v165;
        sub_1A5529EE8(v72, v165);
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        v75 = sub_1A594A74C();
        v76 = sub_1A594C030();
        v77 = v76;
        if (os_log_type_enabled(v75, v76))
        {
          v78 = swift_slowAlloc();
          v173 = v70;
          v79 = v78;
          v176 = swift_slowAlloc();
          v183[0] = v176;
          *(_DWORD *)v79 = 68159491;
          v177 = v71;
          LODWORD(v186[0]) = 2;
          LODWORD(v172) = v77;
          sub_1A594C3CC();
          *(_WORD *)(v79 + 8) = 256;
          v80 = v174;
          v81 = v22[*(int *)(v174 + 20)];
          sub_1A5529F2C((uint64_t)v22);
          LOBYTE(v186[0]) = v81;
          sub_1A594C3CC();
          *(_WORD *)(v79 + 11) = 1040;
          LODWORD(v186[0]) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v79 + 17) = 512;
          v82 = v74 + *(int *)(v80 + 20);
          LOWORD(v186[0]) = *(_WORD *)(v82 + 2);
          sub_1A594C3CC();
          *(_WORD *)(v79 + 21) = 2160;
          v186[0] = 0x786F626C69616DLL;
          sub_1A594C3CC();
          *(_WORD *)(v79 + 31) = 2085;
          v83 = *(_DWORD *)(v82 + 16);
          v186[0] = *(_QWORD *)(v82 + 8);
          LODWORD(v186[1]) = v83;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v84 = sub_1A594B4A8();
          v186[0] = sub_1A55791B0(v84, v85, v183);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          sub_1A5529F2C(v74);
          *(_WORD *)(v79 + 41) = 1024;
          LODWORD(v186[0]) = (_DWORD)v175;
          sub_1A594C3CC();
          *(_WORD *)(v79 + 47) = 2048;
          v186[0] = v173;
          sub_1A594C3CC();
          _os_log_impl(&dword_1A4F90000, v75, (os_log_type_t)v172, "[%.*hhx-{%.*hx}-%{sensitive,mask.mailbox}s] Received expunge %u. Message count is now %ld.", (uint8_t *)v79, 0x39u);
          v86 = v176;
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v86, -1, -1);
          v87 = v79;
          goto LABEL_21;
        }
        sub_1A5529F2C((uint64_t)v22);
        sub_1A5529F2C(v74);

        v118 = *(uint64_t (**)(uint64_t, uint64_t))(v66 + 8);
        v119 = (uint64_t)v71;
        goto LABEL_24;
      }
      v149 = v176;
      v126 = v178;
      (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v37, v176, v178);
      sub_1A5529EE8(v149, (uint64_t)v17);
      v150 = v164;
      sub_1A5529EE8(v149, v164);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v75 = sub_1A594A74C();
      v151 = sub_1A594C018();
      if (os_log_type_enabled(v75, v151))
      {
        v152 = swift_slowAlloc();
        v176 = swift_slowAlloc();
        v183[0] = v176;
        *(_DWORD *)v152 = 68159235;
        LODWORD(v186[0]) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v152 + 8) = 256;
        v153 = v174;
        v154 = *(int *)(v174 + 20);
        v177 = (unint64_t *)v37;
        v155 = v17[v154];
        sub_1A5529F2C((uint64_t)v17);
        LOBYTE(v186[0]) = v155;
        sub_1A594C3CC();
        *(_WORD *)(v152 + 11) = 1040;
        LODWORD(v186[0]) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v152 + 17) = 512;
        v156 = v164;
        v157 = v164 + *(int *)(v153 + 20);
        LOWORD(v186[0]) = *(_WORD *)(v157 + 2);
        sub_1A594C3CC();
        *(_WORD *)(v152 + 21) = 2160;
        v186[0] = 0x786F626C69616DLL;
        sub_1A594C3CC();
        *(_WORD *)(v152 + 31) = 2085;
        v158 = *(_DWORD *)(v157 + 16);
        v186[0] = *(_QWORD *)(v157 + 8);
        LODWORD(v186[1]) = v158;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v159 = sub_1A594B4A8();
        v186[0] = sub_1A55791B0(v159, v160, v183);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A5529F2C(v156);
        *(_WORD *)(v152 + 41) = 1024;
        LODWORD(v186[0]) = (_DWORD)v175;
        sub_1A594C3CC();
        _os_log_impl(&dword_1A4F90000, v75, v151, "[%.*hhx-{%.*hx}-%{sensitive,mask.mailbox}s] Received expunge %u, but mMessage is already zero.", (uint8_t *)v152, 0x2Fu);
        v161 = v176;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v161, -1, -1);
        v87 = v152;
        goto LABEL_21;
      }
      sub_1A5529F2C((uint64_t)v17);
      sub_1A5529F2C(v150);

      v118 = *(uint64_t (**)(uint64_t, uint64_t))(v66 + 8);
      v119 = (uint64_t)v37;
      goto LABEL_26;
    case 17:
      v88 = sub_1A5524678((uint64_t)v185);
      v89 = *(_QWORD *)v88;
      v90 = *(unsigned int *)(v88 + 8);
      v91 = *(unsigned __int8 *)(v88 + 12);
      v92 = (uint64_t *)v177;
      sub_1A552316C(v187, v186);
      v93 = sub_1A5524678((uint64_t)v186);
      sub_1A54E4334(*(_QWORD *)v93, *(unsigned int *)(v93 + 8), *(_BYTE *)(v93 + 12));
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
      v94 = v90 | (v91 << 32);
      MessageIdentifierSet.formUnion(_:)(v89, v94);
      v95 = *v92;
      v173 = sub_1A54E3414();
      v96 = MessageIdentifierSet.count.getter(v89, v94);
      if (__OFSUB__(v95, v96))
      {
        __break(1u);
LABEL_30:
        __break(1u);
        JUMPOUT(0x1A55285BCLL);
      }
      v97 = (v95 - v96) & ~((v95 - v96) >> 63);
      *v92 = v97;
      v73 = v178;
      v98 = v179;
      v99 = v171;
      v100 = v176;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v179 + 16))(v171, v176, v178);
      v101 = v166;
      sub_1A5529EE8(v100, v166);
      v102 = v172;
      sub_1A5529EE8(v100, v172);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      sub_1A552316C(v187, v183);
      v103 = sub_1A5524678((uint64_t)v183);
      sub_1A54E4334(*(_QWORD *)v103, *(unsigned int *)(v103 + 8), *(_BYTE *)(v103 + 12));
      v104 = sub_1A594A74C();
      v105 = sub_1A594C030();
      LODWORD(v177) = v105;
      if (os_log_type_enabled(v104, v105))
      {
        v106 = swift_slowAlloc();
        v176 = swift_slowAlloc();
        v182 = v176;
        *(_DWORD *)v106 = 68159491;
        v168 = v89;
        v169 = v94;
        LODWORD(v180) = 2;
        v170 = v97;
        sub_1A594C3CC();
        *(_WORD *)(v106 + 8) = 256;
        v107 = v174;
        v108 = *(_BYTE *)(v101 + *(int *)(v174 + 20));
        sub_1A5529F2C(v101);
        LOBYTE(v180) = v108;
        sub_1A594C3CC();
        *(_WORD *)(v106 + 11) = 1040;
        LODWORD(v180) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v106 + 17) = 512;
        v109 = *(int *)(v107 + 20);
        v110 = v172;
        v111 = v172 + v109;
        LOWORD(v180) = *(_WORD *)(v172 + v109 + 2);
        sub_1A594C3CC();
        *(_WORD *)(v106 + 21) = 2160;
        v180 = 0x786F626C69616DLL;
        sub_1A594C3CC();
        *(_WORD *)(v106 + 31) = 2085;
        v112 = *(_DWORD *)(v111 + 16);
        v180 = *(_QWORD *)(v111 + 8);
        v181 = v112;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v113 = sub_1A594B4A8();
        v180 = sub_1A55791B0(v113, v114, &v182);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A5529F2C(v110);
        *(_WORD *)(v106 + 41) = 2048;
        v115 = MessageIdentifierSet.count.getter(v168, v169);
        v116 = (uint64_t)v175;
        sub_1A5529E00((uint64_t)v175);
        v180 = v115;
        sub_1A594C3CC();
        sub_1A5529E00(v116);
        *(_WORD *)(v106 + 51) = 2048;
        v180 = v170;
        sub_1A594C3CC();
        _os_log_impl(&dword_1A4F90000, v104, (os_log_type_t)v177, "[%.*hhx-{%.*hx}-%{sensitive,mask.mailbox}s] Received vanished for %ld UID(s). Message count is now %ld.", (uint8_t *)v106, 0x3Du);
        v117 = v176;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v117, -1, -1);
        MEMORY[0x1A85B1964](v106, -1, -1);

        v118 = *(uint64_t (**)(uint64_t, uint64_t))(v179 + 8);
        v119 = v171;
        goto LABEL_22;
      }
      v148 = (uint64_t)v175;
      sub_1A5529E00((uint64_t)v175);
      sub_1A5529F2C(v101);
      sub_1A5529F2C(v102);
      sub_1A5529E00(v148);

      v118 = *(uint64_t (**)(uint64_t, uint64_t))(v98 + 8);
      v119 = v99;
LABEL_24:
      v162 = v73;
      break;
    case 18:
      v120 = sub_1A5524678((uint64_t)v185);
      v121 = *(_QWORD *)v120;
      v122 = *(unsigned int *)(v120 + 8);
      v123 = *(unsigned __int8 *)(v120 + 12);
      sub_1A552316C(v187, v183);
      v124 = sub_1A5524678((uint64_t)v183);
      sub_1A54E4334(*(_QWORD *)v124, *(unsigned int *)(v124 + 8), *(_BYTE *)(v124 + 12));
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
      v125 = v122 | (v123 << 32);
      MessageIdentifierSet.formUnion(_:)(v121, v125);
      v126 = v178;
      v127 = v179;
      v128 = v176;
      (*(void (**)(char *, uint64_t, uint64_t))(v179 + 16))(v32, v176, v178);
      v129 = v170;
      sub_1A5529EE8(v128, v170);
      v130 = v173;
      sub_1A5529EE8(v128, v173);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      sub_1A552316C(v187, v186);
      v131 = sub_1A5524678((uint64_t)v186);
      sub_1A54E4334(*(_QWORD *)v131, *(unsigned int *)(v131 + 8), *(_BYTE *)(v131 + 12));
      v75 = sub_1A594A74C();
      v132 = sub_1A594C030();
      v133 = v132;
      if (os_log_type_enabled(v75, v132))
      {
        v134 = swift_slowAlloc();
        v176 = swift_slowAlloc();
        v182 = v176;
        *(_DWORD *)v134 = 68159235;
        v171 = v125;
        LODWORD(v180) = 2;
        v169 = v121;
        sub_1A594C3CC();
        *(_WORD *)(v134 + 8) = 256;
        LODWORD(v172) = v133;
        v177 = (unint64_t *)v32;
        v135 = v174;
        v136 = *(_BYTE *)(v129 + *(int *)(v174 + 20));
        sub_1A5529F2C(v129);
        LOBYTE(v180) = v136;
        sub_1A594C3CC();
        *(_WORD *)(v134 + 11) = 1040;
        LODWORD(v180) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v134 + 17) = 512;
        v137 = v173;
        v138 = v173 + *(int *)(v135 + 20);
        LOWORD(v180) = *(_WORD *)(v138 + 2);
        sub_1A594C3CC();
        *(_WORD *)(v134 + 21) = 2160;
        v180 = 0x786F626C69616DLL;
        sub_1A594C3CC();
        *(_WORD *)(v134 + 31) = 2085;
        v139 = *(_DWORD *)(v138 + 16);
        v180 = *(_QWORD *)(v138 + 8);
        v181 = v139;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v140 = sub_1A594B4A8();
        v180 = sub_1A55791B0(v140, v141, &v182);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A5529F2C(v137);
        *(_WORD *)(v134 + 41) = 2048;
        sub_1A54E3414();
        v142 = MessageIdentifierSet.count.getter(v169, v171);
        v143 = (uint64_t)v175;
        sub_1A5529E00((uint64_t)v175);
        v180 = v142;
        sub_1A594C3CC();
        sub_1A5529E00(v143);
        _os_log_impl(&dword_1A4F90000, v75, (os_log_type_t)v172, "[%.*hhx-{%.*hx}-%{sensitive,mask.mailbox}s] Received vanished (earlier) for %ld UID(s).", (uint8_t *)v134, 0x33u);
        v144 = v176;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v144, -1, -1);
        v87 = v134;
LABEL_21:
        MEMORY[0x1A85B1964](v87, -1, -1);

        v118 = *(uint64_t (**)(uint64_t, uint64_t))(v179 + 8);
        v119 = (uint64_t)v177;
LABEL_22:
        v162 = v178;
      }
      else
      {
        v147 = (uint64_t)v175;
        sub_1A5529E00((uint64_t)v175);
        sub_1A5529F2C(v129);
        sub_1A5529F2C(v130);
        sub_1A5529E00(v147);

        v118 = *(uint64_t (**)(uint64_t, uint64_t))(v127 + 8);
        v119 = (uint64_t)v32;
LABEL_26:
        v162 = v126;
      }
      break;
    case 19:
      v145 = (const void *)sub_1A5524678((uint64_t)v185);
      memcpy(v186, v145, sizeof(v186));
      sub_1A552316C(v187, v183);
      v146 = sub_1A5524678((uint64_t)v183);
      sub_1A5529C18(v146);
      sub_1A5528D54((int *)v186, v167, v168, v169, v176);
      return sub_1A5529E00((uint64_t)v175);
    default:
      return result;
  }
  return v118(v119, v162);
}

uint64_t sub_1A55285D4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _OWORD v21[2];

  v2 = v1;
  v4 = v1[16];
  v5 = v1[17];
  v6 = v1[18];
  sub_1A550FD4C((uint64_t)(v1 + 20), (uint64_t)&v18);
  if (v1[40])
    v7 = v1[39];
  else
    v7 = 4507;
  v8 = sub_1A5538498(*v1, v7);
  sub_1A550FD94((uint64_t)&v18);
  *(_QWORD *)&v18 = v4;
  *((_QWORD *)&v18 + 1) = v5;
  *(_QWORD *)&v19 = v6;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A55268FC(v8);
  swift_bridgeObjectRelease();
  v9 = v18;
  v10 = v19;
  v11 = *(_OWORD *)(v2 + 31);
  v12 = *(_OWORD *)(v2 + 35);
  v20 = *(_OWORD *)(v2 + 33);
  v21[0] = v12;
  *(_QWORD *)((char *)v21 + 13) = *(uint64_t *)((char *)v2 + 293);
  v18 = *(_OWORD *)(v2 + 29);
  v19 = v11;
  v13 = sub_1A55357C4();
  v16 = v9;
  v17 = v10;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A55268FC(v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A558E134(a1 & 0x1010101FFFF01, (uint64_t *)&v16);
  v14 = sub_1A5529348(v16, v9, *((uint64_t *)&v9 + 1), v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1A552877C(uint64_t result, unsigned __int16 a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int v16;
  unint64_t v17;
  char v18;
  char v19;

  v3 = v2;
  v4 = a2;
  v5 = result;
  if (((a2 ^ (unsigned __int16)result) & 0xFF00) != 0)
  {
    sub_1A5529F7C(*(_QWORD *)(v2 + 376), *(_QWORD *)(v2 + 384), *(_QWORD *)(v2 + 392), *(_QWORD *)(v2 + 400), *(_QWORD *)(v2 + 408), *(_QWORD *)(v2 + 416), *(_QWORD *)(v2 + 424), *(unsigned int *)(v2 + 432) | ((unint64_t)*(unsigned __int8 *)(v2 + 436) << 32), (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
    *(_QWORD *)(v2 + 424) = 0;
    *(_OWORD *)(v2 + 392) = 0u;
    *(_OWORD *)(v2 + 408) = 0u;
    *(_OWORD *)(v2 + 376) = 0u;
    *(_BYTE *)(v2 + 436) = 0x80;
    *(_DWORD *)(v2 + 432) = 0;
    sub_1A554B85C(0xCu);
    sub_1A54F3290(&v19, 12);
    sub_1A554B85C(2u);
    sub_1A54F3290(&v19, 2);
    sub_1A554B85C(4u);
    result = sub_1A54F3290(&v19, 4);
  }
  if ((v5 & 1) != (v4 & 1))
  {
    v6 = MEMORY[0x1E0DEE9D8];
    v7 = sub_1A558A994(MEMORY[0x1E0DEE9D8]);
    v8 = sub_1A54E3414();
    v9 = MessageIdentifierSet.init()(&type metadata for UID, v8);
    v11 = v10;
    v12 = HIDWORD(v10);
    v13 = sub_1A558A994(v6);
    v14 = MessageIdentifierSet.init()(&type metadata for UID, v8);
    v16 = v15;
    v17 = HIDWORD(v15);
    swift_bridgeObjectRelease();
    sub_1A54E3458(*(_QWORD *)(v3 + 248), *(unsigned int *)(v3 + 256), *(_BYTE *)(v3 + 260));
    swift_bridgeObjectRelease();
    sub_1A54E3458(*(_QWORD *)(v3 + 272), *(unsigned int *)(v3 + 280), *(_BYTE *)(v3 + 284));
    *(_QWORD *)(v3 + 240) = v7;
    *(_QWORD *)(v3 + 248) = v9;
    *(_DWORD *)(v3 + 256) = v11;
    *(_BYTE *)(v3 + 260) = v12;
    *(_QWORD *)(v3 + 264) = v13;
    *(_QWORD *)(v3 + 272) = v14;
    *(_DWORD *)(v3 + 280) = v16;
    *(_BYTE *)(v3 + 284) = v17;
    sub_1A554B85C(9u);
    sub_1A54F3290(&v18, 9);
    sub_1A554B85C(0xAu);
    return sub_1A54F3290(&v18, 10);
  }
  return result;
}

uint64_t sub_1A55289A4()
{
  sub_1A594C720();
  sub_1A594B5F8();
  sub_1A594CC9C();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  sub_1A594CC9C();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  sub_1A5528CCC();
  sub_1A594B6DC();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B4A8();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  sub_1A594B4A8();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  sub_1A5528D10();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594BB98();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  return 0;
}

unint64_t sub_1A5528CCC()
{
  unint64_t result;

  result = qword_1EE79B4B8;
  if (!qword_1EE79B4B8)
  {
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEE138], MEMORY[0x1E0DEE0F8]);
    atomic_store(result, (unint64_t *)&qword_1EE79B4B8);
  }
  return result;
}

unint64_t sub_1A5528D10()
{
  unint64_t result;

  result = qword_1EE7985E8;
  if (!qword_1EE7985E8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for OpaquePersistedMessageIdentifier, &type metadata for OpaquePersistedMessageIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EE7985E8);
  }
  return result;
}

void sub_1A5528D54(int *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, __n128);
  char *v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char *v37;
  int v38;
  uint64_t v39;
  unint64_t v40;
  os_log_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  int *v45;
  uint64_t v46;
  int v47;
  int v48;
  int v49;
  unint64_t v50;
  uint64_t v51;
  int v52;
  char v53;
  int v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(_QWORD *, uint64_t, uint64_t, uint64_t);
  char *v59;
  os_log_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  int v69;
  int v70;
  int *v71;
  _BYTE v72[16];
  _BYTE v73[120];
  _BYTE v74[184];
  _BYTE v75[184];
  _QWORD v76[2];
  int v77;
  char v78;
  int v79;
  char v80;
  unint64_t v81;
  char v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86[23];
  uint64_t v87;
  int v88;
  char v89[40];
  uint64_t v90;
  _BYTE v91[24];

  v6 = v5;
  v70 = a2;
  v11 = _s12LocalMailboxV6LoggerVMa();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v59 - v15;
  v17 = sub_1A594A764();
  v20.n128_f64[0] = MEMORY[0x1E0C80A78](v17);
  v22 = (char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = a1;
  v23 = *((_QWORD *)a1 + 69);
  v69 = *((unsigned __int8 *)a1 + 560);
  if ((v69 & 1) == 0)
  {
    v24 = *(_QWORD *)(v6 + 24);
    if (*(_BYTE *)(v6 + 32))
      v25 = 0;
    else
      v25 = *(_QWORD *)(v6 + 24);
    if (v25 <= v23)
      v25 = v23;
    if ((*(_BYTE *)(v6 + 32) & 1) != 0)
      goto LABEL_10;
    if (((v25 | v24) & 0x8000000000000000) != 0)
    {
      __break(1u);
      return;
    }
    if (v24 != v25)
    {
LABEL_10:
      v65 = v25;
      v66 = v19;
      *(_QWORD *)(v6 + 24) = v25;
      *(_BYTE *)(v6 + 32) = 0;
      v26 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v19 + 16);
      v27 = v22;
      v68 = v18;
      v26(v22, a5, v18, v20);
      sub_1A5529EE8(a5, (uint64_t)v16);
      sub_1A5529EE8(a5, (uint64_t)v13);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v67 = v27;
      v28 = sub_1A594A74C();
      v29 = sub_1A594C030();
      v64 = v29;
      if (os_log_type_enabled(v28, v29))
      {
        v30 = swift_slowAlloc();
        v63 = a3;
        v31 = v30;
        v61 = swift_slowAlloc();
        v86[0] = v61;
        *(_DWORD *)v31 = 68159235;
        LODWORD(v87) = 2;
        v59 = (char *)&v87 + 4;
        sub_1A594C3CC();
        *(_WORD *)(v31 + 8) = 256;
        v62 = v23;
        v32 = *(int *)(v11 + 20);
        v60 = v28;
        v33 = v6;
        v34 = a5;
        v35 = a4;
        v36 = v16[v32];
        sub_1A5529F2C((uint64_t)v16);
        LOBYTE(v87) = v36;
        a4 = v35;
        a5 = v34;
        v6 = v33;
        sub_1A594C3CC();
        *(_WORD *)(v31 + 11) = 1040;
        LODWORD(v87) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v31 + 17) = 512;
        v37 = &v13[*(int *)(v11 + 20)];
        LOWORD(v87) = *((_WORD *)v37 + 1);
        sub_1A594C3CC();
        *(_WORD *)(v31 + 21) = 2160;
        v87 = 0x786F626C69616DLL;
        sub_1A594C3CC();
        *(_WORD *)(v31 + 31) = 2085;
        v38 = *((_DWORD *)v37 + 4);
        v87 = *((_QWORD *)v37 + 1);
        v88 = v38;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v39 = sub_1A594B4A8();
        v87 = sub_1A55791B0(v39, v40, v86);
        v23 = v62;
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A5529F2C((uint64_t)v13);
        *(_WORD *)(v31 + 41) = 2048;
        v87 = v65;
        sub_1A594C3CC();
        v41 = v60;
        _os_log_impl(&dword_1A4F90000, v60, (os_log_type_t)v64, "[%.*hhx-{%.*hx}-%{sensitive,mask.mailbox}s] Updating highest mod-seq to %llu", (uint8_t *)v31, 0x33u);
        v42 = v61;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v42, -1, -1);
        v43 = v31;
        a3 = v63;
        MEMORY[0x1A85B1964](v43, -1, -1);

      }
      else
      {
        sub_1A5529F2C((uint64_t)v16);
        sub_1A5529F2C((uint64_t)v13);

      }
      (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v68);
    }
  }
  v44 = v23;
  v45 = v71;
  sub_1A55032A0((uint64_t)(v71 + 4), (uint64_t)v75, &qword_1EE7A03D0);
  sub_1A55032A0((uint64_t)v75, (uint64_t)v86, &qword_1EE7A03D0);
  if (sub_1A5529F68((uint64_t)v86) == 1 && !*(_QWORD *)(*((_QWORD *)v45 + 25) + 16))
  {
    sub_1A55032A0((uint64_t)(v45 + 52), (uint64_t)v74, &qword_1EE7A03D0);
    sub_1A55032A0((uint64_t)v74, (uint64_t)&v87, &qword_1EE7A03D0);
    if (sub_1A5529F68((uint64_t)&v87) == 1)
    {
      sub_1A55032A0((uint64_t)(v45 + 98), (uint64_t)v73, &qword_1EE797128);
      sub_1A55032A0((uint64_t)v73, (uint64_t)v89, &qword_1EE797128);
      if (!v90)
      {
        sub_1A55032A0((uint64_t)(v45 + 132), (uint64_t)v72, &qword_1EE796BC0);
        sub_1A55032A0((uint64_t)v72, (uint64_t)v91, &qword_1EE796BC0);
        if (v91[8] == 1)
        {
          v46 = *((_QWORD *)v45 + 64);
          if (v46)
          {
            if (*(_BYTE *)(v6 + 124))
              v47 = 0x1000000;
            else
              v47 = 0;
            if (*(_BYTE *)(v6 + 123))
              v48 = 0x10000;
            else
              v48 = 0;
            if (*(_BYTE *)(v6 + 122))
              v49 = 256;
            else
              v49 = 0;
            v50 = FlagDecoder.decode(_:)(v46, v49 | *(unsigned __int8 *)(v6 + 121) | v48 | v47) & 0xFFFFFFFF01010101;
            v51 = *((_QWORD *)v45 + 65);
          }
          else
          {
            v51 = *((_QWORD *)v45 + 65);
            if (!v51)
              return;
            v50 = 2;
          }
          v52 = *v45;
          v53 = *((_BYTE *)v45 + 4);
          v54 = v45[2];
          v55 = *((_BYTE *)v45 + 12);
          v76[0] = v50;
          v76[1] = v51;
          v77 = v52;
          v78 = v53;
          v79 = v54;
          v80 = v55;
          v81 = v44;
          v82 = v69;
          v83 = v70;
          v84 = a3;
          v85 = a4;
          v56 = *(_QWORD *)(v6 + 184);
          v57 = *(_QWORD *)(v6 + 192);
          __swift_mutable_project_boxed_opaque_existential_1_0(v6 + 160, v56);
          v58 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v57 + 16);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v58(v76, a5, v56, v57);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
    }
  }
}

uint64_t sub_1A5529348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = a2;
  v13 = a3;
  v14 = a2;
  v12 = a4;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return v4;
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  for (i = 0; i != v5; ++i)
  {
    v8 = *(unsigned __int8 *)(a1 + i + 32);
    v9 = v13;
    if (sub_1A54E9FCC(*(_BYTE *)(a1 + i + 32), v13))
    {
      sub_1A554B85C(v8);
      sub_1A554B85C(v8);
      v9 = v13;
    }
    else if (sub_1A54E9FCC(v8, v14) && sub_1A54E9FCC(v8, v12))
    {
      sub_1A554B85C(v8);
    }
    else
    {
      sub_1A54F3290(&v11, v8);
    }
    if (sub_1A54E9FCC(v8, v9))
    {
      sub_1A554B85C(v8);
    }
    else if (!sub_1A54E9FCC(v8, v14) || !sub_1A54E9FCC(v8, v12))
    {
      sub_1A54F3290(&v11, v8);
      continue;
    }
    sub_1A554B85C(v8);
  }
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1A55294E0(uint64_t a1, uint64_t a2)
{
  int32x2_t *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int32x2_t *v7;
  char v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  int32x2_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int32x2_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v44;
  char v45;
  _BYTE v46[64];
  _BYTE v47[64];
  _OWORD v48[3];
  _OWORD v49[2];
  _OWORD v50[3];
  _OWORD v51[2];
  _OWORD v52[5];
  char v53;
  _OWORD v54[5];
  char v55;

  if (*(_QWORD *)a1 != *(_QWORD *)a2)
    goto LABEL_52;
  v10 = *(_BYTE *)(a2 + 12);
  if ((*(_BYTE *)(a1 + 12) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 12))
      goto LABEL_52;
  }
  else
  {
    if (*(_DWORD *)(a2 + 8) != *(_DWORD *)(a1 + 8))
      v10 = 1;
    if ((v10 & 1) != 0)
      goto LABEL_52;
  }
  v11 = *(_BYTE *)(a2 + 20);
  if ((*(_BYTE *)(a1 + 20) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 20))
      goto LABEL_52;
  }
  else
  {
    if (*(_DWORD *)(a1 + 16) != *(_DWORD *)(a2 + 16))
      v11 = 1;
    if ((v11 & 1) != 0)
      goto LABEL_52;
  }
  if ((*(_BYTE *)(a1 + 32) & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 32) & 1) == 0)
      goto LABEL_52;
  }
  else
  {
    if ((*(_BYTE *)(a2 + 32) & 1) != 0)
      goto LABEL_52;
    v12 = *(_QWORD *)(a1 + 24);
    v13 = *(_QWORD *)(a2 + 24);
    if (((v13 | v12) & 0x8000000000000000) != 0)
    {
      __break(1u);
      goto LABEL_44;
    }
    if (v13 != v12)
    {
LABEL_52:
      v18 = 0;
      return v18 & 1;
    }
  }
  v14 = *(_OWORD *)(a1 + 88);
  v52[2] = *(_OWORD *)(a1 + 72);
  v52[3] = v14;
  v52[4] = *(_OWORD *)(a1 + 104);
  v53 = *(_BYTE *)(a1 + 120);
  v15 = *(_OWORD *)(a1 + 56);
  v52[0] = *(_OWORD *)(a1 + 40);
  v52[1] = v15;
  v16 = *(_OWORD *)(a2 + 88);
  v54[2] = *(_OWORD *)(a2 + 72);
  v54[3] = v16;
  v54[4] = *(_OWORD *)(a2 + 104);
  v55 = *(_BYTE *)(a2 + 120);
  v17 = *(_OWORD *)(a2 + 56);
  v54[0] = *(_OWORD *)(a2 + 40);
  v54[1] = v17;
  if ((_s13IMAP2Behavior11FlagEncoderV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)v52, (uint64_t)v54) & 1) == 0)
    goto LABEL_52;
  v18 = 0;
  if (*(unsigned __int8 *)(a1 + 121) != *(unsigned __int8 *)(a2 + 121)
    || ((*(unsigned __int8 *)(a1 + 122) ^ *(unsigned __int8 *)(a2 + 122)) & 1) != 0
    || ((*(unsigned __int8 *)(a1 + 123) ^ *(unsigned __int8 *)(a2 + 123)) & 1) != 0
    || ((*(unsigned __int8 *)(a1 + 124) ^ *(unsigned __int8 *)(a2 + 124)) & 1) != 0)
  {
    return v18 & 1;
  }
  v19 = *(_QWORD *)(a1 + 136);
  v20 = *(_QWORD *)(a1 + 144);
  v21 = *(_QWORD *)(a2 + 136);
  v22 = *(_QWORD *)(a2 + 144);
  if ((sub_1A54ECC20(*(_QWORD *)(a1 + 128), *(_QWORD *)(a2 + 128)) & 1) == 0)
    goto LABEL_52;
  if ((sub_1A54ECC20(v19, v21) & 1) == 0)
    goto LABEL_52;
  if ((sub_1A54ECC20(v20, v22) & 1) == 0)
    goto LABEL_52;
  if ((sub_1A54ED828(*(_QWORD *)(a1 + 152), *(_QWORD *)(a2 + 152)) & 1) == 0)
    goto LABEL_52;
  if ((sub_1A553930C(a1 + 160, a2 + 160) & 1) == 0)
    goto LABEL_52;
  v23 = *(_OWORD *)(a1 + 248);
  v48[0] = *(_OWORD *)(a1 + 232);
  v48[1] = v23;
  v24 = *(_OWORD *)(a1 + 280);
  v48[2] = *(_OWORD *)(a1 + 264);
  v49[0] = v24;
  *(_QWORD *)((char *)v49 + 13) = *(_QWORD *)(a1 + 293);
  v25 = *(_OWORD *)(a2 + 248);
  v50[0] = *(_OWORD *)(a2 + 232);
  v50[1] = v25;
  v26 = *(_OWORD *)(a2 + 280);
  v50[2] = *(_OWORD *)(a2 + 264);
  v51[0] = v26;
  *(_QWORD *)((char *)v51 + 13) = *(_QWORD *)(a2 + 293);
  sub_1A55359DC((unsigned __int8 *)v48, (unsigned __int8 *)v50);
  if ((v27 & 1) == 0 || (sub_1A54FBAD8(*(_QWORD *)(a1 + 304), *(_QWORD *)(a2 + 304)) & 1) == 0)
    goto LABEL_52;
  v4 = *(_QWORD *)(a1 + 312);
  v3 = *(_QWORD *)(a1 + 320);
  v2 = *(int32x2_t **)(a1 + 328);
  v5 = *(unsigned int *)(a1 + 336) | ((unint64_t)*(unsigned __int8 *)(a1 + 340) << 32);
  v29 = *(_QWORD *)(a2 + 312);
  v28 = *(_QWORD *)(a2 + 320);
  v7 = *(int32x2_t **)(a2 + 328);
  v6 = *(unsigned int *)(a2 + 336) | ((unint64_t)*(unsigned __int8 *)(a2 + 340) << 32);
  v30 = v28;
  if (v3)
  {
    if (v28)
    {
      if (v4 != v29 || (sub_1A5537EF0(*(int32x2_t **)(a1 + 320), *(int32x2_t **)(a2 + 320)), v29 = v4, (v31 & 1) == 0))
      {
        sub_1A550F128(v4, v3, (uint64_t)v2, v5);
        sub_1A550F128(v4, v3, (uint64_t)v2, v5);
        sub_1A550F128(v29, v30, (uint64_t)v7, v6);
LABEL_42:
        swift_bridgeObjectRelease();
        sub_1A5503B8C((uint64_t)v7, v6);
        swift_bridgeObjectRelease();
        sub_1A5503B8C((uint64_t)v2, v5);
        sub_1A5524F48(v4, v3, (uint64_t)v2, v5);
        goto LABEL_52;
      }
      sub_1A550F128(v4, v3, (uint64_t)v2, v5);
      sub_1A550F128(v4, v3, (uint64_t)v2, v5);
      sub_1A550F128(v4, v30, (uint64_t)v7, v6);
      v12 = BYTE4(v6);
      if (BYTE4(v5) == 255)
      {
        if (BYTE4(v6) == 255)
        {
LABEL_46:
          swift_bridgeObjectRelease();
          sub_1A5503B8C((uint64_t)v7, v6);
          swift_bridgeObjectRelease();
          sub_1A5503B8C((uint64_t)v2, v5);
          sub_1A5524F48(v4, v3, (uint64_t)v2, v5);
          goto LABEL_47;
        }
        goto LABEL_42;
      }
LABEL_44:
      if (v12 <= 0xFE)
      {
        sub_1A5503BA0((uint64_t)v7, v6);
        sub_1A5503BA0((uint64_t)v2, v5);
        sub_1A54E3414();
        static MessageIdentifierSet.__derived_struct_equals(_:_:)(v2, v5 & 0xFFFFFFFFFFLL, v7, v6 & 0xFFFFFFFFFFLL);
        v33 = v32;
        sub_1A5503B8C((uint64_t)v7, v6);
        sub_1A5503B8C((uint64_t)v2, v5);
        if ((v33 & 1) != 0)
          goto LABEL_46;
      }
      goto LABEL_42;
    }
    goto LABEL_40;
  }
  if (v28)
  {
LABEL_40:
    sub_1A550F128(*(_QWORD *)(a1 + 312), *(_QWORD *)(a1 + 320), *(_QWORD *)(a1 + 328), *(unsigned int *)(a1 + 336) | ((unint64_t)*(unsigned __int8 *)(a1 + 340) << 32));
    sub_1A550F128(v29, v30, (uint64_t)v7, v6);
    sub_1A5524F48(v4, v3, (uint64_t)v2, v5);
    sub_1A5524F48(v29, v30, (uint64_t)v7, v6);
    goto LABEL_52;
  }
LABEL_47:
  v34 = *(int32x2_t **)(a1 + 344);
  v35 = *(_QWORD *)(a1 + 352);
  v37 = *(_QWORD *)(a1 + 360);
  v36 = *(_QWORD *)(a1 + 368);
  v38 = *(int32x2_t **)(a2 + 344);
  v39 = *(_QWORD *)(a2 + 352);
  v41 = *(_QWORD *)(a2 + 360);
  v40 = *(_QWORD *)(a2 + 368);
  v42 = v39 & 0xFF00000000;
  if ((~v35 & 0xFF00000000) == 0)
  {
    if (v42 == 0xFF00000000)
    {
LABEL_57:
      sub_1A5510484(a1 + 376, (uint64_t)v46);
      sub_1A5510484(a2 + 376, (uint64_t)v47);
      v18 = sub_1A5533E2C((uint64_t)v46, (uint64_t)v47);
      return v18 & 1;
    }
    goto LABEL_51;
  }
  if (v42 == 0xFF00000000)
  {
LABEL_51:
    sub_1A550F858(*(_QWORD *)(a1 + 344), *(_QWORD *)(a1 + 352));
    sub_1A550F858((uint64_t)v38, v39);
    sub_1A550F870((uint64_t)v34, v35);
    sub_1A550F870((uint64_t)v38, v39);
    goto LABEL_52;
  }
  sub_1A550F858(*(_QWORD *)(a1 + 344), *(_QWORD *)(a1 + 352));
  sub_1A550F858((uint64_t)v38, v39);
  sub_1A54E3414();
  static MessageIdentifierSet.__derived_struct_equals(_:_:)(v34, v35 & 0xFFFFFFFFFFLL, v38, v39 & 0xFFFFFFFFFFLL);
  v45 = v44;
  sub_1A550F870((uint64_t)v38, v39);
  sub_1A550F870((uint64_t)v34, v35);
  v18 = 0;
  if ((v45 & 1) != 0 && v37 == v41 && v36 == v40)
    goto LABEL_57;
  return v18 & 1;
}

unint64_t sub_1A5529A80()
{
  unint64_t result;

  result = qword_1EE7A8708;
  if (!qword_1EE7A8708)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A4A10, &_s14BasicResponsesVN);
    atomic_store(result, (unint64_t *)&qword_1EE7A8708);
  }
  return result;
}

uint64_t sub_1A5529AC4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A5529B00(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1A5529B0C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A5529B54(uint64_t *a1, uint64_t a2)
{
  __swift_memcpy9_8_6(a2, a1);
  return a2;
}

unint64_t sub_1A5529B90()
{
  unint64_t result;

  result = qword_1EE797A60;
  if (!qword_1EE797A60)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A4BDC, &_s18CondStoreResponsesVN);
    atomic_store(result, (unint64_t *)&qword_1EE797A60);
  }
  return result;
}

uint64_t sub_1A5529BD4()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A5529C18(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v25 = *(_QWORD *)(a1 + 208);
  v24 = *(_QWORD *)(a1 + 216);
  v23 = *(_QWORD *)(a1 + 224);
  v22 = *(_QWORD *)(a1 + 232);
  v21 = *(_QWORD *)(a1 + 240);
  v20 = *(_QWORD *)(a1 + 248);
  v19 = *(_QWORD *)(a1 + 256);
  v18 = *(_QWORD *)(a1 + 264);
  v12 = *(_OWORD *)(a1 + 272);
  v11 = *(_OWORD *)(a1 + 288);
  v10 = *(_OWORD *)(a1 + 304);
  v9 = *(_OWORD *)(a1 + 320);
  v7 = *(_OWORD *)(a1 + 352);
  v8 = *(_OWORD *)(a1 + 336);
  v2 = *(_QWORD *)(a1 + 368);
  v3 = *(_QWORD *)(a1 + 376);
  v4 = *(_BYTE *)(a1 + 384);
  v16 = *(_QWORD *)(a1 + 400);
  v17 = *(_QWORD *)(a1 + 392);
  v14 = *(_QWORD *)(a1 + 416);
  v15 = *(_QWORD *)(a1 + 408);
  v5 = *(_QWORD *)(a1 + 432);
  v13 = *(_QWORD *)(a1 + 424);
  sub_1A5523620(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_BYTE *)(a1 + 192));
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5523620(v25, v24, v23, v22, v21, v20, v19, v18, v12, *((uint64_t *)&v12 + 1), v11, *((uint64_t *)&v11 + 1), v10, *((uint64_t *)&v10 + 1), v9, *((uint64_t *)&v9 + 1), v8, *((uint64_t *)&v8 + 1), v7,
    *((uint64_t *)&v7 + 1),
    v2,
    v3,
    v4);
  sub_1A5523AD8(v17, v16, v15, v14, v13, v5);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t sub_1A5529E00(uint64_t a1)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  v19 = *(_OWORD *)(a1 + 480);
  v17 = *(_OWORD *)(a1 + 448);
  v18 = *(_OWORD *)(a1 + 464);
  v15 = *(_OWORD *)(a1 + 416);
  v16 = *(_OWORD *)(a1 + 432);
  v13 = *(_OWORD *)(a1 + 384);
  v14 = *(_OWORD *)(a1 + 400);
  v11 = *(_OWORD *)(a1 + 352);
  v12 = *(_OWORD *)(a1 + 368);
  v9 = *(_OWORD *)(a1 + 320);
  v10 = *(_OWORD *)(a1 + 336);
  v7 = *(_OWORD *)(a1 + 288);
  v8 = *(_OWORD *)(a1 + 304);
  v5 = *(_OWORD *)(a1 + 256);
  v6 = *(_OWORD *)(a1 + 272);
  v3 = *(_OWORD *)(a1 + 224);
  v4 = *(_OWORD *)(a1 + 240);
  sub_1A5523C88(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_OWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    v3,
    *((uint64_t *)&v3 + 1),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    *(_QWORD *)(a1 + 496));
  return a1;
}

uint64_t sub_1A5529EE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s12LocalMailboxV6LoggerVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5529F2C(uint64_t a1)
{
  uint64_t v2;

  v2 = _s12LocalMailboxV6LoggerVMa();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A5529F68(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 176);
  if (v1 <= 1)
    return 0;
  else
    return v1 ^ 0xFF;
}

uint64_t sub_1A5529F7C(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t (*a9)(uint64_t, unint64_t, unint64_t))
{
  uint64_t v11;
  unint64_t v14;

  v11 = (a8 >> 38) & 3;
  if ((_DWORD)v11 == 1)
    return a9(a2, a3, HIDWORD(a3));
  if (!(_DWORD)v11)
  {
    v14 = BYTE4(a8);
    a9(result, a2, HIDWORD(a2));
    a9(a3, a4, HIDWORD(a4));
    return a9(a7, a8, v14);
  }
  return result;
}

uint64_t destroy for MailboxSyncState(uint64_t a1)
{
  unsigned int *v2;
  unint64_t v3;
  uint64_t v4;

  v2 = (unsigned int *)(a1 + 336);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 160);
  sub_1A552A19C(*(_QWORD *)(a1 + 200), *(_BYTE *)(a1 + 208));
  sub_1A54E3458(*(_QWORD *)(a1 + 216), *(unsigned int *)(a1 + 224), *(_BYTE *)(a1 + 228));
  swift_bridgeObjectRelease();
  sub_1A54E3458(*(_QWORD *)(a1 + 248), *(unsigned int *)(a1 + 256), *(_BYTE *)(a1 + 260));
  swift_bridgeObjectRelease();
  sub_1A54E3458(*(_QWORD *)(a1 + 272), *(unsigned int *)(a1 + 280), *(_BYTE *)(a1 + 284));
  sub_1A54E3458(*(_QWORD *)(a1 + 288), *(unsigned int *)(a1 + 296), *(_BYTE *)(a1 + 300));
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 320))
  {
    swift_bridgeObjectRelease();
    if (*((unsigned __int8 *)v2 + 4) != 255)
    {
      v3 = *v2 | ((unint64_t)*((unsigned __int8 *)v2 + 4) << 32);
      sub_1A54E3458(*(_QWORD *)(a1 + 328), v3, SBYTE4(v3));
    }
  }
  v4 = *(_QWORD *)(a1 + 352);
  if ((~v4 & 0xFF00000000) != 0)
    sub_1A54E3458(*(_QWORD *)(a1 + 344), v4, SBYTE4(v4));
  return sub_1A5529F7C(*(_QWORD *)(a1 + 376), *(_QWORD *)(a1 + 384), *(_QWORD *)(a1 + 392), *(_QWORD *)(a1 + 400), *(_QWORD *)(a1 + 408), *(_QWORD *)(a1 + 416), *(_QWORD *)(a1 + 424), v2[24] | ((unint64_t)*((unsigned __int8 *)v2 + 100) << 32), (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
}

uint64_t sub_1A552A19C(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for MailboxSyncState(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  unsigned int *v23;
  unsigned __int8 v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  unsigned int *v45;

  v45 = (unsigned int *)(a2 + 336);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  v6 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v6;
  v7 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v7;
  v8 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v8;
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_DWORD *)(a1 + 121) = *(_DWORD *)(a2 + 121);
  v9 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v9;
  v10 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v10;
  v44 = a2 + 160;
  v11 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 184) = v11;
  v42 = v11;
  v43 = **(void (***)(uint64_t, uint64_t, uint64_t))(v11 - 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v43(a1 + 160, v44, v42);
  v12 = *(_QWORD *)(a2 + 200);
  v13 = *(_BYTE *)(a2 + 208);
  sub_1A550FD88(v12, v13);
  *(_QWORD *)(a1 + 200) = v12;
  *(_BYTE *)(a1 + 208) = v13;
  v14 = *(_QWORD *)(a2 + 216);
  v15 = *(_DWORD *)(a2 + 224);
  LOBYTE(v6) = *(_BYTE *)(a2 + 228);
  sub_1A54E4334(v14, v15, v6);
  *(_QWORD *)(a1 + 216) = v14;
  *(_DWORD *)(a1 + 224) = v15;
  *(_BYTE *)(a1 + 228) = v6;
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  *(_WORD *)(a1 + 233) = *(_WORD *)(a2 + 233);
  v16 = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  v17 = *(unsigned int *)(a2 + 256);
  LOBYTE(v6) = *(_BYTE *)(a2 + 260);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54E4334(v16, v17, v6);
  *(_QWORD *)(a1 + 248) = v16;
  *(_DWORD *)(a1 + 256) = v17;
  *(_BYTE *)(a1 + 260) = v6;
  v18 = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  v19 = *(unsigned int *)(a2 + 280);
  LOBYTE(v6) = *(_BYTE *)(a2 + 284);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54E4334(v18, v19, v6);
  *(_QWORD *)(a1 + 272) = v18;
  *(_DWORD *)(a1 + 280) = v19;
  *(_BYTE *)(a1 + 284) = v6;
  v20 = *(_QWORD *)(a2 + 288);
  LODWORD(v19) = *(_DWORD *)(a2 + 296);
  LOBYTE(v6) = *(_BYTE *)(a2 + 300);
  sub_1A54E4334(v20, v19, v6);
  *(_QWORD *)(a1 + 288) = v20;
  *(_DWORD *)(a1 + 296) = v19;
  *(_BYTE *)(a1 + 300) = v6;
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  v21 = *(_QWORD *)(a2 + 320);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v21)
  {
    *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
    *(_QWORD *)(a1 + 320) = v21;
    v22 = (uint64_t *)(a2 + 328);
    v23 = v45;
    v24 = *((_BYTE *)v45 + 4);
    v25 = *v45;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v24 == 255)
    {
      *(_QWORD *)(a1 + 328) = *v22;
      *(_QWORD *)(a1 + 333) = *(_QWORD *)(a2 + 333);
    }
    else
    {
      v26 = v25 & 0xFFFFFF00FFFFFFFFLL | ((unint64_t)v24 << 32);
      v27 = *v22;
      sub_1A54E4334(v27, v26, SBYTE4(v26));
      *(_QWORD *)(a1 + 328) = v27;
      *(_DWORD *)(a1 + 336) = v26;
      *(_BYTE *)(a1 + 340) = BYTE4(v26);
    }
  }
  else
  {
    *(_OWORD *)(a1 + 312) = *(_OWORD *)(a2 + 312);
    *(_OWORD *)(a1 + 325) = *(_OWORD *)(a2 + 325);
    v23 = v45;
  }
  v28 = *(_QWORD *)(a2 + 352);
  if ((~v28 & 0xFF00000000) != 0)
  {
    v30 = *(_QWORD *)(a2 + 344);
    sub_1A54E4334(v30, *(_QWORD *)(a2 + 352), SBYTE4(v28));
    *(_QWORD *)(a1 + 344) = v30;
    *(_DWORD *)(a1 + 352) = v28;
    *(_BYTE *)(a1 + 356) = BYTE4(v28);
    v31 = *(_QWORD *)(a2 + 368);
    *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
    *(_QWORD *)(a1 + 368) = v31;
  }
  else
  {
    v29 = *(_OWORD *)(a2 + 360);
    *(_OWORD *)(a1 + 344) = *(_OWORD *)(a2 + 344);
    *(_OWORD *)(a1 + 360) = v29;
  }
  v32 = *(_QWORD *)(a2 + 376);
  v33 = *(_QWORD *)(a2 + 384);
  v34 = *(_QWORD *)(a2 + 392);
  v35 = *(_QWORD *)(a2 + 400);
  v36 = *(_QWORD *)(a2 + 408);
  v37 = *(_QWORD *)(a2 + 416);
  v38 = *(_QWORD *)(a2 + 424);
  v39 = *((unsigned __int8 *)v23 + 100);
  v40 = v23[24];
  sub_1A5529F7C(v32, v33, v34, v35, v36, v37, v38, v40 | (v39 << 32), (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E4334);
  *(_QWORD *)(a1 + 376) = v32;
  *(_QWORD *)(a1 + 384) = v33;
  *(_QWORD *)(a1 + 392) = v34;
  *(_QWORD *)(a1 + 400) = v35;
  *(_QWORD *)(a1 + 408) = v36;
  *(_QWORD *)(a1 + 416) = v37;
  *(_QWORD *)(a1 + 424) = v38;
  *(_BYTE *)(a1 + 436) = v39;
  *(_DWORD *)(a1 + 432) = v40;
  return a1;
}

uint64_t assignWithCopy for MailboxSyncState(uint64_t a1, uint64_t a2)
{
  unsigned int *v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  unsigned int v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  unsigned int v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  unsigned int v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  _OWORD *v37;
  _OWORD *v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t *v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t *v45;
  unsigned __int8 v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  __int128 v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  _OWORD *v59;
  _OWORD *v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v88;

  v4 = (unsigned int *)(a2 + 336);
  v5 = a1 + 336;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_DWORD *)(a1 + 8) = v6;
  v7 = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_DWORD *)(a1 + 16) = v7;
  v8 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_BYTE *)(a1 + 121) = *(_BYTE *)(a2 + 121);
  *(_BYTE *)(a1 + 122) = *(_BYTE *)(a2 + 122);
  *(_BYTE *)(a1 + 123) = *(_BYTE *)(a2 + 123);
  *(_BYTE *)(a1 + 124) = *(_BYTE *)(a2 + 124);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 160), (uint64_t *)(a2 + 160));
  v9 = *(_QWORD *)(a2 + 200);
  v10 = *(_BYTE *)(a2 + 208);
  sub_1A550FD88(v9, v10);
  v11 = *(_QWORD *)(a1 + 200);
  v12 = *(_BYTE *)(a1 + 208);
  *(_QWORD *)(a1 + 200) = v9;
  *(_BYTE *)(a1 + 208) = v10;
  sub_1A552A19C(v11, v12);
  v13 = *(_QWORD *)(a2 + 216);
  v14 = *(_DWORD *)(a2 + 224);
  v15 = *(_BYTE *)(a2 + 228);
  sub_1A54E4334(v13, v14, v15);
  v16 = *(_QWORD *)(a1 + 216);
  v17 = *(unsigned int *)(a1 + 224);
  *(_QWORD *)(a1 + 216) = v13;
  *(_DWORD *)(a1 + 224) = v14;
  v18 = *(_BYTE *)(a1 + 228);
  *(_BYTE *)(a1 + 228) = v15;
  sub_1A54E3458(v16, v17, v18);
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  *(_BYTE *)(a1 + 233) = *(_BYTE *)(a2 + 233);
  *(_BYTE *)(a1 + 234) = *(_BYTE *)(a2 + 234);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(a2 + 248);
  v20 = *(_DWORD *)(a2 + 256);
  v21 = *(_BYTE *)(a2 + 260);
  sub_1A54E4334(v19, v20, v21);
  v22 = *(_QWORD *)(a1 + 248);
  v23 = *(unsigned int *)(a1 + 256);
  *(_QWORD *)(a1 + 248) = v19;
  *(_DWORD *)(a1 + 256) = v20;
  v24 = *(_BYTE *)(a1 + 260);
  *(_BYTE *)(a1 + 260) = v21;
  sub_1A54E3458(v22, v23, v24);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v25 = *(_QWORD *)(a2 + 272);
  v26 = *(_DWORD *)(a2 + 280);
  v27 = *(_BYTE *)(a2 + 284);
  sub_1A54E4334(v25, v26, v27);
  v28 = *(_QWORD *)(a1 + 272);
  v29 = *(unsigned int *)(a1 + 280);
  *(_QWORD *)(a1 + 272) = v25;
  *(_DWORD *)(a1 + 280) = v26;
  v30 = *(_BYTE *)(a1 + 284);
  *(_BYTE *)(a1 + 284) = v27;
  sub_1A54E3458(v28, v29, v30);
  v31 = *(_QWORD *)(a2 + 288);
  v32 = *(_DWORD *)(a2 + 296);
  v33 = *(_BYTE *)(a2 + 300);
  sub_1A54E4334(v31, v32, v33);
  v34 = *(_QWORD *)(a1 + 288);
  v35 = *(unsigned int *)(a1 + 296);
  *(_QWORD *)(a1 + 288) = v31;
  *(_DWORD *)(a1 + 296) = v32;
  v36 = *(_BYTE *)(a1 + 300);
  *(_BYTE *)(a1 + 300) = v33;
  sub_1A54E3458(v34, v35, v36);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v37 = (_OWORD *)(a1 + 312);
  v38 = (_OWORD *)(a2 + 312);
  v39 = *(_QWORD *)(a2 + 320);
  if (*(_QWORD *)(a1 + 320))
  {
    if (v39)
    {
      *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
      *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      v40 = (uint64_t *)(a1 + 328);
      v41 = (uint64_t *)(a2 + 328);
      v42 = *v4 | ((unint64_t)*((unsigned __int8 *)v4 + 4) << 32);
      v43 = *((_BYTE *)v4 + 4);
      if (*(unsigned __int8 *)(v5 + 4) == 255)
      {
        if (BYTE4(v42) == 255)
        {
          v44 = *v41;
          *(_QWORD *)(a1 + 333) = *(_QWORD *)(a2 + 333);
          *v40 = v44;
        }
        else
        {
          v54 = *v41;
          sub_1A54E4334(*v41, *v4 | ((unint64_t)*((unsigned __int8 *)v4 + 4) << 32), SBYTE4(v42));
          *(_QWORD *)(a1 + 328) = v54;
          *(_DWORD *)(a1 + 336) = v42;
          *(_BYTE *)(a1 + 340) = v43;
        }
      }
      else if (BYTE4(v42) == 255)
      {
        sub_1A552AB80(a1 + 328);
        v50 = *(_QWORD *)(a2 + 333);
        *v40 = *v41;
        *(_QWORD *)(a1 + 333) = v50;
      }
      else
      {
        v55 = *v41;
        sub_1A54E4334(*v41, *v4 | ((unint64_t)*((unsigned __int8 *)v4 + 4) << 32), SBYTE4(v42));
        v56 = *(_QWORD *)(a1 + 328);
        v57 = *(unsigned int *)(a1 + 336);
        *(_QWORD *)(a1 + 328) = v55;
        *(_DWORD *)(a1 + 336) = v42;
        v58 = *(_BYTE *)(a1 + 340);
        *(_BYTE *)(a1 + 340) = v43;
        sub_1A54E3458(v56, v57, v58);
      }
    }
    else
    {
      sub_1A552ABC0(a1 + 312);
      v49 = *(_OWORD *)(a2 + 325);
      *v37 = *v38;
      *(_OWORD *)(a1 + 325) = v49;
    }
  }
  else if (v39)
  {
    *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
    *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
    v45 = (uint64_t *)(a2 + 328);
    v46 = *((_BYTE *)v4 + 4);
    v47 = *v4;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v46 == 255)
    {
      v48 = *v45;
      *(_QWORD *)(a1 + 333) = *(_QWORD *)(a2 + 333);
      *(_QWORD *)(a1 + 328) = v48;
    }
    else
    {
      v52 = v47 & 0xFFFFFF00FFFFFFFFLL | ((unint64_t)v46 << 32);
      v53 = *v45;
      sub_1A54E4334(v53, v52, SBYTE4(v52));
      *(_QWORD *)(a1 + 328) = v53;
      *(_DWORD *)(a1 + 336) = v52;
      *(_BYTE *)(a1 + 340) = BYTE4(v52);
    }
  }
  else
  {
    v51 = *v38;
    *(_OWORD *)(a1 + 325) = *(_OWORD *)(a2 + 325);
    *v37 = v51;
  }
  v59 = (_OWORD *)(a1 + 344);
  v60 = (_OWORD *)(a2 + 344);
  v61 = *(_QWORD *)(a2 + 352);
  v62 = v61 & 0xFF00000000;
  v88 = v5;
  if ((~*(_QWORD *)(a1 + 352) & 0xFF00000000) != 0)
  {
    if (v62 == 0xFF00000000)
    {
      sub_1A552ABF4(a1 + 344);
      v64 = *(_OWORD *)(a2 + 360);
      *v59 = *v60;
      *(_OWORD *)(a1 + 360) = v64;
      goto LABEL_24;
    }
    v66 = *(_QWORD *)(a2 + 344);
    sub_1A54E4334(v66, v61, SBYTE4(v61));
    v67 = *(_QWORD *)(a1 + 344);
    v68 = *(unsigned int *)(a1 + 352);
    *(_QWORD *)(a1 + 344) = v66;
    *(_DWORD *)(a1 + 352) = v61;
    v69 = *(_BYTE *)(a1 + 356);
    *(_BYTE *)(a1 + 356) = BYTE4(v61);
    sub_1A54E3458(v67, v68, v69);
LABEL_23:
    *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
    *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
    goto LABEL_24;
  }
  if (v62 != 0xFF00000000)
  {
    v65 = *(_QWORD *)(a2 + 344);
    sub_1A54E4334(v65, v61, SBYTE4(v61));
    *(_QWORD *)(a1 + 344) = v65;
    *(_DWORD *)(a1 + 352) = v61;
    *(_BYTE *)(a1 + 356) = BYTE4(v61);
    goto LABEL_23;
  }
  v63 = *(_OWORD *)(a2 + 360);
  *v59 = *v60;
  *(_OWORD *)(a1 + 360) = v63;
LABEL_24:
  v70 = *(_QWORD *)(a2 + 376);
  v71 = *(_QWORD *)(a2 + 384);
  v72 = *(_QWORD *)(a2 + 392);
  v73 = *(_QWORD *)(a2 + 400);
  v74 = *(_QWORD *)(a2 + 408);
  v75 = *(_QWORD *)(a2 + 416);
  v76 = *(_QWORD *)(a2 + 424);
  v77 = *((unsigned __int8 *)v4 + 100);
  v78 = v4[24];
  sub_1A5529F7C(v70, v71, v72, v73, v74, v75, v76, v78 | (v77 << 32), (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E4334);
  v79 = *(_QWORD *)(a1 + 376);
  v80 = *(_QWORD *)(a1 + 384);
  v81 = *(_QWORD *)(a1 + 392);
  v82 = *(_QWORD *)(a1 + 400);
  v83 = *(_QWORD *)(a1 + 408);
  v84 = *(_QWORD *)(a1 + 416);
  v85 = *(_QWORD *)(a1 + 424);
  v86 = *(unsigned int *)(v88 + 96) | ((unint64_t)*(unsigned __int8 *)(v88 + 100) << 32);
  *(_QWORD *)(a1 + 376) = v70;
  *(_QWORD *)(a1 + 384) = v71;
  *(_QWORD *)(a1 + 392) = v72;
  *(_QWORD *)(a1 + 400) = v73;
  *(_QWORD *)(a1 + 408) = v74;
  *(_QWORD *)(a1 + 416) = v75;
  *(_QWORD *)(a1 + 424) = v76;
  *(_DWORD *)(v88 + 96) = v78;
  *(_BYTE *)(v88 + 100) = v77;
  sub_1A5529F7C(v79, v80, v81, v82, v83, v84, v85, v86, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
  return a1;
}

uint64_t sub_1A552AB80(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A0400);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A552ABC0(uint64_t a1)
{
  destroy for MessageBatches(a1);
  return a1;
}

uint64_t sub_1A552ABF4(uint64_t a1)
{
  destroy for NewestMessages(a1);
  return a1;
}

void *__swift_memcpy437_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1B5uLL);
}

uint64_t assignWithTake for MailboxSyncState(uint64_t a1, uint64_t a2)
{
  unsigned int *v4;
  unsigned int *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  int v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  int v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  int v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  int v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  _QWORD *v34;
  unsigned __int8 v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int *v51;
  unsigned int v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v56;
  uint64_t v57;

  v4 = (unsigned int *)(a2 + 336);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = (unsigned int *)(a1 + 336);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_BYTE *)(a1 + 121) = *(_BYTE *)(a2 + 121);
  *(_BYTE *)(a1 + 122) = *(_BYTE *)(a2 + 122);
  *(_BYTE *)(a1 + 123) = *(_BYTE *)(a2 + 123);
  *(_BYTE *)(a1 + 124) = *(_BYTE *)(a2 + 124);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 160);
  v8 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v8;
  v9 = *(_QWORD *)(a2 + 200);
  v10 = *(_BYTE *)(a2 + 208);
  v11 = *(_QWORD *)(a1 + 200);
  v12 = *(_BYTE *)(a1 + 208);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v9;
  *(_BYTE *)(a1 + 208) = v10;
  sub_1A552A19C(v11, v12);
  v13 = *(_DWORD *)(a2 + 224);
  v14 = *(_BYTE *)(a2 + 228);
  v15 = *(_QWORD *)(a1 + 216);
  v16 = *(unsigned int *)(a1 + 224);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_DWORD *)(a1 + 224) = v13;
  v17 = *(_BYTE *)(a1 + 228);
  *(_BYTE *)(a1 + 228) = v14;
  sub_1A54E3458(v15, v16, v17);
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  *(_BYTE *)(a1 + 233) = *(_BYTE *)(a2 + 233);
  *(_BYTE *)(a1 + 234) = *(_BYTE *)(a2 + 234);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  swift_bridgeObjectRelease();
  v18 = *(_DWORD *)(a2 + 256);
  v19 = *(_BYTE *)(a2 + 260);
  v20 = *(_QWORD *)(a1 + 248);
  v21 = *(unsigned int *)(a1 + 256);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_DWORD *)(a1 + 256) = v18;
  v22 = *(_BYTE *)(a1 + 260);
  *(_BYTE *)(a1 + 260) = v19;
  sub_1A54E3458(v20, v21, v22);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  swift_bridgeObjectRelease();
  v23 = *(_DWORD *)(a2 + 280);
  v24 = *(_BYTE *)(a2 + 284);
  v25 = *(_QWORD *)(a1 + 272);
  v26 = *(unsigned int *)(a1 + 280);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_DWORD *)(a1 + 280) = v23;
  v27 = *(_BYTE *)(a1 + 284);
  *(_BYTE *)(a1 + 284) = v24;
  sub_1A54E3458(v25, v26, v27);
  v28 = *(_DWORD *)(a2 + 296);
  v29 = *(_BYTE *)(a2 + 300);
  v30 = *(_QWORD *)(a1 + 288);
  v31 = *(unsigned int *)(a1 + 296);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_DWORD *)(a1 + 296) = v28;
  v32 = *(_BYTE *)(a1 + 300);
  *(_BYTE *)(a1 + 300) = v29;
  sub_1A54E3458(v30, v31, v32);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 320))
    goto LABEL_8;
  v33 = *(_QWORD *)(a2 + 320);
  if (!v33)
  {
    sub_1A552ABC0(a1 + 312);
LABEL_8:
    *(_OWORD *)(a1 + 312) = *(_OWORD *)(a2 + 312);
    *(_OWORD *)(a1 + 325) = *(_OWORD *)(a2 + 325);
    goto LABEL_9;
  }
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 320) = v33;
  swift_bridgeObjectRelease();
  v34 = (_QWORD *)(a2 + 328);
  v35 = *((_BYTE *)v5 + 4);
  if (v35 == 255)
  {
LABEL_6:
    *(_QWORD *)(a1 + 328) = *v34;
    *(_QWORD *)(a1 + 333) = *(_QWORD *)(a2 + 333);
    goto LABEL_9;
  }
  v36 = *v4 | ((unint64_t)*((unsigned __int8 *)v4 + 4) << 32);
  if (HIDWORD(v36) > 0xFE)
  {
    sub_1A552AB80(a1 + 328);
    goto LABEL_6;
  }
  v56 = *v5;
  v57 = *(_QWORD *)(a1 + 328);
  *(_QWORD *)(a1 + 328) = *v34;
  *(_DWORD *)(a1 + 336) = v36;
  *(_BYTE *)(a1 + 340) = BYTE4(v36);
  sub_1A54E3458(v57, v56, v35);
LABEL_9:
  v37 = *(_QWORD *)(a1 + 352);
  if ((~v37 & 0xFF00000000) != 0)
  {
    v38 = *(_QWORD *)(a2 + 352);
    if ((~v38 & 0xFF00000000) != 0)
    {
      v40 = *(_QWORD *)(a1 + 344);
      *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
      *(_DWORD *)(a1 + 352) = v38;
      *(_BYTE *)(a1 + 356) = BYTE4(v38);
      sub_1A54E3458(v40, v37, SBYTE4(v37));
      v41 = *(_QWORD *)(a2 + 368);
      *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
      *(_QWORD *)(a1 + 368) = v41;
      goto LABEL_14;
    }
    sub_1A552ABF4(a1 + 344);
  }
  v39 = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 344) = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 360) = v39;
LABEL_14:
  v42 = *(_QWORD *)(a2 + 424);
  v43 = *((_BYTE *)v4 + 100);
  v44 = v4[24];
  v45 = *(_QWORD *)(a1 + 376);
  v46 = *(_QWORD *)(a1 + 384);
  v47 = *(_QWORD *)(a1 + 392);
  v48 = *(_QWORD *)(a1 + 400);
  v49 = *(_QWORD *)(a1 + 408);
  v50 = *(_QWORD *)(a1 + 416);
  v52 = v5[24];
  v51 = v5 + 24;
  v53 = *(_QWORD *)(a1 + 424);
  v54 = v52 | ((unint64_t)*((unsigned __int8 *)v51 + 4) << 32);
  *(_OWORD *)(v51 - 14) = *(_OWORD *)(v4 + 10);
  *(_OWORD *)(v51 - 10) = *(_OWORD *)(v4 + 14);
  *(_OWORD *)(v51 - 6) = *(_OWORD *)(v4 + 18);
  *(_QWORD *)(a1 + 424) = v42;
  *v51 = v44;
  *((_BYTE *)v51 + 4) = v43;
  sub_1A5529F7C(v45, v46, v47, v48, v49, v50, v53, v54, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
  return a1;
}

uint64_t getEnumTagSinglePayload for MailboxSyncState(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 437))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 72);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MailboxSyncState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 424) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 436) = 0;
    *(_DWORD *)(result + 432) = 0;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 437) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 72) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 437) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MailboxSyncState()
{
  return &type metadata for MailboxSyncState;
}

uint64_t sub_1A552B11C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  _OWORD v32[3];
  char v33[8];
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t (*v40)();
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  if ((*(_BYTE *)(v0 + 168) & 1) == 0)
    return MEMORY[0x1E0DEE9E8];
  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 184);
  v5 = *(_OWORD *)(v0 + 112);
  v32[0] = *(_OWORD *)(v0 + 96);
  v32[1] = v5;
  v32[2] = *(_OWORD *)(v0 + 128);
  sub_1A55032A0((uint64_t)v32, (uint64_t)v33, &qword_1EE7991D8);
  sub_1A55032A0((uint64_t)v33, (uint64_t)&v43, &qword_1EE7991D8);
  if (!v43)
    return MEMORY[0x1E0DEE9E8];
  v31 = *(_BYTE *)(v0 + 9);
  v27 = *(_BYTE *)(v0 + 17);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = *(_BYTE *)(v0 + 10);
  v8 = *(_QWORD *)(v0 + 40);
  v9 = *(_QWORD *)(v0 + 48);
  v10 = v1;
  v28 = v4;
  v29 = v1;
  v11 = *(_BYTE *)(v0 + 32);
  v12 = *(unsigned __int8 *)(v0 + 16);
  v30 = v43;
  sub_1A55212D0(v10, v2, v3, 1);
  sub_1A54FCA28((uint64_t)v33);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v13 = sub_1A558E3A4();
  v14 = sub_1A558E7E0(v12, v27 & 1, v6, v11, v8, v7, v9, v13) >> 32;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v15 = sub_1A558E3A4();
  v16 = sub_1A558E7E0(v12, v27 & 1, v6, v11, v8, v7, v9, v15) >> 16;
  v17 = swift_allocObject();
  v18 = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v17 + 208) = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v17 + 224) = v18;
  *(_QWORD *)(v17 + 240) = *(_QWORD *)(v0 + 224);
  v19 = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v17 + 144) = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v17 + 160) = v19;
  v20 = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v17 + 176) = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v17 + 192) = v20;
  v21 = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v17 + 80) = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v17 + 96) = v21;
  v22 = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v17 + 112) = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v17 + 128) = v22;
  v23 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v17 + 16) = *(_OWORD *)v0;
  *(_OWORD *)(v17 + 32) = v23;
  v24 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v17 + 48) = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v17 + 64) = v24;
  v34 = v29;
  v35 = v30;
  v36 = v31;
  v37 = v28;
  v38 = v14 & 1;
  v39 = v16;
  v40 = sub_1A552CEA8;
  v41 = v17;
  v42 = 7;
  sub_1A552CEB0(v0);
  v25 = sub_1A552B350();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v25;
}

uint64_t sub_1A552B350()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __int128 *i;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  unsigned int v20;
  char v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  __int128 *j;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  unsigned int v51;
  char v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  int v58;
  uint64_t v59;
  char v60;
  unint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unsigned int *v76;
  uint64_t v77;
  unsigned int v78;
  uint64_t v79;
  char v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  char v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  int v93;
  char v94;
  char v95;
  char v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  char v109;
  char v110;
  int64_t v111;
  char v112;
  char v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  int v117;
  int v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  uint64_t v122;
  _BYTE v123[16];
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  uint64_t v135;
  int v136;
  char v137;
  __int16 v138;
  char v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char v145;
  char v146;
  _QWORD v147[31];
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  _QWORD v162[2];

  if ((v0[4] & 1) == 0)
  {
    v3 = *v0;
    v4 = v0[1];
    v88 = *((_BYTE *)v0 + 16);
    v5 = v0[3];
    v161 = v4;
    v162[0] = v3;
    v90 = v5;
    v160 = v5;
    v159 = MEMORY[0x1E0DEE9E8];
    v6 = *(_QWORD *)(v3 + 16);
    sub_1A54FCA28((uint64_t)v162);
    sub_1A54FCA28((uint64_t)&v161);
    sub_1A54FCA28((uint64_t)&v160);
    sub_1A54FCA28((uint64_t)v162);
    sub_1A54FCA28((uint64_t)&v161);
    sub_1A54FCA28((uint64_t)&v160);
    v120 = v6;
    if (!v6)
      goto LABEL_34;
    v7 = 0;
    v8 = v3 + 32;
    v115 = v4;
    v86 = v3 + 32;
    while (1)
    {
      if (v7 >= v120)
        goto LABEL_89;
      for (i = (__int128 *)(v8 + 176 * v7++); ; i += 11)
      {
        v10 = *i;
        v11 = i[2];
        v149 = i[1];
        v150 = v11;
        v12 = i[3];
        v13 = i[4];
        v14 = i[6];
        v153 = i[5];
        v154 = v14;
        v151 = v12;
        v152 = v13;
        v15 = i[7];
        v16 = i[8];
        v17 = i[10];
        v157 = i[9];
        v158 = v17;
        v155 = v15;
        v156 = v16;
        v148 = v10;
        if (*(_QWORD *)(v4 + 16))
        {
          v18 = v148;
          v19 = DWORD2(v149);
          v20 = DWORD1(v153);
          v21 = BYTE8(v153);
          v22 = sub_1A54FDC30(v149, DWORD2(v149));
          if ((v23 & 1) != 0)
            break;
        }
LABEL_25:
        if (v120 == v7)
          goto LABEL_34;
        ++v7;
      }
      v24 = *(_QWORD *)(v4 + 56) + 72 * v22;
      v25 = *(_QWORD *)v24;
      v92 = *(_DWORD *)(v24 + 8);
      v94 = *(_BYTE *)(v24 + 12);
      v117 = *(unsigned __int16 *)(v24 + 14);
      v96 = *(_BYTE *)(v24 + 16);
      v98 = *(_QWORD *)(v24 + 24);
      v100 = *(_QWORD *)(v24 + 32);
      v102 = *(_QWORD *)(v24 + 40);
      v104 = *(_QWORD *)(v24 + 48);
      v106 = *(_QWORD *)(v24 + 56);
      v109 = *(_BYTE *)(v24 + 64);
      v112 = *(_BYTE *)(v24 + 65);
      sub_1A54E3150((uint64_t)&v148);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v26 = *(unsigned __int16 *)RemoteMailbox.Attributes.noSelect.unsafeMutableAddressor();
      v27 = *(unsigned __int16 *)RemoteMailbox.Attributes.nonExistent.unsafeMutableAddressor();
      if (!v26)
        break;
      if ((v27 & ~v26) != 0)
        goto LABEL_14;
LABEL_15:
      if ((v26 & v117) != 0)
        goto LABEL_24;
LABEL_16:
      if ((v88 & 1) != 0)
      {
        v28 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v29 = MailboxName.isInbox.getter(v28, v19);
        swift_bridgeObjectRelease();
        if ((v29 & 1) == 0 && ((v21 & 1) != 0 || (BYTE12(v154) & 1) == 0 && DWORD2(v154) >= v20))
        {
          if (!*(_QWORD *)(v90 + 16)
            || (v30 = sub_1A54FDC94(v18, *((uint64_t *)&v18 + 1)), (v31 & 1) == 0)
            || (~*(unsigned __int16 *)(*(_QWORD *)(v90 + 56) + 2 * v30) & 0x3FFF) == 0)
          {
LABEL_24:
            sub_1A54E31EC((uint64_t)&v148);
            swift_bridgeObjectRelease();
            v4 = v115;
            goto LABEL_25;
          }
        }
      }
      v132 = v156;
      v133 = v157;
      v134 = v158;
      v128 = v152;
      v129 = v153;
      v130 = v154;
      v131 = v155;
      v124 = v148;
      v125 = v149;
      v126 = v150;
      v127 = v151;
      v123[0] = v112;
      v135 = v25;
      v136 = v92;
      v137 = v94;
      v138 = v117;
      v139 = v96;
      v140 = v98;
      v141 = v100;
      v142 = v102;
      v143 = v104;
      v144 = v106;
      v145 = v109;
      v146 = v112;
      nullsub_1(&v124);
      sub_1A55032A0((uint64_t)&v124, (uint64_t)v147, &qword_1EE797CD8);
      sub_1A55032A0((uint64_t)v147, (uint64_t)&v124, &qword_1EE797CD8);
      v32 = v125;
      v33 = DWORD2(v125);
      if ((*(_QWORD *)(*((_QWORD *)&v132 + 1) + 16)
         || (BYTE8(v129) & 1) == 0 && ((BYTE12(v130) & 1) != 0 || DWORD2(v130) < DWORD1(v129)))
        && (static MailboxOfInterest.LocalModification.__derived_enum_equals(_:_:)(*((_QWORD *)&v128 + 1), v129, 0, 0) & 1) != 0)
      {
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A54F2A14((uint64_t)v123, v32, v33);
        swift_bridgeObjectRelease();
      }
      sub_1A552CD24((uint64_t)v147);
      v4 = v115;
      v8 = v86;
      if (v120 == v7)
      {
LABEL_34:
        sub_1A54F81BC((uint64_t)v162);
        sub_1A54F81BC((uint64_t)&v161);
        sub_1A54F81BC((uint64_t)&v160);
        sub_1A54F81BC((uint64_t)v162);
        sub_1A54F81BC((uint64_t)&v161);
        sub_1A54F81BC((uint64_t)&v160);
        return v159;
      }
    }
    if (!v27)
      goto LABEL_16;
LABEL_14:
    v26 |= v27;
    goto LABEL_15;
  }
  sub_1A552BE7C();
  if (!v1)
  {
    v34 = *v0;
    v35 = v0[1];
    v89 = *((_BYTE *)v0 + 16);
    v36 = v0[3];
    v161 = v35;
    v162[0] = v34;
    v91 = v36;
    v160 = v36;
    v159 = MEMORY[0x1E0DEE9E8];
    v37 = *(_QWORD *)(v34 + 16);
    sub_1A54FCA28((uint64_t)v162);
    sub_1A54FCA28((uint64_t)&v161);
    sub_1A54FCA28((uint64_t)&v160);
    sub_1A54FCA28((uint64_t)v162);
    sub_1A54FCA28((uint64_t)&v161);
    sub_1A54FCA28((uint64_t)&v160);
    v121 = v37;
    if (!v37)
    {
LABEL_64:
      sub_1A54F81BC((uint64_t)v162);
      sub_1A54F81BC((uint64_t)&v161);
LABEL_66:
      sub_1A54F81BC((uint64_t)&v160);
      sub_1A54F81BC((uint64_t)v162);
      sub_1A54F81BC((uint64_t)&v161);
      sub_1A54F81BC((uint64_t)&v160);
      v2 = v159;
      goto LABEL_67;
    }
    v38 = 0;
    v39 = v34 + 32;
    v85 = v34 + 32;
    v87 = v0;
    v116 = v35;
    while (2)
    {
      if (v38 >= v121)
        goto LABEL_91;
      for (j = (__int128 *)(v39 + 176 * v38++); ; j += 11)
      {
        v41 = *j;
        v42 = j[2];
        v149 = j[1];
        v150 = v42;
        v43 = j[3];
        v44 = j[4];
        v45 = j[6];
        v153 = j[5];
        v154 = v45;
        v151 = v43;
        v152 = v44;
        v46 = j[7];
        v47 = j[8];
        v48 = j[10];
        v157 = j[9];
        v158 = v48;
        v155 = v46;
        v156 = v47;
        v148 = v41;
        if (*(_QWORD *)(v35 + 16))
        {
          v49 = v148;
          v50 = DWORD2(v149);
          v51 = DWORD1(v153);
          v52 = BYTE8(v153);
          v53 = sub_1A54FDC30(v149, DWORD2(v149));
          if ((v54 & 1) != 0)
            break;
        }
LABEL_56:
        if (v121 == v38)
        {
          sub_1A54F81BC((uint64_t)v162);
          sub_1A54F81BC((uint64_t)&v161);
          v0 = v87;
          goto LABEL_66;
        }
        ++v38;
      }
      v55 = *(_QWORD *)(v35 + 56) + 72 * v53;
      v56 = *(_QWORD *)v55;
      v93 = *(_DWORD *)(v55 + 8);
      v95 = *(_BYTE *)(v55 + 12);
      v118 = *(unsigned __int16 *)(v55 + 14);
      v97 = *(_BYTE *)(v55 + 16);
      v99 = *(_QWORD *)(v55 + 24);
      v101 = *(_QWORD *)(v55 + 32);
      v103 = *(_QWORD *)(v55 + 40);
      v105 = *(_QWORD *)(v55 + 48);
      v107 = *(_QWORD *)(v55 + 56);
      v110 = *(_BYTE *)(v55 + 64);
      v113 = *(_BYTE *)(v55 + 65);
      sub_1A54E3150((uint64_t)&v148);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v57 = *(unsigned __int16 *)RemoteMailbox.Attributes.noSelect.unsafeMutableAddressor();
      v58 = *(unsigned __int16 *)RemoteMailbox.Attributes.nonExistent.unsafeMutableAddressor();
      if (v57)
      {
        if ((v58 & ~v57) == 0)
        {
LABEL_46:
          if ((v57 & v118) != 0)
          {
LABEL_55:
            sub_1A54E31EC((uint64_t)&v148);
            swift_bridgeObjectRelease();
            v35 = v116;
            goto LABEL_56;
          }
LABEL_47:
          if ((v89 & 1) == 0
            || (v59 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0(),
                v60 = MailboxName.isInbox.getter(v59, v50),
                swift_bridgeObjectRelease(),
                (v60 & 1) != 0)
            || (v52 & 1) == 0 && ((BYTE12(v154) & 1) != 0 || DWORD2(v154) < v51)
            || *(_QWORD *)(v91 + 16)
            && (v61 = sub_1A54FDC94(v49, *((uint64_t *)&v49 + 1)), (v62 & 1) != 0)
            && (~*(unsigned __int16 *)(*(_QWORD *)(v91 + 56) + 2 * v61) & 0x3FFF) != 0)
          {
            v132 = v156;
            v133 = v157;
            v134 = v158;
            v128 = v152;
            v129 = v153;
            v130 = v154;
            v131 = v155;
            v124 = v148;
            v125 = v149;
            v126 = v150;
            v127 = v151;
            v123[0] = v113;
            v135 = v56;
            v136 = v93;
            v137 = v95;
            v138 = v118;
            v139 = v97;
            v140 = v99;
            v141 = v101;
            v142 = v103;
            v143 = v105;
            v144 = v107;
            v145 = v110;
            v146 = v113;
            nullsub_1(&v124);
            sub_1A55032A0((uint64_t)&v124, (uint64_t)v147, &qword_1EE797CD8);
            sub_1A55032A0((uint64_t)v147, (uint64_t)&v124, &qword_1EE797CD8);
            if (*(_QWORD *)(*((_QWORD *)&v132 + 1) + 16))
            {
              v63 = v125;
              v64 = DWORD2(v125);
              if ((static MailboxOfInterest.LocalModification.__derived_enum_equals(_:_:)(*((_QWORD *)&v128 + 1), v129, 0, 0) & 1) != 0)
              {
                v65 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                v66 = MailboxName.isInbox.getter(v65, v64);
                swift_bridgeObjectRelease();
                if ((v66 & 1) == 0)
                  __asm { BR              X9 }
                _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                sub_1A54F2A14((uint64_t)v123, v63, v64);
                swift_bridgeObjectRelease();
              }
            }
            sub_1A552CD24((uint64_t)v147);
            v39 = v85;
            v0 = v87;
            v35 = v116;
            if (v121 == v38)
              goto LABEL_64;
            continue;
          }
          goto LABEL_55;
        }
      }
      else if (!v58)
      {
        goto LABEL_47;
      }
      break;
    }
    v57 |= v58;
    goto LABEL_46;
  }
  v2 = v1;
LABEL_67:
  v67 = v0[7];
  if (*(_QWORD *)(v2 + 16) >= v67)
  {
    ((void (*)(void))v0[5])();
    if (v67 < 0)
      goto LABEL_90;
    v70 = v68;
    v71 = v69;
    v147[0] = MEMORY[0x1E0DEE9D8];
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1A54F4AC0(0, 0, 0);
    v72 = v147[0];
    if (v67)
    {
      v73 = *(_QWORD *)(v71 + 16);
      if (v73)
      {
        v122 = v67;
        swift_retain();
        swift_retain();
        swift_retain();
        v74 = 0;
        v75 = v70 + 40;
        while (1)
        {
          v119 = v72;
          --v122;
          v76 = (unsigned int *)(v75 + 16 * v74);
          while (1)
          {
            if (v74 >= *(_QWORD *)(v70 + 16))
            {
              __break(1u);
LABEL_88:
              __break(1u);
LABEL_89:
              __break(1u);
LABEL_90:
              __break(1u);
LABEL_91:
              __break(1u);
              JUMPOUT(0x1A552BD5CLL);
            }
            if (v74 >= *(_QWORD *)(v71 + 16))
              goto LABEL_88;
            if ((~*(_DWORD *)(v71 + 32 + 4 * v74) & 0x6FFFC000) != 0)
            {
              v77 = *((_QWORD *)v76 - 1);
              v78 = *v76;
              v79 = v75;
              v80 = sub_1A54E9E54(v77, *v76, v2);
              v75 = v79;
              if ((v80 & 1) != 0)
                break;
            }
            ++v74;
            v76 += 4;
            if ((uint64_t)v74 >= v73)
            {
              v72 = v119;
              goto LABEL_84;
            }
          }
          v72 = v119;
          v147[0] = v119;
          v108 = *(_QWORD *)(v119 + 24);
          v111 = *(_QWORD *)(v119 + 16) + 1;
          v114 = *(_QWORD *)(v119 + 16);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v81 = v114;
          if (v114 >= v108 >> 1)
          {
            sub_1A54F4AC0(v108 > 1, v111, 1);
            v81 = v114;
            v72 = v147[0];
          }
          *(_QWORD *)(v72 + 16) = v111;
          v82 = v72 + 16 * v81;
          *(_QWORD *)(v82 + 32) = v77;
          *(_DWORD *)(v82 + 40) = v78;
          if (v122)
          {
            v75 = v79;
            if ((uint64_t)++v74 < v73)
              continue;
          }
LABEL_84:
          swift_release();
          swift_release();
          swift_release();
          break;
        }
      }
    }
    swift_release();
    swift_release();
    swift_release();
    v83 = sub_1A55522E8(v72);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return v83;
  }
  return v2;
}

uint64_t sub_1A552BD7C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v17 = *(_QWORD *)(a1 + 152);
  v18 = *(_QWORD *)(a1 + 144);
  v16 = *(_QWORD *)(a1 + 160);
  v19 = *(_QWORD *)(a1 + 184);
  v15 = *(_BYTE *)(a1 + 168) & 1;
  v2 = *(_QWORD *)(a1 + 96);
  v3 = sub_1A5544FE8();
  v4 = *(_BYTE *)(a1 + 17);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_BYTE *)(a1 + 10);
  v8 = *(_QWORD *)(a1 + 40);
  v7 = *(_QWORD *)(a1 + 48);
  v9 = *(_BYTE *)(a1 + 32);
  v10 = *(unsigned __int8 *)(a1 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v11 = sub_1A558E3A4();
  v12 = sub_1A558E7E0(v10, v4 & 1, v5, v9, v8, v6, v7, v11);
  v13 = sub_1A5525B50(v18, v17, v16, v15, v2, v3, BYTE4(v12) & 1, v19);
  swift_bridgeObjectRelease();
  return v13;
}

void sub_1A552BE7C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  __int128 *v8;
  unint64_t i;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  unsigned int v20;
  char v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  int v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  int v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  int64_t v63;
  int64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  char v68;
  int64_t v69;
  unint64_t v70;
  int64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  int64_t v85;
  int64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  char v90;
  int64_t v91;
  unint64_t v92;
  uint64_t v93;
  int64_t v94;
  char v95;
  unint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  char v104;
  unsigned int v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  int v109;
  uint64_t v110;
  unsigned int v111;
  unint64_t v112;
  uint64_t v113;
  unsigned int v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  int v118;
  char v119;
  uint64_t v120;
  int v121;
  uint64_t v122;
  char v123;
  unsigned int v124;
  char v125;
  char v126;
  uint64_t v127;
  char v128;
  __int128 v129;
  uint64_t v130;
  unsigned int v131;
  __int128 v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  char v136;
  unint64_t v137;
  char v138;
  int v139;
  uint64_t v140;
  unint64_t v141;
  unint64_t v142;
  _QWORD __src[55];
  _OWORD __dst[28];
  _QWORD v145[2];
  uint64_t v146;
  unsigned int v147;
  int v148;
  char v149;
  uint64_t v150;
  char v151;
  uint64_t v152;
  char v153;
  uint64_t v154;
  unsigned int v155;
  int v156;
  char v157;
  uint64_t v158;
  unsigned int v159;
  char v160;
  int v161;
  unint64_t v162;
  char v163;
  uint64_t v164;
  int v165;
  uint64_t v166;
  char v167;
  char v168;
  _BYTE v169[248];
  __int128 v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  _QWORD v184[4];
  unsigned int v185;
  int v186;
  char v187;
  uint64_t v188;
  char v189;
  uint64_t v190;
  char v191;
  uint64_t v192;
  unsigned int v193;
  int v194;
  char v195;

  v1 = *v0;
  v2 = v0[1];
  v119 = *((_BYTE *)v0 + 16);
  v3 = v0[3];
  v183 = v2;
  v184[0] = v1;
  v120 = v3;
  v182 = v3;
  v181 = MEMORY[0x1E0DEE9E8];
  v4 = *(_QWORD *)(v1 + 16);
  sub_1A54FCA28((uint64_t)v184);
  sub_1A54FCA28((uint64_t)&v183);
  sub_1A54FCA28((uint64_t)&v182);
  sub_1A54FCA28((uint64_t)v184);
  sub_1A54FCA28((uint64_t)&v183);
  sub_1A54FCA28((uint64_t)&v182);
  if (!v4)
  {
    LOBYTE(v6) = 0;
    goto LABEL_127;
  }
  v5 = 0;
  v6 = 0;
  v7 = v1 + 32;
  v140 = v2;
  v141 = v4;
  v116 = v1 + 32;
  while (v5 < v4)
  {
    v118 = v6;
    v8 = (__int128 *)(v7 + 176 * v5);
    for (i = v5 + 1; ; ++i)
    {
      v10 = *v8;
      v11 = v8[1];
      v172 = v8[2];
      v171 = v11;
      v12 = v8[3];
      v13 = v8[4];
      v14 = v8[5];
      v176 = v8[6];
      v175 = v14;
      v174 = v13;
      v173 = v12;
      v15 = v8[7];
      v16 = v8[8];
      v17 = v8[9];
      v180 = v8[10];
      v179 = v17;
      v178 = v16;
      v177 = v15;
      v170 = v10;
      if (*(_QWORD *)(v2 + 16))
      {
        v18 = v170;
        v19 = DWORD2(v171);
        v20 = DWORD1(v175);
        v21 = BYTE8(v175);
        v142 = i;
        v22 = sub_1A54FDC30(v171, DWORD2(v171));
        i = v142;
        if ((v23 & 1) != 0)
          break;
      }
LABEL_22:
      if (v4 == i)
      {
        sub_1A54F81BC((uint64_t)v184);
        sub_1A54F81BC((uint64_t)&v183);
        LOBYTE(v6) = v118;
LABEL_128:
        sub_1A54F81BC((uint64_t)&v182);
        sub_1A54F81BC((uint64_t)v184);
        sub_1A54F81BC((uint64_t)&v183);
        sub_1A54F81BC((uint64_t)&v182);
        if ((v6 & 1) == 0)
          swift_bridgeObjectRelease();
        return;
      }
      v8 += 11;
    }
    v24 = *(_QWORD *)(v2 + 56) + 72 * v22;
    v25 = *(_QWORD *)v24;
    v121 = *(_DWORD *)(v24 + 8);
    v26 = *(unsigned __int16 *)(v24 + 14);
    v123 = *(_BYTE *)(v24 + 12);
    v125 = *(_BYTE *)(v24 + 16);
    v127 = *(_QWORD *)(v24 + 24);
    v129 = *(_OWORD *)(v24 + 32);
    v132 = *(_OWORD *)(v24 + 48);
    v136 = *(_BYTE *)(v24 + 64);
    v138 = *(_BYTE *)(v24 + 65);
    sub_1A54E3150((uint64_t)&v170);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v27 = *(unsigned __int16 *)RemoteMailbox.Attributes.noSelect.unsafeMutableAddressor();
    v28 = *(unsigned __int16 *)RemoteMailbox.Attributes.nonExistent.unsafeMutableAddressor();
    if (!v27)
    {
      if (!v28)
        goto LABEL_13;
LABEL_11:
      v27 |= v28;
      goto LABEL_12;
    }
    if ((v28 & ~v27) != 0)
      goto LABEL_11;
LABEL_12:
    if ((v27 & v26) != 0)
      goto LABEL_21;
LABEL_13:
    if ((v119 & 1) != 0)
    {
      v29 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v30 = MailboxName.isInbox.getter(v29, v19);
      swift_bridgeObjectRelease();
      if ((v30 & 1) == 0 && ((v21 & 1) != 0 || (BYTE12(v176) & 1) == 0 && DWORD2(v176) >= v20))
      {
        if (!*(_QWORD *)(v120 + 16)
          || (v31 = sub_1A54FDC94(v18, *((uint64_t *)&v18 + 1)), (v32 & 1) == 0)
          || (~*(unsigned __int16 *)(*(_QWORD *)(v120 + 56) + 2 * v31) & 0x3FFF) == 0)
        {
LABEL_21:
          sub_1A54E31EC((uint64_t)&v170);
          swift_bridgeObjectRelease();
          v2 = v140;
          v4 = v141;
          i = v142;
          goto LABEL_22;
        }
      }
    }
    __dst[8] = v178;
    __dst[9] = v179;
    __dst[10] = v180;
    __dst[4] = v174;
    __dst[5] = v175;
    __dst[6] = v176;
    __dst[7] = v177;
    __dst[0] = v170;
    __dst[1] = v171;
    __dst[2] = v172;
    __dst[3] = v173;
    LOBYTE(__src[0]) = v138;
    *(_QWORD *)&__dst[11] = v25;
    DWORD2(__dst[11]) = v121;
    BYTE12(__dst[11]) = v123;
    HIWORD(__dst[11]) = v26;
    LOBYTE(__dst[12]) = v125;
    *((_QWORD *)&__dst[12] + 1) = v127;
    __dst[13] = v129;
    __dst[14] = v132;
    LOBYTE(__dst[15]) = v136;
    BYTE1(__dst[15]) = v138;
    nullsub_1(__dst);
    sub_1A55032A0((uint64_t)__dst, (uint64_t)v169, &qword_1EE797CD8);
    sub_1A55032A0((uint64_t)v169, (uint64_t)v145, &qword_1EE797CD8);
    v34 = v164;
    v4 = v141;
    v6 = v118;
    if (!*(_QWORD *)(v164 + 16))
    {
      sub_1A552CD24((uint64_t)v169);
      v2 = v140;
      goto LABEL_75;
    }
    v2 = v140;
    if ((v168 & 1) != 0 || (v167 & 1) != 0)
    {
      sub_1A552CD24((uint64_t)v169);
      goto LABEL_75;
    }
    __src[0] = v166;
    UIDValidityWith.init(uidValidity:value:)(v165, (uint64_t)__src, (uint64_t)&type metadata for ModificationSequenceValue, v33, __dst);
    v139 = __dst[0];
    v137 = *((_QWORD *)&__dst[0] + 1);
    v35 = v146;
    v36 = v147;
    v37 = v154;
    v38 = v155;
    LODWORD(v39) = v156;
    v40 = v157;
    v184[1] = v145[0];
    v184[2] = v145[1];
    v184[3] = v146;
    v185 = v147;
    v186 = v148;
    v187 = v149;
    v188 = v150;
    v189 = v151;
    v190 = v152;
    v191 = v153;
    v192 = v154;
    v193 = v155;
    v194 = v156;
    v195 = v157;
    MailboxOfInterest.highestModificationSequenceValue.getter();
    if ((v41 & 1) != 0)
      goto LABEL_74;
    v42 = *(unsigned __int8 *)(v117 + 33);
    if (!*(_QWORD *)(v34 + 16) && ((v40 & 1) != 0 || (v160 & 1) == 0 && v159 >= v39))
      goto LABEL_74;
    if ((static MailboxOfInterest.LocalModification.__derived_enum_equals(_:_:)(v37, v38, 0, 0) & 1) == 0)
      goto LABEL_74;
    v43 = v158;
    if (!v158)
      goto LABEL_85;
    v105 = v39;
    v109 = v42;
    swift_beginAccess();
    sub_1A54E30E0(v43 + 24, (uint64_t)__src);
    memcpy(__dst, __src, 0x1B5uLL);
    v44 = __dst[15];
    v124 = __dst[16];
    v126 = BYTE4(__dst[16]);
    v133 = *((_QWORD *)&__dst[16] + 1);
    v130 = *(_QWORD *)&__dst[17];
    v45 = DWORD2(__dst[17]);
    v46 = BYTE12(__dst[17]);
    v47 = *(_QWORD *)&__dst[18];
    v114 = DWORD2(__dst[18]);
    v115 = BYTE12(__dst[18]);
    v48 = *((_QWORD *)&__dst[21] + 1);
    v49 = *((_QWORD *)&__dst[21] + 1);
    v108 = *(_QWORD *)&__dst[22];
    v50 = *(_QWORD *)&__dst[22];
    v103 = *(_QWORD *)&__dst[22] & 0xFF00000000;
    v122 = *((_QWORD *)&__dst[21] + 1);
    if ((*(_QWORD *)&__dst[22] & 0xFF00000000) == 0xFF00000000)
    {
      v51 = sub_1A54E3414();
      v49 = MessageIdentifierSet.init()(&type metadata for UID, v51);
      v48 = v122;
    }
    v134 = v49;
    v131 = v36;
    v104 = v40;
    v113 = v47;
    v128 = v46;
    v111 = v45;
    v106 = HIDWORD(v50);
    v107 = v50;
    if (v42 == 1)
    {
      v99 = *(_QWORD *)(v44 + 16);
      v52 = v108;
      v53 = v48;
      sub_1A550F858(v48, v108);
      sub_1A550F858(v53, v108);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v54 = *((_QWORD *)&v44 + 1);
      sub_1A54E4334(*((uint64_t *)&v44 + 1), v124, v126);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A54E4334(v130, v45, v128);
      v55 = v114;
      v56 = v115;
      sub_1A54E4334(v47, v114, v115);
      v57 = v122;
      sub_1A54E3458(v134, v107, v106);
      goto LABEL_43;
    }
    v58 = v50;
    sub_1A54E3414();
    v102 = v102 & 0xFFFFFF0000000000 | v58 & 0xFFFFFFFFFFLL;
    if (!MessageIdentifierSet.isEmpty.getter(v134, v102))
    {
      v100 = v35;
      v59 = v44 + 64;
      v60 = 1 << *(_BYTE *)(v44 + 32);
      v97 = v60;
      if (v60 < 64)
        v61 = ~(-1 << v60);
      else
        v61 = -1;
      v62 = v61 & *(_QWORD *)(v44 + 64);
      sub_1A550F858(v122, v108);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A550F858(v122, v108);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A54E4334(*((uint64_t *)&v44 + 1), v124, v126);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A54E4334(v130, v45, v46);
      sub_1A54E4334(v113, v114, v115);
      v63 = (unint64_t)(v97 + 63) >> 6;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v64 = 0;
      v65 = v96;
      do
      {
        if (v62)
        {
          v66 = __clz(__rbit64(v62));
          v62 &= v62 - 1;
          v67 = v66 | (v64 << 6);
        }
        else
        {
          v69 = v64 + 1;
          if (__OFADD__(v64, 1))
            goto LABEL_132;
          v36 = v131;
          if (v69 >= v63)
          {
LABEL_77:
            v96 = v65;
            swift_release();
            swift_bridgeObjectRelease();
            sub_1A54E3458(v134, v107, v106);
            v2 = v140;
            v4 = v141;
            v35 = v100;
            v57 = v122;
            v52 = v108;
            goto LABEL_78;
          }
          v70 = *(_QWORD *)(v59 + 8 * v69);
          ++v64;
          if (!v70)
          {
            v64 = v69 + 1;
            if (v69 + 1 >= v63)
              goto LABEL_77;
            v70 = *(_QWORD *)(v59 + 8 * v64);
            if (!v70)
            {
              v64 = v69 + 2;
              if (v69 + 2 >= v63)
                goto LABEL_77;
              v70 = *(_QWORD *)(v59 + 8 * v64);
              if (!v70)
              {
                v64 = v69 + 3;
                if (v69 + 3 >= v63)
                  goto LABEL_77;
                v70 = *(_QWORD *)(v59 + 8 * v64);
                if (!v70)
                {
                  v64 = v69 + 4;
                  if (v69 + 4 >= v63)
                    goto LABEL_77;
                  v70 = *(_QWORD *)(v59 + 8 * v64);
                  if (!v70)
                  {
                    v71 = v69 + 5;
                    if (v71 >= v63)
                      goto LABEL_77;
                    v70 = *(_QWORD *)(v59 + 8 * v71);
                    if (!v70)
                    {
                      v36 = v131;
                      while (1)
                      {
                        v64 = v71 + 1;
                        if (__OFADD__(v71, 1))
                          goto LABEL_134;
                        if (v64 >= v63)
                          goto LABEL_77;
                        v70 = *(_QWORD *)(v59 + 8 * v64);
                        ++v71;
                        if (v70)
                          goto LABEL_70;
                      }
                    }
                    v64 = v71;
                  }
                }
              }
            }
          }
LABEL_70:
          v62 = (v70 - 1) & v70;
          v67 = __clz(__rbit64(v70)) + (v64 << 6);
        }
        LODWORD(__src[0]) = *(_DWORD *)(*(_QWORD *)(v44 + 48) + 4 * v67);
        v65 = v58 & 0xFFFFFFFFFFLL | v65 & 0xFFFFFF0000000000;
        MessageIdentifierSet.contains(_:)((uint64_t)__src, v134, v65);
      }
      while ((v68 & 1) == 0);
      v96 = v65;
      swift_release();
      swift_bridgeObjectRelease();
      sub_1A54E3458(v134, v107, v106);
      v2 = v140;
      v4 = v141;
      v35 = v100;
      v36 = v131;
      v55 = v114;
      v56 = v115;
      v47 = v113;
      v54 = *((_QWORD *)&v44 + 1);
      v57 = v122;
      v52 = v108;
LABEL_72:
      sub_1A550F870(v57, v52);
      swift_bridgeObjectRelease();
      sub_1A54E3458(v54, v124, v126);
      swift_bridgeObjectRelease();
      sub_1A54E3458(v130, v111, v128);
      sub_1A54E3458(v47, v55, v56);
      sub_1A54E311C((uint64_t)__dst);
      goto LABEL_73;
    }
    v99 = *(_QWORD *)(v44 + 16);
    v57 = v122;
    v52 = v108;
    sub_1A550F858(v122, v108);
    sub_1A550F858(v122, v108);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v54 = *((_QWORD *)&v44 + 1);
    sub_1A54E4334(*((uint64_t *)&v44 + 1), v124, v126);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54E4334(v130, v45, v46);
    v55 = v114;
    v56 = v115;
    sub_1A54E4334(v47, v114, v115);
    sub_1A54E3458(v134, v107, v106);
    v4 = v141;
LABEL_43:
    if (v99)
      goto LABEL_72;
LABEL_78:
    v72 = v57;
    v73 = v52;
    v39 = v105;
    if (v103 == 0xFF00000000)
    {
      v74 = sub_1A54E3414();
      v72 = MessageIdentifierSet.init()(&type metadata for UID, v74);
    }
    v75 = v98;
    v40 = v104;
    if (!v109)
    {
      sub_1A54E3458(v44, v73, SBYTE4(v73));
      swift_bridgeObjectRelease();
      sub_1A54E3458(*((uint64_t *)&v44 + 1), v124, v126);
      swift_bridgeObjectRelease();
      sub_1A54E3458(v130, v111, v128);
      sub_1A54E3458(v113, v114, v115);
      sub_1A54E311C((uint64_t)__dst);
      goto LABEL_85;
    }
    if (v109 == 1)
    {
      v76 = *(_QWORD *)(v133 + 16);
      sub_1A54E3458(v44, v73, SBYTE4(v73));
      swift_bridgeObjectRelease();
      sub_1A54E3458(*((uint64_t *)&v44 + 1), v124, v126);
      swift_bridgeObjectRelease();
      sub_1A54E3458(v130, v111, v128);
      sub_1A54E3458(v113, v114, v115);
      sub_1A54E311C((uint64_t)__dst);
      if (!v76)
        goto LABEL_85;
      goto LABEL_73;
    }
    v135 = HIDWORD(v73);
    v77 = v73;
    sub_1A54E3414();
    v98 = v98 & 0xFFFFFF0000000000 | v77 & 0xFFFFFFFFFFLL;
    if (MessageIdentifierSet.isEmpty.getter(v72, v75 & 0xFFFFFF0000000000 | v77 & 0xFFFFFFFFFFLL))
    {
      v78 = *(_QWORD *)(v133 + 16);
      sub_1A54E3458(v44, v77, v135);
      swift_bridgeObjectRelease();
      sub_1A54E3458(*((uint64_t *)&v44 + 1), v124, v126);
      swift_bridgeObjectRelease();
      sub_1A54E3458(v130, v111, v128);
      sub_1A54E3458(v113, v114, v115);
      sub_1A54E311C((uint64_t)__dst);
      v4 = v141;
      if (!v78)
        goto LABEL_85;
      goto LABEL_73;
    }
    v101 = v35;
    v110 = v77;
    v79 = v77 & 0xFFFFFFFFFFLL;
    v80 = v133;
    v81 = v133 + 64;
    v82 = 1 << *(_BYTE *)(v133 + 32);
    if (v82 < 64)
      v83 = ~(-1 << v82);
    else
      v83 = -1;
    v84 = v83 & *(_QWORD *)(v133 + 64);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A550F858(v122, v108);
    v85 = (unint64_t)(v82 + 63) >> 6;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v86 = 0;
    while (2)
    {
      if (v84)
      {
        v87 = __clz(__rbit64(v84));
        v84 &= v84 - 1;
        v88 = v87 | (v86 << 6);
        v89 = v112;
        goto LABEL_100;
      }
      v91 = v86 + 1;
      v89 = v112;
      if (__OFADD__(v86, 1))
        goto LABEL_133;
      if (v91 >= v85)
      {
LABEL_121:
        swift_release();
        swift_bridgeObjectRelease();
        v95 = 0;
        goto LABEL_122;
      }
      v92 = *(_QWORD *)(v81 + 8 * v91);
      ++v86;
      if (v92)
        goto LABEL_119;
      v86 = v91 + 1;
      if (v91 + 1 >= v85)
        goto LABEL_121;
      v92 = *(_QWORD *)(v81 + 8 * v86);
      if (v92)
        goto LABEL_119;
      v86 = v91 + 2;
      if (v91 + 2 >= v85)
        goto LABEL_121;
      v92 = *(_QWORD *)(v81 + 8 * v86);
      if (v92)
        goto LABEL_119;
      v86 = v91 + 3;
      if (v91 + 3 >= v85)
        goto LABEL_121;
      v92 = *(_QWORD *)(v81 + 8 * v86);
      if (v92)
        goto LABEL_119;
      v93 = v39;
      v86 = v91 + 4;
      if (v91 + 4 >= v85)
        goto LABEL_124;
      v92 = *(_QWORD *)(v81 + 8 * v86);
      v89 = v112;
      v40 = v104;
      if (v92)
      {
LABEL_119:
        v84 = (v92 - 1) & v92;
        v88 = __clz(__rbit64(v92)) + (v86 << 6);
        v80 = v133;
LABEL_100:
        LODWORD(__src[0]) = *(_DWORD *)(*(_QWORD *)(v80 + 48) + 4 * v88);
        v112 = v79 | v89 & 0xFFFFFF0000000000;
        MessageIdentifierSet.contains(_:)((uint64_t)__src, v72, v112);
        if ((v90 & 1) != 0)
        {
          swift_release();
          swift_bridgeObjectRelease();
          v95 = 1;
          goto LABEL_122;
        }
        continue;
      }
      break;
    }
    v94 = v91 + 5;
    if (v94 < v85)
    {
      v92 = *(_QWORD *)(v81 + 8 * v94);
      if (!v92)
      {
        while (1)
        {
          v86 = v94 + 1;
          if (__OFADD__(v94, 1))
            goto LABEL_135;
          if (v86 >= v85)
            goto LABEL_124;
          v92 = *(_QWORD *)(v81 + 8 * v86);
          ++v94;
          v89 = v112;
          v39 = v93;
          v40 = v104;
          if (v92)
            goto LABEL_119;
        }
      }
      v86 = v94;
      v89 = v112;
      v40 = v104;
      goto LABEL_119;
    }
LABEL_124:
    swift_release();
    swift_bridgeObjectRelease();
    v95 = 0;
    LODWORD(v39) = v93;
    v40 = v104;
LABEL_122:
    sub_1A54E3458(v44, v110, v135);
    sub_1A550F870(v122, v108);
    swift_bridgeObjectRelease();
    sub_1A54E3458(*((uint64_t *)&v44 + 1), v124, v126);
    swift_bridgeObjectRelease();
    sub_1A54E3458(v130, v111, v128);
    sub_1A54E3458(v113, v114, v115);
    sub_1A54E311C((uint64_t)__dst);
    v2 = v140;
    v4 = v141;
    v35 = v101;
    v36 = v131;
    if ((v95 & 1) != 0)
      goto LABEL_73;
LABEL_85:
    if ((v40 & 1) == 0 && ((v160 & 1) != 0 || v159 < v39)
      || (v163 & 1) != 0
      || v139 != v161
      || v162 < v137)
    {
LABEL_73:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A54F2A14((uint64_t)__dst, v35, v36);
      swift_bridgeObjectRelease();
    }
LABEL_74:
    sub_1A552CD24((uint64_t)v169);
    v6 = 1;
LABEL_75:
    v5 = v142;
    v7 = v116;
    if (v4 == v142)
    {
LABEL_127:
      sub_1A54F81BC((uint64_t)v184);
      sub_1A54F81BC((uint64_t)&v183);
      goto LABEL_128;
    }
  }
  __break(1u);
LABEL_132:
  __break(1u);
LABEL_133:
  __break(1u);
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
}

uint64_t sub_1A552CD24(uint64_t a1)
{
  sub_1A552CD9C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72));
  return a1;
}

uint64_t sub_1A552CD9C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A54E3278(a10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1A552CE30()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 136))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1A54E8FCC(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_BYTE *)(v0 + 184));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A552CEA8()
{
  uint64_t v0;

  return sub_1A552BD7C(v0 + 16);
}

uint64_t sub_1A552CEB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v2 = *(_QWORD *)(a1 + 120);
  v3 = *(_QWORD *)(a1 + 144);
  v4 = *(_QWORD *)(a1 + 152);
  v5 = *(_QWORD *)(a1 + 160);
  v6 = *(_BYTE *)(a1 + 168);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A552CF80(v2);
  sub_1A55212D0(v3, v4, v5, v6);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t sub_1A552CF80(uint64_t result)
{
  if (result)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return result;
}

uint64_t destroy for MessageBatches(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 28) != 255)
  {
    v3 = *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int8 *)(a1 + 28) << 32);
    return sub_1A54E3458(*(_QWORD *)(a1 + 16), v3, SBYTE4(v3));
  }
  return result;
}

uint64_t initializeWithCopy for MessageBatches(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t *v4;
  unsigned __int8 v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = (uint64_t *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 28);
  v6 = *(unsigned int *)(a2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v5 == 255)
  {
    *(_QWORD *)(a1 + 16) = *v4;
    *(_QWORD *)(a1 + 21) = *(uint64_t *)((char *)v4 + 5);
  }
  else
  {
    v7 = v6 & 0xFFFFFF00FFFFFFFFLL | ((unint64_t)v5 << 32);
    v8 = *v4;
    sub_1A54E4334(v8, v7, SBYTE4(v7));
    *(_QWORD *)(a1 + 16) = v8;
    *(_DWORD *)(a1 + 24) = v7;
    *(_BYTE *)(a1 + 28) = BYTE4(v7);
  }
  return a1;
}

uint64_t assignWithCopy for MessageBatches(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = (uint64_t *)(a1 + 16);
  v5 = (uint64_t *)(a2 + 16);
  v6 = *(unsigned int *)(a2 + 24) | ((unint64_t)*(unsigned __int8 *)(a2 + 28) << 32);
  if (*(unsigned __int8 *)(a1 + 28) == 255)
  {
    if (BYTE4(v6) == 255)
    {
      v7 = *v5;
      *(_QWORD *)(a1 + 21) = *(uint64_t *)((char *)v5 + 5);
      *v4 = v7;
    }
    else
    {
      v9 = *v5;
      sub_1A54E4334(*v5, v6, SBYTE4(v6));
      *(_QWORD *)(a1 + 16) = v9;
      *(_DWORD *)(a1 + 24) = v6;
      *(_BYTE *)(a1 + 28) = BYTE4(v6);
    }
  }
  else if (BYTE4(v6) == 255)
  {
    sub_1A552AB80(a1 + 16);
    v8 = *(uint64_t *)((char *)v5 + 5);
    *v4 = *v5;
    *(_QWORD *)(a1 + 21) = v8;
  }
  else
  {
    v10 = *v5;
    sub_1A54E4334(*v5, v6, SBYTE4(v6));
    v11 = *(_QWORD *)(a1 + 16);
    v12 = *(unsigned int *)(a1 + 24);
    *(_QWORD *)(a1 + 16) = v10;
    *(_DWORD *)(a1 + 24) = v6;
    v13 = *(_BYTE *)(a1 + 28);
    *(_BYTE *)(a1 + 28) = BYTE4(v6);
    sub_1A54E3458(v11, v12, v13);
  }
  return a1;
}

__n128 __swift_memcpy29_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for MessageBatches(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  unsigned __int8 v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = (_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a1 + 28);
  if (v6 != 255)
  {
    v7 = *(unsigned int *)(a2 + 24) | ((unint64_t)*(unsigned __int8 *)(a2 + 28) << 32);
    if (HIDWORD(v7) <= 0xFE)
    {
      v8 = *(unsigned int *)(a1 + 24);
      v9 = *(_QWORD *)(a1 + 16);
      *(_QWORD *)(a1 + 16) = *v5;
      *(_DWORD *)(a1 + 24) = v7;
      *(_BYTE *)(a1 + 28) = BYTE4(v7);
      sub_1A54E3458(v9, v8, v6);
      return a1;
    }
    sub_1A552AB80(a1 + 16);
  }
  *(_QWORD *)(a1 + 16) = *v5;
  *(_QWORD *)(a1 + 21) = *(_QWORD *)(a2 + 21);
  return a1;
}

uint64_t getEnumTagSinglePayload for MessageBatches(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 29))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MessageBatches(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 28) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 29) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 29) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageBatches()
{
  return &type metadata for MessageBatches;
}

uint64_t sub_1A552D2F4(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1A54F4BD8(0, v1, 0);
    v2 = v9;
    v4 = a1 + 32;
    do
    {
      swift_getKeyPath();
      swift_getAtKeyPath();
      swift_release();
      v6 = *(_QWORD *)(v9 + 16);
      v5 = *(_QWORD *)(v9 + 24);
      if (v6 >= v5 >> 1)
        sub_1A54F4BD8(v5 > 1, v6 + 1, 1);
      *(_QWORD *)(v9 + 16) = v6 + 1;
      *(_QWORD *)(v9 + 8 * v6 + 32) = v8;
      v4 += 8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

BOOL sub_1A552D3FC(uint64_t a1, uint64_t a2)
{
  return sub_1A552E474(*(_QWORD *)a1, *(int32x2_t **)(a1 + 8), *(int32x2_t **)(a1 + 16), *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int8 *)(a1 + 28) << 32), *(_QWORD *)a2, *(int32x2_t **)(a2 + 8), *(int32x2_t **)(a2 + 16), *(unsigned int *)(a2 + 24) | ((unint64_t)*(unsigned __int8 *)(a2 + 28) << 32));
}

uint64_t sub_1A552D430(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;

  v1 = 4507;
  if (result < 4507)
    v1 = result;
  if (v1 <= 1000)
    v2 = 1000;
  else
    v2 = v1;
LABEL_7:
  v3 = v2;
  if (v2 >= 0)
    v4 = v2;
  else
    v4 = v2 + 1;
  v5 = v4 >> 1;
  if (((v4 >> 1) & 1) != 0)
  {
    v7 = 1;
    v9 = 1;
    if ((unint64_t)(v2 + 1) < 3)
      goto LABEL_19;
LABEL_41:
    v9 = 1;
    v16 = 31;
    while (1)
    {
      if ((v5 & 1) != 0)
      {
        v18 = v9 * v16;
        if ((unsigned __int128)(v9 * (__int128)v16) >> 64 != (v9 * v16) >> 63)
          goto LABEL_59;
        if (v2 == -1 && v18 == 0x8000000000000000)
          goto LABEL_60;
        v9 = v18 % v2;
      }
      v19 = v16 * v16;
      if ((unsigned __int128)(v16 * (__int128)v16) >> 64 != (v16 * v16) >> 63)
        goto LABEL_56;
      if (v2 == -1 && v19 == 0x8000000000000000)
        break;
      v16 = v19 % v2;
      v17 = (unint64_t)v5 >= 2;
      v5 >>= 1;
      if (!v17)
        goto LABEL_16;
    }
    __break(1u);
    goto LABEL_53;
  }
  v6 = 1;
  do
  {
    v7 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
      goto LABEL_62;
    }
    v8 = v5;
    v5 /= 2;
    ++v6;
  }
  while ((v5 & 1) == 0);
  if ((unint64_t)(v8 + 1) >= 3)
  {
    if (!v2)
      goto LABEL_64;
    goto LABEL_41;
  }
  v9 = 1;
LABEL_16:
  if (v7 < 1)
  {
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
LABEL_19:
  if (v2)
  {
    --v2;
    v10 = __OFSUB__(v3, 1);
    v11 = 1;
    while (1)
    {
      v12 = v9 * v9;
      if ((unsigned __int128)(v9 * (__int128)v9) >> 64 != (v9 * v9) >> 63)
        break;
      if (v3 == -1 && v12 == 0x8000000000000000)
        goto LABEL_57;
      v13 = v12 % v3;
      if (v13 == 1 && v9 != 1)
      {
        if (v10)
          goto LABEL_58;
        if (v9 != v2)
          goto LABEL_6;
      }
      if (v7 == v11)
      {
        if (v13 == 1)
        {
          result = sub_1A552D6A4(73, v3);
          if ((result & 1) == 0)
            return v3;
        }
LABEL_6:
        if (v3 == 0x8000000000000000)
          goto LABEL_61;
        goto LABEL_7;
      }
      v9 = v13;
      if (__OFADD__(v11++, 1))
      {
        __break(1u);
        goto LABEL_55;
      }
    }
LABEL_53:
    __break(1u);
    return v3;
  }
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
  return result;
}

uint64_t sub_1A552D614(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  BOOL v8;

  if (!a2)
    return 1;
  if (a3)
  {
    v3 = result;
    result = 1;
    while (1)
    {
      if ((a2 & 1) != 0)
      {
        v4 = result * v3;
        if ((unsigned __int128)(result * (__int128)v3) >> 64 != (result * v3) >> 63)
          goto LABEL_20;
        if (v4 == 0x8000000000000000 && a3 == -1)
          goto LABEL_22;
        result = v4 % a3;
      }
      v6 = v3 * v3;
      if ((unsigned __int128)(v3 * (__int128)v3) >> 64 != (v3 * v3) >> 63)
        break;
      if (v6 == 0x8000000000000000 && a3 == -1)
        goto LABEL_21;
      v3 = v6 % a3;
      v8 = (unint64_t)a2 > 1;
      a2 >>= 1;
      if (!v8)
        return result;
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A552D6A4(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  BOOL v13;

  if (a2 >= 0)
    v3 = a2;
  else
    v3 = a2 + 1;
  v4 = v3 >> 1;
  if (((v3 >> 1) & 1) == 0)
  {
    v5 = 1;
    while (1)
    {
      v6 = v5 + 1;
      if (__OFADD__(v5, 1))
        goto LABEL_35;
      if (v4 >= 0)
        v7 = v4;
      else
        v7 = v4 + 1;
      v4 = v7 >> 1;
      ++v5;
      if (((v7 >> 1) & 1) != 0)
      {
        result = sub_1A552D614(result, v4, a2);
        if (v6 >= 1)
          goto LABEL_14;
        __break(1u);
        break;
      }
    }
  }
  result = sub_1A552D614(result, v4, a2);
  v6 = 1;
LABEL_14:
  if (a2)
  {
    v8 = __OFSUB__(a2, 1);
    v9 = 1;
    while (1)
    {
      v10 = result * result;
      if ((unsigned __int128)(result * (__int128)result) >> 64 != (result * result) >> 63)
        break;
      if (a2 == -1 && v10 == 0x8000000000000000)
        goto LABEL_36;
      v11 = v10 % a2;
      v13 = v10 % a2 == 1;
      v12 = v10 % a2 != 1;
      v13 = !v13 || result == 1;
      if (!v13)
      {
        if (v8)
          goto LABEL_37;
        if (result != a2 - 1)
          return 1;
      }
      if (v6 == v9)
        return v12;
      result = v11;
      if (__OFADD__(v9++, 1))
      {
        __break(1u);
        return 1;
      }
    }
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A552D7A0(uint64_t result)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  if ((result & 0x100000000) == 0)
  {
    v2 = *(_QWORD **)(v1 + 8);
    if (v2[2])
    {
      sub_1A54E3414();
      static MessageIdentifier.... infix(_:_:)();
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) != 0)
      {
        if (v2[2])
        {
LABEL_5:
          v2[4] = v4;
          *(_QWORD *)(v1 + 8) = v2;
          return result;
        }
      }
      else
      {
        result = (uint64_t)sub_1A554B6E4(v2);
        v2 = (_QWORD *)result;
        if (*(_QWORD *)(result + 16))
          goto LABEL_5;
      }
      __break(1u);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AF10);
      v3 = swift_allocObject();
      *(_OWORD *)(v3 + 16) = xmmword_1A59ABD10;
      sub_1A54E3414();
      static MessageIdentifier.... infix(_:_:)();
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v1 + 8) = v3;
    }
  }
  return result;
}

uint64_t sub_1A552D8C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  int v29;
  uint64_t v30;

  if ((a1 & 0x100000000) != 0)
  {
    v25 = MEMORY[0x1E0DEE9D8];
    v24 = sub_1A55C19FC(MEMORY[0x1E0DEE9D8]);
    v21 = v26 & 0xFFFFFFFFFFLL;
    v22 = a2;
    v23 = v25;
  }
  else
  {
    v29 = -1;
    v8 = sub_1A54E3414();
    static MessageIdentifier.... infix(_:_:)();
    v28 = v30;
    MessageIdentifierSet.init(_:)((uint64_t)&v28, (uint64_t)&type metadata for UID, v8, v9);
    v11 = v10;
    v13 = v12;
    v14 = HIDWORD(v12);
    v15 = v12 & 0xFFFFFFFFFFLL;
    v16 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v17 = sub_1A552E55C(v16, v11, v15);
    swift_bridgeObjectRelease();
    sub_1A54E3458(v11, v13, v14);
    v18 = a4;
    v19 = a5;
    if (BYTE4(a5) == 255)
    {
      v18 = sub_1A55C19FC(MEMORY[0x1E0DEE9D8]);
      v19 = v20;
    }
    sub_1A5503BA0(a4, a5);
    v21 = v19 & 0xFFFFFFFFFFLL;
    v22 = a2;
    v23 = v17;
    v24 = v18;
  }
  return sub_1A552E8F4(v22, v23, v24, v21);
}

uint64_t sub_1A552DA18(uint64_t result)
{
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t i;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = (_QWORD *)result;
  v2 = *(_QWORD *)(result + 16);
  if (v2 < 2)
    return (uint64_t)v1;
  v3 = 0;
  v4 = v2 >> 1;
  for (i = v2 + 3; ; --i)
  {
    if (v3 == i - 4)
      goto LABEL_5;
    v6 = v1[2];
    if (v3 >= v6)
      break;
    if (i - 4 >= v6)
      goto LABEL_12;
    v7 = v1[v3 + 4];
    v8 = v1[i];
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1A554B6E4(v1);
      v1 = (_QWORD *)result;
    }
    v1[v3 + 4] = v8;
    v1[i] = v7;
LABEL_5:
    if (v4 == ++v3)
      return (uint64_t)v1;
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1A552DAD0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A555C128(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1A552DB38(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1A552DB38(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int *v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  unint64_t v33;
  char *v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  unint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  char v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  BOOL v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  unint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t i;
  unsigned int v86;
  uint64_t v87;
  unsigned int *v88;
  unsigned int v89;
  char *v90;
  uint64_t v91;
  unint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  unint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *__dst;

  v3 = a1[1];
  result = sub_1A594CC78();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_136;
    if ((unint64_t)v3 >= 2)
    {
      v83 = 0;
      v84 = *a1;
      for (i = 1; i != v3; ++i)
      {
        v86 = *(_DWORD *)(v84 + 8 * i);
        v87 = v83;
        do
        {
          if (*(_DWORD *)(v84 + v87) >= v86)
            break;
          if (!v84)
            goto LABEL_140;
          v88 = (unsigned int *)(v84 + v87);
          v89 = *(_DWORD *)(v84 + v87 + 12);
          *(_QWORD *)(v84 + v87 + 8) = *(_QWORD *)(v84 + v87);
          *v88 = v86;
          v88[1] = v89;
          v87 -= 8;
        }
        while (v87 != -8);
        v83 += 8;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_145;
  v6 = result;
  v98 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v12 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_102:
      v90 = v12;
      v101 = v9;
      if (v13 >= 2)
      {
        v91 = *v98;
        do
        {
          v92 = v13 - 2;
          if (v13 < 2)
            goto LABEL_131;
          if (!v91)
            goto LABEL_144;
          v93 = v90;
          v94 = *(_QWORD *)&v90[16 * v92 + 32];
          v95 = *(_QWORD *)&v90[16 * v13 + 24];
          sub_1A552E1FC((char *)(v91 + 8 * v94), (char *)(v91 + 8 * *(_QWORD *)&v90[16 * v13 + 16]), v91 + 8 * v95, __dst);
          if (v1)
            break;
          if (v95 < v94)
            goto LABEL_132;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v93 = sub_1A558A0A4((uint64_t)v93);
          if (v92 >= *((_QWORD *)v93 + 2))
            goto LABEL_133;
          v96 = &v93[16 * v92 + 32];
          *(_QWORD *)v96 = v94;
          *((_QWORD *)v96 + 1) = v95;
          v97 = *((_QWORD *)v93 + 2);
          if (v13 > v97)
            goto LABEL_134;
          memmove(&v93[16 * v13 + 16], &v93[16 * v13 + 32], 16 * (v97 - v13));
          v90 = v93;
          *((_QWORD *)v93 + 2) = v97 - 1;
          v13 = v97 - 1;
        }
        while (v97 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v101 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v101 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796E58);
    v8 = sub_1A594BA18();
    *(_QWORD *)(v8 + 16) = v7;
    v101 = v8;
    __dst = (char *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v99 = *a1 - 8;
  v100 = *a1 + 16;
  v12 = (char *)MEMORY[0x1E0DEE9D8];
  v102 = v6;
  v103 = v3;
  v104 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(_DWORD *)(v11 + 8 * v10);
      v16 = *(_DWORD *)(v11 + 8 * v14);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v17 = (unsigned int *)(v100 + 8 * v14);
        v18 = v15;
        while (1)
        {
          v20 = *v17;
          v17 += 2;
          v19 = v20;
          if (v16 < v15 == v18 >= v20)
            break;
          ++v10;
          v18 = v19;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v16 < v15)
      {
        if (v10 < v14)
          goto LABEL_137;
        if (v14 < v10)
        {
          v21 = (uint64_t *)(v99 + 8 * v10);
          v22 = v10;
          v23 = v14;
          v24 = (uint64_t *)(v11 + 8 * v14);
          do
          {
            if (v23 != --v22)
            {
              if (!v11)
                goto LABEL_143;
              v25 = *v24;
              *v24 = *v21;
              *v21 = v25;
            }
            ++v23;
            --v21;
            ++v24;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v10, v14))
      goto LABEL_135;
    if (v10 - v14 >= v6)
      goto LABEL_46;
    v26 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_138;
    if (v26 >= v3)
      v26 = v3;
    if (v26 < v14)
      break;
    if (v10 != v26)
    {
      v27 = v99 + 8 * v10;
      do
      {
        v28 = *(_DWORD *)(v11 + 8 * v10);
        v29 = v14;
        v30 = v27;
        do
        {
          if (*(_DWORD *)v30 >= v28)
            break;
          if (!v11)
            goto LABEL_141;
          v31 = *(_DWORD *)(v30 + 12);
          *(_QWORD *)(v30 + 8) = *(_QWORD *)v30;
          *(_DWORD *)v30 = v28;
          *(_DWORD *)(v30 + 4) = v31;
          v30 -= 8;
          ++v29;
        }
        while (v10 != v29);
        ++v10;
        v27 += 8;
      }
      while (v10 != v26);
      v10 = v26;
    }
LABEL_46:
    if (v10 < v14)
      goto LABEL_130;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_1A5589B40(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v33 = *((_QWORD *)v12 + 2);
    v32 = *((_QWORD *)v12 + 3);
    v13 = v33 + 1;
    v11 = v104;
    if (v33 >= v32 >> 1)
    {
      v82 = sub_1A5589B40((char *)(v32 > 1), v33 + 1, 1, v12);
      v11 = v104;
      v12 = v82;
    }
    *((_QWORD *)v12 + 2) = v13;
    v34 = v12 + 32;
    v35 = &v12[16 * v33 + 32];
    *(_QWORD *)v35 = v14;
    *((_QWORD *)v35 + 1) = v10;
    if (v33)
    {
      while (1)
      {
        v36 = v13 - 1;
        if (v13 >= 4)
        {
          v41 = &v34[16 * v13];
          v42 = *((_QWORD *)v41 - 8);
          v43 = *((_QWORD *)v41 - 7);
          v47 = __OFSUB__(v43, v42);
          v44 = v43 - v42;
          if (v47)
            goto LABEL_119;
          v46 = *((_QWORD *)v41 - 6);
          v45 = *((_QWORD *)v41 - 5);
          v47 = __OFSUB__(v45, v46);
          v39 = v45 - v46;
          v40 = v47;
          if (v47)
            goto LABEL_120;
          v48 = v13 - 2;
          v49 = &v34[16 * v13 - 32];
          v51 = *(_QWORD *)v49;
          v50 = *((_QWORD *)v49 + 1);
          v47 = __OFSUB__(v50, v51);
          v52 = v50 - v51;
          if (v47)
            goto LABEL_122;
          v47 = __OFADD__(v39, v52);
          v53 = v39 + v52;
          if (v47)
            goto LABEL_125;
          if (v53 >= v44)
          {
            v71 = &v34[16 * v36];
            v73 = *(_QWORD *)v71;
            v72 = *((_QWORD *)v71 + 1);
            v47 = __OFSUB__(v72, v73);
            v74 = v72 - v73;
            if (v47)
              goto LABEL_129;
            v64 = v39 < v74;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v65 = *((_QWORD *)v12 + 4);
            v66 = *((_QWORD *)v12 + 5);
            v47 = __OFSUB__(v66, v65);
            v58 = v66 - v65;
            v59 = v47;
            goto LABEL_77;
          }
          v38 = *((_QWORD *)v12 + 4);
          v37 = *((_QWORD *)v12 + 5);
          v47 = __OFSUB__(v37, v38);
          v39 = v37 - v38;
          v40 = v47;
        }
        if ((v40 & 1) != 0)
          goto LABEL_121;
        v48 = v13 - 2;
        v54 = &v34[16 * v13 - 32];
        v56 = *(_QWORD *)v54;
        v55 = *((_QWORD *)v54 + 1);
        v57 = __OFSUB__(v55, v56);
        v58 = v55 - v56;
        v59 = v57;
        if (v57)
          goto LABEL_124;
        v60 = &v34[16 * v36];
        v62 = *(_QWORD *)v60;
        v61 = *((_QWORD *)v60 + 1);
        v47 = __OFSUB__(v61, v62);
        v63 = v61 - v62;
        if (v47)
          goto LABEL_127;
        if (__OFADD__(v58, v63))
          goto LABEL_128;
        if (v58 + v63 >= v39)
        {
          v64 = v39 < v63;
LABEL_83:
          if (v64)
            v36 = v48;
          goto LABEL_85;
        }
LABEL_77:
        if ((v59 & 1) != 0)
          goto LABEL_123;
        v67 = &v34[16 * v36];
        v69 = *(_QWORD *)v67;
        v68 = *((_QWORD *)v67 + 1);
        v47 = __OFSUB__(v68, v69);
        v70 = v68 - v69;
        if (v47)
          goto LABEL_126;
        if (v70 < v58)
          goto LABEL_15;
LABEL_85:
        v75 = v36 - 1;
        if (v36 - 1 >= v13)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v11)
          goto LABEL_142;
        v76 = v12;
        v77 = &v34[16 * v75];
        v78 = *(_QWORD *)v77;
        v79 = &v34[16 * v36];
        v80 = *((_QWORD *)v79 + 1);
        sub_1A552E1FC((char *)(v11 + 8 * *(_QWORD *)v77), (char *)(v11 + 8 * *(_QWORD *)v79), v11 + 8 * v80, __dst);
        if (v1)
          goto LABEL_93;
        if (v80 < v78)
          goto LABEL_116;
        if (v36 > *((_QWORD *)v76 + 2))
          goto LABEL_117;
        *(_QWORD *)v77 = v78;
        *(_QWORD *)&v34[16 * v75 + 8] = v80;
        v81 = *((_QWORD *)v76 + 2);
        if (v36 >= v81)
          goto LABEL_118;
        v12 = v76;
        v13 = v81 - 1;
        memmove(&v34[16 * v36], v79 + 16, 16 * (v81 - 1 - v36));
        *((_QWORD *)v76 + 2) = v81 - 1;
        v11 = v104;
        if (v81 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v102;
    v3 = v103;
    if (v10 >= v103)
    {
      v9 = v101;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  result = sub_1A594C9B4();
  __break(1u);
  return result;
}

uint64_t sub_1A552E1FC(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  unsigned int v20;
  uint64_t result;
  char *v22;
  char *v23;
  char *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst)
        memmove(__dst, a2, 8 * v13);
      v16 = &v4[8 * v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        v17 = (char *)(a3 - 8);
        v18 = v6;
        while (1)
        {
          v19 = v17 + 8;
          v20 = *((_DWORD *)v18 - 2);
          v18 -= 8;
          if (v20 >= *((_DWORD *)v16 - 2))
          {
            v22 = v16 - 8;
            if (v19 < v16 || v17 >= v16 || v19 != v16)
              *(_QWORD *)v17 = *((_QWORD *)v16 - 1);
            v18 = v6;
            v16 -= 8;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v19 != v6 || v17 >= v6)
              *(_QWORD *)v17 = *(_QWORD *)v18;
            v24 = v18;
            if (v18 <= v7)
              goto LABEL_42;
          }
          v17 -= 8;
          v6 = v18;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[8 * v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*(_DWORD *)v4 >= *(_DWORD *)v6)
        {
          if (v7 != v4)
            *(_QWORD *)v7 = *(_QWORD *)v4;
          v4 += 8;
          v23 = v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 8;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *(_QWORD *)v7 = *(_QWORD *)v6;
        }
        v7 += 8;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_1A5589C38((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

BOOL sub_1A552E474(uint64_t a1, int32x2_t *a2, int32x2_t *a3, uint64_t a4, uint64_t a5, int32x2_t *a6, int32x2_t *a7, uint64_t a8)
{
  char v12;
  char v14;
  char v15;

  if (a1 != a5)
    return 0;
  sub_1A5537EF0(a2, a6);
  if ((v12 & 1) == 0)
    return 0;
  if (BYTE4(a4) != 255)
  {
    if (BYTE4(a8) == 255)
      return 0;
    sub_1A5503BA0((uint64_t)a7, a8);
    sub_1A5503BA0((uint64_t)a3, a4);
    sub_1A54E3414();
    static MessageIdentifierSet.__derived_struct_equals(_:_:)(a3, a4 & 0xFFFFFFFFFFLL, a7, a8 & 0xFFFFFFFFFFLL);
    v15 = v14;
    sub_1A5503B8C((uint64_t)a7, a8);
    sub_1A5503B8C((uint64_t)a3, a4);
    return (v15 & 1) != 0;
  }
  return BYTE4(a8) == 255;
}

uint64_t sub_1A552E55C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  ValueMetadata *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  ValueMetadata *v24;
  uint64_t v25;
  unsigned int v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t result;
  int64_t v36;
  ValueMetadata *v37;
  unint64_t v38;
  int v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;

  v49 = *(_QWORD *)(a1 + 16);
  if (!v49)
    return MEMORY[0x1E0DEE9D8];
  v3 = a1;
  v48 = a3 & 0xFFFFFFFFFFLL;
  v4 = sub_1A54E3414();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v6 = 0;
  v51 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v7 = &type metadata for UID;
  v47 = v3;
  while (1)
  {
    v56 = v6;
    v58 = *(_QWORD *)(v3 + 8 * v6 + 32);
    MessageIdentifierSet.init(_:)((uint64_t)&v58, (uint64_t)v7, v4, (uint64_t)v5);
    v9 = v8;
    v11 = v10;
    v12 = HIDWORD(v10);
    MessageIdentifierSet.intersection(_:)(a2, v48, v8, v10 & 0xFFFFFFFFFFLL);
    v14 = v13;
    v16 = v15;
    v57 = HIDWORD(v15);
    sub_1A54E3458(v9, v11, v12);
    v17 = v16 & 0xFFFFFFFFFFLL;
    MessageIdentifierSet.ranges.getter(v14, v16 & 0xFFFFFFFFFFLL);
    v19 = v18;
    v21 = v20;
    v22 = HIDWORD(v20);
    v23 = v4;
    v24 = v7;
    v25 = v20 & 0xFFFFFFFFFFLL;
    if (!MessageIdentifierSet.RangeView.endIndex.getter(v18, v20 & 0xFFFFFFFFFFLL))
    {
      sub_1A54E3458(v19, v21, v22);
      sub_1A54E3458(v14, v16, v57);
      v7 = v24;
LABEL_4:
      v4 = v23;
      goto LABEL_5;
    }
    v52 = v16;
    v54 = v25 | v54 & 0xFFFFFF0000000000;
    MessageIdentifierSet.RangeView.subscript.getter(0, v19, v54);
    sub_1A54E3458(v19, v21, v22);
    v26 = v58;
    v27 = v17 | v55 & 0xFFFFFF0000000000;
    MessageIdentifierSet.ranges.getter(v14, v27);
    v29 = v28;
    v31 = v30;
    v32 = HIDWORD(v30);
    v53 = v53 & 0xFFFFFF0000000000 | v30 & 0xFFFFFFFFFFLL;
    v7 = v24;
    v55 = v27;
    if (!MessageIdentifierSet.RangeView.endIndex.getter(v28, v53))
    {
      sub_1A54E3458(v29, v31, v32);
      sub_1A54E3458(v14, v52, v57);
      goto LABEL_4;
    }
    v44 = v14;
    v33 = v32;
    v34 = v31 & 0xFFFFFFFFFFLL;
    v46 = v31 & 0xFFFFFFFFFFLL | v46 & 0xFFFFFF0000000000;
    result = MessageIdentifierSet.RangeView.endIndex.getter(v29, v46);
    v36 = result - 1;
    if (__OFSUB__(result, 1))
      break;
    v45 = v34 | v45 & 0xFFFFFF0000000000;
    v37 = v24;
    result = MessageIdentifierSet.RangeView.endIndex.getter(v29, v45);
    if (v36 < 0 || v36 >= result)
      goto LABEL_22;
    v4 = v23;
    v38 = v34 | v43 & 0xFFFFFF0000000000;
    v7 = v37;
    MessageIdentifierSet.RangeView.subscript.getter(v36, v29, v38);
    sub_1A54E3458(v29, v31, v33);
    result = sub_1A54E3458(v44, v52, v57);
    v39 = HIDWORD(v58);
    if (HIDWORD(v58) < v26)
      goto LABEL_23;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      v5 = v51;
    else
      v5 = sub_1A54F067C(0, v51[2] + 1, 1, v51);
    v41 = v5[2];
    v40 = v5[3];
    v43 = v38;
    if (v41 >= v40 >> 1)
      v5 = sub_1A54F067C((_QWORD *)(v40 > 1), v41 + 1, 1, v5);
    v5[2] = v41 + 1;
    v51 = v5;
    v42 = &v5[v41];
    *((_DWORD *)v42 + 8) = v26;
    *((_DWORD *)v42 + 9) = v39;
LABEL_5:
    v6 = v56 + 1;
    v3 = v47;
    if (v49 == v56 + 1)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v51;
    }
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1A552E8F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  BOOL v17;
  uint64_t result;
  uint64_t v19;

  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v8 = sub_1A55C19FC(a2);
  v10 = v9;
  swift_bridgeObjectRelease();
  sub_1A54E3414();
  v11 = MessageIdentifierSet.count.getter(v8, v10 & 0xFFFFFFFFFFLL);
  sub_1A54E3458(v8, v10, SBYTE4(v10));
  v12 = sub_1A552D2F4(a2);
  v13 = *(_QWORD *)(v12 + 16);
  if (v13)
  {
    v14 = 0;
    v15 = (uint64_t *)(v12 + 32);
    while (1)
    {
      v16 = *v15++;
      v17 = __OFADD__(v14, v16);
      v14 += v16;
      if (v17)
        break;
      if (!--v13)
        goto LABEL_7;
    }
    __break(1u);
  }
  else
  {
    v14 = 0;
LABEL_7:
    swift_bridgeObjectRelease();
    if (v11 == v14)
    {
      v19 = a2;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A552DAD0(&v19);
      swift_bridgeObjectRelease();
      MessageIdentifierSetNonEmpty.init(set:)(a3, a4 & 0xFFFFFFFFFFLL);
      return a1;
    }
  }
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

unsigned int *sub_1A552EA48@<X0>(unsigned int *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result[1] - (unint64_t)*result + 1;
  return result;
}

uint64_t sub_1A552EA5C(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v31;
  char v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v4 = HIDWORD(a2);
  sub_1A54E3414();
  v5 = a2 & 0xFFFFFFFFFFLL;
  MessageIdentifierSet.endIndex.getter();
  v7 = v6;
  v9 = v8;
  MessageIdentifierSet.startIndex.getter();
  v11 = v10;
  v13 = v12;
  v32 = v4;
  v33 = a2;
  sub_1A54E4334(a1, a2, v4);
  v37 = v13;
  if (v7 == v11 && v9 == v13)
    goto LABEL_27;
  v15 = 1;
  v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v35 = v11;
  v31 = v5;
  while (1)
  {
    v7 = MessageIdentifierSet.index(_:offsetBy:)(v7, v9, -1, a1, v5);
    v9 = v18;
    MessageIdentifierSet.subscript.getter();
    if ((v15 & 1) != 0)
      goto LABEL_8;
    v36 = v5 | v36 & 0xFFFFFF0000000000;
    MessageIdentifierSet.endIndex.getter();
    if (v11 != v20 || v37 != v19)
    {
      sub_1A54E4334(a1, v33, v32);
      MessageIdentifierSet.subscript.getter();
      sub_1A54E3458(a1, v33, v32);
      v34 = v5 | v34 & 0xFFFFFF0000000000;
      static MessageIdentifier.... infix(_:_:)();
      v22 = v38;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v16 = sub_1A54F067C(0, v16[2] + 1, 1, v16);
      v11 = v35;
      v5 = v31;
      v24 = v16[2];
      v23 = v16[3];
      v25 = v24 + 1;
      if (v24 < v23 >> 1)
        goto LABEL_7;
      goto LABEL_6;
    }
    if ((_DWORD)v38 == -1)
      break;
    static MessageIdentifier.... infix(_:_:)();
    v22 = v38;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v16 = sub_1A54F067C(0, v16[2] + 1, 1, v16);
    v24 = v16[2];
    v23 = v16[3];
    v25 = v24 + 1;
    v11 = v35;
    if (v24 < v23 >> 1)
      goto LABEL_7;
LABEL_6:
    v16 = sub_1A54F067C((_QWORD *)(v23 > 1), v25, 1, v16);
LABEL_7:
    v16[2] = v25;
    v16[v24 + 4] = v22;
LABEL_8:
    v15 = 0;
    if (v7 == v11 && v9 == v37)
      goto LABEL_28;
  }
  __break(1u);
LABEL_27:
  v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_28:
  sub_1A54E3458(a1, v33, v32);
  if (v16[2])
    return sub_1A552DA18((uint64_t)v16);
  MessageIdentifierSet.endIndex.getter();
  if (v11 == v27 && v37 == v26)
    return sub_1A552DA18((uint64_t)v16);
  sub_1A54E4334(a1, v33, v32);
  MessageIdentifierSet.subscript.getter();
  sub_1A54E3458(a1, v33, v32);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AF10);
  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1A59ABD10;
  static MessageIdentifier.... infix(_:_:)();
  return v29;
}

uint64_t sub_1A552EE6C(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  uint64_t result;
  uint64_t v17;

  v8 = HIDWORD(a3);
  v9 = sub_1A552EA5C(a2, a3 & 0xFFFFFFFFFFLL);
  sub_1A54E3458(a2, a3, v8);
  v10 = sub_1A55C19FC(MEMORY[0x1E0DEE9D8]);
  v13 = sub_1A552E8F4(a1, v9, v10, v11 & 0xFFFFFFFFFFLL);
  v14 = v12;
  if ((a4 & 1) == 0)
    return v13;
  v15 = v12[2];
  if (!v15)
    return v13;
  sub_1A54E3414();
  static MessageIdentifier.... infix(_:_:)();
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1A554B6E4(v14);
    v14 = (_QWORD *)result;
  }
  if (v15 <= v14[2])
  {
    v14[v15 + 3] = v17;
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A552EFA0(uint64_t a1)
{
  uint64_t v2;

  if (!*(_QWORD *)(a1 + 16))
    return 0;
  sub_1A54E3414();
  static MessageIdentifier.... infix(_:_:)();
  return v2;
}

unint64_t sub_1A552F010(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned int v4;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_1A54E3414();
    static MessageIdentifier.... infix(_:_:)();
    v2 = v4;
  }
  else
  {
    v2 = 0;
  }
  return v2 | ((unint64_t)(v1 == 0) << 32);
}

void sub_1A552F08C(uint64_t a1, uint64_t a2)
{
  int32x2_t *v2;
  uint64_t v3;
  uint64_t v4;
  int32x2_t *v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(int32x2_t **)(a1 + 8);
  v3 = *(unsigned int *)(a1 + 16);
  v4 = *(unsigned __int8 *)(a1 + 20);
  v5 = *(int32x2_t **)(a2 + 8);
  v6 = *(unsigned int *)(a2 + 16);
  v7 = *(unsigned __int8 *)(a2 + 20);
  if ((sub_1A54FACA0(*(_QWORD *)a1, *(_QWORD *)a2) & 1) != 0)
  {
    sub_1A54E3414();
    static MessageIdentifierSet.__derived_struct_equals(_:_:)(v2, v3 | (v4 << 32), v5, v6 | (v7 << 32));
  }
}

uint64_t sub_1A552F114(uint64_t result)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  char *i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;

  v2 = v1;
  v3 = *(_QWORD *)(result + 16);
  if (!v3)
    return result;
  for (i = (char *)(_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0() + 49); ; i += 24)
  {
    v26 = v3;
    v6 = *(unsigned int *)(i - 17);
    v7 = *(_QWORD *)(i - 9);
    v8 = *(i - 1);
    v9 = *i;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = (_QWORD *)*v2;
    v27 = (_QWORD *)*v2;
    v12 = v2;
    *v2 = 0x8000000000000000;
    v14 = sub_1A54FDC2C(v6);
    v15 = v11[2];
    v16 = (v13 & 1) == 0;
    v17 = v15 + v16;
    if (__OFADD__(v15, v16))
      break;
    v18 = v13;
    if (v11[3] >= v17)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v21 = v27;
        if ((v13 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_1A554FA80();
        v21 = v27;
        if ((v18 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_1A5581F28(v17, isUniquelyReferenced_nonNull_native);
      v19 = sub_1A54FDC2C(v6);
      if ((v18 & 1) != (v20 & 1))
        goto LABEL_20;
      v14 = v19;
      v21 = v27;
      if ((v18 & 1) != 0)
      {
LABEL_3:
        v5 = v21[7] + 24 * v14;
        *(_DWORD *)v5 = v6;
        *(_QWORD *)(v5 + 8) = v7;
        *(_BYTE *)(v5 + 16) = v8;
        *(_BYTE *)(v5 + 17) = v9;
        goto LABEL_4;
      }
    }
    v21[(v14 >> 6) + 8] |= 1 << v14;
    *(_DWORD *)(v21[6] + 4 * v14) = v6;
    v22 = v21[7] + 24 * v14;
    *(_DWORD *)v22 = v6;
    *(_QWORD *)(v22 + 8) = v7;
    *(_BYTE *)(v22 + 16) = v8;
    *(_BYTE *)(v22 + 17) = v9;
    v23 = v21[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_19;
    v21[2] = v25;
LABEL_4:
    v2 = v12;
    *v12 = v21;
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
    MessageIdentifierSet.remove(_:)();
    v3 = v26 - 1;
    if (v26 == 1)
      return swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  result = sub_1A594CDF8();
  __break(1u);
  return result;
}

uint64_t sub_1A552F308(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v8;
  int v10;

  v10 = a1;
  sub_1A54E3414();
  MessageIdentifierSet.contains(_:)((uint64_t)&v10, a5, a6 & 0xFFFFFFFFFFLL);
  return v8 & 1;
}

uint64_t sub_1A552F358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  ValueMetadata *v20;
  ValueMetadata *v21;
  uint64_t v22;
  uint64_t v23;
  _BOOL4 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  ValueMetadata *v32;
  ValueMetadata *v33;
  uint64_t v34;
  uint64_t v35;
  _BOOL4 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  unsigned int v41;
  unsigned __int8 v42;

  v5 = sub_1A54E3414();
  v6 = MessageIdentifierSet.init()(&type metadata for UID, v5);
  v8 = v7;
  v9 = HIDWORD(v7);
  v41 = v7;
  v42 = BYTE4(v7);
  v10 = a3 & 0xFFFFFFFFFFLL;
  v40 = a2;
  if (MessageIdentifierSet.isEmpty.getter(a2, v10))
  {
    sub_1A54E3458(v6, v8, v9);
    return MessageIdentifierSet.init()(&type metadata for UID, v5);
  }
  else
  {
    MessageIdentifierSet.endIndex.getter();
    v14 = MessageIdentifierSet.index(_:offsetBy:)(v12, v13, -1, a2, v10);
    v16 = v15;
    MessageIdentifierSet.startIndex.getter();
    v37 = v18;
    v38 = v17;
    v19 = v16 < v18;
    if (v14 != v17)
      v19 = v14 < v17;
    if (!v19)
    {
      v20 = &type metadata for UID;
      do
      {
        sub_1A54E4334(v6, v41, v42);
        v8 = v8 & 0xFFFFFF0000000000 | v41 | ((unint64_t)v42 << 32);
        v21 = v20;
        v22 = MessageIdentifierSet.count.getter(v6, v8);
        sub_1A54E3458(v6, v41, v42);
        if (v22 >= a1)
          break;
        v20 = v21;
        MessageIdentifierSet.subscript.getter();
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
        MessageIdentifierSet.insert(_:)();
        v14 = MessageIdentifierSet.index(_:offsetBy:)(v14, v16, -2, v40, v10);
        v16 = v23;
        v24 = v23 < v37;
        if (v14 != v38)
          v24 = v14 < v38;
      }
      while (!v24);
    }
    MessageIdentifierSet.endIndex.getter();
    v27 = MessageIdentifierSet.index(_:offsetBy:)(v25, v26, -2, v40, v10);
    v29 = v28 < v37;
    if (v27 != v38)
      v29 = v27 < v38;
    if (!v29)
    {
      v30 = v27;
      v31 = v28;
      v32 = &type metadata for UID;
      do
      {
        sub_1A54E4334(v6, v41, v42);
        v8 = v8 & 0xFFFFFF0000000000 | v41 | ((unint64_t)v42 << 32);
        v33 = v32;
        v34 = MessageIdentifierSet.count.getter(v6, v8);
        sub_1A54E3458(v6, v41, v42);
        if (v34 >= a1)
          break;
        v32 = v33;
        MessageIdentifierSet.subscript.getter();
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
        MessageIdentifierSet.insert(_:)();
        v30 = MessageIdentifierSet.index(_:offsetBy:)(v30, v31, -2, v40, v10);
        v31 = v35;
        v36 = v35 < v37;
        if (v30 != v38)
          v36 = v30 < v38;
      }
      while (!v36);
    }
    return v6;
  }
}

uint64_t sub_1A552F70C(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL4 v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  BOOL v24;
  ValueMetadata *v25;
  ValueMetadata *v26;
  uint64_t v27;
  uint64_t v28;
  _BOOL4 v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  ValueMetadata *v38;
  ValueMetadata *v39;
  uint64_t v40;
  uint64_t v41;
  _BOOL4 v42;
  uint64_t v43;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int v49;
  unsigned int v50;
  unsigned __int8 v51;

  v6 = sub_1A54E3414();
  v7 = MessageIdentifierSet.init()(&type metadata for UID, v6);
  v9 = v8;
  v10 = HIDWORD(v8);
  v50 = v8;
  v51 = BYTE4(v8);
  v48 = a4 & 0xFFFFFFFFFFLL;
  if (MessageIdentifierSet.isEmpty.getter(a3, a4 & 0xFFFFFFFFFFLL))
  {
    sub_1A54E3458(v7, v9, v10);
    return MessageIdentifierSet.init()(&type metadata for UID, v6);
  }
  else
  {
    v12 = a4 & 0xFFFFFFFFFFLL;
    MessageIdentifierSet.endIndex.getter();
    v15 = MessageIdentifierSet.index(_:offsetBy:)(v13, v14, -1, a3, v48);
    v17 = v16;
    v43 = a3;
    MessageIdentifierSet.startIndex.getter();
    v46 = v19;
    v47 = v18;
    v20 = v19 < v17;
    if (v18 != v15)
      v20 = v18 < v15;
    if (v20)
    {
      a3 = (uint64_t)&type metadata for UID;
      do
      {
        sub_1A54E4334(v7, v50, v51);
        v12 = v12 & 0xFFFFFF0000000000 | v50 | ((unint64_t)v51 << 32);
        v21 = a3;
        a3 = MessageIdentifierSet.count.getter(v7, v12);
        sub_1A54E3458(v7, v50, v51);
        if (a3 >= a1)
          break;
        a3 = v21;
        MessageIdentifierSet.subscript.getter();
        if (v49 <= a2)
          break;
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
        MessageIdentifierSet.insert(_:)();
        v15 = MessageIdentifierSet.index(_:offsetBy:)(v15, v17, -1, v43, v48);
        v17 = v22;
        v23 = v46 < v22;
        if (v47 != v15)
          v23 = v47 < v15;
      }
      while (v23);
    }
    v24 = v17 < v46;
    if (v15 != v47)
      v24 = v15 < v47;
    if (!v24)
    {
      v25 = &type metadata for UID;
      do
      {
        sub_1A54E4334(v7, v50, v51);
        a3 = a3 & 0xFFFFFF0000000000 | v50 | ((unint64_t)v51 << 32);
        v26 = v25;
        v27 = MessageIdentifierSet.count.getter(v7, a3);
        sub_1A54E3458(v7, v50, v51);
        if (v27 >= a1)
          break;
        v25 = v26;
        MessageIdentifierSet.subscript.getter();
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
        MessageIdentifierSet.insert(_:)();
        v15 = MessageIdentifierSet.index(_:offsetBy:)(v15, v17, -2, v43, v48);
        v17 = v28;
        v29 = v28 < v46;
        if (v15 != v47)
          v29 = v15 < v47;
      }
      while (!v29);
    }
    v30 = v48;
    MessageIdentifierSet.endIndex.getter();
    v33 = MessageIdentifierSet.index(_:offsetBy:)(v31, v32, -2, v43, v48);
    v35 = v34 < v46;
    if (v33 != v47)
      v35 = v33 < v47;
    if (!v35)
    {
      v36 = v33;
      v37 = v34;
      v38 = &type metadata for UID;
      do
      {
        sub_1A54E4334(v7, v50, v51);
        v30 = v30 & 0xFFFFFF0000000000 | v50 | ((unint64_t)v51 << 32);
        v39 = v38;
        v40 = MessageIdentifierSet.count.getter(v7, v30);
        sub_1A54E3458(v7, v50, v51);
        if (v40 >= a1)
          break;
        v38 = v39;
        MessageIdentifierSet.subscript.getter();
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
        MessageIdentifierSet.insert(_:)();
        v36 = MessageIdentifierSet.index(_:offsetBy:)(v36, v37, -2, v43, v48);
        v37 = v41;
        v42 = v41 < v46;
        if (v36 != v47)
          v42 = v36 < v47;
      }
      while (!v42);
    }
    return v7;
  }
}

uint64_t sub_1A552FBE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v5;
  uint64_t v6;
  unint64_t v8;
  uint64_t v9;
  int v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t i;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  char v26;

  v5 = *(_QWORD *)(a2 + 16);
  v6 = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v23 = MEMORY[0x1E0DEE9D8];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54F4B84(0, v5, 0);
    v6 = v23;
    v8 = *(_QWORD *)(v23 + 16);
    v9 = 32;
    do
    {
      v10 = *(_DWORD *)(a2 + v9);
      v11 = *(_QWORD *)(v23 + 24);
      if (v8 >= v11 >> 1)
        sub_1A54F4B84(v11 > 1, v8 + 1, 1);
      *(_QWORD *)(v23 + 16) = v8 + 1;
      *(_DWORD *)(v23 + 4 * v8 + 32) = v10;
      v9 += 24;
      ++v8;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  v12 = sub_1A54E3414();
  v13 = MessageIdentifierSet.init()(&type metadata for UID, v12);
  v15 = v14;
  v16 = HIDWORD(v14);
  v24 = v13;
  v25 = v14;
  v26 = BYTE4(v14);
  v17 = *(_QWORD *)(v6 + 16);
  if (v17)
  {
    for (i = 0; i != v17; ++i)
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
      MessageIdentifierSet.insert(_:)();
    }
    swift_bridgeObjectRelease();
    v19 = v24;
    v15 = v25;
    LOBYTE(v16) = v26;
  }
  else
  {
    v19 = v13;
    swift_bridgeObjectRelease();
  }
  if ((a3 & 0x100000000) != 0)
    v20 = sub_1A552F358(a1, v19, v15 | ((unint64_t)v16 << 32));
  else
    v20 = sub_1A552F70C(a1, a3, v19, v15 | ((unint64_t)v16 << 32));
  v21 = v20;
  sub_1A54E3458(v19, v15, v16);
  return v21;
}

uint64_t destroy for MessagesPendingDownload(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return sub_1A54E3458(*(_QWORD *)(a1 + 8), *(unsigned int *)(a1 + 16), *(_BYTE *)(a1 + 20));
}

uint64_t _s13IMAP2Behavior23MessagesPendingDownloadVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(unsigned int *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 20);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54E4334(v3, v4, v5);
  *(_QWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 20) = v5;
  return a1;
}

uint64_t assignWithCopy for MessagesPendingDownload(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = v2[1];
  v5 = *((unsigned int *)v2 + 4);
  LOBYTE(v2) = *((_BYTE *)v2 + 20);
  sub_1A54E4334(v4, v5, (char)v2);
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(unsigned int *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = v5;
  v8 = *(_BYTE *)(a1 + 20);
  *(_BYTE *)(a1 + 20) = (_BYTE)v2;
  sub_1A54E3458(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy21_8_0(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_QWORD *)(a1 + 13) = *(_QWORD *)(a2 + 13);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for MessagesPendingDownload(uint64_t a1, uint64_t a2)
{
  int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_DWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 20);
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(unsigned int *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = v4;
  v8 = *(_BYTE *)(a1 + 20);
  *(_BYTE *)(a1 + 20) = v5;
  sub_1A54E3458(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for MessagesPendingDownload(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 21))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MessagesPendingDownload(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 20) = 0;
    *(_DWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 21) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 21) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MessagesPendingDownload()
{
  return &type metadata for MessagesPendingDownload;
}

uint64_t sub_1A552FFC8(char a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  _BOOL8 v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[3];
  int v25;
  char v26;
  uint64_t v27;
  uint64_t v28;

  if (!a2)
  {
    if ((a1 & 1) != 0)
    {
      v11 = sub_1A558A994(MEMORY[0x1E0DEE9D8]);
      v15 = sub_1A54E3414();
      MessageIdentifierSet.init()(&type metadata for UID, v15);
      return v11;
    }
LABEL_8:
    v11 = *(_QWORD *)v6;
    v16 = *(_QWORD *)(v6 + 8);
    v17 = *(unsigned int *)(v6 + 16);
    v18 = *(_BYTE *)(v6 + 20);
    goto LABEL_12;
  }
  if (a2 == 1)
  {
    if ((a1 & 1) != 0)
    {
      v11 = *(_QWORD *)(v6 + 24);
      v12 = *(_QWORD *)(v6 + 32);
      v13 = *(unsigned int *)(v6 + 40);
      v14 = *(_BYTE *)(v6 + 44);
    }
    else
    {
      v11 = *(_QWORD *)v6;
      v12 = *(_QWORD *)(v6 + 8);
      v13 = *(unsigned int *)(v6 + 16);
      v14 = *(_BYTE *)(v6 + 20);
    }
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54E4334(v12, v13, v14);
    return v11;
  }
  if ((a1 & 1) == 0)
    goto LABEL_8;
  v11 = *(_QWORD *)(v6 + 24);
  v16 = *(_QWORD *)(v6 + 32);
  v17 = *(unsigned int *)(v6 + 40);
  v18 = *(_BYTE *)(v6 + 44);
LABEL_12:
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54E4334(v16, v17, v18);
  sub_1A54E3414();
  v19 = MessageIdentifierSet.isEmpty.getter(a3, a4 & 0xFFFFFFFFFFLL);
  if (!v19)
  {
    MEMORY[0x1E0C80A78](v19);
    v24[2] = a3;
    v25 = a4;
    v26 = v20;
    v27 = a5;
    v28 = a6;
    v21 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v22 = sub_1A5531154(v21, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1A5530170, (uint64_t)v24);
    swift_bridgeObjectRelease_n();
    return v22;
  }
  return v11;
}

uint64_t sub_1A5530170(int a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  uint64_t v4;

  return sub_1A552F308(a1, a2, a3, a4 & 0x101, *(_QWORD *)(v4 + 16), *(unsigned int *)(v4 + 24) | ((unint64_t)*(unsigned __int8 *)(v4 + 28) << 32));
}

BOOL sub_1A5530198(uint64_t a1, uint64_t a2)
{
  int32x2_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int32x2_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  _BOOL8 result;
  int32x2_t *v15;
  uint64_t v16;
  uint64_t v17;
  int32x2_t *v18;

  v17 = *(unsigned int *)(a1 + 16);
  v18 = *(int32x2_t **)(a1 + 8);
  v16 = *(unsigned __int8 *)(a1 + 20);
  v3 = *(_QWORD *)(a1 + 24);
  v2 = *(int32x2_t **)(a1 + 32);
  v4 = *(unsigned int *)(a1 + 40);
  v5 = *(unsigned __int8 *)(a1 + 44);
  v15 = *(int32x2_t **)(a2 + 8);
  v6 = *(unsigned int *)(a2 + 16);
  v7 = *(unsigned __int8 *)(a2 + 20);
  v9 = *(_QWORD *)(a2 + 24);
  v8 = *(int32x2_t **)(a2 + 32);
  v10 = *(unsigned int *)(a2 + 40);
  v11 = *(unsigned __int8 *)(a2 + 44);
  result = 0;
  if ((sub_1A54FACA0(*(_QWORD *)a1, *(_QWORD *)a2) & 1) != 0)
  {
    sub_1A54E3414();
    static MessageIdentifierSet.__derived_struct_equals(_:_:)(v18, v17 | (v16 << 32), v15, v6 | (v7 << 32));
    if ((v12 & 1) != 0 && (sub_1A54FACA0(v3, v9) & 1) != 0)
    {
      static MessageIdentifierSet.__derived_struct_equals(_:_:)(v2, v4 | (v5 << 32), v8, v10 | (v11 << 32));
      if ((v13 & 1) != 0)
        return 1;
    }
  }
  return result;
}

uint64_t sub_1A55302A8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;

  if (!a3)
    return MEMORY[0x1E0DEE9E0];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AB80);
  result = sub_1A594CA5C();
  v8 = result;
  v34 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 64;
  v36 = v4;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v37 = v10;
      v13 = v12 | (v10 << 6);
    }
    else
    {
      v14 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_40;
      if (v14 >= v34)
        return v8;
      v15 = a1[v14];
      v16 = v10 + 1;
      if (!v15)
      {
        v16 = v10 + 2;
        if (v10 + 2 >= v34)
          return v8;
        v15 = a1[v16];
        if (!v15)
        {
          v16 = v10 + 3;
          if (v10 + 3 >= v34)
            return v8;
          v15 = a1[v16];
          if (!v15)
          {
            v17 = v10 + 4;
            if (v10 + 4 >= v34)
              return v8;
            v15 = a1[v17];
            if (!v15)
            {
              while (1)
              {
                v16 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_41;
                if (v16 >= v34)
                  return v8;
                v15 = a1[v16];
                ++v17;
                if (v15)
                  goto LABEL_24;
              }
            }
            v16 = v10 + 4;
          }
        }
      }
LABEL_24:
      v9 = (v15 - 1) & v15;
      v37 = v16;
      v13 = __clz(__rbit64(v15)) + (v16 << 6);
    }
    v18 = *(_DWORD *)(*(_QWORD *)(v4 + 48) + 4 * v13);
    v19 = *(_QWORD *)(v4 + 56) + 24 * v13;
    v20 = *(_DWORD *)v19;
    v21 = *(_QWORD *)(v19 + 8);
    v22 = *(_BYTE *)(v19 + 16);
    v23 = *(_BYTE *)(v19 + 17);
    sub_1A594CE64();
    sub_1A594CEAC();
    result = sub_1A594CED0();
    v24 = -1 << *(_BYTE *)(v8 + 32);
    v25 = result & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) != 0)
    {
      v27 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v30 = v26 == v29;
        if (v26 == v29)
          v26 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v11 + 8 * v26);
      }
      while (v31 == -1);
      v27 = __clz(__rbit64(~v31)) + (v26 << 6);
    }
    *(_QWORD *)(v11 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
    *(_DWORD *)(*(_QWORD *)(v8 + 48) + 4 * v27) = v18;
    v32 = *(_QWORD *)(v8 + 56) + 24 * v27;
    *(_DWORD *)v32 = v20;
    *(_QWORD *)(v32 + 8) = v21;
    *(_BYTE *)(v32 + 16) = v22;
    *(_BYTE *)(v32 + 17) = v23;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    v4 = v36;
    v10 = v37;
    if (!v5)
      return v8;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1A5530570(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;

  if (!a3)
    return MEMORY[0x1E0DEE9E0];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79ABA8);
  result = sub_1A594CA5C();
  v8 = result;
  v31 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 64;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
    }
    else
    {
      v14 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_40;
      if (v14 >= v31)
        return v8;
      v15 = a1[v14];
      ++v10;
      if (!v15)
      {
        v10 = v14 + 1;
        if (v14 + 1 >= v31)
          return v8;
        v15 = a1[v10];
        if (!v15)
        {
          v10 = v14 + 2;
          if (v14 + 2 >= v31)
            return v8;
          v15 = a1[v10];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v31)
              return v8;
            v15 = a1[v16];
            if (!v15)
            {
              while (1)
              {
                v10 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_41;
                if (v10 >= v31)
                  return v8;
                v15 = a1[v10];
                ++v16;
                if (v15)
                  goto LABEL_24;
              }
            }
            v10 = v16;
          }
        }
      }
LABEL_24:
      v9 = (v15 - 1) & v15;
      v13 = __clz(__rbit64(v15)) + (v10 << 6);
    }
    v17 = *(_DWORD *)(*(_QWORD *)(v4 + 48) + 4 * v13);
    v18 = *(_QWORD *)(v4 + 56) + 16 * v13;
    v19 = *(_BYTE *)v18;
    v20 = *(_QWORD *)(v18 + 8);
    sub_1A594CE64();
    sub_1A594CEAC();
    result = sub_1A594CED0();
    v21 = -1 << *(_BYTE *)(v8 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v11 + 8 * (v22 >> 6))) != 0)
    {
      v24 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v11 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v27 = v23 == v26;
        if (v23 == v26)
          v23 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v23);
      }
      while (v28 == -1);
      v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(_QWORD *)(v11 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    *(_DWORD *)(*(_QWORD *)(v8 + 48) + 4 * v24) = v17;
    v29 = *(_QWORD *)(v8 + 56) + 16 * v24;
    *(_BYTE *)v29 = v19;
    *(_QWORD *)(v29 + 8) = v20;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (!v5)
      return v8;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1A5530818(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t *v23;
  uint64_t v24;
  int v25;
  __int16 v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v50;

  if (!a3)
    return MEMORY[0x1E0DEE9E0];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7961E8);
  result = sub_1A594CA5C();
  v9 = result;
  v38 = a1;
  v39 = a2;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 64;
  v40 = v4;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v41 = v11;
      v14 = v13 | (v11 << 6);
    }
    else
    {
      v15 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_40;
      if (v15 >= v39)
        return v9;
      v16 = v38[v15];
      v17 = v11 + 1;
      if (!v16)
      {
        v17 = v11 + 2;
        if (v11 + 2 >= v39)
          return v9;
        v16 = v38[v17];
        if (!v16)
        {
          v17 = v11 + 3;
          if (v11 + 3 >= v39)
            return v9;
          v16 = v38[v17];
          if (!v16)
          {
            v18 = v11 + 4;
            if (v11 + 4 >= v39)
              return v9;
            v16 = v38[v18];
            if (!v16)
            {
              while (1)
              {
                v17 = v18 + 1;
                if (__OFADD__(v18, 1))
                  goto LABEL_41;
                if (v17 >= v39)
                  return v9;
                v16 = v38[v17];
                ++v18;
                if (v16)
                  goto LABEL_24;
              }
            }
            v17 = v11 + 4;
          }
        }
      }
LABEL_24:
      v10 = (v16 - 1) & v16;
      v41 = v17;
      v14 = __clz(__rbit64(v16)) + (v17 << 6);
    }
    v19 = *(_QWORD *)(v4 + 56);
    v20 = *(_QWORD *)(v4 + 48) + 16 * v14;
    v21 = *(_QWORD *)v20;
    v22 = *(_DWORD *)(v20 + 8);
    v23 = (uint64_t *)(v19 + 72 * v14);
    v24 = *v23;
    v25 = *((_DWORD *)v23 + 2);
    v26 = *((_WORD *)v23 + 7);
    v49 = *((_BYTE *)v23 + 16);
    v50 = *((_BYTE *)v23 + 12);
    v47 = v23[4];
    v48 = v23[3];
    v45 = v23[6];
    v46 = v23[5];
    v44 = v23[7];
    v42 = *((_BYTE *)v23 + 65);
    v43 = *((_BYTE *)v23 + 64);
    sub_1A594CE64();
    sub_1A594CE88();
    result = sub_1A594CED0();
    v27 = -1 << *(_BYTE *)(v9 + 32);
    v28 = result & ~v27;
    v29 = v28 >> 6;
    if (((-1 << v28) & ~*(_QWORD *)(v12 + 8 * (v28 >> 6))) != 0)
    {
      v30 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v12 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v33 = v29 == v32;
        if (v29 == v32)
          v29 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v12 + 8 * v29);
      }
      while (v34 == -1);
      v30 = __clz(__rbit64(~v34)) + (v29 << 6);
    }
    *(_QWORD *)(v12 + ((v30 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v30;
    v35 = *(_QWORD *)(v9 + 48) + 16 * v30;
    *(_QWORD *)v35 = v21;
    *(_DWORD *)(v35 + 8) = v22;
    v36 = *(_QWORD *)(v9 + 56) + 72 * v30;
    *(_QWORD *)v36 = v24;
    *(_DWORD *)(v36 + 8) = v25;
    *(_BYTE *)(v36 + 12) = v50;
    *(_WORD *)(v36 + 14) = v26;
    *(_BYTE *)(v36 + 16) = v49;
    *(_QWORD *)(v36 + 24) = v48;
    *(_QWORD *)(v36 + 32) = v47;
    *(_QWORD *)(v36 + 40) = v46;
    *(_QWORD *)(v36 + 48) = v45;
    *(_QWORD *)(v36 + 56) = v44;
    *(_BYTE *)(v36 + 64) = v43;
    *(_BYTE *)(v36 + 65) = v42;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v4 = v40;
    v11 = v41;
    if (!v5)
      return v9;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1A5530B60(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t *v32;
  uint64_t v33;

  if (!a3)
    return MEMORY[0x1E0DEE9E0];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8710);
  result = sub_1A594CA5C();
  v9 = result;
  v32 = a1;
  v33 = a2;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
    }
    else
    {
      v15 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_40;
      if (v15 >= v33)
        return v9;
      v16 = v32[v15];
      ++v11;
      if (!v16)
      {
        v11 = v15 + 1;
        if (v15 + 1 >= v33)
          return v9;
        v16 = v32[v11];
        if (!v16)
        {
          v11 = v15 + 2;
          if (v15 + 2 >= v33)
            return v9;
          v16 = v32[v11];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= v33)
              return v9;
            v16 = v32[v17];
            if (!v16)
            {
              while (1)
              {
                v11 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_41;
                if (v11 >= v33)
                  return v9;
                v16 = v32[v11];
                ++v17;
                if (v16)
                  goto LABEL_24;
              }
            }
            v11 = v17;
          }
        }
      }
LABEL_24:
      v10 = (v16 - 1) & v16;
      v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    v18 = *(_QWORD *)(v4 + 48) + 16 * v14;
    v19 = *(_QWORD *)v18;
    v20 = *(_DWORD *)(v18 + 8);
    v21 = *(_BYTE *)(*(_QWORD *)(v4 + 56) + v14);
    sub_1A594CE64();
    sub_1A594CE88();
    result = sub_1A594CED0();
    v22 = -1 << *(_BYTE *)(v9 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      v25 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v28 = v24 == v27;
        if (v24 == v27)
          v24 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v24);
      }
      while (v29 == -1);
      v25 = __clz(__rbit64(~v29)) + (v24 << 6);
    }
    *(_QWORD *)(v12 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    v30 = *(_QWORD *)(v9 + 48) + 16 * v25;
    *(_QWORD *)v30 = v19;
    *(_DWORD *)(v30 + 8) = v20;
    *(_BYTE *)(*(_QWORD *)(v9 + 56) + v25) = v21;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (!v5)
      return v9;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

void sub_1A5530DF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  char v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  int v18;

  v5 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = a3 & 0xFFFFFFFFFFLL;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v11 = 0;
  while (v8)
  {
    v12 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v13 = v12 | (v11 << 6);
LABEL_5:
    v18 = *(_DWORD *)(*(_QWORD *)(a1 + 48) + 4 * v13);
    sub_1A54E3414();
    MessageIdentifierSet.contains(_:)((uint64_t)&v18, a2, v10);
    if ((v14 & 1) != 0)
      goto LABEL_23;
  }
  v15 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
    goto LABEL_25;
  }
  if (v15 >= v9)
    goto LABEL_23;
  v16 = *(_QWORD *)(v5 + 8 * v15);
  ++v11;
  if (v16)
    goto LABEL_22;
  v11 = v15 + 1;
  if (v15 + 1 >= v9)
    goto LABEL_23;
  v16 = *(_QWORD *)(v5 + 8 * v11);
  if (v16)
    goto LABEL_22;
  v11 = v15 + 2;
  if (v15 + 2 >= v9)
    goto LABEL_23;
  v16 = *(_QWORD *)(v5 + 8 * v11);
  if (v16)
    goto LABEL_22;
  v11 = v15 + 3;
  if (v15 + 3 >= v9)
    goto LABEL_23;
  v16 = *(_QWORD *)(v5 + 8 * v11);
  if (v16)
  {
LABEL_22:
    v8 = (v16 - 1) & v16;
    v13 = __clz(__rbit64(v16)) + (v11 << 6);
    goto LABEL_5;
  }
  v17 = v15 + 4;
  if (v17 >= v9)
  {
LABEL_23:
    swift_release();
    return;
  }
  v16 = *(_QWORD *)(v5 + 8 * v17);
  if (v16)
  {
    v11 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= v9)
      goto LABEL_23;
    v16 = *(_QWORD *)(v5 + 8 * v11);
    ++v17;
    if (v16)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_1A5530F90(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t, uint64_t, _QWORD))
{
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unsigned int *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  int v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t *v24;
  uint64_t v25;

  v24 = (unint64_t *)result;
  v6 = 0;
  v7 = 0;
  v8 = a3 + 64;
  v9 = 1 << *(_BYTE *)(a3 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a3 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (2)
  {
    v25 = v6;
    do
    {
      if (v11)
      {
        v13 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v14 = v13 | (v7 << 6);
      }
      else
      {
        v20 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
          __break(1u);
LABEL_28:
          __break(1u);
          goto LABEL_29;
        }
        if (v20 >= v12)
          return sub_1A55302A8(v24, a2, v25, a3);
        v21 = *(_QWORD *)(v8 + 8 * v20);
        ++v7;
        if (!v21)
        {
          v7 = v20 + 1;
          if (v20 + 1 >= v12)
            return sub_1A55302A8(v24, a2, v25, a3);
          v21 = *(_QWORD *)(v8 + 8 * v7);
          if (!v21)
          {
            v7 = v20 + 2;
            if (v20 + 2 >= v12)
              return sub_1A55302A8(v24, a2, v25, a3);
            v21 = *(_QWORD *)(v8 + 8 * v7);
            if (!v21)
            {
              v22 = v20 + 3;
              if (v22 >= v12)
                return sub_1A55302A8(v24, a2, v25, a3);
              v21 = *(_QWORD *)(v8 + 8 * v22);
              if (!v21)
              {
                while (1)
                {
                  v7 = v22 + 1;
                  if (__OFADD__(v22, 1))
                    goto LABEL_28;
                  if (v7 >= v12)
                    return sub_1A55302A8(v24, a2, v25, a3);
                  v21 = *(_QWORD *)(v8 + 8 * v7);
                  ++v22;
                  if (v21)
                    goto LABEL_25;
                }
              }
              v7 = v22;
            }
          }
        }
LABEL_25:
        v11 = (v21 - 1) & v21;
        v14 = __clz(__rbit64(v21)) + (v7 << 6);
      }
      v15 = (unsigned int *)(*(_QWORD *)(a3 + 56) + 24 * v14);
      v16 = *v15;
      v17 = *((_QWORD *)v15 + 1);
      v18 = *((unsigned __int8 *)v15 + 16);
      if (*((_BYTE *)v15 + 17))
        v19 = 256;
      else
        v19 = 0;
      result = a4(*(unsigned int *)(*(_QWORD *)(a3 + 48) + 4 * v14), v16, v17, v19 | v18);
    }
    while ((result & 1) == 0);
    *(unint64_t *)((char *)v24 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v6 = v25 + 1;
    if (!__OFADD__(v25, 1))
      continue;
    break;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1A5531154(uint64_t isStackAllocationSafe, uint64_t (*a2)(_QWORD, uint64_t, uint64_t, _QWORD), uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  char v7;
  unint64_t v8;
  size_t v9;
  uint64_t v10;
  void *v11;
  _QWORD v13[2];

  v6 = isStackAllocationSafe;
  v13[1] = *MEMORY[0x1E0C80C00];
  v7 = *(_BYTE *)(isStackAllocationSafe + 32);
  v8 = (unint64_t)((1 << v7) + 63) >> 6;
  v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    v10 = sub_1A5530F90((uint64_t)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v8, v6, a2);
    if (v3)
      swift_willThrow();
    else
      return v10;
  }
  else
  {
    v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    a3 = sub_1A5530F90((uint64_t)v11, v8, v6, a2);
    MEMORY[0x1A85B1964](v11, -1, -1);
  }
  return a3;
}

BOOL sub_1A55312C4(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;

  v11 = a3 & 0xFF00000000;
  v12 = a2;
  v13 = a3;
  if ((a3 & 0xFF00000000) == 0xFF00000000)
  {
    v12 = sub_1A55C19FC(MEMORY[0x1E0DEE9D8]);
    v13 = v14;
  }
  if (a1 == 1 || (sub_1A54E3414(), MessageIdentifierSet.isEmpty.getter(v12, v13 & 0xFFFFFFFFFFLL)))
  {
    v15 = *(_QWORD *)(a6 + 16);
    sub_1A550F858(a2, a3);
    sub_1A54E3458(v12, v13, SBYTE4(v13));
    if (v15)
      return 1;
  }
  else
  {
    sub_1A550F858(a2, a3);
    sub_1A54E4334(v12, v13, SBYTE4(v13));
    v17 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5530DF4(v17, v12, v13 & 0xFFFFFFFFFFLL);
    v19 = v18;
    sub_1A54E3458(v12, v13, SBYTE4(v13));
    swift_bridgeObjectRelease();
    sub_1A54E3458(v12, v13, SBYTE4(v13));
    if ((v19 & 1) != 0)
      return 1;
  }
  v20 = a2;
  v21 = a3;
  if (v11 == 0xFF00000000)
  {
    v20 = sub_1A55C19FC(MEMORY[0x1E0DEE9D8]);
    v21 = v22;
  }
  if (a1)
  {
    if (a1 == 1 || (sub_1A54E3414(), MessageIdentifierSet.isEmpty.getter(v20, v21 & 0xFFFFFFFFFFLL)))
    {
      v23 = *(_QWORD *)(a7 + 16);
      sub_1A550F858(a2, a3);
      sub_1A54E3458(v20, v21, SBYTE4(v21));
      return v23 != 0;
    }
    else
    {
      sub_1A550F858(a2, a3);
      sub_1A54E4334(v20, v21, SBYTE4(v21));
      v24 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A5530DF4(v24, v20, v21 & 0xFFFFFFFFFFLL);
      v16 = v25;
      sub_1A54E3458(v20, v21, SBYTE4(v21));
      swift_bridgeObjectRelease();
      sub_1A54E3458(v20, v21, SBYTE4(v21));
    }
  }
  else
  {
    sub_1A550F858(a2, a3);
    sub_1A54E3458(v20, v21, SBYTE4(v21));
    return 0;
  }
  return v16;
}

uint64_t destroy for MessagesPendingDownloadPerPass(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_1A54E3458(*(_QWORD *)(a1 + 8), *(unsigned int *)(a1 + 16), *(_BYTE *)(a1 + 20));
  swift_bridgeObjectRelease();
  return sub_1A54E3458(*(_QWORD *)(a1 + 32), *(unsigned int *)(a1 + 40), *(_BYTE *)(a1 + 44));
}

uint64_t initializeWithCopy for MessagesPendingDownloadPerPass(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v2 = a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(unsigned int *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 20);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54E4334(v4, v5, v6);
  *(_QWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 20) = v6;
  v7 = *(_QWORD *)(v2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(v2 + 24);
  v8 = *(unsigned int *)(v2 + 40);
  LOBYTE(v2) = *(_BYTE *)(v2 + 44);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54E4334(v7, v8, v2);
  *(_QWORD *)(a1 + 32) = v7;
  *(_DWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 44) = v2;
  return a1;
}

uint64_t assignWithCopy for MessagesPendingDownloadPerPass(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  unsigned int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = v2[1];
  v5 = *((_DWORD *)v2 + 4);
  v6 = *((_BYTE *)v2 + 20);
  sub_1A54E4334(v4, v5, v6);
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(unsigned int *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = v5;
  v9 = *(_BYTE *)(a1 + 20);
  *(_BYTE *)(a1 + 20) = v6;
  sub_1A54E3458(v7, v8, v9);
  *(_QWORD *)(a1 + 24) = v2[3];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v10 = v2[4];
  v11 = *((unsigned int *)v2 + 10);
  LOBYTE(v2) = *((_BYTE *)v2 + 44);
  sub_1A54E4334(v10, v11, (char)v2);
  v12 = *(_QWORD *)(a1 + 32);
  v13 = *(unsigned int *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v10;
  *(_DWORD *)(a1 + 40) = v11;
  v14 = *(_BYTE *)(a1 + 44);
  *(_BYTE *)(a1 + 44) = (_BYTE)v2;
  sub_1A54E3458(v12, v13, v14);
  return a1;
}

__n128 __swift_memcpy45_8_0(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 29) = *(_OWORD *)(a2 + 29);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for MessagesPendingDownloadPerPass(uint64_t a1, uint64_t a2)
{
  int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  int v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_DWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 20);
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(unsigned int *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = v4;
  v8 = *(_BYTE *)(a1 + 20);
  *(_BYTE *)(a1 + 20) = v5;
  sub_1A54E3458(v6, v7, v8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  v9 = *(_DWORD *)(a2 + 40);
  v10 = *(_BYTE *)(a2 + 44);
  v11 = *(_QWORD *)(a1 + 32);
  v12 = *(unsigned int *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = v9;
  v13 = *(_BYTE *)(a1 + 44);
  *(_BYTE *)(a1 + 44) = v10;
  sub_1A54E3458(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for MessagesPendingDownloadPerPass(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 45))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MessagesPendingDownloadPerPass(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 44) = 0;
    *(_DWORD *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 45) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 45) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MessagesPendingDownloadPerPass()
{
  return &type metadata for MessagesPendingDownloadPerPass;
}

uint64_t sub_1A5531838(uint64_t a1, uint64_t a2)
{
  return sub_1A5531860(a1, a2, (void (*)(void))sub_1A54E3414);
}

uint64_t sub_1A553184C(uint64_t a1, uint64_t a2)
{
  return sub_1A5531860(a1, a2, (void (*)(void))sub_1A5534BE4);
}

uint64_t sub_1A5531860(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unsigned int v15;

  a3();
  MessageIdentifierSet.ranges.getter(a1, a2 & 0xFFFFFFFFFFLL);
  v6 = v5;
  v8 = v7;
  v9 = HIDWORD(v7);
  v10 = v7 & 0xFFFFFFFFFFLL;
  v11 = MessageIdentifierSet.RangeView.endIndex.getter(v5, v7 & 0xFFFFFFFFFFLL);
  if (!v11)
  {
    sub_1A54E3458(v6, v8, v9);
    v14 = 0;
    return v14 | ((unint64_t)(v11 == 0) << 32);
  }
  result = MessageIdentifierSet.RangeView.endIndex.getter(v6, v10);
  v13 = result - 1;
  if (__OFSUB__(result, 1))
  {
    __break(1u);
  }
  else
  {
    result = MessageIdentifierSet.RangeView.endIndex.getter(v6, v10);
    if ((v13 & 0x8000000000000000) == 0 && v13 < result)
    {
      MessageIdentifierSet.RangeView.subscript.getter(v13, v6, v10);
      sub_1A54E3458(v6, v8, v9);
      v14 = v15;
      return v14 | ((unint64_t)(v11 == 0) << 32);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5531988(__int128 *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;
  _OWORD v8[2];

  v2 = a1[1];
  v5 = *a1;
  v6[0] = v2;
  *(_QWORD *)((char *)v6 + 13) = *(_QWORD *)((char *)a1 + 29);
  v3 = a2[1];
  v7 = *a2;
  v8[0] = v3;
  *(_QWORD *)((char *)v8 + 13) = *(_QWORD *)((char *)a2 + 29);
  return sub_1A5533D44((uint64_t)&v5, (uint64_t)&v7) & 1;
}

uint64_t sub_1A55319D0(uint64_t a1, uint64_t a2)
{
  _BYTE v4[64];
  _BYTE v5[64];

  sub_1A5510484(a1, (uint64_t)v4);
  sub_1A5510484(a2, (uint64_t)v5);
  return sub_1A5533E2C((uint64_t)v4, (uint64_t)v5) & 1;
}

uint64_t sub_1A5531A18(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  char v4;
  _OWORD v6[2];
  _OWORD v7[2];
  _OWORD v8[2];
  _OWORD v9[2];

  v2 = a1[1];
  v6[0] = *a1;
  v6[1] = v2;
  v7[0] = a1[2];
  *(_OWORD *)((char *)v7 + 13) = *(_OWORD *)((char *)a1 + 45);
  v3 = a2[1];
  v8[0] = *a2;
  v8[1] = v3;
  v9[0] = a2[2];
  *(_OWORD *)((char *)v9 + 13) = *(_OWORD *)((char *)a2 + 45);
  sub_1A5533AD8((uint64_t)v6, (uint64_t)v8);
  return v4 & 1;
}

uint64_t sub_1A5531A70(unsigned int *a1, unsigned int *a2)
{
  uint64_t v2;
  unsigned __int8 v3;
  int32x2_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *a2;
  v3 = *((_BYTE *)a2 + 4);
  v4 = (int32x2_t *)*((_QWORD *)a2 + 1);
  v5 = a2[4];
  v6 = *((unsigned __int8 *)a2 + 20);
  v7 = *((unsigned __int8 *)a2 + 21);
  if (*((_BYTE *)a1 + 21))
    v8 = 0x10000000000;
  else
    v8 = 0;
  if (v7)
    v9 = 0x10000000000;
  else
    v9 = 0;
  return sub_1A5533CB8(*a1 | ((unint64_t)*((unsigned __int8 *)a1 + 4) << 32), *((int32x2_t **)a1 + 1), a1[4] | ((unint64_t)*((unsigned __int8 *)a1 + 20) << 32) | v8, v2 | ((unint64_t)v3 << 32), v4, v5 | (v6 << 32) | v9);
}

void sub_1A5531AEC(uint64_t a1, uint64_t a2)
{
  int32x2_t *v2;
  uint64_t v3;
  uint64_t v4;
  int32x2_t *v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(int32x2_t **)a1;
  v3 = *(unsigned int *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a1 + 12);
  v5 = *(int32x2_t **)a2;
  v6 = *(unsigned int *)(a2 + 8);
  v7 = *(unsigned __int8 *)(a2 + 12);
  sub_1A54E3414();
  static MessageIdentifierSet.__derived_struct_equals(_:_:)(v2, v3 | (v4 << 32), v5, v6 | (v7 << 32));
}

uint64_t sub_1A5531B4C()
{
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
  sub_1A594C924();
  return 0;
}

unint64_t sub_1A5531BB4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  unsigned int v14;
  char v15[8];
  uint64_t v16;
  unsigned int v17;
  unsigned __int8 v18;
  char v19;
  unsigned int v20;
  unsigned __int8 v21;

  sub_1A5510484(v0, (uint64_t)v15);
  v1 = v20 | ((unint64_t)v21 << 32);
  if ((v1 & 0xC000000000) != 0x4000000000)
    goto LABEL_9;
  v21 = BYTE4(v1) & 0x3F;
  if ((v19 & 1) == 0)
    goto LABEL_9;
  v2 = v18;
  v3 = v17;
  v4 = v16;
  sub_1A54E3414();
  MessageIdentifierSet.ranges.getter(v4, v3 | (v2 << 32));
  v6 = v5;
  v8 = v7;
  v9 = HIDWORD(v7);
  v10 = v7 & 0xFFFFFFFFFFLL;
  if (!MessageIdentifierSet.RangeView.endIndex.getter(v5, v7 & 0xFFFFFFFFFFLL))
  {
    sub_1A54E3458(v6, v8, v9);
LABEL_9:
    v11 = 0;
    v12 = 1;
    return v11 | ((unint64_t)v12 << 32);
  }
  MessageIdentifierSet.RangeView.subscript.getter(0, v6, v10);
  sub_1A54E3458(v6, v8, v9);
  if (v14 >= 2)
    v11 = v14 - 1;
  else
    v11 = 0;
  v12 = v14 < 2;
  return v11 | ((unint64_t)v12 << 32);
}

uint64_t sub_1A5531CE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  int v24;
  _BYTE v25[8];
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unsigned int v29;
  unsigned __int8 v30;
  uint64_t v31;
  unsigned int v32;
  unsigned __int8 v33;
  unsigned int v34;
  unsigned __int8 v35;

  v3 = v2;
  sub_1A5510484(v2, (uint64_t)v25);
  v6 = v26;
  v7 = v27;
  v8 = v28;
  v9 = v30;
  v10 = v29;
  sub_1A5510484(v3, (uint64_t)&v31);
  v11 = v34 | ((unint64_t)v35 << 32);
  v12 = v35 >> 6;
  if (v12)
  {
    if (v12 == 1)
    {
      v35 = BYTE4(v11) & 0x3F;
      if (a1 > 1)
      {
        sub_1A54E4334(v6, v7, SBYTE4(v7));
        v8 = v6;
        v13 = v7;
        v14 = HIDWORD(v7);
        goto LABEL_10;
      }
    }
    else if (a1 > 1)
    {
      v22 = 1;
      return v22 & 1;
    }
LABEL_16:
    v22 = 0;
    return v22 & 1;
  }
  v35 = BYTE4(v11) & 0x3F;
  v15 = v31;
  v16 = v32;
  v17 = v33;
  sub_1A54E3414();
  v18 = MessageIdentifierSet.count.getter(v15, v16 | (v17 << 32));
  if (a1 >= 0)
    v19 = a1;
  else
    v19 = a1 + 1;
  if (v18 >= v19 >> 1)
    goto LABEL_16;
  v13 = v10 | (v9 << 32);
  LOBYTE(v14) = BYTE4(v13);
  sub_1A54E4334(v8, v13, SBYTE4(v13));
LABEL_10:
  sub_1A54E3414();
  if (MessageIdentifierSet.isEmpty.getter(v8, v13 | ((unint64_t)v14 << 32))
    || (a2 & 0x100000000) != 0)
  {
    sub_1A54E3458(v8, v13, v14);
    goto LABEL_16;
  }
  v24 = a2;
  MessageIdentifierSet.contains(_:)((uint64_t)&v24, v8, v13 | ((unint64_t)v14 << 32));
  v21 = v20;
  sub_1A54E3458(v8, v13, v14);
  v22 = v21 ^ 1;
  return v22 & 1;
}

void sub_1A5531E98()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  _BYTE v32[13];
  char v33[8];
  int v34;
  char v35;

  sub_1A5534334(v0 + 32, (uint64_t)v33);
  sub_1A5534334((uint64_t)v33, (uint64_t)&v34);
  if ((v35 & 1) == 0 && v34 != -1)
  {
    LODWORD(v29) = -1;
    v1 = sub_1A54E3414();
    static MessageIdentifier.... infix(_:_:)();
    v31 = *(_QWORD *)v32;
    v3 = &v31;
LABEL_12:
    MessageIdentifierSet.init(_:)((uint64_t)v3, (uint64_t)&type metadata for UID, v1, v2);
    return;
  }
  *(_QWORD *)&v32[5] = *(_QWORD *)(v0 + 5);
  *(_QWORD *)v32 = *(_QWORD *)v0;
  v4 = *(_QWORD *)(v0 + 16);
  v5 = *(unsigned int *)(v0 + 24);
  v6 = *(unsigned __int8 *)(v0 + 28);
  v1 = sub_1A54E3414();
  MessageIdentifierSet.union(_:)(v4, v5 | (v6 << 32), *(uint64_t *)v32, *(unsigned int *)&v32[8] | ((unint64_t)v32[12] << 32));
  v8 = v7;
  v10 = v9;
  v11 = HIDWORD(v9);
  v12 = sub_1A55E1944(3000, v7, v9 & 0xFFFFFFFFFFLL);
  v14 = v13;
  v15 = HIDWORD(v13);
  sub_1A54E3458(v8, v10, v11);
  MessageIdentifierSet.startIndex.getter();
  v17 = v16;
  v19 = v18;
  MessageIdentifierSet.endIndex.getter();
  if (v17 != v21 || v19 != v20)
  {
    MessageIdentifierSet.subscript.getter();
    sub_1A54E3458(v12, v14, v15);
    v30 = -1;
    static MessageIdentifier.... infix(_:_:)();
    v29 = v31;
    v3 = &v29;
    goto LABEL_12;
  }
  sub_1A54E3458(v12, v14, v15);
  MessageIdentifierSet.startIndex.getter();
  v24 = v23;
  v26 = v25;
  MessageIdentifierSet.endIndex.getter();
  if (v24 != v28 || v26 != v27)
  {
    sub_1A54E4334(*(uint64_t *)v32, *(unsigned int *)&v32[8], v32[12]);
    MessageIdentifierSet.subscript.getter();
    sub_1A550F348((uint64_t)v32);
    v30 = -1;
    static MessageIdentifier.... infix(_:_:)();
    v29 = v31;
    v3 = &v29;
    goto LABEL_12;
  }
  __break(1u);
}

uint64_t sub_1A553216C(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  char v4;
  _OWORD v6[2];
  _OWORD v7[2];
  _OWORD v8[2];
  _OWORD v9[2];

  v2 = *(_OWORD *)(a1 + 16);
  v6[0] = *(_OWORD *)a1;
  v6[1] = v2;
  v7[0] = *(_OWORD *)(a1 + 32);
  *(_QWORD *)((char *)v7 + 13) = *(_QWORD *)(a1 + 45);
  v3 = *(_OWORD *)(a2 + 16);
  v8[0] = *(_OWORD *)a2;
  v8[1] = v3;
  v9[0] = *(_OWORD *)(a2 + 32);
  *(_QWORD *)((char *)v9 + 13) = *(_QWORD *)(a2 + 45);
  sub_1A5533994((uint64_t)v6, (uint64_t)v8);
  return v4 & 1;
}

BOOL sub_1A55321C4(unsigned int *a1, unsigned int *a2)
{
  return sub_1A5533C64(*a1 | ((unint64_t)*((unsigned __int8 *)a1 + 4) << 32), a1[2] | ((unint64_t)*((unsigned __int8 *)a1 + 12) << 32), a1[4] | ((unint64_t)*((unsigned __int8 *)a1 + 20) << 32), *a2 | ((unint64_t)*((unsigned __int8 *)a2 + 4) << 32), a2[2] | ((unint64_t)*((unsigned __int8 *)a2 + 12) << 32), a2[4] | ((unint64_t)*((unsigned __int8 *)a2 + 20) << 32));
}

uint64_t sub_1A5532248(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _OWORD *v5;
  unsigned int v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  int v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int v44;
  unint64_t v45;
  uint64_t v46;
  unsigned int v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  unsigned int v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unsigned int v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;

  v2 = v1;
  v4 = *(_QWORD *)v1;
  v98 = *(_QWORD *)(v1 + 8);
  v100 = *(_QWORD *)(v1 + 16);
  v5 = (_OWORD *)(v1 + 24);
  v99 = *(_QWORD *)(v1 + 24);
  v95 = *(_QWORD *)(v1 + 40);
  v96 = *(_QWORD *)(v1 + 48);
  v97 = *(_QWORD *)(v1 + 32);
  v6 = *(unsigned __int8 *)(v1 + 60);
  v7 = *(unsigned int *)(v1 + 56) | ((unint64_t)*(unsigned __int8 *)(v1 + 60) << 32);
  v8 = *(_QWORD *)a1;
  v9 = *(unsigned int *)(a1 + 8);
  v10 = *(unsigned __int8 *)(a1 + 12);
  sub_1A54E4334(*(_QWORD *)a1, v9, v10);
  sub_1A54E3414();
  v11 = MessageIdentifierSetNonEmpty.init(set:)(v8, v9 | (v10 << 32));
  v13 = v11;
  v14 = v12;
  if (!(v6 >> 6))
  {
    v24 = v11;
    if (BYTE4(v12) == 255)
    {
      LODWORD(v25) = *(_DWORD *)(a1 + 16);
      v26 = *(_DWORD *)(a1 + 24);
      if (v25 <= v26)
        v27 = *(_DWORD *)(a1 + 24);
      else
        v27 = *(_DWORD *)(a1 + 16);
      if ((*(_BYTE *)(a1 + 20) & 1) != 0)
        LODWORD(v25) = *(_DWORD *)(a1 + 24);
      else
        v26 = v27;
      if ((*(_BYTE *)(a1 + 28) & 1) == 0)
        LODWORD(v25) = v26;
      if (v25 >= v97)
        v28 = v97;
      else
        v28 = v25;
      if ((*(_BYTE *)(a1 + 28) & *(_BYTE *)(a1 + 20) & 1) != 0)
      {
        LODWORD(v25) = v97;
        v28 = v97;
      }
      if ((v97 & 0x100000000) != 0)
        v25 = v25;
      else
        v25 = v28;
      v90 = v25;
      v87 = ((v97 & 0x100000000uLL) >> 32) & *(_BYTE *)(a1 + 28) & *(_BYTE *)(a1 + 20);
      if ((*(_BYTE *)(a1 + 36) & 1) != 0)
        v29 = v95;
      else
        v29 = *(_DWORD *)(a1 + 32);
      if (*(_DWORD *)(a1 + 32) <= v95)
        v30 = v95;
      else
        v30 = *(_DWORD *)(a1 + 32);
      if ((*(_BYTE *)(a1 + 36) & 1) != 0)
        LODWORD(v31) = v95;
      else
        LODWORD(v31) = v30;
      if ((v95 & 0x100000000) != 0)
        v31 = v29;
      else
        v31 = v31;
      v85 = v31;
      if ((v95 & 0x100000000) != 0)
        v32 = (unint64_t)(*(_BYTE *)(a1 + 36) & 1) << 32;
      else
        v32 = 0;
      v82 = *(_QWORD *)(a1 + 40);
      v83 = v32;
      v80 = *(unsigned int *)(a1 + 48);
      v33 = *(unsigned __int8 *)(a1 + 52);
      sub_1A54E4334(v4, v98, SBYTE4(v98));
      sub_1A54E4334(v100, v99, SBYTE4(v99));
      MessageIdentifierSet.union(_:)(v82, v80 | (v33 << 32), v96, v7);
      v93 = v34;
      v36 = v35;
      result = sub_1A5529F7C(v4, v98, v100, v99, v97, v95, v96, v7, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
      *(_QWORD *)v2 = v4;
      *(_QWORD *)(v2 + 8) = v98 & 0xFFFFFFFFFFLL;
      v37 = 0x100000000;
      if ((v87 & 1) == 0)
        v37 = 0;
      *(_QWORD *)(v2 + 16) = v100;
      *(_QWORD *)(v2 + 24) = v99 & 0xFFFFFFFFFFLL;
      *(_QWORD *)(v2 + 32) = v37 | v90;
      *(_QWORD *)(v2 + 40) = v83 | v85;
      *(_QWORD *)(v2 + 48) = v93;
    }
    else
    {
      sub_1A54E4334(v4, v98, SBYTE4(v98));
      sub_1A54E4334(v100, v99, SBYTE4(v99));
      MessageIdentifierSet.union(_:)(v24, v14 & 0xFFFFFFFFFFLL, v4, v98 & 0xFFFFFFFFFFLL);
      result = MessageIdentifierSetNonEmpty.init(set:)(v54, v53 & 0xFFFFFFFFFFLL);
      v89 = v55;
      v92 = result;
      if ((~v55 & 0xFF00000000) == 0)
      {
        __break(1u);
        return result;
      }
      sub_1A54E3458(v4, v98, SBYTE4(v98));
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
      MessageIdentifierSet.subtract(_:)(v24, v14 & 0xFFFFFFFFFFLL);
      sub_1A5503B8C(v24, v14);
      v56 = *(_DWORD *)(a1 + 16);
      v57 = *(_DWORD *)(a1 + 24);
      if (v56 <= v57)
        v58 = *(_DWORD *)(a1 + 24);
      else
        v58 = *(_DWORD *)(a1 + 16);
      if ((*(_BYTE *)(a1 + 20) & 1) != 0)
        v56 = *(_DWORD *)(a1 + 24);
      else
        v57 = v58;
      if ((*(_BYTE *)(a1 + 28) & 1) == 0)
        v56 = v57;
      if (v56 >= v97)
        v59 = v97;
      else
        v59 = v56;
      if ((*(_BYTE *)(a1 + 28) & *(_BYTE *)(a1 + 20) & 1) != 0)
        v60 = v97;
      else
        v60 = v56;
      if ((*(_BYTE *)(a1 + 28) & *(_BYTE *)(a1 + 20) & 1) != 0)
        v59 = v97;
      v61 = *(_DWORD *)(a1 + 32);
      if ((v97 & 0x100000000) != 0)
        v62 = v60;
      else
        v62 = v59;
      v63 = ((v97 & 0x100000000uLL) >> 32) & *(_BYTE *)(a1 + 28) & *(_BYTE *)(a1 + 20);
      if ((v95 & 0x100000000) != 0)
      {
        if ((*(_BYTE *)(a1 + 36) & 1) != 0)
          v61 = v95;
        v79 = v61;
        v81 = (unint64_t)(*(_BYTE *)(a1 + 36) & 1) << 32;
      }
      else
      {
        v81 = 0;
        if (v61 <= v95)
          v61 = v95;
        if ((*(_BYTE *)(a1 + 36) & 1) != 0)
          v61 = v95;
        v79 = v61;
      }
      MessageIdentifierSet.union(_:)(*(_QWORD *)(a1 + 40), *(unsigned int *)(a1 + 48) | ((unint64_t)*(unsigned __int8 *)(a1 + 52) << 32), v96, v7);
      v76 = v75;
      v36 = v77;
      result = sub_1A5529F7C(v4, v98, v100, v99, v97, v95, v96, v7, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
      v78 = 0x100000000;
      if ((v63 & 1) == 0)
        v78 = 0;
      *(_QWORD *)v2 = v92;
      *(_QWORD *)(v2 + 8) = v89 & 0xFFFFFFFFFFLL;
      *(_QWORD *)(v2 + 16) = v100;
      *(_QWORD *)(v2 + 24) = v99 | ((unint64_t)BYTE4(v99) << 32);
      *(_QWORD *)(v2 + 32) = v78 | v62;
      *(_QWORD *)(v2 + 40) = v81 | v79;
      *(_QWORD *)(v2 + 48) = v76;
    }
    *(_BYTE *)(v2 + 60) = BYTE4(v36);
    *(_DWORD *)(v2 + 56) = v36;
    return result;
  }
  if (v6 >> 6 == 1)
  {
    if (BYTE4(v12) == 255)
    {
      v15 = *(_DWORD *)(a1 + 32);
      if ((*(_BYTE *)(a1 + 36) & 1) != 0)
        v16 = v4;
      else
        v16 = *(_DWORD *)(a1 + 32);
      if (v15 <= v4)
        v15 = v4;
      if ((*(_BYTE *)(a1 + 36) & 1) != 0)
        v15 = v4;
      if ((v4 & 0x100000000) != 0)
        v17 = v16;
      else
        v17 = v15;
      if ((v4 & 0x100000000) != 0)
        v18 = (unint64_t)(*(_BYTE *)(a1 + 36) & 1) << 32;
      else
        v18 = 0;
      MessageIdentifierSet.union(_:)(*(_QWORD *)(a1 + 40), *(unsigned int *)(a1 + 48) | ((unint64_t)*(unsigned __int8 *)(a1 + 52) << 32), v98, v100 & 0xFFFFFFFFFFLL);
      v20 = v19;
      v22 = v21;
      result = sub_1A5529F7C(v4, v98, v100, v99, v97, v95, v96, v7, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
      *(_QWORD *)v2 = v18 | v17;
      *(_QWORD *)(v2 + 8) = v20;
      *(_QWORD *)(v2 + 16) = v22 & 0xFFFFFFFFFFLL;
      *v5 = 0u;
      v5[1] = 0u;
      *(_BYTE *)(v2 + 60) = 64;
      *(_DWORD *)(v2 + 56) = 0;
    }
    else
    {
      v41 = sub_1A55C19FC(MEMORY[0x1E0DEE9D8]);
      v91 = v42;
      v94 = v41;
      LODWORD(v43) = *(_DWORD *)(a1 + 16);
      if ((*(_BYTE *)(a1 + 20) & 1) != 0)
        v44 = *(_DWORD *)(a1 + 24);
      else
        v44 = *(_DWORD *)(a1 + 16);
      if (v43 <= *(_DWORD *)(a1 + 24))
        LODWORD(v43) = *(_DWORD *)(a1 + 24);
      if ((*(_BYTE *)(a1 + 20) & 1) != 0)
        LODWORD(v43) = *(_DWORD *)(a1 + 24);
      if ((*(_BYTE *)(a1 + 28) & 1) != 0)
        v43 = v44;
      else
        v43 = v43;
      v88 = v43;
      if ((*(_BYTE *)(a1 + 28) & 1) != 0)
        v45 = (unint64_t)(*(_BYTE *)(a1 + 20) & 1) << 32;
      else
        v45 = 0;
      if ((*(_BYTE *)(a1 + 36) & 1) != 0)
        LODWORD(v46) = v4;
      else
        LODWORD(v46) = *(_DWORD *)(a1 + 32);
      if (*(_DWORD *)(a1 + 32) <= v4)
        v47 = v4;
      else
        v47 = *(_DWORD *)(a1 + 32);
      if ((*(_BYTE *)(a1 + 36) & 1) != 0)
        v47 = v4;
      if ((v4 & 0x100000000) != 0)
        v46 = v46;
      else
        v46 = v47;
      v84 = v46;
      v86 = v45;
      if ((v4 & 0x100000000) != 0)
        v48 = (unint64_t)(*(_BYTE *)(a1 + 36) & 1) << 32;
      else
        v48 = 0;
      MessageIdentifierSet.union(_:)(*(_QWORD *)(a1 + 40), *(unsigned int *)(a1 + 48) | ((unint64_t)*(unsigned __int8 *)(a1 + 52) << 32), v98, v100 & 0xFFFFFFFFFFLL);
      v50 = v49;
      v52 = v51;
      result = sub_1A5529F7C(v4, v98, v100, v99, v97, v95, v96, v7, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
      *(_QWORD *)v2 = v13;
      *(_QWORD *)(v2 + 8) = v14 & 0xFFFFFFFFFFLL;
      *(_QWORD *)(v2 + 16) = v94;
      *(_QWORD *)(v2 + 24) = v91 & 0xFFFFFFFFFFLL;
      *(_QWORD *)(v2 + 32) = v86 | v88;
      *(_QWORD *)(v2 + 40) = v48 | v84;
      *(_QWORD *)(v2 + 48) = v50;
      *(_BYTE *)(v2 + 60) = BYTE4(v52);
      *(_DWORD *)(v2 + 56) = v52;
    }
  }
  else if (BYTE4(v12) == 255)
  {
    v38 = *(_QWORD *)(a1 + 40);
    v39 = *(unsigned int *)(a1 + 48);
    v40 = *(unsigned __int8 *)(a1 + 52);
    *(_QWORD *)v2 = *(unsigned int *)(a1 + 32) | ((unint64_t)(*(_BYTE *)(a1 + 36) & 1) << 32);
    *(_QWORD *)(v2 + 8) = v38;
    *(_QWORD *)(v2 + 16) = v39 | (v40 << 32);
    *v5 = 0u;
    v5[1] = 0u;
    *(_DWORD *)(v2 + 56) = 0;
    *(_BYTE *)(v2 + 60) = 64;
    return sub_1A54E4334(v38, v39, v40);
  }
  else
  {
    v64 = sub_1A55C19FC(MEMORY[0x1E0DEE9D8]);
    v66 = *(_DWORD *)(a1 + 16);
    if ((*(_BYTE *)(a1 + 20) & 1) != 0)
      v67 = *(_DWORD *)(a1 + 24);
    else
      v67 = *(_DWORD *)(a1 + 16);
    if (v66 <= *(_DWORD *)(a1 + 24))
      v66 = *(_DWORD *)(a1 + 24);
    if ((*(_BYTE *)(a1 + 20) & 1) != 0)
      v66 = *(_DWORD *)(a1 + 24);
    if ((*(_BYTE *)(a1 + 28) & 1) != 0)
      v68 = v67;
    else
      v68 = v66;
    v69 = *(_QWORD *)(a1 + 40);
    if ((*(_BYTE *)(a1 + 28) & 1) != 0)
      v70 = (unint64_t)(*(_BYTE *)(a1 + 20) & 1) << 32;
    else
      v70 = 0;
    v71 = *(unsigned int *)(a1 + 48);
    v72 = v70 | v68;
    v73 = *(_BYTE *)(a1 + 52);
    v74 = *(unsigned int *)(a1 + 32) | ((unint64_t)(*(_BYTE *)(a1 + 36) & 1) << 32);
    *(_QWORD *)v2 = v13;
    *(_QWORD *)(v2 + 8) = v14 & 0xFFFFFFFFFFLL;
    *(_QWORD *)(v2 + 16) = v64;
    *(_QWORD *)(v2 + 24) = v65 & 0xFFFFFFFFFFLL;
    *(_QWORD *)(v2 + 32) = v72;
    *(_QWORD *)(v2 + 40) = v74;
    *(_QWORD *)(v2 + 48) = v69;
    *(_BYTE *)(v2 + 60) = v73;
    *(_DWORD *)(v2 + 56) = v71;
    return sub_1A54E4334(v69, v71, v73);
  }
  return result;
}

uint64_t sub_1A55329C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  int v4;
  char v5;
  int v6;
  uint64_t v8;
  _BYTE v9[8];
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[32];
  uint64_t v13;
  int v14;
  char v15;
  __int128 v16;
  __int128 v17;
  char v18;
  __int128 v19;
  _BYTE v20[24];
  _QWORD v21[2];
  uint64_t v22[2];
  _QWORD v23[2];
  __int128 v24;
  _OWORD v25[2];
  _BYTE v26[13];
  _BYTE v27[13];

  sub_1A5510484(v0, (uint64_t)v9);
  v1 = v10;
  v2 = v11;
  sub_1A5510484(v0, (uint64_t)v12);
  v3 = *(unsigned int *)((char *)&v16 + 11) | ((unint64_t)HIBYTE(v16) << 32);
  v4 = HIBYTE(v16) >> 6;
  if (v4)
  {
    if (v4 == 1)
    {
      HIBYTE(v16) = BYTE4(v3) & 0x3F;
      v5 = v12[4];
      v19 = *(_OWORD *)&v12[5];
      *(_QWORD *)&v24 = 0;
      *((_QWORD *)&v24 + 1) = 0xE000000000000000;
      sub_1A594C720();
      sub_1A594B5F8();
      if ((v5 & 1) == 0)
      {
        *(_QWORD *)&v17 = 0;
        *((_QWORD *)&v17 + 1) = 0xE000000000000000;
        sub_1A594C924();
      }
      sub_1A594B5F8();
      swift_bridgeObjectRelease();
      sub_1A594B5F8();
      *(_QWORD *)&v17 = 0;
      *((_QWORD *)&v17 + 1) = 0xE000000000000000;
      sub_1A54E4334(v1, v2, SBYTE4(v2));
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
      sub_1A594C924();
      sub_1A594B5F8();
      swift_bridgeObjectRelease();
      sub_1A5533928(v0);
      sub_1A594B5F8();
      sub_1A594B5F8();
      swift_bridgeObjectRelease();
      sub_1A594B5F8();
      return v24;
    }
    else
    {
      return 0x6E776F6E6B6E75;
    }
  }
  else
  {
    HIBYTE(v16) = BYTE4(v3) & 0x3F;
    v19 = *(_OWORD *)v12;
    *(_OWORD *)v20 = *(_OWORD *)&v12[16];
    *(_QWORD *)&v20[16] = v13;
    v6 = v14;
    v18 = v15;
    v17 = v16;
    *(_QWORD *)&v24 = 0;
    *((_QWORD *)&v24 + 1) = 0xE000000000000000;
    sub_1A594C720();
    v8 = v24;
    sub_1A594B5F8();
    v24 = v19;
    v25[0] = *(_OWORD *)v20;
    *(_QWORD *)((char *)v25 + 13) = *(_QWORD *)&v20[13];
    *(_QWORD *)v27 = v19;
    *(_QWORD *)&v27[5] = *(_QWORD *)((char *)&v19 + 5);
    *(_QWORD *)v26 = *(_QWORD *)v20;
    *(_QWORD *)&v26[5] = *(_OWORD *)v20 >> 40;
    sub_1A550F318((uint64_t)v27);
    sub_1A550F318((uint64_t)v26);
    sub_1A5532E5C();
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
    sub_1A550F348((uint64_t)v27);
    sub_1A550F348((uint64_t)v26);
    sub_1A594B5F8();
    if ((v18 & 1) == 0)
    {
      LODWORD(v23[0]) = v6;
      sub_1A594C924();
    }
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
    sub_1A594B5F8();
    v21[0] = *(_QWORD *)((char *)&v17 + 3);
    *(_QWORD *)((char *)v21 + 5) = *((_QWORD *)&v17 + 1);
    v22[0] = *(_QWORD *)((char *)&v17 + 3);
    *(uint64_t *)((char *)v22 + 5) = *((_QWORD *)&v17 + 1);
    sub_1A553397C(v22, v23);
    sub_1A550F318((uint64_t)v23);
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
    sub_1A594C924();
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
    sub_1A550F348((uint64_t)v21);
    sub_1A594B5F8();
    return v8;
  }
}

uint64_t sub_1A5532E28()
{
  uint64_t v0;
  uint64_t v2;

  sub_1A5510484(v0, (uint64_t)&v2);
  return sub_1A55329C8();
}

uint64_t sub_1A5532E5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  uint64_t v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;

  v1 = v0;
  v2 = *(_QWORD *)v0;
  v3 = *(unsigned int *)(v0 + 8);
  v4 = *(unsigned __int8 *)(v0 + 12);
  sub_1A54E3414();
  v5 = v3 | (v4 << 32);
  v6 = MessageIdentifierSet.count.getter(v2, v5);
  v24 = *(unsigned int *)(v1 + 24) | ((unint64_t)*(unsigned __int8 *)(v1 + 28) << 32);
  v25 = *(_QWORD *)(v1 + 16);
  v7 = MessageIdentifierSet.count.getter(v25, v24);
  if (v6 <= 0xA && (v7 & 0x8000000000000000) == 0 && v7 <= 10)
  {
    sub_1A594C720();
    sub_1A594B5F8();
    MessageIdentifierSet.count.getter(v2, v3 | (v4 << 32));
    sub_1A594CC9C();
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
    sub_1A594B5F8();
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
    sub_1A594C924();
    sub_1A594B5F8();
    MessageIdentifierSet.count.getter(v25, v24);
    sub_1A594CC9C();
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
    sub_1A594B5F8();
    sub_1A594C924();
    sub_1A594B5F8();
    if ((*(_BYTE *)(v1 + 36) & 1) != 0)
      goto LABEL_22;
    goto LABEL_21;
  }
  if ((unint64_t)v7 <= 0xA)
  {
    sub_1A594C720();
    sub_1A594B5F8();
    v28 = MessageIdentifierSet.count.getter(v2, v5);
    sub_1A594CC9C();
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
    sub_1A594B5F8();
    MessageIdentifierSet.ranges.getter(v2, v5);
    v9 = v17;
    v11 = v18;
    v12 = HIDWORD(v18);
    v19 = v18 & 0xFFFFFFFFFFLL;
    if (MessageIdentifierSet.RangeView.endIndex.getter(v17, v18 & 0xFFFFFFFFFFLL))
    {
      MessageIdentifierSet.RangeView.subscript.getter(0, v9, v19);
      sub_1A54E3458(v9, v11, v12);
      v11 = v28;
      if ((sub_1A5531860(v2, v5, (void (*)(void))sub_1A54E3414) & 0x100000000) == 0)
      {
        static MessageIdentifier.... infix(_:_:)();
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796E58);
        sub_1A594C924();
        sub_1A594B5F8();
        MessageIdentifierSet.count.getter(v25, v24);
        sub_1A594CC9C();
        sub_1A594B5F8();
        swift_bridgeObjectRelease();
        sub_1A594B5F8();
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
        goto LABEL_19;
      }
    }
    else
    {
      sub_1A54E3458(v9, v11, v12);
    }
    __break(1u);
    goto LABEL_25;
  }
  if (v6 > 0xA)
  {
    sub_1A594C720();
    sub_1A594B5F8();
    v26 = MessageIdentifierSet.count.getter(v2, v5);
    sub_1A594CC9C();
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
    sub_1A594B5F8();
    MessageIdentifierSet.ranges.getter(v2, v5);
    v9 = v8;
    v11 = v10;
    v12 = HIDWORD(v10);
    v13 = v10 & 0xFFFFFFFFFFLL;
    if (MessageIdentifierSet.RangeView.endIndex.getter(v8, v10 & 0xFFFFFFFFFFLL))
    {
      MessageIdentifierSet.RangeView.subscript.getter(0, v9, v13);
      sub_1A54E3458(v9, v11, v12);
      v11 = v26;
      if ((sub_1A5531860(v2, v5, (void (*)(void))sub_1A54E3414) & 0x100000000) == 0)
      {
        static MessageIdentifier.... infix(_:_:)();
        LOBYTE(v2) = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796E58);
        sub_1A594C924();
        sub_1A594B5F8();
        v27 = MessageIdentifierSet.count.getter(v25, v24);
        sub_1A594CC9C();
        sub_1A594B5F8();
        swift_bridgeObjectRelease();
        sub_1A594B5F8();
        MessageIdentifierSet.ranges.getter(v25, v24);
        v9 = v14;
        v11 = v15;
        v12 = HIDWORD(v15);
        v16 = v15 & 0xFFFFFFFFFFLL;
        if (MessageIdentifierSet.RangeView.endIndex.getter(v14, v15 & 0xFFFFFFFFFFLL))
        {
          MessageIdentifierSet.RangeView.subscript.getter(0, v9, v16);
          sub_1A54E3458(v9, v11, v12);
          v11 = v27;
          if ((sub_1A5531860(v25, v24, (void (*)(void))sub_1A54E3414) & 0x100000000) == 0)
          {
            static MessageIdentifier.... infix(_:_:)();
            goto LABEL_19;
          }
          goto LABEL_28;
        }
LABEL_27:
        sub_1A54E3458(v9, v11, v12);
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
LABEL_25:
    sub_1A54E3458(v9, v11, v12);
    goto LABEL_26;
  }
  sub_1A594C720();
  sub_1A594B5F8();
  MessageIdentifierSet.count.getter(v2, v3 | (v4 << 32));
  sub_1A594CC9C();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
  sub_1A594C924();
  sub_1A594B5F8();
  MessageIdentifierSet.count.getter(v25, v24);
  sub_1A594CC9C();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  MessageIdentifierSet.ranges.getter(v25, v24);
  v9 = v20;
  v11 = v21;
  v2 = HIDWORD(v21);
  v22 = v21 & 0xFFFFFFFFFFLL;
  if (!MessageIdentifierSet.RangeView.endIndex.getter(v20, v21 & 0xFFFFFFFFFFLL))
  {
LABEL_29:
    result = sub_1A54E3458(v9, v11, v2);
    goto LABEL_30;
  }
  MessageIdentifierSet.RangeView.subscript.getter(0, v9, v22);
  sub_1A54E3458(v9, v11, v2);
  result = sub_1A5531860(v25, v24, (void (*)(void))sub_1A54E3414);
  if ((result & 0x100000000) == 0)
  {
    static MessageIdentifier.... infix(_:_:)();
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796E58);
LABEL_19:
    sub_1A594C924();
    sub_1A594B5F8();
    if ((*(_BYTE *)(v1 + 36) & 1) != 0)
      goto LABEL_22;
LABEL_21:
    sub_1A594C924();
LABEL_22:
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1A5533928(uint64_t a1)
{
  sub_1A5529F7C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(unsigned int *)(a1 + 56) | ((unint64_t)*(unsigned __int8 *)(a1 + 60) << 32), (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
  return a1;
}

_QWORD *sub_1A553397C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *(_QWORD *)((char *)a2 + 5) = *(uint64_t *)((char *)a1 + 5);
  *a2 = v2;
  return a2;
}

void sub_1A5533994(uint64_t a1, uint64_t a2)
{
  int32x2_t *v4;
  uint64_t v5;
  uint64_t v6;
  int32x2_t *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v4 = *(int32x2_t **)a1;
  v5 = *(unsigned int *)(a1 + 8);
  v6 = *(unsigned __int8 *)(a1 + 12);
  v7 = *(int32x2_t **)a2;
  v8 = *(unsigned int *)(a2 + 8);
  v9 = *(unsigned __int8 *)(a2 + 12);
  sub_1A54E3414();
  static MessageIdentifierSet.__derived_struct_equals(_:_:)(v4, v5 | (v6 << 32), v7, v8 | (v9 << 32));
  if ((v10 & 1) != 0)
  {
    if ((*(_BYTE *)(a1 + 20) & 1) != 0)
    {
      if ((*(_BYTE *)(a2 + 20) & 1) == 0)
        return;
    }
    else if ((*(_BYTE *)(a2 + 20) & 1) != 0 || *(_DWORD *)(a2 + 16) != *(_DWORD *)(a1 + 16))
    {
      return;
    }
    if ((*(_BYTE *)(a1 + 28) & 1) != 0)
    {
      if ((*(_BYTE *)(a2 + 28) & 1) == 0)
        return;
    }
    else if ((*(_BYTE *)(a2 + 28) & 1) != 0 || *(_DWORD *)(a2 + 24) != *(_DWORD *)(a1 + 24))
    {
      return;
    }
    if ((*(_BYTE *)(a1 + 36) & 1) != 0)
    {
      if ((*(_BYTE *)(a2 + 36) & 1) == 0)
        return;
    }
    else if ((*(_BYTE *)(a2 + 36) & 1) != 0 || *(_DWORD *)(a2 + 32) != *(_DWORD *)(a1 + 32))
    {
      return;
    }
    static MessageIdentifierSet.__derived_struct_equals(_:_:)(*(int32x2_t **)(a1 + 40), *(unsigned int *)(a1 + 48) | ((unint64_t)*(unsigned __int8 *)(a1 + 52) << 32), *(int32x2_t **)(a2 + 40), *(unsigned int *)(a2 + 48) | ((unint64_t)*(unsigned __int8 *)(a2 + 52) << 32));
  }
}

void sub_1A5533AD8(uint64_t a1, uint64_t a2)
{
  int32x2_t *v4;
  uint64_t v5;
  uint64_t v6;
  int32x2_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  int v15;
  int v16;
  char v17;
  char v18;
  int32x2_t *v19;
  uint64_t v20;
  uint64_t v21;
  int32x2_t *v22;

  v4 = *(int32x2_t **)a1;
  v5 = *(unsigned int *)(a1 + 8);
  v6 = *(unsigned __int8 *)(a1 + 12);
  v21 = *(unsigned int *)(a1 + 24);
  v22 = *(int32x2_t **)(a1 + 16);
  v20 = *(unsigned __int8 *)(a1 + 28);
  v7 = *(int32x2_t **)a2;
  v8 = *(unsigned int *)(a2 + 8);
  v9 = *(unsigned __int8 *)(a2 + 12);
  v19 = *(int32x2_t **)(a2 + 16);
  v10 = *(unsigned int *)(a2 + 24);
  v11 = *(unsigned __int8 *)(a2 + 28);
  v15 = *(_DWORD *)(a2 + 32);
  v16 = *(_DWORD *)(a1 + 32);
  v17 = *(_BYTE *)(a2 + 36);
  v18 = *(_BYTE *)(a1 + 36);
  sub_1A54E3414();
  static MessageIdentifierSet.__derived_struct_equals(_:_:)(v4, v5 | (v6 << 32), v7, v8 | (v9 << 32));
  if ((v12 & 1) != 0)
  {
    static MessageIdentifierSet.__derived_struct_equals(_:_:)(v22, v21 | (v20 << 32), v19, v10 | (v11 << 32));
    if ((v13 & 1) != 0)
    {
      if ((v18 & 1) != 0)
      {
        if ((v17 & 1) == 0)
          return;
      }
      else if ((v17 & 1) != 0 || v15 != v16)
      {
        return;
      }
      v14 = *(_BYTE *)(a2 + 44);
      if ((*(_BYTE *)(a1 + 44) & 1) != 0)
      {
        if (!*(_BYTE *)(a2 + 44))
          return;
LABEL_14:
        static MessageIdentifierSet.__derived_struct_equals(_:_:)(*(int32x2_t **)(a1 + 48), *(unsigned int *)(a1 + 56) | ((unint64_t)*(unsigned __int8 *)(a1 + 60) << 32), *(int32x2_t **)(a2 + 48), *(unsigned int *)(a2 + 56) | ((unint64_t)*(unsigned __int8 *)(a2 + 60) << 32));
        return;
      }
      if (*(_DWORD *)(a2 + 40) != *(_DWORD *)(a1 + 40))
        v14 = 1;
      if ((v14 & 1) == 0)
        goto LABEL_14;
    }
  }
}

BOOL sub_1A5533C64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if ((a1 & 0x100000000) != 0)
  {
    if ((a4 & 0x100000000) == 0)
      return 0;
  }
  else if ((a4 & 0x100000000) != 0 || a4 != a1)
  {
    return 0;
  }
  if ((a2 & 0x100000000) != 0)
  {
    if ((a5 & 0x100000000) == 0)
      return 0;
  }
  else if ((a5 & 0x100000000) != 0 || a5 != a2)
  {
    return 0;
  }
  if ((a3 & 0x100000000) != 0)
    return (a6 & 0x100000000) != 0;
  return (a6 & 0x100000000) == 0 && a6 == a3;
}

uint64_t sub_1A5533CB8(uint64_t a1, int32x2_t *a2, uint64_t a3, uint64_t a4, int32x2_t *a5, unint64_t a6)
{
  uint64_t v11;
  int v12;

  if ((a1 & 0x100000000) != 0)
  {
    if ((a4 & 0x100000000) == 0)
      return 0;
  }
  else if ((a4 & 0x100000000) != 0 || a4 != a1)
  {
    return 0;
  }
  v11 = (a6 >> 40) & 1;
  sub_1A54E3414();
  static MessageIdentifierSet.__derived_struct_equals(_:_:)(a2, a3 & 0xFFFFFFFFFFLL, a5, a6 & 0xFFFFFFFFFFLL);
  return v12 & (((a3 & 0x10000000000) == 0) ^ v11);
}

uint64_t sub_1A5533D44(uint64_t a1, uint64_t a2)
{
  int32x2_t *v4;
  uint64_t v5;
  uint64_t v6;
  int32x2_t *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;

  v4 = *(int32x2_t **)a1;
  v5 = *(unsigned int *)(a1 + 8);
  v6 = *(unsigned __int8 *)(a1 + 12);
  v7 = *(int32x2_t **)a2;
  v8 = *(unsigned int *)(a2 + 8);
  v9 = *(unsigned __int8 *)(a2 + 12);
  sub_1A54E3414();
  static MessageIdentifierSet.__derived_struct_equals(_:_:)(v4, v5 | (v6 << 32), v7, v8 | (v9 << 32));
  if ((v10 & 1) == 0)
    return 0;
  static MessageIdentifierSet.__derived_struct_equals(_:_:)(*(int32x2_t **)(a1 + 16), *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int8 *)(a1 + 28) << 32), *(int32x2_t **)(a2 + 16), *(unsigned int *)(a2 + 24) | ((unint64_t)*(unsigned __int8 *)(a2 + 28) << 32));
  if ((v11 & 1) == 0)
    return 0;
  v12 = *(_BYTE *)(a2 + 36);
  if ((*(_BYTE *)(a1 + 36) & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 36) & 1) == 0)
      return 0;
  }
  else
  {
    if (*(_DWORD *)(a2 + 32) != *(_DWORD *)(a1 + 32))
      v12 = 1;
    if ((v12 & 1) != 0)
      return 0;
  }
  return 1;
}

uint64_t sub_1A5533E2C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  int v4;
  int v5;
  char v6;
  int32x2_t *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  int32x2_t *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  int32x2_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int32x2_t *v22;
  unsigned __int8 v23;
  int32x2_t *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  unint64_t v29;
  int8x16_t v30;
  unint64_t v31;
  char v34;
  char v35;
  __int32 v36;
  int v37;
  int32x2_t *v38;
  uint64_t v39;
  int32x2_t *v40;
  __int32 v41;
  __int8 v42;
  __int8 v43;
  uint64_t v44;
  uint64_t v45;
  int32x2_t *v46;
  int v47;
  char v48;
  char v49;
  int32x2_t *v50;
  int32x2_t *v51;
  int32x2_t *v52;
  int32x2_t *v53;
  int8x16_t v54;
  int8x16_t v55;
  unsigned int v56;
  unsigned __int8 v57;
  int32x2_t *v58;
  int32x2_t *v59;
  int32x2_t *v60;
  unsigned int v61;
  unsigned __int8 v62;
  int v63;
  char v64;
  int v65;
  char v66;
  int32x2_t *v67;
  unsigned int v68;
  unsigned __int8 v69;

  sub_1A5510484(a1, (uint64_t)&v58);
  v3 = v68 | ((unint64_t)v69 << 32);
  v4 = v69 >> 6;
  if (v4)
  {
    if (v4 != 1)
    {
      sub_1A5510484(a2, (uint64_t)&v51);
      v29 = v56 | ((unint64_t)v57 << 32);
      if ((v29 & 0xC000000000) != 0x8000000000)
        return 0;
      v30 = vorrq_s8(v54, v55);
      v31 = *(_QWORD *)&vorr_s8(*(int8x8_t *)v30.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v30, v30, 8uLL)) | (unint64_t)v53 | (unint64_t)v52 | (unint64_t)v51;
      return v29 == 0x8000000000 && v31 == 0;
    }
    v69 = BYTE4(v3) & 0x3F;
    v5 = (int)v58;
    v6 = BYTE4(v58);
    v7 = v59;
    v8 = v60;
    v9 = BYTE4(v60);
    v10 = BYTE5(v60);
    sub_1A5510484(a2, (uint64_t)&v51);
    v11 = v56 | ((unint64_t)v57 << 32);
    if ((v11 & 0xC000000000) == 0x4000000000)
    {
      v57 = BYTE4(v11) & 0x3F;
      v12 = v52;
      v13 = v53;
      v14 = BYTE4(v53);
      v15 = BYTE5(v53);
      if ((v6 & 1) == 0)
      {
        if ((BYTE4(v51) & 1) != 0 || (_DWORD)v51 != v5)
          return 0;
LABEL_23:
        sub_1A54E3414();
        static MessageIdentifierSet.__derived_struct_equals(_:_:)(v7, v8 | (v9 << 32), v12, v13 | (v14 << 32));
        return (v34 & 1) != 0 && (v10 & 1) == (v15 & 1);
      }
      if ((BYTE4(v51) & 1) != 0)
        goto LABEL_23;
    }
  }
  else
  {
    v69 = BYTE4(v3) & 0x3F;
    v16 = v58;
    v17 = v59;
    v18 = BYTE4(v59);
    v50 = v60;
    v19 = v61;
    v20 = v62;
    v49 = v64;
    v21 = v65;
    v47 = v63;
    v48 = v66;
    v22 = v67;
    sub_1A5510484(a2, (uint64_t)&v51);
    v23 = v57;
    if (v57 >> 6)
      return 0;
    v37 = v21;
    v39 = v56;
    v40 = v22;
    v24 = v51;
    v25 = v52;
    v26 = BYTE4(v52);
    v45 = v54.u32[0];
    v46 = v53;
    v44 = v54.u8[4];
    v43 = v54.i8[12];
    v36 = v55.i32[0];
    v41 = v54.i32[2];
    v42 = v55.i8[4];
    v38 = (int32x2_t *)v55.i64[1];
    sub_1A54E3414();
    static MessageIdentifierSet.__derived_struct_equals(_:_:)(v16, v17 | (v18 << 32), v24, v25 | (v26 << 32));
    if ((v27 & 1) == 0)
      return 0;
    static MessageIdentifierSet.__derived_struct_equals(_:_:)(v50, v19 | (v20 << 32), v46, v45 | (v44 << 32));
    if ((v28 & 1) == 0)
      return 0;
    if ((v49 & 1) != 0)
    {
      if ((v43 & 1) == 0)
        return 0;
    }
    else if ((v43 & 1) != 0 || v41 != v47)
    {
      return 0;
    }
    if ((v48 & 1) != 0)
    {
      if ((v42 & 1) == 0)
        return 0;
    }
    else if ((v42 & 1) != 0 || v36 != v37)
    {
      return 0;
    }
    static MessageIdentifierSet.__derived_struct_equals(_:_:)(v40, v3 & 0x3FFFFFFFFFLL, v38, v39 & 0xFFFFFF00FFFFFFFFLL | ((unint64_t)v23 << 32));
    if ((v35 & 1) != 0)
      return 1;
  }
  return 0;
}

uint64_t sub_1A5534138(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  unint64_t v13;
  int v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  int v25;
  _BYTE v26[8];
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unsigned int v30;
  unsigned __int8 v31;
  uint64_t v32;
  unsigned int v33;
  unsigned __int8 v34;
  unsigned int v35;
  unsigned __int8 v36;

  v3 = v2;
  sub_1A5510484(v3, (uint64_t)v26);
  v6 = v27;
  v7 = v28;
  v8 = v29;
  v9 = v31;
  v10 = v30;
  v11 = *(_QWORD *)(a2 + 16);
  if (v11)
  {
    v25 = *(_DWORD *)(a2 + 8 * v11 + 24);
    sub_1A54E3414();
    static MessageIdentifier.... infix(_:_:)();
    v12 = v32;
  }
  else
  {
    v12 = 0;
  }
  sub_1A5510484(v3, (uint64_t)&v32);
  v13 = v35 | ((unint64_t)v36 << 32);
  v14 = v36 >> 6;
  if (v14)
  {
    if (v14 == 1)
    {
      v36 = BYTE4(v13) & 0x3F;
      if (a1 > 1)
      {
        v15 = HIDWORD(v7);
        sub_1A54E4334(v6, v7, SBYTE4(v7));
        v8 = v6;
        goto LABEL_13;
      }
    }
    else if (a1 > 1)
    {
      v23 = 1;
      return v23 & 1;
    }
LABEL_19:
    v23 = 0;
    return v23 & 1;
  }
  v36 = BYTE4(v13) & 0x3F;
  v16 = v32;
  v17 = v33;
  v18 = v34;
  sub_1A54E3414();
  v19 = MessageIdentifierSet.count.getter(v16, v17 | (v18 << 32));
  if (a1 >= 0)
    v20 = a1;
  else
    v20 = a1 + 1;
  if (v19 >= v20 >> 1)
    goto LABEL_19;
  v7 = v10 | (v9 << 32);
  LOBYTE(v15) = BYTE4(v7);
  sub_1A54E4334(v8, v7, SBYTE4(v7));
LABEL_13:
  sub_1A54E3414();
  if (MessageIdentifierSet.isEmpty.getter(v8, v7 | ((unint64_t)v15 << 32))
    || !v11)
  {
    sub_1A54E3458(v8, v7, v15);
    goto LABEL_19;
  }
  v25 = v12;
  MessageIdentifierSet.contains(_:)((uint64_t)&v25, v8, v7 | ((unint64_t)v15 << 32));
  v22 = v21;
  sub_1A54E3458(v8, v7, v15);
  v23 = v22 ^ 1;
  return v23 & 1;
}

uint64_t sub_1A5534334(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE795BE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t destroy for NewestMessages(uint64_t a1)
{
  return sub_1A54E3458(*(_QWORD *)a1, *(unsigned int *)(a1 + 8), *(_BYTE *)(a1 + 12));
}

uint64_t _s15MissingMessagesO11QueriedUIDsVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned int v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_DWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 12);
  sub_1A54E4334(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_DWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 12) = v5;
  return a1;
}

uint64_t _s15MissingMessagesO11QueriedUIDsVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_DWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 12);
  sub_1A54E4334(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(unsigned int *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_DWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 12);
  *(_BYTE *)(a1 + 12) = v5;
  sub_1A54E3458(v6, v7, v8);
  return a1;
}

_QWORD *__swift_memcpy13_8_0(_QWORD *result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_QWORD *)((char *)result + 5) = *(uint64_t *)((char *)a2 + 5);
  *result = v2;
  return result;
}

uint64_t _s15MissingMessagesO11QueriedUIDsVwta(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *a2;
  v4 = *((_DWORD *)a2 + 2);
  v5 = *((_BYTE *)a2 + 12);
  v6 = *(_QWORD *)a1;
  v7 = *(unsigned int *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_DWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 12);
  *(_BYTE *)(a1 + 12) = v5;
  sub_1A54E3458(v6, v7, v8);
  return a1;
}

uint64_t _s15MissingMessagesO11QueriedUIDsVwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 13))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 12);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s15MissingMessagesO11QueriedUIDsVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 12) = 0;
    *(_DWORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 13) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 13) = 0;
    if (a2)
      *(_BYTE *)(result + 12) = -(char)a2;
  }
  return result;
}

ValueMetadata *_s15MissingMessagesO11QueriedUIDsVMa()
{
  return &_s15MissingMessagesO11QueriedUIDsVN;
}

uint64_t _s15MissingMessagesOwxx(uint64_t a1)
{
  return sub_1A5529F7C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(unsigned int *)(a1 + 56) | ((unint64_t)*(unsigned __int8 *)(a1 + 60) << 32), (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
}

uint64_t _s15MissingMessagesOwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(unsigned __int8 *)(a2 + 60);
  v11 = *(unsigned int *)(a2 + 56);
  sub_1A5529F7C(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v11 | (v10 << 32), (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E4334);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_BYTE *)(a1 + 60) = v10;
  *(_DWORD *)(a1 + 56) = v11;
  return a1;
}

uint64_t _s15MissingMessagesOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(unsigned __int8 *)(a2 + 60);
  v11 = *(unsigned int *)(a2 + 56);
  sub_1A5529F7C(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v11 | (v10 << 32), (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E4334);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(unsigned int *)(a1 + 56) | ((unint64_t)*(unsigned __int8 *)(a1 + 60) << 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_DWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 60) = v10;
  sub_1A5529F7C(v12, v13, v14, v15, v16, v17, v18, v19, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
  return a1;
}

__n128 __swift_memcpy61_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 45) = *(_OWORD *)(a2 + 45);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s15MissingMessagesOwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  __int128 v14;

  v3 = *(_QWORD *)(a2 + 48);
  v4 = *(_BYTE *)(a2 + 60);
  v5 = *(_DWORD *)(a2 + 56);
  v6 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  v12 = *(_QWORD *)(a1 + 48);
  v13 = *(unsigned int *)(a1 + 56) | ((unint64_t)*(unsigned __int8 *)(a1 + 60) << 32);
  v14 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v14;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = v3;
  *(_DWORD *)(a1 + 56) = v5;
  *(_BYTE *)(a1 + 60) = v4;
  sub_1A5529F7C(v6, v8, v7, v9, v10, v11, v12, v13, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
  return a1;
}

uint64_t _s15MissingMessagesOwet(uint64_t a1, int a2)
{
  unsigned int v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 61))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = (*(_QWORD *)(a1 + 32) >> 3) & 0xC0000000 | (*(_QWORD *)(a1 + 24) >> 34);
  if (v2 > 0x80000000)
    v3 = ~v2;
  else
    v3 = -1;
  return (v3 + 1);
}

uint64_t _s15MissingMessagesOwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 60) = 0;
    *(_DWORD *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 61) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 0;
      *(_QWORD *)(result + 24) = (unint64_t)-a2 << 34;
      *(_QWORD *)(result + 40) = 0;
      *(_QWORD *)(result + 48) = 0;
      *(_QWORD *)(result + 32) = (8 * -a2) & 0x600000000;
      *(_QWORD *)(result + 53) = 0;
      return result;
    }
    *(_BYTE *)(result + 61) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1A5534874(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 60) >> 6;
  if (v1 <= 1)
    return v1;
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1A5534890(uint64_t a1)
{
  uint64_t result;
  unsigned int v2;
  unint64_t v3;

  v2 = *(_DWORD *)(a1 + 56);
  result = a1 + 56;
  v3 = v2 | ((unint64_t)*(unsigned __int8 *)(result + 4) << 32);
  *(_DWORD *)result = v2;
  *(_BYTE *)(result + 4) = BYTE4(v3) & 0x3F;
  return result;
}

int8x16_t sub_1A55348AC(uint64_t a1, uint64_t a2)
{
  int8x16_t result;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;

  if (a2 < 2)
  {
    v4 = *(_DWORD *)(a1 + 56);
    v3 = a1 + 56;
    v5 = *(_QWORD *)(v3 - 16) & 0x1FFFFFFFFLL;
    v6 = (a2 << 38) | ((unint64_t)(*(_BYTE *)(v3 + 4) & 3) << 32);
    result = vandq_s8(*(int8x16_t *)(v3 - 32), (int8x16_t)xmmword_1A59ABD80);
    *(int8x16_t *)(v3 - 32) = result;
    *(_QWORD *)(v3 - 16) = v5;
    *(_DWORD *)v3 = v4;
    *(_BYTE *)(v3 + 4) = BYTE4(v6);
  }
  else
  {
    *(_QWORD *)a1 = (a2 - 2);
    result.i64[0] = 0;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_DWORD *)(a1 + 56) = 0;
    *(_BYTE *)(a1 + 60) = 0x80;
  }
  return result;
}

ValueMetadata *_s15MissingMessagesOMa()
{
  return &_s15MissingMessagesON;
}

uint64_t _s15MissingMessagesO8ProgressVwxx(uint64_t a1)
{
  sub_1A54E3458(*(_QWORD *)a1, *(unsigned int *)(a1 + 8), *(_BYTE *)(a1 + 12));
  return sub_1A54E3458(*(_QWORD *)(a1 + 16), *(unsigned int *)(a1 + 24), *(_BYTE *)(a1 + 28));
}

uint64_t _s15MissingMessagesO8ProgressVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;
  char v6;
  uint64_t v7;
  unsigned int v8;
  char v9;

  v4 = *(_QWORD *)a2;
  v5 = *(_DWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 12);
  sub_1A54E4334(*(_QWORD *)a2, v5, v6);
  *(_QWORD *)a1 = v4;
  *(_DWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 12) = v6;
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_DWORD *)(a2 + 24);
  v9 = *(_BYTE *)(a2 + 28);
  sub_1A54E4334(v7, v8, v9);
  *(_QWORD *)(a1 + 16) = v7;
  *(_DWORD *)(a1 + 24) = v8;
  *(_BYTE *)(a1 + 28) = v9;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  return a1;
}

uint64_t _s15MissingMessagesO8ProgressVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  int v16;

  v4 = *(_QWORD *)a2;
  v5 = *(_DWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 12);
  sub_1A54E4334(*(_QWORD *)a2, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(unsigned int *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_DWORD *)(a1 + 8) = v5;
  v9 = *(_BYTE *)(a1 + 12);
  *(_BYTE *)(a1 + 12) = v6;
  sub_1A54E3458(v7, v8, v9);
  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_DWORD *)(a2 + 24);
  v12 = *(_BYTE *)(a2 + 28);
  sub_1A54E4334(v10, v11, v12);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(unsigned int *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v10;
  *(_DWORD *)(a1 + 24) = v11;
  v15 = *(_BYTE *)(a1 + 28);
  *(_BYTE *)(a1 + 28) = v12;
  sub_1A54E3458(v13, v14, v15);
  v16 = *(_DWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  *(_DWORD *)(a1 + 32) = v16;
  return a1;
}

__n128 __swift_memcpy37_8_0(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 29) = *(_QWORD *)(a2 + 29);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s15MissingMessagesO8ProgressVwta(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  int v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v4 = *a2;
  v5 = *((_DWORD *)a2 + 2);
  v6 = *((_BYTE *)a2 + 12);
  v7 = *(_QWORD *)a1;
  v8 = *(unsigned int *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_DWORD *)(a1 + 8) = v5;
  v9 = *(_BYTE *)(a1 + 12);
  *(_BYTE *)(a1 + 12) = v6;
  sub_1A54E3458(v7, v8, v9);
  v10 = *((_DWORD *)a2 + 6);
  v11 = *((_BYTE *)a2 + 28);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(unsigned int *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_DWORD *)(a1 + 24) = v10;
  v14 = *(_BYTE *)(a1 + 28);
  *(_BYTE *)(a1 + 28) = v11;
  sub_1A54E3458(v12, v13, v14);
  *(_DWORD *)(a1 + 32) = *((_DWORD *)a2 + 8);
  *(_BYTE *)(a1 + 36) = *((_BYTE *)a2 + 36);
  return a1;
}

uint64_t _s15MissingMessagesO8ProgressVwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 37))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 12);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s15MissingMessagesO8ProgressVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 36) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 37) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 37) = 0;
    if (a2)
      *(_BYTE *)(result + 12) = -(char)a2;
  }
  return result;
}

ValueMetadata *_s15MissingMessagesO8ProgressVMa()
{
  return &_s15MissingMessagesO8ProgressVN;
}

unint64_t sub_1A5534BE4()
{
  unint64_t result;

  result = qword_1EE796A60;
  if (!qword_1EE796A60)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for SequenceNumber, &type metadata for SequenceNumber);
    atomic_store(result, (unint64_t *)&qword_1EE796A60);
  }
  return result;
}

uint64_t _s15MissingMessagesO10NewMissingVwxx(uint64_t a1)
{
  sub_1A54E3458(*(_QWORD *)a1, *(unsigned int *)(a1 + 8), *(_BYTE *)(a1 + 12));
  return sub_1A54E3458(*(_QWORD *)(a1 + 40), *(unsigned int *)(a1 + 48), *(_BYTE *)(a1 + 52));
}

uint64_t _s15MissingMessagesO10NewMissingVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  unsigned int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v2 = a2;
  v4 = *(_QWORD *)a2;
  v5 = *(_DWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 12);
  sub_1A54E4334(*(_QWORD *)a2, v5, v6);
  *(_QWORD *)a1 = v4;
  *(_DWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 12) = v6;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v2 + 16);
  *(_QWORD *)(a1 + 29) = *(_QWORD *)(v2 + 29);
  v7 = *(_QWORD *)(v2 + 40);
  v8 = *(unsigned int *)(v2 + 48);
  LOBYTE(v2) = *(_BYTE *)(v2 + 52);
  sub_1A54E4334(v7, v8, v2);
  *(_QWORD *)(a1 + 40) = v7;
  *(_DWORD *)(a1 + 48) = v8;
  *(_BYTE *)(a1 + 52) = v2;
  return a1;
}

uint64_t _s15MissingMessagesO10NewMissingVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  unsigned int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v2 = a2;
  v4 = *(_QWORD *)a2;
  v5 = *(_DWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 12);
  sub_1A54E4334(*(_QWORD *)a2, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(unsigned int *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_DWORD *)(a1 + 8) = v5;
  v9 = *(_BYTE *)(a1 + 12);
  *(_BYTE *)(a1 + 12) = v6;
  sub_1A54E3458(v7, v8, v9);
  v10 = *(_DWORD *)(v2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(v2 + 20);
  *(_DWORD *)(a1 + 16) = v10;
  v11 = *(_DWORD *)(v2 + 24);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(v2 + 28);
  *(_DWORD *)(a1 + 24) = v11;
  v12 = *(_DWORD *)(v2 + 32);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(v2 + 36);
  *(_DWORD *)(a1 + 32) = v12;
  v13 = *(_QWORD *)(v2 + 40);
  v14 = *(unsigned int *)(v2 + 48);
  LOBYTE(v2) = *(_BYTE *)(v2 + 52);
  sub_1A54E4334(v13, v14, v2);
  v15 = *(_QWORD *)(a1 + 40);
  v16 = *(unsigned int *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = v13;
  *(_DWORD *)(a1 + 48) = v14;
  v17 = *(_BYTE *)(a1 + 52);
  *(_BYTE *)(a1 + 52) = v2;
  sub_1A54E3458(v15, v16, v17);
  return a1;
}

__n128 __swift_memcpy53_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 45) = *(_QWORD *)(a2 + 45);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s15MissingMessagesO10NewMissingVwta(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  int v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v4 = *a2;
  v5 = *((_DWORD *)a2 + 2);
  v6 = *((_BYTE *)a2 + 12);
  v7 = *(_QWORD *)a1;
  v8 = *(unsigned int *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_DWORD *)(a1 + 8) = v5;
  v9 = *(_BYTE *)(a1 + 12);
  *(_BYTE *)(a1 + 12) = v6;
  sub_1A54E3458(v7, v8, v9);
  *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
  *(_BYTE *)(a1 + 20) = *((_BYTE *)a2 + 20);
  *(_DWORD *)(a1 + 24) = *((_DWORD *)a2 + 6);
  *(_BYTE *)(a1 + 28) = *((_BYTE *)a2 + 28);
  *(_DWORD *)(a1 + 32) = *((_DWORD *)a2 + 8);
  *(_BYTE *)(a1 + 36) = *((_BYTE *)a2 + 36);
  v10 = *((_DWORD *)a2 + 12);
  v11 = *((_BYTE *)a2 + 52);
  v12 = *(_QWORD *)(a1 + 40);
  v13 = *(unsigned int *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = a2[5];
  *(_DWORD *)(a1 + 48) = v10;
  v14 = *(_BYTE *)(a1 + 52);
  *(_BYTE *)(a1 + 52) = v11;
  sub_1A54E3458(v12, v13, v14);
  return a1;
}

uint64_t _s15MissingMessagesO10NewMissingVwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 53))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 12);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s15MissingMessagesO10NewMissingVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 52) = 0;
    *(_DWORD *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 53) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 53) = 0;
    if (a2)
      *(_BYTE *)(result + 12) = -(char)a2;
  }
  return result;
}

ValueMetadata *_s15MissingMessagesO10NewMissingVMa()
{
  return &_s15MissingMessagesO10NewMissingVN;
}

uint64_t _s15MissingMessagesO8CompleteVwxx(uint64_t a1)
{
  return sub_1A54E3458(*(_QWORD *)(a1 + 8), *(unsigned int *)(a1 + 16), *(_BYTE *)(a1 + 20));
}

uint64_t _s15MissingMessagesO8CompleteVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;
  char v6;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_DWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 20);
  sub_1A54E4334(v4, v5, v6);
  *(_QWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 20) = v6;
  *(_BYTE *)(a1 + 21) = *(_BYTE *)(a2 + 21);
  return a1;
}

uint64_t _s15MissingMessagesO8CompleteVwca(uint64_t a1, int *a2)
{
  int v4;
  uint64_t v5;
  unsigned int v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v4 = *a2;
  *(_BYTE *)(a1 + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)a1 = v4;
  v5 = *((_QWORD *)a2 + 1);
  v6 = a2[4];
  v7 = *((_BYTE *)a2 + 20);
  sub_1A54E4334(v5, v6, v7);
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(unsigned int *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v5;
  *(_DWORD *)(a1 + 16) = v6;
  v10 = *(_BYTE *)(a1 + 20);
  *(_BYTE *)(a1 + 20) = v7;
  sub_1A54E3458(v8, v9, v10);
  *(_BYTE *)(a1 + 21) = *((_BYTE *)a2 + 21);
  return a1;
}

__n128 __swift_memcpy22_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_QWORD *)(a1 + 14) = *(_QWORD *)(a2 + 14);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s15MissingMessagesO8CompleteVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_DWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 20);
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(unsigned int *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = v5;
  v9 = *(_BYTE *)(a1 + 20);
  *(_BYTE *)(a1 + 20) = v6;
  sub_1A54E3458(v7, v8, v9);
  *(_BYTE *)(a1 + 21) = *(_BYTE *)(a2 + 21);
  return a1;
}

uint64_t _s15MissingMessagesO8CompleteVwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 22))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 21);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s15MissingMessagesO8CompleteVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 20) = 0;
    *(_DWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 22) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 22) = 0;
    if (a2)
      *(_BYTE *)(result + 21) = a2 + 1;
  }
  return result;
}

ValueMetadata *_s15MissingMessagesO8CompleteVMa()
{
  return &_s15MissingMessagesO8CompleteVN;
}

uint64_t _s15MissingMessagesO10IncompleteVwxx(uint64_t a1)
{
  sub_1A54E3458(*(_QWORD *)a1, *(unsigned int *)(a1 + 8), *(_BYTE *)(a1 + 12));
  sub_1A54E3458(*(_QWORD *)(a1 + 16), *(unsigned int *)(a1 + 24), *(_BYTE *)(a1 + 28));
  return sub_1A54E3458(*(_QWORD *)(a1 + 48), *(unsigned int *)(a1 + 56), *(_BYTE *)(a1 + 60));
}

uint64_t _s15MissingMessagesO10IncompleteVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  unsigned int v5;
  char v6;
  uint64_t v7;
  unsigned int v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  v2 = a2;
  v4 = *(_QWORD *)a2;
  v5 = *(_DWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 12);
  sub_1A54E4334(*(_QWORD *)a2, v5, v6);
  *(_QWORD *)a1 = v4;
  *(_DWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 12) = v6;
  v7 = *(_QWORD *)(v2 + 16);
  v8 = *(_DWORD *)(v2 + 24);
  v9 = *(_BYTE *)(v2 + 28);
  sub_1A54E4334(v7, v8, v9);
  *(_QWORD *)(a1 + 16) = v7;
  *(_DWORD *)(a1 + 24) = v8;
  *(_BYTE *)(a1 + 28) = v9;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(v2 + 32);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(v2 + 36);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(v2 + 40);
  *(_BYTE *)(a1 + 44) = *(_BYTE *)(v2 + 44);
  v10 = *(_QWORD *)(v2 + 48);
  v11 = *(unsigned int *)(v2 + 56);
  LOBYTE(v2) = *(_BYTE *)(v2 + 60);
  sub_1A54E4334(v10, v11, v2);
  *(_QWORD *)(a1 + 48) = v10;
  *(_DWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 60) = v2;
  return a1;
}

uint64_t _s15MissingMessagesO10IncompleteVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  unsigned int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;

  v2 = a2;
  v4 = *(_QWORD *)a2;
  v5 = *(_DWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 12);
  sub_1A54E4334(*(_QWORD *)a2, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(unsigned int *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_DWORD *)(a1 + 8) = v5;
  v9 = *(_BYTE *)(a1 + 12);
  *(_BYTE *)(a1 + 12) = v6;
  sub_1A54E3458(v7, v8, v9);
  v10 = *(_QWORD *)(v2 + 16);
  v11 = *(_DWORD *)(v2 + 24);
  v12 = *(_BYTE *)(v2 + 28);
  sub_1A54E4334(v10, v11, v12);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(unsigned int *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v10;
  *(_DWORD *)(a1 + 24) = v11;
  v15 = *(_BYTE *)(a1 + 28);
  *(_BYTE *)(a1 + 28) = v12;
  sub_1A54E3458(v13, v14, v15);
  v16 = *(_DWORD *)(v2 + 32);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(v2 + 36);
  *(_DWORD *)(a1 + 32) = v16;
  v17 = *(_DWORD *)(v2 + 40);
  *(_BYTE *)(a1 + 44) = *(_BYTE *)(v2 + 44);
  *(_DWORD *)(a1 + 40) = v17;
  v18 = *(_QWORD *)(v2 + 48);
  v19 = *(unsigned int *)(v2 + 56);
  LOBYTE(v2) = *(_BYTE *)(v2 + 60);
  sub_1A54E4334(v18, v19, v2);
  v20 = *(_QWORD *)(a1 + 48);
  v21 = *(unsigned int *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v18;
  *(_DWORD *)(a1 + 56) = v19;
  v22 = *(_BYTE *)(a1 + 60);
  *(_BYTE *)(a1 + 60) = v2;
  sub_1A54E3458(v20, v21, v22);
  return a1;
}

uint64_t _s15MissingMessagesO10IncompleteVwta(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  int v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  int v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v4 = *a2;
  v5 = *((_DWORD *)a2 + 2);
  v6 = *((_BYTE *)a2 + 12);
  v7 = *(_QWORD *)a1;
  v8 = *(unsigned int *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_DWORD *)(a1 + 8) = v5;
  v9 = *(_BYTE *)(a1 + 12);
  *(_BYTE *)(a1 + 12) = v6;
  sub_1A54E3458(v7, v8, v9);
  v10 = *((_DWORD *)a2 + 6);
  v11 = *((_BYTE *)a2 + 28);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(unsigned int *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_DWORD *)(a1 + 24) = v10;
  v14 = *(_BYTE *)(a1 + 28);
  *(_BYTE *)(a1 + 28) = v11;
  sub_1A54E3458(v12, v13, v14);
  *(_DWORD *)(a1 + 32) = *((_DWORD *)a2 + 8);
  *(_BYTE *)(a1 + 36) = *((_BYTE *)a2 + 36);
  *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
  *(_BYTE *)(a1 + 44) = *((_BYTE *)a2 + 44);
  v15 = *((_DWORD *)a2 + 14);
  v16 = *((_BYTE *)a2 + 60);
  v17 = *(_QWORD *)(a1 + 48);
  v18 = *(unsigned int *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = a2[6];
  *(_DWORD *)(a1 + 56) = v15;
  v19 = *(_BYTE *)(a1 + 60);
  *(_BYTE *)(a1 + 60) = v16;
  sub_1A54E3458(v17, v18, v19);
  return a1;
}

uint64_t _s15MissingMessagesO10IncompleteVwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 61))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 12);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s15MissingMessagesO10IncompleteVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 60) = 0;
    *(_DWORD *)(result + 56) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 61) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 61) = 0;
    if (a2)
      *(_BYTE *)(result + 12) = -(char)a2;
  }
  return result;
}

ValueMetadata *_s15MissingMessagesO10IncompleteVMa()
{
  return &_s15MissingMessagesO10IncompleteVN;
}

__n128 __swift_memcpy21_4(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_QWORD *)(a1 + 13) = *(_QWORD *)(a2 + 13);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s15MissingMessagesO12WindowUpdateVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 21))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s15MissingMessagesO12WindowUpdateVwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 20) = 0;
    *(_DWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 21) = v3;
  return result;
}

ValueMetadata *_s15MissingMessagesO12WindowUpdateVMa()
{
  return &_s15MissingMessagesO12WindowUpdateVN;
}

uint64_t initializeWithCopy for NewestMessages(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;
  char v6;

  v4 = *(_QWORD *)a2;
  v5 = *(_DWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 12);
  sub_1A54E4334(*(_QWORD *)a2, v5, v6);
  *(_QWORD *)a1 = v4;
  *(_DWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 12) = v6;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  return a1;
}

uint64_t assignWithCopy for NewestMessages(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v4 = *(_QWORD *)a2;
  v5 = *(_DWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 12);
  sub_1A54E4334(*(_QWORD *)a2, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(unsigned int *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_DWORD *)(a1 + 8) = v5;
  v9 = *(_BYTE *)(a1 + 12);
  *(_BYTE *)(a1 + 12) = v6;
  sub_1A54E3458(v7, v8, v9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for NewestMessages(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v4 = *a2;
  v5 = *((_DWORD *)a2 + 2);
  v6 = *((_BYTE *)a2 + 12);
  v7 = *(_QWORD *)a1;
  v8 = *(unsigned int *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_DWORD *)(a1 + 8) = v5;
  v9 = *(_BYTE *)(a1 + 12);
  *(_BYTE *)(a1 + 12) = v6;
  sub_1A54E3458(v7, v8, v9);
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  return a1;
}

uint64_t getEnumTagSinglePayload for NewestMessages(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 12);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for NewestMessages(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_BYTE *)(result + 12) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for NewestMessages()
{
  return &type metadata for NewestMessages;
}

BOOL sub_1A553572C(uint64_t a1, uint64_t a2)
{
  int32x2_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int32x2_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v2 = *(int32x2_t **)a1;
  v3 = *(unsigned int *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a1 + 12);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(int32x2_t **)a2;
  v8 = *(unsigned int *)(a2 + 8);
  v9 = *(unsigned __int8 *)(a2 + 12);
  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_QWORD *)(a2 + 24);
  sub_1A54E3414();
  static MessageIdentifierSet.__derived_struct_equals(_:_:)(v2, v3 | (v4 << 32), v7, v8 | (v9 << 32));
  if ((v12 & 1) == 0)
    return 0;
  if (v5 == v10)
    return v6 == v11;
  return 0;
}

uint64_t sub_1A55357C4()
{
  _BYTE *v0;
  char v2;
  char v3;
  char v4;
  uint64_t v5;

  v5 = MEMORY[0x1E0DEE9E8];
  if ((*v0 & 1) == 0)
  {
    if ((v0[1] & 1) == 0)
      goto LABEL_3;
LABEL_7:
    sub_1A54F3290(&v3, 7);
    if ((v0[2] & 1) == 0)
      return v5;
    goto LABEL_4;
  }
  sub_1A54F3290(&v2, 6);
  if ((v0[1] & 1) != 0)
    goto LABEL_7;
LABEL_3:
  if ((v0[2] & 1) != 0)
LABEL_4:
    sub_1A54F3290(&v4, 8);
  return v5;
}

void sub_1A5535854(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int32x2_t *v9;
  int32x2_t *v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  int32x2_t *v15;
  uint64_t v16;
  uint64_t v17;
  int32x2_t *v18;
  uint64_t v19;
  int32x2_t *v20;
  uint64_t v21;
  uint64_t v22;
  int32x2_t *v23;

  if (*a1 == *a2 && ((a1[1] ^ a2[1]) & 1) == 0 && ((a1[2] ^ a2[2]) & 1) == 0)
  {
    v2 = *((unsigned int *)a1 + 6);
    v3 = a1[28];
    v4 = *((_QWORD *)a1 + 4);
    v22 = *((unsigned int *)a1 + 12);
    v23 = (int32x2_t *)*((_QWORD *)a1 + 5);
    v21 = a1[52];
    v17 = *((unsigned int *)a1 + 16);
    v18 = (int32x2_t *)*((_QWORD *)a1 + 7);
    v16 = a1[68];
    v5 = *((unsigned int *)a2 + 6);
    v6 = a2[28];
    v7 = *((_QWORD *)a2 + 4);
    v19 = *((unsigned int *)a2 + 12);
    v20 = (int32x2_t *)*((_QWORD *)a2 + 5);
    v8 = a2[52];
    v14 = *((unsigned int *)a2 + 16);
    v15 = (int32x2_t *)*((_QWORD *)a2 + 7);
    v13 = a2[68];
    v9 = (int32x2_t *)*((_QWORD *)a2 + 2);
    v10 = (int32x2_t *)*((_QWORD *)a1 + 2);
    if ((sub_1A54FACA0(*((_QWORD *)a1 + 1), *((_QWORD *)a2 + 1)) & 1) != 0)
    {
      sub_1A54E3414();
      static MessageIdentifierSet.__derived_struct_equals(_:_:)(v10, v2 | (v3 << 32), v9, v5 | (v6 << 32));
      if ((v11 & 1) != 0 && (sub_1A54FACA0(v4, v7) & 1) != 0)
      {
        static MessageIdentifierSet.__derived_struct_equals(_:_:)(v23, v22 | (v21 << 32), v20, v19 | (v8 << 32));
        if ((v12 & 1) != 0)
          static MessageIdentifierSet.__derived_struct_equals(_:_:)(v18, v17 | (v16 << 32), v15, v14 | (v13 << 32));
      }
    }
  }
}

void sub_1A55359DC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int32x2_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int32x2_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  int32x2_t *v16;
  uint64_t v17;
  uint64_t v18;
  int32x2_t *v19;

  if (((*a1 ^ *a2) & 1) == 0 && ((a1[1] ^ a2[1]) & 1) == 0 && ((a1[2] ^ a2[2]) & 1) == 0)
  {
    v4 = (int32x2_t *)*((_QWORD *)a1 + 2);
    v5 = *((unsigned int *)a1 + 6);
    v6 = a1[28];
    v7 = *((_QWORD *)a1 + 4);
    v18 = *((unsigned int *)a1 + 12);
    v19 = (int32x2_t *)*((_QWORD *)a1 + 5);
    v17 = a1[52];
    v8 = (int32x2_t *)*((_QWORD *)a2 + 2);
    v9 = *((unsigned int *)a2 + 6);
    v10 = a2[28];
    v11 = *((_QWORD *)a2 + 4);
    v15 = *((unsigned int *)a2 + 12);
    v16 = (int32x2_t *)*((_QWORD *)a2 + 5);
    v14 = a2[52];
    if ((sub_1A54FACA0(*((_QWORD *)a1 + 1), *((_QWORD *)a2 + 1)) & 1) != 0)
    {
      sub_1A54E3414();
      static MessageIdentifierSet.__derived_struct_equals(_:_:)(v4, v5 | (v6 << 32), v8, v9 | (v10 << 32));
      if ((v12 & 1) != 0 && (sub_1A54FACA0(v7, v11) & 1) != 0)
      {
        static MessageIdentifierSet.__derived_struct_equals(_:_:)(v19, v18 | (v17 << 32), v16, v15 | (v14 << 32));
        if ((v13 & 1) != 0)
          static MessageIdentifierSet.__derived_struct_equals(_:_:)(*((int32x2_t **)a1 + 7), *((unsigned int *)a1 + 16) | ((unint64_t)a1[68] << 32), *((int32x2_t **)a2 + 7), *((unsigned int *)a2 + 16) | ((unint64_t)a2[68] << 32));
      }
    }
  }
}

uint64_t destroy for PendingPersistenceUpdates(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_1A54E3458(*(_QWORD *)(a1 + 16), *(unsigned int *)(a1 + 24), *(_BYTE *)(a1 + 28));
  swift_bridgeObjectRelease();
  sub_1A54E3458(*(_QWORD *)(a1 + 40), *(unsigned int *)(a1 + 48), *(_BYTE *)(a1 + 52));
  return sub_1A54E3458(*(_QWORD *)(a1 + 56), *(unsigned int *)(a1 + 64), *(_BYTE *)(a1 + 68));
}

uint64_t initializeWithCopy for PendingPersistenceUpdates(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  v2 = a2;
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v5 = *(unsigned int *)(a2 + 24);
  v6 = *(_BYTE *)(a2 + 28);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54E4334(v4, v5, v6);
  *(_QWORD *)(a1 + 16) = v4;
  *(_DWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 28) = v6;
  v7 = *(_QWORD *)(v2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(v2 + 32);
  v8 = *(unsigned int *)(v2 + 48);
  v9 = *(_BYTE *)(v2 + 52);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54E4334(v7, v8, v9);
  *(_QWORD *)(a1 + 40) = v7;
  *(_DWORD *)(a1 + 48) = v8;
  *(_BYTE *)(a1 + 52) = v9;
  v10 = *(_QWORD *)(v2 + 56);
  v11 = *(unsigned int *)(v2 + 64);
  LOBYTE(v2) = *(_BYTE *)(v2 + 68);
  sub_1A54E4334(v10, v11, v2);
  *(_QWORD *)(a1 + 56) = v10;
  *(_DWORD *)(a1 + 64) = v11;
  *(_BYTE *)(a1 + 68) = v2;
  return a1;
}

uint64_t assignWithCopy for PendingPersistenceUpdates(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  unsigned int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v2 = a2;
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_DWORD *)(v2 + 24);
  v6 = *(_BYTE *)(v2 + 28);
  sub_1A54E4334(v4, v5, v6);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(unsigned int *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_DWORD *)(a1 + 24) = v5;
  v9 = *(_BYTE *)(a1 + 28);
  *(_BYTE *)(a1 + 28) = v6;
  sub_1A54E3458(v7, v8, v9);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(v2 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(v2 + 40);
  v11 = *(_DWORD *)(v2 + 48);
  v12 = *(_BYTE *)(v2 + 52);
  sub_1A54E4334(v10, v11, v12);
  v13 = *(_QWORD *)(a1 + 40);
  v14 = *(unsigned int *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = v10;
  *(_DWORD *)(a1 + 48) = v11;
  v15 = *(_BYTE *)(a1 + 52);
  *(_BYTE *)(a1 + 52) = v12;
  sub_1A54E3458(v13, v14, v15);
  v16 = *(_QWORD *)(v2 + 56);
  v17 = *(unsigned int *)(v2 + 64);
  LOBYTE(v2) = *(_BYTE *)(v2 + 68);
  sub_1A54E4334(v16, v17, v2);
  v18 = *(_QWORD *)(a1 + 56);
  v19 = *(unsigned int *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = v16;
  *(_DWORD *)(a1 + 64) = v17;
  v20 = *(_BYTE *)(a1 + 68);
  *(_BYTE *)(a1 + 68) = v2;
  sub_1A54E3458(v18, v19, v20);
  return a1;
}

__n128 __swift_memcpy69_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 61) = *(_QWORD *)(a2 + 61);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for PendingPersistenceUpdates(uint64_t a1, uint64_t a2)
{
  int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  int v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  int v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v4 = *(_DWORD *)(a2 + 24);
  v5 = *(_BYTE *)(a2 + 28);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(unsigned int *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = v4;
  v8 = *(_BYTE *)(a1 + 28);
  *(_BYTE *)(a1 + 28) = v5;
  sub_1A54E3458(v6, v7, v8);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  v9 = *(_DWORD *)(a2 + 48);
  v10 = *(_BYTE *)(a2 + 52);
  v11 = *(_QWORD *)(a1 + 40);
  v12 = *(unsigned int *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = v9;
  v13 = *(_BYTE *)(a1 + 52);
  *(_BYTE *)(a1 + 52) = v10;
  sub_1A54E3458(v11, v12, v13);
  v14 = *(_DWORD *)(a2 + 64);
  v15 = *(_BYTE *)(a2 + 68);
  v16 = *(_QWORD *)(a1 + 56);
  v17 = *(unsigned int *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 64) = v14;
  v18 = *(_BYTE *)(a1 + 68);
  *(_BYTE *)(a1 + 68) = v15;
  sub_1A54E3458(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for PendingPersistenceUpdates(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 69))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PendingPersistenceUpdates(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 68) = 0;
    *(_DWORD *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 69) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 69) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PendingPersistenceUpdates()
{
  return &type metadata for PendingPersistenceUpdates;
}

void sub_1A5535F44(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1A5535F8C()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_1A5535FCC + *((int *)qword_1A5536098 + (v0 >> 62))))();
}

uint64_t sub_1A5535FDC()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;

  if (v4 == BYTE6(v2))
  {
    if (v4 < 1)
    {
      v6 = 1;
    }
    else
    {
      sub_1A54E42B4(v3, v2);
      sub_1A54E9478(v1, v0);
      v6 = v5;
    }
  }
  else
  {
    v6 = 0;
  }
  sub_1A54E46E8(v1, v0);
  return v6 & 1;
}

BOOL sub_1A55360A8(uint64_t a1, char a2, uint64_t a3, char a4)
{
  _BOOL4 v4;
  uint64_t v5;

  v4 = (a4 & 1) == 0;
  if ((a4 & 1) != 0)
    v5 = 0;
  else
    v5 = a3;
  if (v5 != a1)
    v4 = 0;
  if ((a2 & 1) != 0)
    return a4 & 1;
  else
    return v4;
}

uint64_t sub_1A55360CC(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(a2 + 16);
    if ((uint64_t)v2 >= result)
      v3 = result;
    else
      v3 = *(_QWORD *)(a2 + 16);
    if (result)
      v4 = v3;
    else
      v4 = 0;
    if (v2 >= v4)
      return a2;
  }
  __break(1u);
  return result;
}

BOOL _s13IMAP2Protocol13EncodedStringV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  uint64_t v5;
  _BOOL8 result;
  int v7;
  int v8;
  int v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (*(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(a2 + 32))
    return 0;
  v3 = (unsigned __int8 *)(a1 + 33);
  v4 = (unsigned __int8 *)(a2 + 33);
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v8 = *v3++;
    v7 = v8;
    v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_1A5536178(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t *v11;
  unint64_t *v12;
  _BOOL8 v13;
  unint64_t *v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v6 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  v7 = *(unsigned int *)(a1 + 32);
  v8 = *(unsigned int *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  sub_1A5522EEC(v6, v5);
  sub_1A5522EEC(v9, v10);
  LOBYTE(v7) = static SearchRequest.__derived_struct_equals(_:_:)(v7, v6, v5, v8, v9, v10);
  sub_1A5522F20(v9, v10);
  sub_1A5522F20(v6, v5);
  if ((v7 & 1) == 0)
    return 0;
  v11 = (unint64_t *)(a2 + 72);
  v12 = (unint64_t *)(a1 + 72);
  do
  {
    v13 = --v2 == 0;
    if (!v2)
      break;
    v14 = v11 + 3;
    v15 = v12 + 3;
    v17 = *(v12 - 1);
    v16 = *v12;
    v18 = *((unsigned int *)v12 - 4);
    v19 = *((unsigned int *)v11 - 4);
    v20 = *(v11 - 1);
    v21 = *v11;
    sub_1A5522EEC(v17, *v12);
    sub_1A5522EEC(v20, v21);
    LOBYTE(v18) = static SearchRequest.__derived_struct_equals(_:_:)(v18, v17, v16, v19, v20, v21);
    sub_1A5522F20(v20, v21);
    sub_1A5522F20(v17, v16);
    v12 = v15;
    v11 = v14;
  }
  while ((v18 & 1) != 0);
  return v13;
}

uint64_t sub_1A55362D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _OWORD *v3;
  __int128 *v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  char v10;
  BOOL v12;
  _OWORD v14[3];
  _OWORD v15[3];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      v10 = 1;
    }
    else
    {
      v3 = (_OWORD *)(a1 + 32);
      v4 = (__int128 *)(a2 + 32);
      v5 = v2 - 1;
      do
      {
        v6 = v3[1];
        v14[0] = *v3;
        v14[1] = v6;
        v7 = *v4;
        v8 = v4[1];
        v14[2] = v3[2];
        v15[0] = v7;
        v9 = v4[2];
        v15[1] = v8;
        v15[2] = v9;
        sub_1A553975C((uint64_t)v14);
        sub_1A553975C((uint64_t)v15);
        v10 = static DownloadRequest.__derived_struct_equals(_:_:)(v14, v15);
        sub_1A55397A8((uint64_t)v15);
        sub_1A55397A8((uint64_t)v14);
        v12 = v5-- != 0;
        if ((v10 & 1) == 0)
          break;
        v3 += 3;
        v4 += 3;
      }
      while (v12);
    }
  }
  else
  {
    v10 = 0;
  }
  return v10 & 1;
}

BOOL sub_1A553639C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _OWORD *v3;
  _OWORD *v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  BOOL v16;
  BOOL v18;
  _OWORD v20[11];
  _OWORD v21[11];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      return 1;
    }
    else
    {
      v3 = (_OWORD *)(a1 + 32);
      v4 = (_OWORD *)(a2 + 32);
      v5 = v2 - 1;
      do
      {
        v6 = v3[9];
        v20[8] = v3[8];
        v20[9] = v6;
        v20[10] = v3[10];
        v7 = v3[5];
        v20[4] = v3[4];
        v20[5] = v7;
        v8 = v3[7];
        v20[6] = v3[6];
        v20[7] = v8;
        v9 = v3[1];
        v20[0] = *v3;
        v20[1] = v9;
        v10 = v3[3];
        v20[2] = v3[2];
        v20[3] = v10;
        v11 = v4[9];
        v21[8] = v4[8];
        v21[9] = v11;
        v21[10] = v4[10];
        v12 = v4[5];
        v21[4] = v4[4];
        v21[5] = v12;
        v13 = v4[7];
        v21[6] = v4[6];
        v21[7] = v13;
        v14 = v4[1];
        v21[0] = *v4;
        v21[1] = v14;
        v15 = v4[3];
        v21[2] = v4[2];
        v21[3] = v15;
        sub_1A54E3150((uint64_t)v20);
        sub_1A54E3150((uint64_t)v21);
        v16 = sub_1A5502B44((uint64_t)v20, (uint64_t)v21);
        sub_1A54E31EC((uint64_t)v21);
        sub_1A54E31EC((uint64_t)v20);
        v18 = v5-- != 0;
        if (!v16)
          break;
        v3 += 11;
        v4 += 11;
      }
      while (v18);
    }
  }
  else
  {
    return 0;
  }
  return v16;
}

uint64_t sub_1A55364B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2)
  {
    if (a1 != a2)
      __asm { BR              X8 }
  }
  return 1;
}

uint64_t sub_1A5536AF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
      return 1;
    if (*(_DWORD *)(a1 + 32) == *(_DWORD *)(a2 + 32))
      __asm { BR              X8 }
  }
  return 0;
}

uint64_t sub_1A55370D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int32x2_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  char v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  char v24;
  char v25;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  int32x2_t *v33;
  int32x2_t *v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int32x2_t *v40;
  int32x2_t *v41;
  unint64_t v42;
  unint64_t v43;
  int32x2_t *v44;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
      return 1;
    v3 = (unsigned int *)(a2 + 80);
    v4 = a1 + 40;
    while (*(_DWORD *)(v4 - 8) == *(v3 - 12))
    {
      v5 = *(_QWORD *)v4;
      v6 = *(_QWORD *)(v4 + 8);
      v7 = *(_QWORD *)(v4 + 24);
      v8 = *(int32x2_t **)(v4 + 32);
      v43 = *(unsigned int *)(v4 + 40) | ((unint64_t)*(unsigned __int8 *)(v4 + 44) << 32);
      v44 = *(int32x2_t **)(v4 + 16);
      v9 = *((_QWORD *)v3 - 5);
      v10 = *((_QWORD *)v3 - 4);
      v11 = *((_QWORD *)v3 - 2);
      v41 = (int32x2_t *)*((_QWORD *)v3 - 3);
      v42 = *v3 | ((unint64_t)*((unsigned __int8 *)v3 + 4) << 32);
      v12 = *((_QWORD *)v3 - 1);
      v38 = v2;
      v39 = (uint64_t)v8;
      v40 = (int32x2_t *)v12;
      if ((v7 & 0x8000000000000000) != 0)
      {
        if ((v11 & 0x8000000000000000) == 0)
          return 0;
        v34 = *(int32x2_t **)v4;
        sub_1A550F160(v5, v6, (uint64_t)v44, v7, (uint64_t)v8, v43);
        v33 = (int32x2_t *)v9;
        sub_1A550F160(v9, v10, (uint64_t)v41, v11, v12, v42);
        sub_1A54E3414();
        v16 = v7;
        v36 = v6;
        v17 = v31 & 0xFFFFFF0000000000 | v6 & 0xFFFFFFFFFFLL;
        v18 = v42;
        v19 = (uint64_t)v41;
        v20 = v11;
        v13 = (unint64_t)v34;
        v21 = (unint64_t)v33;
        v31 = v17;
        v32 = v32 & 0xFFFFFF0000000000 | v10 & 0xFFFFFFFFFFLL;
        static MessageIdentifierSet.__derived_struct_equals(_:_:)(v34, v17, v33, v32);
        if ((v22 & 1) == 0)
          goto LABEL_23;
        v29 = v29 & 0xFFFFFF0000000000 | v16 & 0xFFFFFFFFFFLL;
        v30 = v30 & 0xFFFFFF0000000000 | v20 & 0xFFFFFFFFFFLL;
        static MessageIdentifierSet.__derived_struct_equals(_:_:)(v44, v29, v41, v30);
        if ((v23 & 1) == 0)
          goto LABEL_23;
        if (BYTE4(v43) == 255)
        {
          if (BYTE4(v42) != 255)
            goto LABEL_23;
          sub_1A5503B08((unint64_t)v33, v10, (uint64_t)v41, v20, (uint64_t)v40, v42);
          sub_1A5503B08((unint64_t)v34, v36, (uint64_t)v44, v16, (uint64_t)v8, v43);
        }
        else
        {
          if (BYTE4(v42) == 255)
            goto LABEL_23;
          sub_1A5503BA0((uint64_t)v40, v42);
          sub_1A5503BA0((uint64_t)v8, v43);
          v27 = v27 & 0xFFFFFF0000000000 | v42 | v42 & 0xFF00000000;
          v28 = v28 & 0xFFFFFF0000000000 | v43 | v43 & 0xFF00000000;
          static MessageIdentifierSet.__derived_struct_equals(_:_:)(v8, v28, v40, v27);
          v25 = v24;
          sub_1A5503B8C((uint64_t)v40, v42);
          sub_1A5503B8C(v39, v43);
          sub_1A5503B08((unint64_t)v33, v10, (uint64_t)v41, v20, (uint64_t)v40, v42);
          sub_1A5503B08((unint64_t)v34, v36, (uint64_t)v44, v16, v39, v43);
          if ((v25 & 1) == 0)
            return 0;
        }
      }
      else
      {
        if ((v11 & 0x8000000000000000) != 0)
          return 0;
        v13 = *(_QWORD *)v4;
        sub_1A550F160(v5, v6, (uint64_t)v44, v7, (uint64_t)v8, v43);
        v37 = v11;
        sub_1A550F160(v9, v10, (uint64_t)v41, v11, v12, v42);
        sub_1A54E42F8(v13);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A54E42F8(v9);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        static SearchKey.__derived_enum_equals(_:_:)(v13);
        if ((v14 & 1) == 0)
        {
          sub_1A54E472C(v9);
          swift_bridgeObjectRelease();
          sub_1A54E472C(v13);
          v36 = v6;
          swift_bridgeObjectRelease();
          v16 = v7;
          v18 = v42;
          v19 = (uint64_t)v41;
          v21 = v9;
          v20 = v37;
LABEL_23:
          sub_1A5503B08(v21, v10, v19, v20, (uint64_t)v40, v18);
          sub_1A5503B08(v13, v36, (uint64_t)v44, v16, (uint64_t)v8, v43);
          return 0;
        }
        v35 = v7;
        v15 = static SearchRequest.RangesToExclude.__derived_struct_equals(_:_:)((int32x2_t *)v6, (uint64_t)v44, v7 & 1, (int32x2_t *)v10, (uint64_t)v41, v11 & 1);
        sub_1A54E472C(v9);
        swift_bridgeObjectRelease();
        sub_1A54E472C(v13);
        swift_bridgeObjectRelease();
        sub_1A5503B08(v9, v10, (uint64_t)v41, v11, v12, v42);
        sub_1A5503B08(v13, v6, (uint64_t)v44, v35, (uint64_t)v8, v43);
        if ((v15 & 1) == 0)
          return 0;
      }
      v4 += 56;
      v3 += 14;
      v2 = v38 - 1;
      if (v38 == 1)
        return 1;
    }
  }
  return 0;
}

uint64_t sub_1A5537510(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  int32x2_t *v6;
  int32x2_t *v7;
  unsigned __int8 v8;
  char v9;
  int32x2_t *v10;
  unsigned __int8 v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int32x2_t *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  int v41;
  int v42;
  char v43;
  int32x2_t *v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int32x2_t *v52;
  unint64_t v53;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v3 = 0;
  v31 = a1;
  v32 = a2;
  while (1)
  {
    v36 = v2;
    v46 = *(unsigned __int8 *)(a1 + v3 + 52);
    v52 = *(int32x2_t **)(a1 + v3 + 56);
    v4 = *(unsigned int *)(a1 + v3 + 64);
    v5 = *(_BYTE *)(a1 + v3 + 68);
    v47 = v5;
    v6 = *(int32x2_t **)(a1 + v3 + 72);
    v53 = *(unsigned int *)(a1 + v3 + 80) | ((unint64_t)*(unsigned __int8 *)(a1 + v3 + 84) << 32);
    v35 = v3;
    v41 = *(_DWORD *)(a2 + v3 + 32);
    v42 = *(_DWORD *)(a1 + v3 + 32);
    v7 = *(int32x2_t **)(a2 + v3 + 40);
    v51 = *(unsigned int *)(a2 + v3 + 48);
    v8 = *(_BYTE *)(a2 + v3 + 52);
    v9 = v8;
    v10 = *(int32x2_t **)(a2 + v3 + 56);
    v50 = *(unsigned int *)(a2 + v3 + 64);
    v11 = *(_BYTE *)(a2 + v3 + 68);
    v49 = v11;
    v12 = *(unsigned int *)(a2 + v3 + 80) | ((unint64_t)*(unsigned __int8 *)(a2 + v3 + 84) << 32);
    v13 = *(_QWORD *)(a2 + v3 + 72);
    v44 = *(int32x2_t **)(a1 + v3 + 40);
    v45 = *(unsigned int *)(a1 + v3 + 48);
    sub_1A54E4334((uint64_t)v44, v45, *(_BYTE *)(a1 + v3 + 52));
    v48 = v4;
    sub_1A54E4334((uint64_t)v52, v4, v5);
    sub_1A5503BA0((uint64_t)v6, v53);
    sub_1A54E4334((uint64_t)v7, v51, v8);
    sub_1A54E4334((uint64_t)v10, v50, v11);
    v33 = (int32x2_t *)v13;
    v40 = v12;
    sub_1A5503BA0(v13, v12);
    if (v42 != v41)
    {
      sub_1A54E3458((uint64_t)v7, v51, v8);
      sub_1A54E3458((uint64_t)v10, v50, v11);
      sub_1A5503B8C(v13, v12);
      v24 = (uint64_t)v6;
      v28 = v4;
      v22 = (uint64_t)v52;
      v17 = v46;
      v21 = v47;
      v15 = (uint64_t)v44;
      v16 = v45;
      goto LABEL_23;
    }
    sub_1A54E3414();
    v14 = v38 & 0xFFFFFF0000000000 | v51 | ((unint64_t)v8 << 32);
    v15 = (uint64_t)v44;
    v39 = v39 & 0xFFFFFF0000000000 | v45 | (v46 << 32);
    static MessageIdentifierSet.__derived_struct_equals(_:_:)(v44, v39, v7, v14);
    v16 = v45;
    v17 = v46;
    v18 = v9;
    if ((v19 & 1) == 0)
    {
      sub_1A54E3458((uint64_t)v7, v51, v9);
      sub_1A54E3458((uint64_t)v10, v50, v49);
      sub_1A5503B8C((uint64_t)v33, v12);
      v24 = (uint64_t)v6;
      v28 = v48;
      v22 = (uint64_t)v52;
      v21 = v47;
      goto LABEL_23;
    }
    v20 = (uint64_t)v7;
    v43 = v18;
    v38 = v14;
    v21 = v5;
    v22 = (uint64_t)v52;
    v37 = v37 & 0xFFFFFF0000000000 | v48 | ((unint64_t)v5 << 32);
    static MessageIdentifierSet.__derived_struct_equals(_:_:)(v52, v37, v10, v34 & 0xFFFFFF0000000000 | v50 | (v49 << 32));
    if ((v23 & 1) == 0)
    {
      sub_1A54E3458(v20, v51, v43);
      sub_1A54E3458((uint64_t)v10, v50, v49);
      sub_1A5503B8C((uint64_t)v33, v40);
      goto LABEL_22;
    }
    v34 = v34 & 0xFFFFFF0000000000 | v50 | (v49 << 32);
    if (BYTE4(v53) != 255)
      break;
    sub_1A54E3458(v20, v51, v43);
    sub_1A54E3458((uint64_t)v10, v50, v49);
    if (BYTE4(v40) != 255)
    {
      sub_1A5503B8C((uint64_t)v33, v40);
      goto LABEL_21;
    }
    sub_1A54E3458((uint64_t)v44, v45, v46);
    sub_1A54E3458((uint64_t)v52, v48, v5);
    v24 = (uint64_t)v6;
LABEL_5:
    sub_1A5503B8C(v24, v53);
    v3 = v35 + 56;
    v2 = v36 - 1;
    a1 = v31;
    a2 = v32;
    if (v36 == 1)
      return 1;
  }
  if (BYTE4(v40) != 255)
  {
    sub_1A5503BA0((uint64_t)v33, v40);
    sub_1A5503BA0((uint64_t)v6, v53);
    v29 = v29 & 0xFFFFFF0000000000 | v40 | v40 & 0xFF00000000;
    v24 = (uint64_t)v6;
    static MessageIdentifierSet.__derived_struct_equals(_:_:)(v6, v30 & 0xFFFFFF0000000000 | v53 | v53 & 0xFF00000000, v33, v29);
    v26 = v25;
    sub_1A5503B8C((uint64_t)v33, v40);
    sub_1A5503B8C((uint64_t)v6, v53);
    sub_1A54E3458(v20, v51, v43);
    sub_1A54E3458((uint64_t)v10, v50, v49);
    sub_1A5503B8C((uint64_t)v33, v40);
    sub_1A54E3458((uint64_t)v44, v45, v46);
    sub_1A54E3458((uint64_t)v52, v48, v47);
    if ((v26 & 1) == 0)
      goto LABEL_24;
    v30 = v30 & 0xFFFFFF0000000000 | v53 | v53 & 0xFF00000000;
    goto LABEL_5;
  }
  sub_1A54E3458(v20, v51, v43);
  sub_1A54E3458((uint64_t)v10, v50, v49);
LABEL_21:
  v15 = (uint64_t)v44;
  v16 = v45;
  v17 = v46;
  v21 = v5;
LABEL_22:
  v24 = (uint64_t)v6;
  v28 = v48;
LABEL_23:
  sub_1A54E3458(v15, v16, v17);
  sub_1A54E3458(v22, v28, v21);
LABEL_24:
  sub_1A5503B8C(v24, v53);
  return 0;
}

uint64_t sub_1A55379C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  BOOL v17;
  uint64_t v19;

  v4 = type metadata accessor for TaskHistory.Running(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v19 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      v15 = 1;
    }
    else
    {
      v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v13 = *(_QWORD *)(v8 + 72);
      v14 = v11 - 1;
      do
      {
        sub_1A55034B8(a1 + v12, (uint64_t)v10, type metadata accessor for TaskHistory.Running);
        sub_1A55034B8(a2 + v12, (uint64_t)v6, type metadata accessor for TaskHistory.Running);
        v15 = sub_1A55A7618((uint64_t)v10, (uint64_t)v6);
        sub_1A55034FC((uint64_t)v6, type metadata accessor for TaskHistory.Running);
        sub_1A55034FC((uint64_t)v10, type metadata accessor for TaskHistory.Running);
        v17 = v14-- != 0;
        if ((v15 & 1) == 0)
          break;
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_1A5537B04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  char v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  int v34;
  uint64_t v35;
  char v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v4 = type metadata accessor for ClientCommand(0);
  MEMORY[0x1E0C80A78](v4);
  v42 = (uint64_t)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8738);
  MEMORY[0x1E0C80A78](v44);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TaskHistory.Previous(0);
  MEMORY[0x1E0C80A78](v8);
  v43 = (uint64_t)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  v47 = (uint64_t)&v38 - v12;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v38 - v15;
  v45 = a2;
  v46 = a1;
  v18 = *(_QWORD *)(a1 + 16);
  if (v18 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v18 || v46 == v45)
    return 1;
  v39 = v16;
  v19 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v20 = *(_QWORD *)(v14 + 72);
  v40 = v8;
  v41 = (char *)&v38 - v15;
  v38 = v20;
  while (1)
  {
    sub_1A55034B8(v46 + v19, (uint64_t)v17, type metadata accessor for TaskHistory.Previous);
    v21 = v47;
    sub_1A55034B8(v45 + v19, v47, type metadata accessor for TaskHistory.Previous);
    v22 = (uint64_t)&v7[*(int *)(v44 + 48)];
    sub_1A55034B8((uint64_t)v17, (uint64_t)v7, type metadata accessor for TaskHistory.Previous);
    sub_1A55034B8(v21, v22, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() != 1)
      break;
    v23 = v20;
    v24 = v43;
    sub_1A55034B8((uint64_t)v7, v43, type metadata accessor for TaskHistory.Previous);
    v25 = *(_QWORD *)v24;
    v26 = *(_DWORD *)(v24 + 8);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      swift_release();
      goto LABEL_19;
    }
    v27 = *(_DWORD *)(v22 + 8);
    v28 = static Action.__derived_enum_equals(_:_:)(v25, *(_QWORD *)v22);
    swift_release();
    swift_release();
    if ((v28 & 1) == 0)
      goto LABEL_16;
    sub_1A55034FC((uint64_t)v7, type metadata accessor for TaskHistory.Previous);
    v29 = v26 == v27;
    v17 = v41;
    v20 = v23;
    if (!v29)
      goto LABEL_20;
LABEL_5:
    sub_1A55034FC(v47, type metadata accessor for TaskHistory.Previous);
    sub_1A55034FC((uint64_t)v17, type metadata accessor for TaskHistory.Previous);
    v19 += v20;
    if (!--v18)
      return 1;
  }
  v30 = v18;
  v31 = v39;
  sub_1A55034B8((uint64_t)v7, v39, type metadata accessor for TaskHistory.Previous);
  v32 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797DD8) + 48);
  v33 = *(_DWORD *)(v31 + v32);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v34 = *(_DWORD *)(v22 + v32);
    v35 = v42;
    sub_1A54E68A0(v22, v42);
    v36 = static ClientCommand.__derived_enum_equals(_:_:)(v31, v35);
    sub_1A55034FC(v35, type metadata accessor for ClientCommand);
    sub_1A55034FC(v31, type metadata accessor for ClientCommand);
    if ((v36 & 1) == 0)
    {
LABEL_16:
      sub_1A55034FC((uint64_t)v7, type metadata accessor for TaskHistory.Previous);
      v17 = v41;
      goto LABEL_20;
    }
    sub_1A55034FC((uint64_t)v7, type metadata accessor for TaskHistory.Previous);
    v29 = v33 == v34;
    v17 = v41;
    v18 = v30;
    v20 = v38;
    if (!v29)
      goto LABEL_20;
    goto LABEL_5;
  }
  sub_1A55034FC(v31, type metadata accessor for ClientCommand);
LABEL_19:
  sub_1A5510284((uint64_t)v7, &qword_1EE7A8738);
LABEL_20:
  sub_1A55034FC(v47, type metadata accessor for TaskHistory.Previous);
  sub_1A55034FC((uint64_t)v17, type metadata accessor for TaskHistory.Previous);
  return 0;
}

int32x2_t sub_1A5537EF0(int32x2_t *a1, int32x2_t *a2)
{
  int32x2_t v2;
  int32x2_t *v4;
  int32x2_t *v5;
  uint64_t v6;
  int32x2_t v7;
  int32x2_t v8;
  int32x2_t v9;
  int32x2_t result;

  v2 = a1[2];
  if (*(_QWORD *)&v2 == *(_QWORD *)&a2[2]
    && *(_QWORD *)&v2
    && a1 != a2
    && a2[4].i32[0] == a1[4].i32[0]
    && a2[4].i32[1] == a1[4].i32[1])
  {
    v4 = a1 + 5;
    v5 = a2 + 5;
    v6 = *(_QWORD *)&v2 - 1;
    do
    {
      if (!v6)
        break;
      v7 = *v5++;
      v8 = v7;
      v9 = *v4++;
      result = vceq_s32(v8, v9);
      --v6;
    }
    while ((result.i32[0] & result.i32[1] & 1) != 0);
  }
  return result;
}

BOOL sub_1A5537F6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  int *v4;
  uint64_t v5;
  _BOOL8 result;
  int v7;
  int v8;
  int v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (*(_DWORD *)(a2 + 32) != *(_DWORD *)(a1 + 32))
    return 0;
  v3 = (int *)(a1 + 36);
  v4 = (int *)(a2 + 36);
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v8 = *v4++;
    v7 = v8;
    v9 = *v3++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_1A5537FD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (uint64_t *)(a2 + 48);
    for (i = (uint64_t *)(a1 + 48); *((_DWORD *)v3 - 4) == *((_DWORD *)i - 4); i += 3)
    {
      v5 = *i;
      v6 = *v3;
      v7 = *(v3 - 1);
      if (*(i - 1) == 2)
      {
        if (v7 != 2)
          return 0;
      }
      else if (v7 == 2
             || (static FlagsUpdate.__derived_struct_equals(_:_:)(*(i - 1) & 0xFFFFFFFF01010101, *(v3 - 1) & 0xFFFFFFFF01010101) & 1) == 0)
      {
        return 0;
      }
      if (v5)
      {
        if (!v6)
          return 0;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v8 = sub_1A54ED14C(v5, v6);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v8 & 1) == 0)
          return 0;
      }
      else if (v6)
      {
        swift_bridgeObjectRelease();
        return 0;
      }
      v3 += 3;
      if (!--v2)
        return 1;
    }
    return 0;
  }
  return 1;
}

BOOL sub_1A55380F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL8 result;
  unsigned __int8 *v5;
  unsigned __int8 *v6;
  int v7;
  int v8;
  int v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (*(_DWORD *)(a2 + 32) != *(_DWORD *)(a1 + 32))
    return 0;
  result = 0;
  if (*(_DWORD *)(a2 + 36) == *(_DWORD *)(a1 + 36)
    && ((*(unsigned __int8 *)(a1 + 40) ^ *(unsigned __int8 *)(a2 + 40)) & 1) == 0)
  {
    v5 = (unsigned __int8 *)(a2 + 52);
    v6 = (unsigned __int8 *)(a1 + 52);
    do
    {
      result = --v2 == 0;
      if (!v2)
        break;
      if (*((_DWORD *)v5 - 2) != *((_DWORD *)v6 - 2))
        break;
      if (*((_DWORD *)v5 - 1) != *((_DWORD *)v6 - 1))
        break;
      v8 = *v5;
      v5 += 12;
      v7 = v8;
      v9 = *v6;
      v6 += 12;
    }
    while (((v9 ^ v7) & 1) == 0);
  }
  return result;
}

uint64_t sub_1A553819C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
      return 1;
    for (i = 0; ; i += 32)
    {
      v6 = *(_QWORD *)(a1 + i + 56);
      v7 = *(_QWORD *)(a2 + i + 56);
      result = static ConnectionCommandIDSet.__derived_struct_equals(_:_:)(*(_DWORD *)(a1 + i + 32), *(_QWORD *)(a1 + i + 40), *(_QWORD *)(a1 + i + 48), *(_DWORD *)(a2 + i + 32), *(_QWORD *)(a2 + i + 40), *(_QWORD *)(a2 + i + 48));
      if ((result & 1) == 0)
        break;
      if ((v7 | v6) < 0)
      {
        __break(1u);
        return result;
      }
      if (v7 != v6)
        return 0;
      if (!--v2)
        return 1;
    }
  }
  return 0;
}

int32x2_t sub_1A5538240(int32x2_t *a1, int32x2_t *a2)
{
  int32x2_t v2;
  int32x2_t *v4;
  int32x2_t *v5;
  uint64_t v6;
  int32x2_t v7;
  int32x2_t v8;
  int32x2_t v9;
  int32x2_t result;

  v2 = a1[2];
  if (*(_QWORD *)&v2 == *(_QWORD *)&a2[2]
    && *(_QWORD *)&v2
    && a1 != a2
    && a1[4].i32[0] == a2[4].i32[0]
    && a1[4].i32[1] == a2[4].i32[1])
  {
    v4 = a1 + 5;
    v5 = a2 + 5;
    v6 = *(_QWORD *)&v2 - 1;
    do
    {
      if (!v6)
        break;
      v7 = *v4++;
      v8 = v7;
      v9 = *v5++;
      result = vceq_s32(v8, v9);
      --v6;
    }
    while ((result.i32[0] & result.i32[1] & 1) != 0);
  }
  return result;
}

uint64_t sub_1A55382BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = a1 + 40;
    v4 = a2 + 40;
    do
    {
      v5 = sub_1A594B4B4();
      v7 = v6;
      if (v5 == sub_1A594B4B4() && v7 == v8)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v10 = sub_1A594CD38();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v10 & 1) == 0)
          return 0;
      }
      v3 += 16;
      v4 += 16;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1A553839C(uint64_t result)
{
  uint64_t v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  char *v10;

  v4 = *(_QWORD *)v1;
  if ((*(_BYTE *)(v1 + 8) & 1) != 0)
    goto LABEL_8;
  v3 = *(_QWORD *)(v4 + 16);
  if (v3 > 0x294)
  {
    result = sub_1A552A19C(*(_QWORD *)v1, 0);
    v4 = v3;
LABEL_8:
    v5 = (char *)(v4 + 1);
    if (!__OFADD__(v4, 1))
    {
      v9 = 1;
      goto LABEL_10;
    }
    __break(1u);
    goto LABEL_12;
  }
  v2 = result;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v5 = (char *)v4;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_12:
    v5 = sub_1A54F01D8(0, v3 + 1, 1, (char *)v4);
  v7 = *((_QWORD *)v5 + 2);
  v6 = *((_QWORD *)v5 + 3);
  v8 = v7 + 1;
  if (v7 >= v6 >> 1)
  {
    v10 = sub_1A54F01D8((char *)(v6 > 1), v7 + 1, 1, v5);
    v8 = v7 + 1;
    v5 = v10;
  }
  *((_QWORD *)v5 + 2) = v8;
  *(_DWORD *)&v5[4 * v7 + 32] = v2;
  result = sub_1A552A19C(v4, 0);
  v9 = 0;
LABEL_10:
  *(_QWORD *)v1 = v5;
  *(_BYTE *)(v1 + 8) = v9;
  return result;
}

uint64_t sub_1A5538498(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v25;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v3 = (uint64_t)v2;
  v29 = MEMORY[0x1E0DEE9E8];
  v6 = v2[3];
  v7 = v2[4];
  __swift_project_boxed_opaque_existential_1_0(v2, v6);
  v8 = *(_QWORD *)((*(uint64_t (**)(uint64_t, uint64_t))(v7 + 24))(v6, v7) + 16);
  swift_bridgeObjectRelease();
  if (v8)
  {
    v9 = *(_QWORD *)(v3 + 24);
    v10 = *(_QWORD *)(v3 + 32);
    __swift_project_boxed_opaque_existential_1_0((_QWORD *)v3, v9);
    v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 24))(v9, v10);
    LOBYTE(v9) = sub_1A55BA93C(a1, a2, v11);
    swift_bridgeObjectRelease();
    if ((v9 & 1) != 0)
      v12 = 5;
    else
      v12 = 4;
    sub_1A54F3290(v26, v12);
  }
  v13 = *(_QWORD *)(v3 + 24);
  v14 = *(_QWORD *)(v3 + 32);
  __swift_project_boxed_opaque_existential_1_0((_QWORD *)v3, v13);
  (*(void (**)(uint64_t, uint64_t))(v14 + 40))(v13, v14);
  v16 = *(_QWORD *)(v15 + 16);
  swift_release();
  swift_release();
  swift_release();
  sub_1A550FD4C(v3, (uint64_t)v26);
  if (v16)
  {
    sub_1A550FD94((uint64_t)v26);
LABEL_8:
    sub_1A54F3290(&v25, 11);
    goto LABEL_9;
  }
  v20 = v27;
  v21 = v28;
  __swift_project_boxed_opaque_existential_1_0(v26, v27);
  v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 72))(v20, v21);
  LOBYTE(v20) = v23;
  sub_1A550FD94((uint64_t)v26);
  if ((v20 & 1) == 0 || v22)
    goto LABEL_8;
LABEL_9:
  v17 = *(_QWORD *)(v3 + 40);
  v18 = v17;
  if ((*(_BYTE *)(v3 + 48) & 1) == 0)
    v18 = *(_QWORD *)(v17 + 16);
  if (v18)
  {
    if ((sub_1A55BA9A4(a1, a2, v17, *(_BYTE *)(v3 + 48)) & 1) != 0)
      v19 = 3;
    else
      v19 = 2;
    sub_1A54F3290(&v25, v19);
  }
  return v29;
}

uint64_t OUTLINED_FUNCTION_56()
{
  return 1;
}

uint64_t sub_1A553867C()
{
  return sub_1A594CE88();
}

uint64_t sub_1A55386A4()
{
  return 12383;
}

uint64_t OUTLINED_FUNCTION_0_7()
{
  return 0;
}

void sub_1A55386C0(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1A55386CC()
{
  sub_1A5539FF4();
  return sub_1A594CFB4();
}

uint64_t sub_1A55386F4()
{
  sub_1A5539FF4();
  return sub_1A594CFC0();
}

uint64_t sub_1A553871C(_QWORD *a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  __int128 *v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  char v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  char v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  char v31;

  v15 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79ACB0);
  v14 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79ACA8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79ACA0);
  v17 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A5539F28();
  sub_1A594CF3C();
  sub_1A5539F08(v16, (uint64_t)&v22);
  v11 = v25;
  if (v25 < 0)
  {
    v25 &= ~0x80u;
    v28 = v22;
    v29 = v23;
    v30 = v24;
    v31 = v11 & 0x7F;
    LOBYTE(v18) = 1;
    sub_1A5539F6C();
    sub_1A594CBC4();
    v18 = v28;
    v19 = v29;
    v20 = v30;
    v21 = v31;
    sub_1A5539FB0();
    v12 = v15;
    sub_1A594CC3C();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v3, v12);
  }
  else
  {
    v26 = v22;
    v27 = v23;
    LOBYTE(v18) = 0;
    sub_1A5539FF4();
    sub_1A594CBC4();
    v18 = v26;
    v19 = v27;
    sub_1A553A038();
    sub_1A594CC3C();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v10, v8);
}

uint64_t sub_1A55389E8()
{
  _BYTE *v0;

  if (*v0)
    return 0x726F7453646E6F63;
  else
    return 0x6369736162;
}

uint64_t sub_1A5538A24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A553A07C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A5538A48(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1A5538A54()
{
  sub_1A5539F28();
  return sub_1A594CFB4();
}

uint64_t sub_1A5538A7C()
{
  sub_1A5539F28();
  return sub_1A594CFC0();
}

uint64_t sub_1A5538AA4()
{
  sub_1A594CE64();
  sub_1A594CE88();
  return sub_1A594CED0();
}

uint64_t sub_1A5538AE4()
{
  sub_1A594CE64();
  sub_1A594CE88();
  return sub_1A594CED0();
}

uint64_t sub_1A5538B20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1A594CD38();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A5538B9C()
{
  sub_1A5539F6C();
  return sub_1A594CFB4();
}

uint64_t sub_1A5538BC4()
{
  sub_1A5539F6C();
  return sub_1A594CFC0();
}

uint64_t sub_1A5538BEC(_QWORD *a1)
{
  __int128 *v1;
  _BYTE v4[56];

  sub_1A5539F08(v1, (uint64_t)v4);
  return sub_1A553871C(a1);
}

BOOL sub_1A5538C38(uint64_t a1, uint64_t a2)
{
  return sub_1A55395DC(*(_DWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_DWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16));
}

uint64_t sub_1A5538C54(uint64_t a1, uint64_t a2)
{
  __int128 v5[4];

  sub_1A594CE64();
  if (a1 != 2)
  {
    sub_1A594CE94();
    FlagsUpdate.hash(into:)((uint64_t)v5, a1 & 0xFFFFFFFF01010101);
    if (a2)
      goto LABEL_3;
LABEL_5:
    sub_1A594CE94();
    goto LABEL_6;
  }
  sub_1A594CE94();
  if (!a2)
    goto LABEL_5;
LABEL_3:
  sub_1A594CE94();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54F5444(v5, a2);
LABEL_6:
  swift_bridgeObjectRelease();
  return sub_1A594CED0();
}

uint64_t sub_1A5538D10()
{
  uint64_t *v0;

  return sub_1A5538C54(*v0, v0[1]);
}

uint64_t sub_1A5538D18(__int128 *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v4 = *v1;
  v3 = v1[1];
  if (*v1 != 2)
  {
    sub_1A594CE94();
    FlagsUpdate.hash(into:)((uint64_t)a1, v4 & 0xFFFFFFFF01010101);
    if (v3)
      goto LABEL_3;
LABEL_5:
    sub_1A594CE94();
    return swift_bridgeObjectRelease();
  }
  sub_1A594CE94();
  if (!v3)
    goto LABEL_5;
LABEL_3:
  sub_1A594CE94();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54F5444(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A5538DB8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v4[4];

  v2 = *v0;
  v1 = v0[1];
  sub_1A594CE64();
  if (v2 != 2)
  {
    sub_1A594CE94();
    FlagsUpdate.hash(into:)((uint64_t)v4, v2 & 0xFFFFFFFF01010101);
    if (v1)
      goto LABEL_3;
LABEL_5:
    sub_1A594CE94();
    goto LABEL_6;
  }
  sub_1A594CE94();
  if (!v1)
    goto LABEL_5;
LABEL_3:
  sub_1A594CE94();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54F5444(v4, v1);
LABEL_6:
  swift_bridgeObjectRelease();
  return sub_1A594CED0();
}

uint64_t sub_1A5538E6C(uint64_t *a1, uint64_t *a2)
{
  return sub_1A55396A4(*a1, a1[1], *a2, a2[1]);
}

uint64_t *sub_1A5538E80(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  BOOL v5;
  unsigned int v6;

  v2 = *result;
  v3 = *a2;
  v4 = *((unsigned __int8 *)a2 + 8);
  if (*((_BYTE *)result + 8) == 1)
  {
    v5 = v3 == 0;
    if (v3)
      v6 = *((unsigned __int8 *)a2 + 8);
    else
      v6 = 0;
    if (!v5)
      v4 = 0;
    if (v2)
      return (uint64_t *)v6;
    else
      return (uint64_t *)v4;
  }
  else if (*((_BYTE *)a2 + 8))
  {
    return 0;
  }
  else if ((v3 | v2) < 0)
  {
    __break(1u);
  }
  else
  {
    return (uint64_t *)(v3 == v2);
  }
  return result;
}

uint64_t sub_1A5538ED4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  char v15;
  uint64_t v16;
  char v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;

  v2 = *v1;
  v23 = *v1;
  v24 = *(_QWORD *)(a1 + 16);
  if (v24)
  {
    v25 = *(_QWORD *)(v2 + 16);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v5 = 0;
    v6 = 0;
    v7 = MEMORY[0x1E0DEE9D8];
    v8 = v2;
    while (1)
    {
      if (v25 == v6)
      {
LABEL_21:
        swift_bridgeObjectRelease();
        goto LABEL_22;
      }
      if (v6 >= *(_QWORD *)(v8 + 16))
        break;
      v9 = a1 + v5;
      v10 = *(_DWORD *)(a1 + v5 + 32);
      v11 = v8 + v5;
      if (*(_DWORD *)(v8 + v5 + 32) != v10)
        goto LABEL_21;
      v13 = *(_QWORD *)(v9 + 40);
      v12 = *(_QWORD *)(v9 + 48);
      v14 = *(_OWORD *)(v11 + 40);
      v26 = v14;
      if (v13 == 2)
      {
        if (v14 != 2)
          goto LABEL_21;
      }
      else
      {
        if (v14 == 2)
          goto LABEL_21;
        v15 = static FlagsUpdate.__derived_struct_equals(_:_:)(v13 & 0xFFFFFFFF01010101, *(_QWORD *)(v11 + 40) & 0xFFFFFFFF01010101);
        *((_QWORD *)&v14 + 1) = *((_QWORD *)&v26 + 1);
        if ((v15 & 1) == 0)
          goto LABEL_21;
      }
      v16 = *((_QWORD *)&v14 + 1);
      if (v12)
      {
        if (!*((_QWORD *)&v14 + 1))
          goto LABEL_28;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        v17 = sub_1A54ED14C(v12, v16);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v17 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_22:
          swift_bridgeObjectRelease();
          goto LABEL_24;
        }
      }
      else if (*((_QWORD *)&v14 + 1))
      {
LABEL_28:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_22;
      }
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = sub_1A54F4D44(0, *(_QWORD *)(v7 + 16) + 1, 1);
        v8 = v23;
      }
      v18 = v26;
      v20 = *(_QWORD *)(v7 + 16);
      v19 = *(_QWORD *)(v7 + 24);
      if (v20 >= v19 >> 1)
      {
        result = sub_1A54F4D44(v19 > 1, v20 + 1, 1);
        v18 = v26;
        v8 = v23;
      }
      *(_QWORD *)(v7 + 16) = v20 + 1;
      v21 = v7 + 48 * v20;
      *(_DWORD *)(v21 + 32) = v10;
      ++v6;
      *(_QWORD *)(v21 + 40) = v13;
      *(_QWORD *)(v21 + 48) = v12;
      *(_DWORD *)(v21 + 56) = v10;
      *(_OWORD *)(v21 + 64) = v18;
      v5 += 24;
      if (v24 == v6)
        goto LABEL_21;
    }
    __break(1u);
LABEL_30:
    __break(1u);
    return result;
  }
  v7 = MEMORY[0x1E0DEE9D8];
LABEL_24:
  v22 = *(_QWORD *)(v7 + 16);
  result = swift_release();
  if (v22)
  {
    if (*(_QWORD *)(v23 + 16) >= v22)
      return sub_1A558C36C(0, v22);
    goto LABEL_30;
  }
  return result;
}

uint64_t sub_1A5539170(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)a2;
  v6 = *(unsigned __int8 *)(a2 + 8);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if (v4 == v5)
      return v6;
    else
      return 0;
  }
  else
  {
    return (v6 & 1) == 0 && sub_1A5537F6C(v4, v5);
  }
}

uint64_t sub_1A55391A8(uint64_t result, char a2)
{
  if ((a2 & 1) == 0)
    return *(_QWORD *)(result + 16);
  return result;
}

uint64_t sub_1A55391B4(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (result >= 1)
  {
    v6 = *(_QWORD *)v2;
    if ((*(_BYTE *)(v2 + 8) & 1) != 0)
    {
      v7 = v6 - result;
      if (!__OFSUB__(v6, result))
      {
        v8 = v7 > 0;
        if (v7 <= 0)
          v9 = MEMORY[0x1E0DEE9D8];
        else
          v9 = v6 - result;
        goto LABEL_18;
      }
      __break(1u);
    }
    else
    {
      if (*(_QWORD *)(v6 + 16) < (unint64_t)result)
      {
        result = sub_1A552A19C(*(_QWORD *)v2, 0);
        v8 = 0;
        v9 = MEMORY[0x1E0DEE9D8];
LABEL_18:
        *(_QWORD *)v2 = v9;
        *(_BYTE *)(v2 + 8) = v8;
        return result;
      }
      v1 = sub_1A55360CC(result, v6);
      v3 = v10;
      v4 = v11;
      v5 = v12;
      if ((v12 & 1) == 0)
        goto LABEL_10;
      sub_1A594CD68();
      swift_unknownObjectRetain_n();
      v13 = swift_dynamicCastClass();
      if (!v13)
      {
        swift_unknownObjectRelease();
        v13 = MEMORY[0x1E0DEE9D8];
      }
      v14 = *(_QWORD *)(v13 + 16);
      swift_release();
      if (!__OFSUB__(v5 >> 1, v4))
      {
        if (v14 == (v5 >> 1) - v4)
        {
          v9 = swift_dynamicCastClass();
          if (!v9)
          {
            swift_unknownObjectRelease();
            v9 = MEMORY[0x1E0DEE9D8];
          }
          goto LABEL_17;
        }
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_22:
    swift_unknownObjectRelease();
LABEL_10:
    v9 = sub_1A550C9EC(v1, v3, v4, v5);
LABEL_17:
    result = swift_unknownObjectRelease();
    v8 = 0;
    goto LABEL_18;
  }
  return result;
}

uint64_t sub_1A553930C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _BYTE v23[40];
  _BYTE v24[48];

  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a2 + 40);
  v6 = *(unsigned __int8 *)(a2 + 48);
  if ((*(_BYTE *)(a1 + 48) & 1) != 0)
  {
    if (v4 != v5)
      v6 = 0;
    if (v6 != 1)
      goto LABEL_18;
  }
  else if ((v6 & 1) != 0 || !sub_1A5537F6C(v4, v5))
  {
    goto LABEL_18;
  }
  sub_1A54FBF7C(a1, (uint64_t)v23);
  sub_1A54FBF7C(a2, (uint64_t)v24);
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7971D0);
  if (!swift_dynamicCast())
  {
LABEL_12:
    if (swift_dynamicCast())
    {
      if (swift_dynamicCast())
      {
        v7 = sub_1A553E2A8(v16, v18, v19, v20, v21, v22, v9, v11, v12, v13, v14, v15);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
    }
    sub_1A5510284((uint64_t)v23, &qword_1EE7A8718);
LABEL_18:
    v7 = 0;
    return v7 & 1;
  }
  if (!swift_dynamicCast())
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_12;
  }
  v7 = sub_1A553BDA8(v17, v18, v19, v20, v21, v10, v11, v12, v13, v14);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
LABEL_15:
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return v7 & 1;
}

BOOL sub_1A55395DC(int a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  char v10;

  if (a4 != a1)
    return 0;
  if (a2 == 2)
  {
    if (a5 != 2)
      return 0;
  }
  else if (a5 == 2
         || (static FlagsUpdate.__derived_struct_equals(_:_:)(a2 & 0xFFFFFFFF01010101, a5 & 0xFFFFFFFF01010101) & 1) == 0)
  {
    return 0;
  }
  if (a3)
  {
    if (!a6)
      return 0;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v9 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v10 = sub_1A54ED14C(v9, a6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (v10 & 1) != 0;
  }
  if (!a6)
    return 1;
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1A55396A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  char v7;

  if (a1 == 2)
  {
    if (a3 != 2)
      return 0;
  }
  else if (a3 == 2
         || (static FlagsUpdate.__derived_struct_equals(_:_:)(a1 & 0xFFFFFFFF01010101, a3 & 0xFFFFFFFF01010101) & 1) == 0)
  {
    return 0;
  }
  if (a2)
  {
    if (!a4)
      return 0;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v6 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v7 = sub_1A54ED14C(v6, a4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
      return 0;
  }
  else if (a4)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return 1;
}

uint64_t sub_1A553975C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54E42B4(v2, v3);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t sub_1A55397A8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  swift_bridgeObjectRelease();
  sub_1A54E46E8(v2, v3);
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *initializeBufferWithCopyOfBuffer for Media.TopLevelType(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

_QWORD *assignWithCopy for PendingServerResponses.Change(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for PendingServerResponses.Change(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SyncRequest(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SyncRequest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PendingServerResponses.Change()
{
  return &type metadata for PendingServerResponses.Change;
}

uint64_t destroy for PendingServerResponses(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  sub_1A552A19C(*(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
  return sub_1A54E3458(*(_QWORD *)(a1 + 56), *(unsigned int *)(a1 + 64), *(_BYTE *)(a1 + 68));
}

uint64_t initializeWithCopy for PendingServerResponses(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __int128 v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v2 = a2;
  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_QWORD *)(v2 + 40);
  v6 = *(_BYTE *)(v2 + 48);
  sub_1A550FD88(v5, v6);
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = v6;
  v7 = *(_QWORD *)(v2 + 56);
  v8 = *(unsigned int *)(v2 + 64);
  LOBYTE(v2) = *(_BYTE *)(v2 + 68);
  sub_1A54E4334(v7, v8, v2);
  *(_QWORD *)(a1 + 56) = v7;
  *(_DWORD *)(a1 + 64) = v8;
  *(_BYTE *)(a1 + 68) = v2;
  return a1;
}

uint64_t assignWithCopy for PendingServerResponses(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v2 = a2;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, a2);
  v4 = v2[5];
  v5 = *((_BYTE *)v2 + 48);
  sub_1A550FD88(v4, v5);
  v6 = *(_QWORD *)(a1 + 40);
  v7 = *(_BYTE *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = v4;
  *(_BYTE *)(a1 + 48) = v5;
  sub_1A552A19C(v6, v7);
  v8 = v2[7];
  v9 = *((unsigned int *)v2 + 16);
  LOBYTE(v2) = *((_BYTE *)v2 + 68);
  sub_1A54E4334(v8, v9, (char)v2);
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(unsigned int *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = v8;
  *(_DWORD *)(a1 + 64) = v9;
  v12 = *(_BYTE *)(a1 + 68);
  *(_BYTE *)(a1 + 68) = (_BYTE)v2;
  sub_1A54E3458(v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for PendingServerResponses(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  int v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  v6 = *(_BYTE *)(a2 + 48);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_BYTE *)(a1 + 48);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = v6;
  sub_1A552A19C(v7, v8);
  v9 = *(_DWORD *)(a2 + 64);
  v10 = *(_BYTE *)(a2 + 68);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(unsigned int *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 64) = v9;
  v13 = *(_BYTE *)(a1 + 68);
  *(_BYTE *)(a1 + 68) = v10;
  sub_1A54E3458(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for PendingServerResponses(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 69))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PendingServerResponses(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 68) = 0;
    *(_DWORD *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 69) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 69) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PendingServerResponses()
{
  return &type metadata for PendingServerResponses;
}

uint64_t sub_1A5539BC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7 < 0)
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t destroy for PendingServerResponses.CapturedValue(uint64_t a1)
{
  return sub_1A5539C24(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
}

uint64_t sub_1A5539C24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7 < 0)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PendingServerResponses.CapturedValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_1A5539BC0(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  return a1;
}

uint64_t assignWithCopy for PendingServerResponses.CapturedValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_1A5539BC0(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9);
  v10 = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v16 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v9;
  sub_1A5539C24(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

uint64_t assignWithTake for PendingServerResponses.CapturedValue(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;

  v3 = *(_BYTE *)(a2 + 48);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v11 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v3;
  sub_1A5539C24(v4, v6, v5, v7, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for PendingServerResponses.CapturedValue(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7F && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 127);
  v3 = (*(_BYTE *)(a1 + 48) & 0x7E | (*(unsigned __int8 *)(a1 + 48) >> 7)) ^ 0x7F;
  if (v3 >= 0x7E)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for PendingServerResponses.CapturedValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 127;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
    {
      *(_OWORD *)(result + 16) = 0u;
      *(_OWORD *)(result + 32) = 0u;
      *(_OWORD *)result = 0u;
      *(_BYTE *)(result + 48) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

uint64_t sub_1A5539E80(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 48) >> 7;
}

uint64_t sub_1A5539E8C(uint64_t result)
{
  *(_BYTE *)(result + 48) &= ~0x80u;
  return result;
}

uint64_t sub_1A5539E9C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 48) = *(_BYTE *)(result + 48) & 1 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for PendingServerResponses.CapturedValue()
{
  return &type metadata for PendingServerResponses.CapturedValue;
}

unint64_t sub_1A5539EC4()
{
  unint64_t result;

  result = qword_1EE7A8720;
  if (!qword_1EE7A8720)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A4518, &type metadata for PendingServerResponses.Change);
    atomic_store(result, (unint64_t *)&qword_1EE7A8720);
  }
  return result;
}

uint64_t sub_1A5539F08(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  *(_BYTE *)(a2 + 48) = *((_BYTE *)a1 + 48);
  *(_OWORD *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 32) = v4;
  *(_OWORD *)a2 = v2;
  return a2;
}

unint64_t sub_1A5539F28()
{
  unint64_t result;

  result = qword_1EE797A68;
  if (!qword_1EE797A68)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A4974, &type metadata for PendingServerResponses.CapturedValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE797A68);
  }
  return result;
}

unint64_t sub_1A5539F6C()
{
  unint64_t result;

  result = qword_1EE797A90;
  if (!qword_1EE797A90)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A4924, &type metadata for PendingServerResponses.CapturedValue.CondStoreCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE797A90);
  }
  return result;
}

unint64_t sub_1A5539FB0()
{
  unint64_t result;

  result = qword_1EE797A50;
  if (!qword_1EE797A50)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A4C68, &_s18CondStoreResponsesV13CapturedValueVN);
    atomic_store(result, (unint64_t *)&qword_1EE797A50);
  }
  return result;
}

unint64_t sub_1A5539FF4()
{
  unint64_t result;

  result = qword_1EE7A8728;
  if (!qword_1EE7A8728)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A48D4, &type metadata for PendingServerResponses.CapturedValue.BasicCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A8728);
  }
  return result;
}

unint64_t sub_1A553A038()
{
  unint64_t result;

  result = qword_1EE7A8730;
  if (!qword_1EE7A8730)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A4A3C, &_s14BasicResponsesV13CapturedValueVN);
    atomic_store(result, (unint64_t *)&qword_1EE7A8730);
  }
  return result;
}

uint64_t sub_1A553A07C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6369736162 && a2 == 0xE500000000000000;
  if (v2 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F7453646E6F63 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t storeEnumTagSinglePayload for PendingServerResponses.CapturedValue.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A553A1BC + 4 * byte_1A59A4487[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A553A1F0 + 4 * byte_1A59A4482[v4]))();
}

uint64_t sub_1A553A1F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A553A1F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A553A200);
  return result;
}

uint64_t sub_1A553A20C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A553A214);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A553A218(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A553A220(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PendingServerResponses.CapturedValue.CodingKeys()
{
  return &type metadata for PendingServerResponses.CapturedValue.CodingKeys;
}

ValueMetadata *type metadata accessor for PendingServerResponses.CapturedValue.BasicCodingKeys()
{
  return &type metadata for PendingServerResponses.CapturedValue.BasicCodingKeys;
}

uint64_t getEnumTagSinglePayload for PathAttribute(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s13IMAP2Behavior22PendingServerResponsesV13CapturedValueO15BasicCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A553A2E8 + 4 * byte_1A59A448C[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A553A308 + 4 * byte_1A59A4491[v4]))();
}

_BYTE *sub_1A553A2E8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A553A308(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A553A310(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A553A318(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A553A320(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A553A328(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PendingServerResponses.CapturedValue.CondStoreCodingKeys()
{
  return &type metadata for PendingServerResponses.CapturedValue.CondStoreCodingKeys;
}

uint64_t __swift_memcpy9_8_0(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for MessageSize(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MessageSize(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_1A553A3A8(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1A553A3C4(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    *(_BYTE *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for PendingServerResponses.SequenceChange()
{
  return &type metadata for PendingServerResponses.SequenceChange;
}

uint64_t initializeBufferWithCopyOfBuffer for PendingServerResponses.ExpungedMessages(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1A550FD88(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for PendingServerResponses.ExpungedMessages(uint64_t a1)
{
  return sub_1A552A19C(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for PendingServerResponses.ExpungedMessages(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1A550FD88(*(_QWORD *)a2, v4);
  v5 = *(_QWORD *)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_1A552A19C(v5, v6);
  return a1;
}

uint64_t assignWithTake for PendingServerResponses.ExpungedMessages(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *(_QWORD *)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_1A552A19C(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for Event(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Event(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A553A560(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_1A553A568(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for PendingServerResponses.ExpungedMessages()
{
  return &type metadata for PendingServerResponses.ExpungedMessages;
}

uint64_t destroy for MessageFlagUpdate()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s13IMAP2Behavior22PendingServerResponsesV16ChangeWithoutUIDVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for PendingServerResponses.ChangeWithoutUID(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PendingServerResponses.ChangeWithoutUID(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MessageFlagUpdate(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MessageFlagUpdate(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PendingServerResponses.ChangeWithoutUID()
{
  return &type metadata for PendingServerResponses.ChangeWithoutUID;
}

unint64_t sub_1A553A708()
{
  unint64_t result;

  result = qword_1EE7A8740;
  if (!qword_1EE7A8740)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A473C, &type metadata for PendingServerResponses.CapturedValue.CondStoreCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A8740);
  }
  return result;
}

unint64_t sub_1A553A750()
{
  unint64_t result;

  result = qword_1EE7A8748;
  if (!qword_1EE7A8748)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A47F4, &type metadata for PendingServerResponses.CapturedValue.BasicCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A8748);
  }
  return result;
}

unint64_t sub_1A553A798()
{
  unint64_t result;

  result = qword_1EE7A8750;
  if (!qword_1EE7A8750)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A48AC, &type metadata for PendingServerResponses.CapturedValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7A8750);
  }
  return result;
}

unint64_t sub_1A553A7E0()
{
  unint64_t result;

  result = qword_1EE797A88;
  if (!qword_1EE797A88)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A4764, &type metadata for PendingServerResponses.CapturedValue.BasicCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE797A88);
  }
  return result;
}

unint64_t sub_1A553A828()
{
  unint64_t result;

  result = qword_1EE797A80;
  if (!qword_1EE797A80)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A478C, &type metadata for PendingServerResponses.CapturedValue.BasicCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE797A80);
  }
  return result;
}

unint64_t sub_1A553A870()
{
  unint64_t result;

  result = qword_1EE797AA0;
  if (!qword_1EE797AA0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A46AC, &type metadata for PendingServerResponses.CapturedValue.CondStoreCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE797AA0);
  }
  return result;
}

unint64_t sub_1A553A8B8()
{
  unint64_t result;

  result = qword_1EE797A98;
  if (!qword_1EE797A98)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A46D4, &type metadata for PendingServerResponses.CapturedValue.CondStoreCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE797A98);
  }
  return result;
}

unint64_t sub_1A553A900()
{
  unint64_t result;

  result = qword_1EE797A78;
  if (!qword_1EE797A78)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A481C, &type metadata for PendingServerResponses.CapturedValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE797A78);
  }
  return result;
}

unint64_t sub_1A553A948()
{
  unint64_t result;

  result = qword_1EE797A70;
  if (!qword_1EE797A70)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A4844, &type metadata for PendingServerResponses.CapturedValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE797A70);
  }
  return result;
}

uint64_t sub_1A553A998(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(unsigned __int8 *)(a1 + 40);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(unsigned __int8 *)(a2 + 40);
  if ((sub_1A553BD10(*(_QWORD *)(a2 + 8), *(_QWORD *)(a1 + 8)) & 1) == 0)
    return 0;
  if ((sub_1A553B898(v2, v6) & 1) == 0)
    return 0;
  result = sub_1A5537FD8(v3, v7);
  if ((result & 1) == 0)
    return 0;
  if (v5)
  {
    if (v4)
    {
      if (v9)
        return v8 != 0;
    }
    else if (v9)
    {
      return v8 == 0;
    }
    return 0;
  }
  if ((v9 & 1) != 0)
    return 0;
  if (((v8 | v4) & 0x8000000000000000) == 0)
    return v8 == v4;
  __break(1u);
  return result;
}

int64_t sub_1A553AA58(uint64_t a1, uint64_t a2)
{
  return sub_1A553ADCC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned __int8 *)(a1 + 20) << 32), *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int8 *)(a1 + 28) << 32), a2);
}

uint64_t sub_1A553AA98()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t sub_1A553AAA0(uint64_t a1)
{
  return sub_1A5538ED4(a1);
}

uint64_t sub_1A553AAC0()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_retain();
  swift_retain();
  swift_retain();
  return v1;
}

uint64_t sub_1A553AB0C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v1 = sub_1A555D3EC(MEMORY[0x1E0DEE9D8]);
  v3 = v2;
  v5 = v4;
  swift_release();
  swift_release();
  result = swift_release();
  *v0 = v1;
  v0[1] = v3;
  v0[2] = v5;
  return result;
}

uint64_t sub_1A553AB64(uint64_t a1, uint64_t a2)
{
  return sub_1A553C2F8(a2);
}

uint64_t sub_1A553AB6C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

void sub_1A553AB78()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = 0;
  *(_BYTE *)(v0 + 40) = 1;
}

uint64_t sub_1A553AB88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v4[3];

  sub_1A553C114(*(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 24), (uint64_t)v4);
  return sub_1A5539F08(v4, a1);
}

uint64_t sub_1A553ABC8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD v12[2];
  char v13;
  char v14;

  v12[0] = a4;
  v12[1] = a5;
  v7 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8768);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A553C844();
  sub_1A594CF3C();
  v14 = 0;
  sub_1A594CBD0();
  if (!v5)
  {
    v13 = 1;
    sub_1A594CBD0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1A553ACF0()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000011;
  else
    return 0x577365676E616863;
}

uint64_t sub_1A553AD3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A553CA2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A553AD60()
{
  sub_1A553C844();
  return sub_1A594CFB4();
}

uint64_t sub_1A553AD88()
{
  sub_1A553C844();
  return sub_1A594CFC0();
}

uint64_t sub_1A553ADB0(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1A553ABC8(a1, *v1, v1[1], v1[2], v1[3]);
}

int64_t sub_1A553ADCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  _BYTE *v44;
  int v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(double);
  int v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  _BYTE *v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  int64_t result;
  uint64_t v69;
  uint64_t v70;
  NSObject *v71;
  os_log_type_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  _BYTE *v78;
  int v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  unint64_t v86;
  unint64_t v87;
  _QWORD *v88;
  _BYTE v89[4];
  int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int v100;
  uint64_t v101;

  v97 = a2;
  v96 = a1;
  v94 = _s12LocalMailboxV6LoggerVMa();
  MEMORY[0x1E0C80A78](v94);
  v9 = &v89[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v10);
  v12 = &v89[-v11];
  MEMORY[0x1E0C80A78](v13);
  v15 = &v89[-v14];
  MEMORY[0x1E0C80A78](v16);
  v18 = &v89[-v17];
  MEMORY[0x1E0C80A78](v19);
  v21 = &v89[-v20];
  MEMORY[0x1E0C80A78](v22);
  v24 = &v89[-v23];
  v25 = sub_1A594A764();
  MEMORY[0x1E0C80A78](v25);
  MEMORY[0x1E0C80A78](&v89[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  v33 = MEMORY[0x1E0C80A78](v27);
  v34 = &v89[-v29];
  v93 = a4;
  if ((a4 & 0x100000000) != 0)
  {
    v95 = v31;
    v51 = *(void (**)(double))(v31 + 16);
    if ((a3 & 0x100000000) != 0)
    {
      v69 = v28;
      v70 = v30;
      v51(v33);
      sub_1A55034B8(a5, (uint64_t)v12, (uint64_t (*)(_QWORD))_s12LocalMailboxV6LoggerVMa);
      sub_1A55034B8(a5, (uint64_t)v9, (uint64_t (*)(_QWORD))_s12LocalMailboxV6LoggerVMa);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v71 = sub_1A594A74C();
      v72 = sub_1A594C018();
      v73 = v72;
      if (os_log_type_enabled(v71, v72))
      {
        v74 = swift_slowAlloc();
        v92 = v70;
        v75 = v74;
        v98 = swift_slowAlloc();
        v101 = v98;
        *(_DWORD *)v75 = 68158979;
        LODWORD(v99) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v75 + 8) = 256;
        LODWORD(v97) = v73;
        v76 = v94;
        v77 = v12[*(int *)(v94 + 20)];
        sub_1A55034FC((uint64_t)v12, (uint64_t (*)(_QWORD))_s12LocalMailboxV6LoggerVMa);
        LOBYTE(v99) = v77;
        sub_1A594C3CC();
        *(_WORD *)(v75 + 11) = 1040;
        LODWORD(v99) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v75 + 17) = 512;
        v78 = &v9[*(int *)(v76 + 20)];
        LOWORD(v99) = *((_WORD *)v78 + 1);
        sub_1A594C3CC();
        *(_WORD *)(v75 + 21) = 2160;
        v99 = 0x786F626C69616DLL;
        sub_1A594C3CC();
        *(_WORD *)(v75 + 31) = 2085;
        v79 = *((_DWORD *)v78 + 4);
        v99 = *((_QWORD *)v78 + 1);
        v100 = v79;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v80 = sub_1A594B4A8();
        v99 = sub_1A55791B0(v80, v81, &v101);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55034FC((uint64_t)v9, (uint64_t (*)(_QWORD))_s12LocalMailboxV6LoggerVMa);
        _os_log_impl(&dword_1A4F90000, v71, (os_log_type_t)v97, "[%.*hhx-{%.*hx}-%{sensitive,mask.mailbox}s] Flag/label change without UID and without sequence number.", (uint8_t *)v75, 0x29u);
        v82 = v98;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v82, -1, -1);
        MEMORY[0x1A85B1964](v75, -1, -1);

        return (*(uint64_t (**)(uint64_t, uint64_t))(v95 + 8))(v69, v92);
      }
      else
      {
        sub_1A55034FC((uint64_t)v12, (uint64_t (*)(_QWORD))_s12LocalMailboxV6LoggerVMa);
        sub_1A55034FC((uint64_t)v9, (uint64_t (*)(_QWORD))_s12LocalMailboxV6LoggerVMa);

        return (*(uint64_t (**)(uint64_t, uint64_t))(v95 + 8))(v69, v70);
      }
    }
    else
    {
      v52 = a3;
      v53 = v32;
      v54 = v30;
      ((void (*)(uint64_t, uint64_t, uint64_t, double))v51)(v32, a5, v30, v33);
      sub_1A55034B8(a5, (uint64_t)v18, (uint64_t (*)(_QWORD))_s12LocalMailboxV6LoggerVMa);
      sub_1A55034B8(a5, (uint64_t)v15, (uint64_t (*)(_QWORD))_s12LocalMailboxV6LoggerVMa);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v55 = sub_1A594A74C();
      v56 = sub_1A594C00C();
      v57 = v56;
      if (os_log_type_enabled(v55, v56))
      {
        v58 = swift_slowAlloc();
        v90 = v57;
        v59 = v58;
        v91 = swift_slowAlloc();
        v101 = v91;
        *(_DWORD *)v59 = 68159235;
        LODWORD(v99) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v59 + 8) = 256;
        v92 = v54;
        v93 = a3;
        v60 = v94;
        v61 = v18[*(int *)(v94 + 20)];
        sub_1A55034FC((uint64_t)v18, (uint64_t (*)(_QWORD))_s12LocalMailboxV6LoggerVMa);
        LOBYTE(v99) = v61;
        sub_1A594C3CC();
        *(_WORD *)(v59 + 11) = 1040;
        LODWORD(v99) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v59 + 17) = 512;
        v62 = &v15[*(int *)(v60 + 20)];
        LOWORD(v99) = *((_WORD *)v62 + 1);
        sub_1A594C3CC();
        *(_WORD *)(v59 + 21) = 2160;
        v99 = 0x786F626C69616DLL;
        sub_1A594C3CC();
        *(_WORD *)(v59 + 31) = 2085;
        v63 = *((_QWORD *)v62 + 1);
        v64 = *((_DWORD *)v62 + 4);
        v52 = v93;
        v99 = v63;
        v100 = v64;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v65 = sub_1A594B4A8();
        v99 = sub_1A55791B0(v65, v66, &v101);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A55034FC((uint64_t)v15, (uint64_t (*)(_QWORD))_s12LocalMailboxV6LoggerVMa);
        *(_WORD *)(v59 + 41) = 1024;
        LODWORD(v99) = v52;
        sub_1A594C3CC();
        _os_log_impl(&dword_1A4F90000, v55, (os_log_type_t)v90, "[%.*hhx-{%.*hx}-%{sensitive,mask.mailbox}s] Inserting flag/label change without UID. Sequence number %u.", (uint8_t *)v59, 0x2Fu);
        v67 = v91;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v67, -1, -1);
        MEMORY[0x1A85B1964](v59, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v53, v92);
      }
      else
      {
        sub_1A55034FC((uint64_t)v18, (uint64_t (*)(_QWORD))_s12LocalMailboxV6LoggerVMa);
        sub_1A55034FC((uint64_t)v15, (uint64_t (*)(_QWORD))_s12LocalMailboxV6LoggerVMa);

        (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v53, v54);
      }
      v84 = v97;
      v83 = v98;
      v85 = *(_QWORD **)(v98 + 24);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (int64_t)sub_1A54F01E4(0, v85[2] + 1, 1, v85);
        v85 = (_QWORD *)result;
      }
      v87 = v85[2];
      v86 = v85[3];
      if (v87 >= v86 >> 1)
      {
        result = (int64_t)sub_1A54F01E4((_QWORD *)(v86 > 1), v87 + 1, 1, v85);
        v85 = (_QWORD *)result;
      }
      v85[2] = v87 + 1;
      v88 = &v85[3 * v87];
      *((_DWORD *)v88 + 8) = v52;
      v88[5] = v96;
      v88[6] = v84;
      *(_QWORD *)(v83 + 24) = v85;
    }
  }
  else
  {
    v35 = v30;
    v36 = v31;
    (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v31 + 16))(&v89[-v29], a5, v30, v33);
    sub_1A55034B8(a5, (uint64_t)v24, (uint64_t (*)(_QWORD))_s12LocalMailboxV6LoggerVMa);
    sub_1A55034B8(a5, (uint64_t)v21, (uint64_t (*)(_QWORD))_s12LocalMailboxV6LoggerVMa);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v37 = sub_1A594A74C();
    v38 = sub_1A594C00C();
    v39 = v38;
    if (os_log_type_enabled(v37, v38))
    {
      v40 = swift_slowAlloc();
      v92 = v35;
      v41 = v40;
      v91 = swift_slowAlloc();
      v101 = v91;
      *(_DWORD *)v41 = 68159235;
      LODWORD(v99) = 2;
      v90 = v39;
      sub_1A594C3CC();
      *(_WORD *)(v41 + 8) = 256;
      v95 = v36;
      v42 = v94;
      v43 = v24[*(int *)(v94 + 20)];
      sub_1A55034FC((uint64_t)v24, (uint64_t (*)(_QWORD))_s12LocalMailboxV6LoggerVMa);
      LOBYTE(v99) = v43;
      sub_1A594C3CC();
      *(_WORD *)(v41 + 11) = 1040;
      LODWORD(v99) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v41 + 17) = 512;
      v44 = &v21[*(int *)(v42 + 20)];
      LOWORD(v99) = *((_WORD *)v44 + 1);
      sub_1A594C3CC();
      *(_WORD *)(v41 + 21) = 2160;
      v99 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v41 + 31) = 2085;
      v45 = *((_DWORD *)v44 + 4);
      v99 = *((_QWORD *)v44 + 1);
      v100 = v45;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v46 = sub_1A594B4A8();
      v99 = sub_1A55791B0(v46, v47, &v101);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A55034FC((uint64_t)v21, (uint64_t (*)(_QWORD))_s12LocalMailboxV6LoggerVMa);
      *(_WORD *)(v41 + 41) = 1024;
      v48 = v93;
      LODWORD(v99) = v93;
      sub_1A594C3CC();
      _os_log_impl(&dword_1A4F90000, v37, (os_log_type_t)v90, "[%.*hhx-{%.*hx}-%{sensitive,mask.mailbox}s] Inserting flag/label change for UID %u.", (uint8_t *)v41, 0x2Fu);
      v49 = v91;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v49, -1, -1);
      MEMORY[0x1A85B1964](v41, -1, -1);

      (*(void (**)(_BYTE *, uint64_t))(v95 + 8))(v34, v92);
      v50 = v97;
    }
    else
    {
      sub_1A55034FC((uint64_t)v24, (uint64_t (*)(_QWORD))_s12LocalMailboxV6LoggerVMa);
      sub_1A55034FC((uint64_t)v21, (uint64_t (*)(_QWORD))_s12LocalMailboxV6LoggerVMa);

      (*(void (**)(_BYTE *, uint64_t))(v36 + 8))(v34, v35);
      v50 = v97;
      v48 = v93;
    }
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return sub_1A5555830(v96, v50, v48);
  }
  return result;
}

uint64_t sub_1A553B898(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v3 = (uint64_t *)(a2 + 40);
  for (i = (uint64_t *)(a1 + 40); ; i += 2)
  {
    v5 = *i;
    v6 = *v3;
    v7 = *(v3 - 1);
    if (*(i - 1) == 2)
    {
      if (v7 != 2)
        return 0;
    }
    else if (v7 == 2
           || (static FlagsUpdate.__derived_struct_equals(_:_:)(*(i - 1) & 0xFFFFFFFF01010101, *(v3 - 1) & 0xFFFFFFFF01010101) & 1) == 0)
    {
      return 0;
    }
    if (!v5)
      break;
    if (!v6)
      return 0;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v8 = sub_1A54ED14C(v5, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
      return 0;
LABEL_6:
    v3 += 2;
    if (!--v2)
      return 1;
  }
  if (!v6)
    goto LABEL_6;
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1A553B9A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  return ((uint64_t (*)(void))((char *)&loc_1A553B9D8 + 4 * byte_1A59A49C4[*(unsigned __int8 *)(a1 + 32) >> 6]))();
}

uint64_t sub_1A553BA90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;

  v4 = *(_QWORD *)(a4 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  v21 = a4 + 32;
  v6 = a2 + 32;
  swift_retain();
  swift_retain();
  swift_retain();
  result = swift_retain();
  v8 = 0;
  v9 = 0;
  while (v9 == v4)
  {
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v9 = v4;
    if (v8 == v5)
      goto LABEL_30;
LABEL_9:
    if (v8 == v5)
    {
      __break(1u);
LABEL_35:
      __break(1u);
      return result;
    }
    v14 = (uint64_t *)(v6 + 16 * v8);
    v15 = *((unsigned int *)v14 + 2);
    v12 = *v14;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (!v11)
      goto LABEL_30;
    if (!v12)
      goto LABEL_28;
    if ((v10 | (v10 << 32)) != (v15 | (v15 << 32)) || (v16 = *(_QWORD *)(v11 + 16), v16 != *(_QWORD *)(v12 + 16)))
    {
LABEL_26:
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      return 0;
    }
    if (v16 && v12 != v11)
    {
      if (*(unsigned __int8 *)(v11 + 32) != *(unsigned __int8 *)(v12 + 32))
        goto LABEL_26;
      if (v16 != 1)
      {
        if (*(unsigned __int8 *)(v11 + 33) != *(unsigned __int8 *)(v12 + 33))
          goto LABEL_26;
        if (v16 != 2)
        {
          if (*(unsigned __int8 *)(v11 + 34) != *(unsigned __int8 *)(v12 + 34))
            goto LABEL_26;
          if (v16 != 3)
          {
            if (*(unsigned __int8 *)(v11 + 35) != *(unsigned __int8 *)(v12 + 35))
              goto LABEL_26;
            v17 = 0;
            v18 = v16 - 4;
            while (v18 != v17)
            {
              v19 = *(unsigned __int8 *)(v11 + v17 + 36);
              v20 = *(unsigned __int8 *)(v12 + 36 + v17++);
              if (v19 != v20)
                goto LABEL_26;
            }
          }
        }
      }
    }
    ++v8;
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  if (v9 >= v4)
    goto LABEL_35;
  v13 = (uint64_t *)(v21 + 16 * v9);
  v10 = *((unsigned int *)v13 + 2);
  v11 = *v13;
  result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v8 != v5)
  {
    ++v9;
    goto LABEL_9;
  }
  if (v11)
  {
LABEL_28:
    swift_release();
    swift_release();
    swift_release();
    swift_release();
LABEL_31:
    swift_bridgeObjectRelease();
    return 0;
  }
  v12 = 0;
LABEL_30:
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (v12)
    goto LABEL_31;
  return 1;
}

uint64_t sub_1A553BD10(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int v7;
  unint64_t v8;
  int v9;
  unint64_t v10;

  v2 = 0;
  v3 = 0;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(result + 16);
  v6 = result + 32;
  while (1)
  {
    if (v3 == v4)
    {
      v7 = 0;
      v8 = *(_QWORD *)(a2 + 16);
      goto LABEL_6;
    }
    if (v3 >= v4)
      break;
    v7 = *(_DWORD *)(a2 + 32 + 4 * v3);
    v8 = v3 + 1;
LABEL_6:
    result = v2 == v5;
    if (v2 == v5)
    {
      v9 = 0;
      v10 = v5;
      if (v3 == v4)
        return result;
    }
    else
    {
      if (v2 >= v5)
        goto LABEL_15;
      v9 = *(_DWORD *)(v6 + 4 * v2);
      v10 = v2 + 1;
      if (v3 == v4)
        return result;
    }
    result = 0;
    if (v2 != v5)
    {
      v2 = v10;
      v3 = v8;
      if (v9 == v7)
        continue;
    }
    return result;
  }
  __break(1u);
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_1A553BDA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t result;

  if ((sub_1A553BD10(a6, a1) & 1) == 0)
    return 0;
  if ((sub_1A553B898(a2, a7) & 1) == 0)
    return 0;
  result = sub_1A5537FD8(a3, a8);
  if ((result & 1) == 0)
    return 0;
  if ((a5 & 1) != 0)
  {
    if (a4)
    {
      if ((a10 & 1) != 0)
        return a9 != 0;
      return 0;
    }
    if ((a10 & 1) != 0)
      return a9 == 0;
    return 0;
  }
  if ((a10 & 1) != 0)
    return 0;
  if (((a9 | a4) & 0x8000000000000000) == 0)
    return a9 == a4;
  __break(1u);
  return result;
}

uint64_t _s14BasicResponsesVwxx()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t _s14BasicResponsesVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  swift_retain();
  swift_retain();
  swift_retain();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t _s14BasicResponsesVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  return a1;
}

uint64_t _s14BasicResponsesVwta(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t _s14BasicResponsesVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 41))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s14BasicResponsesVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s14BasicResponsesVMa()
{
  return &_s14BasicResponsesVN;
}

unint64_t sub_1A553C0AC(uint64_t a1)
{
  unint64_t result;

  result = sub_1A553C0D0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A553C0D0()
{
  unint64_t result;

  result = qword_1EE7A8758;
  if (!qword_1EE7A8758)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A49E8, &_s14BasicResponsesVN);
    atomic_store(result, (unint64_t *)&qword_1EE7A8758);
  }
  return result;
}

uint64_t sub_1A553C114@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t i;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  unsigned int v33;
  unsigned int v34;
  char v35;
  char v36;

  v6 = sub_1A54E3414();
  v7 = MessageIdentifierSet.init()(&type metadata for UID, v6);
  v9 = v8;
  v10 = HIDWORD(v8);
  v31 = v7;
  v33 = v8;
  v35 = BYTE4(v8);
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    swift_retain();
    swift_retain();
    for (i = 0; i != v11; ++i)
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
      MessageIdentifierSet.insert(_:)();
    }
    swift_release();
    swift_release();
    v13 = v31;
    v9 = v33;
    LOBYTE(v10) = v35;
  }
  else
  {
    v13 = v7;
  }
  sub_1A556003C(v13, v9 | ((unint64_t)v10 << 32));
  v15 = v14;
  v17 = v16;
  sub_1A54E3458(v13, v9, v10);
  v18 = sub_1A5534BE4();
  v19 = MessageIdentifierSet.init()(&type metadata for SequenceNumber, v18);
  v21 = v20;
  v22 = HIDWORD(v20);
  v32 = v19;
  v34 = v20;
  v36 = BYTE4(v20);
  v23 = *(_QWORD *)(a2 + 16);
  if (v23)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v24 = 32;
    do
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8760);
      MessageIdentifierSet.insert(_:)();
      v24 += 24;
      --v23;
    }
    while (v23);
    swift_bridgeObjectRelease();
    v25 = v32;
    v21 = v34;
    LOBYTE(v22) = v36;
  }
  else
  {
    v25 = v19;
  }
  sub_1A5560058(v25, v21 | ((unint64_t)v22 << 32));
  v27 = v26;
  v29 = v28;
  result = sub_1A54E3458(v25, v21, v22);
  *(_QWORD *)a3 = v15;
  *(_QWORD *)(a3 + 8) = v17;
  *(_QWORD *)(a3 + 16) = v27;
  *(_QWORD *)(a3 + 24) = v29;
  *(_QWORD *)(a3 + 32) = 0;
  *(_QWORD *)(a3 + 40) = 0;
  *(_BYTE *)(a3 + 48) = 0;
  return result;
}

uint64_t sub_1A553C2F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  os_log_type_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;

  v2 = type metadata accessor for MailboxTaskLogger(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A594A764();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))(v9, a1, v5, v7);
  sub_1A55034B8(a1, (uint64_t)v4, type metadata accessor for MailboxTaskLogger);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  v10 = sub_1A594A74C();
  v11 = sub_1A594C018();
  v12 = v11;
  if (os_log_type_enabled(v10, v11))
  {
    v13 = swift_slowAlloc();
    v25 = v12;
    v14 = v13;
    v24 = swift_slowAlloc();
    v29 = v24;
    *(_DWORD *)v14 = 68159235;
    LODWORD(v27) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v14 + 8) = 256;
    v15 = *(int *)(v2 + 20);
    v26 = v5;
    v16 = &v4[v15];
    LOBYTE(v27) = v4[v15];
    sub_1A594C3CC();
    *(_WORD *)(v14 + 11) = 2082;
    v18 = *((_QWORD *)v16 + 1);
    v17 = *((_QWORD *)v16 + 2);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v27 = sub_1A55791B0(v18, v17, &v29);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 21) = 1040;
    LODWORD(v27) = 2;
    sub_1A594C3CC();
    *(_WORD *)(v14 + 27) = 512;
    LOWORD(v27) = *((_WORD *)v16 + 12);
    sub_1A594C3CC();
    *(_WORD *)(v14 + 31) = 2160;
    v27 = 0x786F626C69616DLL;
    sub_1A594C3CC();
    *(_WORD *)(v14 + 41) = 2085;
    v19 = *((_DWORD *)v16 + 10);
    v27 = *((_QWORD *)v16 + 4);
    v28 = v19;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v20 = sub_1A594B4A8();
    v27 = sub_1A55791B0(v20, v21, &v29);
    sub_1A594C3CC();
    swift_bridgeObjectRelease();
    sub_1A55034FC((uint64_t)v4, type metadata accessor for MailboxTaskLogger);
    _os_log_impl(&dword_1A4F90000, v10, (os_log_type_t)v25, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Attempting to store HIGHESTMODSEQ, but PendingServerResponses does not support CONDSTORE.", (uint8_t *)v14, 0x33u);
    v22 = v24;
    swift_arrayDestroy();
    MEMORY[0x1A85B1964](v22, -1, -1);
    MEMORY[0x1A85B1964](v14, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v26);
  }
  else
  {
    sub_1A55034FC((uint64_t)v4, type metadata accessor for MailboxTaskLogger);

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
}

uint64_t destroy for Media.MediaType()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for Media.MediaType(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

_QWORD *assignWithCopy for Media.MediaType(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for Media.MediaType(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s14BasicResponsesV13CapturedValueVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for UserAuthenticationMechanism(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *_s14BasicResponsesV13CapturedValueVMa()
{
  return &_s14BasicResponsesV13CapturedValueVN;
}

unint64_t sub_1A553C844()
{
  unint64_t result;

  result = qword_1EE7A8770;
  if (!qword_1EE7A8770)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A4B28, &_s14BasicResponsesV13CapturedValueV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7A8770);
  }
  return result;
}

uint64_t _s14BasicResponsesV13CapturedValueV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A553C8D4 + 4 * byte_1A59A49D1[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A553C908 + 4 * byte_1A59A49CC[v4]))();
}

uint64_t sub_1A553C908(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A553C910(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A553C918);
  return result;
}

uint64_t sub_1A553C924(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A553C92CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A553C930(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A553C938(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s14BasicResponsesV13CapturedValueV10CodingKeysOMa()
{
  return &_s14BasicResponsesV13CapturedValueV10CodingKeysON;
}

unint64_t sub_1A553C958()
{
  unint64_t result;

  result = qword_1EE7A8778;
  if (!qword_1EE7A8778)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A4B00, &_s14BasicResponsesV13CapturedValueV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7A8778);
  }
  return result;
}

unint64_t sub_1A553C9A0()
{
  unint64_t result;

  result = qword_1EE7A8780;
  if (!qword_1EE7A8780)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A4A70, &_s14BasicResponsesV13CapturedValueV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7A8780);
  }
  return result;
}

unint64_t sub_1A553C9E8()
{
  unint64_t result;

  result = qword_1EE7A8788;
  if (!qword_1EE7A8788)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A4A98, &_s14BasicResponsesV13CapturedValueV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7A8788);
  }
  return result;
}

uint64_t sub_1A553CA2C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x577365676E616863 && a2 == 0xEE00444955687469;
  if (v2 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A5A0E160)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A553CB3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a2 + 24);
  result = static ConnectionCommandIDSet.__derived_struct_equals(_:_:)(*(_DWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_DWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16));
  if ((result & 1) == 0)
    return 0;
  if (((v3 | v2) & 0x8000000000000000) == 0)
    return v3 == v2;
  __break(1u);
  return result;
}

uint64_t sub_1A553CB98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v55;
  int64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  unsigned int v63;
  unsigned int v64;
  char v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  uint64_t v71;
  _BYTE v72[16];

  v70 = *(_OWORD *)(v1 + 8);
  v2 = *((_QWORD *)&v70 + 1);
  v71 = *((_QWORD *)&v70 + 1);
  v3 = sub_1A54E3414();
  v4 = MessageIdentifierSet.init()(&type metadata for UID, v3);
  v6 = v5;
  v7 = HIDWORD(v5);
  v61 = v4;
  v63 = v5;
  v65 = BYTE4(v5);
  v8 = *(_QWORD *)(*((_QWORD *)&v70 + 1) + 16);
  if (v8)
  {
    sub_1A55032A0((uint64_t)&v70, (uint64_t)v72, &qword_1EE7986A0);
    v9 = (int *)(v2 + 32);
    sub_1A553E5B4((uint64_t)v72);
    sub_1A553E5B4((uint64_t)&v71);
    do
    {
      v10 = *v9++;
      LODWORD(v68) = v10;
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
      MessageIdentifierSet.insert(_:)();
      --v8;
    }
    while (v8);
    sub_1A553E5DC((uint64_t)v72);
    sub_1A553E5DC((uint64_t)&v71);
    v11 = v61;
    v6 = v63;
    LOBYTE(v7) = v65;
  }
  else
  {
    v11 = v4;
  }
  sub_1A556003C(v11, v6 | ((unint64_t)v7 << 32));
  v52 = v13;
  v53 = v12;
  sub_1A54E3458(v11, v6, v7);
  v69 = v55[4];
  v14 = sub_1A5534BE4();
  v15 = MessageIdentifierSet.init()(&type metadata for SequenceNumber, v14);
  v17 = v16;
  v18 = HIDWORD(v16);
  v62 = v15;
  v64 = v16;
  v66 = BYTE4(v16);
  v19 = *(_QWORD *)(v69 + 16);
  if (v19)
  {
    v20 = v69 + 32;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    do
    {
      v20 += 24;
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8760);
      MessageIdentifierSet.insert(_:)();
      --v19;
    }
    while (v19);
    sub_1A54F81BC((uint64_t)&v69);
    v21 = v62;
    v17 = v64;
    LOBYTE(v18) = v66;
  }
  else
  {
    v21 = v15;
  }
  sub_1A5560058(v21, v17 | ((unint64_t)v18 << 32));
  v50 = v23;
  v51 = v22;
  result = sub_1A54E3458(v21, v17, v18);
  v68 = *v55;
  v25 = *(_QWORD *)(v68 + 16);
  v26 = MEMORY[0x1E0DEE9D8];
  if (v25)
  {
    v67 = MEMORY[0x1E0DEE9D8];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54F4D60(0, v25, 0);
    v27 = 0;
    v28 = v67;
    v56 = v25;
    v57 = v68 + 32;
    while (1)
    {
      v29 = v57 + 32 * v27;
      v30 = *(_QWORD *)(v29 + 8);
      v31 = *(_QWORD *)(v29 + 24);
      v32 = *(_QWORD *)(v30 + 16);
      if (v32)
        break;
      v33 = v26;
LABEL_24:
      v46 = *(_QWORD *)(v67 + 16);
      v45 = *(_QWORD *)(v67 + 24);
      if (v46 >= v45 >> 1)
        sub_1A54F4D60(v45 > 1, v46 + 1, 1);
      ++v27;
      *(_QWORD *)(v67 + 16) = v46 + 1;
      v47 = v67 + 16 * v46;
      *(_QWORD *)(v47 + 32) = v33;
      *(_QWORD *)(v47 + 40) = v31;
      if (v27 == v25)
      {
        result = sub_1A54F81BC((uint64_t)&v68);
        goto LABEL_29;
      }
    }
    v58 = *(_QWORD *)(v29 + 24);
    v59 = *(_DWORD *)v29;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    sub_1A54F4B4C(0, v32, 0);
    v33 = v26;
    result = sub_1A558A0B8(v30);
    v34 = result;
    v36 = v35;
    v38 = v37 & 1;
    while ((v34 & 0x8000000000000000) == 0 && v34 < 1 << *(_BYTE *)(v30 + 32))
    {
      if (((*(_QWORD *)(v30 + 56 + (((unint64_t)v34 >> 3) & 0xFFFFFFFFFFFFF8)) >> v34) & 1) == 0)
        goto LABEL_33;
      if (*(_DWORD *)(v30 + 36) != (_DWORD)v36)
        goto LABEL_34;
      v60 = v38;
      v39 = CommandID.init(connection:commandCounter:)(v59, *(unsigned int *)(*(_QWORD *)(v30 + 48) + 4 * v34));
      CommandID.tag.getter(v39);
      sub_1A594C924();
      v41 = *(_QWORD *)(v26 + 16);
      v40 = *(_QWORD *)(v26 + 24);
      if (v41 >= v40 >> 1)
        sub_1A54F4B4C(v40 > 1, v41 + 1, 1);
      *(_QWORD *)(v26 + 16) = v41 + 1;
      v42 = v26 + 16 * v41;
      *(_QWORD *)(v42 + 32) = 0;
      *(_QWORD *)(v42 + 40) = 0xE000000000000000;
      result = sub_1A558A15C(v34, v36, v60 & 1, v30);
      v34 = result;
      v36 = v43;
      v38 = v44 & 1;
      if (!--v32)
      {
        sub_1A5529B00(result, v43, v38);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        v26 = MEMORY[0x1E0DEE9D8];
        v25 = v56;
        v31 = v58;
        goto LABEL_24;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
  }
  else
  {
    v28 = MEMORY[0x1E0DEE9D8];
LABEL_29:
    v48 = v55[5];
    v49 = *((_BYTE *)v55 + 48);
    if (v49)
      v48 = 0;
    *(_QWORD *)a1 = v28;
    *(_QWORD *)(a1 + 8) = v53;
    *(_QWORD *)(a1 + 16) = v52;
    *(_QWORD *)(a1 + 24) = v51;
    *(_QWORD *)(a1 + 32) = v50;
    *(_QWORD *)(a1 + 40) = v48;
    *(_BYTE *)(a1 + 48) = v49 | 0x80;
  }
  return result;
}

uint64_t sub_1A553D03C(uint64_t a1, uint64_t a2)
{
  return sub_1A553E2A8(*(_QWORD *)a1, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48), *(_QWORD *)a2, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), *(_QWORD *)(a2 + 32), *(_QWORD *)(a2 + 40), *(_BYTE *)(a2 + 48)) & 1;
}

uint64_t sub_1A553D098(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char *v32;
  int v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  unint64_t v59;
  unint64_t v60;
  _QWORD *v61;
  unint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  _QWORD *v71;
  uint64_t (*v72)(char *, uint64_t);
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  int v82;
  char v83;
  char v84[8];
  unsigned int v85;
  char v86;
  unint64_t v87;
  char v88;

  v3 = v2;
  v76 = _s12LocalMailboxV6LoggerVMa();
  MEMORY[0x1E0C80A78](v76);
  v7 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v74 - v9;
  MEMORY[0x1E0C80A78](v11);
  v77 = (unint64_t)&v74 - v12;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v74 - v14;
  v78 = sub_1A594A764();
  v16 = *(_QWORD *)(v78 - 8);
  MEMORY[0x1E0C80A78](v78);
  v18 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v74 - v20;
  sub_1A55032A0(a1 + 24, (uint64_t)v84, &qword_1EE795BE8);
  sub_1A55032A0((uint64_t)v84, (uint64_t)&v85, &qword_1EE795BE8);
  if ((v86 & 1) == 0)
  {
    v38 = v85;
    v39 = *(_QWORD *)a1;
    v40 = *(_QWORD *)(a1 + 8);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5555830(v39, v40, v38);
    sub_1A55032A0(a1 + 32, (uint64_t)&v82, &qword_1EE796EE0);
    sub_1A55032A0((uint64_t)&v82, (uint64_t)&v87, &qword_1EE796EE0);
    if ((v88 & 1) != 0)
    {
      v41 = v21;
      v24 = v78;
      (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v21, a2, v78);
      sub_1A5529EE8(a2, (uint64_t)v15);
      v42 = v77;
      sub_1A5529EE8(a2, v77);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v43 = sub_1A594A74C();
      v44 = sub_1A594C024();
      if (os_log_type_enabled(v43, v44))
      {
        v45 = swift_slowAlloc();
        v74 = swift_slowAlloc();
        v79 = v74;
        *(_DWORD *)v45 = 68158979;
        LODWORD(v80) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v45 + 8) = 256;
        v75 = v16;
        v46 = v76;
        v47 = v15[*(int *)(v76 + 20)];
        sub_1A5529F2C((uint64_t)v15);
        LOBYTE(v80) = v47;
        sub_1A594C3CC();
        *(_WORD *)(v45 + 11) = 1040;
        LODWORD(v80) = 2;
        sub_1A594C3CC();
        *(_WORD *)(v45 + 17) = 512;
        v48 = *(int *)(v46 + 20);
        v49 = v77;
        v50 = v77 + v48;
        LOWORD(v80) = *(_WORD *)(v77 + v48 + 2);
        sub_1A594C3CC();
        *(_WORD *)(v45 + 21) = 2160;
        v80 = 0x786F626C69616DLL;
        sub_1A594C3CC();
        *(_WORD *)(v45 + 31) = 2085;
        v51 = *(_DWORD *)(v50 + 16);
        v80 = *(_QWORD *)(v50 + 8);
        v81 = v51;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v52 = sub_1A594B4A8();
        v80 = sub_1A55791B0(v52, v53, &v79);
        sub_1A594C3CC();
        swift_bridgeObjectRelease();
        sub_1A5529F2C(v49);
        _os_log_impl(&dword_1A4F90000, v43, v44, "[%.*hhx-{%.*hx}-%{sensitive,mask.mailbox}s] Mailbox supports CONDSTORE, but flag change has no MODSEQ.", (uint8_t *)v45, 0x29u);
        v54 = v74;
        swift_arrayDestroy();
        MEMORY[0x1A85B1964](v54, -1, -1);
        MEMORY[0x1A85B1964](v45, -1, -1);

        return (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v41, v78);
      }
      sub_1A5529F2C((uint64_t)v15);
      sub_1A5529F2C(v42);

      v72 = *(uint64_t (**)(char *, uint64_t))(v16 + 8);
      v73 = v41;
      return v72(v73, v24);
    }
    v62 = v87;
    v63 = *(_DWORD *)(a1 + 48);
    v64 = *(_QWORD *)(a1 + 56);
    v65 = *(_QWORD *)(a1 + 64);
    v66 = *(_QWORD **)v3;
    v67 = *(_QWORD *)(*(_QWORD *)v3 + 16);
    if (!v67
      || (static ConnectionCommandIDSet.__derived_struct_equals(_:_:)(v63, v64, v65, v66[4 * v67], v66[4 * v67 + 1], v66[4 * v67 + 2]) & 1) == 0)
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1A54F0308(0, v66[2] + 1, 1, v66);
        v66 = (_QWORD *)result;
      }
      v70 = v66[2];
      v69 = v66[3];
      if (v70 >= v69 >> 1)
      {
        result = (uint64_t)sub_1A54F0308((_QWORD *)(v69 > 1), v70 + 1, 1, v66);
        v66 = (_QWORD *)result;
      }
      v66[2] = v70 + 1;
      v71 = &v66[4 * v70];
      *((_DWORD *)v71 + 8) = v63;
      v71[5] = v64;
      v71[6] = v65;
      v71[7] = v62;
      *(_QWORD *)v3 = v66;
      return result;
    }
    v68 = v66[2];
    if (v68)
    {
      v64 = v68 - 1;
      if (v62 <= v66[4 * v68 + 3])
        v65 = v66[4 * v68 + 3];
      else
        v65 = v62;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) != 0)
        goto LABEL_20;
    }
    else
    {
      __break(1u);
    }
    result = (uint64_t)sub_1A554B6BC(v66);
    v66 = (_QWORD *)result;
LABEL_20:
    if (v68 > v66[2])
    {
      __break(1u);
    }
    else
    {
      v66[4 * v64 + 7] = v65;
      *(_QWORD *)v3 = v66;
    }
    return result;
  }
  v22 = v3;
  sub_1A55032A0(a1 + 16, (uint64_t)&v79, &qword_1EE7A8790);
  sub_1A55032A0((uint64_t)&v79, (uint64_t)&v82, &qword_1EE7A8790);
  if ((v83 & 1) != 0)
  {
    v23 = v16;
    v24 = v78;
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a2, v78);
    sub_1A5529EE8(a2, (uint64_t)v10);
    sub_1A5529EE8(a2, (uint64_t)v7);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v25 = sub_1A594A74C();
    v26 = sub_1A594C018();
    v27 = v26;
    if (os_log_type_enabled(v25, v26))
    {
      v28 = swift_slowAlloc();
      LODWORD(v74) = v27;
      v29 = v28;
      v77 = swift_slowAlloc();
      v87 = v77;
      *(_DWORD *)v29 = 68158979;
      LODWORD(v80) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v29 + 8) = 256;
      v75 = v23;
      v30 = v76;
      v31 = v10[*(int *)(v76 + 20)];
      sub_1A5529F2C((uint64_t)v10);
      LOBYTE(v80) = v31;
      sub_1A594C3CC();
      *(_WORD *)(v29 + 11) = 1040;
      LODWORD(v80) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v29 + 17) = 512;
      v32 = &v7[*(int *)(v30 + 20)];
      LOWORD(v80) = *((_WORD *)v32 + 1);
      sub_1A594C3CC();
      *(_WORD *)(v29 + 21) = 2160;
      v80 = 0x786F626C69616DLL;
      sub_1A594C3CC();
      *(_WORD *)(v29 + 31) = 2085;
      v33 = *((_DWORD *)v32 + 4);
      v80 = *((_QWORD *)v32 + 1);
      v81 = v33;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v34 = sub_1A594B4A8();
      v80 = sub_1A55791B0(v34, v35, (uint64_t *)&v87);
      sub_1A594C3CC();
      swift_bridgeObjectRelease();
      sub_1A5529F2C((uint64_t)v7);
      _os_log_impl(&dword_1A4F90000, v25, (os_log_type_t)v74, "[%.*hhx-{%.*hx}-%{sensitive,mask.mailbox}s] Flag change has no UID and no sequence number.", (uint8_t *)v29, 0x29u);
      v36 = v77;
      swift_arrayDestroy();
      MEMORY[0x1A85B1964](v36, -1, -1);
      MEMORY[0x1A85B1964](v29, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v18, v78);
    }
    sub_1A5529F2C((uint64_t)v10);
    sub_1A5529F2C((uint64_t)v7);

    v72 = *(uint64_t (**)(char *, uint64_t))(v23 + 8);
    v73 = v18;
    return v72(v73, v24);
  }
  v55 = v82;
  v57 = *(_QWORD *)a1;
  v56 = *(_QWORD *)(a1 + 8);
  v58 = *(_QWORD **)(v22 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1A54F01E4(0, v58[2] + 1, 1, v58);
    v58 = (_QWORD *)result;
  }
  v60 = v58[2];
  v59 = v58[3];
  if (v60 >= v59 >> 1)
  {
    result = (uint64_t)sub_1A54F01E4((_QWORD *)(v59 > 1), v60 + 1, 1, v58);
    v58 = (_QWORD *)result;
  }
  v58[2] = v60 + 1;
  v61 = &v58[3 * v60];
  *((_DWORD *)v61 + 8) = v55;
  v61[5] = v57;
  v61[6] = v56;
  *(_QWORD *)(v22 + 32) = v58;
  return result;
}

uint64_t sub_1A553D948()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t sub_1A553D950(uint64_t a1)
{
  return sub_1A5538ED4(a1);
}

uint64_t sub_1A553D970()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_retain();
  swift_retain();
  swift_retain();
  return v1;
}

uint64_t sub_1A553D9BC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v1 = sub_1A555D3EC(MEMORY[0x1E0DEE9D8]);
  v3 = v2;
  v5 = v4;
  swift_release();
  swift_release();
  result = swift_release();
  v0[1] = v1;
  v0[2] = v3;
  v0[3] = v5;
  return result;
}

_QWORD *sub_1A553DA18(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *result;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  int8x16_t v30;
  uint64x2_t *v31;
  unint64_t v32;
  int8x16_t v33;
  int8x16_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  _QWORD *v41;

  v4 = v3;
  v8 = *v4;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v9 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A553E604(v9, a1, a2, a3);
  v11 = v10;
  v13 = v12;
  v15 = v14;
  swift_bridgeObjectRelease();
  result = (_QWORD *)swift_bridgeObjectRelease();
  v17 = v15 >> 1;
  v18 = v17 - v13;
  if (__OFSUB__(v17, v13))
    goto LABEL_34;
  if (v18)
  {
    v40 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    result = (_QWORD *)sub_1A54F4BBC(0, v18 & ~(v18 >> 63), 0);
    if (v18 < 0)
    {
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    result = v40;
    if (v13 <= v17)
      v19 = v17;
    else
      v19 = v13;
    v20 = v19 - v13;
    v21 = (uint64_t *)(v11 + 32 * v13 + 24);
    v22 = v18;
    while (v20)
    {
      v23 = *v21;
      v41 = result;
      v25 = result[2];
      v24 = result[3];
      v26 = v25 + 1;
      if (v25 >= v24 >> 1)
      {
        sub_1A54F4BBC(v24 > 1, v25 + 1, 1);
        result = v41;
      }
      result[2] = v26;
      result[v25 + 4] = v23;
      --v20;
      v21 += 4;
      if (!--v22)
        goto LABEL_14;
    }
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  result = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v26 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
  if (!v26)
  {
    swift_bridgeObjectRelease();
    return (_QWORD *)swift_unknownObjectRelease();
  }
LABEL_14:
  v27 = result[4];
  v28 = v26 - 1;
  if (v26 != 1)
  {
    if (v28 >= 4)
    {
      v29 = v28 & 0xFFFFFFFFFFFFFFFCLL | 1;
      v30 = (int8x16_t)vdupq_n_s64(v27);
      v31 = (uint64x2_t *)(result + 7);
      v32 = v28 & 0xFFFFFFFFFFFFFFFCLL;
      v33 = v30;
      do
      {
        v30 = vbslq_s8((int8x16_t)vcgtq_u64((uint64x2_t)v30, v31[-1]), v30, (int8x16_t)v31[-1]);
        v33 = vbslq_s8((int8x16_t)vcgtq_u64((uint64x2_t)v33, *v31), v33, *(int8x16_t *)v31);
        v31 += 2;
        v32 -= 4;
      }
      while (v32);
      v34 = vbslq_s8((int8x16_t)vcgtq_u64((uint64x2_t)v30, (uint64x2_t)v33), v30, v33);
      v35 = vextq_s8(v34, v34, 8uLL).u64[0];
      v27 = (unint64_t)vbsl_s8((int8x8_t)vcgtd_u64(v34.u64[0], v35), *(int8x8_t *)v34.i8, (int8x8_t)v35);
      if (v28 == (v28 & 0xFFFFFFFFFFFFFFFCLL))
        goto LABEL_24;
    }
    else
    {
      v29 = 1;
    }
    v36 = v26 - v29;
    v37 = &result[v29 + 4];
    do
    {
      v39 = *v37++;
      v38 = v39;
      if (v27 <= v39)
        v27 = v38;
      --v36;
    }
    while (v36);
  }
LABEL_24:
  result = (_QWORD *)swift_bridgeObjectRelease();
  if ((v4[6] & 1) == 0 && v27 <= v4[5])
    v27 = v4[5];
  v4[5] = v27;
  *((_BYTE *)v4 + 48) = 0;
  if (!v18)
    return (_QWORD *)swift_unknownObjectRelease();
  if (v18 < 0)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if (*(_QWORD *)(v8 + 16) >= (unint64_t)v18)
  {
    sub_1A558C204(0, v18);
    return (_QWORD *)swift_unknownObjectRelease();
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1A553DC84(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;

  v2 = result;
  v3 = *(_QWORD **)v1;
  if (*(_QWORD *)(*(_QWORD *)v1 + 16))
  {
    v4 = static ConnectionCommandIDSet.empty.getter();
    v6 = v5;
    v8 = v7;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1A54F0308(0, v3[2] + 1, 1, v3);
      v3 = (_QWORD *)result;
    }
    v10 = v3[2];
    v9 = v3[3];
    if (v10 >= v9 >> 1)
    {
      result = (uint64_t)sub_1A54F0308((_QWORD *)(v9 > 1), v10 + 1, 1, v3);
      v3 = (_QWORD *)result;
    }
    v3[2] = v10 + 1;
    v11 = &v3[4 * v10];
    *((_DWORD *)v11 + 8) = v4;
    v11[5] = v6;
    v11[6] = v8;
    v11[7] = v2;
    *(_QWORD *)v1 = v3;
  }
  else
  {
    *(_QWORD *)(v1 + 40) = result;
    *(_BYTE *)(v1 + 48) = 0;
  }
  return result;
}

uint64_t sub_1A553DD54()
{
  uint64_t v0;

  if ((*(_QWORD *)(*(_QWORD *)(v0 + 32) + 16) != 0) | *(_BYTE *)(v0 + 48) & 1)
    return 0;
  else
    return *(_QWORD *)(v0 + 40);
}

void sub_1A553DD78()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = 0;
  *(_BYTE *)(v0 + 48) = 1;
}

uint64_t sub_1A553DD88@<X0>(uint64_t a1@<X8>)
{
  __int128 v3[3];

  sub_1A553CB98((uint64_t)v3);
  return sub_1A5539F08(v3, a1);
}

uint64_t sub_1A553DDC0(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  uint64_t v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8798);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A553EC8C();
  sub_1A594CF3C();
  v11 = a2;
  v10[15] = 0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799A38);
  sub_1A553ECD0();
  sub_1A594CC3C();
  if (!v2)
  {
    v10[14] = 1;
    sub_1A594CC6C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1A553DF00(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[8];
  uint64_t v11;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AC98);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A553EBA0();
  sub_1A594CF3C();
  v11 = *v3;
  v10[7] = 0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799630);
  sub_1A553EBE4();
  sub_1A594CC3C();
  if (!v2)
  {
    v10[6] = 1;
    sub_1A594CBD0();
    v10[5] = 2;
    sub_1A594CBD0();
    v10[4] = 3;
    sub_1A594CC0C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1A553E08C()
{
  _BYTE *v0;

  if (*v0)
    return 0x65636E6575716573;
  else
    return 0xD000000000000010;
}

uint64_t sub_1A553E0D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A553F104(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A553E0FC()
{
  sub_1A553EC8C();
  return sub_1A594CFB4();
}

uint64_t sub_1A553E124()
{
  sub_1A553EC8C();
  return sub_1A594CFC0();
}

uint64_t sub_1A553E14C(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1A553DDC0(a1, *v1);
}

BOOL sub_1A553E164(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1A553E178()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A553E1B4 + 4 * byte_1A59A4B80[*v0]))(0x65636E6575716573, 0xEF73657461647055);
}

uint64_t sub_1A553E1B4()
{
  return 0x577365676E616863;
}

unint64_t sub_1A553E1D8()
{
  return 0xD000000000000011;
}

unint64_t sub_1A553E1F4()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_1A553E214@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A553F214(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A553E238(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1A553E244()
{
  sub_1A553EBA0();
  return sub_1A594CFB4();
}

uint64_t sub_1A553E26C()
{
  sub_1A553EBA0();
  return sub_1A594CFC0();
}

uint64_t sub_1A553E294(_QWORD *a1)
{
  return sub_1A553DF00(a1);
}

uint64_t sub_1A553E2A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  uint64_t result;

  if ((sub_1A553819C(a1, a7) & 1) == 0)
    return 0;
  if ((sub_1A553BD10(a8, a2) & 1) == 0)
    return 0;
  if ((sub_1A553B898(a3, a9) & 1) == 0)
    return 0;
  result = sub_1A5537FD8(a4, a10);
  if ((result & 1) == 0)
    return 0;
  if ((a6 & 1) != 0)
    return (a12 & 1) != 0;
  if ((a12 & 1) != 0)
    return 0;
  if (((a11 | a5) & 0x8000000000000000) == 0)
    return a11 == a5;
  __break(1u);
  return result;
}

uint64_t _s18CondStoreResponsesVwxx()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t _s18CondStoreResponsesVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_retain();
  swift_retain();
  swift_retain();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t _s18CondStoreResponsesVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v4;
  return a1;
}

uint64_t _s18CondStoreResponsesVwta(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

ValueMetadata *_s18CondStoreResponsesVMa()
{
  return &_s18CondStoreResponsesVN;
}

unint64_t sub_1A553E54C(uint64_t a1)
{
  unint64_t result;

  result = sub_1A553E570();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A553E570()
{
  unint64_t result;

  result = qword_1EE797A58;
  if (!qword_1EE797A58)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A4BB4, &_s18CondStoreResponsesVN);
    atomic_store(result, (unint64_t *)&qword_1EE797A58);
  }
  return result;
}

uint64_t sub_1A553E5B4(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t sub_1A553E5DC(uint64_t a1)
{
  swift_release();
  return a1;
}

uint64_t sub_1A553E604(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v4 = *(_QWORD *)(result + 16);
  if (v4)
  {
    v8 = 0;
    v13 = result;
    v9 = result + 48;
    while (1)
    {
      v10 = *(_DWORD *)(v9 - 16);
      v11 = *(_QWORD *)(v9 - 8);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v12 = ConnectionCommandIDSet.isDisjoint(with:)(a2, a3, a4, v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
        break;
      v9 += 32;
      if (v4 == ++v8)
      {
        v8 = v4;
        break;
      }
    }
    result = v13;
    if (*(_QWORD *)(v13 + 16) < v8)
      __break(1u);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for OpaqueMailboxID(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

_QWORD *assignWithCopy for OpaqueMailboxID(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

_QWORD *assignWithTake for OpaqueMailboxID(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

ValueMetadata *_s18CondStoreResponsesV13CapturedValueV14SequenceUpdateVMa()
{
  return &_s18CondStoreResponsesV13CapturedValueV14SequenceUpdateVN;
}

uint64_t _s21LocationAndExtensionsVwxx()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s18CondStoreResponsesV14SequenceUpdateVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t _s18CondStoreResponsesV14SequenceUpdateVwca(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t _s18CondStoreResponsesV14SequenceUpdateVwta(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContentType.Attribute(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Media.MediaType(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s18CondStoreResponsesV14SequenceUpdateVMa()
{
  return &_s18CondStoreResponsesV14SequenceUpdateVN;
}

uint64_t _s18CondStoreResponsesV13CapturedValueVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s18CondStoreResponsesV13CapturedValueVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t _s18CondStoreResponsesV13CapturedValueVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v4;
  return a1;
}

uint64_t _s18CondStoreResponsesV13CapturedValueVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t _s5BatchVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 49))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s5BatchVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 49) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s18CondStoreResponsesV13CapturedValueVMa()
{
  return &_s18CondStoreResponsesV13CapturedValueVN;
}

unint64_t sub_1A553EBA0()
{
  unint64_t result;

  result = qword_1EE797A30;
  if (!qword_1EE797A30)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A4E5C, &_s18CondStoreResponsesV13CapturedValueV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE797A30);
  }
  return result;
}

unint64_t sub_1A553EBE4()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1EE799638;
  if (!qword_1EE799638)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract_0(&qword_1EE799630);
    v2 = sub_1A553EC48();
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE799638);
  }
  return result;
}

unint64_t sub_1A553EC48()
{
  unint64_t result;

  result = qword_1EE797A48;
  if (!qword_1EE797A48)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A4C40, &_s18CondStoreResponsesV13CapturedValueV14SequenceUpdateVN);
    atomic_store(result, (unint64_t *)&qword_1EE797A48);
  }
  return result;
}

unint64_t sub_1A553EC8C()
{
  unint64_t result;

  result = qword_1EE7A87A0;
  if (!qword_1EE7A87A0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A4E0C, &_s18CondStoreResponsesV13CapturedValueV14SequenceUpdateV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7A87A0);
  }
  return result;
}

unint64_t sub_1A553ECD0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EE799A70;
  if (!qword_1EE799A70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract_0(&qword_1EE799A38);
    v2 = MEMORY[0x1E0DEA970];
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE799A70);
  }
  return result;
}

uint64_t _s18CondStoreResponsesV13CapturedValueV14SequenceUpdateV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A553ED78 + 4 * byte_1A59A4B89[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A553EDAC + 4 * byte_1A59A4B84[v4]))();
}

uint64_t sub_1A553EDAC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A553EDB4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A553EDBCLL);
  return result;
}

uint64_t sub_1A553EDC8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A553EDD0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A553EDD4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A553EDDC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s18CondStoreResponsesV13CapturedValueV14SequenceUpdateV10CodingKeysOMa()
{
  return &_s18CondStoreResponsesV13CapturedValueV14SequenceUpdateV10CodingKeysON;
}

uint64_t getEnumTagSinglePayload for Environment.AvailableFileSystemSpace(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s18CondStoreResponsesV13CapturedValueV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A553EED4 + 4 * byte_1A59A4B93[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A553EF08 + 4 * byte_1A59A4B8E[v4]))();
}

uint64_t sub_1A553EF08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A553EF10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A553EF18);
  return result;
}

uint64_t sub_1A553EF24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A553EF2CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A553EF30(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A553EF38(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s18CondStoreResponsesV13CapturedValueV10CodingKeysOMa()
{
  return &_s18CondStoreResponsesV13CapturedValueV10CodingKeysON;
}

unint64_t sub_1A553EF58()
{
  unint64_t result;

  result = qword_1EE7A87A8;
  if (!qword_1EE7A87A8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A4D2C, &_s18CondStoreResponsesV13CapturedValueV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7A87A8);
  }
  return result;
}

unint64_t sub_1A553EFA0()
{
  unint64_t result;

  result = qword_1EE7A87B0;
  if (!qword_1EE7A87B0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A4DE4, &_s18CondStoreResponsesV13CapturedValueV14SequenceUpdateV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7A87B0);
  }
  return result;
}

unint64_t sub_1A553EFE8()
{
  unint64_t result;

  result = qword_1EE7A87B8;
  if (!qword_1EE7A87B8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A4D54, &_s18CondStoreResponsesV13CapturedValueV14SequenceUpdateV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7A87B8);
  }
  return result;
}

unint64_t sub_1A553F030()
{
  unint64_t result;

  result = qword_1EE7A87C0;
  if (!qword_1EE7A87C0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A4D7C, &_s18CondStoreResponsesV13CapturedValueV14SequenceUpdateV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7A87C0);
  }
  return result;
}

unint64_t sub_1A553F078()
{
  unint64_t result;

  result = qword_1EE797A40;
  if (!qword_1EE797A40)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A4C9C, &_s18CondStoreResponsesV13CapturedValueV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE797A40);
  }
  return result;
}

unint64_t sub_1A553F0C0()
{
  unint64_t result;

  result = qword_1EE797A38;
  if (!qword_1EE797A38)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A4CC4, &_s18CondStoreResponsesV13CapturedValueV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE797A38);
  }
  return result;
}

uint64_t sub_1A553F104(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001A5A0E1A0 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65636E6575716573 && a2 == 0xED000065756C6156)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A553F214(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65636E6575716573 && a2 == 0xEF73657461647055;
  if (v2 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x577365676E616863 && a2 == 0xEE00444955687469 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A5A0E160 || (sub_1A594CD38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001A5A0E180)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1A553F40C(_OWORD *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[5];
  _OWORD v9[5];

  v2 = a1[3];
  v8[2] = a1[2];
  v8[3] = v2;
  v3 = a1[4];
  v4 = a1[1];
  v8[0] = *a1;
  v8[1] = v4;
  v5 = a2[3];
  v9[2] = a2[2];
  v9[3] = v5;
  v9[4] = a2[4];
  v6 = *a2;
  v9[1] = a2[1];
  v8[4] = v3;
  v9[0] = v6;
  return sub_1A554181C((uint64_t)v8, (uint64_t)v9) & 1;
}

BOOL sub_1A553F46C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2 | a2[1] ^ a1[1]) & 1) == 0;
}

uint64_t sub_1A553F494(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return (*a1 == *a2) & (a2[1] ^ a1[1] ^ 1u);
}

BOOL sub_1A553F4BC(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1A553F4D0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  unsigned int v20;
  int v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[4];
  v7 = a1[5];
  v8 = a1[6];
  v9 = a1[8];
  v10 = a1[9];
  v11 = *((_QWORD *)a1 + 2);
  v12 = a1[24];
  v13 = *a2;
  v14 = a2[1];
  v15 = a2[2];
  v16 = a2[3];
  v17 = a2[4];
  v18 = a2[5];
  v19 = a2[6];
  v20 = a2[8];
  v21 = a2[9];
  v22 = *((_QWORD *)a2 + 2);
  v23 = a2[24];
  v24 = a1[7];
  v25 = a2[7];
  if (v3)
    v26 = 256;
  else
    v26 = 0;
  v27 = v26 | v2;
  v28 = v4 == 0;
  v29 = 0x10000;
  if (v28)
    v30 = 0;
  else
    v30 = 0x10000;
  v28 = v5 == 0;
  v31 = 0x1000000;
  if (v28)
    v32 = 0;
  else
    v32 = 0x1000000;
  v33 = v27 | v30 | v32;
  if (v6)
    v34 = 0x100000000;
  else
    v34 = 0;
  if (v7)
    v35 = 0x10000000000;
  else
    v35 = 0;
  if (v8)
    v36 = 0x1000000000000;
  else
    v36 = 0;
  v37 = v33 | v34 | v35 | v36 | (v24 << 56);
  if (v10)
    v38 = 256;
  else
    v38 = 0;
  v39 = v38 | v9;
  if (v14)
    v40 = 256;
  else
    v40 = 0;
  v41 = v40 | v13;
  if (!v15)
    v29 = 0;
  if (!v16)
    v31 = 0;
  v42 = v41 | v29 | v31;
  if (v17)
    v43 = 0x100000000;
  else
    v43 = 0;
  if (v18)
    v44 = 0x10000000000;
  else
    v44 = 0;
  if (v19)
    v45 = 0x1000000000000;
  else
    v45 = 0;
  if (v21)
    v46 = 256;
  else
    v46 = 0;
  return sub_1A5541764(v37, v39, v11, v12, v42 | v43 | v44 | v45 | (v25 << 56), v46 | v20, v22, v23);
}

void sub_1A553F62C(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  __uint64_t v4;
  uint64_t v5;
  double v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *oslog;

  v2 = v1;
  if (!(a1 >> 62))
    __asm { BR              X10 }
  if (a1 >> 62 != 1
    || (*(_BYTE *)(a1 + 24) & 1) == 0
    || ((*(_QWORD *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x10) >> 59) & 0x1E | (*(_QWORD *)((a1 & 0x3FFFFFFFFFFFFFFFLL)
                                                                                                  + 0x10) >> 2) & 1) != 1)
  {
    return;
  }
  if ((*(_BYTE *)(v1 + 48) & 1) != 0)
  {
LABEL_15:
    *(_BYTE *)(v2 + 49) = 1;
    return;
  }
  v3 = *(_QWORD *)(v1 + 40);
  v4 = static MonotonicTime.now()();
  v5 = v3 - v4;
  if (v3 >= v4)
  {
    if ((uint64_t)(v3 - v4) >= 0)
      goto LABEL_11;
LABEL_21:
    __break(1u);
    JUMPOUT(0x1A553FF1CLL);
  }
  if ((uint64_t)(v4 - v3) < 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  v5 = v3 - v4;
LABEL_11:
  v6 = (double)v5 / -1000000000.0;
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_53();
  oslog = sub_1A594A74C();
  v7 = sub_1A594C030();
  v8 = os_log_type_enabled(oslog, v7);
  if (v6 > 4.0)
  {
    if (v8)
    {
      v9 = swift_slowAlloc();
      *(_DWORD *)v9 = 68157952;
      sub_1A594C3CC();
      *(_WORD *)(v9 + 8) = 2048;
      sub_1A594C3CC();
      _os_log_impl(&dword_1A4F90000, oslog, v7, "Last mailbox update was %.*g seconds ago. Requesting update.", (uint8_t *)v9, 0x12u);
      MEMORY[0x1A85B1964](v9, -1, -1);
    }

    goto LABEL_15;
  }
  if (v8)
  {
    v10 = swift_slowAlloc();
    *(_DWORD *)v10 = 68157952;
    sub_1A594C3CC();
    *(_WORD *)(v10 + 8) = 2048;
    sub_1A594C3CC();
    _os_log_impl(&dword_1A4F90000, oslog, v7, "Last mailbox update was %.*g seconds ago. Not requesting update.", (uint8_t *)v10, 0x12u);
    MEMORY[0x1A85B1964](v10, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_1A553FF40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t inited;
  int v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  unint64_t v12;
  uint64_t v14;

  if (*(_QWORD *)(v1 + 32))
  {
    v3 = RemoteMailbox.name.getter();
    v5 = v4;
    sub_1A54FCA28(a1);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = *(_QWORD *)(v1 + 32);
    *(_QWORD *)(v1 + 32) = 0x8000000000000000;
    sub_1A55B2808(a1, v3, v5, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v1 + 32) = v14;
    swift_bridgeObjectRelease();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796200);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A59ABD10;
    *(_QWORD *)(inited + 32) = RemoteMailbox.name.getter();
    *(_DWORD *)(inited + 40) = v8;
    *(_OWORD *)(inited + 48) = *(_OWORD *)a1;
    v10 = *(_OWORD *)(a1 + 32);
    v9 = *(_OWORD *)(a1 + 48);
    v11 = *(_OWORD *)(a1 + 16);
    *(_WORD *)(inited + 112) = *(_WORD *)(a1 + 64);
    *(_OWORD *)(inited + 80) = v10;
    *(_OWORD *)(inited + 96) = v9;
    *(_OWORD *)(inited + 64) = v11;
    v12 = sub_1A558B428(inited);
    swift_setDeallocating();
    sub_1A54FCA28(a1);
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A87C8);
    swift_arrayDestroy();
    *(_QWORD *)(v1 + 32) = v12;
  }
  return swift_bridgeObjectRelease();
}

void (*sub_1A5540080(_QWORD *a1, uint64_t a2, unsigned int a3))(_QWORD *a1, uint64_t a2)
{
  _QWORD *v6;

  v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v6[5] = sub_1A55410C4(v6, a2, a3);
  return sub_1A55400EC;
}

void sub_1A55400EC(_QWORD *a1, uint64_t a2)
{
  sub_1A5540160(a1, a2, (void (*)(uint64_t))MEMORY[0x1E0DEEB08]);
}

void (*sub_1A55400F8(_QWORD *a1, uint64_t a2))(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;

  v4 = malloc(0x30uLL);
  *a1 = v4;
  v4[4] = a2;
  swift_retain();
  v4[5] = sub_1A5541160(v4, a2);
  return sub_1A5540154;
}

void sub_1A5540154(_QWORD *a1, uint64_t a2)
{
  sub_1A5540160(a1, a2, (void (*)(uint64_t))MEMORY[0x1E0DEEE30]);
}

void sub_1A5540160(_QWORD *a1, uint64_t a2, void (*a3)(uint64_t))
{
  void *v4;
  uint64_t v5;

  v4 = (void *)*a1;
  v5 = *(_QWORD *)(*a1 + 32);
  (*(void (**)(_QWORD, _QWORD))(*a1 + 40))(*a1, 0);
  a3(v5);
  free(v4);
}

uint64_t sub_1A55401A4()
{
  _BYTE *v0;

  if (*v0)
    return 0x616C696176616E75;
  else
    return 0x6574726F70707573;
}

uint64_t sub_1A55401EC(__int16 a1)
{
  char v1;
  uint64_t result;
  uint64_t v3;

  v1 = a1;
  if ((a1 & 0x100) != 0)
  {
    if ((_BYTE)a1)
    {
      v3 = 0;
      goto LABEL_6;
    }
    return 0x31303533636672;
  }
  else
  {
    result = 0x2D6C616963657073;
    if (v1)
    {
      v3 = 0x2D6C616963657073;
LABEL_6:
      sub_1A594B5F8();
      swift_bridgeObjectRelease();
      return v3;
    }
  }
  return result;
}

uint64_t sub_1A55402DC()
{
  unsigned __int8 *v0;
  __int16 v1;

  if (v0[1])
    v1 = 256;
  else
    v1 = 0;
  return sub_1A55401EC(v1 | *v0);
}

uint64_t sub_1A55402F8()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x6174732D7473696CLL;
  if (*v0 != 1)
    v1 = 0xD00000000000001BLL;
  if (*v0)
    return v1;
  else
    return 0x616C696176616E75;
}

unint64_t sub_1A5540368(uint64_t a1, unsigned int a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v10;
  char v11;
  uint64_t v12;
  unsigned int v13;
  char v14;
  unint64_t result;
  BOOL v16;
  BOOL v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  void (*v21)(_QWORD *, uint64_t);
  _QWORD v22[4];

  v5 = (_QWORD *)(v3 + 32);
  v4 = *(_QWORD *)(v3 + 32);
  if (!v4)
    goto LABEL_6;
  v6 = *(_QWORD *)(v4 + 16);
  if (!v6)
  {
LABEL_7:
    v16 = 1;
LABEL_8:
    LOBYTE(v22[0]) = v16;
    return v6 | ((unint64_t)v16 << 32);
  }
  v10 = sub_1A54FDC30(a1, a2);
  if ((v11 & 1) == 0
    || (v12 = *(_QWORD *)(v4 + 56) + 72 * v10,
        v13 = *(_DWORD *)(v12 + 32),
        v14 = *(_BYTE *)(v12 + 65),
        !_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0())
    || (result = swift_bridgeObjectRelease(), (v14 & 1) != 0))
  {
LABEL_6:
    v6 = 0;
    goto LABEL_7;
  }
  v17 = __CFADD__(a3, 1);
  v18 = a3 + 1;
  if (!v17)
  {
    if (v18 <= v13)
      v19 = v13;
    else
      v19 = v18;
    if (*v5)
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v21 = sub_1A5540080(v22, a1, a2);
      if (*(_QWORD *)v20 && (*(_BYTE *)(v20 + 65) & 1) == 0)
        *(_DWORD *)(v20 + 32) = v19;
      v21(v22, 0);
      swift_bridgeObjectRelease();
    }
    v16 = v18 <= v13;
    if (v18 > v13)
      v6 = v19;
    else
      v6 = 0;
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5540478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t i;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  int v16;
  int v17;
  int v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[8];
  uint64_t v23;

  sub_1A55032A0(v0 + 32, (uint64_t)v22, &qword_1EE7991D8);
  sub_1A55032A0((uint64_t)v22, (uint64_t)&v23, &qword_1EE7991D8);
  v1 = v23;
  result = MEMORY[0x1E0DEE9E8];
  if (v23)
  {
    v21 = MEMORY[0x1E0DEE9E8];
    v3 = v23 + 64;
    v4 = 1 << *(_BYTE *)(v23 + 32);
    v5 = -1;
    if (v4 < 64)
      v5 = ~(-1 << v4);
    v6 = v5 & *(_QWORD *)(v23 + 64);
    v7 = (unint64_t)(v4 + 63) >> 6;
    result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v8 = 0;
    if (v6)
      goto LABEL_32;
LABEL_7:
    v9 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_36:
      __break(1u);
      return result;
    }
    if (v9 >= v7)
      goto LABEL_33;
    v10 = *(_QWORD *)(v3 + 8 * v9);
    ++v8;
    if (!v10)
    {
      v8 = v9 + 1;
      if (v9 + 1 >= v7)
        goto LABEL_33;
      v10 = *(_QWORD *)(v3 + 8 * v8);
      if (v10)
        goto LABEL_24;
      v8 = v9 + 2;
      if (v9 + 2 >= v7)
        goto LABEL_33;
      v10 = *(_QWORD *)(v3 + 8 * v8);
      if (v10)
        goto LABEL_24;
      v8 = v9 + 3;
      if (v9 + 3 >= v7)
        goto LABEL_33;
      v10 = *(_QWORD *)(v3 + 8 * v8);
      if (v10)
        goto LABEL_24;
      v8 = v9 + 4;
      if (v9 + 4 >= v7)
      {
LABEL_33:
        swift_release();
        return v21;
      }
      v10 = *(_QWORD *)(v3 + 8 * v8);
      if (!v10)
      {
        v11 = v9 + 5;
        if (v11 < v7)
        {
          v10 = *(_QWORD *)(v3 + 8 * v11);
          if (v10)
          {
            v8 = v11;
            goto LABEL_24;
          }
          while (1)
          {
            v8 = v11 + 1;
            if (__OFADD__(v11, 1))
              goto LABEL_36;
            if (v8 >= v7)
              goto LABEL_33;
            v10 = *(_QWORD *)(v3 + 8 * v8);
            ++v11;
            if (v10)
              goto LABEL_24;
          }
        }
        goto LABEL_33;
      }
    }
LABEL_24:
    v6 = (v10 - 1) & v10;
    for (i = __clz(__rbit64(v10)) + (v8 << 6); ; i = v19 | (v8 << 6))
    {
      v13 = *(_QWORD *)(v1 + 48) + 16 * i;
      v14 = *(_QWORD *)v13;
      v15 = *(_DWORD *)(v13 + 8);
      v16 = *(unsigned __int16 *)(*(_QWORD *)(v1 + 56) + 72 * i + 14);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v17 = *(unsigned __int16 *)RemoteMailbox.Attributes.noSelect.unsafeMutableAddressor();
      v18 = *(unsigned __int16 *)RemoteMailbox.Attributes.nonExistent.unsafeMutableAddressor();
      if (v17)
      {
        if ((v18 & ~v17) == 0)
        {
          if ((v17 & v16) == 0)
            goto LABEL_6;
          goto LABEL_31;
        }
      }
      else if (!v18)
      {
        goto LABEL_6;
      }
      if (((v18 | v17) & v16) == 0)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        if (!v6)
          goto LABEL_7;
        goto LABEL_32;
      }
LABEL_31:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A54F2A14((uint64_t)&v20, v14, v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if (!v6)
        goto LABEL_7;
LABEL_32:
      v19 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
    }
  }
  return result;
}

double sub_1A55406D4@<D0>(uint64_t a1@<X0>, unsigned int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v6;
  char v7;
  unint64_t v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  int v12;
  char v13;
  __int16 v14;
  char v15;
  uint64_t v16;
  char v17;
  char v18;
  double result;
  uint64_t v20;

  v4 = v3;
  v6 = sub_1A54FDC30(a1, a2);
  if ((v7 & 1) != 0)
  {
    v8 = v6;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v10 = *v3;
    v20 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1A554FC34();
      v10 = v20;
    }
    swift_bridgeObjectRelease();
    v11 = *(_QWORD *)(v10 + 56) + 72 * v8;
    v12 = *(_DWORD *)(v11 + 8);
    v13 = *(_BYTE *)(v11 + 12);
    v14 = *(_WORD *)(v11 + 14);
    v15 = *(_BYTE *)(v11 + 16);
    v16 = *(_QWORD *)(v11 + 56);
    v17 = *(_BYTE *)(v11 + 64);
    v18 = *(_BYTE *)(v11 + 65);
    *(_QWORD *)a3 = *(_QWORD *)v11;
    *(_DWORD *)(a3 + 8) = v12;
    *(_BYTE *)(a3 + 12) = v13;
    *(_WORD *)(a3 + 14) = v14;
    *(_BYTE *)(a3 + 16) = v15;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v11 + 24);
    *(_OWORD *)(a3 + 40) = *(_OWORD *)(v11 + 40);
    *(_QWORD *)(a3 + 56) = v16;
    *(_BYTE *)(a3 + 64) = v17;
    *(_BYTE *)(a3 + 65) = v18;
    sub_1A554E540(v8, v10);
    *v4 = v10;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_WORD *)(a3 + 64) = 0;
    result = 0.0;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1A55407E4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  unint64_t v5;
  char v6;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v2 = v1;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54FDEE8(a1);
  v5 = v4;
  LOBYTE(a1) = v6;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = *v2;
  v11 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1A5551178();
    v8 = v11;
  }
  swift_release();
  v9 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v5);
  sub_1A554E8E8(v5, v8);
  *v2 = v8;
  swift_bridgeObjectRelease();
  return v9;
}

unsigned __int8 *sub_1A55408A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v5 = sub_1A594B70C();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_1A5540C08();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_1A594C7D4();
  }
LABEL_7:
  v11 = sub_1A554098C(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_1A554098C(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1A5540C08()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_1A594B718();
  v4 = sub_1A5540C84(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1A5540C84(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_1A5540DC8(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_1A5579640(v9, 0);
      v12 = sub_1A5540EB4((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    v13 = MEMORY[0x1A85AD9BC](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x1A85AD9BCLL);
LABEL_9:
      sub_1A594C7D4();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1A85AD9BC]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_1A5540DC8(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_1A55796A4(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_1A55796A4(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_1A594B664();
  }
  __break(1u);
  return result;
}

unint64_t sub_1A5540EB4(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_1A55796A4(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_1A594B670();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_1A594C7D4();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_1A55796A4(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_1A594B64C();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

void (*sub_1A55410C4(_QWORD *a1, uint64_t a2, unsigned int a3))(uint64_t a1, uint64_t a2)
{
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;

  v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v6[9] = sub_1A5541580(v6);
  v6[10] = sub_1A5541248(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_1A5541154;
}

void sub_1A5541154(uint64_t a1, uint64_t a2)
{
  sub_1A55411F4(a1, a2, (void (*)(uint64_t))MEMORY[0x1E0DEEB08]);
}

void (*sub_1A5541160(_QWORD *a1, uint64_t a2))(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  char isUniquelyReferenced_nonNull_native;

  v4 = malloc(0x58uLL);
  *a1 = v4;
  v4[8] = a2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_retain();
  v4[9] = sub_1A55415AC(v4);
  v4[10] = sub_1A5541424(v4 + 4, a2, isUniquelyReferenced_nonNull_native);
  return sub_1A55411E8;
}

void sub_1A55411E8(uint64_t a1, uint64_t a2)
{
  sub_1A55411F4(a1, a2, (void (*)(uint64_t))MEMORY[0x1E0DEEE30]);
}

void sub_1A55411F4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  void *v4;
  void (*v5)(void *, _QWORD);
  uint64_t v6;

  v4 = *(void **)a1;
  v5 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 72);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 80))(*(_QWORD *)a1 + 32, 0);
  a3(v6);
  v5(v4, 0);
  free(v4);
}

uint64_t sub_1A5541248(_QWORD *a1, uint64_t a2, unsigned int a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  char *v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  __int16 v25;
  int v26;
  unint64_t v27;
  __int16 v28;
  __int16 v29;
  unint64_t v30;
  char v31;
  uint64_t result;

  v5 = v4;
  v10 = (char *)malloc(0x60uLL);
  *a1 = v10;
  *((_DWORD *)v10 + 17) = a3;
  *((_QWORD *)v10 + 9) = a2;
  *((_QWORD *)v10 + 10) = v5;
  v11 = *v5;
  v13 = sub_1A54FDC30(a2, a3);
  v10[66] = v12 & 1;
  v14 = *(_QWORD *)(v11 + 16);
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    v17 = v12;
    v18 = *(_QWORD *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      *((_QWORD *)v10 + 11) = v13;
      if ((v17 & 1) != 0)
      {
LABEL_8:
        v19 = *(_QWORD *)(*v5 + 56) + 72 * v13;
        v20 = *(_QWORD *)v19;
        v21 = *(unsigned __int8 *)(v19 + 16);
        v22 = *(_OWORD *)(v19 + 24);
        v23 = *(_OWORD *)(v19 + 40);
        v24 = *(_QWORD *)(v19 + 56);
        v25 = *(unsigned __int8 *)(v19 + 64);
        v26 = *(unsigned __int8 *)(v19 + 65);
        v27 = *(unsigned int *)(v19 + 8) | ((unint64_t)*(unsigned __int8 *)(v19 + 12) << 32) | ((unint64_t)*(unsigned __int16 *)(v19 + 14) << 48);
        if (v26)
          v28 = 256;
        else
          v28 = 0;
        v29 = v28 | v25;
        goto LABEL_15;
      }
LABEL_14:
      v20 = 0;
      v27 = 0;
      v21 = 0;
      v24 = 0;
      v29 = 0;
      v22 = 0uLL;
      v23 = 0uLL;
LABEL_15:
      *(_QWORD *)v10 = v20;
      *((_QWORD *)v10 + 1) = v27;
      *((_QWORD *)v10 + 2) = v21;
      *(_OWORD *)(v10 + 24) = v22;
      *(_OWORD *)(v10 + 40) = v23;
      *((_QWORD *)v10 + 7) = v24;
      result = (uint64_t)sub_1A55413E4;
      *((_WORD *)v10 + 32) = v29;
      return result;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_1A554FC34();
      goto LABEL_7;
    }
    sub_1A5582220(v16, a4 & 1);
    v30 = sub_1A54FDC30(a2, a3);
    if ((v17 & 1) == (v31 & 1))
    {
      v13 = v30;
      *((_QWORD *)v10 + 11) = v30;
      if ((v17 & 1) != 0)
        goto LABEL_8;
      goto LABEL_14;
    }
  }
  result = sub_1A594CDF8();
  __break(1u);
  return result;
}

void sub_1A55413E4(uint64_t *a1)
{
  void *v1;

  v1 = (void *)*a1;
  sub_1A55415CC(*a1, *(_BYTE *)(*a1 + 66), *(uint64_t **)(*a1 + 80), *(_QWORD *)(*a1 + 88), *(_QWORD *)(*a1 + 72), *(_DWORD *)(*a1 + 68));
  swift_bridgeObjectRelease();
  free(v1);
}

void (*sub_1A5541424(_QWORD *a1, uint64_t a2, char a3))(uint64_t **a1)
{
  uint64_t *v3;
  uint64_t *v4;
  _QWORD *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void (*result)(uint64_t **);

  v4 = v3;
  v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[1] = a2;
  v8[2] = v4;
  v9 = *v4;
  sub_1A54FDEE8(a2);
  v12 = v11;
  *((_BYTE *)v8 + 32) = v10 & 1;
  v13 = *(_QWORD *)(v9 + 16);
  v14 = (v10 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v10;
    v17 = *(_QWORD *)(v9 + 24);
    if (v17 >= v15 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v12;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v18 = *(_QWORD *)(*(_QWORD *)(*v4 + 56) + 8 * v12);
LABEL_12:
        *v8 = v18;
        return sub_1A5541544;
      }
LABEL_11:
      v18 = 0;
      goto LABEL_12;
    }
    if (v17 >= v15 && (a3 & 1) == 0)
    {
      sub_1A5551178();
      goto LABEL_7;
    }
    sub_1A5584C70(v15, a3 & 1);
    sub_1A54FDEE8(a2);
    if ((v16 & 1) == (v20 & 1))
    {
      v12 = v19;
      v8[3] = v19;
      if ((v16 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797A18);
  result = (void (*)(uint64_t **))sub_1A594CDF8();
  __break(1u);
  return result;
}

void sub_1A5541544(uint64_t **a1)
{
  uint64_t *v1;

  v1 = *a1;
  sub_1A55416D4(*a1, *((_BYTE *)*a1 + 32), (uint64_t *)(*a1)[2], (*a1)[3], (*a1)[1]);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t (*sub_1A5541580(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_1A55415A0;
}

uint64_t sub_1A55415A0(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

uint64_t (*sub_1A55415AC(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_1A5543404;
}

uint64_t sub_1A55415CC(uint64_t a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, int a6)
{
  __int16 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  _QWORD *v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v19;
  _BYTE v20[48];
  __int16 v21;

  if (*(_QWORD *)a1)
  {
    v9 = *(_WORD *)(a1 + 64);
    v10 = *(_QWORD *)(a1 + 56);
    v12 = *(_QWORD *)(a1 + 8);
    v11 = *(_QWORD *)(a1 + 16);
    *(_QWORD *)&v19 = *(_QWORD *)a1;
    DWORD2(v19) = v12;
    BYTE12(v19) = BYTE4(v12);
    HIWORD(v19) = HIWORD(v12);
    v20[0] = v11;
    v13 = *(_OWORD *)(a1 + 40);
    *(_OWORD *)&v20[8] = *(_OWORD *)(a1 + 24);
    *(_OWORD *)&v20[24] = v13;
    *(_QWORD *)&v20[40] = v10;
    v21 = v9 & 0x1FF;
    v14 = (_QWORD *)*a3;
    if ((a2 & 1) != 0)
    {
      v15 = v14[7] + 72 * a4;
      v16 = *(_OWORD *)&v20[32];
      *(_OWORD *)(v15 + 32) = *(_OWORD *)&v20[16];
      *(_OWORD *)(v15 + 48) = v16;
      *(_WORD *)(v15 + 64) = v21;
      v17 = *(_OWORD *)v20;
      *(_OWORD *)v15 = v19;
      *(_OWORD *)(v15 + 16) = v17;
    }
    else
    {
      sub_1A55B2528(a4, a5, a6, (uint64_t)&v19, v14);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
  }
  else if ((a2 & 1) != 0)
  {
    swift_arrayDestroy();
    sub_1A554E540(a4, *a3);
  }
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t sub_1A55416D4(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5)
{
  uint64_t v7;
  _QWORD *v8;

  v7 = *a1;
  if (*a1)
  {
    v8 = (_QWORD *)*a3;
    if ((a2 & 1) != 0)
    {
      *(_QWORD *)(v8[7] + 8 * a4) = v7;
    }
    else
    {
      sub_1A55B2620(a4, a5, v7, v8);
      swift_retain();
    }
  }
  else if ((a2 & 1) != 0)
  {
    swift_arrayDestroy();
    sub_1A554E8E8(a4, *a3);
  }
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t sub_1A5541764(unint64_t a1, int a2, uint64_t a3, char a4, unint64_t a5, unsigned int a6, uint64_t a7, char a8)
{
  uint64_t result;

  result = 0;
  if (((a1 ^ a5) & 1) == 0
    && ((a1 >> 8) & 1) == ((a5 >> 8) & 1)
    && ((a1 >> 16) & 1) == ((a5 >> 16) & 1)
    && ((a1 >> 24) & 1) == ((a5 >> 24) & 1)
    && (BYTE4(a1) & 1) == (BYTE4(a5) & 1)
    && ((a1 >> 40) & 1) == ((a5 >> 40) & 1)
    && (HIWORD(a1) & 1) == (HIWORD(a5) & 1)
    && !((a5 ^ a1) >> 56)
    && ((a2 ^ a6) & 1) == 0
    && (((a2 ^ a6) >> 8) & 1) == 0)
  {
    if ((a4 & 1) != 0)
    {
      if ((a8 & 1) != 0)
        return 1;
    }
    else if ((a8 & 1) == 0 && a3 == a7)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1A554181C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_QWORD *)a2;
  if (*(_QWORD *)a1 == 2)
  {
    if (v4 != 2)
      return 0;
  }
  else if (v4 == 2
         || (sub_1A5541764(*(_QWORD *)a1 & 0xFF01010101010101, *(_DWORD *)(a1 + 8) & 0x101, *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24) & 1, *(_QWORD *)a2 & 0xFF01010101010101, *(_DWORD *)(a2 + 8) & 0x101, *(_QWORD *)(a2 + 16), *(_BYTE *)(a2 + 24) & 1) & 1) == 0)
  {
    return 0;
  }
  v5 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32))
  {
    if (!v5)
      return 0;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v6 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v7 = sub_1A54FA5A8(v6, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
      return 0;
  }
  else if (v5)
  {
    return 0;
  }
  v8 = *(_BYTE *)(a2 + 48);
  if ((*(_BYTE *)(a1 + 48) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 48))
      return 0;
  }
  else
  {
    if (*(_QWORD *)(a1 + 40) != *(_QWORD *)(a2 + 40))
      v8 = 1;
    if ((v8 & 1) != 0)
      return 0;
  }
  if (((*(unsigned __int8 *)(a1 + 49) ^ *(unsigned __int8 *)(a2 + 49)) & 1) != 0)
    return 0;
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(_QWORD *)(a2 + 56);
  if (v10)
  {
    if (!v11)
      return 0;
    v13 = *(_QWORD *)(a1 + 64);
    v12 = *(_QWORD *)(a1 + 72);
    v15 = *(_QWORD *)(a2 + 64);
    v14 = *(_QWORD *)(a2 + 72);
    sub_1A552CF80(v10);
    sub_1A552CF80(v10);
    sub_1A552CF80(v11);
    LOBYTE(v15) = static Namespace.__derived_struct_equals(_:_:)(v10, v13, v12, v11, v15, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A55419EC(v10);
    if ((v15 & 1) == 0)
      return 0;
  }
  else if (v11)
  {
    return 0;
  }
  return 1;
}

uint64_t sub_1A55419EC(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1A5541A18(unint64_t result)
{
  switch(result >> 60)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
      result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A5541A48(unint64_t result, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    sub_1A55235A0(result);
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return result;
}

unint64_t sub_1A5541A74(unint64_t result, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    sub_1A5524084(result);
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1A5541AA0(unint64_t result)
{
  switch(result >> 60)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
      result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A5541AD0(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;

  v2 = Capability.listStatus.unsafeMutableAddressor();
  v3 = *v2;
  v4 = v2[1];
  v5 = v2[2];
  v6 = *((_BYTE *)v2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  LOBYTE(v3) = sub_1A54EA9BC(v3, v4, v5, v6, a1);
  swift_bridgeObjectRelease();
  if ((v3 & 1) != 0)
  {
    v7 = Capability.yahooMailHighestModificationSequence.unsafeMutableAddressor();
    v8 = *v7;
    v9 = v7[1];
    v10 = v7[2];
    v11 = *((_BYTE *)v7 + 24);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    LOBYTE(v8) = sub_1A54EA9BC(v8, v9, v10, v11, a1);
    swift_bridgeObjectRelease();
    if ((v8 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v13 = Capability.condStore.unsafeMutableAddressor();
      v14 = *v13;
      v15 = v13[1];
      v16 = v13[2];
      v17 = *((_BYTE *)v13 + 24);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      LOBYTE(v14) = sub_1A54EA9BC(v14, v15, v16, v17, a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v14 & 1) != 0)
        return 2;
      else
        return 1;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

BOOL sub_1A5541BEC(_QWORD *a1)
{
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  char v6;

  v2 = a1[9];
  if (v2)
  {
    v3 = a1[8] == 0x4920216F6F686159 && v2 == 0xEB000000002E636ELL;
    if (v3 || (sub_1A594CD38() & 1) != 0)
      goto LABEL_14;
  }
  v4 = a1[1];
  if (v4)
  {
    if (*a1 != 0x70616D4947 || v4 != 0xE500000000000000)
    {
      v6 = sub_1A594CD38();
      sub_1A55426A4((uint64_t)a1);
      return (v6 & 1) != 0;
    }
LABEL_14:
    sub_1A55426A4((uint64_t)a1);
    return 1;
  }
  sub_1A55426A4((uint64_t)a1);
  return 0;
}

uint64_t sub_1A5541CD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;
  int64_t v6;
  unint64_t v7;
  unint64_t i;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 *v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  unsigned __int8 *v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 *v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  unsigned __int8 *v48;
  unsigned int v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  _QWORD v55[3];

  v1 = a1;
  v52 = a1 + 56;
  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 56);
  v53 = (unint64_t)(v2 + 63) >> 6;
  result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v6 = 0;
  if (!v4)
    goto LABEL_5;
LABEL_4:
  v7 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  for (i = v7 | (v6 << 6); ; i = __clz(__rbit64(v10)) + (v6 << 6))
  {
    v12 = *(_QWORD *)(v1 + 48) + 32 * i;
    v14 = *(_QWORD *)v12;
    v13 = *(_QWORD *)(v12 + 8);
    v54 = *(_QWORD *)(v12 + 16);
    v15 = *(_BYTE *)(v12 + 24);
    swift_bridgeObjectRetain_n();
    if ((v15 & 1) == 0)
    {
      v16 = sub_1A594B718();
      v18 = v17;
      v20 = v19;
      v21 = v1;
      v23 = v22;
      swift_bridgeObjectRelease();
      MEMORY[0x1A85AD950](v16, v18, v20, v23);
      v1 = v21;
      swift_bridgeObjectRelease();
    }
    v24 = sub_1A594B4B4();
    v26 = v25;
    swift_bridgeObjectRelease();
    if (v24 == 0x4C4547415353454DLL && v26 == 0xEC00000054494D49)
    {
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_34;
    }
    v28 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v28 & 1) != 0)
    {
      swift_release();
LABEL_34:
      swift_bridgeObjectRelease();
      Capability.value.getter(v14, v13, v54, v15);
      v30 = v29;
      v32 = v31;
      result = swift_bridgeObjectRelease();
      if (!v32)
        return 0;
      v33 = HIBYTE(v32) & 0xF;
      v34 = v30 & 0xFFFFFFFFFFFFLL;
      if ((v32 & 0x2000000000000000) != 0)
        v35 = HIBYTE(v32) & 0xF;
      else
        v35 = v30 & 0xFFFFFFFFFFFFLL;
      if (!v35)
      {
LABEL_52:
        swift_bridgeObjectRelease();
        return 0;
      }
      if ((v32 & 0x1000000000000000) != 0)
      {
        v37 = (uint64_t)sub_1A55408A8(v30, v32, 10);
        LOBYTE(v30) = v51;
        goto LABEL_80;
      }
      if ((v32 & 0x2000000000000000) == 0)
      {
        if ((v30 & 0x1000000000000000) != 0)
          v36 = (unsigned __int8 *)((v32 & 0xFFFFFFFFFFFFFFFLL) + 32);
        else
          v36 = (unsigned __int8 *)sub_1A594C7D4();
        v37 = (uint64_t)sub_1A554098C(v36, v34, 10);
        LOBYTE(v30) = v38 & 1;
LABEL_80:
        swift_bridgeObjectRelease();
        if ((v30 & 1) == 0 && v37 >= 1 && v37 < 1000000)
          return v37;
        return 0;
      }
      v55[0] = v30;
      v55[1] = v32 & 0xFFFFFFFFFFFFFFLL;
      if (v30 == 43)
      {
        if (!v33)
          goto LABEL_97;
        if (v33 == 1 || (BYTE1(v30) - 48) > 9u)
          goto LABEL_67;
        v37 = (BYTE1(v30) - 48);
        if (v33 != 2)
        {
          if ((BYTE2(v30) - 48) > 9u)
            goto LABEL_67;
          v37 = 10 * (BYTE1(v30) - 48) + (BYTE2(v30) - 48);
          v39 = v33 - 3;
          if (v39)
          {
            v40 = (unsigned __int8 *)v55 + 3;
            while (1)
            {
              v41 = *v40 - 48;
              if (v41 > 9)
                goto LABEL_67;
              v42 = 10 * v37;
              if ((unsigned __int128)(v37 * (__int128)10) >> 64 != (10 * v37) >> 63)
                goto LABEL_67;
              v37 = v42 + v41;
              if (__OFADD__(v42, v41))
                goto LABEL_67;
              LOBYTE(v30) = 0;
              ++v40;
              if (!--v39)
                goto LABEL_80;
            }
          }
        }
      }
      else
      {
        if (v30 == 45)
        {
          if (!v33)
            goto LABEL_96;
          if (v33 != 1 && (BYTE1(v30) - 48) <= 9u)
          {
            if (v33 == 2)
            {
              LOBYTE(v30) = 0;
              v37 = -(uint64_t)(BYTE1(v30) - 48);
              goto LABEL_80;
            }
            if ((BYTE2(v30) - 48) <= 9u)
            {
              v37 = -10 * (BYTE1(v30) - 48) - (BYTE2(v30) - 48);
              v47 = v33 - 3;
              if (!v47)
                goto LABEL_79;
              v48 = (unsigned __int8 *)v55 + 3;
              while (1)
              {
                v49 = *v48 - 48;
                if (v49 > 9)
                  break;
                v50 = 10 * v37;
                if ((unsigned __int128)(v37 * (__int128)10) >> 64 != (10 * v37) >> 63)
                  break;
                v37 = v50 - v49;
                if (__OFSUB__(v50, v49))
                  break;
                LOBYTE(v30) = 0;
                ++v48;
                if (!--v47)
                  goto LABEL_80;
              }
            }
          }
LABEL_67:
          v37 = 0;
          LOBYTE(v30) = 1;
          goto LABEL_80;
        }
        if (!v33 || (v30 - 48) > 9u)
          goto LABEL_67;
        v37 = (v30 - 48);
        if (v33 != 1)
        {
          if ((BYTE1(v30) - 48) > 9u)
            goto LABEL_67;
          v37 = 10 * (v30 - 48) + (BYTE1(v30) - 48);
          v43 = v33 - 2;
          if (v43)
          {
            v44 = (unsigned __int8 *)v55 + 2;
            while (1)
            {
              v45 = *v44 - 48;
              if (v45 > 9)
                goto LABEL_67;
              v46 = 10 * v37;
              if ((unsigned __int128)(v37 * (__int128)10) >> 64 != (10 * v37) >> 63)
                goto LABEL_67;
              v37 = v46 + v45;
              if (__OFADD__(v46, v45))
                goto LABEL_67;
              LOBYTE(v30) = 0;
              ++v44;
              if (!--v43)
                goto LABEL_80;
            }
          }
        }
      }
LABEL_79:
      LOBYTE(v30) = 0;
      goto LABEL_80;
    }
    result = swift_bridgeObjectRelease();
    if (v4)
      goto LABEL_4;
LABEL_5:
    v9 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_52;
    }
    if (v9 >= v53)
      goto LABEL_51;
    v10 = *(_QWORD *)(v52 + 8 * v9);
    ++v6;
    if (!v10)
    {
      v6 = v9 + 1;
      if (v9 + 1 >= v53)
        goto LABEL_51;
      v10 = *(_QWORD *)(v52 + 8 * v6);
      if (!v10)
      {
        v6 = v9 + 2;
        if (v9 + 2 >= v53)
          goto LABEL_51;
        v10 = *(_QWORD *)(v52 + 8 * v6);
        if (!v10)
        {
          v6 = v9 + 3;
          if (v9 + 3 >= v53)
            goto LABEL_51;
          v10 = *(_QWORD *)(v52 + 8 * v6);
          if (!v10)
          {
            v6 = v9 + 4;
            if (v9 + 4 >= v53)
              goto LABEL_51;
            v10 = *(_QWORD *)(v52 + 8 * v6);
            if (!v10)
              break;
          }
        }
      }
    }
LABEL_22:
    v4 = (v10 - 1) & v10;
  }
  v11 = v9 + 5;
  if (v11 >= v53)
  {
LABEL_51:
    swift_release();
    goto LABEL_52;
  }
  v10 = *(_QWORD *)(v52 + 8 * v11);
  if (v10)
  {
    v6 = v11;
    goto LABEL_22;
  }
  while (1)
  {
    v6 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v6 >= v53)
      goto LABEL_51;
    v10 = *(_QWORD *)(v52 + 8 * v6);
    ++v11;
    if (v10)
      goto LABEL_22;
  }
  __break(1u);
LABEL_96:
  __break(1u);
LABEL_97:
  __break(1u);
  return result;
}

uint64_t sub_1A55422C0(uint64_t a1, _QWORD *a2)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  char v54;
  char v55;
  char v56;

  v4 = Capability.move.unsafeMutableAddressor();
  v5 = *v4;
  v6 = v4[1];
  v7 = v4[2];
  v8 = *((_BYTE *)v4 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v9 = sub_1A54EA9BC(v5, v6, v7, v8, a1);
  swift_bridgeObjectRelease();
  v10 = Capability.gmailExtensions.unsafeMutableAddressor();
  v11 = *v10;
  v12 = v10[1];
  v13 = v10[2];
  v14 = *((_BYTE *)v10 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  LOBYTE(v11) = sub_1A54EA9BC(v11, v12, v13, v14, a1);
  swift_bridgeObjectRelease();
  v15 = Capability.condStore.unsafeMutableAddressor();
  v16 = *v15;
  v17 = v15[1];
  v18 = v15[2];
  v19 = *((_BYTE *)v15 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  LOBYTE(v16) = sub_1A54EA9BC(v16, v17, v18, v19, a1);
  swift_bridgeObjectRelease();
  v20 = a2[9];
  v55 = v16;
  v56 = v11;
  if (v20 && (a2[8] == 0x4920216F6F686159 && v20 == 0xEB000000002E636ELL || (sub_1A594CD38() & 1) != 0))
    v53 = 0x1000000;
  else
    v53 = 0;
  v54 = ~v9;
  v21 = Capability.partial.unsafeMutableAddressor();
  v22 = *v21;
  v23 = v21[1];
  v24 = v21[2];
  v25 = *((_BYTE *)v21 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v26 = sub_1A54EA9BC(v22, v23, v24, v25, a1);
  swift_bridgeObjectRelease();
  v27 = Capability.extendedSearch.unsafeMutableAddressor();
  v28 = *v27;
  v29 = v27[1];
  v30 = v27[2];
  v31 = *((_BYTE *)v27 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v32 = sub_1A54EA9BC(v28, v29, v30, v31, a1);
  swift_bridgeObjectRelease();
  v33 = Capability.namespace.unsafeMutableAddressor();
  v34 = *v33;
  v35 = v33[1];
  v36 = v33[2];
  v37 = *((_BYTE *)v33 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v38 = sub_1A54EA9BC(v34, v35, v36, v37, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  v39 = sub_1A5541AD0(a1);
  v40 = Capability.specialUse.unsafeMutableAddressor();
  v41 = *v40;
  v42 = v40[1];
  v43 = v40[2];
  v44 = *((_BYTE *)v40 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54EA9BC(v41, v42, v43, v44, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A5541BEC(a2);
  sub_1A5541CD8(a1);
  v45 = 256;
  if ((v56 & 1) != 0)
    v45 = 0;
  v46 = v45 & 0xFFFFFFFFFFFFFFFELL | v54 & 1;
  v47 = 0x10000;
  if ((v55 & 1) != 0)
    v47 = 0;
  v48 = v46 | v47 | v53;
  v49 = 0x100000000;
  if ((v26 & 1) != 0)
    v49 = 0;
  v50 = 0x10000000000;
  if ((v32 & 1) != 0)
    v50 = 0;
  v51 = 0x1000000000000;
  if ((v38 & 1) != 0)
    v51 = 0;
  return v48 | v49 | v50 | v51 | (v39 << 56);
}

uint64_t sub_1A55425D8(uint64_t a1)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t sub_1A55426A4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *_s6RemoteV6ServerV16NamespaceSupportOMa()
{
  return &_s6RemoteV6ServerV16NamespaceSupportON;
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t _s6RemoteV6ServerV11ListSupportVwet(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 65281 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65281 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65281;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65281;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65281;
  }
LABEL_17:
  v6 = *((unsigned __int8 *)a1 + 1);
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s6RemoteV6ServerV11ListSupportVwst(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A5542874 + 4 * byte_1A59A4ED1[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_1A55428A8 + 4 * byte_1A59A4ECC[v4]))();
}

uint64_t sub_1A55428A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1A55428B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1A55428B8);
  return result;
}

uint64_t sub_1A55428C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1A55428CCLL);
  *(_BYTE *)(result + 1) = a2 + 1;
  return result;
}

uint64_t sub_1A55428D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1A55428D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *_s6RemoteV6ServerV11ListSupportVMa()
{
  return &_s6RemoteV6ServerV11ListSupportVN;
}

uint64_t getEnumTagSinglePayload for Environment.Power(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s6RemoteV6ServerV17ListStatusSupportOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A55429D0 + 4 * byte_1A59A4EDB[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A5542A04 + 4 * byte_1A59A4ED6[v4]))();
}

uint64_t sub_1A5542A04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5542A0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5542A14);
  return result;
}

uint64_t sub_1A5542A20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5542A28);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A5542A2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5542A34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s6RemoteV6ServerV17ListStatusSupportOMa()
{
  return &_s6RemoteV6ServerV17ListStatusSupportON;
}

uint64_t _s6RemoteVwxx(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 56);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s6RemoteVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  v6 = a2 + 56;
  v5 = *(_QWORD *)(a2 + 56);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v5)
  {
    v7 = *(_QWORD *)(a2 + 64);
    v8 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 56) = v5;
    *(_QWORD *)(a1 + 64) = v7;
    *(_QWORD *)(a1 + 72) = v8;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    *(_OWORD *)(a1 + 56) = *(_OWORD *)v6;
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(v6 + 16);
  }
  return a1;
}

uint64_t _s6RemoteVwca(uint64_t a1, __int128 *a2)
{
  __int128 v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  __int128 v11;

  v4 = *a2;
  *(_OWORD *)(a1 + 9) = *(__int128 *)((char *)a2 + 9);
  *(_OWORD *)a1 = v4;
  *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v5 = *((_QWORD *)a2 + 5);
  v6 = (_OWORD *)(a1 + 56);
  v7 = *(_QWORD *)(a1 + 56);
  *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 49) = *((_BYTE *)a2 + 49);
  v9 = (__int128 *)((char *)a2 + 56);
  v8 = *((_QWORD *)a2 + 7);
  if (v7)
  {
    if (v8)
    {
      *(_QWORD *)(a1 + 56) = v8;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 64) = *((_QWORD *)a2 + 8);
      *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1A5542C34(a1 + 56);
      v10 = *((_QWORD *)a2 + 9);
      *v6 = *v9;
      *(_QWORD *)(a1 + 72) = v10;
    }
  }
  else if (v8)
  {
    *(_QWORD *)(a1 + 56) = v8;
    *(_QWORD *)(a1 + 64) = *((_QWORD *)a2 + 8);
    *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    v11 = *v9;
    *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
    *v6 = v11;
  }
  return a1;
}

uint64_t sub_1A5542C34(uint64_t a1)
{
  destroy for Namespace();
  return a1;
}

uint64_t _s6RemoteVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 56);
  v5 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  if (!v5)
    goto LABEL_5;
  if (!v4)
  {
    sub_1A5542C34(a1 + 56);
LABEL_5:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    return a1;
  }
  *(_QWORD *)(a1 + 56) = v4;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s6RemoteVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 80))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 32);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s6RemoteVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 0;
    if (a2)
      *(_QWORD *)(result + 32) = a2;
  }
  return result;
}

ValueMetadata *_s6RemoteVMa()
{
  return &_s6RemoteVN;
}

uint64_t _s6RemoteV6ServerVwet(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[25])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = v3 - 2;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s6RemoteV6ServerVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *_s6RemoteV6ServerVMa()
{
  return &_s6RemoteV6ServerVN;
}

ValueMetadata *_s6RemoteV6ServerV11MoveSupportOMa()
{
  return &_s6RemoteV6ServerV11MoveSupportON;
}

unint64_t sub_1A5542E9C()
{
  unint64_t result;

  result = qword_1EE7A87D0;
  if (!qword_1EE7A87D0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A4FBC, &_s6RemoteV6ServerV11MoveSupportON);
    atomic_store(result, (unint64_t *)&qword_1EE7A87D0);
  }
  return result;
}

unint64_t sub_1A5542EE4()
{
  unint64_t result;

  result = qword_1EE7A87D8;
  if (!qword_1EE7A87D8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A5074, &_s6RemoteV6ServerV17ListStatusSupportON);
    atomic_store(result, (unint64_t *)&qword_1EE7A87D8);
  }
  return result;
}

unint64_t sub_1A5542F2C()
{
  unint64_t result;

  result = qword_1EE7A87E0;
  if (!qword_1EE7A87E0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A5104, &_s6RemoteV6ServerV16NamespaceSupportON);
    atomic_store(result, (unint64_t *)&qword_1EE7A87E0);
  }
  return result;
}

ValueMetadata *_s6RemoteV6ServerV17SpecialUseSupportOMa()
{
  return &_s6RemoteV6ServerV17SpecialUseSupportON;
}

ValueMetadata *_s6RemoteV6ServerV12MessageLimitVMa()
{
  return &_s6RemoteV6ServerV12MessageLimitVN;
}

ValueMetadata *_s6RemoteV6ServerV20ConnectionCountLimitOMa()
{
  return &_s6RemoteV6ServerV20ConnectionCountLimitON;
}

uint64_t _s6RemoteV6ServerV13SearchSupportVwet(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 65281 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65281 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65281;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65281;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65281;
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s6RemoteV6ServerV13SearchSupportVwst(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A5543080 + 4 * byte_1A59A4EE5[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_1A55430B4 + 4 * byte_1A59A4EE0[v4]))();
}

uint64_t sub_1A55430B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1A55430BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1A55430C4);
  return result;
}

uint64_t sub_1A55430D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1A55430D8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A55430DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1A55430E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *_s6RemoteV6ServerV13SearchSupportVMa()
{
  return &_s6RemoteV6ServerV13SearchSupportVN;
}

ValueMetadata *_s6RemoteV6ServerV23SequenceNumbersBehaviorOMa()
{
  return &_s6RemoteV6ServerV23SequenceNumbersBehaviorON;
}

ValueMetadata *_s6RemoteV6ServerV16CondStoreSupportOMa()
{
  return &_s6RemoteV6ServerV16CondStoreSupportON;
}

ValueMetadata *_s6RemoteV6ServerV17GmailLabelSupportOMa()
{
  return &_s6RemoteV6ServerV17GmailLabelSupportON;
}

unint64_t sub_1A5543134()
{
  unint64_t result;

  result = qword_1EE7A87E8;
  if (!qword_1EE7A87E8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A5214, &_s6RemoteV6ServerV17GmailLabelSupportON);
    atomic_store(result, (unint64_t *)&qword_1EE7A87E8);
  }
  return result;
}

unint64_t sub_1A554317C()
{
  unint64_t result;

  result = qword_1EE7A87F0;
  if (!qword_1EE7A87F0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A527C, &_s6RemoteV6ServerV16CondStoreSupportON);
    atomic_store(result, (unint64_t *)&qword_1EE7A87F0);
  }
  return result;
}

unint64_t sub_1A55431C4()
{
  unint64_t result;

  result = qword_1EE7A87F8;
  if (!qword_1EE7A87F8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A52E4, &_s6RemoteV6ServerV23SequenceNumbersBehaviorON);
    atomic_store(result, (unint64_t *)&qword_1EE7A87F8);
  }
  return result;
}

unint64_t sub_1A554320C()
{
  unint64_t result;

  result = qword_1EE7A8800;
  if (!qword_1EE7A8800)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A5374, &_s6RemoteV6ServerV20ConnectionCountLimitON);
    atomic_store(result, (unint64_t *)&qword_1EE7A8800);
  }
  return result;
}

unint64_t sub_1A5543254()
{
  unint64_t result;

  result = qword_1EE7A8808;
  if (!qword_1EE7A8808)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A5404, &_s6RemoteV6ServerV17SpecialUseSupportON);
    atomic_store(result, (unint64_t *)&qword_1EE7A8808);
  }
  return result;
}

ValueMetadata *_s6RemoteV6ServerV13SearchSupportV21ExtendedSearchSupportOMa()
{
  return &_s6RemoteV6ServerV13SearchSupportV21ExtendedSearchSupportON;
}

uint64_t _s6RemoteV6ServerV11MoveSupportOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A55432F4 + 4 * byte_1A59A4EEF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A5543328 + 4 * byte_1A59A4EEA[v4]))();
}

uint64_t sub_1A5543328(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5543330(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5543338);
  return result;
}

uint64_t sub_1A5543344(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A554334CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A5543350(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5543358(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s6RemoteV6ServerV13SearchSupportV18PagesSearchSupportOMa()
{
  return &_s6RemoteV6ServerV13SearchSupportV18PagesSearchSupportON;
}

unint64_t sub_1A5543378()
{
  unint64_t result;

  result = qword_1EE7A8810;
  if (!qword_1EE7A8810)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A54A4, &_s6RemoteV6ServerV13SearchSupportV18PagesSearchSupportON);
    atomic_store(result, (unint64_t *)&qword_1EE7A8810);
  }
  return result;
}

unint64_t sub_1A55433C0()
{
  unint64_t result;

  result = qword_1EE7A8818;
  if (!qword_1EE7A8818)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A550C, &_s6RemoteV6ServerV13SearchSupportV21ExtendedSearchSupportON);
    atomic_store(result, (unint64_t *)&qword_1EE7A8818);
  }
  return result;
}

uint64_t sub_1A5543418(uint64_t *a1, uint64_t *a2)
{
  return sub_1A5544584(*a1, *a2);
}

uint64_t sub_1A5543428()
{
  uint64_t v0;

  sub_1A5502F80(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t _s13SelectedStateV8_StorageCMa()
{
  return objc_opt_self();
}

uint64_t _s13SelectedStateV7WrappedVwxx(uint64_t a1)
{
  unsigned int *v2;
  unint64_t v3;
  uint64_t v4;

  v2 = (unsigned int *)(a1 + 344);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 168);
  sub_1A552A19C(*(_QWORD *)(a1 + 208), *(_BYTE *)(a1 + 216));
  sub_1A54E3458(*(_QWORD *)(a1 + 224), *(unsigned int *)(a1 + 232), *(_BYTE *)(a1 + 236));
  swift_bridgeObjectRelease();
  sub_1A54E3458(*(_QWORD *)(a1 + 256), *(unsigned int *)(a1 + 264), *(_BYTE *)(a1 + 268));
  swift_bridgeObjectRelease();
  sub_1A54E3458(*(_QWORD *)(a1 + 280), *(unsigned int *)(a1 + 288), *(_BYTE *)(a1 + 292));
  sub_1A54E3458(*(_QWORD *)(a1 + 296), *(unsigned int *)(a1 + 304), *(_BYTE *)(a1 + 308));
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 328))
  {
    swift_bridgeObjectRelease();
    if (*((unsigned __int8 *)v2 + 4) != 255)
    {
      v3 = *v2 | ((unint64_t)*((unsigned __int8 *)v2 + 4) << 32);
      sub_1A54E3458(*(_QWORD *)(a1 + 336), v3, SBYTE4(v3));
    }
  }
  v4 = *(_QWORD *)(a1 + 360);
  if ((~v4 & 0xFF00000000) != 0)
    sub_1A54E3458(*(_QWORD *)(a1 + 352), v4, SBYTE4(v4));
  return sub_1A5529F7C(*(_QWORD *)(a1 + 384), *(_QWORD *)(a1 + 392), *(_QWORD *)(a1 + 400), *(_QWORD *)(a1 + 408), *(_QWORD *)(a1 + 416), *(_QWORD *)(a1 + 424), *(_QWORD *)(a1 + 432), v2[24] | ((unint64_t)*((unsigned __int8 *)v2 + 100) << 32), (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
}

uint64_t _s13SelectedStateV7WrappedVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  unsigned int *v23;
  unsigned __int8 v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int *v38;
  uint64_t v39;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  unsigned int *v44;
  uint64_t v45;

  v44 = (unsigned int *)(a2 + 344);
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v4;
  v5 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v5;
  v6 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v6;
  v7 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v7;
  v8 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v8;
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_DWORD *)(a1 + 129) = *(_DWORD *)(a2 + 129);
  v9 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v9;
  v10 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v10;
  v43 = a2 + 168;
  v11 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 192) = v11;
  v41 = v11;
  v42 = **(void (***)(uint64_t, uint64_t, uint64_t))(v11 - 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v42(a1 + 168, v43, v41);
  v12 = *(_QWORD *)(a2 + 208);
  v13 = *(_BYTE *)(a2 + 216);
  sub_1A550FD88(v12, v13);
  *(_QWORD *)(a1 + 208) = v12;
  *(_BYTE *)(a1 + 216) = v13;
  v14 = *(_QWORD *)(a2 + 224);
  v15 = *(_DWORD *)(a2 + 232);
  LOBYTE(v6) = *(_BYTE *)(a2 + 236);
  sub_1A54E4334(v14, v15, v6);
  *(_QWORD *)(a1 + 224) = v14;
  *(_DWORD *)(a1 + 232) = v15;
  *(_BYTE *)(a1 + 236) = v6;
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  *(_WORD *)(a1 + 241) = *(_WORD *)(a2 + 241);
  v16 = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  v17 = *(unsigned int *)(a2 + 264);
  LOBYTE(v6) = *(_BYTE *)(a2 + 268);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54E4334(v16, v17, v6);
  *(_QWORD *)(a1 + 256) = v16;
  *(_DWORD *)(a1 + 264) = v17;
  *(_BYTE *)(a1 + 268) = v6;
  v18 = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  v19 = *(unsigned int *)(a2 + 288);
  LOBYTE(v6) = *(_BYTE *)(a2 + 292);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54E4334(v18, v19, v6);
  *(_QWORD *)(a1 + 280) = v18;
  *(_DWORD *)(a1 + 288) = v19;
  *(_BYTE *)(a1 + 292) = v6;
  v20 = *(_QWORD *)(a2 + 296);
  LODWORD(v19) = *(_DWORD *)(a2 + 304);
  LOBYTE(v6) = *(_BYTE *)(a2 + 308);
  sub_1A54E4334(v20, v19, v6);
  *(_QWORD *)(a1 + 296) = v20;
  *(_DWORD *)(a1 + 304) = v19;
  *(_BYTE *)(a1 + 308) = v6;
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  v21 = *(_QWORD *)(a2 + 328);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v21)
  {
    *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
    *(_QWORD *)(a1 + 328) = v21;
    v22 = (uint64_t *)(a2 + 336);
    v23 = v44;
    v24 = *((_BYTE *)v44 + 4);
    v25 = *v44;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v24 == 255)
    {
      *(_QWORD *)(a1 + 336) = *v22;
      *(_QWORD *)(a1 + 341) = *(_QWORD *)(a2 + 341);
    }
    else
    {
      v26 = v25 & 0xFFFFFF00FFFFFFFFLL | ((unint64_t)v24 << 32);
      v27 = *v22;
      sub_1A54E4334(v27, v26, SBYTE4(v26));
      *(_QWORD *)(a1 + 336) = v27;
      *(_DWORD *)(a1 + 344) = v26;
      *(_BYTE *)(a1 + 348) = BYTE4(v26);
    }
  }
  else
  {
    *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
    *(_OWORD *)(a1 + 333) = *(_OWORD *)(a2 + 333);
    v23 = v44;
  }
  v28 = *(_QWORD *)(a2 + 360);
  if ((~v28 & 0xFF00000000) != 0)
  {
    v30 = *(_QWORD *)(a2 + 352);
    sub_1A54E4334(v30, *(_QWORD *)(a2 + 360), SBYTE4(v28));
    *(_QWORD *)(a1 + 352) = v30;
    *(_DWORD *)(a1 + 360) = v28;
    *(_BYTE *)(a1 + 364) = BYTE4(v28);
    *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  }
  else
  {
    v29 = *(_OWORD *)(a2 + 368);
    *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
    *(_OWORD *)(a1 + 368) = v29;
  }
  v31 = *(_QWORD *)(a2 + 384);
  v32 = *(_QWORD *)(a2 + 392);
  v33 = *(_QWORD *)(a2 + 400);
  v34 = *(_QWORD *)(a2 + 408);
  v35 = *(_QWORD *)(a2 + 416);
  v36 = *(_QWORD *)(a2 + 424);
  v37 = *(_QWORD *)(a2 + 432);
  v38 = v23;
  v39 = *((unsigned __int8 *)v23 + 100);
  v45 = v38[24];
  sub_1A5529F7C(v31, v32, v33, v34, v35, v36, v37, v45 | (v39 << 32), (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E4334);
  *(_QWORD *)(a1 + 384) = v31;
  *(_QWORD *)(a1 + 392) = v32;
  *(_QWORD *)(a1 + 400) = v33;
  *(_QWORD *)(a1 + 408) = v34;
  *(_QWORD *)(a1 + 416) = v35;
  *(_QWORD *)(a1 + 424) = v36;
  *(_QWORD *)(a1 + 432) = v37;
  *(_BYTE *)(a1 + 444) = v39;
  *(_DWORD *)(a1 + 440) = v45;
  *(_DWORD *)(a1 + 448) = *(_DWORD *)(a2 + 448);
  *(_BYTE *)(a1 + 452) = *(_BYTE *)(a2 + 452);
  return a1;
}

uint64_t _s13SelectedStateV7WrappedVwca(uint64_t a1, uint64_t a2)
{
  unsigned int *v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  unsigned int v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  unsigned int v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  unsigned int v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  _OWORD *v37;
  _OWORD *v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t *v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t *v45;
  unsigned __int8 v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  __int128 v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  _OWORD *v59;
  _OWORD *v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  int v86;
  uint64_t v88;
  uint64_t v89;

  v4 = (unsigned int *)(a2 + 344);
  v5 = a1 + 344;
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_DWORD *)(a1 + 16) = v6;
  v7 = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  *(_DWORD *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  *(_BYTE *)(a1 + 130) = *(_BYTE *)(a2 + 130);
  *(_BYTE *)(a1 + 131) = *(_BYTE *)(a2 + 131);
  *(_BYTE *)(a1 + 132) = *(_BYTE *)(a2 + 132);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 168), (uint64_t *)(a2 + 168));
  v9 = *(_QWORD *)(a2 + 208);
  v10 = *(_BYTE *)(a2 + 216);
  sub_1A550FD88(v9, v10);
  v11 = *(_QWORD *)(a1 + 208);
  v12 = *(_BYTE *)(a1 + 216);
  *(_QWORD *)(a1 + 208) = v9;
  *(_BYTE *)(a1 + 216) = v10;
  sub_1A552A19C(v11, v12);
  v13 = *(_QWORD *)(a2 + 224);
  v14 = *(_DWORD *)(a2 + 232);
  v15 = *(_BYTE *)(a2 + 236);
  sub_1A54E4334(v13, v14, v15);
  v16 = *(_QWORD *)(a1 + 224);
  v17 = *(unsigned int *)(a1 + 232);
  *(_QWORD *)(a1 + 224) = v13;
  *(_DWORD *)(a1 + 232) = v14;
  v18 = *(_BYTE *)(a1 + 236);
  *(_BYTE *)(a1 + 236) = v15;
  sub_1A54E3458(v16, v17, v18);
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  *(_BYTE *)(a1 + 241) = *(_BYTE *)(a2 + 241);
  *(_BYTE *)(a1 + 242) = *(_BYTE *)(a2 + 242);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(a2 + 256);
  v20 = *(_DWORD *)(a2 + 264);
  v21 = *(_BYTE *)(a2 + 268);
  sub_1A54E4334(v19, v20, v21);
  v22 = *(_QWORD *)(a1 + 256);
  v23 = *(unsigned int *)(a1 + 264);
  *(_QWORD *)(a1 + 256) = v19;
  *(_DWORD *)(a1 + 264) = v20;
  v24 = *(_BYTE *)(a1 + 268);
  *(_BYTE *)(a1 + 268) = v21;
  sub_1A54E3458(v22, v23, v24);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v25 = *(_QWORD *)(a2 + 280);
  v26 = *(_DWORD *)(a2 + 288);
  v27 = *(_BYTE *)(a2 + 292);
  sub_1A54E4334(v25, v26, v27);
  v28 = *(_QWORD *)(a1 + 280);
  v29 = *(unsigned int *)(a1 + 288);
  *(_QWORD *)(a1 + 280) = v25;
  *(_DWORD *)(a1 + 288) = v26;
  v30 = *(_BYTE *)(a1 + 292);
  *(_BYTE *)(a1 + 292) = v27;
  sub_1A54E3458(v28, v29, v30);
  v31 = *(_QWORD *)(a2 + 296);
  v32 = *(_DWORD *)(a2 + 304);
  v33 = *(_BYTE *)(a2 + 308);
  sub_1A54E4334(v31, v32, v33);
  v34 = *(_QWORD *)(a1 + 296);
  v35 = *(unsigned int *)(a1 + 304);
  *(_QWORD *)(a1 + 296) = v31;
  *(_DWORD *)(a1 + 304) = v32;
  v36 = *(_BYTE *)(a1 + 308);
  *(_BYTE *)(a1 + 308) = v33;
  sub_1A54E3458(v34, v35, v36);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v37 = (_OWORD *)(a1 + 320);
  v38 = (_OWORD *)(a2 + 320);
  v39 = *(_QWORD *)(a2 + 328);
  if (*(_QWORD *)(a1 + 328))
  {
    if (v39)
    {
      *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
      *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      v40 = (uint64_t *)(a1 + 336);
      v41 = (uint64_t *)(a2 + 336);
      v42 = *v4 | ((unint64_t)*((unsigned __int8 *)v4 + 4) << 32);
      v43 = *((_BYTE *)v4 + 4);
      if (*(unsigned __int8 *)(v5 + 4) == 255)
      {
        if (BYTE4(v42) == 255)
        {
          v44 = *v41;
          *(_QWORD *)(a1 + 341) = *(_QWORD *)(a2 + 341);
          *v40 = v44;
        }
        else
        {
          v54 = *v41;
          sub_1A54E4334(*v41, *v4 | ((unint64_t)*((unsigned __int8 *)v4 + 4) << 32), SBYTE4(v42));
          *(_QWORD *)(a1 + 336) = v54;
          *(_DWORD *)(a1 + 344) = v42;
          *(_BYTE *)(a1 + 348) = v43;
        }
      }
      else if (BYTE4(v42) == 255)
      {
        sub_1A552AB80(a1 + 336);
        v50 = *(_QWORD *)(a2 + 341);
        *v40 = *v41;
        *(_QWORD *)(a1 + 341) = v50;
      }
      else
      {
        v55 = *v41;
        sub_1A54E4334(*v41, *v4 | ((unint64_t)*((unsigned __int8 *)v4 + 4) << 32), SBYTE4(v42));
        v56 = *(_QWORD *)(a1 + 336);
        v57 = *(unsigned int *)(a1 + 344);
        *(_QWORD *)(a1 + 336) = v55;
        *(_DWORD *)(a1 + 344) = v42;
        v58 = *(_BYTE *)(a1 + 348);
        *(_BYTE *)(a1 + 348) = v43;
        sub_1A54E3458(v56, v57, v58);
      }
    }
    else
    {
      sub_1A552ABC0(a1 + 320);
      v49 = *(_OWORD *)(a2 + 333);
      *v37 = *v38;
      *(_OWORD *)(a1 + 333) = v49;
    }
  }
  else if (v39)
  {
    *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
    *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
    v45 = (uint64_t *)(a2 + 336);
    v46 = *((_BYTE *)v4 + 4);
    v47 = *v4;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v46 == 255)
    {
      v48 = *v45;
      *(_QWORD *)(a1 + 341) = *(_QWORD *)(a2 + 341);
      *(_QWORD *)(a1 + 336) = v48;
    }
    else
    {
      v52 = v47 & 0xFFFFFF00FFFFFFFFLL | ((unint64_t)v46 << 32);
      v53 = *v45;
      sub_1A54E4334(v53, v52, SBYTE4(v52));
      *(_QWORD *)(a1 + 336) = v53;
      *(_DWORD *)(a1 + 344) = v52;
      *(_BYTE *)(a1 + 348) = BYTE4(v52);
    }
  }
  else
  {
    v51 = *v38;
    *(_OWORD *)(a1 + 333) = *(_OWORD *)(a2 + 333);
    *v37 = v51;
  }
  v59 = (_OWORD *)(a1 + 352);
  v60 = (_OWORD *)(a2 + 352);
  v61 = *(_QWORD *)(a2 + 360);
  v62 = v61 & 0xFF00000000;
  v89 = v5;
  if ((~*(_QWORD *)(a1 + 360) & 0xFF00000000) != 0)
  {
    if (v62 == 0xFF00000000)
    {
      sub_1A552ABF4(a1 + 352);
      v64 = *(_OWORD *)(a2 + 368);
      *v59 = *v60;
      *(_OWORD *)(a1 + 368) = v64;
      goto LABEL_24;
    }
    v66 = *(_QWORD *)(a2 + 352);
    sub_1A54E4334(v66, v61, SBYTE4(v61));
    v67 = *(_QWORD *)(a1 + 352);
    v68 = *(unsigned int *)(a1 + 360);
    *(_QWORD *)(a1 + 352) = v66;
    *(_DWORD *)(a1 + 360) = v61;
    v69 = *(_BYTE *)(a1 + 364);
    *(_BYTE *)(a1 + 364) = BYTE4(v61);
    sub_1A54E3458(v67, v68, v69);
LABEL_23:
    *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
    *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
    goto LABEL_24;
  }
  if (v62 != 0xFF00000000)
  {
    v65 = *(_QWORD *)(a2 + 352);
    sub_1A54E4334(v65, v61, SBYTE4(v61));
    *(_QWORD *)(a1 + 352) = v65;
    *(_DWORD *)(a1 + 360) = v61;
    *(_BYTE *)(a1 + 364) = BYTE4(v61);
    goto LABEL_23;
  }
  v63 = *(_OWORD *)(a2 + 368);
  *v59 = *v60;
  *(_OWORD *)(a1 + 368) = v63;
LABEL_24:
  v70 = *(_QWORD *)(a2 + 384);
  v71 = *(_QWORD *)(a2 + 392);
  v72 = *(_QWORD *)(a2 + 400);
  v73 = *(_QWORD *)(a2 + 408);
  v74 = *(_QWORD *)(a2 + 416);
  v75 = *(_QWORD *)(a2 + 424);
  v76 = *(_QWORD *)(a2 + 432);
  v88 = *((unsigned __int8 *)v4 + 100);
  v77 = v4[24];
  sub_1A5529F7C(v70, v71, v72, v73, v74, v75, v76, v77 | (v88 << 32), (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E4334);
  v78 = *(_QWORD *)(a1 + 384);
  v79 = *(_QWORD *)(a1 + 392);
  v80 = *(_QWORD *)(a1 + 400);
  v81 = *(_QWORD *)(a1 + 408);
  v82 = *(_QWORD *)(a1 + 416);
  v83 = *(_QWORD *)(a1 + 424);
  v84 = *(_QWORD *)(a1 + 432);
  v85 = *(unsigned int *)(v89 + 96) | ((unint64_t)*(unsigned __int8 *)(v89 + 100) << 32);
  *(_QWORD *)(a1 + 384) = v70;
  *(_QWORD *)(a1 + 392) = v71;
  *(_QWORD *)(a1 + 400) = v72;
  *(_QWORD *)(a1 + 408) = v73;
  *(_QWORD *)(a1 + 416) = v74;
  *(_QWORD *)(a1 + 424) = v75;
  *(_QWORD *)(a1 + 432) = v76;
  *(_DWORD *)(v89 + 96) = v77;
  *(_BYTE *)(v89 + 100) = v88;
  sub_1A5529F7C(v78, v79, v80, v81, v82, v83, v84, v85, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
  v86 = *(_DWORD *)(a2 + 448);
  *(_BYTE *)(a1 + 452) = *(_BYTE *)(a2 + 452);
  *(_DWORD *)(a1 + 448) = v86;
  return a1;
}

void *__swift_memcpy453_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1C5uLL);
}

uint64_t _s13SelectedStateV7WrappedVwta(uint64_t a1, uint64_t a2)
{
  unsigned int *v4;
  unsigned int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  int v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  int v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  int v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  int v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  _QWORD *v33;
  unsigned __int8 v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int *v49;
  unsigned int v50;
  uint64_t v51;
  unint64_t v52;
  __int128 v53;
  uint64_t v55;
  uint64_t v56;

  v4 = (unsigned int *)(a2 + 344);
  *(_DWORD *)a1 = *(_DWORD *)a2;
  v5 = (unsigned int *)(a1 + 344);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  *(_BYTE *)(a1 + 130) = *(_BYTE *)(a2 + 130);
  *(_BYTE *)(a1 + 131) = *(_BYTE *)(a2 + 131);
  *(_BYTE *)(a1 + 132) = *(_BYTE *)(a2 + 132);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 168);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  v8 = *(_QWORD *)(a2 + 208);
  v9 = *(_BYTE *)(a2 + 216);
  v10 = *(_QWORD *)(a1 + 208);
  v11 = *(_BYTE *)(a1 + 216);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v8;
  *(_BYTE *)(a1 + 216) = v9;
  sub_1A552A19C(v10, v11);
  v12 = *(_DWORD *)(a2 + 232);
  v13 = *(_BYTE *)(a2 + 236);
  v14 = *(_QWORD *)(a1 + 224);
  v15 = *(unsigned int *)(a1 + 232);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_DWORD *)(a1 + 232) = v12;
  v16 = *(_BYTE *)(a1 + 236);
  *(_BYTE *)(a1 + 236) = v13;
  sub_1A54E3458(v14, v15, v16);
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  *(_BYTE *)(a1 + 241) = *(_BYTE *)(a2 + 241);
  *(_BYTE *)(a1 + 242) = *(_BYTE *)(a2 + 242);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  swift_bridgeObjectRelease();
  v17 = *(_DWORD *)(a2 + 264);
  v18 = *(_BYTE *)(a2 + 268);
  v19 = *(_QWORD *)(a1 + 256);
  v20 = *(unsigned int *)(a1 + 264);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_DWORD *)(a1 + 264) = v17;
  v21 = *(_BYTE *)(a1 + 268);
  *(_BYTE *)(a1 + 268) = v18;
  sub_1A54E3458(v19, v20, v21);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  swift_bridgeObjectRelease();
  v22 = *(_DWORD *)(a2 + 288);
  v23 = *(_BYTE *)(a2 + 292);
  v24 = *(_QWORD *)(a1 + 280);
  v25 = *(unsigned int *)(a1 + 288);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_DWORD *)(a1 + 288) = v22;
  v26 = *(_BYTE *)(a1 + 292);
  *(_BYTE *)(a1 + 292) = v23;
  sub_1A54E3458(v24, v25, v26);
  v27 = *(_DWORD *)(a2 + 304);
  v28 = *(_BYTE *)(a2 + 308);
  v29 = *(_QWORD *)(a1 + 296);
  v30 = *(unsigned int *)(a1 + 304);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_DWORD *)(a1 + 304) = v27;
  v31 = *(_BYTE *)(a1 + 308);
  *(_BYTE *)(a1 + 308) = v28;
  sub_1A54E3458(v29, v30, v31);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 328))
    goto LABEL_8;
  v32 = *(_QWORD *)(a2 + 328);
  if (!v32)
  {
    sub_1A552ABC0(a1 + 320);
LABEL_8:
    *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
    *(_OWORD *)(a1 + 333) = *(_OWORD *)(a2 + 333);
    goto LABEL_9;
  }
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = v32;
  swift_bridgeObjectRelease();
  v33 = (_QWORD *)(a2 + 336);
  v34 = *((_BYTE *)v5 + 4);
  if (v34 == 255)
  {
LABEL_6:
    *(_QWORD *)(a1 + 336) = *v33;
    *(_QWORD *)(a1 + 341) = *(_QWORD *)(a2 + 341);
    goto LABEL_9;
  }
  v35 = *v4 | ((unint64_t)*((unsigned __int8 *)v4 + 4) << 32);
  if (HIDWORD(v35) > 0xFE)
  {
    sub_1A552AB80(a1 + 336);
    goto LABEL_6;
  }
  v55 = *v5;
  v56 = *(_QWORD *)(a1 + 336);
  *(_QWORD *)(a1 + 336) = *v33;
  *(_DWORD *)(a1 + 344) = v35;
  *(_BYTE *)(a1 + 348) = BYTE4(v35);
  sub_1A54E3458(v56, v55, v34);
LABEL_9:
  v36 = *(_QWORD *)(a1 + 360);
  if ((~v36 & 0xFF00000000) != 0)
  {
    v37 = *(_QWORD *)(a2 + 360);
    if ((~v37 & 0xFF00000000) != 0)
    {
      v39 = *(_QWORD *)(a1 + 352);
      *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
      *(_DWORD *)(a1 + 360) = v37;
      *(_BYTE *)(a1 + 364) = BYTE4(v37);
      sub_1A54E3458(v39, v36, SBYTE4(v36));
      *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
      goto LABEL_14;
    }
    sub_1A552ABF4(a1 + 352);
  }
  v38 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v38;
LABEL_14:
  v40 = *(_QWORD *)(a2 + 432);
  v41 = *((_BYTE *)v4 + 100);
  v42 = v4[24];
  v43 = *(_QWORD *)(a1 + 384);
  v44 = *(_QWORD *)(a1 + 392);
  v45 = *(_QWORD *)(a1 + 400);
  v46 = *(_QWORD *)(a1 + 408);
  v47 = *(_QWORD *)(a1 + 416);
  v48 = *(_QWORD *)(a1 + 424);
  v50 = v5[24];
  v49 = v5 + 24;
  v51 = *(_QWORD *)(a1 + 432);
  v52 = v50 | ((unint64_t)*((unsigned __int8 *)v49 + 4) << 32);
  v53 = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 400) = v53;
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(_QWORD *)(a1 + 432) = v40;
  *v49 = v42;
  *((_BYTE *)v49 + 4) = v41;
  sub_1A5529F7C(v43, v44, v45, v46, v47, v48, v51, v52, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
  *(_DWORD *)(a1 + 448) = *(_DWORD *)(a2 + 448);
  *(_BYTE *)(a1 + 452) = *(_BYTE *)(a2 + 452);
  return a1;
}

uint64_t _s13SelectedStateV7WrappedVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 453))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 80);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s13SelectedStateV7WrappedVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 440) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 452) = 0;
    *(_DWORD *)(result + 448) = 0;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 453) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 80) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 453) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s13SelectedStateV7WrappedVMa()
{
  return &_s13SelectedStateV7WrappedVN;
}

ValueMetadata *_s13SelectedStateVMa()
{
  return &_s13SelectedStateVN;
}

uint64_t sub_1A5544514(uint64_t a1, uint64_t a2)
{
  char v4;

  if (*(_DWORD *)a1 != *(_DWORD *)a2 || (sub_1A55294E0(a1 + 8, a2 + 8) & 1) == 0)
    return 0;
  v4 = *(_BYTE *)(a2 + 452);
  if ((*(_BYTE *)(a1 + 452) & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 452) & 1) == 0)
      return 0;
  }
  else
  {
    if (*(_DWORD *)(a1 + 448) != *(_DWORD *)(a2 + 448))
      v4 = 1;
    if ((v4 & 1) != 0)
      return 0;
  }
  return 1;
}

uint64_t sub_1A5544584(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  int v7;
  _DWORD v8[111];
  char v9;
  int v10;
  _DWORD v11[111];
  char v12;

  v3 = a1 + 16;
  swift_beginAccess();
  sub_1A5502F44(v3, (uint64_t)&v10);
  swift_beginAccess();
  sub_1A5502F44(a2 + 16, (uint64_t)&v7);
  if (v10 != v7 || (sub_1A55294E0((uint64_t)v11, (uint64_t)v8) & 1) == 0)
    goto LABEL_9;
  v4 = v9;
  if ((v12 & 1) == 0)
  {
    if (v11[110] != v8[110])
      v4 = 1;
    if ((v4 & 1) == 0)
      goto LABEL_5;
LABEL_9:
    v5 = 0;
    goto LABEL_10;
  }
  if (!v9)
    goto LABEL_9;
LABEL_5:
  v5 = 1;
LABEL_10:
  sub_1A5502F80((uint64_t)&v7);
  sub_1A5502F80((uint64_t)&v10);
  return v5;
}

void sub_1A5544664(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v5;
  unint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;

  if (__OFSUB__(a4, a3))
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v5 = a3;
  sub_1A55536B0();
  v10 = sub_1A594BBD4();
  if (v5 == a4)
  {
    swift_release();
    swift_release();
    return;
  }
  if ((a4 & 0x8000000000000000) != 0)
    goto LABEL_12;
  if ((uint64_t)v5 >= (uint64_t)a4)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if ((v5 & 0x8000000000000000) != 0)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    return;
  }
  v7 = *(_QWORD *)(a2 + 16);
  if (v7 < v5 || v7 < a4)
    goto LABEL_15;
  do
  {
    v8 = *(unsigned int *)(a2 + 4 * v5++ + 32);
    sub_1A54F2E00(&v9, v8);
  }
  while (a4 != v5);
  swift_release();
  swift_release();
}

uint64_t sub_1A5544758(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  v3 = *(_QWORD *)(a2 + 16);
  sub_1A55536B0();
  result = sub_1A594BBD4();
  v9 = result;
  if (v3)
  {
    v5 = 0;
    while (v5 < *(_QWORD *)(a2 + 16))
    {
      v6 = *(unsigned int *)(a2 + 4 * v5++ + 32);
      result = sub_1A54F2E00(&v8, v6);
      if (v3 == v5)
      {
        swift_release();
        swift_release();
        return v9;
      }
    }
    __break(1u);
  }
  else
  {
    v7 = result;
    swift_release();
    swift_release();
    return v7;
  }
  return result;
}

uint64_t sub_1A5544818(uint64_t a1)
{
  return sub_1A5544AF8(a1, (void (*)(void))sub_1A5523008, (uint64_t)&type metadata for SyncRequest.ID, (uint64_t (*)(_BYTE *, _QWORD))sub_1A54F305C);
}

uint64_t sub_1A5544834(uint64_t *a1)
{
  uint64_t v2;
  uint64_t (*v3)(char *);
  uint64_t result;
  int64_t i;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  int v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t *__return_ptr, char *);
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = *a1;
  v3 = (uint64_t (*)(char *))a1[1];
  sub_1A5523008();
  result = sub_1A594BBD4();
  i = 0;
  v28 = result;
  v6 = *(_QWORD *)(v2 + 64);
  v23 = v2 + 64;
  v7 = -1 << *(_BYTE *)(v2 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & v6;
  v21 = (void (*)(uint64_t *__return_ptr, char *))a1[3];
  v22 = (unint64_t)(63 - v7) >> 6;
  if ((v8 & v6) != 0)
    goto LABEL_7;
LABEL_8:
  v12 = i + 1;
  if (__OFADD__(i, 1))
  {
    __break(1u);
  }
  else
  {
    if (v12 >= v22)
      goto LABEL_31;
    v13 = *(_QWORD *)(v23 + 8 * v12);
    if (v13)
    {
LABEL_17:
      v9 = (v13 - 1) & v13;
      v11 = __clz(__rbit64(v13)) + (v12 << 6);
      for (i = v12; ; v11 = v10 | (i << 6))
      {
        v16 = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * v11);
        v17 = *(_QWORD *)(v2 + 56) + 24 * v11;
        v18 = *(_BYTE *)v17;
        v19 = *(_QWORD *)(v17 + 8);
        v20 = *(_QWORD *)(v17 + 16);
        HIDWORD(v24) = v16;
        v25 = v18;
        v26 = v19;
        v27 = v20;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        if ((v3((char *)&v24 + 4) & 1) != 0)
        {
          HIDWORD(v24) = v16;
          v25 = v18;
          v26 = v19;
          v27 = v20;
          v21(&v24, (char *)&v24 + 4);
          swift_bridgeObjectRelease();
          result = sub_1A54F305C((_DWORD *)&v24 + 1, v24);
          if (!v9)
            goto LABEL_8;
        }
        else
        {
          result = swift_bridgeObjectRelease();
          if (!v9)
            goto LABEL_8;
        }
LABEL_7:
        v10 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
      }
    }
    v14 = i + 2;
    if (i + 2 >= v22)
      goto LABEL_31;
    v13 = *(_QWORD *)(v23 + 8 * v14);
    if (v13)
    {
LABEL_13:
      v12 = v14;
      goto LABEL_17;
    }
    v15 = i + 3;
    if (i + 3 >= v22)
      goto LABEL_31;
    v13 = *(_QWORD *)(v23 + 8 * v15);
    if (v13)
    {
LABEL_16:
      v12 = v15;
      goto LABEL_17;
    }
    v14 = i + 4;
    if (i + 4 >= v22)
      goto LABEL_31;
    v13 = *(_QWORD *)(v23 + 8 * v14);
    if (v13)
      goto LABEL_13;
    v15 = i + 5;
    if (i + 5 >= v22)
      goto LABEL_31;
    v13 = *(_QWORD *)(v23 + 8 * v15);
    if (v13)
      goto LABEL_16;
    v14 = i + 6;
    if (i + 6 >= v22)
    {
LABEL_31:
      sub_1A550F72C();
      swift_release();
      swift_release();
      return v28;
    }
    v13 = *(_QWORD *)(v23 + 8 * v14);
    if (v13)
      goto LABEL_13;
    while (1)
    {
      v12 = v14 + 1;
      if (__OFADD__(v14, 1))
        break;
      if (v12 >= v22)
        goto LABEL_31;
      v13 = *(_QWORD *)(v23 + 8 * v12);
      ++v14;
      if (v13)
        goto LABEL_17;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5544ADC(uint64_t a1)
{
  return sub_1A5544AF8(a1, (void (*)(void))sub_1A5553CE4, (uint64_t)&type metadata for UID, (uint64_t (*)(_BYTE *, _QWORD))sub_1A54F456C);
}

uint64_t sub_1A5544AF8(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t (*a4)(_BYTE *, _QWORD))
{
  uint64_t result;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  _BYTE v18[4];
  uint64_t v19;

  a2();
  result = sub_1A594BBD4();
  v7 = 0;
  v19 = result;
  v8 = a1 + 64;
  v9 = 1 << *(_BYTE *)(a1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a1 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v7 << 6);
      goto LABEL_5;
    }
    v15 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v15 >= v12)
      goto LABEL_23;
    v16 = *(_QWORD *)(v8 + 8 * v15);
    ++v7;
    if (!v16)
    {
      v7 = v15 + 1;
      if (v15 + 1 >= v12)
        goto LABEL_23;
      v16 = *(_QWORD *)(v8 + 8 * v7);
      if (!v16)
      {
        v7 = v15 + 2;
        if (v15 + 2 >= v12)
          goto LABEL_23;
        v16 = *(_QWORD *)(v8 + 8 * v7);
        if (!v16)
        {
          v7 = v15 + 3;
          if (v15 + 3 >= v12)
            goto LABEL_23;
          v16 = *(_QWORD *)(v8 + 8 * v7);
          if (!v16)
            break;
        }
      }
    }
LABEL_22:
    v11 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v7 << 6);
LABEL_5:
    result = a4(v18, *(unsigned int *)(*(_QWORD *)(a1 + 48) + 4 * v14));
  }
  v17 = v15 + 4;
  if (v17 >= v12)
  {
LABEL_23:
    swift_release();
    return v19;
  }
  v16 = *(_QWORD *)(v8 + 8 * v17);
  if (v16)
  {
    v7 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    v7 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v7 >= v12)
      goto LABEL_23;
    v16 = *(_QWORD *)(v8 + 8 * v7);
    ++v17;
    if (v16)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1A5544C78(uint64_t a1, unint64_t a2)
{
  uint64_t *v2;
  _QWORD *v4;
  uint64_t result;

  v4 = (_QWORD *)*v2;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v2 = (uint64_t)v4;
  if ((result & 1) != 0)
  {
    if ((a2 & 0x8000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  result = (uint64_t)sub_1A554B6F8(v4);
  v4 = (_QWORD *)result;
  *v2 = result;
  if ((a2 & 0x8000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if (v4[2] > a2)
    return (uint64_t)nullsub_1;
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1A5544CF0(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1A54F4D7C(0, v1, 0);
    v2 = v11;
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      v8 = *(_QWORD *)(v11 + 16);
      v7 = *(_QWORD *)(v11 + 24);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      if (v8 >= v7 >> 1)
        sub_1A54F4D7C(v7 > 1, v8 + 1, 1);
      *(_QWORD *)(v11 + 16) = v8 + 1;
      v9 = v11 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v5;
      *(_QWORD *)(v9 + 40) = v6;
      v4 += 22;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1A5544DC4(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1A54F4D7C(0, v1, 0);
    v2 = v11;
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      v8 = *(_QWORD *)(v11 + 16);
      v7 = *(_QWORD *)(v11 + 24);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      if (v8 >= v7 >> 1)
        sub_1A54F4D7C(v7 > 1, v8 + 1, 1);
      *(_QWORD *)(v11 + 16) = v8 + 1;
      v9 = v11 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v5;
      *(_QWORD *)(v9 + 40) = v6;
      v4 += 12;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1A5544E98(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  uint64_t v9;
  unsigned __int8 *v10;
  int v11;
  int v12;
  int v13;

  v3 = *(_QWORD *)(a3 + 16);
  if (!v3)
    return 0;
  v4 = 0;
  while (1)
  {
    v5 = a3 + 32 + 16 * v4;
    if ((*(unsigned int *)(v5 + 8) | ((unint64_t)*(unsigned int *)(v5 + 8) << 32)) == (a2 | ((unint64_t)a2 << 32)))
    {
      v6 = *(_QWORD *)v5;
      v7 = *(_QWORD *)(v6 + 16);
      if (v7 == *(_QWORD *)(a1 + 16))
      {
        if (!v7 || v6 == a1)
          return 1;
        if (*(unsigned __int8 *)(v6 + 32) == *(unsigned __int8 *)(a1 + 32))
        {
          if (v7 == 1)
            return 1;
          if (*(unsigned __int8 *)(v6 + 33) == *(unsigned __int8 *)(a1 + 33))
          {
            if (v7 == 2)
              return 1;
            if (*(unsigned __int8 *)(v6 + 34) == *(unsigned __int8 *)(a1 + 34))
            {
              if (v7 == 3)
                return 1;
              if (*(unsigned __int8 *)(v6 + 35) == *(unsigned __int8 *)(a1 + 35))
                break;
            }
          }
        }
      }
    }
LABEL_3:
    if (++v4 == v3)
      return 0;
  }
  v8 = (unsigned __int8 *)(v6 + 36);
  v9 = v7 - 4;
  v10 = (unsigned __int8 *)(a1 + 36);
  while (v9)
  {
    v12 = *v8++;
    v11 = v12;
    v13 = *v10++;
    --v9;
    if (v11 != v13)
      goto LABEL_3;
  }
  return 1;
}

BOOL sub_1A5544F88(_BOOL8 result, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t i;
  uint64_t v5;
  int v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v3 = result;
  if (*(_BYTE *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 33; ; ++i)
  {
    v5 = i - 31;
    if (__OFADD__(i - 32, 1))
      break;
    v6 = *(unsigned __int8 *)(a2 + i);
    result = v6 == v3;
    if (v6 == v3 || v5 == v2)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5544FE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  uint64_t i;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  int v27;
  int v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  __int128 *v38;
  __int128 *v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t inited;
  uint64_t *v51;
  int v52;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  _OWORD v72[3];
  _BYTE v73[8];
  _QWORD v74[3];

  v1 = MEMORY[0x1E0DEE9E8];
  if ((*(_BYTE *)(v0 + 168) & 1) != 0)
  {
    v2 = *(_QWORD *)(v0 + 144);
    v3 = *(_QWORD *)(v0 + 152);
    v4 = *(_QWORD *)(v0 + 160);
    v5 = *(_OWORD *)(v0 + 112);
    v72[0] = *(_OWORD *)(v0 + 96);
    v72[1] = v5;
    v72[2] = *(_OWORD *)(v0 + 128);
    v6 = *(_OWORD *)(v0 + 80);
    v70 = *(_OWORD *)(v0 + 64);
    v71 = v6;
    sub_1A55032A0((uint64_t)v72, (uint64_t)v73, &qword_1EE7991D8);
    sub_1A55032A0((uint64_t)v73, (uint64_t)v74, &qword_1EE7991D8);
    v7 = v74[0];
    if (v74[0] && *(_QWORD *)(v74[0] + 16))
    {
      v58 = v1;
      v8 = *(_QWORD *)(v2 + 16);
      if (v8)
      {
        v9 = (__int128 *)(v2 + 32);
        v54 = v3;
        v55 = v4;
        sub_1A55212D0(v2, v3, v4, 1);
        for (i = v8 - 1; ; --i)
        {
          v11 = *v9;
          v12 = v9[2];
          v60 = v9[1];
          v61 = v12;
          v59 = v11;
          v13 = v9[3];
          v14 = v9[4];
          v15 = v9[6];
          v64 = v9[5];
          v65 = v15;
          v63 = v14;
          v62 = v13;
          v16 = v9[7];
          v17 = v9[8];
          v18 = v9[10];
          v68 = v9[9];
          v69 = v18;
          v66 = v16;
          v67 = v17;
          v19 = v60;
          v20 = DWORD2(v60);
          v21 = *((_QWORD *)&v63 + 1);
          v22 = v64;
          sub_1A54E3150((uint64_t)&v59);
          if ((static MailboxOfInterest.LocalModification.__derived_enum_equals(_:_:)(v21, v22, 0, 0) & 1) == 0)
            goto LABEL_17;
          v23 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v24 = MailboxName.isInbox.getter(v23, v20);
          swift_bridgeObjectRelease();
          if ((v24 & 1) != 0)
          {
LABEL_8:
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            sub_1A54F2A14((uint64_t)&v57, v19, v20);
            swift_bridgeObjectRelease();
            goto LABEL_17;
          }
          if (*(_QWORD *)(v7 + 16))
          {
            v25 = sub_1A54FDC30(v19, v20);
            if ((v26 & 1) != 0)
              break;
          }
LABEL_17:
          sub_1A54E31EC((uint64_t)&v59);
          if (!i)
          {
            sub_1A54E8FCC(v2, v54, v55, 1);
            return v58;
          }
          v9 += 11;
        }
        v56 = *(unsigned __int16 *)(*(_QWORD *)(v7 + 56) + 72 * v25 + 14);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v27 = *(unsigned __int16 *)RemoteMailbox.Attributes.noSelect.unsafeMutableAddressor();
        v28 = *(unsigned __int16 *)RemoteMailbox.Attributes.nonExistent.unsafeMutableAddressor();
        swift_bridgeObjectRelease();
        if (v27)
        {
          if ((v28 & ~v27) == 0)
          {
LABEL_16:
            if ((v27 & v56) == 0)
              goto LABEL_8;
            goto LABEL_17;
          }
        }
        else if (!v28)
        {
          goto LABEL_8;
        }
        v27 |= v28;
        goto LABEL_16;
      }
    }
    else
    {
      v29 = *(_QWORD *)(v2 + 16);
      if (v29)
      {
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v30 = *(_OWORD *)(v2 + 160);
        v66 = *(_OWORD *)(v2 + 144);
        v67 = v30;
        v31 = *(_OWORD *)(v2 + 192);
        v68 = *(_OWORD *)(v2 + 176);
        v69 = v31;
        v32 = *(_OWORD *)(v2 + 96);
        v62 = *(_OWORD *)(v2 + 80);
        v33 = *(_OWORD *)(v2 + 112);
        v34 = *(_OWORD *)(v2 + 128);
        v63 = v32;
        v64 = v33;
        v65 = v34;
        v35 = *(_OWORD *)(v2 + 48);
        v59 = *(_OWORD *)(v2 + 32);
        v60 = v35;
        v61 = *(_OWORD *)(v2 + 64);
        v36 = DWORD2(v35);
        sub_1A54E3150((uint64_t)&v59);
        v37 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        LOBYTE(v36) = MailboxName.isInbox.getter(v37, v36);
        swift_bridgeObjectRelease();
        sub_1A54E31EC((uint64_t)&v59);
        if ((v36 & 1) == 0)
        {
          v38 = (__int128 *)(v2 + 208);
          do
          {
            if (!--v29)
            {
              sub_1A54E8FCC(v2, v3, v4, 1);
              return MEMORY[0x1E0DEE9E8];
            }
            v39 = v38 + 11;
            v40 = *v38;
            v41 = v38[2];
            v60 = v38[1];
            v61 = v41;
            v59 = v40;
            v42 = v38[3];
            v43 = v38[4];
            v44 = v38[6];
            v64 = v38[5];
            v65 = v44;
            v63 = v43;
            v62 = v42;
            v45 = v38[7];
            v46 = v38[8];
            v47 = v38[10];
            v68 = v38[9];
            v69 = v47;
            v66 = v45;
            v67 = v46;
            v48 = DWORD2(v60);
            sub_1A54E3150((uint64_t)&v59);
            v49 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            LOBYTE(v48) = MailboxName.isInbox.getter(v49, v48);
            swift_bridgeObjectRelease();
            sub_1A54E31EC((uint64_t)&v59);
            v38 = v39;
          }
          while ((v48 & 1) == 0);
        }
        sub_1A54E8FCC(v2, v3, v4, 1);
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79ADC8);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1A59ABD10;
        v51 = MailboxName.inbox.unsafeMutableAddressor();
        v52 = *((_DWORD *)v51 + 2);
        *(_QWORD *)(inited + 32) = *v51;
        *(_DWORD *)(inited + 40) = v52;
        v1 = sub_1A54F6978(inited);
        swift_setDeallocating();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_arrayDestroy();
      }
    }
  }
  return v1;
}

uint64_t sub_1A55453B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  sub_1A54E3414();
  v4 = a2 & 0xFFFFFFFFFFLL;
  v5 = MessageIdentifierSet.RangeView.endIndex.getter(a1, a2 & 0xFFFFFFFFFFLL);
  result = MessageIdentifierSet.RangeView.endIndex.getter(a1, v4);
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    result = MessageIdentifierSet.RangeView.endIndex.getter(a1, v4);
    if ((v5 & 0x8000000000000000) == 0 && result >= v5)
      return v5;
  }
  __break(1u);
  return result;
}

void sub_1A554545C()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  __int128 v10;
  char v11;
  __int128 v12;
  char v13;

  v12 = *(__int128 *)((char *)v0 + 24);
  v13 = *((_BYTE *)v0 + 40);
  if ((v13 & 1) != 0)
  {
LABEL_17:
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    goto LABEL_18;
  }
  v10 = *v0;
  v11 = *((_BYTE *)v0 + 16);
  if ((v11 & 1) == 0)
  {
    v1 = v10;
    if ((uint64_t)v12 >= (uint64_t)v10)
    {
      v2 = *((_QWORD *)&v10 + 1);
      if (DWORD2(v12) != DWORD2(v10))
        goto LABEL_15;
      if ((_QWORD)v10 == (_QWORD)v12)
        return;
      v3 = 0;
      v4 = *((_QWORD *)v0 + 6);
      while (!__OFADD__(v3, 1))
      {
        v5 = sub_1A558A15C(v1, v2, 0, v4);
        v7 = v6;
        v9 = v8;
        sub_1A5529B00(v1, v2, 0);
        if ((v9 & 1) != 0)
          goto LABEL_16;
        if ((_DWORD)v7 != DWORD2(v12))
          goto LABEL_13;
        ++v3;
        v1 = v5;
        v2 = v7;
        if (v5 == (_QWORD)v12)
        {
          sub_1A5552DF4((uint64_t)&v12);
          sub_1A5552DF4((uint64_t)&v10);
          return;
        }
      }
      __break(1u);
LABEL_13:
      __break(1u);
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
LABEL_18:
  __break(1u);
}

uint64_t sub_1A5545590()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[72];

  v1 = *((_QWORD *)v0 + 1);
  v2 = *v0;
  sub_1A594CE64();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  SyncRequest.hash(into:)((uint64_t)v4, v2, v1);
  swift_bridgeObjectRelease();
  sub_1A594CEB8();
  return sub_1A594CED0();
}

uint64_t sub_1A5545600(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *((_QWORD *)v1 + 1);
  v4 = *v1;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  SyncRequest.hash(into:)(a1, v4, v3);
  swift_bridgeObjectRelease();
  return sub_1A594CEB8();
}

uint64_t sub_1A5545658()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[72];

  v1 = *((_QWORD *)v0 + 1);
  v2 = *v0;
  sub_1A594CE64();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  SyncRequest.hash(into:)((uint64_t)v4, v2, v1);
  swift_bridgeObjectRelease();
  sub_1A594CEB8();
  return sub_1A594CED0();
}

uint64_t sub_1A55456C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a2 + 16);
  return static SyncRequest.__derived_struct_equals(_:_:)(*(_BYTE *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)a2, *(_QWORD *)(a2 + 8)) & (v2 == v3);
}

BOOL sub_1A5545700(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD v17[14];
  uint64_t v18;
  _OWORD v19[14];
  uint64_t v20;

  v2 = *(_OWORD *)(a1 + 208);
  v17[12] = *(_OWORD *)(a1 + 192);
  v17[13] = v2;
  v18 = *(_QWORD *)(a1 + 224);
  v3 = *(_OWORD *)(a1 + 144);
  v17[8] = *(_OWORD *)(a1 + 128);
  v17[9] = v3;
  v4 = *(_OWORD *)(a1 + 176);
  v17[10] = *(_OWORD *)(a1 + 160);
  v17[11] = v4;
  v5 = *(_OWORD *)(a1 + 80);
  v17[4] = *(_OWORD *)(a1 + 64);
  v17[5] = v5;
  v6 = *(_OWORD *)(a1 + 112);
  v17[6] = *(_OWORD *)(a1 + 96);
  v17[7] = v6;
  v7 = *(_OWORD *)(a1 + 16);
  v17[0] = *(_OWORD *)a1;
  v17[1] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v17[2] = *(_OWORD *)(a1 + 32);
  v17[3] = v8;
  v9 = *(_OWORD *)(a2 + 208);
  v19[12] = *(_OWORD *)(a2 + 192);
  v19[13] = v9;
  v20 = *(_QWORD *)(a2 + 224);
  v10 = *(_OWORD *)(a2 + 144);
  v19[8] = *(_OWORD *)(a2 + 128);
  v19[9] = v10;
  v11 = *(_OWORD *)(a2 + 176);
  v19[10] = *(_OWORD *)(a2 + 160);
  v19[11] = v11;
  v12 = *(_OWORD *)(a2 + 80);
  v19[4] = *(_OWORD *)(a2 + 64);
  v19[5] = v12;
  v13 = *(_OWORD *)(a2 + 112);
  v19[6] = *(_OWORD *)(a2 + 96);
  v19[7] = v13;
  v14 = *(_OWORD *)(a2 + 16);
  v19[0] = *(_OWORD *)a2;
  v19[1] = v14;
  v15 = *(_OWORD *)(a2 + 48);
  v19[2] = *(_OWORD *)(a2 + 32);
  v19[3] = v15;
  return sub_1A555237C((uint64_t)v17, (uint64_t)v19);
}

uint64_t sub_1A55457B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_l;
  v2 = sub_1A594A764();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1A5545800()
{
  return type metadata accessor for State.Logger();
}

uint64_t type metadata accessor for State.Logger()
{
  uint64_t result;

  result = qword_1EE797CE0;
  if (!qword_1EE797CE0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A5545844()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A594A764();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1A55458C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for State.InProgressSync(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for State.InProgressSync(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for State.InProgressSync(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for State.InProgressSync(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for State.InProgressSync()
{
  return &type metadata for State.InProgressSync;
}

uint64_t destroy for State(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 120))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1A54E8FCC(*(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), *(_QWORD *)(a1 + 160), *(_BYTE *)(a1 + 168));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for State(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  *(_OWORD *)(a1 + 64) = v6;
  v8 = a2 + 120;
  v7 = *(_QWORD *)(a2 + 120);
  v9 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v9;
  *(_WORD *)(a1 + 112) = *(_WORD *)(a2 + 112);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v7)
  {
    v10 = *(_QWORD *)(a2 + 128);
    v11 = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 120) = v7;
    *(_QWORD *)(a1 + 128) = v10;
    *(_QWORD *)(a1 + 136) = v11;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    *(_OWORD *)(a1 + 120) = *(_OWORD *)v8;
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(v8 + 16);
  }
  v12 = *(_QWORD *)(a2 + 144);
  v13 = *(_QWORD *)(a2 + 152);
  v14 = *(_QWORD *)(a2 + 160);
  v15 = *(_BYTE *)(a2 + 168);
  sub_1A55212D0(v12, v13, v14, v15);
  *(_QWORD *)(a1 + 144) = v12;
  *(_QWORD *)(a1 + 152) = v13;
  *(_QWORD *)(a1 + 160) = v14;
  *(_BYTE *)(a1 + 168) = v15;
  v16 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v16;
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_DWORD *)(a1 + 216) = *(_DWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for State(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 9) = *((_BYTE *)a2 + 9);
  *(_BYTE *)(a1 + 10) = *((_BYTE *)a2 + 10);
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  *(_BYTE *)(a1 + 17) = *((_BYTE *)a2 + 17);
  *(_BYTE *)(a1 + 18) = *((_BYTE *)a2 + 18);
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
  *(_QWORD *)(a1 + 40) = a2[5];
  *(_QWORD *)(a1 + 48) = a2[6];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = a2[7];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v5 = *((_OWORD *)a2 + 4);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)((char *)a2 + 73);
  *(_OWORD *)(a1 + 64) = v5;
  *(_QWORD *)(a1 + 96) = a2[12];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v6 = a2[13];
  v7 = (_OWORD *)(a1 + 120);
  v8 = *(_QWORD *)(a1 + 120);
  *(_BYTE *)(a1 + 112) = *((_BYTE *)a2 + 112);
  *(_QWORD *)(a1 + 104) = v6;
  *(_BYTE *)(a1 + 113) = *((_BYTE *)a2 + 113);
  v10 = a2 + 15;
  v9 = a2[15];
  if (v8)
  {
    if (v9)
    {
      *(_QWORD *)(a1 + 120) = v9;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 128) = a2[16];
      *(_QWORD *)(a1 + 136) = a2[17];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1A5542C34(a1 + 120);
      v11 = a2[17];
      *v7 = *v10;
      *(_QWORD *)(a1 + 136) = v11;
    }
  }
  else if (v9)
  {
    *(_QWORD *)(a1 + 120) = v9;
    *(_QWORD *)(a1 + 128) = a2[16];
    *(_QWORD *)(a1 + 136) = a2[17];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    v12 = *v10;
    *(_QWORD *)(a1 + 136) = a2[17];
    *v7 = v12;
  }
  v13 = a2[18];
  v14 = a2[19];
  v15 = a2[20];
  v16 = *((_BYTE *)a2 + 168);
  sub_1A55212D0(v13, v14, v15, v16);
  v17 = *(_QWORD *)(a1 + 144);
  v18 = *(_QWORD *)(a1 + 152);
  v19 = *(_QWORD *)(a1 + 160);
  v20 = *(_BYTE *)(a1 + 168);
  *(_QWORD *)(a1 + 144) = v13;
  *(_QWORD *)(a1 + 152) = v14;
  *(_QWORD *)(a1 + 160) = v15;
  *(_BYTE *)(a1 + 168) = v16;
  sub_1A54E8FCC(v17, v18, v19, v20);
  *(_QWORD *)(a1 + 176) = a2[22];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 184) = a2[23];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 192) = a2[24];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 200) = a2[25];
  *(_QWORD *)(a1 + 208) = a2[26];
  *(_DWORD *)(a1 + 216) = *((_DWORD *)a2 + 54);
  *(_QWORD *)(a1 + 224) = a2[28];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy232_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __n128 result;
  __int128 v11;
  __int128 v12;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  v7 = a2[7];
  v8 = a2[8];
  v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  result = (__n128)a2[11];
  v11 = a2[12];
  v12 = a2[13];
  *(_QWORD *)(a1 + 224) = *((_QWORD *)a2 + 28);
  *(_OWORD *)(a1 + 192) = v11;
  *(_OWORD *)(a1 + 208) = v12;
  *(__n128 *)(a1 + 176) = result;
  return result;
}

uint64_t assignWithTake for State(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 120);
  v6 = *(_QWORD *)(a1 + 120);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_BYTE *)(a1 + 113) = *(_BYTE *)(a2 + 113);
  if (!v6)
    goto LABEL_5;
  if (!v5)
  {
    sub_1A5542C34(a1 + 120);
LABEL_5:
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 120) = v5;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v7;
  swift_bridgeObjectRelease();
LABEL_6:
  v8 = *(_QWORD *)(a2 + 160);
  v9 = *(_BYTE *)(a2 + 168);
  v10 = *(_QWORD *)(a1 + 144);
  v11 = *(_QWORD *)(a1 + 152);
  v12 = *(_QWORD *)(a1 + 160);
  v13 = *(_BYTE *)(a1 + 168);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 160) = v8;
  *(_BYTE *)(a1 + 168) = v9;
  sub_1A54E8FCC(v10, v11, v12, v13);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_DWORD *)(a1 + 216) = *(_DWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for State(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 232))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for State(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 232) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 232) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for State()
{
  return &type metadata for State;
}

unint64_t sub_1A5546100()
{
  unint64_t result;

  result = qword_1EE7A8820;
  if (!qword_1EE7A8820)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A5664, &type metadata for State.InProgressSync);
    atomic_store(result, (unint64_t *)&qword_1EE7A8820);
  }
  return result;
}

uint64_t sub_1A5546144@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _OWORD *a8@<X8>, uint64_t a9)
{
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t i;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  unsigned int v63;
  __int128 *v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  unsigned __int8 *v74;
  uint64_t v75;
  unsigned __int8 *v76;
  int v77;
  int v78;
  int v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  _OWORD *v87;
  __int128 v88;
  _DWORD v89[4];
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _OWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  uint64_t v127;
  __int128 v128[3];
  unsigned __int8 v129[32];
  __int128 v130[2];
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  char v143;

  v95 = a6;
  v105 = a5;
  v106 = a4;
  v98 = a8;
  v108 = a9;
  v118 = type metadata accessor for TaskHistory.Running(0);
  v111 = *(_QWORD *)(v118 - 8);
  MEMORY[0x1E0C80A78](v118);
  v14 = (char *)v89 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ClientCommand(0);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v89 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v89 - v19;
  v96 = a1;
  v21 = a1;
  v22 = a2;
  v23 = a7;
  sub_1A5546CC4(v21, (uint64_t)v128);
  if (v129[0] != 255)
  {
    sub_1A5552FE0((uint64_t)v128, (uint64_t)&v131);
    sub_1A555301C((uint64_t)&v131, (uint64_t)v128);
    sub_1A5553058((uint64_t)&v131);
    v24 = v98;
    sub_1A55032A0((uint64_t)v128, (uint64_t)v98, &qword_1EE797CA8);
LABEL_8:
    result = swift_bridgeObjectRelease();
    v38 = MEMORY[0x1E0DEE9E8];
    goto LABEL_9;
  }
  v119 = v15;
  v92 = v22;
  v93 = a3;
  sub_1A5510284((uint64_t)v128, &qword_1EE797CA8);
  v25 = *(_QWORD *)(a7 + 64);
  if (v25 == 2)
    goto LABEL_7;
  v26 = a7;
  v27 = *(_QWORD *)(a7 + 72);
  v91 = *(_QWORD *)(v23 + 80);
  LODWORD(v23) = *(unsigned __int8 *)(v23 + 88);
  v28 = *(_BYTE *)(v26 + 113);
  v94 = v26;
  if ((v28 & 1) != 0)
  {
    v116 = v27;
    v29 = *(_BYTE *)(v26 + 17);
    v30 = *(_QWORD *)(v26 + 24);
    LODWORD(v115) = *(unsigned __int8 *)(v26 + 10);
    v113 = *(_QWORD *)(v26 + 40);
    v114 = v30;
    LODWORD(v117) = v23;
    v23 = *(_QWORD *)(v26 + 48);
    v31 = *(_BYTE *)(v94 + 32);
    v32 = *(unsigned __int8 *)(v94 + 16);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v33 = sub_1A558E3A4();
    v34 = v29 & 1;
    LOWORD(v27) = v116;
    v35 = v23;
    LOBYTE(v23) = v117;
    v36 = sub_1A558E7E0(v32, v34, v114, v31, v113, v115, v35, v33);
    if ((v25 & 0x10000) == 0 && (v36 & 0x100000000) != 0)
    {
LABEL_7:
      v24 = v98;
      v98[1] = 0u;
      v24[2] = 0u;
      *v24 = 0u;
      *((_BYTE *)v24 + 48) = -1;
      goto LABEL_8;
    }
  }
  v39 = MEMORY[0x1E0DEE9E8];
  v127 = MEMORY[0x1E0DEE9E8];
  v102 = *(_QWORD *)(v95 + 16);
  if (!v102)
  {
LABEL_49:
    v87 = v98;
    v98[1] = 0u;
    v87[2] = 0u;
    *v87 = 0u;
    *((_BYTE *)v87 + 48) = -1;
    result = swift_bridgeObjectRelease();
    *((_QWORD *)v87 + 7) = v39;
    return result;
  }
  v40 = v105;
  v99 = v95 + 32;
  v100 = v105 + 32;
  v41 = *(_OWORD *)(v94 + 176);
  v42 = *(_OWORD *)(v94 + 192);
  v43 = *(_OWORD *)(v94 + 144);
  v128[1] = *(_OWORD *)(v94 + 160);
  v128[2] = v41;
  *(_OWORD *)v129 = v42;
  *(_OWORD *)&v129[12] = *(_OWORD *)(v94 + 204);
  v128[0] = v43;
  sub_1A55212B8(v128, v130);
  v101 = *(_QWORD *)(v40 + 16);
  v97 = v108 + 56;
  v90 = v25 & 0xFF01010101010101;
  v89[3] = v27 & 0x101;
  swift_retain();
  swift_retain();
  swift_retain();
  v44 = 0;
  v89[2] = v23 & 1;
  v45 = v111;
  v120 = v20;
  while (1)
  {
    if (v44 == v101)
    {
      __break(1u);
      JUMPOUT(0x1A5546C54);
    }
    v46 = v100 + 16 * v44;
    v47 = *(_QWORD *)v46;
    v48 = *(unsigned int *)(v46 + 8);
    v107 = v44;
    v103 = *(unsigned __int8 *)(v99 + v44);
    v49 = *(_QWORD *)(v108 + 16);
    v110 = v47;
    v115 = v49;
    v104 = v48;
    if (v49)
    {
      v50 = *(_QWORD *)(type metadata accessor for RunningTask() - 8);
      v114 = v97 + ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80));
      v51 = *(_QWORD *)(v50 + 72);
      v112 = v48 | (v48 << 32);
      v113 = v51;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v52 = 0;
      v109 = v110 + 35;
      do
      {
        v53 = *(_QWORD *)(v114 + v113 * v52);
        v54 = *(_QWORD *)(v53 + 16);
        if (v54)
        {
          v116 = v52;
          v117 = v53;
          v55 = v53 + ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80));
          v56 = *(_QWORD *)(v45 + 72);
          swift_bridgeObjectRetain_n();
          for (i = 0; i != v54; ++i)
          {
            sub_1A55034B8(v55 + v56 * i, (uint64_t)v14, type metadata accessor for TaskHistory.Running);
            if (swift_getEnumCaseMultiPayload() != 1)
            {
              v58 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308);
              v59 = (uint64_t)v120;
              sub_1A54E68A0((uint64_t)&v14[*(int *)(v58 + 64)], (uint64_t)v120);
              sub_1A55034B8(v59, (uint64_t)v18, type metadata accessor for ClientCommand);
              v60 = (char *)&loc_1A55465FC + dword_1A5546C54[swift_getEnumCaseMultiPayload()];
              __asm { BR              X9 }
            }
            sub_1A55034FC((uint64_t)v14, type metadata accessor for TaskHistory.Running);
          }
          swift_bridgeObjectRelease_n();
          v45 = v111;
          v52 = v116;
        }
        ++v52;
      }
      while (v52 != v115);
      swift_bridgeObjectRelease();
    }
    else
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
    sub_1A55212B8(v130, &v142);
    if ((v143 & 1) != 0)
    {
      v61 = *(_QWORD *)(v142 + 16);
      if (v61)
        break;
    }
LABEL_13:
    swift_bridgeObjectRelease();
LABEL_14:
    v44 = v107 + 1;
    if (v107 + 1 == v102)
    {
      swift_release();
      swift_release();
      swift_release();
      v39 = v127;
      goto LABEL_49;
    }
  }
  v62 = 0;
  v63 = v104;
  while (1)
  {
    v64 = (__int128 *)(v142 + 32 + 176 * v62);
    v65 = *v64;
    v66 = v64[2];
    v132 = v64[1];
    v133 = v66;
    v131 = v65;
    v67 = v64[3];
    v68 = v64[4];
    v69 = v64[6];
    v136 = v64[5];
    v137 = v69;
    v134 = v67;
    v135 = v68;
    v70 = v64[7];
    v71 = v64[8];
    v72 = v64[10];
    v140 = v64[9];
    v141 = v72;
    v138 = v70;
    v139 = v71;
    if ((DWORD2(v132) | ((unint64_t)DWORD2(v132) << 32)) == (v104 | (v104 << 32)))
    {
      v73 = *(_QWORD *)(v132 + 16);
      if (v73 == *(_QWORD *)(v110 + 16))
      {
        if (!v73 || (_QWORD)v132 == v110)
          goto LABEL_46;
        if (*(unsigned __int8 *)(v132 + 32) == *(unsigned __int8 *)(v110 + 32))
        {
          if (v73 == 1)
            goto LABEL_46;
          if (*(unsigned __int8 *)(v132 + 33) == *(unsigned __int8 *)(v110 + 33))
          {
            if (v73 == 2)
              goto LABEL_46;
            if (*(unsigned __int8 *)(v132 + 34) == *(unsigned __int8 *)(v110 + 34))
            {
              if (v73 == 3)
                goto LABEL_46;
              if (*(unsigned __int8 *)(v132 + 35) == *(unsigned __int8 *)(v110 + 35))
                break;
            }
          }
        }
      }
    }
LABEL_30:
    if (++v62 == v61)
      goto LABEL_13;
  }
  v74 = (unsigned __int8 *)(v132 + 36);
  v75 = v73 - 4;
  v76 = (unsigned __int8 *)(v110 + 36);
  while (v75)
  {
    v78 = *v74++;
    v77 = v78;
    v79 = *v76++;
    --v75;
    if (v77 != v79)
      goto LABEL_30;
  }
LABEL_46:
  LODWORD(v117) = 1;
  v80 = v94;
  v81 = *(_BYTE *)(v94 + 17);
  v82 = *(_QWORD *)(v94 + 24);
  LODWORD(v116) = *(unsigned __int8 *)(v94 + 10);
  v83 = *(_QWORD *)(v94 + 48);
  v114 = *(_QWORD *)(v94 + 40);
  v115 = v82;
  LODWORD(v113) = *(unsigned __int8 *)(v94 + 32);
  v84 = *(unsigned __int8 *)(v94 + 16);
  sub_1A54E3150((uint64_t)&v131);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v85 = sub_1A558E3A4();
  v86 = sub_1A558E7E0(v84, v81 & 1, v115, v113, v114, v116, v83, v85);
  sub_1A5503E44(v96, v92, v103, &v121, v86 & 0x1010101FFFF01, *(_QWORD *)v80, *(_BYTE *)(v80 + 8), v117);
  sub_1A54E31EC((uint64_t)&v131);
  if (!*((_QWORD *)&v122 + 1))
  {
    sub_1A5510284((uint64_t)&v121, &qword_1EE7974B0);
    sub_1A54F2A14((uint64_t)&v121, v110, v63);
    swift_bridgeObjectRelease();
    v45 = v111;
    goto LABEL_14;
  }
  v124 = v121;
  v125 = v122;
  v126 = v123;
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  v88 = v125;
  v24 = v98;
  *v98 = v124;
  v24[1] = v88;
  v24[2] = v126;
  *((_BYTE *)v24 + 48) = 1;
  result = swift_bridgeObjectRelease();
  v38 = v127;
LABEL_9:
  *((_QWORD *)v24 + 7) = v38;
  return result;
}

uint64_t sub_1A5546CC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  __int128 v16;
  __int128 v17;
  char v18;
  __int16 v19;
  __int128 v20;
  __int128 v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _BYTE v87[40];
  _OWORD v88[4];
  uint64_t v89;
  char v90[8];
  _BYTE v91[40];
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  _QWORD v96[2];
  char v97;
  _BYTE v98[24];
  __int16 v99;
  __int128 v100[3];
  _OWORD v101[2];
  __int128 v102[2];
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  uint64_t v108[3];
  char v109[8];
  _BYTE v110[32];
  _BYTE v111[32];
  uint64_t v112;
  __int128 v113;
  char v114;

  v3 = v2;
  sub_1A552CEB0(v2);
  sub_1A5622ADC(v2, (uint64_t)&v103);
  if ((_QWORD)v103)
  {
    v84 = a2;
    v94 = v105;
    v95 = v106;
    v96[0] = v107;
    v92 = v103;
    v93 = v104;
    if (!*(_QWORD *)(a1 + 16)
      || (sub_1A594CE64(),
          sub_1A594C6A8(),
          v6 = sub_1A594CED0(),
          v7 = -1 << *(_BYTE *)(a1 + 32),
          v8 = v6 & ~v7,
          ((*(_QWORD *)(a1 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0))
    {
LABEL_10:
      *(_QWORD *)(v84 + 24) = __swift_instantiateConcreteTypeFromMangledName_0(qword_1EE797990);
      *(_QWORD *)(v84 + 32) = sub_1A54E2E30(&qword_1EE797988, qword_1EE797990, (uint64_t)&unk_1A59A7DE0);
      v13 = swift_allocObject();
      *(_QWORD *)v84 = v13;
      sub_1A5553524((uint64_t)&v92, v13 + 16);
      v14 = MEMORY[0x1E0DEE9D8];
      *(_QWORD *)(v13 + 88) = MEMORY[0x1E0DEE9D8];
      *(_QWORD *)(v13 + 96) = v14;
      *(_BYTE *)(v84 + 48) = 0;
      return sub_1A5553560((uint64_t)&v92);
    }
    v9 = ~v7;
    while (1)
    {
      sub_1A55530FC(*(_QWORD *)(a1 + 48) + 48 * v8, (uint64_t)&v103);
      v10 = v103;
      v11 = v92;
      sub_1A55530FC((uint64_t)&v103, (uint64_t)v100);
      sub_1A55530FC((uint64_t)&v92, (uint64_t)v88);
      if (v10 == v11)
      {
        v12 = MEMORY[0x1A85AEB14]((char *)v100 + 8, (char *)v88 + 8);
        sub_1A5553138((uint64_t)v88);
        sub_1A5553138((uint64_t)v100);
        sub_1A5553138((uint64_t)&v103);
        if ((v12 & 1) != 0)
        {
          sub_1A5553560((uint64_t)&v92);
          v3 = v2;
          a2 = v84;
          goto LABEL_12;
        }
      }
      else
      {
        sub_1A5553138((uint64_t)v88);
        sub_1A5553138((uint64_t)v100);
        sub_1A5553138((uint64_t)&v103);
      }
      v8 = (v8 + 1) & v9;
      if (((*(_QWORD *)(a1 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_10;
    }
  }
  sub_1A5510284((uint64_t)&v103, &qword_1EE797C70);
LABEL_12:
  v16 = *(_OWORD *)(v3 + 112);
  v105 = *(_OWORD *)(v3 + 96);
  v106 = v16;
  v107 = *(_OWORD *)(v3 + 128);
  v17 = *(_OWORD *)(v3 + 80);
  v103 = *(_OWORD *)(v3 + 64);
  v104 = v17;
  sub_1A55032A0((uint64_t)&v103, (uint64_t)v110, &qword_1EE797CF0);
  result = sub_1A55032A0((uint64_t)v110, (uint64_t)v111, &qword_1EE797CF0);
  v18 = v111[6];
  if (v111[0] == 2)
  {
LABEL_13:
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_BYTE *)(a2 + 48) = -1;
    return result;
  }
  v19 = *(_WORD *)&v111[7];
  sub_1A55032A0((uint64_t)&v105, (uint64_t)v109, &qword_1EE7991D8);
  sub_1A55032A0((uint64_t)v109, (uint64_t)&v112, &qword_1EE7991D8);
  v85 = a2;
  if (!v112)
  {
    sub_1A55032A0((uint64_t)&v106 + 8, (uint64_t)&v86, (uint64_t *)&unk_1EE797E40);
    v30 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)&v92 = sub_1A558B428(MEMORY[0x1E0DEE9D8]);
    *((_QWORD *)&v92 + 1) = sub_1A558B6F4(v30);
    sub_1A55530D0(&v86);
    if (qword_1EE797CF8 != -1)
      swift_once();
    sub_1A55530FC((uint64_t)&qword_1EE7F9278, (uint64_t)&v93);
    strcpy((char *)v96, "ListMailboxes");
    HIWORD(v96[1]) = -4864;
    v97 = v18 & 1;
    sub_1A55032A0((uint64_t)&v86, (uint64_t)v98, (uint64_t *)&unk_1EE797E40);
    v99 = v19;
    if (*(_QWORD *)(a1 + 16))
    {
      sub_1A594CE64();
      sub_1A594C6A8();
      v31 = sub_1A594CED0();
      v32 = -1 << *(_BYTE *)(a1 + 32);
      v33 = v31 & ~v32;
      if (((*(_QWORD *)(a1 + 56 + ((v33 >> 3) & 0xFFFFFFFFFFFFF8)) >> v33) & 1) != 0)
      {
        v34 = ~v32;
        do
        {
          sub_1A55530FC(*(_QWORD *)(a1 + 48) + 48 * v33, (uint64_t)v100);
          v35 = *(_QWORD *)&v100[0];
          v36 = v93;
          sub_1A55530FC((uint64_t)v100, (uint64_t)v88);
          sub_1A55530FC((uint64_t)&v93, (uint64_t)v90);
          if (v35 == v36)
          {
            v37 = MEMORY[0x1A85AEB14]((char *)v88 + 8, v91);
            sub_1A5553138((uint64_t)v90);
            sub_1A5553138((uint64_t)v88);
            sub_1A5553138((uint64_t)v100);
            if ((v37 & 1) != 0)
            {
              result = sub_1A5553208((uint64_t)&v92);
              *(_OWORD *)v85 = 0u;
              *(_OWORD *)(v85 + 16) = 0u;
              *(_OWORD *)(v85 + 32) = 0u;
              *(_BYTE *)(v85 + 48) = -1;
              return result;
            }
          }
          else
          {
            sub_1A5553138((uint64_t)v90);
            sub_1A5553138((uint64_t)v88);
            sub_1A5553138((uint64_t)v100);
          }
          v33 = (v33 + 1) & v34;
        }
        while (((*(_QWORD *)(a1 + 56 + ((v33 >> 3) & 0xFFFFFFFFFFFFF8)) >> v33) & 1) != 0);
      }
    }
    goto LABEL_45;
  }
  if ((BYTE1(v106) & 1) == 0)
    goto LABEL_16;
  sub_1A55032A0((uint64_t)&v106 + 8, (uint64_t)v108, (uint64_t *)&unk_1EE797E40);
  v38 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v92 = sub_1A558B428(MEMORY[0x1E0DEE9D8]);
  *((_QWORD *)&v92 + 1) = sub_1A558B6F4(v38);
  sub_1A55530D0(v108);
  if (qword_1EE797CF8 != -1)
    swift_once();
  v83 = v3;
  sub_1A55530FC((uint64_t)&qword_1EE7F9278, (uint64_t)&v93);
  strcpy((char *)v96, "ListMailboxes");
  HIWORD(v96[1]) = -4864;
  v97 = v18 & 1;
  sub_1A55032A0((uint64_t)v108, (uint64_t)v98, (uint64_t *)&unk_1EE797E40);
  v99 = v19;
  if (!*(_QWORD *)(a1 + 16)
    || (sub_1A594CE64(),
        sub_1A594C6A8(),
        v39 = sub_1A594CED0(),
        v40 = -1 << *(_BYTE *)(a1 + 32),
        v41 = v39 & ~v40,
        ((*(_QWORD *)(a1 + 56 + ((v41 >> 3) & 0xFFFFFFFFFFFFF8)) >> v41) & 1) == 0))
  {
LABEL_45:
    *(_QWORD *)(v85 + 24) = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797978);
    *(_QWORD *)(v85 + 32) = sub_1A54E2E30(&qword_1EE797970, &qword_1EE797978, (uint64_t)&unk_1A59A7DE0);
    v46 = swift_allocObject();
    *(_QWORD *)v85 = v46;
    sub_1A55531CC((uint64_t)&v92, v46 + 16);
    v47 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v46 + 136) = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v46 + 144) = v47;
    *(_BYTE *)(v85 + 48) = 0;
    return sub_1A5553208((uint64_t)&v92);
  }
  v42 = ~v40;
  while (1)
  {
    sub_1A55530FC(*(_QWORD *)(a1 + 48) + 48 * v41, (uint64_t)v100);
    v43 = *(_QWORD *)&v100[0];
    v44 = v93;
    sub_1A55530FC((uint64_t)v100, (uint64_t)v88);
    sub_1A55530FC((uint64_t)&v93, (uint64_t)v90);
    if (v43 == v44)
      break;
    sub_1A5553138((uint64_t)v90);
    sub_1A5553138((uint64_t)v88);
    sub_1A5553138((uint64_t)v100);
LABEL_41:
    v41 = (v41 + 1) & v42;
    if (((*(_QWORD *)(a1 + 56 + ((v41 >> 3) & 0xFFFFFFFFFFFFF8)) >> v41) & 1) == 0)
      goto LABEL_45;
  }
  v45 = MEMORY[0x1A85AEB14]((char *)v88 + 8, v91);
  sub_1A5553138((uint64_t)v90);
  sub_1A5553138((uint64_t)v88);
  sub_1A5553138((uint64_t)v100);
  if ((v45 & 1) == 0)
    goto LABEL_41;
  sub_1A5553208((uint64_t)&v92);
  v3 = v83;
  a2 = v85;
LABEL_16:
  v20 = *(_OWORD *)(v3 + 192);
  v100[2] = *(_OWORD *)(v3 + 176);
  v101[0] = v20;
  *(_OWORD *)((char *)v101 + 12) = *(_OWORD *)(v3 + 204);
  v21 = *(_OWORD *)(v3 + 160);
  v100[0] = *(_OWORD *)(v3 + 144);
  v100[1] = v21;
  v22 = sub_1A551EE58();
  sub_1A562FDF8((uint64_t)v22, (uint64_t)v88);
  if (!*(_QWORD *)&v88[0])
  {
    sub_1A5510284((uint64_t)v88, &qword_1EE797B10);
    goto LABEL_48;
  }
  v94 = v88[2];
  v95 = v88[3];
  v96[0] = v89;
  v92 = v88[0];
  v93 = v88[1];
  if (!*(_QWORD *)(a1 + 16)
    || (sub_1A594CE64(),
        sub_1A594C6A8(),
        v23 = sub_1A594CED0(),
        v24 = -1 << *(_BYTE *)(a1 + 32),
        v25 = v23 & ~v24,
        ((*(_QWORD *)(a1 + 56 + ((v25 >> 3) & 0xFFFFFFFFFFFFF8)) >> v25) & 1) == 0))
  {
LABEL_46:
    *(_QWORD *)(v85 + 24) = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE795C08);
    *(_QWORD *)(v85 + 32) = sub_1A54E2E30(&qword_1EE797980, &qword_1EE795C08, (uint64_t)&unk_1A59A7DE0);
    v48 = swift_allocObject();
    *(_QWORD *)v85 = v48;
    sub_1A5553470((uint64_t)&v92, v48 + 16);
    v49 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v48 + 88) = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v48 + 96) = v49;
    *(_BYTE *)(v85 + 48) = 0;
    return sub_1A55534AC((uint64_t)&v92);
  }
  v26 = ~v24;
  while (2)
  {
    sub_1A55530FC(*(_QWORD *)(a1 + 48) + 48 * v25, (uint64_t)v88);
    v27 = *(_QWORD *)&v88[0];
    v28 = *((_QWORD *)&v92 + 1);
    sub_1A55530FC((uint64_t)v88, (uint64_t)v90);
    sub_1A55530FC((uint64_t)&v92 + 8, (uint64_t)&v86);
    if (v27 != v28)
    {
      sub_1A5553138((uint64_t)&v86);
      sub_1A5553138((uint64_t)v90);
      sub_1A5553138((uint64_t)v88);
      goto LABEL_21;
    }
    v29 = MEMORY[0x1A85AEB14](v91, v87);
    sub_1A5553138((uint64_t)&v86);
    sub_1A5553138((uint64_t)v90);
    sub_1A5553138((uint64_t)v88);
    if ((v29 & 1) == 0)
    {
LABEL_21:
      v25 = (v25 + 1) & v26;
      if (((*(_QWORD *)(a1 + 56 + ((v25 >> 3) & 0xFFFFFFFFFFFFF8)) >> v25) & 1) == 0)
        goto LABEL_46;
      continue;
    }
    break;
  }
  sub_1A55534AC((uint64_t)&v92);
  a2 = v85;
LABEL_48:
  sub_1A55212B8(v100, v102);
  result = (uint64_t)sub_1A55212B8(v102, &v113);
  if (v114 != 1)
    goto LABEL_13;
  v50 = *(_QWORD *)(sub_1A55125F4() + 16);
  swift_bridgeObjectRelease();
  if (v50)
  {
    v51 = a2;
    v96[0] = sub_1A55125F4();
    v96[1] = MEMORY[0x1E0DEE9E8];
    *((_QWORD *)&v95 + 1) = 0x80000001A5A0E280;
    *(_QWORD *)&v95 = 0xD000000000000010;
    *(_QWORD *)&v92 = &type metadata for CreateMailboxes;
    LOBYTE(v88[0]) = 1;
    sub_1A594C6B4();
    if (*(_QWORD *)(a1 + 16))
    {
      sub_1A594CE64();
      sub_1A594C6A8();
      v52 = sub_1A594CED0();
      v53 = -1 << *(_BYTE *)(a1 + 32);
      v54 = v52 & ~v53;
      if (((*(_QWORD *)(a1 + 56 + ((v54 >> 3) & 0xFFFFFFFFFFFFF8)) >> v54) & 1) != 0)
      {
        v55 = ~v53;
        do
        {
          sub_1A55530FC(*(_QWORD *)(a1 + 48) + 48 * v54, (uint64_t)v88);
          v56 = *(_QWORD *)&v88[0];
          v57 = v92;
          sub_1A55530FC((uint64_t)v88, (uint64_t)v90);
          sub_1A55530FC((uint64_t)&v92, (uint64_t)&v86);
          if (v56 == v57)
          {
            v58 = MEMORY[0x1A85AEB14](v91, v87);
            sub_1A5553138((uint64_t)&v86);
            sub_1A5553138((uint64_t)v90);
            sub_1A5553138((uint64_t)v88);
            if ((v58 & 1) != 0)
            {
              result = sub_1A55532C4((uint64_t)&v92);
              goto LABEL_79;
            }
          }
          else
          {
            sub_1A5553138((uint64_t)&v86);
            sub_1A5553138((uint64_t)v90);
            sub_1A5553138((uint64_t)v88);
          }
          v54 = (v54 + 1) & v55;
        }
        while (((*(_QWORD *)(a1 + 56 + ((v54 >> 3) & 0xFFFFFFFFFFFFF8)) >> v54) & 1) != 0);
      }
    }
    *(_QWORD *)(a2 + 24) = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8830);
    *(_QWORD *)(a2 + 32) = sub_1A54E2E30(&qword_1EE7A8838, &qword_1EE7A8830, (uint64_t)&unk_1A59A7DE0);
    v59 = swift_allocObject();
    *(_QWORD *)a2 = v59;
    sub_1A5553288((uint64_t)&v92, v59 + 16);
    v60 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v59 + 96) = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v59 + 104) = v60;
    *(_BYTE *)(a2 + 48) = 0;
    return sub_1A55532C4((uint64_t)&v92);
  }
  v61 = *(_QWORD *)(sub_1A55125EC() + 16);
  swift_bridgeObjectRelease();
  if (v61 && !sub_1A5544F88(3, *(_QWORD *)(v3 + 224)))
  {
    v51 = a2;
    v73 = sub_1A55125EC();
    sub_1A55B0E50(v73, &v92);
    if (!*(_QWORD *)(a1 + 16)
      || (sub_1A594CE64(),
          sub_1A594C6A8(),
          v74 = sub_1A594CED0(),
          v75 = -1 << *(_BYTE *)(a1 + 32),
          v76 = v74 & ~v75,
          ((*(_QWORD *)(a1 + 56 + ((v76 >> 3) & 0xFFFFFFFFFFFFF8)) >> v76) & 1) == 0))
    {
LABEL_80:
      *(_QWORD *)(a2 + 24) = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8840);
      *(_QWORD *)(a2 + 32) = sub_1A54E2E30(&qword_1EE7A8848, &qword_1EE7A8840, (uint64_t)&unk_1A59A7DE0);
      v81 = swift_allocObject();
      *(_QWORD *)a2 = v81;
      sub_1A55532FC((uint64_t)&v92, v81 + 16);
      v82 = MEMORY[0x1E0DEE9D8];
      *(_QWORD *)(v81 + 88) = MEMORY[0x1E0DEE9D8];
      *(_QWORD *)(v81 + 96) = v82;
      *(_BYTE *)(a2 + 48) = 0;
      return sub_1A5553338((uint64_t)&v92);
    }
    v77 = ~v75;
    while (1)
    {
      sub_1A55530FC(*(_QWORD *)(a1 + 48) + 48 * v76, (uint64_t)v88);
      v78 = *(_QWORD *)&v88[0];
      v79 = v92;
      sub_1A55530FC((uint64_t)v88, (uint64_t)v90);
      sub_1A55530FC((uint64_t)&v92, (uint64_t)&v86);
      if (v78 == v79)
      {
        v80 = MEMORY[0x1A85AEB14](v91, v87);
        sub_1A5553138((uint64_t)&v86);
        sub_1A5553138((uint64_t)v90);
        sub_1A5553138((uint64_t)v88);
        if ((v80 & 1) != 0)
        {
          result = sub_1A5553338((uint64_t)&v92);
LABEL_79:
          *(_OWORD *)v51 = 0u;
          *(_OWORD *)(v51 + 16) = 0u;
          *(_OWORD *)(v51 + 32) = 0u;
          *(_BYTE *)(v51 + 48) = -1;
          return result;
        }
      }
      else
      {
        sub_1A5553138((uint64_t)&v86);
        sub_1A5553138((uint64_t)v90);
        sub_1A5553138((uint64_t)v88);
      }
      v76 = (v76 + 1) & v77;
      if (((*(_QWORD *)(a1 + 56 + ((v76 >> 3) & 0xFFFFFFFFFFFFF8)) >> v76) & 1) == 0)
        goto LABEL_80;
    }
  }
  v62 = *(_QWORD *)(sub_1A55128F4() + 16);
  result = swift_bridgeObjectRelease();
  if (!v62)
    goto LABEL_13;
  v51 = a2;
  v63 = sub_1A55128F4();
  *((_QWORD *)&v95 + 1) = MEMORY[0x1E0DEE9E8];
  v96[0] = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)&v95 = v63;
  *(_QWORD *)&v92 = &type metadata for RenameMailboxes;
  LOBYTE(v88[0]) = 1;
  sub_1A594C6B4();
  if (*(_QWORD *)(a1 + 16))
  {
    sub_1A594CE64();
    sub_1A594C6A8();
    v64 = sub_1A594CED0();
    v65 = -1 << *(_BYTE *)(a1 + 32);
    v66 = v64 & ~v65;
    if (((*(_QWORD *)(a1 + 56 + ((v66 >> 3) & 0xFFFFFFFFFFFFF8)) >> v66) & 1) != 0)
    {
      v67 = ~v65;
      do
      {
        sub_1A55530FC(*(_QWORD *)(a1 + 48) + 48 * v66, (uint64_t)v88);
        v68 = *(_QWORD *)&v88[0];
        v69 = v92;
        sub_1A55530FC((uint64_t)v88, (uint64_t)v90);
        sub_1A55530FC((uint64_t)&v92, (uint64_t)&v86);
        if (v68 == v69)
        {
          v70 = MEMORY[0x1A85AEB14](v91, v87);
          sub_1A5553138((uint64_t)&v86);
          sub_1A5553138((uint64_t)v90);
          sub_1A5553138((uint64_t)v88);
          if ((v70 & 1) != 0)
          {
            result = sub_1A55533F8((uint64_t)&v92);
            goto LABEL_79;
          }
        }
        else
        {
          sub_1A5553138((uint64_t)&v86);
          sub_1A5553138((uint64_t)v90);
          sub_1A5553138((uint64_t)v88);
        }
        v66 = (v66 + 1) & v67;
      }
      while (((*(_QWORD *)(a1 + 56 + ((v66 >> 3) & 0xFFFFFFFFFFFFF8)) >> v66) & 1) != 0);
    }
  }
  *(_QWORD *)(a2 + 24) = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8850);
  *(_QWORD *)(a2 + 32) = sub_1A54E2E30(&qword_1EE7A8858, &qword_1EE7A8850, (uint64_t)&unk_1A59A7DE0);
  v71 = swift_allocObject();
  *(_QWORD *)a2 = v71;
  sub_1A55533BC((uint64_t)&v92, v71 + 16);
  v72 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v71 + 88) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v71 + 96) = v72;
  *(_BYTE *)(a2 + 48) = 0;
  return sub_1A55533F8((uint64_t)&v92);
}

uint64_t sub_1A5547BBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t result;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  unsigned __int8 *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v3 = v2;
  v6 = *(_QWORD *)(v3 + 144);
  v7 = *(_QWORD *)(v3 + 152);
  v8 = *(_QWORD *)(v3 + 160);
  v9 = *(_BYTE *)(v3 + 168);
  sub_1A55212D0(v6, v7, v8, v9);
  v10 = sub_1A55134EC(a1, a2);
  if ((v9 & 1) == 0)
  {
    sub_1A54E8FCC(v6, v7, v8, 0);
    if (*(_QWORD *)(v3 + 96))
      goto LABEL_31;
    return v10;
  }
  v35 = v8;
  v36 = v7;
  v39 = v3;
  v37 = v6;
  v11 = sub_1A5544CF0(v6);
  v12 = sub_1A55527EC(v11);
  swift_bridgeObjectRelease();
  v13 = sub_1A5544DC4(a1);
  v14 = sub_1A55527EC(v13);
  swift_bridgeObjectRelease();
  v38 = v10;
  if (*(_QWORD *)(v12 + 16) <= *(_QWORD *)(v14 + 16) >> 3)
    sub_1A5588EC0(v12);
  else
    sub_1A5587014(v12, v14);
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v3 + 56);
  v40 = v15 + 64;
  v16 = 1 << *(_BYTE *)(v15 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & *(_QWORD *)(v15 + 64);
  v19 = (unint64_t)(v16 + 63) >> 6;
  result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v21 = 0;
  while (1)
  {
    if (v18)
    {
      v24 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v25 = v24 | (v21 << 6);
      goto LABEL_28;
    }
    v26 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
LABEL_35:
      __break(1u);
      return result;
    }
    if (v26 >= v19)
      goto LABEL_30;
    v27 = *(_QWORD *)(v40 + 8 * v26);
    ++v21;
    if (!v27)
    {
      v21 = v26 + 1;
      if (v26 + 1 >= v19)
        goto LABEL_30;
      v27 = *(_QWORD *)(v40 + 8 * v21);
      if (!v27)
      {
        v21 = v26 + 2;
        if (v26 + 2 >= v19)
          goto LABEL_30;
        v27 = *(_QWORD *)(v40 + 8 * v21);
        if (!v27)
          break;
      }
    }
LABEL_27:
    v18 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v21 << 6);
LABEL_28:
    v29 = *(unsigned int *)(*(_QWORD *)(v15 + 48) + 4 * v25);
    v30 = (unsigned __int8 *)(*(_QWORD *)(v15 + 56) + 24 * v25);
    v31 = *v30;
    v32 = *((_QWORD *)v30 + 1);
    if (v32)
    {
      swift_bridgeObjectRetain_n();
      v22 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v23 = sub_1A55733CC(v22, v32);
    }
    else
    {
      v23 = 0;
    }
    sub_1A5519EDC(v29, v31, v32, v23);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v28 = v26 + 3;
  if (v28 < v19)
  {
    v27 = *(_QWORD *)(v40 + 8 * v28);
    if (!v27)
    {
      while (1)
      {
        v21 = v28 + 1;
        if (__OFADD__(v28, 1))
          goto LABEL_35;
        if (v21 >= v19)
          goto LABEL_30;
        v27 = *(_QWORD *)(v40 + 8 * v21);
        ++v28;
        if (v27)
          goto LABEL_27;
      }
    }
    v21 = v28;
    goto LABEL_27;
  }
LABEL_30:
  swift_bridgeObjectRelease();
  sub_1A54E8FCC(v37, v36, v35, 1);
  swift_release();
  v10 = v38;
  v3 = v39;
  if (!*(_QWORD *)(v39 + 96))
    return v10;
LABEL_31:
  if (*(_BYTE *)(v3 + 168) == 1)
  {
    v33 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v34 = sub_1A5547EF0(v33);
    swift_bridgeObjectRelease();
    sub_1A551EAD8(v34);
    swift_bridgeObjectRelease();
  }
  return v10;
}

uint64_t sub_1A5547EF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  int v43;
  uint64_t v44;

  v2 = MEMORY[0x1E0DEE9E0];
  v3 = a1 + 64;
  v44 = MEMORY[0x1E0DEE9E0];
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v7 = (unint64_t)(63 - v4) >> 6;
  result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v9 = 0;
  if (!v6)
    goto LABEL_8;
LABEL_5:
  v10 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  v11 = v10 | (v9 << 6);
  while (1)
  {
    v12 = *(_QWORD *)(a1 + 56) + 72 * v11;
    if ((*(_BYTE *)(v12 + 65) & 1) != 0)
    {
      if (v6)
        goto LABEL_5;
    }
    else
    {
      v17 = *(_QWORD *)(a1 + 48) + 16 * v11;
      v43 = *(_DWORD *)(v17 + 8);
      v18 = *(_QWORD *)(v12 + 32);
      v36 = *(_QWORD *)(v12 + 24);
      v37 = *(_QWORD *)v17;
      v20 = *(_QWORD *)(v12 + 40);
      v19 = *(_QWORD *)(v12 + 48);
      v21 = *(_QWORD *)(v12 + 56);
      v22 = *(_BYTE *)(v12 + 64);
      v23 = *(_QWORD *)(v2 + 16);
      v42 = v21;
      v41 = v22;
      v39 = v20;
      v40 = v19;
      v38 = v18;
      if (*(_QWORD *)(v2 + 24) <= v23)
      {
        v24 = v23 + 1;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A5582888(v24, 1);
        v2 = v44;
      }
      else
      {
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      }
      sub_1A594CE64();
      sub_1A594CE88();
      result = sub_1A594CED0();
      v25 = v2 + 64;
      v26 = -1 << *(_BYTE *)(v2 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v2 + 64 + 8 * (v27 >> 6))) == 0)
      {
        v30 = 0;
        v31 = (unint64_t)(63 - v26) >> 6;
        while (++v28 != v31 || (v30 & 1) == 0)
        {
          v32 = v28 == v31;
          if (v28 == v31)
            v28 = 0;
          v30 |= v32;
          v33 = *(_QWORD *)(v25 + 8 * v28);
          if (v33 != -1)
          {
            v29 = __clz(__rbit64(~v33)) + (v28 << 6);
            goto LABEL_37;
          }
        }
        goto LABEL_41;
      }
      v29 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v2 + 64 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
LABEL_37:
      *(_QWORD *)(v25 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
      v34 = *(_QWORD *)(v2 + 48) + 16 * v29;
      *(_QWORD *)v34 = v37;
      *(_DWORD *)(v34 + 8) = v43;
      v35 = *(_QWORD *)(v2 + 56) + 48 * v29;
      *(_QWORD *)v35 = v36;
      *(_QWORD *)(v35 + 8) = v38;
      *(_QWORD *)(v35 + 16) = v39;
      *(_BYTE *)(v35 + 24) = v40 & 1;
      *(_QWORD *)(v35 + 32) = v42;
      *(_BYTE *)(v35 + 40) = v41 & 1;
      ++*(_QWORD *)(v2 + 16);
      result = swift_bridgeObjectRelease();
      if (v6)
        goto LABEL_5;
    }
LABEL_8:
    v13 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v13 >= v7)
      goto LABEL_39;
    v14 = *(_QWORD *)(v3 + 8 * v13);
    v15 = v9 + 1;
    if (!v14)
    {
      v15 = v9 + 2;
      if (v9 + 2 >= v7)
        goto LABEL_39;
      v14 = *(_QWORD *)(v3 + 8 * v15);
      if (!v14)
      {
        v15 = v9 + 3;
        if (v9 + 3 >= v7)
          goto LABEL_39;
        v14 = *(_QWORD *)(v3 + 8 * v15);
        if (!v14)
        {
          v15 = v9 + 4;
          if (v9 + 4 >= v7)
            goto LABEL_39;
          v14 = *(_QWORD *)(v3 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v14 - 1) & v14;
    v11 = __clz(__rbit64(v14)) + (v15 << 6);
    v9 = v15;
  }
  v16 = v9 + 5;
  if (v9 + 5 >= v7)
  {
LABEL_39:
    sub_1A550F72C();
    return v2;
  }
  v14 = *(_QWORD *)(v3 + 8 * v16);
  if (v14)
  {
    v15 = v9 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v7)
      goto LABEL_39;
    v14 = *(_QWORD *)(v3 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_23;
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1A5548260(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t result;
  unint64_t v20;
  char v23;

  v23 = sub_1A5513454();
  v3 = *(_BYTE *)(v2 + 17);
  v4 = *(_QWORD *)(v2 + 24);
  v5 = *(_QWORD *)(v2 + 40);
  v6 = *(_BYTE *)(v2 + 32);
  v7 = *(unsigned __int8 *)(v2 + 16);
  v8 = *(_BYTE *)(v2 + 10);
  v9 = *(_QWORD *)(v2 + 48);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v10 = sub_1A558E3A4();
  v20 = sub_1A558E7E0(v7, v3, v4, v6, v5, v8, v9, v10);
  sub_1A5548534(a1, a2);
  v11 = BYTE1(*(_OWORD *)(v2 + 16));
  v12 = *(_QWORD *)(v2 + 24);
  LOBYTE(v9) = BYTE2(*(_QWORD *)(v2 + 8));
  v13 = *(_QWORD *)(v2 + 40);
  v14 = *(_QWORD *)(v2 + 48);
  v15 = *(_OWORD *)(v2 + 32);
  v16 = *(_OWORD *)(v2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v17 = sub_1A558E3A4();
  v18 = sub_1A558E7E0(v16, v11 & 1, v12, v15, v13, v9, v14, v17);
  result = sub_1A558EA48(v20 & 0x1010101FFFF01, v18 & 0x1010101FFFF01);
  if ((result & 1) == 0)
    result = sub_1A5548DA4(v20 & 0x1010101FFFF01);
  if ((v23 & 1) != 0)
  {
    result = sub_1A5513454();
    if ((result & 1) == 0)
      *(_BYTE *)(v2 + 113) = 0;
  }
  return result;
}

void sub_1A5548534(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  int v13;
  __uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  __int128 *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  __int128 v40;
  int v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char v49;
  int v50;
  char v51;
  int v52;
  char v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  int v65;
  int v66;
  int v67;
  uint64_t v68;
  char v69;
  NSObject *v70;
  os_log_type_t v71;
  uint64_t v72;
  int v73;
  int v74;
  int v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  _QWORD v85[73];
  uint64_t v86[73];
  _BYTE v87[48];
  __int128 v88;
  _BYTE v89[25];
  char v90;
  __int128 v91;
  _OWORD v92[2];
  uint64_t v93;
  char v94;
  uint64_t v95;
  char v96;
  int v97;
  char v98;
  int v99;
  char v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  char v106;
  __int128 v107;
  __int128 v108;
  uint64_t v109;
  _OWORD v110[11];
  uint64_t v111[7];
  unint64_t v112;
  uint64_t v113;
  _QWORD v114[3];

  v3 = v2;
  v6 = a1 >> 62;
  if (a1 >> 62)
  {
    if ((_DWORD)v6 == 1 && (*(_BYTE *)(a1 + 24) & 1) != 0)
    {
      v7 = *(_QWORD *)(a1 + 16);
      v8 = (v7 >> 59) & 0x1E | (v7 >> 2) & 1;
      if (v8)
      {
        if (v8 == 17)
        {
          v83 = a1 >> 62;
          v59 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
          swift_retain_n();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_53();
          swift_bridgeObjectRetain_n();
          v60 = sub_1A594A74C();
          v61 = sub_1A594C000();
          if (os_log_type_enabled(v60, v61))
          {
            v62 = swift_slowAlloc();
            *(_DWORD *)v62 = 68158208;
            LODWORD(v86[0]) = 2;
            sub_1A594C3CC();
            *(_WORD *)(v62 + 8) = 256;
            v63 = *(_BYTE *)(a2 + OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id);
            swift_release();
            LOBYTE(v86[0]) = v63;
            sub_1A594C3CC();
            swift_release();
            *(_WORD *)(v62 + 11) = 2048;
            v64 = *(_QWORD *)(v59 + 16);
            swift_bridgeObjectRelease();
            v86[0] = v64;
            sub_1A594C3CC();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1A4F90000, v60, v61, "[%.*hhx] Setting %ld search requests.", (uint8_t *)v62, 0x15u);
            MEMORY[0x1A85B1964](v62, -1, -1);

          }
          else
          {

            swift_release_n();
            swift_bridgeObjectRelease_n();
          }
          if (*(_QWORD *)(v3 + 96))
            v79 = *(_QWORD *)(v3 + 96);
          else
            v79 = sub_1A558B428(MEMORY[0x1E0DEE9D8]);
          v111[0] = v79;
          v111[1] = (uint64_t)sub_1A5549244;
          v111[2] = 0;
          v111[3] = (uint64_t)sub_1A55522B4;
          v111[4] = 0;
          v111[5] = (uint64_t)sub_1A55522C4;
          v111[6] = 0;
          v86[0] = MEMORY[0x1E0DEE9E0];
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A5551BE4(v111, 1, v86);
          swift_bridgeObjectRelease();
          sub_1A55154B0(v59, v86[0]);
          swift_release();
          LODWORD(v6) = v83;
        }
        else if (v8 == 1)
        {
          v9 = v7 & 0xFFFFFFFFFFFFFFBLL;
          v10 = *(unsigned int *)(v9 + 16);
          v11 = *(_QWORD *)(v9 + 32);
          v12 = *(_BYTE *)(v9 + 24);
          v13 = a1 >> 62;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v14 = static MonotonicTime.now()();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v86[0] = *(_QWORD *)(v2 + 56);
          *(_QWORD *)(v2 + 56) = 0x8000000000000000;
          sub_1A55B2ADC(v12, v11, v14, v10, isUniquelyReferenced_nonNull_native);
          *(_QWORD *)(v2 + 56) = v86[0];
          swift_bridgeObjectRelease();
          LODWORD(v6) = v13;
        }
      }
      else
      {
        v65 = *(unsigned __int8 *)(v7 + 16);
        v66 = *(unsigned __int8 *)(v7 + 17);
        v67 = *(unsigned __int8 *)(v7 + 18);
        v68 = *(_QWORD *)(v7 + 24);
        v69 = *(_BYTE *)(v7 + 32);
        v82 = *(_QWORD *)(v7 + 40);
        v84 = a1 >> 62;
        swift_retain();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53();
        v70 = sub_1A594A74C();
        v71 = sub_1A594C030();
        if (os_log_type_enabled(v70, v71))
        {
          v81 = v68;
          v72 = swift_slowAlloc();
          v80 = swift_slowAlloc();
          v86[0] = v80;
          *(_DWORD *)v72 = 68158210;
          LODWORD(v85[0]) = 2;
          sub_1A594C3CC();
          *(_WORD *)(v72 + 8) = 256;
          LOBYTE(v85[0]) = *(_BYTE *)(a2 + OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id);
          sub_1A594C3CC();
          swift_release();
          *(_WORD *)(v72 + 11) = 2080;
          if (v66)
            v73 = 256;
          else
            v73 = 0;
          v74 = v73 | v65;
          if (v67)
            v75 = 0x10000;
          else
            v75 = 0;
          Environment.description.getter(v74 | v75, v81, v69);
          v85[0] = sub_1A55791B0(v76, v77, v86);
          sub_1A594C3CC();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1A4F90000, v70, v71, "[%.*hhx] Received environment update: %s", (uint8_t *)v72, 0x15u);
          swift_arrayDestroy();
          MEMORY[0x1A85B1964](v80, -1, -1);
          v78 = v72;
          v68 = v81;
          MEMORY[0x1A85B1964](v78, -1, -1);
        }
        else
        {
          swift_release();
        }

        *(_BYTE *)(v3 + 16) = v65;
        *(_BYTE *)(v3 + 17) = v66;
        *(_BYTE *)(v3 + 18) = v67;
        *(_QWORD *)(v3 + 24) = v68;
        *(_BYTE *)(v3 + 32) = v69;
        LODWORD(v6) = v84;
        *(_QWORD *)(v3 + 40) = v82;
      }
    }
  }
  else
  {
    v16 = *(_QWORD *)(a1 + 24);
    if (v16 >> 60 == 6)
    {
      v17 = *(_QWORD *)(v16 + 16);
      v18 = a1 >> 62;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      LODWORD(v6) = v18;
      *(_QWORD *)(v3 + 48) = v17;
    }
  }
  v19 = *(_QWORD *)(v3 + 64);
  if (v19 == 2)
  {
    v20 = v6;
    v21 = ServerID.empty.unsafeMutableAddressor();
    v23 = v21[1];
    v22 = v21[2];
    v110[0] = *v21;
    v110[1] = v23;
    v110[2] = v22;
    v24 = v21[5];
    v26 = v21[3];
    v25 = v21[4];
    v110[6] = v21[6];
    v110[5] = v24;
    v110[3] = v26;
    v110[4] = v25;
    v27 = v21[9];
    v29 = v21[7];
    v28 = v21[8];
    v110[10] = v21[10];
    v110[9] = v27;
    v110[7] = v29;
    v110[8] = v28;
    sub_1A55425D8((uint64_t)v110);
    v30 = sub_1A55422C0(MEMORY[0x1E0DEE9E8], v110);
    LODWORD(v6) = v20;
    v19 = v30;
    v32 = v31;
    v34 = v33;
    LODWORD(v36) = v35 & 1;
    LODWORD(v37) = (v35 >> 8) & 1;
    if ((_DWORD)v6)
    {
LABEL_12:
      if ((_DWORD)v6 == 1)
      {
        v38 = *(_QWORD *)(a1 + 16);
        v39 = *(_BYTE *)(a1 + 24);
        sub_1A5524688(v38, v39);
        sub_1A551DE08(v38, v39);
        sub_1A552469C(v38, v39);
      }
      sub_1A553F62C(a1);
      return;
    }
  }
  else
  {
    v34 = *(_BYTE *)(v3 + 88);
    v32 = *(_QWORD *)(v3 + 80);
    v36 = *(_QWORD *)(v3 + 72) & 1;
    v37 = (*(_QWORD *)(v3 + 72) >> 8) & 1;
    if ((_DWORD)v6)
      goto LABEL_12;
  }
  v40 = *(_OWORD *)(a1 + 32);
  v107 = *(_OWORD *)(a1 + 16);
  v108 = v40;
  v109 = *(_QWORD *)(a1 + 48);
  sub_1A5523130((_QWORD *)&v107 + 1, &v112);
  v113 = v109;
  v114[0] = *((_QWORD *)&v108 + 1);
  sub_1A55535D8(&v112);
  sub_1A54FCA28((uint64_t)v114);
  sub_1A54FCA28((uint64_t)&v113);
  if ((_DWORD)v37)
    v41 = 256;
  else
    v41 = 0;
  sub_1A551D03C((uint64_t)&v107, v19 & 0xFF01010101010101, v41 | v36, v32, v34 & 1);
  sub_1A5553600(&v112);
  sub_1A54F81BC((uint64_t)v114);
  sub_1A54F81BC((uint64_t)&v113);
  sub_1A553F62C(a1);
  v42 = *(_QWORD *)(a1 + 24);
  if (v42 >> 60 == 3)
  {
    sub_1A552316C((const void *)((v42 & 0xFFFFFFFFFFFFFFFLL) + 16), v85);
    sub_1A552316C(v85, v86);
    if (sub_1A5523B90((uint64_t)v86) == 9)
    {
      v43 = sub_1A5524678((uint64_t)v86);
      v44 = *(_QWORD *)v43;
      v45 = *(_DWORD *)(v43 + 8);
      v46 = *(_QWORD *)(v43 + 16);
      v47 = *(_BYTE *)(v43 + 24);
      v48 = *(_QWORD *)(v43 + 32);
      v49 = *(_BYTE *)(v43 + 40);
      v50 = *(_DWORD *)(v43 + 44);
      v51 = *(_BYTE *)(v43 + 48);
      v52 = *(_DWORD *)(v43 + 52);
      v53 = *(_BYTE *)(v43 + 56);
      v54 = *(_QWORD *)(v43 + 64);
      v55 = *(_BYTE *)(v43 + 72);
      v56 = *(_QWORD *)(v43 + 80);
      v57 = *(_BYTE *)(v43 + 88);
      v58 = *(_QWORD *)(v43 + 96);
      LOBYTE(v43) = *(_BYTE *)(v43 + 104);
      v93 = v46;
      v94 = v47;
      v95 = v48;
      v96 = v49;
      v97 = v50;
      v98 = v51;
      v99 = v52;
      v100 = v53;
      v101 = v54;
      v102 = v55;
      v103 = v56;
      v104 = v57;
      v105 = v58;
      v106 = v43;
      RemoteMailbox.Status.init(_:)((uint64_t)&v93, (uint64_t)v87);
      sub_1A55032A0((uint64_t)v87, (uint64_t)&v88, &qword_1EE7983C0);
      if (v90 != 1)
      {
        v91 = v88;
        v92[0] = *(_OWORD *)v89;
        *(_OWORD *)((char *)v92 + 9) = *(_OWORD *)&v89[9];
        sub_1A5541A18(v42);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A5523B9C(v85, sub_1A55231A8);
        sub_1A551EC6C(v44, v45, (uint64_t)&v91);
        sub_1A5523B9C(v85, sub_1A5523C88);
        sub_1A5541AA0(v42);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
  }
}

uint64_t sub_1A5548DA4(uint64_t a1)
{
  __int128 *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t result;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t i;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int16 v33;
  __int16 v34;
  _QWORD *v35;
  uint64_t v36;
  __int128 *v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  int v41;
  __int128 v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  __int128 v46;
  char v47;
  char v48;
  __int128 v49;
  char v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  char v54;
  char v55;
  char v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int64_t v65;
  uint64_t v66;
  char v67;
  char v68;
  char v69;
  uint64_t v70;
  char v71;
  char v72;
  char v73;
  char v74;
  char v75;
  char v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;
  char v83;
  __int128 v84;
  char v85;
  char v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  __int128 v93;
  uint64_t v94;
  __int128 v95;
  int v96;
  uint64_t v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  _BYTE v105[32];
  __int128 v106;
  __int128 v107;
  __int128 v108;
  _BYTE v109[32];
  uint64_t v110;

  v3 = v1[13];
  *(_OWORD *)v109 = v1[12];
  *(_OWORD *)&v109[16] = v3;
  v110 = *((_QWORD *)v1 + 28);
  v4 = v1[9];
  *(_OWORD *)&v105[16] = v1[8];
  v106 = v4;
  v5 = v1[11];
  v107 = v1[10];
  v108 = v5;
  v6 = v1[5];
  v102 = v1[4];
  v103 = v6;
  v7 = v1[7];
  v104 = v1[6];
  *(_OWORD *)v105 = v7;
  v8 = v1[1];
  v98 = *v1;
  v99 = v8;
  v9 = v1[3];
  v100 = v1[2];
  v101 = v9;
  result = sub_1A5549298();
  v11 = 0;
  v38 = result + 56;
  v58 = v98;
  v59 = result;
  v12 = 1 << *(_BYTE *)(result + 32);
  v13 = -1;
  v57 = BYTE8(v98);
  v56 = BYTE9(v98);
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(result + 56);
  v55 = BYTE1(v99);
  v54 = BYTE2(v99);
  v52 = v102;
  v51 = v103;
  v50 = BYTE8(v103);
  v49 = v104;
  v47 = v105[1];
  v48 = v105[0];
  v46 = *(_OWORD *)&v105[8];
  v45 = *(_QWORD *)&v105[24];
  v15 = *((_QWORD *)&v106 + 1);
  v16 = v106;
  v17 = v107;
  v44 = v108;
  v43 = *(_QWORD *)v109;
  v42 = *(_OWORD *)&v109[8];
  v41 = *(_DWORD *)&v109[24];
  v36 = a1 & 0x1010101FFFF01;
  v37 = v1;
  v35 = (_QWORD *)v1 + 19;
  v53 = v101;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v40 = v110;
  v18 = BYTE8(v107);
  v19 = BYTE10(v98);
  v20 = v99;
  v21 = *((_QWORD *)&v99 + 1);
  v22 = v100;
  v23 = *((_QWORD *)&v100 + 1);
  v24 = v101;
  if (v14)
    goto LABEL_6;
LABEL_7:
  v26 = v11 + 1;
  if (!__OFADD__(v11, 1))
  {
    if (v26 < v39)
    {
      v27 = *(_QWORD *)(v38 + 8 * v26);
      v28 = v11 + 1;
      if (v27)
        goto LABEL_20;
      v28 = v11 + 2;
      if (v11 + 2 >= v39)
        return swift_release();
      v27 = *(_QWORD *)(v38 + 8 * v28);
      if (v27)
        goto LABEL_20;
      v28 = v11 + 3;
      if (v11 + 3 >= v39)
        return swift_release();
      v27 = *(_QWORD *)(v38 + 8 * v28);
      if (v27)
      {
LABEL_20:
        v64 = (v27 - 1) & v27;
        v65 = v28;
        for (i = __clz(__rbit64(v27)) + (v28 << 6); ; i = __clz(__rbit64(v14)) | (v11 << 6))
        {
          v30 = *(_QWORD *)(v59 + 48) + 16 * i;
          v31 = *(_QWORD *)v30;
          v60 = *(_DWORD *)(v30 + 8);
          v69 = v57;
          v68 = v48;
          v67 = v18 & 1;
          v70 = v58;
          v71 = v57;
          v72 = v56;
          v73 = v19;
          v74 = v20;
          v75 = v55;
          v76 = v54;
          v77 = v21;
          v78 = v22;
          v79 = v23;
          v80 = v53;
          v81 = v52;
          v82 = v51;
          v83 = v50;
          v84 = v49;
          v85 = v48;
          v86 = v47;
          v87 = v46;
          v88 = v45;
          v89 = v16;
          v90 = v15;
          v91 = v17;
          v92 = v18 & 1;
          v93 = v44;
          v94 = v43;
          v95 = v42;
          v96 = v41;
          v97 = v40;
          v62 = v17;
          v63 = v31;
          v61 = v15;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v32 = sub_1A558E3A4();
          v33 = sub_1A558E7E0(v20, v55, v21, v22, v23, v19, v24, v32);
          if ((v18 & 1) != 0)
          {
            v66 = v16;
            v34 = v33 & 0xFF01;
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            sub_1A551AF90((uint64_t)&v66, v63, v60, 0, v36, v34);
            sub_1A54E8FCC(v16, v61, v62, 1);
            result = swift_bridgeObjectRelease();
            v15 = 0;
            v17 = 0;
            v11 = v65;
            v16 = v66;
            *((_QWORD *)v37 + 18) = v66;
            *v35 = 0;
            v35[1] = 0;
            *((_BYTE *)v37 + 168) = 1;
            v14 = v64;
            if (!v64)
              goto LABEL_7;
          }
          else
          {
            result = swift_bridgeObjectRelease();
            v14 = v64;
            v11 = v65;
            v15 = v61;
            v17 = v62;
            if (!v64)
              goto LABEL_7;
          }
LABEL_6:
          v64 = (v14 - 1) & v14;
          v65 = v11;
        }
      }
      v29 = v11 + 4;
      if (v11 + 4 < v39)
      {
        v27 = *(_QWORD *)(v38 + 8 * v29);
        if (v27)
        {
          v28 = v11 + 4;
          goto LABEL_20;
        }
        while (1)
        {
          v28 = v29 + 1;
          if (__OFADD__(v29, 1))
            goto LABEL_26;
          if (v28 >= v39)
            return swift_release();
          v27 = *(_QWORD *)(v38 + 8 * v28);
          ++v29;
          if (v27)
            goto LABEL_20;
        }
      }
    }
    return swift_release();
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1A5549244@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  if ((*(_BYTE *)(a1 + 81) & 1) != 0)
  {
    result = 0;
    v4 = 0;
    v5 = 0;
  }
  else
  {
    v5 = *(_QWORD *)(a1 + 40);
    v4 = *(unsigned int *)(a1 + 8);
    result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  *a2 = result;
  a2[1] = v4;
  a2[2] = v5;
  return result;
}

uint64_t sub_1A5549298()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = MEMORY[0x1E0DEE9E8];
  if ((*(_BYTE *)(v0 + 168) & 1) != 0)
  {
    v2 = *(_QWORD *)(v0 + 144);
    v3 = *(_QWORD *)(v0 + 152);
    v4 = *(_QWORD *)(v0 + 160);
    v12 = MEMORY[0x1E0DEE9E8];
    v5 = *(_QWORD *)(v2 + 16);
    if (v5)
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v6 = (_QWORD *)(v2 + 128);
      v7 = (_QWORD *)(v2 + 128);
      do
      {
        v8 = *v7;
        v7 += 22;
        if (v8)
        {
          v9 = *((_DWORD *)v6 - 18);
          v10 = *(v6 - 10);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A54F2A14((uint64_t)&v11, v10, v9);
          swift_bridgeObjectRelease();
        }
        v6 = v7;
        --v5;
      }
      while (v5);
      sub_1A54E8FCC(v2, v3, v4, 1);
      return v12;
    }
  }
  return result;
}

uint64_t sub_1A5549364(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  char v37;
  unint64_t v38;
  char v39;
  unint64_t v40;
  int64_t v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47[6];

  v2 = v1;
  v4 = *(_QWORD *)(v1 + 56);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_1A5552F50;
  *(_QWORD *)(v6 + 24) = v5;
  v47[0] = v4;
  v47[1] = (uint64_t)sub_1A5552FD8;
  v47[2] = v6;
  v47[3] = (uint64_t)sub_1A55497BC;
  v47[4] = 0;
  swift_bridgeObjectRetain_n();
  swift_retain();
  v7 = sub_1A5544834(v47);
  v42 = v7 + 56;
  v8 = 1 << *(_BYTE *)(v7 + 32);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v7 + 56);
  v43 = (unint64_t)(v8 + 63) >> 6;
  result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v12 = 0;
  v44 = result;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v12 << 6);
    }
    else
    {
      v18 = v12 + 1;
      if (__OFADD__(v12, 1))
        goto LABEL_47;
      if (v18 >= v43)
      {
LABEL_45:
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        return v7;
      }
      v19 = *(_QWORD *)(v42 + 8 * v18);
      ++v12;
      if (!v19)
      {
        v12 = v18 + 1;
        if (v18 + 1 >= v43)
          goto LABEL_45;
        v19 = *(_QWORD *)(v42 + 8 * v12);
        if (!v19)
        {
          v12 = v18 + 2;
          if (v18 + 2 >= v43)
            goto LABEL_45;
          v19 = *(_QWORD *)(v42 + 8 * v12);
          if (!v19)
          {
            v20 = v18 + 3;
            if (v20 >= v43)
              goto LABEL_45;
            v19 = *(_QWORD *)(v42 + 8 * v20);
            if (!v19)
            {
              while (1)
              {
                v12 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_48;
                if (v12 >= v43)
                  goto LABEL_45;
                v19 = *(_QWORD *)(v42 + 8 * v12);
                ++v20;
                if (v19)
                  goto LABEL_22;
              }
            }
            v12 = v20;
          }
        }
      }
LABEL_22:
      v10 = (v19 - 1) & v19;
      v17 = __clz(__rbit64(v19)) + (v12 << 6);
    }
    v21 = *(unsigned int *)(*(_QWORD *)(v7 + 48) + 4 * v17);
    v22 = *(_QWORD *)(v2 + 144);
    v45 = *(_QWORD *)(v2 + 152);
    v14 = *(_QWORD *)(v2 + 160);
    v15 = *(_BYTE *)(v2 + 168);
    if ((v15 & 1) != 0)
      break;
    v36 = v12;
    result = sub_1A54FDC2C(v21);
    if ((v37 & 1) != 0)
    {
      v38 = result;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v13 = v45;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v24 = (_QWORD *)v22;
      if (!swift_isUniquelyReferenced_nonNull_native())
      {
        sub_1A554F8CC();
        v24 = (_QWORD *)v22;
      }
      sub_1A554E1B0(v38, (uint64_t)v24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = sub_1A54E8FCC(v22, v45, v14, 0);
      v12 = v36;
      v7 = v44;
    }
    else
    {
      v24 = (_QWORD *)v22;
      v12 = v36;
      v7 = v44;
      v13 = v45;
    }
LABEL_6:
    *(_QWORD *)(v2 + 144) = v24;
    *(_QWORD *)(v2 + 152) = v13;
    *(_QWORD *)(v2 + 160) = v14;
    *(_BYTE *)(v2 + 168) = v15;
  }
  if (!*(_QWORD *)(v22 + 16))
  {
    v13 = 0;
    v14 = 0;
    v24 = *(_QWORD **)(v2 + 144);
    goto LABEL_6;
  }
  v39 = *(_BYTE *)(v2 + 168);
  v40 = v10;
  v41 = v12;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v23 = 0;
  v24 = (_QWORD *)v22;
  while (1)
  {
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1A554B6F8(v24);
      v24 = (_QWORD *)result;
    }
    if (v23 >= v24[2])
      break;
    v26 = &v24[22 * v23];
    v29 = v26[21];
    v28 = v26 + 21;
    v27 = v29;
    sub_1A594CE64();
    sub_1A594CEAC();
    v30 = sub_1A594CED0();
    v31 = -1 << *(_BYTE *)(v29 + 32);
    v32 = v30 & ~v31;
    v33 = v29 + 56;
    if (((*(_QWORD *)(v29 + 56 + ((v32 >> 3) & 0xFFFFFFFFFFFFF8)) >> v32) & 1) != 0)
    {
      v34 = *(_QWORD *)(v27 + 48);
      if (*(_DWORD *)(v34 + 4 * v32) == (_DWORD)v21)
      {
LABEL_26:
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v46 = *v28;
        *v28 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1A557D7F8();
        sub_1A554CF34(v32);
        *v28 = v46;
        swift_bridgeObjectRelease();
      }
      else
      {
        v35 = ~v31;
        while (1)
        {
          v32 = (v32 + 1) & v35;
          if (((*(_QWORD *)(v33 + ((v32 >> 3) & 0xFFFFFFFFFFFFF8)) >> v32) & 1) == 0)
            break;
          if (*(_DWORD *)(v34 + 4 * v32) == (_DWORD)v21)
            goto LABEL_26;
        }
      }
    }
    if (++v23 == v24[2])
    {
      result = sub_1A54E8FCC(v22, v45, v14, 1);
      v13 = 0;
      v14 = 0;
      v7 = v44;
      v10 = v40;
      v12 = v41;
      v15 = v39;
      goto LABEL_6;
    }
  }
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

_DWORD *sub_1A55497BC@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1A55497C8()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  uint64_t i;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;

  result = MEMORY[0x1E0DEE9E8];
  if ((*(_BYTE *)(v0 + 168) & 1) != 0)
  {
    v2 = *(_QWORD *)(v0 + 144);
    v3 = *(_QWORD *)(v0 + 152);
    v4 = *(_QWORD *)(v0 + 160);
    v32 = MEMORY[0x1E0DEE9E8];
    v5 = *(_QWORD *)(v2 + 16);
    if (v5)
    {
      v6 = (__int128 *)(v2 + 32);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      for (i = v5 - 1; ; --i)
      {
        v8 = *v6;
        v9 = v6[2];
        v22 = v6[1];
        v23 = v9;
        v21 = v8;
        v10 = v6[3];
        v11 = v6[4];
        v12 = v6[6];
        v26 = v6[5];
        v27 = v12;
        v24 = v10;
        v25 = v11;
        v13 = v6[7];
        v14 = v6[8];
        v15 = v6[10];
        v30 = v6[9];
        v31 = v15;
        v28 = v13;
        v29 = v14;
        v16 = v22;
        v17 = DWORD2(v22);
        v18 = *((_QWORD *)&v25 + 1);
        v19 = v26;
        sub_1A54E3150((uint64_t)&v21);
        if ((static MailboxOfInterest.LocalModification.__derived_enum_equals(_:_:)(v18, v19, 0, 0) & 1) == 0)
        {
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A54F2A14((uint64_t)&v20, v16, v17);
          swift_bridgeObjectRelease();
        }
        sub_1A54E31EC((uint64_t)&v21);
        if (!i)
          break;
        v6 += 11;
      }
      sub_1A54E8FCC(v2, v3, v4, 1);
      return v32;
    }
  }
  return result;
}

void sub_1A55498F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t isa;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 *v31;
  uint64_t v32;
  uint64_t i;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  os_log_type_t v45;
  uint64_t v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  unint64_t v56;
  os_log_t oslog;
  NSObject *osloga;
  _OWORD v59[11];
  uint64_t v60;
  unint64_t v61;

  v3 = *(_QWORD *)(v1 + 56);
  if (*(_QWORD *)(v3 + 16))
  {
    v4 = (char *)static SyncRequest.Kind.allCases.getter();
    v55 = *((_QWORD *)v4 + 2);
    if (v55)
    {
      v5 = 0;
      oslog = (os_log_t)(v3 + 64);
      v54 = v4 + 32;
      v49 = OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id;
      v51 = a1;
      v53 = v4;
      while (1)
      {
        if (v5 >= *((_QWORD *)v4 + 2))
          goto LABEL_57;
        v6 = v54[v5];
        v56 = v5 + 1;
        v61 = MEMORY[0x1E0DEE9E8];
        v7 = 1 << *(_BYTE *)(v3 + 32);
        if (v7 < 64)
          v8 = ~(-1 << v7);
        else
          v8 = -1;
        v9 = v8 & *(_QWORD *)(v3 + 64);
        swift_beginAccess();
        v10 = (unint64_t)(v7 + 63) >> 6;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v11 = 0;
LABEL_11:
        while (v9)
        {
          v13 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          v14 = v13 | (v11 << 6);
LABEL_27:
          if (*(unsigned __int8 *)(*(_QWORD *)(v3 + 56) + 24 * v14) == (_DWORD)v6)
          {
            v18 = *(unsigned int *)(*(_QWORD *)(v3 + 48) + 4 * v14);
            v19 = v61;
            sub_1A594CE64();
            sub_1A594CEAC();
            v20 = sub_1A594CED0();
            v21 = -1 << *(_BYTE *)(v19 + 32);
            v22 = v20 & ~v21;
            if (((*(_QWORD *)(v19 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
              goto LABEL_10;
            v23 = *(_QWORD *)(v19 + 48);
            if (*(_DWORD *)(v23 + 4 * v22) != (_DWORD)v18)
            {
              v24 = ~v21;
              while (1)
              {
                v22 = (v22 + 1) & v24;
                if (((*(_QWORD *)(v19 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
                  break;
                if (*(_DWORD *)(v23 + 4 * v22) == (_DWORD)v18)
                  goto LABEL_11;
              }
LABEL_10:
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              *(_QWORD *)&v59[0] = v61;
              v61 = 0x8000000000000000;
              sub_1A557BCF4(v18, v22, isUniquelyReferenced_nonNull_native);
              v61 = *(_QWORD *)&v59[0];
              swift_bridgeObjectRelease();
            }
          }
        }
        v15 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
          __break(1u);
          goto LABEL_55;
        }
        if (v15 >= v10)
          goto LABEL_34;
        isa = (unint64_t)oslog[v15].isa;
        ++v11;
        if (isa)
          goto LABEL_26;
        v11 = v15 + 1;
        if (v15 + 1 >= v10)
          goto LABEL_34;
        isa = (unint64_t)oslog[v11].isa;
        if (isa)
          goto LABEL_26;
        v11 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_34;
        isa = (unint64_t)oslog[v11].isa;
        if (isa)
          goto LABEL_26;
        v17 = v15 + 3;
        if (v17 < v10)
          break;
LABEL_34:
        swift_endAccess();
        swift_release();
        if (*(_QWORD *)(v61 + 16))
        {
          if ((*(_BYTE *)(v52 + 168) & 1) != 0)
          {
            v28 = *(_QWORD *)(v52 + 144);
            v29 = *(_QWORD *)(v28 + 16);
            if (v29)
            {
              v30 = *(_QWORD *)(v52 + 152);
              v50 = *(_QWORD *)(v52 + 160);
              v31 = (__int128 *)(v28 + 32);
              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
              v32 = 0;
              for (i = v29 - 1; ; --i)
              {
                v34 = *v31;
                v35 = v31[2];
                v59[1] = v31[1];
                v59[2] = v35;
                v59[0] = v34;
                v36 = v31[3];
                v37 = v31[4];
                v38 = v31[6];
                v59[5] = v31[5];
                v59[6] = v38;
                v59[3] = v36;
                v59[4] = v37;
                v39 = v31[7];
                v40 = v31[8];
                v41 = v31[10];
                v59[9] = v31[9];
                v59[10] = v41;
                v59[7] = v39;
                v59[8] = v40;
                v42 = *((_QWORD *)&v40 + 1);
                sub_1A54E3150((uint64_t)v59);
                v43 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                LOBYTE(v42) = sub_1A554A554(v43, v42);
                swift_bridgeObjectRelease();
                sub_1A54E31EC((uint64_t)v59);
                if ((v42 & 1) == 0 && __OFADD__(v32++, 1))
                  goto LABEL_56;
                if (!i)
                  break;
                v31 += 11;
              }
              sub_1A54E8FCC(v28, v30, v50, 1);
            }
            swift_retain();
            OUTLINED_FUNCTION_53();
            OUTLINED_FUNCTION_53();
            OUTLINED_FUNCTION_53();
            v25 = sub_1A594A74C();
            v45 = sub_1A594C030();
            if (os_log_type_enabled(v25, v45))
            {
              v46 = swift_slowAlloc();
              *(_QWORD *)&v59[0] = swift_slowAlloc();
              *(_DWORD *)v46 = 68159234;
              LODWORD(v60) = 2;
              sub_1A594C3CC();
              *(_WORD *)(v46 + 8) = 256;
              LOBYTE(v60) = *(_BYTE *)(v51 + v49);
              sub_1A594C3CC();
              swift_release();
              *(_WORD *)(v46 + 11) = 2082;
              __asm { BR              X8 }
            }
          }
          else
          {
            swift_retain();
            OUTLINED_FUNCTION_53();
            OUTLINED_FUNCTION_53();
            OUTLINED_FUNCTION_53();
            v25 = sub_1A594A74C();
            v26 = sub_1A594C030();
            if (os_log_type_enabled(v25, v26))
            {
              v27 = swift_slowAlloc();
              *(_QWORD *)&v59[0] = swift_slowAlloc();
              *(_DWORD *)v27 = 68158722;
              LODWORD(v60) = 2;
              sub_1A594C3CC();
              *(_WORD *)(v27 + 8) = 256;
              LOBYTE(v60) = *(_BYTE *)(v51 + v49);
              sub_1A594C3CC();
              swift_release();
              *(_WORD *)(v27 + 11) = 2082;
              __asm { BR              X8 }
            }
          }
          swift_release();

        }
        swift_bridgeObjectRelease();
        v4 = v53;
        v5 = v56;
        if (v56 == v55)
        {
          swift_bridgeObjectRelease();
          return;
        }
      }
      isa = (unint64_t)oslog[v17].isa;
      if (!isa)
      {
        while (1)
        {
          v11 = v17 + 1;
          if (__OFADD__(v17, 1))
            break;
          if (v11 >= v10)
            goto LABEL_34;
          isa = (unint64_t)oslog[v11].isa;
          ++v17;
          if (isa)
            goto LABEL_26;
        }
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
        JUMPOUT(0x1A554A2E4);
      }
      v11 = v17;
LABEL_26:
      v9 = (isa - 1) & isa;
      v14 = __clz(__rbit64(isa)) + (v11 << 6);
      goto LABEL_27;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    osloga = sub_1A594A74C();
    v47 = sub_1A594C030();
    if (os_log_type_enabled(osloga, v47))
    {
      v48 = swift_slowAlloc();
      *(_DWORD *)v48 = 68157952;
      LODWORD(v59[0]) = 2;
      sub_1A594C3CC();
      *(_WORD *)(v48 + 8) = 256;
      LOBYTE(v59[0]) = *(_BYTE *)(a1 + OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id);
      sub_1A594C3CC();
      swift_release();
      _os_log_impl(&dword_1A4F90000, osloga, v47, "[%.*hhx] No running sync requests.", (uint8_t *)v48, 0xBu);
      MEMORY[0x1A85B1964](v48, -1, -1);
    }
    else
    {
      swift_release();
    }

  }
}

uint64_t sub_1A554A304(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  int v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 1;
  v3 = *(_QWORD *)(result + 16);
  if (!v3)
    return 1;
  v4 = 0;
  if (v2 >= v3)
    v5 = result;
  else
    v5 = a2;
  if (v2 >= v3)
    v6 = a2;
  else
    v6 = result;
  v7 = v5 + 56;
  v8 = -1 << *(_BYTE *)(v5 + 32);
  if (-v8 < 64)
    v9 = ~(-1 << -(char)v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 56);
  v24 = (unint64_t)(63 - v8) >> 6;
  v11 = v6 + 56;
  while (1)
  {
    while (1)
    {
      v12 = v4;
      if (!v10)
        break;
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v4 << 6);
      if (*(_QWORD *)(v6 + 16))
      {
LABEL_29:
        v18 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v14);
        sub_1A594CE64();
        sub_1A594CE88();
        result = sub_1A594CED0();
        v19 = -1 << *(_BYTE *)(v6 + 32);
        v20 = result & ~v19;
        if (((*(_QWORD *)(v11 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) != 0)
        {
          v21 = *(_QWORD *)(v6 + 48);
          if (*(unsigned __int8 *)(v21 + v20) == v18)
          {
LABEL_34:
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v23 = 0;
LABEL_35:
            sub_1A550F72C();
            return v23;
          }
          v22 = ~v19;
          while (1)
          {
            v20 = (v20 + 1) & v22;
            if (((*(_QWORD *)(v11 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
              break;
            if (*(unsigned __int8 *)(v21 + v20) == v18)
              goto LABEL_34;
          }
        }
      }
    }
    v15 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v15 >= v24)
      goto LABEL_38;
    v16 = *(_QWORD *)(v7 + 8 * v15);
    ++v4;
    if (!v16)
    {
      v4 = v12 + 2;
      if (v12 + 2 >= v24)
        goto LABEL_38;
      v16 = *(_QWORD *)(v7 + 8 * v4);
      if (!v16)
      {
        v4 = v12 + 3;
        if (v12 + 3 >= v24)
          goto LABEL_38;
        v16 = *(_QWORD *)(v7 + 8 * v4);
        if (!v16)
        {
          v17 = v12 + 4;
          if (v12 + 4 >= v24)
          {
LABEL_38:
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v23 = 1;
            goto LABEL_35;
          }
          v16 = *(_QWORD *)(v7 + 8 * v17);
          v4 = v12 + 4;
          if (!v16)
            break;
        }
      }
    }
LABEL_28:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v4 << 6);
    if (*(_QWORD *)(v6 + 16))
      goto LABEL_29;
  }
  while (1)
  {
    v4 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v4 >= v24)
      goto LABEL_38;
    v16 = *(_QWORD *)(v7 + 8 * v4);
    ++v17;
    if (v16)
      goto LABEL_28;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1A554A554(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  int v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 1;
  v3 = *(_QWORD *)(result + 16);
  if (!v3)
    return 1;
  v4 = 0;
  if (v2 >= v3)
    v5 = result;
  else
    v5 = a2;
  if (v2 >= v3)
    v6 = a2;
  else
    v6 = result;
  v7 = v5 + 56;
  v8 = -1 << *(_BYTE *)(v5 + 32);
  if (-v8 < 64)
    v9 = ~(-1 << -(char)v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 56);
  v24 = (unint64_t)(63 - v8) >> 6;
  v11 = v6 + 56;
  while (1)
  {
    while (1)
    {
      v12 = v4;
      if (!v10)
        break;
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v4 << 6);
      if (*(_QWORD *)(v6 + 16))
      {
LABEL_29:
        v18 = *(_DWORD *)(*(_QWORD *)(v5 + 48) + 4 * v14);
        sub_1A594CE64();
        sub_1A594CEAC();
        result = sub_1A594CED0();
        v19 = -1 << *(_BYTE *)(v6 + 32);
        v20 = result & ~v19;
        if (((*(_QWORD *)(v11 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) != 0)
        {
          v21 = *(_QWORD *)(v6 + 48);
          if (*(_DWORD *)(v21 + 4 * v20) == v18)
          {
LABEL_34:
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v23 = 0;
LABEL_35:
            sub_1A550F72C();
            return v23;
          }
          v22 = ~v19;
          while (1)
          {
            v20 = (v20 + 1) & v22;
            if (((*(_QWORD *)(v11 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
              break;
            if (*(_DWORD *)(v21 + 4 * v20) == v18)
              goto LABEL_34;
          }
        }
      }
    }
    v15 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v15 >= v24)
      goto LABEL_38;
    v16 = *(_QWORD *)(v7 + 8 * v15);
    ++v4;
    if (!v16)
    {
      v4 = v12 + 2;
      if (v12 + 2 >= v24)
        goto LABEL_38;
      v16 = *(_QWORD *)(v7 + 8 * v4);
      if (!v16)
      {
        v4 = v12 + 3;
        if (v12 + 3 >= v24)
          goto LABEL_38;
        v16 = *(_QWORD *)(v7 + 8 * v4);
        if (!v16)
        {
          v17 = v12 + 4;
          if (v12 + 4 >= v24)
          {
LABEL_38:
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v23 = 1;
            goto LABEL_35;
          }
          v16 = *(_QWORD *)(v7 + 8 * v17);
          v4 = v12 + 4;
          if (!v16)
            break;
        }
      }
    }
LABEL_28:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v4 << 6);
    if (*(_QWORD *)(v6 + 16))
      goto LABEL_29;
  }
  while (1)
  {
    v4 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v4 >= v24)
      goto LABEL_38;
    v16 = *(_QWORD *)(v7 + 8 * v4);
    ++v17;
    if (v16)
      goto LABEL_28;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1A554A7A4(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  int v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 1;
  v3 = *(_QWORD *)(result + 16);
  if (!v3)
    return 1;
  v4 = 0;
  if (v2 >= v3)
    v5 = result;
  else
    v5 = a2;
  if (v2 >= v3)
    v6 = a2;
  else
    v6 = result;
  v7 = v5 + 56;
  v8 = -1 << *(_BYTE *)(v5 + 32);
  if (-v8 < 64)
    v9 = ~(-1 << -(char)v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 56);
  v24 = (unint64_t)(63 - v8) >> 6;
  v11 = v6 + 56;
  while (1)
  {
    while (1)
    {
      v12 = v4;
      if (!v10)
        break;
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v4 << 6);
      if (*(_QWORD *)(v6 + 16))
      {
LABEL_29:
        v18 = *(_DWORD *)(*(_QWORD *)(v5 + 48) + 4 * v14);
        sub_1A594CE64();
        sub_1A594CEAC();
        result = sub_1A594CED0();
        v19 = -1 << *(_BYTE *)(v6 + 32);
        v20 = result & ~v19;
        if (((*(_QWORD *)(v11 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) != 0)
        {
          v21 = *(_QWORD *)(v6 + 48);
          if (v18 == *(_DWORD *)(v21 + 4 * v20))
          {
LABEL_34:
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v23 = 0;
LABEL_35:
            sub_1A550F72C();
            return v23;
          }
          v22 = ~v19;
          while (1)
          {
            v20 = (v20 + 1) & v22;
            if (((*(_QWORD *)(v11 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
              break;
            if (v18 == *(_DWORD *)(v21 + 4 * v20))
              goto LABEL_34;
          }
        }
      }
    }
    v15 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v15 >= v24)
      goto LABEL_38;
    v16 = *(_QWORD *)(v7 + 8 * v15);
    ++v4;
    if (!v16)
    {
      v4 = v12 + 2;
      if (v12 + 2 >= v24)
        goto LABEL_38;
      v16 = *(_QWORD *)(v7 + 8 * v4);
      if (!v16)
      {
        v4 = v12 + 3;
        if (v12 + 3 >= v24)
          goto LABEL_38;
        v16 = *(_QWORD *)(v7 + 8 * v4);
        if (!v16)
        {
          v17 = v12 + 4;
          if (v12 + 4 >= v24)
          {
LABEL_38:
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v23 = 1;
            goto LABEL_35;
          }
          v16 = *(_QWORD *)(v7 + 8 * v17);
          v4 = v12 + 4;
          if (!v16)
            break;
        }
      }
    }
LABEL_28:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v4 << 6);
    if (*(_QWORD *)(v6 + 16))
      goto LABEL_29;
  }
  while (1)
  {
    v4 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v4 >= v24)
      goto LABEL_38;
    v16 = *(_QWORD *)(v7 + 8 * v4);
    ++v17;
    if (v16)
      goto LABEL_28;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1A554A9F4(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int v15;
  unsigned __int8 *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  double v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  char v24;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  int v29;
  uint64_t v30;

  v5 = *(_QWORD *)(v2 + 56);
  v27 = v5 + 64;
  v6 = 1 << *(_BYTE *)(v5 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(v5 + 64);
  v26 = OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id;
  v28 = (unint64_t)(v6 + 63) >> 6;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v9 = 0;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v9 << 6);
      goto LABEL_21;
    }
    v12 = v9 + 1;
    if (__OFADD__(v9, 1))
      goto LABEL_37;
    if (v12 >= v28)
      return swift_release();
    v13 = *(_QWORD *)(v27 + 8 * v12);
    ++v9;
    if (!v13)
    {
      v9 = v12 + 1;
      if (v12 + 1 >= v28)
        return swift_release();
      v13 = *(_QWORD *)(v27 + 8 * v9);
      if (!v13)
      {
        v9 = v12 + 2;
        if (v12 + 2 >= v28)
          return swift_release();
        v13 = *(_QWORD *)(v27 + 8 * v9);
        if (!v13)
        {
          v14 = v12 + 3;
          if (v14 >= v28)
            return swift_release();
          v13 = *(_QWORD *)(v27 + 8 * v14);
          if (!v13)
          {
            while (1)
            {
              v9 = v14 + 1;
              if (__OFADD__(v14, 1))
                goto LABEL_38;
              if (v9 >= v28)
                return swift_release();
              v13 = *(_QWORD *)(v27 + 8 * v9);
              ++v14;
              if (v13)
                goto LABEL_20;
            }
          }
          v9 = v14;
        }
      }
    }
LABEL_20:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v9 << 6);
LABEL_21:
    v15 = *(_DWORD *)(*(_QWORD *)(v5 + 48) + 4 * v11);
    v16 = (unsigned __int8 *)(*(_QWORD *)(v5 + 56) + 24 * v11);
    v17 = *v16;
    v18 = *((_QWORD *)v16 + 2);
    if (v18 <= a1)
    {
      v19 = a1 - v18;
      if ((uint64_t)(a1 - v18) < 0)
        goto LABEL_36;
    }
    else
    {
      if ((uint64_t)(v18 - a1) < 0)
        goto LABEL_35;
      v19 = a1 - v18;
    }
    v20 = (double)v19 / 1000000000.0;
    if ((~*(_QWORD *)&v20 & 0x7FF0000000000000) == 0)
    {
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
      JUMPOUT(0x1A554AE30);
    }
    if (v20 <= -9.22337204e18)
      goto LABEL_33;
    if (v20 >= 9.22337204e18)
      goto LABEL_34;
    if ((uint64_t)v20 >= 301)
    {
      v29 = v15;
      v30 = v17;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_retain_n();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v21 = sub_1A594A74C();
      v22 = sub_1A594C030();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = swift_slowAlloc();
        swift_slowAlloc();
        *(_DWORD *)v23 = 68158722;
        *(_DWORD *)(v23 + 4) = 2;
        *(_WORD *)(v23 + 8) = 256;
        v24 = *(_BYTE *)(a2 + v26);
        swift_release();
        *(_BYTE *)(v23 + 10) = v24;
        swift_release();
        *(_WORD *)(v23 + 11) = 1024;
        *(_DWORD *)(v23 + 13) = v29;
        *(_WORD *)(v23 + 17) = 2082;
        __asm { BR              X8 }
      }
      swift_bridgeObjectRelease_n();

      swift_release_n();
    }
  }
}

uint64_t sub_1A554AE40@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  v5 = *(_QWORD *)v2;
  v4 = *(_QWORD *)(v2 + 8);
  v6 = *(_BYTE *)(v2 + 16);
  v7 = *(_QWORD *)(v2 + 24);
  v8 = *(_QWORD *)(v2 + 32);
  v9 = *(_BYTE *)(v2 + 40);
  v10 = *(_QWORD *)(v2 + 48);
  result = sub_1A5552E54(*(_QWORD *)v2, v4, v6, result, v7, v8, v9, v10);
  if (v12 == -1)
  {
    sub_1A5552DE8(v7, v8, v9);
    v11 = v8;
    result = v7;
    if ((v9 & 1) != 0)
    {
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
  }
  else if ((v12 & 1) != 0)
  {
    goto LABEL_18;
  }
  if ((v6 & 1) != 0)
    goto LABEL_18;
  if ((_DWORD)v11 != (_DWORD)v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (result < v5)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if ((v9 & 1) == 0)
  {
    if ((_DWORD)v8 == (_DWORD)v11)
    {
      if (v7 >= result)
      {
        *(_QWORD *)a2 = v5;
        *(_QWORD *)(a2 + 8) = v4;
        *(_BYTE *)(a2 + 16) = 0;
        *(_QWORD *)(a2 + 24) = result;
        *(_QWORD *)(a2 + 32) = v11;
        *(_BYTE *)(a2 + 40) = 0;
        *(_QWORD *)(a2 + 48) = v10;
        return result;
      }
      goto LABEL_17;
    }
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_1A554AF40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  unint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  unint64_t v28;
  char v29;
  __int128 v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char v34;
  char *v35;
  unint64_t v36;
  unint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  char v42;
  char v43;
  int v44;
  char *v45;
  __int128 v46;
  char v47;
  __int128 v48;
  char v49;
  uint64_t v50;
  __int128 v51;
  char v52;
  __int128 v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  char v58;
  _QWORD v59[3];
  __int128 v60;
  char v61;
  uint64_t v62;
  __int128 v63;
  char v64;
  __int128 v65;
  char v66;
  uint64_t v67;
  int v68;
  char v69;

  sub_1A5553B5C(6, a1, (uint64_t (*)(uint64_t))sub_1A558A0B8, sub_1A558A15C, (uint64_t)&v46);
  v65 = v46;
  v66 = v47;
  v63 = v48;
  v64 = v49;
  v62 = v50;
  sub_1A554545C();
  if (v1 < 6)
  {
    sub_1A554545C();
    if (v18)
    {
      v19 = v18;
      v59[0] = MEMORY[0x1E0DEE9D8];
      v20 = v18 & ~(v18 >> 63);
      v22 = *((_QWORD *)&v65 + 1);
      v21 = v65;
      v23 = v66;
      sub_1A55032A0((uint64_t)&v63, (uint64_t)&v67, &qword_1EE796048);
      v24 = v62;
      v9 = (char *)v59;
      sub_1A54F4B4C(0, v20, 0);
      if ((v19 & 0x8000000000000000) == 0)
      {
        v25 = v59[0];
        result = sub_1A5552DE8(v21, v22, v23);
        v44 = v22;
        v27 = v21;
        v28 = v22;
        v29 = v23;
        v42 = v23;
        v40 = v21;
        while ((v29 & 1) == 0)
        {
          if ((v23 & 1) != 0)
            goto LABEL_65;
          if ((_DWORD)v28 != (_DWORD)v22)
          {
LABEL_45:
            __break(1u);
LABEL_46:
            __break(1u);
LABEL_47:
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
LABEL_51:
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
            goto LABEL_58;
          }
          if (v27 < v21)
            goto LABEL_47;
          result = sub_1A55032A0((uint64_t)&v67, (uint64_t)&v51, &qword_1EE796048);
          if ((v52 & 1) != 0)
            goto LABEL_66;
          if (DWORD2(v51) != (_DWORD)v22)
            goto LABEL_49;
          if (v27 >= (uint64_t)v51)
            goto LABEL_51;
          if (v27 < 0 || v27 >= 1 << *(_BYTE *)(v24 + 32))
            goto LABEL_53;
          if (((*(_QWORD *)(v24 + 56 + (((unint64_t)v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) == 0)
            goto LABEL_55;
          if (*(_DWORD *)(v24 + 36) != (_DWORD)v22)
            goto LABEL_57;
          *(_QWORD *)&v60 = 35;
          *((_QWORD *)&v60 + 1) = 0xE100000000000000;
          String.init(_:)();
          v9 = (char *)&v60;
          sub_1A594B5F8();
          swift_bridgeObjectRelease();
          v30 = v60;
          v31 = v25;
          v59[0] = v25;
          v22 = *(_QWORD *)(v25 + 16);
          v32 = *(_QWORD *)(v25 + 24);
          if (v22 >= v32 >> 1)
          {
            v9 = (char *)v59;
            sub_1A54F4B4C(v32 > 1, v22 + 1, 1);
            v31 = v59[0];
          }
          *(_QWORD *)(v31 + 16) = v22 + 1;
          v25 = v31;
          *(_OWORD *)(v31 + 16 * v22 + 32) = v30;
          result = sub_1A558A15C(v27, v28, 0, v24);
          v27 = result;
          v28 = v33;
          v29 = v34 & 1;
          --v19;
          v21 = v40;
          LODWORD(v22) = v44;
          v23 = v42;
          if (!v19)
          {
            sub_1A5529B00(result, v33, v29);
            goto LABEL_43;
          }
        }
        goto LABEL_64;
      }
      goto LABEL_60;
    }
LABEL_43:
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799A38);
    sub_1A54E2E30((unint64_t *)&qword_1EE795F80, &qword_1EE799A38, MEMORY[0x1E0DEAF20]);
    v39 = sub_1A594B268();
    swift_bridgeObjectRelease();
    sub_1A5552DF4((uint64_t)&v65);
    sub_1A5552DF4((uint64_t)&v63);
    sub_1A54F81BC((uint64_t)&v62);
    return v39;
  }
  sub_1A554AE40(5, (uint64_t)&v51);
  v60 = v51;
  v61 = v52;
  v57 = v53;
  v58 = v54;
  v56 = v55;
  sub_1A5552E24((uint64_t)&v65);
  sub_1A5552E24((uint64_t)&v63);
  sub_1A54FCA28((uint64_t)&v62);
  sub_1A554545C();
  if (!v2)
  {
    sub_1A5552DF4((uint64_t)&v60);
    sub_1A5552DF4((uint64_t)&v57);
    sub_1A54F81BC((uint64_t)&v56);
    v9 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_39:
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v35 = v9;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_58:
      v35 = sub_1A554B56C(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
    v37 = *((_QWORD *)v35 + 2);
    v36 = *((_QWORD *)v35 + 3);
    if (v37 >= v36 >> 1)
      v35 = sub_1A554B56C((char *)(v36 > 1), v37 + 1, 1, v35);
    *((_QWORD *)v35 + 2) = v37 + 1;
    v38 = &v35[16 * v37];
    *((_QWORD *)v38 + 4) = 10911970;
    *((_QWORD *)v38 + 5) = 0xA300000000000000;
    swift_bridgeObjectRelease();
    goto LABEL_43;
  }
  v3 = v2;
  v45 = (char *)MEMORY[0x1E0DEE9D8];
  v4 = v2 & ~(v2 >> 63);
  v5 = *((_QWORD *)&v60 + 1);
  v6 = v60;
  v7 = v61;
  sub_1A55032A0((uint64_t)&v57, (uint64_t)v59, &qword_1EE796048);
  v8 = v56;
  sub_1A54F4B4C(0, v4, 0);
  if ((v3 & 0x8000000000000000) == 0)
  {
    v9 = v45;
    sub_1A5552DE8(v6, v5, v7);
    v10 = v6;
    v11 = v5;
    v12 = v7;
    v43 = v7;
    v41 = v5;
    while ((v12 & 1) == 0)
    {
      if ((v7 & 1) != 0)
        goto LABEL_62;
      if ((_DWORD)v11 != (_DWORD)v5)
      {
        __break(1u);
        goto LABEL_45;
      }
      if (v10 < v6)
        goto LABEL_46;
      sub_1A55032A0((uint64_t)v59, (uint64_t)&v67, &qword_1EE796048);
      if ((v69 & 1) != 0)
        goto LABEL_63;
      if (v68 != (_DWORD)v5)
        goto LABEL_48;
      if (v10 >= v67)
        goto LABEL_50;
      if (v10 < 0 || v10 >= 1 << *(_BYTE *)(v8 + 32))
        goto LABEL_52;
      if (((*(_QWORD *)(v8 + 56 + (((unint64_t)v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        goto LABEL_54;
      if (*(_DWORD *)(v8 + 36) != (_DWORD)v5)
        goto LABEL_56;
      String.init(_:)();
      sub_1A594B5F8();
      swift_bridgeObjectRelease();
      v5 = *((_QWORD *)v45 + 2);
      v13 = *((_QWORD *)v45 + 3);
      if (v5 >= v13 >> 1)
        sub_1A54F4B4C(v13 > 1, v5 + 1, 1);
      *((_QWORD *)v45 + 2) = v5 + 1;
      v14 = &v45[16 * v5];
      *((_QWORD *)v14 + 4) = 35;
      *((_QWORD *)v14 + 5) = 0xE100000000000000;
      v15 = sub_1A558A15C(v10, v11, 0, v8);
      v10 = v15;
      v11 = v16;
      v12 = v17 & 1;
      --v3;
      LODWORD(v5) = v41;
      v7 = v43;
      if (!v3)
      {
        sub_1A5529B00(v15, v16, v12);
        sub_1A54F81BC((uint64_t)&v56);
        goto LABEL_39;
      }
    }
    goto LABEL_61;
  }
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
  return result;
}

char *sub_1A554B56C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796288);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

_QWORD *sub_1A554B66C(_QWORD *a1)
{
  return sub_1A54EF904(0, a1[2], 0, a1);
}

_QWORD *sub_1A554B680(_QWORD *a1)
{
  return sub_1A54EFC70(0, a1[2], 0, a1);
}

_QWORD *sub_1A554B694(_QWORD *a1)
{
  return sub_1A54F00B8(0, a1[2], 0, a1);
}

_QWORD *sub_1A554B6A8(_QWORD *a1)
{
  return sub_1A54F00CC(0, a1[2], 0, a1);
}

_QWORD *sub_1A554B6BC(_QWORD *a1)
{
  return sub_1A54F0308(0, a1[2], 0, a1);
}

_QWORD *sub_1A554B6D0(_QWORD *a1)
{
  return sub_1A54F0420(0, a1[2], 0, a1);
}

_QWORD *sub_1A554B6E4(_QWORD *a1)
{
  return sub_1A54F067C(0, a1[2], 0, a1);
}

_QWORD *sub_1A554B6F8(_QWORD *a1)
{
  return sub_1A54F07A8(0, a1[2], 0, a1);
}

uint64_t sub_1A554B70C(unint64_t a1)
{
  return sub_1A54F11B8(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_1A554B720(unint64_t a1)
{
  return sub_1A54F13D8(0, *(_QWORD *)(a1 + 16), 0, a1);
}

_QWORD *sub_1A554B734(_QWORD *a1)
{
  return sub_1A54F13EC(0, a1[2], 0, a1);
}

uint64_t sub_1A554B748(unint64_t a1)
{
  return sub_1A54F0548(0, *(_QWORD *)(a1 + 16), 0, a1);
}

_QWORD *sub_1A554B75C(_QWORD *a1)
{
  return sub_1A54F1A54(0, a1[2], 0, a1);
}

uint64_t sub_1A554B770(unint64_t a1)
{
  return sub_1A54F1B74(0, *(_QWORD *)(a1 + 16), 0, a1);
}

_QWORD *sub_1A554B784(_QWORD *a1)
{
  return sub_1A54F055C(0, a1[2], 0, a1);
}

_QWORD *sub_1A554B798(_QWORD *a1)
{
  return sub_1A54F1EA0(0, a1[2], 0, a1);
}

_QWORD *sub_1A554B7AC(_QWORD *a1)
{
  return sub_1A54F256C(0, a1[2], 0, a1);
}

_QWORD *sub_1A554B7C0(_QWORD *a1)
{
  return sub_1A54F2328(0, a1[2], 0, a1);
}

_QWORD *sub_1A554B7D4(_QWORD *a1)
{
  return sub_1A54F2448(0, a1[2], 0, a1);
}

void sub_1A554B7E8(unint64_t a1)
{
  if (a1 >> 62)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594CA38();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x1A85AEC10);
}

unint64_t sub_1A554B850(int a1)
{
  return sub_1A554B988(a1, (void (*)(void))sub_1A557D7F8);
}

uint64_t sub_1A554B85C(unsigned __int8 a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v3 = *v1;
  sub_1A594CE64();
  sub_1A594CE88();
  v4 = sub_1A594CED0();
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = v4 & ~v5;
  if (((*(_QWORD *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 15;
  v7 = *(_QWORD *)(v3 + 48);
  if (*(unsigned __int8 *)(v7 + v6) != a1)
  {
    v8 = ~v5;
    do
    {
      v6 = (v6 + 1) & v8;
      if (((*(_QWORD *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
        return 15;
    }
    while (*(unsigned __int8 *)(v7 + v6) != a1);
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v10 = *v1;
  v13 = *v1;
  *v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1A557D9B0();
    v10 = v13;
  }
  v11 = *(unsigned __int8 *)(*(_QWORD *)(v10 + 48) + v6);
  sub_1A554CD8C(v6);
  *v1 = v13;
  swift_bridgeObjectRelease();
  return v11;
}

unint64_t sub_1A554B97C(int a1)
{
  return sub_1A554B988(a1, (void (*)(void))sub_1A557DE98);
}

unint64_t sub_1A554B988(int a1, void (*a2)(void))
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v16;

  v5 = *v2;
  sub_1A594CE64();
  sub_1A594CEAC();
  v6 = sub_1A594CED0();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_9:
    v13 = 0;
    v14 = 1;
    return v13 | ((unint64_t)v14 << 32);
  }
  v9 = *(_QWORD *)(v5 + 48);
  if (*(_DWORD *)(v9 + 4 * v8) != a1)
  {
    v10 = ~v7;
    do
    {
      v8 = (v8 + 1) & v10;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_9;
    }
    while (*(_DWORD *)(v9 + 4 * v8) != a1);
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v12 = *v2;
  v16 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    a2();
    v12 = v16;
  }
  v13 = *(unsigned int *)(*(_QWORD *)(v12 + 48) + 4 * v8);
  sub_1A554CF34(v8);
  *v2 = v16;
  swift_bridgeObjectRelease();
  v14 = 0;
  return v13 | ((unint64_t)v14 << 32);
}

unint64_t sub_1A554BAB8(int a1)
{
  return sub_1A554B988(a1, (void (*)(void))sub_1A557DEA4);
}

uint64_t sub_1A554BAC4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  unsigned __int8 *v14;
  uint64_t v15;
  unsigned __int8 *v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  uint64_t v24;

  v5 = *v2;
  sub_1A594CE64();
  sub_1A594CE88();
  v6 = sub_1A594CED0();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
    return 0;
  v9 = ~v7;
  while (1)
  {
    v10 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v8);
    if (v10[1] == a2)
    {
      v11 = *v10;
      v12 = *(_QWORD *)(v11 + 16);
      if (v12 == *(_QWORD *)(a1 + 16))
      {
        if (v12)
          v13 = v11 == a1;
        else
          v13 = 1;
        if (v13)
          goto LABEL_22;
        if (*(unsigned __int8 *)(v11 + 32) == *(unsigned __int8 *)(a1 + 32))
        {
          if (v12 == 1)
            goto LABEL_22;
          if (*(unsigned __int8 *)(v11 + 33) == *(unsigned __int8 *)(a1 + 33))
          {
            if (v12 == 2)
              goto LABEL_22;
            if (*(unsigned __int8 *)(v11 + 34) == *(unsigned __int8 *)(a1 + 34))
            {
              if (v12 == 3)
                goto LABEL_22;
              if (*(unsigned __int8 *)(v11 + 35) == *(unsigned __int8 *)(a1 + 35))
                break;
            }
          }
        }
      }
    }
LABEL_3:
    v8 = (v8 + 1) & v9;
    if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
      return 0;
  }
  v14 = (unsigned __int8 *)(v11 + 36);
  v15 = v12 - 4;
  v16 = (unsigned __int8 *)(a1 + 36);
  while (v15)
  {
    v18 = *v14++;
    v17 = v18;
    v19 = *v16++;
    --v15;
    if (v17 != v19)
      goto LABEL_3;
  }
LABEL_22:
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v22 = *v2;
  v24 = *v2;
  *v2 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_1A557D498();
    v22 = v24;
  }
  v20 = *(_QWORD *)(*(_QWORD *)(v22 + 48) + 16 * v8);
  sub_1A554D0DC(v8);
  *v2 = v24;
  swift_bridgeObjectRelease();
  return v20;
}

double sub_1A554BC90@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v7;
  unint64_t v8;
  double result;

  v7 = *v3;
  sub_1A594CE64();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54E42B4(a1, a2);
  sub_1A5949F9C();
  sub_1A54E46E8(a1, a2);
  v8 = sub_1A594CED0() & ~(-1 << *(_BYTE *)(v7 + 32));
  if (((*(_QWORD *)(v7 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    __asm { BR              X8 }
  swift_bridgeObjectRelease();
  result = 0.0;
  *a3 = xmmword_1A59ABD50;
  return result;
}

uint64_t sub_1A554C21C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *v1;
  if ((*v1 & 0xC000000000000001) == 0)
  {
    sub_1A594CE64();
    swift_beginAccess();
    __asm { BR              X10 }
  }
  if (v3 < 0)
    v4 = *v1;
  else
    v4 = v3 & 0xFFFFFFFFFFFFFF8;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_retain();
  v5 = sub_1A594C654();
  swift_release();
  if ((v5 & 1) != 0)
  {
    sub_1A554C7E4(v4, a1);
    v7 = v6;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v7;
}

void sub_1A554C7E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  swift_bridgeObjectRelease();
  v3 = sub_1A594C624();
  v4 = swift_unknownObjectRetain();
  sub_1A54F46A0(v4, v3);
  sub_1A594CE64();
  swift_beginAccess();
  __asm { BR              X10 }
}

void sub_1A554C884()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1A594CE88();
  swift_retain();
  sub_1A54FA300(v1, v0);
  sub_1A54E3414();
  MessageIdentifierSet.hash(into:)((uint64_t)&v5, v1, v0 & 0xFFFFFFFFFFLL);
  sub_1A54FA2A8(v1, v0);
  v3 = sub_1A594CED0() & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 56 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
  {
    v4 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v3);
    swift_beginAccess();
    __asm { BR              X9 }
  }
  swift_release();
  __break(1u);
  JUMPOUT(0x1A554CD6CLL);
}

unint64_t sub_1A554CD8C(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_1A594C5D0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_1A594CE64();
        sub_1A594CE88();
        v10 = sub_1A594CED0() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 < v9)
            goto LABEL_5;
        }
        else if (v10 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(v3 + 48);
          v12 = (_BYTE *)(v11 + v2);
          v13 = (_BYTE *)(v11 + v6);
          if (v2 != v6 || (v2 = v6, v12 >= v13 + 1))
          {
            *v12 = *v13;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v14 = *(_QWORD *)(v3 + 16);
  v15 = __OFSUB__(v14, 1);
  v16 = v14 - 1;
  if (v15)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v16;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1A554CF34(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  _DWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_1A594C5D0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_1A594CE64();
        sub_1A594CEAC();
        v10 = sub_1A594CED0() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 < v9)
            goto LABEL_5;
        }
        else if (v10 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(v3 + 48);
          v12 = (_DWORD *)(v11 + 4 * v2);
          v13 = (_DWORD *)(v11 + 4 * v6);
          if (v2 != v6 || (v2 = v6, v12 >= v13 + 1))
          {
            *v12 = *v13;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v14 = *(_QWORD *)(v3 + 16);
  v15 = __OFSUB__(v14, 1);
  v16 = v14 - 1;
  if (v15)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v16;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1A554D0DC(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_1A594C5D0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_1A594CE64();
        sub_1A594CE88();
        v10 = sub_1A594CED0() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 < v9)
            goto LABEL_5;
        }
        else if (v10 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(v3 + 48);
          v12 = (_OWORD *)(v11 + 16 * v2);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v2 != v6 || (v2 = v6, v12 >= v13 + 1))
          {
            *v12 = *v13;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v14 = *(_QWORD *)(v3 + 16);
  v15 = __OFSUB__(v14, 1);
  v16 = v14 - 1;
  if (v15)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v16;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1A554D288(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_1A594C5D0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = 16 * v6;
        sub_1A594CE64();
        sub_1A594CE88();
        v11 = sub_1A594CED0() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9)
            goto LABEL_5;
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(v3 + 48);
          v13 = (_OWORD *)(v12 + 16 * v2);
          v14 = (_OWORD *)(v12 + v10);
          if (16 * v2 != v10 || (v2 = v6, v13 >= v14 + 1))
          {
            *v13 = *v14;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v15 = *(_QWORD *)(v3 + 16);
  v16 = __OFSUB__(v15, 1);
  v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1A554D43C(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_1A594C5D0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v6);
        v11 = *v10;
        v12 = v10[1];
        sub_1A594CE64();
        sub_1A54E42B4(v11, v12);
        sub_1A5949F9C();
        v13 = sub_1A594CED0();
        sub_1A54E46E8(v11, v12);
        v14 = v13 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v14 < v9)
            goto LABEL_5;
        }
        else if (v14 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v14)
        {
LABEL_11:
          v15 = *(_QWORD *)(v3 + 48);
          v16 = (_OWORD *)(v15 + 16 * v2);
          v17 = (_OWORD *)(v15 + 16 * v6);
          if (v2 != v6 || (v2 = v6, v16 >= v17 + 1))
          {
            *v16 = *v17;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v18 = *(_QWORD *)(v3 + 16);
  v19 = __OFSUB__(v18, 1);
  v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1A554D610(unint64_t result)
{
  uint64_t *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = (result + 1) & ~(-1 << *(_BYTE *)(*v1 + 32));
  if (((1 << v5) & *(_QWORD *)(v4 + 8 * (v5 >> 6))) != 0)
  {
    swift_retain();
    sub_1A594C5D0();
    if ((*(_QWORD *)(v4 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
    {
      v6 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v5);
      sub_1A594CE64();
      swift_beginAccess();
      __asm { BR              X9 }
    }
    *(_QWORD *)(v4 + ((v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v7 = *(_QWORD *)(v3 + 16);
  v8 = __OFSUB__(v7, 1);
  v9 = v7 - 1;
  if (v8)
  {
    __break(1u);
    JUMPOUT(0x1A554D910);
  }
  *(_QWORD *)(v3 + 16) = v9;
  ++*(_DWORD *)(v3 + 36);
  return result;
}

unint64_t sub_1A554D920(unint64_t result)
{
  uint64_t *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = (result + 1) & ~(-1 << *(_BYTE *)(*v1 + 32));
  if (((1 << v5) & *(_QWORD *)(v4 + 8 * (v5 >> 6))) != 0)
  {
    swift_retain();
    sub_1A594C5D0();
    if ((*(_QWORD *)(v4 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
    {
      v6 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 24 * v5 + 8);
      sub_1A594CE64();
      __asm { BR              X9 }
    }
    *(_QWORD *)(v4 + ((v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v7 = *(_QWORD *)(v3 + 16);
  v8 = __OFSUB__(v7, 1);
  v9 = v7 - 1;
  if (v8)
  {
    __break(1u);
    JUMPOUT(0x1A554DBFCLL);
  }
  *(_QWORD *)(v3 + 16) = v9;
  ++*(_DWORD *)(v3 + 36);
  return result;
}

unint64_t sub_1A554DC0C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t v18;
  unint64_t v19;
  __int128 *v20;
  BOOL v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1A594C5D0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v10 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v6);
        v11 = *v10;
        v12 = v10[1];
        sub_1A594CE64();
        sub_1A54E42B4(v11, v12);
        sub_1A5949F9C();
        v13 = sub_1A594CED0();
        result = sub_1A54E46E8(v11, v12);
        v14 = v13 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v14 < v8)
            goto LABEL_5;
        }
        else if (v14 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v14)
        {
LABEL_11:
          v15 = *(_QWORD *)(a2 + 48);
          v16 = (_OWORD *)(v15 + 16 * v3);
          v17 = (_OWORD *)(v15 + 16 * v6);
          if (v3 != v6 || v16 >= v17 + 1)
            *v16 = *v17;
          v18 = *(_QWORD *)(a2 + 56);
          v19 = v18 + 24 * v3;
          v20 = (__int128 *)(v18 + 24 * v6);
          if (24 * v3 < (uint64_t)(24 * v6) || v19 >= (unint64_t)v20 + 24 || (v21 = v3 == v6, v3 = v6, !v21))
          {
            v9 = *v20;
            *(_QWORD *)(v19 + 16) = *((_QWORD *)v20 + 2);
            *(_OWORD *)v19 = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v23 = *v22;
    v24 = (-1 << v3) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    v24 = *v22;
    v23 = (-1 << result) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1A554DE10(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1A594C5D0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1A594CE64();
        sub_1A594CE88();
        result = sub_1A594CED0();
        v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8)
            goto LABEL_5;
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          v10 = *(_QWORD *)(a2 + 48);
          v11 = (_OWORD *)(v10 + 16 * v3);
          v12 = (_OWORD *)(v10 + 16 * v6);
          if (v3 != v6 || v11 >= v12 + 1)
            *v11 = *v12;
          v13 = *(_QWORD *)(a2 + 56);
          v14 = (_OWORD *)(v13 + 16 * v3);
          v15 = (_OWORD *)(v13 + 16 * v6);
          if (16 * v3 != 16 * v6 || (v3 = v6, v14 >= v15 + 1))
          {
            *v14 = *v15;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v17 = *v16;
    v18 = (-1 << v3) - 1;
  }
  else
  {
    v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    v18 = *v16;
    v17 = (-1 << result) - 1;
  }
  *v16 = v18 & v17;
  v19 = *(_QWORD *)(a2 + 16);
  v20 = __OFSUB__(v19, 1);
  v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1A554DFD4(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  const void *v15;
  BOOL v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1A594C5D0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = 16 * v6;
        sub_1A594CE64();
        sub_1A594CE88();
        result = sub_1A594CED0();
        v10 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + v9);
          if (16 * v3 != v9 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          result = v14 + 96 * v3;
          v15 = (const void *)(v14 + 96 * v6);
          if (96 * v3 < (uint64_t)(96 * v6) || result >= (unint64_t)v15 + 96 || (v16 = v3 == v6, v3 = v6, !v16))
          {
            result = (unint64_t)memmove((void *)result, v15, 0x60uLL);
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1A554E1B0(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _DWORD *v11;
  _DWORD *v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1A594C5D0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1A594CE64();
        sub_1A594CEAC();
        result = sub_1A594CED0();
        v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8)
            goto LABEL_5;
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          v10 = *(_QWORD *)(a2 + 48);
          v11 = (_DWORD *)(v10 + 4 * v3);
          v12 = (_DWORD *)(v10 + 4 * v6);
          if (v3 != v6 || v11 >= v12 + 1)
            *v11 = *v12;
          v13 = *(_QWORD *)(a2 + 56);
          v14 = (_OWORD *)(v13 + 16 * v3);
          v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || (v3 = v6, v14 >= v15 + 1))
          {
            *v14 = *v15;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v17 = *v16;
    v18 = (-1 << v3) - 1;
  }
  else
  {
    v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    v18 = *v16;
    v17 = (-1 << result) - 1;
  }
  *v16 = v18 & v17;
  v19 = *(_QWORD *)(a2 + 16);
  v20 = __OFSUB__(v19, 1);
  v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1A554E368(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  unint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  _DWORD *v13;
  uint64_t v14;
  unint64_t v15;
  __int128 *v16;
  BOOL v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1A594C5D0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1A594CE64();
        sub_1A594CEAC();
        result = sub_1A594CED0();
        v10 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_DWORD *)(v11 + 4 * v3);
          v13 = (_DWORD *)(v11 + 4 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = v14 + 24 * v3;
          v16 = (__int128 *)(v14 + 24 * v6);
          if (24 * v3 < (uint64_t)(24 * v6) || v15 >= (unint64_t)v16 + 24 || (v17 = v3 == v6, v3 = v6, !v17))
          {
            v9 = *v16;
            *(_QWORD *)(v15 + 16) = *((_QWORD *)v16 + 2);
            *(_OWORD *)v15 = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1A554E540(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  const void *v15;
  BOOL v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1A594C5D0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = 16 * v6;
        sub_1A594CE64();
        sub_1A594CE88();
        result = sub_1A594CED0();
        v10 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + v9);
          if (16 * v3 != v9 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          result = v14 + 72 * v3;
          v15 = (const void *)(v14 + 72 * v6);
          if (72 * v3 < (uint64_t)(72 * v6) || result >= (unint64_t)v15 + 72 || (v16 = v3 == v6, v3 = v6, !v16))
          {
            result = (unint64_t)memmove((void *)result, v15, 0x48uLL);
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1A554E71C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  unint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  _DWORD *v13;
  uint64_t v14;
  unint64_t v15;
  __int128 *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1A594C5D0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1A594CE64();
        sub_1A594CEAC();
        result = sub_1A594CED0();
        v10 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_DWORD *)(v11 + 4 * v3);
          v13 = (_DWORD *)(v11 + 4 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = v14 + 24 * v3;
          v16 = (__int128 *)(v14 + 24 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= (unint64_t)v16 + 24))
          {
            v9 = *v16;
            *(_QWORD *)(v15 + 16) = *((_QWORD *)v16 + 2);
            *(_OWORD *)v15 = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1A554E8E8(unint64_t result, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  v3 = result;
  v4 = a2 + 64;
  v5 = (result + 1) & ~(-1 << *(_BYTE *)(a2 + 32));
  if (((1 << v5) & *(_QWORD *)(a2 + 64 + 8 * (v5 >> 6))) != 0)
  {
    result = sub_1A594C5D0();
    if ((*(_QWORD *)(v4 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
    {
      v6 = *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * v5);
      sub_1A594CE64();
      swift_beginAccess();
      __asm { BR              X9 }
    }
    v7 = (uint64_t *)(v4 + 8 * (v3 >> 6));
    v8 = *v7;
    v9 = (-1 << v3) - 1;
  }
  else
  {
    v7 = (uint64_t *)(v4 + 8 * (result >> 6));
    v9 = *v7;
    v8 = (-1 << result) - 1;
  }
  *v7 = v9 & v8;
  v10 = *(_QWORD *)(a2 + 16);
  v11 = __OFSUB__(v10, 1);
  v12 = v10 - 1;
  if (v11)
  {
    __break(1u);
    JUMPOUT(0x1A554EBF4);
  }
  *(_QWORD *)(a2 + 16) = v12;
  ++*(_DWORD *)(a2 + 36);
  return result;
}

void *sub_1A554EC04()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  char v21;
  __int128 v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79ABC0);
  v2 = *v0;
  v3 = sub_1A594CA44();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_26;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
        break;
    }
LABEL_25:
    v12 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = 24 * v15;
    v18 = *(_QWORD *)(v2 + 56) + v17;
    v19 = *(_DWORD *)v18;
    v20 = *(_QWORD *)(v18 + 8);
    v21 = *(_BYTE *)(v18 + 16);
    LOBYTE(v18) = *(_BYTE *)(v18 + 17);
    v22 = *(_OWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_OWORD *)(*(_QWORD *)(v4 + 48) + v16) = v22;
    v23 = *(_QWORD *)(v4 + 56) + v17;
    *(_DWORD *)v23 = v19;
    *(_QWORD *)(v23 + 8) = v20;
    *(_BYTE *)(v23 + 16) = v21;
    *(_BYTE *)(v23 + 17) = v18;
    result = (void *)sub_1A54E42B4(v22, *((unint64_t *)&v22 + 1));
  }
  v26 = v24 + 2;
  if (v26 >= v13)
    goto LABEL_26;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A554EDD4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8828);
  v2 = *v0;
  v3 = sub_1A594CA44();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v26 = __clz(__rbit64(v24));
    v12 = (v24 - 1) & v24;
    v15 = v26 + (v9 << 6);
LABEL_12:
    v16 = 4 * v15;
    v17 = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * v15);
    v18 = 16 * v15;
    v19 = *(_QWORD *)(v2 + 56) + v18;
    v20 = *(_QWORD *)v19;
    v21 = *(_BYTE *)(v19 + 8);
    LOBYTE(v19) = *(_BYTE *)(v19 + 9);
    *(_DWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v22 = *(_QWORD *)(v4 + 56) + v18;
    *(_QWORD *)v22 = v20;
    *(_BYTE *)(v22 + 8) = v21;
    *(_BYTE *)(v22 + 9) = v19;
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A554EF7C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int16 v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79ABB0);
  v2 = *v0;
  v3 = sub_1A594CA44();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v17;
    v19 = v17[1];
    v20 = 2 * v15;
    v21 = *(_WORD *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v22 = v18;
    v22[1] = v19;
    *(_WORD *)(*(_QWORD *)(v4 + 56) + v20) = v21;
    result = (void *)_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A554F128()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8868);
  v2 = *v0;
  v3 = sub_1A594CA44();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_26;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
        break;
    }
LABEL_25:
    v12 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *v17;
    v19 = v17[1];
    v20 = *(_QWORD *)(v2 + 56) + v16;
    v21 = *(_QWORD *)v20;
    LODWORD(v20) = *(_DWORD *)(v20 + 8);
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v22 = v18;
    v22[1] = v19;
    v23 = *(_QWORD *)(v4 + 56) + v16;
    *(_QWORD *)v23 = v21;
    *(_DWORD *)(v23 + 8) = v20;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    result = (void *)_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  v26 = v24 + 2;
  if (v26 >= v13)
    goto LABEL_26;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A554F2E8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8878);
  v2 = *v0;
  v3 = sub_1A594CA44();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v17;
    v19 = v17[1];
    v20 = 8 * v15;
    v21 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v22 = v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v20) = v21;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    result = (void *)_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A554F49C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8860);
  v2 = *v0;
  v3 = sub_1A594CA44();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      v9 = v27 + 1;
      if (v27 + 1 >= v13)
        goto LABEL_26;
      v28 = *(_QWORD *)(v6 + 8 * v9);
      if (!v28)
        break;
    }
LABEL_25:
    v12 = (v28 - 1) & v28;
    v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v17;
    v19 = v17[1];
    v20 = 32 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_QWORD *)v21;
    v23 = *(_DWORD *)(v21 + 8);
    v24 = *(_QWORD *)(v21 + 16);
    LODWORD(v21) = *(_DWORD *)(v21 + 24);
    v25 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v25 = v18;
    v25[1] = v19;
    v26 = *(_QWORD *)(v4 + 56) + v20;
    *(_QWORD *)v26 = v22;
    *(_DWORD *)(v26 + 8) = v23;
    *(_QWORD *)(v26 + 16) = v24;
    *(_DWORD *)(v26 + 24) = v21;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    result = (void *)_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  v29 = v27 + 2;
  if (v29 >= v13)
    goto LABEL_26;
  v28 = *(_QWORD *)(v6 + 8 * v29);
  if (v28)
  {
    v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v9);
    ++v29;
    if (v28)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A554F680()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  unint64_t v37;
  int64_t v38;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE79AB28);
  v2 = *v0;
  v3 = sub_1A594CA44();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v36 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v36 >= v13)
      goto LABEL_26;
    v37 = *(_QWORD *)(v6 + 8 * v36);
    ++v9;
    if (!v37)
    {
      v9 = v36 + 1;
      if (v36 + 1 >= v13)
        goto LABEL_26;
      v37 = *(_QWORD *)(v6 + 8 * v9);
      if (!v37)
        break;
    }
LABEL_25:
    v12 = (v37 - 1) & v37;
    v15 = __clz(__rbit64(v37)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 16 * v15;
    v18 = *(_QWORD *)v17;
    LODWORD(v17) = *(_DWORD *)(v17 + 8);
    v19 = 96 * v15;
    v20 = *(_QWORD *)(v2 + 56) + v19;
    v22 = *(_QWORD *)v20;
    v21 = *(_QWORD *)(v20 + 8);
    v23 = *(_QWORD *)(v20 + 16);
    v24 = *(_DWORD *)(v20 + 24);
    v25 = *(_DWORD *)(v20 + 32);
    v26 = *(_BYTE *)(v20 + 36);
    v27 = *(_QWORD *)(v20 + 40);
    v28 = *(_BYTE *)(v20 + 48);
    v29 = *(_QWORD *)(v20 + 56);
    v30 = *(_BYTE *)(v20 + 64);
    v31 = *(_QWORD *)(v20 + 72);
    v32 = *(_BYTE *)(v20 + 88);
    v33 = *(_QWORD *)(v4 + 48) + v16;
    v34 = *(_QWORD *)(v20 + 80);
    *(_QWORD *)v33 = v18;
    *(_DWORD *)(v33 + 8) = v17;
    v35 = *(_QWORD *)(v4 + 56) + v19;
    *(_QWORD *)v35 = v22;
    *(_QWORD *)(v35 + 8) = v21;
    *(_QWORD *)(v35 + 16) = v23;
    *(_DWORD *)(v35 + 24) = v24;
    *(_DWORD *)(v35 + 32) = v25;
    *(_BYTE *)(v35 + 36) = v26;
    *(_QWORD *)(v35 + 40) = v27;
    *(_BYTE *)(v35 + 48) = v28;
    *(_QWORD *)(v35 + 56) = v29;
    *(_BYTE *)(v35 + 64) = v30;
    *(_QWORD *)(v35 + 72) = v31;
    *(_QWORD *)(v35 + 80) = v34;
    *(_BYTE *)(v35 + 88) = v32;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    result = (void *)sub_1A54E31DC(v31);
  }
  v38 = v36 + 2;
  if (v38 >= v13)
    goto LABEL_26;
  v37 = *(_QWORD *)(v6 + 8 * v38);
  if (v37)
  {
    v9 = v38;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v38 + 1;
    if (__OFADD__(v38, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v37 = *(_QWORD *)(v6 + 8 * v9);
    ++v38;
    if (v37)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A554F8CC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79ABA8);
  v2 = *v0;
  v3 = sub_1A594CA44();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 4 * v15;
    v17 = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * v15);
    v18 = 16 * v15;
    v19 = *(_QWORD *)(v2 + 56) + v18;
    v20 = *(_BYTE *)v19;
    v21 = *(_QWORD *)(v19 + 8);
    *(_DWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v22 = *(_QWORD *)(v4 + 56) + v18;
    *(_BYTE *)v22 = v20;
    *(_QWORD *)(v22 + 8) = v21;
    result = (void *)_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

char *sub_1A554FA80()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AB80);
  v2 = *v0;
  v3 = sub_1A594CA44();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (char *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (char *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = (char *)memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_26;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
        break;
    }
LABEL_25:
    v27 = __clz(__rbit64(v25));
    v12 = (v25 - 1) & v25;
    v15 = v27 + (v9 << 6);
LABEL_12:
    v16 = 4 * v15;
    v17 = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * v15);
    v18 = 24 * v15;
    v19 = *(_QWORD *)(v2 + 56) + v18;
    v20 = *(_DWORD *)v19;
    v21 = *(_QWORD *)(v19 + 8);
    v22 = *(_BYTE *)(v19 + 16);
    LOBYTE(v19) = *(_BYTE *)(v19 + 17);
    result = *(char **)(v4 + 48);
    *(_DWORD *)&result[v16] = v17;
    v23 = *(_QWORD *)(v4 + 56) + v18;
    *(_DWORD *)v23 = v20;
    *(_QWORD *)(v23 + 8) = v21;
    *(_BYTE *)(v23 + 16) = v22;
    *(_BYTE *)(v23 + 17) = v19;
  }
  v26 = v24 + 2;
  if (v26 >= v13)
    goto LABEL_26;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A554FC34()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  char v23;
  __int16 v24;
  char v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7961E8);
  v2 = *v0;
  v3 = sub_1A594CA44();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v33 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v33 >= v13)
      goto LABEL_26;
    v34 = *(_QWORD *)(v6 + 8 * v33);
    ++v9;
    if (!v34)
    {
      v9 = v33 + 1;
      if (v33 + 1 >= v13)
        goto LABEL_26;
      v34 = *(_QWORD *)(v6 + 8 * v9);
      if (!v34)
        break;
    }
LABEL_25:
    v12 = (v34 - 1) & v34;
    v15 = __clz(__rbit64(v34)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 16 * v15;
    v18 = *(_QWORD *)v17;
    LODWORD(v17) = *(_DWORD *)(v17 + 8);
    v19 = 72 * v15;
    v20 = *(_QWORD *)(v2 + 56) + v19;
    v21 = *(_QWORD *)v20;
    v22 = *(_DWORD *)(v20 + 8);
    v23 = *(_BYTE *)(v20 + 12);
    v24 = *(_WORD *)(v20 + 14);
    v25 = *(_BYTE *)(v20 + 16);
    v26 = *(_QWORD *)(v20 + 56);
    v27 = *(_BYTE *)(v20 + 64);
    v28 = *(_BYTE *)(v20 + 65);
    v29 = *(_QWORD *)(v4 + 48) + v16;
    v30 = *(_OWORD *)(v20 + 24);
    v31 = *(_OWORD *)(v20 + 40);
    *(_QWORD *)v29 = v18;
    *(_DWORD *)(v29 + 8) = v17;
    v32 = *(_QWORD *)(v4 + 56) + v19;
    *(_QWORD *)v32 = v21;
    *(_DWORD *)(v32 + 8) = v22;
    *(_BYTE *)(v32 + 12) = v23;
    *(_WORD *)(v32 + 14) = v24;
    *(_BYTE *)(v32 + 16) = v25;
    *(_OWORD *)(v32 + 24) = v30;
    *(_OWORD *)(v32 + 40) = v31;
    *(_QWORD *)(v32 + 56) = v26;
    *(_BYTE *)(v32 + 64) = v27;
    *(_BYTE *)(v32 + 65) = v28;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    result = (void *)_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  v35 = v33 + 2;
  if (v35 >= v13)
    goto LABEL_26;
  v34 = *(_QWORD *)(v6 + 8 * v35);
  if (v34)
  {
    v9 = v35;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v35 + 1;
    if (__OFADD__(v35, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v34 = *(_QWORD *)(v6 + 8 * v9);
    ++v35;
    if (v34)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A554FE44()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8710);
  v2 = *v0;
  v3 = sub_1A594CA44();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(v2 + 48) + 16 * v15;
    v17 = *(_QWORD *)v16;
    LODWORD(v16) = *(_DWORD *)(v16 + 8);
    v18 = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v15);
    v19 = *(_QWORD *)(v4 + 48) + 16 * v15;
    *(_QWORD *)v19 = v17;
    *(_DWORD *)(v19 + 8) = v16;
    *(_BYTE *)(*(_QWORD *)(v4 + 56) + v15) = v18;
    result = (void *)_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A554FFF4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AB50);
  v2 = *v0;
  v3 = sub_1A594CA44();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 16 * v15;
    v18 = *(_QWORD *)v17;
    LODWORD(v17) = *(_DWORD *)(v17 + 8);
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = *(_QWORD *)(v4 + 48) + v16;
    *(_QWORD *)v21 = v18;
    *(_DWORD *)(v21 + 8) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    result = (void *)_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A55501A8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  __int128 v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7961F0);
  v2 = *v0;
  v3 = sub_1A594CA44();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 4 * v15;
    v17 = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * v15);
    v18 = 24 * v15;
    v19 = *(_QWORD *)(v2 + 56) + v18;
    v20 = *(_BYTE *)v19;
    v21 = *(_OWORD *)(v19 + 8);
    *(_DWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v22 = *(_QWORD *)(v4 + 56) + v18;
    *(_BYTE *)v22 = v20;
    *(_OWORD *)(v22 + 8) = v21;
    result = (void *)_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A5550364()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79ABD8);
  v2 = *v0;
  v3 = sub_1A594CA44();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 8 * v15;
    v21 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v22 = v19;
    v22[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v20) = v21;
    result = (void *)_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A5550510()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  char v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7A10D0);
  v2 = *v0;
  v3 = sub_1A594CA44();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      v9 = v27 + 1;
      if (v27 + 1 >= v13)
        goto LABEL_26;
      v28 = *(_QWORD *)(v6 + 8 * v9);
      if (!v28)
        break;
    }
LABEL_25:
    v12 = (v28 - 1) & v28;
    v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v17;
    v19 = v17[1];
    v20 = 24 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_DWORD *)v21;
    v23 = *(_BYTE *)(v21 + 4);
    v24 = *(_QWORD *)(v21 + 8);
    LOBYTE(v21) = *(_BYTE *)(v21 + 16);
    v25 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v25 = v18;
    v25[1] = v19;
    v26 = *(_QWORD *)(v4 + 56) + v20;
    *(_DWORD *)v26 = v22;
    *(_BYTE *)(v26 + 4) = v23;
    *(_QWORD *)(v26 + 8) = v24;
    *(_BYTE *)(v26 + 16) = v21;
    result = (void *)_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  v29 = v27 + 2;
  if (v29 >= v13)
    goto LABEL_26;
  v28 = *(_QWORD *)(v6 + 8 * v29);
  if (v28)
  {
    v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v9);
    ++v29;
    if (v28)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A55506E0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AB40);
  v2 = *v0;
  v3 = sub_1A594CA44();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v18 = *(_QWORD *)v17;
    LODWORD(v17) = *(_DWORD *)(v17 + 8);
    v19 = *(_QWORD *)(v2 + 56) + v16;
    v20 = *(_QWORD *)v19;
    v21 = *(unsigned int *)(v19 + 8);
    v22 = *(_QWORD *)(v4 + 48) + v16;
    v23 = *(_BYTE *)(v19 + 12);
    *(_QWORD *)v22 = v18;
    *(_DWORD *)(v22 + 8) = v17;
    v24 = *(_QWORD *)(v4 + 56) + v16;
    *(_QWORD *)v24 = v20;
    *(_DWORD *)(v24 + 8) = v21;
    *(_BYTE *)(v24 + 12) = v23;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    result = (void *)sub_1A54E4334(v20, v21, v23);
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A55508C0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AB48);
  v2 = *v0;
  v3 = sub_1A594CA44();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 16 * v15;
    v18 = *(_QWORD *)v17;
    LODWORD(v17) = *(_DWORD *)(v17 + 8);
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = *(_QWORD *)(v4 + 48) + v16;
    *(_QWORD *)v21 = v18;
    *(_DWORD *)(v21 + 8) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    result = (void *)_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A5550A7C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79ABB8);
  v2 = *v0;
  v3 = sub_1A594CA44();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v17;
    v19 = v17[1];
    v20 = 8 * v15;
    v21 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v22 = v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v20) = v21;
    result = (void *)_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A5550C28()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AB90);
  v2 = *v0;
  v3 = sub_1A594CA44();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 24 * v15);
    v17 = *v16;
    v18 = v16[1];
    v19 = v16[2];
    LOBYTE(v16) = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v15);
    v20 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 24 * v15);
    *v20 = v17;
    v20[1] = v18;
    v20[2] = v19;
    *(_BYTE *)(*(_QWORD *)(v4 + 56) + v15) = (_BYTE)v16;
    result = (void *)sub_1A54FA300(v17, v18);
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A5550DDC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE7A10B8);
  v2 = *v0;
  v3 = sub_1A594CA44();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 4 * v15;
    v17 = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * v15);
    v18 = 8 * v15;
    v19 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v18);
    *(_DWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v18) = v19;
    result = (void *)_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A5550F80()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79ABA0);
  v2 = *v0;
  v3 = sub_1A594CA44();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v29 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v29 >= v13)
      goto LABEL_26;
    v30 = *(_QWORD *)(v6 + 8 * v29);
    ++v9;
    if (!v30)
    {
      v9 = v29 + 1;
      if (v29 + 1 >= v13)
        goto LABEL_26;
      v30 = *(_QWORD *)(v6 + 8 * v9);
      if (!v30)
        break;
    }
LABEL_25:
    v12 = (v30 - 1) & v30;
    v15 = __clz(__rbit64(v30)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 40 * v15;
    v18 = *(_BYTE *)v17;
    v19 = *(_DWORD *)(v17 + 4);
    v20 = *(_QWORD *)(v17 + 8);
    v21 = *(_DWORD *)(v17 + 16);
    v22 = *(_QWORD *)(v17 + 24);
    v23 = *(_QWORD *)(v17 + 32);
    v24 = 12 * v15;
    v25 = *(_QWORD *)(v2 + 56) + v24;
    v26 = *(_QWORD *)v25;
    LOBYTE(v25) = *(_BYTE *)(v25 + 8);
    v27 = *(_QWORD *)(v4 + 48) + v16;
    *(_BYTE *)v27 = v18;
    *(_DWORD *)(v27 + 4) = v19;
    *(_QWORD *)(v27 + 8) = v20;
    *(_DWORD *)(v27 + 16) = v21;
    *(_QWORD *)(v27 + 24) = v22;
    *(_QWORD *)(v27 + 32) = v23;
    v28 = *(_QWORD *)(v4 + 56) + v24;
    *(_QWORD *)v28 = v26;
    *(_BYTE *)(v28 + 8) = v25;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    result = (void *)sub_1A54E42B4(v22, v23);
  }
  v31 = v29 + 2;
  if (v31 >= v13)
    goto LABEL_26;
  v30 = *(_QWORD *)(v6 + 8 * v31);
  if (v30)
  {
    v9 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v30 = *(_QWORD *)(v6 + 8 * v9);
    ++v31;
    if (v30)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A5551178()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AB98);
  v2 = *v0;
  v3 = sub_1A594CA44();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    swift_retain();
    result = (void *)_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A5551320()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  __int128 v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AB70);
  v2 = *v0;
  v3 = sub_1A594CA44();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 4 * v15;
    v17 = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * v15);
    v18 = 40 * v15;
    v19 = *(_QWORD *)(v2 + 56) + v18;
    v20 = *(_BYTE *)v19;
    v21 = *(_QWORD *)(v19 + 8);
    v22 = *(_BYTE *)(v19 + 32);
    v23 = *(_OWORD *)(v19 + 16);
    *(_DWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v24 = *(_QWORD *)(v4 + 56) + v18;
    *(_BYTE *)v24 = v20;
    *(_QWORD *)(v24 + 8) = v21;
    *(_OWORD *)(v24 + 16) = v23;
    *(_BYTE *)(v24 + 32) = v22;
    result = (void *)sub_1A54E42B4(v21, v23);
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A55514EC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  __int128 v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8880);
  v2 = *v0;
  v3 = sub_1A594CA44();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 4 * v15;
    v17 = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * v15);
    v18 = 16 * v15;
    v19 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v18);
    *(_DWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v18) = v19;
    result = (void *)sub_1A54E42B4(v19, *((unint64_t *)&v19 + 1));
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A5551698()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AB68);
  v2 = *v0;
  v3 = sub_1A594CA44();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_26;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
        break;
    }
LABEL_25:
    v12 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    v16 = 4 * v15;
    v17 = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * v15);
    v18 = 24 * v15;
    v19 = *(_QWORD *)(v2 + 56) + v18;
    v20 = *(_BYTE *)v19;
    v21 = *(_QWORD *)(v19 + 8);
    v22 = *(_QWORD *)(v19 + 16);
    *(_DWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v23 = *(_QWORD *)(v4 + 56) + v18;
    *(_BYTE *)v23 = v20;
    *(_QWORD *)(v23 + 8) = v21;
    *(_QWORD *)(v23 + 16) = v22;
    result = (void *)sub_1A54E42B4(v21, v22);
  }
  v26 = v24 + 2;
  if (v26 >= v13)
    goto LABEL_26;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A5551850()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  __int128 v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AB78);
  v2 = *v0;
  v3 = sub_1A594CA44();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 4 * v15;
    v17 = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * v15);
    v18 = 16 * v15;
    v19 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v18);
    *(_DWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v18) = v19;
    result = (void *)_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A55519F8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AB88);
  v2 = *v0;
  v3 = sub_1A594CA44();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_QWORD *)(v2 + 56) + v16;
    v18 = *(_QWORD *)v17;
    v19 = *(unsigned int *)(v17 + 8);
    v20 = *(_BYTE *)(v17 + 12);
    *(_OWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_OWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v21 = *(_QWORD *)(v4 + 56) + v16;
    *(_QWORD *)v21 = v18;
    *(_DWORD *)(v21 + 8) = v19;
    *(_BYTE *)(v21 + 12) = v20;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    result = (void *)sub_1A54E4334(v18, v19, v20);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_1A5551BE4(uint64_t *a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  void (*v4)(id *__return_ptr, id *);
  uint64_t (*v5)(id *);
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  char v17;
  __int16 v18;
  char v19;
  uint64_t v20;
  char v21;
  char v22;
  id v23;
  unint64_t v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  int64_t v29;
  _QWORD *v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  char v37;
  unint64_t v38;
  char v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  void *v45;
  id v46;
  void (*v47)(id *__return_ptr, id *);
  uint64_t v48;
  unsigned int v49;
  int64_t v52;
  uint64_t v53;
  id v54;
  unint64_t v55;
  uint64_t v56;
  id v57;
  unint64_t v58;
  uint64_t v59;
  int v60;
  char v61;
  __int16 v62;
  char v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  char v67;
  char v68;
  id v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v4 = (void (*)(id *__return_ptr, id *))a1[1];
  v5 = (uint64_t (*)(id *))a1[3];
  v72 = *a1;
  v3 = v72;
  v53 = v72 + 64;
  v6 = -1 << *(_BYTE *)(v72 + 32);
  if (-v6 < 64)
    v7 = ~(-1 << -(char)v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v72 + 64);
  v47 = (void (*)(id *__return_ptr, id *))a1[5];
  sub_1A54FCA28((uint64_t)&v72);
  v52 = (unint64_t)(63 - v6) >> 6;
  swift_retain();
  swift_retain();
  swift_retain();
  v9 = 0;
  if (!v8)
    goto LABEL_8;
LABEL_5:
  v10 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  v11 = v10 | (v9 << 6);
  while (1)
  {
    v12 = *(_QWORD *)(v3 + 48) + 16 * v11;
    v13 = *(void **)v12;
    LODWORD(v12) = *(_DWORD *)(v12 + 8);
    v14 = *(_QWORD *)(v3 + 56) + 72 * v11;
    v15 = *(_QWORD *)v14;
    v16 = *(_DWORD *)(v14 + 8);
    v17 = *(_BYTE *)(v14 + 12);
    v18 = *(_WORD *)(v14 + 14);
    v19 = *(_BYTE *)(v14 + 16);
    v20 = *(_QWORD *)(v14 + 56);
    v21 = *(_BYTE *)(v14 + 64);
    v22 = *(_BYTE *)(v14 + 65);
    v57 = v13;
    LODWORD(v58) = v12;
    v59 = v15;
    v60 = v16;
    v61 = v17;
    v62 = v18;
    v63 = v19;
    v64 = *(_OWORD *)(v14 + 24);
    v65 = *(_OWORD *)(v14 + 40);
    v66 = v20;
    v67 = v21;
    v68 = v22;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v4(&v54, &v57);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v23 = v54;
    v24 = v55;
    v25 = v56;
    v69 = v54;
    v70 = v55;
    v71 = v56;
    if ((v5(&v69) & 1) != 0)
    {
      v57 = v23;
      v58 = v24;
      v59 = v25;
      v47(&v69, &v57);
      swift_bridgeObjectRelease();
      v48 = v71;
      v30 = (_QWORD *)*a3;
      v31 = (uint64_t)v69;
      v49 = v70;
      v33 = sub_1A54FDC30((uint64_t)v69, v70);
      v34 = v30[2];
      v35 = (v32 & 1) == 0;
      v36 = v34 + v35;
      if (__OFADD__(v34, v35))
        goto LABEL_43;
      v37 = v32;
      if (v30[3] >= v36)
      {
        if ((a2 & 1) != 0)
        {
          if ((v32 & 1) != 0)
            goto LABEL_39;
        }
        else
        {
          sub_1A554FFF4();
          if ((v37 & 1) != 0)
            goto LABEL_39;
        }
      }
      else
      {
        sub_1A5582BC8(v36, a2 & 1);
        v38 = sub_1A54FDC30(v31, v49);
        if ((v37 & 1) != (v39 & 1))
          goto LABEL_46;
        v33 = v38;
        if ((v37 & 1) != 0)
        {
LABEL_39:
          v45 = (void *)swift_allocError();
          swift_willThrow();
          v54 = v45;
          v46 = v45;
          __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D0);
          if ((swift_dynamicCast() & 1) == 0)
          {
            sub_1A54F81BC((uint64_t)&v72);
            swift_release();
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            sub_1A550F72C();
            swift_release();
            swift_release();
            swift_release();

            return;
          }
          goto LABEL_47;
        }
      }
      v40 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v33 >> 6) + 64) |= 1 << v33;
      v41 = v40[6] + 16 * v33;
      *(_QWORD *)v41 = v31;
      *(_DWORD *)(v41 + 8) = v49;
      *(_QWORD *)(v40[7] + 8 * v33) = v48;
      v42 = v40[2];
      v43 = __OFADD__(v42, 1);
      v44 = v42 + 1;
      if (v43)
        goto LABEL_44;
      v40[2] = v44;
      a2 = 1;
      if (v8)
        goto LABEL_5;
    }
    else
    {
      swift_bridgeObjectRelease();
      if (v8)
        goto LABEL_5;
    }
LABEL_8:
    v26 = v9 + 1;
    if (__OFADD__(v9, 1))
      break;
    if (v26 >= v52)
      goto LABEL_41;
    v27 = *(_QWORD *)(v53 + 8 * v26);
    if (!v27)
    {
      v28 = v9 + 2;
      if (v9 + 2 >= v52)
        goto LABEL_41;
      v27 = *(_QWORD *)(v53 + 8 * v28);
      if (v27)
        goto LABEL_13;
      v29 = v9 + 3;
      if (v9 + 3 >= v52)
        goto LABEL_41;
      v27 = *(_QWORD *)(v53 + 8 * v29);
      if (!v27)
      {
        v28 = v9 + 4;
        if (v9 + 4 >= v52)
          goto LABEL_41;
        v27 = *(_QWORD *)(v53 + 8 * v28);
        if (v27)
          goto LABEL_13;
        v29 = v9 + 5;
        if (v9 + 5 >= v52)
          goto LABEL_41;
        v27 = *(_QWORD *)(v53 + 8 * v29);
        if (!v27)
        {
          v28 = v9 + 6;
          if (v9 + 6 >= v52)
          {
LABEL_41:
            sub_1A54F81BC((uint64_t)&v72);
            swift_release();
            swift_release();
            swift_release();
            sub_1A550F72C();
            swift_release();
            swift_release();
            swift_release();
            return;
          }
          v27 = *(_QWORD *)(v53 + 8 * v28);
          if (!v27)
          {
            while (1)
            {
              v26 = v28 + 1;
              if (__OFADD__(v28, 1))
                goto LABEL_45;
              if (v26 >= v52)
                goto LABEL_41;
              v27 = *(_QWORD *)(v53 + 8 * v26);
              ++v28;
              if (v27)
                goto LABEL_17;
            }
          }
LABEL_13:
          v26 = v28;
          goto LABEL_17;
        }
      }
      v26 = v29;
    }
LABEL_17:
    v8 = (v27 - 1) & v27;
    v11 = __clz(__rbit64(v27)) + (v26 << 6);
    v9 = v26;
  }
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  sub_1A594CDF8();
  __break(1u);
LABEL_47:
  v57 = 0;
  v58 = 0xE000000000000000;
  sub_1A594C720();
  sub_1A594B5F8();
  sub_1A594C924();
  sub_1A594B5F8();
  sub_1A594C9C0();
  __break(1u);
}

uint64_t sub_1A55521E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t result;
  int v8;
  char v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = a3(a2);
  if ((v9 & 1) != 0)
    goto LABEL_17;
  v10 = *(_DWORD *)(a2 + 36);
  if (v10 != v8)
  {
    __break(1u);
    goto LABEL_12;
  }
  v11 = 1 << *(_BYTE *)(a2 + 32);
  if (v11 < result)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if ((*(_BYTE *)(a1 + 16) & 1) != 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v12 = *(_QWORD *)(a1 + 8);
  if (v10 != (_DWORD)v12)
    goto LABEL_13;
  if (*(_QWORD *)a1 < result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if ((*(_BYTE *)(a1 + 40) & 1) == 0)
  {
    v13 = *(_QWORD *)(a1 + 32);
    if (v10 == (_DWORD)v13)
    {
      v14 = *(_QWORD *)(a1 + 24);
      if (v11 >= v14)
      {
        *(_QWORD *)a4 = *(_QWORD *)a1;
        *(_QWORD *)(a4 + 8) = v12;
        *(_BYTE *)(a4 + 16) = 0;
        *(_QWORD *)(a4 + 24) = v14;
        *(_QWORD *)(a4 + 32) = v13;
        *(_BYTE *)(a4 + 40) = 0;
        *(_QWORD *)(a4 + 48) = a2;
        return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      }
      goto LABEL_16;
    }
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
LABEL_19:
  __break(1u);
  return result;
}

BOOL sub_1A55522B4(_QWORD *a1)
{
  return *a1 != 0;
}

uint64_t sub_1A55522C4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  result = *a1;
  if (result)
  {
    v6 = a1 + 1;
    v4 = a1[1];
    v5 = v6[1];
    *(_QWORD *)a2 = result;
    *(_DWORD *)(a2 + 8) = v4;
    *(_QWORD *)(a2 + 16) = v5;
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A55522E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unsigned int *v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  sub_1A550F734();
  result = sub_1A594BBD4();
  v8 = result;
  if (v2)
  {
    v4 = (unsigned int *)(a1 + 40);
    do
    {
      v5 = *((_QWORD *)v4 - 1);
      v6 = *v4;
      v4 += 4;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A54F2A14((uint64_t)&v7, v5, v6);
      swift_bridgeObjectRelease();
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

BOOL sub_1A555237C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  BOOL v5;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  BOOL v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _OWORD v23[3];
  _OWORD v24[2];
  _OWORD v25[3];
  _OWORD v26[2];
  _OWORD v27[5];
  _OWORD v28[5];
  uint64_t v29[2];
  uint64_t v30[2];
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;

  sub_1A5552568((uint64_t *)a1, (uint64_t)v30);
  sub_1A5552568((uint64_t *)a2, (uint64_t)v29);
  sub_1A5552568(v30, (uint64_t)&v31);
  if (v32 == 1)
  {
    sub_1A5552568(v29, (uint64_t)&v33);
    if ((v34 & 1) == 0)
      return 0;
  }
  else
  {
    v4 = v31;
    sub_1A5552568(v29, (uint64_t)&v33);
    v5 = 0;
    if ((v34 & 1) != 0 || v4 != v33)
      return v5;
  }
  if (*(unsigned __int8 *)(a1 + 9) != *(unsigned __int8 *)(a2 + 9)
    || *(unsigned __int8 *)(a1 + 10) != *(unsigned __int8 *)(a2 + 10))
  {
    return 0;
  }
  if (*(_BYTE *)(a1 + 17))
    v7 = 256;
  else
    v7 = 0;
  v8 = v7 | *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 18))
    v9 = 0x10000;
  else
    v9 = 0;
  v10 = v8 | v9;
  if (*(_BYTE *)(a2 + 17))
    v11 = 256;
  else
    v11 = 0;
  v12 = v11 | *(unsigned __int8 *)(a2 + 16);
  if (*(_BYTE *)(a2 + 18))
    v13 = 0x10000;
  else
    v13 = 0;
  v14 = static Environment.__derived_struct_equals(_:_:)(v10, *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32), *(_QWORD *)(a1 + 40), v12 | v13, *(_QWORD *)(a2 + 24), *(_BYTE *)(a2 + 32), *(_QWORD *)(a2 + 40));
  v5 = 0;
  if (v14)
  {
    if ((sub_1A54ECE00(*(_QWORD *)(a1 + 48), *(_QWORD *)(a2 + 48)) & 1) != 0
      && (sub_1A54FA3A4(*(_QWORD *)(a1 + 56), *(_QWORD *)(a2 + 56)) & 1) != 0)
    {
      v15 = *(_OWORD *)(a1 + 112);
      v28[2] = *(_OWORD *)(a1 + 96);
      v28[3] = v15;
      v28[4] = *(_OWORD *)(a1 + 128);
      v16 = *(_OWORD *)(a1 + 80);
      v28[0] = *(_OWORD *)(a1 + 64);
      v28[1] = v16;
      v17 = *(_OWORD *)(a2 + 112);
      v27[2] = *(_OWORD *)(a2 + 96);
      v27[3] = v17;
      v27[4] = *(_OWORD *)(a2 + 128);
      v18 = *(_OWORD *)(a2 + 80);
      v27[0] = *(_OWORD *)(a2 + 64);
      v27[1] = v18;
      if ((sub_1A554181C((uint64_t)v28, (uint64_t)v27) & 1) != 0)
      {
        v19 = *(_OWORD *)(a1 + 192);
        v25[2] = *(_OWORD *)(a1 + 176);
        v26[0] = v19;
        *(_OWORD *)((char *)v26 + 12) = *(_OWORD *)(a1 + 204);
        v20 = *(_OWORD *)(a1 + 160);
        v25[0] = *(_OWORD *)(a1 + 144);
        v25[1] = v20;
        v21 = *(_OWORD *)(a2 + 192);
        v23[2] = *(_OWORD *)(a2 + 176);
        v24[0] = v21;
        *(_OWORD *)((char *)v24 + 12) = *(_OWORD *)(a2 + 204);
        v22 = *(_OWORD *)(a2 + 160);
        v23[0] = *(_OWORD *)(a2 + 144);
        v23[1] = v22;
        if (sub_1A5521174((uint64_t)v25, (uint64_t)v23))
          return _s13IMAP2Protocol13EncodedStringV2eeoiySbAC_ACtFZ_0(*(_QWORD *)(a1 + 224), *(_QWORD *)(a2 + 224));
      }
    }
    return 0;
  }
  return v5;
}

uint64_t sub_1A5552568(uint64_t *a1, uint64_t a2)
{
  __swift_memcpy9_8_5(a2, a1);
  return a2;
}

uint64_t sub_1A55525A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  sub_1A5553628();
  result = sub_1A594BBD4();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A54F3068(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1A5552638(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unsigned __int8 *v4;
  unsigned int v5;
  char v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  sub_1A555308C();
  result = sub_1A594BBD4();
  v7 = result;
  if (v2)
  {
    v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      v5 = *v4++;
      sub_1A54F3290(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1A55526A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7[2];
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  sub_1A5528D10();
  result = sub_1A594BBD4();
  v8 = result;
  if (v2)
  {
    v4 = (unint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      sub_1A54E42B4(v5, *v4);
      sub_1A54F33AC(v7, v5, v6);
      sub_1A54E46E8(v7[0], v7[1]);
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1A5552740(uint64_t a1)
{
  return sub_1A5552778(a1, (void (*)(void))sub_1A5523008, (uint64_t)&type metadata for SyncRequest.ID, (void (*)(_BYTE *, _QWORD))sub_1A54F305C);
}

uint64_t sub_1A555275C(uint64_t a1)
{
  return sub_1A5552778(a1, (void (*)(void))sub_1A555366C, (uint64_t)&type metadata for SearchRequest.ID, (void (*)(_BYTE *, _QWORD))sub_1A54F402C);
}

uint64_t sub_1A5552778(uint64_t a1, void (*a2)(void), uint64_t a3, void (*a4)(_BYTE *, _QWORD))
{
  uint64_t v6;
  uint64_t result;
  unsigned int *v8;
  unsigned int v9;
  _BYTE v10[4];
  uint64_t v11;

  v6 = *(_QWORD *)(a1 + 16);
  a2();
  result = sub_1A594BBD4();
  v11 = result;
  if (v6)
  {
    v8 = (unsigned int *)(a1 + 32);
    do
    {
      v9 = *v8++;
      a4(v10, v9);
      --v6;
    }
    while (v6);
    return v11;
  }
  return result;
}

uint64_t sub_1A55527EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  sub_1A54E3288();
  result = sub_1A594BBD4();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A54F2C18(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1A5552880(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[8];
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[8];
  _BYTE v32[40];
  _OWORD v33[3];
  _QWORD v34[9];
  _QWORD v35[7];

  v2 = *(_QWORD *)(a1 + 16);
  sub_1A5553594();
  v3 = sub_1A594BBD4();
  v27 = v2;
  if (!v2)
    return v3;
  v4 = 0;
  v26 = a1 + 32;
  while (1)
  {
    sub_1A55530FC(v26 + 48 * v4, (uint64_t)v35);
    sub_1A594CE64();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594C6A8();
    v11 = sub_1A594CED0();
    v12 = -1 << *(_BYTE *)(v3 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v3 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      v14 = ~v12;
      do
      {
        sub_1A55530FC(*(_QWORD *)(v3 + 48) + 48 * v13, (uint64_t)v34);
        v15 = v34[0];
        v16 = v35[0];
        sub_1A55530FC((uint64_t)v34, (uint64_t)v33);
        sub_1A55530FC((uint64_t)v35, (uint64_t)v31);
        if (v15 == v16)
        {
          v17 = MEMORY[0x1A85AEB14]((char *)v33 + 8, v32);
          sub_1A5553138((uint64_t)v31);
          sub_1A5553138((uint64_t)v33);
          sub_1A5553138((uint64_t)v34);
          if ((v17 & 1) != 0)
            goto LABEL_7;
        }
        else
        {
          sub_1A5553138((uint64_t)v31);
          sub_1A5553138((uint64_t)v33);
          sub_1A5553138((uint64_t)v34);
        }
        v13 = (v13 + 1) & v14;
      }
      while (((*(_QWORD *)(v3 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1A55530FC((uint64_t)v35, (uint64_t)v33);
    v30 = v3;
    if (*(_QWORD *)(v3 + 24) > *(_QWORD *)(v3 + 16))
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1A557DEB0();
        v3 = v30;
      }
    }
    else
    {
      if (isUniquelyReferenced_nonNull_native)
        sub_1A557ADE0();
      else
        sub_1A557F7F0();
      v3 = v30;
      sub_1A594CE64();
      sub_1A594C6A8();
      v19 = sub_1A594CED0();
      v20 = -1 << *(_BYTE *)(v3 + 32);
      v13 = v19 & ~v20;
      if (((*(_QWORD *)(v3 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
      {
        v21 = ~v20;
        do
        {
          sub_1A55530FC(*(_QWORD *)(v3 + 48) + 48 * v13, (uint64_t)v34);
          v22 = v34[0];
          v23 = *(_QWORD *)&v33[0];
          sub_1A55530FC((uint64_t)v34, (uint64_t)v31);
          sub_1A55530FC((uint64_t)v33, (uint64_t)v28);
          if (v22 == v23)
          {
            v24 = MEMORY[0x1A85AEB14](v32, &v29);
            sub_1A5553138((uint64_t)v28);
            sub_1A5553138((uint64_t)v31);
            sub_1A5553138((uint64_t)v34);
            if ((v24 & 1) != 0)
              goto LABEL_28;
          }
          else
          {
            sub_1A5553138((uint64_t)v28);
            sub_1A5553138((uint64_t)v31);
            sub_1A5553138((uint64_t)v34);
          }
          v13 = (v13 + 1) & v21;
        }
        while (((*(_QWORD *)(v3 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
      }
    }
    *(_QWORD *)(v3 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v13;
    v5 = (_OWORD *)(*(_QWORD *)(v3 + 48) + 48 * v13);
    v6 = v33[0];
    v7 = v33[2];
    v5[1] = v33[1];
    v5[2] = v7;
    *v5 = v6;
    v8 = *(_QWORD *)(v3 + 16);
    v9 = __OFADD__(v8, 1);
    v10 = v8 + 1;
    if (v9)
      break;
    *(_QWORD *)(v3 + 16) = v10;
LABEL_7:
    swift_bridgeObjectRelease();
    ++v4;
    sub_1A5553138((uint64_t)v35);
    if (v4 == v27)
      return v3;
  }
  __break(1u);
LABEL_28:
  result = sub_1A594CDEC();
  __break(1u);
  return result;
}

uint64_t sub_1A5552BFC(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7[2];
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  sub_1A5553CA0();
  result = sub_1A594BBD4();
  v8 = result;
  if (v2)
  {
    v4 = a1 + 48;
    do
    {
      v5 = *(_QWORD *)(v4 - 16);
      v6 = *(_QWORD *)(v4 - 8);
      v4 += 24;
      sub_1A54FA300(v5, v6);
      sub_1A54F4044((uint64_t)v7, v5, v6);
      sub_1A54FA2A8(v7[0], v7[1]);
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1A5552CA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v19;
  uint64_t v20;

  sub_1A54E3414();
  v4 = a2 & 0xFFFFFFFFFFLL;
  MessageIdentifierSet.count.getter(a1, a2 & 0xFFFFFFFFFFLL);
  sub_1A5553CE4();
  v5 = sub_1A594BBD4();
  v20 = v5;
  MessageIdentifierSet.startIndex.getter();
  v7 = v6;
  v9 = v8;
  MessageIdentifierSet.endIndex.getter();
  if (v7 != v11 || v9 != v10)
  {
    do
    {
      MessageIdentifierSet.subscript.getter();
      v13 = v19;
      v7 = MessageIdentifierSet.index(_:offsetBy:)(v7, v9, 1, a1, v4);
      v9 = v14;
      sub_1A54F456C(&v19, v13);
      MessageIdentifierSet.endIndex.getter();
    }
    while (v7 != v16 || v9 != v15);
    return v20;
  }
  return v5;
}

uint64_t sub_1A5552DE8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return result;
}

uint64_t sub_1A5552DF4(uint64_t a1)
{
  sub_1A5529B00(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

uint64_t sub_1A5552E24(uint64_t a1)
{
  sub_1A5552DE8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

uint64_t sub_1A5552E54(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, int a6, char a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v11;
  char v12;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  if (a4 < 0)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    return result;
  }
  v8 = a4;
  v11 = result;
  v12 = a3 & 1;
  if (a4)
  {
    if ((a7 & 1) == 0)
    {
      v16 = result;
      v17 = a2;
      while ((v12 & 1) == 0)
      {
        if ((_DWORD)v17 != a6)
        {
          __break(1u);
          goto LABEL_14;
        }
        if (v16 == a5)
        {
          v16 = 0;
          goto LABEL_12;
        }
        result = sub_1A558A15C(v16, v17, 0, a8);
        v16 = result;
        v17 = v18;
        v12 = v19 & 1;
        if (!--v8)
          goto LABEL_12;
      }
    }
    goto LABEL_15;
  }
  v16 = result;
LABEL_12:
  sub_1A5552DE8(v11, a2, a3 & 1);
  return v16;
}

uint64_t sub_1A5552F40()
{
  return swift_deallocObject();
}

BOOL sub_1A5552F50(uint64_t a1, unsigned __int8 a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _BOOL8 result;

  if (a2 > 1u)
    return 0;
  v5 = *(_QWORD *)(v4 + 16);
  v6 = v5 - a4;
  if (v5 >= a4)
  {
    if ((uint64_t)(v5 - a4) >= 0)
      return (double)v6 / 1000000000.0 > 60.0;
  }
  else
  {
    if ((uint64_t)(a4 - v5) >= 0)
    {
      v6 = v5 - a4;
      return (double)v6 / 1000000000.0 > 60.0;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5552FB4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5552FD8(unsigned int *a1)
{
  uint64_t v1;

  return sub_1A54FC348(a1, *(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v1 + 16));
}

uint64_t sub_1A5552FE0(uint64_t a1, uint64_t a2)
{
  __swift_memcpy49_8_0(a2, a1);
  return a2;
}

uint64_t sub_1A555301C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for Task(a2, a1);
  return a2;
}

uint64_t sub_1A5553058(uint64_t a1)
{
  destroy for Task(a1);
  return a1;
}

unint64_t sub_1A555308C()
{
  unint64_t result;

  result = qword_1EE797D30;
  if (!qword_1EE797D30)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A586C, &type metadata for SyncStep);
    atomic_store(result, (unint64_t *)&qword_1EE797D30);
  }
  return result;
}

uint64_t *sub_1A55530D0(uint64_t *a1)
{
  sub_1A552CF80(*a1);
  return a1;
}

uint64_t sub_1A55530FC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for TaskID(a2, a1);
  return a2;
}

uint64_t sub_1A5553138(uint64_t a1)
{
  destroy for TaskID(a1);
  return a1;
}

uint64_t sub_1A555316C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 104))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A55531CC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ListMailboxes(a2, a1);
  return a2;
}

uint64_t sub_1A5553208(uint64_t a1)
{
  destroy for ListMailboxes(a1);
  return a1;
}

uint64_t sub_1A555323C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A5553288(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for CreateMailboxes(a2, a1);
  return a2;
}

uint64_t sub_1A55532C4(uint64_t a1)
{
  destroy for CreateMailboxes(a1);
  return a1;
}

uint64_t sub_1A55532FC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for DeleteMailboxes(a2, a1);
  return a2;
}

uint64_t sub_1A5553338(uint64_t a1)
{
  destroy for DeleteMailboxes(a1);
  return a1;
}

uint64_t objectdestroy_11Tm()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A55533BC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for DeleteMailboxes(a2, a1);
  return a2;
}

uint64_t sub_1A55533F8(uint64_t a1)
{
  destroy for DeleteMailboxes(a1);
  return a1;
}

uint64_t sub_1A555342C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A5553470(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for UpdateServerUnreadCount(a2, a1);
  return a2;
}

uint64_t sub_1A55534AC(uint64_t a1)
{
  destroy for UpdateServerUnreadCount(a1);
  return a1;
}

uint64_t sub_1A55534E0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A5553524(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for NotifySyncRequestCompletion(a2, a1);
  return a2;
}

uint64_t sub_1A5553560(uint64_t a1)
{
  destroy for NotifySyncRequestCompletion(a1);
  return a1;
}

unint64_t sub_1A5553594()
{
  unint64_t result;

  result = qword_1EE797D00;
  if (!qword_1EE797D00)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for TaskID, &type metadata for TaskID);
    atomic_store(result, (unint64_t *)&qword_1EE797D00);
  }
  return result;
}

unint64_t *sub_1A55535D8(unint64_t *a1)
{
  sub_1A5541A18(*a1);
  return a1;
}

unint64_t *sub_1A5553600(unint64_t *a1)
{
  sub_1A5541AA0(*a1);
  return a1;
}

unint64_t sub_1A5553628()
{
  unint64_t result;

  result = qword_1EE796960;
  if (!qword_1EE796960)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for PermanentFlag, &type metadata for PermanentFlag);
    atomic_store(result, (unint64_t *)&qword_1EE796960);
  }
  return result;
}

unint64_t sub_1A555366C()
{
  unint64_t result;

  result = qword_1EE795D88;
  if (!qword_1EE795D88)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for SearchRequest.ID, &type metadata for SearchRequest.ID);
    atomic_store(result, (unint64_t *)&qword_1EE795D88);
  }
  return result;
}

unint64_t sub_1A55536B0()
{
  unint64_t result;

  result = qword_1EE7A0480;
  if (!qword_1EE7A0480)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ConnectionID, &type metadata for ConnectionID);
    atomic_store(result, (unint64_t *)&qword_1EE7A0480);
  }
  return result;
}

uint64_t destroy for State.NextTask(uint64_t a1)
{
  int v1;

  v1 = *(unsigned __int8 *)(a1 + 48);
  if (v1 != 255)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    if ((v1 & 1) != 0)
      swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for State.NextTask(uint64_t a1, uint64_t a2)
{
  int v4;
  __int128 v5;
  __int128 v6;

  v4 = *(unsigned __int8 *)(a2 + 48);
  if (v4 == 255)
  {
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v6;
    if ((v4 & 1) != 0)
    {
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_BYTE *)(a1 + 48) = 1;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
    else
    {
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
      *(_BYTE *)(a1 + 48) = 0;
    }
  }
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for State.NextTask(uint64_t a1, __int128 *a2)
{
  int v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *((unsigned __int8 *)a2 + 48);
  if (*(unsigned __int8 *)(a1 + 48) == 255)
  {
    if (v4 == 255)
    {
      v8 = *a2;
      v9 = a2[1];
      v10 = a2[2];
      *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
      *(_OWORD *)(a1 + 16) = v9;
      *(_OWORD *)(a1 + 32) = v10;
      *(_OWORD *)a1 = v8;
      goto LABEL_11;
    }
    if ((v4 & 1) != 0)
    {
LABEL_8:
      v11 = *((_QWORD *)a2 + 3);
      *(_QWORD *)(a1 + 24) = v11;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v11 - 8))(a1, a2);
      *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
      *(_BYTE *)(a1 + 48) = 1;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_11;
    }
LABEL_10:
    v12 = *((_QWORD *)a2 + 3);
    *(_QWORD *)(a1 + 24) = v12;
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    (**(void (***)(uint64_t, __int128 *))(v12 - 8))(a1, a2);
    *(_BYTE *)(a1 + 48) = 0;
    goto LABEL_11;
  }
  if (v4 != 255)
  {
    if ((__int128 *)a1 == a2)
      goto LABEL_11;
    sub_1A5553058(a1);
    if ((a2[3] & 1) != 0)
      goto LABEL_8;
    goto LABEL_10;
  }
  sub_1A5553058(a1);
  v6 = a2[1];
  v5 = a2[2];
  v7 = *a2;
  *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)a1 = v7;
LABEL_11:
  *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy64_8_0(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for State.NextTask(uint64_t a1, uint64_t a2)
{
  __int128 v5;

  if (*(unsigned __int8 *)(a1 + 48) == 255)
    goto LABEL_7;
  if (*(unsigned __int8 *)(a2 + 48) == 255 || a1 != a2)
  {
    sub_1A5553058(a1);
LABEL_7:
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  }
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for State.NextTask(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for State.NextTask(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for State.NextTask()
{
  return &type metadata for State.NextTask;
}

uint64_t storeEnumTagSinglePayload for State.SyncSteps(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A5553A80 + 4 * byte_1A59A560A[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A5553AB4 + 4 * byte_1A59A5605[v4]))();
}

uint64_t sub_1A5553AB4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5553ABC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5553AC4);
  return result;
}

uint64_t sub_1A5553AD0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5553AD8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A5553ADC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5553AE4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for State.SyncSteps()
{
  return &type metadata for State.SyncSteps;
}

unint64_t sub_1A5553B04()
{
  unint64_t result;

  result = qword_1EE7A8870;
  if (!qword_1EE7A8870)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A56E0, &type metadata for State.SyncSteps);
    atomic_store(result, (unint64_t *)&qword_1EE7A8870);
  }
  return result;
}

uint64_t sub_1A5553B48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A5553B5C(a1, a2, sub_1A558A0B8, sub_1A558A15C, a3);
}

uint64_t sub_1A5553B5C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t)@<X2>, uint64_t (*a4)(uint64_t, uint64_t, _QWORD, uint64_t)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  __int128 v21;
  _OWORD v22[3];
  uint64_t v23;
  _QWORD v24[2];
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;

  if (result < 0)
  {
LABEL_16:
    __break(1u);
  }
  else
  {
    v8 = result;
    result = a3(a2);
    v10 = result;
    v12 = v11;
    v14 = v13 & 1;
    if (v8)
    {
      v15 = *(unsigned int *)(a2 + 36);
      v16 = 1 << *(_BYTE *)(a2 + 32);
      while ((v14 & 1) == 0)
      {
        if ((_DWORD)v15 != (_DWORD)v12)
        {
          __break(1u);
          goto LABEL_16;
        }
        if (v10 == v16)
        {
          v14 = 0;
          v10 = v16;
          v12 = v15;
          goto LABEL_10;
        }
        result = a4(v10, v12, 0, a2);
        v10 = result;
        v12 = v17;
        v14 = v18 & 1;
        if (!--v8)
          goto LABEL_10;
      }
      goto LABEL_19;
    }
LABEL_10:
    result = a3(a2);
    if ((v14 & 1) != 0 || (v20 & 1) != 0)
      goto LABEL_20;
    if ((_DWORD)v12 == (_DWORD)v19)
    {
      if (v10 >= result)
      {
        v24[0] = result;
        v24[1] = v19;
        v25 = 0;
        v26 = v10;
        v27 = v12;
        v28 = 0;
        result = sub_1A55521E0((uint64_t)v24, a2, a3, (uint64_t)v22);
        v21 = v22[1];
        *(_OWORD *)a5 = v22[0];
        *(_OWORD *)(a5 + 16) = v21;
        *(_OWORD *)(a5 + 32) = v22[2];
        *(_QWORD *)(a5 + 48) = v23;
        return result;
      }
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
  return result;
}

unint64_t sub_1A5553CA0()
{
  unint64_t result;

  result = qword_1EE7978D0;
  if (!qword_1EE7978D0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AA60C, &type metadata for MoveAndCopyMessages.CommandID);
    atomic_store(result, (unint64_t *)&qword_1EE7978D0);
  }
  return result;
}

unint64_t sub_1A5553CE4()
{
  unint64_t result;

  result = qword_1EE796FB8;
  if (!qword_1EE796FB8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for UID, &type metadata for UID);
    atomic_store(result, (unint64_t *)&qword_1EE796FB8);
  }
  return result;
}

void sub_1A5553D28(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E4E71090;
}

uint64_t sub_1A5553D38(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A5553D68 + 4 * byte_1A59A5748[a1]))(0x636E79736552, 0xE600000000000000);
}

uint64_t sub_1A5553D68()
{
  return 0x73654D6863746546;
}

unint64_t sub_1A5553D8C()
{
  return 0xD000000000000015;
}

uint64_t sub_1A5553EC4()
{
  unsigned __int8 *v0;

  return sub_1A5553D38(*v0);
}

uint64_t sub_1A5553ECC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a2[1];
  v5 = a2[2];
  if ((sub_1A54ECC20(*a1, *a2) & 1) != 0 && (sub_1A54ECC20(v2, v4) & 1) != 0)
    return sub_1A54ECC20(v3, v5);
  else
    return 0;
}

uint64_t sub_1A5553F38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  uint64_t v38;

  v3 = a3;
  v5 = 0;
  v6 = a1 + 56;
  v38 = a2 + 56;
  v7 = MEMORY[0x1E0DEE9D8];
  v8 = a3 + 56;
  do
  {
    v9 = *((unsigned __int8 *)&unk_1E4E71090 + v5 + 32);
    if (*(_QWORD *)(a1 + 16))
    {
      sub_1A594CE64();
      sub_1A594CE88();
      v10 = sub_1A594CED0();
      v11 = -1 << *(_BYTE *)(a1 + 32);
      v12 = v10 & ~v11;
      if (((*(_QWORD *)(v6 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
      {
        v13 = *(_QWORD *)(a1 + 48);
        v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        if (*(unsigned __int8 *)(v13 + v12) == (_DWORD)v9)
          goto LABEL_13;
        v15 = ~v11;
        while (1)
        {
          v12 = (v12 + 1) & v15;
          if (((*(_QWORD *)(v6 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
            break;
          if (*(unsigned __int8 *)(v13 + v12) == (_DWORD)v9)
          {
            v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
            goto LABEL_13;
          }
        }
      }
    }
    v14 = sub_1A54EFEA0(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v17 = v14[2];
    v16 = v14[3];
    if (v17 >= v16 >> 1)
      v14 = sub_1A54EFEA0((_QWORD *)(v16 > 1), v17 + 1, 1, v14);
    v14[2] = v17 + 1;
    v18 = (char *)&v14[2 * v17];
    strcpy(v18 + 32, "not-completed");
    *((_WORD *)v18 + 23) = -4864;
    v3 = a3;
LABEL_13:
    if (!*(_QWORD *)(a2 + 16)
      || (sub_1A594CE64(),
          sub_1A594CE88(),
          v19 = sub_1A594CED0(),
          v20 = -1 << *(_BYTE *)(a2 + 32),
          v21 = v19 & ~v20,
          ((*(_QWORD *)(v38 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0))
    {
      if (!*(_QWORD *)(v3 + 16))
        goto LABEL_37;
LABEL_27:
      sub_1A594CE64();
      sub_1A594CE88();
      v27 = sub_1A594CED0();
      v28 = -1 << *(_BYTE *)(v3 + 32);
      v29 = v27 & ~v28;
      if (((*(_QWORD *)(v8 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) != 0)
      {
        v30 = *(_QWORD *)(v3 + 48);
        if (*(unsigned __int8 *)(v30 + v29) == (_DWORD)v9)
        {
LABEL_32:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v14 = sub_1A54EFEA0(0, v14[2] + 1, 1, v14);
          v33 = v14[2];
          v32 = v14[3];
          if (v33 >= v32 >> 1)
            v14 = sub_1A54EFEA0((_QWORD *)(v32 > 1), v33 + 1, 1, v14);
          v14[2] = v33 + 1;
          v34 = &v14[2 * v33];
          v34[4] = 0x6E65646E65706564;
          v34[5] = 0xEA00000000007963;
          v3 = a3;
        }
        else
        {
          v31 = ~v28;
          while (1)
          {
            v29 = (v29 + 1) & v31;
            if (((*(_QWORD *)(v8 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
              break;
            if (*(unsigned __int8 *)(v30 + v29) == (_DWORD)v9)
              goto LABEL_32;
          }
        }
      }
      goto LABEL_37;
    }
    v22 = *(_QWORD *)(a2 + 48);
    if (*(unsigned __int8 *)(v22 + v21) == (_DWORD)v9)
    {
LABEL_19:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v14 = sub_1A54EFEA0(0, v14[2] + 1, 1, v14);
      v25 = v14[2];
      v24 = v14[3];
      if (v25 >= v24 >> 1)
        v14 = sub_1A54EFEA0((_QWORD *)(v24 > 1), v25 + 1, 1, v14);
      v14[2] = v25 + 1;
      v26 = &v14[2 * v25];
      v26[4] = 0x74726174736572;
      v26[5] = 0xE700000000000000;
      v3 = a3;
    }
    else
    {
      v23 = ~v20;
      while (1)
      {
        v21 = (v21 + 1) & v23;
        if (((*(_QWORD *)(v38 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          break;
        if (*(unsigned __int8 *)(v22 + v21) == (_DWORD)v9)
          goto LABEL_19;
      }
    }
    if (*(_QWORD *)(v3 + 16))
      goto LABEL_27;
LABEL_37:
    if (v14[2])
      __asm { BR              X8 }
    swift_bridgeObjectRelease();
    ++v5;
  }
  while (v5 != 15);
  return v7;
}

BOOL sub_1A555467C(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v7 = *a1;
  if (!sub_1A54E9FCC(*a1, a2) || sub_1A54E9FCC(v7, a3))
    return 1;
  v8 = 0;
  v9 = a2 + 56;
  v10 = a3 + 56;
  while (*(_QWORD *)(a2 + 16))
  {
    v11 = *((unsigned __int8 *)&unk_1E4E71090 + v8 + 32);
    sub_1A594CE64();
    sub_1A594CE88();
    v12 = sub_1A594CED0();
    v13 = -1 << *(_BYTE *)(a2 + 32);
    v14 = v12 & ~v13;
    if (((*(_QWORD *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      break;
    v15 = *(_QWORD *)(a2 + 48);
    if (*(unsigned __int8 *)(v15 + v14) != v11)
    {
      v16 = ~v13;
      do
      {
        v14 = (v14 + 1) & v16;
        if (((*(_QWORD *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
          return 0;
      }
      while (*(unsigned __int8 *)(v15 + v14) != v11);
    }
    if (*(_QWORD *)(a3 + 16))
    {
      sub_1A594CE64();
      sub_1A594CE88();
      v17 = sub_1A594CED0();
      v18 = -1 << *(_BYTE *)(a3 + 32);
      v19 = v17 & ~v18;
      if (((*(_QWORD *)(v10 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) != 0)
      {
        v20 = *(_QWORD *)(a3 + 48);
        if (*(unsigned __int8 *)(v20 + v19) == v11)
          return 0;
        v21 = ~v18;
        while (1)
        {
          v19 = (v19 + 1) & v21;
          if (((*(_QWORD *)(v10 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
            break;
          if (*(unsigned __int8 *)(v20 + v19) == v11)
            return 0;
        }
      }
    }
    if (++v8 == 15)
      return sub_1A54E9FCC(v7, a4);
  }
  return 0;
}

uint64_t sub_1A5554864()
{
  uint64_t *v0;

  return sub_1A55549E0(*v0, v0[1]);
}

uint64_t sub_1A555486C(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v2 = 0;
  v3 = 0;
  v4 = a1 + 56;
  while (1)
  {
    if (*(_QWORD *)(a1 + 16))
    {
      v6 = *((unsigned __int8 *)&unk_1E4E71090 + v2 + 32);
      sub_1A594CE64();
      sub_1A594CE88();
      v7 = sub_1A594CED0();
      v8 = -1 << *(_BYTE *)(a1 + 32);
      v9 = v7 & ~v8;
      if (((*(_QWORD *)(v4 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0)
        break;
    }
LABEL_6:
    if (++v2 == 15)
      return v3;
  }
  v10 = *(_QWORD *)(a1 + 48);
  if (*(unsigned __int8 *)(v10 + v9) != v6)
  {
    v11 = ~v8;
    do
    {
      v9 = (v9 + 1) & v11;
      if (((*(_QWORD *)(v4 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_6;
    }
    while (*(unsigned __int8 *)(v10 + v9) != v6);
  }
  if (!HIDWORD(v2))
  {
    v5 = 1 << v2;
    if (v2 >= 0x20)
      v5 = 0;
    v3 = v5 | v3;
    goto LABEL_6;
  }
  result = sub_1A594C9B4();
  __break(1u);
  return result;
}

uint64_t sub_1A55549E0(uint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  int v5;
  int64_t v6;
  uint64_t v7;
  int v8;
  _QWORD v11[2];

  sub_1A594C720();
  swift_bridgeObjectRelease();
  strcpy((char *)v11, "completed: {");
  BYTE5(v11[1]) = 0;
  HIWORD(v11[1]) = -5120;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54F4B4C(0, v3, 0);
    v4 = sub_1A558A0B8(a1);
    if (v4 < 0 || v4 >= 1 << *(_BYTE *)(a1 + 32))
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a1 + 56 + (((unint64_t)v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
    {
      if (*(_DWORD *)(a1 + 36) == v5)
        __asm { BR              X9 }
      goto LABEL_16;
    }
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799A38);
  sub_1A54E2E30((unint64_t *)&qword_1EE795F80, &qword_1EE799A38, MEMORY[0x1E0DEAF20]);
  sub_1A594B268();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  v6 = *(_QWORD *)(a2 + 16);
  if (v6)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54F4B4C(0, v6, 0);
    v7 = sub_1A558A0B8(a2);
    if ((v7 & 0x8000000000000000) == 0 && v7 < 1 << *(_BYTE *)(a2 + 32))
    {
      if (((*(_QWORD *)(a2 + 56 + (((unint64_t)v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
      {
        if (*(_DWORD *)(a2 + 36) == v8)
          __asm { BR              X9 }
LABEL_19:
        __break(1u);
        JUMPOUT(0x1A555524CLL);
      }
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  sub_1A594B268();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  return v11[0];
}

uint64_t destroy for SyncSteps()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s13IMAP2Behavior9SyncStepsVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

_QWORD *assignWithCopy for SyncSteps(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SyncSteps(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SyncSteps()
{
  return &type metadata for SyncSteps;
}

uint64_t getEnumTagSinglePayload for SyncStep(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF2)
    goto LABEL_17;
  if (a2 + 14 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 14) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 14;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 14;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 14;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xF;
  v8 = v6 - 15;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SyncStep(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 14 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 14) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF1)
    return ((uint64_t (*)(void))((char *)&loc_1A55554F0 + 4 * byte_1A59A576B[v4]))();
  *a1 = a2 + 14;
  return ((uint64_t (*)(void))((char *)sub_1A5555524 + 4 * byte_1A59A5766[v4]))();
}

uint64_t sub_1A5555524(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A555552C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5555534);
  return result;
}

uint64_t sub_1A5555540(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5555548);
  *(_BYTE *)result = a2 + 14;
  return result;
}

uint64_t sub_1A555554C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5555554(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SyncStep()
{
  return &type metadata for SyncStep;
}

uint64_t sub_1A5555570()
{
  return sub_1A54E2E30(&qword_1EE7A8888, &qword_1EE7A8890, MEMORY[0x1E0DEAF50]);
}

unint64_t sub_1A55555A0()
{
  unint64_t result;

  result = qword_1EE795D38;
  if (!qword_1EE795D38)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A581C, &type metadata for SyncStep);
    atomic_store(result, (unint64_t *)&qword_1EE795D38);
  }
  return result;
}

uint64_t sub_1A55555EC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1A5555604(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *_s13UpdatedStatusV5ValueOMa()
{
  return &_s13UpdatedStatusV5ValueON;
}

uint64_t _s5ErrorOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SectionSpecifier.Kind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

ValueMetadata *_s13UpdatedStatusVMa()
{
  return &_s13UpdatedStatusVN;
}

BOOL sub_1A55556C8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;

  v2 = *a1;
  v3 = *a2;
  v4 = *((unsigned __int8 *)a2 + 8);
  if (!*((_BYTE *)a1 + 8))
    return !*((_BYTE *)a2 + 8) && v2 == v3;
  if (*((_BYTE *)a1 + 8) != 1)
    return v4 == 2 && v3 == 0;
  return v4 == 1 && v2 == v3;
}

BOOL sub_1A555571C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  int v3;

  v2 = *a2;
  v3 = *((unsigned __int8 *)a2 + 8);
  if (!*(_BYTE *)(a1 + 8))
  {
    if (*((_BYTE *)a2 + 8))
      return 0;
    return *(_QWORD *)a1 == v2;
  }
  if (*(_BYTE *)(a1 + 8) == 1)
  {
    if (v3 != 1)
      return 0;
    return *(_QWORD *)a1 == v2;
  }
  return v3 == 2 && v2 == 0;
}

uint64_t sub_1A5555770(uint64_t a1)
{
  int64_t v2;
  uint64_t result;
  int *v4;
  int v5;
  int v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1A54F4DB4(0, v2, 0);
    result = v9;
    v4 = (int *)(a1 + 32);
    do
    {
      v6 = *v4++;
      v5 = v6;
      v10 = result;
      v8 = *(_QWORD *)(result + 16);
      v7 = *(_QWORD *)(result + 24);
      if (v8 >= v7 >> 1)
      {
        sub_1A54F4DB4(v7 > 1, v8 + 1, 1);
        result = v10;
      }
      *(_QWORD *)(result + 16) = v8 + 1;
      *(_BYTE *)(result + v8 + 32) = (v5 & 0x40000000) != 0;
      --v2;
    }
    while (v2);
  }
  return result;
}

int64_t sub_1A5555830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  int64_t result;
  uint64_t v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  __int128 v21;

  v4 = a3;
  result = sub_1A555B15C(a3, *v3, v3[1]);
  v9 = v8;
  if ((v10 & 1) == 0)
  {
    v11 = result;
    if (a2 == 1)
    {
      sub_1A555BAF4(result, v8);
      sub_1A555BD10(v11, &v21);
      return swift_bridgeObjectRelease();
    }
    v19 = v3[2];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = sub_1A555C114(v19);
      v19 = result;
    }
    if ((v11 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v11 < *(_QWORD *)(v19 + 16))
    {
      v20 = v19 + 16 * v11;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v20 + 32) = a1;
      *(_QWORD *)(v20 + 40) = a2;
      sub_1A555F508(a1, a2);
      result = sub_1A555F508(a1, a2);
      v3[2] = v19;
      return result;
    }
    __break(1u);
    return result;
  }
  if (a2 != 1)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A555B3F4(v4, v9, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_1A54F4B84);
    v14 = v3[2];
    v12 = v3 + 2;
    v13 = v14;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v12 = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1A54F4B68(0, *(_QWORD *)(v13 + 16) + 1, 1);
      v13 = *v12;
    }
    v17 = *(_QWORD *)(v13 + 16);
    v16 = *(_QWORD *)(v13 + 24);
    if (v17 >= v16 >> 1)
    {
      sub_1A54F4B68(v16 > 1, v17 + 1, 1);
      v13 = *v12;
    }
    *(_QWORD *)(v13 + 16) = v17 + 1;
    v18 = v13 + 16 * v17;
    *(_QWORD *)(v18 + 32) = a1;
    *(_QWORD *)(v18 + 40) = a2;
    sub_1A555F508(a1, a2);
    result = sub_1A555F508(a1, a2);
    *v12 = v13;
  }
  return result;
}

uint64_t sub_1A55559D8(uint64_t a1, uint64_t a2, unsigned int a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  unint64_t v18;
  _OWORD *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  char isUniquelyReferenced_nonNull_native;
  _OWORD *v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  _OWORD v48[11];
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  _OWORD v60[11];
  _BYTE v61[176];
  uint64_t v62[22];
  _BYTE v63[176];

  sub_1A55032A0(a1, (uint64_t)v61, &qword_1EE797CC8);
  sub_1A55032A0((uint64_t)v61, (uint64_t)v63, &qword_1EE797CC8);
  v7 = v3[1];
  v8 = v7 + 32;
  v9 = *(_QWORD *)(v7 + 16);
  if (!*v3)
  {
    v10 = sub_1A557FEEC(a2, a3, v8, v9);
    v12 = 0;
    if ((v16 & 1) == 0)
      goto LABEL_3;
LABEL_6:
    sub_1A55032A0(a1, (uint64_t)v62, &qword_1EE797CC8);
    if (sub_1A5522E34(v62) == 1)
      return swift_bridgeObjectRelease();
    sub_1A55032A0((uint64_t)v63, (uint64_t)&v49, &qword_1EE797CC8);
    sub_1A54E3150((uint64_t)&v49);
    sub_1A555B280(a2, a3);
    v37 = v3[2];
    v3 += 2;
    v36 = v37;
    sub_1A55032A0((uint64_t)v63, (uint64_t)v60, &qword_1EE797CC8);
    sub_1A54E3150((uint64_t)v60);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v3 = v37;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1A54F4ADC(0, *(_QWORD *)(v36 + 16) + 1, 1);
      v36 = *v3;
    }
    v12 = *(_QWORD *)(v36 + 16);
    v18 = *(_QWORD *)(v36 + 24);
    v14 = v12 + 1;
    if (v12 < v18 >> 1)
      goto LABEL_16;
    goto LABEL_20;
  }
  v10 = sub_1A557FFE0(a2, a3, v8, v9, (_QWORD *)(*v3 + 16));
  v12 = v11;
  if ((v13 & 1) != 0)
    goto LABEL_6;
LABEL_3:
  v14 = v10;
  sub_1A55032A0(a1, (uint64_t)v62, &qword_1EE797CC8);
  if (sub_1A5522E34(v62) == 1)
  {
    sub_1A555B9A8(v14, v12);
    swift_bridgeObjectRelease();
    sub_1A555BEB4(v14, &v49);
    swift_bridgeObjectRelease();
    v60[8] = v57;
    v60[9] = v58;
    v60[10] = v59;
    v60[4] = v53;
    v60[5] = v54;
    v60[6] = v55;
    v60[7] = v56;
    v60[0] = v49;
    v60[1] = v50;
    v60[2] = v51;
    v60[3] = v52;
    return sub_1A54E31EC((uint64_t)v60);
  }
  v17 = v3[2];
  sub_1A55032A0((uint64_t)v63, (uint64_t)v60, &qword_1EE797CC8);
  sub_1A54E3150((uint64_t)v60);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v17 = sub_1A555C194(v17);
  sub_1A55032A0((uint64_t)v63, (uint64_t)v48, &qword_1EE797CC8);
  if ((v14 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v18 = *(_QWORD *)(v17 + 16);
    if (v14 < v18)
    {
      v19 = (_OWORD *)(v17 + 176 * v14);
      v20 = v19[2];
      v21 = v19[4];
      v50 = v19[3];
      v51 = v21;
      v49 = v20;
      v22 = v19[5];
      v23 = v19[6];
      v24 = v19[8];
      v54 = v19[7];
      v55 = v24;
      v52 = v22;
      v53 = v23;
      v25 = v19[9];
      v26 = v19[10];
      v27 = v19[12];
      v58 = v19[11];
      v59 = v27;
      v56 = v25;
      v57 = v26;
      sub_1A54E3150((uint64_t)v48);
      sub_1A54E31EC((uint64_t)&v49);
      v29 = v48[1];
      v28 = v48[2];
      v19[2] = v48[0];
      v19[3] = v29;
      v19[4] = v28;
      v30 = v48[6];
      v32 = v48[3];
      v31 = v48[4];
      v19[7] = v48[5];
      v19[8] = v30;
      v19[5] = v32;
      v19[6] = v31;
      v33 = v48[10];
      v35 = v48[7];
      v34 = v48[8];
      v19[11] = v48[9];
      v19[12] = v33;
      v19[9] = v35;
      v19[10] = v34;
      swift_bridgeObjectRelease();
      sub_1A555EEBC(a1);
      result = sub_1A555EEBC(a1);
      v3[2] = v17;
      return result;
    }
  }
  __break(1u);
LABEL_20:
  sub_1A54F4ADC(v18 > 1, v14, 1);
  v36 = *v3;
LABEL_16:
  *(_QWORD *)(v36 + 16) = v14;
  v39 = (_OWORD *)(v36 + 176 * v12);
  v40 = v49;
  v41 = v51;
  v39[3] = v50;
  v39[4] = v41;
  v39[2] = v40;
  v42 = v52;
  v43 = v53;
  v44 = v55;
  v39[7] = v54;
  v39[8] = v44;
  v39[5] = v42;
  v39[6] = v43;
  v45 = v56;
  v46 = v57;
  v47 = v59;
  v39[11] = v58;
  v39[12] = v47;
  v39[9] = v45;
  v39[10] = v46;
  swift_bridgeObjectRelease();
  sub_1A555EEBC(a1);
  result = sub_1A555EEBC(a1);
  *v3 = v36;
  return result;
}

uint64_t sub_1A5555D28(unsigned __int8 *a1)
{
  return sub_1A555D188(*a1);
}

BOOL sub_1A5555D34(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[2];
  v3 = a2[2];
  return (sub_1A553BA90(*a2, a2[1], *a1, a1[1]) & 1) != 0 && (sub_1A553B9A0(v2, v3) & 1) != 0;
}

unint64_t sub_1A5555D84(uint64_t a1, uint64_t a2, char a3)
{
  __int128 *v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _BYTE v27[16];
  __int128 *v28;
  _BYTE v29[13];
  __int128 *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  _BYTE v46[32];
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  _OWORD v51[3];

  v4 = v3[13];
  *(_OWORD *)v46 = v3[12];
  *(_OWORD *)&v46[16] = v4;
  v47 = *((_QWORD *)v3 + 28);
  v5 = v3[9];
  v42 = v3[8];
  v43 = v5;
  v6 = v3[11];
  v44 = v3[10];
  v45 = v6;
  v7 = v3[5];
  v38 = v3[4];
  v39 = v7;
  v8 = v3[7];
  v40 = v3[6];
  v41 = v8;
  v9 = v3[1];
  v34 = *v3;
  v35 = v9;
  v10 = v3[3];
  v36 = v3[2];
  v37 = v10;
  v48 = v43;
  v49 = v44;
  v50 = v45;
  v51[0] = *(_OWORD *)v46;
  *(_OWORD *)((char *)v51 + 12) = *(_OWORD *)&v46[12];
  v11 = sub_1A5544FE8();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v12 = sub_1A558E3A4();
  v13 = sub_1A558E7E0(v35, BYTE1(v35) & 1, *((uint64_t *)&v35 + 1), v36, *((uint64_t *)&v36 + 1), SBYTE10(v34), v37, v12);
  v14 = sub_1A5525B50(v43, *((uint64_t *)&v43 + 1), v44, SBYTE8(v44), v40, v11, BYTE4(v13) & 1, *((uint64_t *)&v45 + 1));
  v16 = v15;
  v18 = v17;
  swift_bridgeObjectRelease();
  v30 = v3;
  v31 = v14;
  v32 = v16;
  v33 = v18;
  swift_retain();
  swift_retain();
  v19 = swift_retain();
  v20 = sub_1A5555770(v19);
  swift_release();
  v28 = v3;
  v21 = sub_1A5511458();
  v22 = sub_1A5511570();
  v23 = sub_1A555DA24(a2, a3, (uint64_t (*)(uint64_t))sub_1A555ED2C, (uint64_t)v29, v14, v16, v20, sub_1A555ED54, (uint64_t)v27, v21, v22);
  swift_release();
  swift_release();
  swift_release();
  return v23;
}

uint64_t sub_1A5555F8C(__int128 *a1)
{
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  unint64_t v23;
  uint64_t v24;
  char v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  _OWORD v43[3];
  _BYTE v44[8];
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char v49;
  char v50;
  uint64_t (*v51)();
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v1 = a1[13];
  v38 = a1[12];
  v39 = v1;
  v40 = *((_QWORD *)a1 + 28);
  v2 = a1[9];
  v34 = a1[8];
  v35 = v2;
  v3 = a1[11];
  v36 = a1[10];
  v37 = v3;
  v4 = a1[5];
  v30 = a1[4];
  v31 = v4;
  v5 = a1[7];
  v32 = a1[6];
  v33 = v5;
  v6 = a1[1];
  v26 = *a1;
  v27 = v6;
  v7 = a1[3];
  v28 = a1[2];
  v29 = v7;
  if ((BYTE8(v36) & 1) == 0)
    return MEMORY[0x1E0DEE9E8];
  v8 = v35;
  v9 = *((_QWORD *)&v37 + 1);
  v43[0] = v32;
  v43[1] = v33;
  v43[2] = v34;
  v41 = v30;
  v42 = v31;
  sub_1A55032A0((uint64_t)v43, (uint64_t)v44, &qword_1EE7991D8);
  sub_1A55032A0((uint64_t)v44, (uint64_t)&v54, &qword_1EE7991D8);
  if (!v54)
    return MEMORY[0x1E0DEE9E8];
  v25 = BYTE9(v26);
  v24 = v54;
  sub_1A55212D0(v35, *((uint64_t *)&v35 + 1), v36, 1);
  sub_1A54FCA28((uint64_t)v44);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v10 = sub_1A558E3A4();
  v23 = sub_1A558E7E0(v27, BYTE1(v27) & 1, *((uint64_t *)&v27 + 1), v28, *((uint64_t *)&v28 + 1), SBYTE10(v26), v29, v10);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v11 = sub_1A558E3A4();
  v12 = sub_1A558E7E0(v27, BYTE1(v27) & 1, *((uint64_t *)&v27 + 1), v28, *((uint64_t *)&v28 + 1), SBYTE10(v26), v29, v11) >> 16;
  v13 = swift_allocObject();
  v14 = v39;
  *(_OWORD *)(v13 + 208) = v38;
  *(_OWORD *)(v13 + 224) = v14;
  *(_QWORD *)(v13 + 240) = v40;
  v15 = v35;
  *(_OWORD *)(v13 + 144) = v34;
  *(_OWORD *)(v13 + 160) = v15;
  v16 = v37;
  *(_OWORD *)(v13 + 176) = v36;
  *(_OWORD *)(v13 + 192) = v16;
  v17 = v31;
  *(_OWORD *)(v13 + 80) = v30;
  *(_OWORD *)(v13 + 96) = v17;
  v18 = v33;
  *(_OWORD *)(v13 + 112) = v32;
  *(_OWORD *)(v13 + 128) = v18;
  v19 = v27;
  *(_OWORD *)(v13 + 16) = v26;
  *(_OWORD *)(v13 + 32) = v19;
  v20 = v29;
  *(_OWORD *)(v13 + 48) = v28;
  *(_OWORD *)(v13 + 64) = v20;
  v45 = v8;
  v46 = v24;
  v47 = v25;
  v48 = v9;
  v49 = BYTE4(v23) & 1;
  v50 = v12;
  v51 = sub_1A552CEA8;
  v52 = v13;
  v53 = 7;
  sub_1A552CEB0((uint64_t)&v26);
  v21 = sub_1A552B350();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_1A5556200()
{
  uint64_t v0;

  sub_1A555D250(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance();
}

uint64_t _s30MailboxesToSelectLoggingHelperCMa()
{
  return objc_opt_self();
}

uint64_t destroy for SearchModificationSequence()
{
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *_s17MailboxesToSelectVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *_s17MailboxesToSelectVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s17MailboxesToSelectVwta(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t _s17MailboxesToSelectVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s10SinglepartV4TextVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s17MailboxesToSelectVMa()
{
  return &_s17MailboxesToSelectVN;
}

uint64_t sub_1A5556420()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A5556458 + 4 * byte_1A59A5910[*v0]))(0x6E776F4472657375, 0xEC00000064616F6CLL);
}

uint64_t sub_1A5556458()
{
  return 0x7261655372657375;
}

uint64_t sub_1A5556474()
{
  return 0x656C6269736976;
}

uint64_t sub_1A555648C()
{
  return 1802723700;
}

uint64_t sub_1A555649C()
{
  return 1668184435;
}

uint64_t sub_1A55564AC()
{
  return 0x6E7953736465656ELL;
}

uint64_t sub_1A55564C8()
{
  return 0x797469726F697270;
}

void sub_1A55564E0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A5556510()
{
  sub_1A594C720();
  sub_1A594B5F8();
  sub_1A594C924();
  sub_1A594B5F8();
  return 0;
}

void sub_1A5556664()
{
  JUMPOUT(0x1A5556654);
}

void sub_1A5556680()
{
  JUMPOUT(0x1A5556654);
}

void sub_1A55566A4()
{
  char *v0;

  sub_1A55564E0(*v0);
}

uint64_t sub_1A55566AC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A55566D4 + 4 * byte_1A59A591F[*v0]))(1668184435, 0xE400000000000000);
}

uint64_t sub_1A55566D4()
{
  return 0x64616F6C6E776F64;
}

uint64_t sub_1A55566F8()
{
  return 0x686372616573;
}

uint64_t sub_1A555670C()
{
  return 45;
}

void sub_1A5556718(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E4E6FB10;
}

uint64_t sub_1A5556728()
{
  _BYTE *v0;

  if (*v0)
    return 0x69736956746F6E2ELL;
  else
    return 0x656C62697369762ELL;
}

uint64_t sub_1A555676C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v4 = v2;
  }
  else
  {
    v4 = a2();
    swift_beginAccess();
    *v3 = v4;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_bridgeObjectRelease();
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v4;
}

uint64_t sub_1A55567EC@<X0>(uint64_t (*a1)(void)@<X0>, _WORD *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_1A5556814(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A5559E00(a1, a2, a3, a4, &qword_1EE79ADC8);
}

uint64_t sub_1A5556828(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796238);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 176);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[176 * v8])
      memmove(v12, v13, 176 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[176 * v8] || v12 >= &v13[176 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A55569AC(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A555A67C(a1, a2, a3, a4, &qword_1EE796220);
}

uint64_t sub_1A55569B8(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A55594AC(a1, a2, a3, a4, &qword_1EE79B130);
}

uint64_t sub_1A55569C4(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A55594AC(a1, a2, a3, a4, &qword_1EE79B858);
}

uint64_t sub_1A55569D0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796288);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5556B38(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B050);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5556CA0(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A55594AC(a1, a2, a3, a4, &qword_1EE79AF38);
}

uint64_t sub_1A5556CAC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AE70);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5556E14(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE79AF20);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5556F70(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AF10);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A55570CC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B2C8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5557228(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A555A67C(a1, a2, a3, a4, &qword_1EE79B228);
}

uint64_t sub_1A5557234(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A555A67C(a1, a2, a3, a4, &qword_1EE7A8940);
}

uint64_t sub_1A5557240(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8938);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  v15 = 16 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    memcpy(v13, v14, v15);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5557398(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796268);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5557500(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A12B0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 4;
  v14 = a4 + 4;
  v15 = 2 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[v15])
      memmove(v10 + 4, a4 + 4, v15 * 8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A0400);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5557684(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A5559308(a1, a2, a3, a4, &qword_1EE7A8598);
}

uint64_t sub_1A5557698(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A5557FF4(a1, a2, a3, a4, &qword_1EE796260);
}

uint64_t sub_1A55576AC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79ADF0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 192);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 192 * v8)
      memmove(v10 + 4, a4 + 4, 192 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 192 * v8 || v12 >= v13 + 192 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796870);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5557850(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;
  _QWORD *v13;
  size_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79ADF8);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 112);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 4;
  v13 = a4 + 4;
  v14 = 14 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v14])
      memmove(v10 + 4, a4 + 4, v14 * 8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796878);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A55579EC(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A55594AC(a1, a2, a3, a4, &qword_1EE79B1E8);
}

uint64_t sub_1A55579F8(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A55594AC(a1, a2, a3, a4, &qword_1EE79B1F0);
}

uint64_t sub_1A5557A04(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A55594AC(a1, a2, a3, a4, &qword_1EE79B208);
}

uint64_t sub_1A5557A10(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8970);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 48 * v8)
      memmove(v10 + 4, a4 + 4, 48 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 48 * v8 || v12 >= v13 + 48 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8978);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5557BB4(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A5557BDC(a1, a2, a3, a4, &qword_1EE7A8980);
}

uint64_t sub_1A5557BC8(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A5557BDC(a1, a2, a3, a4, &qword_1EE7A12E0);
}

uint64_t sub_1A5557BDC(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v9])
      memmove(v14, v15, 16 * v9);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[16 * v9] || v14 >= &v15[16 * v9])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5557D48(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B008);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5557E94(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B850);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5557FE0(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A5557FF4(a1, a2, a3, a4, &qword_1EE79B100);
}

uint64_t sub_1A5557FF4(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size_0(v11);
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 96);
  }
  else
  {
    v11 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  v15 = 96 * v9;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5558170(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7962E0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8)
      memmove(v10 + 4, a4 + 4, 24 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7993E0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5558314(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AFD8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8])
      memmove(v12, v13, 24 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5558498(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B388);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 29;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8])
      memmove(v13, v14, 4 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A55585F4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A12A8);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A03C8);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A555877C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AFE0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 + 31;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[64 * v8])
      memmove(v13, v14, v8 << 6);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[64 * v8] || v13 >= &v14[64 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A55588E4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AFF8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8])
      memmove(v12, v13, 40 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5558A64(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AFF0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5558BCC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AD98);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5558D34(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796240);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8])
      memmove(v12, v13, 48 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[48 * v8] || v12 >= &v13[48 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5558EB8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A12B8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5559014(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(qword_1EE79B8F0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    memcpy(v13, v14, 32 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5559170(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B040);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8])
      memmove(v12, v13, 24 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A55592F4(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A5559308(a1, a2, a3, a4, &qword_1EE7A89E8);
}

uint64_t sub_1A5559308(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size_0(v11);
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 56);
  }
  else
  {
    v11 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  v15 = 56 * v9;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5559488(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A55594AC(a1, a2, a3, a4, &qword_1EE79AF98);
}

uint64_t sub_1A5559494(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A555A82C(a1, a2, a3, a4, &qword_1EE79B0E0);
}

uint64_t sub_1A55594A0(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A55594AC(a1, a2, a3, a4, &qword_1EE79AF90);
}

uint64_t sub_1A55594AC(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 29;
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 2);
  }
  else
  {
    v11 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[4 * v9])
      memmove(v14, v15, 4 * v9);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[4 * v9] || v14 >= &v15[4 * v9])
  {
    memcpy(v14, v15, 4 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5559604(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A555A82C(a1, a2, a3, a4, &qword_1EE79B070);
}

uint64_t sub_1A5559610(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B218);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8)
      memmove(v10 + 4, a4 + 4, 24 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(qword_1EE798470);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A55597B4(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A55594AC(a1, a2, a3, a4, &qword_1EE79B0C0);
}

uint64_t sub_1A55597C0(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A55594AC(a1, a2, a3, a4, &qword_1EE796228);
}

uint64_t sub_1A55597CC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B0D0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8)
      memmove(v10 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE797BA0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A555996C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AFD0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5559AD4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  size_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AE80);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  v14 = 40 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v14])
      memmove(v12, v13, v14);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5559C48(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A55594AC(a1, a2, a3, a4, &qword_1EE79B0D8);
}

uint64_t sub_1A5559C54(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A55594AC(a1, a2, a3, a4, &qword_1EE79B0E8);
}

uint64_t sub_1A5559C60(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A55594AC(a1, a2, a3, a4, &qword_1EE79B0F0);
}

uint64_t sub_1A5559C6C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B020);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5559DD4(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A555A82C(a1, a2, a3, a4, &qword_1EE79B0F8);
}

uint64_t sub_1A5559DE0(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A55594AC(a1, a2, a3, a4, &qword_1EE7A89C8);
}

uint64_t sub_1A5559DEC(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A5559E00(a1, a2, a3, a4, &qword_1EE7A12C0);
}

uint64_t sub_1A5559E00(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  size_t v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  v16 = 16 * v9;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[v16])
      memmove(v14, v15, v16);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[v16] || v14 >= &v15[v16])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5559F68(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A555A82C(a1, a2, a3, a4, &qword_1EE79B090);
}

uint64_t sub_1A5559F74(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A89C0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A555A0D0(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A55594AC(a1, a2, a3, a4, &qword_1EE796230);
}

uint64_t sub_1A555A0DC(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A555A82C(a1, a2, a3, a4, &qword_1EE7A89D8);
}

uint64_t sub_1A555A0E8(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A55594AC(a1, a2, a3, a4, &qword_1EE7A89F8);
}

uint64_t sub_1A555A0F4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B2C0);
  v10 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799EE8) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size_0(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_34;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799EE8) - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (char *)v13 + v17;
  v19 = (char *)a4 + v17;
  if ((a1 & 1) != 0)
  {
    if (v13 < a4 || v18 >= &v19[*(_QWORD *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v20 = *(_QWORD *)(v16 + 72) * v8;
  v21 = &v18[v20];
  v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A555A2DC(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A555A82C(a1, a2, a3, a4, &qword_1EE79B068);
}

uint64_t sub_1A555A2E8(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A55594AC(a1, a2, a3, a4, &qword_1EE79B0A0);
}

uint64_t sub_1A555A2F4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B078);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8)
      memmove(v10 + 4, a4 + 4, 24 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(qword_1EE797B18);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A555A498(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A555A67C(a1, a2, a3, a4, &qword_1EE79B0A8);
}

uint64_t sub_1A555A4A4(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A555A82C(a1, a2, a3, a4, &qword_1EE79B080);
}

uint64_t sub_1A555A4B0(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A55594AC(a1, a2, a3, a4, &qword_1EE79B088);
}

uint64_t sub_1A555A4BC(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A555A67C(a1, a2, a3, a4, &qword_1EE7A12C8);
}

uint64_t sub_1A555A4C8(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A55594AC(a1, a2, a3, a4, &qword_1EE79B0B0);
}

uint64_t sub_1A555A4D4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;
  _QWORD *v13;
  size_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B1E0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 4;
  v13 = a4 + 4;
  v14 = 7 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v14])
      memmove(v10 + 4, a4 + 4, v14 * 8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798330);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A555A670(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A555A67C(a1, a2, a3, a4, &qword_1EE7A89B8);
}

uint64_t sub_1A555A67C(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size_0(v11);
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 24);
  }
  else
  {
    v11 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  v15 = 24 * v9;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    memcpy(v13, v14, v15);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A555A7E4(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A55594AC(a1, a2, a3, a4, &qword_1EE7A89D0);
}

uint64_t sub_1A555A7F0(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A555A82C(a1, a2, a3, a4, &qword_1EE79B098);
}

uint64_t sub_1A555A7FC(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A55594AC(a1, a2, a3, a4, &qword_1EE79B0B8);
}

uint64_t sub_1A555A808(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A555AE50(a1, a2, a3, a4, &qword_1EE7A89F0);
}

uint64_t sub_1A555A814(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A55594AC(a1, a2, a3, a4, &qword_1EE79B0C8);
}

uint64_t sub_1A555A820(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A555A82C(a1, a2, a3, a4, &qword_1EE7A89E0);
}

uint64_t sub_1A555A82C(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  size_t v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    v11 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  v16 = 8 * v9;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[v16])
      memmove(v14, v15, v16);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[v16] || v14 >= &v15[v16])
  {
    memcpy(v14, v15, v16);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A555A980(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1A555AB04(a1, a2, a3, a4, &qword_1EE7A12D0, &qword_1EE7A0478);
}

uint64_t sub_1A555A994(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8A00);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A555AAF0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1A555AB04(a1, a2, a3, a4, &qword_1EE7A89A8, &qword_1EE7A89B0);
}

uint64_t sub_1A555AB04(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  _QWORD *v15;
  _QWORD *v16;
  size_t v17;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size_0(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 24);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v15 = v13 + 4;
  v16 = a4 + 4;
  v17 = 3 * v11;
  if ((a1 & 1) != 0)
  {
    if (v13 != a4 || v15 >= &v16[v17])
      memmove(v13 + 4, a4 + 4, v17 * 8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= &v15[v17] || v15 >= &v16[v17])
  {
    __swift_instantiateConcreteTypeFromMangledName_0(a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A555ACA0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8998);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8)
      memmove(v10 + 4, a4 + 4, 24 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A89A0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A555AE44(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A555AE50(a1, a2, a3, a4, &qword_1EE79B060);
}

uint64_t sub_1A555AE50(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size_0(v11);
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 12);
  }
  else
  {
    v11 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  v15 = 12 * v9;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    memcpy(v13, v14, v15);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A555AFB8(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8988);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8)
      memmove(v10 + 4, a4 + 4, 24 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A8990);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A555B15C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _DWORD *v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  int v10;

  v5 = (_DWORD *)(a3 + 32);
  v6 = *(_QWORD *)(a3 + 16);
  if (a2)
    return sub_1A557FFDC(a1, v5, v6, a2 + 16, a2 + 32);
  if (!v6)
    return 0;
  if (*v5 == (_DWORD)a1)
    return 0;
  if (v6 == 1)
    return 0;
  if (*(_DWORD *)(a3 + 36) == (_DWORD)a1)
    return 1;
  if (v6 == 2)
    return 0;
  if (*(_DWORD *)(a3 + 40) == (_DWORD)a1)
    return 2;
  if (v6 == 3)
    return 0;
  if (*(_DWORD *)(a3 + 44) == (_DWORD)a1)
    return 3;
  v8 = 0;
  v9 = a3 + 48;
  while (v6 - 4 != v8)
  {
    v10 = *(_DWORD *)(v9 + 4 * v8++);
    if (v10 == (_DWORD)a1)
      return v8 + 3;
  }
  return 0;
}

uint64_t sub_1A555B274(int a1, uint64_t a2)
{
  return sub_1A555B3F4(a1, a2, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_1A54F4B14);
}

uint64_t sub_1A555B280(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = v2;
  v8 = v2[1];
  v6 = v2 + 1;
  v7 = v8;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  result = swift_isUniquelyReferenced_nonNull_native();
  *v6 = v8;
  if ((result & 1) == 0)
  {
    result = sub_1A54F4AC0(0, *(_QWORD *)(v7 + 16) + 1, 1);
    v7 = *v6;
  }
  v11 = *(_QWORD *)(v7 + 16);
  v10 = *(_QWORD *)(v7 + 24);
  if (v11 >= v10 >> 1)
  {
    result = sub_1A54F4AC0(v10 > 1, v11 + 1, 1);
    v7 = *v6;
  }
  *(_QWORD *)(v7 + 16) = v11 + 1;
  v12 = v7 + 16 * v11;
  *(_QWORD *)(v12 + 32) = a1;
  *(_DWORD *)(v12 + 40) = a2;
  v3[1] = v7;
  v13 = *v3;
  if (*v3)
  {
    swift_beginAccess();
    if (MEMORY[0x1A85AC894](*(_QWORD *)(v13 + 16) & 0x3FLL) > (uint64_t)v11)
    {
      result = swift_isUniquelyReferenced_native();
      v14 = *v3;
      if (!(_DWORD)result)
      {
        if (!v14)
        {
LABEL_16:
          __break(1u);
          return result;
        }
        v14 = sub_1A594A434();
        result = swift_release();
        *v3 = v14;
      }
      if (v14)
        return sub_1A594A3EC();
      __break(1u);
      goto LABEL_16;
    }
  }
  else if (v11 < 0xF)
  {
    return result;
  }
  return sub_1A555B560();
}

uint64_t sub_1A555B3F4(int a1, uint64_t a2, uint64_t (*a3)(BOOL, uint64_t, uint64_t))
{
  uint64_t *v3;
  uint64_t *v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = v3;
  v9 = v3[1];
  v7 = v3 + 1;
  v8 = v9;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v7 = v9;
  if ((result & 1) == 0)
  {
    result = a3(0, *(_QWORD *)(v8 + 16) + 1, 1);
    v8 = *v7;
  }
  v12 = *(_QWORD *)(v8 + 16);
  v11 = *(_QWORD *)(v8 + 24);
  if (v12 >= v11 >> 1)
  {
    result = a3(v11 > 1, v12 + 1, 1);
    v8 = *v7;
  }
  *(_QWORD *)(v8 + 16) = v12 + 1;
  *(_DWORD *)(v8 + 4 * v12 + 32) = a1;
  v5[1] = v8;
  v13 = *v5;
  if (*v5)
  {
    swift_beginAccess();
    if (MEMORY[0x1A85AC894](*(_QWORD *)(v13 + 16) & 0x3FLL) > (uint64_t)v12)
    {
      result = swift_isUniquelyReferenced_native();
      v14 = *v5;
      if (!(_DWORD)result)
      {
        if (!v14)
        {
LABEL_16:
          __break(1u);
          return result;
        }
        v14 = sub_1A594A434();
        result = swift_release();
        *v5 = v14;
      }
      if (v14)
        return sub_1A594A3EC();
      __break(1u);
      goto LABEL_16;
    }
  }
  else if (v12 < 0xF)
  {
    return result;
  }
  return sub_1A555B604();
}

uint64_t sub_1A555B560()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v1 = *v0;
  v2 = v0[1];
  if (*v0)
  {
    swift_beginAccess();
    v3 = *(_QWORD *)(v1 + 24) & 0x3FLL;
    v4 = *(_QWORD *)(v2 + 16);
    if (v3)
      goto LABEL_7;
  }
  else
  {
    v3 = 0;
    v4 = *(_QWORD *)(v2 + 16);
  }
  if (v4 < 0x10)
  {
    v5 = 0;
    goto LABEL_11;
  }
LABEL_7:
  v6 = MEMORY[0x1A85AC8B8](v4);
  if (v3 <= v6)
    v7 = v6;
  else
    v7 = v3;
  v5 = sub_1A555B6A8(v2, v7, 0, v3);
LABEL_11:
  result = swift_release();
  *v0 = v5;
  return result;
}

uint64_t sub_1A555B604()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v1 = *v0;
  v2 = v0[1];
  if (*v0)
  {
    swift_beginAccess();
    v3 = *(_QWORD *)(v1 + 24) & 0x3FLL;
    v4 = *(_QWORD *)(v2 + 16);
    if (v3)
      goto LABEL_7;
  }
  else
  {
    v3 = 0;
    v4 = *(_QWORD *)(v2 + 16);
  }
  if (v4 < 0x10)
  {
    v5 = 0;
    goto LABEL_11;
  }
LABEL_7:
  v6 = MEMORY[0x1A85AC8B8](v4);
  if (v3 <= v6)
    v7 = v6;
  else
    v7 = v3;
  v5 = sub_1A555B72C(v2, v7, 0, v3);
LABEL_11:
  result = swift_release();
  *v0 = v5;
  return result;
}

uint64_t sub_1A555B6A8(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = MEMORY[0x1A85AC8B8](*(_QWORD *)(a1 + 16));
  v9 = 0;
  if ((a3 & 1) != 0)
    v10 = 0;
  else
    v10 = a2;
  if (v10 <= v8)
    v10 = v8;
  if (v10 <= a4)
    v11 = a4;
  else
    v11 = v10;
  if (v11 >= 5)
  {
    v9 = MEMORY[0x1A85AC8C4]();
    sub_1A555B8B8(a1, (_QWORD *)(v9 + 16));
  }
  return v9;
}

uint64_t sub_1A555B72C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = MEMORY[0x1A85AC8B8](*(_QWORD *)(a1 + 16));
  v9 = 0;
  if ((a3 & 1) != 0)
    v10 = 0;
  else
    v10 = a2;
  if (v10 <= v8)
    v10 = v8;
  if (v10 <= a4)
    v11 = a4;
  else
    v11 = v10;
  if (v11 >= 5)
  {
    v9 = MEMORY[0x1A85AC8C4]();
    sub_1A555B7BC(v9 + 16, v9 + 32, a1);
  }
  return v9;
}

uint64_t sub_1A555B7BC(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a3 + 16);
  if (v3)
  {
    v4 = (_QWORD *)result;
    v5 = 0;
    while (1)
    {
      sub_1A594CE64();
      sub_1A594CEAC();
      result = sub_1A594CED0();
      if (__OFSUB__(1 << *v4, 1))
        break;
      if (sub_1A594A3D4())
      {
        while (1)
          sub_1A594A410();
      }
      result = sub_1A594A404();
      if (++v5 == v3)
        return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1A555B8B8(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;

  v2 = *(_QWORD *)(result + 16);
  if (v2)
  {
    v4 = 0;
    while (1)
    {
      sub_1A594CE64();
      sub_1A594CE88();
      result = sub_1A594CED0();
      if (__OFSUB__(1 << *a2, 1))
        break;
      if (sub_1A594A3D4())
      {
        while (1)
          sub_1A594A410();
      }
      result = sub_1A594A404();
      if (++v4 == v2)
        return result;
    }
    __break(1u);
  }
  return result;
}

unint64_t sub_1A555B9A8(int64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(v2[1] + 16);
  v5 = *v2;
  if (!*v2)
  {
    if (v4)
      return sub_1A555BC34(a1);
    goto LABEL_15;
  }
  swift_beginAccess();
  if ((*(_QWORD *)(v5 + 16) & 0x3FLL) == (*(_QWORD *)(v5 + 24) & 0x3FLL))
  {
    if (!v4)
      goto LABEL_15;
  }
  else if (v4 <= sub_1A594A428())
  {
LABEL_15:
    v10 = sub_1A555BC34(a1);
    sub_1A555B560();
    return v10;
  }
  result = swift_isUniquelyReferenced_native();
  v8 = *v2;
  if (!(_DWORD)result)
  {
    if (!v8)
      goto LABEL_20;
    v8 = sub_1A594A434();
    result = swift_release();
    *v2 = v8;
  }
  if (v8)
  {
    result = sub_1A555C3B0(a2, (_QWORD *)(v8 + 16), v8 + 32, (uint64_t)v2);
    v9 = a1 + 1;
    if (__OFADD__(a1, 1))
    {
      __break(1u);
    }
    else if (v9 >= a1)
    {
      sub_1A555C568(a1, v9, v2[1], (_QWORD *)(v8 + 16));
      return sub_1A555BC34(a1);
    }
    __break(1u);
  }
  __break(1u);
LABEL_20:
  __break(1u);
  return result;
}

unint64_t sub_1A555BAF4(int64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(v2[1] + 16);
  v5 = *v2;
  if (!*v2)
  {
    if (v4)
      return sub_1A555BDE8(a1);
    goto LABEL_15;
  }
  swift_beginAccess();
  if ((*(_QWORD *)(v5 + 16) & 0x3FLL) == (*(_QWORD *)(v5 + 24) & 0x3FLL))
  {
    if (!v4)
      goto LABEL_15;
  }
  else if (v4 <= sub_1A594A428())
  {
LABEL_15:
    v10 = sub_1A555BDE8(a1);
    sub_1A555B604();
    return v10;
  }
  result = swift_isUniquelyReferenced_native();
  v8 = *v2;
  if (!(_DWORD)result)
  {
    if (!v8)
      goto LABEL_20;
    v8 = sub_1A594A434();
    result = swift_release();
    *v2 = v8;
  }
  if (v8)
  {
    result = sub_1A555C1F8(a2, (_QWORD *)(v8 + 16), v8 + 32, (uint64_t)v2);
    v9 = a1 + 1;
    if (__OFADD__(a1, 1))
    {
      __break(1u);
    }
    else if (v9 >= a1)
    {
      sub_1A555C998(a1, v9, v2[1], (_QWORD *)(v8 + 16));
      return sub_1A555BDE8(a1);
    }
    __break(1u);
  }
  __break(1u);
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_1A555BC34(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = sub_1A555C0B4(v3);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    v5 = v4 - 1;
    v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      v7 = v3 + 16 * a1;
      v8 = *(_QWORD *)(v7 + 32);
      memmove((void *)(v7 + 32), (const void *)(v7 + 48), 16 * v6);
      *(_QWORD *)(v3 + 16) = v5;
      *v1 = v3;
      return v8;
    }
  }
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A555BD10@<X0>(unint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t result;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = sub_1A555C114(v5);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v6 - 1;
    v8 = v5 + 16 * a1;
    v10 = *(_OWORD *)(v8 + 32);
    v9 = v8 + 32;
    *a2 = v10;
    v11 = v6 - 1 - a1;
    if (v11 >= 0)
    {
      result = (uint64_t)memmove((void *)v9, (const void *)(v9 + 16), 16 * v11);
      *(_QWORD *)(v5 + 16) = v7;
      *v2 = v5;
      return result;
    }
  }
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A555BDE8(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = sub_1A555C0E8(v3);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    v5 = v4 - 1;
    v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      v7 = v3 + 4 * a1;
      v8 = *(unsigned int *)(v7 + 32);
      memmove((void *)(v7 + 32), (const void *)(v7 + 36), 4 * v6);
      *(_QWORD *)(v3 + 16) = v5;
      *v1 = v3;
      return v8;
    }
  }
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A555BEB4@<X0>(unint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  unint64_t v6;
  _OWORD *v7;
  __int128 v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t result;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = sub_1A555C194(v5);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = (_OWORD *)(v5 + 176 * a1);
    v8 = v7[11];
    v9 = v6 - 1;
    a2[8] = v7[10];
    a2[9] = v8;
    a2[10] = v7[12];
    v10 = v7[7];
    a2[4] = v7[6];
    a2[5] = v10;
    v11 = v7[9];
    a2[6] = v7[8];
    a2[7] = v11;
    v12 = v7[3];
    *a2 = v7[2];
    a2[1] = v12;
    v13 = v7[5];
    a2[2] = v7[4];
    a2[3] = v13;
    v14 = v6 - 1 - a1;
    if (v14 >= 0)
    {
      result = (uint64_t)memmove(v7 + 2, v7 + 13, 176 * v14);
      *(_QWORD *)(v5 + 16) = v9;
      *v2 = v5;
      return result;
    }
  }
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A555BFC0(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  int64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t result;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = sub_1A555C1A8(v3);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    v5 = v4 - 1;
    v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      v7 = (unsigned __int8 *)(v3 + a1 + 32);
      v8 = *v7;
      memmove(v7, v7 + 1, v6);
      *(_QWORD *)(v3 + 16) = v5;
      *v1 = v3;
      return v8;
    }
  }
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A555C088(uint64_t a1)
{
  return sub_1A55594AC(0, *(_QWORD *)(a1 + 16), 0, (char *)a1, &qword_1EE79B858);
}

uint64_t sub_1A555C0B4(uint64_t a1)
{
  return sub_1A5559E00(0, *(_QWORD *)(a1 + 16), 0, (char *)a1, &qword_1EE79ADC8);
}

uint64_t sub_1A555C0E8(uint64_t a1)
{
  return sub_1A55594AC(0, *(_QWORD *)(a1 + 16), 0, (char *)a1, &qword_1EE79AF38);
}

uint64_t sub_1A555C114(uint64_t a1)
{
  return sub_1A5556B38(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1A555C128(uint64_t a1)
{
  return sub_1A5556F70(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1A555C13C(uint64_t a1)
{
  return sub_1A555A67C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1, &qword_1EE79B228);
}

uint64_t sub_1A555C168(uint64_t a1)
{
  return sub_1A555A67C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1, &qword_1EE7A85C0);
}

uint64_t sub_1A555C194(uint64_t a1)
{
  return sub_1A5556828(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1A555C1A8(uint64_t a1)
{
  return sub_1A5557D48(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1A555C1BC(uint64_t a1)
{
  return sub_1A5558498(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1A555C1D0(uint64_t a1)
{
  return sub_1A5559C6C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1A555C1E4(_QWORD *a1)
{
  return sub_1A555A0F4(0, a1[2], 0, a1);
}

unint64_t sub_1A555C1F8(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v6 = a1;
  v14 = sub_1A594A3D4();
  sub_1A594A410();
  if (!v14)
    return sub_1A594A3EC();
  v7 = a1;
  v8 = sub_1A594A3E0();
  while (1)
  {
    result = sub_1A594A3F8();
    if ((v10 & 1) != 0)
      break;
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      __break(1u);
      break;
    }
    if (result >= *(_QWORD *)(*(_QWORD *)(a4 + 8) + 16))
      goto LABEL_16;
    sub_1A594CE64();
    sub_1A594CEAC();
    result = sub_1A594CED0();
    v11 = 1 << *a2;
    if (__OFSUB__(v11, 1))
      goto LABEL_17;
    v12 = (v11 - 1) & result;
    if (v6 >= v8)
    {
      if (v12 < v8)
        goto LABEL_3;
LABEL_12:
      if (v6 < v12)
        goto LABEL_3;
      goto LABEL_13;
    }
    if (v12 < v8)
      goto LABEL_12;
LABEL_13:
    sub_1A594A3F8();
    sub_1A594A3EC();
    v6 = v7;
LABEL_3:
    sub_1A594A410();
    v7 = a1;
  }
  __break(1u);
  return result;
}

unint64_t sub_1A555C3B0(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v6 = a1;
  v14 = sub_1A594A3D4();
  sub_1A594A410();
  if (!v14)
    return sub_1A594A3EC();
  v7 = a1;
  v8 = sub_1A594A3E0();
  while (1)
  {
    result = sub_1A594A3F8();
    if ((v10 & 1) != 0)
      break;
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      __break(1u);
      break;
    }
    if (result >= *(_QWORD *)(*(_QWORD *)(a4 + 8) + 16))
      goto LABEL_16;
    sub_1A594CE64();
    sub_1A594CE88();
    result = sub_1A594CED0();
    v11 = 1 << *a2;
    if (__OFSUB__(v11, 1))
      goto LABEL_17;
    v12 = (v11 - 1) & result;
    if (v6 >= v8)
    {
      if (v12 < v8)
        goto LABEL_3;
LABEL_12:
      if (v6 < v12)
        goto LABEL_3;
      goto LABEL_13;
    }
    if (v12 < v8)
      goto LABEL_12;
LABEL_13:
    sub_1A594A3F8();
    sub_1A594A3EC();
    v6 = v7;
LABEL_3:
    sub_1A594A410();
    v7 = a1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A555C568(uint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;

  v5 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  if (v5 >= 1)
  {
    v7 = result;
    v8 = *(_QWORD *)(a3 + 16);
    v9 = v8 - v5;
    if ((uint64_t)v8 < v5)
      ++v9;
    if (result < v9 >> 1)
    {
      result = MEMORY[0x1A85AC894](*a4 & 0x3FLL);
      if (result / 3 > v7)
      {
        if (v7 < 0)
        {
LABEL_61:
          __break(1u);
          goto LABEL_62;
        }
        if (v8 < v7)
        {
LABEL_62:
          __break(1u);
          goto LABEL_63;
        }
        if (v7)
        {
          v10 = 0;
          while (1)
          {
            sub_1A594CE64();
            sub_1A594CE88();
            result = sub_1A594CED0();
            if (__OFSUB__(1 << *a4, 1))
              break;
            if (sub_1A594A3D4())
            {
              while (1)
              {
                v11 = sub_1A594A3F8();
                if ((v12 & 1) == 0 && v11 == v10)
                  break;
                sub_1A594A410();
              }
            }
            result = v10 + v5;
            if (__OFADD__(v10, v5))
              goto LABEL_53;
            ++v10;
            result = sub_1A594A404();
            if (v10 == v7)
              goto LABEL_19;
          }
          __break(1u);
LABEL_53:
          __break(1u);
          goto LABEL_54;
        }
        goto LABEL_19;
      }
      sub_1A594A3D4();
      v21 = sub_1A594A3F8();
      if ((v22 & 1) != 0 || v21 >= v7)
      {
LABEL_40:
        result = sub_1A594A410();
LABEL_19:
        v13 = a4[1];
        if (__OFSUB__(v13 >> 6, v5))
        {
LABEL_59:
          __break(1u);
          goto LABEL_60;
        }
        v14 = 1 << *a4;
        v15 = __OFSUB__(v14, 1);
        v16 = v14 - 1;
        if (v15)
        {
LABEL_60:
          __break(1u);
          goto LABEL_61;
        }
        v17 = (v16 & (((v13 >> 6) - v5) >> 63)) + (v13 >> 6) - v5;
        if (v17 < v16)
          v16 = 0;
        a4[1] = a4[1] & 0x3FLL | ((v17 - v16) << 6);
        return result;
      }
      if (!__OFADD__(v21, v5))
      {
        sub_1A594A404();
        goto LABEL_40;
      }
      __break(1u);
LABEL_46:
      sub_1A594A3D4();
      v23 = sub_1A594A3F8();
      if ((v24 & 1) == 0 && v23 >= v4)
      {
        v15 = __OFSUB__(v23, v5);
        result = v23 - v5;
        if (v15)
        {
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
LABEL_56:
          __break(1u);
          goto LABEL_57;
        }
        sub_1A594A404();
      }
      return sub_1A594A410();
    }
    v4 = a2;
    v18 = v8 - a2;
    if (__OFSUB__(v8, a2))
    {
LABEL_58:
      __break(1u);
      goto LABEL_59;
    }
    result = MEMORY[0x1A85AC894](*a4 & 0x3FLL);
    if (v18 >= result / 3)
      goto LABEL_46;
    if ((uint64_t)v8 < v4)
    {
LABEL_63:
      __break(1u);
      goto LABEL_64;
    }
    if (v4 < 0)
    {
LABEL_64:
      __break(1u);
      goto LABEL_65;
    }
    if (v8 != v4)
    {
      if (v8 <= v4)
      {
LABEL_65:
        __break(1u);
        return result;
      }
      while (1)
      {
        sub_1A594CE64();
        sub_1A594CE88();
        result = sub_1A594CED0();
        if (__OFSUB__(1 << *a4, 1))
          goto LABEL_55;
        if (sub_1A594A3D4())
        {
          while (1)
          {
            v19 = sub_1A594A3F8();
            if ((v20 & 1) == 0 && v19 == v4)
              break;
            sub_1A594A410();
          }
        }
        result = v4 - v5;
        if (__OFSUB__(v4, v5))
          goto LABEL_56;
        ++v4;
        result = sub_1A594A404();
        if (v4 == v8)
          return result;
      }
    }
  }
  return result;
}

uint64_t sub_1A555C998(uint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;

  v5 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  if (v5 >= 1)
  {
    v7 = result;
    v8 = *(_QWORD *)(a3 + 16);
    v9 = v8 - v5;
    if ((uint64_t)v8 < v5)
      ++v9;
    if (result < v9 >> 1)
    {
      result = MEMORY[0x1A85AC894](*a4 & 0x3FLL);
      if (result / 3 > v7)
      {
        if (v7 < 0)
        {
LABEL_61:
          __break(1u);
          goto LABEL_62;
        }
        if (v8 < v7)
        {
LABEL_62:
          __break(1u);
          goto LABEL_63;
        }
        if (v7)
        {
          v10 = 0;
          while (1)
          {
            sub_1A594CE64();
            sub_1A594CEAC();
            result = sub_1A594CED0();
            if (__OFSUB__(1 << *a4, 1))
              break;
            if (sub_1A594A3D4())
            {
              while (1)
              {
                v11 = sub_1A594A3F8();
                if ((v12 & 1) == 0 && v11 == v10)
                  break;
                sub_1A594A410();
              }
            }
            result = v10 + v5;
            if (__OFADD__(v10, v5))
              goto LABEL_53;
            ++v10;
            result = sub_1A594A404();
            if (v10 == v7)
              goto LABEL_19;
          }
          __break(1u);
LABEL_53:
          __break(1u);
          goto LABEL_54;
        }
        goto LABEL_19;
      }
      sub_1A594A3D4();
      v21 = sub_1A594A3F8();
      if ((v22 & 1) != 0 || v21 >= v7)
      {
LABEL_40:
        result = sub_1A594A410();
LABEL_19:
        v13 = a4[1];
        if (__OFSUB__(v13 >> 6, v5))
        {
LABEL_59:
          __break(1u);
          goto LABEL_60;
        }
        v14 = 1 << *a4;
        v15 = __OFSUB__(v14, 1);
        v16 = v14 - 1;
        if (v15)
        {
LABEL_60:
          __break(1u);
          goto LABEL_61;
        }
        v17 = (v16 & (((v13 >> 6) - v5) >> 63)) + (v13 >> 6) - v5;
        if (v17 < v16)
          v16 = 0;
        a4[1] = a4[1] & 0x3FLL | ((v17 - v16) << 6);
        return result;
      }
      if (!__OFADD__(v21, v5))
      {
        sub_1A594A404();
        goto LABEL_40;
      }
      __break(1u);
LABEL_46:
      sub_1A594A3D4();
      v23 = sub_1A594A3F8();
      if ((v24 & 1) == 0 && v23 >= v4)
      {
        v15 = __OFSUB__(v23, v5);
        result = v23 - v5;
        if (v15)
        {
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
LABEL_56:
          __break(1u);
          goto LABEL_57;
        }
        sub_1A594A404();
      }
      return sub_1A594A410();
    }
    v4 = a2;
    v18 = v8 - a2;
    if (__OFSUB__(v8, a2))
    {
LABEL_58:
      __break(1u);
      goto LABEL_59;
    }
    result = MEMORY[0x1A85AC894](*a4 & 0x3FLL);
    if (v18 >= result / 3)
      goto LABEL_46;
    if ((uint64_t)v8 < v4)
    {
LABEL_63:
      __break(1u);
      goto LABEL_64;
    }
    if (v4 < 0)
    {
LABEL_64:
      __break(1u);
      goto LABEL_65;
    }
    if (v8 != v4)
    {
      if (v8 <= v4)
      {
LABEL_65:
        __break(1u);
        return result;
      }
      while (1)
      {
        sub_1A594CE64();
        sub_1A594CEAC();
        result = sub_1A594CED0();
        if (__OFSUB__(1 << *a4, 1))
          goto LABEL_55;
        if (sub_1A594A3D4())
        {
          while (1)
          {
            v19 = sub_1A594A3F8();
            if ((v20 & 1) == 0 && v19 == v4)
              break;
            sub_1A594A410();
          }
        }
        result = v4 - v5;
        if (__OFSUB__(v4, v5))
          goto LABEL_56;
        ++v4;
        result = sub_1A594A404();
        if (v4 == v8)
          return result;
      }
    }
  }
  return result;
}

uint64_t sub_1A555CDC8(uint64_t result, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  int64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (result < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v3 = v2;
  v5 = result;
  v8 = v2[1];
  v6 = v2 + 1;
  v7 = v8;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v6 = v8;
  if (isUniquelyReferenced_nonNull_native && (unint64_t)v5 <= *(_QWORD *)(v7 + 24) >> 1)
  {
    v10 = *v3;
    if (*v3)
      goto LABEL_5;
  }
  else
  {
    if (*(_QWORD *)(v7 + 16) <= v5)
      v15 = v5;
    else
      v15 = *(_QWORD *)(v7 + 16);
    sub_1A54F4AC0(isUniquelyReferenced_nonNull_native, v15, 0);
    v7 = *v6;
    v10 = *v3;
    if (*v3)
    {
LABEL_5:
      swift_beginAccess();
      v11 = *(_QWORD *)(v10 + 16) & 0x3FLL;
      v12 = MEMORY[0x1A85AC8B8](v5);
      v13 = v12;
      if ((a2 & 1) != 0)
      {
        v14 = v12;
        if (v11 >= v12)
          goto LABEL_20;
      }
      else
      {
        swift_beginAccess();
        v14 = *(_QWORD *)(v10 + 24) & 0x3FLL;
        if (v11 >= v13)
          goto LABEL_20;
      }
LABEL_16:
      if (v14 <= v13)
        v17 = v13;
      else
        v17 = v14;
      goto LABEL_30;
    }
  }
  v16 = MEMORY[0x1A85AC8B8](v5);
  v13 = v16;
  v11 = 0;
  if ((a2 & 1) != 0)
    v14 = v16;
  else
    v14 = 0;
  if (v16 > 0)
    goto LABEL_16;
LABEL_20:
  if (v14 <= v13)
    v18 = v13;
  else
    v18 = v14;
  result = MEMORY[0x1A85AC8B8](*(_QWORD *)(v7 + 16));
  if (result <= v18)
    v19 = v18;
  else
    v19 = result;
  if (v19 < v11)
  {
    if (v14 <= v19)
      v17 = v19;
    else
      v17 = v14;
LABEL_30:
    v20 = sub_1A555B6A8(v7, v17, 0, v14);
    result = swift_release();
    *v3 = v20;
    return result;
  }
  if (!v10 || (result = swift_isUniquelyReferenced_native(), (_DWORD)result))
  {
    v21 = *v3;
    if (*v3)
      goto LABEL_35;
LABEL_39:
    if (!v14)
      return result;
    __break(1u);
    goto LABEL_41;
  }
  result = *v3;
  if (!*v3)
  {
LABEL_42:
    __break(1u);
    return result;
  }
  v21 = sub_1A594A434();
  result = swift_release();
  *v3 = v21;
  if (!v21)
    goto LABEL_39;
LABEL_35:
  result = swift_beginAccess();
  if ((*(_QWORD *)(v21 + 24) & 0x3FLL) != v14)
    *(_QWORD *)(v21 + 24) = *(_QWORD *)(v21 + 24) & 0xFFFFFFFFFFFFFFC0 | v14 & 0x3F;
  return result;
}

uint64_t sub_1A555CFA8(uint64_t result, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  int64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (result < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v3 = v2;
  v5 = result;
  v8 = v2[1];
  v6 = v2 + 1;
  v7 = v8;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v6 = v8;
  if (isUniquelyReferenced_nonNull_native && (unint64_t)v5 <= *(_QWORD *)(v7 + 24) >> 1)
  {
    v10 = *v3;
    if (*v3)
      goto LABEL_5;
  }
  else
  {
    if (*(_QWORD *)(v7 + 16) <= v5)
      v15 = v5;
    else
      v15 = *(_QWORD *)(v7 + 16);
    sub_1A54F4B84(isUniquelyReferenced_nonNull_native, v15, 0);
    v7 = *v6;
    v10 = *v3;
    if (*v3)
    {
LABEL_5:
      swift_beginAccess();
      v11 = *(_QWORD *)(v10 + 16) & 0x3FLL;
      v12 = MEMORY[0x1A85AC8B8](v5);
      v13 = v12;
      if ((a2 & 1) != 0)
      {
        v14 = v12;
        if (v11 >= v12)
          goto LABEL_20;
      }
      else
      {
        swift_beginAccess();
        v14 = *(_QWORD *)(v10 + 24) & 0x3FLL;
        if (v11 >= v13)
          goto LABEL_20;
      }
LABEL_16:
      if (v14 <= v13)
        v17 = v13;
      else
        v17 = v14;
      goto LABEL_30;
    }
  }
  v16 = MEMORY[0x1A85AC8B8](v5);
  v13 = v16;
  v11 = 0;
  if ((a2 & 1) != 0)
    v14 = v16;
  else
    v14 = 0;
  if (v16 > 0)
    goto LABEL_16;
LABEL_20:
  if (v14 <= v13)
    v18 = v13;
  else
    v18 = v14;
  result = MEMORY[0x1A85AC8B8](*(_QWORD *)(v7 + 16));
  if (result <= v18)
    v19 = v18;
  else
    v19 = result;
  if (v19 < v11)
  {
    if (v14 <= v19)
      v17 = v19;
    else
      v17 = v14;
LABEL_30:
    v20 = sub_1A555B72C(v7, v17, 0, v14);
    result = swift_release();
    *v3 = v20;
    return result;
  }
  if (!v10 || (result = swift_isUniquelyReferenced_native(), (_DWORD)result))
  {
    v21 = *v3;
    if (*v3)
      goto LABEL_35;
LABEL_39:
    if (!v14)
      return result;
    __break(1u);
    goto LABEL_41;
  }
  result = *v3;
  if (!*v3)
  {
LABEL_42:
    __break(1u);
    return result;
  }
  v21 = sub_1A594A434();
  result = swift_release();
  *v3 = v21;
  if (!v21)
    goto LABEL_39;
LABEL_35:
  result = swift_beginAccess();
  if ((*(_QWORD *)(v21 + 24) & 0x3FLL) != v14)
    *(_QWORD *)(v21 + 24) = *(_QWORD *)(v21 + 24) & 0xFFFFFFFFFFFFFFC0 | v14 & 0x3F;
  return result;
}

uint64_t sub_1A555D188(unsigned __int8 a1)
{
  return ((uint64_t (*)(void))((char *)sub_1A555D1AC + 4 * byte_1A59A5923[a1 >> 6]))();
}

BOOL sub_1A555D1AC@<W0>(unsigned int a1@<W8>)
{
  int v1;

  return a1 <= 0x3F && v1 == a1;
}

uint64_t sub_1A555D250(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1A555D28C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  unsigned int v5;
  int v6;
  uint64_t result;
  char v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v2 = MEMORY[0x1E0DEE9D8];
  v12 = MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(a1 + 16);
  sub_1A555CDC8(v3, 0);
  sub_1A54F4B30(0, v3, 0);
  if (!v3)
    return 0;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v4 = (int *)(a1 + 44);
  while (1)
  {
    v5 = *(v4 - 1);
    v6 = *v4;
    result = sub_1A557FEEC(*(_QWORD *)(v4 - 3), v5, v12 + 32, *(_QWORD *)(v12 + 16));
    if ((v8 & 1) == 0)
      break;
    v9 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A555B280(v9, v5);
    v11 = *(_QWORD *)(v2 + 16);
    v10 = *(_QWORD *)(v2 + 24);
    if (v11 >= v10 >> 1)
      sub_1A54F4B30(v10 > 1, v11 + 1, 1);
    v4 += 4;
    *(_QWORD *)(v2 + 16) = v11 + 1;
    *(_DWORD *)(v2 + 4 * v11 + 32) = v6;
    swift_bridgeObjectRelease();
    if (!--v3)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A555D3EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  int v18;
  uint64_t v19;

  v2 = MEMORY[0x1E0DEE9D8];
  v19 = MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(a1 + 16);
  sub_1A555CFA8(v3, 0);
  sub_1A54F4B68(0, v3, 0);
  v4 = v2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v3)
  {
    v5 = 0;
    v6 = a1 + 32;
    do
    {
      v7 = v6 + 24 * v5;
      v8 = *(_DWORD *)v7;
      v9 = *(_QWORD *)(v7 + 8);
      v10 = *(_QWORD *)(v7 + 16);
      result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      if (v10 == 1)
        break;
      v12 = *(_QWORD *)(v19 + 16);
      if (v12)
      {
        if (v8 == *(_DWORD *)(v19 + 32))
          goto LABEL_22;
        if (v12 != 1)
        {
          if (v8 == *(_DWORD *)(v19 + 36))
            goto LABEL_22;
          if (v12 != 2)
          {
            if (v8 == *(_DWORD *)(v19 + 40))
              goto LABEL_22;
            if (v12 != 3)
            {
              if (v8 == *(_DWORD *)(v19 + 44))
              {
LABEL_22:
                __break(1u);
                return result;
              }
              v16 = v12 - 4;
              v17 = (int *)(v19 + 48);
              while (v16)
              {
                v18 = *v17++;
                --v16;
                if (v8 == v18)
                  goto LABEL_22;
              }
            }
          }
        }
        v12 = 0;
      }
      sub_1A555B3F4(v8, v12, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_1A54F4B84);
      v14 = *(_QWORD *)(v4 + 16);
      v13 = *(_QWORD *)(v4 + 24);
      if (v14 >= v13 >> 1)
        sub_1A54F4B68(v13 > 1, v14 + 1, 1);
      ++v5;
      *(_QWORD *)(v4 + 16) = v14 + 1;
      v15 = v4 + 16 * v14;
      *(_QWORD *)(v15 + 32) = v9;
      *(_QWORD *)(v15 + 40) = v10;
    }
    while (v5 != v3);
  }
  swift_bridgeObjectRelease();
  return 0;
}

int64_t sub_1A555D5B8(unsigned __int8 a1, uint64_t a2, unsigned int a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t result;
  uint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;

  v7 = v3[1];
  v8 = v7 + 32;
  v9 = *(_QWORD *)(v7 + 16);
  if (*v3)
  {
    result = sub_1A557FFE0(a2, a3, v8, v9, (_QWORD *)(*v3 + 16));
    if ((v12 & 1) == 0)
      goto LABEL_3;
  }
  else
  {
    result = sub_1A557FEEC(a2, a3, v8, v9);
    v11 = 0;
    if ((v14 & 1) == 0)
    {
LABEL_3:
      v13 = result;
      if (a1 > 0xFBu)
      {
        sub_1A555B9A8(result, v11);
        swift_bridgeObjectRelease();
        return sub_1A555BFC0(v13);
      }
      v20 = v3[2];
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = sub_1A555C1A8(v20);
        v20 = result;
      }
      if ((v13 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v13 < *(_QWORD *)(v20 + 16))
      {
        *(_BYTE *)(v20 + v13 + 32) = a1;
        v3[2] = v20;
        return result;
      }
      __break(1u);
      return result;
    }
  }
  if (a1 <= 0xFBu)
  {
    sub_1A555B280(a2, a3);
    v17 = v3[2];
    v15 = v3 + 2;
    v16 = v17;
    result = swift_isUniquelyReferenced_nonNull_native();
    *v15 = v17;
    if ((result & 1) == 0)
    {
      result = sub_1A54F4D98(0, *(_QWORD *)(v16 + 16) + 1, 1);
      v16 = *v15;
    }
    v19 = *(_QWORD *)(v16 + 16);
    v18 = *(_QWORD *)(v16 + 24);
    if (v19 >= v18 >> 1)
    {
      result = sub_1A54F4D98(v18 > 1, v19 + 1, 1);
      v16 = *v15;
    }
    *(_QWORD *)(v16 + 16) = v19 + 1;
    *(_BYTE *)(v16 + v19 + 32) = a1;
    *v15 = v16;
  }
  return result;
}

uint64_t sub_1A555D71C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *i;
  char v5;
  unsigned int v6;
  uint64_t result;
  char v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v2 = MEMORY[0x1E0DEE9D8];
  v12 = MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(a1 + 16);
  sub_1A555CDC8(v3, 0);
  sub_1A54F4D98(0, v3, 0);
  if (!v3)
    return 0;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  for (i = (_BYTE *)(a1 + 44); ; i += 16)
  {
    v5 = *i;
    v6 = *((_DWORD *)i - 1);
    result = sub_1A557FEEC(*(_QWORD *)(i - 12), v6, v12 + 32, *(_QWORD *)(v12 + 16));
    if ((v8 & 1) == 0)
      break;
    v9 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A555B280(v9, v6);
    v11 = *(_QWORD *)(v2 + 16);
    v10 = *(_QWORD *)(v2 + 24);
    if (v11 >= v10 >> 1)
      sub_1A54F4D98(v10 > 1, v11 + 1, 1);
    *(_QWORD *)(v2 + 16) = v11 + 1;
    *(_BYTE *)(v2 + v11 + 32) = v5;
    swift_bridgeObjectRelease();
    if (!--v3)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A555D880(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, uint64_t a7)
{
  unint64_t v7;
  uint64_t v11;
  uint64_t result;
  unint64_t v13;
  unsigned int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v7 = *(_QWORD *)(a5 + 16);
  if (!v7)
    return 1;
  v11 = *(_QWORD *)(a4 + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  v25 = a4;
  result = swift_retain();
  if (!v11)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    v24 = 1;
LABEL_17:
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return v24;
  }
  v13 = 0;
  v14 = (unsigned int *)(v25 + 40);
  while (v7 != v13)
  {
    v15 = *((_QWORD *)v14 - 1);
    v16 = *v14;
    ++v13;
    v17 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if ((a1(v17, v16) & 1) == 0)
      goto LABEL_8;
    v18 = a6[1];
    v19 = v18 + 32;
    v20 = *(_QWORD *)(v18 + 16);
    if (*a6)
    {
      sub_1A557FFE0(v15, v16, v19, v20, (_QWORD *)(*a6 + 16));
      if ((v21 & 1) == 0)
        goto LABEL_8;
    }
    else
    {
      sub_1A557FEEC(v15, v16, v19, v20);
      if ((v22 & 1) == 0)
      {
LABEL_8:
        result = swift_bridgeObjectRelease();
        goto LABEL_11;
      }
    }
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A555D5B8(0xC2u, v15, v16);
    swift_bridgeObjectRelease();
    v23 = *(_QWORD *)(a6[1] + 16);
    result = swift_bridgeObjectRelease();
    if (v23 >= a7)
    {
      v24 = 0;
      goto LABEL_17;
    }
LABEL_11:
    if (v13 >= v7)
      goto LABEL_14;
    v14 += 4;
    if (v11 == v13)
      goto LABEL_13;
  }
  __break(1u);
  return result;
}

unint64_t sub_1A555DA24(uint64_t a1, char a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(void), uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t result;
  unint64_t v20;
  unsigned int *v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  unsigned int *v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  unint64_t v44;
  unsigned int *v45;
  char v46;
  unsigned __int8 v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  uint64_t v55;
  char v56;
  char v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unsigned int *v63;
  uint64_t v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  __int16 v68;
  BOOL v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  char v74;
  unsigned __int8 v75;
  uint64_t v76;
  char v77;
  char v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  char v84;
  char isEscapingClosureAtFileLocation;
  uint64_t v86;
  unsigned int v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  char v91;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v99;
  uint64_t v100;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;

  v14 = sub_1A555D71C(MEMORY[0x1E0DEE9D8]);
  v16 = v15;
  v102 = v14;
  v103 = v15;
  v104 = v17;
  v99 = swift_allocObject();
  *(_QWORD *)(v99 + 16) = 0;
  *(_QWORD *)(swift_allocObject() + 16) = a10;
  v18 = *(_QWORD *)(a7 + 16);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  result = swift_retain();
  v100 = a5;
  if (!v18)
  {
LABEL_27:
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_bridgeObjectRelease();
    swift_retain_n();
    swift_retain_n();
    result = swift_retain_n();
    if (v18)
    {
      v35 = 0;
      v36 = (unsigned int *)(a6 + 40);
      do
      {
        if (v35 >= *(_QWORD *)(a6 + 16))
          goto LABEL_117;
        if (v35 >= *(_QWORD *)(a7 + 16))
          goto LABEL_118;
        if (*(_BYTE *)(a7 + v35 + 32) != 1)
        {
          v38 = *((_QWORD *)v36 - 1);
          v39 = *v36;
          v40 = v16 + 32;
          v41 = *(_QWORD *)(v16 + 16);
          if (v102)
          {
            result = sub_1A557FFE0(*((_QWORD *)v36 - 1), *v36, v40, v41, (_QWORD *)(v102 + 16));
            if ((v42 & 1) == 0)
              goto LABEL_30;
          }
          else
          {
            result = sub_1A557FEEC(*((_QWORD *)v36 - 1), *v36, v40, v41);
            if ((v43 & 1) == 0)
              goto LABEL_30;
          }
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          if ((a2 & 1) == 0)
          {
            sub_1A555D5B8(0xC0u, v38, v39);
            v16 = v103;
          }
          v37 = *(_QWORD *)(v16 + 16);
          result = swift_bridgeObjectRelease();
          if (v37 >= a1)
          {
            swift_release();
            swift_bridgeObjectRelease();
            swift_release_n();
            swift_release_n();
            swift_release_n();
            swift_bridgeObjectRelease();
            return v102;
          }
        }
LABEL_30:
        ++v35;
        v36 += 4;
      }
      while (v18 != v35);
    }
    swift_release_n();
    swift_release_n();
    swift_release_n();
    *(_QWORD *)(swift_allocObject() + 16) = a11;
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    result = swift_retain();
    if (v18)
    {
      v44 = 0;
      v95 = a6 + 32;
      v45 = (unsigned int *)(a6 + 40);
      while (1)
      {
        if (v44 >= *(_QWORD *)(a6 + 16))
          goto LABEL_119;
        if (v44 >= *(_QWORD *)(a7 + 16))
          goto LABEL_120;
        v49 = *((_QWORD *)v45 - 1);
        v50 = *v45;
        result = sub_1A54E9E54(v49, *v45, a11);
        if ((result & 1) != 0)
          break;
LABEL_45:
        ++v44;
        v45 += 4;
        if (v18 == v44)
          goto LABEL_66;
      }
      v51 = v16 + 32;
      v52 = *(_QWORD *)(v16 + 16);
      if (v102)
      {
        result = sub_1A557FFE0(v49, v50, v51, v52, (_QWORD *)(v102 + 16));
        if ((v53 & 1) == 0)
          goto LABEL_45;
      }
      else
      {
        result = sub_1A557FEEC(v49, v50, v51, v52);
        if ((v54 & 1) == 0)
          goto LABEL_45;
      }
      v55 = *(_QWORD *)(a6 + 16);
      if (v100)
      {
        result = sub_1A557FFE0(v49, v50, v95, v55, (_QWORD *)(v100 + 16));
        if ((v56 & 1) != 0)
          goto LABEL_60;
      }
      else
      {
        result = sub_1A557FEEC(v49, v50, v95, v55);
        if ((v57 & 1) != 0)
          goto LABEL_60;
      }
      if ((result & 0x8000000000000000) != 0)
        goto LABEL_125;
      if (result >= *(_QWORD *)(a7 + 16))
        goto LABEL_126;
      if ((*(_BYTE *)(a7 + 32 + result) & 1) == 0)
      {
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_43;
      }
LABEL_60:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v58 = sub_1A555676C(v99, a8);
      v59 = sub_1A54E9E54(v49, v50, v58);
      swift_bridgeObjectRelease();
      if ((v59 & 1) == 0)
      {
        if ((sub_1A54E9E54(v49, v50, a10) & 1) != 0)
        {
          v46 = 1;
        }
        else if ((sub_1A54E9E54(v49, v50, a11) & 1) != 0)
        {
          v46 = 2;
        }
        else
        {
          v46 = 3;
        }
LABEL_44:
        v47 = v46 | 0x40;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A555D5B8(v47, v49, v50);
        swift_bridgeObjectRelease();
        v16 = v103;
        v48 = *(_QWORD *)(v103 + 16);
        result = swift_bridgeObjectRelease();
        if (v48 >= a1)
        {
          swift_release();
          swift_release_n();
          swift_release_n();
          swift_release_n();
          swift_release_n();
          swift_bridgeObjectRelease();
          goto LABEL_108;
        }
        goto LABEL_45;
      }
LABEL_43:
      v46 = 0;
      goto LABEL_44;
    }
LABEL_66:
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    v60 = swift_bridgeObjectRelease();
    v61 = a3(v60);
    *(_QWORD *)(swift_allocObject() + 16) = v61;
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    result = swift_retain();
    if (v18)
    {
      v62 = 0;
      v93 = a6 + 32;
      v96 = v61;
      v63 = (unsigned int *)(a6 + 40);
      do
      {
        if (v62 >= *(_QWORD *)(a6 + 16))
          goto LABEL_121;
        if (v62 >= *(_QWORD *)(a7 + 16))
          goto LABEL_122;
        v64 = *((_QWORD *)v63 - 1);
        v65 = *v63;
        v66 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v67 = MailboxesSelectionUsage.subscript.getter(v66, v65, v61);
        if ((v68 & 0x101) != 1 || v67 == 0)
        {
LABEL_68:
          result = swift_bridgeObjectRelease();
          goto LABEL_69;
        }
        v70 = v67 == 1;
        v71 = v16 + 32;
        v72 = *(_QWORD *)(v16 + 16);
        if (v102)
        {
          sub_1A557FFE0(v64, v65, v71, v72, (_QWORD *)(v102 + 16));
          if ((v73 & 1) == 0)
            goto LABEL_68;
        }
        else
        {
          sub_1A557FEEC(v64, v65, v71, v72);
          if ((v74 & 1) == 0)
            goto LABEL_68;
        }
        if (v70)
        {
          v75 = -63;
          goto LABEL_96;
        }
        v76 = *(_QWORD *)(a6 + 16);
        if (v100)
        {
          result = sub_1A557FFE0(v64, v65, v93, v76, (_QWORD *)(v100 + 16));
          if ((v77 & 1) != 0)
            goto LABEL_89;
        }
        else
        {
          result = sub_1A557FEEC(v64, v65, v93, v76);
          if ((v78 & 1) != 0)
            goto LABEL_89;
        }
        if ((result & 0x8000000000000000) != 0)
          goto LABEL_128;
        if (result >= *(_QWORD *)(a7 + 16))
          goto LABEL_129;
        if (*(_BYTE *)(a7 + 32 + result) != 1)
        {
LABEL_90:
          v75 = 0x80;
          goto LABEL_96;
        }
LABEL_89:
        v79 = sub_1A555676C(v99, a8);
        v80 = sub_1A54E9E54(v64, v65, v79);
        swift_bridgeObjectRelease();
        if ((v80 & 1) != 0)
          goto LABEL_90;
        if ((sub_1A54E9E54(v64, v65, a10) & 1) != 0)
        {
          v75 = -127;
        }
        else if ((sub_1A54E9E54(v64, v65, a11) & 1) != 0)
        {
          v75 = -126;
        }
        else
        {
          v75 = -125;
        }
LABEL_96:
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A555D5B8(v75, v64, v65);
        swift_bridgeObjectRelease();
        v16 = v103;
        v81 = *(_QWORD *)(v103 + 16);
        result = swift_bridgeObjectRelease();
        v61 = v96;
        if (v81 >= a1)
        {
          swift_release();
          swift_release_n();
          swift_release_n();
          swift_release_n();
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v102;
        }
LABEL_69:
        ++v62;
        v63 += 4;
      }
      while (v18 != v62);
    }
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_bridgeObjectRelease();
    v82 = (_QWORD *)swift_allocObject();
    v82[2] = v99;
    v82[3] = a8;
    v82[4] = a9;
    v83 = swift_allocObject();
    *(_QWORD *)(v83 + 16) = sub_1A555EDA4;
    *(_QWORD *)(v83 + 24) = v82;
    swift_retain();
    swift_retain();
    v84 = sub_1A555D880((uint64_t (*)(uint64_t, uint64_t))sub_1A555EE20, v83, v100, a6, a7, &v102, a1);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) != 0)
    {
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
      return result;
    }
    if ((v84 & 1) == 0 || !*(_QWORD *)(a6 + 16))
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
LABEL_113:
      swift_release();
      return v102;
    }
    v86 = *(_QWORD *)(a6 + 32);
    v87 = *(_DWORD *)(a6 + 40);
    v88 = v103 + 32;
    v89 = *(_QWORD *)(v103 + 16);
    if (v102)
    {
      sub_1A557FFE0(*(_QWORD *)(a6 + 32), *(_DWORD *)(a6 + 40), v88, v89, (_QWORD *)(v102 + 16));
      if ((v90 & 1) == 0)
      {
LABEL_103:
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_112:
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_113;
      }
    }
    else
    {
      sub_1A557FEEC(*(_QWORD *)(a6 + 32), *(_DWORD *)(a6 + 40), v88, v89);
      if ((v91 & 1) == 0)
        goto LABEL_103;
    }
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if ((a2 & 1) == 0)
      sub_1A555D5B8(0xC3u, v86, v87);
    goto LABEL_112;
  }
  v20 = 0;
  v94 = (_QWORD *)(a5 + 16);
  v21 = (unsigned int *)(a6 + 40);
  while (1)
  {
    if (v20 >= *(_QWORD *)(a6 + 16))
    {
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
      goto LABEL_127;
    }
    if (v20 >= *(_QWORD *)(a7 + 16))
      goto LABEL_116;
    v24 = *((_QWORD *)v21 - 1);
    v25 = *v21;
    result = sub_1A54E9E54(v24, *v21, a10);
    if ((result & 1) != 0)
      break;
LABEL_6:
    ++v20;
    v21 += 4;
    if (v18 == v20)
      goto LABEL_27;
  }
  v26 = v16 + 32;
  v27 = *(_QWORD *)(v16 + 16);
  if (v102)
  {
    result = sub_1A557FFE0(v24, v25, v26, v27, (_QWORD *)(v102 + 16));
    if ((v28 & 1) == 0)
      goto LABEL_6;
  }
  else
  {
    result = sub_1A557FEEC(v24, v25, v26, v27);
    if ((v29 & 1) == 0)
      goto LABEL_6;
  }
  v30 = *(_QWORD *)(a6 + 16);
  if (v100)
  {
    result = sub_1A557FFE0(v24, v25, a6 + 32, v30, v94);
    if ((v31 & 1) != 0)
      goto LABEL_21;
  }
  else
  {
    result = sub_1A557FEEC(v24, v25, a6 + 32, v30);
    if ((v32 & 1) != 0)
      goto LABEL_21;
  }
  if ((result & 0x8000000000000000) != 0)
    goto LABEL_123;
  if (result >= *(_QWORD *)(a7 + 16))
    goto LABEL_124;
  if ((*(_BYTE *)(a7 + 32 + result) & 1) == 0)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_4:
    v22 = 0;
    goto LABEL_5;
  }
LABEL_21:
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v33 = sub_1A555676C(v99, a8);
  v34 = sub_1A54E9E54(v24, v25, v33);
  swift_bridgeObjectRelease();
  if ((v34 & 1) != 0)
    goto LABEL_4;
  if ((sub_1A54E9E54(v24, v25, a10) & 1) != 0)
  {
    v22 = 1;
  }
  else if ((sub_1A54E9E54(v24, v25, a11) & 1) != 0)
  {
    v22 = 2;
  }
  else
  {
    v22 = 3;
  }
LABEL_5:
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A555D5B8(v22, v24, v25);
  swift_bridgeObjectRelease();
  v16 = v103;
  v23 = *(_QWORD *)(v103 + 16);
  result = swift_bridgeObjectRelease();
  if (v23 < a1)
    goto LABEL_6;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release_n();
  swift_release_n();
  swift_release_n();
  swift_release_n();
LABEL_108:
  swift_bridgeObjectRelease_n();
  return v102;
}

void sub_1A555E640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, __int128 *a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int *v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v32;
  uint64_t v33;

  v10 = a5[3];
  if (v10)
  {
    v11 = a5[2];
    v12 = a5[4];
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1A555ECF4(v11, v10);
    if ((sub_1A553BA90(a1, a2, v11, v10) & 1) != 0)
    {
      v13 = sub_1A553B9A0(v12, a3);
      swift_release();
      swift_release();
      swift_release();
      sub_1A555D250(v11, v10);
      if ((v13 & 1) != 0)
        return;
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      sub_1A555D250(v11, v10);
    }
  }
  v14 = a5[2];
  v15 = a5[3];
  a5[2] = a1;
  a5[3] = a2;
  a5[4] = a3;
  sub_1A555D250(v14, v15);
  v16 = *(_QWORD *)(a3 + 16);
  if (v16)
  {
    v30 = *(_QWORD *)(a2 + 16);
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    v17 = 0;
    v18 = (unsigned int *)(a2 + 40);
    v29 = a3;
    do
    {
      if (v30 == v17)
      {
        __break(1u);
        JUMPOUT(0x1A555ECD4);
      }
      v19 = *(unsigned __int8 *)(a3 + v17 + 32);
      v20 = v17 + 1;
      sub_1A5512ED4(*((_QWORD *)v18 - 1), *v18, a6);
      if (!v21)
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53();
      v22 = sub_1A594A74C();
      v23 = sub_1A594C030();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = swift_slowAlloc();
        v33 = swift_slowAlloc();
        *(_DWORD *)v24 = 68159491;
        sub_1A594C3CC();
        *(_WORD *)(v24 + 8) = 512;
        sub_1A594C3CC();
        *(_WORD *)(v24 + 12) = 2160;
        sub_1A594C3CC();
        *(_WORD *)(v24 + 22) = 2085;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v25 = sub_1A594B4A8();
        sub_1A55791B0(v25, v26, &v33);
        sub_1A594C3CC();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v24 + 32) = 256;
        sub_1A594C3CC();
        *(_WORD *)(v24 + 35) = 256;
        sub_1A594C3CC();
        *(_WORD *)(v24 + 38) = 2082;
        __asm { BR              X9 }
      }
      swift_bridgeObjectRelease_n();

      v18 += 4;
      v17 = v20;
      a3 = v29;
    }
    while (v16 != v20);
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_53();
    v32 = sub_1A594A74C();
    v27 = sub_1A594C030();
    if (os_log_type_enabled(v32, (os_log_type_t)v27))
    {
      v28 = swift_slowAlloc();
      *(_DWORD *)v28 = 68157952;
      sub_1A594C3CC();
      *(_WORD *)(v28 + 8) = 256;
      sub_1A594C3CC();
      swift_release();
      _os_log_impl(&dword_1A4F90000, v32, (os_log_type_t)v27, "[%.*hhx] [MailboxesToSelect] None.", (uint8_t *)v28, 0xBu);
      MEMORY[0x1A85B1964](v28, -1, -1);
    }
    else
    {
      swift_release();
    }

  }
}

uint64_t sub_1A555ECF4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

void *sub_1A555ED2C()
{
  uint64_t v0;

  return sub_1A558A2F8(*(_QWORD *)(v0 + 32));
}

uint64_t sub_1A555ED54()
{
  uint64_t v0;

  return sub_1A5555F8C(*(__int128 **)(v0 + 16));
}

uint64_t sub_1A555ED5C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A555ED80()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A555EDA4(uint64_t a1, unsigned int a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = sub_1A555676C(*(_QWORD *)(v2 + 16), *(uint64_t (**)(void))(v2 + 24));
  LOBYTE(a2) = sub_1A54E9E54(a1, a2, v5);
  swift_bridgeObjectRelease();
  return a2 & 1;
}

uint64_t sub_1A555EDFC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A555EE20()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t sub_1A555EE44()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 136))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1A54E8FCC(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_BYTE *)(v0 + 184));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A555EEBC(uint64_t a1)
{
  sub_1A5522E6C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72));
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchRequest.Predicate.Color(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s17MailboxesToSelectV6ReasonO4KindOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1A555EFF8 + 4 * byte_1A59A5930[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1A555F02C + 4 * byte_1A59A592B[v4]))();
}

uint64_t sub_1A555F02C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A555F034(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A555F03CLL);
  return result;
}

uint64_t sub_1A555F048(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A555F050);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1A555F054(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A555F05C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s17MailboxesToSelectV6ReasonO4KindOMa()
{
  return &_s17MailboxesToSelectV6ReasonO4KindON;
}

uint64_t _s17MailboxesToSelectV6ReasonO4WorkOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A555F0C4 + 4 * byte_1A59A593A[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A555F0F8 + 4 * byte_1A59A5935[v4]))();
}

uint64_t sub_1A555F0F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A555F100(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A555F108);
  return result;
}

uint64_t sub_1A555F114(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A555F11CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A555F120(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A555F128(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s17MailboxesToSelectV6ReasonO4WorkOMa()
{
  return &_s17MailboxesToSelectV6ReasonO4WorkON;
}

uint64_t _s11UserVisibleOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A555F190 + 4 * byte_1A59A5944[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A555F1C4 + 4 * byte_1A59A593F[v4]))();
}

uint64_t sub_1A555F1C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A555F1CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A555F1D4);
  return result;
}

uint64_t sub_1A555F1E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A555F1E8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A555F1EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A555F1F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s11UserVisibleOMa()
{
  return &_s11UserVisibleON;
}

uint64_t _s17MailboxesToSelectV6ReasonOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0x3D)
    goto LABEL_17;
  if (a2 + 195 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 195) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 195;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 195;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 195;
  }
LABEL_17:
  v6 = (*a1 & 0x3C | (*a1 >> 6)) ^ 0x3F;
  if (v6 >= 0x3C)
    v6 = -1;
  return v6 + 1;
}

uint64_t _s17MailboxesToSelectV6ReasonOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 195 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 195) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x3D)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x3C)
    return ((uint64_t (*)(void))((char *)&loc_1A555F2F8 + 4 * byte_1A59A594E[v4]))();
  *a1 = a2 - 61;
  return ((uint64_t (*)(void))((char *)sub_1A555F32C + 4 * byte_1A59A5949[v4]))();
}

uint64_t sub_1A555F32C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A555F334(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A555F33CLL);
  return result;
}

uint64_t sub_1A555F354(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A555F35CLL);
  *(_BYTE *)result = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
  return result;
}

uint64_t sub_1A555F360(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A555F368(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A555F374(unsigned __int8 *a1)
{
  unsigned int v1;
  unsigned int v2;
  unsigned int v3;

  v1 = *a1;
  v2 = v1 >> 6;
  v3 = (v1 & 3) + 3;
  if (v2 == 3)
    return v3;
  else
    return v2;
}

_BYTE *sub_1A555F390(_BYTE *result)
{
  *result &= 0x3Fu;
  return result;
}

_BYTE *sub_1A555F3A0(_BYTE *result, unsigned int a2)
{
  if (a2 < 3)
    *result = *result & 3 | ((_BYTE)a2 << 6);
  else
    *result = (a2 + 1) & 3 | 0xC0;
  return result;
}

ValueMetadata *_s17MailboxesToSelectV6ReasonOMa()
{
  return &_s17MailboxesToSelectV6ReasonON;
}

unint64_t sub_1A555F3E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE7A8948;
  if (!qword_1EE7A8948)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract_0(&qword_1EE7A8950);
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EE7A8948);
  }
  return result;
}

unint64_t sub_1A555F434()
{
  unint64_t result;

  result = qword_1EE7A8958;
  if (!qword_1EE7A8958)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A5ADC, &_s11UserVisibleON);
    atomic_store(result, (unint64_t *)&qword_1EE7A8958);
  }
  return result;
}

unint64_t sub_1A555F47C()
{
  unint64_t result;

  result = qword_1EE7A8960;
  if (!qword_1EE7A8960)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A5B44, &_s17MailboxesToSelectV6ReasonO4WorkON);
    atomic_store(result, (unint64_t *)&qword_1EE7A8960);
  }
  return result;
}

unint64_t sub_1A555F4C4()
{
  unint64_t result;

  result = qword_1EE7A8968;
  if (!qword_1EE7A8968)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A5BEC, &_s17MailboxesToSelectV6ReasonO4KindON);
    atomic_store(result, (unint64_t *)&qword_1EE7A8968);
  }
  return result;
}

uint64_t sub_1A555F508(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1A555F530(uint64_t a1)
{
  int64_t v1;
  int v2;
  uint64_t v3;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_1A54F4E08(0, v1, 0);
    v3 = sub_1A5520CE0(a1);
    if (v3 < 0 || v3 >= 1 << *(_BYTE *)(a1 + 32))
    {
      __break(1u);
    }
    else if ((*(_QWORD *)(a1 + 64 + 8 * ((unint64_t)v3 >> 6)) & (1 << v3)) != 0)
    {
      if (*(_DWORD *)(a1 + 36) == v2)
        __asm { BR              X9 }
LABEL_10:
      __break(1u);
      JUMPOUT(0x1A555F7ACLL);
    }
    __break(1u);
    goto LABEL_10;
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1A555F7C8(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v3 = a1;
  v31 = MEMORY[0x1E0DEE9D8];
  sub_1A54F4DEC(0, v1, 0);
  v2 = v31;
  result = sub_1A5520CE0(v3);
  v6 = result;
  v7 = 0;
  v8 = v3 + 64;
  v25 = v3 + 80;
  v26 = v1;
  v27 = v5;
  v28 = v3 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(v3 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(v3 + 36) != v5)
      goto LABEL_24;
    v29 = v7;
    v30 = *(unsigned __int16 *)(*(_QWORD *)(v3 + 56) + 2 * v6);
    v12 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v13 = OpaqueMailboxID.description.getter(v12);
    v15 = v14;
    result = swift_bridgeObjectRelease();
    v16 = v3;
    v18 = *(_QWORD *)(v31 + 16);
    v17 = *(_QWORD *)(v31 + 24);
    if (v18 >= v17 >> 1)
      result = sub_1A54F4DEC(v17 > 1, v18 + 1, 1);
    *(_QWORD *)(v31 + 16) = v18 + 1;
    v19 = (_QWORD *)(v31 + 24 * v18);
    v19[4] = v13;
    v19[5] = v15;
    v19[6] = v30;
    v9 = 1 << *(_BYTE *)(v16 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = v28;
    v20 = *(_QWORD *)(v28 + 8 * v11);
    if ((v20 & (1 << v6)) == 0)
      goto LABEL_26;
    v3 = v16;
    v5 = v27;
    if (*(_DWORD *)(v16 + 36) != v27)
      goto LABEL_27;
    v21 = v20 & (-2 << (v6 & 0x3F));
    if (v21)
    {
      v9 = __clz(__rbit64(v21)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v26;
    }
    else
    {
      v22 = v11 + 1;
      v23 = (unint64_t)(v9 + 63) >> 6;
      v10 = v26;
      if (v11 + 1 < v23)
      {
        v24 = *(_QWORD *)(v28 + 8 * v22);
        if (v24)
        {
LABEL_20:
          v9 = __clz(__rbit64(v24)) + (v22 << 6);
        }
        else
        {
          while (v23 - 2 != v11)
          {
            v24 = *(_QWORD *)(v25 + 8 * v11++);
            if (v24)
            {
              v22 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    v7 = v29 + 1;
    v6 = v9;
    if (v29 + 1 == v10)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1A555FA04(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  int v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v24 = *(_QWORD *)(a1 + 16);
  v25 = MEMORY[0x1E0DEE9D8];
  sub_1A54F4E24(0, v1, 0);
  v2 = v25;
  result = sub_1A558A244(a1);
  v6 = result;
  v7 = v24;
  v8 = 0;
  v9 = a1 + 64;
  v10 = a1 + 88;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v12 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v9 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_25;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v5)
      goto LABEL_26;
    v13 = *(_DWORD *)(*(_QWORD *)(a1 + 48) + 4 * v6);
    v15 = *(_QWORD *)(v25 + 16);
    v14 = *(_QWORD *)(v25 + 24);
    if (v15 >= v14 >> 1)
    {
      v22 = v9;
      v23 = v5;
      v21 = v10;
      result = sub_1A54F4E24(v14 > 1, v15 + 1, 1);
      v10 = v21;
      v9 = v22;
      v5 = v23;
      v7 = v24;
    }
    *(_QWORD *)(v25 + 16) = v15 + 1;
    *(_DWORD *)(v25 + 4 * v15 + 32) = v13;
    v11 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v11)
      goto LABEL_27;
    v16 = *(_QWORD *)(v9 + 8 * v12);
    if ((v16 & (1 << v6)) == 0)
      goto LABEL_28;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v5)
      goto LABEL_29;
    v17 = v16 & (-2 << (v6 & 0x3F));
    if (v17)
    {
      v11 = __clz(__rbit64(v17)) | v6 & 0xFFFFFFFFFFFFFFC0;
    }
    else
    {
      v18 = v12 + 1;
      v19 = (unint64_t)(v11 + 63) >> 6;
      if (v12 + 1 < v19)
      {
        v20 = *(_QWORD *)(v9 + 8 * v18);
        if (!v20)
        {
          v18 = v12 + 2;
          if (v12 + 2 >= v19)
            goto LABEL_4;
          v20 = *(_QWORD *)(v9 + 8 * v18);
          if (!v20)
          {
            while (v19 - 3 != v12)
            {
              v20 = *(_QWORD *)(v10 + 8 * v12++);
              if (v20)
              {
                v18 = v12 + 2;
                goto LABEL_17;
              }
            }
            goto LABEL_4;
          }
        }
LABEL_17:
        v11 = __clz(__rbit64(v20)) + (v18 << 6);
      }
    }
LABEL_4:
    ++v8;
    v6 = v11;
    if (v8 == v7)
      return v2;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1A555FC10(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  int64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v3 = a1;
  v33 = MEMORY[0x1E0DEE9D8];
  sub_1A54F4E94(0, v1, 0);
  v2 = v33;
  result = sub_1A5520CE0(v3);
  v6 = result;
  v7 = 0;
  v8 = v3 + 64;
  v26 = v3 + 80;
  v27 = v1;
  v28 = v5;
  v29 = v3 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(v3 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_26;
    if (*(_DWORD *)(v3 + 36) != v5)
      goto LABEL_27;
    v30 = v7;
    v12 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v6);
    v14 = *v12;
    v13 = v12[1];
    v15 = *(_QWORD *)(v3 + 56) + 24 * v6;
    v32 = *(_DWORD *)v15;
    if (*(_BYTE *)(v15 + 16))
      v16 = -1;
    else
      v16 = *(_QWORD *)(v15 + 8);
    v31 = v16;
    result = sub_1A54E42B4(v14, v13);
    v17 = v3;
    v19 = *(_QWORD *)(v33 + 16);
    v18 = *(_QWORD *)(v33 + 24);
    if (v19 >= v18 >> 1)
      result = sub_1A54F4E94(v18 > 1, v19 + 1, 1);
    *(_QWORD *)(v33 + 16) = v19 + 1;
    v20 = v33 + 32 * v19;
    *(_QWORD *)(v20 + 32) = v14;
    *(_QWORD *)(v20 + 40) = v13;
    *(_DWORD *)(v20 + 48) = v32;
    *(_QWORD *)(v20 + 56) = v31;
    v9 = 1 << *(_BYTE *)(v17 + 32);
    if (v6 >= v9)
      goto LABEL_28;
    v8 = v29;
    v21 = *(_QWORD *)(v29 + 8 * v11);
    if ((v21 & (1 << v6)) == 0)
      goto LABEL_29;
    v3 = v17;
    v5 = v28;
    if (*(_DWORD *)(v17 + 36) != v28)
      goto LABEL_30;
    v22 = v21 & (-2 << (v6 & 0x3F));
    if (v22)
    {
      v9 = __clz(__rbit64(v22)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v27;
    }
    else
    {
      v23 = v11 + 1;
      v24 = (unint64_t)(v9 + 63) >> 6;
      v10 = v27;
      if (v11 + 1 < v24)
      {
        v25 = *(_QWORD *)(v29 + 8 * v23);
        if (v25)
        {
LABEL_23:
          v9 = __clz(__rbit64(v25)) + (v23 << 6);
        }
        else
        {
          while (v24 - 2 != v11)
          {
            v25 = *(_QWORD *)(v26 + 8 * v11++);
            if (v25)
            {
              v23 = v11 + 1;
              goto LABEL_23;
            }
          }
        }
      }
    }
    v7 = v30 + 1;
    v6 = v9;
    if (v30 + 1 == v10)
      return v2;
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1A555FE58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  unsigned int *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_QWORD *)(a3 + 16);
  v18 = MEMORY[0x1E0DEE9D8];
  sub_1A54F4B4C(0, v5, 0);
  v6 = v18;
  if (v5)
  {
    v7 = a2;
    v8 = *(_QWORD *)(a2 + 16);
    v9 = a3 + 32;
    swift_retain();
    swift_retain();
    result = swift_retain();
    v11 = (unsigned int *)(v7 + 40);
    while (v8)
    {
      v12 = *((_QWORD *)v11 - 1);
      v13 = v6;
      v14 = *v11;
      swift_bridgeObjectRetain_n();
      sub_1A5561220(v12, v14);
      sub_1A594B5F8();
      swift_bridgeObjectRelease();
      sub_1A594B5F8();
      sub_1A594B4A8();
      sub_1A594B5F8();
      v6 = v13;
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      v16 = *(_QWORD *)(v13 + 16);
      v15 = *(_QWORD *)(v13 + 24);
      if (v16 >= v15 >> 1)
        result = sub_1A54F4B4C(v15 > 1, v16 + 1, 1);
      *(_QWORD *)(v13 + 16) = v16 + 1;
      v17 = v13 + 16 * v16;
      *(_QWORD *)(v17 + 32) = 39;
      *(_QWORD *)(v17 + 40) = 0xE100000000000000;
      --v8;
      v11 += 4;
      ++v9;
      if (!--v5)
        goto LABEL_9;
    }
    __break(1u);
  }
  else
  {
    swift_retain();
    swift_retain();
    swift_retain();
LABEL_9:
    swift_release();
    swift_release();
    swift_release();
    return v6;
  }
  return result;
}

void sub_1A556003C(uint64_t a1, uint64_t a2)
{
  sub_1A5560074(a1, a2, (uint64_t (*)(void))sub_1A54E3414, (uint64_t)&type metadata for UID, &qword_1EE796DA8);
}

void sub_1A5560058(uint64_t a1, uint64_t a2)
{
  sub_1A5560074(a1, a2, (uint64_t (*)(void))sub_1A5534BE4, (uint64_t)&type metadata for SequenceNumber, &qword_1EE7A8760);
}

void sub_1A5560074(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4, uint64_t *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  char v60;
  uint64_t v61;
  unint64_t v62;

  v9 = a3();
  v10 = a2 & 0xFFFFFFFFFFLL;
  if (MessageIdentifierSet.isEmpty.getter(a1, a2 & 0xFFFFFFFFFFLL))
    return;
  MessageIdentifierSet.ranges.getter(a1, a2 & 0xFFFFFFFFFFLL);
  v12 = v11;
  v14 = v13;
  v15 = v13 & 0xFFFFFFFFFFLL;
  v16 = MessageIdentifierSet.RangeView.endIndex.getter(v11, v13 & 0xFFFFFFFFFFLL);
  if (MessageIdentifierSet.RangeView.endIndex.getter(v12, v15) < 0)
  {
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v17 = MessageIdentifierSet.RangeView.endIndex.getter(v12, v15);
  sub_1A54E3458(v12, v14, SBYTE4(v14));
  if (v16 < 0 || v17 < v16)
    goto LABEL_44;
  if ((unint64_t)v16 < 0x64)
  {
    MessageIdentifierSet.debugDescription.getter();
    return;
  }
  v55 = a5;
  v57 = v10;
  MessageIdentifierSet.ranges.getter(a1, v10);
  v19 = v18;
  v21 = v20;
  v22 = v20 & 0xFFFFFFFFFFLL;
  v23 = MessageIdentifierSet.RangeView.endIndex.getter(v18, v20 & 0xFFFFFFFFFFLL);
  if (MessageIdentifierSet.RangeView.endIndex.getter(v19, v22) < 0)
    goto LABEL_45;
  v24 = MessageIdentifierSet.RangeView.endIndex.getter(v19, v22);
  if (v23 < 0 || v24 < v23)
    goto LABEL_46;
  v25 = MessageIdentifierSet.RangeView.endIndex.getter(v19, v22);
  v26 = v25;
  if ((unint64_t)v23 >= 0x2D)
    goto LABEL_13;
  if (v25 < 0)
  {
    __break(1u);
LABEL_13:
    if (v25 < 45)
    {
LABEL_54:
      __break(1u);
      goto LABEL_55;
    }
    v26 = 45;
  }
  v27 = MessageIdentifierSet.RangeView.endIndex.getter(v19, v22);
  if ((v27 & 0x8000000000000000) != 0)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  if (v27 < v26)
  {
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  v28 = MessageIdentifierSet.init()(a4, v9);
  v61 = v28;
  LODWORD(v62) = v29;
  BYTE4(v62) = BYTE4(v29);
  v56 = a1;
  if (v26)
  {
    v30 = 0;
    while (1)
    {
      MessageIdentifierSet.RangeView.subscript.getter(v30, v19, v22);
      v31 = v58;
      if (v30 >= MessageIdentifierSet.RangeView.endIndex.getter(v19, v22))
        break;
      ++v30;
      v58 = v31;
      v58 = Range<>.init<A>(_:)((uint64_t)&v58, a4, v9);
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7971B8);
      RangeSet.insert(contentsOf:)();
      if (v26 == v30)
      {
        sub_1A54E3458(v19, v21, SBYTE4(v21));
        v32 = v61;
        v54 = v62;
        LOBYTE(v53) = BYTE4(v62);
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v32 = v28;
  v53 = HIDWORD(v29);
  v54 = v29;
  sub_1A54E3458(v19, v21, SBYTE4(v21));
LABEL_23:
  MessageIdentifierSet.ranges.getter(a1, v57);
  v34 = v33;
  v36 = v35;
  v37 = v35 & 0xFFFFFFFFFFLL;
  v38 = MessageIdentifierSet.RangeView.endIndex.getter(v33, v35 & 0xFFFFFFFFFFLL);
  v39 = MessageIdentifierSet.RangeView.endIndex.getter(v34, v37);
  if (v38 < 0 || v39 < v38)
    goto LABEL_49;
  if (MessageIdentifierSet.RangeView.endIndex.getter(v34, v37) < 0)
  {
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  v40 = v38 - 45;
  if ((unint64_t)v38 >= 0x2D)
  {
    if (MessageIdentifierSet.RangeView.endIndex.getter(v34, v37) < v40)
    {
LABEL_55:
      __break(1u);
      goto LABEL_56;
    }
  }
  else
  {
    v40 = 0;
  }
  v41 = MessageIdentifierSet.RangeView.endIndex.getter(v34, v37);
  if (v41 < v40)
    goto LABEL_51;
  v42 = v41;
  v43 = MessageIdentifierSet.RangeView.endIndex.getter(v34, v37);
  if (v43 < 0)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if (v43 < v42)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  v52 = v32;
  v44 = HIDWORD(v36);
  v45 = MessageIdentifierSet.init()(a4, v9);
  v46 = v36;
  v48 = v47;
  v61 = v45;
  v49 = HIDWORD(v47);
  LODWORD(v62) = v47;
  BYTE4(v62) = BYTE4(v47);
  if (v40 != v42)
  {
    if (v40 >= v42)
    {
LABEL_56:
      __break(1u);
      return;
    }
    v49 = v46;
    while (1)
    {
      MessageIdentifierSet.RangeView.subscript.getter(v40, v34, v37);
      v51 = v58;
      if (v40 >= MessageIdentifierSet.RangeView.endIndex.getter(v34, v37))
        goto LABEL_42;
      ++v40;
      v58 = v51;
      v58 = Range<>.init<A>(_:)((uint64_t)&v58, a4, v9);
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7971B8);
      RangeSet.insert(contentsOf:)();
      if (v42 == v40)
      {
        sub_1A54E3458(v34, v49, v44);
        v50 = v61;
        v48 = v62;
        LOBYTE(v49) = BYTE4(v62);
        goto LABEL_39;
      }
    }
  }
  v50 = v45;
  sub_1A54E3458(v34, v46, v44);
LABEL_39:
  v61 = 0;
  v62 = 0xE000000000000000;
  v58 = v52;
  v59 = v54;
  v60 = v53;
  __swift_instantiateConcreteTypeFromMangledName_0(v55);
  sub_1A594C924();
  sub_1A54E3458(v52, v54, v53);
  sub_1A594B5F8();
  v58 = v50;
  v59 = v48;
  v60 = v49;
  sub_1A594C924();
  sub_1A54E3458(v50, v48, v49);
  sub_1A594B5F8();
  v58 = MessageIdentifierSet.count.getter(v56, v57);
  sub_1A594CC9C();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
}

double StateWithTasks.stateCaptureValue(logName:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __int128 *v3;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  double result;
  __int128 v11;
  _OWORD v12[9];
  uint64_t v13;

  sub_1A55675E8((uint64_t)v3);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5567134(v3, a1, a2, (uint64_t)v12);
  sub_1A55676F0((uint64_t)v3);
  v7 = v12[7];
  *(_OWORD *)(a3 + 96) = v12[6];
  *(_OWORD *)(a3 + 112) = v7;
  *(_OWORD *)(a3 + 128) = v12[8];
  *(_QWORD *)(a3 + 144) = v13;
  v8 = v12[3];
  *(_OWORD *)(a3 + 32) = v12[2];
  *(_OWORD *)(a3 + 48) = v8;
  v9 = v12[5];
  *(_OWORD *)(a3 + 64) = v12[4];
  *(_OWORD *)(a3 + 80) = v9;
  result = *(double *)v12;
  v11 = v12[1];
  *(_OWORD *)a3 = v12[0];
  *(_OWORD *)(a3 + 16) = v11;
  return result;
}

unint64_t StateWithTasks.localDeselectedMailboxesCaptureValue()@<X0>(uint64_t *a1@<X8>)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  _BYTE v5[32];
  _OWORD v6[3];
  _OWORD v7[2];

  *(_OWORD *)v5 = v1[12];
  *(_OWORD *)&v5[16] = v1[13];
  v3 = v1[9];
  v4 = v1[10];
  v6[2] = v1[11];
  v7[0] = *(_OWORD *)v5;
  *(_OWORD *)((char *)v7 + 12) = *(_OWORD *)&v5[12];
  v6[0] = v3;
  v6[1] = v4;
  return sub_1A556078C((uint64_t)v6, a1);
}

unint64_t sub_1A556078C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 *v7;
  _QWORD *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t result;
  uint64_t v25;
  uint64_t v26;
  _BYTE __src[376];
  _OWORD v28[6];
  _OWORD v29[5];
  char v30[8];
  uint64_t v31[3];

  v3 = *(_QWORD *)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    v6 = *(_QWORD *)(v3 + 16);
    if (v6)
    {
      v7 = (__int128 *)(v3 + 32);
      v25 = *(_QWORD *)(a1 + 16);
      v26 = *(_QWORD *)(a1 + 8);
      sub_1A55212D0(*(_QWORD *)a1, v4, v5, 1);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      do
      {
        v9 = *v7;
        v10 = v7[2];
        v28[1] = v7[1];
        v28[2] = v10;
        v28[0] = v9;
        v11 = v7[3];
        v12 = v7[4];
        v13 = v7[6];
        v28[5] = v7[5];
        v29[0] = v13;
        v28[3] = v11;
        v28[4] = v12;
        v14 = v7[7];
        v15 = v7[8];
        v16 = v7[10];
        v29[3] = v7[9];
        v29[4] = v16;
        v29[1] = v14;
        v29[2] = v15;
        sub_1A55032A0((uint64_t)v29, (uint64_t)v30, &qword_1EE797CB0);
        sub_1A55032A0((uint64_t)v30, (uint64_t)v31, &qword_1EE797CB0);
        if (!v31[0])
        {
          sub_1A54E3150((uint64_t)v28);
          sub_1A5568F6C(v28, __src);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v8 = sub_1A54F0F84(0, v8[2] + 1, 1, v8);
          v18 = v8[2];
          v17 = v8[3];
          if (v18 >= v17 >> 1)
            v8 = sub_1A54F0F84((_QWORD *)(v17 > 1), v18 + 1, 1, v8);
          v8[2] = v18 + 1;
          memcpy(&v8[47 * v18 + 4], __src, 0x178uLL);
        }
        v7 += 11;
        --v6;
      }
      while (v6);
      sub_1A54E8FCC(v3, v26, v25, 1);
      sub_1A54E8FCC(v3, v26, v25, 1);
    }
    else
    {
      v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    a2[3] = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799610);
    result = sub_1A556EF2C(&qword_1EE799618, &qword_1EE799610, (uint64_t (*)(void))sub_1A55696F4);
    a2[4] = result;
    *a2 = (uint64_t)v8;
  }
  else
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v19 = sub_1A55677F8(v3, v4, v5);
    v21 = v20;
    v23 = v22;
    a2[3] = (uint64_t)&_s13CapturedStateV16UnknownMailboxesVN;
    result = sub_1A556C604();
    a2[4] = result;
    *a2 = v19;
    a2[1] = v21;
    a2[2] = v23;
  }
  return result;
}

void StateWithTasks.localSelectedMailboxesCaptureValue()(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  __int128 *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _BYTE __src[376];
  _OWORD v20[6];
  _OWORD v21[5];
  _BYTE v22[8];
  _QWORD v23[3];

  if ((*(_BYTE *)(v1 + 168) & 1) != 0)
  {
    v3 = *(_QWORD *)(v1 + 144);
    v4 = *(_QWORD *)(v3 + 16);
    if (v4)
    {
      v18 = a1;
      v16 = *(_QWORD *)(v1 + 160);
      v17 = *(_QWORD *)(v1 + 152);
      v5 = (__int128 *)(v3 + 32);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v2 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      do
      {
        v6 = *v5;
        v7 = v5[2];
        v20[1] = v5[1];
        v20[2] = v7;
        v20[0] = v6;
        v8 = v5[3];
        v9 = v5[4];
        v10 = v5[6];
        v20[5] = v5[5];
        v21[0] = v10;
        v20[3] = v8;
        v20[4] = v9;
        v11 = v5[7];
        v12 = v5[8];
        v13 = v5[10];
        v21[3] = v5[9];
        v21[4] = v13;
        v21[1] = v11;
        v21[2] = v12;
        sub_1A55032A0((uint64_t)v21, (uint64_t)v22, &qword_1EE797CB0);
        sub_1A55032A0((uint64_t)v22, (uint64_t)v23, &qword_1EE797CB0);
        if (v23[0])
        {
          sub_1A54E3150((uint64_t)v20);
          sub_1A5568F6C(v20, __src);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v2 = sub_1A54F0F84(0, v2[2] + 1, 1, v2);
          v15 = v2[2];
          v14 = v2[3];
          if (v15 >= v14 >> 1)
            v2 = sub_1A54F0F84((_QWORD *)(v14 > 1), v15 + 1, 1, v2);
          v2[2] = v15 + 1;
          memcpy(&v2[47 * v15 + 4], __src, 0x178uLL);
        }
        v5 += 11;
        --v4;
      }
      while (v4);
      sub_1A54E8FCC(v3, v17, v16, 1);
      a1 = v18;
    }
    else
    {
      v2 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    v2 = 0;
  }
  *a1 = v2;
}

uint64_t StateWithTasks.remoteMailboxesCaptureValue()@<X0>(uint64_t a1@<X8>)
{
  _OWORD *v1;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  int v15;
  int v16;
  int v17;
  int v18;
  char v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _OWORD v25[2];
  __int128 v26;
  __int128 v27;
  __int128 v28;

  v24 = v1[8];
  v20 = v1[4];
  v21 = v1[5];
  v22 = v1[6];
  v23 = v1[7];
  v25[0] = v20;
  v25[1] = v21;
  v26 = v22;
  v27 = v23;
  v28 = v24;
  if (v20 == 2)
  {
    v3 = 3;
    if ((_QWORD)v26)
      goto LABEL_3;
LABEL_18:
    sub_1A55695F0((uint64_t)v25);
    v5 = 0;
    v6 = *((_QWORD *)&v27 + 1);
    if (*((_QWORD *)&v27 + 1))
      goto LABEL_4;
LABEL_19:
    result = sub_1A5569638((uint64_t)v25);
    v11 = 0;
    v13 = 0;
    v8 = 0;
    v7 = 0;
    goto LABEL_20;
  }
  if ((v20 & 0x1000000) != 0)
    v15 = 0x1000000;
  else
    v15 = 0x2000000;
  if ((v20 & 0x10000) != 0)
    v16 = 0x20000;
  else
    v16 = 0x10000;
  if ((v20 & 0x100) != 0)
    v17 = 512;
  else
    v17 = 256;
  if ((v20 & 1) != 0)
    v18 = 2;
  else
    v18 = 1;
  v3 = v17 | v18 | v16 | v15;
  if (!(_QWORD)v26)
    goto LABEL_18;
LABEL_3:
  sub_1A55695F0((uint64_t)v25);
  v4 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v5 = sub_1A556625C(v4, (uint64_t)v25);
  swift_bridgeObjectRelease();
  v6 = *((_QWORD *)&v27 + 1);
  if (!*((_QWORD *)&v27 + 1))
    goto LABEL_19;
LABEL_4:
  v7 = *((_QWORD *)&v28 + 1);
  v8 = v28;
  sub_1A552CF80(v6);
  sub_1A552CF80(v6);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v9 = MailboxName.init(_:)(v6);
  v11 = sub_1A5561220(v9, v10);
  v13 = v12;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A5569638((uint64_t)v25);
  sub_1A55419EC(v6);
  result = swift_bridgeObjectRelease();
LABEL_20:
  v19 = BYTE1(v27);
  *(_DWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v19;
  *(_QWORD *)(a1 + 24) = v11;
  *(_QWORD *)(a1 + 32) = v13;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v7;
  return result;
}

uint64_t sub_1A5560D8C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A5560DC0 + 4 * byte_1A59A5C20[a1]))(0x656D614E676F6CLL, 0xE700000000000000);
}

uint64_t sub_1A5560DC0()
{
  return 0x4449656E69676E65;
}

uint64_t sub_1A5560DD8()
{
  return 0x6D6E6F7269766E65;
}

unint64_t sub_1A5560DF8()
{
  return 0xD000000000000018;
}

uint64_t sub_1A5560E58()
{
  return 0x736B736174;
}

uint64_t sub_1A5560E6C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  uint64_t v12;
  char v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AC30);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A556B52C();
  sub_1A594CF3C();
  LOBYTE(v14) = 0;
  sub_1A594CC18();
  if (!v2)
  {
    LOBYTE(v14) = 1;
    sub_1A594CC18();
    v9 = *(_OWORD *)(v3 + 80);
    v16 = *(_OWORD *)(v3 + 64);
    v17 = v9;
    v18 = *(_QWORD *)(v3 + 96);
    v10 = *(_OWORD *)(v3 + 48);
    v14 = *(_OWORD *)(v3 + 32);
    v15 = v10;
    v13 = 2;
    sub_1A556B570();
    sub_1A594CC3C();
    LOBYTE(v14) = *(_BYTE *)(v3 + 104);
    v13 = 3;
    sub_1A556B5B4();
    sub_1A594CC3C();
    *(_QWORD *)&v14 = *(_QWORD *)(v3 + 112);
    v13 = 4;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7995B0);
    sub_1A556EF2C(&qword_1EE7995B8, &qword_1EE7995B0, (uint64_t (*)(void))sub_1A556B5F8);
    sub_1A594CC3C();
    v14 = *(_OWORD *)(v3 + 120);
    v13 = 5;
    sub_1A556B63C();
    sub_1A594CC3C();
    *(_QWORD *)&v14 = *(_QWORD *)(v3 + 136);
    v13 = 6;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7992B8);
    sub_1A556B680();
    sub_1A594CC3C();
    *(_QWORD *)&v14 = *(_QWORD *)(v3 + 144);
    v13 = 7;
    sub_1A556B6E4();
    sub_1A594CC3C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1A5561140()
{
  unsigned __int8 *v0;

  return sub_1A5560D8C(*v0);
}

uint64_t sub_1A5561148@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A556EAA8(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A556116C(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_1A5561178()
{
  sub_1A556B52C();
  return sub_1A594CFB4();
}

uint64_t sub_1A55611A0()
{
  sub_1A556B52C();
  return sub_1A594CFC0();
}

uint64_t sub_1A55611C8(_QWORD *a1)
{
  return sub_1A5560E6C(a1);
}

uint64_t sub_1A5561220(uint64_t a1, unsigned int a2)
{
  uint64_t v4;
  uint64_t *v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;

  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v4 = sub_1A594B490();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v5 = MailboxName.inbox.unsafeMutableAddressor();
  if ((a2 | ((unint64_t)a2 << 32)) == (*((unsigned int *)v5 + 2) | ((unint64_t)*((unsigned int *)v5 + 2) << 32)))
  {
    v6 = sub_1A54FF30C(a1, *v5);
    swift_bridgeObjectRelease();
    if (v6)
      goto LABEL_7;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (sub_1A594B5A4() <= 2)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    return v4;
  }
  sub_1A594B5D4();
  sub_1A594C720();
  v7 = sub_1A594B718();
  v8 = MEMORY[0x1A85AD950](v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  sub_1A594B5A4();
  swift_bridgeObjectRelease();
  sub_1A594CC9C();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1A55613D0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AC50);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A5570F64();
  sub_1A594CF3C();
  v8[15] = 0;
  sub_1A594CC18();
  if (!v1)
  {
    v8[14] = 1;
    sub_1A594CC18();
    v8[13] = 2;
    sub_1A594CC18();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1A556150C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v7 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AC48);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A556EE60();
  sub_1A594CF3C();
  v14 = a2;
  v13 = 0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799A38);
  sub_1A556B9D0((unint64_t *)&qword_1EE799A70, &qword_1EE799A38, MEMORY[0x1E0DEA970]);
  sub_1A594CC3C();
  if (!v3)
  {
    v14 = a3;
    v13 = 1;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7995D8);
    sub_1A556EF2C(&qword_1EE7995E0, &qword_1EE7995D8, (uint64_t (*)(void))sub_1A556EEA4);
    sub_1A594CC3C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1A556169C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x786F626C69616DLL;
  if (*v0 != 1)
    v1 = 0x6567617375;
  if (*v0)
    return v1;
  else
    return 0x697463656E6E6F63;
}

uint64_t sub_1A55616F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A556EFD4(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A556171C(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1A5561728()
{
  sub_1A5570F64();
  return sub_1A594CFB4();
}

uint64_t sub_1A5561750()
{
  sub_1A5570F64();
  return sub_1A594CFC0();
}

uint64_t sub_1A5561778(_QWORD *a1)
{
  return sub_1A55613D0(a1);
}

uint64_t sub_1A55617B0()
{
  _BYTE *v0;

  if (*v0)
    return 0x6567617375;
  else
    return 0x65786F626C69616DLL;
}

uint64_t sub_1A55617EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A556F12C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A5561810()
{
  sub_1A556EE60();
  return sub_1A594CFB4();
}

uint64_t sub_1A5561838()
{
  sub_1A556EE60();
  return sub_1A594CFC0();
}

uint64_t sub_1A5561860(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1A556150C(a1, *v1, v1[1]);
}

uint64_t sub_1A5561878()
{
  return 0x69617274736E6F63;
}

uint64_t sub_1A5561898@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x69617274736E6F63 && a2 == 0xEB0000000064656ELL)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1A594CD38();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A5561944()
{
  sub_1A556EDD8();
  return sub_1A594CFB4();
}

uint64_t sub_1A556196C()
{
  sub_1A556EDD8();
  return sub_1A594CFC0();
}

uint64_t sub_1A5561994(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AC38);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A556EDD8();
  sub_1A594CF3C();
  sub_1A594CBDC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1A5561A7C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];
  char v12;
  char v13;

  v11[1] = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AC10);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A556EE1C();
  sub_1A594CF3C();
  v13 = 0;
  sub_1A594CC60();
  if (!v4)
  {
    v12 = 1;
    sub_1A594CC18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1A5561BA4()
{
  _BYTE *v0;

  if (*v0)
    return 1684957547;
  else
    return 25705;
}

uint64_t sub_1A5561BCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A556F220(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A5561BF0()
{
  sub_1A556EE1C();
  return sub_1A594CFB4();
}

uint64_t sub_1A5561C18()
{
  sub_1A556EE1C();
  return sub_1A594CFC0();
}

uint64_t sub_1A5561C40(_QWORD *a1)
{
  unsigned int *v1;

  return sub_1A5561A7C(a1, *v1, *((_QWORD *)v1 + 1), *((_QWORD *)v1 + 2));
}

uint64_t sub_1A5561C5C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A5561C98 + 4 * byte_1A59A5C28[a1]))(0x7374726F70707573, 0xEC00000065766F4DLL);
}

unint64_t sub_1A5561C98()
{
  return 0xD000000000000013;
}

uint64_t sub_1A5561CF0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AC20);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A5570C80();
  sub_1A594CF3C();
  v8[15] = 0;
  sub_1A594CBDC();
  if (!v1)
  {
    v8[14] = 1;
    sub_1A594CBDC();
    v8[13] = 2;
    sub_1A594CBDC();
    v8[12] = 3;
    sub_1A594CBDC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1A5561E54()
{
  unsigned __int8 *v0;

  return sub_1A5561C5C(*v0);
}

uint64_t sub_1A5561E5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A556F2E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A5561E80()
{
  sub_1A5570C80();
  return sub_1A594CFB4();
}

uint64_t sub_1A5561EA8()
{
  sub_1A5570C80();
  return sub_1A594CFC0();
}

uint64_t sub_1A5561ED0(_QWORD *a1)
{
  return sub_1A5561CF0(a1);
}

uint64_t sub_1A5561EE8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AC28);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A5570CC4();
  sub_1A594CF3C();
  v8[15] = 0;
  sub_1A594CC18();
  if (!v1)
  {
    v8[14] = 1;
    sub_1A594CBD0();
    v8[13] = 2;
    sub_1A594CBD0();
    v8[12] = 3;
    sub_1A594CBD0();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1A556204C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A5562074 + 4 * byte_1A59A5C2C[*v0]))(1701667182, 0xE400000000000000);
}

uint64_t sub_1A5562074()
{
  return 0x6170655368746170;
}

uint64_t sub_1A5562098()
{
  return 0x7475626972747461;
}

uint64_t sub_1A55620B8()
{
  return 0x556C616963657073;
}

uint64_t sub_1A55620D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A556F49C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A55620F8()
{
  sub_1A5570CC4();
  return sub_1A594CFB4();
}

uint64_t sub_1A5562120()
{
  sub_1A5570CC4();
  return sub_1A594CFC0();
}

uint64_t sub_1A5562148(_QWORD *a1)
{
  return sub_1A5561EE8(a1);
}

uint64_t sub_1A5562180(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v11[39];
  char v12;
  _BYTE v13[32];
  _BYTE v14[12];
  _BYTE v15[4];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AC18);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A556B838();
  sub_1A594CF3C();
  sub_1A55032A0(v3, (uint64_t)v15, &qword_1EE797510);
  sub_1A55032A0((uint64_t)v15, (uint64_t)v11, &qword_1EE797510);
  v12 = 0;
  sub_1A556B87C();
  sub_1A594CBF4();
  if (!v2)
  {
    sub_1A55032A0(v3 + 8, (uint64_t)v14, &qword_1EE7995D0);
    sub_1A55032A0((uint64_t)v14, (uint64_t)v11, &qword_1EE7995D0);
    v12 = 1;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7995C0);
    sub_1A556EF2C(&qword_1EE7995C8, &qword_1EE7995C0, (uint64_t (*)(void))sub_1A556B8C0);
    sub_1A594CBF4();
    v11[0] = 2;
    sub_1A594CC24();
    sub_1A55032A0(v3 + 24, (uint64_t)v13, &qword_1EE7A0448);
    sub_1A55032A0((uint64_t)v13, (uint64_t)v11, &qword_1EE7A0448);
    v12 = 3;
    sub_1A556B904();
    sub_1A594CBF4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1A55623B0()
{
  _BYTE *v0;

  if (*v0)
    return 0x6F74617261706573;
  else
    return 0x786966657270;
}

uint64_t sub_1A55623EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A556F678(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A5562410()
{
  sub_1A556B948();
  return sub_1A594CFB4();
}

uint64_t sub_1A5562438()
{
  sub_1A556B948();
  return sub_1A594CFC0();
}

uint64_t sub_1A5562460(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1A5564664(a1, *v1, v1[1], v1[2], v1[3], &qword_1EE7A1188, (void (*)(void))sub_1A556B948, (uint64_t)&_s13CapturedStateV14CapturedRemoteV9NamespaceV10CodingKeysON, (void (*)(uint64_t, uint64_t, _BYTE *, uint64_t))MEMORY[0x1E0DED0F0]);
}

uint64_t sub_1A55624A8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A55624D4 + 4 * byte_1A59A5C30[*v0]))(0x726576726573, 0xE600000000000000);
}

uint64_t sub_1A55624D4()
{
  return 0x65786F626C69616DLL;
}

unint64_t sub_1A55624F4()
{
  return 0xD000000000000018;
}

uint64_t sub_1A5562510()
{
  return 0x63617073656D616ELL;
}

uint64_t sub_1A556252C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A556F76C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A5562550()
{
  sub_1A556B838();
  return sub_1A594CFB4();
}

uint64_t sub_1A5562578()
{
  sub_1A556B838();
  return sub_1A594CFC0();
}

uint64_t sub_1A55625A0(_QWORD *a1)
{
  return sub_1A5562180(a1);
}

uint64_t sub_1A55625E0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  char v14;
  uint64_t v15;

  v13 = a3;
  v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AC40);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A5570E18();
  sub_1A594CF3C();
  v15 = a2;
  v14 = 0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799DD0);
  sub_1A556B9D0(&qword_1EE799DD8, &qword_1EE799DD0, MEMORY[0x1E0DEE100]);
  sub_1A594CBF4();
  if (!v4)
  {
    v15 = v13;
    v14 = 1;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7992A8);
    sub_1A5570E5C();
    sub_1A594CBF4();
    v15 = a4;
    v14 = 2;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799298);
    sub_1A5570EE0();
    sub_1A594CBF4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1A55627A8()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x6552686372616573;
  if (*v0 != 1)
    v1 = 0xD000000000000010;
  if (*v0)
    return v1;
  else
    return 0x53676E69646E6570;
}

uint64_t sub_1A556281C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A556F924(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A5562840()
{
  sub_1A5570E18();
  return sub_1A594CFB4();
}

uint64_t sub_1A5562868()
{
  sub_1A5570E18();
  return sub_1A594CFC0();
}

uint64_t sub_1A5562890(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1A55625E0(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_1A55628AC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  char v9;
  _BYTE v11[16];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AC58);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A5570BF8();
  sub_1A594CF3C();
  v9 = *(_BYTE *)(v3 + 4);
  v11[15] = 0;
  v11[12] = v9;
  sub_1A594CC00();
  if (!v2)
  {
    v11[11] = 1;
    sub_1A594CBD0();
    v11[10] = 2;
    sub_1A594CC0C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1A55629FC()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x5764656863746566;
  if (*v0 != 1)
    v1 = 0x4D74736568676968;
  if (*v0)
    return v1;
  else
    return 0x64696C6156646975;
}

uint64_t sub_1A5562A78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A556FAB0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A5562A9C()
{
  sub_1A5570BF8();
  return sub_1A594CFB4();
}

uint64_t sub_1A5562AC4()
{
  sub_1A5570BF8();
  return sub_1A594CFC0();
}

uint64_t sub_1A5562AEC(_QWORD *a1)
{
  return sub_1A55628AC(a1);
}

uint64_t sub_1A5562B24(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  __int128 v11;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AC80);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A5570C3C();
  sub_1A594CF3C();
  LOBYTE(v11) = 0;
  sub_1A594CC60();
  if (!v2)
  {
    v11 = *(_OWORD *)(v3 + 8);
    v10[15] = 1;
    sub_1A556BA24();
    sub_1A594CC3C();
    LOBYTE(v11) = 2;
    sub_1A594CC18();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1A5562C78()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6567617373656DLL;
  if (*v0 != 1)
    v1 = 1684957547;
  if (*v0)
    return v1;
  else
    return 25705;
}

uint64_t sub_1A5562CC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A556FC64(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A5562CE4()
{
  sub_1A5570C3C();
  return sub_1A594CFB4();
}

uint64_t sub_1A5562D0C()
{
  sub_1A5570C3C();
  return sub_1A594CFC0();
}

uint64_t sub_1A5562D34(_QWORD *a1)
{
  return sub_1A5562B24(a1);
}

uint64_t sub_1A5562D6C(_QWORD *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD v14[2];
  uint64_t v15;
  uint64_t v16;
  int v17;
  char v18;

  v14[1] = a5;
  v17 = a4;
  v9 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AC68);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A5570D90();
  sub_1A594CF3C();
  v15 = a2;
  v16 = a3;
  v18 = 0;
  sub_1A556BA24();
  sub_1A594CC3C();
  if (!v5)
  {
    LOBYTE(v15) = 1;
    sub_1A594CC60();
    LOBYTE(v15) = 2;
    sub_1A594CC30();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1A5562ED4()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 6580597;
  if (*v0 != 1)
    v1 = 1702521203;
  if (*v0)
    return v1;
  else
    return 25705;
}

uint64_t sub_1A5562F14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A556FD90(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A5562F38()
{
  sub_1A5570D90();
  return sub_1A594CFB4();
}

uint64_t sub_1A5562F60()
{
  sub_1A5570D90();
  return sub_1A594CFC0();
}

uint64_t sub_1A5562F88(_QWORD *a1)
{
  uint64_t v1;

  return sub_1A5562D6C(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_DWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1A5562FA8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A5562FDC + 4 * byte_1A59A5C34[a1]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1A5562FDC()
{
  return 0x676E697373696DLL;
}

uint64_t sub_1A5562FF0()
{
  return 1701736292;
}

unint64_t sub_1A5563000()
{
  return 0xD000000000000010;
}

uint64_t sub_1A5563048()
{
  return 0x6574656C706D6F63;
}

uint64_t sub_1A5563064(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  char v9;
  char v10;
  _BYTE v12[16];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AC70);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A5570DD4();
  sub_1A594CF3C();
  v12[15] = 0;
  sub_1A594CBDC();
  if (!v2)
  {
    v12[14] = 1;
    sub_1A594CBD0();
    v12[13] = 2;
    sub_1A594CBD0();
    v9 = *(_BYTE *)(v3 + 44);
    v12[12] = 3;
    v12[8] = v9;
    sub_1A594CC00();
    v12[7] = 4;
    sub_1A594CBD0();
    v10 = *(_BYTE *)(v3 + 68);
    v12[6] = 5;
    v12[4] = v10;
    sub_1A594CC00();
    v12[3] = 6;
    sub_1A594CBDC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1A5563260(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A556329C + 4 * byte_1A59A5C3B[a1]))(0x436567617373656DLL, 0xEC000000746E756FLL);
}

uint64_t sub_1A556329C()
{
  return 0x4449557478656ELL;
}

uint64_t sub_1A55632B4()
{
  return 0x64696C6156646975;
}

uint64_t sub_1A55632D4()
{
  return 0x4D74736568676968;
}

uint64_t sub_1A55632F8()
{
  return 0x70657453636E7973;
}

unint64_t sub_1A5563314()
{
  return 0xD000000000000011;
}

unint64_t sub_1A556334C()
{
  return 0xD000000000000019;
}

uint64_t sub_1A5563374()
{
  return 0x4D676E697373696DLL;
}

uint64_t sub_1A5563398(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  char v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[32];
  uint64_t v20;
  char v21;
  __int128 v22[3];
  _BYTE v23[8];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AC60);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A556B98C();
  sub_1A594CF3C();
  LOBYTE(v16) = 0;
  sub_1A594CC30();
  if (!v2)
  {
    v9 = *(_BYTE *)(v3 + 12);
    LOBYTE(v16) = 1;
    v21 = v9;
    sub_1A594CC00();
    v10 = *(_BYTE *)(v3 + 20);
    LOBYTE(v16) = 2;
    v21 = v10;
    sub_1A594CC00();
    LOBYTE(v16) = 3;
    sub_1A594CC0C();
    *(_QWORD *)&v16 = *(_QWORD *)(v3 + 40);
    v21 = 4;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799A38);
    sub_1A556B9D0((unint64_t *)&qword_1EE799A70, &qword_1EE799A38, MEMORY[0x1E0DEA970]);
    sub_1A594CC3C();
    sub_1A55032A0(v3 + 48, (uint64_t)v23, (uint64_t *)&unk_1EE795EF8);
    sub_1A55032A0((uint64_t)v23, (uint64_t)&v16, (uint64_t *)&unk_1EE795EF8);
    v21 = 5;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799428);
    sub_1A556EF2C(&qword_1EE799430, &qword_1EE799428, (uint64_t (*)(void))sub_1A556BA24);
    sub_1A594CBF4();
    sub_1A5539F08((__int128 *)(v3 + 56), (uint64_t)v22);
    sub_1A5539F08(v22, (uint64_t)&v16);
    v21 = 6;
    sub_1A556BA68();
    sub_1A594CC3C();
    v11 = *(_OWORD *)(v3 + 160);
    v18 = *(_OWORD *)(v3 + 144);
    *(_OWORD *)v19 = v11;
    *(_OWORD *)&v19[16] = *(_OWORD *)(v3 + 176);
    v20 = *(_QWORD *)(v3 + 192);
    v12 = *(_OWORD *)(v3 + 128);
    v16 = *(_OWORD *)(v3 + 112);
    v17 = v12;
    v21 = 7;
    sub_1A556BAAC();
    sub_1A594CC3C();
    *(_QWORD *)&v16 = *(_QWORD *)(v3 + 200);
    v21 = 8;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7995E8);
    sub_1A556EF2C(&qword_1EE7995F0, &qword_1EE7995E8, (uint64_t (*)(void))sub_1A556BAF0);
    sub_1A594CC3C();
    v13 = *(_OWORD *)(v3 + 256);
    v18 = *(_OWORD *)(v3 + 240);
    *(_OWORD *)v19 = v13;
    *(_QWORD *)&v19[14] = *(_QWORD *)(v3 + 270);
    v14 = *(_OWORD *)(v3 + 224);
    v16 = *(_OWORD *)(v3 + 208);
    v17 = v14;
    v21 = 9;
    sub_1A556BB34();
    sub_1A594CC3C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1A5563768()
{
  unsigned __int8 *v0;

  return sub_1A5562FA8(*v0);
}

uint64_t sub_1A5563770@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A556FEAC(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A5563794(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_1A55637A0()
{
  sub_1A5570DD4();
  return sub_1A594CFB4();
}

uint64_t sub_1A55637C8()
{
  sub_1A5570DD4();
  return sub_1A594CFC0();
}

uint64_t sub_1A55637F0(_QWORD *a1)
{
  return sub_1A5563064(a1);
}

uint64_t sub_1A5563830()
{
  unsigned __int8 *v0;

  return sub_1A5563260(*v0);
}

uint64_t sub_1A5563838@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A5570194(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A556385C(_BYTE *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_1A5563868()
{
  sub_1A556B98C();
  return sub_1A594CFB4();
}

uint64_t sub_1A5563890()
{
  sub_1A556B98C();
  return sub_1A594CFC0();
}

uint64_t sub_1A55638B8(_QWORD *a1)
{
  const void *v1;
  _BYTE __dst[278];

  memcpy(__dst, v1, sizeof(__dst));
  return sub_1A5563398(a1);
}

uint64_t sub_1A5563908(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD v12[2];
  char v13;
  char v14;

  v12[0] = a4;
  v12[1] = a5;
  v7 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AC88);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A556BB78();
  sub_1A594CF3C();
  v14 = 0;
  sub_1A594CBD0();
  if (!v5)
  {
    v13 = 1;
    sub_1A594CBD0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1A5563A30(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1A5563A6C + 4 * byte_1A59A5C45[a1]))(0xD000000000000015, 0x80000001A5A0E710);
}

uint64_t sub_1A5563A6C()
{
  uint64_t v0;

  return v0 - 6;
}

uint64_t sub_1A5563ACC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  char v11;
  _BYTE v12[32];
  _BYTE v13[32];
  _BYTE v14[32];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AC90);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A5570D08();
  sub_1A594CF3C();
  v12[0] = 0;
  sub_1A594CC24();
  if (!v2)
  {
    v12[0] = 1;
    sub_1A594CC24();
    v12[0] = 2;
    sub_1A594CC24();
    sub_1A55032A0(v3 + 8, (uint64_t)v14, &qword_1EE7976B8);
    sub_1A55032A0((uint64_t)v14, (uint64_t)v12, &qword_1EE7976B8);
    v11 = 3;
    sub_1A5570D4C();
    sub_1A594CBF4();
    sub_1A55032A0(v3 + 40, (uint64_t)v13, &qword_1EE7976B8);
    sub_1A55032A0((uint64_t)v13, (uint64_t)v12, &qword_1EE7976B8);
    v11 = 4;
    sub_1A594CBF4();
    v12[0] = 5;
    sub_1A594CBD0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1A5563CF0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A5563D1C + 4 * byte_1A59A5C4B[a1]))(1701667182, 0xE400000000000000);
}

unint64_t sub_1A5563D1C()
{
  return 0xD000000000000011;
}

unint64_t sub_1A5563D38()
{
  return 0xD000000000000012;
}

uint64_t sub_1A5563DC4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  _OWORD v11[2];
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[288];
  _BYTE v17[8];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AC78);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A556B728();
  sub_1A594CF3C();
  LOBYTE(v11[0]) = 0;
  sub_1A594CC18();
  if (!v2)
  {
    v9 = *(_OWORD *)(v3 + 32);
    v11[0] = *(_OWORD *)(v3 + 16);
    v11[1] = v9;
    v12 = *(_BYTE *)(v3 + 48);
    v13 = 1;
    sub_1A556B76C();
    sub_1A594CC3C();
    LOBYTE(v11[0]) = 2;
    sub_1A594CBD0();
    sub_1A55032A0(v3 + 72, (uint64_t)v16, &qword_1EE797658);
    sub_1A55032A0((uint64_t)v16, (uint64_t)v11, &qword_1EE797658);
    v13 = 3;
    sub_1A556B7B0();
    sub_1A594CBF4();
    sub_1A55032A0(v3 + 352, (uint64_t)v17, &qword_1EE799DE0);
    sub_1A55032A0((uint64_t)v17, (uint64_t)v11, &qword_1EE799DE0);
    v13 = 4;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799DD0);
    sub_1A556B9D0(&qword_1EE799DD8, &qword_1EE799DD0, MEMORY[0x1E0DEE100]);
    sub_1A594CBF4();
    sub_1A55032A0(v3 + 360, (uint64_t)&v15, &qword_1EE799DE0);
    sub_1A55032A0((uint64_t)&v15, (uint64_t)v11, &qword_1EE799DE0);
    v13 = 5;
    sub_1A594CBF4();
    sub_1A55032A0(v3 + 368, (uint64_t)&v14, &qword_1EE799608);
    sub_1A55032A0((uint64_t)&v14, (uint64_t)v11, &qword_1EE799608);
    v13 = 6;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7995F8);
    sub_1A556EF2C(&qword_1EE799600, &qword_1EE7995F8, (uint64_t (*)(void))sub_1A556B7F4);
    sub_1A594CBF4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1A55640F0()
{
  _BYTE *v0;

  if (*v0)
    return 1701736292;
  else
    return 0x676E69646E6570;
}

uint64_t sub_1A5564124@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A5570600(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A5564148()
{
  sub_1A556BB78();
  return sub_1A594CFB4();
}

uint64_t sub_1A5564170()
{
  sub_1A556BB78();
  return sub_1A594CFC0();
}

uint64_t sub_1A5564198(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1A5563908(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1A55641B4()
{
  unsigned __int8 *v0;

  return sub_1A5563A30(*v0);
}

uint64_t sub_1A55641BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A55706E0(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A55641E0(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1A55641EC()
{
  sub_1A5570D08();
  return sub_1A594CFB4();
}

uint64_t sub_1A5564214()
{
  sub_1A5570D08();
  return sub_1A594CFC0();
}

uint64_t sub_1A556423C(_QWORD *a1)
{
  return sub_1A5563ACC(a1);
}

uint64_t sub_1A5564284()
{
  unsigned __int8 *v0;

  return sub_1A5563CF0(*v0);
}

uint64_t sub_1A556428C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A5570924(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A55642B0()
{
  sub_1A556B728();
  return sub_1A594CFB4();
}

uint64_t sub_1A55642D8()
{
  sub_1A556B728();
  return sub_1A594CFC0();
}

uint64_t sub_1A5564300(_QWORD *a1)
{
  const void *v1;
  _BYTE __dst[376];

  memcpy(__dst, v1, sizeof(__dst));
  return sub_1A5563DC4(a1);
}

uint64_t sub_1A5564350(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;

  v14 = a3;
  v15 = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79ACC8);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A5572988();
  sub_1A594CF3C();
  v17 = a2;
  v16 = 0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799A38);
  sub_1A556B9D0((unint64_t *)&qword_1EE799A70, &qword_1EE799A38, MEMORY[0x1E0DEA970]);
  sub_1A594CBF4();
  if (!v5)
  {
    v17 = v14;
    v16 = 1;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799DD0);
    sub_1A556B9D0(&qword_1EE799DD8, &qword_1EE799DD0, MEMORY[0x1E0DEE100]);
    sub_1A594CBF4();
    LOBYTE(v17) = 2;
    sub_1A594CC30();
    LOBYTE(v17) = 3;
    sub_1A594CC30();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1A5564538()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A5564574 + 4 * byte_1A59A5C52[*v0]))(0x43676E696E6E7572, 0xEF73646E616D6D6FLL);
}

uint64_t sub_1A5564574()
{
  return 0x41676E696E6E7572;
}

unint64_t sub_1A5564598()
{
  return 0xD000000000000015;
}

unint64_t sub_1A55645B8()
{
  return 0xD000000000000014;
}

uint64_t sub_1A55645D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A557241C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A55645F8()
{
  sub_1A5572988();
  return sub_1A594CFB4();
}

uint64_t sub_1A5564620()
{
  sub_1A5572988();
  return sub_1A594CFC0();
}

uint64_t sub_1A5564648(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1A5564350(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1A5564664(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, void (*a7)(void), uint64_t a8, void (*a9)(uint64_t, uint64_t, _BYTE *, uint64_t))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[2];

  v19 = a3;
  v17 = a4;
  v18 = a5;
  v11 = __swift_instantiateConcreteTypeFromMangledName_0(a6);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  a7();
  sub_1A594CF3C();
  v21[1] = 0;
  v15 = v20;
  sub_1A594CC18();
  if (!v15)
  {
    v21[0] = 1;
    a9(v17, v18, v21, v11);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_1A556478C(_QWORD *a1)
{
  _OWORD *v1;
  uint64_t v2;
  _OWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  uint64_t v11;
  char v12;
  _OWORD v13[2];
  _BYTE v14[32];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79ACC0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A5570FA8();
  sub_1A594CF3C();
  v9 = v3[1];
  v13[0] = *v3;
  v13[1] = v9;
  v12 = 0;
  sub_1A5570FEC();
  sub_1A594CC3C();
  if (!v2)
  {
    LOBYTE(v13[0]) = 1;
    sub_1A594CC18();
    LOBYTE(v13[0]) = 2;
    sub_1A594CBDC();
    sub_1A55032A0((uint64_t)v3 + 56, (uint64_t)v14, &qword_1EE797BE0);
    sub_1A55032A0((uint64_t)v14, (uint64_t)v13, &qword_1EE797BE0);
    v12 = 3;
    sub_1A5571030();
    sub_1A594CBF4();
    LOBYTE(v13[0]) = 4;
    sub_1A594CBDC();
    LOBYTE(v13[0]) = 5;
    sub_1A594CBDC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1A5564990(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79ACD0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A556EEE8();
  sub_1A594CF3C();
  v9[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799640);
  sub_1A556EF2C(&qword_1EE799648, &qword_1EE799640, (uint64_t (*)(void))sub_1A556EF90);
  sub_1A594CC3C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1A5564AAC()
{
  _BYTE *v0;

  if (*v0)
    return 0x697463656E6E6F63;
  else
    return 0x786F626C69616DLL;
}

uint64_t sub_1A5564AEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A5572610(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A5564B10()
{
  sub_1A5571074();
  return sub_1A594CFB4();
}

uint64_t sub_1A5564B38()
{
  sub_1A5571074();
  return sub_1A594CFC0();
}

uint64_t sub_1A5564B60(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1A5564664(a1, *v1, v1[1], v1[2], v1[3], &qword_1EE79ACB8, (void (*)(void))sub_1A5571074, (uint64_t)&type metadata for RunningTasksCapturedValue.CapturedTask.MailboxTask.CodingKeys, (void (*)(uint64_t, uint64_t, _BYTE *, uint64_t))MEMORY[0x1E0DED090]);
}

uint64_t sub_1A5564BA8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A5564BD8 + 4 * byte_1A59A5C56[*v0]))(0x79726F74736968, 0xE700000000000000);
}

uint64_t sub_1A5564BD8()
{
  return 25705;
}

unint64_t sub_1A5564BE4()
{
  return 0xD000000000000011;
}

uint64_t sub_1A5564C00()
{
  return 0x54786F626C69616DLL;
}

uint64_t sub_1A5564C20()
{
  return 0x6574656C706D6F63;
}

uint64_t sub_1A5564C3C()
{
  return 0x64656C696166;
}

uint64_t sub_1A5564C50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A557270C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A5564C74()
{
  sub_1A5570FA8();
  return sub_1A594CFB4();
}

uint64_t sub_1A5564C9C()
{
  sub_1A5570FA8();
  return sub_1A594CFC0();
}

uint64_t sub_1A5564CC4(_QWORD *a1)
{
  return sub_1A556478C(a1);
}

uint64_t sub_1A5564D0C()
{
  return 0x736B736174;
}

uint64_t sub_1A5564D20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x736B736174 && a2 == 0xE500000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1A594CD38();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A5564DAC()
{
  sub_1A556EEE8();
  return sub_1A594CFB4();
}

uint64_t sub_1A5564DD4()
{
  sub_1A556EEE8();
  return sub_1A594CFC0();
}

uint64_t sub_1A5564DFC(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1A5564990(a1, *v1);
}

uint64_t sub_1A5564E14(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A555C1BC(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1A5564E7C(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1A5564E7C(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  unsigned int *v22;
  unsigned int v23;
  uint64_t v24;
  unsigned int *v25;
  unsigned int v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  char v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t i;
  unsigned int v81;
  uint64_t v82;
  unsigned int v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  unint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *__dst;

  v2 = a1;
  v3 = a1[1];
  result = sub_1A594CC78();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v78 = 0;
      v79 = *v2;
      for (i = 1; i != v3; ++i)
      {
        v81 = *(_DWORD *)(v79 + 4 * i);
        v82 = v78;
        do
        {
          v83 = *(_DWORD *)(v79 + v82);
          if (v81 >= v83)
            break;
          if (!v79)
            goto LABEL_141;
          *(_DWORD *)(v79 + v82 + 4) = v83;
          *(_DWORD *)(v79 + v82) = v81;
          v82 -= 4;
        }
        while (v82 != -4);
        v78 += 4;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_146;
  v95 = result;
  v96 = v3;
  if (v3 < 2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v11 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_103:
      v94 = v8;
      if (v12 >= 2)
      {
        v84 = *v2;
        do
        {
          v85 = v12 - 2;
          if (v12 < 2)
            goto LABEL_132;
          if (!v84)
            goto LABEL_145;
          v86 = v11;
          v87 = v11 + 32;
          v88 = *(_QWORD *)&v11[16 * v85 + 32];
          v89 = *(_QWORD *)&v11[16 * v12 + 24];
          sub_1A5565504((char *)(v84 + 4 * v88), (char *)(v84 + 4 * *(_QWORD *)&v87[16 * v12 - 16]), v84 + 4 * v89, __dst);
          if (v1)
            break;
          if (v89 < v88)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v86 = sub_1A558A0A4((uint64_t)v86);
          if (v85 >= *((_QWORD *)v86 + 2))
            goto LABEL_134;
          v90 = &v86[16 * v85 + 32];
          *(_QWORD *)v90 = v88;
          *((_QWORD *)v90 + 1) = v89;
          v91 = *((_QWORD *)v86 + 2);
          if (v12 > v91)
            goto LABEL_135;
          memmove(&v86[16 * v12 + 16], &v86[16 * v12 + 32], 16 * (v91 - v12));
          v11 = v86;
          *((_QWORD *)v86 + 2) = v91 - 1;
          v12 = v91 - 1;
        }
        while (v91 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v94 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v94 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_1A594BA18();
    *(_QWORD *)(v7 + 16) = v6;
    v3 = v96;
    v94 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *v2;
  v92 = v2;
  v93 = *v2 - 4;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v97 = *v2;
  while (1)
  {
    v13 = v9++;
    if (v9 < v3)
    {
      v14 = *(_DWORD *)(v10 + 4 * v9);
      v15 = *(_DWORD *)(v10 + 4 * v13);
      v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        v16 = v14;
        while (1)
        {
          v17 = *(_DWORD *)(v10 + 4 * v9);
          if (v14 < v15 == v17 >= v16)
            break;
          ++v9;
          v16 = v17;
          if (v3 == v9)
          {
            v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13)
          goto LABEL_138;
        if (v13 < v9)
        {
          v18 = v9 - 1;
          v19 = v13;
          do
          {
            if (v19 != v18)
            {
              if (!v10)
                goto LABEL_144;
              v20 = *(_DWORD *)(v10 + 4 * v19);
              *(_DWORD *)(v10 + 4 * v19) = *(_DWORD *)(v10 + 4 * v18);
              *(_DWORD *)(v10 + 4 * v18) = v20;
            }
            v59 = ++v19 < v18--;
          }
          while (v59);
        }
      }
    }
    if (v9 >= v3)
      goto LABEL_47;
    if (__OFSUB__(v9, v13))
      goto LABEL_136;
    if (v9 - v13 >= v95)
      goto LABEL_47;
    v21 = v13 + v95;
    if (__OFADD__(v13, v95))
      goto LABEL_139;
    if (v21 >= v3)
      v21 = v3;
    if (v21 < v13)
      break;
    if (v9 != v21)
    {
      v22 = (unsigned int *)(v93 + 4 * v9);
      do
      {
        v23 = *(_DWORD *)(v10 + 4 * v9);
        v24 = v13;
        v25 = v22;
        do
        {
          v26 = *v25;
          if (v23 >= *v25)
            break;
          if (!v10)
            goto LABEL_142;
          *v25 = v23;
          v25[1] = v26;
          --v25;
          ++v24;
        }
        while (v9 != v24);
        ++v9;
        ++v22;
      }
      while (v9 != v21);
      v9 = v21;
    }
LABEL_47:
    if (v9 < v13)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1A5589B40(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v28 = *((_QWORD *)v11 + 2);
    v27 = *((_QWORD *)v11 + 3);
    v12 = v28 + 1;
    v10 = v97;
    if (v28 >= v27 >> 1)
    {
      v77 = sub_1A5589B40((char *)(v27 > 1), v28 + 1, 1, v11);
      v10 = v97;
      v11 = v77;
    }
    *((_QWORD *)v11 + 2) = v12;
    v29 = v11 + 32;
    v30 = &v11[16 * v28 + 32];
    *(_QWORD *)v30 = v13;
    *((_QWORD *)v30 + 1) = v9;
    if (v28)
    {
      while (1)
      {
        v31 = v12 - 1;
        if (v12 >= 4)
        {
          v36 = &v29[16 * v12];
          v37 = *((_QWORD *)v36 - 8);
          v38 = *((_QWORD *)v36 - 7);
          v42 = __OFSUB__(v38, v37);
          v39 = v38 - v37;
          if (v42)
            goto LABEL_120;
          v41 = *((_QWORD *)v36 - 6);
          v40 = *((_QWORD *)v36 - 5);
          v42 = __OFSUB__(v40, v41);
          v34 = v40 - v41;
          v35 = v42;
          if (v42)
            goto LABEL_121;
          v43 = v12 - 2;
          v44 = &v29[16 * v12 - 32];
          v46 = *(_QWORD *)v44;
          v45 = *((_QWORD *)v44 + 1);
          v42 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          if (v42)
            goto LABEL_123;
          v42 = __OFADD__(v34, v47);
          v48 = v34 + v47;
          if (v42)
            goto LABEL_126;
          if (v48 >= v39)
          {
            v66 = &v29[16 * v31];
            v68 = *(_QWORD *)v66;
            v67 = *((_QWORD *)v66 + 1);
            v42 = __OFSUB__(v67, v68);
            v69 = v67 - v68;
            if (v42)
              goto LABEL_130;
            v59 = v34 < v69;
            goto LABEL_84;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v60 = *((_QWORD *)v11 + 4);
            v61 = *((_QWORD *)v11 + 5);
            v42 = __OFSUB__(v61, v60);
            v53 = v61 - v60;
            v54 = v42;
            goto LABEL_78;
          }
          v33 = *((_QWORD *)v11 + 4);
          v32 = *((_QWORD *)v11 + 5);
          v42 = __OFSUB__(v32, v33);
          v34 = v32 - v33;
          v35 = v42;
        }
        if ((v35 & 1) != 0)
          goto LABEL_122;
        v43 = v12 - 2;
        v49 = &v29[16 * v12 - 32];
        v51 = *(_QWORD *)v49;
        v50 = *((_QWORD *)v49 + 1);
        v52 = __OFSUB__(v50, v51);
        v53 = v50 - v51;
        v54 = v52;
        if (v52)
          goto LABEL_125;
        v55 = &v29[16 * v31];
        v57 = *(_QWORD *)v55;
        v56 = *((_QWORD *)v55 + 1);
        v42 = __OFSUB__(v56, v57);
        v58 = v56 - v57;
        if (v42)
          goto LABEL_128;
        if (__OFADD__(v53, v58))
          goto LABEL_129;
        if (v53 + v58 >= v34)
        {
          v59 = v34 < v58;
LABEL_84:
          if (v59)
            v31 = v43;
          goto LABEL_86;
        }
LABEL_78:
        if ((v54 & 1) != 0)
          goto LABEL_124;
        v62 = &v29[16 * v31];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v42 = __OFSUB__(v63, v64);
        v65 = v63 - v64;
        if (v42)
          goto LABEL_127;
        if (v65 < v53)
          goto LABEL_15;
LABEL_86:
        v70 = v31 - 1;
        if (v31 - 1 >= v12)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v10)
          goto LABEL_143;
        v71 = &v29[16 * v70];
        v72 = *(_QWORD *)v71;
        v73 = v29;
        v74 = &v29[16 * v31];
        v75 = *((_QWORD *)v74 + 1);
        sub_1A5565504((char *)(v10 + 4 * *(_QWORD *)v71), (char *)(v10 + 4 * *(_QWORD *)v74), v10 + 4 * v75, __dst);
        if (v1)
          goto LABEL_114;
        if (v75 < v72)
          goto LABEL_117;
        if (v31 > *((_QWORD *)v11 + 2))
          goto LABEL_118;
        *(_QWORD *)v71 = v72;
        *(_QWORD *)&v73[16 * v70 + 8] = v75;
        v76 = *((_QWORD *)v11 + 2);
        if (v31 >= v76)
          goto LABEL_119;
        v12 = v76 - 1;
        memmove(v74, v74 + 16, 16 * (v76 - 1 - v31));
        v29 = v73;
        *((_QWORD *)v11 + 2) = v76 - 1;
        v10 = v97;
        if (v76 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v96;
    if (v9 >= v96)
    {
      v8 = v94;
      v2 = v92;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_1A594C9B4();
  __break(1u);
  return result;
}

uint64_t sub_1A5565504(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  unsigned int *v17;
  char *v18;
  char *v19;
  unsigned int v20;
  uint64_t result;
  char *v22;
  char *v23;
  char *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 3;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 2;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 3;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 2;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 2)
  {
    if (v11 >= -3)
    {
      if (__dst != a2 || &a2[4 * v13] <= __dst)
        memmove(__dst, a2, 4 * v13);
      v16 = &v4[4 * v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 4)
      {
        v17 = (unsigned int *)(a3 - 4);
        while (1)
        {
          v18 = (char *)(v17 + 1);
          v19 = v6 - 4;
          v20 = *((_DWORD *)v6 - 1);
          if (*((_DWORD *)v16 - 1) >= v20)
          {
            v22 = v16 - 4;
            if (v18 < v16 || v17 >= (unsigned int *)v16 || v18 != v16)
              *v17 = *((_DWORD *)v16 - 1);
            v16 -= 4;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v18 != v6 || v17 >= (unsigned int *)v6)
              *v17 = v20;
            v24 = v6 - 4;
            v6 -= 4;
            if (v19 <= v7)
              goto LABEL_42;
          }
          --v17;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -3)
  {
    if (__dst != __src || &__src[4 * v10] <= __dst)
      memmove(__dst, __src, 4 * v10);
    v14 = &v4[4 * v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 4)
    {
      do
      {
        if (*(_DWORD *)v6 >= *(_DWORD *)v4)
        {
          if (v7 != v4)
            *(_DWORD *)v7 = *(_DWORD *)v4;
          v4 += 4;
          v23 = v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 4;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *(_DWORD *)v7 = *(_DWORD *)v6;
        }
        v7 += 4;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_1A5589D9C((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  result = sub_1A594CA68();
  __break(1u);
  return result;
}

uint64_t sub_1A5565770(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  int v39;
  uint64_t v40;

  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79ABC8);
  result = sub_1A594CA44();
  v3 = (_QWORD *)result;
  v4 = 0;
  v35 = a1;
  v5 = *(_QWORD *)(a1 + 64);
  v31 = (_QWORD *)result;
  v32 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v5;
  v33 = (unint64_t)(v6 + 63) >> 6;
  v34 = result + 64;
  if ((v7 & v5) == 0)
    goto LABEL_5;
LABEL_4:
  v9 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v9 | (v4 << 6); ; i = __clz(__rbit64(v12)) + (v4 << 6))
  {
    v14 = (uint64_t *)(*(_QWORD *)(v35 + 48) + 16 * i);
    v15 = *v14;
    v16 = *(_QWORD *)(*(_QWORD *)(v35 + 56) + 8 * i);
    v17 = *(_QWORD *)(v16 + 16);
    if (v17)
    {
      v36 = *v14;
      v38 = i;
      v40 = MEMORY[0x1E0DEE9D8];
      v37 = v14[1];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A54F4E78(0, v17, 0);
      v18 = (_QWORD *)(v16 + 72);
      do
      {
        v39 = *((_DWORD *)v18 - 10);
        v19 = *(v18 - 2);
        v20 = *(v18 - 1);
        if (*v18)
        {
          sub_1A54E42B4(v19, v20);
          sub_1A54E42B4(v19, v20);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A54E42B4(v19, v20);
          swift_bridgeObjectRetain_n();
          SectionSpecifier.Part.debugDescription.getter();
          sub_1A594B5F8();
          swift_bridgeObjectRelease();
          sub_1A54E46E8(v19, v20);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1A54E46E8(v19, v20);
          swift_bridgeObjectRelease();
          v22 = 0x656D686361747461;
          v21 = 0xEB0000000020746ELL;
        }
        else
        {
          sub_1A54E42B4(*(v18 - 2), *(v18 - 1));
          sub_1A54E42B4(v19, v20);
          sub_1A54E46E8(v19, v20);
          swift_bridgeObjectRelease();
          v21 = 0xE400000000000000;
          v22 = 1954047348;
        }
        v24 = *(_QWORD *)(v40 + 16);
        v23 = *(_QWORD *)(v40 + 24);
        if (v24 >= v23 >> 1)
          sub_1A54F4E78(v23 > 1, v24 + 1, 1);
        *(_QWORD *)(v40 + 16) = v24 + 1;
        v25 = v40 + 40 * v24;
        *(_DWORD *)(v25 + 32) = v39;
        v18 += 6;
        *(_QWORD *)(v25 + 40) = v19;
        *(_QWORD *)(v25 + 48) = v20;
        *(_QWORD *)(v25 + 56) = v22;
        *(_QWORD *)(v25 + 64) = v21;
        --v17;
      }
      while (v17);
      swift_bridgeObjectRelease();
      v3 = v31;
      v26 = v40;
      result = v37;
      i = v38;
      v15 = v36;
    }
    else
    {
      result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v26 = MEMORY[0x1E0DEE9D8];
    }
    *(_QWORD *)(v34 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v27 = (_QWORD *)(v3[6] + 16 * i);
    *v27 = v15;
    v27[1] = result;
    *(_QWORD *)(v3[7] + 8 * i) = v26;
    v28 = v3[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
    {
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    v3[2] = v30;
    if (v8)
      goto LABEL_4;
LABEL_5:
    v11 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_34;
    if (v11 >= v33)
      return (uint64_t)v3;
    v12 = *(_QWORD *)(v32 + 8 * v11);
    ++v4;
    if (!v12)
    {
      v4 = v11 + 1;
      if (v11 + 1 >= v33)
        return (uint64_t)v3;
      v12 = *(_QWORD *)(v32 + 8 * v4);
      if (!v12)
      {
        v4 = v11 + 2;
        if (v11 + 2 >= v33)
          return (uint64_t)v3;
        v12 = *(_QWORD *)(v32 + 8 * v4);
        if (!v12)
          break;
      }
    }
LABEL_18:
    v8 = (v12 - 1) & v12;
  }
  v13 = v11 + 3;
  if (v13 >= v33)
    return (uint64_t)v3;
  v12 = *(_QWORD *)(v32 + 8 * v13);
  if (v12)
  {
    v4 = v13;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v4 >= v33)
      return (uint64_t)v3;
    v12 = *(_QWORD *)(v32 + 8 * v4);
    ++v13;
    if (v12)
      goto LABEL_18;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1A5565B40(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int64_t v37;
  uint64_t v38;

  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79ABD0);
  result = sub_1A594CA44();
  v3 = (_QWORD *)result;
  v4 = 0;
  v34 = a1;
  v7 = *(_QWORD *)(a1 + 64);
  v6 = a1 + 64;
  v5 = v7;
  v8 = 1 << *(_BYTE *)(v6 - 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v5;
  v31 = v6;
  v32 = (unint64_t)(v8 + 63) >> 6;
  v33 = result + 64;
  v30 = (_QWORD *)result;
  if ((v9 & v5) == 0)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v11 | (v4 << 6); ; i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(v34 + 48) + 16 * i);
    v18 = *v16;
    v17 = v16[1];
    v19 = *(_QWORD *)(*(_QWORD *)(v34 + 56) + 8 * i);
    v20 = *(_QWORD *)(v19 + 16);
    if (v20)
    {
      v35 = *v16;
      v36 = v10;
      v37 = v4;
      v38 = MEMORY[0x1E0DEE9D8];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A54F4E24(0, v20, 0);
      v21 = v38;
      v22 = 44;
      do
      {
        v23 = *(_DWORD *)(v19 + v22);
        v25 = *(_QWORD *)(v38 + 16);
        v24 = *(_QWORD *)(v38 + 24);
        if (v25 >= v24 >> 1)
          sub_1A54F4E24(v24 > 1, v25 + 1, 1);
        *(_QWORD *)(v38 + 16) = v25 + 1;
        *(_DWORD *)(v38 + 4 * v25 + 32) = v23;
        v22 += 16;
        --v20;
      }
      while (v20);
      result = swift_bridgeObjectRelease();
      v3 = v30;
      v10 = v36;
      v4 = v37;
      v18 = v35;
    }
    else
    {
      result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v21 = MEMORY[0x1E0DEE9D8];
    }
    *(_QWORD *)(v33 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v26 = (_QWORD *)(v3[6] + 16 * i);
    *v26 = v18;
    v26[1] = v17;
    *(_QWORD *)(v3[7] + 8 * i) = v21;
    v27 = v3[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (v28)
    {
      __break(1u);
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    v3[2] = v29;
    if (v10)
      goto LABEL_4;
LABEL_5:
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_31;
    if (v13 >= v32)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v31 + 8 * v13);
    ++v4;
    if (!v14)
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v32)
        return (uint64_t)v3;
      v14 = *(_QWORD *)(v31 + 8 * v4);
      if (!v14)
      {
        v4 = v13 + 2;
        if (v13 + 2 >= v32)
          return (uint64_t)v3;
        v14 = *(_QWORD *)(v31 + 8 * v4);
        if (!v14)
          break;
      }
    }
LABEL_18:
    v10 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v32)
    return (uint64_t)v3;
  v14 = *(_QWORD *)(v31 + 8 * v15);
  if (v14)
  {
    v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v4 >= v32)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v31 + 8 * v4);
    ++v15;
    if (v14)
      goto LABEL_18;
  }
LABEL_32:
  __break(1u);
  return result;
}

_QWORD *sub_1A5565DF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  unsigned int v7;
  uint64_t v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;

  v25 = *(_QWORD *)(a1 + 16);
  if (!v25)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v2 = a1;
  v3 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v4 = 0;
  v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v24 = v3;
  do
  {
    if (MailboxesSelectionUsage.subscript.getter(*(unsigned int *)(v2 + 4 * v4 + 32), a2))
    {
      v10 = v7;
      v11 = v8;
      v12 = v9;
      v13 = sub_1A594B4A8();
      v27 = v14;
      v15 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v16 = sub_1A5561220(v15, v10);
      v18 = v17;
      if ((v12 & 1) != 0)
      {
        if (v11)
        {
          swift_bridgeObjectRelease();
          if (v11 == 1)
          {
            v19 = 0x7953657669746361;
            v20 = 0xEA0000000000636ELL;
          }
          else
          {
            v20 = 0xEA00000000006B73;
            v19 = 0x6154657669746361;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          v20 = 0xE800000000000000;
          v19 = 0x6576697463616E69;
        }
      }
      else
      {
        sub_1A594CC9C();
        sub_1A594B5F8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v19 = 0x6576697463616E69;
        v20 = 0xE90000000000002DLL;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v5 = sub_1A54F0C30(0, v5[2] + 1, 1, v5);
      v22 = v5[2];
      v21 = v5[3];
      if (v22 >= v21 >> 1)
        v5 = sub_1A54F0C30((_QWORD *)(v21 > 1), v22 + 1, 1, v5);
      v5[2] = v22 + 1;
      v6 = &v5[6 * v22];
      v6[4] = v13;
      v6[5] = v27;
      v6[6] = v16;
      v6[7] = v18;
      v6[8] = v19;
      v6[9] = v20;
      v2 = v24;
    }
    ++v4;
  }
  while (v25 != v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1A5566034(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  _QWORD v5[3];

  if (!a1)
    return 0;
  v5[1] = v1;
  v5[2] = v2;
  v3 = (((a1 & 0x3F) << 8) | (a1 >> 6)) + 33217;
  if ((a1 & 0x80) == 0)
    v3 = (a1 + 1);
  v5[0] = (v3 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * ((4 - (__clz(v3) >> 3)) & 7)));
  return MEMORY[0x1A85AD9BC](v5);
}

uint64_t sub_1A55660C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  unsigned int v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;

  v8 = *(_QWORD *)a1;
  v9 = *(_DWORD *)(a1 + 8);
  v10 = *(_BYTE *)(a1 + 12);
  sub_1A54FCA28(a1);
  v11 = sub_1A5561220(v8, v9);
  v13 = v12;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (!a3)
    goto LABEL_16;
  v14 = sub_1A5566034(v10);
  if (!v15)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  if (v14 == a2 && v15 == a3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  v17 = sub_1A594CD38();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
LABEL_10:
    v18 = sub_1A5566034(v10);
    v20 = v19;
    if (v19)
      v21 = v18;
    else
      v21 = 0;
    if (!*(_WORD *)(a1 + 14))
      goto LABEL_22;
    goto LABEL_17;
  }
LABEL_16:
  v21 = 0;
  v20 = 0;
  if (!*(_WORD *)(a1 + 14))
  {
LABEL_22:
    v26 = 0;
    v24 = 0;
    goto LABEL_23;
  }
LABEL_17:
  v22 = sub_1A594B4A8();
  v24 = v23;
  v25 = HIBYTE(v23) & 0xF;
  if ((v23 & 0x2000000000000000) == 0)
    v25 = v22 & 0xFFFFFFFFFFFFLL;
  if (!v25)
  {
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  v26 = v22;
LABEL_23:
  v27 = 8 * *(char *)(a1 + 16);
  v28 = *(_QWORD *)((char *)&unk_1A59A78A0 + v27);
  v29 = *(_QWORD *)((char *)&unk_1A59A78E0 + v27);
  sub_1A54F81BC(a1);
  result = swift_bridgeObjectRelease();
  *a4 = v11;
  a4[1] = v13;
  a4[2] = v21;
  a4[3] = v20;
  a4[4] = v26;
  a4[5] = v24;
  a4[6] = v28;
  a4[7] = v29;
  return result;
}

uint64_t sub_1A556625C(uint64_t a1, uint64_t a2)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t result;
  uint64_t v10;
  int64_t v11;
  int64_t v12;
  unint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _OWORD *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  _OWORD v33[4];
  _BYTE v34[24];
  _OWORD v35[4];
  __int16 v36;
  _QWORD v37[4];
  uint64_t v38;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  v38 = MEMORY[0x1E0DEE9D8];
  sub_1A54F4E5C(0, v2, 0);
  v3 = v38;
  v6 = sub_1A5520CE4(a1);
  v8 = v7;
  v32 = a1 + 64;
  result = sub_1A55032A0(a2 + 56, (uint64_t)v34, (uint64_t *)&unk_1EE797E40);
  v10 = 0;
  v31 = v2;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v13 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v32 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_26;
    if (*(_DWORD *)(a1 + 36) != v8)
      goto LABEL_27;
    v14 = *(_QWORD *)(a1 + 56) + 72 * v6;
    v35[0] = *(_OWORD *)v14;
    v16 = *(_OWORD *)(v14 + 32);
    v15 = *(_OWORD *)(v14 + 48);
    v17 = *(_OWORD *)(v14 + 16);
    v36 = *(_WORD *)(v14 + 64);
    v35[2] = v16;
    v35[3] = v15;
    v35[1] = v17;
    sub_1A55032A0((uint64_t)v34, (uint64_t)v37, (uint64_t *)&unk_1EE797E40);
    if (v37[0])
    {
      v18 = v37[1];
      v19 = v37[2];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
    else
    {
      v18 = 0;
      v19 = 0;
    }
    sub_1A54FCA28((uint64_t)v35);
    result = sub_1A55660C0((uint64_t)v35, v18, v19, (uint64_t *)v33);
    v38 = v3;
    v21 = *(_QWORD *)(v3 + 16);
    v20 = *(_QWORD *)(v3 + 24);
    if (v21 >= v20 >> 1)
    {
      result = sub_1A54F4E5C(v20 > 1, v21 + 1, 1);
      v3 = v38;
    }
    *(_QWORD *)(v3 + 16) = v21 + 1;
    v22 = (_OWORD *)(v3 + (v21 << 6));
    v23 = v33[0];
    v24 = v33[1];
    v25 = v33[3];
    v22[4] = v33[2];
    v22[5] = v25;
    v22[2] = v23;
    v22[3] = v24;
    v11 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v11)
      goto LABEL_28;
    v26 = *(_QWORD *)(v32 + 8 * v13);
    if ((v26 & (1 << v6)) == 0)
      goto LABEL_29;
    if (*(_DWORD *)(a1 + 36) != v8)
      goto LABEL_30;
    v27 = v26 & (-2 << (v6 & 0x3F));
    if (v27)
    {
      v11 = __clz(__rbit64(v27)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v12 = v31;
    }
    else
    {
      v28 = v13 + 1;
      v29 = (unint64_t)(v11 + 63) >> 6;
      v12 = v31;
      if (v13 + 1 < v29)
      {
        v30 = *(_QWORD *)(v32 + 8 * v28);
        if (v30)
        {
LABEL_23:
          v11 = __clz(__rbit64(v30)) + (v28 << 6);
        }
        else
        {
          while (v29 - 2 != v13)
          {
            v30 = *(_QWORD *)(a1 + 80 + 8 * v13++);
            if (v30)
            {
              v28 = v13 + 1;
              goto LABEL_23;
            }
          }
        }
      }
    }
    ++v10;
    v6 = v11;
    if (v10 == v12)
      return v3;
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1A55664F8(uint64_t a1)
{
  unint64_t v2;

  if (!*(_QWORD *)(a1 + 16))
    return 2;
  sub_1A594CE64();
  sub_1A594CE88();
  v2 = sub_1A594CED0() & ~(-1 << *(_BYTE *)(a1 + 32));
  if (((*(_QWORD *)(a1 + ((v2 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v2) & 1) != 0)
    return 1;
  else
    return 2;
}

_QWORD *sub_1A556657C(_QWORD *result, char a2, _QWORD *a3)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t *i;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  char v29;
  unint64_t v30;
  uint64_t v31;
  _BOOL8 v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  char v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v3 = result[2];
  if (v3)
  {
    v6 = result;
    v8 = result[4];
    v7 = result[5];
    v41 = result[6];
    v9 = (_QWORD *)*a3;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v11 = sub_1A54FE060(v8, v7);
    v12 = v9[2];
    v13 = (v10 & 1) == 0;
    v14 = v12 + v13;
    if (__OFADD__(v12, v13))
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v15 = v10;
    if (v9[3] < v14)
    {
      sub_1A55831A8(v14, a2 & 1);
      v16 = sub_1A54FE060(v8, v7);
      if ((v15 & 1) != (v17 & 1))
      {
LABEL_28:
        result = (_QWORD *)sub_1A594CDF8();
        __break(1u);
        return result;
      }
      v11 = v16;
      v18 = (_QWORD *)*a3;
      if ((v15 & 1) == 0)
        goto LABEL_12;
LABEL_9:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v18[7] + 8 * v11) = v41;
      v19 = v3 - 1;
      if (v3 == 1)
        return (_QWORD *)swift_bridgeObjectRelease();
LABEL_16:
      for (i = v6 + 9; ; i += 3)
      {
        v26 = *(i - 2);
        v25 = *(i - 1);
        v27 = *i;
        v28 = (_QWORD *)*a3;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v30 = sub_1A54FE060(v26, v25);
        v31 = v28[2];
        v32 = (v29 & 1) == 0;
        v33 = v31 + v32;
        if (__OFADD__(v31, v32))
          break;
        v34 = v29;
        if (v28[3] < v33)
        {
          sub_1A55831A8(v33, 1);
          v35 = sub_1A54FE060(v26, v25);
          if ((v34 & 1) != (v36 & 1))
            goto LABEL_28;
          v30 = v35;
        }
        v37 = (_QWORD *)*a3;
        if ((v34 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          *(_QWORD *)(v37[7] + 8 * v30) = v27;
        }
        else
        {
          v37[(v30 >> 6) + 8] |= 1 << v30;
          v38 = (uint64_t *)(v37[6] + 16 * v30);
          *v38 = v26;
          v38[1] = v25;
          *(_QWORD *)(v37[7] + 8 * v30) = v27;
          v39 = v37[2];
          v22 = __OFADD__(v39, 1);
          v40 = v39 + 1;
          if (v22)
            goto LABEL_27;
          v37[2] = v40;
        }
        if (!--v19)
          return (_QWORD *)swift_bridgeObjectRelease();
      }
      goto LABEL_26;
    }
    if ((a2 & 1) != 0)
    {
      v18 = (_QWORD *)*a3;
      if ((v10 & 1) != 0)
        goto LABEL_9;
    }
    else
    {
      sub_1A5550364();
      v18 = (_QWORD *)*a3;
      if ((v15 & 1) != 0)
        goto LABEL_9;
    }
LABEL_12:
    v18[(v11 >> 6) + 8] |= 1 << v11;
    v20 = (uint64_t *)(v18[6] + 16 * v11);
    *v20 = v8;
    v20[1] = v7;
    *(_QWORD *)(v18[7] + 8 * v11) = v41;
    v21 = v18[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
    {
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v18[2] = v23;
    v19 = v3 - 1;
    if (v3 == 1)
      return (_QWORD *)swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_1A55667FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  int v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  int v42;
  uint64_t v43;
  unint64_t v44;

  v40 = type metadata accessor for TaskHistory.Previous(0);
  v4 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TaskHistory.Running(0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (int *)((char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(_QWORD *)(a1 + 16);
  v36 = a2;
  v37 = a1;
  if (v11)
  {
    v35 = v4;
    v12 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v39 = *(_QWORD *)(v8 + 72);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v14 = (char *)MEMORY[0x1E0DEE9D8];
    v38 = v7;
    do
    {
      sub_1A55034B8(v12, (uint64_t)v10, type metadata accessor for TaskHistory.Running);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v17 = *v10;
        swift_release();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v14 = sub_1A54F10AC(0, *((_QWORD *)v14 + 2) + 1, 1, v14);
        v19 = *((_QWORD *)v14 + 2);
        v18 = *((_QWORD *)v14 + 3);
        if (v19 >= v18 >> 1)
          v14 = sub_1A54F10AC((char *)(v18 > 1), v19 + 1, 1, v14);
        *((_QWORD *)v14 + 2) = v19 + 1;
        *(_DWORD *)&v14[4 * v19 + 32] = v17;
      }
      else
      {
        v20 = *(_QWORD *)v10;
        v43 = 0;
        v44 = 0xE000000000000000;
        v21 = CommandID.tag.getter(v20);
        v41 = v21;
        v42 = HIDWORD(v21);
        sub_1A594C924();
        v22 = v43;
        v23 = v44;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v13 = sub_1A54EFEA0(0, v13[2] + 1, 1, v13);
        v25 = v13[2];
        v24 = v13[3];
        if (v25 >= v24 >> 1)
          v13 = sub_1A54EFEA0((_QWORD *)(v24 > 1), v25 + 1, 1, v13);
        v15 = (uint64_t)v10 + *(int *)(__swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1EE798308) + 64);
        v13[2] = v25 + 1;
        v16 = &v13[2 * v25];
        v16[4] = v22;
        v16[5] = v23;
        sub_1A55034FC(v15, type metadata accessor for ClientCommand);
      }
      v12 += v39;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    v4 = v35;
    a2 = v36;
    if (!v13[2])
      goto LABEL_16;
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v14 = (char *)MEMORY[0x1E0DEE9D8];
    if (!*(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16))
    {
LABEL_16:
      swift_bridgeObjectRelease();
      v13 = 0;
    }
  }
  v26 = *((_QWORD *)v14 + 2);
  swift_bridgeObjectRelease();
  if (!v26)
  {
    swift_bridgeObjectRelease();
    v27 = *(_QWORD *)(a2 + 16);
    if (v27)
      goto LABEL_19;
LABEL_29:
    swift_bridgeObjectRelease();
    return (uint64_t)v13;
  }
  v27 = *(_QWORD *)(a2 + 16);
  if (!v27)
    goto LABEL_29;
LABEL_19:
  v28 = 0;
  v29 = 0;
  v30 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v31 = *(_QWORD *)(v4 + 72);
  while (1)
  {
    sub_1A55034B8(v30, (uint64_t)v6, type metadata accessor for TaskHistory.Previous);
    result = swift_getEnumCaseMultiPayload();
    if ((_DWORD)result == 1)
      break;
    v33 = __OFADD__(v29++, 1);
    if (v33)
      goto LABEL_31;
    sub_1A55034FC((uint64_t)v6, type metadata accessor for ClientCommand);
LABEL_21:
    v30 += v31;
    if (!--v27)
      goto LABEL_29;
  }
  result = swift_release();
  v33 = __OFADD__(v28++, 1);
  if (!v33)
    goto LABEL_21;
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1A5566BB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(__int128 *__return_ptr, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t result;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD v35[3];
  __int128 v36;
  __int128 v37;
  __int128 v38;
  unsigned int v39;
  unsigned __int8 v40;
  char v41;
  __int128 v42;
  uint64_t v43;
  int v44;
  __int128 v45;

  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_QWORD *)(a1 + 64);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v6 = sub_1A55667FC(v4, v5);
  v8 = v7;
  v33 = v10;
  v34 = v9;
  *(_QWORD *)&v36 = 91;
  *((_QWORD *)&v36 + 1) = 0xE100000000000000;
  v11 = a1 + *(int *)(type metadata accessor for RunningTask() + 28);
  LOBYTE(v35[0]) = *(_QWORD *)(v11 + *(int *)(type metadata accessor for Task.Logger(0) + 20));
  sub_1A556C648();
  v12 = v6;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v32 = v8;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B6DC();
  if (sub_1A594B5A4() <= 1)
    sub_1A594B5F8();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  v13 = *((_QWORD *)&v36 + 1);
  v31 = v36;
  sub_1A556C73C(a1, (uint64_t)&v36);
  if (v41)
  {
    if (v41 == 1)
    {
      v14 = v39;
      v15 = v40;
      v35[1] = v37;
      v35[2] = v38;
      v35[0] = v36;
      v16 = *((_QWORD *)&v37 + 1);
      v17 = v38;
      __swift_project_boxed_opaque_existential_1_0(v35, *((uint64_t *)&v37 + 1));
      v18 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v17 + 32);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v18(&v42, v16, v17);
      v19 = v43;
      LODWORD(v16) = v44;
      v45 = v42;
      sub_1A54F81BC((uint64_t)&v45);
      v20 = sub_1A5561220(v19, v16);
      v22 = v21;
      if ((v15 & 1) != 0)
      {
        v23 = 0;
        v24 = 0;
      }
      else
      {
        v23 = ConnectionID.debugDescription.getter(v14);
        v24 = v27;
      }
      sub_1A550E928((uint64_t)v35);
      sub_1A55034FC(a1, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
      sub_1A556C7A8(0, 0);
      v30 = 2;
      v25 = 2;
      goto LABEL_14;
    }
    if (v39 | ((unint64_t)v40 << 32)
      || (unint64_t)v38 | *((_QWORD *)&v38 + 1) | (unint64_t)v36 | *((_QWORD *)&v37 + 1) | (unint64_t)v37 | *((_QWORD *)&v36 + 1))
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A55034FC(a1, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
      v20 = 0;
      v22 = 0;
      v23 = 0;
      v24 = 0;
      v28 = 1;
      v30 = 2;
      v25 = 2;
      goto LABEL_15;
    }
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A55034FC(a1, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
    v20 = 0;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    v25 = 1;
    v26 = 2;
  }
  else
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A55034FC(a1, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
    sub_1A556C7D8((uint64_t)&v36);
    v20 = 0;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    v25 = 2;
    v26 = 1;
  }
  v30 = v26;
LABEL_14:
  v28 = 2;
LABEL_15:
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A556C778(v20, v22);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  result = sub_1A556C7A8(v20, v22);
  *(_QWORD *)a2 = v12;
  *(_QWORD *)(a2 + 8) = v32;
  *(_QWORD *)(a2 + 16) = v34;
  *(_QWORD *)(a2 + 24) = v33;
  *(_QWORD *)(a2 + 32) = v31;
  *(_QWORD *)(a2 + 40) = v13;
  *(_BYTE *)(a2 + 48) = v30;
  *(_QWORD *)(a2 + 56) = v20;
  *(_QWORD *)(a2 + 64) = v22;
  *(_QWORD *)(a2 + 72) = v23;
  *(_QWORD *)(a2 + 80) = v24;
  *(_BYTE *)(a2 + 88) = v25;
  *(_BYTE *)(a2 + 89) = v28;
  return result;
}

uint64_t sub_1A5566F88(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _OWORD *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v21;
  uint64_t v22;
  _OWORD v23[4];
  _OWORD v24[2];

  v2 = type metadata accessor for RunningTask();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v22 = MEMORY[0x1E0DEE9D8];
    sub_1A54F4DD0(0, v9, 0);
    v11 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v12 = *(_QWORD *)(v3 + 72);
    v10 = v22;
    do
    {
      sub_1A55034B8(v11, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
      sub_1A55034B8((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
      sub_1A5566BB0((uint64_t)v5, (uint64_t)v23);
      sub_1A55034FC((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for RunningTask);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A54F4DD0(0, *(_QWORD *)(v10 + 16) + 1, 1);
        v10 = v22;
      }
      v14 = *(_QWORD *)(v10 + 16);
      v13 = *(_QWORD *)(v10 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1A54F4DD0(v13 > 1, v14 + 1, 1);
        v10 = v22;
      }
      *(_QWORD *)(v10 + 16) = v14 + 1;
      v15 = (_OWORD *)(v10 + 96 * v14);
      v16 = v23[1];
      v15[2] = v23[0];
      v15[3] = v16;
      v17 = v23[2];
      v18 = v23[3];
      v19 = v24[0];
      *(_OWORD *)((char *)v15 + 106) = *(_OWORD *)((char *)v24 + 10);
      v15[5] = v18;
      v15[6] = v19;
      v15[4] = v17;
      v11 += v12;
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_1A5567134@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  __int128 v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  char *v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t result;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int v53;
  char v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v70;
  _QWORD v71[4];
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  int v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  _BYTE v91[32];
  uint64_t v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  _OWORD v96[3];

  *(_QWORD *)&v79 = 0;
  *((_QWORD *)&v79 + 1) = 0xE000000000000000;
  v6 = *((_QWORD *)a1 + 34);
  LOBYTE(v93) = *(_BYTE *)(v6 + OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id);
  sub_1A556C648();
  sub_1A594B6DC();
  if (sub_1A594B5A4() <= 1)
    sub_1A594B5F8();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  v66 = *((_QWORD *)&v79 + 1);
  v67 = v79;
  v7 = a1[13];
  *(_OWORD *)v91 = a1[12];
  *(_OWORD *)&v91[16] = v7;
  v92 = *((_QWORD *)a1 + 28);
  v8 = a1[9];
  v87 = a1[8];
  v88 = v8;
  v9 = a1[11];
  v89 = a1[10];
  v90 = v9;
  v10 = a1[5];
  v83 = a1[4];
  v84 = v10;
  v11 = a1[7];
  v85 = a1[6];
  v86 = v11;
  v12 = a1[1];
  v79 = *a1;
  v80 = v12;
  v13 = a1[3];
  v81 = a1[2];
  v82 = v13;
  v54 = BYTE1(v12);
  if (BYTE1(v12))
    v14 = 256;
  else
    v14 = 0;
  v53 = v80;
  v15 = v14 | v80;
  v51 = *((_QWORD *)&v81 + 1);
  v52 = *((_QWORD *)&v80 + 1);
  if (BYTE2(v12))
    v16 = 0x10000;
  else
    v16 = 0;
  v50 = v81;
  Environment.capturedValue.getter(v15 | v16, *((uint64_t *)&v12 + 1), v81, (uint64_t)v71);
  v64 = v71[1];
  v65 = v71[0];
  v62 = v71[3];
  v63 = v71[2];
  v61 = v72;
  v59 = v74;
  v60 = v73;
  v57 = v76;
  v58 = v75;
  v47 = v82;
  v56 = sub_1A55664F8(v82);
  v17 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v55 = sub_1A555F530(v17);
  swift_bridgeObjectRelease();
  v18 = sub_1A54E6958();
  v46 = sub_1A5555D84(v18, v20, v19 & 1);
  v22 = v21;
  v48 = v21;
  v49 = v23;
  v24 = v23;
  v25 = (_QWORD *)*((_QWORD *)a1 + 35);
  v95 = v90;
  v96[0] = *(_OWORD *)v91;
  *(_OWORD *)((char *)v96 + 12) = *(_OWORD *)&v91[12];
  v93 = v88;
  v94 = v89;
  sub_1A556C68C((uint64_t)&v93);
  sub_1A555E640(v46, v22, v24, v6, v25, &v93);
  sub_1A556C6E4((uint64_t)&v93);
  v26 = v93;
  v45 = v94;
  v27 = BYTE8(v94);
  v28 = v85;
  v29 = sub_1A5544FE8();
  LOBYTE(v22) = BYTE10(v79);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v30 = sub_1A558E3A4();
  v31 = sub_1A558E7E0(v53, v54, v52, v50, v51, v22, v47, v30);
  sub_1A5525B50(v26, *((uint64_t *)&v26 + 1), v45, v27, v28, v29, BYTE4(v31) & 1, *((uint64_t *)&v95 + 1));
  v33 = v32;
  swift_bridgeObjectRelease();
  v34 = sub_1A558A2F8(v33);
  swift_release();
  swift_release();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  v35 = sub_1A555FE58(v46, v48, v49);
  swift_release();
  swift_release();
  swift_release();
  v36 = MailboxesSelectionUsage.allConnections.getter((uint64_t)v34);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v37 = sub_1A5565DF4((uint64_t)v36, (uint64_t)v34);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease_n();
  v38 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v39 = (_QWORD *)sub_1A555F7C8(v38);
  swift_bridgeObjectRelease();
  if (v39[2])
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79ABD8);
    v40 = sub_1A594CA5C();
  }
  else
  {
    v40 = MEMORY[0x1E0DEE9E0];
  }
  v70 = v40;
  sub_1A556657C(v39, 1, &v70);
  swift_bridgeObjectRelease();
  v41 = v70;
  v77 = *(__int128 *)((char *)a1 + 232);
  v78 = *((_DWORD *)a1 + 62);
  v42 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v43 = sub_1A5566F88(v42);
  result = sub_1A5503278((uint64_t)&v77);
  *(_QWORD *)a4 = a2;
  *(_QWORD *)(a4 + 8) = a3;
  *(_QWORD *)(a4 + 16) = v67;
  *(_QWORD *)(a4 + 24) = v66;
  *(_QWORD *)(a4 + 32) = v65;
  *(_QWORD *)(a4 + 40) = v64;
  *(_QWORD *)(a4 + 48) = v63;
  *(_QWORD *)(a4 + 56) = v62;
  *(_BYTE *)(a4 + 64) = v61;
  *(_QWORD *)(a4 + 72) = v60;
  *(_QWORD *)(a4 + 80) = v59;
  *(_QWORD *)(a4 + 88) = v58;
  *(_QWORD *)(a4 + 96) = v57;
  *(_BYTE *)(a4 + 104) = v56;
  *(_QWORD *)(a4 + 112) = v55;
  *(_QWORD *)(a4 + 120) = v35;
  *(_QWORD *)(a4 + 128) = v37;
  *(_QWORD *)(a4 + 136) = v41;
  *(_QWORD *)(a4 + 144) = v43;
  return result;
}

uint64_t sub_1A55675E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v2 = *(_QWORD *)(a1 + 120);
  v3 = *(_QWORD *)(a1 + 144);
  v4 = *(_QWORD *)(a1 + 152);
  v5 = *(_QWORD *)(a1 + 160);
  v6 = *(_BYTE *)(a1 + 168);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A552CF80(v2);
  sub_1A55212D0(v3, v4, v5, v6);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1A55676F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;

  v2 = *(_QWORD *)(a1 + 120);
  v3 = *(_QWORD *)(a1 + 144);
  v4 = *(_QWORD *)(a1 + 152);
  v5 = *(_QWORD *)(a1 + 160);
  v7 = *(_BYTE *)(a1 + 168);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A55419EC(v2);
  sub_1A54E8FCC(v3, v4, v5, v7);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A55677F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  unint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  int64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  _QWORD *v53;
  __int128 v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  unint64_t v61;
  uint64_t v62;
  _BOOL8 v63;
  uint64_t v64;
  char v65;
  unint64_t v66;
  char v67;
  uint64_t v68;
  _QWORD *v69;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  BOOL v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  uint64_t v81;
  unsigned int v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  char v91;
  _QWORD *v92;
  unint64_t v93;
  uint64_t v94;
  _BOOL8 v95;
  uint64_t v96;
  char v97;
  unint64_t v98;
  char v99;
  uint64_t v100;
  _QWORD *v101;
  char v102;
  unint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t result;
  uint64_t v110;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  int v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  int v124;
  int v125;
  int v126;
  int64_t v127;
  unsigned int v128;
  int v129;
  __int128 v130;
  _QWORD *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  _QWORD *v136;

  v110 = sub_1A555FA04(a1);
  swift_bridgeObjectRelease();
  v134 = MEMORY[0x1E0DEE9D8];
  v112 = *(_QWORD *)(a2 + 16);
  if (v112)
  {
    v113 = a2 + 32;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v4 = 0;
    while (1)
    {
      v6 = (int *)(v113 + 24 * v4);
      v129 = *v6;
      v8 = *((_QWORD *)v6 + 1);
      v7 = *((_QWORD *)v6 + 2);
      v9 = *(_QWORD *)(v8 + 16);
      v127 = v9;
      if ((v7 & 4) == 0)
      {
        if (v9)
        {
          v115 = v4;
          sub_1A5522EEC(v8, v7);
          sub_1A5522EEC(v8, v7);
          v132 = MEMORY[0x1E0DEE9D8];
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A54F4E40(0, v9, 0);
          v10 = sub_1A558A244(v8);
          v12 = v11;
          v13 = 0;
          v14 = v8 + 64;
          v15 = *(_BYTE *)(v8 + 32);
          v117 = v11;
          v119 = v8 + 64;
          while (1)
          {
            if (v10 < 0 || v10 >= 1 << v15)
            {
              __break(1u);
LABEL_89:
              __break(1u);
LABEL_90:
              __break(1u);
              goto LABEL_91;
            }
            v19 = (unint64_t)v10 >> 6;
            if ((*(_QWORD *)(v14 + 8 * ((unint64_t)v10 >> 6)) & (1 << v10)) == 0)
              goto LABEL_90;
            if (*(_DWORD *)(v8 + 36) != v12)
              goto LABEL_92;
            v122 = v13;
            v20 = *(_QWORD *)(v8 + 48) + 16 * v10;
            v21 = *(_QWORD *)v20;
            v124 = *(_DWORD *)(v20 + 8);
            v23 = *(_QWORD *)(v132 + 16);
            v22 = *(_QWORD *)(v132 + 24);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            if (v23 >= v22 >> 1)
              sub_1A54F4E40(v22 > 1, v23 + 1, 1);
            *(_QWORD *)(v132 + 16) = v23 + 1;
            v24 = v132 + 16 * v23;
            *(_QWORD *)(v24 + 32) = v21;
            *(_DWORD *)(v24 + 40) = v124;
            *(_DWORD *)(v24 + 44) = v129;
            v15 = *(_BYTE *)(v8 + 32);
            v16 = 1 << v15;
            if (v10 >= 1 << v15)
              goto LABEL_94;
            v14 = v8 + 64;
            v25 = *(_QWORD *)(v119 + 8 * v19);
            if ((v25 & (1 << v10)) == 0)
              goto LABEL_96;
            if (*(_DWORD *)(v8 + 36) != v12)
              goto LABEL_98;
            v26 = v25 & (-2 << (v10 & 0x3F));
            if (v26)
            {
              v16 = __clz(__rbit64(v26)) | v10 & 0xFFFFFFFFFFFFFFC0;
              v17 = v127;
              v18 = v122;
            }
            else
            {
              v27 = v19 + 1;
              v28 = (v16 + 63) >> 6;
              v17 = v127;
              v18 = v122;
              if (v19 + 1 < v28)
              {
                v29 = *(_QWORD *)(v119 + 8 * v27);
                if (!v29)
                {
                  v27 = v19 + 2;
                  if (v19 + 2 >= v28)
                    goto LABEL_9;
                  v29 = *(_QWORD *)(v119 + 8 * v27);
                  if (!v29)
                  {
                    while (v28 - 3 != v19)
                    {
                      v29 = *(_QWORD *)(v8 + 88 + 8 * v19++);
                      if (v29)
                      {
                        v27 = v19 + 2;
                        goto LABEL_22;
                      }
                    }
                    goto LABEL_9;
                  }
                }
LABEL_22:
                v16 = __clz(__rbit64(v29)) + (v27 << 6);
              }
            }
LABEL_9:
            v13 = v18 + 1;
            v12 = v117;
            v10 = v16;
            if (v13 == v17)
            {
              v5 = v132;
              swift_bridgeObjectRelease();
              v4 = v115;
              goto LABEL_52;
            }
          }
        }
        sub_1A5522EEC(v8, v7);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A54FD2C4(v7);
        v5 = MEMORY[0x1E0DEE9D8];
LABEL_52:
        sub_1A54FD258(v7);
        swift_bridgeObjectRelease();
        sub_1A5522F20(v8, v7);
        goto LABEL_4;
      }
      if (v9)
        break;
      v5 = MEMORY[0x1E0DEE9D8];
LABEL_4:
      ++v4;
      sub_1A54EB890(v5);
      if (v4 == v112)
      {
        swift_bridgeObjectRelease_n();
        v50 = v134;
        goto LABEL_56;
      }
    }
    v114 = *((_QWORD *)v6 + 2);
    v116 = v4;
    sub_1A5522EEC(v8, v7);
    v133 = MEMORY[0x1E0DEE9D8];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54F4E40(0, v9, 0);
    v30 = sub_1A558A244(v8);
    v32 = v31;
    v33 = 0;
    v34 = v8 + 64;
    v35 = *(_BYTE *)(v8 + 32);
    v118 = v31;
    v120 = v8 + 64;
    while (1)
    {
      if (v30 < 0 || v30 >= 1 << v35)
        goto LABEL_89;
      v39 = (unint64_t)v30 >> 6;
      if ((*(_QWORD *)(v34 + 8 * ((unint64_t)v30 >> 6)) & (1 << v30)) == 0)
      {
LABEL_91:
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
LABEL_94:
        __break(1u);
LABEL_95:
        __break(1u);
LABEL_96:
        __break(1u);
LABEL_97:
        __break(1u);
LABEL_98:
        __break(1u);
LABEL_99:
        __break(1u);
LABEL_100:
        __break(1u);
LABEL_101:
        __break(1u);
LABEL_102:
        __break(1u);
LABEL_103:
        __break(1u);
LABEL_104:
        result = sub_1A594CDF8();
        __break(1u);
        return result;
      }
      if (*(_DWORD *)(v8 + 36) != v32)
        goto LABEL_93;
      v123 = v33;
      v40 = *(_QWORD *)(v8 + 48) + 16 * v30;
      v41 = *(_QWORD *)v40;
      v125 = *(_DWORD *)(v40 + 8);
      v43 = *(_QWORD *)(v133 + 16);
      v42 = *(_QWORD *)(v133 + 24);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      if (v43 >= v42 >> 1)
        sub_1A54F4E40(v42 > 1, v43 + 1, 1);
      *(_QWORD *)(v133 + 16) = v43 + 1;
      v44 = v133 + 16 * v43;
      *(_QWORD *)(v44 + 32) = v41;
      *(_DWORD *)(v44 + 40) = v125;
      *(_DWORD *)(v44 + 44) = v129;
      v35 = *(_BYTE *)(v8 + 32);
      v36 = 1 << v35;
      if (v30 >= 1 << v35)
        goto LABEL_95;
      v34 = v8 + 64;
      v45 = *(_QWORD *)(v120 + 8 * v39);
      if ((v45 & (1 << v30)) == 0)
        goto LABEL_97;
      if (*(_DWORD *)(v8 + 36) != v32)
        goto LABEL_99;
      v46 = v45 & (-2 << (v30 & 0x3F));
      if (v46)
      {
        v36 = __clz(__rbit64(v46)) | v30 & 0xFFFFFFFFFFFFFFC0;
        v37 = v127;
        v38 = v123;
      }
      else
      {
        v47 = v39 + 1;
        v48 = (v36 + 63) >> 6;
        v37 = v127;
        v38 = v123;
        if (v39 + 1 < v48)
        {
          v49 = *(_QWORD *)(v120 + 8 * v47);
          if (!v49)
          {
            v47 = v39 + 2;
            if (v39 + 2 >= v48)
              goto LABEL_31;
            v49 = *(_QWORD *)(v120 + 8 * v47);
            if (!v49)
            {
              while (v48 - 3 != v39)
              {
                v49 = *(_QWORD *)(v8 + 88 + 8 * v39++);
                if (v49)
                {
                  v47 = v39 + 2;
                  goto LABEL_44;
                }
              }
              goto LABEL_31;
            }
          }
LABEL_44:
          v36 = __clz(__rbit64(v49)) + (v47 << 6);
        }
      }
LABEL_31:
      v33 = v38 + 1;
      v32 = v118;
      v30 = v36;
      if (v33 == v37)
      {
        v5 = v133;
        sub_1A5522F20(v8, v114);
        sub_1A5522F20(v8, v114);
        v4 = v116;
        goto LABEL_4;
      }
    }
  }
  swift_bridgeObjectRelease();
  v50 = MEMORY[0x1E0DEE9D8];
LABEL_56:
  v51 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v135 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v52 = *(_QWORD *)(v50 + 16);
  if (v52)
  {
    v53 = (_QWORD *)(v50 + 40);
    *((_QWORD *)&v54 + 1) = 2;
    do
    {
      v56 = *(v53 - 1);
      *(_QWORD *)&v54 = *v53;
      v130 = v54;
      swift_bridgeObjectRetain_n();
      v57 = sub_1A5561220(v56, v130);
      v59 = v58;
      v61 = sub_1A54FE060(v57, v58);
      v62 = v51[2];
      v63 = (v60 & 1) == 0;
      v64 = v62 + v63;
      if (__OFADD__(v62, v63))
        goto LABEL_100;
      v65 = v60;
      if (v51[3] < v64)
      {
        sub_1A55834BC(v64, 1);
        v51 = v135;
        v66 = sub_1A54FE060(v57, v59);
        if ((v65 & 1) != (v67 & 1))
          goto LABEL_104;
        v61 = v66;
      }
      if ((v65 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v68 = v51[7];
        v69 = *(_QWORD **)(v68 + 8 * v61);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v68 + 8 * v61) = v69;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v69 = sub_1A54F0E78(0, v69[2] + 1, 1, v69);
          *(_QWORD *)(v68 + 8 * v61) = v69;
        }
        v72 = v69[2];
        v71 = v69[3];
        if (v72 >= v71 >> 1)
        {
          v69 = sub_1A54F0E78((_QWORD *)(v71 > 1), v72 + 1, 1, v69);
          *(_QWORD *)(v68 + 8 * v61) = v69;
        }
        v69[2] = v72 + 1;
        v55 = &v69[2 * v72];
        v55[4] = v56;
        *((_QWORD *)&v54 + 1) = *((_QWORD *)&v130 + 1);
        v55[5] = v130;
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A12A8);
        v73 = swift_allocObject();
        *(_OWORD *)(v73 + 16) = xmmword_1A59ABD10;
        *(_QWORD *)(v73 + 32) = v56;
        *((_QWORD *)&v54 + 1) = *((_QWORD *)&v130 + 1);
        *(_QWORD *)(v73 + 40) = v130;
        v51[(v61 >> 6) + 8] |= 1 << v61;
        v74 = (uint64_t *)(v51[6] + 16 * v61);
        *v74 = v57;
        v74[1] = v59;
        *(_QWORD *)(v51[7] + 8 * v61) = v73;
        v75 = v51[2];
        v76 = __OFADD__(v75, 1);
        v77 = v75 + 1;
        if (v76)
          goto LABEL_102;
        v51[2] = v77;
      }
      v53 += 2;
    }
    while (--v52);
  }
  swift_bridgeObjectRelease();
  sub_1A5565B40((uint64_t)v51);
  swift_release();
  v136 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v78 = *(_QWORD *)(a3 + 16);
  if (v78)
  {
    v131 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v79 = (_QWORD *)(a3 + 72);
    while (1)
    {
      v126 = *((_DWORD *)v79 - 10);
      v81 = *(v79 - 4);
      v82 = *((_DWORD *)v79 - 6);
      v83 = *(v79 - 2);
      v84 = *(v79 - 1);
      v85 = *v79;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A54E42B4(v83, v84);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v86 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v128 = v82;
      v87 = sub_1A5561220(v86, v82);
      v89 = v88;
      v90 = sub_1A54FE060(v87, v88);
      v92 = v131;
      v93 = v90;
      v94 = v131[2];
      v95 = (v91 & 1) == 0;
      v96 = v94 + v95;
      if (__OFADD__(v94, v95))
        goto LABEL_101;
      v97 = v91;
      if (v131[3] < v96)
      {
        sub_1A55834B0(v96, 1);
        v98 = sub_1A54FE060(v87, v89);
        if ((v97 & 1) != (v99 & 1))
          goto LABEL_104;
        v93 = v98;
        v92 = v136;
      }
      v131 = v92;
      if ((v97 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v100 = v131[7];
        v101 = *(_QWORD **)(v100 + 8 * v93);
        v102 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v100 + 8 * v93) = v101;
        v121 = v100;
        if ((v102 & 1) == 0)
        {
          v101 = sub_1A54F0D54(0, v101[2] + 1, 1, v101);
          *(_QWORD *)(v100 + 8 * v93) = v101;
        }
        v104 = v101[2];
        v103 = v101[3];
        if (v104 >= v103 >> 1)
        {
          v101 = sub_1A54F0D54((_QWORD *)(v103 > 1), v104 + 1, 1, v101);
          *(_QWORD *)(v121 + 8 * v93) = v101;
        }
        v101[2] = v104 + 1;
        v80 = &v101[6 * v104];
        *((_DWORD *)v80 + 8) = v126;
        v80[5] = v81;
        *((_DWORD *)v80 + 12) = v128;
        v80[7] = v83;
        v80[8] = v84;
        v80[9] = v85;
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A13A8);
        v105 = swift_allocObject();
        *(_OWORD *)(v105 + 16) = xmmword_1A59ABD10;
        *(_DWORD *)(v105 + 32) = v126;
        *(_QWORD *)(v105 + 40) = v81;
        *(_DWORD *)(v105 + 48) = v128;
        *(_QWORD *)(v105 + 56) = v83;
        *(_QWORD *)(v105 + 64) = v84;
        *(_QWORD *)(v105 + 72) = v85;
        v131[(v93 >> 6) + 8] |= 1 << v93;
        v106 = (uint64_t *)(v131[6] + 16 * v93);
        *v106 = v87;
        v106[1] = v89;
        *(_QWORD *)(v131[7] + 8 * v93) = v105;
        v107 = v131[2];
        v76 = __OFADD__(v107, 1);
        v108 = v107 + 1;
        if (v76)
          goto LABEL_103;
        v131[2] = v108;
      }
      v79 += 6;
      if (!--v78)
        goto LABEL_87;
    }
  }
  v131 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_87:
  swift_bridgeObjectRelease();
  sub_1A5565770((uint64_t)v131);
  swift_release();
  return v110;
}

uint64_t sub_1A556822C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  int v3;
  char v4;
  uint64_t v5;
  char v6;
  unint64_t v7;
  int v8;
  uint64_t v9;

  v3 = *(_DWORD *)(result + 32);
  v4 = *(_BYTE *)(result + 36);
  v5 = *(_QWORD *)(result + 56);
  v6 = *(_BYTE *)(result + 64);
  if ((*(_BYTE *)(result + 48) & 1) != 0)
  {
    v7 = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796E58);
    result = sub_1A594C924();
    v7 = 0xE000000000000000;
  }
  if ((v4 & 1) != 0)
    v8 = 0;
  else
    v8 = v3;
  *(_DWORD *)a2 = v8;
  *(_BYTE *)(a2 + 4) = v4 & 1;
  if ((v6 & 1) != 0)
    v9 = 0;
  else
    v9 = v5;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = v7;
  *(_QWORD *)(a2 + 24) = v9;
  *(_BYTE *)(a2 + 32) = v6 & 1;
  return result;
}

uint64_t sub_1A55682E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(unsigned int *)(a1 + 24);
  v7 = *(unsigned __int8 *)(a1 + 28);
  v45 = *(_QWORD *)(a1 + 32);
  v48 = *(_QWORD *)(a1 + 40);
  v8 = *(unsigned int *)(a1 + 48);
  v50 = *(unsigned __int8 *)(a1 + 52);
  v55 = v4;
  if (*(_QWORD *)(v4 + 16))
  {
    v9 = v6 | (v7 << 32);
  }
  else
  {
    sub_1A54E3414();
    v9 = v6 | (v7 << 32);
    if (MessageIdentifierSet.isEmpty.getter(v5, v9))
    {
      v10 = 0;
      v11 = 0;
      v52 = 1;
      v53 = 0;
      goto LABEL_6;
    }
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54FCA28((uint64_t)&v55);
  sub_1A54E4334(v5, v6, v7);
  v12 = sub_1A55FDDC0(v4);
  v14 = v13;
  v15 = HIDWORD(v13);
  sub_1A5560074(v12, v13 & 0xFFFFFFFFFFLL, (uint64_t (*)(void))sub_1A54E3414, (uint64_t)&type metadata for UID, &qword_1EE796DA8);
  v52 = v17;
  v53 = v16;
  sub_1A54E3458(v12, v14, v15);
  sub_1A5560074(v5, v9, (uint64_t (*)(void))sub_1A54E3414, (uint64_t)&type metadata for UID, &qword_1EE796DA8);
  v10 = v18;
  v11 = v19;
  sub_1A54F81BC((uint64_t)&v55);
  sub_1A54E3458(v5, v6, v7);
LABEL_6:
  v54 = v45;
  v44 = v10;
  if (*(_QWORD *)(v45 + 16))
  {
    v20 = v8 | (v50 << 32);
    v21 = v52;
    v22 = v53;
LABEL_10:
    v42 = v20;
    v52 = v21;
    v53 = v22;
    sub_1A54FCA28((uint64_t)&v54);
    sub_1A556BD18(v22, v21);
    sub_1A54FCA28((uint64_t)&v54);
    sub_1A54E4334(v48, v8, v50);
    v27 = sub_1A55FDDC0(v45);
    v29 = v28;
    v30 = HIDWORD(v28);
    sub_1A5560074(v27, v28 & 0xFFFFFFFFFFLL, (uint64_t (*)(void))sub_1A54E3414, (uint64_t)&type metadata for UID, &qword_1EE796DA8);
    v46 = v8;
    v23 = v31;
    v26 = v32;
    sub_1A54E3458(v27, v29, v30);
    sub_1A5560074(v48, v42, (uint64_t (*)(void))sub_1A54E3414, (uint64_t)&type metadata for UID, &qword_1EE796DA8);
    v24 = v33;
    v25 = v34;
    sub_1A54F81BC((uint64_t)&v54);
    sub_1A54E3458(v48, v46, v50);
    goto LABEL_11;
  }
  sub_1A54E3414();
  v20 = v8 | (v50 << 32);
  v21 = v52;
  v22 = v53;
  if (!MessageIdentifierSet.isEmpty.getter(v48, v20))
    goto LABEL_10;
  sub_1A556BD18(v53, v52);
  v23 = 0;
  v24 = 0;
  v25 = 0;
  v26 = 1;
LABEL_11:
  v51 = *(_BYTE *)a1;
  v49 = *(_BYTE *)(a1 + 1);
  v47 = *(_BYTE *)(a1 + 2);
  v35 = *(_QWORD *)(a1 + 56);
  v36 = *(unsigned int *)(a1 + 64);
  v37 = *(unsigned __int8 *)(a1 + 68);
  sub_1A556BD18(v23, v26);
  sub_1A5560074(v35, v36 | (v37 << 32), (uint64_t (*)(void))sub_1A54E3414, (uint64_t)&type metadata for UID, &qword_1EE796DA8);
  v43 = v38;
  v40 = v39;
  sub_1A5503408(a1);
  sub_1A556BD18(v53, v52);
  sub_1A556BD18(v23, v26);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A556C08C(v23, v26);
  sub_1A556C08C(v53, v52);
  sub_1A556C08C(v53, v52);
  sub_1A556C08C(v23, v26);
  result = swift_bridgeObjectRelease();
  *(_BYTE *)a2 = v51;
  *(_BYTE *)(a2 + 1) = v49;
  *(_BYTE *)(a2 + 2) = v47;
  *(_QWORD *)(a2 + 8) = v53;
  *(_QWORD *)(a2 + 16) = v52;
  *(_QWORD *)(a2 + 24) = v44;
  *(_QWORD *)(a2 + 32) = v11;
  *(_QWORD *)(a2 + 40) = v23;
  *(_QWORD *)(a2 + 48) = v26;
  *(_QWORD *)(a2 + 56) = v24;
  *(_QWORD *)(a2 + 64) = v25;
  *(_QWORD *)(a2 + 72) = v43;
  *(_QWORD *)(a2 + 80) = v40;
  return result;
}

uint64_t sub_1A55686C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  unint64_t v5;
  int v6;
  char v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  unint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  int v25;
  char v26;
  int v27;
  _BYTE v28[24];
  unsigned int v29;
  unsigned __int8 v30;
  int v31;
  char v32;
  int v33;
  char v34;
  __int128 v35;
  __int128 v36;

  result = sub_1A5510484(a1, (uint64_t)v28);
  v5 = *(unsigned int *)((char *)&v35 + 11) | ((unint64_t)HIBYTE(v35) << 32);
  v6 = HIBYTE(v35) >> 6;
  if (v6)
  {
    if (v6 == 1)
    {
      HIBYTE(v35) = BYTE4(v5) & 0x3F;
      v36 = *(_OWORD *)&v28[5];
      v7 = v28[4] & 1;
      if ((v28[4] & 1) != 0)
        v8 = 0;
      else
        v8 = *(_DWORD *)v28;
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
      sub_1A594C924();
      result = sub_1A556C5B4(a1, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
      v9 = 0;
      v10 = 0;
      v11 = 0;
      v12 = 0;
      v13 = 0;
      v14 = 0xE000000000000000;
      v15 = 1;
      v16 = 2;
      LOBYTE(v6) = 1;
    }
    else
    {
      v9 = 0;
      v10 = 0;
      v11 = 0;
      v12 = 0;
      v8 = 0;
      v14 = 0;
      v13 = 0;
      v15 = 1;
      v7 = 1;
      v16 = 1;
    }
  }
  else
  {
    HIBYTE(v35) = BYTE4(v5) & 0x3F;
    v17 = *(_QWORD *)&v28[16];
    v18 = v29;
    v19 = v30;
    v26 = v32;
    v27 = v31;
    v24 = v34;
    v25 = v33;
    v36 = v35;
    sub_1A5560074(*(uint64_t *)v28, *(unsigned int *)&v28[8] | ((unint64_t)v28[12] << 32), (uint64_t (*)(void))sub_1A54E3414, (uint64_t)&type metadata for UID, &qword_1EE796DA8);
    v12 = v20;
    v11 = v21;
    sub_1A5560074(v17, v18 | (v19 << 32), (uint64_t (*)(void))sub_1A54E3414, (uint64_t)&type metadata for UID, &qword_1EE796DA8);
    v10 = v22;
    v9 = v23;
    v7 = v24 & 1;
    if ((v24 & 1) != 0)
      v8 = 0;
    else
      v8 = v25;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796DA8);
    sub_1A594C924();
    result = sub_1A556C5B4(a1, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E3458);
    v14 = 0xE000000000000000;
    v13 = v27;
    v15 = v26 & 1;
    if ((v26 & 1) != 0)
      v13 = 0;
    v16 = 2;
    LOBYTE(v6) = 2;
  }
  *(_BYTE *)a2 = v16;
  *(_QWORD *)(a2 + 8) = v12;
  *(_QWORD *)(a2 + 16) = v11;
  *(_QWORD *)(a2 + 24) = v10;
  *(_QWORD *)(a2 + 32) = v9;
  *(_DWORD *)(a2 + 40) = v8;
  *(_BYTE *)(a2 + 44) = v7 & 1;
  *(_QWORD *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = v14;
  *(_DWORD *)(a2 + 64) = v13;
  *(_BYTE *)(a2 + 68) = v15 & 1;
  *(_BYTE *)(a2 + 69) = v6;
  return result;
}

void *sub_1A556893C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  int v3;
  char v4;
  int v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  void *result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(__int128 *__return_ptr, uint64_t, uint64_t);
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  char v38;
  uint64_t v39;
  char v40;
  char v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  __int128 v54;
  __int128 v55;
  char v56;
  char v57;
  char v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  char v65;
  int v66;
  char v67;
  int v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v74;
  _QWORD __src[35];
  uint64_t v76;
  int v77;
  char v78;
  int v79;
  char v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  uint64_t v87;
  char v88;
  __int16 v89;
  char v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  uint64_t v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  int v106;
  char v107;
  char v108;
  uint64_t v109;
  int v110;
  char v111;
  int v112;
  char v113;
  uint64_t v114;
  char v115;
  uint64_t v116;
  _OWORD v117[3];
  uint64_t v118;
  char v119;
  _BYTE v120[88];
  uint64_t v121;
  __int128 v122[2];
  uint64_t v123;
  uint64_t v124;
  char v125;
  _BYTE v126[80];
  uint64_t v127;
  char v128[8];
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  int v133;
  char v134;
  uint64_t v135;
  uint64_t v136;
  int v137;
  char v138;
  char v139;
  _BYTE v140[64];
  _OWORD v141[3];
  _OWORD v142[3];

  v71 = *(_QWORD *)a1;
  v109 = *(_QWORD *)a1;
  v3 = *(_DWORD *)(a1 + 8);
  v4 = *(_BYTE *)(a1 + 12);
  if (v4)
    v3 = 0;
  v68 = v3;
  v110 = v3;
  v69 = v4;
  v111 = v4;
  v5 = *(_DWORD *)(a1 + 16);
  v6 = *(_BYTE *)(a1 + 20);
  if (v6)
    v5 = 0;
  v66 = v5;
  v67 = *(_BYTE *)(a1 + 20);
  v112 = v5;
  v113 = v6;
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_BYTE *)(a1 + 32);
  if (v8)
    v7 = 0;
  v64 = v7;
  v114 = v7;
  v65 = v8;
  v115 = v8;
  v116 = sub_1A5553F38(*(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144));
  v70 = a1;
  v9 = *(_QWORD *)(a1 + 152);
  v10 = *(_QWORD *)(v9 + 16);
  v72 = v116;
  if (v10)
  {
    v76 = MEMORY[0x1E0DEE9D8];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A54F4EB0(0, v10, 0);
    v11 = v76;
    result = (void *)sub_1A558A0B8(v9);
    v13 = (uint64_t)result;
    v15 = v14;
    v17 = v16 & 1;
    while ((v13 & 0x8000000000000000) == 0 && v13 < 1 << *(_BYTE *)(v9 + 32))
    {
      if (((*(_QWORD *)(v9 + 56 + (((unint64_t)v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
        goto LABEL_22;
      if (*(_DWORD *)(v9 + 36) != (_DWORD)v15)
        goto LABEL_23;
      v18 = (uint64_t *)(*(_QWORD *)(v9 + 48) + 16 * v13);
      v19 = *v18;
      v20 = v18[1];
      sub_1A54E42B4(*v18, v20);
      v76 = v11;
      v22 = *(_QWORD *)(v11 + 16);
      v21 = *(_QWORD *)(v11 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_1A54F4EB0(v21 > 1, v22 + 1, 1);
        v11 = v76;
      }
      *(_QWORD *)(v11 + 16) = v22 + 1;
      v23 = v11 + 16 * v22;
      *(_QWORD *)(v23 + 32) = v19;
      *(_QWORD *)(v23 + 40) = v20;
      result = (void *)sub_1A558A15C(v13, v15, v17 & 1, v9);
      v13 = (uint64_t)result;
      v15 = v24;
      v17 = v25 & 1;
      if (!--v10)
      {
        sub_1A5529B00((uint64_t)result, v24, v25 & 1);
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
  }
  else
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v11 = MEMORY[0x1E0DEE9D8];
LABEL_18:
    if (!*(_QWORD *)(v11 + 16))
    {
      swift_bridgeObjectRelease();
      v11 = 0;
    }
    *(_QWORD *)&v117[0] = v11;
    v26 = *(_QWORD *)(v70 + 184);
    v27 = *(_QWORD *)(v70 + 192);
    __swift_project_boxed_opaque_existential_1_0((_QWORD *)(v70 + 160), v26);
    v74 = v11;
    v28 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v27 + 88);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v28(v122, v26, v27);
    v62 = v122[1];
    v63 = v122[0];
    v60 = v124;
    v61 = v123;
    v59 = v125;
    sub_1A5539F08(v122, (uint64_t)v117 + 8);
    v29 = *(_OWORD *)(v70 + 248);
    v30 = *(_OWORD *)(v70 + 280);
    v141[2] = *(_OWORD *)(v70 + 264);
    v142[0] = v30;
    *(_QWORD *)((char *)v142 + 13) = *(_QWORD *)(v70 + 293);
    v141[0] = *(_OWORD *)(v70 + 232);
    v141[1] = v29;
    sub_1A556C45C((uint64_t)v122, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5539BC0);
    sub_1A5503358((uint64_t)v141);
    sub_1A55682E8((uint64_t)v141, (uint64_t)v126);
    v57 = v126[1];
    v58 = v126[0];
    v56 = v126[2];
    v54 = *(_OWORD *)&v126[24];
    v55 = *(_OWORD *)&v126[8];
    *(_OWORD *)&v120[16] = *(_OWORD *)&v126[16];
    *(_OWORD *)&v120[32] = *(_OWORD *)&v126[32];
    *(_OWORD *)&v120[48] = *(_OWORD *)&v126[48];
    v45 = *(_OWORD *)&v126[40];
    v48 = *(_OWORD *)&v126[56];
    *(_OWORD *)&v120[64] = *(_OWORD *)&v126[64];
    v46 = v127;
    v47 = *(_QWORD *)&v126[72];
    *(_QWORD *)&v120[80] = v127;
    *(_OWORD *)v120 = *(_OWORD *)v126;
    sub_1A556C274((uint64_t *)v126);
    v31 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v32 = sub_1A555FC10(v31);
    swift_bridgeObjectRelease();
    v121 = v32;
    sub_1A5510484(v70 + 376, (uint64_t)v140);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A556C5B4((uint64_t)v140, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1A54E4334);
    sub_1A55686C4((uint64_t)v140, (uint64_t)v128);
    v33 = v128[0];
    v53 = v128[0];
    v34 = v130;
    v35 = v131;
    v51 = v131;
    v52 = v130;
    v36 = v132;
    v37 = v133;
    v38 = v134;
    v39 = v135;
    v49 = v135;
    v50 = v132;
    v43 = v136;
    v44 = v129;
    v41 = v138;
    v42 = v137;
    v40 = v139;
    sub_1A54E311C(v70);
    __src[0] = v71;
    LODWORD(__src[1]) = v68;
    BYTE4(__src[1]) = v69;
    LODWORD(__src[2]) = v66;
    BYTE4(__src[2]) = v67;
    __src[3] = v64;
    LOBYTE(__src[4]) = v65;
    __src[5] = v72;
    __src[6] = v74;
    *(_OWORD *)&__src[7] = v63;
    *(_OWORD *)&__src[9] = v62;
    __src[11] = v61;
    __src[12] = v60;
    LOBYTE(__src[13]) = v59;
    LOBYTE(__src[14]) = v58;
    BYTE1(__src[14]) = v57;
    BYTE2(__src[14]) = v56;
    *(_OWORD *)&__src[15] = v55;
    *(_OWORD *)&__src[17] = v54;
    *(_OWORD *)&__src[19] = v45;
    *(_OWORD *)&__src[21] = v48;
    __src[23] = v47;
    __src[24] = v46;
    __src[25] = v32;
    LOBYTE(__src[26]) = v33;
    __src[27] = v44;
    __src[28] = v34;
    __src[29] = v35;
    __src[30] = v36;
    LODWORD(__src[31]) = v37;
    BYTE4(__src[31]) = v38;
    __src[32] = v39;
    __src[33] = v43;
    LODWORD(__src[34]) = v42;
    BYTE4(__src[34]) = v41;
    BYTE5(__src[34]) = v40;
    sub_1A556C2DC((uint64_t)__src);
    swift_bridgeObjectRelease();
    sub_1A556C3F4((uint64_t *)v126);
    sub_1A556C45C((uint64_t)v122, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5539C24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v76 = v109;
    v77 = v110;
    v78 = v111;
    v79 = v112;
    v80 = v113;
    v81 = v114;
    v82 = v115;
    v84 = v117[0];
    v85 = v117[1];
    v86 = v117[2];
    v83 = v116;
    v87 = v118;
    v88 = v119;
    v89 = *(_WORD *)v120;
    v90 = v120[2];
    v91 = *(_OWORD *)&v120[8];
    v92 = *(_OWORD *)&v120[24];
    v93 = *(_OWORD *)&v120[40];
    v94 = *(_OWORD *)&v120[56];
    v95 = *(_OWORD *)&v120[72];
    v96 = v121;
    v97 = v53;
    v98 = v44;
    v99 = v52;
    v100 = v51;
    v101 = v50;
    v102 = v37;
    v103 = v38;
    v104 = v49;
    v105 = v43;
    v106 = v42;
    v107 = v41;
    v108 = v40;
    sub_1A556C498((uint64_t)&v76);
    return memcpy(a2, __src, 0x116uLL);
  }
  return result;
}

void *sub_1A5568F6C@<X0>(_OWORD *a1@<X0>, void *a2@<X8>)
{
  _QWORD *v2;
  __int128 v4;
  __int128 v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  int v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  int *v31;
  unint64_t v32;
  int v33;
  int v34;
  unint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  _QWORD *v39;
  int v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  int v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *result;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t __dst[55];
  _BYTE __src[280];
  uint64_t v70;
  int v71;
  char v72;
  _QWORD v73[3];
  char v74;
  uint64_t v75;
  uint64_t v76;
  _BYTE v77[16];
  _OWORD v78[4];
  _OWORD v79[2];
  _BYTE v80[288];

  v2 = a1;
  v4 = a1[3];
  v78[2] = a1[2];
  v78[3] = v4;
  v79[0] = a1[4];
  *(_OWORD *)((char *)v79 + 9) = *(_OWORD *)((char *)a1 + 73);
  v5 = a1[1];
  v78[0] = *a1;
  v78[1] = v5;
  v6 = DWORD2(v5);
  v7 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v64 = sub_1A5561220(v7, v6);
  v65 = v8;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5522D94((uint64_t)v78);
  sub_1A556822C((uint64_t)v78, (uint64_t)&v71);
  v62 = v72;
  v63 = v71;
  v60 = v73[1];
  v61 = v73[0];
  v59 = v73[2];
  v58 = v74;
  sub_1A5522DE4((uint64_t)v78);
  v9 = v2[12];
  v66 = a2;
  if (v9)
  {
    swift_beginAccess();
    LODWORD(__dst[0]) = *(_DWORD *)(v9 + 16);
    sub_1A55032A0((uint64_t)v73, (uint64_t)v77, &qword_1EE7993A8);
    sub_1A5524B84((uint64_t)v77);
    v56 = sub_1A594B4A8();
    v11 = v10;
    sub_1A54E30E0(v9 + 24, (uint64_t)__dst);
    v57 = v11;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A556893C((uint64_t)__dst, __src);
    memcpy(__dst, __src, 0x116uLL);
    nullsub_1(__dst);
    sub_1A55032A0((uint64_t)__dst, (uint64_t)v80, &qword_1EE797658);
  }
  else
  {
    sub_1A556BBBC((uint64_t)__dst);
    sub_1A55032A0((uint64_t)v73, (uint64_t)__src, &qword_1EE7993A8);
    sub_1A5524B84((uint64_t)__src);
    sub_1A55032A0((uint64_t)__dst, (uint64_t)v80, &qword_1EE797658);
    v56 = 0;
    v57 = 0;
  }
  v12 = v2[17];
  v13 = *(_QWORD *)(v12 + 16);
  v14 = MEMORY[0x1E0DEE9D8];
  v67 = (uint64_t)v2;
  if (!v13)
  {
    sub_1A556BED8((uint64_t)v80, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1A556BBF0);
    v15 = MEMORY[0x1E0DEE9D8];
LABEL_15:
    __dst[0] = v15;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5564E14(__dst);
    swift_bridgeObjectRelease();
    v27 = __dst[0];
    if (!*(_QWORD *)(__dst[0] + 16))
    {
      swift_release();
      v27 = 0;
    }
    v28 = v2[19];
    v76 = v28;
    v29 = *(_QWORD *)(v28 + 16);
    if (v29)
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A54FCA28((uint64_t)&v76);
      __dst[0] = v14;
      sub_1A54F4E24(0, v29, 0);
      v30 = __dst[0];
      v31 = (int *)(v28 + 32);
      v32 = *(_QWORD *)(__dst[0] + 16);
      do
      {
        v34 = *v31;
        v31 += 14;
        v33 = v34;
        __dst[0] = v30;
        v35 = *(_QWORD *)(v30 + 24);
        if (v32 >= v35 >> 1)
        {
          sub_1A54F4E24(v35 > 1, v32 + 1, 1);
          v30 = __dst[0];
        }
        *(_QWORD *)(v30 + 16) = v32 + 1;
        *(_DWORD *)(v30 + 4 * v32++ + 32) = v33;
        --v29;
      }
      while (v29);
      sub_1A54F81BC((uint64_t)&v76);
      if (*(_QWORD *)(v30 + 16))
        goto LABEL_24;
    }
    else
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v30 = MEMORY[0x1E0DEE9D8];
      if (*(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16))
        goto LABEL_24;
    }
    swift_bridgeObjectRelease();
    v30 = 0;
LABEL_24:
    v36 = v2[18];
    v75 = v36;
    v37 = *(_QWORD *)(v36 + 16);
    v55 = v30;
    if (v37)
    {
      v54 = v27;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A54FCA28((uint64_t)&v75);
      v70 = v14;
      sub_1A54F4E78(0, v37, 0);
      v38 = v70;
      v39 = (_QWORD *)(v36 + 56);
      do
      {
        v40 = *((_DWORD *)v39 - 6);
        v41 = *(v39 - 2);
        v42 = *(v39 - 1);
        if (*v39)
        {
          __dst[0] = 0x656D686361747461;
          __dst[1] = 0xEB0000000020746ELL;
          sub_1A54E42B4(v41, v42);
          sub_1A54E42B4(v41, v42);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          SectionSpecifier.Part.debugDescription.getter();
          sub_1A594B5F8();
          swift_bridgeObjectRelease();
          sub_1A54E46E8(v41, v42);
          swift_bridgeObjectRelease();
          v44 = __dst[0];
          v43 = __dst[1];
        }
        else
        {
          sub_1A54E42B4(*(v39 - 2), *(v39 - 1));
          v43 = 0xE400000000000000;
          v44 = 1954047348;
        }
        v70 = v38;
        v46 = *(_QWORD *)(v38 + 16);
        v45 = *(_QWORD *)(v38 + 24);
        if (v46 >= v45 >> 1)
        {
          sub_1A54F4E78(v45 > 1, v46 + 1, 1);
          v38 = v70;
        }
        *(_QWORD *)(v38 + 16) = v46 + 1;
        v47 = v38 + 40 * v46;
        *(_DWORD *)(v47 + 32) = v40;
        v39 += 4;
        *(_QWORD *)(v47 + 40) = v41;
        *(_QWORD *)(v47 + 48) = v42;
        *(_QWORD *)(v47 + 56) = v44;
        *(_QWORD *)(v47 + 64) = v43;
        --v37;
      }
      while (v37);
      sub_1A54E31EC(v67);
      sub_1A54F81BC((uint64_t)&v75);
      v49 = v62;
      v48 = v63;
      v51 = v60;
      v50 = v61;
      v52 = v59;
      v27 = v54;
    }
    else
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A54E31EC((uint64_t)v2);
      v38 = MEMORY[0x1E0DEE9D8];
      v49 = v62;
      v48 = v63;
      v51 = v60;
      v50 = v61;
      v52 = v59;
    }
    if (!*(_QWORD *)(v38 + 16))
    {
      swift_bridgeObjectRelease();
      v38 = 0;
    }
    __dst[0] = v64;
    __dst[1] = v65;
    LODWORD(__dst[2]) = v48;
    BYTE4(__dst[2]) = v49;
    __dst[3] = v50;
    __dst[4] = v51;
    __dst[5] = v52;
    LOBYTE(__dst[6]) = v58;
    __dst[7] = v56;
    __dst[8] = v57;
    sub_1A55032A0((uint64_t)v80, (uint64_t)&__dst[9], &qword_1EE797658);
    __dst[44] = v27;
    __dst[45] = v55;
    __dst[46] = v38;
    sub_1A556BD4C((uint64_t)__dst);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A556BED8((uint64_t)v80, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1A556BF64);
    swift_bridgeObjectRelease();
    sub_1A556C0C0((uint64_t)&v71);
    swift_bridgeObjectRelease();
    sub_1A556C0E8((uint64_t)__dst);
    return memcpy(v66, __dst, 0x178uLL);
  }
  sub_1A556BED8((uint64_t)v80, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1A556BBF0);
  __dst[0] = v14;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A54F4E24(0, v13, 0);
  v15 = __dst[0];
  v16 = sub_1A558A0B8(v12);
  v18 = v17;
  v20 = v19 & 1;
  while ((v16 & 0x8000000000000000) == 0 && v16 < 1 << *(_BYTE *)(v12 + 32))
  {
    if (((*(_QWORD *)(v12 + 56 + (((unint64_t)v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      goto LABEL_40;
    if (*(_DWORD *)(v12 + 36) != (_DWORD)v18)
      goto LABEL_41;
    v21 = *(_DWORD *)(*(_QWORD *)(v12 + 48) + 4 * v16);
    __dst[0] = v15;
    v23 = *(_QWORD *)(v15 + 16);
    v22 = *(_QWORD *)(v15 + 24);
    if (v23 >= v22 >> 1)
    {
      sub_1A54F4E24(v22 > 1, v23 + 1, 1);
      v15 = __dst[0];
    }
    *(_QWORD *)(v15 + 16) = v23 + 1;
    *(_DWORD *)(v15 + 4 * v23 + 32) = v21;
    v24 = sub_1A558A15C(v16, v18, v20 & 1, v12);
    v16 = v24;
    v18 = v25;
    v20 = v26 & 1;
    if (!--v13)
    {
      sub_1A5529B00(v24, v25, v26 & 1);
      swift_bridgeObjectRelease();
      v2 = (_QWORD *)v67;
      v14 = MEMORY[0x1E0DEE9D8];
      goto LABEL_15;
    }
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  result = (void *)swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1A55695F0(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 56);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A552CF80(v2);
  return a1;
}

uint64_t sub_1A5569638(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 56);
  swift_bridgeObjectRelease();
  sub_1A55419EC(v2);
  return a1;
}

unint64_t sub_1A5569684()
{
  unint64_t result;

  result = qword_1EE7976E8;
  if (!qword_1EE7976E8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A5E24, &_s13CapturedStateVN);
    atomic_store(result, (unint64_t *)&qword_1EE7976E8);
  }
  return result;
}

uint64_t sub_1A55696C8()
{
  return sub_1A556EF2C(&qword_1EE799618, &qword_1EE799610, (uint64_t (*)(void))sub_1A55696F4);
}

unint64_t sub_1A55696F4()
{
  unint64_t result;

  result = qword_1EE7976E0;
  if (!qword_1EE7976E0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A5DFC, &_s13CapturedStateV7MailboxVN);
    atomic_store(result, (unint64_t *)&qword_1EE7976E0);
  }
  return result;
}

unint64_t sub_1A556973C()
{
  unint64_t result;

  result = qword_1EE797538;
  if (!qword_1EE797538)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A5DD4, &_s13CapturedStateV14CapturedRemoteVN);
    atomic_store(result, (unint64_t *)&qword_1EE797538);
  }
  return result;
}

uint64_t _s13CapturedStateV14CapturedRemoteVwxx(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 32);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s13CapturedStateV14CapturedRemoteVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v4)
  {
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = v4;
    v5 = *(_QWORD *)(a2 + 40);
    v6 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = v5;
    *(_QWORD *)(a1 + 48) = v6;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v7;
  }
  return a1;
}

uint64_t _s13CapturedStateV14CapturedRemoteVwca(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = (_OWORD *)(a1 + 24);
  v5 = (_OWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1A556CC64(a1 + 24);
      v7 = *(_OWORD *)(a2 + 40);
      *v4 = *v5;
      *(_OWORD *)(a1 + 40) = v7;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 40);
    *v4 = *v5;
    *(_OWORD *)(a1 + 40) = v8;
  }
  return a1;
}

__n128 __swift_memcpy56_8_0(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s13CapturedStateV14CapturedRemoteVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  if (!*(_QWORD *)(a1 + 32))
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 32);
  if (!v4)
  {
    sub_1A556CC64(a1 + 24);
LABEL_5:
    v6 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v6;
    return a1;
  }
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13CapturedStateV14CapturedRemoteVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s13CapturedStateV14CapturedRemoteVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *_s13CapturedStateV14CapturedRemoteVMa()
{
  return &_s13CapturedStateV14CapturedRemoteVN;
}

ValueMetadata *_s13CapturedStateV14CapturedRemoteV9NamespaceVMa()
{
  return &_s13CapturedStateV14CapturedRemoteV9NamespaceVN;
}

uint64_t _s13CapturedStateV7MailboxVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 112))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A5539C24(*(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), *(_QWORD *)(a1 + 160), *(_QWORD *)(a1 + 168), *(_BYTE *)(a1 + 176));
    if (*(_QWORD *)(a1 + 200) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (*(_QWORD *)(a1 + 232) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s13CapturedStateV7MailboxVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  char v28;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  v7 = *(_QWORD *)(a2 + 112);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v7)
  {
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    *(_BYTE *)(a1 + 84) = *(_BYTE *)(a2 + 84);
    *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
    *(_BYTE *)(a1 + 92) = *(_BYTE *)(a2 + 92);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
    v8 = *(_QWORD *)(a2 + 120);
    v9 = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 112) = v7;
    *(_QWORD *)(a1 + 120) = v8;
    v10 = *(_QWORD *)(a2 + 136);
    v11 = *(_QWORD *)(a2 + 144);
    v12 = *(_QWORD *)(a2 + 152);
    v13 = *(_QWORD *)(a2 + 160);
    v14 = *(_QWORD *)(a2 + 168);
    v28 = *(_BYTE *)(a2 + 176);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5539BC0(v9, v10, v11, v12, v13, v14, v28);
    *(_QWORD *)(a1 + 128) = v9;
    *(_QWORD *)(a1 + 136) = v10;
    *(_QWORD *)(a1 + 144) = v11;
    *(_QWORD *)(a1 + 152) = v12;
    *(_QWORD *)(a1 + 160) = v13;
    *(_QWORD *)(a1 + 168) = v14;
    *(_BYTE *)(a1 + 176) = v28;
    *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
    *(_WORD *)(a1 + 185) = *(_WORD *)(a2 + 185);
    v15 = *(_QWORD *)(a2 + 200);
    if (v15 == 1)
    {
      v16 = *(_OWORD *)(a2 + 208);
      *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
      *(_OWORD *)(a1 + 208) = v16;
    }
    else
    {
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      *(_QWORD *)(a1 + 200) = v15;
      v17 = *(_QWORD *)(a2 + 216);
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      *(_QWORD *)(a1 + 216) = v17;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
    v18 = *(_QWORD *)(a2 + 232);
    if (v18 == 1)
    {
      v19 = *(_OWORD *)(a2 + 240);
      *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
      *(_OWORD *)(a1 + 240) = v19;
    }
    else
    {
      *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
      *(_QWORD *)(a1 + 232) = v18;
      v20 = *(_QWORD *)(a2 + 248);
      *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
      *(_QWORD *)(a1 + 248) = v20;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
    v21 = *(_QWORD *)(a2 + 264);
    *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
    *(_QWORD *)(a1 + 264) = v21;
    *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
    *(_BYTE *)(a1 + 280) = *(_BYTE *)(a2 + 280);
    v22 = *(_QWORD *)(a2 + 296);
    *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
    *(_QWORD *)(a1 + 296) = v22;
    v23 = *(_QWORD *)(a2 + 312);
    *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
    *(_QWORD *)(a1 + 312) = v23;
    v24 = *(_DWORD *)(a2 + 320);
    *(_BYTE *)(a1 + 324) = *(_BYTE *)(a2 + 324);
    *(_DWORD *)(a1 + 320) = v24;
    v25 = *(_QWORD *)(a2 + 336);
    *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
    *(_QWORD *)(a1 + 336) = v25;
    *(_DWORD *)(a1 + 344) = *(_DWORD *)(a2 + 344);
    *(_WORD *)(a1 + 348) = *(_WORD *)(a2 + 348);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    memcpy((void *)(a1 + 72), (const void *)(a2 + 72), 0x116uLL);
  }
  v26 = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 360) = v26;
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t _s13CapturedStateV7MailboxVwca(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  _OWORD *v24;
  _OWORD *v25;
  uint64_t v26;
  __int128 v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  int v41;
  int v42;
  _OWORD *v43;
  _OWORD *v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  int v48;
  int v49;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_DWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 112);
  if (*(_QWORD *)(a1 + 112))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      v7 = *(_DWORD *)(a2 + 80);
      *(_BYTE *)(a1 + 84) = *(_BYTE *)(a2 + 84);
      *(_DWORD *)(a1 + 80) = v7;
      v8 = *(_DWORD *)(a2 + 88);
      *(_BYTE *)(a1 + 92) = *(_BYTE *)(a2 + 92);
      *(_DWORD *)(a1 + 88) = v8;
      v9 = *(_QWORD *)(a2 + 96);
      *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
      *(_QWORD *)(a1 + 96) = v9;
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      v10 = *(_QWORD *)(a2 + 128);
      v11 = *(_QWORD *)(a2 + 136);
      v12 = *(_QWORD *)(a2 + 144);
      v13 = *(_QWORD *)(a2 + 152);
      v14 = *(_QWORD *)(a2 + 160);
      v15 = *(_QWORD *)(a2 + 168);
      v16 = *(_BYTE *)(a2 + 176);
      sub_1A5539BC0(v10, v11, v12, v13, v14, v15, v16);
      v17 = *(_QWORD *)(a1 + 128);
      v18 = *(_QWORD *)(a1 + 136);
      v19 = *(_QWORD *)(a1 + 144);
      v20 = *(_QWORD *)(a1 + 152);
      v21 = *(_QWORD *)(a1 + 160);
      v22 = *(_QWORD *)(a1 + 168);
      *(_QWORD *)(a1 + 128) = v10;
      *(_QWORD *)(a1 + 136) = v11;
      *(_QWORD *)(a1 + 144) = v12;
      *(_QWORD *)(a1 + 152) = v13;
      *(_QWORD *)(a1 + 160) = v14;
      *(_QWORD *)(a1 + 168) = v15;
      v23 = *(_BYTE *)(a1 + 176);
      *(_BYTE *)(a1 + 176) = v16;
      sub_1A5539C24(v17, v18, v19, v20, v21, v22, v23);
      *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
      *(_BYTE *)(a1 + 185) = *(_BYTE *)(a2 + 185);
      *(_BYTE *)(a1 + 186) = *(_BYTE *)(a2 + 186);
      v24 = (_OWORD *)(a1 + 192);
      v25 = (_OWORD *)(a2 + 192);
      v26 = *(_QWORD *)(a2 + 200);
      if (*(_QWORD *)(a1 + 200) == 1)
      {
        if (v26 == 1)
        {
          v27 = *(_OWORD *)(a2 + 208);
          *v24 = *v25;
          *(_OWORD *)(a1 + 208) = v27;
        }
        else
        {
          *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
          *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
          *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
          *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        }
      }
      else if (v26 == 1)
      {
        sub_1A556CC64(a1 + 192);
        v39 = *(_OWORD *)(a2 + 208);
        *v24 = *v25;
        *(_OWORD *)(a1 + 208) = v39;
      }
      else
      {
        *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
        *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_bridgeObjectRelease();
        *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
        *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_bridgeObjectRelease();
      }
      v43 = (_OWORD *)(a1 + 224);
      v44 = (_OWORD *)(a2 + 224);
      v45 = *(_QWORD *)(a2 + 232);
      if (*(_QWORD *)(a1 + 232) == 1)
      {
        if (v45 == 1)
        {
          v46 = *(_OWORD *)(a2 + 240);
          *v43 = *v44;
          *(_OWORD *)(a1 + 240) = v46;
        }
        else
        {
          *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
          *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
          *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
          *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        }
      }
      else if (v45 == 1)
      {
        sub_1A556CC64(a1 + 224);
        v47 = *(_OWORD *)(a2 + 240);
        *v43 = *v44;
        *(_OWORD *)(a1 + 240) = v47;
      }
      else
      {
        *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
        *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_bridgeObjectRelease();
        *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
        *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_bridgeObjectRelease();
      }
      *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
      *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 280) = *(_BYTE *)(a2 + 280);
      *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
      *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
      *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      v48 = *(_DWORD *)(a2 + 320);
      *(_BYTE *)(a1 + 324) = *(_BYTE *)(a2 + 324);
      *(_DWORD *)(a1 + 320) = v48;
      *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
      *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      v49 = *(_DWORD *)(a2 + 344);
      *(_BYTE *)(a1 + 348) = *(_BYTE *)(a2 + 348);
      *(_DWORD *)(a1 + 344) = v49;
      *(_BYTE *)(a1 + 349) = *(_BYTE *)(a2 + 349);
      goto LABEL_28;
    }
    sub_1A556A448(a1 + 72);
LABEL_10:
    memcpy((void *)(a1 + 72), (const void *)(a2 + 72), 0x116uLL);
    goto LABEL_28;
  }
  if (!v6)
    goto LABEL_10;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v28 = *(_DWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 84) = *(_BYTE *)(a2 + 84);
  *(_DWORD *)(a1 + 80) = v28;
  v29 = *(_DWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 92) = *(_BYTE *)(a2 + 92);
  *(_DWORD *)(a1 + 88) = v29;
  v30 = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = v30;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  v31 = *(_QWORD *)(a2 + 128);
  v32 = *(_QWORD *)(a2 + 136);
  v33 = *(_QWORD *)(a2 + 144);
  v34 = *(_QWORD *)(a2 + 152);
  v35 = *(_QWORD *)(a2 + 160);
  v36 = *(_QWORD *)(a2 + 168);
  v37 = *(_BYTE *)(a2 + 176);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5539BC0(v31, v32, v33, v34, v35, v36, v37);
  *(_QWORD *)(a1 + 128) = v31;
  *(_QWORD *)(a1 + 136) = v32;
  *(_QWORD *)(a1 + 144) = v33;
  *(_QWORD *)(a1 + 152) = v34;
  *(_QWORD *)(a1 + 160) = v35;
  *(_QWORD *)(a1 + 168) = v36;
  *(_BYTE *)(a1 + 176) = v37;
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_BYTE *)(a1 + 185) = *(_BYTE *)(a2 + 185);
  *(_BYTE *)(a1 + 186) = *(_BYTE *)(a2 + 186);
  if (*(_QWORD *)(a2 + 200) == 1)
  {
    v38 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v38;
  }
  else
  {
    *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  if (*(_QWORD *)(a2 + 232) == 1)
  {
    v40 = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 240) = v40;
  }
  else
  {
    *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
    *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
    *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
    *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_BYTE *)(a1 + 280) = *(_BYTE *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  v41 = *(_DWORD *)(a2 + 320);
  *(_BYTE *)(a1 + 324) = *(_BYTE *)(a2 + 324);
  *(_DWORD *)(a1 + 320) = v41;
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  v42 = *(_DWORD *)(a2 + 344);
  *(_BYTE *)(a1 + 348) = *(_BYTE *)(a2 + 348);
  *(_DWORD *)(a1 + 344) = v42;
  *(_BYTE *)(a1 + 349) = *(_BYTE *)(a2 + 349);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_28:
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A556A448(uint64_t a1)
{
  _s13CapturedStateV7MailboxV16MailboxSyncStateVwxx(a1);
  return a1;
}

void *__swift_memcpy376_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x178uLL);
}

uint64_t _s13CapturedStateV7MailboxVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  char v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 112))
  {
    v7 = *(_QWORD *)(a2 + 112);
    if (v7)
    {
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
      *(_BYTE *)(a1 + 84) = *(_BYTE *)(a2 + 84);
      *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
      *(_BYTE *)(a1 + 92) = *(_BYTE *)(a2 + 92);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = v7;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      swift_bridgeObjectRelease();
      v8 = *(_BYTE *)(a2 + 176);
      v9 = *(_QWORD *)(a1 + 128);
      v10 = *(_QWORD *)(a1 + 136);
      v11 = *(_QWORD *)(a1 + 144);
      v12 = *(_QWORD *)(a1 + 152);
      v13 = *(_QWORD *)(a1 + 160);
      v14 = *(_QWORD *)(a1 + 168);
      v15 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = v15;
      *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
      v16 = *(_BYTE *)(a1 + 176);
      *(_BYTE *)(a1 + 176) = v8;
      sub_1A5539C24(v9, v10, v11, v12, v13, v14, v16);
      *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
      *(_BYTE *)(a1 + 185) = *(_BYTE *)(a2 + 185);
      *(_BYTE *)(a1 + 186) = *(_BYTE *)(a2 + 186);
      if (*(_QWORD *)(a1 + 200) != 1)
      {
        v17 = *(_QWORD *)(a2 + 200);
        if (v17 != 1)
        {
          *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
          *(_QWORD *)(a1 + 200) = v17;
          swift_bridgeObjectRelease();
          v19 = *(_QWORD *)(a2 + 216);
          *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
          *(_QWORD *)(a1 + 216) = v19;
          swift_bridgeObjectRelease();
LABEL_10:
          if (*(_QWORD *)(a1 + 232) != 1)
          {
            v20 = *(_QWORD *)(a2 + 232);
            if (v20 != 1)
            {
              *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
              *(_QWORD *)(a1 + 232) = v20;
              swift_bridgeObjectRelease();
              v22 = *(_QWORD *)(a2 + 248);
              *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
              *(_QWORD *)(a1 + 248) = v22;
              swift_bridgeObjectRelease();
              goto LABEL_15;
            }
            sub_1A556CC64(a1 + 224);
          }
          v21 = *(_OWORD *)(a2 + 240);
          *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
          *(_OWORD *)(a1 + 240) = v21;
LABEL_15:
          v23 = *(_QWORD *)(a2 + 264);
          *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
          *(_QWORD *)(a1 + 264) = v23;
          swift_bridgeObjectRelease();
          *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
          swift_bridgeObjectRelease();
          *(_BYTE *)(a1 + 280) = *(_BYTE *)(a2 + 280);
          v24 = *(_QWORD *)(a2 + 296);
          *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
          *(_QWORD *)(a1 + 296) = v24;
          swift_bridgeObjectRelease();
          v25 = *(_QWORD *)(a2 + 312);
          *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
          *(_QWORD *)(a1 + 312) = v25;
          swift_bridgeObjectRelease();
          *(_DWORD *)(a1 + 320) = *(_DWORD *)(a2 + 320);
          *(_BYTE *)(a1 + 324) = *(_BYTE *)(a2 + 324);
          v26 = *(_QWORD *)(a2 + 336);
          *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
          *(_QWORD *)(a1 + 336) = v26;
          swift_bridgeObjectRelease();
          *(_DWORD *)(a1 + 344) = *(_DWORD *)(a2 + 344);
          *(_WORD *)(a1 + 348) = *(_WORD *)(a2 + 348);
          goto LABEL_16;
        }
        sub_1A556CC64(a1 + 192);
      }
      v18 = *(_OWORD *)(a2 + 208);
      *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
      *(_OWORD *)(a1 + 208) = v18;
      goto LABEL_10;
    }
    sub_1A556A448(a1 + 72);
  }
  memcpy((void *)(a1 + 72), (const void *)(a2 + 72), 0x116uLL);
LABEL_16:
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13CapturedStateV7MailboxVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 376))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s13CapturedStateV7MailboxVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 376) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 376) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s13CapturedStateV7MailboxVMa()
{
  return &_s13CapturedStateV7MailboxVN;
}

uint64_t _s13CapturedStateV7MailboxV16MailboxSyncStateVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A5539C24(*(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_BYTE *)(a1 + 104));
  if (*(_QWORD *)(a1 + 128) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + 160) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s13CapturedStateV7MailboxV16MailboxSyncStateVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 64);
  v7 = *(_QWORD *)(a2 + 72);
  v8 = *(_QWORD *)(a2 + 80);
  v9 = *(_QWORD *)(a2 + 88);
  v10 = *(_QWORD *)(a2 + 96);
  v11 = *(_BYTE *)(a2 + 104);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5539BC0(v5, v6, v7, v8, v9, v10, v11);
  *(_QWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 72) = v7;
  *(_QWORD *)(a1 + 80) = v8;
  *(_QWORD *)(a1 + 88) = v9;
  *(_QWORD *)(a1 + 96) = v10;
  *(_BYTE *)(a1 + 104) = v11;
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_WORD *)(a1 + 113) = *(_WORD *)(a2 + 113);
  v12 = *(_QWORD *)(a2 + 128);
  if (v12 == 1)
  {
    v13 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v13;
  }
  else
  {
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = v12;
    v14 = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 144) = v14;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  v15 = *(_QWORD *)(a2 + 160);
  if (v15 == 1)
  {
    v16 = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 168) = v16;
  }
  else
  {
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 160) = v15;
    v17 = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 176) = v17;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  v18 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v18;
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
  v19 = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = v19;
  v20 = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = v20;
  v21 = *(_DWORD *)(a2 + 248);
  *(_BYTE *)(a1 + 252) = *(_BYTE *)(a2 + 252);
  *(_DWORD *)(a1 + 248) = v21;
  v22 = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = v22;
  *(_DWORD *)(a1 + 272) = *(_DWORD *)(a2 + 272);
  *(_WORD *)(a1 + 276) = *(_WORD *)(a2 + 276);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t _s13CapturedStateV7MailboxV16MailboxSyncStateVwca(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _OWORD *v21;
  _OWORD *v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  _OWORD *v26;
  _OWORD *v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  int v31;
  int v32;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_DWORD *)(a1 + 8) = v4;
  v5 = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_DWORD *)(a1 + 16) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  v8 = *(_QWORD *)(a2 + 64);
  v9 = *(_QWORD *)(a2 + 72);
  v10 = *(_QWORD *)(a2 + 80);
  v11 = *(_QWORD *)(a2 + 88);
  v12 = *(_QWORD *)(a2 + 96);
  v13 = *(_BYTE *)(a2 + 104);
  sub_1A5539BC0(v7, v8, v9, v10, v11, v12, v13);
  v14 = *(_QWORD *)(a1 + 56);
  v15 = *(_QWORD *)(a1 + 64);
  v16 = *(_QWORD *)(a1 + 72);
  v17 = *(_QWORD *)(a1 + 80);
  v18 = *(_QWORD *)(a1 + 88);
  v19 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 56) = v7;
  *(_QWORD *)(a1 + 64) = v8;
  *(_QWORD *)(a1 + 72) = v9;
  *(_QWORD *)(a1 + 80) = v10;
  *(_QWORD *)(a1 + 88) = v11;
  *(_QWORD *)(a1 + 96) = v12;
  v20 = *(_BYTE *)(a1 + 104);
  *(_BYTE *)(a1 + 104) = v13;
  sub_1A5539C24(v14, v15, v16, v17, v18, v19, v20);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_BYTE *)(a1 + 113) = *(_BYTE *)(a2 + 113);
  *(_BYTE *)(a1 + 114) = *(_BYTE *)(a2 + 114);
  v21 = (_OWORD *)(a1 + 120);
  v22 = (_OWORD *)(a2 + 120);
  v23 = *(_QWORD *)(a2 + 128);
  if (*(_QWORD *)(a1 + 128) == 1)
  {
    if (v23 == 1)
    {
      v24 = *(_OWORD *)(a2 + 136);
      *v21 = *v22;
      *(_OWORD *)(a1 + 136) = v24;
    }
    else
    {
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
  }
  else if (v23 == 1)
  {
    sub_1A556CC64(a1 + 120);
    v25 = *(_OWORD *)(a2 + 136);
    *v21 = *v22;
    *(_OWORD *)(a1 + 136) = v25;
  }
  else
  {
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_bridgeObjectRelease();
  }
  v26 = (_OWORD *)(a1 + 152);
  v27 = (_OWORD *)(a2 + 152);
  v28 = *(_QWORD *)(a2 + 160);
  if (*(_QWORD *)(a1 + 160) == 1)
  {
    if (v28 == 1)
    {
      v29 = *(_OWORD *)(a2 + 168);
      *v26 = *v27;
      *(_OWORD *)(a1 + 168) = v29;
    }
    else
    {
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
  }
  else if (v28 == 1)
  {
    sub_1A556CC64(a1 + 152);
    v30 = *(_OWORD *)(a2 + 168);
    *v26 = *v27;
    *(_OWORD *)(a1 + 168) = v30;
  }
  else
  {
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v31 = *(_DWORD *)(a2 + 248);
  *(_BYTE *)(a1 + 252) = *(_BYTE *)(a2 + 252);
  *(_DWORD *)(a1 + 248) = v31;
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v32 = *(_DWORD *)(a2 + 272);
  *(_BYTE *)(a1 + 276) = *(_BYTE *)(a2 + 276);
  *(_DWORD *)(a1 + 272) = v32;
  *(_BYTE *)(a1 + 277) = *(_BYTE *)(a2 + 277);
  return a1;
}

void *__swift_memcpy278_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x116uLL);
}

uint64_t _s13CapturedStateV7MailboxV16MailboxSyncStateVwta(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  v4 = *(_BYTE *)(a2 + 104);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *(_QWORD *)(a1 + 64);
  v7 = *(_QWORD *)(a1 + 72);
  v8 = *(_QWORD *)(a1 + 80);
  v9 = *(_QWORD *)(a1 + 88);
  v10 = *(_QWORD *)(a1 + 96);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  v11 = *(_BYTE *)(a1 + 104);
  *(_BYTE *)(a1 + 104) = v4;
  sub_1A5539C24(v5, v6, v7, v8, v9, v10, v11);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_BYTE *)(a1 + 113) = *(_BYTE *)(a2 + 113);
  *(_BYTE *)(a1 + 114) = *(_BYTE *)(a2 + 114);
  if (*(_QWORD *)(a1 + 128) == 1)
    goto LABEL_4;
  v12 = *(_QWORD *)(a2 + 128);
  if (v12 == 1)
  {
    sub_1A556CC64(a1 + 120);
LABEL_4:
    v13 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v13;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v12;
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v14;
  swift_bridgeObjectRelease();
LABEL_6:
  if (*(_QWORD *)(a1 + 160) != 1)
  {
    v15 = *(_QWORD *)(a2 + 160);
    if (v15 != 1)
    {
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = v15;
      swift_bridgeObjectRelease();
      v17 = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 176) = v17;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1A556CC64(a1 + 152);
  }
  v16 = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = v16;
LABEL_11:
  v18 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v18;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
  v19 = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = v19;
  swift_bridgeObjectRelease();
  v20 = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = v20;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
  *(_BYTE *)(a1 + 252) = *(_BYTE *)(a2 + 252);
  v21 = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = v21;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 272) = *(_DWORD *)(a2 + 272);
  *(_WORD *)(a1 + 276) = *(_WORD *)(a2 + 276);
  return a1;
}

uint64_t _s13CapturedStateV7MailboxV16MailboxSyncStateVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 278))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s13CapturedStateV7MailboxV16MailboxSyncStateVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 264) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 276) = 0;
    *(_DWORD *)(result + 272) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 278) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 278) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s13CapturedStateV7MailboxV16MailboxSyncStateVMa()
{
  return &_s13CapturedStateV7MailboxV16MailboxSyncStateVN;
}

ValueMetadata *_s13CapturedStateV7MailboxV25PendingPersistenceUpdatesV23MessagesPendingDownloadVMa()
{
  return &_s13CapturedStateV7MailboxV25PendingPersistenceUpdatesV23MessagesPendingDownloadVN;
}

uint64_t _s13CapturedStateVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s13CapturedStateVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  v8 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v8;
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v9 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v9;
  v10 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v10;
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t _s13CapturedStateVwca(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy152_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  result = *(__n128 *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t _s13CapturedStateVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13CapturedStateVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 152))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s13CapturedStateVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 152) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 152) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s13CapturedStateVMa()
{
  return &_s13CapturedStateVN;
}

unint64_t sub_1A556B52C()
{
  unint64_t result;

  result = qword_1EE797540;
  if (!qword_1EE797540)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A679C, &_s13CapturedStateV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE797540);
  }
  return result;
}

unint64_t sub_1A556B570()
{
  unint64_t result;

  result = qword_1EE798350;
  if (!qword_1EE798350)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for Environment.CapturedValue, &type metadata for Environment.CapturedValue);
    atomic_store(result, (unint64_t *)&qword_1EE798350);
  }
  return result;
}

unint64_t sub_1A556B5B4()
{
  unint64_t result;

  result = qword_1EE797570;
  if (!qword_1EE797570)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A6774, &_s13CapturedStateV14PathAttributesVN);
    atomic_store(result, (unint64_t *)&qword_1EE797570);
  }
  return result;
}

unint64_t sub_1A556B5F8()
{
  unint64_t result;

  result = qword_1EE7974D0;
  if (!qword_1EE7974D0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A674C, &_s13CapturedStateV19CapturedSyncRequestVN);
    atomic_store(result, (unint64_t *)&qword_1EE7974D0);
  }
  return result;
}

unint64_t sub_1A556B63C()
{
  unint64_t result;

  result = qword_1EE7975D0;
  if (!qword_1EE7975D0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A6724, &_s13CapturedStateV17MailboxesToSelectVN);
    atomic_store(result, (unint64_t *)&qword_1EE7975D0);
  }
  return result;
}

unint64_t sub_1A556B680()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE7992C0;
  if (!qword_1EE7992C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract_0(&qword_1EE7992B8);
    v2[0] = MEMORY[0x1E0DEA970];
    v2[1] = MEMORY[0x1E0DEB420];
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEA0B8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE7992C0);
  }
  return result;
}

unint64_t sub_1A556B6E4()
{
  unint64_t result;

  result = qword_1EE797C40;
  if (!qword_1EE797C40)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A66FC, &type metadata for RunningTasksCapturedValue);
    atomic_store(result, (unint64_t *)&qword_1EE797C40);
  }
  return result;
}

unint64_t sub_1A556B728()
{
  unint64_t result;

  result = qword_1EE797660;
  if (!qword_1EE797660)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A66AC, &_s13CapturedStateV7MailboxV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE797660);
  }
  return result;
}

unint64_t sub_1A556B76C()
{
  unint64_t result;

  result = qword_1EE7975F0;
  if (!qword_1EE7975F0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A6684, &_s13CapturedStateV7MailboxV17MailboxOfInterestVN);
    atomic_store(result, (unint64_t *)&qword_1EE7975F0);
  }
  return result;
}

unint64_t sub_1A556B7B0()
{
  unint64_t result;

  result = qword_1EE797650;
  if (!qword_1EE797650)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A5D84, &_s13CapturedStateV7MailboxV16MailboxSyncStateVN);
    atomic_store(result, (unint64_t *)&qword_1EE797650);
  }
  return result;
}

unint64_t sub_1A556B7F4()
{
  unint64_t result;

  result = qword_1EE797690;
  if (!qword_1EE797690)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A665C, &_s13CapturedStateV7MailboxV21UserInitiatedDownloadVN);
    atomic_store(result, (unint64_t *)&qword_1EE797690);
  }
  return result;
}

unint64_t sub_1A556B838()
{
  unint64_t result;

  result = qword_1EE7974D8;
  if (!qword_1EE7974D8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A660C, &_s13CapturedStateV14CapturedRemoteV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7974D8);
  }
  return result;
}

unint64_t sub_1A556B87C()
{
  unint64_t result;

  result = qword_1EE797508;
  if (!qword_1EE797508)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A65E4, &_s13CapturedStateV14CapturedRemoteV6ServerVN);
    atomic_store(result, (unint64_t *)&qword_1EE797508);
  }
  return result;
}

unint64_t sub_1A556B8C0()
{
  unint64_t result;

  result = qword_1EE797530;
  if (!qword_1EE797530)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A65BC, &_s13CapturedStateV14CapturedRemoteV7MailboxVN);
    atomic_store(result, (unint64_t *)&qword_1EE797530);
  }
  return result;
}

unint64_t sub_1A556B904()
{
  unint64_t result;

  result = qword_1EE7A0440;
  if (!qword_1EE7A0440)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A5DAC, &_s13CapturedStateV14CapturedRemoteV9NamespaceVN);
    atomic_store(result, (unint64_t *)&qword_1EE7A0440);
  }
  return result;
}

unint64_t sub_1A556B948()
{
  unint64_t result;

  result = qword_1EE7A0428;
  if (!qword_1EE7A0428)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A656C, &_s13CapturedStateV14CapturedRemoteV9NamespaceV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7A0428);
  }
  return result;
}

unint64_t sub_1A556B98C()
{
  unint64_t result;

  result = qword_1EE7975F8;
  if (!qword_1EE7975F8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A651C, &_s13CapturedStateV7MailboxV16MailboxSyncStateV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE7975F8);
  }
  return result;
}

uint64_t sub_1A556B9D0(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract_0(a2);
    v7 = a3;
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEAF10], v6, &v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A556BA24()
{
  unint64_t result;

  result = qword_1EE7963F8;
  if (!qword_1EE7963F8)
  {
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0CB0350], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1EE7963F8);
  }
  return result;
}

unint64_t sub_1A556BA68()
{
  unint64_t result;

  result = qword_1EE797AA8;
  if (!qword_1EE797AA8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A4580, &type metadata for PendingServerResponses.CapturedValue);
    atomic_store(result, (unint64_t *)&qword_1EE797AA8);
  }
  return result;
}

unint64_t sub_1A556BAAC()
{
  unint64_t result;

  result = qword_1EE7976D8;
  if (!qword_1EE7976D8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A64F4, &_s13CapturedStateV7MailboxV25PendingPersistenceUpdatesVN);
    atomic_store(result, (unint64_t *)&qword_1EE7976D8);
  }
  return result;
}

unint64_t sub_1A556BAF0()
{
  unint64_t result;

  result = qword_1EE797628;
  if (!qword_1EE797628)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A64CC, &_s13CapturedStateV7MailboxV16MailboxSyncStateV13UserInitiatedVN);
    atomic_store(result, (unint64_t *)&qword_1EE797628);
  }
  return result;
}

unint64_t sub_1A556BB34()
{
  unint64_t result;

  result = qword_1EE797648;
  if (!qword_1EE797648)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A64A4, &_s13CapturedStateV7MailboxV16MailboxSyncStateV15MissingMessagesVN);
    atomic_store(result, (unint64_t *)&qword_1EE797648);
  }
  return result;
}

unint64_t sub_1A556BB78()
{
  unint64_t result;

  result = qword_1EE797698;
  if (!qword_1EE797698)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59A6454, &_s13CapturedStateV7MailboxV25PendingPersistenceUpdatesV23MessagesPendingDownloadV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE797698);
  }
  return result;
}

double sub_1A556BBBC(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_QWORD *)(a1 + 270) = 0;
  return result;
}

uint64_t sub_1A556BBF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t result;

  if (a6)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5539BC0(a8, a9, a10, a11, a12, a13, a14);
    sub_1A556BD18(a16, a17);
    sub_1A556BD18(a20, a21);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return result;
}

uint64_t sub_1A556BD18(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return result;
}

uint64_t sub_1A556BD4C(uint64_t a1)
{
  uint64_t v2;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v16 = *(_QWORD *)(a1 + 80);
  v17 = *(_QWORD *)(a1 + 72);
  v14 = *(_QWORD *)(a1 + 96);
  v15 = *(_QWORD *)(a1 + 88);
  v12 = *(_QWORD *)(a1 + 112);
  v13 = *(_QWORD *)(a1 + 104);
  v2 = *(_QWORD *)(a1 + 128);
  v11 = *(_QWORD *)(a1 + 120);
  v9 = *(_OWORD *)(a1 + 152);
  v10 = *(_OWORD *)(a1 + 136);
  v7 = *(_OWORD *)(a1 + 184);
  v8 = *(_OWORD *)(a1 + 168);
  v5 = *(_OWORD *)(a1 + 216);
  v6 = *(_OWORD *)(a1 + 200);
  v4 = *(_OWORD *)(a1 + 232);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A556BBF0(v17, v16, v15, v14, v13, v12, v11, v2, v10, *((uint64_t *)&v10 + 1), v9, *((uint64_t *)&v9 + 1), v8, SBYTE8(v8), v7, *((uint64_t *)&v7 + 1), v6, *((uint64_t *)&v6 + 1), v5,
    *((uint64_t *)&v5 + 1),
    v4);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t sub_1A556BED8(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))
{
  __int128 v4;
  __int128 v5;

  v4 = *(_OWORD *)(a1 + 224);
  v5 = *(_OWORD *)(a1 + 240);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    v4,
    *((_QWORD *)&v4 + 1),
    v5,
    *((_QWORD *)&v5 + 1),
    *(_QWORD *)(a1 + 256),
    *(_QWORD *)(a1 + 264),
    *(unsigned int *)(a1 + 272) | ((unint64_t)*(unsigned __int16 *)(a1 + 276) << 32));
  return a1;
}

uint64_t sub_1A556BF64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t result;

  if (a6)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A5539C24(a8, a9, a10, a11, a12, a13, a14);
    sub_1A556C08C(a16, a17);
    sub_1A556C08C(a20, a21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A556C08C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A556C0C0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A556C0E8(uint64_t a1)
{
  uint64_t v2;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v16 = *(_QWORD *)(a1 + 80);
  v17 = *(_QWORD *)(a1 + 72);
  v14 = *(_QWORD *)(a1 + 96);
  v15 = *(_QWORD *)(a1 + 88);
  v12 = *(_QWORD *)(a1 + 112);
  v13 = *(_QWORD *)(a1 + 104);
  v2 = *(_QWORD *)(a1 + 128);
  v11 = *(_QWORD *)(a1 + 120);
  v9 = *(_OWORD *)(a1 + 152);
  v10 = *(_OWORD *)(a1 + 136);
  v7 = *(_OWORD *)(a1 + 184);
  v8 = *(_OWORD *)(a1 + 168);
  v5 = *(_OWORD *)(a1 + 216);
  v6 = *(_OWORD *)(a1 + 200);
  v4 = *(_OWORD *)(a1 + 232);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A556BF64(v17, v16, v15, v14, v13, v12, v11, v2, v10, *((uint64_t *)&v10 + 1), v9, *((uint64_t *)&v9 + 1), v8, SBYTE8(v8), v7, *((uint64_t *)&v7 + 1), v6, *((uint64_t *)&v6 + 1), v5,
    *((uint64_t *)&v5 + 1),
    v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

