@implementation ZL14GetEncodingMapv

uint64_t *___ZL14GetEncodingMapv_block_invoke()
{
  uint64_t v0;
  char **v1;
  char *v2;
  uint64_t v3;
  char **v4;
  char *v6;

  v0 = 0;
  v1 = kEncodingInfoTable;
  do
  {
    v2 = *v1;
    v1 += 3;
    v6 = v2;
    *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = v0++;
  }
  while (v0 != 75);
  v3 = 0;
  v4 = &off_1E4F12980;
  do
  {
    v6 = *v4;
    if (!std::__hash_table<std::__hash_value_type<char const*,Encoding>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseHash,CStringAlnumCaseEqual,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseEqual,CStringAlnumCaseHash,true>,std::allocator<std::__hash_value_type<char const*,Encoding>>>::find<char const*>(&GetEncodingMap(void)::encoding_map, &v6))*(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = v3;
    ++v3;
    v4 += 3;
  }
  while (v3 != 75);
  v6 = "5601";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 16;
  v6 = "646";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 24;
  v6 = "852";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 39;
  v6 = "866";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 42;
  v6 = "8859-1";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 0;
  v6 = "ansi-1251";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 26;
  v6 = "ansi_x3.4-1968";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 24;
  v6 = "arabic";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 5;
  v6 = "ascii";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 0;
  v6 = "ascii-7-bit";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 24;
  v6 = "asmo-708";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 5;
  v6 = "bhaskar";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 55;
  v6 = "big5";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 13;
  v6 = "big5-cp950";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 20;
  v6 = "big5-hkscs";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 47;
  v6 = "chinese";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 14;
  v6 = "cns";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 19;
  v6 = "cns11643";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 19;
  v6 = "cp1250";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 29;
  v6 = "cp1251";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 26;
  v6 = "cp1252";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 27;
  v6 = "cp1253";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 41;
  v6 = "cp1254";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 31;
  v6 = "cp1255";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 36;
  v6 = "cp1256";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 35;
  v6 = "cp1257";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 32;
  v6 = "cp819";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 0;
  v6 = "cp852";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 39;
  v6 = "cp866";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 42;
  v6 = "cp-866";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 42;
  v6 = "cp874";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 34;
  v6 = "cp932";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 21;
  v6 = "cp950";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 20;
  v6 = "csbig5";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 13;
  v6 = "cseucjpkdfmtjapanese";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 10;
  v6 = "cseuckr";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 16;
  v6 = "csgb2312";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 14;
  v6 = "csibm852";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 39;
  v6 = "csibm866";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 42;
  v6 = "csiso2022jp";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 12;
  v6 = "csiso2022kr";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 44;
  v6 = "csiso58gb231280";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 14;
  v6 = "csiso88598i";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 37;
  v6 = "csisolatin1";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 0;
  v6 = "csisolatin2";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 1;
  v6 = "csisolatin3";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 2;
  v6 = "csisolatin4";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 3;
  v6 = "csisolatin5";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 8;
  v6 = "csisolatin6";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 9;
  v6 = "csisolatinarabic";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 5;
  v6 = "csisolatincyrillic";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 4;
  v6 = "csisolatingreek";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 6;
  v6 = "csisolatinhebrew";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 7;
  v6 = "csksc56011987";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 16;
  v6 = "csmacintosh";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 53;
  v6 = "csn-369103";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 40;
  v6 = "csshiftjis";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 11;
  v6 = "csunicode";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 57;
  v6 = "csunicode11";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 57;
  v6 = "csunicode11utf7";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 54;
  v6 = "csunicodeascii";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 57;
  v6 = "csunicodelatin1";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 57;
  v6 = "cyrillic";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 4;
  v6 = "ecma-114";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 5;
  v6 = "ecma-118";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 6;
  v6 = "elot_928";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 6;
  v6 = "euc";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 18;
  v6 = "euc-cn";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 15;
  v6 = "euc-dec";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 18;
  v6 = "euc-jp";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 10;
  v6 = "euc-kr";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 16;
  v6 = "eucgb2312_cn";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 14;
  v6 = "gb";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 14;
  v6 = "gb18030";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 46;
  v6 = "gb2132";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 14;
  v6 = "gb2312";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 14;
  v6 = "gb_2312-80";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 14;
  v6 = "gbk";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 45;
  v6 = "greek";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 6;
  v6 = "greek8";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 6;
  v6 = "hebrew";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 7;
  v6 = "htchanakya";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 56;
  v6 = "hz-gb-2312";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 62;
  v6 = "ibm819";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 0;
  v6 = "ibm852";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 39;
  v6 = "ibm874";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 34;
  v6 = "iso-10646";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 57;
  v6 = "iso-10646-j-1";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 57;
  v6 = "iso-10646-ucs-2";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 17;
  v6 = "iso-10646-ucs-4";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 59;
  v6 = "iso-10646-ucs-basic";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 57;
  v6 = "iso-10646-unicode-latin1";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 57;
  v6 = "iso-2022-cn";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 48;
  v6 = "iso-2022-jp";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 12;
  v6 = "iso-2022-kr";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 44;
  v6 = "iso-8559-1";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 0;
  v6 = "iso-874";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 34;
  v6 = "iso-8858-1";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 0;
  v6 = "iso-8859-0";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 30;
  v6 = "iso-8859-1";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 0;
  v6 = "iso-8859-10";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 9;
  v6 = "iso-8859-11";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 33;
  v6 = "iso-8859-13";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 43;
  v6 = "iso-8859-15";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 30;
  v6 = "iso-8859-2";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 1;
  v6 = "iso-8859-3";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 2;
  v6 = "iso-8859-4";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 3;
  v6 = "iso-8859-5";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 4;
  v6 = "iso-8859-6";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 5;
  v6 = "iso-8859-7";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 6;
  v6 = "iso-8859-8";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 7;
  v6 = "iso-8859-8-i";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 37;
  v6 = "iso-8859-9";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 8;
  v6 = "iso-9959-1";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 0;
  v6 = "iso-ir-100";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 0;
  v6 = "iso-ir-101";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 1;
  v6 = "iso-ir-109";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 2;
  v6 = "iso-ir-110";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 3;
  v6 = "iso-ir-126";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 6;
  v6 = "iso-ir-127";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 5;
  v6 = "iso-ir-138";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 7;
  v6 = "iso-ir-144";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 4;
  v6 = "iso-ir-148";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 8;
  v6 = "iso-ir-149";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 16;
  v6 = "iso-ir-157";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 9;
  v6 = "iso-ir-58";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 14;
  v6 = "iso-latin-1";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 0;
  v6 = "iso_2022-cn";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 48;
  v6 = "iso_2022-kr";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 44;
  v6 = "iso_8859-1";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 0;
  v6 = "iso_8859-10:1992";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 9;
  v6 = "iso_8859-11";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 33;
  v6 = "iso_8859-13";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 43;
  v6 = "iso_8859-15";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 30;
  v6 = "iso_8859-1:1987";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 0;
  v6 = "iso_8859-2";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 1;
  v6 = "iso_8859-2:1987";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 1;
  v6 = "iso_8859-3";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 2;
  v6 = "iso_8859-3:1988";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 2;
  v6 = "iso_8859-4";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 3;
  v6 = "iso_8859-4:1988";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 3;
  v6 = "iso_8859-5";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 4;
  v6 = "iso_8859-5:1988";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 4;
  v6 = "iso_8859-6";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 5;
  v6 = "iso_8859-6:1987";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 5;
  v6 = "iso_8859-7";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 6;
  v6 = "iso_8859-7:1987";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 6;
  v6 = "iso_8859-8";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 7;
  v6 = "iso_8859-8:1988:";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 7;
  v6 = "iso_8859-9";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 8;
  v6 = "iso_8859-9:1989";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 8;
  v6 = "jagran";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 52;
  v6 = "jis";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 12;
  v6 = "koi8-cs";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 40;
  v6 = "koi8-r";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 25;
  v6 = "koi8-ru";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 28;
  v6 = "koi8-u";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 28;
  v6 = "koi8r";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 25;
  v6 = "koi8u";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 28;
  v6 = "korean";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 16;
  v6 = "ks-c-5601";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 16;
  v6 = "ks-c-5601-1987";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 16;
  v6 = "ks_c_5601-1989";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 16;
  v6 = "ksc";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 16;
  v6 = "l1";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 0;
  v6 = "l2";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 1;
  v6 = "l3";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 2;
  v6 = "l4";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 3;
  v6 = "l5";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 8;
  v6 = "l6";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 9;
  v6 = "latin-1";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 0;
  v6 = "latin1";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 0;
  v6 = "latin2";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 1;
  v6 = "latin3";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 2;
  v6 = "latin4";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 3;
  v6 = "latin5";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 8;
  v6 = "latin6";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 9;
  v6 = "mac";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 53;
  v6 = "macintosh";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 53;
  v6 = "macintosh-roman";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 53;
  v6 = "ms932";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 21;
  v6 = "ms_kanji";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 21;
  v6 = "shift-jis";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 11;
  v6 = "shift_jis";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 11;
  v6 = "sjis";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 11;
  v6 = "sjs";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 11;
  v6 = "sun_eu_greek";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 6;
  v6 = "tab";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 51;
  v6 = "tam";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 50;
  v6 = "tis-620";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 33;
  v6 = "tscii";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 49;
  v6 = "un";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 23;
  v6 = "unicode";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 17;
  v6 = "unicode-1-1-utf-7";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 54;
  v6 = "unicode-1-1-utf-8";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 22;
  v6 = "unicode-2-0-utf-7";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 54;
  v6 = "unknown";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 23;
  v6 = "us";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 0;
  v6 = "us-ascii";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 0;
  v6 = "utf-16be";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 57;
  v6 = "utf-16le";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 58;
  v6 = "utf-32be";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 59;
  v6 = "utf-32le";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 60;
  v6 = "utf-7";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 54;
  v6 = "utf-8";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 22;
  v6 = "utf7";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 54;
  v6 = "utf8";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 22;
  v6 = "visual";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 38;
  v6 = "win-1250";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 29;
  v6 = "win-1251";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 26;
  v6 = "window-874";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 34;
  v6 = "windows-1250";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 29;
  v6 = "windows-1251";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 26;
  v6 = "windows-1252";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 27;
  v6 = "windows-1253";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 41;
  v6 = "windows-1254";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 31;
  v6 = "windows-1255";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 36;
  v6 = "windows-1256";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 35;
  v6 = "windows-1257";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 32;
  v6 = "windows-31j";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 21;
  v6 = "windows-874";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 34;
  v6 = "windows-936";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 45;
  v6 = "x-big5";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 13;
  v6 = "x-binaryenc";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 61;
  v6 = "x-cp1250";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 29;
  v6 = "x-cp1251";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 26;
  v6 = "x-cp1252";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 27;
  v6 = "x-cp1253";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 41;
  v6 = "x-cp1254";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 31;
  v6 = "x-cp1255";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 36;
  v6 = "x-cp1256";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 35;
  v6 = "x-cp1257";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 32;
  v6 = "x-euc-jp";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 10;
  v6 = "x-euc-tw";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 19;
  v6 = "x-gbk";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 45;
  v6 = "x-iso-10646-ucs-2-be";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 57;
  v6 = "x-iso-10646-ucs-2-le";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 58;
  v6 = "x-iso-10646-ucs-4-be";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 59;
  v6 = "x-iso-10646-ucs-4-le";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 60;
  v6 = "x-jis";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 12;
  v6 = "x-mac-roman";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 53;
  v6 = "x-shift_jis";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 11;
  v6 = "x-sjis";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 11;
  v6 = "x-unicode-2-0-utf-7";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 54;
  v6 = "x-utf8utf8";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 63;
  v6 = "x-x-big5";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 13;
  v6 = "zh_cn.euc";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 14;
  v6 = "zh_tw-big5";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 13;
  v6 = "zh_tw-euc";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 19;
  v6 = "";
  return std::__hash_table<std::__hash_value_type<char const*,Encoding>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseHash,CStringAlnumCaseEqual,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseEqual,CStringAlnumCaseHash,true>,std::allocator<std::__hash_value_type<char const*,Encoding>>>::__erase_unique<char const*>(&GetEncodingMap(void)::encoding_map, &v6);
}

@end
