void sub_1A56614DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  Swift::Int v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  void *v57;
  Swift::Int v58;
  Swift::Int v59;
  char v60;
  char v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  char v65;
  char v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  uint64_t v70;
  Swift::Int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  Swift::Int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unsigned int v80;
  unsigned int v81;
  Swift::Int v82;
  unsigned int v83;
  int v84;
  Swift::Int v85;
  char v86;
  Swift::Int v87;
  int v88;
  unint64_t v89;
  Swift::Int v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  Swift::String v101;
  Swift::String v102;
  Swift::String v103;
  Swift::String v104;

  OUTLINED_FUNCTION_65();
  a39 = v42;
  a40 = v45;
  v47 = v46;
  v97 = v48;
  v98 = v49;
  v99 = v50;
  v51 = a41;
  v52 = a41 + 8;
  v53 = *(unsigned int *)(a41 + 20);
  v55 = *(_QWORD *)(v54 + 16);
  v96 = v55;
  v92 = v44;
  v91 = v56;
  if (v55)
  {
    v57 = v43;
    OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_3_3();
    OUTLINED_FUNCTION_24(v99, (unint64_t)v57, v52);
    v59 = v58;
    v61 = v60;
    OUTLINED_FUNCTION_9_2();
    if ((v61 & 1) != 0)
    {
      v101._countAndFlagsBits = v99;
      v101._object = v57;
      v59 = OUTLINED_FUNCTION_14_0(v101, v53);
    }
    OUTLINED_FUNCTION_5_1();
    OUTLINED_FUNCTION_2_4();
    OUTLINED_FUNCTION_201();
    v62 = v92;
    v55 = v96;
    if (v63)
    {
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
      goto LABEL_54;
    }
    *(_DWORD *)(v51 + 20) = v53;
    if ((v91 & 1) == 0)
      goto LABEL_13;
  }
  else
  {
    v62 = v44;
    v59 = 0;
    v64 = OUTLINED_FUNCTION_92();
    if ((v65 & 1) == 0)
      goto LABEL_40;
  }
  LODWORD(v41) = v53;
  OUTLINED_FUNCTION_9_3(40, 0xE100000000000000, v52);
  if ((v66 & 1) != 0)
  {
    v102._countAndFlagsBits = 40;
    v102._object = (void *)0xE100000000000000;
    OUTLINED_FUNCTION_14_0(v102, v53);
  }
  OUTLINED_FUNCTION_89();
  if (v63)
    goto LABEL_55;
  *(_DWORD *)(v51 + 20) = v53;
  v68 = __OFADD__(v59, v67);
  v59 += v67;
  if (!v68)
  {
    if (v55)
    {
LABEL_13:
      v89 = v47;
      v90 = v59;
      v100 = v55 - 1;
      OUTLINED_FUNCTION_145();
      v93 = v69;
      OUTLINED_FUNCTION_90();
      v70 = 0;
      v71 = 0;
      v72 = 32;
      v94 = v52;
      v95 = v51;
      do
      {
        v73 = OUTLINED_FUNCTION_13_0();
        sub_1A56BABD4(v73);
        v75 = v71 + v74;
        if (__OFADD__(v71, v74))
        {
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
          goto LABEL_50;
        }
        v41 = *(unsigned int *)(v51 + 20);
        if (v70 >= v100)
        {
          OUTLINED_FUNCTION_19();
          v82 = 0;
        }
        else
        {
          if ((v98 & 0x1000000000000000) != 0)
          {
            OUTLINED_FUNCTION_12_1();
            OUTLINED_FUNCTION_0_10();
            OUTLINED_FUNCTION_277();
            v82 = OUTLINED_FUNCTION_14_0(v103, v85);
            OUTLINED_FUNCTION_19();
            OUTLINED_FUNCTION_4_4();
            OUTLINED_FUNCTION_15_1();
          }
          else
          {
            if ((v98 & 0x2000000000000000) != 0)
            {
              a25 = v97;
              a26 = a17;
              OUTLINED_FUNCTION_12_1();
              OUTLINED_FUNCTION_0_10();
              OUTLINED_FUNCTION_69();
              OUTLINED_FUNCTION_116((uint64_t)&a25, a16);
              v81 = v83;
            }
            else
            {
              v76 = v97 & 0xFFFFFFFFFFFFLL;
              v77 = v93;
              if ((v97 & 0x1000000000000000) == 0)
                v77 = sub_1A594C7D4();
              if (v77)
                v78 = v77 + v76;
              else
                v78 = 0;
              OUTLINED_FUNCTION_12_1();
              OUTLINED_FUNCTION_0_10();
              OUTLINED_FUNCTION_69();
              v79 = v78;
              v52 = v94;
              OUTLINED_FUNCTION_133(v77, v79, v41);
              v81 = v80;
              v51 = v95;
            }
            OUTLINED_FUNCTION_19();
            OUTLINED_FUNCTION_4_4();
            OUTLINED_FUNCTION_15_1();
            OUTLINED_FUNCTION_55();
            v82 = v81;
          }
          v84 = *(_DWORD *)(v51 + 20);
          v41 = (v84 + v82);
          v55 = v96;
          if (__CFADD__(v84, (_DWORD)v82))
            goto LABEL_49;
          *(_DWORD *)(v51 + 20) = v41;
        }
        v68 = __OFADD__(v75, v82);
        v71 = v75 + v82;
        if (v68)
          goto LABEL_48;
        ++v70;
        v72 += 16;
      }
      while (v55 != v70);
      OUTLINED_FUNCTION_52();
      v59 = v90 + v71;
      if (__OFADD__(v90, v71))
        goto LABEL_53;
      v47 = v89;
      v62 = v92;
      if ((v91 & 1) != 0)
        goto LABEL_35;
      v64 = 0;
      goto LABEL_40;
    }
LABEL_35:
    v41 = v41;
    OUTLINED_FUNCTION_9_3(41, 0xE100000000000000, v52);
    if ((v86 & 1) != 0)
    {
      v104._countAndFlagsBits = 41;
      v104._object = (void *)0xE100000000000000;
      OUTLINED_FUNCTION_14_0(v104, v41);
    }
    OUTLINED_FUNCTION_89();
    if (v63)
      goto LABEL_57;
    *(_DWORD *)(v51 + 20) = v41;
LABEL_40:
    v68 = __OFADD__(v59, v64);
    v87 = v59 + v64;
    if (v68)
    {
LABEL_50:
      __break(1u);
    }
    else
    {
      if (v55)
      {
        OUTLINED_FUNCTION_29();
        OUTLINED_FUNCTION_0_10();
        OUTLINED_FUNCTION_1_2();
        OUTLINED_FUNCTION_75(v62, v47, v52);
        OUTLINED_FUNCTION_31();
        OUTLINED_FUNCTION_2_4();
        OUTLINED_FUNCTION_4_4();
        OUTLINED_FUNCTION_140();
        if (v63)
        {
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
          goto LABEL_56;
        }
        *(_DWORD *)(v51 + 20) = v88;
      }
      else
      {
        v41 = 0;
      }
      if (!__OFADD__(v87, v41))
      {
        OUTLINED_FUNCTION_21_0();
        return;
      }
    }
    __break(1u);
    goto LABEL_52;
  }
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
}

void sub_1A5661874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, int a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, Swift::Int a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,Swift::Int a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  Swift::Int v37;
  uint64_t v38;
  Swift::Int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  Swift::Int v44;
  uint64_t v45;
  uint64_t v46;
  Swift::Int v47;
  unint64_t v48;
  void *v49;
  unint64_t v50;
  int v51;
  void *v52;
  uint64_t v53;
  Swift::Int v54;
  char v55;
  Swift::Int v56;
  char v57;
  int v58;
  uint64_t v59;
  Swift::Int v60;
  unint64_t v61;
  Swift::String v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  char v67;
  Swift::Int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  int v74;
  BOOL v75;
  char v76;
  int v77;
  Swift::Int v78;
  int v79;
  Swift::Int v80;
  uint64_t v81;
  Swift::String v82;
  Swift::String v83;
  Swift::String v84;
  Swift::String v85;

  OUTLINED_FUNCTION_225();
  a36 = v45;
  a37 = v46;
  OUTLINED_FUNCTION_151();
  LODWORD(v47) = *(_DWORD *)(v40 + 20);
  OUTLINED_FUNCTION_278();
  if (v41)
  {
    v50 = v48;
    OUTLINED_FUNCTION_13_1();
    a18 = v37;
    OUTLINED_FUNCTION_155();
    OUTLINED_FUNCTION_18_0();
    OUTLINED_FUNCTION_8_2(a21, v50, v43);
    OUTLINED_FUNCTION_252();
    OUTLINED_FUNCTION_52();
    if ((v43 & 1) != 0)
      v44 = OUTLINED_FUNCTION_28(a21, v50);
    OUTLINED_FUNCTION_19_0();
    swift_release();
    v43 = v37;
    v51 = *(_DWORD *)(v40 + 20);
    v47 = (v51 + v44);
    if (__CFADD__(v51, (_DWORD)v44))
    {
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
      goto LABEL_74;
    }
    v80 = v44;
    *(_DWORD *)(v40 + 20) = v47;
    v52 = a10;
    if ((a12 & 1) == 0)
      goto LABEL_13;
  }
  else
  {
    v52 = v49;
    v80 = 0;
    v53 = OUTLINED_FUNCTION_152();
    LODWORD(v54) = v47;
    if ((v55 & 1) == 0)
      goto LABEL_53;
  }
  OUTLINED_FUNCTION_64(40);
  if ((v57 & 1) != 0)
  {
    v82._countAndFlagsBits = 40;
    v82._object = (void *)0xE100000000000000;
    v56 = OUTLINED_FUNCTION_35(v82, v47);
  }
  v58 = *(_DWORD *)(v40 + 20);
  v47 = (v58 + v56);
  if (__CFADD__(v58, (_DWORD)v56))
    goto LABEL_73;
  *(_DWORD *)(v40 + 20) = v47;
  v39 = v80 + v56;
  if (!__OFADD__(v80, v56))
  {
    LODWORD(v54) = v58 + v56;
    v80 += v56;
    if (v41)
    {
LABEL_13:
      OUTLINED_FUNCTION_56_0();
      v59 = 0;
      v60 = 0;
      v54 = v47;
      v81 = v40;
      do
      {
        v61 = *(_QWORD *)(a22 + 8 * v59 + 32);
        if ((v61 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_63:
          __break(1u);
LABEL_64:
          __break(1u);
LABEL_65:
          __break(1u);
LABEL_66:
          __break(1u);
LABEL_67:
          __break(1u);
          goto LABEL_68;
        }
        if (HIDWORD(v61))
          goto LABEL_63;
        LODWORD(a23) = *(_QWORD *)(a22 + 8 * v59 + 32);
        v62._countAndFlagsBits = sub_1A594CC9C();
        LOBYTE(v38) = v62._object;
        if (((uint64_t)v62._object & 0x1000000000000000) != 0)
        {
          v37 = OUTLINED_FUNCTION_35(v62, v54);
          OUTLINED_FUNCTION_55();
        }
        else
        {
          if (((uint64_t)v62._object & 0x2000000000000000) != 0)
          {
            OUTLINED_FUNCTION_174();
          }
          else
          {
            if ((v62._countAndFlagsBits & 0x1000000000000000) != 0)
              OUTLINED_FUNCTION_198();
            else
              v63 = OUTLINED_FUNCTION_108();
            v64 = OUTLINED_FUNCTION_138(v63);
          }
          OUTLINED_FUNCTION_123(v64, v65);
          LODWORD(v37) = v66;
          OUTLINED_FUNCTION_55();
          v37 = v37;
        }
        OUTLINED_FUNCTION_246();
        if (v67)
          goto LABEL_64;
        *(_DWORD *)(v40 + 20) = v54;
        v68 = v60 + v37;
        if (__OFADD__(v60, v37))
          goto LABEL_65;
        if (v59 >= a21)
        {
          v37 = 0;
        }
        else
        {
          v38 = *(_QWORD *)(v40 + 32);
          if ((v42 & 0x1000000000000000) != 0)
          {
            OUTLINED_FUNCTION_0_10();
            OUTLINED_FUNCTION_11_1();
            v83._countAndFlagsBits = a20;
            v83._object = (void *)v42;
            v37 = OUTLINED_FUNCTION_35(v83, v54);
            OUTLINED_FUNCTION_36();
            OUTLINED_FUNCTION_4_4();
          }
          else
          {
            if ((v42 & 0x2000000000000000) != 0)
            {
              a23 = a20;
              a24 = a18;
              OUTLINED_FUNCTION_0_10();
              OUTLINED_FUNCTION_11_1();
              OUTLINED_FUNCTION_4_3();
              OUTLINED_FUNCTION_123((uint64_t)&a23, a17);
              LODWORD(v37) = v74;
            }
            else
            {
              OUTLINED_FUNCTION_259();
              if ((v70 & 0x1000000000000000) == 0)
                v37 = OUTLINED_FUNCTION_226();
              if (v37)
                v71 = v37 + v69;
              else
                v71 = 0;
              OUTLINED_FUNCTION_0_10();
              OUTLINED_FUNCTION_11_1();
              OUTLINED_FUNCTION_4_3();
              v72 = v71;
              v43 = v41;
              OUTLINED_FUNCTION_124(v37, v72, v54);
              LODWORD(v37) = v73;
              v41 = v40;
              v40 = v81;
            }
            OUTLINED_FUNCTION_36();
            OUTLINED_FUNCTION_4_4();
            OUTLINED_FUNCTION_41();
            v37 = v37;
          }
          OUTLINED_FUNCTION_246();
          if (v67)
            goto LABEL_67;
          *(_DWORD *)(v40 + 20) = v54;
        }
        v60 = v68 + v37;
        if (__OFADD__(v68, v37))
          goto LABEL_66;
        ++v59;
      }
      while (v41 != v59);
      OUTLINED_FUNCTION_243();
      v75 = __OFADD__(v80, v60);
      v39 = v80 + v60;
      if (v75)
        goto LABEL_71;
      if ((a12 & 1) != 0)
      {
        v52 = a10;
        goto LABEL_48;
      }
      v53 = 0;
      v52 = a10;
      goto LABEL_53;
    }
LABEL_48:
    v37 = v54;
    OUTLINED_FUNCTION_64(41);
    if ((v76 & 1) != 0)
    {
      v84._countAndFlagsBits = 41;
      v84._object = (void *)0xE100000000000000;
      v53 = OUTLINED_FUNCTION_35(v84, v54);
    }
    v77 = *(_DWORD *)(v40 + 20);
    LODWORD(v54) = v77 + v53;
    if (__CFADD__(v77, (_DWORD)v53))
      goto LABEL_75;
    *(_DWORD *)(v40 + 20) = v54;
LABEL_53:
    v78 = v39 + v53;
    if (__OFADD__(v39, v53))
    {
LABEL_68:
      __break(1u);
    }
    else
    {
      if (v41)
      {
        OUTLINED_FUNCTION_29();
        OUTLINED_FUNCTION_12_1();
        OUTLINED_FUNCTION_0_10();
        OUTLINED_FUNCTION_100(a9, (unint64_t)v52, v43, v54);
        OUTLINED_FUNCTION_31();
        if ((v38 & 1) != 0)
        {
          v85._countAndFlagsBits = a9;
          v85._object = v52;
          v37 = OUTLINED_FUNCTION_14_0(v85, v54);
        }
        OUTLINED_FUNCTION_4_4();
        OUTLINED_FUNCTION_15_1();
        OUTLINED_FUNCTION_200();
        if (v67)
          goto LABEL_72;
        *(_DWORD *)(v40 + 20) = v79;
      }
      else
      {
        v37 = 0;
      }
      if (!__OFADD__(v78, v37))
      {
        OUTLINED_FUNCTION_63();
        return;
      }
    }
    __break(1u);
    goto LABEL_70;
  }
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
}

void sub_1A5661C38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, int a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, Swift::Int a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,Swift::Int a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  Swift::Int v37;
  Swift::Int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  Swift::Int v44;
  uint64_t v45;
  uint64_t v46;
  Swift::Int v47;
  unint64_t v48;
  void *v49;
  unint64_t v50;
  int v51;
  void *v52;
  uint64_t v53;
  Swift::UInt32 v54;
  char v55;
  char v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  Swift::Int v60;
  Swift::String v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  BOOL v66;
  Swift::Int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  int v73;
  char v74;
  int v75;
  Swift::Int v76;
  int v77;
  Swift::Int v78;
  uint64_t v79;
  Swift::String v80;
  Swift::String v81;
  Swift::String v82;
  Swift::String v83;

  OUTLINED_FUNCTION_225();
  a36 = v45;
  a37 = v46;
  OUTLINED_FUNCTION_151();
  v47 = *(unsigned int *)(v40 + 20);
  OUTLINED_FUNCTION_278();
  if (v41)
  {
    v50 = v48;
    OUTLINED_FUNCTION_13_1();
    a18 = v38;
    OUTLINED_FUNCTION_155();
    OUTLINED_FUNCTION_18_0();
    OUTLINED_FUNCTION_24(a21, v50, v43);
    OUTLINED_FUNCTION_252();
    OUTLINED_FUNCTION_17();
    if ((v43 & 1) != 0)
      v44 = OUTLINED_FUNCTION_33(a21, v50);
    OUTLINED_FUNCTION_19_0();
    swift_release();
    v43 = v38;
    v51 = *(_DWORD *)(v40 + 20);
    v47 = (v51 + v44);
    if (__CFADD__(v51, (_DWORD)v44))
    {
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
      goto LABEL_70;
    }
    v78 = v44;
    *(_DWORD *)(v40 + 20) = v47;
    v52 = a10;
    if ((a12 & 1) == 0)
      goto LABEL_13;
  }
  else
  {
    v52 = v49;
    v78 = 0;
    v53 = OUTLINED_FUNCTION_179();
    v54 = v47;
    if ((v55 & 1) == 0)
      goto LABEL_51;
  }
  OUTLINED_FUNCTION_64(40);
  if ((v56 & 1) != 0)
  {
    v80._countAndFlagsBits = 40;
    v80._object = (void *)0xE100000000000000;
    OUTLINED_FUNCTION_35(v80, v47);
  }
  OUTLINED_FUNCTION_199();
  if (v58)
    goto LABEL_69;
  *(_DWORD *)(v40 + 20) = v47;
  v37 = v78 + v57;
  if (!__OFADD__(v78, v57))
  {
    v54 = v47;
    v78 += v57;
    if (v41)
    {
LABEL_13:
      OUTLINED_FUNCTION_56_0();
      v59 = 0;
      v60 = 0;
      v54 = v47;
      v79 = v40;
      do
      {
        a23 = *(_QWORD *)(a22 + 8 * v59 + 32);
        v61._countAndFlagsBits = sub_1A594CC9C();
        LOBYTE(v39) = v61._object;
        if (((uint64_t)v61._object & 0x1000000000000000) != 0)
        {
          v38 = OUTLINED_FUNCTION_35(v61, v47);
          OUTLINED_FUNCTION_55();
        }
        else
        {
          if (((uint64_t)v61._object & 0x2000000000000000) != 0)
          {
            OUTLINED_FUNCTION_174();
          }
          else
          {
            if ((v61._countAndFlagsBits & 0x1000000000000000) != 0)
              OUTLINED_FUNCTION_198();
            else
              v62 = OUTLINED_FUNCTION_108();
            v63 = OUTLINED_FUNCTION_138(v62);
          }
          OUTLINED_FUNCTION_123(v63, v64);
          LODWORD(v38) = v65;
          OUTLINED_FUNCTION_55();
          v38 = v38;
        }
        OUTLINED_FUNCTION_246();
        if (v58)
        {
          __break(1u);
LABEL_61:
          __break(1u);
LABEL_62:
          __break(1u);
LABEL_63:
          __break(1u);
          goto LABEL_64;
        }
        *(_DWORD *)(v40 + 20) = v47;
        v66 = __OFADD__(v60, v38);
        v67 = v60 + v38;
        if (v66)
          goto LABEL_61;
        if (v59 >= a21)
        {
          v38 = 0;
        }
        else
        {
          v39 = *(_QWORD *)(v40 + 32);
          if ((v42 & 0x1000000000000000) != 0)
          {
            OUTLINED_FUNCTION_0_10();
            OUTLINED_FUNCTION_11_1();
            v81._countAndFlagsBits = a20;
            v81._object = (void *)v42;
            v38 = OUTLINED_FUNCTION_35(v81, v47);
            OUTLINED_FUNCTION_36();
            OUTLINED_FUNCTION_4_4();
          }
          else
          {
            if ((v42 & 0x2000000000000000) != 0)
            {
              a23 = a20;
              a24 = a18;
              OUTLINED_FUNCTION_0_10();
              OUTLINED_FUNCTION_11_1();
              OUTLINED_FUNCTION_4_3();
              OUTLINED_FUNCTION_123((uint64_t)&a23, a17);
              LODWORD(v38) = v73;
            }
            else
            {
              OUTLINED_FUNCTION_259();
              if ((v69 & 0x1000000000000000) == 0)
                v38 = OUTLINED_FUNCTION_226();
              if (v38)
                v70 = v38 + v68;
              else
                v70 = 0;
              OUTLINED_FUNCTION_0_10();
              OUTLINED_FUNCTION_11_1();
              OUTLINED_FUNCTION_4_3();
              v71 = v70;
              v43 = v41;
              OUTLINED_FUNCTION_124(v38, v71, v47);
              LODWORD(v38) = v72;
              v41 = v40;
              v40 = v79;
            }
            OUTLINED_FUNCTION_36();
            OUTLINED_FUNCTION_4_4();
            OUTLINED_FUNCTION_41();
            v38 = v38;
          }
          OUTLINED_FUNCTION_246();
          if (v58)
            goto LABEL_63;
          *(_DWORD *)(v40 + 20) = v47;
        }
        v66 = __OFADD__(v67, v38);
        v60 = v67 + v38;
        if (v66)
          goto LABEL_62;
        ++v59;
      }
      while (v41 != v59);
      OUTLINED_FUNCTION_243();
      v66 = __OFADD__(v78, v60);
      v37 = v78 + v60;
      if (v66)
        goto LABEL_67;
      if ((a12 & 1) != 0)
      {
        v52 = a10;
        goto LABEL_46;
      }
      v53 = 0;
      v52 = a10;
      goto LABEL_51;
    }
LABEL_46:
    v38 = v54;
    OUTLINED_FUNCTION_64(41);
    if ((v74 & 1) != 0)
    {
      v82._countAndFlagsBits = 41;
      v82._object = (void *)0xE100000000000000;
      v53 = OUTLINED_FUNCTION_35(v82, v54);
    }
    v75 = *(_DWORD *)(v40 + 20);
    v54 = v75 + v53;
    if (__CFADD__(v75, (_DWORD)v53))
      goto LABEL_71;
    *(_DWORD *)(v40 + 20) = v54;
LABEL_51:
    v66 = __OFADD__(v37, v53);
    v76 = v37 + v53;
    if (v66)
    {
LABEL_64:
      __break(1u);
    }
    else
    {
      if (v41)
      {
        OUTLINED_FUNCTION_29();
        OUTLINED_FUNCTION_12_1();
        OUTLINED_FUNCTION_0_10();
        OUTLINED_FUNCTION_100(a9, (unint64_t)v52, v43, v54);
        OUTLINED_FUNCTION_31();
        if ((v39 & 1) != 0)
        {
          v83._countAndFlagsBits = a9;
          v83._object = v52;
          v38 = OUTLINED_FUNCTION_14_0(v83, v54);
        }
        OUTLINED_FUNCTION_4_4();
        OUTLINED_FUNCTION_15_1();
        OUTLINED_FUNCTION_200();
        if (v58)
          goto LABEL_68;
        *(_DWORD *)(v40 + 20) = v77;
      }
      else
      {
        v38 = 0;
      }
      if (!__OFADD__(v76, v38))
      {
        OUTLINED_FUNCTION_63();
        return;
      }
    }
    __break(1u);
    goto LABEL_66;
  }
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
}

#error "1A5662174: call analysis failed (funcsize=266)"

void sub_1A5662410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  Swift::Int v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  Swift::Int v59;
  Swift::Int v60;
  char v61;
  char v62;
  int v63;
  unint64_t v64;
  uint64_t v65;
  char v66;
  char v67;
  uint64_t v68;
  char v69;
  BOOL v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  Swift::Int v75;
  unint64_t *v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  Swift::Int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  Swift::Int v86;
  unsigned int v87;
  unsigned int v88;
  int v89;
  Swift::String v90;
  Swift::Int v91;
  char v92;
  uint64_t v93;
  Swift::Int v94;
  int v95;
  Swift::Int v96;
  uint64_t v97;
  char v98;
  unint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  Swift::String v107;

  OUTLINED_FUNCTION_130();
  a37 = v40;
  a38 = v44;
  v97 = v45;
  v105 = v46;
  v106 = v47;
  v48 = a39;
  v49 = a39 + 8;
  v50 = *(unsigned int *)(a39 + 20);
  v99 = v43;
  v52 = *(_QWORD *)(v51 + 16);
  v104 = v52;
  v98 = v53;
  if (v52)
  {
    v54 = v42;
    v55 = v41;
    OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_1_2();
    OUTLINED_FUNCTION_3_3();
    v56 = v55;
    v57 = OUTLINED_FUNCTION_263();
    OUTLINED_FUNCTION_24(v57, v58, v49);
    v60 = v59;
    v62 = v61;
    OUTLINED_FUNCTION_9_2();
    if ((v62 & 1) != 0)
    {
      v107._countAndFlagsBits = v56;
      v107._object = v54;
      v60 = OUTLINED_FUNCTION_50(v107, v50);
    }
    OUTLINED_FUNCTION_5_1();
    OUTLINED_FUNCTION_2_4();
    v63 = *(_DWORD *)(v48 + 20);
    LODWORD(v50) = v63 + v60;
    v52 = v104;
    v64 = v99;
    if (__CFADD__(v63, (_DWORD)v60))
    {
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
      goto LABEL_55;
    }
    *(_DWORD *)(v48 + 20) = v50;
    if ((v98 & 1) == 0)
      goto LABEL_13;
  }
  else
  {
    v64 = v43;
    v60 = 0;
    v65 = OUTLINED_FUNCTION_92();
    if ((v66 & 1) == 0)
      goto LABEL_41;
  }
  LODWORD(v39) = v50;
  OUTLINED_FUNCTION_9_3(40, 0xE100000000000000, v49);
  if ((v67 & 1) != 0)
    OUTLINED_FUNCTION_34(40, 0xE100000000000000);
  OUTLINED_FUNCTION_89();
  if (v69)
    goto LABEL_56;
  *(_DWORD *)(v48 + 20) = v50;
  v70 = __OFADD__(v60, v68);
  v60 += v68;
  if (!v70)
  {
    if (v52)
    {
LABEL_13:
      v96 = v60;
      v103 = v49;
      v71 = v52 - 1;
      OUTLINED_FUNCTION_186();
      v100 = (char *)&a24 + v72;
      v101 = v73;
      v74 = 0;
      v75 = 0;
      v76 = (unint64_t *)(OUTLINED_FUNCTION_60() + 40);
      v102 = v52 - 1;
      do
      {
        v77 = *(v76 - 1);
        v78 = *v76;
        OUTLINED_FUNCTION_13_0();
        sub_1A56BA418(v77, v78);
        v80 = v75 + v79;
        if (__OFADD__(v75, v79))
        {
          __break(1u);
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
          goto LABEL_51;
        }
        v39 = *(unsigned int *)(v48 + 20);
        if (v74 >= v71)
        {
          OUTLINED_FUNCTION_19();
          v86 = 0;
        }
        else
        {
          if ((v106 & 0x1000000000000000) != 0)
          {
            OUTLINED_FUNCTION_1_2();
            OUTLINED_FUNCTION_12_1();
            OUTLINED_FUNCTION_277();
            v86 = ByteBuffer._setStringSlowpath(_:at:)(v90, v91);
            OUTLINED_FUNCTION_19();
            OUTLINED_FUNCTION_15_1();
            OUTLINED_FUNCTION_2_4();
          }
          else
          {
            if ((v106 & 0x2000000000000000) != 0)
            {
              a24 = v105;
              a25 = v101;
              OUTLINED_FUNCTION_1_2();
              OUTLINED_FUNCTION_12_1();
              OUTLINED_FUNCTION_69();
              v84 = &a24;
              v85 = (uint64_t)v100;
            }
            else
            {
              v81 = a15;
              v82 = a16;
              if ((v105 & 0x1000000000000000) == 0)
                v82 = OUTLINED_FUNCTION_108();
              if (v82)
                v83 = v82 + v81;
              else
                v83 = 0;
              OUTLINED_FUNCTION_1_2();
              OUTLINED_FUNCTION_12_1();
              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
              v84 = (uint64_t *)v82;
              v85 = v83;
            }
            OUTLINED_FUNCTION_240((uint64_t)v84, v85, v39);
            v88 = v87;
            OUTLINED_FUNCTION_19();
            OUTLINED_FUNCTION_15_1();
            OUTLINED_FUNCTION_2_4();
            OUTLINED_FUNCTION_55();
            v86 = v88;
          }
          v89 = *(_DWORD *)(v48 + 20);
          v39 = (v89 + v86);
          v52 = v104;
          v71 = v102;
          if (__CFADD__(v89, (_DWORD)v86))
            goto LABEL_50;
          *(_DWORD *)(v48 + 20) = v39;
        }
        v75 = v80 + v86;
        if (__OFADD__(v80, v86))
          goto LABEL_49;
        v76 += 2;
        ++v74;
      }
      while (v52 != v74);
      OUTLINED_FUNCTION_77();
      v60 = v96 + v75;
      if (__OFADD__(v96, v75))
        goto LABEL_54;
      if ((v98 & 1) != 0)
      {
        v64 = v99;
        v49 = v103;
        goto LABEL_36;
      }
      v65 = 0;
      v64 = v99;
      v49 = v103;
      goto LABEL_41;
    }
LABEL_36:
    v39 = v39;
    OUTLINED_FUNCTION_9_3(41, 0xE100000000000000, v49);
    if ((v92 & 1) != 0)
      OUTLINED_FUNCTION_34(41, 0xE100000000000000);
    OUTLINED_FUNCTION_89();
    if (v69)
      goto LABEL_58;
    *(_DWORD *)(v48 + 20) = v39;
LABEL_41:
    v93 = v49;
    v94 = v60 + v65;
    if (__OFADD__(v60, v65))
    {
LABEL_51:
      __break(1u);
    }
    else
    {
      if (v52)
      {
        OUTLINED_FUNCTION_29();
        OUTLINED_FUNCTION_0_10();
        OUTLINED_FUNCTION_1_2();
        OUTLINED_FUNCTION_75(v97, v64, v93);
        OUTLINED_FUNCTION_31();
        OUTLINED_FUNCTION_2_4();
        OUTLINED_FUNCTION_4_4();
        OUTLINED_FUNCTION_140();
        if (v69)
        {
LABEL_55:
          __break(1u);
LABEL_56:
          __break(1u);
          goto LABEL_57;
        }
        *(_DWORD *)(v48 + 20) = v95;
      }
      else
      {
        v39 = 0;
      }
      if (!__OFADD__(v94, v39))
      {
        OUTLINED_FUNCTION_43();
        return;
      }
    }
    __break(1u);
    goto LABEL_53;
  }
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
}

void sub_1A56627A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  Swift::Int v12;
  Swift::Int v13;
  char v14;
  char v15;
  Swift::Int v16;
  int v17;
  uint64_t v18;
  Swift::Int v19;
  Swift::Int v20;
  uint64_t v21;
  unint64_t v22;
  Swift::Int v23;
  char v24;
  Swift::Int v25;
  uint64_t v26;
  int v27;
  Swift::Int v28;
  Swift::Int v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  Swift::Int v44;
  Swift::Int v45;
  char v46;
  char v47;
  Swift::Int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  unsigned int v54;
  Swift::String v55;
  uint64_t v56;
  int v57;
  BOOL v58;
  uint64_t v59;
  unint64_t v60;
  Swift::Int v61;
  char v62;
  Swift::Int v63;
  int v64;
  uint64_t v65;
  unint64_t v66;
  Swift::Int v67;
  char v68;
  char v69;
  int v70;
  BOOL v71;
  int v72;
  Swift::Int v74;
  Swift::Int v76;
  uint64_t v78;
  Swift::Int v79;
  Swift::Int at;
  uint64_t v81;
  _QWORD v82[9];
  Swift::String v83;
  Swift::String v84;
  Swift::String v85;
  Swift::String v86;

  v9 = a9 + 8;
  v78 = *(_QWORD *)(a1 + 16);
  if (v78)
  {
    OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_0_10();
    OUTLINED_FUNCTION_18_0();
    v10 = OUTLINED_FUNCTION_215();
    OUTLINED_FUNCTION_8_2(v10, v11, v9);
    v13 = v12;
    v15 = v14;
    OUTLINED_FUNCTION_9_2();
    if ((v15 & 1) != 0)
    {
      v83._countAndFlagsBits = OUTLINED_FUNCTION_160();
      v13 = OUTLINED_FUNCTION_88(v83, v16);
    }
    OUTLINED_FUNCTION_19_0();
    OUTLINED_FUNCTION_4_4();
    OUTLINED_FUNCTION_153();
    v74 = v13;
    if (__CFADD__(v17, (_DWORD)v13))
    {
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
    *(_DWORD *)(v18 + 20) = v17 + v13;
    if ((a8 & 1) == 0)
      goto LABEL_14;
  }
  else
  {
    v74 = 0;
    v19 = 0;
    v20 = 0;
    if ((a8 & 1) == 0)
      goto LABEL_40;
  }
  v21 = OUTLINED_FUNCTION_158();
  OUTLINED_FUNCTION_8_2(v21, v22, v9);
  if ((v24 & 1) != 0)
  {
    v84._countAndFlagsBits = OUTLINED_FUNCTION_150();
    v23 = OUTLINED_FUNCTION_88(v84, v25);
  }
  v26 = a9;
  v27 = *(_DWORD *)(a9 + 20);
  if (__CFADD__(v27, (_DWORD)v23))
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  *(_DWORD *)(a9 + 20) = v27 + v23;
  v28 = v74 + v23;
  if (!__OFADD__(v74, v23))
  {
    if (!v78)
    {
LABEL_28:
      v59 = OUTLINED_FUNCTION_170();
      OUTLINED_FUNCTION_8_2(v59, v60, v9);
      if ((v62 & 1) != 0)
      {
        v85._countAndFlagsBits = OUTLINED_FUNCTION_135();
        v61 = OUTLINED_FUNCTION_88(v85, v63);
        v26 = a9;
      }
      v64 = *(_DWORD *)(v26 + 20);
      v54 = v64 + v61;
      if (__CFADD__(v64, (_DWORD)v61))
        goto LABEL_51;
      *(_DWORD *)(v26 + 20) = v54;
      goto LABEL_33;
    }
    v74 += v23;
LABEL_14:
    v81 = 0;
    v29 = 0;
    v30 = (uint64_t *)(_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0() + 48);
    do
    {
      v32 = *(v30 - 2);
      v31 = *(v30 - 1);
      v33 = *v30;
      v34 = v30[1];
      v36 = v30[2];
      v35 = v30[3];
      v37 = v30[4];
      v38 = v30[5];
      v82[0] = v32;
      v82[1] = v31;
      v82[2] = v33;
      v82[3] = v34;
      v82[4] = v36;
      v82[5] = v35;
      v82[6] = v37;
      v82[7] = v38;
      v39 = OUTLINED_FUNCTION_157();
      sub_1A5666830(v39, v40, v41, v42, v43);
      v44 = sub_1A56D2864((uint64_t)v82, a9);
      if (__OFADD__(v29, v44))
      {
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }
      v79 = v29 + v44;
      at = *(unsigned int *)(a9 + 20);
      if (v81 >= v78 - 1)
      {
        v49 = OUTLINED_FUNCTION_157();
        sub_1A5666830(v49, v50, v51, v52, v53);
        v48 = 0;
        v54 = at;
      }
      else
      {
        OUTLINED_FUNCTION_184();
        OUTLINED_FUNCTION_12_1();
        OUTLINED_FUNCTION_155();
        sub_1A56814E0(a4, (unint64_t)a5, a9 + 8, at);
        v76 = v45;
        v47 = v46;
        OUTLINED_FUNCTION_72();
        if ((v47 & 1) != 0)
        {
          v55._countAndFlagsBits = a4;
          v55._object = a5;
          v48 = ByteBuffer._setStringSlowpath(_:at:)(v55, at);
          OUTLINED_FUNCTION_15_1();
          swift_release();
        }
        else
        {
          OUTLINED_FUNCTION_15_1();
          swift_release();
          v48 = v76;
        }
        sub_1A5666830(v32, v31, v33, v34, v36);
        OUTLINED_FUNCTION_153();
        v54 = v57 + v48;
        if (__CFADD__(v57, (_DWORD)v48))
          goto LABEL_44;
        *(_DWORD *)(v56 + 20) = v54;
      }
      v58 = __OFADD__(v79, v48);
      v29 = v79 + v48;
      if (v58)
        goto LABEL_43;
      v30 += 8;
      ++v81;
    }
    while (v78 != v81);
    OUTLINED_FUNCTION_242();
    v28 = v74 + v29;
    if (__OFADD__(v74, v29))
      goto LABEL_48;
    v9 = a9 + 8;
    if ((a8 & 1) != 0)
    {
      v26 = a9;
      goto LABEL_28;
    }
    v61 = 0;
LABEL_33:
    v19 = v28 + v61;
    if (__OFADD__(v28, v61))
    {
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    if (v78)
    {
      OUTLINED_FUNCTION_4_3();
      OUTLINED_FUNCTION_17_0();
      OUTLINED_FUNCTION_1_2();
      v65 = OUTLINED_FUNCTION_269();
      OUTLINED_FUNCTION_24(v65, v66, v9);
      v20 = v67;
      v69 = v68;
      OUTLINED_FUNCTION_41();
      if ((v69 & 1) != 0)
      {
        v86._countAndFlagsBits = OUTLINED_FUNCTION_269();
        v20 = OUTLINED_FUNCTION_88(v86, v54);
      }
      OUTLINED_FUNCTION_2_4();
      OUTLINED_FUNCTION_23();
      v70 = *(_DWORD *)(a9 + 20);
      v71 = __CFADD__(v70, (_DWORD)v20);
      v72 = v70 + v20;
      if (v71)
        goto LABEL_52;
      *(_DWORD *)(a9 + 20) = v72;
    }
    else
    {
      v20 = 0;
    }
LABEL_40:
    if (!__OFADD__(v19, v20))
    {
      OUTLINED_FUNCTION_119();
      return;
    }
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
}

void sub_1A5662B8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  uint64_t v39;
  void *v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  Swift::Int v49;
  Swift::Int v50;
  char v51;
  char v52;
  int v53;
  int v54;
  uint64_t v55;
  Swift::Int v56;
  Swift::Int v57;
  Swift::Int v58;
  char v59;
  int v60;
  BOOL v61;
  uint64_t v62;
  Swift::Int v63;
  uint64_t v64;
  Swift::Int v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  Swift::Int v69;
  Swift::Int v70;
  uint64_t v71;
  char v72;
  char v73;
  int v74;
  Swift::Int v75;
  Swift::Int v76;
  Swift::Int v77;
  char v78;
  char v79;
  int v80;
  uint64_t v81;
  unint64_t v82;
  Swift::Int v83;
  char v84;
  void *v85;
  int v86;
  Swift::Int v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  Swift::Int v91;
  char v92;
  char v93;
  int v94;
  BOOL v95;
  int v96;
  Swift::Int v97;
  uint64_t v98;
  void *v99;
  char v100;
  uint64_t v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  Swift::String v105;
  Swift::String v106;
  Swift::String v107;

  OUTLINED_FUNCTION_130();
  v98 = v39;
  v99 = v40;
  v101 = v41;
  v102 = v42;
  OUTLINED_FUNCTION_120();
  v103 = v46;
  v100 = v45;
  if (v46)
  {
    v47 = v44;
    v48 = v43;
    OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_3_3();
    OUTLINED_FUNCTION_113(v48, v47, a39 + 8);
    v50 = v49;
    v52 = v51;
    OUTLINED_FUNCTION_52();
    if ((v52 & 1) != 0)
      v50 = OUTLINED_FUNCTION_125(v48);
    OUTLINED_FUNCTION_2_4();
    OUTLINED_FUNCTION_23();
    v53 = *(_DWORD *)(a39 + 20);
    v54 = v53 + v50;
    if (__CFADD__(v53, (_DWORD)v50))
    {
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
    v55 = a39;
    *(_DWORD *)(a39 + 20) = v54;
    if ((v100 & 1) == 0)
      goto LABEL_13;
  }
  else
  {
    v50 = 0;
    v56 = 0;
    v57 = 0;
    v55 = a39;
    if ((v45 & 1) == 0)
      goto LABEL_41;
  }
  OUTLINED_FUNCTION_6_3(40, 0xE100000000000000);
  if ((v59 & 1) != 0)
    v58 = OUTLINED_FUNCTION_10_0(40);
  v60 = *(_DWORD *)(v55 + 20);
  v54 = v60 + v58;
  if (__CFADD__(v60, (_DWORD)v58))
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  *(_DWORD *)(v55 + 20) = v54;
  v61 = __OFADD__(v50, v58);
  v50 += v58;
  if (!v61)
  {
    if (!v103)
    {
LABEL_29:
      v81 = OUTLINED_FUNCTION_170();
      OUTLINED_FUNCTION_6_3(v81, v82);
      if ((v84 & 1) != 0)
        v83 = OUTLINED_FUNCTION_10_0(41);
      v85 = v99;
      v86 = *(_DWORD *)(v55 + 20);
      LODWORD(v65) = v86 + v83;
      if (__CFADD__(v86, (_DWORD)v83))
        goto LABEL_53;
      *(_DWORD *)(v55 + 20) = v65;
LABEL_34:
      v56 = v50 + v83;
      if (__OFADD__(v50, v83))
        goto LABEL_48;
      if (v103)
      {
        v87 = v65;
        OUTLINED_FUNCTION_82();
        OUTLINED_FUNCTION_0_10();
        OUTLINED_FUNCTION_3_3();
        OUTLINED_FUNCTION_227();
        OUTLINED_FUNCTION_9_3(v88, v89, v90);
        v57 = v91;
        v93 = v92;
        OUTLINED_FUNCTION_94();
        if ((v93 & 1) != 0)
        {
          v107._countAndFlagsBits = v98;
          v107._object = v85;
          v57 = OUTLINED_FUNCTION_86(v107, v87);
        }
        OUTLINED_FUNCTION_5_1();
        OUTLINED_FUNCTION_4_4();
        v94 = *(_DWORD *)(v55 + 20);
        v95 = __CFADD__(v94, (_DWORD)v57);
        v96 = v94 + v57;
        if (v95)
          goto LABEL_54;
        *(_DWORD *)(v55 + 20) = v96;
      }
      else
      {
        v57 = 0;
      }
LABEL_41:
      if (!__OFADD__(v56, v57))
      {
        OUTLINED_FUNCTION_43();
        return;
      }
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
LABEL_13:
    v97 = v50;
    v62 = 0;
    v63 = 0;
    v64 = OUTLINED_FUNCTION_78() + 56;
    LODWORD(v65) = v54;
    v66 = a39 + 8;
    v104 = v55;
    do
    {
      swift_bridgeObjectRetain_n();
      OUTLINED_FUNCTION_90();
      sub_1A594B5F8();
      sub_1A594B5F8();
      OUTLINED_FUNCTION_4_3();
      v67 = OUTLINED_FUNCTION_212();
      OUTLINED_FUNCTION_8_2(v67, v68, v66);
      v70 = v69;
      v71 = v66;
      v73 = v72;
      OUTLINED_FUNCTION_41();
      if ((v73 & 1) != 0)
      {
        v105._countAndFlagsBits = OUTLINED_FUNCTION_212();
        v70 = OUTLINED_FUNCTION_104(v105, v65);
      }
      OUTLINED_FUNCTION_41();
      v66 = v71;
      v55 = v104;
      v74 = *(_DWORD *)(v104 + 20);
      v65 = (v74 + v70);
      if (__CFADD__(v74, (_DWORD)v70))
      {
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
        goto LABEL_47;
      }
      *(_DWORD *)(v104 + 20) = v65;
      v61 = __OFADD__(v63, v70);
      v75 = v63 + v70;
      if (v61)
        goto LABEL_44;
      if (v62 >= v103 - 1)
      {
        OUTLINED_FUNCTION_239();
        OUTLINED_FUNCTION_195();
        v77 = 0;
      }
      else
      {
        OUTLINED_FUNCTION_4_3();
        OUTLINED_FUNCTION_155();
        OUTLINED_FUNCTION_18_0();
        OUTLINED_FUNCTION_8_2(v101, (unint64_t)v102, v66);
        v77 = v76;
        v79 = v78;
        OUTLINED_FUNCTION_41();
        if ((v79 & 1) != 0)
        {
          v106._countAndFlagsBits = v101;
          v106._object = v102;
          v66 = a39 + 8;
          v77 = OUTLINED_FUNCTION_53_0(v106, v65);
          OUTLINED_FUNCTION_195();
          OUTLINED_FUNCTION_19_0();
          swift_release();
        }
        else
        {
          OUTLINED_FUNCTION_195();
          OUTLINED_FUNCTION_19_0();
          swift_release();
          v66 = a39 + 8;
        }
        OUTLINED_FUNCTION_239();
        v55 = v104;
        v80 = *(_DWORD *)(v104 + 20);
        LODWORD(v65) = v80 + v77;
        if (__CFADD__(v80, (_DWORD)v77))
          goto LABEL_46;
        *(_DWORD *)(v104 + 20) = v65;
      }
      v61 = __OFADD__(v75, v77);
      v63 = v75 + v77;
      if (v61)
        goto LABEL_45;
      v64 += 32;
      ++v62;
    }
    while (v103 != v62);
    OUTLINED_FUNCTION_77();
    v50 = v97 + v63;
    if (__OFADD__(v97, v63))
      goto LABEL_50;
    if ((v100 & 1) == 0)
    {
      v83 = 0;
      v85 = v99;
      goto LABEL_34;
    }
    goto LABEL_29;
  }
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
}

void sub_1A5662F60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,__int128 a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  Swift::Int v53;
  uint64_t v54;
  Swift::Int v55;
  uint64_t v56;
  char v57;
  void *v58;
  uint64_t v59;
  Swift::Int v60;
  Swift::Int v61;
  char v62;
  char v63;
  Swift::Int v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  char v69;
  Swift::Int v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  Swift::Int v74;
  Swift::String v75;
  uint64_t v76;
  __int128 *v77;
  char *v78;
  unsigned int v79;
  Swift::Int v80;
  int v81;
  Swift::Int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  Swift::String v89;
  char v90;
  Swift::Int v91;
  int v92;
  Swift::Int v93;
  uint64_t v94;
  void *v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  Swift::String v102;
  Swift::String v103;
  Swift::String v104;
  Swift::String v105;

  OUTLINED_FUNCTION_79();
  a40 = v42;
  a41 = v46;
  v48 = v47;
  v97 = v49;
  v98 = v50;
  LOBYTE(v51) = 0;
  v52 = a42;
  v54 = a42 + 8;
  v53 = *(_QWORD *)(a42 + 8);
  v55 = *(unsigned int *)(a42 + 20);
  v99 = a42 + 8;
  v100 = v56;
  v101 = *(_QWORD *)(v56 + 16);
  v96 = v57;
  v94 = v44;
  v95 = v45;
  if (v101)
  {
    v58 = v43;
    v59 = a42 + 8;
    OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_18_0();
    OUTLINED_FUNCTION_24(v97, (unint64_t)v58, v59);
    v61 = v60;
    v63 = v62;
    OUTLINED_FUNCTION_9_2();
    if ((v63 & 1) != 0)
    {
      v102._countAndFlagsBits = v97;
      v102._object = v58;
      v64 = OUTLINED_FUNCTION_50(v102, v55);
      OUTLINED_FUNCTION_19_0();
      OUTLINED_FUNCTION_40();
    }
    else
    {
      OUTLINED_FUNCTION_19_0();
      OUTLINED_FUNCTION_40();
      v64 = v61;
    }
    OUTLINED_FUNCTION_245();
    v66 = v94;
    v65 = v95;
    if (v69)
    {
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
      goto LABEL_75;
    }
    *(_DWORD *)(v52 + 20) = v55;
    v54 = v99;
    if ((v96 & 1) == 0)
      goto LABEL_14;
  }
  else
  {
    v65 = v45;
    v66 = v44;
    v64 = 0;
    v67 = OUTLINED_FUNCTION_179();
    if ((v68 & 1) == 0)
      goto LABEL_55;
  }
  v70 = v64;
  OUTLINED_FUNCTION_105(40, 0xE100000000000000, v54, v55);
  if ((v71 & 1) != 0)
  {
    v103._countAndFlagsBits = 40;
    v103._object = (void *)0xE100000000000000;
    OUTLINED_FUNCTION_14_0(v103, v55);
  }
  OUTLINED_FUNCTION_199();
  if (v69)
    goto LABEL_74;
  *(_DWORD *)(v52 + 20) = v55;
  v64 += v72;
  if (!__OFADD__(v70, v72))
  {
    v53 = v70 + v72;
    if (v101)
    {
LABEL_14:
      v93 = v64;
      OUTLINED_FUNCTION_142();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v73 = 0;
      v74 = 0;
      do
      {
        if (*(_DWORD *)(v100 + 4 * v73 + 32) == -1)
        {
          a27 = xmmword_1A59ABF90;
          OUTLINED_FUNCTION_133((uint64_t)&a27, (uint64_t)&a27 + 1, v55);
          OUTLINED_FUNCTION_199();
          if (v69)
            goto LABEL_68;
          v80 = v79;
        }
        else
        {
          LODWORD(a27) = *(_DWORD *)(v100 + 4 * v73 + 32);
          v75._countAndFlagsBits = sub_1A594CC9C();
          LOBYTE(v51) = v75._object;
          if (((uint64_t)v75._object & 0x1000000000000000) != 0)
          {
            v80 = OUTLINED_FUNCTION_14_0(v75, v55);
            OUTLINED_FUNCTION_55();
          }
          else
          {
            if (((uint64_t)v75._object & 0x2000000000000000) != 0)
            {
              *(_QWORD *)&a27 = v75._countAndFlagsBits;
              *((_QWORD *)&a27 + 1) = (uint64_t)v75._object & 0xFFFFFFFFFFFFFFLL;
              v78 = (char *)&a27 + (((unint64_t)v75._object >> 56) & 0xF);
              v77 = &a27;
            }
            else
            {
              if ((v75._countAndFlagsBits & 0x1000000000000000) != 0)
                OUTLINED_FUNCTION_198();
              else
                v76 = OUTLINED_FUNCTION_108();
              v77 = (__int128 *)OUTLINED_FUNCTION_138(v76);
            }
            OUTLINED_FUNCTION_133((uint64_t)v77, (uint64_t)v78, v55);
            LODWORD(v80) = v81;
            OUTLINED_FUNCTION_55();
            v80 = v80;
          }
          OUTLINED_FUNCTION_245();
          if (v69)
            goto LABEL_66;
        }
        *(_DWORD *)(v52 + 20) = v55;
        v82 = v74 + v80;
        if (__OFADD__(v74, v80))
        {
          __break(1u);
LABEL_65:
          __break(1u);
LABEL_66:
          __break(1u);
LABEL_67:
          __break(1u);
LABEL_68:
          __break(1u);
          goto LABEL_69;
        }
        if (v73 >= v101 - 1)
        {
          v64 = 0;
        }
        else
        {
          v51 = *(_QWORD *)(v52 + 8);
          if ((v48 & 0x1000000000000000) != 0)
          {
            OUTLINED_FUNCTION_11_1();
            OUTLINED_FUNCTION_18_0();
            v89._object = (void *)v48;
            v89._countAndFlagsBits = v98;
            v64 = ByteBuffer._setStringSlowpath(_:at:)(v89, v55);
            OUTLINED_FUNCTION_19_0();
            OUTLINED_FUNCTION_36();
          }
          else
          {
            if ((v48 & 0x2000000000000000) != 0)
            {
              *(_QWORD *)&a27 = v98;
              *((_QWORD *)&a27 + 1) = v48 & 0xFFFFFFFFFFFFFFLL;
              OUTLINED_FUNCTION_11_1();
              OUTLINED_FUNCTION_18_0();
              OUTLINED_FUNCTION_4_3();
              v86 = OUTLINED_FUNCTION_207();
            }
            else
            {
              v83 = a15;
              v84 = a16;
              if ((v98 & 0x1000000000000000) == 0)
                v84 = OUTLINED_FUNCTION_226();
              if (v84)
                v85 = v84 + v83;
              else
                v85 = 0;
              OUTLINED_FUNCTION_11_1();
              OUTLINED_FUNCTION_18_0();
              OUTLINED_FUNCTION_4_3();
              v86 = v84;
              v87 = v85;
            }
            OUTLINED_FUNCTION_49(v86, v87);
            LODWORD(v64) = v88;
            OUTLINED_FUNCTION_19_0();
            OUTLINED_FUNCTION_36();
            OUTLINED_FUNCTION_41();
            v64 = v64;
          }
          OUTLINED_FUNCTION_245();
          if (v69)
            goto LABEL_67;
          *(_DWORD *)(v52 + 20) = v55;
          v54 = v99;
        }
        v74 = v82 + v64;
        if (__OFADD__(v82, v64))
          goto LABEL_65;
        ++v73;
      }
      while (v101 != v73);
      swift_bridgeObjectRelease();
      v53 = v93 + v74;
      if (__OFADD__(v93, v74))
        goto LABEL_72;
      if ((v96 & 1) != 0)
      {
        v66 = v94;
        v65 = v95;
        goto LABEL_50;
      }
      v67 = 0;
      v66 = v94;
      v65 = v95;
      goto LABEL_55;
    }
LABEL_50:
    v64 = v55;
    OUTLINED_FUNCTION_105(41, 0xE100000000000000, v54, v55);
    if ((v90 & 1) != 0)
    {
      v104._countAndFlagsBits = 41;
      v104._object = (void *)0xE100000000000000;
      OUTLINED_FUNCTION_14_0(v104, v55);
    }
    OUTLINED_FUNCTION_199();
    if (v69)
      goto LABEL_76;
    *(_DWORD *)(v52 + 20) = v55;
LABEL_55:
    v91 = v53 + v67;
    if (__OFADD__(v53, v67))
    {
LABEL_69:
      __break(1u);
    }
    else
    {
      if (v101)
      {
        OUTLINED_FUNCTION_29();
        OUTLINED_FUNCTION_17_0();
        OUTLINED_FUNCTION_12_1();
        OUTLINED_FUNCTION_105(v66, (unint64_t)v65, v54, v55);
        OUTLINED_FUNCTION_31();
        if ((v51 & 1) != 0)
        {
          v105._countAndFlagsBits = v66;
          v105._object = v65;
          v64 = OUTLINED_FUNCTION_14_0(v105, v55);
        }
        OUTLINED_FUNCTION_15_1();
        OUTLINED_FUNCTION_23();
        OUTLINED_FUNCTION_200();
        if (v69)
          goto LABEL_73;
        *(_DWORD *)(v52 + 20) = v92;
      }
      else
      {
        v64 = 0;
      }
      if (!__OFADD__(v91, v64))
      {
        OUTLINED_FUNCTION_32();
        return;
      }
    }
    __break(1u);
    goto LABEL_71;
  }
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
}

void sub_1A56633D4()
{
  Swift::Int v0;
  char v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::Int v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void *v13;
  uint64_t v14;
  Swift::Int v15;
  Swift::Int v16;
  char v17;
  char v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  char v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  Swift::Int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  Swift::Int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  Swift::UInt32 v46;
  Swift::Int v47;
  unsigned int v48;
  unsigned int v49;
  int v50;
  Swift::String v51;
  Swift::Int v52;
  char v53;
  Swift::Int v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  int v58;
  char v59;
  Swift::Int v60;
  void *v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  Swift::UInt32 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  Swift::Int v71;
  uint64_t v72;
  Swift::String v73;
  Swift::String v74;

  OUTLINED_FUNCTION_62();
  v61 = v3;
  v69 = v4;
  v70 = v5;
  OUTLINED_FUNCTION_276();
  v6 = v2 + 8;
  v7 = *(unsigned int *)(v2 + 20);
  OUTLINED_FUNCTION_120();
  v72 = v11;
  v63 = v10;
  v62 = v12;
  if (v11)
  {
    v13 = v9;
    v14 = v8;
    OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_1_2();
    OUTLINED_FUNCTION_3_3();
    OUTLINED_FUNCTION_24(v14, (unint64_t)v13, v2 + 8);
    v16 = v15;
    v18 = v17;
    OUTLINED_FUNCTION_9_2();
    if ((v18 & 1) != 0)
    {
      v73._countAndFlagsBits = v14;
      v73._object = v13;
      v16 = OUTLINED_FUNCTION_57(v73, v7);
    }
    OUTLINED_FUNCTION_5_1();
    OUTLINED_FUNCTION_2_4();
    v6 = v2 + 8;
    v19 = *(_DWORD *)(v2 + 20);
    LODWORD(v7) = v19 + v16;
    v20 = v63;
    if (__CFADD__(v19, (_DWORD)v16))
    {
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
      goto LABEL_58;
    }
    *(_DWORD *)(v2 + 20) = v7;
    if ((v62 & 1) == 0)
      goto LABEL_13;
  }
  else
  {
    v20 = v10;
    v16 = 0;
    v21 = OUTLINED_FUNCTION_92();
    if ((v22 & 1) == 0)
      goto LABEL_40;
  }
  LODWORD(v0) = v7;
  OUTLINED_FUNCTION_9_3(40, 0xE100000000000000, v6);
  if ((v23 & 1) != 0)
    OUTLINED_FUNCTION_34(40, 0xE100000000000000);
  OUTLINED_FUNCTION_154();
  if (v25)
    goto LABEL_57;
  *(_DWORD *)(v2 + 20) = v7;
  v26 = __OFADD__(v16, v24);
  v16 += v24;
  if (!v26)
  {
    if (v72)
    {
LABEL_13:
      v59 = v1;
      v60 = v16;
      v68 = v6;
      OUTLINED_FUNCTION_144();
      v64 = v27;
      v28 = 0;
      v29 = 0;
      v30 = OUTLINED_FUNCTION_78() + 56;
      v67 = v2;
      do
      {
        v31 = OUTLINED_FUNCTION_274();
        sub_1A56664F4(v31, v32, v33, v34);
        v35 = OUTLINED_FUNCTION_274();
        sub_1A56FE148(v35, v36, v37, v38);
        v40 = v29 + v39;
        if (__OFADD__(v29, v39))
        {
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
          goto LABEL_52;
        }
        v0 = *(unsigned int *)(v2 + 20);
        if (v28 >= v72 - 1)
        {
          OUTLINED_FUNCTION_185();
          v47 = 0;
        }
        else
        {
          v71 = v29 + v39;
          if ((v70 & 0x1000000000000000) != 0)
          {
            OUTLINED_FUNCTION_39();
            OUTLINED_FUNCTION_18_0();
            OUTLINED_FUNCTION_192();
            v51._countAndFlagsBits = v69;
            v47 = ByteBuffer._setStringSlowpath(_:at:)(v51, v52);
            OUTLINED_FUNCTION_19_0();
            OUTLINED_FUNCTION_40();
          }
          else
          {
            if ((v70 & 0x2000000000000000) != 0)
            {
              OUTLINED_FUNCTION_39();
              OUTLINED_FUNCTION_18_0();
              OUTLINED_FUNCTION_42();
              OUTLINED_FUNCTION_189();
            }
            else
            {
              v66 = *(_DWORD *)(v2 + 20);
              v41 = v69 & 0xFFFFFFFFFFFFLL;
              v42 = v64;
              if ((v69 & 0x1000000000000000) == 0)
                v42 = sub_1A594C7D4();
              v43 = v42 + v41;
              if (!v42)
                v43 = 0;
              v65 = v43;
              OUTLINED_FUNCTION_39();
              OUTLINED_FUNCTION_18_0();
              OUTLINED_FUNCTION_42();
              v44 = v42;
              v45 = v65;
              v46 = v66;
            }
            OUTLINED_FUNCTION_111(v44, v45, v46);
            v49 = v48;
            OUTLINED_FUNCTION_19_0();
            OUTLINED_FUNCTION_40();
            OUTLINED_FUNCTION_38();
            v47 = v49;
          }
          OUTLINED_FUNCTION_185();
          v2 = v67;
          v50 = *(_DWORD *)(v67 + 20);
          v0 = (v50 + v47);
          v40 = v71;
          if (__CFADD__(v50, (_DWORD)v47))
            goto LABEL_51;
          *(_DWORD *)(v67 + 20) = v0;
        }
        v26 = __OFADD__(v40, v47);
        v29 = v40 + v47;
        if (v26)
          goto LABEL_50;
        v30 += 32;
        ++v28;
      }
      while (v72 != v28);
      OUTLINED_FUNCTION_77();
      v16 = v60 + v29;
      if (__OFADD__(v60, v29))
        goto LABEL_55;
      v20 = v63;
      if ((v62 & 1) != 0)
      {
        v6 = v68;
        v1 = v59;
        goto LABEL_35;
      }
      v21 = 0;
      v1 = v59;
      goto LABEL_40;
    }
LABEL_35:
    v0 = v0;
    OUTLINED_FUNCTION_9_3(41, 0xE100000000000000, v6);
    if ((v53 & 1) != 0)
      OUTLINED_FUNCTION_34(41, 0xE100000000000000);
    OUTLINED_FUNCTION_154();
    if (v25)
      goto LABEL_59;
    *(_DWORD *)(v2 + 20) = v0;
LABEL_40:
    v54 = v16 + v21;
    if (__OFADD__(v16, v21))
    {
LABEL_52:
      __break(1u);
    }
    else
    {
      if (v72)
      {
        OUTLINED_FUNCTION_228();
        OUTLINED_FUNCTION_82();
        OUTLINED_FUNCTION_0_10();
        OUTLINED_FUNCTION_1_2();
        OUTLINED_FUNCTION_227();
        OUTLINED_FUNCTION_96(v55, v56, v57);
        OUTLINED_FUNCTION_80();
        if ((v1 & 1) != 0)
        {
          v74._countAndFlagsBits = v20;
          v74._object = v61;
          v0 = OUTLINED_FUNCTION_86(v74, v0);
        }
        OUTLINED_FUNCTION_2_4();
        OUTLINED_FUNCTION_4_4();
        OUTLINED_FUNCTION_211();
        if (v25)
          goto LABEL_56;
        *(_DWORD *)(v2 + 20) = v58;
      }
      else
      {
        v0 = 0;
      }
      if (!__OFADD__(v54, v0))
      {
        OUTLINED_FUNCTION_20_0();
        return;
      }
    }
    __break(1u);
    goto LABEL_54;
  }
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
}

void sub_1A5663788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, char a14, char *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char *a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,__int128 a28,__int128 a29,__int128 a30,__int128 a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  uint64_t v45;
  Swift::Int v46;
  Swift::Int v47;
  Swift::Int v48;
  uint64_t v49;
  char *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  char *v56;
  void *v57;
  Swift::Int v58;
  Swift::Int v59;
  char v60;
  char v61;
  uint64_t v62;
  char v64;
  uint64_t v65;
  char v66;
  char v67;
  uint64_t v68;
  BOOL v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  Swift::Int v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  _QWORD *v77;
  char *v78;
  Swift::Int v79;
  unsigned int v80;
  unsigned int v81;
  int v82;
  char v83;
  Swift::Int v84;
  int v85;
  Swift::Int v86;
  uint64_t v87;
  Swift::String v88;
  Swift::String v89;
  Swift::String v90;

  OUTLINED_FUNCTION_208();
  a44 = v52;
  a45 = v53;
  OUTLINED_FUNCTION_71();
  if (v50)
  {
    v57 = v55;
    OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_3_3();
    OUTLINED_FUNCTION_24(a24, (unint64_t)v57, v49);
    v59 = v58;
    v61 = v60;
    OUTLINED_FUNCTION_9_2();
    if ((v61 & 1) != 0)
    {
      v88._countAndFlagsBits = a24;
      v88._object = v57;
      v59 = OUTLINED_FUNCTION_53_0(v88, v48);
    }
    OUTLINED_FUNCTION_5_1();
    OUTLINED_FUNCTION_19_0();
    OUTLINED_FUNCTION_201();
    v62 = a21;
    v50 = a22;
    if (v64)
    {
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
      goto LABEL_59;
    }
    *(_DWORD *)(v45 + 20) = v48;
    if ((a14 & 1) == 0)
      goto LABEL_13;
  }
  else
  {
    a15 = v56;
    v62 = v54;
    v59 = 0;
    v65 = OUTLINED_FUNCTION_92();
    if ((v66 & 1) == 0)
      goto LABEL_41;
  }
  LODWORD(v46) = v48;
  OUTLINED_FUNCTION_9_3(40, 0xE100000000000000, v49);
  if ((v67 & 1) != 0)
    OUTLINED_FUNCTION_44(40);
  OUTLINED_FUNCTION_89();
  if (v64)
    goto LABEL_58;
  *(_DWORD *)(v45 + 20) = v48;
  v69 = __OFADD__(v59, v68);
  v59 += v68;
  if (!v69)
  {
    if (v50)
    {
LABEL_13:
      v86 = v59;
      v87 = (uint64_t)(v50 - 1);
      OUTLINED_FUNCTION_13_0();
      a15 = 0;
      v47 = 0;
      v49 = 32;
      do
      {
        v70 = *(_OWORD *)(v62 + v49 + 16);
        a28 = *(_OWORD *)(v62 + v49);
        a29 = v70;
        v71 = *(_OWORD *)(v62 + v49 + 48);
        a30 = *(_OWORD *)(v62 + v49 + 32);
        a31 = v71;
        sub_1A5607238((uint64_t)&a28);
        sub_1A56E2184((uint64_t)&a28);
        v73 = v47 + v72;
        if (__OFADD__(v47, v72))
        {
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
          goto LABEL_53;
        }
        v46 = *(unsigned int *)(v45 + 20);
        if ((uint64_t)a15 >= v87)
        {
          sub_1A5666480((uint64_t)&a28);
          v79 = 0;
        }
        else
        {
          if ((v51 & 0x1000000000000000) != 0)
          {
            OUTLINED_FUNCTION_3_3();
            OUTLINED_FUNCTION_12_1();
            v89._countAndFlagsBits = a23;
            v89._object = (void *)v51;
            v79 = OUTLINED_FUNCTION_147(v89, v46);
            OUTLINED_FUNCTION_15_1();
            OUTLINED_FUNCTION_5_1();
          }
          else
          {
            if ((v51 & 0x2000000000000000) != 0)
            {
              a25 = a23;
              a26 = v51 & 0xFFFFFFFFFFFFFFLL;
              OUTLINED_FUNCTION_29();
              OUTLINED_FUNCTION_3_3();
              OUTLINED_FUNCTION_12_1();
              v77 = &a25;
              v78 = (char *)&a25 + (HIBYTE(v51) & 0xF);
            }
            else
            {
              v74 = a23 & 0xFFFFFFFFFFFFLL;
              v75 = (v51 & 0xFFFFFFFFFFFFFFFLL) + 32;
              if ((a23 & 0x1000000000000000) == 0)
                v75 = OUTLINED_FUNCTION_172();
              if (v75)
                v76 = (char *)(v75 + v74);
              else
                v76 = 0;
              OUTLINED_FUNCTION_29();
              OUTLINED_FUNCTION_3_3();
              OUTLINED_FUNCTION_12_1();
              v77 = (_QWORD *)v75;
              v78 = v76;
            }
            OUTLINED_FUNCTION_230((uint64_t)v77, (uint64_t)v78);
            v81 = v80;
            OUTLINED_FUNCTION_15_1();
            OUTLINED_FUNCTION_5_1();
            OUTLINED_FUNCTION_37();
            v79 = v81;
          }
          sub_1A5666480((uint64_t)&a28);
          v82 = *(_DWORD *)(v45 + 20);
          v46 = (v82 + v79);
          v62 = a21;
          v50 = a22;
          if (__CFADD__(v82, (_DWORD)v79))
            goto LABEL_52;
          *(_DWORD *)(v45 + 20) = v46;
        }
        v47 = v73 + v79;
        if (__OFADD__(v73, v79))
          goto LABEL_51;
        ++a15;
        v49 += 64;
      }
      while (v50 != a15);
      OUTLINED_FUNCTION_19();
      v59 = v86 + v47;
      if (__OFADD__(v86, v47))
        goto LABEL_56;
      if ((a14 & 1) != 0)
      {
        OUTLINED_FUNCTION_137();
        goto LABEL_36;
      }
      OUTLINED_FUNCTION_137();
      goto LABEL_41;
    }
LABEL_36:
    v46 = v46;
    OUTLINED_FUNCTION_9_3(41, 0xE100000000000000, v49);
    if ((v83 & 1) != 0)
      OUTLINED_FUNCTION_44(41);
    OUTLINED_FUNCTION_89();
    if (v64)
      goto LABEL_60;
    *(_DWORD *)(v45 + 20) = v46;
LABEL_41:
    v69 = __OFADD__(v59, v65);
    v84 = v59 + v65;
    if (v69)
    {
LABEL_53:
      __break(1u);
    }
    else
    {
      if (v50)
      {
        OUTLINED_FUNCTION_82();
        OUTLINED_FUNCTION_0_10();
        OUTLINED_FUNCTION_1_2();
        OUTLINED_FUNCTION_75(a12, (unint64_t)a15, v49);
        OUTLINED_FUNCTION_80();
        if ((v47 & 1) != 0)
        {
          v90._countAndFlagsBits = a12;
          v90._object = a15;
          v46 = OUTLINED_FUNCTION_88(v90, v46);
        }
        OUTLINED_FUNCTION_2_4();
        OUTLINED_FUNCTION_4_4();
        OUTLINED_FUNCTION_140();
        if (v64)
          goto LABEL_57;
        *(_DWORD *)(v45 + 20) = v85;
      }
      else
      {
        v46 = 0;
      }
      if (!__OFADD__(v84, v46))
      {
        OUTLINED_FUNCTION_58();
        return;
      }
    }
    __break(1u);
    goto LABEL_55;
  }
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
}

void sub_1A5663AE4()
{
  uint64_t v0;
  Swift::Int v1;
  Swift::Int v2;
  Swift::Int v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  uint64_t v7;
  void *v8;
  char *v9;
  void *v10;
  Swift::Int v11;
  Swift::Int v12;
  char v13;
  char v14;
  uint64_t v15;
  char *v16;
  char v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  BOOL v22;
  __int128 v23;
  uint64_t v24;
  Swift::Int v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _QWORD *v29;
  char *v30;
  Swift::Int v31;
  unsigned int v32;
  unsigned int v33;
  int v34;
  char v35;
  Swift::Int v36;
  int v37;
  Swift::Int v38;
  uint64_t v39;
  char v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[3];
  __int128 v48;
  _OWORD v49[3];
  Swift::String v50;
  Swift::String v51;
  Swift::String v52;

  OUTLINED_FUNCTION_71();
  if (v5)
  {
    v10 = v8;
    OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_3_3();
    OUTLINED_FUNCTION_24(v45, (unint64_t)v10, v4);
    v12 = v11;
    v14 = v13;
    OUTLINED_FUNCTION_9_2();
    if ((v14 & 1) != 0)
    {
      v50._countAndFlagsBits = v45;
      v50._object = v10;
      v12 = OUTLINED_FUNCTION_53_0(v50, v3);
    }
    OUTLINED_FUNCTION_5_1();
    OUTLINED_FUNCTION_19_0();
    OUTLINED_FUNCTION_201();
    v15 = v42;
    v5 = v43;
    v16 = v41;
    if (v17)
    {
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
      goto LABEL_59;
    }
    *(_DWORD *)(v0 + 20) = v3;
    if ((v40 & 1) == 0)
      goto LABEL_13;
  }
  else
  {
    v16 = v9;
    v15 = v7;
    v12 = 0;
    v18 = OUTLINED_FUNCTION_92();
    if ((v19 & 1) == 0)
      goto LABEL_41;
  }
  LODWORD(v1) = v3;
  OUTLINED_FUNCTION_9_3(40, 0xE100000000000000, v4);
  if ((v20 & 1) != 0)
    OUTLINED_FUNCTION_44(40);
  OUTLINED_FUNCTION_89();
  if (v17)
    goto LABEL_58;
  *(_DWORD *)(v0 + 20) = v3;
  v22 = __OFADD__(v12, v21);
  v12 += v21;
  if (!v22)
  {
    if (v5)
    {
LABEL_13:
      v38 = v12;
      v46 = (uint64_t)(v5 - 1);
      OUTLINED_FUNCTION_13_0();
      v16 = 0;
      v2 = 0;
      v4 = 32;
      do
      {
        v23 = *(_OWORD *)(v15 + v4 + 16);
        v48 = *(_OWORD *)(v15 + v4);
        v49[0] = v23;
        *(_OWORD *)((char *)v49 + 15) = *(_OWORD *)(v15 + v4 + 31);
        sub_1A5666624((uint64_t)&v48);
        sub_1A5710160((uint64_t)&v48);
        v25 = v2 + v24;
        if (__OFADD__(v2, v24))
        {
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
          goto LABEL_53;
        }
        v1 = *(unsigned int *)(v0 + 20);
        if ((uint64_t)v16 >= v46)
        {
          sub_1A5666658((uint64_t)&v48);
          v31 = 0;
        }
        else
        {
          if ((v6 & 0x1000000000000000) != 0)
          {
            OUTLINED_FUNCTION_3_3();
            OUTLINED_FUNCTION_12_1();
            v51._countAndFlagsBits = v44;
            v51._object = (void *)v6;
            v31 = OUTLINED_FUNCTION_147(v51, v1);
            OUTLINED_FUNCTION_15_1();
            OUTLINED_FUNCTION_5_1();
          }
          else
          {
            if ((v6 & 0x2000000000000000) != 0)
            {
              v47[0] = v44;
              v47[1] = v6 & 0xFFFFFFFFFFFFFFLL;
              OUTLINED_FUNCTION_29();
              OUTLINED_FUNCTION_3_3();
              OUTLINED_FUNCTION_12_1();
              v29 = v47;
              v30 = (char *)v47 + (HIBYTE(v6) & 0xF);
            }
            else
            {
              v26 = v44 & 0xFFFFFFFFFFFFLL;
              v27 = (v6 & 0xFFFFFFFFFFFFFFFLL) + 32;
              if ((v44 & 0x1000000000000000) == 0)
                v27 = OUTLINED_FUNCTION_172();
              if (v27)
                v28 = (char *)(v27 + v26);
              else
                v28 = 0;
              OUTLINED_FUNCTION_29();
              OUTLINED_FUNCTION_3_3();
              OUTLINED_FUNCTION_12_1();
              v29 = (_QWORD *)v27;
              v30 = v28;
            }
            OUTLINED_FUNCTION_230((uint64_t)v29, (uint64_t)v30);
            v33 = v32;
            OUTLINED_FUNCTION_15_1();
            OUTLINED_FUNCTION_5_1();
            OUTLINED_FUNCTION_37();
            v31 = v33;
          }
          sub_1A5666658((uint64_t)&v48);
          v34 = *(_DWORD *)(v0 + 20);
          v1 = (v34 + v31);
          v15 = v42;
          v5 = v43;
          if (__CFADD__(v34, (_DWORD)v31))
            goto LABEL_52;
          *(_DWORD *)(v0 + 20) = v1;
        }
        v2 = v25 + v31;
        if (__OFADD__(v25, v31))
          goto LABEL_51;
        ++v16;
        v4 += 48;
      }
      while (v5 != v16);
      OUTLINED_FUNCTION_19();
      v12 = v38 + v2;
      if (__OFADD__(v38, v2))
        goto LABEL_56;
      if ((v40 & 1) != 0)
      {
        OUTLINED_FUNCTION_137();
        goto LABEL_36;
      }
      OUTLINED_FUNCTION_137();
      goto LABEL_41;
    }
LABEL_36:
    v1 = v1;
    OUTLINED_FUNCTION_9_3(41, 0xE100000000000000, v4);
    if ((v35 & 1) != 0)
      OUTLINED_FUNCTION_44(41);
    OUTLINED_FUNCTION_89();
    if (v17)
      goto LABEL_60;
    *(_DWORD *)(v0 + 20) = v1;
LABEL_41:
    v22 = __OFADD__(v12, v18);
    v36 = v12 + v18;
    if (v22)
    {
LABEL_53:
      __break(1u);
    }
    else
    {
      if (v5)
      {
        OUTLINED_FUNCTION_82();
        OUTLINED_FUNCTION_0_10();
        OUTLINED_FUNCTION_1_2();
        OUTLINED_FUNCTION_75(v39, (unint64_t)v16, v4);
        OUTLINED_FUNCTION_80();
        if ((v2 & 1) != 0)
        {
          v52._countAndFlagsBits = v39;
          v52._object = v16;
          v1 = OUTLINED_FUNCTION_88(v52, v1);
        }
        OUTLINED_FUNCTION_2_4();
        OUTLINED_FUNCTION_4_4();
        OUTLINED_FUNCTION_140();
        if (v17)
          goto LABEL_57;
        *(_DWORD *)(v0 + 20) = v37;
      }
      else
      {
        v1 = 0;
      }
      if (!__OFADD__(v36, v1))
      {
        OUTLINED_FUNCTION_131();
        return;
      }
    }
    __break(1u);
    goto LABEL_55;
  }
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
}

#error "1A5664038: call analysis failed (funcsize=337)"

void sub_1A5664390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9)
{
  uint64_t v9;
  unint64_t v10;
  Swift::Int v11;
  Swift::Int v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  char v16;
  void *v17;
  uint64_t v18;
  Swift::Int v19;
  Swift::Int v20;
  unint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  Swift::Int v28;
  char v29;
  int v30;
  BOOL v31;
  uint64_t v32;
  Swift::Int v33;
  unsigned int *v34;
  Swift::Int v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  char *v39;
  Swift::UInt32 v40;
  int v41;
  Swift::Int v42;
  int v43;
  Swift::Int v44;
  char v45;
  Swift::String v46;
  int v47;
  Swift::UInt32 v48;
  int v49;
  uint64_t v50;
  Swift::Int v51;
  Swift::Int v52;
  char v53;
  char v54;
  Swift::Int v55;
  int v56;
  Swift::Int v57;
  unint64_t v58;
  uint64_t v59;
  unsigned int v60;
  int v61;
  Swift::Int v62;
  Swift::Int v63;
  uint64_t v64;
  uint64_t v65;
  Swift::UInt32 v66;
  Swift::Int v67;
  uint64_t v68;
  int v69;
  Swift::String v70;
  Swift::Int v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  int v75;
  Swift::Int v76;
  uint64_t v77;
  unint64_t v78;
  int v79;
  BOOL v80;
  int v81;
  Swift::Int v82;
  char v83;
  uint64_t v84;
  uint64_t v87;
  uint64_t v88;
  Swift::Int v89;
  int v90;
  int v91;
  Swift::Int v92;
  uint64_t v93;
  Swift::Int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  Swift::String v99;

  v10 = a9;
  v11 = *(_QWORD *)(a9 + 8);
  v12 = *(unsigned int *)(a9 + 20);
  OUTLINED_FUNCTION_120();
  v88 = v15;
  v83 = v16;
  if (v15)
  {
    v17 = v14;
    v18 = v13;
    OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_0_10();
    OUTLINED_FUNCTION_3_3();
    OUTLINED_FUNCTION_8_2(v18, (unint64_t)v17, a9 + 8);
    v20 = v19;
    v10 = v21;
    OUTLINED_FUNCTION_9_2();
    if ((v10 & 1) != 0)
    {
      v99._countAndFlagsBits = v18;
      v99._object = v17;
      v20 = OUTLINED_FUNCTION_53_0(v99, v12);
    }
    OUTLINED_FUNCTION_5_1();
    OUTLINED_FUNCTION_4_4();
    OUTLINED_FUNCTION_232();
    v23 = v22 + v20;
    if (__CFADD__(v22, (_DWORD)v20))
    {
LABEL_84:
      __break(1u);
LABEL_85:
      __break(1u);
      goto LABEL_86;
    }
    *(_DWORD *)(v10 + 20) = v23;
    if ((v83 & 1) == 0)
      goto LABEL_13;
  }
  else
  {
    v20 = 0;
    v24 = OUTLINED_FUNCTION_152();
    if ((v25 & 1) == 0)
      goto LABEL_64;
  }
  v26 = OUTLINED_FUNCTION_158();
  OUTLINED_FUNCTION_6_3(v26, v27);
  if ((v29 & 1) != 0)
    v28 = OUTLINED_FUNCTION_10_0(40);
  v30 = *(_DWORD *)(v10 + 20);
  v23 = v30 + v28;
  if (__CFADD__(v30, (_DWORD)v28))
    goto LABEL_87;
  *(_DWORD *)(v10 + 20) = v23;
  v31 = __OFADD__(v20, v28);
  v20 += v28;
  if (!v31)
  {
    v11 = v20;
    if (v88)
    {
LABEL_13:
      v82 = v20;
      OUTLINED_FUNCTION_121();
      v84 = v32;
      v96 = 0;
      v33 = 0;
      v34 = (unsigned int *)(OUTLINED_FUNCTION_60() + 64);
      LODWORD(v35) = v23;
      do
      {
        v36 = *((_QWORD *)v34 - 3);
        v37 = *((_QWORD *)v34 - 2);
        v93 = *v34;
        v95 = *((_QWORD *)v34 - 1);
        v90 = *((unsigned __int16 *)v34 + 2);
        v91 = *((unsigned __int8 *)v34 + 6);
        if ((v36 & 0x1000000000000000) != 0)
        {
          OUTLINED_FUNCTION_3_3();
          OUTLINED_FUNCTION_42();
          OUTLINED_FUNCTION_192();
          v9 = a9 + 8;
          v42 = ByteBuffer._setStringSlowpath(_:at:)(v70, v71);
        }
        else
        {
          v9 = a9 + 8;
          if ((v36 & 0x2000000000000000) != 0)
          {
            v97 = *((_QWORD *)v34 - 4);
            v98 = v36 & 0xFFFFFFFFFFFFFFLL;
            OUTLINED_FUNCTION_3_3();
            OUTLINED_FUNCTION_231();
            v38 = &v97;
            v39 = (char *)&v97 + (HIBYTE(v36) & 0xF);
            v40 = v35;
          }
          else
          {
            if ((*((_QWORD *)v34 - 4) & 0x1000000000000000) == 0)
              OUTLINED_FUNCTION_233();
            OUTLINED_FUNCTION_3_3();
            OUTLINED_FUNCTION_231();
            v38 = (uint64_t *)OUTLINED_FUNCTION_203();
            v40 = v35;
            v9 = a9 + 8;
          }
          ByteBuffer._setBytes(_:at:)((uint64_t)v38, (uint64_t)v39, v40);
          LODWORD(v42) = v41;
          OUTLINED_FUNCTION_38();
          v42 = v42;
        }
        v43 = *(_DWORD *)(v10 + 20);
        v35 = (v43 + v42);
        if (__CFADD__(v43, (_DWORD)v42))
        {
          __break(1u);
LABEL_72:
          __break(1u);
LABEL_73:
          __break(1u);
LABEL_74:
          __break(1u);
LABEL_75:
          __break(1u);
LABEL_76:
          __break(1u);
LABEL_77:
          __break(1u);
LABEL_78:
          __break(1u);
LABEL_79:
          __break(1u);
LABEL_80:
          __break(1u);
LABEL_81:
          __break(1u);
          goto LABEL_82;
        }
        *(_DWORD *)(v10 + 20) = v35;
        if (v37)
        {
          OUTLINED_FUNCTION_181(61, 0xE100000000000000, v9);
          if ((v45 & 1) != 0)
          {
            v46._countAndFlagsBits = 61;
            v46._object = (void *)0xE100000000000000;
            v44 = ByteBuffer._setStringSlowpath(_:at:)(v46, v35);
          }
          v47 = *(_DWORD *)(v10 + 20);
          v48 = v47 + v44;
          if (__CFADD__(v47, (_DWORD)v44))
            goto LABEL_75;
          v89 = v33;
          *(_DWORD *)(v10 + 20) = v48;
          v49 = *(unsigned __int8 *)v10;
          v10 = HIDWORD(v95) < v95;
          if (v49 == 1)
          {
            v97 = 91;
            v98 = 0xE100000000000000;
            if (HIDWORD(v95) < v95)
              goto LABEL_78;
            v92 = v42;
            v94 = v44;
            sub_1A594CC9C();
            sub_1A594B5F8();
            OUTLINED_FUNCTION_41();
            OUTLINED_FUNCTION_141();
            v50 = v97;
            v10 = v98;
            OUTLINED_FUNCTION_4_3();
            v9 = a9 + 8;
            OUTLINED_FUNCTION_22_0(v50, v10);
            v52 = v51;
            v54 = v53;
            OUTLINED_FUNCTION_41();
            if ((v54 & 1) != 0)
              v52 = OUTLINED_FUNCTION_33(v50, v10);
            OUTLINED_FUNCTION_41();
            v42 = v92;
            v55 = v94;
            OUTLINED_FUNCTION_232();
            LODWORD(v35) = v56 + v52;
            if (__CFADD__(v56, (_DWORD)v52))
              goto LABEL_79;
          }
          else
          {
            v55 = v44;
            OUTLINED_FUNCTION_176();
            if (HIDWORD(v95) < v95)
              goto LABEL_80;
            v58 = v93 | ((unint64_t)(v90 | (v91 << 16)) << 32);
            v59 = *(_QWORD *)(v37 + 24) + ((v58 >> 24) & 0xFFFF00 | BYTE6(v58)) + v95;
            v9 = a9 + 8;
            ByteBuffer._setBytes(_:at:)(v59, v59 + (HIDWORD(v95) - v95), v48);
            OUTLINED_FUNCTION_232();
            LODWORD(v35) = v61 + v60;
            if (__CFADD__(v61, v60))
              goto LABEL_81;
            v52 = v60;
          }
          *(_DWORD *)(v10 + 20) = v35;
          v57 = v55 + v52;
          if (__OFADD__(v55, v52))
            goto LABEL_76;
          v33 = v89;
        }
        else
        {
          v57 = 0;
        }
        v31 = __OFADD__(v42, v57);
        v62 = v42 + v57;
        if (v31)
          goto LABEL_72;
        v31 = __OFADD__(v33, v62);
        v63 = v33 + v62;
        if (v31)
          goto LABEL_73;
        if (v96 >= v87)
        {
          OUTLINED_FUNCTION_38();
          OUTLINED_FUNCTION_5_1();
          v67 = 0;
        }
        else
        {
          v10 = *(_QWORD *)(v10 + 32);
          if ((a5 & 0x1000000000000000) != 0)
          {
            OUTLINED_FUNCTION_11_1();
            OUTLINED_FUNCTION_12_1();
            v67 = OUTLINED_FUNCTION_33(a4, a5);
            OUTLINED_FUNCTION_38();
            OUTLINED_FUNCTION_15_1();
            OUTLINED_FUNCTION_36();
          }
          else
          {
            if ((a5 & 0x2000000000000000) != 0)
            {
              v97 = a4;
              v98 = v84;
              OUTLINED_FUNCTION_27();
              OUTLINED_FUNCTION_11_1();
              OUTLINED_FUNCTION_12_1();
              v64 = OUTLINED_FUNCTION_207();
              v66 = v35;
            }
            else
            {
              if ((a4 & 0x1000000000000000) == 0)
                sub_1A594C7D4();
              OUTLINED_FUNCTION_27();
              OUTLINED_FUNCTION_11_1();
              OUTLINED_FUNCTION_12_1();
              v64 = OUTLINED_FUNCTION_202();
              v66 = v35;
            }
            ByteBuffer._setBytes(_:at:)(v64, v65, v66);
            v9 = v68;
            OUTLINED_FUNCTION_38();
            OUTLINED_FUNCTION_15_1();
            OUTLINED_FUNCTION_36();
            OUTLINED_FUNCTION_17();
            v67 = v9;
          }
          OUTLINED_FUNCTION_5_1();
          OUTLINED_FUNCTION_232();
          LODWORD(v35) = v69 + v67;
          if (__CFADD__(v69, (_DWORD)v67))
            goto LABEL_77;
          *(_DWORD *)(v10 + 20) = v35;
        }
        v31 = __OFADD__(v63, v67);
        v33 = v63 + v67;
        if (v31)
          goto LABEL_74;
        v34 += 10;
        ++v96;
      }
      while (v88 != v96);
      OUTLINED_FUNCTION_77();
      v11 = v82 + v33;
      if (__OFADD__(v82, v33))
        goto LABEL_85;
      if ((v83 & 1) != 0)
        goto LABEL_59;
      v24 = 0;
      goto LABEL_64;
    }
LABEL_59:
    v72 = OUTLINED_FUNCTION_170();
    v9 = a9 + 8;
    OUTLINED_FUNCTION_6_3(v72, v73);
    if ((v74 & 1) != 0)
      v24 = OUTLINED_FUNCTION_10_0(41);
    v75 = *(_DWORD *)(v10 + 20);
    if (__CFADD__(v75, (_DWORD)v24))
      goto LABEL_89;
    *(_DWORD *)(v10 + 20) = v75 + v24;
LABEL_64:
    v76 = v11 + v24;
    if (__OFADD__(v11, v24))
    {
LABEL_82:
      __break(1u);
    }
    else
    {
      if (v88)
      {
        OUTLINED_FUNCTION_29();
        OUTLINED_FUNCTION_17_0();
        OUTLINED_FUNCTION_0_10();
        v77 = OUTLINED_FUNCTION_180();
        OUTLINED_FUNCTION_96(v77, v78, a9 + 8);
        OUTLINED_FUNCTION_31();
        OUTLINED_FUNCTION_4_4();
        OUTLINED_FUNCTION_23();
        v79 = *(_DWORD *)(v10 + 20);
        v80 = __CFADD__(v79, (_DWORD)v9);
        v81 = v79 + v9;
        if (v80)
        {
LABEL_86:
          __break(1u);
LABEL_87:
          __break(1u);
          goto LABEL_88;
        }
        *(_DWORD *)(v10 + 20) = v81;
      }
      else
      {
        v9 = 0;
      }
      if (!__OFADD__(v76, v9))
      {
        OUTLINED_FUNCTION_118();
        return;
      }
    }
    __break(1u);
    goto LABEL_84;
  }
LABEL_88:
  __break(1u);
LABEL_89:
  __break(1u);
}

void sub_1A566497C(Swift::Int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  unsigned __int8 v21;
  uint64_t v22;
  BOOL v23;
  Swift::Int v24;
  Swift::Int v25;
  Swift::Int v26;
  Swift::Int v27;
  char v28;
  Swift::String v29;
  int v30;
  BOOL v31;
  int v32;
  Swift::Int at;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;

  v11 = v10;
  v38 = *(_QWORD *)(a4 + 16);
  if (v38)
  {
    v13 = a4;
    v14 = a3;
    v37 = *(_QWORD *)(a3 + 16);
    v34 = a5 + 8;
    swift_retain();
    swift_retain();
    swift_retain();
    v15 = 0;
    v16 = 0;
    v35 = v13;
    v36 = v14;
    while (v37 != v16)
    {
      v17 = *(_QWORD *)(v14 + v15 + 32);
      v18 = *(void **)(v14 + v15 + 40);
      v19 = *(_QWORD *)(v13 + v15 + 32);
      v20 = *(unsigned int *)(v13 + v15 + 40) | ((unint64_t)*(unsigned __int8 *)(v13 + v15 + 44) << 32);
      v21 = *(_BYTE *)(v13 + v15 + 45);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A566658C(v19, v20, v21);
      sub_1A5705208(v17, v18, v19, v20 | ((unint64_t)v21 << 40));
      v23 = __OFADD__(a1, v22);
      v24 = a1 + v22;
      if (v23)
        goto LABEL_16;
      if (v16 >= *(_QWORD *)(a8 + 16) - 1)
      {
        swift_bridgeObjectRelease();
        v27 = 0;
      }
      else
      {
        v40 = v11;
        v25 = *(unsigned int *)(a5 + 20);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_retain();
        swift_retain();
        at = v25;
        sub_1A56814E0(a9, (unint64_t)a10, v34, v25);
        v27 = v26;
        LOBYTE(v25) = v28;
        swift_bridgeObjectRelease();
        if ((v25 & 1) != 0)
        {
          v29._countAndFlagsBits = a9;
          v29._object = a10;
          v27 = ByteBuffer._setStringSlowpath(_:at:)(v29, at);
        }
        v11 = v40;
        v30 = *(_DWORD *)(a5 + 20);
        v31 = __CFADD__(v30, (_DWORD)v27);
        v32 = v30 + v27;
        if (v31)
          goto LABEL_18;
        *(_DWORD *)(a5 + 20) = v32;
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
      }
      sub_1A5666618(v19, v20, v21);
      v23 = __OFADD__(v24, v27);
      a1 = v24 + v27;
      if (v23)
        goto LABEL_17;
      ++v16;
      v15 += 16;
      v13 = v35;
      v14 = v36;
      if (v38 == v16)
      {
        swift_release();
        swift_release();
        swift_release();
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
}

void sub_1A5664BF8(Swift::Int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  Swift::Int v24;
  char v25;
  Swift::String v26;
  int v27;
  BOOL v28;
  int v29;
  BOOL v30;
  Swift::Int v31;
  uint64_t v32;
  uint64_t v33;
  Swift::Int v34;
  Swift::Int v35;
  Swift::Int v36;
  Swift::Int v37;
  Swift::Int v38;
  char v39;
  char v40;
  Swift::String v41;
  int v42;
  int v43;
  uint64_t v44;
  Swift::Int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;

  v48 = *(_QWORD *)(a4 + 16);
  if (v48)
  {
    v11 = a5;
    v12 = a4;
    v13 = a3;
    v14 = *(_QWORD *)(a3 + 16);
    v51 = a5 + 8;
    swift_retain();
    swift_retain();
    swift_retain();
    v15 = 0;
    v16 = 0;
    v46 = v12;
    v47 = v13;
    v44 = v14;
    v50 = v11;
    while (v14 != v16)
    {
      v17 = *(_QWORD *)(v13 + v15 + 32);
      v18 = *(_QWORD *)(v13 + v15 + 40);
      v20 = *(_QWORD *)(v12 + v15 + 32);
      v19 = *(_QWORD *)(v12 + v15 + 40);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      sub_1A56BA418(v17, v18);
      v22 = v21;
      v23 = *(unsigned int *)(v11 + 20);
      sub_1A56814E0(32, 0xE100000000000000, v51, v23);
      if ((v25 & 1) != 0)
      {
        v26._countAndFlagsBits = 32;
        v26._object = (void *)0xE100000000000000;
        v24 = ByteBuffer._setStringSlowpath(_:at:)(v26, v23);
      }
      v11 = v50;
      v27 = *(_DWORD *)(v50 + 20);
      v28 = __CFADD__(v27, (_DWORD)v24);
      v29 = v27 + v24;
      if (v28)
        goto LABEL_21;
      *(_DWORD *)(v50 + 20) = v29;
      v30 = __OFADD__(v22, v24);
      v31 = v22 + v24;
      if (v30)
        goto LABEL_22;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A56BA418(v20, v19);
      v33 = v32;
      swift_bridgeObjectRelease();
      v34 = v31 + v33;
      if (__OFADD__(v31, v33))
        goto LABEL_23;
      v35 = a1 + v34;
      if (__OFADD__(a1, v34))
        goto LABEL_24;
      if (v16 >= *(_QWORD *)(a8 + 16) - 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v38 = 0;
      }
      else
      {
        v45 = a1 + v34;
        v36 = *(unsigned int *)(v50 + 20);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_retain();
        swift_retain();
        sub_1A56814E0(a9, (unint64_t)a10, v51, v36);
        v38 = v37;
        v40 = v39;
        swift_bridgeObjectRelease();
        if ((v40 & 1) != 0)
        {
          v41._countAndFlagsBits = a9;
          v41._object = a10;
          v38 = ByteBuffer._setStringSlowpath(_:at:)(v41, v36);
        }
        v11 = v50;
        v42 = *(_DWORD *)(v50 + 20);
        v28 = __CFADD__(v42, (_DWORD)v38);
        v43 = v42 + v38;
        v14 = v44;
        v35 = v45;
        if (v28)
          goto LABEL_26;
        *(_DWORD *)(v50 + 20) = v43;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a1 = v35 + v38;
      if (__OFADD__(v35, v38))
        goto LABEL_25;
      ++v16;
      v15 += 16;
      v13 = v47;
      v12 = v46;
      if (v48 == v16)
      {
        swift_release();
        swift_release();
        swift_release();
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  else
  {
LABEL_19:
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
}

void sub_1A5664F0C(Swift::Int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  Swift::Int v22;
  Swift::Int v23;
  Swift::Int v24;
  Swift::Int v25;
  char v26;
  Swift::String v27;
  int v28;
  BOOL v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  Swift::Int at;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Swift::String _;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v37 = *(_QWORD *)(a4 + 16);
  if (v37)
  {
    v12 = a4;
    v13 = a3;
    v14 = a9;
    v36 = *(_QWORD *)(a3 + 16);
    v42 = a5;
    v32 = a5 + 8;
    swift_retain();
    swift_retain();
    swift_retain();
    v15 = 0;
    v16 = 0;
    v31 = a8;
    v33 = v13;
    v35 = v12;
    while (v36 != v16)
    {
      v17 = *(_QWORD *)(v13 + v15 + 40);
      v18 = *(_QWORD *)(v12 + v15 + 32);
      v19 = *(_QWORD *)(v12 + v15 + 40);
      _._object = *(void **)(v13 + v15 + 32);
      v39 = v17;
      v40 = v18;
      v41 = v19;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A56FDE78((uint64_t *)&_._object, v42);
      v21 = __OFADD__(a1, v20);
      v22 = a1 + v20;
      if (v21)
        goto LABEL_16;
      if (v16 >= *(_QWORD *)(a8 + 16) - 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v25 = 0;
      }
      else
      {
        v23 = *(unsigned int *)(v42 + 20);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_retain();
        swift_retain();
        at = v23;
        sub_1A56814E0(v14, (unint64_t)a10, v32, v23);
        v25 = v24;
        LOBYTE(v23) = v26;
        swift_bridgeObjectRelease();
        if ((v23 & 1) != 0)
        {
          v27._countAndFlagsBits = a9;
          v27._object = a10;
          v25 = ByteBuffer._setStringSlowpath(_:at:)(v27, at);
        }
        v28 = *(_DWORD *)(v42 + 20);
        v29 = __CFADD__(v28, (_DWORD)v25);
        v30 = v28 + v25;
        v13 = v33;
        if (v29)
          goto LABEL_18;
        *(_DWORD *)(v42 + 20) = v30;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        a8 = v31;
      }
      v21 = __OFADD__(v22, v25);
      a1 = v22 + v25;
      v12 = v35;
      if (v21)
        goto LABEL_17;
      ++v16;
      v15 += 16;
      v14 = a9;
      if (v37 == v16)
      {
        swift_release();
        swift_release();
        swift_release();
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
}

void sub_1A566517C(Swift::Int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Swift::Int v22;
  Swift::Int v23;
  char v24;
  Swift::String v25;
  int v26;
  Swift::Int v27;
  Swift::Int v28;
  Swift::Int v29;
  Swift::Int v30;
  uint64_t v31;
  Swift::Int v32;
  char v33;
  Swift::String v34;
  int v35;
  BOOL v36;
  int v37;
  Swift::Int v38;
  Swift::Int v39;
  Swift::Int v40;
  Swift::Int v41;
  Swift::Int v42;
  uint64_t v43;
  char v44;
  char v45;
  Swift::String v46;
  int v47;
  int v48;
  Swift::Int at;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  unint64_t v57;
  Swift::Int v58;

  v54 = *(_QWORD *)(a4 + 16);
  if (v54)
  {
    v11 = a5;
    v12 = a4;
    v13 = a3;
    v53 = *(_QWORD *)(a3 + 16);
    v14 = a5 + 8;
    swift_retain();
    swift_retain();
    swift_retain();
    v15 = 0;
    v16 = 0;
    v56 = v14;
    v50 = v11;
    v51 = v13;
    v52 = v12;
    while (v53 != v16)
    {
      v58 = a1;
      v18 = *(_QWORD *)(v13 + v15 + 32);
      v17 = *(_QWORD *)(v13 + v15 + 40);
      v19 = *(_QWORD *)(v12 + v15 + 40);
      v57 = *(_QWORD *)(v12 + v15 + 32);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A56BA418(v18, v17);
      v21 = v20;
      v22 = *(unsigned int *)(v11 + 20);
      sub_1A56814E0(32, 0xE100000000000000, v14, *(_DWORD *)(v11 + 20));
      if ((v24 & 1) != 0)
      {
        v25._countAndFlagsBits = 32;
        v25._object = (void *)0xE100000000000000;
        v23 = ByteBuffer._setStringSlowpath(_:at:)(v25, v22);
      }
      v26 = *(_DWORD *)(v11 + 20);
      v27 = (v26 + v23);
      if (__CFADD__(v26, (_DWORD)v23))
        goto LABEL_27;
      *(_DWORD *)(v11 + 20) = v27;
      v28 = v21 + v23;
      if (__OFADD__(v21, v23))
        goto LABEL_28;
      if (v19)
      {
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A56BA418(v57, v19);
        v30 = v29;
        swift_bridgeObjectRelease();
        v31 = a9;
      }
      else
      {
        sub_1A56814E0(4999502, 0xE300000000000000, v56, v27);
        if ((v33 & 1) != 0)
        {
          v34._countAndFlagsBits = 4999502;
          v34._object = (void *)0xE300000000000000;
          v32 = ByteBuffer._setStringSlowpath(_:at:)(v34, v27);
        }
        v30 = v32;
        v11 = v50;
        v35 = *(_DWORD *)(v50 + 20);
        v36 = __CFADD__(v35, (_DWORD)v32);
        v37 = v35 + v32;
        v31 = a9;
        if (v36)
          goto LABEL_33;
        *(_DWORD *)(v50 + 20) = v37;
      }
      v38 = v28 + v30;
      if (__OFADD__(v28, v30))
        goto LABEL_29;
      v39 = v58 + v38;
      if (__OFADD__(v58, v38))
        goto LABEL_30;
      if (v16 >= *(_QWORD *)(a8 + 16) - 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v42 = 0;
        v14 = v56;
      }
      else
      {
        v40 = *(unsigned int *)(v11 + 20);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_retain();
        swift_retain();
        at = v40;
        sub_1A56814E0(v31, (unint64_t)a10, v56, v40);
        v42 = v41;
        v43 = v31;
        v45 = v44;
        swift_bridgeObjectRelease();
        if ((v45 & 1) != 0)
        {
          v46._countAndFlagsBits = v43;
          v46._object = a10;
          v42 = ByteBuffer._setStringSlowpath(_:at:)(v46, at);
        }
        v14 = v56;
        v11 = v50;
        v47 = *(_DWORD *)(v50 + 20);
        v36 = __CFADD__(v47, (_DWORD)v42);
        v48 = v47 + v42;
        if (v36)
          goto LABEL_32;
        *(_DWORD *)(v50 + 20) = v48;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
      }
      a1 = v39 + v42;
      v12 = v52;
      if (__OFADD__(v39, v42))
        goto LABEL_31;
      ++v16;
      v15 += 16;
      v13 = v51;
      if (v54 == v16)
      {
        swift_release();
        swift_release();
        swift_release();
        goto LABEL_25;
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
  }
  else
  {
LABEL_25:
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
}

uint64_t sub_1A56654E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  __int16 v21;
  int v22;
  int v23;
  __int128 v24;
  __int16 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  Swift::Int v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  Swift::String v33;
  int v34;
  BOOL v35;
  int v36;
  uint64_t v37;
  Swift::Int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v45[2];
  int v46;
  __int16 v47;
  char v48;
  __int128 v49;
  int v50;
  __int16 v51;
  char v52;
  uint64_t v53;

  v11 = v10;
  v43 = *(_QWORD *)(a4 + 16);
  if (v43)
  {
    v14 = a4;
    v15 = a3;
    v42 = *(_QWORD *)(a3 + 16);
    v53 = a5;
    v39 = a5 + 8;
    swift_retain();
    swift_retain();
    result = swift_retain();
    v17 = 0;
    v18 = 0;
    v37 = a8;
    v40 = v14;
    v41 = v15;
    while (v42 != v18)
    {
      v19 = *(_QWORD *)(v15 + v17 + 32);
      v20 = *(_BYTE *)(v15 + v17 + 54);
      v21 = *(_WORD *)(v15 + v17 + 52);
      v22 = *(_DWORD *)(v15 + v17 + 48);
      v23 = *(_DWORD *)(v14 + v17 + 48);
      v45[1] = *(_QWORD *)(v15 + v17 + 40);
      v24 = *(_OWORD *)(v14 + v17 + 32);
      v25 = *(_WORD *)(v14 + v17 + 52);
      v45[0] = v19;
      v46 = v22;
      v47 = v21;
      v48 = v20;
      v49 = v24;
      v50 = v23;
      v51 = v25;
      v52 = *(_BYTE *)(v14 + v17 + 54);
      swift_retain_n();
      swift_retain_n();
      sub_1A56C36A0((uint64_t)v45);
      v27 = v26;
      swift_release();
      result = swift_release();
      v28 = a1 + v27;
      if (__OFADD__(a1, v27))
        goto LABEL_16;
      if (v18 >= *(_QWORD *)(a8 + 16) - 1)
      {
        v31 = 0;
      }
      else
      {
        v44 = v11;
        v29 = *(unsigned int *)(v53 + 20);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_retain();
        swift_retain();
        v38 = v29;
        sub_1A56814E0(a9, (unint64_t)a10, v39, v29);
        v31 = v30;
        LOBYTE(v29) = v32;
        result = swift_bridgeObjectRelease();
        if ((v29 & 1) != 0)
        {
          v33._countAndFlagsBits = a9;
          v33._object = a10;
          result = ByteBuffer._setStringSlowpath(_:at:)(v33, v38);
          v31 = result;
        }
        v34 = *(_DWORD *)(v53 + 20);
        v35 = __CFADD__(v34, (_DWORD)v31);
        v36 = v34 + v31;
        v11 = v44;
        a8 = v37;
        if (v35)
          goto LABEL_18;
        *(_DWORD *)(v53 + 20) = v36;
        swift_release_n();
      }
      swift_release_n();
      swift_release();
      result = swift_release();
      a1 = v28 + v31;
      if (__OFADD__(v28, v31))
        goto LABEL_17;
      ++v18;
      v17 += 24;
      v14 = v40;
      v15 = v41;
      if (v43 == v18)
      {
        swift_release();
        swift_release();
        swift_release();
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    return a1;
  }
  return result;
}

void sub_1A56657A4(Swift::Int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  Swift::UInt32 v23;
  Swift::Int v24;
  char v25;
  Swift::String v26;
  Swift::Int v27;
  Swift::Int v28;
  int v29;
  BOOL v30;
  int v31;
  uint64_t v32;
  Swift::Int v33;
  Swift::Int v34;
  Swift::Int v35;
  uint64_t v36;
  Swift::Int v37;
  Swift::Int v38;
  char v39;
  char v40;
  Swift::String v41;
  int v42;
  int v43;
  uint64_t v44;
  Swift::Int at;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  Swift::Int v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  char v56;
  char v57;
  uint64_t v58;

  v11 = v10;
  v49 = *(_QWORD *)(a4 + 16);
  if (v49)
  {
    v13 = a5;
    v14 = a4;
    v15 = a3;
    v48 = *(_QWORD *)(a3 + 16);
    v51 = a5 + 8;
    swift_retain();
    OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_11_1();
    v16 = 0;
    v17 = 0;
    v46 = v14;
    v47 = v15;
    v44 = v13;
    while (v48 != v17)
    {
      v52 = a1;
      v19 = *(_QWORD *)(v15 + v16 + 32);
      v18 = *(_QWORD *)(v15 + v16 + 40);
      v20 = v14 + v16;
      v21 = *(_QWORD *)(v14 + v16 + 32);
      v22 = *(unsigned int *)(v20 + 40) | ((unint64_t)*(unsigned __int16 *)(v20 + 44) << 32);
      v23 = *(_DWORD *)(v13 + 20);
      OUTLINED_FUNCTION_184();
      v53 = v21;
      sub_1A566676C(v21, v22);
      sub_1A56814E0(v19, v18, v51, v23);
      v58 = v11;
      if ((v25 & 1) != 0)
      {
        OUTLINED_FUNCTION_222();
        v24 = ByteBuffer._setStringSlowpath(_:at:)(v26, v27);
      }
      v28 = v24;
      v29 = *(_DWORD *)(v13 + 20);
      v30 = __CFADD__(v29, (_DWORD)v24);
      v31 = v29 + v24;
      if (v30)
        goto LABEL_23;
      *(_DWORD *)(v13 + 20) = v31;
      if (BYTE5(v22) == 255)
      {
        v32 = 0;
      }
      else
      {
        v54 = v21;
        v55 = v22;
        v56 = BYTE4(v22);
        v57 = BYTE5(v22) & 1;
        sub_1A570551C((uint64_t)&v54, v13);
      }
      v33 = v28 + v32;
      if (__OFADD__(v28, v32))
        goto LABEL_24;
      v34 = v52 + v33;
      if (__OFADD__(v52, v33))
        goto LABEL_25;
      if (v17 >= *(_QWORD *)(a8 + 16) - 1)
      {
        swift_bridgeObjectRelease();
        v38 = 0;
      }
      else
      {
        v35 = *(unsigned int *)(v13 + 20);
        OUTLINED_FUNCTION_16_0();
        OUTLINED_FUNCTION_11_1();
        OUTLINED_FUNCTION_1_2();
        at = v35;
        v36 = v58;
        sub_1A56814E0(a9, (unint64_t)a10, v51, v35);
        v38 = v37;
        v40 = v39;
        v58 = v36;
        swift_bridgeObjectRelease();
        if ((v40 & 1) != 0)
        {
          v41._countAndFlagsBits = a9;
          v41._object = a10;
          v38 = ByteBuffer._setStringSlowpath(_:at:)(v41, at);
        }
        v13 = v44;
        v42 = *(_DWORD *)(v44 + 20);
        v30 = __CFADD__(v42, (_DWORD)v38);
        v43 = v42 + v38;
        if (v30)
          goto LABEL_27;
        *(_DWORD *)(v44 + 20) = v43;
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
      }
      sub_1A56667BC(v53, v22);
      a1 = v34 + v38;
      if (__OFADD__(v34, v38))
        goto LABEL_26;
      ++v17;
      v16 += 16;
      v11 = v58;
      v14 = v46;
      v15 = v47;
      if (v49 == v17)
      {
        swift_release();
        swift_release();
        swift_release();
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
  }
  else
  {
LABEL_21:
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
}

void sub_1A5665A90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_103();
  OUTLINED_FUNCTION_61(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10);
  OUTLINED_FUNCTION_5();
}

void sub_1A5665AB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_103();
  OUTLINED_FUNCTION_61(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10);
  OUTLINED_FUNCTION_5();
}

void sub_1A5665AD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t (*a12)(uint64_t))
{
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Swift::Int v20;
  char v21;
  char v22;
  uint64_t v23;
  Swift::Int v24;
  uint64_t v25;
  char v26;
  char v27;
  int v28;
  Swift::Int v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  Swift::Int v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  Swift::Int v38;
  Swift::Int v39;
  Swift::Int v40;
  Swift::Int v41;
  char v42;
  char v43;
  int v44;
  Swift::Int v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  Swift::String v49;
  Swift::String v50;

  OUTLINED_FUNCTION_70();
  if (v19)
  {
    OUTLINED_FUNCTION_132();
    OUTLINED_FUNCTION_3_3();
    OUTLINED_FUNCTION_1_2();
    OUTLINED_FUNCTION_22_0(v16, v17);
    v45 = v20;
    v22 = v21;
    OUTLINED_FUNCTION_37();
    if ((v22 & 1) != 0)
    {
      v24 = OUTLINED_FUNCTION_33(v16, v17);
      OUTLINED_FUNCTION_2_4();
      OUTLINED_FUNCTION_5_1();
      v23 = v13;
      v15 = v46;
    }
    else
    {
      OUTLINED_FUNCTION_2_4();
      OUTLINED_FUNCTION_5_1();
      v23 = v13;
      v15 = v46;
      v24 = v45;
    }
    OUTLINED_FUNCTION_201();
    v18 = v47;
    if (v26)
      goto LABEL_35;
    *(_DWORD *)(v12 + 20) = v14;
    if ((v15 & 1) == 0)
    {
      v25 = 0;
      goto LABEL_14;
    }
  }
  else
  {
    v24 = 0;
    v25 = 0;
    v23 = v13;
    if ((v15 & 1) == 0)
      goto LABEL_14;
  }
  OUTLINED_FUNCTION_9_3(40, 0xE100000000000000, v23);
  if ((v27 & 1) != 0)
  {
    v49._countAndFlagsBits = 40;
    v49._object = (void *)0xE100000000000000;
    OUTLINED_FUNCTION_35(v49, v14);
  }
  OUTLINED_FUNCTION_249();
  if (v26)
    goto LABEL_37;
  *(_DWORD *)(v12 + 20) = v28;
LABEL_14:
  v29 = v24 + v25;
  if (__OFADD__(v24, v25))
  {
    __break(1u);
    goto LABEL_32;
  }
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_87();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v30 = OUTLINED_FUNCTION_91();
  v31 = a12(v30);
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_19_0();
  OUTLINED_FUNCTION_5_1();
  v32 = __OFADD__(v29, v31);
  v33 = v29 + v31;
  if (v32)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if ((v15 & 1) != 0)
  {
    OUTLINED_FUNCTION_9_3(41, 0xE100000000000000, v23);
    if ((v34 & 1) != 0)
      OUTLINED_FUNCTION_34(41, 0xE100000000000000);
    v35 = v23;
    OUTLINED_FUNCTION_249();
    if (v26)
      goto LABEL_38;
    *(_DWORD *)(v12 + 20) = v37;
  }
  else
  {
    v36 = 0;
    v35 = v23;
  }
  v38 = v33 + v36;
  if (!__OFADD__(v33, v36))
  {
    if (v48)
    {
      v39 = *(unsigned int *)(v12 + 20);
      OUTLINED_FUNCTION_42();
      OUTLINED_FUNCTION_0_10();
      OUTLINED_FUNCTION_1_2();
      OUTLINED_FUNCTION_75(v18, (unint64_t)a9, v35);
      v41 = v40;
      v43 = v42;
      OUTLINED_FUNCTION_38();
      if ((v43 & 1) != 0)
      {
        v50._countAndFlagsBits = v18;
        v50._object = a9;
        v41 = OUTLINED_FUNCTION_88(v50, v39);
      }
      OUTLINED_FUNCTION_2_4();
      OUTLINED_FUNCTION_4_4();
      OUTLINED_FUNCTION_140();
      if (v26)
        goto LABEL_36;
      *(_DWORD *)(v12 + 20) = v44;
    }
    else
    {
      v41 = 0;
    }
    if (!__OFADD__(v38, v41))
    {
      OUTLINED_FUNCTION_122();
      return;
    }
    goto LABEL_34;
  }
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

void sub_1A5665D18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_103();
  OUTLINED_FUNCTION_61(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10);
  OUTLINED_FUNCTION_5();
}

void sub_1A5665D3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_103();
  OUTLINED_FUNCTION_61(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10);
  OUTLINED_FUNCTION_5();
}

void sub_1A5665D60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_103();
  OUTLINED_FUNCTION_61(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10);
  OUTLINED_FUNCTION_5();
}

void sub_1A5665D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Swift::Int v17;
  char v18;
  char v19;
  uint64_t v20;
  Swift::Int v21;
  uint64_t v22;
  char v23;
  char v24;
  int v25;
  Swift::Int v26;
  Swift::Int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  Swift::Int v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  Swift::Int v43;
  Swift::Int v44;
  Swift::Int v45;
  Swift::Int v46;
  char v47;
  char v48;
  int v49;
  uint64_t v50;
  void *v51;
  Swift::Int v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  Swift::String v56;
  Swift::String v57;

  OUTLINED_FUNCTION_70();
  if (v16)
  {
    OUTLINED_FUNCTION_132();
    OUTLINED_FUNCTION_3_3();
    OUTLINED_FUNCTION_1_2();
    OUTLINED_FUNCTION_22_0(v13, v14);
    v52 = v17;
    v19 = v18;
    OUTLINED_FUNCTION_37();
    if ((v19 & 1) != 0)
    {
      v21 = OUTLINED_FUNCTION_33(v13, v14);
      OUTLINED_FUNCTION_2_4();
      OUTLINED_FUNCTION_5_1();
      v20 = v10;
      v12 = v53;
    }
    else
    {
      OUTLINED_FUNCTION_2_4();
      OUTLINED_FUNCTION_5_1();
      v20 = v10;
      v12 = v53;
      v21 = v52;
    }
    OUTLINED_FUNCTION_201();
    v15 = v54;
    if (v23)
      goto LABEL_35;
    *(_DWORD *)(v9 + 20) = v11;
    if ((v12 & 1) == 0)
    {
      v22 = 0;
      goto LABEL_14;
    }
  }
  else
  {
    v21 = 0;
    v22 = 0;
    v20 = v10;
    if ((v12 & 1) == 0)
      goto LABEL_14;
  }
  OUTLINED_FUNCTION_9_3(40, 0xE100000000000000, v20);
  if ((v24 & 1) != 0)
  {
    v56._countAndFlagsBits = 40;
    v56._object = (void *)0xE100000000000000;
    OUTLINED_FUNCTION_35(v56, v11);
  }
  OUTLINED_FUNCTION_249();
  if (v23)
    goto LABEL_37;
  *(_DWORD *)(v9 + 20) = v25;
LABEL_14:
  v26 = v21 + v22;
  if (__OFADD__(v21, v22))
  {
    __break(1u);
    goto LABEL_32;
  }
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_87();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v27 = OUTLINED_FUNCTION_91();
  sub_1A56657A4(v27, v28, v29, v30, v31, v32, v33, v34, v50, v51);
  v36 = v35;
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_19_0();
  OUTLINED_FUNCTION_5_1();
  v37 = __OFADD__(v26, v36);
  v38 = v26 + v36;
  if (v37)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if ((v12 & 1) != 0)
  {
    OUTLINED_FUNCTION_9_3(41, 0xE100000000000000, v20);
    if ((v39 & 1) != 0)
      OUTLINED_FUNCTION_34(41, 0xE100000000000000);
    v40 = v20;
    OUTLINED_FUNCTION_249();
    if (v23)
      goto LABEL_38;
    *(_DWORD *)(v9 + 20) = v42;
  }
  else
  {
    v41 = 0;
    v40 = v20;
  }
  v43 = v38 + v41;
  if (!__OFADD__(v38, v41))
  {
    if (v55)
    {
      v44 = *(unsigned int *)(v9 + 20);
      OUTLINED_FUNCTION_42();
      OUTLINED_FUNCTION_0_10();
      OUTLINED_FUNCTION_1_2();
      OUTLINED_FUNCTION_75(v15, (unint64_t)a9, v40);
      v46 = v45;
      v48 = v47;
      OUTLINED_FUNCTION_38();
      if ((v48 & 1) != 0)
      {
        v57._countAndFlagsBits = v15;
        v57._object = a9;
        v46 = OUTLINED_FUNCTION_88(v57, v44);
      }
      OUTLINED_FUNCTION_2_4();
      OUTLINED_FUNCTION_4_4();
      OUTLINED_FUNCTION_140();
      if (v23)
        goto LABEL_36;
      *(_DWORD *)(v9 + 20) = v49;
    }
    else
    {
      v46 = 0;
    }
    if (!__OFADD__(v43, v46))
    {
      OUTLINED_FUNCTION_122();
      return;
    }
    goto LABEL_34;
  }
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

void sub_1A5665FC4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  Swift::Int v10;
  char v11;
  Swift::Int v12;
  int v13;
  Swift::Int v14;
  char v15;
  Swift::Int v16;
  int v17;
  BOOL v18;
  int v19;
  Swift::Int v20;
  char v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  Swift::Int v26;
  Swift::Int v27;
  _BYTE v28[40];

  if (a1)
  {
    v9 = a5 + 8;
    swift_retain();
    OUTLINED_FUNCTION_68();
    if ((v11 & 1) != 0)
      v10 = OUTLINED_FUNCTION_102(32, 0xE100000000000000);
    v12 = v10;
    v13 = *(_DWORD *)(a5 + 20);
    if (__CFADD__(v13, (_DWORD)v10))
    {
      __break(1u);
    }
    else
    {
      *(_DWORD *)(a5 + 20) = v13 + v10;
      if (*(_BYTE *)a5 != 1)
        goto LABEL_12;
      OUTLINED_FUNCTION_114(8751330, 0xA300000000000000, v9);
      if ((v15 & 1) != 0)
        v14 = OUTLINED_FUNCTION_102(8751330, 0xA300000000000000);
      v16 = v14;
      v17 = *(_DWORD *)(a5 + 20);
      v18 = __CFADD__(v17, (_DWORD)v14);
      v19 = v17 + v14;
      if (!v18)
      {
        *(_DWORD *)(a5 + 20) = v19;
        OUTLINED_FUNCTION_23();
        if (!__OFADD__(v12, v16))
          return;
        __break(1u);
LABEL_12:
        if (HIDWORD(a2) >= a2)
        {
          if (HIDWORD(a2) == (_DWORD)a2)
          {
            OUTLINED_FUNCTION_114(61, 0xE100000000000000, v9);
            if ((v21 & 1) != 0)
              v20 = OUTLINED_FUNCTION_102(61, 0xE100000000000000);
            v27 = v20;
            v22 = *(_DWORD *)(a5 + 20);
            v18 = __CFADD__(v22, (_DWORD)v20);
            v23 = v22 + v20;
            if (v18)
              goto LABEL_25;
            *(_DWORD *)(a5 + 20) = v23;
            OUTLINED_FUNCTION_23();
          }
          else
          {
            ByteBufferView.init(_:)(a1, a2, a3 & 0xFFFFFFFFFFFFFFLL, (uint64_t)v28);
            OUTLINED_FUNCTION_17_0();
            sub_1A5658B54((uint64_t)v28);
            v25 = v24;
            sub_1A553E5DC((uint64_t)v28);
            sub_1A56B7518(v25);
            v27 = v26;
            OUTLINED_FUNCTION_23();
            OUTLINED_FUNCTION_38();
          }
          if (!__OFADD__(v12, v27))
            return;
LABEL_24:
          __break(1u);
LABEL_25:
          __break(1u);
          return;
        }
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
    }
    __break(1u);
    goto LABEL_23;
  }
}

void sub_1A566614C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::Int v4;
  char v5;
  Swift::Int v6;
  int v7;
  BOOL v8;
  int v9;
  uint64_t v10;
  uint64_t v11;

  if (!a1)
    goto LABEL_6;
  OUTLINED_FUNCTION_268();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A555ECF4(v2, v1);
  OUTLINED_FUNCTION_68();
  if ((v5 & 1) != 0)
    v4 = OUTLINED_FUNCTION_102(32, 0xE100000000000000);
  v6 = v4;
  v7 = *(_DWORD *)(v3 + 20);
  v8 = __CFADD__(v7, (_DWORD)v4);
  v9 = v7 + v4;
  if (v8)
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(v3 + 20) = v9;
    v10 = OUTLINED_FUNCTION_190();
    v11 = sub_1A56C0320(v10);
    OUTLINED_FUNCTION_38();
    sub_1A555D250(v2, v1);
    if (!__OFADD__(v6, v11))
    {
LABEL_6:
      OUTLINED_FUNCTION_164();
      return;
    }
  }
  __break(1u);
}

#error "1A5666258: call analysis failed (funcsize=56)"

void sub_1A56662D8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  Swift::Int v14;
  Swift::Int v15;
  char v16;
  Swift::Int v17;
  int v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  Swift::String v22;

  if (a2 != 1)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v9 = OUTLINED_FUNCTION_203();
    sub_1A56664E0(v9, v10);
    v11 = OUTLINED_FUNCTION_265();
    v13 = sub_1A5711A14(v11, v12, a3, a4);
    v14 = *(unsigned int *)(a6 + 20);
    sub_1A56814E0(64, 0xE100000000000000, a6 + 8, *(_DWORD *)(a6 + 20));
    if ((v16 & 1) != 0)
    {
      v22._countAndFlagsBits = 64;
      v22._object = (void *)0xE100000000000000;
      v15 = OUTLINED_FUNCTION_35(v22, v14);
    }
    v17 = v15;
    OUTLINED_FUNCTION_200();
    if (v19)
    {
      __break(1u);
    }
    else
    {
      *(_DWORD *)(a6 + 20) = v18;
      OUTLINED_FUNCTION_38();
      v20 = OUTLINED_FUNCTION_203();
      sub_1A555F508(v20, v21);
      if (!__OFADD__(v13, v17))
        return;
    }
    __break(1u);
  }
}

void sub_1A56663C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int v10;
  char v11;
  Swift::Int v12;
  int v13;
  BOOL v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if ((a2 & 0xFF00000000) == 0xFE00000000)
    goto LABEL_6;
  OUTLINED_FUNCTION_268();
  sub_1A5503BA0(a1, v7);
  v8 = OUTLINED_FUNCTION_203();
  sub_1A5503BA0(v8, v9);
  OUTLINED_FUNCTION_68();
  if ((v11 & 1) != 0)
    v10 = OUTLINED_FUNCTION_102(32, 0xE100000000000000);
  v12 = v10;
  v13 = *(_DWORD *)(v5 + 20);
  v14 = __CFADD__(v13, (_DWORD)v10);
  v15 = v13 + v10;
  if (v14)
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(v5 + 20) = v15;
    sub_1A5703A90(a1, v4 & 0xFFFFFFFFFFLL, v3, v2 & 0xFFFFFFFFFFLL);
    v17 = v16;
    sub_1A5503B8C(a1, v4);
    v18 = OUTLINED_FUNCTION_203();
    sub_1A5503B8C(v18, v19);
    if (!__OFADD__(v12, v17))
    {
LABEL_6:
      OUTLINED_FUNCTION_164();
      return;
    }
  }
  __break(1u);
}

uint64_t sub_1A5666480(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

uint64_t sub_1A56664E0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return result;
}

uint64_t sub_1A56664F4(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6;

  v6 = (a4 >> 45) & 7;
  switch((_DWORD)v6)
  {
    case 6:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      return sub_1A566658C(a3, a4, BYTE5(a4) & 1);
    case 5:
      return sub_1A54E4334(a3, a4, SBYTE4(a4));
    case 2:
      return sub_1A5503BA0(result, a2);
  }
  return result;
}

uint64_t sub_1A566658C(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  else
    return sub_1A5503BA0(a1, a2);
}

uint64_t sub_1A5666598(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6;

  v6 = (a4 >> 45) & 7;
  switch((_DWORD)v6)
  {
    case 6:
      swift_bridgeObjectRelease();
      return sub_1A5666618(a3, a4, BYTE5(a4) & 1);
    case 5:
      return sub_1A54E3458(a3, a4, SBYTE4(a4));
    case 2:
      return sub_1A5503B8C(result, a2);
  }
  return result;
}

uint64_t sub_1A5666618(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  else
    return sub_1A5503B8C(a1, a2);
}

uint64_t sub_1A5666624(uint64_t a1)
{
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1A5666658(uint64_t a1)
{
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_1A566668C(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1A56666E0(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_1A5666734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) != 0)
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return sub_1A566676C(a3, a4);
}

uint64_t sub_1A566676C(uint64_t result, uint64_t a2)
{
  if (BYTE5(a2) != 255)
    return sub_1A566658C(result, a2, BYTE5(a2) & 1);
  return result;
}

uint64_t sub_1A5666784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) != 0)
    return swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1A56667BC(a3, a4);
}

uint64_t sub_1A56667BC(uint64_t result, uint64_t a2)
{
  if (BYTE5(a2) != 255)
    return sub_1A5666618(result, a2, BYTE5(a2) & 1);
  return result;
}

uint64_t sub_1A56667D4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  else
    return swift_retain();
}

uint64_t sub_1A56667E0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
    return swift_bridgeObjectRelease();
  else
    return swift_release();
}

uint64_t sub_1A56667EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) != 0)
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t sub_1A5666818(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (HIBYTE(a3) != 255)
    return sub_1A56667D4(result, a2, a3, HIBYTE(a3) & 1);
  return result;
}

uint64_t sub_1A5666830(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  if ((a5 & 0xFC | 2) != 0xFE)
  {
    OUTLINED_FUNCTION_109(result, a2, a3, a4, a5);
    v5 = OUTLINED_FUNCTION_238();
    return OUTLINED_FUNCTION_134(v5, v6, v7, v8);
  }
  return result;
}

uint64_t sub_1A5666868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  if ((a5 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1A56668A4(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (HIBYTE(a3) != 255)
    return sub_1A56667E0(result, a2, a3, HIBYTE(a3) & 1);
  return result;
}

uint64_t sub_1A56668BC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  if (a5 >> 62 == 1)
  {
    sub_1A5666868(result, a2, a3, a4, a5 & 1);
    return sub_1A56668A4(a6, a7, a8);
  }
  else if (!(a5 >> 62))
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A5666914(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  if (a5 >> 62 == 1)
  {
    sub_1A56667EC(result, a2, a3, a4, a5 & 1);
    return sub_1A5666818(a6, a7, a8);
  }
  else if (!(a5 >> 62))
  {
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return result;
}

uint64_t sub_1A566696C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  if ((~a5 & 0xFE) != 0)
  {
    OUTLINED_FUNCTION_109(result, a2, a3, a4, a5);
    v5 = OUTLINED_FUNCTION_238();
    return OUTLINED_FUNCTION_134(v5, v6, v7, v8);
  }
  return result;
}

void sub_1A56669A0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a4 >> 62 == 1)
  {
    sub_1A5503B8C(a3, a4);
    sub_1A5666AD8(a5, a6, a7, a8, (void (*)(void))sub_1A5503B8C);
  }
  else if (!(a4 >> 62))
  {
    swift_bridgeObjectRelease();
    sub_1A56667BC(a3, a4);
  }
}

void sub_1A5666A3C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a4 >> 62 == 1)
  {
    sub_1A5503BA0(a3, a4);
    sub_1A5666AD8(a5, a6, a7, a8, (void (*)(void))sub_1A5503BA0);
  }
  else if (!(a4 >> 62))
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A566676C(a3, a4);
  }
}

void sub_1A5666AD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  uint64_t v5;

  if ((a2 & 0xFF00000000) != 0xFE00000000)
  {
    a5();
    v5 = OUTLINED_FUNCTION_182();
    ((void (*)(uint64_t))a5)(v5);
  }
}

uint64_t sub_1A5666B28(uint64_t a1, uint64_t a2)
{
  __swift_memcpy37_8_1(a2, a1);
  return a2;
}

uint64_t sub_1A5666B64(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, unint64_t a5)
{
  uint64_t v5;
  uint64_t result;

  v5 = (a5 >> 37) & 7;
  if ((_DWORD)v5 == 4 || (_DWORD)v5 == 3)
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if ((_DWORD)v5 == 1)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return sub_1A55DC724(a3, a4);
  }
  return result;
}

uint64_t sub_1A5666BBC(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, unint64_t))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(unsigned int *)(a1 + 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 36) << 32));
  return a1;
}

uint64_t sub_1A5666BFC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, unint64_t a5)
{
  uint64_t v5;
  uint64_t result;

  v5 = (a5 >> 37) & 7;
  if ((_DWORD)v5 == 4 || (_DWORD)v5 == 3)
    return swift_bridgeObjectRelease();
  if ((_DWORD)v5 == 1)
  {
    swift_bridgeObjectRelease();
    return sub_1A55DC738(a3, a4);
  }
  return result;
}

uint64_t sub_1A5666C54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if ((a5 & 1) != 0)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return sub_1A566676C(a3, a4);
  }
  return result;
}

uint64_t sub_1A5666C8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if ((a5 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return sub_1A56667BC(a3, a4);
  }
  return result;
}

uint64_t sub_1A5666CC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if (a5 == 1)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return sub_1A566676C(a3, a4);
  }
  return result;
}

uint64_t sub_1A5666D04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if (a5 == 1)
  {
    swift_bridgeObjectRelease();
    return sub_1A56667BC(a3, a4);
  }
  return result;
}

void sub_1A5666D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;

  if (a5 == 2)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v5 = OUTLINED_FUNCTION_182();
    sub_1A566676C(v5, v6);
  }
}

void sub_1A5666D80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;

  if (a5 == 2)
  {
    swift_bridgeObjectRelease();
    v5 = OUTLINED_FUNCTION_182();
    sub_1A56667BC(v5, v6);
  }
}

uint64_t sub_1A5666DBC(uint64_t a1, unsigned __int8 a2)
{
  uint64_t result;

  if (a2 <= 2u)
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return result;
}

uint64_t sub_1A5666DD0(uint64_t a1, unsigned __int8 a2)
{
  uint64_t result;

  if (a2 <= 2u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1A5666DE4()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_0_10()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_1_2()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_2_4()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_3_3()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_4_4()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_5_1()
{
  return swift_release();
}

void OUTLINED_FUNCTION_6_3(uint64_t a1, unint64_t a2)
{
  Swift::UInt32 v2;
  uint64_t v3;

  sub_1A56814E0(a1, a2, v3, v2);
}

uint64_t OUTLINED_FUNCTION_7_5()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

void OUTLINED_FUNCTION_8_2(uint64_t a1, unint64_t a2, uint64_t a3)
{
  Swift::UInt32 v3;

  sub_1A56814E0(a1, a2, a3, v3);
}

void OUTLINED_FUNCTION_9_3(uint64_t a1, unint64_t a2, uint64_t a3)
{
  Swift::UInt32 v3;

  sub_1A56814E0(a1, a2, a3, v3);
}

Swift::Int OUTLINED_FUNCTION_10_0(uint64_t a1)
{
  Swift::Int v1;
  unint64_t v2;

  v2 = 0xE100000000000000;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v1);
}

uint64_t OUTLINED_FUNCTION_11_1()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_12_1()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_13_1()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

Swift::Int OUTLINED_FUNCTION_14_0(Swift::String _, Swift::Int at)
{
  return ByteBuffer._setStringSlowpath(_:at:)(_, at);
}

uint64_t OUTLINED_FUNCTION_15_1()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_17_0()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_18_0()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_19_0()
{
  return swift_release();
}

void OUTLINED_FUNCTION_22_0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  Swift::UInt32 v3;

  sub_1A56814E0(a1, a2, v2, v3);
}

uint64_t OUTLINED_FUNCTION_23()
{
  return swift_release();
}

void OUTLINED_FUNCTION_24(uint64_t a1, unint64_t a2, uint64_t a3)
{
  Swift::UInt32 v3;

  sub_1A56814E0(a1, a2, a3, v3);
}

uint64_t OUTLINED_FUNCTION_27()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

Swift::Int OUTLINED_FUNCTION_28(uint64_t a1, uint64_t a2)
{
  Swift::Int v2;

  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v2);
}

uint64_t OUTLINED_FUNCTION_29()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t OUTLINED_FUNCTION_30()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_31()
{
  return swift_bridgeObjectRelease();
}

Swift::Int OUTLINED_FUNCTION_33(uint64_t a1, uint64_t a2)
{
  Swift::Int v2;

  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v2);
}

Swift::Int OUTLINED_FUNCTION_34(uint64_t a1, uint64_t a2)
{
  Swift::Int v2;

  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v2);
}

Swift::Int OUTLINED_FUNCTION_35(Swift::String _, Swift::Int at)
{
  return ByteBuffer._setStringSlowpath(_:at:)(_, at);
}

uint64_t OUTLINED_FUNCTION_36()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_37()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_38()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_39()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_40()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_41()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_42()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

Swift::Int OUTLINED_FUNCTION_44(uint64_t a1)
{
  Swift::Int v1;
  unint64_t v2;

  v2 = 0xE100000000000000;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v1);
}

uint64_t OUTLINED_FUNCTION_48()
{
  return swift_release();
}

void OUTLINED_FUNCTION_49(uint64_t a1, uint64_t a2)
{
  Swift::UInt32 v2;

  ByteBuffer._setBytes(_:at:)(a1, a2, v2);
}

Swift::Int OUTLINED_FUNCTION_50(Swift::String _, Swift::Int at)
{
  return ByteBuffer._setStringSlowpath(_:at:)(_, at);
}

Swift::Int OUTLINED_FUNCTION_51(uint64_t a1)
{
  Swift::Int v1;
  unint64_t v2;

  v2 = 0xE100000000000000;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v1);
}

uint64_t OUTLINED_FUNCTION_52()
{
  return swift_bridgeObjectRelease();
}

Swift::Int OUTLINED_FUNCTION_53_0(Swift::String _, Swift::Int at)
{
  return ByteBuffer._setStringSlowpath(_:at:)(_, at);
}

uint64_t OUTLINED_FUNCTION_54()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_55()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_56_0()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

Swift::Int OUTLINED_FUNCTION_57(Swift::String _, Swift::Int at)
{
  return ByteBuffer._setStringSlowpath(_:at:)(_, at);
}

Swift::Int OUTLINED_FUNCTION_59(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, Swift::String _,uint64_t a21,uint64_t a22,uint64_t a23)
{
  Swift::Int v23;
  void *v24;
  Swift::String v25;

  v25._countAndFlagsBits = _._countAndFlagsBits;
  v25._object = v24;
  return ByteBuffer._setStringSlowpath(_:at:)(v25, v23);
}

uint64_t OUTLINED_FUNCTION_60()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

void OUTLINED_FUNCTION_61(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11)
{
  char v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);

  LOBYTE(a11) = v11;
  sub_1A5665AD8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a11, v12, v13);
}

void OUTLINED_FUNCTION_64(uint64_t a1)
{
  Swift::UInt32 v1;
  uint64_t v2;

  sub_1A56814E0(a1, 0xE100000000000000, v2, v1);
}

void OUTLINED_FUNCTION_68()
{
  uint64_t v0;
  Swift::UInt32 v1;

  sub_1A56814E0(32, 0xE100000000000000, v0, v1);
}

uint64_t OUTLINED_FUNCTION_69()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t OUTLINED_FUNCTION_72()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_73(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,int a26,__int16 a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  sub_1A565C11C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30,
    a31,
    a32,
    a33,
    a34,
    a35,
    a36,
    a37,
    a38,
    a39,
    a40,
    a41,
    a42,
    a43,
    a44);
}

uint64_t OUTLINED_FUNCTION_74()
{
  return sub_1A565F508();
}

void OUTLINED_FUNCTION_75(uint64_t a1, unint64_t a2, uint64_t a3)
{
  Swift::UInt32 v3;

  sub_1A56814E0(a1, a2, a3, v3);
}

void OUTLINED_FUNCTION_76(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1A5666A3C(a1, v10, a3, v8, a5, a6, v9, a8);
}

uint64_t OUTLINED_FUNCTION_77()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_78()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t OUTLINED_FUNCTION_80()
{
  return swift_bridgeObjectRelease();
}

Swift::Int OUTLINED_FUNCTION_81(uint64_t a1)
{
  Swift::Int v1;
  unint64_t v2;

  v2 = 0xE100000000000000;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v1);
}

uint64_t OUTLINED_FUNCTION_82()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

void OUTLINED_FUNCTION_83(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 112) = *(_QWORD *)(v5 - 128);
  *(_DWORD *)(v5 - 104) = a4;
  *(_BYTE *)(v5 - 100) = BYTE4(a4);
  *(_BYTE *)(v5 - 99) = BYTE5(a4) & 1;
  sub_1A570551C(v5 - 112, v4);
}

void OUTLINED_FUNCTION_84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_1A5665D88(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

void OUTLINED_FUNCTION_85(uint64_t a1, uint64_t a2)
{
  Swift::UInt32 v2;

  ByteBuffer._setBytes(_:at:)(a1, a2, v2);
}

Swift::Int OUTLINED_FUNCTION_86(Swift::String _, Swift::Int at)
{
  return ByteBuffer._setStringSlowpath(_:at:)(_, at);
}

uint64_t OUTLINED_FUNCTION_87()
{
  return swift_retain_n();
}

Swift::Int OUTLINED_FUNCTION_88(Swift::String _, Swift::Int at)
{
  return ByteBuffer._setStringSlowpath(_:at:)(_, at);
}

uint64_t OUTLINED_FUNCTION_90()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t OUTLINED_FUNCTION_91()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_92()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_93(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  return sub_1A5666734(v5, v4, *(_QWORD *)(v6 - 128), a4, 0);
}

uint64_t OUTLINED_FUNCTION_94()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_95(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  return sub_1A5666C54(v6, v5, v4, a4, 1);
}

void OUTLINED_FUNCTION_96(uint64_t a1, unint64_t a2, uint64_t a3)
{
  Swift::UInt32 v3;

  sub_1A56814E0(a1, a2, a3, v3);
}

uint64_t OUTLINED_FUNCTION_97()
{
  return sub_1A594C7D4();
}

uint64_t OUTLINED_FUNCTION_98()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_100(uint64_t a1, unint64_t a2, uint64_t a3, Swift::UInt32 a4)
{
  sub_1A56814E0(a1, a2, a3, a4);
}

void OUTLINED_FUNCTION_101(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1A5666D44(a1, a2, *(_QWORD *)(v4 - 128), a4, 2);
}

Swift::Int OUTLINED_FUNCTION_102(uint64_t a1, uint64_t a2)
{
  Swift::Int v2;

  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v2);
}

Swift::Int OUTLINED_FUNCTION_104(Swift::String _, Swift::Int at)
{
  return ByteBuffer._setStringSlowpath(_:at:)(_, at);
}

void OUTLINED_FUNCTION_105(uint64_t a1, unint64_t a2, uint64_t a3, Swift::UInt32 a4)
{
  sub_1A56814E0(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_107()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_108()
{
  return sub_1A594C7D4();
}

uint64_t OUTLINED_FUNCTION_109(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(v5 + 16))(a1, a2, a3, a4, a5 & 1);
}

Swift::Int OUTLINED_FUNCTION_110(Swift::String _, Swift::Int at)
{
  return ByteBuffer._setStringSlowpath(_:at:)(_, at);
}

void OUTLINED_FUNCTION_111(uint64_t a1, uint64_t a2, Swift::UInt32 a3)
{
  ByteBuffer._setBytes(_:at:)(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_112()
{
  return 0x534445474E414843;
}

void OUTLINED_FUNCTION_113(uint64_t a1, unint64_t a2, uint64_t a3)
{
  Swift::UInt32 v3;

  sub_1A56814E0(a1, a2, a3, v3);
}

void OUTLINED_FUNCTION_114(uint64_t a1, unint64_t a2, uint64_t a3)
{
  Swift::UInt32 v3;

  sub_1A56814E0(a1, a2, a3, v3);
}

void OUTLINED_FUNCTION_115(uint64_t a1, uint64_t a2)
{
  Swift::UInt32 v2;

  ByteBuffer._setBytes(_:at:)(a1, a2, v2);
}

void OUTLINED_FUNCTION_116(uint64_t a1, uint64_t a2)
{
  Swift::UInt32 v2;

  ByteBuffer._setBytes(_:at:)(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_117()
{
  return 0x45474E4148434E55;
}

void OUTLINED_FUNCTION_123(uint64_t a1, uint64_t a2)
{
  Swift::UInt32 v2;

  ByteBuffer._setBytes(_:at:)(a1, a2, v2);
}

void OUTLINED_FUNCTION_124(uint64_t a1, uint64_t a2, Swift::UInt32 a3)
{
  ByteBuffer._setBytes(_:at:)(a1, a2, a3);
}

Swift::Int OUTLINED_FUNCTION_125(uint64_t a1)
{
  uint64_t v1;
  Swift::Int v2;
  uint64_t v3;

  v3 = v1;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v2);
}

uint64_t OUTLINED_FUNCTION_127()
{
  return sub_1A594C7D4();
}

uint64_t OUTLINED_FUNCTION_128()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_129()
{
  uint64_t v0;
  Swift::UInt32 v1;

  sub_1A56814E0(40, 0xE100000000000000, v0, v1);
}

uint64_t OUTLINED_FUNCTION_132()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

void OUTLINED_FUNCTION_133(uint64_t a1, uint64_t a2, Swift::UInt32 a3)
{
  ByteBuffer._setBytes(_:at:)(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t OUTLINED_FUNCTION_135()
{
  return 41;
}

uint64_t OUTLINED_FUNCTION_136()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return sub_1A5666D04(v2, v4, v3, v0, v1);
}

uint64_t OUTLINED_FUNCTION_138@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_141()
{
  return sub_1A594B5F8();
}

uint64_t OUTLINED_FUNCTION_146()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

Swift::Int OUTLINED_FUNCTION_147(Swift::String _, Swift::Int at)
{
  return ByteBuffer._setStringSlowpath(_:at:)(_, at);
}

uint64_t OUTLINED_FUNCTION_148()
{
  uint64_t v0;

  return v0 - 112;
}

void OUTLINED_FUNCTION_149(uint64_t a1, unint64_t a2, uint64_t a3, Swift::UInt32 a4)
{
  sub_1A56814E0(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_150()
{
  return 40;
}

uint64_t OUTLINED_FUNCTION_152()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_155()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_157()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_158()
{
  return 40;
}

uint64_t OUTLINED_FUNCTION_160()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_161()
{
  int v0;
  uint64_t v1;

  *(_DWORD *)(v1 + 20) = v0;
}

void OUTLINED_FUNCTION_165(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, char a8, uint64_t a9)
{
  sub_1A565D30C(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

void OUTLINED_FUNCTION_166(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  sub_1A5660724(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30,
    a31,
    a32,
    a33,
    a34,
    a35,
    a36,
    a37,
    a38,
    a39,
    a40,
    a41,
    a42,
    a43,
    a44,
    a45);
}

uint64_t OUTLINED_FUNCTION_167()
{
  return sub_1A565B4C8();
}

void OUTLINED_FUNCTION_168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  sub_1A5662410(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30,
    a31,
    a32,
    a33,
    a34,
    a35,
    a36,
    a37,
    a38,
    a39);
}

void OUTLINED_FUNCTION_169(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  sub_1A565DD54(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30,
    a31,
    a32,
    a33,
    a34,
    a35,
    a36,
    a37,
    a38,
    a39);
}

uint64_t OUTLINED_FUNCTION_170()
{
  return 41;
}

uint64_t OUTLINED_FUNCTION_171(__n128 a1)
{
  uint64_t v1;

  *(__n128 *)(v1 - 176) = a1;
  return v1 - 176;
}

uint64_t OUTLINED_FUNCTION_172()
{
  return sub_1A594C7D4();
}

uint64_t OUTLINED_FUNCTION_176()
{
  return swift_beginAccess();
}

void OUTLINED_FUNCTION_177(uint64_t a1)
{
  Swift::UInt32 v1;
  uint64_t v2;

  sub_1A56814E0(a1, 0xE100000000000000, v2, v1);
}

void OUTLINED_FUNCTION_178(uint64_t a1, uint64_t a2)
{
  Swift::UInt32 v2;

  ByteBuffer._setBytes(_:at:)(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_179()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_180()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_181(uint64_t a1, unint64_t a2, uint64_t a3)
{
  Swift::UInt32 v3;

  sub_1A56814E0(a1, a2, a3, v3);
}

uint64_t OUTLINED_FUNCTION_182()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_183(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  return a33;
}

uint64_t OUTLINED_FUNCTION_184()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t OUTLINED_FUNCTION_185()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_1A5666598(v2, v1, v3, v0);
}

uint64_t OUTLINED_FUNCTION_187(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  uint64_t v4;

  return sub_1A56668BC(a1, a2, a3, *(_QWORD *)(v4 - 200), v3, *(_QWORD *)(v4 - 208), *(_QWORD *)(v4 - 216), *(_QWORD *)(v4 - 224));
}

uint64_t OUTLINED_FUNCTION_190()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_191()
{
  return 0x204C414954524150;
}

uint64_t OUTLINED_FUNCTION_194()
{
  return 0x20535554415453;
}

uint64_t OUTLINED_FUNCTION_195()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_196(uint64_t a1, unint64_t a2, uint64_t a3, Swift::UInt32 a4)
{
  sub_1A56814E0(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_202()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_203()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_207()
{
  uint64_t v0;

  return v0 - 112;
}

uint64_t OUTLINED_FUNCTION_209()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_212()
{
  uint64_t v0;

  return v0;
}

Swift::Int OUTLINED_FUNCTION_213()
{
  Swift::Int v0;
  void *v1;
  uint64_t v2;
  Swift::String v3;

  v3._countAndFlagsBits = v2;
  v3._object = v1;
  return ByteBuffer._setStringSlowpath(_:at:)(v3, v0);
}

uint64_t OUTLINED_FUNCTION_215()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_216()
{
  return sub_1A550F72C();
}

uint64_t OUTLINED_FUNCTION_217(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, __int128 a19)
{
  uint64_t v19;

  *(_OWORD *)(v19 - 112) = a19;
  return v19 - 112;
}

void OUTLINED_FUNCTION_220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,char a26)
{
  sub_1A5666D80(a1, a2, a3, a4, a26);
}

uint64_t OUTLINED_FUNCTION_221()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_224()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 192);
}

uint64_t OUTLINED_FUNCTION_226()
{
  return sub_1A594C7D4();
}

Swift::Int OUTLINED_FUNCTION_229(Swift::String _, Swift::Int at)
{
  return ByteBuffer._setStringSlowpath(_:at:)(_, at);
}

void OUTLINED_FUNCTION_230(uint64_t a1, uint64_t a2)
{
  Swift::UInt32 v2;

  ByteBuffer._setBytes(_:at:)(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_231()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t OUTLINED_FUNCTION_233()
{
  return sub_1A594C7D4();
}

uint64_t OUTLINED_FUNCTION_234()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_236()
{
  unsigned __int8 v0;
  uint64_t v1;

  return sub_1A55DC724(v1, v0);
}

uint64_t OUTLINED_FUNCTION_237()
{
  unsigned __int8 v0;
  uint64_t v1;

  return sub_1A55DC738(v1, v0);
}

uint64_t OUTLINED_FUNCTION_238()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_239()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_240(uint64_t a1, uint64_t a2, Swift::UInt32 a3)
{
  ByteBuffer._setBytes(_:at:)(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_242()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_243()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_247(uint64_t a1)
{
  sub_1A56C1284(a1);
}

uint64_t OUTLINED_FUNCTION_248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return a11;
}

uint64_t OUTLINED_FUNCTION_251()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_253()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_255()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_256(uint64_t a1, uint64_t a2)
{
  Swift::UInt32 v2;

  ByteBuffer._setBytes(_:at:)(a1, a2, v2);
}

void OUTLINED_FUNCTION_260()
{
  int v0;
  uint64_t v1;

  *(_DWORD *)(v1 + 20) = v0;
}

void OUTLINED_FUNCTION_261()
{
  int v0;
  uint64_t v1;

  *(_DWORD *)(v1 + 20) = v0;
}

void OUTLINED_FUNCTION_262(uint64_t a1, uint64_t a2, Swift::UInt32 a3)
{
  ByteBuffer._setBytes(_:at:)(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_263()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_264(uint64_t a1, unint64_t a2, uint64_t a3)
{
  Swift::UInt32 v3;

  sub_1A56814E0(a1, a2, a3, v3);
}

uint64_t OUTLINED_FUNCTION_265()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_266()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_267()
{
  uint64_t v0;
  unsigned __int8 v1;

  return sub_1A5666DD0(v0, v1);
}

uint64_t OUTLINED_FUNCTION_269()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_270()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_271()
{
  int v0;
  uint64_t v1;

  *(_DWORD *)(v1 + 20) = v0;
}

uint64_t OUTLINED_FUNCTION_272()
{
  return sub_1A594C7D4();
}

uint64_t OUTLINED_FUNCTION_273()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_274()
{
  uint64_t v0;

  return v0;
}

Swift::Int OUTLINED_FUNCTION_279(uint64_t a1, uint64_t a2)
{
  Swift::Int v2;

  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v2);
}

double (*NIOBSDSocket.AddressFamily.rawValue.modify())(_QWORD)
{
  return nullsub_1;
}

BOOL sub_1A5667E3C(int *a1, int *a2)
{
  return sub_1A5658650(*a1, *a2);
}

uint64_t sub_1A5667E48()
{
  unsigned int *v0;

  return sub_1A56F9EE8(*v0);
}

void sub_1A5667E50()
{
  sub_1A56A0610();
}

uint64_t sub_1A5667E58(uint64_t a1)
{
  unsigned int *v1;

  return sub_1A56FA034(a1, *v1);
}

double (*NIOBSDSocket.ProtocolFamily.rawValue.modify())(_QWORD)
{
  return nullsub_1;
}

double (*NIOBSDSocket.OptionLevel.rawValue.modify())(_QWORD)
{
  return nullsub_1;
}

_DWORD *sub_1A5667E94@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

double (*NIOBSDSocket.Option.rawValue.modify())(_QWORD)
{
  return nullsub_1;
}

void *NIOBSDSocket.AddressFamily.inet.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.AddressFamily.inet;
}

uint64_t static NIOBSDSocket.AddressFamily.inet.getter()
{
  return 2;
}

void *NIOBSDSocket.AddressFamily.inet6.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.AddressFamily.inet6;
}

uint64_t static NIOBSDSocket.AddressFamily.inet6.getter()
{
  return 30;
}

void *NIOBSDSocket.AddressFamily.unix.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.AddressFamily.unix;
}

void *NIOBSDSocket.ProtocolFamily.inet.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.ProtocolFamily.inet;
}

uint64_t static NIOBSDSocket.ProtocolFamily.inet.getter()
{
  return 2;
}

void *NIOBSDSocket.ProtocolFamily.inet6.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.ProtocolFamily.inet6;
}

uint64_t static NIOBSDSocket.ProtocolFamily.inet6.getter()
{
  return 30;
}

void *NIOBSDSocket.ProtocolFamily.unix.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.ProtocolFamily.unix;
}

void *NIOBSDSocket.ProtocolFamily.local.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.ProtocolFamily.local;
}

void *NIOBSDSocket.OptionLevel.ip.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.OptionLevel.ip;
}

uint64_t static NIOBSDSocket.OptionLevel.ip.getter()
{
  return 0;
}

void *NIOBSDSocket.OptionLevel.ipv6.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.OptionLevel.ipv6;
}

uint64_t static NIOBSDSocket.OptionLevel.ipv6.getter()
{
  return 41;
}

void *NIOBSDSocket.OptionLevel.tcp.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.OptionLevel.tcp;
}

uint64_t static NIOBSDSocket.OptionLevel.tcp.getter()
{
  return 6;
}

void *NIOBSDSocket.OptionLevel.socket.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.OptionLevel.socket;
}

uint64_t static NIOBSDSocket.OptionLevel.socket.getter()
{
  return 0xFFFFLL;
}

void *NIOBSDSocket.Option.ip_add_membership.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.ip_add_membership;
}

uint64_t static NIOBSDSocket.Option.ip_add_membership.getter()
{
  return 12;
}

void *NIOBSDSocket.Option.ip_drop_membership.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.ip_drop_membership;
}

uint64_t static NIOBSDSocket.Option.ip_drop_membership.getter()
{
  return 13;
}

void *NIOBSDSocket.Option.ip_multicast_if.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.ip_multicast_if;
}

uint64_t static NIOBSDSocket.Option.ip_multicast_if.getter()
{
  return 9;
}

void *NIOBSDSocket.Option.ip_multicast_loop.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.ip_multicast_loop;
}

uint64_t static NIOBSDSocket.Option.ip_multicast_loop.getter()
{
  return 11;
}

void *NIOBSDSocket.Option.ip_multicast_ttl.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.ip_multicast_ttl;
}

uint64_t static NIOBSDSocket.Option.ip_multicast_ttl.getter()
{
  return 10;
}

void *NIOBSDSocket.Option.ipv6_join_group.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.ipv6_join_group;
}

uint64_t static NIOBSDSocket.Option.ipv6_join_group.getter()
{
  return 12;
}

void *NIOBSDSocket.Option.ipv6_leave_group.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.ipv6_leave_group;
}

uint64_t static NIOBSDSocket.Option.ipv6_leave_group.getter()
{
  return 13;
}

void *NIOBSDSocket.Option.ipv6_multicast_hops.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.ipv6_multicast_hops;
}

uint64_t static NIOBSDSocket.Option.ipv6_multicast_hops.getter()
{
  return 10;
}

void *NIOBSDSocket.Option.ipv6_multicast_if.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.ipv6_multicast_if;
}

uint64_t static NIOBSDSocket.Option.ipv6_multicast_if.getter()
{
  return 9;
}

void *NIOBSDSocket.Option.ipv6_multicast_loop.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.ipv6_multicast_loop;
}

uint64_t static NIOBSDSocket.Option.ipv6_multicast_loop.getter()
{
  return 11;
}

void *NIOBSDSocket.Option.ipv6_v6only.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.ipv6_v6only;
}

uint64_t static NIOBSDSocket.Option.ipv6_v6only.getter()
{
  return 27;
}

void *NIOBSDSocket.Option.tcp_nodelay.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.tcp_nodelay;
}

void *NIOBSDSocket.Option.tcp_connection_info.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.tcp_connection_info;
}

uint64_t static NIOBSDSocket.Option.tcp_connection_info.getter()
{
  return 262;
}

void *NIOBSDSocket.Option.so_error.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.so_error;
}

uint64_t static NIOBSDSocket.Option.so_error.getter()
{
  return 4103;
}

void *NIOBSDSocket.Option.so_keepalive.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.so_keepalive;
}

uint64_t static NIOBSDSocket.Option.so_keepalive.getter()
{
  return 8;
}

void *NIOBSDSocket.Option.so_linger.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.so_linger;
}

uint64_t static NIOBSDSocket.Option.so_linger.getter()
{
  return 128;
}

void *NIOBSDSocket.Option.so_rcvbuf.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.so_rcvbuf;
}

uint64_t static NIOBSDSocket.Option.so_rcvbuf.getter()
{
  return 4098;
}

void *NIOBSDSocket.Option.so_rcvtimeo.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.so_rcvtimeo;
}

uint64_t static NIOBSDSocket.Option.so_rcvtimeo.getter()
{
  return 4102;
}

void *NIOBSDSocket.Option.so_reuseaddr.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.so_reuseaddr;
}

uint64_t static NIOBSDSocket.Option.so_reuseaddr.getter()
{
  return 4;
}

void *NIOBSDSocket.Option.so_timestamp.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.so_timestamp;
}

uint64_t static NIOBSDSocket.Option.so_timestamp.getter()
{
  return 1024;
}

unint64_t sub_1A566811C()
{
  unint64_t result;

  result = qword_1EE7A9160;
  if (!qword_1EE7A9160)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for NIOBSDSocket.AddressFamily, &type metadata for NIOBSDSocket.AddressFamily);
    atomic_store(result, (unint64_t *)&qword_1EE7A9160);
  }
  return result;
}

unint64_t sub_1A566815C()
{
  unint64_t result;

  result = qword_1EE7A9168;
  if (!qword_1EE7A9168)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for NIOBSDSocket.ProtocolFamily, &type metadata for NIOBSDSocket.ProtocolFamily);
    atomic_store(result, (unint64_t *)&qword_1EE7A9168);
  }
  return result;
}

unint64_t sub_1A566819C()
{
  unint64_t result;

  result = qword_1EE7A9170;
  if (!qword_1EE7A9170)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for NIOBSDSocket.OptionLevel, &type metadata for NIOBSDSocket.OptionLevel);
    atomic_store(result, (unint64_t *)&qword_1EE7A9170);
  }
  return result;
}

unint64_t sub_1A56681DC()
{
  unint64_t result;

  result = qword_1EE7A9178;
  if (!qword_1EE7A9178)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for NIOBSDSocket.Option, &type metadata for NIOBSDSocket.Option);
    atomic_store(result, (unint64_t *)&qword_1EE7A9178);
  }
  return result;
}

void type metadata accessor for NIOBSDSocket()
{
  OUTLINED_FUNCTION_3_1();
}

void type metadata accessor for NIOBSDSocket.AddressFamily()
{
  OUTLINED_FUNCTION_3_1();
}

void type metadata accessor for NIOBSDSocket.ProtocolFamily()
{
  OUTLINED_FUNCTION_3_1();
}

void type metadata accessor for NIOBSDSocket.OptionLevel()
{
  OUTLINED_FUNCTION_3_1();
}

void type metadata accessor for NIOBSDSocket.Option()
{
  OUTLINED_FUNCTION_3_1();
}

uint64_t sub_1A5668254(int a1, const char *a2, void *a3)
{
  uint64_t result;
  int v4;
  unint64_t *v5;
  uint64_t v6;

  result = inet_pton(a1, a2, a3);
  if ((_DWORD)result)
  {
    if ((_DWORD)result == 1)
      return result;
    v4 = MEMORY[0x1A85ACCC0]();
  }
  else
  {
    v4 = 22;
  }
  sub_1A56682C8();
  OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_4_5(v5, (uint64_t)"inet_pton(addressFamily:addressDescription:address:)");
  *(_DWORD *)(v6 + 16) = v4;
  return swift_willThrow();
}

unint64_t sub_1A56682C8()
{
  unint64_t result;

  result = qword_1EE7A9180;
  if (!qword_1EE7A9180)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for IOError, &type metadata for IOError);
    atomic_store(result, (unint64_t *)&qword_1EE7A9180);
  }
  return result;
}

const char *sub_1A5668304(int a1, const void *a2, char *a3, socklen_t a4)
{
  const char *v4;
  int v5;
  unint64_t *v6;
  uint64_t v7;

  v4 = inet_ntop(a1, a2, a3, a4);
  if (!v4)
  {
    v5 = MEMORY[0x1A85ACCC0]();
    sub_1A56682C8();
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_4_5(v6, (uint64_t)"inet_ntop(addressFamily:addressBytes:addressDescription:addressDescriptionLength:)");
    *(_DWORD *)(v7 + 16) = v5;
    swift_willThrow();
  }
  return v4;
}

uint64_t OUTLINED_FUNCTION_2_5(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

void OUTLINED_FUNCTION_4_5(unint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
  a1[1] = (a2 - 32) | 0x8000000000000000;
}

void sub_1A56683A8(uint64_t a1, unint64_t a2, uint64_t a3, Swift::UInt32 a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[2];

  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) != 0)
    {
      v9[0] = a1;
      v9[1] = a2 & 0xFFFFFFFFFFFFFFLL;
      ByteBuffer._setBytes(_:at:)((uint64_t)v9, (uint64_t)v9 + (HIBYTE(a2) & 0xF), a4);
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        v6 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        v7 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        v6 = sub_1A594C7D4();
      }
      if (v6)
        v8 = v6 + v7;
      else
        v8 = 0;
      ByteBuffer._setBytes(_:at:)(v6, v8, a4);
    }
  }
}

void sub_1A5668460(uint64_t a1, unint64_t a2, uint64_t a3, Swift::UInt32 a4)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[3];
  int v9;

  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) != 0)
    {
      v8[0] = a1;
      v8[1] = a2 & 0xFFFFFFFFFFFFFFLL;
      ByteBuffer._setBytes(_:at:)((uint64_t)v8, (uint64_t)v8 + (HIBYTE(a2) & 0xF), a4);
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        v6 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        v7 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        v6 = sub_1A594C7D4();
      }
      sub_1A566D11C(v6, v7, a4, &v9);
    }
  }
}

Swift::OpaquePointer_optional __swiftcall ByteBuffer.getBytes(at:length:)(Swift::Int at, Swift::Int length)
{
  void *v2;
  _BOOL8 v3;
  uint64_t v4;
  int64_t v5;
  const void *v6;
  int64_t v7;
  Swift::OpaquePointer_optional result;

  OUTLINED_FUNCTION_36_0();
  v5 = (int64_t)v2 - v4;
  if (__OFSUB__(v2, v4))
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v2 = 0;
  if (v5 < 0 || v3 < 0)
    goto LABEL_9;
  if (HIDWORD(v4) < v4)
    goto LABEL_11;
  if ((HIDWORD(v4) - v4) - v3 >= v5)
  {
    if (!__OFADD__(v5, v3))
    {
      if (v5 + v3 >= v5)
      {
        OUTLINED_FUNCTION_176();
        v6 = (const void *)OUTLINED_FUNCTION_18_1();
        sub_1A566AF30(v6, v7);
        goto LABEL_9;
      }
LABEL_13:
      __break(1u);
      goto _$s12NIOIMAPCore210ByteBufferV8getBytes2at6lengthSays5UInt8VGSgSi_SitF;
    }
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
LABEL_9:
  OUTLINED_FUNCTION_4_6();
_$s12NIOIMAPCore210ByteBufferV8getBytes2at6lengthSays5UInt8VGSgSi_SitF:
  result.is_nil = v3;
  result.value._rawValue = v2;
  return result;
}

Swift::OpaquePointer_optional __swiftcall ByteBuffer.readBytes(length:)(Swift::Int length)
{
  uint64_t v1;
  int v2;
  int v3;
  Swift::Int v4;
  Swift::Int v5;
  Swift::OpaquePointer_optional result;

  v3 = length;
  OUTLINED_FUNCTION_47();
  v4 = OUTLINED_FUNCTION_45();
  result = ByteBuffer.getBytes(at:length:)(v4, v5);
  if (!result.value._rawValue)
    goto LABEL_4;
  if (!__CFADD__(v2, v3))
  {
    *(_DWORD *)(v1 + 8) = v2 + v3;
LABEL_4:
    OUTLINED_FUNCTION_8_1();
    return result;
  }
  __break(1u);
  return result;
}

void ByteBuffer.writeStaticString(_:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  int v4;
  char v5;

  ByteBuffer.setStaticString(_:at:)(a1, a2, a3, *(_DWORD *)(v3 + 12));
  OUTLINED_FUNCTION_23_0();
  if (v5)
    __break(1u);
  else
    *(_DWORD *)(v3 + 12) = v4;
}

uint64_t ByteBuffer.setStaticString(_:at:)(uint64_t result, uint64_t a2, char a3, Swift::UInt32 a4)
{
  if ((a3 & 1) != 0)
  {
    __break(1u);
  }
  else if (result)
  {
    ByteBuffer._setBytes(_:at:)(result, result + a2, a4);
    return result;
  }
  __break(1u);
  return result;
}

Swift::Int __swiftcall ByteBuffer.writeString(_:)(Swift::String a1)
{
  uint64_t v1;
  Swift::UInt32 v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  char v8;
  char v9;
  Swift::Int result;
  int v11;
  BOOL v12;
  int v13;

  v2 = *(_DWORD *)(v1 + 12);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_204();
  OUTLINED_FUNCTION_22_1(v3, v4, v5, v2);
  v7 = v6;
  v9 = v8;
  result = OUTLINED_FUNCTION_17();
  if ((v9 & 1) != 0)
  {
    result = OUTLINED_FUNCTION_41_0();
    v7 = result;
  }
  v11 = *(_DWORD *)(v1 + 12);
  v12 = __CFADD__(v11, v7);
  v13 = v11 + v7;
  if (v12)
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(v1 + 12) = v13;
    OUTLINED_FUNCTION_6_4();
  }
  return result;
}

Swift::Int __swiftcall ByteBuffer.setString(_:at:)(Swift::String _, Swift::Int at)
{
  uint64_t v2;
  uint64_t v3;
  void *object;
  char v6;
  char v7;
  Swift::Int result;
  Swift::String v9;

  object = _._object;
  OUTLINED_FUNCTION_56_1();
  OUTLINED_FUNCTION_22_1(v3, (unint64_t)object, v2, at);
  v7 = v6;
  OUTLINED_FUNCTION_52();
  if ((v7 & 1) != 0)
  {
    v9._countAndFlagsBits = v3;
    v9._object = object;
    return ByteBuffer._setStringSlowpath(_:at:)(v9, at);
  }
  else
  {
    OUTLINED_FUNCTION_6_4();
  }
  return result;
}

Swift::Int __swiftcall ByteBuffer._setStringSlowpath(_:at:)(Swift::String _, Swift::Int at)
{
  uint64_t v2;
  Swift::UInt32 v3;
  void *object;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  Swift::Int v8;
  Swift::Int v9;
  char v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;

  v3 = at;
  object = _._object;
  OUTLINED_FUNCTION_56_1();
  OUTLINED_FUNCTION_204();
  sub_1A56683A8(v5, v6, v7, v3);
  v9 = v8;
  v11 = v10;
  OUTLINED_FUNCTION_17();
  if ((v11 & 1) != 0)
  {
    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_204();
    sub_1A5668460(v12, v13, v14, v3);
    if ((v15 & 0x100000000) != 0)
      v16 = sub_1A566A8CC(v2, (unint64_t)object, v3);
    else
      v16 = v15;
    OUTLINED_FUNCTION_17();
    return v16;
  }
  return v9;
}

void sub_1A56687F0(uint64_t a1@<X0>, uint64_t a2@<X1>, Swift::UInt32 a3@<W3>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  unsigned int v6;

  if (a1)
    v5 = a1 + a2;
  else
    v5 = 0;
  ByteBuffer._setBytes(_:at:)(a1, v5, a3);
  *a4 = v6;
}

Swift::String_optional __swiftcall ByteBuffer.getString(at:length:)(Swift::Int at, Swift::Int length)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  int64_t v5;
  Swift::String_optional result;

  OUTLINED_FUNCTION_36_0();
  v5 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v2 = 0;
  if (v5 < 0 || v3 < 0)
    goto LABEL_11;
  if (HIDWORD(v4) < v4)
    goto LABEL_13;
  if ((HIDWORD(v4) - v4) - v3 < v5)
    goto LABEL_11;
  if (__OFADD__(v5, v3))
    goto LABEL_14;
  if (v5 + v3 < v5)
  {
LABEL_15:
    __break(1u);
    goto _$s12NIOIMAPCore210ByteBufferV9getString2at6lengthSSSgSi_SitF;
  }
  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_18_1();
  sub_1A594B538();
LABEL_11:
  OUTLINED_FUNCTION_4_6();
_$s12NIOIMAPCore210ByteBufferV9getString2at6lengthSSSgSi_SitF:
  result.value._object = (void *)v3;
  result.value._countAndFlagsBits = v2;
  return result;
}

Swift::String_optional __swiftcall ByteBuffer.readString(length:)(Swift::Int length)
{
  uint64_t v1;
  unint64_t v2;
  void *v3;
  unsigned int v4;
  unsigned int v5;
  BOOL v6;
  unint64_t v7;
  int v8;
  Swift::String_optional result;

  OUTLINED_FUNCTION_36_0();
  if ((v2 & 0x8000000000000000) == 0)
  {
    v5 = *(_DWORD *)(v1 + 8);
    v4 = *(_DWORD *)(v1 + 12);
    v6 = v4 >= v5;
    v7 = v4 - v5;
    if (!v6)
    {
      __break(1u);
LABEL_9:
      __break(1u);
      goto _$s12NIOIMAPCore210ByteBufferV10readString6lengthSSSgSi_tF;
    }
    v8 = v2;
    if (v7 >= v2)
    {
      OUTLINED_FUNCTION_176();
      swift_retain();
      OUTLINED_FUNCTION_45();
      sub_1A594B538();
      v2 = swift_release();
      if (__CFADD__(v5, v8))
        goto LABEL_9;
      *(_DWORD *)(v1 + 8) = v5 + v8;
    }
  }
  OUTLINED_FUNCTION_46();
  OUTLINED_FUNCTION_4_6();
_$s12NIOIMAPCore210ByteBufferV10readString6lengthSSSgSi_tF:
  result.value._object = v3;
  result.value._countAndFlagsBits = v2;
  return result;
}

void ByteBuffer.writeSubstring(_:)()
{
  uint64_t v0;
  Swift::Int v1;
  uint64_t v2;
  unint64_t v3;
  void *v4;
  int v5;
  char v6;
  Swift::String v7;
  int v8;
  int v9;
  BOOL v10;
  int v11;

  v1 = *(unsigned int *)(v0 + 12);
  v2 = MEMORY[0x1A85AD950]();
  v4 = (void *)v3;
  OUTLINED_FUNCTION_22_1(v2, v3, v0, v1);
  if ((v6 & 1) != 0)
  {
    v7._countAndFlagsBits = v2;
    v7._object = v4;
    v5 = ByteBuffer._setStringSlowpath(_:at:)(v7, v1);
  }
  v8 = v5;
  OUTLINED_FUNCTION_17();
  v9 = *(_DWORD *)(v0 + 12);
  v10 = __CFADD__(v9, v8);
  v11 = v9 + v8;
  if (v10)
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(v0 + 12) = v11;
    OUTLINED_FUNCTION_6_4();
  }
}

void ByteBuffer.setSubstring(_:at:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, Swift::Int a5)
{
  uint64_t v5;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  char v10;
  Swift::String v11;

  v7 = MEMORY[0x1A85AD950]();
  v9 = (void *)v8;
  OUTLINED_FUNCTION_22_1(v7, v8, v5, a5);
  if ((v10 & 1) != 0)
  {
    v11._countAndFlagsBits = v7;
    v11._object = v9;
    ByteBuffer._setStringSlowpath(_:at:)(v11, a5);
  }
  OUTLINED_FUNCTION_52();
  OUTLINED_FUNCTION_6_4();
}

void ByteBuffer.writeDispatchData(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  BOOL v4;
  Swift::Int v5;
  uint64_t v6;
  int v7;
  BOOL v8;
  int v9;

  v1 = *(unsigned int *)(v0 + 12);
  v2 = OUTLINED_FUNCTION_49_0();
  v3 = v2;
  v4 = __OFADD__(v1, v2);
  v5 = v1 + v2;
  if (v4)
  {
    __break(1u);
  }
  else
  {
    ByteBuffer.reserveCapacity(_:)(v5);
    MEMORY[0x1E0C80A78](v6);
    OUTLINED_FUNCTION_38_0();
    OUTLINED_FUNCTION_59_0(sub_1A566AFB0);
    v7 = *(_DWORD *)(v0 + 12);
    v8 = __CFADD__(v7, v3);
    v9 = v7 + v3;
    if (!v8)
    {
      *(_DWORD *)(v0 + 12) = v9;
      OUTLINED_FUNCTION_17_1();
      return;
    }
  }
  __break(1u);
}

void ByteBuffer.setDispatchData(_:at:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  BOOL v4;
  Swift::Int v5;
  uint64_t v6;

  v3 = OUTLINED_FUNCTION_49_0();
  v4 = __OFADD__(a2, v3);
  v5 = a2 + v3;
  if (v4)
  {
    __break(1u);
  }
  else
  {
    ByteBuffer.reserveCapacity(_:)(v5);
    MEMORY[0x1E0C80A78](v6);
    OUTLINED_FUNCTION_38_0();
    OUTLINED_FUNCTION_59_0(sub_1A566B4F8);
    OUTLINED_FUNCTION_17_1();
  }
}

uint64_t sub_1A5668B60(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;

  v4 = a3 + a4;
  if (__OFADD__(a3, a4))
  {
    __break(1u);
  }
  else if (v4 >= a3)
  {
    v7 = result;
    UnsafeMutableRawBufferPointer.init(fastRebase:)(a3);
    sub_1A56F12C4(a3, v4, v7, a2);
    return sub_1A594AE54();
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5668C00(uint64_t a1)
{
  if (HIDWORD(a1) < a1)
    return -(uint64_t)(a1 - HIDWORD(a1));
  else
    return (HIDWORD(a1) - a1);
}

uint64_t sub_1A5668C18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  result = v2 - v1;
  if (v2 < v1)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (__OFSUB__(v2, v1))
LABEL_5:
    __break(1u);
  return result;
}

void sub_1A5668C34()
{
  uint64_t inited;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B2D0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A59ABD10;
  BodyStructure.subpartCount.getter(inited);
  if (__OFADD__(v1, 1))
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(inited + 32) = v1 + 1;
    sub_1A566B070();
    swift_setDeallocating();
  }
}

uint64_t sub_1A5668CAC(uint64_t a1, uint64_t a2)
{
  if (!BYTE4(a2))
    return 1;
  if (BYTE4(a2) == 1)
    return *(_QWORD *)(a1 + 16);
  return 0;
}

uint64_t sub_1A5668CD4(uint64_t a1)
{
  uint64_t v1;

  if (HIDWORD(a1) < a1)
    v1 = -(uint64_t)(a1 - HIDWORD(a1));
  else
    v1 = (HIDWORD(a1) - a1);
  return v1 + 1;
}

uint64_t sub_1A5668CF0(uint64_t (*a1)(_QWORD, _QWORD))
{
  uint64_t v1;
  unsigned int v3;
  int v4;
  int v5;
  _QWORD *v6;
  uint64_t result;
  unsigned int v8;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    ByteBuffer._copyStorageAndRebase(extraCapacity:resetIndices:)(0, 0);
  v3 = *(_DWORD *)(v1 + 16);
  v4 = *(unsigned __int16 *)(v1 + 20);
  v5 = *(unsigned __int8 *)(v1 + 22);
  v6 = (_QWORD *)(*(_QWORD *)v1 + 24);
  result = swift_beginAccess();
  v8 = v5 | (v4 << 8);
  if (v3 >= v8)
    return a1(*v6 + v8, *v6 + v8 + v3 - v8);
  __break(1u);
  return result;
}

void ByteBuffer.getDispatchData(at:length:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_36_0();
  v4 = v3 - v1;
  if (__OFSUB__(v3, v1))
  {
    __break(1u);
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v5 = v2;
  if (v4 < 0 || v0 < 0)
    goto LABEL_6;
  if (HIDWORD(v1) < v1)
    goto LABEL_11;
  if ((HIDWORD(v1) - v1) - v0 < v4)
  {
LABEL_6:
    v6 = OUTLINED_FUNCTION_35_0();
    __swift_storeEnumTagSinglePayload(v5, 1, 1, v6);
    return;
  }
  if (__OFADD__(v4, v0))
    goto LABEL_12;
  if (v4 + v0 >= v4)
  {
    OUTLINED_FUNCTION_176();
    sub_1A594AE0C();
    v7 = OUTLINED_FUNCTION_35_0();
    __swift_storeEnumTagSinglePayload(v5, 0, 1, v7);
    return;
  }
LABEL_13:
  __break(1u);
}

uint64_t ByteBuffer.readDispatchData(length:)@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798F50);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v16 - v9;
  v11 = *(_DWORD *)(v2 + 8);
  swift_retain();
  ByteBuffer.getDispatchData(at:length:)();
  swift_release();
  sub_1A566AFCC((uint64_t)v10, (uint64_t)v7);
  v12 = OUTLINED_FUNCTION_35_0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v12) == 1)
  {
    v13 = a2;
    v14 = 1;
LABEL_5:
    __swift_storeEnumTagSinglePayload(v13, v14, 1, v12);
    return sub_1A566B014((uint64_t)v10);
  }
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a2, v7, v12);
  if (!__CFADD__(v11, a1))
  {
    *(_DWORD *)(v2 + 8) = v11 + a1;
    v13 = a2;
    v14 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t ByteBuffer.readWithUnsafeReadableBytes(_:)(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t result;
  uint64_t v10;

  v4 = *(unsigned int *)(v1 + 8);
  v5 = *(_DWORD *)(v1 + 12);
  v6 = *(unsigned __int16 *)(v1 + 20);
  v7 = *(unsigned __int8 *)(v1 + 22);
  v8 = (_QWORD *)(*(_QWORD *)v1 + 24);
  result = swift_beginAccess();
  if (v5 < v4)
  {
    __break(1u);
    goto LABEL_7;
  }
  v10 = *v8 + (v7 | (v6 << 8)) + v4;
  result = a1(v10, v10 + v5 - v4);
  if (v2)
    return result;
  if (__CFADD__((_DWORD)v4, (_DWORD)result))
  {
LABEL_7:
    __break(1u);
    return result;
  }
  *(_DWORD *)(v1 + 8) = v4 + result;
  return result;
}

void ByteBuffer.readWithUnsafeReadableBytes<A>(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  int v10;
  int v11;
  BOOL v12;
  int v13;
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_57_0();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_39_0();
  MEMORY[0x1E0C80A78](v6);
  v8 = (int *)&v14[-v7];
  v15 = v0;
  v16 = v5;
  v17 = v4;
  ByteBuffer.withUnsafeReadableBytes<A>(_:)();
  if (v2)
    goto LABEL_4;
  v10 = *v8;
  OUTLINED_FUNCTION_33_0(v9, (uint64_t)v8 + *(int *)(v3 + 48));
  v11 = *(_DWORD *)(v1 + 8);
  v12 = __CFADD__(v11, v10);
  v13 = v11 + v10;
  if (!v12)
  {
    *(_DWORD *)(v1 + 8) = v13;
LABEL_4:
    OUTLINED_FUNCTION_32_0();
    return;
  }
  __break(1u);
}

void ByteBuffer.readWithUnsafeMutableReadableBytes(_:)()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  BOOL v4;
  int v5;

  sub_1A566BB64();
  if (!v1)
  {
    v3 = *(_DWORD *)(v0 + 8);
    v4 = __CFADD__(v3, v2);
    v5 = v3 + v2;
    if (v4)
      __break(1u);
    else
      *(_DWORD *)(v0 + 8) = v5;
  }
}

void ByteBuffer.readWithUnsafeMutableReadableBytes<A>(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  int v10;
  int v11;
  BOOL v12;
  int v13;
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_57_0();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_39_0();
  MEMORY[0x1E0C80A78](v6);
  v8 = (int *)&v14[-v7];
  v15 = v0;
  v16 = v5;
  v17 = v4;
  ByteBuffer.withUnsafeMutableReadableBytes<A>(_:)();
  if (v2)
    goto LABEL_4;
  v10 = *v8;
  OUTLINED_FUNCTION_33_0(v9, (uint64_t)v8 + *(int *)(v3 + 48));
  v11 = *(_DWORD *)(v1 + 8);
  v12 = __CFADD__(v11, v10);
  v13 = v11 + v10;
  if (!v12)
  {
    *(_DWORD *)(v1 + 8) = v13;
LABEL_4:
    OUTLINED_FUNCTION_32_0();
    return;
  }
  __break(1u);
}

uint64_t sub_1A5669264@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(char *, uint64_t, uint64_t)@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t result;

  v9 = OUTLINED_FUNCTION_28_0();
  result = a3((char *)a4 + *(int *)(v9 + 48), a1, a2);
  if (!v4)
    *a4 = result;
  return result;
}

void ByteBuffer.set(buffer:at:)()
{
  unint64_t v0;
  unsigned int v1;
  unint64_t v2;

  OUTLINED_FUNCTION_36_0();
  v1 = v0;
  v2 = HIDWORD(v0);
  OUTLINED_FUNCTION_176();
  if (v2 < v1)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_15_2(v2 - v1);
    OUTLINED_FUNCTION_4_6();
  }
}

void ByteBuffer.setBuffer(_:at:)()
{
  unint64_t v0;
  unsigned int v1;
  unint64_t v2;

  OUTLINED_FUNCTION_36_0();
  v1 = v0;
  v2 = HIDWORD(v0);
  OUTLINED_FUNCTION_176();
  if (v2 < v1)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_15_2(v2 - v1);
    OUTLINED_FUNCTION_4_6();
  }
}

void ByteBuffer.writeBuffer(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  Swift::UInt32 v7;
  _QWORD *v8;
  uint64_t v9;
  int v10;
  int v11;
  char v12;

  OUTLINED_FUNCTION_9_4();
  v2 = v1;
  v3 = *(unsigned int *)(v1 + 8);
  v4 = *(_DWORD *)(v1 + 12);
  v5 = *(unsigned __int16 *)(v1 + 20);
  v6 = *(unsigned __int8 *)(v1 + 22);
  v7 = *(_DWORD *)(v0 + 12);
  v8 = (_QWORD *)(*(_QWORD *)v1 + 24);
  OUTLINED_FUNCTION_176();
  if (v4 < v3)
  {
    __break(1u);
    goto LABEL_6;
  }
  v9 = *v8 + (v6 | (v5 << 8)) + v3;
  ByteBuffer._setBytes(_:at:)(v9, v9 + v4 - v3, v7);
  OUTLINED_FUNCTION_23_0();
  if (v12)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  *(_DWORD *)(v0 + 12) = v11;
  if (!__CFADD__((_DWORD)v3, v10))
  {
    *(_DWORD *)(v2 + 8) = v3 + v10;
    OUTLINED_FUNCTION_2_6();
    return;
  }
LABEL_7:
  __break(1u);
}

void ByteBuffer.writeBytes<A>(_:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  char v4;

  ByteBuffer.setBytes<A>(_:at:)(a1, *(_DWORD *)(v2 + 12), a2);
  OUTLINED_FUNCTION_23_0();
  if (v4)
    __break(1u);
  else
    *(_DWORD *)(v2 + 12) = v3;
}

void ByteBuffer.writeBytes(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  char v4;

  ByteBuffer._setBytes(_:at:)(a1, a2, *(_DWORD *)(v2 + 12));
  OUTLINED_FUNCTION_23_0();
  if (v4)
    __break(1u);
  else
    *(_DWORD *)(v2 + 12) = v3;
}

Swift::Int __swiftcall ByteBuffer.writeRepeatingByte(_:count:)(Swift::UInt8 _, Swift::Int count)
{
  uint64_t v2;
  int v3;
  Swift::Int result;
  int v5;
  BOOL v6;
  int v7;

  v3 = count;
  result = ByteBuffer.setRepeatingByte(_:count:at:)(_, count, *(unsigned int *)(v2 + 12));
  v5 = *(_DWORD *)(v2 + 12);
  v6 = __CFADD__(v5, v3);
  v7 = v5 + v3;
  if (v6)
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(v2 + 12) = v7;
    OUTLINED_FUNCTION_1();
  }
  return result;
}

Swift::Int __swiftcall ByteBuffer.setRepeatingByte(_:count:at:)(Swift::UInt8 _, Swift::Int count, Swift::Int at)
{
  uint64_t v3;
  Swift::Int result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  OUTLINED_FUNCTION_9_4();
  if (v5 < 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  v7 = v6;
  v8 = v6 + v5;
  if (__OFADD__(v6, v5))
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v9 = result;
  ByteBuffer.reserveCapacity(_:)(v6 + v5);
  if ((OUTLINED_FUNCTION_34_0() & 1) == 0)
    ByteBuffer._copyStorageAndRebase(extraCapacity:resetIndices:)(0, 0);
  v10 = *(unsigned __int16 *)(v3 + 20);
  v11 = *(unsigned __int8 *)(v3 + 22);
  v12 = (_QWORD *)(*(_QWORD *)v3 + 24);
  result = OUTLINED_FUNCTION_176();
  if (v8 < v7)
    goto LABEL_12;
  if (v8 - v7 < 0)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  if (v8 != v7)
    memset((void *)(*v12 + (v11 | (v10 << 8)) + v7), v9, v8 - v7);
  OUTLINED_FUNCTION_2_6();
  return result;
}

uint64_t ByteBuffer.slice()(uint64_t result, unint64_t a2, uint64_t a3)
{
  BOOL v4;
  uint64_t v5;

  v4 = HIDWORD(a2) >= a2;
  v5 = (HIDWORD(a2) - a2);
  if (v4)
  {
    result = ByteBuffer.getSlice(at:length:)(a2, v5, result, a2, a3 & 0xFFFFFFFFFFFFFFLL);
    if (result)
      return result;
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t ByteBuffer.readSlice(length:)(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  v4 = *(_QWORD *)v1;
  OUTLINED_FUNCTION_47();
  v6 = v2 | (v5 << 32);
  v10 = v7 | (v8 << 32) | (v9 << 48);
  swift_retain();
  v11 = OUTLINED_FUNCTION_45();
  v13 = ByteBuffer.getSlice(at:length:)(v11, v12, v4, v6, v10);
  result = swift_release();
  if (!v13)
    return v13;
  if (!__CFADD__((_DWORD)v2, a1))
  {
    *(_DWORD *)(v1 + 8) = v2 + a1;
    return v13;
  }
  __break(1u);
  return result;
}

void ByteBuffer.writeImmutableBuffer(_:)()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unsigned int v4;
  unint64_t v5;
  Swift::UInt32 v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  int v10;
  char v11;

  OUTLINED_FUNCTION_36_0();
  v2 = v1;
  v4 = v3;
  v5 = HIDWORD(v3);
  v6 = *(_DWORD *)(v0 + 12);
  v8 = (_QWORD *)(v7 + 24);
  OUTLINED_FUNCTION_176();
  if (v5 < v4)
  {
    __break(1u);
  }
  else
  {
    v9 = *v8 + ((v2 >> 24) & 0xFFFF00 | BYTE6(v2)) + v4;
    ByteBuffer._setBytes(_:at:)(v9, v9 + v5 - v4, v6);
    OUTLINED_FUNCTION_23_0();
    if (!v11)
    {
      *(_DWORD *)(v0 + 12) = v10;
      OUTLINED_FUNCTION_4_6();
      return;
    }
  }
  __break(1u);
}

void ByteBuffer.init()()
{
  if (qword_1EE796BD0 != -1)
    swift_once();
  swift_retain();
  OUTLINED_FUNCTION_204();
}

void ByteBuffer.init(string:)(uint64_t a1, uint64_t a2)
{
  ByteBufferAllocator.buffer(string:)(a1, a2, j_j__malloc, j_j__realloc, j_j__free, sub_1A566C0C4);
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_8_1();
}

#error "1A5669870: call analysis failed (funcsize=75)"

void ByteBuffer.init(substring:)(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  ByteBufferAllocator.buffer(substring:)(a1, a2, a3, a4, (uint64_t (*)(_QWORD))j_j__malloc, (uint64_t)j_j__realloc, (uint64_t)j_j__free);
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_8_1();
}

uint64_t ByteBufferAllocator.buffer(substring:)(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t (*a5)(_QWORD), uint64_t a6, uint64_t a7)
{
  void *v10;
  uint64_t v12;
  unint64_t v14;
  int v15;
  uint64_t v16;
  int v17;
  Swift::UInt32 v18;
  __int16 v19;
  char v20;
  int v21;
  unint64_t v22;
  int v23;
  char v24;
  Swift::String v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  int v38;
  Swift::UInt32 v39;
  int v40;
  __int16 v41;
  char v42;

  v10 = (void *)a4;
  v12 = a2;
  v14 = sub_1A565A8B0(a1, a2, a3, a4);
  if ((v14 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  v15 = v14;
  if (!v14)
  {
    if (qword_1EE796BD0 != -1)
      goto LABEL_12;
    goto LABEL_5;
  }
  OUTLINED_FUNCTION_10_1();
  OUTLINED_FUNCTION_8_3(v15, a5, a6, a7);
  v17 = 0;
  v18 = 0;
  v19 = 0;
  v20 = 0;
  v21 = *(_DWORD *)(v16 + 16);
  while (1)
  {
    v37 = v16;
    v38 = v17;
    v39 = v18;
    v40 = v21;
    v41 = v19;
    v42 = v20;
    v12 = MEMORY[0x1A85AD950](a1, v12, a3, v10);
    v10 = (void *)v22;
    OUTLINED_FUNCTION_22_1(v12, v22, (uint64_t)&v37, v18);
    if ((v24 & 1) != 0)
    {
      v25._countAndFlagsBits = v12;
      v25._object = v10;
      v23 = ByteBuffer._setStringSlowpath(_:at:)(v25, v18);
    }
    v26 = v23;
    v27 = OUTLINED_FUNCTION_17();
    if (!__CFADD__(v39, v26))
      break;
LABEL_11:
    __break(1u);
LABEL_12:
    swift_once();
LABEL_5:
    v17 = qword_1EE7F9218;
    v18 = HIDWORD(qword_1EE7F9218);
    v21 = dword_1EE7F9220;
    v19 = word_1EE7F9224;
    v20 = byte_1EE7F9226;
    v16 = swift_retain();
  }
  return OUTLINED_FUNCTION_0_11(v27, v28, v29, v30, v31, v32, v33, v34, v36, v37);
}

uint64_t ByteBuffer.init(staticString:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ByteBufferAllocator.buffer(staticString:)(a1, a2, a3, j_j__malloc, j_j__realloc, j_j__free, sub_1A566C0C4);
}

#error "1A5669B60: call analysis failed (funcsize=63)"

uint64_t ByteBuffer.init<A>(bytes:)(uint64_t *a1, uint64_t a2)
{
  ByteBufferAllocator.buffer<A>(bytes:)(a1, (uint64_t (*)(_QWORD))j_j__malloc, (uint64_t)j_j__realloc, (uint64_t)j_j__free, (uint64_t)sub_1A566C0C4, a2);
  OUTLINED_FUNCTION_16_2();
  return OUTLINED_FUNCTION_46();
}

uint64_t ByteBufferAllocator.buffer<A>(bytes:)(uint64_t *a1, uint64_t (*a2)(_QWORD), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  __int128 v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;

  v12 = sub_1A594B748();
  if (v12 < 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  v14 = v12;
  if (!v12)
  {
    if (qword_1EE796BD0 == -1)
    {
LABEL_5:
      *(_QWORD *)&v13 = qword_1EE7F9218;
      v25 = v13;
      v15 = swift_retain();
      goto LABEL_6;
    }
LABEL_8:
    swift_once();
    goto LABEL_5;
  }
  OUTLINED_FUNCTION_10_1();
  static ByteBuffer._Storage.reallocated(minimumCapacity:allocator:)(v14, a2, a3, a4, a5);
LABEL_6:
  v27 = v15;
  ByteBuffer.writeBytes<A>(_:)(a1, a6);
  return OUTLINED_FUNCTION_30_0(v16, v17, v18, v19, v20, v21, v22, v23, v25, *((uint64_t *)&v25 + 1), v26, v27);
}

uint64_t ByteBuffer.init<A>(integer:endianness:as:)(uint64_t a1)
{
  ByteBufferAllocator.buffer<A>(integer:endianness:as:)(a1);
  OUTLINED_FUNCTION_16_2();
  return OUTLINED_FUNCTION_46();
}

#error "1A5669E74: call analysis failed (funcsize=63)"

#error "1A5669F20: call analysis failed (funcsize=41)"

#error "1A5669FDC: call analysis failed (funcsize=44)"

void ByteBuffer.init(buffer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  int v24;

  OUTLINED_FUNCTION_12_2();
  v19 = v18;
  v21 = v20 - v18;
  if (v20 < v18)
  {
    __break(1u);
    goto LABEL_9;
  }
  v15 = v17;
  v14 = v16;
  if (!(_DWORD)v21)
  {
    if (qword_1EE796BD0 != -1)
      goto LABEL_10;
    goto LABEL_5;
  }
  OUTLINED_FUNCTION_10_1();
  static ByteBuffer._Storage.reallocated(minimumCapacity:allocator:)(v21, (uint64_t (*)(_QWORD))j_j__malloc, (uint64_t)j_j__realloc, (uint64_t)j_j__free, (uint64_t)sub_1A566C0C4);
  OUTLINED_FUNCTION_37_0();
  while (1)
  {
    OUTLINED_FUNCTION_53_1();
    OUTLINED_FUNCTION_176();
    v22 = *(_QWORD *)(v14 + 24) + ((v15 >> 24) & 0xFFFF00 | BYTE6(v15)) + v19;
    OUTLINED_FUNCTION_52_0(v22, v22 + v21);
    v24 = v23;
    swift_release();
    if (!__CFADD__(a14, v24))
      break;
LABEL_9:
    __break(1u);
LABEL_10:
    swift_once();
LABEL_5:
    OUTLINED_FUNCTION_21_1();
  }
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_5_2();
}

void ByteBufferAllocator.buffer(buffer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(_QWORD);
  uint64_t v28;
  int v29;

  OUTLINED_FUNCTION_12_2();
  v22 = v21;
  v24 = v23 - v21;
  if (v23 < v21)
  {
    __break(1u);
    goto LABEL_9;
  }
  v14 = v17;
  v15 = v16;
  if (!(_DWORD)v24)
  {
    if (qword_1EE796BD0 != -1)
      goto LABEL_10;
    goto LABEL_5;
  }
  v25 = v20;
  v26 = v19;
  v27 = v18;
  OUTLINED_FUNCTION_10_1();
  OUTLINED_FUNCTION_8_3(v24, v27, v26, v25);
  OUTLINED_FUNCTION_37_0();
  while (1)
  {
    OUTLINED_FUNCTION_53_1();
    OUTLINED_FUNCTION_176();
    v28 = *(_QWORD *)(v15 + 24) + ((v14 >> 24) & 0xFFFF00 | BYTE6(v14)) + v22;
    OUTLINED_FUNCTION_52_0(v28, v28 + v24);
    if (!__CFADD__(a14, v29))
      break;
LABEL_9:
    __break(1u);
LABEL_10:
    swift_once();
LABEL_5:
    OUTLINED_FUNCTION_21_1();
  }
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_5_2();
}

void ByteBuffer.init(dispatchData:)(uint64_t a1)
{
  uint64_t v2;

  ByteBufferAllocator.buffer(dispatchData:)(a1, (uint64_t (*)(_QWORD))j_j__malloc, (uint64_t)j_j__realloc, (uint64_t)j_j__free, (uint64_t)sub_1A566C0C4);
  v2 = OUTLINED_FUNCTION_35_0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_8_1();
}

void ByteBufferAllocator.buffer(dispatchData:)(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  BOOL v19;
  unsigned int v20;
  int v21;

  v9 = OUTLINED_FUNCTION_49_0();
  if (v9 < 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  v10 = v9;
  if (!v9)
  {
    if (qword_1EE796BD0 != -1)
      goto LABEL_19;
    goto LABEL_5;
  }
  OUTLINED_FUNCTION_10_1();
  static ByteBuffer._Storage.reallocated(minimumCapacity:allocator:)(v10, a2, a3, a4, a5);
  v11 = 0;
  v12 = 0;
  v13 = 0;
  v15 = *(_DWORD *)(v14 + 16);
  while (1)
  {
    v16 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
    v17 = v16 + v11;
    if (__OFADD__(v16, v11))
    {
LABEL_16:
      __break(1u);
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
    v18 = v13 | (v12 << 8);
    v19 = v15 >= v18;
    v20 = v15 - v18;
    if (!v19)
      goto LABEL_17;
    v21 = v16;
    if (v17 > v20)
    {
      if (swift_isUniquelyReferenced_nonNull_native())
        ByteBuffer._ensureAvailableCapacity(_:at:)(v17, 0);
      else
        ByteBuffer._copyStorageAndRebase(capacity:resetIndices:)(v17, 0);
    }
    MEMORY[0x1E0C80A78](v16);
    OUTLINED_FUNCTION_59_0(sub_1A566B4F8);
    if (!__CFADD__(v11, v21))
      break;
LABEL_18:
    __break(1u);
LABEL_19:
    swift_once();
LABEL_5:
    v11 = HIDWORD(qword_1EE7F9218);
    v15 = dword_1EE7F9220;
    v12 = (unsigned __int16)word_1EE7F9224;
    v13 = byte_1EE7F9226;
    swift_retain();
  }
  OUTLINED_FUNCTION_3_4();
}

void Optional<A>.setOrWriteImmutableBuffer(_:)()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unsigned __int8 v4;
  unsigned int v5;
  unint64_t v6;
  unint64_t v7;
  Swift::UInt32 v8;
  _QWORD *v9;
  uint64_t v10;
  int v11;
  char v12;

  OUTLINED_FUNCTION_9_4();
  v4 = BYTE6(v3);
  v5 = v2;
  v6 = HIDWORD(v2);
  v7 = HIDWORD(v3);
  if (*(_QWORD *)v0)
  {
    v8 = *(_DWORD *)(v0 + 12);
    v9 = (_QWORD *)(v1 + 24);
    OUTLINED_FUNCTION_176();
    if (v6 < v5)
    {
      __break(1u);
    }
    else
    {
      v10 = *v9 + (v4 | ((unint64_t)(unsigned __int16)v7 << 8)) + v5;
      ByteBuffer._setBytes(_:at:)(v10, v10 + v6 - v5, v8);
      OUTLINED_FUNCTION_23_0();
      if (!v12)
      {
        *(_DWORD *)(v0 + 12) = v11;
LABEL_7:
        OUTLINED_FUNCTION_2_6();
        return;
      }
    }
    __break(1u);
  }
  else if (HIDWORD(v2) >= v2)
  {
    *(_QWORD *)v0 = v1;
    *(_QWORD *)(v0 + 8) = v2;
    *(_DWORD *)(v0 + 16) = v3;
    *(_BYTE *)(v0 + 22) = BYTE6(v3);
    *(_WORD *)(v0 + 20) = WORD2(v3);
    swift_retain();
    goto LABEL_7;
  }
  __break(1u);
}

void Optional<A>.setOrWriteBuffer(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  __int16 v5;
  char v6;

  if (*(_QWORD *)v1)
  {
    ByteBuffer.writeBuffer(_:)();
  }
  else
  {
    v3 = *(unsigned int *)(a1 + 8);
    v2 = *(unsigned int *)(a1 + 12);
    if (v2 < v3)
    {
      __break(1u);
    }
    else
    {
      v4 = *(_DWORD *)(a1 + 16);
      v5 = *(_WORD *)(a1 + 20);
      v6 = *(_BYTE *)(a1 + 22);
      *(_QWORD *)v1 = *(_QWORD *)a1;
      *(_QWORD *)(v1 + 8) = v3 | (v2 << 32);
      *(_BYTE *)(v1 + 22) = v6;
      *(_WORD *)(v1 + 20) = v5;
      *(_DWORD *)(v1 + 16) = v4;
      *(_DWORD *)(a1 + 8) = v2;
      swift_retain();
      OUTLINED_FUNCTION_1();
    }
  }
}

uint64_t sub_1A566A57C(uint64_t result, uint64_t a2, uint64_t a3, Swift::UInt32 a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  unint64_t v9;
  unsigned int v10;
  unsigned int v11;
  BOOL v12;
  Swift::UInt32 v13;
  Swift::UInt32 v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  _BOOL4 v23;
  BOOL v24;
  BOOL i;
  unint64_t v26;
  char *v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int v37;
  uint64_t v39;
  _QWORD v40[3];
  unsigned int v41;
  unsigned __int16 v42;
  unsigned __int8 v43;
  BOOL v44;

  v5 = v4;
  v8 = result;
  v9 = a3 - a2;
  if (a3 < a2)
    v9 += *(_QWORD *)(result + 16);
  v10 = a4 + v9;
  if (__CFADD__(a4, (_DWORD)v9))
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v11 = *(_DWORD *)(v5 + 16);
    v12 = v10 >= v11;
    v13 = v10 - v11;
    if (v12)
      v14 = v13;
    else
      v14 = 0;
    ByteBuffer._copyStorageAndRebase(extraCapacity:resetIndices:)(v14, 0);
  }
  v15 = sub_1A566D00C(v9, (uint64_t *)v5, a4);
  v16 = sub_1A569D488((uint64_t)v40, v15, v9, v8, a2, a3);
  v17 = v40[1];
  v39 = v40[0];
  v18 = v40[2];
  v19 = v41;
  v20 = v42;
  v21 = v43;
  result = swift_retain();
  if (v18 < 0)
  {
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
    return result;
  }
  v22 = a4;
  if (HIDWORD(v18))
  {
    __break(1u);
  }
  else
  {
    v23 = v44;
    v24 = v20 == 0xFFFF;
    for (i = v21 == 255; v19 != v18 || !v24 || !i || ((v23 ^ (v18 < v17)) & 1) == 0; i = 1)
    {
      v26 = *(_QWORD *)(v39 + 16);
      if (v26 <= v19)
      {
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
        goto LABEL_47;
      }
      v27 = (char *)(v39 + 32 + 2 * v19);
      if ((v27[1] & 1) != 0)
        goto LABEL_49;
      v19 = (v26 + 0x1FFFFFFFFLL) & (v19 + 1);
      if (HIDWORD(v19))
        goto LABEL_38;
      v28 = *v27;
      v44 = (uint64_t)v19 >= v17;
      v29 = v16 + 1;
      if (__OFADD__(v16, 1))
        goto LABEL_39;
      if ((v29 & 0x8000000000000000) != 0)
        goto LABEL_40;
      if (HIDWORD(v29))
        goto LABEL_41;
      v30 = *(unsigned __int16 *)(v5 + 20);
      v31 = *(unsigned __int8 *)(v5 + 22);
      v32 = v31 | ((_DWORD)v30 << 8);
      v33 = v32 + v22;
      if (__CFADD__((_DWORD)v32, (_DWORD)v22))
        goto LABEL_42;
      v34 = v33 + v29;
      if (__CFADD__(v33, (_DWORD)v29))
        goto LABEL_43;
      v35 = *(unsigned int *)(v5 + 16);
      v36 = *(_QWORD *)v5;
      if (v35 < v34)
      {
        v37 = *(_DWORD *)(v36 + 16);
        if (v37 >= v34)
        {
          if (v37 < v32)
            goto LABEL_45;
          *(_DWORD *)(v5 + 16) = v37;
        }
        else
        {
          if (__CFADD__(a4, (_DWORD)v29))
            goto LABEL_44;
          if ((_DWORD)v32)
          {
            if (v35 < v32)
              goto LABEL_46;
            ByteBuffer._Storage.reallocSlice(_:capacity:)(v32 | (v35 << 32), a4 + v29);
            OUTLINED_FUNCTION_51_0();
            *(_QWORD *)v5 = v22;
            v36 = v22;
          }
          else
          {
            ByteBuffer._Storage.reallocStorage(capacity:)(a4 + v29);
            v22 = *(_QWORD *)v5;
          }
          v31 = 0;
          v30 = 0;
          *(_DWORD *)(v5 + 16) = *(_DWORD *)(v36 + 16);
          *(_WORD *)(v5 + 20) = 0;
          *(_BYTE *)(v5 + 22) = 0;
          v36 = v22;
          v22 = a4;
        }
      }
      v19 = v19;
      result = OUTLINED_FUNCTION_176();
      *(_BYTE *)(*(_QWORD *)(v36 + 24) + (v31 | (v30 << 8)) + a4 + v16) = v28;
      v23 = v44;
      ++v16;
      v24 = 1;
    }
  }
  swift_release();
  return v16;
}

void sub_1A566A84C(char a1, Swift::UInt32 a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79A7E0);
  if (v5 == __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796A08))
    goto LABEL_7;
  if (a2 == -1)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return;
  }
  if ((OUTLINED_FUNCTION_34_0() & 1) == 0)
    OUTLINED_FUNCTION_27_0(a2 + 1 - *(_DWORD *)(v2 + 16));
  *(_BYTE *)sub_1A566D00C(1uLL, (uint64_t *)v2, a2) = a1;
  OUTLINED_FUNCTION_8_1();
}

uint64_t sub_1A566A8CC(uint64_t a1, unint64_t a2, Swift::UInt32 a3)
{
  uint64_t v3;
  uint64_t result;
  unint64_t v8;
  char v9;
  uint64_t v10;

  result = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796A08);
  if (result == MEMORY[0x1E0DEA890])
    goto LABEL_13;
  if ((a2 & 0x1000000000000000) != 0)
  {
    OUTLINED_FUNCTION_45();
    result = sub_1A594B640();
    v8 = result;
  }
  else if ((a2 & 0x2000000000000000) != 0)
  {
    v8 = HIBYTE(a2) & 0xF;
  }
  else
  {
    v8 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (__CFADD__(a3, (_DWORD)v8))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if ((OUTLINED_FUNCTION_34_0() & 1) == 0)
    OUTLINED_FUNCTION_27_0(a3 + v8 - *(_DWORD *)(v3 + 16));
  sub_1A566D00C(v8, (uint64_t *)v3, a3);
  OUTLINED_FUNCTION_27();
  result = sub_1A594C72C();
  if ((v9 & 1) == 0)
  {
    v10 = result;
    OUTLINED_FUNCTION_17();
    return v10;
  }
LABEL_14:
  __break(1u);
  return result;
}

void *sub_1A566A9A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *result;
  unint64_t v8;
  unsigned int v9;
  unsigned int v10;
  BOOL v11;
  Swift::UInt32 v12;
  Swift::UInt32 v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  unsigned int v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  _QWORD *v26;
  unsigned int v27;
  uint64_t v28;

  OUTLINED_FUNCTION_12_2();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v6 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796020);
  result = (void *)__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796A08);
  if ((void *)v6 == result)
    goto LABEL_39;
  v8 = *(_QWORD *)(v5 + 16);
  v9 = v3 + v8;
  if (!__CFADD__((_DWORD)v3, (_DWORD)v8))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v10 = *(_DWORD *)(v1 + 16);
      v11 = v9 >= v10;
      v12 = v9 - v10;
      if (v11)
        v13 = v12;
      else
        v13 = 0;
      ByteBuffer._copyStorageAndRebase(extraCapacity:resetIndices:)(v13, 0);
    }
    result = (void *)sub_1A566D00C(v8, (uint64_t *)v1, v3);
    if (v8)
      result = memcpy(result, (const void *)(v5 + 32), v8);
    v14 = *(_QWORD *)(v5 + 16);
    if (v8 == v14)
      return (void *)v8;
    if (v8 >= v14)
      goto LABEL_38;
    v15 = v3;
    v28 = v5 + 32;
    result = (void *)_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v27 = v3;
    while (v8 <= 0xFFFFFFFE)
    {
      v16 = *(unsigned __int16 *)(v1 + 20);
      v17 = *(unsigned __int8 *)(v1 + 22);
      v18 = v17 | ((_DWORD)v16 << 8);
      v19 = v18 + v3;
      if (__CFADD__((_DWORD)v18, (_DWORD)v3))
        goto LABEL_31;
      v20 = v8 + 1;
      v21 = v19 + v8 + 1;
      if (__CFADD__(v19, v8 + 1))
        goto LABEL_32;
      v22 = *(_BYTE *)(v28 + v8);
      v23 = *(unsigned int *)(v1 + 16);
      v24 = *(_QWORD *)v1;
      if (v23 < v21)
      {
        v25 = *(_DWORD *)(v24 + 16);
        if (v25 >= v21)
        {
          if (v25 < v18)
            goto LABEL_35;
          *(_DWORD *)(v1 + 16) = v25;
        }
        else
        {
          if (__CFADD__((_DWORD)v15, (_DWORD)v20))
            goto LABEL_34;
          if ((_DWORD)v18)
          {
            if (v23 < v18)
              goto LABEL_36;
            ByteBuffer._Storage.reallocSlice(_:capacity:)(v18 | (v23 << 32), v15 + v20);
            OUTLINED_FUNCTION_51_0();
            *(_QWORD *)v1 = v3;
            v24 = v3;
          }
          else
          {
            ByteBuffer._Storage.reallocStorage(capacity:)(v15 + v20);
            v3 = *(_QWORD *)v1;
          }
          v17 = 0;
          v16 = 0;
          *(_DWORD *)(v1 + 16) = *(_DWORD *)(v24 + 16);
          *(_WORD *)(v1 + 20) = 0;
          *(_BYTE *)(v1 + 22) = 0;
          v24 = v3;
          v3 = v27;
        }
      }
      v26 = (_QWORD *)(v24 + 24);
      result = (void *)OUTLINED_FUNCTION_176();
      if ((uint64_t)(v15 + v8 + 1) < v15)
        goto LABEL_33;
      *(_BYTE *)(*v26 + (v17 | (v16 << 8)) + v15 + v8++) = v22;
      if (v14 == v20)
      {
        swift_bridgeObjectRelease();
        return (void *)v14;
      }
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
  return result;
}

void sub_1A566ABB4(Swift::UInt32 a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9188);
  if (v3 == __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796A08))
  {
    __break(1u);
  }
  else
  {
    if ((OUTLINED_FUNCTION_34_0() & 1) == 0)
      OUTLINED_FUNCTION_27_0(a1 - *(_DWORD *)(v1 + 16));
    sub_1A566D00C(0, (uint64_t *)v1, a1);
    OUTLINED_FUNCTION_8_1();
  }
}

void sub_1A566AC24(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  _QWORD *v8;
  uint64_t v9;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
  }
  else
  {
    if (!v5)
      goto LABEL_9;
    if (v5 <= 0)
    {
      v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B2D0);
      v8 = (_QWORD *)OUTLINED_FUNCTION_20_1();
      OUTLINED_FUNCTION_13_2(v8);
      v8[2] = v5;
      v8[3] = v9;
    }
    if (v4 != a3)
    {
      memcpy(v8 + 4, (const void *)(a2 + 8 * a3), 8 * v5);
LABEL_9:
      OUTLINED_FUNCTION_17_1();
      return;
    }
  }
  __break(1u);
}

uint64_t sub_1A566ACC0(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  uint64_t v7;
  _QWORD v8[6];

  v1 = *(_QWORD *)(result + 24);
  v2 = *(_QWORD *)(result + 32);
  v3 = v2 - v1;
  if (v2 < v1)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (__OFSUB__(v2, v1))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (!v3)
    return MEMORY[0x1E0DEE9D8];
  v4 = result;
  if (v3 <= 0)
  {
    v5 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B348);
    v5 = OUTLINED_FUNCTION_20_1();
    v6 = _swift_stdlib_malloc_size_0((const void *)v5);
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = 2 * v6 - 64;
  }
  v7 = sub_1A569D0B4((uint64_t)v8, (_BYTE *)(v5 + 32), v3);
  sub_1A553E5B4(v4);
  result = swift_release();
  if (v7 == v3)
    return v5;
LABEL_12:
  __break(1u);
  return result;
}

void sub_1A566AD90(uint64_t a1)
{
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  size_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[192];

  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B2D0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A59ABD10;
  BodyStructure.subpartCount.getter(inited);
  if (__OFADD__(v3, 1))
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return;
  }
  *(_QWORD *)(inited + 32) = v3 + 1;
  OUTLINED_FUNCTION_46();
  v4 = sub_1A566B070();
  swift_setDeallocating();
  if (v4)
  {
    if (v4 > 0)
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A13A0);
      v5 = (_QWORD *)OUTLINED_FUNCTION_20_1();
      v6 = _swift_stdlib_malloc_size_0(v5);
      v5[2] = v4;
      v5[3] = 2 * ((uint64_t)(v6 - 32) / 184);
    }
    sub_1A566B41C(a1);
    sub_1A569D204();
    v8 = v7;
    sub_1A566B484((uint64_t)v9);
    if (v8 != v4)
      goto LABEL_8;
  }
}

void sub_1A566AE90(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B2F8);
  v2 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_13_2(v2);
  v2[2] = 1;
  v2[3] = v3;
  v2[4] = a1;
  OUTLINED_FUNCTION_1();
}

void sub_1A566AED8(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B2F8);
  v4 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_13_2(v4);
  v4[2] = 2;
  v4[3] = v5;
  v4[4] = a1;
  v4[5] = a2;
  OUTLINED_FUNCTION_8_1();
}

void sub_1A566AF30(const void *a1, int64_t a2)
{
  _QWORD *v4;
  size_t v5;

  if (a2)
  {
    if (a2 <= 0)
    {
      v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B348);
      v4 = (_QWORD *)OUTLINED_FUNCTION_20_1();
      v5 = _swift_stdlib_malloc_size_0(v4);
      v4[2] = a2;
      v4[3] = 2 * v5 - 64;
    }
    memcpy(v4 + 4, a1, a2);
  }
  OUTLINED_FUNCTION_8_1();
}

uint64_t sub_1A566AFB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A5668B60(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1A566AFCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798F50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A566B014(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE798F50);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A566B054@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1A5669264(a1, a2, *(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 24), a3);
}

uint64_t sub_1A566B070()
{
  uint64_t v0;
  _QWORD *v1;
  _BOOL8 v2;
  _QWORD *rawValue;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;

  OUTLINED_FUNCTION_12_2();
  v1 = (_QWORD *)v0;
  rawValue = (_QWORD *)v2;
  if (static SectionSpecifier.Part.< infix(_:_:)(v2, v0))
  {
    if ((OUTLINED_FUNCTION_50_0() & 1) != 0)
      return 0;
    v4 = v1[2];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v5 = 1;
    do
    {
      rawValue = BodyStructure.index(after:)((NIOIMAPCore2::SectionSpecifier::Part)rawValue).array._rawValue;
      OUTLINED_FUNCTION_52();
      if (rawValue[2] == v4)
      {
        if (!v4 || rawValue == v1)
          goto LABEL_44;
        if (rawValue[4] == v1[4])
        {
          v6 = 0;
          do
          {
            if (v4 - 1 == v6)
              goto LABEL_44;
            v7 = rawValue[v6 + 5];
            v8 = v1[v6++ + 5];
          }
          while (v7 == v8);
        }
      }
      v9 = __OFADD__(v5++, 1);
    }
    while (!v9);
    __break(1u);
  }
  if (!static SectionSpecifier.Part.< infix(_:_:)((_BOOL8)v1, (uint64_t)rawValue) || (OUTLINED_FUNCTION_50_0() & 1) != 0)
    return 0;
  v10 = rawValue[2];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v5 = -1;
  while (1)
  {
    v11 = rawValue;
    if (!v10)
      goto LABEL_47;
    v12 = v10 - 1;
    v13 = rawValue[v10 + 3];
    v14 = v13 - 1;
    if (v13 > 1)
    {
      v15 = sub_1A569BC04(1, (uint64_t)rawValue);
      v17 = v16;
      v19 = v18;
      v21 = v20;
      OUTLINED_FUNCTION_184();
      sub_1A5699EA0(v15, v17, v19, v21);
      v23 = v22;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v24 = v23;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A569D6EC();
        v24 = v31;
      }
      v25 = *(_QWORD *)(v24 + 16);
      if (v25 >= *(_QWORD *)(v24 + 24) >> 1)
      {
        sub_1A569D6EC();
        v24 = v32;
      }
      *(_QWORD *)(v24 + 16) = v25 + 1;
      *(_QWORD *)(v24 + 8 * v25 + 32) = v14;
      swift_bridgeObjectRelease();
      rawValue = (_QWORD *)sub_1A569BD5C();
      OUTLINED_FUNCTION_72();
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
    sub_1A594CD68();
    OUTLINED_FUNCTION_184();
    swift_unknownObjectRetain_n();
    v26 = swift_dynamicCastClass();
    if (!v26)
    {
      OUTLINED_FUNCTION_72();
      v26 = MEMORY[0x1E0DEE9D8];
    }
    v27 = *(_QWORD *)(v26 + 16);
    swift_release();
    if (v27 != v12)
    {
      swift_bridgeObjectRelease();
      if (v10 >= 2)
      {
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B2D0);
        rawValue = (_QWORD *)OUTLINED_FUNCTION_20_1();
        OUTLINED_FUNCTION_13_2(rawValue);
        rawValue[2] = v12;
        rawValue[3] = v33;
        memcpy(rawValue + 4, v11 + 4, 8 * v12);
        OUTLINED_FUNCTION_31_0();
        goto LABEL_31;
      }
      OUTLINED_FUNCTION_31_0();
      goto LABEL_30;
    }
    rawValue = (_QWORD *)swift_dynamicCastClass();
    OUTLINED_FUNCTION_31_0();
    if (!rawValue)
    {
      OUTLINED_FUNCTION_72();
LABEL_30:
      rawValue = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
LABEL_31:
    v10 = rawValue[2];
    if (v10 == v1[2])
    {
      if (!v10 || rawValue == v1)
        goto LABEL_44;
      if (rawValue[4] == v1[4])
        break;
    }
LABEL_38:
    v9 = __OFSUB__(v5--, 1);
    if (v9)
    {
      __break(1u);
LABEL_47:
      sub_1A594C720();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_184();
      sub_1A594B4A8();
      sub_1A594B5F8();
      OUTLINED_FUNCTION_17();
      result = sub_1A594C9C0();
      __break(1u);
      return result;
    }
  }
  v28 = 0;
  while (v10 - 1 != v28)
  {
    v29 = rawValue[v28 + 5];
    v30 = v1[v28++ + 5];
    if (v29 != v30)
      goto LABEL_38;
  }
LABEL_44:
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1A566B41C(uint64_t a1)
{
  sub_1A552370C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_BYTE *)(a1 + 176));
  return a1;
}

uint64_t sub_1A566B484(uint64_t a1)
{
  sub_1A55241F0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_BYTE *)(a1 + 176));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A566B4F8(uint64_t a1, uint64_t a2)
{
  return sub_1A566AFB0(a1, a2);
}

uint64_t sub_1A566B50C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1A566B054(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_0_11(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return a10;
}

void OUTLINED_FUNCTION_8_3(int a1, uint64_t (*a2)(_QWORD), uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  static ByteBuffer._Storage.reallocated(minimumCapacity:allocator:)(a1, a2, a3, a4, v4);
}

uint64_t OUTLINED_FUNCTION_10_1()
{
  return type metadata accessor for ByteBuffer._Storage();
}

Swift::Int OUTLINED_FUNCTION_11_2(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, int a12, int a13, __int16 a14, char a15)
{
  Swift::Int v15;
  unsigned int v16;
  Swift::UInt8 v17;

  return ByteBuffer.setRepeatingByte(_:count:at:)(v17, v15, v16);
}

size_t OUTLINED_FUNCTION_13_2(const void *a1)
{
  return _swift_stdlib_malloc_size_0(a1);
}

void OUTLINED_FUNCTION_15_2(unsigned int a1@<W8>)
{
  Swift::UInt32 v1;
  unsigned int v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v5 = *v4 + ((v3 >> 24) & 0xFFFF00 | BYTE6(v3)) + v2;
  ByteBuffer._setBytes(_:at:)(v5, v5 + a1, v1);
}

uint64_t OUTLINED_FUNCTION_16_2()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_18_1()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return *(_QWORD *)(v1 + 24) + ((v0 >> 24) & 0xFFFF00 | BYTE6(v0)) + v3 + v2;
}

uint64_t OUTLINED_FUNCTION_19_1()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_20_1()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_21_1()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_22_1(uint64_t a1, unint64_t a2, uint64_t a3, Swift::UInt32 a4)
{
  sub_1A56814E0(a1, a2, a3, a4);
}

void OUTLINED_FUNCTION_27_0(Swift::UInt32 a1@<W8>)
{
  char v1;
  Swift::UInt32 v2;

  if (v1)
    v2 = a1;
  else
    v2 = 0;
  ByteBuffer._copyStorageAndRebase(extraCapacity:resetIndices:)(v2, 0);
}

uint64_t OUTLINED_FUNCTION_28_0()
{
  return swift_getTupleTypeMetadata2();
}

uint64_t OUTLINED_FUNCTION_30_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return a12;
}

uint64_t OUTLINED_FUNCTION_31_0()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_33_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v3, a2, v2);
}

uint64_t OUTLINED_FUNCTION_34_0()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_35_0()
{
  return sub_1A594AE60();
}

uint64_t OUTLINED_FUNCTION_40_0()
{
  uint64_t v0;

  return v0;
}

Swift::Int OUTLINED_FUNCTION_41_0()
{
  void *v0;
  uint64_t v1;
  Swift::Int v2;
  Swift::String v3;

  v3._countAndFlagsBits = v1;
  v3._object = v0;
  return ByteBuffer._setStringSlowpath(_:at:)(v3, v2);
}

uint64_t OUTLINED_FUNCTION_45()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_46()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_49_0()
{
  return _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
}

uint64_t OUTLINED_FUNCTION_50_0()
{
  _QWORD *v0;
  _QWORD *v1;

  return _s12NIOIMAPCore216SectionSpecifierV4PartV23__derived_struct_equalsySbAE_AEtFZ_0(v1, v0);
}

uint64_t OUTLINED_FUNCTION_51_0()
{
  return swift_release();
}

void OUTLINED_FUNCTION_52_0(uint64_t a1, uint64_t a2)
{
  Swift::UInt32 v2;

  ByteBuffer._setBytes(_:at:)(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_56_1()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t OUTLINED_FUNCTION_59_0(uint64_t (*a1)(_QWORD, _QWORD))
{
  return sub_1A5668CF0(a1);
}

int64_t ByteBuffer.rangeWithinReadableBytes(index:length:)(int64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v4;

  v4 = result - a4;
  if (__OFSUB__(result, a4))
  {
    __break(1u);
    goto LABEL_13;
  }
  result = 0;
  if ((v4 & 0x8000000000000000) == 0 && (a2 & 0x8000000000000000) == 0)
  {
    if (HIDWORD(a4) >= a4)
    {
      if ((HIDWORD(a4) - a4) - a2 < v4)
        return 0;
      if (!__OFADD__(v4, a2))
      {
        if (v4 + a2 >= v4)
          return v4;
LABEL_15:
        __break(1u);
        return result;
      }
LABEL_14:
      __break(1u);
      goto LABEL_15;
    }
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  return result;
}

uint64_t sub_1A566B918()
{
  uint64_t v0;
  unint64_t v1;
  unsigned int v2;
  unint64_t v3;
  uint64_t result;
  char v5;
  char v6;

  OUTLINED_FUNCTION_6_5();
  v2 = v1;
  v3 = HIDWORD(v1);
  result = OUTLINED_FUNCTION_176();
  if (v3 < v2)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_26();
    sub_1A566DE50();
    swift_release();
    if (!v0)
      v5 = v6;
    return v5 & 1;
  }
  return result;
}

void ByteBuffer.withUnsafeReadableBytes<A>(_:)()
{
  unint64_t v0;
  unsigned int v1;
  void (*v2)(uint64_t, uint64_t);
  void (*v3)(uint64_t, uint64_t);
  unint64_t v4;
  uint64_t v5;
  unsigned int v6;

  OUTLINED_FUNCTION_6_5();
  v1 = v0;
  v3 = v2;
  v4 = HIDWORD(v0);
  OUTLINED_FUNCTION_176();
  if (v4 < v1)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_26();
    v3(v5 + v1, v5 + v1 + v6);
    OUTLINED_FUNCTION_3_5();
  }
}

uint64_t ByteBuffer.readerIndex.getter(uint64_t a1, unsigned int a2)
{
  return a2;
}

Swift::Void __swiftcall ByteBuffer._moveReaderIndex(forwardBy:)(Swift::Int forwardBy)
{
  uint64_t v1;
  int v2;
  BOOL v3;
  int v4;

  v2 = *(_DWORD *)(v1 + 8);
  v3 = __CFADD__(v2, (_DWORD)forwardBy);
  v4 = v2 + forwardBy;
  if (v3)
    __break(1u);
  else
    *(_DWORD *)(v1 + 8) = v4;
}

unint64_t ByteBuffer.writerIndex.getter(uint64_t a1, unint64_t a2)
{
  return HIDWORD(a2);
}

Swift::Void __swiftcall ByteBuffer._moveWriterIndex(forwardBy:)(Swift::Int forwardBy)
{
  uint64_t v1;
  int v2;
  BOOL v3;
  int v4;

  v2 = *(_DWORD *)(v1 + 12);
  v3 = __CFADD__(v2, (_DWORD)forwardBy);
  v4 = v2 + forwardBy;
  if (v3)
    __break(1u);
  else
    *(_DWORD *)(v1 + 12) = v4;
}

uint64_t ByteBuffer.setBytes(_:at:)(uint64_t a1, uint64_t a2, Swift::UInt32 a3)
{
  uint64_t result;

  ByteBuffer._setBytes(_:at:)(a1, a2, a3);
  return result;
}

uint64_t ByteBuffer.setBytes<A>(_:at:)(uint64_t *a1, Swift::UInt32 a2, uint64_t a3)
{
  return ByteBuffer._setBytes<A>(_:at:)(a1, a2, a3);
}

Swift::Void __swiftcall ByteBuffer.reserveCapacity(_:)(Swift::Int a1)
{
  uint64_t v1;
  unsigned int v2;
  unsigned int v3;
  BOOL v4;
  Swift::Int v5;
  Swift::UInt32 v6;
  Swift::UInt32 v7;
  Swift::UInt32 v8;
  Swift::Bool v9;

  v2 = *(_DWORD *)(v1 + 16);
  v3 = *(unsigned __int8 *)(v1 + 22) | (*(unsigned __int16 *)(v1 + 20) << 8);
  v4 = v2 >= v3;
  v5 = v2 - v3;
  if (v4)
  {
    if (v5 >= a1)
    {
      OUTLINED_FUNCTION_1();
    }
    else if (OUTLINED_FUNCTION_34_0())
    {
      v6 = OUTLINED_FUNCTION_28_1();
      OUTLINED_FUNCTION_19_2(v6, v7);
    }
    else
    {
      v8 = OUTLINED_FUNCTION_28_1();
      OUTLINED_FUNCTION_20_2(v8, v9);
    }
  }
  else
  {
    __break(1u);
  }
}

void ByteBuffer.withVeryUnsafeMutableBytes<A>(_:)()
{
  uint64_t v0;
  unsigned int v1;
  int v2;
  int v3;

  OUTLINED_FUNCTION_6_5();
  if ((OUTLINED_FUNCTION_4_7() & 1) == 0)
    OUTLINED_FUNCTION_12_3();
  v1 = *(_DWORD *)(v0 + 16);
  v2 = *(unsigned __int16 *)(v0 + 20);
  v3 = *(unsigned __int8 *)(v0 + 22);
  OUTLINED_FUNCTION_176();
  if (v1 < (v3 | (v2 << 8)))
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_10_2();
    OUTLINED_FUNCTION_3_5();
  }
}

void sub_1A566BB64()
{
  void (*v0)(uint64_t, uint64_t);
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unsigned int v8;
  BOOL v9;
  unsigned int v10;
  uint64_t v11;

  OUTLINED_FUNCTION_6_5();
  v1 = v0;
  v3 = v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    OUTLINED_FUNCTION_12_3();
  v4 = *(unsigned int *)(v3 + 8);
  v5 = *(unsigned __int16 *)(v3 + 20);
  v6 = *(unsigned __int8 *)(v3 + 22);
  v7 = (_QWORD *)(*(_QWORD *)v3 + 24);
  OUTLINED_FUNCTION_176();
  v8 = *(_DWORD *)(v3 + 12);
  v9 = v8 >= v4;
  v10 = v8 - v4;
  if (v9)
  {
    v11 = *v7 + (v6 | (v5 << 8)) + v4;
    v1(v11, v11 + v10);
    OUTLINED_FUNCTION_3_5();
  }
  else
  {
    __break(1u);
  }
}

void ByteBuffer.withUnsafeMutableReadableBytes<A>(_:)()
{
  uint64_t v0;
  unsigned int v1;

  if ((OUTLINED_FUNCTION_4_7() & 1) == 0)
    OUTLINED_FUNCTION_12_3();
  v1 = *(_DWORD *)(v0 + 8);
  OUTLINED_FUNCTION_176();
  if (*(_DWORD *)(v0 + 12) >= v1)
  {
    OUTLINED_FUNCTION_10_2();
    OUTLINED_FUNCTION_11_3();
  }
  else
  {
    __break(1u);
  }
}

uint64_t ByteBuffer.readableBytes.getter(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = (HIDWORD(a2) - a2);
  if (HIDWORD(a2) < a2)
    __break(1u);
  return result;
}

uint64_t ByteBuffer.getSlice(at:length:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t result;
  Swift::UInt32 v7;
  int v9;

  result = 0;
  if ((a1 & 0x8000000000000000) == 0)
  {
    v7 = a2;
    if ((a2 & 0x8000000000000000) == 0 && a4 <= a1 && (uint64_t)(HIDWORD(a4) - a2) >= a1)
    {
      v9 = BYTE6(a5) | (WORD2(a5) << 8);
      result = (v9 + a1);
      if (__CFADD__(v9, (_DWORD)a1))
      {
        __break(1u);
      }
      else
      {
        if (!BYTE3(result))
        {
          if (!__CFADD__((_DWORD)result, (_DWORD)a2))
          {
            static IntegerBitPacking.unpackUInt16UInt8(_:)(result);
            return swift_retain();
          }
          goto LABEL_16;
        }
        if (!__CFADD__((_DWORD)a1, (_DWORD)a2))
        {
          swift_retain();
          ByteBuffer._copyStorageAndRebase(capacity:resetIndices:)(v7, 1);
          return a3;
        }
      }
      __break(1u);
LABEL_16:
      __break(1u);
    }
  }
  return result;
}

uint64_t *ByteBufferAllocator.zeroCapacityWithDefaultAllocator.unsafeMutableAddressor()
{
  if (qword_1EE796BD0 != -1)
    swift_once();
  return &static ByteBufferAllocator.zeroCapacityWithDefaultAllocator;
}

void *(__cdecl *ByteBufferAllocator.init()())(size_t __size)
{
  return j_j__malloc;
}

void ByteBufferAllocator.buffer(capacity:)(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;

  if (a1 < 0)
  {
    __break(1u);
LABEL_7:
    swift_once();
    goto LABEL_5;
  }
  v5 = a1;
  if (a1)
  {
    type metadata accessor for ByteBuffer._Storage();
    static ByteBuffer._Storage.reallocated(minimumCapacity:allocator:)(v5, a2, a3, a4, a5);
    return;
  }
  if (qword_1EE796BD0 != -1)
    goto LABEL_7;
LABEL_5:
  swift_retain();
}

Swift::Void __swiftcall ByteBuffer.moveReaderIndex(to:)(Swift::Int to)
{
  uint64_t v1;

  if (*(unsigned int *)(v1 + 12) < (unint64_t)to)
    __break(1u);
  else
    *(_DWORD *)(v1 + 8) = to;
}

BOOL static _ByteBufferSlice.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  return (a1 & 0xFFFFFFFFFFFFFFLL) == (a2 & 0xFFFFFFFFFFFFFFLL);
}

BOOL sub_1A566BF04(unsigned int *a1, unsigned int *a2)
{
  return static _ByteBufferSlice.__derived_struct_equals(_:_:)(*a1 | ((unint64_t)*((unsigned __int16 *)a1 + 2) << 32) | ((unint64_t)*((unsigned __int8 *)a1 + 6) << 48), *a2 | ((unint64_t)*((unsigned __int16 *)a2 + 2) << 32) | ((unint64_t)*((unsigned __int8 *)a2 + 6) << 48));
}

uint64_t _ByteBufferSlice.upperBound.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

double (*_ByteBufferSlice.upperBound.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t _ByteBufferSlice._begin.getter(unint64_t a1)
{
  return HIDWORD(a1) & 0xFFFFFF;
}

uint64_t _ByteBufferSlice._begin.setter(uint64_t result)
{
  uint64_t v1;

  *(_WORD *)(v1 + 4) = result;
  *(_BYTE *)(v1 + 6) = BYTE2(result);
  return result;
}

double (*_ByteBufferSlice._begin.modify())(_QWORD)
{
  return nullsub_1;
}

unint64_t _ByteBufferSlice.lowerBound.getter(unint64_t a1)
{
  return (a1 >> 24) & 0xFFFF00 | BYTE6(a1);
}

uint64_t _ByteBufferSlice.count.getter(unint64_t a1)
{
  unsigned int v1;
  BOOL v2;
  uint64_t result;

  v1 = (a1 >> 24) & 0xFFFF00 | BYTE6(a1);
  v2 = a1 >= v1;
  result = a1 - v1;
  if (!v2)
    __break(1u);
  return result;
}

unint64_t _ByteBufferSlice.description.getter()
{
  sub_1A594C720();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_24_0();
  sub_1A594B5F8();
  OUTLINED_FUNCTION_72();
  sub_1A594B5F8();
  OUTLINED_FUNCTION_24_0();
  sub_1A594B5F8();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_30_1();
  return 0xD000000000000013;
}

unint64_t sub_1A566C088()
{
  return _ByteBufferSlice.description.getter();
}

void *sub_1A566C0B8(void *__dst, const void *__src, size_t __len)
{
  if ((__len & 0x8000000000000000) == 0)
    return memmove(__dst, __src, __len);
  __break(1u);
  return __dst;
}

void sub_1A566C0C8()
{
  uint64_t v0;
  int v1;

  type metadata accessor for ByteBuffer._Storage();
  static ByteBuffer._Storage.reallocated(minimumCapacity:allocator:)(0, (uint64_t (*)(_QWORD))j_j__malloc, (uint64_t)j_j__realloc, (uint64_t)j_j__free, (uint64_t)sub_1A566C0C4);
  v1 = *(_DWORD *)(v0 + 16);
  static ByteBufferAllocator.zeroCapacityWithDefaultAllocator = v0;
  qword_1EE7F9218 = 0;
  dword_1EE7F9220 = v1;
  word_1EE7F9224 = 0;
  byte_1EE7F9226 = 0;
  OUTLINED_FUNCTION_1();
}

uint64_t static ByteBufferAllocator.zeroCapacityWithDefaultAllocator.getter()
{
  if (qword_1EE796BD0 != -1)
    swift_once();
  return swift_retain();
}

void ByteBuffer._storage.setter(uint64_t a1)
{
  _QWORD *v1;

  swift_release();
  *v1 = a1;
  OUTLINED_FUNCTION_1();
}

double (*ByteBuffer._storage.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ByteBuffer._readerIndex.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t ByteBuffer._readerIndex.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 8) = result;
  return result;
}

double (*ByteBuffer._readerIndex.modify())(_QWORD)
{
  return nullsub_1;
}

unint64_t ByteBuffer._writerIndex.getter(uint64_t a1, unint64_t a2)
{
  return HIDWORD(a2);
}

uint64_t ByteBuffer._writerIndex.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 12) = result;
  return result;
}

double (*ByteBuffer._writerIndex.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ByteBuffer._slice.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3 & 0xFFFFFFFFFFFFFFLL;
}

uint64_t ByteBuffer._slice.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 16) = result;
  *(_WORD *)(v1 + 20) = WORD2(result);
  *(_BYTE *)(v1 + 22) = BYTE6(result);
  return result;
}

double (*ByteBuffer._slice.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ByteBuffer._Storage.bytes.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_176();
  return *(_QWORD *)(v0 + 24);
}

uint64_t ByteBuffer._Storage.bytes.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = OUTLINED_FUNCTION_2_7();
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

uint64_t (*ByteBuffer._Storage.bytes.modify())()
{
  OUTLINED_FUNCTION_2_7();
  return j__swift_endAccess;
}

void ByteBuffer._Storage.__allocating_init(bytesNoCopy:capacity:allocator:)(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;

  v12 = OUTLINED_FUNCTION_18_2();
  *(_DWORD *)(v12 + 16) = a2;
  *(_QWORD *)(v12 + 24) = a1;
  *(_QWORD *)(v12 + 32) = a3;
  *(_QWORD *)(v12 + 40) = a4;
  *(_QWORD *)(v12 + 48) = a5;
  *(_QWORD *)(v12 + 56) = a6;
  OUTLINED_FUNCTION_15_3();
}

uint64_t ByteBuffer._Storage.init(bytesNoCopy:capacity:allocator:)(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  *(_DWORD *)(v6 + 16) = a2;
  *(_QWORD *)(v6 + 24) = a1;
  *(_QWORD *)(v6 + 32) = a3;
  *(_QWORD *)(v6 + 40) = a4;
  *(_QWORD *)(v6 + 48) = a5;
  *(_QWORD *)(v6 + 56) = a6;
  return v6;
}

uint64_t ByteBuffer._Storage.deinit()
{
  uint64_t v0;

  sub_1A566C35C();
  return v0;
}

uint64_t sub_1A566C35C()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);

  v1 = *(uint64_t (**)(_QWORD))(v0 + 48);
  swift_beginAccess();
  return v1(*(_QWORD *)(v0 + 24));
}

uint64_t ByteBuffer._Storage.__deallocating_deinit()
{
  sub_1A566C35C();
  return swift_deallocClassInstance();
}

uint64_t ByteBuffer._Storage.allocateStorage()()
{
  uint64_t v0;

  return sub_1A566C3C4(*(_DWORD *)(v0 + 16));
}

uint64_t sub_1A566C3C4(int a1)
{
  uint64_t v1;
  unsigned int v2;
  uint64_t (*v3)(_QWORD);
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  if (a1)
    v2 = sub_1A566EA88(a1);
  else
    v2 = 0;
  v3 = *(uint64_t (**)(_QWORD))(v1 + 32);
  result = v3(v2);
  if (result)
  {
    v5 = result;
    v6 = *(_QWORD *)(v1 + 56);
    result = OUTLINED_FUNCTION_18_2();
    *(_DWORD *)(result + 16) = v2;
    *(_QWORD *)(result + 24) = v5;
    *(_QWORD *)(result + 32) = v3;
    *(_OWORD *)(result + 40) = *(_OWORD *)(v1 + 40);
    *(_QWORD *)(result + 56) = v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t ByteBuffer._Storage.reallocSlice(_:capacity:)(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_1A566C3C4(a2);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 56);
  OUTLINED_FUNCTION_176();
  v6 = *(_QWORD *)(v4 + 24);
  OUTLINED_FUNCTION_176();
  v7 = *(_QWORD *)(v2 + 24) + a1;
  v8 = sub_1A5668C00(a1);
  v5(v6, v7, v8);
  return v4;
}

Swift::Void __swiftcall ByteBuffer._Storage.reallocStorage(capacity:)(Swift::UInt32 capacity)
{
  uint64_t v1;
  unsigned int v2;
  uint64_t (*v3)(_QWORD, _QWORD);
  uint64_t v4;

  v2 = sub_1A566EA88(capacity);
  v3 = *(uint64_t (**)(_QWORD, _QWORD))(v1 + 40);
  OUTLINED_FUNCTION_2_7();
  v4 = v3(*(_QWORD *)(v1 + 24), v2);
  if (v4)
  {
    *(_QWORD *)(v1 + 24) = v4;
    *(_DWORD *)(v1 + 16) = v2;
  }
  else
  {
    __break(1u);
  }
}

void static ByteBuffer._Storage.reallocated(minimumCapacity:allocator:)(int a1, uint64_t (*a2)(_QWORD), uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a1)
    v9 = sub_1A566EA88(a1);
  else
    v9 = 0;
  v10 = a2(v9);
  if (v10)
  {
    v11 = v10;
    v12 = OUTLINED_FUNCTION_18_2();
    *(_DWORD *)(v12 + 16) = v9;
    *(_QWORD *)(v12 + 24) = v11;
    *(_QWORD *)(v12 + 32) = a2;
    *(_QWORD *)(v12 + 40) = a3;
    *(_QWORD *)(v12 + 48) = a4;
    *(_QWORD *)(v12 + 56) = a5;
    OUTLINED_FUNCTION_15_3();
  }
  else
  {
    __break(1u);
  }
}

uint64_t ByteBuffer._Storage.dumpBytes(slice:offset:length:)(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;

  result = OUTLINED_FUNCTION_176();
  v8 = (a1 >> 24) & 0xFFFF00 | BYTE6(a1);
  v9 = v8 + a2;
  if (__OFADD__(v8, a2))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v10 = v9 + a3;
  if (__OFADD__(v9, a3))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v10 < v9)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v9 == v10)
  {
LABEL_9:
    OUTLINED_FUNCTION_30_1();
    return 91;
  }
  if (v9 < v10)
  {
    v11 = *(unsigned int *)(v3 + 16);
    while (v9 < v11)
    {
      ++v9;
      sub_1A566E178();
      sub_1A594B6DC();
      sub_1A594B5A4();
      sub_1A594B5F8();
      swift_bridgeObjectRelease();
      sub_1A594B5F8();
      OUTLINED_FUNCTION_72();
      sub_1A594B5F8();
      result = OUTLINED_FUNCTION_52();
      if (!--a3)
        goto LABEL_9;
    }
    __break(1u);
    goto LABEL_11;
  }
LABEL_14:
  __break(1u);
  return result;
}

Swift::Void __swiftcall ByteBuffer._copyStorageAndRebase(capacity:resetIndices:)(Swift::UInt32 capacity, Swift::Bool resetIndices)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  BOOL v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;

  v3 = v2;
  if (resetIndices)
    v5 = *(_DWORD *)(v3 + 8);
  else
    v5 = 0;
  v6 = *(unsigned __int8 *)(v3 + 22) | (*(unsigned __int16 *)(v3 + 20) << 8);
  v7 = v6 + v5;
  if (__CFADD__(v6, v5))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v8 = *(_DWORD *)(v3 + 16);
  v9 = v8 >= v6;
  v10 = v8 - v6;
  if (!v9)
    goto LABEL_16;
  if (__CFADD__((_DWORD)v7, v10))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (__CFADD__((_DWORD)v7, capacity))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v11 = sub_1A566C7E0(v7 + v10, v8, v7 + capacity, MEMORY[0x1E0DEE9D8]);
  if (v11 < v7)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v12 = ByteBuffer._Storage.reallocSlice(_:capacity:)(v7 | (v11 << 32), capacity);
  swift_release();
  *(_QWORD *)v3 = v12;
  v13 = *(_DWORD *)(v3 + 8);
  v9 = v13 >= v5;
  v14 = v13 - v5;
  if (!v9)
    goto LABEL_20;
  *(_DWORD *)(v3 + 8) = v14;
  v15 = *(_DWORD *)(v3 + 12);
  v9 = v15 >= v5;
  v16 = v15 - v5;
  if (v9)
  {
    *(_DWORD *)(v3 + 12) = v16;
    OUTLINED_FUNCTION_29_1();
    return;
  }
LABEL_21:
  __break(1u);
}

uint64_t sub_1A566C7E0(unsigned int a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v4;
  uint64_t result;
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int v9;

  if (a2 >= a1)
    v4 = a1;
  else
    v4 = a2;
  if (v4 >= a3)
    result = a3;
  else
    result = v4;
  v6 = *(_QWORD *)(a4 + 16);
  if (v6)
  {
    v7 = (unsigned int *)(a4 + 32);
    do
    {
      v9 = *v7++;
      v8 = v9;
      if (v9 >= result)
        result = result;
      else
        result = v8;
      --v6;
    }
    while (v6);
  }
  return result;
}

Swift::Void __swiftcall ByteBuffer._moveReaderIndex(to:)(Swift::UInt32 to)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 8) = to;
}

Swift::Void __swiftcall ByteBuffer._moveWriterIndex(to:)(Swift::UInt32 to)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 12) = to;
}

Swift::Void __swiftcall ByteBuffer._copyStorageAndRebase(extraCapacity:resetIndices:)(Swift::UInt32 extraCapacity, Swift::Bool resetIndices)
{
  int v2;
  char v3;
  int v4;
  BOOL v5;
  Swift::UInt32 v6;

  OUTLINED_FUNCTION_21_2();
  if (v5)
  {
    v5 = __CFADD__(v4, v2);
    v6 = v4 + v2;
    if (!v5)
    {
      ByteBuffer._copyStorageAndRebase(capacity:resetIndices:)(v6, v3 & 1);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

Swift::Void __swiftcall ByteBuffer._ensureAvailableCapacity(_:at:)(Swift::UInt32 _, Swift::UInt32 at)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  BOOL v10;
  Swift::UInt32 v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;

  v3 = *(unsigned __int8 *)(v2 + 22) | (*(unsigned __int16 *)(v2 + 20) << 8);
  v4 = v3 + at;
  if (__CFADD__((_DWORD)v3, at))
  {
    __break(1u);
    goto LABEL_16;
  }
  v5 = v4 + _;
  if (__CFADD__(v4, _))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v6 = v2;
  v7 = *(unsigned int *)(v2 + 16);
  if (v7 >= v5)
  {
LABEL_14:
    OUTLINED_FUNCTION_8_1();
    return;
  }
  v8 = *(_QWORD *)v2;
  v9 = *(_DWORD *)(*(_QWORD *)v6 + 16);
  if (v9 >= v5)
  {
    if (v9 >= v3)
    {
      static IntegerBitPacking.unpackUInt16UInt8(_:)(0);
      v13 = static IntegerBitPacking.unpackUInt16UInt8(_:)(v3);
      v14 = HIWORD(v13);
LABEL_13:
      *(_DWORD *)(v6 + 16) = v9;
      *(_WORD *)(v6 + 20) = v13;
      *(_BYTE *)(v6 + 22) = v14;
      goto LABEL_14;
    }
    goto LABEL_18;
  }
  v10 = __CFADD__(at, _);
  v11 = at + _;
  if (v10)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (!(_DWORD)v3)
  {
    ByteBuffer._Storage.reallocStorage(capacity:)(v11);
    goto LABEL_12;
  }
  if (v7 >= v3)
  {
    v12 = ByteBuffer._Storage.reallocSlice(_:capacity:)(v3 | (v7 << 32), v11);
    swift_release();
    *(_QWORD *)v6 = v12;
    v8 = v12;
LABEL_12:
    LOWORD(v13) = 0;
    LOBYTE(v14) = 0;
    v9 = *(_DWORD *)(v8 + 16);
    goto LABEL_13;
  }
LABEL_19:
  __break(1u);
}

void ByteBuffer._setBytes(_:at:)(uint64_t a1, uint64_t a2, Swift::UInt32 a3)
{
  uint64_t v3;
  unint64_t v4;
  unsigned int v5;
  unsigned int v7;
  BOOL v8;
  Swift::UInt32 v9;
  Swift::UInt32 v10;
  unsigned int v11;
  int v12;
  int v13;
  _QWORD *v14;
  unsigned int v15;
  uint64_t v16;

  if (a1)
    v4 = a2 - a1;
  else
    v4 = 0;
  v5 = a3 + v4;
  if (__CFADD__(a3, (_DWORD)v4))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if ((OUTLINED_FUNCTION_34_0() & 1) == 0)
  {
    v7 = *(_DWORD *)(v3 + 16);
    v8 = v5 >= v7;
    v9 = v5 - v7;
    if (v8)
      v10 = v9;
    else
      v10 = 0;
    ByteBuffer._copyStorageAndRebase(extraCapacity:resetIndices:)(v10, 0);
  }
  if ((v4 & 0x8000000000000000) != 0)
    goto LABEL_15;
  if (HIDWORD(v4))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  ByteBuffer._ensureAvailableCapacity(_:at:)(v4, a3);
  v11 = *(_DWORD *)(v3 + 16);
  v12 = *(unsigned __int16 *)(v3 + 20);
  v13 = *(unsigned __int8 *)(v3 + 22);
  v14 = (_QWORD *)(*(_QWORD *)v3 + 24);
  OUTLINED_FUNCTION_176();
  v15 = v13 | (v12 << 8);
  if (v11 >= v15)
  {
    v16 = sub_1A566CC98(a3, *v14 + v15, *v14 + v15 + v11 - v15);
    UnsafeMutableRawBufferPointer.init(fastRebase:)(v16);
    sub_1A594C3CC();
    return;
  }
LABEL_17:
  __break(1u);
}

uint64_t ByteBuffer._setBytesAssumingUniqueBufferAccess(_:at:)(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t *v3;
  uint64_t v5;
  unsigned int v6;
  int v7;
  int v8;
  _QWORD *v9;
  uint64_t result;
  unsigned int v11;
  uint64_t v12;

  v5 = *v3;
  v6 = *((_DWORD *)v3 + 4);
  v7 = *((unsigned __int16 *)v3 + 10);
  v8 = *((unsigned __int8 *)v3 + 22);
  v9 = (_QWORD *)(v5 + 24);
  result = OUTLINED_FUNCTION_176();
  v11 = v8 | (v7 << 8);
  if (v6 < v11)
  {
    __break(1u);
  }
  else
  {
    v12 = sub_1A566CC98(a3, *v9 + v11, *v9 + v11 + v6 - v11);
    UnsafeMutableRawBufferPointer.init(fastRebase:)(v12);
    return sub_1A594C3CC();
  }
  return result;
}

uint64_t ByteBuffer._slicedStorageBuffer.getter(uint64_t a1, uint64_t a2, unint64_t a3)
{
  _QWORD *v4;
  uint64_t result;
  unsigned int v6;

  v4 = (_QWORD *)(a1 + 24);
  result = OUTLINED_FUNCTION_176();
  v6 = (a3 >> 24) & 0xFFFF00 | BYTE6(a3);
  if (a3 >= v6)
    return *v4 + v6;
  __break(1u);
  return result;
}

uint64_t sub_1A566CB1C(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;

  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v3 = *(_QWORD *)(a2 + 16);
  result = sub_1A569EA78(0, result, v3);
  if ((v4 & 1) != 0)
    v5 = v3;
  else
    v5 = result;
  if (v3 < v5)
    goto LABEL_9;
  if ((v5 & 0x8000000000000000) == 0)
    return a2;
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_1A566CB84(uint64_t result, uint64_t a2, unint64_t a3)
{
  unint64_t v5;
  unint64_t v6;
  int64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  if ((result & 0x8000000000000000) == 0)
  {
    v5 = HIDWORD(a3);
    if (BYTE4(a3))
    {
      if (BYTE4(a3) == 1)
        v6 = *(_QWORD *)(a2 + 16);
      else
        v6 = 0;
    }
    else
    {
      v6 = 1;
    }
    v7 = sub_1A569A064(0, result, v6, a2, a3 & 0xFFFFFFFFFFLL);
    if ((v8 & 1) != 0)
    {
      if ((_BYTE)v5)
      {
        if (v5 != 1)
        {
LABEL_19:
          v7 = 0;
          v9 = 0;
          goto LABEL_20;
        }
        v7 = *(_QWORD *)(a2 + 16);
        v9 = v7;
LABEL_20:
        v10 = sub_1A569C6BC(v7, v9, a2, a3 & 0xFFFFFFFFFFLL);
        sub_1A54E3458(a2, a3, v5);
        return v10;
      }
      v7 = 1;
    }
    else if ((_BYTE)v5)
    {
      if (v5 == 1)
        v9 = *(_QWORD *)(a2 + 16);
      else
        v9 = 0;
LABEL_17:
      if (v9 < v7)
      {
        __break(1u);
        goto LABEL_19;
      }
      goto LABEL_20;
    }
    v9 = 1;
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A566CC98(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char v7;

  if (result < 0)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    return result;
  }
  v5 = a3 - a2;
  if (a2)
    v6 = a3 - a2;
  else
    v6 = 0;
  result = sub_1A56F1098(0, result, v6, a2, a3);
  if ((v7 & 1) != 0)
  {
    result = v5;
    if (!a2)
      return 0;
  }
  else if (!a2)
  {
    v5 = 0;
  }
  if (v5 < result)
    goto LABEL_13;
  return result;
}

uint64_t ByteBuffer._setSlowPath<A>(bytes:at:)(uint64_t *a1, Swift::UInt32 a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  unint64_t v11;
  unsigned int v12;
  unsigned int v13;
  BOOL v14;
  Swift::UInt32 v15;
  Swift::UInt32 v16;
  Swift::UInt32 v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  Swift::UInt32 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  unsigned int v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  Swift::UInt32 v33;
  char *v34;
  uint64_t AssociatedTypeWitness;
  char v36;
  char v37;

  v4 = v3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v34 = (char *)&v32 - v9;
  if (__swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796A08) == a3)
    return sub_1A566A57C(*a1, a1[1], a1[2], a2);
  result = sub_1A594B748();
  v11 = result;
  v33 = a2;
  v12 = a2 + result;
  if (__CFADD__(a2, (_DWORD)result))
    goto LABEL_37;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v13 = *(_DWORD *)(v4 + 16);
    v14 = v12 >= v13;
    v15 = v12 - v13;
    if (v14)
      v16 = v15;
    else
      v16 = 0;
    ByteBuffer._copyStorageAndRebase(extraCapacity:resetIndices:)(v16, 0);
  }
  v32 = v8;
  v17 = v33;
  sub_1A566D00C(v11, (uint64_t *)v4, v33);
  v18 = sub_1A594C360();
  swift_getAssociatedConformanceWitness();
  result = sub_1A594C3C0();
  if (v37 != 1)
  {
    v20 = v17;
    v21 = v17;
    while (1)
    {
      v19 = v18 + 1;
      if (__OFADD__(v18, 1))
        break;
      if ((v19 & 0x8000000000000000) != 0)
        goto LABEL_30;
      if (HIDWORD(v19))
        goto LABEL_31;
      v22 = *(unsigned __int16 *)(v4 + 20);
      v23 = *(unsigned __int8 *)(v4 + 22);
      v24 = v23 | ((_DWORD)v22 << 8);
      v25 = v24 + v21;
      if (__CFADD__((_DWORD)v24, v21))
        goto LABEL_32;
      v26 = v25 + v19;
      if (__CFADD__(v25, (_DWORD)v19))
        goto LABEL_33;
      v27 = v36;
      v28 = *(unsigned int *)(v4 + 16);
      v29 = *(_QWORD *)v4;
      if (v28 < v26)
      {
        v30 = *(_DWORD *)(v29 + 16);
        if (v30 >= v26)
        {
          if (v30 < v24)
            goto LABEL_35;
          *(_DWORD *)(v4 + 16) = v30;
        }
        else
        {
          if (__CFADD__(v21, (_DWORD)v19))
            goto LABEL_34;
          if ((_DWORD)v24)
          {
            if (v28 < v24)
              goto LABEL_36;
            v31 = ByteBuffer._Storage.reallocSlice(_:capacity:)(v24 | (v28 << 32), v21 + v19);
            swift_release();
            *(_QWORD *)v4 = v31;
          }
          else
          {
            ByteBuffer._Storage.reallocStorage(capacity:)(v21 + v19);
            v31 = *(_QWORD *)v4;
          }
          v23 = 0;
          v22 = 0;
          OUTLINED_FUNCTION_29_1();
          v29 = v31;
          v21 = v33;
        }
      }
      OUTLINED_FUNCTION_176();
      *(_BYTE *)(*(_QWORD *)(v29 + 24) + (v23 | (v22 << 8)) + v20 + v18) = v27;
      result = sub_1A594C3C0();
      ++v18;
      if (v37 == 1)
        goto LABEL_28;
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    return result;
  }
  v19 = v18;
LABEL_28:
  (*(void (**)(char *, uint64_t))(v32 + 8))(v34, AssociatedTypeWitness);
  return v19;
}

unint64_t sub_1A566D00C(unint64_t result, uint64_t *a2, Swift::UInt32 at)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (!HIDWORD(result))
  {
    ByteBuffer._ensureAvailableCapacity(_:at:)(result, at);
    v5 = *a2;
    v6 = *((unsigned __int16 *)a2 + 10);
    v7 = *((unsigned __int8 *)a2 + 22);
    OUTLINED_FUNCTION_176();
    return *(_QWORD *)(v5 + 24) + (v7 | (v6 << 8)) + at;
  }
  __break(1u);
  return result;
}

uint64_t ByteBuffer._setBytes<A>(_:at:)(uint64_t *a1, Swift::UInt32 a2, uint64_t a3)
{
  unsigned int v7;
  char v8;

  sub_1A594B754();
  if ((v8 & 1) != 0)
    return ByteBuffer._setSlowPath<A>(bytes:at:)(a1, a2, a3);
  else
    return v7;
}

void sub_1A566D11C(uint64_t a1@<X0>, uint64_t a2@<X1>, Swift::UInt32 a3@<W3>, _DWORD *a4@<X8>)
{
  uint64_t v5;
  int v6;

  if (a1)
    v5 = a1 + a2;
  else
    v5 = 0;
  ByteBuffer._setBytes(_:at:)(a1, v5, a3);
  *a4 = v6;
  OUTLINED_FUNCTION_32_1();
}

uint64_t ByteBuffer.writableBytes.getter(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unsigned int v3;
  BOOL v4;
  unsigned int v5;
  uint64_t result;

  v3 = (a3 >> 24) & 0xFFFF00 | BYTE6(a3);
  v4 = a3 >= v3;
  v5 = a3 - v3;
  if (v4)
  {
    result = v5 - HIDWORD(a2);
    if (v5 >= HIDWORD(a2))
      return result;
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t ByteBuffer.capacity.getter(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unsigned int v3;
  uint64_t result;

  v3 = (a3 >> 24) & 0xFFFF00 | BYTE6(a3);
  result = a3 - v3;
  if (a3 < v3)
    __break(1u);
  return result;
}

uint64_t ByteBuffer.storageCapacity.getter(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

Swift::Void __swiftcall ByteBuffer.reserveCapacity(minimumWritableBytes:)(Swift::Int minimumWritableBytes)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  char v5;
  Swift::UInt32 v6;
  Swift::UInt32 v7;
  Swift::UInt32 v8;
  Swift::Bool v9;

  v2 = *(unsigned int *)(v1 + 12);
  v3 = v2 + minimumWritableBytes;
  if (__OFADD__(v2, minimumWritableBytes))
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_21_2();
  if (!v5)
    goto LABEL_10;
  if (v3 <= v4)
  {
    OUTLINED_FUNCTION_1();
  }
  else if (OUTLINED_FUNCTION_34_0())
  {
    v6 = OUTLINED_FUNCTION_28_1();
    OUTLINED_FUNCTION_19_2(v6, v7);
  }
  else
  {
    v8 = OUTLINED_FUNCTION_28_1();
    OUTLINED_FUNCTION_20_2(v8, v9);
  }
}

Swift::Void __swiftcall ByteBuffer._copyStorageAndRebaseIfNeeded()()
{
  if ((OUTLINED_FUNCTION_34_0() & 1) == 0)
    ByteBuffer._copyStorageAndRebase(extraCapacity:resetIndices:)(0, 0);
}

uint64_t sub_1A566D234(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  unsigned int v4;
  int v5;
  int v6;
  _QWORD *v7;
  uint64_t result;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    ByteBuffer._copyStorageAndRebase(extraCapacity:resetIndices:)(0, 0);
  v4 = *(_DWORD *)(a1 + 16);
  v5 = *(unsigned __int16 *)(a1 + 20);
  v6 = *(unsigned __int8 *)(a1 + 22);
  v7 = (_QWORD *)(*(_QWORD *)a1 + 24);
  result = swift_beginAccess();
  v9 = v6 | (v5 << 8);
  if (v4 < v9)
  {
    __break(1u);
  }
  else
  {
    v10 = sub_1A566CC98(*(unsigned int *)(a1 + 12), *v7 + v9, *v7 + v9 + v4 - v9);
    v11 = UnsafeMutableRawBufferPointer.init(fastRebase:)(v10);
    return a2(v11);
  }
  return result;
}

void ByteBuffer.withUnsafeMutableWritableBytes<A>(_:)()
{
  uint64_t v0;
  unsigned int v1;
  int v2;
  int v3;
  _QWORD *v4;
  unsigned int v5;
  uint64_t v6;

  if ((OUTLINED_FUNCTION_4_7() & 1) == 0)
    OUTLINED_FUNCTION_12_3();
  v1 = *(_DWORD *)(v0 + 16);
  v2 = *(unsigned __int16 *)(v0 + 20);
  v3 = *(unsigned __int8 *)(v0 + 22);
  v4 = (_QWORD *)(*(_QWORD *)v0 + 24);
  OUTLINED_FUNCTION_176();
  v5 = v3 | (v2 << 8);
  if (v1 < v5)
  {
    __break(1u);
  }
  else
  {
    v6 = sub_1A566CC98(*(unsigned int *)(v0 + 12), *v4 + v5, *v4 + v5 + v1 - v5);
    UnsafeMutableRawBufferPointer.init(fastRebase:)(v6);
    OUTLINED_FUNCTION_10_2();
    OUTLINED_FUNCTION_11_3();
  }
}

uint64_t ByteBuffer.writeWithUnsafeMutableBytes(minimumWritableBytes:_:)(Swift::Int a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  int v6;
  BOOL v7;
  int v8;

  if (a1 >= 1)
    ByteBuffer.reserveCapacity(minimumWritableBytes:)(a1);
  result = sub_1A566D234(v2, a2);
  if (!v3)
  {
    v6 = *(_DWORD *)(v2 + 12);
    v7 = __CFADD__(v6, (_DWORD)result);
    v8 = v6 + result;
    if (v7)
      __break(1u);
    else
      *(_DWORD *)(v2 + 12) = v8;
  }
  return result;
}

uint64_t ByteBuffer.writeWithUnsafeMutableBytes(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  int v3;
  BOOL v4;
  int v5;

  result = sub_1A566D234(v0, (uint64_t (*)(uint64_t))sub_1A566E1F8);
  if (!v1)
  {
    v3 = *(_DWORD *)(v0 + 12);
    v4 = __CFADD__(v3, (_DWORD)result);
    v5 = v3 + result;
    if (v4)
      __break(1u);
    else
      *(_DWORD *)(v0 + 12) = v5;
  }
  return result;
}

void ByteBuffer.withVeryUnsafeBytes<A>(_:)(void (*a1)(_QWORD, _QWORD), uint64_t a2, uint64_t a3)
{
  _QWORD *v4;
  unsigned int v5;
  unsigned int v6;
  char v7;

  v4 = (_QWORD *)(a3 + 24);
  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_25();
  if (v7)
  {
    a1(*v4 + v5, *v4 + v5 + v6);
    OUTLINED_FUNCTION_16_3();
  }
  else
  {
    __break(1u);
  }
}

void ByteBuffer.withUnsafeReadableBytesWithStorageManagement<A>(_:)()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_6_5();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v6 = HIDWORD(v2);
  OUTLINED_FUNCTION_176();
  if (v6 < v3)
  {
    __break(1u);
  }
  else
  {
    v7 = *(_QWORD *)(v5 + 24) + ((v1 >> 24) & 0xFFFF00 | BYTE6(v1)) + v3;
    OUTLINED_FUNCTION_36_1(v7, v7 + v6 - v3);
    OUTLINED_FUNCTION_3_5();
  }
}

void ByteBuffer.withVeryUnsafeBytesWithStorageManagement<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  unsigned int v5;
  char v6;

  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_25();
  if (v6)
  {
    OUTLINED_FUNCTION_36_1(*(_QWORD *)(a3 + 24) + v4, *(_QWORD *)(a3 + 24) + v4 + v5);
    OUTLINED_FUNCTION_16_3();
  }
  else
  {
    __break(1u);
  }
}

Swift::Bool __swiftcall ByteBuffer.discardReadBytes()()
{
  uint64_t *v0;
  int v1;
  uint64_t v2;
  Swift::Bool result;
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  size_t v7;

  v1 = *((_DWORD *)v0 + 2);
  if (!v1)
    return v1 != 0;
  if (v1 == *((_DWORD *)v0 + 3))
  {
    v0[1] = 0;
    return v1 != 0;
  }
  if (!OUTLINED_FUNCTION_34_0())
  {
    ByteBuffer._copyStorageAndRebase(extraCapacity:resetIndices:)(0, 1);
    return v1 != 0;
  }
  v2 = *v0;
  result = OUTLINED_FUNCTION_176();
  v4 = *((unsigned __int8 *)v0 + 22) | (*((unsigned __int16 *)v0 + 10) << 8);
  v5 = *((_DWORD *)v0 + 2);
  if (__CFADD__((_DWORD)v4, v5))
  {
    __break(1u);
  }
  else
  {
    v6 = *((_DWORD *)v0 + 3);
    v7 = v6 - v5;
    if (v6 >= v5)
    {
      memmove((void *)(*(_QWORD *)(v2 + 24) + v4), (const void *)(*(_QWORD *)(v2 + 24) + v4 + v5), v7);
      *((_DWORD *)v0 + 2) = 0;
      *((_DWORD *)v0 + 3) = v7;
      return v1 != 0;
    }
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall ByteBuffer.clear()()
{
  uint64_t v0;
  uint64_t v1;

  if ((OUTLINED_FUNCTION_34_0() & 1) == 0)
  {
    v1 = sub_1A566C3C4(*(_DWORD *)(*(_QWORD *)v0 + 16));
    OUTLINED_FUNCTION_9_5(v1);
  }
  OUTLINED_FUNCTION_5_3();
  OUTLINED_FUNCTION_1();
}

Swift::Void __swiftcall ByteBuffer.clear(minimumCapacity:)(Swift::UInt32 minimumCapacity)
{
  uint64_t *v1;
  int v3;
  uint64_t v4;
  uint64_t v5;

  v3 = OUTLINED_FUNCTION_34_0();
  v4 = *v1;
  if (v3)
  {
    if (*(_DWORD *)(v4 + 16) < minimumCapacity)
      ByteBuffer._Storage.reallocStorage(capacity:)(minimumCapacity);
  }
  else
  {
    v5 = sub_1A566C3C4(minimumCapacity);
    OUTLINED_FUNCTION_9_5(v5);
  }
  OUTLINED_FUNCTION_5_3();
  OUTLINED_FUNCTION_8_1();
}

Swift::Void __swiftcall ByteBuffer.clear(minimumCapacity:)(Swift::Int minimumCapacity)
{
  uint64_t *v1;
  Swift::UInt32 v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  if (HIDWORD(minimumCapacity))
  {
    __break(1u);
  }
  else
  {
    v2 = minimumCapacity;
    v3 = OUTLINED_FUNCTION_34_0();
    v4 = *v1;
    if ((v3 & 1) != 0)
    {
      if (*(_DWORD *)(v4 + 16) < v2)
        ByteBuffer._Storage.reallocStorage(capacity:)(v2);
    }
    else
    {
      v5 = sub_1A566C3C4(v2);
      OUTLINED_FUNCTION_9_5(v5);
    }
    OUTLINED_FUNCTION_5_3();
    OUTLINED_FUNCTION_8_1();
  }
}

uint64_t ByteBuffer.description.getter(uint64_t a1, unint64_t a2, unint64_t a3)
{
  unsigned int v4;
  unint64_t v5;
  uint64_t result;

  v4 = a2;
  v5 = HIDWORD(a2);
  sub_1A594C720();
  OUTLINED_FUNCTION_7_6();
  OUTLINED_FUNCTION_23_1();
  OUTLINED_FUNCTION_7_6();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_37_1();
  sub_1A594B5F8();
  OUTLINED_FUNCTION_23_1();
  OUTLINED_FUNCTION_7_6();
  OUTLINED_FUNCTION_72();
  result = sub_1A594B5F8();
  if (v5 < v4)
  {
    __break(1u);
  }
  else
  {
    sub_1A594CC9C();
    OUTLINED_FUNCTION_7_6();
    OUTLINED_FUNCTION_52();
    OUTLINED_FUNCTION_37_1();
    result = sub_1A594B5F8();
    if (a3 >= ((a3 >> 24) & 0xFFFF00 | BYTE6(a3)))
    {
      OUTLINED_FUNCTION_22_2();
      OUTLINED_FUNCTION_7_6();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_7_6();
      OUTLINED_FUNCTION_22_2();
      OUTLINED_FUNCTION_7_6();
      OUTLINED_FUNCTION_52();
      OUTLINED_FUNCTION_37_1();
      sub_1A594B5F8();
      _ByteBufferSlice.description.getter();
      OUTLINED_FUNCTION_7_6();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_37_1();
      sub_1A594B5F8();
      OUTLINED_FUNCTION_176();
      sub_1A594C924();
      OUTLINED_FUNCTION_30_1();
      sub_1A594CC9C();
      OUTLINED_FUNCTION_7_6();
      OUTLINED_FUNCTION_17();
      sub_1A594B5F8();
      return 0;
    }
  }
  __break(1u);
  return result;
}

uint64_t ByteBuffer.debugDescription.getter(uint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  unsigned int v10;
  uint64_t v11;

  v6 = HIDWORD(a2);
  sub_1A594C720();
  v7 = a3 & 0xFFFFFFFFFFFFFFLL;
  v8 = ByteBuffer.description.getter(a1, a2, v7);
  swift_bridgeObjectRelease();
  result = sub_1A594B5F8();
  v10 = v6 - a2;
  if (v6 < a2)
  {
    __break(1u);
  }
  else
  {
    if (v10 >= 0x400)
      v11 = 1024;
    else
      v11 = v10;
    ByteBuffer._Storage.dumpBytes(slice:offset:length:)(v7, a2, v11);
    sub_1A594B5F8();
    OUTLINED_FUNCTION_17();
    return v8;
  }
  return result;
}

uint64_t sub_1A566DAA8()
{
  uint64_t v0;

  return ByteBuffer.description.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(unsigned int *)(v0 + 16) | ((unint64_t)*(unsigned __int16 *)(v0 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(v0 + 22) << 48));
}

Swift::Void __swiftcall ByteBuffer.moveReaderIndex(forwardBy:)(Swift::Int forwardBy)
{
  uint64_t v1;
  int v2;
  BOOL v3;
  unsigned int v4;

  v2 = *(_DWORD *)(v1 + 8);
  v3 = __CFADD__(v2, (_DWORD)forwardBy);
  v4 = v2 + forwardBy;
  if (v3)
  {
    __break(1u);
  }
  else if (*(_DWORD *)(v1 + 12) >= v4)
  {
    *(_DWORD *)(v1 + 8) = v4;
    return;
  }
  __break(1u);
}

Swift::Void __swiftcall ByteBuffer.moveWriterIndex(forwardBy:)(Swift::Int forwardBy)
{
  uint64_t v1;
  int v2;
  BOOL v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;

  v2 = *(_DWORD *)(v1 + 12);
  v3 = __CFADD__(v2, (_DWORD)forwardBy);
  v4 = v2 + forwardBy;
  if (v3)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v5 = *(_DWORD *)(v1 + 16);
  v6 = *(unsigned __int8 *)(v1 + 22) | (*(unsigned __int16 *)(v1 + 20) << 8);
  v3 = v5 >= v6;
  v7 = v5 - v6;
  if (!v3)
    goto LABEL_7;
  if (v7 >= v4)
  {
    *(_DWORD *)(v1 + 12) = v4;
    return;
  }
LABEL_8:
  __break(1u);
}

Swift::Void __swiftcall ByteBuffer.moveWriterIndex(to:)(Swift::Int to)
{
  uint64_t v1;
  unsigned int v2;
  unsigned int v3;
  char v4;

  OUTLINED_FUNCTION_21_2();
  if (v4)
  {
    if (v3 >= v2)
    {
      *(_DWORD *)(v1 + 12) = v2;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

Swift::Int __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ByteBuffer.copyBytes(at:to:length:)(Swift::Int at, Swift::Int to, Swift::Int length)
{
  uint64_t *v3;
  Swift::Int result;
  uint64_t v5;
  size_t v6;
  size_t v7;
  Swift::Int v8;
  char v9;
  char *v10;
  uint64_t v11;
  Swift::UInt32 v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v16;
  unsigned int v17;
  BOOL v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;

  OUTLINED_FUNCTION_6_5();
  if ((v6 & 0x8000000000000000) != 0)
  {
    v9 = 0;
    goto LABEL_8;
  }
  v7 = v6;
  if (!v6)
  {
LABEL_9:
    OUTLINED_FUNCTION_3_5();
    return result;
  }
  v8 = result;
  if (*((unsigned int *)v3 + 2) > result)
  {
LABEL_6:
    v9 = 1;
LABEL_8:
    sub_1A566E218();
    swift_allocError();
    *v10 = v9;
    swift_willThrow();
    goto LABEL_9;
  }
  if (__OFADD__(result, v6))
  {
    __break(1u);
    goto LABEL_22;
  }
  if ((uint64_t)(result + v6) > *((unsigned int *)v3 + 3))
    goto LABEL_6;
  v11 = v5;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) != 0)
  {
LABEL_16:
    if (!HIDWORD(v7))
    {
      ByteBuffer._ensureAvailableCapacity(_:at:)(v7, v11);
      v13 = *v3;
      v14 = *((unsigned __int16 *)v3 + 10);
      v15 = *((unsigned __int8 *)v3 + 22);
      result = OUTLINED_FUNCTION_176();
      v16 = v15 | (v14 << 8);
      v17 = *((_DWORD *)v3 + 4);
      v18 = v17 >= v16;
      v19 = v17 - v16;
      if (v18)
      {
        v20 = *(_QWORD *)(v13 + 24) + v16;
        v21 = sub_1A566CC98(v11, v20, v20 + v19);
        v22 = (void *)UnsafeMutableRawBufferPointer.init(fastRebase:)(v21);
        if (v22)
          memmove(v22, (const void *)(v20 + v8), v7);
        goto LABEL_9;
      }
      goto LABEL_23;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (!__OFADD__(v11, v7))
  {
    if (*((_DWORD *)v3 + 3) <= (v11 + v7))
      v12 = v11 + v7;
    else
      v12 = *((_DWORD *)v3 + 3);
    ByteBuffer._copyStorageAndRebase(capacity:resetIndices:)(v12, 0);
    goto LABEL_16;
  }
LABEL_24:
  __break(1u);
  return result;
}

void *ByteBuffer.CopyBytesError.negativeLength.unsafeMutableAddressor()
{
  return &static ByteBuffer.CopyBytesError.negativeLength;
}

void *ByteBuffer.CopyBytesError.unreadableSourceBytes.unsafeMutableAddressor()
{
  return &static ByteBuffer.CopyBytesError.unreadableSourceBytes;
}

BOOL sub_1A566DCA4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A564F75C(*a1, *a2);
}

uint64_t sub_1A566DCB0()
{
  return _s13IMAP2Protocol13ClientCommandO15EncodingOptionsV011MessageBodyE0O9hashValueSivg_0();
}

uint64_t sub_1A566DCB8()
{
  return sub_1A564F76C();
}

uint64_t static ByteBuffer.CopyBytesError.negativeLength.getter()
{
  return 0;
}

uint64_t static ByteBuffer.CopyBytesError.unreadableSourceBytes.getter()
{
  return 1;
}

void ByteBuffer.CopyBytesError.hash(into:)()
{
  sub_1A594CE88();
  OUTLINED_FUNCTION_1();
}

BOOL static ByteBuffer.CopyBytesError.__derived_struct_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t ByteBuffer.CopyBytesError.hashValue.getter()
{
  sub_1A594CE64();
  sub_1A594CE88();
  return sub_1A594CED0();
}

uint64_t sub_1A566DD44()
{
  return ByteBuffer.CopyBytesError.hashValue.getter();
}

void sub_1A566DD4C()
{
  ByteBuffer.CopyBytesError.hash(into:)();
}

BOOL sub_1A566DD54(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static ByteBuffer.CopyBytesError.__derived_struct_equals(_:_:)(*a1, *a2);
}

uint64_t ByteBuffer.CopyBytesError.debugDescription.getter()
{
  return sub_1A594B490();
}

uint64_t sub_1A566DD90()
{
  return ByteBuffer.CopyBytesError.debugDescription.getter();
}

uint64_t static ByteBuffer.== infix(_:_:)(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v7;

  if (HIDWORD(a2) < a2)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (HIDWORD(a5) < a5)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  if (HIDWORD(a2) - (_DWORD)a2 == HIDWORD(a5) - (_DWORD)a5)
  {
    if ((a3 & 0xFFFFFFFFFFFFFFLL) == (a6 & 0xFFFFFFFFFFFFFFLL) && result == a4)
    {
      v7 = 1;
    }
    else
    {
      swift_retain();
      v7 = sub_1A566B918();
    }
  }
  else
  {
    v7 = 0;
  }
  return v7 & 1;
}

void sub_1A566DE50()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  const void *v8;
  const void *v9;
  BOOL *v10;
  BOOL *v11;
  unint64_t v12;

  OUTLINED_FUNCTION_6_5();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v12 = HIDWORD(v2);
  OUTLINED_FUNCTION_176();
  if (v12 < v3)
  {
    __break(1u);
  }
  else if (v9)
  {
    *v11 = memcmp(v9, (const void *)(*(_QWORD *)(v5 + 24) + ((v1 >> 24) & 0xFFFF00 | BYTE6(v1)) + v3), v7 - (_QWORD)v9) == 0;
    OUTLINED_FUNCTION_3_5();
    return;
  }
  __break(1u);
}

uint64_t sub_1A566DEE0(uint64_t a1, uint64_t a2)
{
  return static ByteBuffer.== infix(_:_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned __int16 *)(a1 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 22) << 48), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(unsigned int *)(a2 + 16) | ((unint64_t)*(unsigned __int16 *)(a2 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a2 + 22) << 48));
}

uint64_t ByteBuffer.hash(into:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unsigned int v3;
  unint64_t v4;
  uint64_t result;

  v3 = a3;
  v4 = HIDWORD(a3);
  result = OUTLINED_FUNCTION_176();
  if (v4 >= v3)
    return sub_1A594CE70();
  __break(1u);
  return result;
}

uint64_t ByteBuffer.hashValue.getter(uint64_t a1, unint64_t a2)
{
  unsigned int v2;
  unint64_t v3;
  uint64_t result;

  v2 = a2;
  v3 = HIDWORD(a2);
  sub_1A594CE64();
  result = OUTLINED_FUNCTION_176();
  if (v3 < v2)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_35_1();
    return sub_1A594CED0();
  }
  return result;
}

uint64_t sub_1A566E01C()
{
  uint64_t v0;

  return ByteBuffer.hashValue.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
}

uint64_t sub_1A566E038(uint64_t a1)
{
  uint64_t v1;

  return ByteBuffer.hash(into:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8));
}

uint64_t sub_1A566E054()
{
  uint64_t v0;
  unsigned int v1;
  unsigned int v2;
  uint64_t result;

  v1 = *(_DWORD *)(v0 + 8);
  v2 = *(_DWORD *)(v0 + 12);
  sub_1A594CE64();
  result = OUTLINED_FUNCTION_176();
  if (v2 < v1)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_35_1();
    return sub_1A594CED0();
  }
  return result;
}

uint64_t ByteBuffer.modifyIfUniquelyOwned<A>(_:)@<X0>(uint64_t (*a1)(uint64_t)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v9;

  if (swift_isUniquelyReferenced_nonNull_native())
  {
    result = a1(v3);
    if (v4)
      return result;
    v9 = 0;
  }
  else
  {
    v9 = 1;
  }
  return __swift_storeEnumTagSinglePayload(a3, v9, 1, a2);
}

uint64_t type metadata accessor for ByteBuffer._Storage()
{
  return objc_opt_self();
}

unint64_t sub_1A566E178()
{
  unint64_t result;

  result = qword_1EE79B458;
  if (!qword_1EE79B458)
  {
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEDEA0], MEMORY[0x1E0DEDE70]);
    atomic_store(result, (unint64_t *)&qword_1EE79B458);
  }
  return result;
}

void sub_1A566E1B4(uint64_t a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  int v6;

  if (a1)
    v5 = a1 + a2;
  else
    v5 = 0;
  ByteBuffer._setBytes(_:at:)(a1, v5, *(_DWORD *)(v3 + 24));
  *a3 = v6;
  OUTLINED_FUNCTION_32_1();
}

uint64_t sub_1A566E1F8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

unint64_t sub_1A566E218()
{
  unint64_t result;

  result = qword_1EE7A9190;
  if (!qword_1EE7A9190)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ByteBuffer.CopyBytesError, &type metadata for ByteBuffer.CopyBytesError);
    atomic_store(result, (unint64_t *)&qword_1EE7A9190);
  }
  return result;
}

unint64_t sub_1A566E258()
{
  unint64_t result;

  result = qword_1EE7A9198;
  if (!qword_1EE7A9198)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ByteBuffer.CopyBytesError, &type metadata for ByteBuffer.CopyBytesError);
    atomic_store(result, (unint64_t *)&qword_1EE7A9198);
  }
  return result;
}

unint64_t sub_1A566E298()
{
  unint64_t result;

  result = qword_1EE7A91A0;
  if (!qword_1EE7A91A0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ByteBuffer, &type metadata for ByteBuffer);
    atomic_store(result, (unint64_t *)&qword_1EE7A91A0);
  }
  return result;
}

_DWORD *__swift_memcpy7_4(_DWORD *result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_DWORD *)((char *)result + 3) = *(int *)((char *)a2 + 3);
  *result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for _ByteBufferSlice(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 7))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for _ByteBufferSlice(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 6) = 0;
    *(_WORD *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 7) = v3;
  return result;
}

void type metadata accessor for _ByteBufferSlice()
{
  OUTLINED_FUNCTION_3_1();
}

__n128 __swift_memcpy32_8_1(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for ByteBufferAllocator(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

void type metadata accessor for ByteBufferAllocator()
{
  OUTLINED_FUNCTION_3_1();
}

uint64_t destroy for ByteBuffer()
{
  return swift_release();
}

uint64_t _s12NIOIMAPCore210ByteBufferVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 19) = *(_DWORD *)(a2 + 19);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ByteBuffer(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_WORD *)(a1 + 20) = *(_WORD *)(a2 + 20);
  *(_BYTE *)(a1 + 22) = *(_BYTE *)(a2 + 22);
  return a1;
}

__n128 __swift_memcpy23_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_QWORD *)(a1 + 15) = *(_QWORD *)(a2 + 15);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ByteBuffer(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_WORD *)(a1 + 20) = *(_WORD *)(a2 + 20);
  *(_BYTE *)(a1 + 22) = *(_BYTE *)(a2 + 22);
  return a1;
}

uint64_t getEnumTagSinglePayload for ByteBuffer(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 23))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ByteBuffer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 22) = 0;
    *(_WORD *)(result + 20) = 0;
    *(_DWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 23) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 23) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ByteBuffer()
{
  OUTLINED_FUNCTION_3_1();
}

_BYTE *__swift_memcpy1_1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

void type metadata accessor for ByteBuffer.CopyBytesError()
{
  OUTLINED_FUNCTION_3_1();
}

uint64_t getEnumTagSinglePayload for ExtendedSearchResponse.Kind(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 1) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v5 = v6 - 2;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s12NIOIMAPCore210ByteBufferV14CopyBytesErrorV9BaseErrorOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A566E648 + 4 * byte_1A59ACBC5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A566E67C + 4 * asc_1A59ACBC0[v4]))();
}

uint64_t sub_1A566E67C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A566E684(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A566E68CLL);
  return result;
}

uint64_t sub_1A566E698(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A566E6A0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A566E6A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A566E6AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ByteBuffer.CopyBytesError.BaseError()
{
  return &type metadata for ByteBuffer.CopyBytesError.BaseError;
}

unint64_t sub_1A566E6CC()
{
  unint64_t result;

  result = qword_1EE7A91A8;
  if (!qword_1EE7A91A8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59ACE3C, &type metadata for ByteBuffer.CopyBytesError.BaseError);
    atomic_store(result, (unint64_t *)&qword_1EE7A91A8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_7()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_4_7()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void OUTLINED_FUNCTION_5_3()
{
  uint64_t v0;

  *(_DWORD *)(v0 + 16) = *(_DWORD *)(*(_QWORD *)v0 + 16);
  *(_WORD *)(v0 + 20) = 0;
  *(_BYTE *)(v0 + 22) = 0;
  *(_QWORD *)(v0 + 8) = 0;
}

uint64_t OUTLINED_FUNCTION_7_6()
{
  return sub_1A594B5F8();
}

uint64_t OUTLINED_FUNCTION_9_5(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_10_2()
{
  uint64_t (*v0)(void);

  return v0();
}

void OUTLINED_FUNCTION_12_3()
{
  ByteBuffer._copyStorageAndRebase(extraCapacity:resetIndices:)(0, 0);
}

uint64_t OUTLINED_FUNCTION_18_2()
{
  return swift_allocObject();
}

void OUTLINED_FUNCTION_19_2(Swift::UInt32 _, Swift::UInt32 at)
{
  ByteBuffer._ensureAvailableCapacity(_:at:)(_, at);
}

void OUTLINED_FUNCTION_20_2(Swift::UInt32 capacity, Swift::Bool resetIndices)
{
  ByteBuffer._copyStorageAndRebase(capacity:resetIndices:)(capacity, resetIndices);
}

uint64_t OUTLINED_FUNCTION_22_2()
{
  return sub_1A594CC9C();
}

uint64_t OUTLINED_FUNCTION_23_1()
{
  return sub_1A594CC9C();
}

uint64_t OUTLINED_FUNCTION_24_0()
{
  return sub_1A594CC9C();
}

uint64_t OUTLINED_FUNCTION_28_1()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_29_1()
{
  uint64_t v0;
  uint64_t v1;

  *(_DWORD *)(v0 + 16) = *(_DWORD *)(v1 + 16);
  *(_WORD *)(v0 + 20) = 0;
  *(_BYTE *)(v0 + 22) = 0;
}

uint64_t OUTLINED_FUNCTION_30_1()
{
  return sub_1A594B5F8();
}

uint64_t OUTLINED_FUNCTION_35_1()
{
  return sub_1A594CE70();
}

uint64_t OUTLINED_FUNCTION_36_1(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_37_1()
{
  return 8236;
}

uint64_t sub_1A566E8DC@<X0>(void (*a1)(uint64_t, uint64_t)@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X6>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  v25 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  OUTLINED_FUNCTION_11_4();
  v9 = v8 - v7;
  v11 = *(_QWORD *)(v10 + 16);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_11_4();
  v16 = v15 - v14;
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_11_4();
  v20 = v19 - v18;
  (*(void (**)(uint64_t, uint64_t))(v21 + 16))(v19 - v18, v22);
  v23 = 1;
  if (__swift_getEnumTagSinglePayload(v20, 1, v11) != 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v16, v20, v11);
    a1(v16, v9);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v16, v11);
    if (v5)
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(a4, v9, a2);
    v23 = 0;
  }
  return __swift_storeEnumTagSinglePayload(a5, v23, 1, a3);
}

uint64_t ByteBuffer.writeInteger<A>(_:endianness:as:)()
{
  uint64_t v0;
  uint64_t result;
  int v2;
  BOOL v3;
  int v4;

  result = ByteBuffer.setInteger<A>(_:at:endianness:as:)();
  v2 = *(_DWORD *)(v0 + 12);
  v3 = __CFADD__(v2, (_DWORD)result);
  v4 = v2 + result;
  if (v3)
    __break(1u);
  else
    *(_DWORD *)(v0 + 12) = v4;
  return result;
}

uint64_t sub_1A566EA88(int a1)
{
  unsigned int v1;
  unsigned int v2;
  int v3;
  BOOL v4;
  unsigned int v5;

  if (!a1)
    return 1;
  v1 = (a1 - 1) | ((a1 - 1) >> 1) | (((a1 - 1) | ((a1 - 1) >> 1)) >> 2);
  v2 = v1 | (v1 >> 4) | ((v1 | (v1 >> 4)) >> 8);
  v3 = v2 | HIWORD(v2);
  v4 = __CFADD__(v3, 1);
  v5 = v3 + 1;
  if (v4)
    return 0xFFFFFFFFLL;
  else
    return v5;
}

uint64_t ByteBuffer._toEndianness<A>(value:endianness:)(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
    return sub_1A594C96C();
  else
    return sub_1A594C990();
}

void ByteBuffer.readInteger<A>(endianness:as:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _DWORD v15[2];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_16_4();
  v2 = v1;
  v4 = v3;
  v16 = v5;
  v15[1] = v6 & 1;
  v7 = sub_1A594C354();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v15 - v9;
  v11 = *(unsigned int *)(v0 + 8);
  v12 = v11 | ((unint64_t)*(unsigned int *)(v0 + 12) << 32);
  v13 = *(unsigned int *)(v0 + 16) | ((unint64_t)*(unsigned __int16 *)(v0 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(v0 + 22) << 48);
  swift_retain();
  ByteBuffer.getInteger<A>(at:endianness:as:)(v11, v12, v13, v4, (uint64_t)v10);
  swift_release();
  v17 = v4;
  v18 = v2;
  v19 = v0;
  sub_1A566E8DC((void (*)(uint64_t, uint64_t))sub_1A566F0BC, MEMORY[0x1E0DEDCE8], v4, v14, v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  OUTLINED_FUNCTION_1_3();
}

void ByteBuffer.getInteger<A>(at:endianness:as:)(uint64_t a1@<X0>, uint64_t a2@<X4>, unint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X8>)
{
  int64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = a1 - a2;
  if (__OFSUB__(a1, a2))
  {
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v6 < 0)
    goto LABEL_6;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 - 8) + 64);
  if (v7 < 0)
    goto LABEL_6;
  if (HIDWORD(a2) < a2)
    goto LABEL_14;
  if ((HIDWORD(a2) - a2) - v7 < v6)
  {
LABEL_6:
    __swift_storeEnumTagSinglePayload(a5, 1, 1, a4);
    return;
  }
  if (__OFADD__(v6, v7))
    goto LABEL_15;
  if (v6 + v7 < v6)
  {
LABEL_16:
    __break(1u);
    return;
  }
  v8 = MEMORY[0x1E0DEDE70];
  if (a4 == MEMORY[0x1E0DEDE70])
  {
    MEMORY[0x1E0C80A78](a1);
    ByteBuffer.withUnsafeReadableBytes<A>(_:)();
    __swift_storeEnumTagSinglePayload(a5, 0, 1, v8);
  }
  else
  {
    MEMORY[0x1E0C80A78](HIDWORD(a3));
    sub_1A594C354();
    ByteBuffer.withUnsafeReadableBytes<A>(_:)();
  }
}

uint64_t sub_1A566EDB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W7>, uint64_t a6@<X8>, uint64_t a7)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  _BYTE v20[16];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v17 = a3;
  v18 = a4;
  v15 = a1;
  v16 = a2;
  v25 = *MEMORY[0x1E0C80C00];
  v19 = a5 & 1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v9 = *(_QWORD *)(a7 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedConformanceWitness();
  sub_1A594CDA4();
  sub_1A594CD08();
  v21 = v15;
  v22 = v16;
  v23 = v17;
  v24 = v18;
  sub_1A566F1EC((uint64_t)v12, (uint64_t)sub_1A566FBC8, (uint64_t)v20, a7, MEMORY[0x1E0DEDCE8], MEMORY[0x1E0DEE9C0] + 8, MEMORY[0x1E0DEDD18], v13);
  ByteBuffer._toEndianness<A>(value:endianness:)((uint64_t)v12, v19);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, a7);
  return __swift_storeEnumTagSinglePayload(a6, 0, 1, a7);
}

uint64_t ByteBuffer.setInteger<A>(_:at:endianness:as:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  OUTLINED_FUNCTION_16_4();
  v22 = v1;
  v23 = v2;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v21 = *MEMORY[0x1E0C80C00];
  v10 = v9 & 1;
  v11 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_11_4();
  v14 = v13 - v12;
  swift_retain();
  ByteBuffer._toEndianness<A>(value:endianness:)(v8, v10);
  swift_release();
  v19 = v0;
  v20 = v6;
  sub_1A566F1EC(v14, (uint64_t)sub_1A566F19C, (uint64_t)&v18, v4, MEMORY[0x1E0DEDCE8], MEMORY[0x1E0DEB418], MEMORY[0x1E0DEDD18], v15);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v14, v4);
  return v17;
}

uint64_t sub_1A566F0BC@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  BOOL v7;
  int v8;

  v3 = *(_QWORD *)(v2 + 32);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v3 + 8);
  v7 = __CFADD__(v6, v5);
  v8 = v6 + v5;
  if (v7)
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(v3 + 8) = v8;
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(a2, result);
  }
  return result;
}

uint64_t sub_1A566F110@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_1A566EDB0(a1, a2, *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), *(_BYTE *)(v3 + 71), a3, *(_QWORD *)(v3 + 16));
}

uint64_t sub_1A566F154()
{
  return swift_dynamicCast();
}

void sub_1A566F19C(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  unsigned int v5;

  ByteBuffer._setBytes(_:at:)(a1, a2, *(_DWORD *)(v3 + 24));
  *a3 = v5;
  OUTLINED_FUNCTION_32_1();
}

uint64_t sub_1A566F1D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1A566F1EC(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1A566F1EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, char *);
  uint64_t result;
  uint64_t v18;

  v11 = *(_QWORD *)(a5 - 8);
  v12 = MEMORY[0x1E0C80A78](a1);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = v16(v12, v12 + *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64), v14);
  if (v8)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a8, v14, a5);
  return result;
}

void FixedWidthInteger.nextPowerOf2()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  OUTLINED_FUNCTION_16_4();
  v1 = v0;
  v40 = v2;
  v4 = *(_QWORD *)(v3 + 8);
  v37 = *(_QWORD *)(v4 + 24);
  v38 = v3;
  v5 = *(_QWORD *)(v37 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  OUTLINED_FUNCTION_28_2();
  v35 = v7;
  MEMORY[0x1E0C80A78](v8);
  v9 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_28_2();
  v34 = v11;
  MEMORY[0x1E0C80A78](v12);
  v36 = (char *)&v32 - v13;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v32 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v32 - v18;
  v20 = OUTLINED_FUNCTION_20_3();
  v39 = v4;
  if ((v20 & 1) == 0)
  {
    v33 = v5;
    v22 = OUTLINED_FUNCTION_20_3();
    v23 = OUTLINED_FUNCTION_19_3();
    if ((v22 & 1) != 0)
    {
      if (v23 <= 64)
      {
        OUTLINED_FUNCTION_7_7();
        OUTLINED_FUNCTION_27_1();
        OUTLINED_FUNCTION_4_8();
        v24 = sub_1A594B28C();
        OUTLINED_FUNCTION_0_12();
        OUTLINED_FUNCTION_12_4((uint64_t)v16, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16));
        if ((v24 & 1) != 0)
        {
          v25 = sub_1A594C4F8();
          OUTLINED_FUNCTION_2_8((uint64_t)v16);
          if (!v25)
            goto LABEL_16;
        }
        else
        {
          OUTLINED_FUNCTION_2_8((uint64_t)v16);
        }
        goto LABEL_18;
      }
    }
    else if (v23 < 64)
    {
      OUTLINED_FUNCTION_12_4((uint64_t)v19, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16));
      v27 = OUTLINED_FUNCTION_17_2();
      OUTLINED_FUNCTION_0_12();
      if (!v27)
        goto LABEL_16;
      goto LABEL_18;
    }
    OUTLINED_FUNCTION_18_3();
    OUTLINED_FUNCTION_9_6();
    v28 = OUTLINED_FUNCTION_8_4();
    OUTLINED_FUNCTION_0_12();
    if ((v28 & 1) == 0)
      goto LABEL_18;
LABEL_16:
    OUTLINED_FUNCTION_7_7();
    OUTLINED_FUNCTION_27_1();
    OUTLINED_FUNCTION_4_8();
LABEL_20:
    OUTLINED_FUNCTION_1_3();
    return;
  }
  if (OUTLINED_FUNCTION_19_3() >= 64)
  {
    OUTLINED_FUNCTION_18_3();
    OUTLINED_FUNCTION_9_6();
    v26 = OUTLINED_FUNCTION_8_4();
    OUTLINED_FUNCTION_0_12();
    if ((v26 & 1) == 0)
      goto LABEL_18;
    goto LABEL_16;
  }
  OUTLINED_FUNCTION_12_4((uint64_t)v19, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16));
  v21 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_0_12();
  if (!v21)
    goto LABEL_16;
LABEL_18:
  OUTLINED_FUNCTION_7_7();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_4_8();
  v33 = sub_1A594C960();
  OUTLINED_FUNCTION_13_3();
  v29 = v34;
  sub_1A594CD08();
  v30 = (uint64_t)v36;
  sub_1A594C9E4();
  OUTLINED_FUNCTION_2_8(v29);
  v31 = sub_1A594C978();
  OUTLINED_FUNCTION_2_8(v30);
  if (!__OFSUB__(v33, v31))
  {
    v41 = v33 - v31;
    sub_1A566F64C();
    sub_1A594C4EC();
    OUTLINED_FUNCTION_2_8((uint64_t)v19);
    goto LABEL_20;
  }
  __break(1u);
}

unint64_t sub_1A566F64C()
{
  unint64_t result;

  result = qword_1EE7A47D8;
  if (!qword_1EE7A47D8)
  {
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEB460], MEMORY[0x1E0DEB418]);
    atomic_store(result, (unint64_t *)&qword_1EE7A47D8);
  }
  return result;
}

void FixedWidthInteger.previousPowerOf2()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[6];

  OUTLINED_FUNCTION_16_4();
  v2 = v1;
  v4 = v3;
  v26[2] = v5;
  v26[4] = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v5 + 8) + 24) + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v7 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v26 - v12;
  v14 = OUTLINED_FUNCTION_21_3();
  v26[3] = v4;
  if ((v14 & 1) != 0)
  {
    if (OUTLINED_FUNCTION_22_3() < 64)
    {
      v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
      v16 = (uint64_t)v13;
      goto LABEL_12;
    }
    goto LABEL_14;
  }
  v17 = OUTLINED_FUNCTION_21_3();
  v26[1] = v0;
  v18 = OUTLINED_FUNCTION_22_3();
  if ((v17 & 1) != 0)
  {
    if (v18 <= 64)
    {
      OUTLINED_FUNCTION_3_6();
      OUTLINED_FUNCTION_14_1();
      OUTLINED_FUNCTION_5_4();
      v19 = sub_1A594B28C();
      OUTLINED_FUNCTION_6_6();
      OUTLINED_FUNCTION_23_2((uint64_t)v10, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16));
      if ((v19 & 1) == 0)
      {
        OUTLINED_FUNCTION_26_0();
        goto LABEL_17;
      }
      v20 = OUTLINED_FUNCTION_25_0();
      OUTLINED_FUNCTION_26_0();
      if (v20)
        goto LABEL_17;
LABEL_15:
      OUTLINED_FUNCTION_3_6();
      OUTLINED_FUNCTION_14_1();
      OUTLINED_FUNCTION_5_4();
LABEL_20:
      OUTLINED_FUNCTION_1_3();
      return;
    }
LABEL_14:
    OUTLINED_FUNCTION_18_3();
    OUTLINED_FUNCTION_10_3();
    v22 = sub_1A594B37C();
    OUTLINED_FUNCTION_6_6();
    if ((v22 & 1) == 0)
      goto LABEL_17;
    goto LABEL_15;
  }
  if (v18 >= 64)
    goto LABEL_14;
  v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v16 = (uint64_t)v13;
LABEL_12:
  OUTLINED_FUNCTION_23_2(v16, v15);
  v21 = OUTLINED_FUNCTION_25_0();
  OUTLINED_FUNCTION_6_6();
  if (!v21)
    goto LABEL_15;
LABEL_17:
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_5_4();
  v23 = sub_1A594C960();
  v24 = v23 - 1;
  if (__OFSUB__(v23, 1))
  {
    __break(1u);
  }
  else
  {
    v25 = sub_1A594C978();
    if (!__OFSUB__(v24, v25))
    {
      v26[5] = v24 - v25;
      sub_1A566F64C();
      sub_1A594C4EC();
      OUTLINED_FUNCTION_6_6();
      goto LABEL_20;
    }
  }
  __break(1u);
}

void sub_1A566F998()
{
  static Endianness.host = 1;
}

char *Endianness.host.unsafeMutableAddressor()
{
  if (qword_1EE7A8F60 != -1)
    swift_once();
  return &static Endianness.host;
}

uint64_t static Endianness.host.getter()
{
  if (qword_1EE7A8F60 != -1)
    swift_once();
  return static Endianness.host;
}

BOOL static Endianness.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t Endianness.hash(into:)()
{
  return sub_1A594CE88();
}

uint64_t Endianness.hashValue.getter()
{
  sub_1A594CE64();
  sub_1A594CE88();
  return sub_1A594CED0();
}

BOOL sub_1A566FAA0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static Endianness.__derived_enum_equals(_:_:)(*a1, *a2);
}

uint64_t sub_1A566FAAC()
{
  return Endianness.hashValue.getter();
}

uint64_t sub_1A566FAB4()
{
  return Endianness.hash(into:)();
}

unint64_t sub_1A566FAC0()
{
  unint64_t result;

  result = qword_1EE7A91B0;
  if (!qword_1EE7A91B0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for Endianness, &type metadata for Endianness);
    atomic_store(result, (unint64_t *)&qword_1EE7A91B0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for Endianness(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A566FB48 + 4 * byte_1A59ACE69[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A566FB7C + 4 * byte_1A59ACE64[v4]))();
}

uint64_t sub_1A566FB7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A566FB84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A566FB8CLL);
  return result;
}

uint64_t sub_1A566FB98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A566FBA0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A566FBA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A566FBAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Endianness()
{
  return &type metadata for Endianness;
}

void *sub_1A566FBC8(void *result)
{
  _QWORD *v1;
  uint64_t v2;
  const void *v3;
  uint64_t v4;

  v2 = v1[2];
  if (v2)
    v3 = (const void *)(v2 + v1[4]);
  else
    v3 = 0;
  if (result && v3)
  {
    if (v2)
      v4 = v2 + v1[5];
    else
      v4 = 0;
    return OUTLINED_FUNCTION_15_4(result, v3, v4);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_12()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t OUTLINED_FUNCTION_2_8(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_3_6()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_4_8()
{
  return sub_1A594CD08();
}

uint64_t OUTLINED_FUNCTION_5_4()
{
  return sub_1A594CD08();
}

uint64_t OUTLINED_FUNCTION_6_6()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v2, v0);
}

uint64_t OUTLINED_FUNCTION_7_7()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_8_4()
{
  return sub_1A594B37C();
}

uint64_t OUTLINED_FUNCTION_9_6()
{
  return sub_1A594C4BC();
}

uint64_t OUTLINED_FUNCTION_10_3()
{
  return sub_1A594C4BC();
}

uint64_t OUTLINED_FUNCTION_12_4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v3, v2);
}

uint64_t OUTLINED_FUNCTION_13_3()
{
  return sub_1A594CDA4();
}

uint64_t OUTLINED_FUNCTION_14_1()
{
  return sub_1A594CDA4();
}

void *OUTLINED_FUNCTION_15_4@<X0>(void *a1@<X0>, const void *a2@<X1>, uint64_t a3@<X8>)
{
  return memmove(a1, a2, a3 - (_QWORD)a2);
}

uint64_t OUTLINED_FUNCTION_17_2()
{
  return sub_1A594C4F8();
}

unint64_t OUTLINED_FUNCTION_18_3()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 88) = 0;
  return sub_1A566F64C();
}

uint64_t OUTLINED_FUNCTION_19_3()
{
  return sub_1A594C504();
}

uint64_t OUTLINED_FUNCTION_20_3()
{
  return sub_1A594C510();
}

uint64_t OUTLINED_FUNCTION_21_3()
{
  return sub_1A594C510();
}

uint64_t OUTLINED_FUNCTION_22_3()
{
  return sub_1A594C504();
}

uint64_t OUTLINED_FUNCTION_23_2@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v3, v2);
}

uint64_t OUTLINED_FUNCTION_25_0()
{
  return sub_1A594C4F8();
}

uint64_t OUTLINED_FUNCTION_26_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t OUTLINED_FUNCTION_27_1()
{
  return sub_1A594CDA4();
}

uint64_t ByteBuffer.readableBytesView.getter@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unsigned int v4;
  BOOL v5;
  unsigned int v6;

  if (HIDWORD(a2) < a2)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v4 = BYTE6(a3) | (WORD2(a3) << 8);
  v5 = a3 >= v4;
  v6 = a3 - v4;
  if (!v5)
    goto LABEL_7;
  if (HIDWORD(a2) <= v6)
  {
    OUTLINED_FUNCTION_22_4(result, a2, a3, a4);
    return swift_retain();
  }
LABEL_8:
  __break(1u);
  return result;
}

void sub_1A566FE08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;

  v4 = a1 - a4;
  if (__OFSUB__(a1, a4))
  {
    __break(1u);
  }
  else
  {
    if ((v4 & 0x8000000000000000) != 0)
    {
LABEL_6:
      OUTLINED_FUNCTION_14_2();
      return;
    }
    if (HIDWORD(a4) >= a4)
    {
      if (v4 < (HIDWORD(a4) - a4))
      {
        OUTLINED_FUNCTION_176();
        OUTLINED_FUNCTION_6_7();
      }
      goto LABEL_6;
    }
  }
  __break(1u);
}

uint64_t sub_1A566FE78(uint64_t a1, char a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v5;
  unsigned int v6;
  int v7;
  uint64_t v11;
  unsigned int v12;

  v5 = a1 - a4;
  if (__OFSUB__(a1, a4))
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v5 < 0)
  {
LABEL_5:
    v6 = 0;
    v7 = 1;
    return v6 | (v7 << 16);
  }
  if (HIDWORD(a4) < a4)
    goto LABEL_12;
  if ((HIDWORD(a4) - a4) - 2 < v5)
    goto LABEL_5;
  if ((unint64_t)v5 > 0x7FFFFFFFFFFFFFFDLL)
LABEL_13:
    __break(1u);
  v11 = a4;
  OUTLINED_FUNCTION_176();
  v7 = 0;
  v6 = *(unsigned __int16 *)(*(_QWORD *)(a3 + 24) + ((a5 >> 24) & 0xFFFF00 | BYTE6(a5)) + v11 + v5);
  v12 = bswap32(v6) >> 16;
  if ((a2 & 1) == 0)
    LOWORD(v6) = v12;
  v6 = (unsigned __int16)v6;
  return v6 | (v7 << 16);
}

uint64_t ByteBufferView._buffer.getter()
{
  return swift_retain();
}

uint64_t ByteBufferView._buffer.setter(uint64_t a1, unint64_t a2, unint64_t a3)
{
  uint64_t v3;
  int v4;
  int v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t result;

  v4 = a3;
  v5 = a2;
  v7 = HIDWORD(a2);
  v8 = HIDWORD(a3);
  v9 = HIWORD(a3);
  result = swift_release();
  *(_QWORD *)v3 = a1;
  *(_DWORD *)(v3 + 8) = v5;
  *(_DWORD *)(v3 + 12) = v7;
  *(_DWORD *)(v3 + 16) = v4;
  *(_WORD *)(v3 + 20) = v8;
  *(_BYTE *)(v3 + 22) = v9;
  return result;
}

double (*ByteBufferView._buffer.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ByteBufferView._range.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t ByteBufferView._range.setter(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = result;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

double (*ByteBufferView._range.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ByteBufferView.init(buffer:range:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  unsigned int v6;
  BOOL v7;
  uint64_t v8;

  v6 = BYTE6(a3) | (WORD2(a3) << 8);
  v7 = a3 >= v6;
  v8 = a3 - v6;
  if (v7)
  {
    if ((a4 & 0x8000000000000000) == 0 && v8 >= a5)
    {
      *(_QWORD *)a6 = result;
      *(_QWORD *)(a6 + 8) = a2;
      *(_DWORD *)(a6 + 16) = a3;
      *(_WORD *)(a6 + 20) = WORD2(a3);
      *(_BYTE *)(a6 + 22) = BYTE6(a3);
      *(_QWORD *)(a6 + 24) = a4;
      *(_QWORD *)(a6 + 32) = a5;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t ByteBufferView.init(_:)@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unsigned int v4;
  BOOL v5;
  unsigned int v6;

  if (HIDWORD(a2) < a2)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v4 = BYTE6(a3) | (WORD2(a3) << 8);
  v5 = a3 >= v4;
  v6 = a3 - v4;
  if (!v5)
    goto LABEL_7;
  if (HIDWORD(a2) <= v6)
    return OUTLINED_FUNCTION_22_4(result, a2, a3, a4);
LABEL_8:
  __break(1u);
  return result;
}

void ByteBufferView.withUnsafeBytes<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v5;
  _QWORD v6[5];

  v5 = *v3;
  v6[2] = a3;
  v6[3] = a1;
  v6[4] = a2;
  ByteBuffer.withVeryUnsafeBytes<A>(_:)((void (*)(_QWORD, _QWORD))sub_1A5672874, (uint64_t)v6, v5);
}

uint64_t sub_1A5670120(uint64_t result, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  if (result)
  {
    v5 = *(_QWORD *)(a5 + 24);
    v6 = *(_QWORD *)(a5 + 32);
    v7 = __OFSUB__(v6, v5);
    v8 = v6 - v5;
    if (!v7)
      return a3(result + v5, result + v5 + v8);
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t ByteBufferView.startIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t ByteBufferView.endIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

Swift::Int __swiftcall ByteBufferView.index(after:)(Swift::Int after)
{
  BOOL v1;
  Swift::Int result;

  v1 = __OFADD__(after, 1);
  result = after + 1;
  if (v1)
    __break(1u);
  return result;
}

void ByteBufferView.subscript.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int16 v6;

  if (*(_QWORD *)(v1 + 24) > a1 || *(_QWORD *)(v1 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_12_5();
  sub_1A566FE08(v3, 0, v4, v5);
  if ((v6 & 0x100) != 0)
LABEL_8:
    __break(1u);
}

void ByteBufferView.subscript.setter(char a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  if (*(_QWORD *)(v2 + 24) > a2)
  {
    __break(1u);
LABEL_5:
    __break(1u);
  }
  if (*(_QWORD *)(v2 + 32) <= a2)
    goto LABEL_5;
  v3 = a1;
  ByteBuffer._setBytes(_:at:)((uint64_t)&v3, (uint64_t)&v4, a2);
}

void ByteBufferView.subscript.modify(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int16 v8;

  *(_QWORD *)a1 = a2;
  *(_QWORD *)(a1 + 8) = v2;
  if (*(_QWORD *)(v2 + 24) > a2 || *(_QWORD *)(v2 + 32) <= a2)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_13_4();
    sub_1A566FE08(v5, 0, v6, v7);
    if ((v8 & 0x100) == 0)
    {
      *(_BYTE *)(a1 + 16) = v8;
      return;
    }
  }
  __break(1u);
}

void sub_1A5670290(uint64_t a1)
{
  ByteBufferView.subscript.setter(*(_BYTE *)(a1 + 16), *(_QWORD *)a1);
  OUTLINED_FUNCTION_1();
}

uint64_t ByteBufferView.subscript.getter@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  unsigned int v5;
  int v6;
  int v7;
  unsigned int v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(v3 + 16);
  v6 = *(unsigned __int16 *)(v3 + 20);
  v7 = *(unsigned __int8 *)(v3 + 22);
  v8 = v7 | (v6 << 8);
  v9 = v5 >= v8;
  v10 = v5 - v8;
  if (v9)
  {
    v11 = result;
    if ((result & 0x8000000000000000) == 0 && v10 >= a2)
    {
      v13 = *(_QWORD *)v3;
      v14 = *(_QWORD *)(v3 + 8);
      result = sub_1A553E5B4(v3);
      *(_QWORD *)a3 = v13;
      *(_QWORD *)(a3 + 8) = v14;
      *(_DWORD *)(a3 + 16) = v5;
      *(_WORD *)(a3 + 20) = v6;
      *(_BYTE *)(a3 + 22) = v7;
      *(_QWORD *)(a3 + 24) = v11;
      *(_QWORD *)(a3 + 32) = a2;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t ByteBufferView.subscript.setter(uint64_t *a1, uint64_t a2, Swift::Int at)
{
  sub_1A56704FC(a2, at, a1);
  return sub_1A553E5DC((uint64_t)a1);
}

void sub_1A5670378(uint64_t a1, Swift::Int a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_QWORD *)(v3 + 24);
  if (v4 > a1)
  {
    __break(1u);
    goto LABEL_19;
  }
  v6 = *(_QWORD *)(v3 + 32);
  if (v6 < a2)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v8 == 1)
  {
    sub_1A566A84C(a3, a1);
    return;
  }
  if (v8 > 1)
  {
    sub_1A566A84C(a3, a1);
    if (!__OFADD__(a1, 1))
    {
      v10 = *(unsigned int *)(v3 + 12);
      if (!__OFSUB__(v10, a2))
      {
        OUTLINED_FUNCTION_15_5(a2, a1 + 1, v10 - a2);
        if (!a2)
        {
          ByteBuffer.moveWriterIndex(to:)(*(unsigned int *)(v3 + 12) - (v8 - 1));
          *(_QWORD *)(v3 + 24) = sub_1A5671968(v8 - 1, v4, v6);
          *(_QWORD *)(v3 + 32) = v11;
          return;
        }
        goto LABEL_28;
      }
      goto LABEL_23;
    }
    goto LABEL_21;
  }
  if (__OFADD__(a1, 1))
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v12 = *(unsigned int *)(v3 + 12);
  if (__OFSUB__(v12, a2))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  OUTLINED_FUNCTION_15_5(a2, a1 + 1, v12 - a2);
  if (a2)
  {
    OUTLINED_FUNCTION_9_7();
    goto LABEL_30;
  }
  sub_1A566A84C(a3, a1);
  v13 = 1 - v8;
  if (__OFSUB__(1, v8))
    goto LABEL_25;
  ByteBuffer.moveWriterIndex(forwardBy:)(1 - v8);
  v14 = v6 + v13;
  if (!__OFADD__(v6, v13))
  {
    if (v14 >= v4)
    {
      *(_QWORD *)(v3 + 24) = v4;
      *(_QWORD *)(v3 + 32) = v14;
      return;
    }
    goto LABEL_27;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  OUTLINED_FUNCTION_20_4();
LABEL_30:
  swift_unexpectedError();
  __break(1u);
}

void sub_1A56704FC(uint64_t a1, Swift::Int at, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Swift::Int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Swift::Int v31;
  uint64_t v32;
  uint64_t v33;

  v4 = *(_QWORD *)(v3 + 24);
  if (v4 > a1)
  {
    __break(1u);
    goto LABEL_23;
  }
  v6 = *(_QWORD *)(v3 + 32);
  if (v6 < at)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v9 = a3[3];
  v8 = a3[4];
  v10 = v8 - v9;
  if (v8 < v9)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (__OFSUB__(v8, v9))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v12 = at - a1;
  if (__OFSUB__(at, a1))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v10 == v12)
  {
    v13 = *a3;
    v14 = *((unsigned __int16 *)a3 + 10);
    v15 = *((unsigned __int8 *)a3 + 22);
    swift_beginAccess();
    v16 = *(_QWORD *)(v13 + 24) + (v15 | (v14 << 8)) + v9;
    ByteBuffer._setBytes(_:at:)(v16, v16 + v10, a1);
    return;
  }
  if (v10 >= v12)
  {
    if (!__OFADD__(a1, v10))
    {
      v25 = *(unsigned int *)(v3 + 12);
      if (!__OFSUB__(v25, at))
      {
        ByteBuffer.copyBytes(at:to:length:)(at, a1 + v10, v25 - at);
        if (!v26)
        {
          v27 = *a3;
          v28 = *((unsigned __int16 *)a3 + 10);
          v29 = *((unsigned __int8 *)a3 + 22);
          swift_beginAccess();
          v30 = *(_QWORD *)(v27 + 24) + (v29 | (v28 << 8)) + v9;
          ByteBuffer._setBytes(_:at:)(v30, v30 + v10, a1);
          v31 = v10 - v12;
          if (!__OFSUB__(v10, v12))
          {
            ByteBuffer.moveWriterIndex(forwardBy:)(v10 - v12);
            v32 = v6 + v31;
            if (!__OFADD__(v6, v31))
            {
              if (v32 >= v4)
              {
                *(_QWORD *)(v3 + 24) = v4;
                *(_QWORD *)(v3 + 32) = v32;
                return;
              }
              goto LABEL_35;
            }
LABEL_34:
            __break(1u);
LABEL_35:
            __break(1u);
            goto LABEL_36;
          }
          goto LABEL_32;
        }
        goto LABEL_36;
      }
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    goto LABEL_28;
  }
  v17 = *a3;
  v33 = *((unsigned __int16 *)a3 + 10);
  v18 = *((unsigned __int8 *)a3 + 22);
  swift_beginAccess();
  v19 = *(_QWORD *)(v17 + 24) + (v18 | (v33 << 8)) + v9;
  ByteBuffer._setBytes(_:at:)(v19, v19 + v10, a1);
  if (__OFADD__(a1, v10))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v20 = *(unsigned int *)(v3 + 12);
  if (__OFSUB__(v20, at))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  ByteBuffer.copyBytes(at:to:length:)(at, a1 + v10, v20 - at);
  if (!v21)
  {
    v22 = v12 - v10;
    if (!__OFSUB__(v12, v10))
    {
      v23 = *(unsigned int *)(v3 + 12);
      if (!__OFSUB__(v23, v22))
      {
        ByteBuffer.moveWriterIndex(to:)(v23 - v22);
        *(_QWORD *)(v3 + 24) = sub_1A5671968(v12 - v10, v4, v6);
        *(_QWORD *)(v3 + 32) = v24;
        return;
      }
      goto LABEL_33;
    }
    goto LABEL_31;
  }
LABEL_36:
  swift_unexpectedError();
  __break(1u);
}

void sub_1A5670754(Swift::Int to, Swift::Int at)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *(_QWORD *)(v2 + 24);
  if (v3 > to)
  {
    __break(1u);
    goto LABEL_17;
  }
  v5 = *(_QWORD *)(v2 + 32);
  if (v5 < at)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v7 = at - to;
  if (__OFSUB__(at, to))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!v7)
  {
    sub_1A566ABB4(to);
    return;
  }
  if (v7 > 0)
  {
    sub_1A566ABB4(to);
    v8 = *(unsigned int *)(v2 + 12);
    if (!__OFSUB__(v8, at))
    {
      ByteBuffer.copyBytes(at:to:length:)(at, to, v8 - at);
      if (!v9)
      {
        ByteBuffer.moveWriterIndex(to:)(*(unsigned int *)(v2 + 12) - v7);
        *(_QWORD *)(v2 + 24) = sub_1A5671968(v7, v3, v5);
        *(_QWORD *)(v2 + 32) = v10;
        return;
      }
      goto LABEL_24;
    }
    goto LABEL_19;
  }
  v11 = *(unsigned int *)(v2 + 12);
  if (__OFSUB__(v11, at))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  ByteBuffer.copyBytes(at:to:length:)(at, to, v11 - at);
  if (!v12)
  {
    sub_1A566ABB4(to);
    if (!__OFSUB__(0, v7))
    {
      ByteBuffer.moveWriterIndex(forwardBy:)(-v7);
      v13 = v5 - v7;
      if (!__OFADD__(v5, -v7))
      {
        if (v13 >= v3)
        {
          *(_QWORD *)(v2 + 24) = v3;
          *(_QWORD *)(v2 + 32) = v13;
          return;
        }
        goto LABEL_23;
      }
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
LABEL_24:
  swift_unexpectedError();
  __break(1u);
}

void ByteBufferView.replaceSubrange<A>(_:with:)(uint64_t a1, Swift::Int a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v5 = *(_QWORD *)(v4 + 24);
  if (v5 > a1)
  {
    __break(1u);
    goto LABEL_21;
  }
  v7 = *(_QWORD *)(v4 + 32);
  if (v7 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v11 = sub_1A594BD78();
  v12 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v11 == v12)
  {
    ByteBuffer.setBytes<A>(_:at:)(a3, a1, a4);
    return;
  }
  if (OUTLINED_FUNCTION_1_4() >= v12)
  {
    v19 = OUTLINED_FUNCTION_1_4();
    if (!__OFADD__(a1, v19))
    {
      v20 = *(unsigned int *)(v4 + 12);
      if (!__OFSUB__(v20, a2))
      {
        OUTLINED_FUNCTION_15_5(a2, a1 + v19, v20 - a2);
        if (a2)
        {
          OUTLINED_FUNCTION_9_7();
          goto LABEL_34;
        }
        OUTLINED_FUNCTION_10_4();
        v21 = OUTLINED_FUNCTION_1_4();
        v22 = v21 - v12;
        if (!__OFSUB__(v21, v12))
        {
          ByteBuffer.moveWriterIndex(forwardBy:)(v21 - v12);
          v23 = v7 + v22;
          if (!__OFADD__(v7, v22))
          {
            if (v23 >= v5)
            {
              *(_QWORD *)(v4 + 24) = v5;
              *(_QWORD *)(v4 + 32) = v23;
              return;
            }
            goto LABEL_31;
          }
LABEL_30:
          __break(1u);
LABEL_31:
          __break(1u);
          goto LABEL_32;
        }
        goto LABEL_28;
      }
      goto LABEL_26;
    }
    goto LABEL_24;
  }
  OUTLINED_FUNCTION_10_4();
  v13 = OUTLINED_FUNCTION_1_4();
  if (__OFADD__(a1, v13))
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v14 = *(unsigned int *)(v4 + 12);
  if (__OFSUB__(v14, a2))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  OUTLINED_FUNCTION_15_5(a2, a1 + v13, v14 - a2);
  if (!a2)
  {
    v15 = OUTLINED_FUNCTION_1_4();
    v16 = v12 - v15;
    if (!__OFSUB__(v12, v15))
    {
      v17 = *(unsigned int *)(v4 + 12);
      if (!__OFSUB__(v17, v16))
      {
        ByteBuffer.moveWriterIndex(to:)(v17 - v16);
        *(_QWORD *)(v4 + 24) = sub_1A5671968(v16, v5, v7);
        *(_QWORD *)(v4 + 32) = v18;
        return;
      }
      goto LABEL_29;
    }
    goto LABEL_27;
  }
LABEL_32:
  OUTLINED_FUNCTION_20_4();
LABEL_34:
  swift_unexpectedError();
  __break(1u);
}

void (*ByteBufferView.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t *a1, char a2)
{
  uint64_t v3;
  _QWORD *v7;
  __int128 v8;

  v7 = malloc(0xB8uLL);
  *a1 = v7;
  v7[21] = a3;
  v7[22] = v3;
  v7[20] = a2;
  v8 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)v7 = *(_OWORD *)v3;
  *((_OWORD *)v7 + 1) = v8;
  v7[4] = *(_QWORD *)(v3 + 32);
  ByteBufferView.subscript.getter(a2, a3, (uint64_t)(v7 + 15));
  return sub_1A5670B1C;
}

void sub_1A5670B1C(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  v3 = *a1;
  v4 = *a1 + 120;
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_4_9();
    OUTLINED_FUNCTION_17_3();
    sub_1A553E5DC(v2);
    swift_release();
  }
  else
  {
    v5 = *(_OWORD *)(*a1 + 136);
    *(_OWORD *)(v3 + 80) = *(_OWORD *)v4;
    *(_OWORD *)(v3 + 96) = v5;
    *(_QWORD *)(v3 + 112) = *(_QWORD *)(v4 + 32);
    OUTLINED_FUNCTION_17_3();
    sub_1A553E5DC(v3 + 80);
  }
  OUTLINED_FUNCTION_7_8((void *)v3);
}

uint64_t sub_1A5670B8C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  v4 = *(unsigned __int16 *)(a1 + 20);
  v5 = *(unsigned __int8 *)(a1 + 22);
  v6 = (_QWORD *)(*(_QWORD *)a1 + 24);
  result = swift_beginAccess();
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  if (__OFSUB__(v9, v8))
  {
    __break(1u);
  }
  else
  {
    sub_1A5788800(*v6 + (v5 | (v4 << 8)) + v8, v9 - v8, a2);
    return 0;
  }
  return result;
}

void ByteBufferView.withContiguousStorageIfAvailable<A>(_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  _QWORD v7[6];

  v7[2] = a3;
  v7[3] = a1;
  v7[4] = a2;
  ByteBufferView.withUnsafeBytes<A>(_:)((uint64_t)sub_1A5672890, (uint64_t)v7, a3);
  if (!v4)
    __swift_storeEnumTagSinglePayload(a4, 0, 1, a3);
}

Swift::Int_optional_optional __swiftcall ByteBufferView._customIndexOfEquatableElement(_:)(Swift::UInt8 a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::Int v6;
  Swift::Bool v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int_optional_optional result;

  v3 = *v1;
  v4 = *((unsigned __int16 *)v1 + 10);
  v5 = *((unsigned __int8 *)v1 + 22);
  v6 = OUTLINED_FUNCTION_176();
  v8 = v1[3];
  v9 = v1[4];
  v10 = __OFSUB__(v9, v8);
  v11 = v9 - v8;
  if (v10)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
  }
  else if (v11)
  {
    v12 = 0;
    while (*(unsigned __int8 *)(*(_QWORD *)(v3 + 24) + (v5 | (v4 << 8)) + v8 + v12) != a1)
    {
      if ((v11 & ~(v11 >> 63)) == v12)
      {
        __break(1u);
        goto LABEL_12;
      }
      if (v11 == ++v12)
        goto LABEL_7;
    }
    v6 = v12 + v8;
    if (__OFADD__(v12, v8))
      goto LABEL_13;
    v7 = 0;
  }
  else
  {
LABEL_7:
    v6 = 0;
    v7 = 1;
  }
  result.value.value = v6;
  result.value.is_nil = v7;
  return result;
}

Swift::Int_optional_optional __swiftcall ByteBufferView._customLastIndexOfEquatableElement(_:)(Swift::UInt8 a1)
{
  uint64_t v1;
  Swift::Int v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  _QWORD v9[6];
  Swift::UInt8 v10;
  Swift::Int_optional_optional result;

  v3 = OUTLINED_FUNCTION_176();
  v5 = *(_QWORD *)(v1 + 24);
  if (__OFSUB__(*(_QWORD *)(v1 + 32), v5))
  {
    __break(1u);
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v10 = a1;
  MEMORY[0x1E0C80A78](v3);
  v9[2] = &v10;
  v3 = sub_1A56728CC((uint64_t)sub_1A5672C74, (uint64_t)v9, v6, v7);
  if ((v4 & 1) == 0)
  {
    v8 = __OFADD__(v3, v5);
    v3 += v5;
    if (v8)
      goto LABEL_6;
  }
  v4 &= 1u;
LABEL_7:
  result.value.value = v3;
  result.value.is_nil = v4;
  return result;
}

uint64_t sub_1A5670E10(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v8;

  v3 = *(_QWORD *)(v2 + 24);
  v4 = *(_QWORD *)(v2 + 32);
  if (v4 < a2 || v3 > a2 || v3 > result || v4 < result)
  {
    __break(1u);
    goto LABEL_14;
  }
  v8 = __OFSUB__(a2, result);
  result = a2 - result;
  if (v8)
LABEL_14:
    __break(1u);
  return result;
}

unint64_t sub_1A5670E3C(unint64_t result, unint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;

  if (BYTE4(a4))
  {
    if (BYTE4(a4) == 1)
      v4 = *(_QWORD *)(a3 + 16);
    else
      v4 = 0;
  }
  else
  {
    v4 = 1;
  }
  if (v4 < result)
  {
    __break(1u);
  }
  else
  {
    if (BYTE4(a4))
    {
      if (BYTE4(a4) == 1)
        v5 = *(_QWORD *)(a3 + 16);
      else
        v5 = 0;
    }
    else
    {
      v5 = 1;
    }
    if (v5 >= a2)
      return a2 - result;
  }
  __break(1u);
  return result;
}

void sub_1A5670EA8(uint64_t *a1@<X8>)
{
  uint64_t v2;

  OUTLINED_FUNCTION_0_13();
  *a1 = sub_1A5670ED4(v2);
  OUTLINED_FUNCTION_3_7();
}

uint64_t sub_1A5670ED4(uint64_t a1)
{
  uint64_t v1;
  BOOL v2;
  uint64_t result;

  v2 = __OFSUB__(a1, 1);
  result = a1 - 1;
  if (v2)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return result;
  }
  if (result < *(_QWORD *)(v1 + 24) || result >= *(_QWORD *)(v1 + 32))
    goto LABEL_9;
  return result;
}

unint64_t sub_1A5670EF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v3;
  unint64_t result;
  unint64_t v5;

  v3 = __OFSUB__(a1, 1);
  result = a1 - 1;
  if (v3)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (BYTE4(a3))
  {
    if (BYTE4(a3) != 1)
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v5 = *(_QWORD *)(a2 + 16);
  }
  else
  {
    v5 = 1;
  }
  if (result >= v5)
    goto LABEL_9;
  return result;
}

uint64_t *sub_1A5670F30(uint64_t *result)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *result - 1;
  if (__OFSUB__(*result, 1))
  {
    __break(1u);
  }
  else if (v2 < *(_QWORD *)(v1 + 32) && v2 >= *(_QWORD *)(v1 + 24))
  {
    *result = v2;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5670F5C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = sub_1A5699F6C(*a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A5670FA0(uint64_t *a1, uint64_t *a2)
{
  return sub_1A5670E10(*a1, *a2);
}

void sub_1A5670FE0(uint64_t *a1@<X8>)
{
  *a1 = ByteBufferView.startIndex.getter();
  OUTLINED_FUNCTION_1();
}

void sub_1A5671000(uint64_t *a1@<X8>)
{
  *a1 = ByteBufferView.endIndex.getter();
  OUTLINED_FUNCTION_1();
}

double (*sub_1A5671020(_BYTE *a1, uint64_t *a2))(_QWORD)
{
  char v3;

  ByteBufferView.subscript.getter(*a2);
  *a1 = v3;
  return nullsub_1;
}

double sub_1A5671054(uint64_t *a1)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  double result;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  v3 = *a1;
  v2 = a1[1];
  v4 = v1[1];
  v18 = *v1;
  v19 = v4;
  v20 = *((_QWORD *)v1 + 4);
  v5 = ByteBufferView.subscript.getter(v3, v2, (uint64_t)&v16);
  *(_QWORD *)&result = OUTLINED_FUNCTION_16_5(v5, v6, v7, v8, v9, v10, v11, v12, v15, v13, v16, v17).n128_u64[0];
  return result;
}

uint64_t sub_1A56710A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1A56710E0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A56710E0()
{
  uint64_t v0;
  uint64_t result;

  result = *(_QWORD *)(v0 + 24);
  if (*(_QWORD *)(v0 + 32) < result)
    __break(1u);
  return result;
}

BOOL sub_1A56710F4()
{
  OUTLINED_FUNCTION_0_13();
  return sub_1A5671120();
}

BOOL sub_1A5671120()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24) == *(_QWORD *)(v0 + 32);
}

void sub_1A5671130()
{
  OUTLINED_FUNCTION_0_13();
  sub_1A5668C18();
  OUTLINED_FUNCTION_3_7();
}

void sub_1A5671150(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1A5671168(a1, (uint64_t (*)(_QWORD))ByteBufferView._customIndexOfEquatableElement(_:), a2);
}

void sub_1A567115C(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1A5671168(a1, (uint64_t (*)(_QWORD))ByteBufferView._customLastIndexOfEquatableElement(_:), a2);
}

void sub_1A5671168(unsigned __int8 *a1@<X0>, uint64_t (*a2)(_QWORD)@<X3>, uint64_t a3@<X8>)
{
  char v4;
  char v5;

  *(_QWORD *)a3 = a2(*a1);
  *(_BYTE *)(a3 + 8) = v4;
  *(_BYTE *)(a3 + 9) = v5 & 1;
  OUTLINED_FUNCTION_1();
}

void sub_1A5671198(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  OUTLINED_FUNCTION_0_13();
  *(_QWORD *)a1 = sub_1A5699F90(v2, v3, v4);
  *(_BYTE *)(a1 + 8) = v5 & 1;
  OUTLINED_FUNCTION_3_7();
}

void sub_1A56711D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_5_5();
  sub_1A569A114(v0, v1, v2);
  OUTLINED_FUNCTION_3_7();
}

void sub_1A56711F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_5_5();
  sub_1A5671210(v0, v1, v2);
  OUTLINED_FUNCTION_3_7();
}

uint64_t sub_1A5671210(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result < a2 || a3 < result)
    __break(1u);
  return result;
}

void sub_1A5671224(uint64_t a1, uint64_t a2, _BOOL8 a3)
{
  if (static SectionSpecifier.Part.< infix(_:_:)(a1, a2))
  {
    __break(1u);
  }
  else if (!static SectionSpecifier.Part.< infix(_:_:)(a3, a1))
  {
    OUTLINED_FUNCTION_1();
    return;
  }
  __break(1u);
}

uint64_t sub_1A5671260(uint64_t *a1, uint64_t *a2)
{
  return sub_1A569A168(*a1, a1[1], *a2, a2[1]);
}

void sub_1A56712A8(Swift::Int *a1@<X0>, Swift::Int *a2@<X8>)
{
  *a2 = ByteBufferView.index(after:)(*a1);
  OUTLINED_FUNCTION_1();
}

_QWORD *sub_1A56712CC(_QWORD *result)
{
  if (__OFADD__(*result, 1))
    __break(1u);
  else
    ++*result;
  return result;
}

__n128 sub_1A56712E4@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  __int16 v3;
  char v4;
  __n128 result;

  v2 = *(_DWORD *)(v1 + 16);
  v3 = *(_WORD *)(v1 + 20);
  v4 = *(_BYTE *)(v1 + 22);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(v1 + 8);
  *(_DWORD *)(a1 + 16) = v2;
  *(_WORD *)(a1 + 20) = v3;
  *(_BYTE *)(a1 + 22) = v4;
  result = *(__n128 *)(v1 + 24);
  *(__n128 *)(a1 + 24) = result;
  *(_QWORD *)(a1 + 40) = result.n128_u64[0];
  return result;
}

uint64_t sub_1A567131C()
{
  return sub_1A5668C18();
}

void sub_1A5671354()
{
  OUTLINED_FUNCTION_0_13();
  sub_1A56BC178();
  OUTLINED_FUNCTION_3_7();
}

void sub_1A5671374()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_0_13();
  sub_1A569A1C0(v0, v1, v2);
  OUTLINED_FUNCTION_3_7();
}

void sub_1A5671394(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  ByteBufferView.withContiguousStorageIfAvailable<A>(_:)(a1, a2, a3, a4);
}

void sub_1A56713CC(char *a1, uint64_t *a2)
{
  ByteBufferView.subscript.setter(*a1, *a2);
}

void (*sub_1A56713D8(_QWORD *a1, uint64_t *a2))(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  __int128 v7;
  char v8;

  v5 = malloc(0x40uLL);
  *a1 = v5;
  v6 = *a2;
  v5[5] = v2;
  v5[6] = v6;
  v7 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)v5 = *(_OWORD *)v2;
  *((_OWORD *)v5 + 1) = v7;
  v5[4] = *(_QWORD *)(v2 + 32);
  ByteBufferView.subscript.getter(v6);
  *((_BYTE *)v5 + 56) = v8;
  return sub_1A5671440;
}

void sub_1A5671440(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  ByteBufferView.subscript.setter(*(_BYTE *)(*(_QWORD *)a1 + 56), *(_QWORD *)(*(_QWORD *)a1 + 48));
  free(v1);
}

uint64_t sub_1A567146C(uint64_t a1, uint64_t *a2)
{
  __int128 v2;
  _OWORD v4[2];
  uint64_t v5;

  v2 = *(_OWORD *)(a1 + 16);
  v4[0] = *(_OWORD *)a1;
  v4[1] = v2;
  v5 = *(_QWORD *)(a1 + 32);
  return ByteBufferView.subscript.setter((uint64_t *)v4, *a2, a2[1]);
}

void (*sub_1A56714A4(_QWORD *a1, uint64_t *a2))(uint64_t *a1, char a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  v5 = malloc(0xB8uLL);
  *a1 = v5;
  v6 = *a2;
  v7 = a2[1];
  v5[20] = v2;
  v5[21] = v6;
  v5[22] = v7;
  v8 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)v5 = *(_OWORD *)v2;
  *((_OWORD *)v5 + 1) = v8;
  v5[4] = *(_QWORD *)(v2 + 32);
  ByteBufferView.subscript.getter(v6, v7, (uint64_t)(v5 + 15));
  return sub_1A5671514;
}

void sub_1A5671514(uint64_t *a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  v3 = *a1;
  v4 = *a1 + 120;
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_4_9();
    OUTLINED_FUNCTION_21_4(v2);
    swift_release();
  }
  else
  {
    v5 = *(_OWORD *)(*a1 + 136);
    *(_OWORD *)(v3 + 80) = *(_OWORD *)v4;
    *(_OWORD *)(v3 + 96) = v5;
    *(_QWORD *)(v3 + 112) = *(_QWORD *)(v4 + 32);
    OUTLINED_FUNCTION_21_4((uint64_t *)(v3 + 80));
  }
  OUTLINED_FUNCTION_7_8((void *)v3);
}

void sub_1A5671578(uint64_t (*a1)(char *)@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  sub_1A56715A0(a1);
  if (!v2)
    *a2 = v4;
}

void sub_1A56715A0(uint64_t (*a1)(char *))
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t v17;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v25;

  v4 = v1[3];
  v3 = v1[4];
  if (v4 < v3)
  {
    v5 = v1[4];
    v22 = v1[3];
    v23 = v5;
    v20 = v1;
    while (1)
    {
      if (v4 >= v3)
      {
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        return;
      }
      v6 = *((unsigned int *)v1 + 2);
      v7 = v4 - v6;
      if (__OFSUB__(v4, v6))
        goto LABEL_37;
      if ((v7 & 0x8000000000000000) != 0)
        goto LABEL_38;
      v8 = *((_DWORD *)v1 + 3);
      v9 = v8 - v6;
      if (v8 < v6)
        goto LABEL_39;
      if (v7 >= v9)
        goto LABEL_40;
      v10 = *v1;
      v21 = *((unsigned __int16 *)v1 + 10);
      v11 = *((unsigned __int8 *)v1 + 22);
      v12 = (_QWORD *)(v10 + 24);
      swift_beginAccess();
      v13 = *(_QWORD *)(v10 + 24);
      v14 = v11 | (v21 << 8);
      v25 = *(_BYTE *)(v13 + v14 + v4);
      v15 = a1(&v25);
      if (v2)
        return;
      if ((v15 & 1) != 0)
        break;
      v1 = v20;
LABEL_29:
      v3 = v23;
      if (++v4 >= v5)
        return;
    }
    if (v5 <= v22 || v5 > v23)
      goto LABEL_41;
    --v5;
    while (v4 < v5)
    {
      v17 = v5 - v6;
      if (__OFSUB__(v5, v6))
      {
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      if (v17 >= v9)
        goto LABEL_32;
      if (v17 == 0x7FFFFFFFFFFFFFFFLL)
        goto LABEL_33;
      v25 = *(_BYTE *)(*v12 + v14 + v5);
      if ((a1(&v25) & 1) == 0)
      {
        v1 = v20;
        sub_1A5671794(v4, v5);
        goto LABEL_29;
      }
      if (__OFSUB__(v5--, 1))
        goto LABEL_34;
      if (v5 < v22 || v5 >= v23)
        goto LABEL_35;
    }
  }
}

void sub_1A5671788(uint64_t *a1, uint64_t *a2)
{
  sub_1A5671794(*a1, *a2);
}

void sub_1A5671794(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  __int16 v10;
  char v12;
  __int16 v13;

  if (a1 != a2)
  {
    v4 = v2[3];
    v5 = v2[4];
    if (v4 > a1 || v5 <= a1)
    {
      __break(1u);
    }
    else
    {
      v8 = *v2;
      v9 = v2[1];
      sub_1A566FE08(a1, 0, *v2, v9);
      if ((v10 & 0x100) != 0)
      {
LABEL_15:
        __break(1u);
LABEL_16:
        __break(1u);
        return;
      }
      if (v4 <= a2 && v5 > a2)
      {
        v12 = v10;
        sub_1A566FE08(a2, 0, v8, v9);
        if ((v13 & 0x100) == 0)
        {
          ByteBufferView.subscript.setter(v13, a1);
          ByteBufferView.subscript.setter(v12, a2);
          return;
        }
        goto LABEL_16;
      }
    }
    __break(1u);
    goto LABEL_15;
  }
}

uint64_t sub_1A5671888()
{
  return sub_1A594B2D4();
}

uint64_t sub_1A56718A8()
{
  return sub_1A594B2C8();
}

uint64_t ByteBufferView.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  __int16 v5;
  char v6;
  unsigned int v7;
  BOOL v8;
  unsigned int v9;
  uint64_t result;

  if (qword_1EE796BD0 != -1)
    result = swift_once();
  v2 = qword_1EE7F9218;
  v3 = HIDWORD(qword_1EE7F9218);
  if (HIDWORD(qword_1EE7F9218) < qword_1EE7F9218)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v4 = dword_1EE7F9220;
  v5 = word_1EE7F9224;
  v6 = byte_1EE7F9226;
  v7 = byte_1EE7F9226 | ((unsigned __int16)word_1EE7F9224 << 8);
  v8 = dword_1EE7F9220 >= v7;
  v9 = dword_1EE7F9220 - v7;
  if (!v8)
    goto LABEL_9;
  if (v9 >= HIDWORD(qword_1EE7F9218))
  {
    *(_QWORD *)a1 = static ByteBufferAllocator.zeroCapacityWithDefaultAllocator;
    *(_DWORD *)(a1 + 8) = v2;
    *(_DWORD *)(a1 + 12) = v3;
    *(_DWORD *)(a1 + 16) = v4;
    *(_WORD *)(a1 + 20) = v5;
    *(_BYTE *)(a1 + 22) = v6;
    *(_QWORD *)(a1 + 24) = v2;
    *(_QWORD *)(a1 + 32) = v3;
    return swift_retain();
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_1A5671968(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  v3 = a2 - a3;
  if (__OFSUB__(a2, a3))
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v4 = -result;
  if (v3 <= 0 && v3 > v4)
    return a2;
  v6 = a3 - result;
  if (__OFADD__(a3, v4))
    goto LABEL_17;
  if (v6 >= a2 && v6 <= a3)
    return a2;
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1A56719B8(uint64_t result, uint64_t a2)
{
  unint64_t v3;
  char v4;
  unint64_t v5;

  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v3 = *(_QWORD *)(a2 + 16);
  result = sub_1A569EA78(v3, -result, 0);
  if ((v4 & 1) != 0)
    v5 = 0;
  else
    v5 = result;
  if ((v5 & 0x8000000000000000) != 0)
    goto LABEL_9;
  if (v3 >= v5)
    return a2;
LABEL_10:
  __break(1u);
  return result;
}

void sub_1A5671A24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;

  v0 = ByteBufferView.init()((uint64_t)&v10);
  OUTLINED_FUNCTION_16_5(v0, v1, v2, v3, v4, v5, v6, v7, v9, v8, v10, v11);
  OUTLINED_FUNCTION_3_7();
}

uint64_t sub_1A5671A4C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  ByteBufferView.replaceSubrange<A>(_:with:)(*a1, a1[1], a2, a3);
  return (*(uint64_t (**)(uint64_t *, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a2, a3);
}

void sub_1A5671AA0(char *a1@<X0>, uint64_t a2@<X1>, Swift::Int a3@<X8>)
{
  sub_1A5671AA8(*a1, a2, a3);
}

void sub_1A5671AA8(char a1@<W0>, uint64_t a2@<X1>, Swift::Int a3@<X8>)
{
  Swift::Int v5;
  Swift::Int v6;
  int v7;
  unsigned int v8;
  __int16 v9;
  char v10;
  Swift::Int v11;
  uint64_t v12;
  unsigned int v13;
  BOOL v14;
  unsigned int v15;
  Swift::Int v16;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  Swift::Int v22;
  Swift::Int v23;

  if (qword_1EE796BD0 != -1)
    goto LABEL_25;
  while (1)
  {
    ByteBufferView.init(_:)(static ByteBufferAllocator.zeroCapacityWithDefaultAllocator, qword_1EE7F9218, dword_1EE7F9220 | ((unint64_t)(unsigned __int16)word_1EE7F9224 << 32) | ((unint64_t)byte_1EE7F9226 << 48), (uint64_t)&v20);
    v5 = v22;
    v6 = v23;
    v8 = HIDWORD(v20);
    v7 = v21;
    v9 = WORD2(v21);
    v10 = BYTE6(v21);
    v18 = v20;
    v19 = v21;
    if (!a2)
      break;
    if (a2 < 0)
    {
      __break(1u);
LABEL_27:
      swift_unexpectedError();
      __break(1u);
      return;
    }
    v16 = a3;
    swift_retain();
    v11 = v6;
    while (v6 >= v5)
    {
      if (v11 == 0x7FFFFFFFFFFFFFFFLL)
        goto LABEL_19;
      if (__OFSUB__(v8, v11))
        goto LABEL_20;
      a3 = v11 + 1;
      ByteBuffer.copyBytes(at:to:length:)(v11, v11 + 1, v8 - v11);
      if (v12)
        goto LABEL_27;
      sub_1A566A84C(a1, v11);
      v8 = HIDWORD(v18) + 1;
      if (HIDWORD(v18) == -1)
        goto LABEL_21;
      v7 = v19;
      v9 = WORD2(v19);
      v10 = BYTE6(v19);
      v13 = BYTE6(v19) | (WORD2(v19) << 8);
      v14 = v19 >= v13;
      v15 = v19 - v13;
      if (!v14)
        goto LABEL_22;
      if (v15 < v8)
        goto LABEL_23;
      ++HIDWORD(v18);
      if (a3 < v5)
        goto LABEL_24;
      ++v11;
      if (!--a2)
      {
        v6 = a3;
        a3 = v16;
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    swift_once();
  }
  swift_retain();
LABEL_17:
  *(_QWORD *)a3 = v18;
  *(_DWORD *)(a3 + 8) = DWORD2(v18);
  *(_DWORD *)(a3 + 12) = v8;
  *(_DWORD *)(a3 + 16) = v7;
  *(_WORD *)(a3 + 20) = v9;
  *(_BYTE *)(a3 + 22) = v10;
  *(_QWORD *)(a3 + 24) = v5;
  *(_QWORD *)(a3 + 32) = v6;
}

uint64_t sub_1A5671C8C()
{
  return sub_1A594BF88();
}

void sub_1A5671CA4(char *a1)
{
  sub_1A5671CAC(*a1);
}

void sub_1A5671CAC(char a1)
{
  uint64_t v1;

  sub_1A5670378(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_1A5671CBC()
{
  return sub_1A594BF34();
}

void sub_1A5671CD4(char *a1, uint64_t *a2)
{
  sub_1A5671CE0(*a1, *a2);
}

void sub_1A5671CE0(char a1, uint64_t a2)
{
  sub_1A5670378(a2, a2, a1);
}

uint64_t sub_1A5671CEC()
{
  return sub_1A594BF4C();
}

void sub_1A5671D04(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  char v3;

  sub_1A5671D2C(*a1);
  *a2 = v3;
}

void sub_1A5671D2C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  __int16 v6;

  v2 = v1[3];
  v3 = v1[4];
  if (v2 == v3)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v2 > a1 || v3 <= a1)
    goto LABEL_9;
  sub_1A566FE08(a1, 0, *v1, v1[1]);
  if ((v6 & 0x100) == 0)
  {
    sub_1A5670754(a1, a1 + 1);
    return;
  }
LABEL_10:
  __break(1u);
}

uint64_t sub_1A5671DB0(Swift::Int *a1)
{
  return sub_1A5671E2C(*a1, a1[1]);
}

void sub_1A5671DBC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  char v3;
  uint64_t v4;

  if (*((_BYTE *)v2 + 12))
  {
    if (*((_BYTE *)v2 + 12) != 1)
      return;
    v4 = *v2;
    sub_1A570CE44();
    *v2 = v4;
    *((_DWORD *)v2 + 2) = 0;
    v3 = 1;
  }
  else
  {
    if (a1 == a2)
      return;
    *v2 = 0;
    *((_DWORD *)v2 + 2) = 0;
    v3 = 2;
  }
  *((_BYTE *)v2 + 12) = v3;
}

uint64_t sub_1A5671E30@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A5671E5C();
  *a1 = result;
  a1[1] = BYTE1(result) & 1;
  return result;
}

uint64_t sub_1A5671E5C()
{
  __int128 *v0;
  uint64_t result;
  uint64_t v2;
  unsigned int v4;
  BOOL v5;
  unsigned int v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  v7 = *v0;
  v8 = v0[1];
  v9 = *((_QWORD *)v0 + 4);
  result = sub_1A569A30C();
  if ((result & 0x100) != 0)
    goto LABEL_18;
  v2 = v9 - 1;
  if (__OFSUB__(v9, 1))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v2 < *((uint64_t *)&v8 + 1) || v9 - 1 >= v9)
    goto LABEL_14;
  if ((*((_QWORD *)&v8 + 1) & 0x8000000000000000) != 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v4 = BYTE6(v8) | (WORD2(v8) << 8);
  v5 = v8 >= v4;
  v6 = v8 - v4;
  if (v5)
  {
    if (v2 <= v6)
    {
      *v0 = v7;
      *((_DWORD *)v0 + 4) = v8;
      *((_WORD *)v0 + 10) = WORD2(v8);
      *((_BYTE *)v0 + 22) = BYTE6(v8);
      *((_QWORD *)v0 + 3) = *((_QWORD *)&v8 + 1);
      *((_QWORD *)v0 + 4) = v2;
      return result;
    }
    goto LABEL_17;
  }
LABEL_16:
  __break(1u);
LABEL_17:
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1A5671F1C(uint64_t result)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  unsigned int v6;
  int v7;
  int v8;
  char v9;
  unsigned int v10;
  BOOL v11;
  unsigned int v12;

  if (__OFSUB__(0, result))
  {
    __break(1u);
    goto LABEL_10;
  }
  v2 = v1[3];
  v3 = *v1;
  v4 = *((_DWORD *)v1 + 2);
  v5 = *((_DWORD *)v1 + 3);
  v6 = *((_DWORD *)v1 + 4);
  v7 = *((unsigned __int16 *)v1 + 10);
  v8 = *((unsigned __int8 *)v1 + 22);
  result = sub_1A5699F90(v1[4], -result, v2);
  if ((v9 & 1) == 0)
  {
    if (result >= v2)
    {
      if ((v2 & 0x8000000000000000) == 0)
      {
        v10 = v8 | (v7 << 8);
        v11 = v6 >= v10;
        v12 = v6 - v10;
        if (v11)
        {
          if (result <= v12)
          {
            *v1 = v3;
            *((_DWORD *)v1 + 2) = v4;
            *((_DWORD *)v1 + 3) = v5;
            *((_DWORD *)v1 + 4) = v6;
            *((_WORD *)v1 + 10) = v7;
            *((_BYTE *)v1 + 22) = v8;
            v1[3] = v2;
            v1[4] = result;
            return 1;
          }
          goto LABEL_13;
        }
LABEL_12:
        __break(1u);
LABEL_13:
        __break(1u);
        goto LABEL_14;
      }
LABEL_11:
      __break(1u);
      goto LABEL_12;
    }
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
LABEL_14:
  __break(1u);
  return result;
}

void sub_1A5671FFC(_BYTE *a1@<X8>)
{
  char v2;

  sub_1A5672020();
  *a1 = v2;
}

void sub_1A5672020()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  unsigned int v6;
  int v7;
  int v8;
  __int16 v9;
  uint64_t v10;
  unsigned int v11;
  BOOL v12;
  unsigned int v13;

  v2 = v0[3];
  v1 = v0[4];
  if (v2 == v1)
  {
    __break(1u);
    goto LABEL_11;
  }
  v3 = *v0;
  v4 = *((_DWORD *)v0 + 2);
  v5 = *((_DWORD *)v0 + 3);
  v6 = *((_DWORD *)v0 + 4);
  v7 = *((unsigned __int16 *)v0 + 10);
  v8 = *((unsigned __int8 *)v0 + 22);
  sub_1A56C7F20();
  if ((v9 & 0x100) == 0)
  {
    v10 = v2 + 1;
    if (!__OFADD__(v2, 1))
    {
      if (v1 >= v10)
      {
        if ((v10 & 0x8000000000000000) == 0)
        {
          v11 = v8 | (v7 << 8);
          v12 = v6 >= v11;
          v13 = v6 - v11;
          if (v12)
          {
            if (v1 <= v13)
            {
              *v0 = v3;
              *((_DWORD *)v0 + 2) = v4;
              *((_DWORD *)v0 + 3) = v5;
              *((_DWORD *)v0 + 4) = v6;
              *((_WORD *)v0 + 10) = v7;
              *((_BYTE *)v0 + 22) = v8;
              v0[3] = v10;
              v0[4] = v1;
              return;
            }
            goto LABEL_15;
          }
LABEL_14:
          __break(1u);
LABEL_15:
          __break(1u);
          goto LABEL_16;
        }
LABEL_13:
        __break(1u);
        goto LABEL_14;
      }
LABEL_12:
      __break(1u);
      goto LABEL_13;
    }
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
LABEL_16:
  __break(1u);
}

uint64_t sub_1A5672108(uint64_t result)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  unsigned int v6;
  int v7;
  int v8;
  char v9;
  unsigned int v10;
  BOOL v11;
  unsigned int v12;

  if (!result)
    return result;
  if (result < 0)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v2 = v1[4];
  v3 = *v1;
  v4 = *((_DWORD *)v1 + 2);
  v5 = *((_DWORD *)v1 + 3);
  v6 = *((_DWORD *)v1 + 4);
  v7 = *((unsigned __int16 *)v1 + 10);
  v8 = *((unsigned __int8 *)v1 + 22);
  result = sub_1A5699F90(v1[3], result, v2);
  if ((v9 & 1) != 0)
  {
LABEL_16:
    __break(1u);
    return result;
  }
  if (v2 < result)
    goto LABEL_12;
  if (result < 0)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v10 = v8 | (v7 << 8);
  v11 = v6 >= v10;
  v12 = v6 - v10;
  if (!v11)
    goto LABEL_14;
  if (v2 > v12)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  *v1 = v3;
  *((_DWORD *)v1 + 2) = v4;
  *((_DWORD *)v1 + 3) = v5;
  *((_DWORD *)v1 + 4) = v6;
  *((_WORD *)v1 + 10) = v7;
  *((_BYTE *)v1 + 22) = v8;
  v1[3] = result;
  v1[4] = v2;
  return result;
}

void sub_1A56721EC(char a1)
{
  uint64_t v1;
  Swift::Int v2;
  Swift::Int v3;
  __int128 v4;
  _OWORD v5[2];
  uint64_t v6;

  if ((a1 & 1) != 0)
  {
    v2 = *(_QWORD *)(v1 + 24);
    v3 = *(_QWORD *)(v1 + 32);
    if (v3 >= v2)
    {
      sub_1A5670754(v2, v3);
      return;
    }
    __break(1u);
    goto LABEL_7;
  }
  swift_release();
  if (qword_1EE796BD0 != -1)
LABEL_7:
    swift_once();
  ByteBufferView.init(_:)(static ByteBufferAllocator.zeroCapacityWithDefaultAllocator, qword_1EE7F9218, dword_1EE7F9220 | ((unint64_t)(unsigned __int16)word_1EE7F9224 << 32) | ((unint64_t)byte_1EE7F9226 << 48), (uint64_t)v5);
  v4 = v5[1];
  *(_OWORD *)v1 = v5[0];
  *(_OWORD *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 32) = v6;
  swift_retain();
}

void sub_1A56722A4(uint64_t (*a1)(char *))
{
  sub_1A56722B8(a1);
}

void sub_1A56722B8(uint64_t (*a1)(char *))
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v3;
  Swift::Int v4;

  v3 = sub_1A5672964(a1);
  if (!v2)
  {
    v4 = *(_QWORD *)(v1 + 32);
    if (v4 < v3)
      __break(1u);
    else
      sub_1A5670754(v3, v4);
  }
}

void ByteBuffer.viewBytes(at:length:)(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  BOOL v18;
  unsigned int v19;
  uint64_t v20;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_18_4();
    goto LABEL_12;
  }
  OUTLINED_FUNCTION_18_4();
  if (v16 > v15)
  {
LABEL_12:
    *a4 = v12;
    a4[1] = v13;
    a4[2] = v5;
    a4[3] = v14;
    a4[4] = v4;
    return;
  }
  if ((uint64_t)(HIDWORD(a3) - v9) < a1)
  {
    v12 = 0;
    v13 = 0;
    v5 = 0;
    v14 = 0;
    v4 = 0;
    goto LABEL_12;
  }
  v4 = a1 + v9;
  if (__OFADD__(a1, v9))
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v4 < a1)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v17 = (v11 >> 24) & 0xFFFF00 | BYTE6(v11);
  v18 = v11 >= v17;
  v19 = v11 - v17;
  if (!v18)
    goto LABEL_15;
  if (v4 <= v19)
  {
    v20 = v10;
    v5 = v11 & 0xFFFFFFFFFFFFFFLL;
    swift_retain();
    v12 = v20;
    v13 = a3;
    v14 = a1;
    goto LABEL_12;
  }
LABEL_16:
  __break(1u);
}

uint64_t ByteBuffer.init(_:)(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  if (v3 < result)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (__OFSUB__(v3, result))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  result = ByteBuffer.getSlice(at:length:)(result, v3 - result, *(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned __int16 *)(a1 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 22) << 48));
  if (result)
  {
    v4 = result;
    sub_1A553E5DC(a1);
    return v4;
  }
LABEL_7:
  __break(1u);
  return result;
}

{
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = sub_1A594AE60();
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, double))(v6 + 16))(v5, a1, v3);
  ByteBuffer.init(dispatchData:)((uint64_t)v5);
  v8 = v7;
  sub_1A57A3C28(a1);
  return v8;
}

uint64_t static ByteBufferView.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  result = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = v4 - result;
  if (__OFSUB__(v4, result))
  {
    __break(1u);
    goto LABEL_9;
  }
  v7 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v8 = __OFSUB__(v6, v7);
  v9 = v6 - v7;
  if (v8)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v5 != v9)
    return 0;
  OUTLINED_FUNCTION_19_4();
  result = ByteBuffer.getSlice(at:length:)(v12, v5, v13, v14, v11 | (v10 << 48));
  if (result)
  {
    v17 = result;
    v18 = v15;
    v19 = v16;
    OUTLINED_FUNCTION_12_5();
    result = ByteBuffer.getSlice(at:length:)(v7, v5, v20, v21, v22);
    if (result)
    {
      v25 = static ByteBuffer.== infix(_:_:)(v17, v18, v19 & 0xFFFFFFFFFFFFFFLL, result, v23, v24 & 0xFFFFFFFFFFFFFFLL);
      swift_release();
      swift_release();
      return v25 & 1;
    }
    goto LABEL_11;
  }
LABEL_10:
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t ByteBufferView.hash(into:)()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int v8;
  unint64_t v9;

  result = *(_QWORD *)(v0 + 24);
  if (__OFSUB__(*(_QWORD *)(v0 + 32), result))
  {
    __break(1u);
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_13_4();
  result = ByteBuffer.getSlice(at:length:)(v2, v3, v4, v5, v6);
  if (result)
  {
    v8 = v7;
    v9 = HIDWORD(v7);
    result = OUTLINED_FUNCTION_176();
    if (v9 >= v8)
    {
      sub_1A594CE70();
      return swift_release();
    }
    goto LABEL_6;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t ByteBufferView.hashValue.getter()
{
  sub_1A594CE64();
  ByteBufferView.hash(into:)();
  return sub_1A594CED0();
}

uint64_t sub_1A567262C()
{
  sub_1A594CE64();
  ByteBufferView.hash(into:)();
  return sub_1A594CED0();
}

uint64_t ByteBufferView.init(arrayLiteral:)@<X0>(Swift::Int a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  unsigned int v9;
  __int16 v10;
  char v11;
  Swift::Int v12;
  Swift::Int v13;
  uint64_t v14;
  Swift::Int v15;
  char v16;
  char v17;
  uint64_t v18;
  unsigned int v19;
  BOOL v20;
  unsigned int v21;
  uint64_t result;
  char *v23;
  Swift::Int v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  Swift::Int v29;
  Swift::Int v30;

  if (qword_1EE796BD0 != -1)
LABEL_24:
    swift_once();
  v4 = static ByteBufferAllocator.zeroCapacityWithDefaultAllocator;
  OUTLINED_FUNCTION_19_4();
  ByteBufferView.init(_:)(v4, v7, v6 | (v5 << 48), (uint64_t)&v27);
  v9 = HIDWORD(v27);
  v8 = v28;
  v10 = WORD2(v28);
  v11 = BYTE6(v28);
  v13 = v29;
  v12 = v30;
  v25 = v27;
  v26 = v28;
  v14 = *(_QWORD *)(a1 + 16);
  if (v14)
  {
    v23 = a2;
    a2 = (char *)(a1 + 32);
    swift_retain();
    v24 = v12;
    while (1)
    {
      if (v24 < v13)
      {
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
      if (v12 == 0x7FFFFFFFFFFFFFFFLL)
        goto LABEL_18;
      v15 = v9 - v12;
      if (__OFSUB__(v9, v12))
        goto LABEL_19;
      v17 = *a2++;
      v16 = v17;
      a1 = v12 + 1;
      ByteBuffer.copyBytes(at:to:length:)(v12, v12 + 1, v15);
      if (v18)
        break;
      sub_1A566A84C(v16, v12);
      v9 = HIDWORD(v25) + 1;
      if (HIDWORD(v25) == -1)
        goto LABEL_20;
      v8 = v26;
      v10 = WORD2(v26);
      v11 = BYTE6(v26);
      v19 = BYTE6(v26) | (WORD2(v26) << 8);
      v20 = v26 >= v19;
      v21 = v26 - v19;
      if (!v20)
        goto LABEL_21;
      if (v21 < v9)
        goto LABEL_22;
      ++HIDWORD(v25);
      if (a1 < v13)
        goto LABEL_23;
      ++v12;
      if (!--v14)
      {
        v12 = a1;
        a2 = v23;
        goto LABEL_16;
      }
    }
    OUTLINED_FUNCTION_9_7();
    result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    swift_retain();
LABEL_16:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)a2 = v25;
    *((_DWORD *)a2 + 2) = DWORD2(v25);
    *((_DWORD *)a2 + 3) = v9;
    *((_DWORD *)a2 + 4) = v8;
    *((_WORD *)a2 + 10) = v10;
    a2[22] = v11;
    *((_QWORD *)a2 + 3) = v13;
    *((_QWORD *)a2 + 4) = v12;
  }
  return result;
}

double sub_1A5672834@<D0>(Swift::Int a1@<X0>, uint64_t a2@<X8>)
{
  double result;
  __int128 v4;
  _OWORD v5[2];
  uint64_t v6;

  ByteBufferView.init(arrayLiteral:)(a1, (char *)v5);
  result = *(double *)v5;
  v4 = v5[1];
  *(_OWORD *)a2 = v5[0];
  *(_OWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 32) = v6;
  return result;
}

uint64_t sub_1A5672874(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A5670120(a1, a2, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_1A5672890(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  if (a1)
    v3 = a2 - a1;
  else
    v3 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(a1, v3);
}

BOOL sub_1A56728BC(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_1A56728CC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t (*v7)(char *);
  uint64_t v8;
  char v10;

  if (!a3)
    return 0;
  v6 = a4 - a3;
  if (a4 == a3)
  {
    return 0;
  }
  else
  {
    v7 = (uint64_t (*)(char *))result;
    v8 = a4 - a3;
    while (!__OFSUB__(v8--, 1))
    {
      if (v8 < 0 || v8 >= v6)
        goto LABEL_15;
      v10 = *(_BYTE *)(a3 + v8);
      result = v7(&v10);
      if (v4 || (result & 1) != 0 || !v8)
        return v8;
    }
    __break(1u);
LABEL_15:
    __break(1u);
  }
  return result;
}

uint64_t sub_1A5672964(uint64_t (*a1)(char *))
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v16;
  unint64_t v17;
  unsigned int v18;
  BOOL v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  unint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v31;
  uint64_t v33;
  _QWORD *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  char v40;
  _BYTE v41[24];
  uint64_t v42;

  v42 = *MEMORY[0x1E0C80C00];
  v4 = v1[3];
  v3 = v1[4];
  if (v4 == v3)
    return v4;
  v6 = *((unsigned int *)v1 + 2);
  v5 = *((_DWORD *)v1 + 3);
  v7 = v5 - v6;
  if (v5 < v6)
  {
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
  }
  v8 = *v1;
  v38 = v1;
  v9 = *((unsigned __int8 *)v1 + 22) | ((unint64_t)*((unsigned __int16 *)v1 + 10) << 8);
  v10 = (_QWORD *)(v8 + 24);
  swift_retain();
  swift_beginAccess();
  v37 = v4;
  while (1)
  {
    if (v4 >= v3)
    {
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
    v11 = v4 - v6;
    if (__OFSUB__(v4, v6))
      goto LABEL_43;
    if (v11 < 0)
      goto LABEL_44;
    if (v11 >= v7)
      goto LABEL_45;
    v41[0] = *(_BYTE *)(*v10 + v9 + v4);
    v12 = a1(v41);
    if (v2)
    {
      swift_release();
      return v4;
    }
    if ((v12 & 1) != 0)
      break;
    if (v3 == ++v4)
    {
      swift_release();
      return v3;
    }
  }
  swift_release();
  if (v3 - 1 != v4)
  {
    v13 = v4 + 1;
    v33 = v4 + 1;
    v14 = v38;
    v36 = v3;
    while (v33 >= v37 && v13 < v3)
    {
      v16 = *((unsigned int *)v14 + 2);
      v17 = v13 - v16;
      if (__OFSUB__(v13, v16))
        goto LABEL_47;
      if ((v17 & 0x8000000000000000) != 0)
        goto LABEL_48;
      v18 = *((_DWORD *)v14 + 3);
      v19 = v18 >= v16;
      v20 = v18 - v16;
      if (!v19)
        goto LABEL_49;
      if (v17 >= v20)
        goto LABEL_50;
      v21 = *v14;
      v22 = *((unsigned __int16 *)v14 + 10);
      v23 = *((unsigned __int8 *)v14 + 22);
      v34 = (_QWORD *)(*v14 + 24);
      v35 = v20;
      swift_beginAccess();
      v24 = v23 | (v22 << 8);
      v40 = *(_BYTE *)(*(_QWORD *)(v21 + 24) + v24 + v13);
      v25 = a1(&v40);
      if ((v25 & 1) == 0)
      {
        if (v13 != v4)
        {
          if (v4 < v37 || v4 >= v36)
            goto LABEL_54;
          v27 = v4 - v16;
          if (__OFSUB__(v4, v16))
            goto LABEL_55;
          if ((v27 & 0x8000000000000000) != 0)
            goto LABEL_56;
          if (v27 >= v35)
            goto LABEL_57;
          v28 = *v34 + v24 + v16;
          v29 = *(_BYTE *)(v28 + v27);
          v40 = *(_BYTE *)(v28 + v17);
          ByteBuffer._setBytes(_:at:)((uint64_t)&v40, (uint64_t)v41, v4);
          v40 = v29;
          ByteBuffer._setBytes(_:at:)((uint64_t)&v40, (uint64_t)v41, v13);
        }
        if (__OFADD__(v4++, 1))
          goto LABEL_52;
      }
      v31 = v13 + 1;
      v14 = v38;
      v3 = v36;
      if (__OFADD__(v13, 1))
        goto LABEL_51;
      ++v13;
      if (v31 == v36)
        return v4;
    }
    goto LABEL_46;
  }
  return v4;
}

BOOL sub_1A5672C54(char *a1, char *a2)
{
  return sub_1A56728BC(*a1, *a2);
}

BOOL sub_1A5672C74(char *a1)
{
  uint64_t v1;

  return sub_1A5672C54(a1, *(char **)(v1 + 16));
}

unint64_t sub_1A5672C94()
{
  unint64_t result;

  result = qword_1EE7A91B8;
  if (!qword_1EE7A91B8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ByteBufferView, &type metadata for ByteBufferView);
    atomic_store(result, (unint64_t *)&qword_1EE7A91B8);
  }
  return result;
}

uint64_t sub_1A5672CD0()
{
  return sub_1A5672E44(&qword_1EE7A91C0, MEMORY[0x1E0DEB8B8]);
}

unint64_t sub_1A5672CF4()
{
  unint64_t result;

  result = qword_1EE7A40A8;
  if (!qword_1EE7A40A8)
  {
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEB440], MEMORY[0x1E0DEB418]);
    atomic_store(result, (unint64_t *)&qword_1EE7A40A8);
  }
  return result;
}

unint64_t sub_1A5672D34()
{
  unint64_t result;

  result = qword_1EE7A91D0;
  if (!qword_1EE7A91D0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ByteBufferView, &type metadata for ByteBufferView);
    atomic_store(result, (unint64_t *)&qword_1EE7A91D0);
  }
  return result;
}

unint64_t sub_1A5672D74()
{
  unint64_t result;

  result = qword_1EE7A91D8;
  if (!qword_1EE7A91D8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ByteBufferView, &type metadata for ByteBufferView);
    atomic_store(result, (unint64_t *)&qword_1EE7A91D8);
  }
  return result;
}

uint64_t sub_1A5672DB0()
{
  return sub_1A5672E44(&qword_1EE7A91E0, MEMORY[0x1E0DEB890]);
}

unint64_t sub_1A5672DD8()
{
  unint64_t result;

  result = qword_1EE7A91E8;
  if (!qword_1EE7A91E8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ByteBufferView, &type metadata for ByteBufferView);
    atomic_store(result, (unint64_t *)&qword_1EE7A91E8);
  }
  return result;
}

uint64_t sub_1A5672E14()
{
  return MEMORY[0x1E0DEB430];
}

uint64_t sub_1A5672E20()
{
  return sub_1A5672E44(&qword_1EE7A91F0, MEMORY[0x1E0DEB8C0]);
}

uint64_t sub_1A5672E44(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract_0(&qword_1EE7A91C8);
    v6 = sub_1A5672CF4();
    v7[0] = MEMORY[0x1E0DEB458];
    v7[1] = v6;
    result = MEMORY[0x1A85B1874](a2, v5, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A5672EB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE7A91F8;
  if (!qword_1EE7A91F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract_0(&qword_1EE7A9200);
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEC908], v1);
    atomic_store(result, (unint64_t *)&qword_1EE7A91F8);
  }
  return result;
}

unint64_t sub_1A5672EFC()
{
  unint64_t result;

  result = qword_1EE7A9208;
  if (!qword_1EE7A9208)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ByteBufferView, &type metadata for ByteBufferView);
    atomic_store(result, (unint64_t *)&qword_1EE7A9208);
  }
  return result;
}

unint64_t sub_1A5672F3C()
{
  unint64_t result;

  result = qword_1EE7A9210;
  if (!qword_1EE7A9210)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ByteBufferView, &type metadata for ByteBufferView);
    atomic_store(result, (unint64_t *)&qword_1EE7A9210);
  }
  return result;
}

unint64_t sub_1A5672F7C()
{
  unint64_t result;

  result = qword_1EE7A9218;
  if (!qword_1EE7A9218)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ByteBufferView, &type metadata for ByteBufferView);
    atomic_store(result, (unint64_t *)&qword_1EE7A9218);
  }
  return result;
}

uint64_t initializeWithCopy for ByteBufferView(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 19) = *(_DWORD *)(a2 + 19);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ByteBufferView(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_WORD *)(a1 + 20) = *(_WORD *)(a2 + 20);
  *(_BYTE *)(a1 + 22) = *(_BYTE *)(a2 + 22);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

__n128 __swift_memcpy40_8_1(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ByteBufferView(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_WORD *)(a1 + 20) = *(_WORD *)(a2 + 20);
  *(_BYTE *)(a1 + 22) = *(_BYTE *)(a2 + 22);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for ByteBufferView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for ByteBufferView()
{
  return &type metadata for ByteBufferView;
}

__n128 OUTLINED_FUNCTION_0_13()
{
  uint64_t v0;

  return *(__n128 *)v0;
}

uint64_t OUTLINED_FUNCTION_1_4()
{
  return sub_1A594BD78();
}

uint64_t OUTLINED_FUNCTION_4_9()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;

  v2 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v0 + 40) = *(_OWORD *)v1;
  *(_OWORD *)(v0 + 56) = v2;
  *(_QWORD *)(v0 + 72) = *(_QWORD *)(v1 + 32);
  return sub_1A553E5B4(v0 + 40);
}

__n128 OUTLINED_FUNCTION_5_5()
{
  uint64_t v0;

  return *(__n128 *)v0;
}

void OUTLINED_FUNCTION_7_8(void *a1)
{
  free(a1);
}

uint64_t OUTLINED_FUNCTION_9_7()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_10_4()
{
  uint64_t v0;
  uint64_t *v1;
  Swift::UInt32 v2;

  return ByteBuffer.setBytes<A>(_:at:)(v1, v2, v0);
}

Swift::Int OUTLINED_FUNCTION_15_5(Swift::Int at, Swift::Int to, Swift::Int length)
{
  return ByteBuffer.copyBytes(at:to:length:)(at, to, length);
}

__n128 OUTLINED_FUNCTION_16_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __n128 a10, __int128 a11, uint64_t a12)
{
  uint64_t v12;
  __n128 result;

  result = a10;
  *(__n128 *)v12 = a10;
  *(_OWORD *)(v12 + 16) = a11;
  *(_QWORD *)(v12 + 32) = a12;
  return result;
}

void OUTLINED_FUNCTION_17_3()
{
  Swift::Int v0;
  uint64_t v1;
  uint64_t *v2;

  sub_1A56704FC(v1, v0, v2);
}

uint64_t OUTLINED_FUNCTION_20_4()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_21_4(uint64_t *a1)
{
  Swift::Int v1;
  uint64_t v2;

  return ByteBufferView.subscript.setter(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_22_4@<X0>(uint64_t result@<X0>, unsigned int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  __int16 v5;

  *(_QWORD *)a4 = result;
  *(_DWORD *)(a4 + 8) = a2;
  *(_DWORD *)(a4 + 12) = v4;
  *(_DWORD *)(a4 + 16) = a3;
  *(_WORD *)(a4 + 20) = v5;
  *(_BYTE *)(a4 + 22) = BYTE6(a3);
  *(_QWORD *)(a4 + 24) = a2;
  *(_QWORD *)(a4 + 32) = v4;
  return result;
}

uint64_t sub_1A5673300(int a1)
{
  unsigned int v1;
  unsigned int v2;

  v1 = __clz(a1 - 1);
  if (v1)
    v2 = 1 << -(char)v1;
  else
    v2 = 0;
  if (a1)
    return v2;
  else
    return 1;
}

uint64_t sub_1A5673328(uint64_t result)
{
  unint64_t v1;

  if (!result)
    return 1;
  if (__OFSUB__(result, 1))
  {
    __break(1u);
  }
  else
  {
    v1 = __clz(result - 1);
    if (v1)
      return 1 << -(char)v1;
    else
      return 0;
  }
  return result;
}

void CircularBuffer._buffer.setter(uint64_t a1)
{
  _QWORD *v1;

  swift_release();
  *v1 = a1;
  OUTLINED_FUNCTION_1();
}

double (*CircularBuffer._buffer.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t CircularBuffer.headBackingIndex.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t CircularBuffer.headBackingIndex.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

double (*CircularBuffer.headBackingIndex.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t CircularBuffer.tailBackingIndex.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t CircularBuffer.tailBackingIndex.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

double (*CircularBuffer.tailBackingIndex.modify())(_QWORD)
{
  return nullsub_1;
}

void CircularBuffer.mask.getter()
{
  OUTLINED_FUNCTION_71_0();
  sub_1A594C87C();
  OUTLINED_FUNCTION_1();
}

Swift::Void __swiftcall CircularBuffer.advanceHeadIdx(by:)(Swift::Int by)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_69_0();
  *(_QWORD *)(v2 + 8) = v3 & v1;
  OUTLINED_FUNCTION_1();
}

Swift::Int __swiftcall CircularBuffer.indexAdvanced(index:by:)(Swift::Int index, Swift::Int by)
{
  Swift::Int result;

  CircularBuffer.mask.getter();
  OUTLINED_FUNCTION_1();
  return result;
}

Swift::Void __swiftcall CircularBuffer.advanceTailIdx(by:)(Swift::Int by)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_69_0();
  *(_QWORD *)(v2 + 16) = v3 & v1;
  OUTLINED_FUNCTION_1();
}

Swift::Int __swiftcall CircularBuffer.indexBeforeHeadIdx()()
{
  Swift::Int result;

  CircularBuffer.mask.getter();
  OUTLINED_FUNCTION_1();
  return result;
}

Swift::Int __swiftcall CircularBuffer.indexBeforeTailIdx()()
{
  Swift::Int result;

  CircularBuffer.mask.getter();
  OUTLINED_FUNCTION_1();
  return result;
}

uint64_t CircularBuffer.Index._backingIndex.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

double (*CircularBuffer.Index._backingIndex.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t CircularBuffer.Index._backingCheck.getter(unint64_t a1)
{
  return HIDWORD(a1) & 0xFFFFFF;
}

uint64_t CircularBuffer.Index._backingCheck.setter(uint64_t result)
{
  uint64_t v1;

  *(_WORD *)(v1 + 4) = result;
  *(_BYTE *)(v1 + 6) = BYTE2(result);
  return result;
}

double (*CircularBuffer.Index._backingCheck.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t CircularBuffer.Index.isIndexGEQHeadIndex.getter(unint64_t a1)
{
  return HIBYTE(a1) & 1;
}

uint64_t CircularBuffer.Index.isIndexGEQHeadIndex.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 7) = result;
  return result;
}

double (*CircularBuffer.Index.isIndexGEQHeadIndex.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t CircularBuffer.Index.backingIndex.getter(uint64_t result)
{
  return result;
}

uint64_t CircularBuffer.Index.init(backingIndex:backingCount:backingIndexOfHead:)(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (HIDWORD(result))
  {
LABEL_7:
    __break(1u);
    return result;
  }
  v3 = 0x1FFFFFF00000000;
  if (result < a3)
    v3 = 0xFFFFFF00000000;
  return v3 | result;
}

uint64_t static CircularBuffer.Index.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((a1 & 0xFFFFFFFFFFFFFFLL) == (a2 & 0xFFFFFFFFFFFFFFLL))
    return ((a1 & 0x100000000000000) == 0) ^ HIBYTE(a2) & 1u;
  else
    return 0;
}

BOOL static CircularBuffer.Index.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  _BOOL4 v2;
  _BOOL4 v3;

  v2 = a1 < (unint64_t)a2;
  if ((a2 & 0x100000000000000) != 0)
    v2 = 0;
  v3 = a1 < (unint64_t)a2;
  if ((a2 & 0x100000000000000) == 0)
    v3 = 1;
  if ((a1 & 0x100000000000000) != 0)
    return v3;
  else
    return v2;
}

BOOL CircularBuffer.Index.isValidIndex(for:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  if ((~a4 & 0xFFFFFF00000000) == 0)
    return 1;
  v5 = (a4 >> 24) & 0xFFFF00 | BYTE6(a4);
  CircularBuffer.count.getter(a1, a2, a3);
  return v5 == v6;
}

void CircularBuffer.count.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 < a2)
  {
    OUTLINED_FUNCTION_96_0();
    sub_1A594C87C();
  }
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1A5673620(unsigned int *a1, unsigned int *a2, uint64_t a3, uint64_t a4)
{
  return sub_1A5673644(a1, a2, a3, a4, (uint64_t (*)(unint64_t, unint64_t))static CircularBuffer.Index.< infix(_:_:));
}

uint64_t sub_1A5673638(unsigned int *a1, unsigned int *a2, uint64_t a3, uint64_t a4)
{
  return sub_1A5673644(a1, a2, a3, a4, (uint64_t (*)(unint64_t, unint64_t))static CircularBuffer.Index.== infix(_:_:));
}

uint64_t sub_1A5673644(unsigned int *a1, unsigned int *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(unint64_t, unint64_t))
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (*((_BYTE *)a1 + 7))
    v5 = 0x100000000000000;
  else
    v5 = 0;
  v6 = v5 | ((unint64_t)*((unsigned __int8 *)a1 + 6) << 48) | ((unint64_t)*((unsigned __int16 *)a1 + 2) << 32) | *a1;
  if (*((_BYTE *)a2 + 7))
    v7 = 0x100000000000000;
  else
    v7 = 0;
  return a5(v6, v7 | ((unint64_t)*((unsigned __int8 *)a2 + 6) << 48) | ((unint64_t)*((unsigned __int16 *)a2 + 2) << 32) | *a2);
}

void sub_1A5673694()
{
  CircularBuffer.description.getter();
}

void CircularBuffer.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_16_4();
  sub_1A594C354();
  swift_getTupleTypeMetadata2();
  OUTLINED_FUNCTION_4_10();
  MEMORY[0x1E0C80A78](v0);
  sub_1A594C354();
  OUTLINED_FUNCTION_3_8();
  MEMORY[0x1E0C80A78](v1);
  sub_1A594C8C4();
  OUTLINED_FUNCTION_16_6();
}

unint64_t CircularBuffer.index(after:)(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1A5673AA0(a1, a2, a3, a4, a5, 1);
}

unint64_t CircularBuffer.index(_:offsetBy:)(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  v8 = a2 + a1;
  CircularBuffer.mask.getter();
  v10 = v9 & v8;
  CircularBuffer.count.getter(a3, a4, a5);
  v12 = CircularBuffer.Index.init(backingIndex:backingCount:backingIndexOfHead:)(v10, v11, a4);
  return OUTLINED_FUNCTION_2_9(v12);
}

unint64_t CircularBuffer.index(before:)(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1A5673AA0(a1, a2, a3, a4, a5, -1);
}

unint64_t sub_1A5673AA0(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v6;

  v6 = CircularBuffer.index(_:offsetBy:)(a1, a6, a2, a3, a4);
  return OUTLINED_FUNCTION_2_9(v6);
}

void CircularBuffer.subscript.getter(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  uint64_t v8;

  sub_1A594C354();
  OUTLINED_FUNCTION_3_8();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v8 - v5;
  sub_1A594C8DC();
  OUTLINED_FUNCTION_42_0((uint64_t)v6, 1, a1);
  if (v7)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_85_0(a2, (uint64_t)v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32));
    OUTLINED_FUNCTION_17_1();
  }
}

void CircularBuffer.subscript.setter()
{
  uint64_t *v0;
  uint64_t v1;
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_40_1();
  v3 = v2;
  v5 = v4;
  v7 = *(_QWORD *)(v6 + 16);
  v8 = OUTLINED_FUNCTION_12_6();
  v9 = *(_QWORD *)(v8 - 8);
  OUTLINED_FUNCTION_5_6();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_35_2();
  v11 = *(_QWORD *)(v7 - 8);
  OUTLINED_FUNCTION_43_0(v1, v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16));
  v12 = OUTLINED_FUNCTION_55_0();
  __swift_storeEnumTagSinglePayload(v12, v13, v14, v7);
  OUTLINED_FUNCTION_50_1();
  sub_1A594C84C();
  v15 = *v0;
  sub_1A5677394(v3, v15);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v9 + 40))(v15+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v3, v1, v8);
  OUTLINED_FUNCTION_44_0(v5, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
  OUTLINED_FUNCTION_15_3();
}

void CircularBuffer.subscript.modify()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  void *v3;
  void *v4;

  v2 = OUTLINED_FUNCTION_53_2();
  v3 = OUTLINED_FUNCTION_14_3(v2);
  v4 = OUTLINED_FUNCTION_100_0((uint64_t)v3);
  *(_QWORD *)(v1 + 48) = v4;
  CircularBuffer.subscript.getter(v0, (uint64_t)v4);
  OUTLINED_FUNCTION_17_1();
}

{
  uint64_t v0;
  _QWORD *v1;
  void *v2;

  v1 = OUTLINED_FUNCTION_53_2();
  v2 = OUTLINED_FUNCTION_14_3(v1);
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_100_0((uint64_t)v2);
  CircularBuffer.subscript.getter();
  OUTLINED_FUNCTION_17_1();
}

void sub_1A5673C80()
{
  void **v0;
  void *v1;
  char v2;

  OUTLINED_FUNCTION_40_1();
  v1 = *v0;
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_15_6();
    OUTLINED_FUNCTION_64_0();
    OUTLINED_FUNCTION_22_5();
  }
  else
  {
    CircularBuffer.subscript.setter();
  }
  OUTLINED_FUNCTION_101_0();
  OUTLINED_FUNCTION_86_0();
  OUTLINED_FUNCTION_1_5(v1);
}

void CircularBuffer.startIndex.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t v5;

  CircularBuffer.count.getter(a1, a2, a3);
  v5 = CircularBuffer.Index.init(backingIndex:backingCount:backingIndexOfHead:)(a2, v4, a2);
  OUTLINED_FUNCTION_2_9(v5);
  OUTLINED_FUNCTION_1();
}

void CircularBuffer.endIndex.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;

  CircularBuffer.count.getter(a1, a2, a3);
  v6 = CircularBuffer.Index.init(backingIndex:backingCount:backingIndexOfHead:)(a3, v5, a2);
  OUTLINED_FUNCTION_2_9(v6);
  OUTLINED_FUNCTION_1();
}

unint64_t CircularBuffer.distance(from:to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  unint64_t v6;

  sub_1A594C354();
  v4 = sub_1A594C87C();
  if ((a1 & 0x100000000000000) != 0)
  {
    if ((a2 & 0x100000000000000) != 0)
      return a2 - (unint64_t)a1;
    else
      return v4 - a1 + a2;
  }
  else if ((a2 & 0x100000000000000) != 0)
  {
    v6 = a1 - (unint64_t)a2 + v4;
    result = -(uint64_t)v6;
    if (__OFSUB__(0, v6))
      __break(1u);
  }
  else
  {
    return a2 - (unint64_t)a1;
  }
  return result;
}

void sub_1A5673DD0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1A5673DE8(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))CircularBuffer.startIndex.getter, a2);
}

void sub_1A5673DDC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1A5673DE8(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))CircularBuffer.endIndex.getter, a2);
}

void sub_1A5673DE8(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD, _QWORD, _QWORD, _QWORD)@<X2>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  uint64_t v5;
  __int16 v6;
  char v7;
  char v8;

  v5 = a2(*v3, v3[1], v3[2], *(_QWORD *)(a1 + 16));
  OUTLINED_FUNCTION_10_5(v5);
  *(_WORD *)(a3 + 4) = v6;
  if (v7)
    v8 = 0;
  else
    v8 = 1;
  OUTLINED_FUNCTION_87_0(v8);
  OUTLINED_FUNCTION_1();
}

void (*sub_1A5673E28(uint64_t **a1, unsigned int *a2, uint64_t a3))(_QWORD *a1)
{
  uint64_t *v3;
  uint64_t *v7;
  uint64_t v8;

  v7 = (uint64_t *)malloc(0x28uLL);
  *a1 = v7;
  v8 = 0x100000000000000;
  if (!*((_BYTE *)a2 + 7))
    v8 = 0;
  v7[4] = (uint64_t)sub_1A5673ED8(v7, v8 | ((unint64_t)*((unsigned __int8 *)a2 + 6) << 48) | ((unint64_t)*((unsigned __int16 *)a2 + 2) << 32) | *a2, *v3, v3[1], v3[2], *(_QWORD *)(a3 + 16));
  return sub_1A5673EB0;
}

void sub_1A5673EB0(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  OUTLINED_FUNCTION_52_1(v1);
}

void (*sub_1A5673ED8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6))(_QWORD *a1)
{
  uint64_t v8;
  void *v9;

  v8 = *(_QWORD *)(a6 - 8);
  *a1 = a6;
  a1[1] = v8;
  v9 = malloc(*(_QWORD *)(v8 + 64));
  a1[2] = (uint64_t)v9;
  CircularBuffer.subscript.getter(a6, (uint64_t)v9);
  return sub_1A5673F48;
}

void sub_1A5673F48(_QWORD *a1)
{
  void *v1;

  v1 = (void *)a1[2];
  (*(void (**)(void *, _QWORD))(a1[1] + 8))(v1, *a1);
  OUTLINED_FUNCTION_52_1(v1);
}

unint64_t sub_1A5673F74@<X0>(unsigned int *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t result;
  unint64_t v12;
  unint64_t v13;

  v4 = a1[2];
  v5 = *((unsigned __int16 *)a1 + 6);
  v6 = *((unsigned __int8 *)a1 + 14);
  v7 = *((unsigned __int8 *)a1 + 15);
  v8 = 0x100000000000000;
  if (*((_BYTE *)a1 + 7))
    v9 = 0x100000000000000;
  else
    v9 = 0;
  v10 = *a1 | ((unint64_t)*((unsigned __int16 *)a1 + 2) << 32) | ((unint64_t)*((unsigned __int8 *)a1 + 6) << 48) | v9;
  if (!v7)
    v8 = 0;
  result = CircularBuffer.subscript.getter(v10, v4 | (v5 << 32) | (v6 << 48) | v8, *v2, v2[1], v2[2]);
  *a2 = result;
  a2[1] = v12;
  a2[2] = v13;
  return result;
}

unint64_t CircularBuffer.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v8;
  unint64_t v9;
  unint64_t result;
  unint64_t v11;

  CircularBuffer.startIndex.getter(a3, a4, a5);
  v9 = OUTLINED_FUNCTION_2_9(v8);
  result = OUTLINED_FUNCTION_84_0(v9, a1 & 0x1FFFFFFFFFFFFFFLL);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_23_3(a3);
    result = OUTLINED_FUNCTION_84_0(a2 & 0x1FFFFFFFFFFFFFFLL, v11 & 0xFFFFFFFFFFFFFFLL | ((unint64_t)(HIBYTE(v11) != 0) << 56));
    if ((result & 0x8000000000000000) == 0)
      return swift_retain();
  }
  __break(1u);
  return result;
}

BOOL sub_1A56740B0(uint64_t a1)
{
  uint64_t v1;

  return CircularBuffer.isEmpty.getter(a1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16));
}

BOOL CircularBuffer.isEmpty.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a2 == a3;
}

void sub_1A56740C4()
{
  uint64_t *v0;

  CircularBuffer.count.getter(*v0, v0[1], v0[2]);
}

void sub_1A56740D8(_QWORD *a1@<X8>)
{
  *a1 = 0x300000000000000;
}

void sub_1A56740F8(uint64_t a1@<X8>)
{
  sub_1A5675414(a1);
}

void sub_1A5674104(uint64_t a1)
{
  sub_1A5675470(a1);
}

void sub_1A5674110()
{
  CircularBuffer.subscript.setter();
}

void (*sub_1A567413C(_QWORD *a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  size_t v10;
  void *v11;

  v7 = malloc(0x38uLL);
  *a1 = v7;
  *v7 = v3;
  v7[1] = a3;
  v8 = *(_QWORD *)(a3 + 16);
  v7[2] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[3] = v9;
  v10 = *(_QWORD *)(v9 + 64);
  v7[4] = malloc(v10);
  v11 = malloc(v10);
  v7[5] = v11;
  *((_DWORD *)v7 + 12) = *(_DWORD *)a2;
  *((_WORD *)v7 + 26) = *(_WORD *)(a2 + 4);
  *((_BYTE *)v7 + 54) = *(_BYTE *)(a2 + 6);
  *((_BYTE *)v7 + 55) = *(_BYTE *)(a2 + 7);
  CircularBuffer.subscript.getter(v8, (uint64_t)v11);
  return sub_1A5674208;
}

void sub_1A5674208()
{
  void **v0;
  void *v1;
  char v2;

  OUTLINED_FUNCTION_40_1();
  v1 = *v0;
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_15_6();
    OUTLINED_FUNCTION_64_0();
    OUTLINED_FUNCTION_22_5();
  }
  else
  {
    CircularBuffer.subscript.setter();
  }
  OUTLINED_FUNCTION_101_0();
  OUTLINED_FUNCTION_86_0();
  OUTLINED_FUNCTION_1_5(v1);
}

unint64_t sub_1A56742A0(uint64_t *a1, unsigned int *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 0x100000000000000;
  if (*((_BYTE *)a2 + 7))
    v3 = 0x100000000000000;
  else
    v3 = 0;
  if (!*((_BYTE *)a2 + 15))
    v2 = 0;
  return CircularBuffer.subscript.setter(*a1, a1[1], a1[2], *a2 | ((unint64_t)*((unsigned __int16 *)a2 + 2) << 32) | ((unint64_t)*((unsigned __int8 *)a2 + 6) << 48) | v3, a2[2] | ((unint64_t)*((unsigned __int16 *)a2 + 6) << 32) | ((unint64_t)*((unsigned __int8 *)a2+ 14) << 48) | v2);
}

unint64_t CircularBuffer.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v7 = OUTLINED_FUNCTION_103_0();
  CircularBuffer.startIndex.getter(v7, v8, v9);
  v11 = OUTLINED_FUNCTION_2_9(v10);
  result = OUTLINED_FUNCTION_99_0(v11, a4 & 0x1FFFFFFFFFFFFFFLL);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v13 = OUTLINED_FUNCTION_103_0();
    CircularBuffer.endIndex.getter(v13, v14, v15);
    result = OUTLINED_FUNCTION_99_0(a5 & 0x1FFFFFFFFFFFFFFLL, v16 & 0xFFFFFFFFFFFFFFLL | ((unint64_t)(HIBYTE(v16) != 0) << 56));
    if ((result & 0x8000000000000000) == 0)
      OUTLINED_FUNCTION_45_0();
  }
  __break(1u);
  return result;
}

void (*sub_1A56743F4(_QWORD *a1, unsigned int *a2, uint64_t a3))()
{
  uint64_t *v3;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v7 = malloc(0x38uLL);
  *a1 = v7;
  v7[3] = v3;
  v7[4] = a3;
  v8 = *a2;
  v9 = *((unsigned __int16 *)a2 + 2);
  *((_WORD *)v7 + 24) = v9;
  v10 = *((unsigned __int8 *)a2 + 6);
  *((_BYTE *)v7 + 52) = v10;
  v11 = *((unsigned __int8 *)a2 + 7);
  *((_BYTE *)v7 + 53) = v11;
  v12 = a2[2];
  *((_DWORD *)v7 + 10) = v8;
  *((_DWORD *)v7 + 11) = v12;
  v13 = *((unsigned __int16 *)a2 + 6);
  *((_WORD *)v7 + 25) = v13;
  v14 = *((unsigned __int8 *)a2 + 14);
  *((_BYTE *)v7 + 54) = v14;
  v15 = v8 | (v9 << 32) | (v10 << 48);
  v16 = *((unsigned __int8 *)a2 + 15);
  *((_BYTE *)v7 + 55) = v16;
  if (v11)
    v17 = 0x100000000000000;
  else
    v17 = 0;
  if (v16)
    v18 = 0x100000000000000;
  else
    v18 = 0;
  *v7 = CircularBuffer.subscript.getter(v15 | v17, v12 | (v13 << 32) | (v14 << 48) | v18, *v3, v3[1], v3[2]);
  v7[1] = v19;
  v7[2] = v20;
  return sub_1A56744C8;
}

void sub_1A56744C8()
{
  uint64_t **v0;
  uint64_t *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  OUTLINED_FUNCTION_40_1();
  v1 = *v0;
  v2 = **v0;
  if ((v3 & 1) != 0)
  {
    v4 = swift_retain();
    OUTLINED_FUNCTION_32_2(v4);
    OUTLINED_FUNCTION_68_0();
  }
  else
  {
    OUTLINED_FUNCTION_32_2(v2);
  }
  OUTLINED_FUNCTION_1_5(v1);
}

void CircularBuffer.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v9 = malloc(0x38uLL);
  *a1 = v9;
  v9[5] = a4;
  v9[6] = v4;
  v9[3] = a2;
  v9[4] = a3;
  *v9 = CircularBuffer.subscript.getter(a2 & 0x1FFFFFFFFFFFFFFLL, a3 & 0x1FFFFFFFFFFFFFFLL, *v4, v4[1], v4[2]);
  v9[1] = v10;
  v9[2] = v11;
  OUTLINED_FUNCTION_17_1();
}

void sub_1A56745C8()
{
  uint64_t **v0;
  uint64_t *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  OUTLINED_FUNCTION_40_1();
  v1 = *v0;
  v2 = **v0;
  if ((v3 & 1) != 0)
  {
    v4 = swift_retain();
    OUTLINED_FUNCTION_33_1(v4);
    OUTLINED_FUNCTION_68_0();
  }
  else
  {
    OUTLINED_FUNCTION_33_1(v2);
  }
  OUTLINED_FUNCTION_1_5(v1);
}

uint64_t sub_1A567461C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1A85B1874](&protocol conformance descriptor for CircularBuffer<A>, a3);
  return sub_1A594B310();
}

uint64_t sub_1A5674690@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;

  v3 = *v1;
  v4 = v1[1];
  v5 = v1[2];
  v6 = swift_retain();
  CircularBuffer.startIndex.getter(v6, v4, v5);
  v8 = v7;
  result = swift_release();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_DWORD *)(a1 + 24) = v8;
  *(_WORD *)(a1 + 28) = WORD2(v8);
  *(_BYTE *)(a1 + 30) = BYTE6(v8);
  *(_BYTE *)(a1 + 31) = HIBYTE(v8) != 0;
  return result;
}

uint64_t sub_1A5674718(uint64_t a1)
{
  MEMORY[0x1A85B1874](&protocol conformance descriptor for CircularBuffer<A>, a1);
  return sub_1A594BDE4();
}

uint64_t sub_1A567474C(uint64_t a1)
{
  MEMORY[0x1A85B1874](&protocol conformance descriptor for CircularBuffer<A>, a1);
  return sub_1A594BE14();
}

void CircularBuffer.replaceSubrange<A>(_:with:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  __int16 v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  __int16 v48;
  char v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  void (*v53)(_QWORD, _QWORD, _QWORD);
  uint64_t AssociatedConformanceWitness;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  BOOL v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD v94[11];
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  void (*v111)(_QWORD, _QWORD, _QWORD);
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t AssociatedTypeWitness;
  uint64_t v117;
  uint64_t v118;
  int v119;
  __int16 v120;
  char v121;
  char v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;

  OUTLINED_FUNCTION_16_4();
  v2 = v1;
  v4 = v3;
  v110 = v5;
  v7 = v6;
  v9 = v8;
  v10 = HIDWORD(v8);
  v104 = v11;
  v12 = *(_QWORD *)(v11 + 16);
  v13 = HIWORD(v8);
  v14 = HIBYTE(v8) & 1;
  v15 = sub_1A594C354();
  v94[2] = sub_1A594CFA8();
  OUTLINED_FUNCTION_3_8();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_97_0();
  OUTLINED_FUNCTION_61_0(v17);
  v112 = v2;
  v18 = *(_QWORD *)(v2 + 8);
  v95 = sub_1A594C738();
  v94[10] = *(_QWORD *)(v95 - 8);
  OUTLINED_FUNCTION_4_10();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_97_0();
  OUTLINED_FUNCTION_61_0(v20);
  v94[9] = sub_1A594C900();
  OUTLINED_FUNCTION_3_8();
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_97_0();
  OUTLINED_FUNCTION_61_0(v22);
  v114 = *(_QWORD *)(v12 - 8);
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_36_2();
  OUTLINED_FUNCTION_61_0(v24);
  v117 = v15;
  v113 = *(_QWORD *)(v15 - 8);
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v25);
  OUTLINED_FUNCTION_28_2();
  v101 = v26;
  MEMORY[0x1E0C80A78](v27);
  v118 = (uint64_t)v94 - v28;
  v108 = *(v4 - 1);
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v29);
  OUTLINED_FUNCTION_28_2();
  v98 = v30;
  MEMORY[0x1E0C80A78](v31);
  OUTLINED_FUNCTION_61_0((uint64_t)v94 - v32);
  v105 = v18;
  v111 = (void (*)(_QWORD, _QWORD, _QWORD))v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v99 = *(_QWORD *)(AssociatedTypeWitness - 8);
  OUTLINED_FUNCTION_4_10();
  MEMORY[0x1E0C80A78](v33);
  OUTLINED_FUNCTION_97_0();
  v115 = v34;
  v37 = type metadata accessor for CircularBuffer.Index(0, v12, v35, v36);
  LODWORD(v123) = v9;
  v107 = v10;
  WORD2(v123) = v10;
  v106 = v13;
  BYTE6(v123) = v13;
  HIBYTE(v123) = v14;
  v38 = v0[1];
  v109 = v0;
  v39 = v0[2];
  v40 = OUTLINED_FUNCTION_1_2();
  OUTLINED_FUNCTION_83_0(v40, v38, v39);
  OUTLINED_FUNCTION_2_4();
  OUTLINED_FUNCTION_73_0();
  v120 = v42;
  if (v43)
    v44 = 0;
  else
    v44 = 1;
  v121 = v41;
  v122 = v44;
  v45 = MEMORY[0x1A85B1874](&protocol conformance descriptor for CircularBuffer<A>.Index, v37);
  if ((sub_1A594B2B0() & 1) == 0)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  LODWORD(v123) = v7;
  v94[5] = HIDWORD(v7);
  WORD2(v123) = WORD2(v7);
  v94[6] = HIWORD(v7);
  BYTE6(v123) = BYTE6(v7);
  v94[4] = HIBYTE(v7) & 1;
  HIBYTE(v123) = HIBYTE(v7) & 1;
  v46 = OUTLINED_FUNCTION_1_2();
  v96 = v39;
  CircularBuffer.endIndex.getter(v46, v38, v39);
  OUTLINED_FUNCTION_2_4();
  OUTLINED_FUNCTION_73_0();
  v120 = v48;
  if (v43)
    v49 = 0;
  else
    v49 = 1;
  v121 = v47;
  v122 = v49;
  v103 = v45;
  if ((sub_1A594B2BC() & 1) == 0)
    goto LABEL_29;
  v102 = v37;
  v94[3] = v7;
  v50 = v7 & 0x1FFFFFFFFFFFFFFLL;
  OUTLINED_FUNCTION_1_2();
  v51 = OUTLINED_FUNCTION_84_0(v9 & 0x1FFFFFFFFFFFFFFLL, v7 & 0x1FFFFFFFFFFFFFFLL);
  OUTLINED_FUNCTION_2_4();
  v52 = v110;
  v53 = v111;
  if (v51 != sub_1A594BD78())
  {
    AssociatedTypeWitness = v9 & 0x1FFFFFFFFFFFFFFLL;
    v70 = OUTLINED_FUNCTION_1_2();
    v71 = v52;
    CircularBuffer.count.getter(v70, v38, v96);
    v73 = v72;
    OUTLINED_FUNCTION_2_4();
    (*(void (**)(uint64_t, uint64_t, _QWORD))(v108 + 16))(v98, v71, v53);
    v118 = v51;
    if (v51 == v73)
    {
      v74 = sub_1A594BD9C();
      OUTLINED_FUNCTION_75_0();
      if ((v74 & 1) != 0)
      {
        CircularBuffer.removeSubrange(_:)();
        goto LABEL_27;
      }
    }
    else
    {
      OUTLINED_FUNCTION_75_0();
    }
    v115 = v50;
    sub_1A594B9F4();
    v126 = sub_1A594C834();
    v75 = *v109;
    v76 = v109[1];
    v77 = v109[2];
    v78 = OUTLINED_FUNCTION_1_2();
    CircularBuffer.count.getter(v78, v76, v77);
    v80 = v79;
    OUTLINED_FUNCTION_2_4();
    v81 = sub_1A594BD78();
    v82 = v80 + v81;
    if (!__OFADD__(v80, v81))
    {
      v83 = __OFSUB__(v82, v118);
      v84 = v82 - v118;
      if (!v83)
      {
        v85 = v84 + 1;
        if (!__OFADD__(v84, 1))
        {
          OUTLINED_FUNCTION_1_2();
          v86 = CircularBuffer.capacity.getter();
          OUTLINED_FUNCTION_2_4();
          v87 = sub_1A5673328(v85);
          if (v87 <= v86)
            v88 = v86;
          else
            v88 = v87;
          v118 = sub_1A594C8C4();
          sub_1A594C840();
          v89 = OUTLINED_FUNCTION_1_2();
          OUTLINED_FUNCTION_83_0(v89, v76, v77);
          v91 = v90;
          OUTLINED_FUNCTION_2_4();
          LODWORD(v123) = v91;
          WORD2(v123) = WORD2(v91);
          BYTE6(v123) = BYTE6(v91);
          HIBYTE(v123) = HIBYTE(v91) != 0;
          v119 = v9;
          v120 = v107;
          v121 = v106;
          v122 = (v9 & 0x100000000000000uLL) >> 56;
          if ((sub_1A594B2BC() & 1) != 0)
          {
            v114 = v88;
            v123 = OUTLINED_FUNCTION_90_0(v91 & 0xFFFFFFFFFFFFFFLL | ((unint64_t)(HIBYTE(v91) != 0) << 56), AssociatedTypeWitness, v75, v76);
            v124 = v92;
            v125 = v93;
            OUTLINED_FUNCTION_16_6();
          }
LABEL_33:
          __break(1u);
          JUMPOUT(0x1A5675400);
        }
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v108 + 16))(v97, v52, v53);
  sub_1A594B730();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v55 = v118;
  v112 = AssociatedConformanceWitness;
  sub_1A594C3C0();
  v56 = v55;
  OUTLINED_FUNCTION_42_0(v55, 1, v12);
  v57 = v109;
  v58 = v101;
  v59 = v100;
  if (!v43)
  {
    v111 = *(void (**)(_QWORD, _QWORD, _QWORD))(v114 + 32);
    v60 = v114;
    do
    {
      v111(v59, v56, v12);
      v61 = v9;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 16))(v58, v59, v12);
      v62 = OUTLINED_FUNCTION_55_0();
      __swift_storeEnumTagSinglePayload(v62, v63, v64, v12);
      sub_1A594C8C4();
      sub_1A594C84C();
      sub_1A5677394(v9, *v57);
      OUTLINED_FUNCTION_59_1();
      OUTLINED_FUNCTION_85_0(v65 + v66 * v9, v58, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v67 + 40));
      v68 = *v57;
      v69 = v57[1];
      v9 = v57[2];
      OUTLINED_FUNCTION_155();
      LODWORD(v9) = CircularBuffer.index(after:)(v61, v68, v69, v9, v12);
      OUTLINED_FUNCTION_17_4();
      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v12);
      sub_1A594C3C0();
      v56 = v118;
      OUTLINED_FUNCTION_42_0(v118, 1, v12);
    }
    while (!v43);
  }
  (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v115, AssociatedTypeWitness);
LABEL_27:
  OUTLINED_FUNCTION_1_3();
}

void sub_1A5675408(uint64_t a1@<X8>)
{
  sub_1A5675414(a1);
}

void sub_1A5675414(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  __int16 v10;
  char v11;

  OUTLINED_FUNCTION_93_0();
  OUTLINED_FUNCTION_92_0();
  if (v8)
    v7 = 0;
  v9 = v3(v7 | (v6 << 48) | (v5 << 32) | v4, v2);
  OUTLINED_FUNCTION_10_5(v9);
  *(_WORD *)(a1 + 4) = v10;
  if (v8)
    v11 = 0;
  else
    v11 = 1;
  OUTLINED_FUNCTION_87_0(v11);
  OUTLINED_FUNCTION_1();
}

void sub_1A5675464(uint64_t a1)
{
  sub_1A5675470(a1);
}

void sub_1A5675470(uint64_t a1)
{
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  __int16 v10;
  char v11;

  OUTLINED_FUNCTION_93_0();
  OUTLINED_FUNCTION_92_0();
  if (v8)
    v7 = 0;
  v9 = v2(v7 | (v6 << 48) | (v5 << 32) | v4, v3);
  OUTLINED_FUNCTION_10_5(v9);
  *(_WORD *)(a1 + 4) = v10;
  if (v8)
    v11 = 0;
  else
    v11 = 1;
  OUTLINED_FUNCTION_87_0(v11);
  OUTLINED_FUNCTION_1();
}

void sub_1A56754C0(unsigned int *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  unint64_t v5;
  __int16 v6;
  char v7;
  char v8;

  v5 = CircularBuffer.index(_:offsetBy:)(*a1, a2, *v3, v3[1], v3[2]);
  OUTLINED_FUNCTION_10_5(v5);
  *(_WORD *)(a3 + 4) = v6;
  if (v7)
    v8 = 0;
  else
    v8 = 1;
  OUTLINED_FUNCTION_87_0(v8);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1A5675524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  MEMORY[0x1A85B1874](&protocol conformance descriptor for CircularBuffer<A>, a4);
  return sub_1A594BD18();
}

unint64_t sub_1A5675588(unsigned int *a1, unsigned int *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (*((_BYTE *)a1 + 7))
    v2 = 0x100000000000000;
  else
    v2 = 0;
  v3 = v2 | ((unint64_t)*((unsigned __int8 *)a1 + 6) << 48) | ((unint64_t)*((unsigned __int16 *)a1 + 2) << 32) | *a1;
  if (*((_BYTE *)a2 + 7))
    v4 = 0x100000000000000;
  else
    v4 = 0;
  return CircularBuffer.distance(from:to:)(v3, v4 | ((unint64_t)*((unsigned __int8 *)a2 + 6) << 48) | ((unint64_t)*((unsigned __int16 *)a2 + 2) << 32) | *a2);
}

void CircularBuffer.init(initialCapacity:)(unint64_t a1)
{
  uint64_t v2;

  sub_1A594C354();
  OUTLINED_FUNCTION_3_8();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_20_5();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (!HIDWORD(a1))
  {
    sub_1A5673300(a1);
    OUTLINED_FUNCTION_77_0();
    sub_1A594C8AC();
    return;
  }
  __break(1u);
}

void CircularBuffer.init()()
{
  CircularBuffer.init(initialCapacity:)(0x10uLL);
}

void CircularBuffer.append(_:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_40_1();
  v3 = v2;
  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(sub_1A594C354() - 8);
  OUTLINED_FUNCTION_5_6();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_35_2();
  v8 = v0[2];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v1, v3, v5);
  v9 = OUTLINED_FUNCTION_55_0();
  __swift_storeEnumTagSinglePayload(v9, v10, v11, v5);
  OUTLINED_FUNCTION_29_2();
  sub_1A594C84C();
  v12 = *v0;
  sub_1A5677394(v8, *v0);
  OUTLINED_FUNCTION_43_0(v12+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v8, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 40));
  CircularBuffer.advanceTailIdx(by:)(1);
  if (v0[1] == v0[2])
    CircularBuffer._doubleCapacity()();
  OUTLINED_FUNCTION_15_3();
}

Swift::Void __swiftcall CircularBuffer._doubleCapacity()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;

  OUTLINED_FUNCTION_16_4();
  v2 = v0;
  v4 = *(_QWORD *)(v3 + 16);
  v5 = *(_QWORD *)(sub_1A594C354() - 8);
  OUTLINED_FUNCTION_5_6();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_35_2();
  v7 = OUTLINED_FUNCTION_95_0();
  OUTLINED_FUNCTION_3_8();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v19 - v9;
  v12 = *v2;
  v11 = v2[1];
  v24 = v2[2];
  v13 = 2 * CircularBuffer.capacity.getter();
  OUTLINED_FUNCTION_49_1();
  v30 = sub_1A594C834();
  if (v13 >= 1)
  {
    v14 = OUTLINED_FUNCTION_29_2();
    v22 = v10;
    v23 = v7;
    v15 = v14;
    sub_1A594C840();
    *(_QWORD *)&v25 = v12;
    v27 = v11;
    OUTLINED_FUNCTION_58_0();
    v21 = v5;
    MEMORY[0x1A85B1874](MEMORY[0x1E0DEC728], v15);
    OUTLINED_FUNCTION_74_0(&qword_1EE7A9228, v16, MEMORY[0x1E0DEC928]);
    OUTLINED_FUNCTION_63_0();
    sub_1A594B2F8();
    v25 = v28;
    v26 = v29;
    v17 = OUTLINED_FUNCTION_48_0();
    MEMORY[0x1A85B1874](MEMORY[0x1E0DEBF78], v17);
    v20 = v4;
    OUTLINED_FUNCTION_38_1();
    *(_QWORD *)&v25 = v12;
    v27 = v24;
    OUTLINED_FUNCTION_58_0();
    OUTLINED_FUNCTION_74_0(qword_1EE7A9238, v18, MEMORY[0x1E0DEC940]);
    OUTLINED_FUNCTION_63_0();
    sub_1A594B2F8();
    v25 = v28;
    v26 = v29;
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_155();
    sub_1A594C87C();
    OUTLINED_FUNCTION_17_4();
    __swift_storeEnumTagSinglePayload(v1, 1, 1, v20);
    OUTLINED_FUNCTION_98_0();
    OUTLINED_FUNCTION_44_0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v21 + 8));
    OUTLINED_FUNCTION_45_0();
  }
  __break(1u);
}

void CircularBuffer.prepend(_:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_16_4();
  v3 = v2;
  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(sub_1A594C354() - 8);
  OUTLINED_FUNCTION_5_6();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_20_5();
  v8 = v0[1];
  OUTLINED_FUNCTION_12_1();
  CircularBuffer.indexBeforeHeadIdx()();
  OUTLINED_FUNCTION_51_1();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v1, v3, v5);
  __swift_storeEnumTagSinglePayload(v1, 0, 1, v5);
  OUTLINED_FUNCTION_29_2();
  sub_1A594C84C();
  v9 = *v0;
  sub_1A5677394(v8, *v0);
  OUTLINED_FUNCTION_43_0(v9+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v8, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 40));
  CircularBuffer.advanceHeadIdx(by:)(-1);
  if (v0[1] == v0[2])
    CircularBuffer._doubleCapacity()();
  OUTLINED_FUNCTION_1_3();
}

uint64_t CircularBuffer.capacity.getter()
{
  OUTLINED_FUNCTION_71_0();
  return sub_1A594C87C();
}

Swift::Bool __swiftcall CircularBuffer.verifyInvariants()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Bool v10;
  int EnumTagSinglePayload;
  BOOL v12;
  uint64_t v13;

  OUTLINED_FUNCTION_40_1();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v7 = OUTLINED_FUNCTION_96_0();
  v8 = *(_QWORD *)(v7 - 8);
  OUTLINED_FUNCTION_5_6();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_35_2();
  if (v6 == v4)
    return 1;
  do
  {
    sub_1A594C8DC();
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v0, 1, v2);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0, v7);
    v12 = EnumTagSinglePayload == 1;
    v10 = EnumTagSinglePayload != 1;
    if (v12)
      break;
    CircularBuffer.mask.getter();
    v6 = v13 & (v6 + 1);
  }
  while (v6 != v4);
  return v10;
}

Swift::Void __swiftcall CircularBuffer._resizeAndFlatten(newCapacity:)(Swift::Int newCapacity)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;

  OUTLINED_FUNCTION_16_4();
  v3 = v1;
  v5 = v4;
  v7 = *(_QWORD *)(v6 + 16);
  v8 = *(_QWORD *)(sub_1A594C354() - 8);
  OUTLINED_FUNCTION_5_6();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v25 - v10;
  v12 = OUTLINED_FUNCTION_95_0();
  OUTLINED_FUNCTION_3_8();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_20_5();
  OUTLINED_FUNCTION_49_1();
  v35 = sub_1A594C834();
  if (v5 >= 1)
  {
    v28 = v2;
    v29 = v7;
    v14 = OUTLINED_FUNCTION_29_2();
    sub_1A594C840();
    v15 = v3[1];
    v16 = v3[2];
    v17 = *v3;
    if (v16 >= v15)
    {
      *(_QWORD *)&v33 = sub_1A594C8D0();
      *((_QWORD *)&v33 + 1) = v21;
      *(_QWORD *)&v34 = v22;
      *((_QWORD *)&v34 + 1) = v23;
      v24 = OUTLINED_FUNCTION_48_0();
      MEMORY[0x1A85B1874](MEMORY[0x1E0DEBF78], v24);
    }
    else
    {
      *(_QWORD *)&v30 = *v3;
      v32 = v15;
      OUTLINED_FUNCTION_58_0();
      v26 = v8;
      MEMORY[0x1A85B1874](MEMORY[0x1E0DEC728], v14);
      v25[1] = v5;
      OUTLINED_FUNCTION_74_0(&qword_1EE7A9228, v18, MEMORY[0x1E0DEC928]);
      OUTLINED_FUNCTION_62_0();
      sub_1A594B2F8();
      v30 = v33;
      v31 = v34;
      v19 = OUTLINED_FUNCTION_48_0();
      MEMORY[0x1A85B1874](MEMORY[0x1E0DEBF78], v19);
      v27 = v12;
      OUTLINED_FUNCTION_76_0();
      sub_1A594C888();
      *(_QWORD *)&v30 = v17;
      v32 = v16;
      OUTLINED_FUNCTION_58_0();
      OUTLINED_FUNCTION_74_0(qword_1EE7A9238, v20, MEMORY[0x1E0DEC940]);
      OUTLINED_FUNCTION_62_0();
      sub_1A594B2F8();
      v30 = v33;
      v31 = v34;
      OUTLINED_FUNCTION_76_0();
      v8 = v26;
    }
    sub_1A594C888();
    OUTLINED_FUNCTION_155();
    sub_1A594C87C();
    OUTLINED_FUNCTION_17_4();
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 1, 1, v29);
    OUTLINED_FUNCTION_98_0();
    OUTLINED_FUNCTION_44_0((uint64_t)v11, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
    OUTLINED_FUNCTION_79_0();
  }
  __break(1u);
}

void CircularBuffer.subscript.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  OUTLINED_FUNCTION_65_0();
  v2 = v1;
  CircularBuffer.startIndex.getter(v3, v4, v5);
  OUTLINED_FUNCTION_46_0(v6);
  OUTLINED_FUNCTION_80_0();
  v12 = CircularBuffer.index(_:offsetBy:)(v7, v8, v9, v10, v11);
  OUTLINED_FUNCTION_2_9(v12);
  CircularBuffer.subscript.getter(v0, v2);
}

void CircularBuffer.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unsigned int v33;
  uint64_t v34;

  OUTLINED_FUNCTION_16_4();
  a19 = v21;
  a20 = v22;
  v24 = v23;
  v26 = *(_QWORD *)(*(_QWORD *)(v25 + 16) - 8);
  MEMORY[0x1E0C80A78](v23);
  v28 = (char *)&a9 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = *v20;
  v30 = v20[1];
  v31 = v20[2];
  CircularBuffer.startIndex.getter(*v20, v30, v31);
  v33 = OUTLINED_FUNCTION_46_0(v32);
  CircularBuffer.index(_:offsetBy:)(v33, v34, v29, v30, v31);
  OUTLINED_FUNCTION_43_0((uint64_t)v28, v24, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 16));
  CircularBuffer.subscript.setter();
  OUTLINED_FUNCTION_44_0(v24, *(uint64_t (**)(uint64_t, uint64_t))(v26 + 8));
  OUTLINED_FUNCTION_1_3();
}

#error "1A5675FC4: call analysis failed (funcsize=27)"

Swift::Void __swiftcall CircularBuffer.removeAll(keepingCapacity:)(Swift::Bool keepingCapacity)
{
  uint64_t *v1;
  uint64_t v3;
  Swift::Int v4;

  OUTLINED_FUNCTION_94_0();
  OUTLINED_FUNCTION_3_8();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_20_5();
  if (keepingCapacity)
  {
    CircularBuffer.count.getter(*v1, v1[1], v1[2]);
    CircularBuffer.removeFirst(_:)(v4);
  }
  else
  {
    sub_1A594C8C4();
    sub_1A594C8A0();
    OUTLINED_FUNCTION_77_0();
    sub_1A594C894();
  }
  v1[1] = 0;
  v1[2] = 0;
  OUTLINED_FUNCTION_17_1();
}

Swift::Void __swiftcall CircularBuffer.removeFirst(_:)(Swift::Int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_16_4();
  v3 = v2;
  OUTLINED_FUNCTION_12_6();
  OUTLINED_FUNCTION_5_6();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_72_0();
  v5 = *(_QWORD *)(v1 + 8);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = OUTLINED_FUNCTION_12_1();
  CircularBuffer.count.getter(v7, v5, v6);
  OUTLINED_FUNCTION_51_1();
  if (v6 < v3)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v3 < 0)
  {
LABEL_8:
    __break(1u);
    return;
  }
  if (v3)
  {
    OUTLINED_FUNCTION_50_1();
    sub_1A594C84C();
    sub_1A594C84C();
    do
    {
      OUTLINED_FUNCTION_41_1();
      OUTLINED_FUNCTION_9_8();
      swift_retain();
      OUTLINED_FUNCTION_56_2();
      OUTLINED_FUNCTION_89_0();
      v5 &= v5 + 1;
      --v3;
    }
    while (v3);
  }
  *(_QWORD *)(v1 + 8) = v5;
  OUTLINED_FUNCTION_1_3();
}

uint64_t CircularBuffer.modify<A>(_:_:)(unsigned int a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v6 = *(_QWORD *)(a4 + 16);
  v7 = a1;
  v8 = sub_1A594C354();
  sub_1A594C8C4();
  sub_1A594C84C();
  v9 = *v4;
  sub_1A5677394(v7, v9);
  v10 = v9
      + ((*(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80))
      + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * v7;
  result = __swift_getEnumTagSinglePayload(v10, 1, v6);
  if ((_DWORD)result != 1)
    return a2(v10);
  __break(1u);
  return result;
}

uint64_t sub_1A56761F8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  sub_1A594CCCC();
  result = sub_1A594B5F8();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return result;
}

uint64_t CircularBuffer.popFirst()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_25_1();
  if (v3 < 1)
  {
    v4 = 1;
  }
  else
  {
    CircularBuffer.removeFirst()(v2, v0);
    v4 = 0;
  }
  return OUTLINED_FUNCTION_11_5(v0, v4, 1, v1);
}

void CircularBuffer.removeFirst()(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a1 + 16);
  OUTLINED_FUNCTION_94_0();
  OUTLINED_FUNCTION_3_8();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_20_5();
  CircularBuffer.first.getter(*v2, v2[1], v2[2], v5, v3);
  OUTLINED_FUNCTION_42_0(v3, 1, v5);
  if (v7)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_85_0(a2, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32));
    sub_1A56764E8((uint64_t)v2, v5, v8, v9);
    OUTLINED_FUNCTION_8_1();
  }
}

uint64_t CircularBuffer.popLast()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_25_1();
  if (v2 >= 1)
    CircularBuffer.removeLast()();
  return OUTLINED_FUNCTION_11_5(v0, 1, 1, v1);
}

void CircularBuffer.removeLast()()
{
  uint64_t v0;

  OUTLINED_FUNCTION_12_6();
  OUTLINED_FUNCTION_3_8();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_72_0();
  OUTLINED_FUNCTION_79_0();
}

void sub_1A56763C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  sub_1A594B208();
  OUTLINED_FUNCTION_42_0(v3, 1, v1);
  if (v4)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_43_0(v2, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32));
    sub_1A5676578(v0, v1, v5, v6);
    OUTLINED_FUNCTION_17_1();
  }
}

Swift::Void __swiftcall CircularBuffer.removeLast(_:)(Swift::Int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_16_4();
  v3 = v2;
  OUTLINED_FUNCTION_12_6();
  OUTLINED_FUNCTION_5_6();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_72_0();
  v5 = *(_QWORD *)(v1 + 8);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = OUTLINED_FUNCTION_12_1();
  CircularBuffer.count.getter(v7, v5, v6);
  OUTLINED_FUNCTION_51_1();
  if (v5 < v3)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v3 < 0)
  {
LABEL_8:
    __break(1u);
    return;
  }
  if (v3)
  {
    OUTLINED_FUNCTION_50_1();
    sub_1A594C84C();
    sub_1A594C84C();
    do
    {
      swift_retain();
      OUTLINED_FUNCTION_56_2();
      OUTLINED_FUNCTION_89_0();
      v6 &= v6 - 1;
      OUTLINED_FUNCTION_41_1();
      OUTLINED_FUNCTION_9_8();
      --v3;
    }
    while (v3);
  }
  *(_QWORD *)(v1 + 16) = v6;
  OUTLINED_FUNCTION_1_3();
}

void sub_1A56764E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for CircularBuffer(0, a2, a3, a4);
  CircularBuffer.removeFirst(_:)(1);
}

uint64_t CircularBuffer.first.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  unint64_t v8;

  if (a2 == a3)
  {
    v7 = 1;
  }
  else
  {
    CircularBuffer.startIndex.getter(a1, a2, a3);
    OUTLINED_FUNCTION_2_9(v8);
    CircularBuffer.subscript.getter(a4, a5);
    v7 = 0;
  }
  return OUTLINED_FUNCTION_11_5(a5, v7, 1, a4);
}

void sub_1A5676578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for CircularBuffer(0, a2, a3, a4);
  CircularBuffer.removeLast(_:)(1);
}

void CircularBuffer.removeSubrange(_:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;

  OUTLINED_FUNCTION_16_4();
  v2 = v1;
  v28 = v3;
  v5 = *(_QWORD *)(v4 + 16);
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_36_2();
  v9 = type metadata accessor for CircularBuffer.Index(0, v5, v7, v8);
  v29 = v0;
  v27 = v0 + 1;
  v10 = OUTLINED_FUNCTION_31_1();
  CircularBuffer.startIndex.getter(v10, v11, v12);
  OUTLINED_FUNCTION_66_0(v13);
  MEMORY[0x1A85B1874](&protocol conformance descriptor for CircularBuffer<A>.Index, v9);
  OUTLINED_FUNCTION_67_0();
  if ((sub_1A594B2B0() & 1) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  v14 = OUTLINED_FUNCTION_31_1();
  CircularBuffer.endIndex.getter(v14, v15, v16);
  OUTLINED_FUNCTION_66_0(v17);
  OUTLINED_FUNCTION_67_0();
  if ((sub_1A594B2BC() & 1) == 0)
  {
LABEL_9:
    __break(1u);
    return;
  }
  v18 = CircularBuffer.distance(from:to:)(v28 & 0x1FFFFFFFFFFFFFFLL, v2 & 0x1FFFFFFFFFFFFFFLL);
  if (v18 == 1)
    CircularBuffer.remove(at:)();
  v19 = v18;
  v20 = OUTLINED_FUNCTION_31_1();
  CircularBuffer.count.getter(v20, v21, v22);
  if (v23 != v19)
  {
    OUTLINED_FUNCTION_49_1();
    sub_1A594BAF0();
    OUTLINED_FUNCTION_45_0();
  }
  OUTLINED_FUNCTION_12_6();
  v24 = sub_1A594C87C();
  CircularBuffer.init(initialCapacity:)(v24);
  v26 = v25;
  OUTLINED_FUNCTION_2_4();
  *v29 = v26;
  *v27 = 0;
  v27[1] = 0;
  OUTLINED_FUNCTION_1_3();
}

uint64_t sub_1A56767AC@<X0>(void (*a1)(void)@<X1>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  a1();
  return __swift_storeEnumTagSinglePayload(a3, 0, 1, a2);
}

void CircularBuffer.remove(at:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_16_4();
  v1 = v0;
  OUTLINED_FUNCTION_12_6();
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_28_2();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_36_2();
  MEMORY[0x1A85B1874](&protocol conformance descriptor for CircularBuffer<A>, v1);
  sub_1A594BE98();
  sub_1A594B190();
  OUTLINED_FUNCTION_79_0();
}

void sub_1A5676960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Swift::Int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v9 = type metadata accessor for CircularBuffer.Index(255, v4, a3, a4);
  MEMORY[0x1A85B1874](&protocol conformance descriptor for CircularBuffer<A>.Index, v9);
  v10 = sub_1A594B85C();
  swift_release();
  if ((v10 & 1) != 0)
  {
    sub_1A594C8DC();
    OUTLINED_FUNCTION_42_0(v5, 1, v4);
    if (!v11)
    {
      v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 216) + 32);
      v13 = *(_QWORD *)(v8 - 184);
      v12(v13, v5, v4);
      v14 = *(_QWORD *)(v8 - 208);
      if (v14 == v7)
      {
        CircularBuffer.advanceHeadIdx(by:)(1);
        OUTLINED_FUNCTION_8_5();
        sub_1A594C84C();
        OUTLINED_FUNCTION_34_1(v14);
        v17 = v15 + v16 * v14;
      }
      else
      {
        swift_retain();
        v18 = CircularBuffer.indexBeforeTailIdx()();
        swift_release();
        if (v18 != v7)
        {
          *(_QWORD *)(v8 - 200) = v12;
          OUTLINED_FUNCTION_8_5();
          sub_1A594C84C();
          sub_1A5677394(v7, *v6);
          OUTLINED_FUNCTION_59_1();
          OUTLINED_FUNCTION_57_1(v22 + v23 * v7);
          v24 = v6[2];
          OUTLINED_FUNCTION_155();
          OUTLINED_FUNCTION_56_2();
          v26 = v25;
          OUTLINED_FUNCTION_17_4();
          v27 = v26 & (v7 + 1);
          if (v27 != v24)
          {
            *(_QWORD *)(v8 - 128) = v7;
            *(_QWORD *)(v8 - 168) = v27;
            OUTLINED_FUNCTION_16_6();
          }
          OUTLINED_FUNCTION_70_0();
          v21 = *(_QWORD *)(v8 - 224);
          v13 = *(_QWORD *)(v8 - 184);
          v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 - 200);
          goto LABEL_11;
        }
        OUTLINED_FUNCTION_70_0();
        OUTLINED_FUNCTION_8_5();
        sub_1A594C84C();
        OUTLINED_FUNCTION_34_1(v7);
        v17 = v19 + v20 * v7;
      }
      OUTLINED_FUNCTION_57_1(v17);
      v21 = *(_QWORD *)(v8 - 224);
LABEL_11:
      v12(v21, v13, v4);
      OUTLINED_FUNCTION_1_3();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

Swift::Void __swiftcall CircularBuffer.reserveCapacity(_:)(Swift::Int a1)
{
  Swift::Int v2;

  if (CircularBuffer.capacity.getter() < a1)
  {
    v2 = sub_1A5673328(a1);
    CircularBuffer._resizeAndFlatten(newCapacity:)(v2);
  }
  OUTLINED_FUNCTION_8_1();
}

void sub_1A5676BB8(_QWORD *a1@<X8>)
{
  uint64_t v2;

  CircularBuffer.init()();
  a1[1] = 0;
  a1[2] = 0;
  *a1 = v2;
}

uint64_t sub_1A5676BE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  CircularBuffer.replaceSubrange<A>(_:with:)();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a2, a3);
}

uint64_t sub_1A5676C84(uint64_t a1, uint64_t a2)
{
  CircularBuffer.append(_:)();
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))(a1);
}

void sub_1A5676CC4()
{
  CircularBuffer.remove(at:)();
}

void sub_1A5676CF0()
{
  CircularBuffer.removeSubrange(_:)();
}

uint64_t sub_1A5676D44(uint64_t a1)
{
  MEMORY[0x1A85B1874](&protocol conformance descriptor for CircularBuffer<A>, a1);
  return sub_1A594BFA0();
}

uint64_t sub_1A5676D90()
{
  MEMORY[0x1A85B1874](&protocol conformance descriptor for CircularBuffer<A>);
  return sub_1A594BFAC();
}

uint64_t sub_1A5676DE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1A85B1874](&protocol conformance descriptor for CircularBuffer<A>, a3);
  return sub_1A594BFC4();
}

uint64_t static CircularBuffer<A>.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_16_4();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  CircularBuffer.count.getter(v8, v9, v10);
  v12 = v11;
  CircularBuffer.count.getter(v7, v5, v3);
  if (v12 == v15)
  {
    type metadata accessor for CircularBuffer(0, v1, v13, v14);
    OUTLINED_FUNCTION_45_0();
  }
  return 0;
}

uint64_t sub_1A5676FF4(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t TupleTypeMetadata2;

  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a1, a1 + *(int *)(TupleTypeMetadata2 + 48)) & 1;
}

uint64_t sub_1A5677054()
{
  return static CircularBuffer<A>.== infix(_:_:)();
}

void CircularBuffer<A>.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  int v16;
  int v17;
  char v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_16_4();
  v21 = v0;
  v22 = v1;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  OUTLINED_FUNCTION_83_0(v9, v7, v5);
  LODWORD(v15) = v14;
  v16 = HIBYTE(v14) != 0;
  OUTLINED_FUNCTION_23_3(v9);
  OUTLINED_FUNCTION_47_0();
  if (!v18 || v16 != v17)
  {
    do
    {
      do
      {
        CircularBuffer.subscript.getter(v3, (uint64_t)v13);
        swift_retain();
        v15 = CircularBuffer.index(after:)(v15, v9, v7, v5, v3);
        OUTLINED_FUNCTION_36();
        sub_1A594B154();
        (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v3);
        OUTLINED_FUNCTION_23_3(v9);
        OUTLINED_FUNCTION_47_0();
      }
      while (!v18);
    }
    while ((((HIBYTE(v15) != 0) ^ v19) & 1) != 0);
    OUTLINED_FUNCTION_36();
    OUTLINED_FUNCTION_1_3();
  }
  else
  {
    swift_release();
  }
}

uint64_t CircularBuffer<A>.hashValue.getter()
{
  OUTLINED_FUNCTION_65_0();
  sub_1A594CE64();
  OUTLINED_FUNCTION_80_0();
  CircularBuffer<A>.hash(into:)();
  return sub_1A594CED0();
}

uint64_t sub_1A5677230()
{
  return CircularBuffer<A>.hashValue.getter();
}

void sub_1A5677248()
{
  CircularBuffer<A>.hash(into:)();
}

uint64_t sub_1A5677260()
{
  sub_1A594CE64();
  CircularBuffer<A>.hash(into:)();
  return sub_1A594CED0();
}

void CircularBuffer.init(arrayLiteral:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for CircularBuffer(0, a2, a3, a4);
  sub_1A594BAF0();
  OUTLINED_FUNCTION_45_0();
}

void sub_1A5677300()
{
  OUTLINED_FUNCTION_16_6();
}

uint64_t sub_1A5677310()
{
  uint64_t v1;

  sub_1A594BF88();
  return v1;
}

void sub_1A567734C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  CircularBuffer.init(arrayLiteral:)(a1, *(_QWORD *)(a2 + 16), a3, a4);
}

uint64_t sub_1A5677364(uint64_t result, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  *v3 = result;
  v3[1] = a2;
  v3[2] = a3;
  return result;
}

uint64_t sub_1A5677378@<X0>(_QWORD *a1@<X8>)
{
  return sub_1A56761F8(a1);
}

unint64_t sub_1A5677394(unint64_t result, uint64_t a2)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (*(_QWORD *)(a2 + 16) <= result)
LABEL_5:
    __break(1u);
  return result;
}

uint64_t type metadata accessor for CircularBuffer.Index(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CircularBuffer.Index);
}

uint64_t sub_1A56773D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + 16) - 8) + 16))(a2, a1);
}

uint64_t sub_1A56773E8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A567740C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A56767AC(*(void (**)(void))(v1 + 40), *(_QWORD *)(v1 + 16), a1);
}

void sub_1A567741C(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;

  if (!*a1)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract_0(a2);
    atomic_store(MEMORY[0x1A85B1874](a3, v5), a1);
  }
  OUTLINED_FUNCTION_1();
}

uint64_t type metadata accessor for CircularBuffer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CircularBuffer);
}

uint64_t sub_1A5677468()
{
  return sub_1A594B37C() & 1;
}

uint64_t sub_1A5677490(uint64_t a1)
{
  uint64_t v1;

  return sub_1A5676FF4(a1, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 32)) & 1;
}

void sub_1A56774B0()
{
  JUMPOUT(0x1A85B1874);
}

void sub_1A56774C0()
{
  JUMPOUT(0x1A85B1874);
}

void sub_1A56774D0()
{
  JUMPOUT(0x1A85B1874);
}

void sub_1A56774E0()
{
  JUMPOUT(0x1A85B1874);
}

void sub_1A56774F0()
{
  JUMPOUT(0x1A85B1874);
}

void sub_1A5677500()
{
  JUMPOUT(0x1A85B1874);
}

void sub_1A5677510()
{
  JUMPOUT(0x1A85B1874);
}

void sub_1A5677520()
{
  JUMPOUT(0x1A85B1874);
}

uint64_t sub_1A5677530(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x1A85B1874](&protocol conformance descriptor for CircularBuffer<A>);
  return MEMORY[0x1A85B1874](MEMORY[0x1E0DEA220], a1, &v3);
}

void sub_1A5677578()
{
  JUMPOUT(0x1A85B1874);
}

uint64_t sub_1A5677588(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x1A85B1874](&protocol conformance descriptor for CircularBuffer<A>);
  return MEMORY[0x1A85B1874](MEMORY[0x1E0DEA210], a1, &v3);
}

void sub_1A56775D0()
{
  JUMPOUT(0x1A85B1874);
}

uint64_t sub_1A56775E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x1A85B1874](&protocol conformance descriptor for <A> CircularBuffer<A>, a1, &v4);
}

uint64_t sub_1A5677618(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_retain();
  return a1;
}

_QWORD *sub_1A567764C(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  return a1;
}

__n128 __swift_memcpy24_8_1(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t sub_1A56776B4(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for NamespaceResponse(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

_QWORD *__swift_memcpy8_4_1(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t sub_1A567773C(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 8))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 7);
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1A5677788(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_BYTE *)(result + 7) = a2 + 1;
  }
  return result;
}

void OUTLINED_FUNCTION_1_5(void *a1)
{
  free(a1);
}

unint64_t OUTLINED_FUNCTION_2_9(unint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFFFLL | ((unint64_t)(HIBYTE(a1) != 0) << 56);
}

uint64_t OUTLINED_FUNCTION_7_9()
{
  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_8_5()
{
  uint64_t v0;
  uint64_t v1;

  __swift_storeEnumTagSinglePayload(*(_QWORD *)(v1 - 232), 1, 1, v0);
  return sub_1A594C8C4();
}

uint64_t OUTLINED_FUNCTION_9_8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *v0;
  sub_1A5677394(v3, *v0);
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v4 + 40))(v5+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v3, v2, v1);
}

uint64_t OUTLINED_FUNCTION_10_5(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_11_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_12_6()
{
  return sub_1A594C354();
}

void *OUTLINED_FUNCTION_14_3(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  *v4 = a1;
  *a1 = v3;
  a1[1] = v1;
  v5 = *(_QWORD *)(v1 + 16);
  a1[2] = v2;
  a1[3] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  a1[4] = v6;
  return malloc(*(_QWORD *)(v6 + 64));
}

uint64_t OUTLINED_FUNCTION_15_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v0, v1, v2);
}

void OUTLINED_FUNCTION_16_6()
{
  JUMPOUT(0x1A85B1874);
}

uint64_t OUTLINED_FUNCTION_17_4()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_22_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

void OUTLINED_FUNCTION_23_3(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  CircularBuffer.endIndex.getter(a1, v2, v1);
}

void OUTLINED_FUNCTION_25_1()
{
  uint64_t *v0;

  CircularBuffer.count.getter(*v0, v0[1], v0[2]);
}

uint64_t OUTLINED_FUNCTION_29_2()
{
  return sub_1A594C8C4();
}

uint64_t OUTLINED_FUNCTION_31_1()
{
  uint64_t v0;

  return v0;
}

unint64_t OUTLINED_FUNCTION_32_2(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return CircularBuffer.subscript.setter(a1, v1, v2, v3, v4);
}

unint64_t OUTLINED_FUNCTION_33_1(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return CircularBuffer.subscript.setter(a1, v1, v4, v2, v3);
}

unint64_t OUTLINED_FUNCTION_34_1(unint64_t a1)
{
  uint64_t v1;

  return sub_1A5677394(a1, v1);
}

uint64_t OUTLINED_FUNCTION_38_1()
{
  return sub_1A594C888();
}

uint64_t OUTLINED_FUNCTION_41_1()
{
  uint64_t v0;
  uint64_t v1;

  __swift_storeEnumTagSinglePayload(v1, 1, 1, v0);
  return sub_1A594C84C();
}

uint64_t OUTLINED_FUNCTION_42_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_getEnumTagSinglePayload(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_43_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_44_0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

void OUTLINED_FUNCTION_45_0()
{
  JUMPOUT(0x1A85B1874);
}

unint64_t OUTLINED_FUNCTION_46_0(unint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFFFLL | ((unint64_t)(HIBYTE(a1) != 0) << 56);
}

uint64_t OUTLINED_FUNCTION_48_0()
{
  return sub_1A594C540();
}

uint64_t OUTLINED_FUNCTION_49_1()
{
  return sub_1A594B9F4();
}

uint64_t OUTLINED_FUNCTION_50_1()
{
  return sub_1A594C8C4();
}

uint64_t OUTLINED_FUNCTION_51_1()
{
  return swift_release();
}

void OUTLINED_FUNCTION_52_1(void *a1)
{
  free(a1);
}

void *OUTLINED_FUNCTION_53_2()
{
  return malloc(0x38uLL);
}

uint64_t OUTLINED_FUNCTION_55_0()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_56_2()
{
  CircularBuffer.mask.getter();
}

uint64_t OUTLINED_FUNCTION_57_1(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 40))(a1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_58_0()
{
  uint64_t *v0;

  return __swift_instantiateConcreteTypeFromMangledName_0(v0);
}

__n128 OUTLINED_FUNCTION_60_0()
{
  uint64_t v0;
  __n128 result;

  *(_QWORD *)(v0 - 200) = *(_QWORD *)(v0 - 136);
  result = *(__n128 *)(v0 - 112);
  *(_OWORD *)(v0 - 192) = *(_OWORD *)(v0 - 128);
  *(__n128 *)(v0 - 176) = result;
  return result;
}

void OUTLINED_FUNCTION_61_0(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
}

uint64_t OUTLINED_FUNCTION_62_0()
{
  uint64_t v0;

  return v0 - 136;
}

uint64_t OUTLINED_FUNCTION_63_0()
{
  uint64_t v0;

  return v0 - 136;
}

void OUTLINED_FUNCTION_64_0()
{
  CircularBuffer.subscript.setter();
}

uint64_t OUTLINED_FUNCTION_66_0(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 - 96) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_67_0()
{
  uint64_t v0;

  return v0 - 88;
}

uint64_t OUTLINED_FUNCTION_68_0()
{
  return swift_release();
}

void OUTLINED_FUNCTION_69_0()
{
  CircularBuffer.mask.getter();
}

void OUTLINED_FUNCTION_70_0()
{
  CircularBuffer.advanceTailIdx(by:)(-1);
}

uint64_t OUTLINED_FUNCTION_71_0()
{
  return sub_1A594C354();
}

void OUTLINED_FUNCTION_73_0()
{
  int v0;
  uint64_t v1;

  *(_DWORD *)(v1 - 200) = v0;
}

void OUTLINED_FUNCTION_74_0(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  sub_1A567741C(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_75_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_76_0()
{
  uint64_t v0;

  return v0 - 176;
}

uint64_t OUTLINED_FUNCTION_77_0()
{
  uint64_t v0;
  uint64_t v1;

  __swift_storeEnumTagSinglePayload(v1, 1, 1, v0);
  return v1;
}

uint64_t OUTLINED_FUNCTION_78_0()
{
  return sub_1A594CC9C();
}

void OUTLINED_FUNCTION_79_0()
{
  JUMPOUT(0x1A85B1874);
}

uint64_t OUTLINED_FUNCTION_82_0()
{
  return sub_1A594B5F8();
}

void OUTLINED_FUNCTION_83_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  CircularBuffer.startIndex.getter(a1, a2, a3);
}

unint64_t OUTLINED_FUNCTION_84_0(uint64_t a1, uint64_t a2)
{
  return CircularBuffer.distance(from:to:)(a1, a2);
}

uint64_t OUTLINED_FUNCTION_85_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

void OUTLINED_FUNCTION_86_0()
{
  void *v0;

  free(v0);
}

void OUTLINED_FUNCTION_87_0(char a1@<W8>)
{
  char v1;
  uint64_t v2;

  *(_BYTE *)(v2 + 6) = v1;
  *(_BYTE *)(v2 + 7) = a1;
}

__n128 OUTLINED_FUNCTION_88_0()
{
  uint64_t v0;
  __n128 result;

  *(_QWORD *)(v0 - 160) = *(_QWORD *)(v0 - 200);
  result = *(__n128 *)(v0 - 192);
  *(__n128 *)(v0 - 152) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_89_0()
{
  return swift_release();
}

unint64_t OUTLINED_FUNCTION_90_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return CircularBuffer.subscript.getter(a1, a2, a3, a4, v4);
}

uint64_t OUTLINED_FUNCTION_94_0()
{
  return sub_1A594C354();
}

uint64_t OUTLINED_FUNCTION_95_0()
{
  return sub_1A594CFA8();
}

uint64_t OUTLINED_FUNCTION_96_0()
{
  return sub_1A594C354();
}

uint64_t OUTLINED_FUNCTION_98_0()
{
  return sub_1A594C7EC();
}

unint64_t OUTLINED_FUNCTION_99_0(uint64_t a1, uint64_t a2)
{
  return CircularBuffer.distance(from:to:)(a1, a2);
}

void *OUTLINED_FUNCTION_100_0(uint64_t a1)
{
  size_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  return malloc(v1);
}

void OUTLINED_FUNCTION_101_0()
{
  void *v0;

  free(v0);
}

uint64_t OUTLINED_FUNCTION_103_0()
{
  uint64_t v0;

  return v0;
}

uint64_t IOError.init(errnoCode:reason:)(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t IOError.reason.getter(uint64_t a1)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t IOError.errnoCode.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t IOError.init(errnoCode:function:)()
{
  return sub_1A594C744();
}

uint64_t sub_1A5677E98(int a1, uint64_t a2)
{
  uint64_t v4;

  if (strerror(a1))
  {
    sub_1A594C720();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_bridgeObjectRelease();
    v4 = a2;
    sub_1A594B5F8();
    sub_1A594B610();
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
    sub_1A594B5F8();
    sub_1A594CC9C();
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
    sub_1A594B5F8();
  }
  else
  {
    sub_1A594C720();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_bridgeObjectRelease();
    v4 = a2;
    sub_1A594B5F8();
    sub_1A594CC9C();
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
  }
  return v4;
}

uint64_t sub_1A5678024()
{
  uint64_t v0;

  return IOError.description.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(unsigned int *)(v0 + 16));
}

uint64_t sub_1A5678034(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for IOError(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy20_8_1(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for IOError(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for IOError(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 20))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for IOError()
{
  return &type metadata for IOError;
}

uint64_t sub_1A5678160(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if ((a4 & 1) != 0)
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return result;
}

uint64_t destroy for IOError.FailureDescription(uint64_t a1)
{
  return sub_1A5678184(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned __int8 *)(a1 + 16), *(_BYTE *)(a1 + 17));
}

uint64_t sub_1A5678184(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if ((a4 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s12NIOIMAPCore27IOErrorV18FailureDescriptionOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 17);
  v6 = *(unsigned __int8 *)(a2 + 16);
  sub_1A5678160(*(_QWORD *)a2, v4, v6, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 17) = v5;
  return a1;
}

uint64_t assignWithCopy for IOError.FailureDescription(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 17);
  v6 = *(unsigned __int8 *)(a2 + 16);
  sub_1A5678160(*(_QWORD *)a2, v4, v6, v5);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_BYTE *)(a1 + 17);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v10 = *(unsigned __int8 *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 17) = v5;
  sub_1A5678184(v7, v8, v10, v9);
  return a1;
}

__n128 __swift_memcpy18_8_0(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for IOError.FailureDescription(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 17);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_BYTE *)(a1 + 17);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v8 = *(unsigned __int8 *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 17) = v4;
  sub_1A5678184(v5, v6, v8, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for IOError.FailureDescription(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 18))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 17);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IOError.FailureDescription(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 18) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 18) = 0;
    if (a2)
      *(_BYTE *)(result + 17) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A5678344(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 17);
}

uint64_t sub_1A567834C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 17) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for IOError.FailureDescription()
{
  return &type metadata for IOError.FailureDescription;
}

_DWORD *__swift_memcpy4_4(_DWORD *result, _DWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for IOError.Error(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 4))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for IOError.Error(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 4) = v3;
  return result;
}

ValueMetadata *type metadata accessor for IOError.Error()
{
  return &type metadata for IOError.Error;
}

uint64_t OUTLINED_FUNCTION_0_14(uint64_t a1, uint64_t a2, int a3)
{
  return sub_1A5677E98(a3, a1);
}

void static _IntegerBitPacking.packUU<A, B, C>(_:_:type:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X6>, uint64_t a5@<X8>, uint64_t a6)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v24 = a4;
  v25 = a2;
  v28 = a5;
  v26 = a6;
  v8 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  OUTLINED_FUNCTION_4_11();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *(_QWORD *)(v12 - 8);
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v24 - v17;
  v20 = MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v24 - v21;
  (*(void (**)(char *, double))(v23 + 16))(v11, v20);
  OUTLINED_FUNCTION_3_9();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, v25, a3);
  OUTLINED_FUNCTION_3_9();
  v29 = sub_1A594C960();
  sub_1A566F64C();
  sub_1A594C4EC();
  sub_1A594C4D4();
  OUTLINED_FUNCTION_5_7((uint64_t)v15);
  OUTLINED_FUNCTION_5_7((uint64_t)v18);
  OUTLINED_FUNCTION_5_7((uint64_t)v22);
  OUTLINED_FUNCTION_1_3();
}

void static _IntegerBitPacking.unpackUU<A, B, C>(_:leftType:rightType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  _QWORD v34[3];
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;

  v37 = a3;
  v39 = a1;
  v40 = a2;
  v35 = a13;
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_4_11();
  v38 = *(_QWORD *)(v16 - 8);
  OUTLINED_FUNCTION_39_1();
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v36 = (char *)v34 - v21;
  MEMORY[0x1E0C80A78](v22);
  v42 = (char *)v34 - v23;
  MEMORY[0x1E0C80A78](v24);
  v41 = (uint64_t)v34 - v25;
  MEMORY[0x1E0C80A78](v26);
  v34[0] = (char *)v34 - v27;
  sub_1A594C984();
  v34[2] = *(_QWORD *)(a11 + 8);
  OUTLINED_FUNCTION_2_10();
  v28 = v35;
  sub_1A594C984();
  v34[1] = *(_QWORD *)(v28 + 8);
  OUTLINED_FUNCTION_2_10();
  OUTLINED_FUNCTION_6_8();
  v43 = sub_1A594C960();
  sub_1A566F64C();
  sub_1A594C4E0();
  v29 = (uint64_t)v36;
  v30 = v34[0];
  OUTLINED_FUNCTION_6_8();
  v31 = v38;
  OUTLINED_FUNCTION_1_6((uint64_t)v19);
  v32 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 16);
  v32(v19, v29, a6);
  sub_1A594C528();
  v33 = (uint64_t)v42;
  v32(v19, (uint64_t)v42, a6);
  sub_1A594C528();
  OUTLINED_FUNCTION_1_6(v29);
  OUTLINED_FUNCTION_1_6(v33);
  OUTLINED_FUNCTION_1_6(v41);
  OUTLINED_FUNCTION_1_6(v30);
  OUTLINED_FUNCTION_1_3();
}

unint64_t static IntegerBitPacking.packUInt32UInt16UInt8(_:_:_:)(unsigned int a1, unsigned __int16 a2, unsigned __int8 a3)
{
  return ((unint64_t)a2 << 32) | ((unint64_t)a3 << 48) | a1;
}

uint64_t static IntegerBitPacking.unpackUInt32UInt16UInt8(_:)(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFFFLL;
}

uint64_t static IntegerBitPacking.packUInt8UInt8(_:_:)(int a1, unsigned __int8 a2)
{
  return a2 | (a1 << 8);
}

uint64_t static IntegerBitPacking.unpackUInt8UInt8(_:)(unsigned int a1)
{
  return bswap32(a1) >> 16;
}

uint64_t static IntegerBitPacking.packUInt16UInt8(_:_:)(unsigned __int16 a1, unsigned __int8 a2)
{
  return a2 | (a1 << 8);
}

uint64_t static IntegerBitPacking.unpackUInt16UInt8(_:)(unsigned int a1)
{
  return (unsigned __int16)(a1 >> 8) | (a1 << 16);
}

unint64_t static IntegerBitPacking.packUInt32CInt(_:_:)(uint64_t a1, unsigned int a2)
{
  return a2 | (unint64_t)(a1 << 32);
}

uint64_t static IntegerBitPacking.unpackUInt32CInt(_:)(uint64_t a1)
{
  return __ROR8__(a1, 32);
}

ValueMetadata *type metadata accessor for _IntegerBitPacking()
{
  return &type metadata for _IntegerBitPacking;
}

ValueMetadata *type metadata accessor for IntegerBitPacking()
{
  return &type metadata for IntegerBitPacking;
}

uint64_t OUTLINED_FUNCTION_1_6(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_2_10()
{
  return sub_1A594C528();
}

uint64_t OUTLINED_FUNCTION_3_9()
{
  return sub_1A594C528();
}

uint64_t OUTLINED_FUNCTION_5_7(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_6_8()
{
  return sub_1A594C4C8();
}

BOOL static _UInt24.== infix(_:_:)(int a1, int a2)
{
  return (a1 & 0xFFFFFF) == (a2 & 0xFFFFFF);
}

uint64_t UInt32.init(_:)(int a1)
{
  return BYTE2(a1) | ((unsigned __int16)a1 << 8);
}

uint64_t _UInt24.init(_:)(unsigned int a1)
{
  return (unsigned __int16)(a1 >> 8) | (a1 << 16);
}

void *_UInt24.max.unsafeMutableAddressor()
{
  return &static _UInt24.max;
}

uint64_t Int.init(_:)(int a1)
{
  return BYTE2(a1) | ((unsigned __int16)a1 << 8);
}

uint64_t _UInt24._backing.getter(int a1)
{
  return a1 & 0xFFFFFF;
}

uint64_t _UInt24._backing.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_WORD *)v2 = result;
  *(_BYTE *)(v2 + 2) = a2;
  return result;
}

double (*_UInt24._backing.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t static _UInt24.max.getter()
{
  return 0xFFFFFFLL;
}

void *_UInt24.min.unsafeMutableAddressor()
{
  return &static _UInt24.min;
}

uint64_t static _UInt24.min.getter()
{
  return 0;
}

BOOL sub_1A56789C4(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return static _UInt24.== infix(_:_:)(*a1 | (*((unsigned __int8 *)a1 + 2) << 16), *a2 | (*((unsigned __int8 *)a2 + 2) << 16));
}

void _UInt24.description.getter()
{
  sub_1A5678A1C();
  sub_1A594C51C();
  OUTLINED_FUNCTION_0_15();
}

unint64_t sub_1A5678A1C()
{
  unint64_t result;

  result = qword_1EE79B4C0;
  if (!qword_1EE79B4C0)
  {
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEE138], MEMORY[0x1E0DEE0F8]);
    atomic_store(result, (unint64_t *)&qword_1EE79B4C0);
  }
  return result;
}

void sub_1A5678A58()
{
  _UInt24.description.getter();
}

uint64_t __swift_memcpy3_2(uint64_t result, __int16 *a2)
{
  __int16 v2;

  v2 = *a2;
  *(_BYTE *)(result + 2) = *((_BYTE *)a2 + 2);
  *(_WORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for _UInt24(unsigned __int16 *a1, int a2)
{
  int v2;

  if (a2)
  {
    if ((a2 + 0x1FFFFFF) >> 24)
    {
      v2 = *((unsigned __int8 *)a1 + 3);
      if (*((_BYTE *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 0xFFFFFF;
    }
    else
    {
      v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 0xFFFFFF;
    }
  }
  return 0;
}

uint64_t storeEnumTagSinglePayload for _UInt24(uint64_t result, int a2, int a3)
{
  int v3;
  unsigned int v4;

  if ((a3 + 0x1FFFFFF) >> 24)
    v3 = 1;
  else
    v3 = 2;
  if (!a3)
    v3 = 0;
  if (a2)
  {
    *(_WORD *)result = a2 - 1;
    *(_BYTE *)(result + 2) = (a2 - 1) >> 16;
    if (v3)
    {
      v4 = ((a2 - 1) >> 24) + 1;
      if (v3 == 2)
        *(_WORD *)(result + 3) = v4;
      else
        *(_BYTE *)(result + 3) = v4;
    }
  }
  else if (v3)
  {
    if (v3 == 2)
      *(_WORD *)(result + 3) = 0;
    else
      *(_BYTE *)(result + 3) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for _UInt24()
{
  return &type metadata for _UInt24;
}

BOOL sub_1A5678B48(uint64_t a1, uint64_t a2)
{
  return (a1 & 0xFFFFFFFFFFFFFFLL) == (a2 & 0xFFFFFFFFFFFFFFLL);
}

BOOL sub_1A5678B5C(unsigned int *a1, unsigned int *a2)
{
  return sub_1A5678B48(*a1 | ((unint64_t)*((unsigned __int16 *)a1 + 2) << 32) | ((unint64_t)*((unsigned __int8 *)a1 + 6) << 48), *a2 | ((unint64_t)*((unsigned __int16 *)a2 + 2) << 32) | ((unint64_t)*((unsigned __int8 *)a2 + 6) << 48));
}

void sub_1A5678B88()
{
  sub_1A5678BD8();
  sub_1A594C51C();
  OUTLINED_FUNCTION_0_15();
}

void sub_1A5678BC0()
{
  sub_1A5678B88();
}

unint64_t sub_1A5678BD8()
{
  unint64_t result;

  result = qword_1EE79B4D8;
  if (!qword_1EE79B4D8)
  {
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEE1C8], MEMORY[0x1E0DEE190]);
    atomic_store(result, (unint64_t *)&qword_1EE79B4D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for _UInt56()
{
  return &type metadata for _UInt56;
}

void NIONetworkInterface.name.getter()
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_1();
}

void NIONetworkInterface.address.getter()
{
  swift_retain();
  OUTLINED_FUNCTION_1();
}

void NIONetworkInterface.netmask.getter()
{
  OUTLINED_FUNCTION_13_5();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1A5678C98(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return swift_retain();
  return result;
}

void NIONetworkInterface.broadcastAddress.getter()
{
  OUTLINED_FUNCTION_13_5();
  OUTLINED_FUNCTION_1();
}

void NIONetworkInterface.pointToPointDestinationAddress.getter()
{
  OUTLINED_FUNCTION_13_5();
  OUTLINED_FUNCTION_1();
}

uint64_t NIONetworkInterface.multicastSupported.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t NIONetworkInterface.interfaceIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 72);
}

uint64_t sub_1A5678CF8(uint64_t result)
{
  int64x2_t *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  char *v10;
  char v11;
  char v12[8];
  char v13[8];
  char v14[8];
  char *v15;
  char *v16;
  char *v17;

  v2 = *(void **)(result + 8);
  if (v2)
  {
    v3 = result;
    v1[1].i64[0] = sub_1A594B610();
    v1[1].i64[1] = v4;
    v5 = *(char **)(v3 + 24);
    if (!v5 || (v6 = sub_1A5678EB8(v5), (~v6 & 0xF000000000000007) == 0))
    {
      swift_bridgeObjectRelease();
LABEL_24:
      OUTLINED_FUNCTION_27_2();
      return 0;
    }
    v7 = v6;
    v1[2].i64[0] = v6;
    sub_1A567A3F4(v3 + 32, (uint64_t)v14);
    sub_1A567A3F4((uint64_t)v14, (uint64_t)&v15);
    v8 = v15;
    if (v15)
    {
      OUTLINED_FUNCTION_28_3();
      v1[2].i64[1] = sub_1A5678EB8(v8);
      v9 = *(_DWORD *)(v3 + 16);
      if ((v9 & 2) != 0)
      {
LABEL_13:
        sub_1A567A3F4(v3 + 40, (uint64_t)v13);
        sub_1A567A3F4((uint64_t)v13, (uint64_t)&v16);
        if (v16)
        {
          v1[3].i64[0] = sub_1A5678EB8(v16);
          v1[3].i64[1] = 0xF000000000000007;
          goto LABEL_18;
        }
        v9 = *(_DWORD *)(v3 + 16);
        if ((v9 & 0x10) == 0)
        {
LABEL_21:
          v1[3] = vdupq_n_s64(0xF000000000000007);
          if ((v9 & 0x8000) == 0)
            goto LABEL_19;
          goto LABEL_22;
        }
LABEL_16:
        sub_1A567A3F4(v3 + 40, (uint64_t)v12);
        sub_1A567A3F4((uint64_t)v12, (uint64_t)&v17);
        v10 = v17;
        if (v17)
        {
          v1[3].i64[0] = 0xF000000000000007;
          v1[3].i64[1] = sub_1A5678EB8(v10);
LABEL_18:
          if ((*(_BYTE *)(v3 + 17) & 0x80) == 0)
          {
LABEL_19:
            v11 = 0;
LABEL_23:
            OUTLINED_FUNCTION_32_3(v11);
            sub_1A5679184(v7);

            OUTLINED_FUNCTION_40_2();
            OUTLINED_FUNCTION_39_2();
            sub_1A5679184(v1[2].i64[1]);
            sub_1A5679184(v1[3].i64[0]);
            sub_1A5679184(v1[3].i64[1]);
            goto LABEL_24;
          }
LABEL_22:
          v11 = 1;
          goto LABEL_23;
        }
        v9 = *(_DWORD *)(v3 + 16);
        goto LABEL_21;
      }
    }
    else
    {
      v1[2].i64[1] = 0xF000000000000007;
      v9 = *(_DWORD *)(v3 + 16);
      if ((v9 & 2) != 0)
      {
        OUTLINED_FUNCTION_28_3();
        goto LABEL_13;
      }
      OUTLINED_FUNCTION_28_3();
    }
    if ((v9 & 0x10) == 0)
      goto LABEL_21;
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

unint64_t sub_1A5678EB8(char *a1)
{
  int v2;
  char v3;
  __int16 v4;
  int v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t result;
  char v17;
  __int16 v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v39 = *MEMORY[0x1E0C80C00];
  v2 = a1[1];
  switch(v2)
  {
    case 1:
      v28 = *a1;
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A92D8);
      v29 = swift_allocObject();
      *(_BYTE *)(v29 + 16) = v28;
      *(_BYTE *)(v29 + 17) = 1;
      *(_OWORD *)(v29 + 18) = *(_OWORD *)(a1 + 2);
      *(_OWORD *)(v29 + 34) = *(_OWORD *)(a1 + 18);
      *(_OWORD *)(v29 + 50) = *(_OWORD *)(a1 + 34);
      v30 = *(_OWORD *)(a1 + 66);
      v31 = *(_OWORD *)(a1 + 82);
      v32 = *(_QWORD *)(a1 + 98);
      *(_OWORD *)(v29 + 66) = *(_OWORD *)(a1 + 50);
      *(_OWORD *)(v29 + 82) = v30;
      *(_OWORD *)(v29 + 98) = v31;
      result = v29 | 0x8000000000000000;
      *(_QWORD *)(v29 + 114) = v32;
      break;
    case 30:
      v17 = *a1;
      v18 = *((_WORD *)a1 + 1);
      v19 = *((_DWORD *)a1 + 1);
      v21 = *((_QWORD *)a1 + 2);
      v22 = *((_DWORD *)a1 + 6);
      v37 = *((_QWORD *)a1 + 1);
      v20 = v37;
      v38 = v21;
      sub_1A567B168(30, &v37, 0x2EuLL);
      v24 = v23;
      v26 = v25;
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A92E0);
      v27 = swift_allocObject();
      *(_BYTE *)(v27 + 16) = v17;
      *(_BYTE *)(v27 + 17) = 30;
      *(_WORD *)(v27 + 18) = v18;
      *(_DWORD *)(v27 + 20) = v19;
      *(_QWORD *)(v27 + 24) = v20;
      *(_QWORD *)(v27 + 32) = v21;
      *(_DWORD *)(v27 + 40) = v22;
      result = v27 | 0x4000000000000000;
      *(_QWORD *)(v27 + 48) = v24;
      *(_QWORD *)(v27 + 56) = v26;
      break;
    case 2:
      v4 = *((_WORD *)a1 + 1);
      v5 = *((_DWORD *)a1 + 1);
      v6 = a1[8];
      v7 = a1[9];
      v8 = a1[10];
      v9 = a1[11];
      v10 = a1[12];
      v11 = a1[13];
      v12 = a1[14];
      v13 = a1[15];
      v3 = *a1;
      BYTE1(v37) = 2;
      WORD1(v37) = v4;
      HIDWORD(v37) = v5;
      LOBYTE(v38) = v6;
      BYTE1(v38) = v7;
      BYTE2(v38) = v8;
      BYTE3(v38) = v9;
      BYTE4(v38) = v10;
      v35 = v12;
      v36 = v11;
      BYTE5(v38) = v11;
      BYTE6(v38) = v12;
      HIBYTE(v38) = v13;
      sub_1A567B168(2, (char *)&v37 + 4, 0x10uLL);
      v33 = v15;
      v34 = v14;
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A92E8);
      result = swift_allocObject();
      *(_BYTE *)(result + 16) = v3;
      *(_BYTE *)(result + 17) = 2;
      *(_WORD *)(result + 18) = v4;
      *(_DWORD *)(result + 20) = v5;
      *(_BYTE *)(result + 24) = v6;
      *(_BYTE *)(result + 25) = v7;
      *(_BYTE *)(result + 26) = v8;
      *(_BYTE *)(result + 27) = v9;
      *(_BYTE *)(result + 28) = v10;
      *(_BYTE *)(result + 29) = v36;
      *(_BYTE *)(result + 30) = v35;
      *(_BYTE *)(result + 31) = v13;
      *(_QWORD *)(result + 32) = v34;
      *(_QWORD *)(result + 40) = v33;
      break;
    default:
      return 0xF000000000000007;
  }
  return result;
}

uint64_t *NIONetworkInterface.deinit()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_40_2();
  OUTLINED_FUNCTION_39_2();
  sub_1A5679184(v0[5]);
  sub_1A5679184(v0[6]);
  sub_1A5679184(v0[7]);
  return v0;
}

uint64_t sub_1A5679184(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return swift_release();
  return result;
}

uint64_t NIONetworkInterface.__deallocating_deinit()
{
  NIONetworkInterface.deinit();
  return swift_deallocClassInstance();
}

uint64_t NIONetworkInterface.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  char v4;

  v1 = v0;
  sub_1A594C720();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_46_1();
  OUTLINED_FUNCTION_41_2();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_43_1();
  sub_1A594B5F8();
  v2 = *(_QWORD *)(v0 + 32);
  swift_retain();
  SocketAddress.description.getter(v2);
  sub_1A594B5F8();
  swift_release();
  OUTLINED_FUNCTION_72();
  v3 = *(_QWORD *)(v1 + 40);
  OUTLINED_FUNCTION_23_4();
  if (!v4)
  {
    OUTLINED_FUNCTION_25_2();
    OUTLINED_FUNCTION_21_5();
    SocketAddress.description.getter(v3);
    sub_1A594B5F8();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_9_9();
  }
  OUTLINED_FUNCTION_90();
  OUTLINED_FUNCTION_37_2();
  OUTLINED_FUNCTION_52();
  OUTLINED_FUNCTION_17();
  return 0x6361667265746E49;
}

uint64_t sub_1A56792D8()
{
  return NIONetworkInterface.debugDescription.getter();
}

void static NIONetworkInterface.== infix(_:_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_24_1(a1);
  v6 = v6 && v4 == v5;
  if ((v6 || (sub_1A594CD38() & 1) != 0)
    && static SocketAddress.== infix(_:_:)(*(_QWORD *)(v2 + 32), *(_QWORD *)(v1 + 32)))
  {
    OUTLINED_FUNCTION_11_6();
    if (v6)
    {
      if (v8 != v7)
        goto LABEL_26;
    }
    else
    {
      if (v8 == v7)
        goto LABEL_26;
      OUTLINED_FUNCTION_2_11();
      OUTLINED_FUNCTION_4_12();
      if ((v3 & 1) == 0)
        goto LABEL_26;
    }
    OUTLINED_FUNCTION_11_6();
    if (v6)
    {
      if (v10 != v9)
        goto LABEL_26;
    }
    else
    {
      if (v10 == v9)
        goto LABEL_26;
      OUTLINED_FUNCTION_2_11();
      OUTLINED_FUNCTION_4_12();
      if ((v3 & 1) == 0)
        goto LABEL_26;
    }
    OUTLINED_FUNCTION_11_6();
    if (v6)
    {
      if (v12 != v11)
        goto LABEL_26;
      goto LABEL_25;
    }
    if (v12 != v11)
    {
      OUTLINED_FUNCTION_2_11();
      OUTLINED_FUNCTION_4_12();
      if ((v3 & 1) != 0)
LABEL_25:
        OUTLINED_FUNCTION_45_1();
    }
  }
LABEL_26:
  OUTLINED_FUNCTION_17_1();
}

uint64_t sub_1A56793E0(uint64_t *a1)
{
  char v1;

  static NIONetworkInterface.== infix(_:_:)(*a1);
  return v1 & 1;
}

void NIONetworkDevice.name.getter()
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_1();
}

uint64_t NIONetworkDevice.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  int64x2_t *v6;
  uint64_t v7;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    OUTLINED_FUNCTION_6_9();
    OUTLINED_FUNCTION_0_16();
    v5 = OUTLINED_FUNCTION_155();
    v6 = sub_1A5679E24(v5);
    OUTLINED_FUNCTION_3_10((uint64_t)v6);
  }
  v7 = *v2;
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  return OUTLINED_FUNCTION_17_5();
}

void NIONetworkDevice.name.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  *a1 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  a1[1] = v3;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1A56794C4(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  int64x2_t *v6;
  uint64_t v7;
  uint64_t v8;
  int64x2_t *v9;
  uint64_t v10;

  v3 = *a1;
  v2 = a1[1];
  v4 = (uint64_t *)a1[2];
  if ((a2 & 1) != 0)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      OUTLINED_FUNCTION_6_9();
      OUTLINED_FUNCTION_0_16();
      v5 = OUTLINED_FUNCTION_7_10();
      v6 = OUTLINED_FUNCTION_12_7(v5);
      OUTLINED_FUNCTION_29_3((uint64_t)v6);
    }
    v7 = *v4;
    *(_QWORD *)(v7 + 16) = v3;
    *(_QWORD *)(v7 + 24) = v2;
    OUTLINED_FUNCTION_17();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      OUTLINED_FUNCTION_6_9();
      OUTLINED_FUNCTION_0_16();
      v8 = OUTLINED_FUNCTION_7_10();
      v9 = OUTLINED_FUNCTION_12_7(v8);
      OUTLINED_FUNCTION_29_3((uint64_t)v9);
    }
    v10 = *v4;
    *(_QWORD *)(v10 + 16) = v3;
    *(_QWORD *)(v10 + 24) = v2;
  }
  return OUTLINED_FUNCTION_17_5();
}

void NIONetworkDevice.address.getter()
{
  OUTLINED_FUNCTION_13_5();
  OUTLINED_FUNCTION_1();
}

uint64_t NIONetworkDevice.address.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int64x2_t *v3;
  uint64_t v4;

  if ((OUTLINED_FUNCTION_10_6() & 1) == 0)
  {
    OUTLINED_FUNCTION_6_9();
    OUTLINED_FUNCTION_0_16();
    v2 = OUTLINED_FUNCTION_155();
    v3 = OUTLINED_FUNCTION_22_6(v2);
    OUTLINED_FUNCTION_5_8((uint64_t)v3);
  }
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 32) = v0;
  return OUTLINED_FUNCTION_1_7(v4);
}

void NIONetworkDevice.address.modify(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_20_6(a1);
  OUTLINED_FUNCTION_34_2(*(_QWORD *)(v1 + 32));
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1A56795F0(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64x2_t *v5;
  uint64_t v6;
  uint64_t v7;
  int64x2_t *v8;
  uint64_t v9;

  v2 = *a1;
  v3 = a1[1];
  if ((a2 & 1) != 0)
  {
    sub_1A5678C98(*a1);
    if ((OUTLINED_FUNCTION_15_7() & 1) == 0)
    {
      OUTLINED_FUNCTION_6_9();
      OUTLINED_FUNCTION_0_16();
      v4 = OUTLINED_FUNCTION_7_10();
      v5 = OUTLINED_FUNCTION_12_7(v4);
      OUTLINED_FUNCTION_3_10((uint64_t)v5);
    }
    v6 = *(_QWORD *)(*(_QWORD *)v3 + 32);
    *(_QWORD *)(*(_QWORD *)v3 + 32) = v2;
    sub_1A5679184(v6);
  }
  else
  {
    if ((OUTLINED_FUNCTION_15_7() & 1) == 0)
    {
      OUTLINED_FUNCTION_6_9();
      OUTLINED_FUNCTION_0_16();
      v7 = OUTLINED_FUNCTION_7_10();
      v8 = OUTLINED_FUNCTION_12_7(v7);
      OUTLINED_FUNCTION_3_10((uint64_t)v8);
    }
    v9 = *(_QWORD *)(*(_QWORD *)v3 + 32);
    *(_QWORD *)(*(_QWORD *)v3 + 32) = v2;
    v2 = v9;
  }
  return OUTLINED_FUNCTION_1_7(v2);
}

void NIONetworkDevice.netmask.getter()
{
  OUTLINED_FUNCTION_13_5();
  OUTLINED_FUNCTION_1();
}

uint64_t NIONetworkDevice.netmask.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int64x2_t *v3;
  uint64_t v4;

  if ((OUTLINED_FUNCTION_10_6() & 1) == 0)
  {
    OUTLINED_FUNCTION_6_9();
    OUTLINED_FUNCTION_0_16();
    v2 = OUTLINED_FUNCTION_155();
    v3 = OUTLINED_FUNCTION_22_6(v2);
    OUTLINED_FUNCTION_5_8((uint64_t)v3);
  }
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  return OUTLINED_FUNCTION_1_7(v4);
}

void NIONetworkDevice.netmask.modify(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_20_6(a1);
  OUTLINED_FUNCTION_34_2(*(_QWORD *)(v1 + 40));
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1A5679710(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64x2_t *v5;
  uint64_t v6;
  uint64_t v7;
  int64x2_t *v8;
  uint64_t v9;

  v2 = *a1;
  v3 = a1[1];
  if ((a2 & 1) != 0)
  {
    sub_1A5678C98(*a1);
    if ((OUTLINED_FUNCTION_15_7() & 1) == 0)
    {
      OUTLINED_FUNCTION_6_9();
      OUTLINED_FUNCTION_0_16();
      v4 = OUTLINED_FUNCTION_7_10();
      v5 = OUTLINED_FUNCTION_12_7(v4);
      OUTLINED_FUNCTION_3_10((uint64_t)v5);
    }
    v6 = *(_QWORD *)(*(_QWORD *)v3 + 40);
    *(_QWORD *)(*(_QWORD *)v3 + 40) = v2;
    sub_1A5679184(v6);
  }
  else
  {
    if ((OUTLINED_FUNCTION_15_7() & 1) == 0)
    {
      OUTLINED_FUNCTION_6_9();
      OUTLINED_FUNCTION_0_16();
      v7 = OUTLINED_FUNCTION_7_10();
      v8 = OUTLINED_FUNCTION_12_7(v7);
      OUTLINED_FUNCTION_3_10((uint64_t)v8);
    }
    v9 = *(_QWORD *)(*(_QWORD *)v3 + 40);
    *(_QWORD *)(*(_QWORD *)v3 + 40) = v2;
    v2 = v9;
  }
  return OUTLINED_FUNCTION_1_7(v2);
}

void NIONetworkDevice.broadcastAddress.getter()
{
  OUTLINED_FUNCTION_13_5();
  OUTLINED_FUNCTION_1();
}

uint64_t NIONetworkDevice.broadcastAddress.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int64x2_t *v3;
  uint64_t v4;

  if ((OUTLINED_FUNCTION_10_6() & 1) == 0)
  {
    OUTLINED_FUNCTION_6_9();
    OUTLINED_FUNCTION_0_16();
    v2 = OUTLINED_FUNCTION_155();
    v3 = OUTLINED_FUNCTION_22_6(v2);
    OUTLINED_FUNCTION_5_8((uint64_t)v3);
  }
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  return OUTLINED_FUNCTION_1_7(v4);
}

void NIONetworkDevice.broadcastAddress.modify(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_20_6(a1);
  OUTLINED_FUNCTION_34_2(*(_QWORD *)(v1 + 48));
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1A5679830(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64x2_t *v5;
  uint64_t v6;
  uint64_t v7;
  int64x2_t *v8;
  uint64_t v9;

  v2 = *a1;
  v3 = a1[1];
  if ((a2 & 1) != 0)
  {
    sub_1A5678C98(*a1);
    if ((OUTLINED_FUNCTION_15_7() & 1) == 0)
    {
      OUTLINED_FUNCTION_6_9();
      OUTLINED_FUNCTION_0_16();
      v4 = OUTLINED_FUNCTION_7_10();
      v5 = OUTLINED_FUNCTION_12_7(v4);
      OUTLINED_FUNCTION_3_10((uint64_t)v5);
    }
    v6 = *(_QWORD *)(*(_QWORD *)v3 + 48);
    *(_QWORD *)(*(_QWORD *)v3 + 48) = v2;
    sub_1A5679184(v6);
  }
  else
  {
    if ((OUTLINED_FUNCTION_15_7() & 1) == 0)
    {
      OUTLINED_FUNCTION_6_9();
      OUTLINED_FUNCTION_0_16();
      v7 = OUTLINED_FUNCTION_7_10();
      v8 = OUTLINED_FUNCTION_12_7(v7);
      OUTLINED_FUNCTION_3_10((uint64_t)v8);
    }
    v9 = *(_QWORD *)(*(_QWORD *)v3 + 48);
    *(_QWORD *)(*(_QWORD *)v3 + 48) = v2;
    v2 = v9;
  }
  return OUTLINED_FUNCTION_1_7(v2);
}

void NIONetworkDevice.pointToPointDestinationAddress.getter()
{
  OUTLINED_FUNCTION_13_5();
  OUTLINED_FUNCTION_1();
}

uint64_t NIONetworkDevice.pointToPointDestinationAddress.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int64x2_t *v3;
  uint64_t v4;

  if ((OUTLINED_FUNCTION_10_6() & 1) == 0)
  {
    OUTLINED_FUNCTION_6_9();
    OUTLINED_FUNCTION_0_16();
    v2 = OUTLINED_FUNCTION_155();
    v3 = OUTLINED_FUNCTION_22_6(v2);
    OUTLINED_FUNCTION_5_8((uint64_t)v3);
  }
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  return OUTLINED_FUNCTION_1_7(v4);
}

void NIONetworkDevice.pointToPointDestinationAddress.modify(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_20_6(a1);
  OUTLINED_FUNCTION_34_2(*(_QWORD *)(v1 + 56));
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1A5679950(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64x2_t *v5;
  uint64_t v6;
  uint64_t v7;
  int64x2_t *v8;
  uint64_t v9;

  v2 = *a1;
  v3 = a1[1];
  if ((a2 & 1) != 0)
  {
    sub_1A5678C98(*a1);
    if ((OUTLINED_FUNCTION_15_7() & 1) == 0)
    {
      OUTLINED_FUNCTION_6_9();
      OUTLINED_FUNCTION_0_16();
      v4 = OUTLINED_FUNCTION_7_10();
      v5 = OUTLINED_FUNCTION_12_7(v4);
      OUTLINED_FUNCTION_3_10((uint64_t)v5);
    }
    v6 = *(_QWORD *)(*(_QWORD *)v3 + 56);
    *(_QWORD *)(*(_QWORD *)v3 + 56) = v2;
    sub_1A5679184(v6);
  }
  else
  {
    if ((OUTLINED_FUNCTION_15_7() & 1) == 0)
    {
      OUTLINED_FUNCTION_6_9();
      OUTLINED_FUNCTION_0_16();
      v7 = OUTLINED_FUNCTION_7_10();
      v8 = OUTLINED_FUNCTION_12_7(v7);
      OUTLINED_FUNCTION_3_10((uint64_t)v8);
    }
    v9 = *(_QWORD *)(*(_QWORD *)v3 + 56);
    *(_QWORD *)(*(_QWORD *)v3 + 56) = v2;
    v2 = v9;
  }
  return OUTLINED_FUNCTION_1_7(v2);
}

uint64_t NIONetworkDevice.multicastSupported.getter(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 64);
}

void NIONetworkDevice.multicastSupported.setter(char a1)
{
  uint64_t v1;
  uint64_t v3;
  int64x2_t *v4;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    OUTLINED_FUNCTION_6_9();
    OUTLINED_FUNCTION_0_16();
    v3 = OUTLINED_FUNCTION_155();
    v4 = OUTLINED_FUNCTION_22_6(v3);
    OUTLINED_FUNCTION_5_8((uint64_t)v4);
  }
  *(_BYTE *)(*(_QWORD *)v1 + 64) = a1 & 1;
  OUTLINED_FUNCTION_8_1();
}

void (*NIONetworkDevice.multicastSupported.modify(uint64_t a1))(uint64_t *a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(*(_QWORD *)v1 + 64);
  return sub_1A5679A5C;
}

void sub_1A5679A5C(uint64_t *a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  int64x2_t *v4;

  v1 = *a1;
  v2 = *((_BYTE *)a1 + 8);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    OUTLINED_FUNCTION_6_9();
    OUTLINED_FUNCTION_0_16();
    v3 = OUTLINED_FUNCTION_36_3();
    v4 = sub_1A5679E24(v3);
    OUTLINED_FUNCTION_5_8((uint64_t)v4);
  }
  *(_BYTE *)(*(_QWORD *)v1 + 64) = v2;
  OUTLINED_FUNCTION_8_1();
}

uint64_t NIONetworkDevice.interfaceIndex.getter(uint64_t a1)
{
  return *(_QWORD *)(a1 + 72);
}

void NIONetworkDevice.interfaceIndex.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int64x2_t *v3;

  if ((OUTLINED_FUNCTION_10_6() & 1) == 0)
  {
    OUTLINED_FUNCTION_6_9();
    OUTLINED_FUNCTION_0_16();
    v2 = OUTLINED_FUNCTION_155();
    v3 = OUTLINED_FUNCTION_22_6(v2);
    OUTLINED_FUNCTION_5_8((uint64_t)v3);
  }
  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  OUTLINED_FUNCTION_8_1();
}

void (*NIONetworkDevice.interfaceIndex.modify(_QWORD *a1))(uint64_t *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  return sub_1A5679B14;
}

void sub_1A5679B14(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int64x2_t *v4;

  v2 = *a1;
  v1 = a1[1];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    OUTLINED_FUNCTION_6_9();
    OUTLINED_FUNCTION_0_16();
    v3 = OUTLINED_FUNCTION_36_3();
    v4 = sub_1A5679E24(v3);
    OUTLINED_FUNCTION_5_8((uint64_t)v4);
  }
  *(_QWORD *)(*(_QWORD *)v1 + 72) = v2;
  OUTLINED_FUNCTION_8_1();
}

uint64_t NIONetworkDevice.init(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  v6 = *(_QWORD *)(a1 + 56);
  v7 = *(_BYTE *)(a1 + 64);
  v8 = *(_QWORD *)(a1 + 72);
  OUTLINED_FUNCTION_6_9();
  OUTLINED_FUNCTION_0_16();
  OUTLINED_FUNCTION_28_3();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5678C98(v4);
  sub_1A5678C98(v5);
  sub_1A5678C98(v6);
  v9 = sub_1A5679EDC(v1, v2, v3, v4, v5, v6, v7, v8);
  swift_release();
  return v9;
}

uint64_t NIONetworkDevice.init(name:address:netmask:broadcastAddress:pointToPointDestinationAddress:multicastSupported:interfaceIndex:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  OUTLINED_FUNCTION_6_9();
  OUTLINED_FUNCTION_0_16();
  return sub_1A5679EDC(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1A5679C98(uint64_t result)
{
  int64x2_t *v1;
  int64x2_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  int v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20[8];
  char v21[8];
  char *v22;
  char *v23;

  v2 = vdupq_n_s64(0xF000000000000007);
  v1[2] = v2;
  v1[3] = v2;
  v3 = *(void **)(result + 8);
  if (v3)
  {
    v4 = result;
    v1[1].i64[0] = sub_1A594B610();
    v1[1].i64[1] = v5;
    v6 = *(char **)(v4 + 24);
    if (v6)
      v7 = sub_1A5678EB8(v6);
    else
      v7 = 0xF000000000000007;
    v8 = v1[2].i64[0];
    v1[2].i64[0] = v7;
    OUTLINED_FUNCTION_38_2(v8);
    v9 = *(char **)(v4 + 32);
    if (v9)
      v10 = sub_1A5678EB8(v9);
    else
      v10 = 0xF000000000000007;
    v11 = v1[2].i64[1];
    v1[2].i64[1] = v10;
    OUTLINED_FUNCTION_38_2(v11);
    v12 = *(_DWORD *)(v4 + 16);
    if ((v12 & 2) != 0 && (sub_1A567A3F4(v4 + 40, (uint64_t)v21), sub_1A567A3F4((uint64_t)v21, (uint64_t)&v22), v22))
    {
      v13 = sub_1A5678EB8(v22);
      v14 = v1[3].i64[0];
      v1[3].i64[0] = v13;
      OUTLINED_FUNCTION_38_2(v14);
      v15 = 0xF000000000000007;
    }
    else if ((v12 & 0x10) != 0
           && (sub_1A567A3F4(v4 + 40, (uint64_t)v20), sub_1A567A3F4((uint64_t)v20, (uint64_t)&v23), (v16 = v23) != 0))
    {
      v17 = v1[3].i64[0];
      v1[3].i64[0] = 0xF000000000000007;
      sub_1A5679184(v17);
      v15 = sub_1A5678EB8(v16);
    }
    else
    {
      v18 = v1[3].i64[0];
      v15 = 0xF000000000000007;
      v1[3].i64[0] = 0xF000000000000007;
      sub_1A5679184(v18);
    }
    v19 = v1[3].i64[1];
    v1[3].i64[1] = v15;
    sub_1A5679184(v19);
    OUTLINED_FUNCTION_32_3((v12 & 0x8000) != 0);

    OUTLINED_FUNCTION_40_2();
    sub_1A5679184(v1[2].i64[0]);
    sub_1A5679184(v1[2].i64[1]);
    sub_1A5679184(v1[3].i64[0]);
    sub_1A5679184(v1[3].i64[1]);
    OUTLINED_FUNCTION_27_2();
    return 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

int64x2_t *sub_1A5679E24(uint64_t a1)
{
  int64x2_t *v1;
  int64x2_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = vdupq_n_s64(0xF000000000000007);
  v1[2] = v3;
  v1[3] = v3;
  v5 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v1[1].i64[0] = v5;
  v1[1].i64[1] = v4;
  v6 = *(_QWORD *)(a1 + 32);
  v1[2].i64[0] = v6;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5678C98(v6);
  sub_1A5679184(0xF000000000000007);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = v1[2].i64[1];
  v1[2].i64[1] = v7;
  sub_1A5678C98(v7);
  sub_1A5679184(v8);
  v9 = *(_QWORD *)(a1 + 48);
  v10 = v1[3].i64[0];
  v1[3].i64[0] = v9;
  sub_1A5678C98(v9);
  sub_1A5679184(v10);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = v1[3].i64[1];
  v1[3].i64[1] = v11;
  sub_1A5678C98(v11);
  sub_1A5679184(v12);
  v1[4].i8[0] = *(_BYTE *)(a1 + 64);
  v13 = *(_QWORD *)(a1 + 72);
  swift_release();
  v1[4].i64[1] = v13;
  return v1;
}

uint64_t sub_1A5679EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(int64x2_t *)(v8 + 40) = vdupq_n_s64(0xF000000000000007);
  *(_QWORD *)(v8 + 56) = 0xF000000000000007;
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = a3;
  sub_1A5679184(0xF000000000000007);
  v14 = *(_QWORD *)(v8 + 40);
  *(_QWORD *)(v8 + 40) = a4;
  sub_1A5679184(v14);
  v15 = *(_QWORD *)(v8 + 48);
  *(_QWORD *)(v8 + 48) = a5;
  sub_1A5679184(v15);
  v16 = *(_QWORD *)(v8 + 56);
  *(_QWORD *)(v8 + 56) = a6;
  sub_1A5679184(v16);
  *(_BYTE *)(v8 + 64) = a7;
  *(_QWORD *)(v8 + 72) = a8;
  return v8;
}

uint64_t *sub_1A5679F68()
{
  uint64_t *v0;

  swift_bridgeObjectRelease();
  sub_1A5679184(v0[4]);
  sub_1A5679184(v0[5]);
  sub_1A5679184(v0[6]);
  sub_1A5679184(v0[7]);
  return v0;
}

uint64_t sub_1A5679FA4()
{
  sub_1A5679F68();
  return swift_deallocClassInstance();
}

uint64_t NIONetworkDevice.debugDescription.getter(uint64_t a1)
{
  unint64_t v2;
  char v3;

  sub_1A594C720();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_46_1();
  OUTLINED_FUNCTION_41_2();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_43_1();
  sub_1A594B5F8();
  sub_1A5678C98(*(_QWORD *)(a1 + 32));
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A92C0);
  sub_1A594B490();
  sub_1A594B5F8();
  OUTLINED_FUNCTION_52();
  v2 = *(_QWORD *)(a1 + 40);
  OUTLINED_FUNCTION_23_4();
  if (!v3)
  {
    OUTLINED_FUNCTION_25_2();
    OUTLINED_FUNCTION_21_5();
    SocketAddress.description.getter(v2);
    sub_1A594B5F8();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_9_9();
  }
  OUTLINED_FUNCTION_90();
  OUTLINED_FUNCTION_37_2();
  OUTLINED_FUNCTION_52();
  OUTLINED_FUNCTION_17();
  return 0x20656369766544;
}

uint64_t sub_1A567A0E0()
{
  uint64_t *v0;

  return NIONetworkDevice.debugDescription.getter(*v0);
}

void static NIONetworkDevice.== infix(_:_:)(uint64_t a1)
{
  char v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_24_1(a1);
  v4 = v4 && v2 == v3;
  if (v4 || (sub_1A594CD38() & 1) != 0)
  {
    OUTLINED_FUNCTION_11_6();
    if (v4)
    {
      if (v6 != v5)
        goto LABEL_31;
    }
    else
    {
      if (v6 == v5)
        goto LABEL_31;
      OUTLINED_FUNCTION_2_11();
      OUTLINED_FUNCTION_4_12();
      if ((v1 & 1) == 0)
        goto LABEL_31;
    }
    OUTLINED_FUNCTION_11_6();
    if (v4)
    {
      if (v8 != v7)
        goto LABEL_31;
    }
    else
    {
      if (v8 == v7)
        goto LABEL_31;
      OUTLINED_FUNCTION_2_11();
      OUTLINED_FUNCTION_4_12();
      if ((v1 & 1) == 0)
        goto LABEL_31;
    }
    OUTLINED_FUNCTION_11_6();
    if (v4)
    {
      if (v10 != v9)
        goto LABEL_31;
    }
    else
    {
      if (v10 == v9)
        goto LABEL_31;
      OUTLINED_FUNCTION_2_11();
      OUTLINED_FUNCTION_4_12();
      if ((v1 & 1) == 0)
        goto LABEL_31;
    }
    OUTLINED_FUNCTION_11_6();
    if (v4)
    {
      if (v12 != v11)
        goto LABEL_31;
      goto LABEL_30;
    }
    if (v12 != v11)
    {
      OUTLINED_FUNCTION_2_11();
      OUTLINED_FUNCTION_4_12();
      if ((v1 & 1) != 0)
LABEL_30:
        OUTLINED_FUNCTION_45_1();
    }
  }
LABEL_31:
  OUTLINED_FUNCTION_17_1();
}

void sub_1A567A1F0(uint64_t *a1)
{
  static NIONetworkDevice.== infix(_:_:)(*a1);
}

void NIONetworkDevice.hash(into:)()
{
  char v0;

  OUTLINED_FUNCTION_90();
  sub_1A594B1D8();
  OUTLINED_FUNCTION_52();
  OUTLINED_FUNCTION_23_4();
  if (v0)
  {
    OUTLINED_FUNCTION_35_3();
  }
  else
  {
    OUTLINED_FUNCTION_30_2();
    OUTLINED_FUNCTION_21_5();
    OUTLINED_FUNCTION_19_5();
    OUTLINED_FUNCTION_9_9();
  }
  OUTLINED_FUNCTION_23_4();
  if (v0)
  {
    OUTLINED_FUNCTION_35_3();
  }
  else
  {
    OUTLINED_FUNCTION_30_2();
    OUTLINED_FUNCTION_21_5();
    OUTLINED_FUNCTION_19_5();
    OUTLINED_FUNCTION_9_9();
  }
  OUTLINED_FUNCTION_23_4();
  if (v0)
  {
    OUTLINED_FUNCTION_35_3();
  }
  else
  {
    OUTLINED_FUNCTION_30_2();
    OUTLINED_FUNCTION_21_5();
    OUTLINED_FUNCTION_19_5();
    OUTLINED_FUNCTION_9_9();
  }
  OUTLINED_FUNCTION_23_4();
  if (v0)
  {
    OUTLINED_FUNCTION_35_3();
  }
  else
  {
    OUTLINED_FUNCTION_30_2();
    OUTLINED_FUNCTION_21_5();
    OUTLINED_FUNCTION_19_5();
    OUTLINED_FUNCTION_9_9();
  }
  sub_1A594CE88();
  OUTLINED_FUNCTION_8_1();
}

uint64_t NIONetworkDevice.hashValue.getter()
{
  sub_1A594CE64();
  NIONetworkDevice.hash(into:)();
  return sub_1A594CED0();
}

uint64_t sub_1A567A314()
{
  return NIONetworkDevice.hashValue.getter();
}

void sub_1A567A31C()
{
  NIONetworkDevice.hash(into:)();
}

uint64_t sub_1A567A324()
{
  sub_1A594CE64();
  NIONetworkDevice.hash(into:)();
  return sub_1A594CED0();
}

uint64_t type metadata accessor for NIONetworkDevice.Backing()
{
  return objc_opt_self();
}

unint64_t sub_1A567A388()
{
  unint64_t result;

  result = qword_1EE7A92C8;
  if (!qword_1EE7A92C8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for NIONetworkDevice, &type metadata for NIONetworkDevice);
    atomic_store(result, (unint64_t *)&qword_1EE7A92C8);
  }
  return result;
}

uint64_t type metadata accessor for NIONetworkInterface()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for NIONetworkDevice()
{
  return &type metadata for NIONetworkDevice;
}

uint64_t sub_1A567A3F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A92D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t OUTLINED_FUNCTION_0_16()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_1_7(uint64_t result)
{
  return sub_1A5679184(result);
}

BOOL OUTLINED_FUNCTION_2_11()
{
  unint64_t v0;
  unint64_t v1;

  sub_1A5678C98(v1);
  sub_1A5678C98(v0);
  return static SocketAddress.== infix(_:_:)(v0, v1);
}

uint64_t OUTLINED_FUNCTION_3_10(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_4_12()
{
  uint64_t v0;
  uint64_t v1;

  sub_1A5679184(v1);
  return sub_1A5679184(v0);
}

uint64_t OUTLINED_FUNCTION_5_8(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_6_9()
{
  return type metadata accessor for NIONetworkDevice.Backing();
}

uint64_t OUTLINED_FUNCTION_7_10()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_9_9()
{
  uint64_t v0;

  return sub_1A5679184(v0);
}

uint64_t OUTLINED_FUNCTION_10_6()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

int64x2_t *OUTLINED_FUNCTION_12_7(uint64_t a1)
{
  return sub_1A5679E24(a1);
}

uint64_t OUTLINED_FUNCTION_13_5()
{
  uint64_t v0;

  sub_1A5678C98(v0);
  return v0;
}

uint64_t OUTLINED_FUNCTION_15_7()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_17_5()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_19_5()
{
  uint64_t v0;
  unint64_t v1;

  return SocketAddress.hash(into:)(v0, v1);
}

uint64_t OUTLINED_FUNCTION_20_6(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(result + 8) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_21_5()
{
  return swift_retain();
}

int64x2_t *OUTLINED_FUNCTION_22_6(uint64_t a1)
{
  return sub_1A5679E24(a1);
}

uint64_t OUTLINED_FUNCTION_24_1(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16);
}

uint64_t OUTLINED_FUNCTION_27_2()
{
  return swift_deallocPartialClassInstance();
}

uint64_t OUTLINED_FUNCTION_28_3()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_29_3(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_30_2()
{
  return sub_1A594CE94();
}

uint64_t OUTLINED_FUNCTION_32_3@<X0>(char a1@<W8>)
{
  uint64_t v1;
  const char *v2;

  *(_BYTE *)(v1 + 64) = a1;
  return sub_1A567CF28(v2);
}

uint64_t OUTLINED_FUNCTION_34_2(uint64_t result)
{
  uint64_t *v1;

  *v1 = result;
  return sub_1A5678C98(result);
}

uint64_t OUTLINED_FUNCTION_35_3()
{
  return sub_1A594CE94();
}

uint64_t OUTLINED_FUNCTION_36_3()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_37_2()
{
  return sub_1A594B5F8();
}

uint64_t OUTLINED_FUNCTION_38_2@<X0>(uint64_t a1@<X8>)
{
  return sub_1A5679184(a1);
}

uint64_t OUTLINED_FUNCTION_39_2()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_40_2()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_41_2()
{
  return sub_1A594B5F8();
}

uint64_t OUTLINED_FUNCTION_43_1()
{
  return 0x736572646461203ALL;
}

BOOL OUTLINED_FUNCTION_45_1()
{
  uint64_t v0;
  uint64_t v1;

  return *(_QWORD *)(v1 + 72) == *(_QWORD *)(v0 + 72);
}

uint64_t OUTLINED_FUNCTION_46_1()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t _sSW12NIOIMAPCore2E10fastRebaseSWs5SliceVySWG_tcfC_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
    return a3 + a1;
  else
    return 0;
}

BOOL static SocketAddress.== infix(_:_:)(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  _OWORD v19[6];
  uint64_t v20;
  _QWORD __s2[2];
  _QWORD __s1[4];

  __s1[3] = *MEMORY[0x1E0C80C00];
  if (a1 >> 62)
  {
    if (a1 >> 62 == 1)
    {
      if (a2 >> 62 == 1)
      {
        OUTLINED_FUNCTION_15_8();
        if (v6
          && *(unsigned __int16 *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x12) == *(unsigned __int16 *)((v3 & 0x3FFFFFFFFFFFFFFFLL)
                                                                                              + 0x12)
          && *(_DWORD *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x14) == *(_DWORD *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x14)
          && *(_DWORD *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x28) == *(_DWORD *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x28))
        {
          v4 = *(_QWORD *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
          __s1[0] = *(_QWORD *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
          __s1[1] = v4;
          v5 = *(_QWORD *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
          __s2[0] = *(_QWORD *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
          __s2[1] = v5;
          return memcmp(__s1, __s2, 0x10uLL) == 0;
        }
      }
    }
    else if (a2 >> 62 == 2)
    {
      OUTLINED_FUNCTION_15_8();
      if (v6)
      {
        v12 = v11 & 0x3FFFFFFFFFFFFFFFLL;
        v13 = *(_OWORD *)((v10 & 0x3FFFFFFFFFFFFFFFLL) + 0x22);
        v19[0] = *(_OWORD *)((v10 & 0x3FFFFFFFFFFFFFFFLL) + 0x12);
        v19[1] = v13;
        v14 = *(_OWORD *)((v10 & 0x3FFFFFFFFFFFFFFFLL) + 0x42);
        v15 = *(_OWORD *)((v10 & 0x3FFFFFFFFFFFFFFFLL) + 0x52);
        v16 = *(_OWORD *)((v10 & 0x3FFFFFFFFFFFFFFFLL) + 0x62);
        v17 = *(_QWORD *)((v10 & 0x3FFFFFFFFFFFFFFFLL) + 0x72);
        v19[2] = *(_OWORD *)((v10 & 0x3FFFFFFFFFFFFFFFLL) + 0x32);
        v19[3] = v14;
        v19[4] = v15;
        v19[5] = v16;
        v20 = v17;
        swift_retain();
        return sub_1A567B618((uint64_t)v19, v12, 0x68uLL);
      }
    }
    return 0;
  }
  if (a2 >> 62)
    return 0;
  OUTLINED_FUNCTION_15_8();
  if (!v6 || *(unsigned __int16 *)(v7 + 18) != *(unsigned __int16 *)(v8 + 18))
    return 0;
  return *(_DWORD *)(v7 + 20) == *(_DWORD *)(v8 + 20);
}

uint64_t SocketAddress.init(_:)(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  char v3;
  char v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  unint64_t v21;
  uint64_t v22;

  v3 = a2;
  v4 = a1;
  v22 = *MEMORY[0x1E0C80C00];
  v5 = a1 >> 8;
  v6 = a1 >> 16;
  v7 = HIDWORD(a1);
  v8 = a2 >> 8;
  v20 = HIDWORD(a1);
  v9 = a2 >> 16;
  v21 = a2;
  v10 = a2 >> 24;
  v11 = a2 >> 40;
  v17 = HIDWORD(a2);
  v18 = HIWORD(a2);
  v19 = HIBYTE(a2);
  OUTLINED_FUNCTION_5_9(a1, &v20);
  v15 = v13;
  v16 = v12;
  if (v2)
  {
    OUTLINED_FUNCTION_1_8();
    result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A92E8);
    result = OUTLINED_FUNCTION_20_1();
    *(_BYTE *)(result + 16) = v4;
    *(_BYTE *)(result + 17) = v5;
    *(_WORD *)(result + 18) = v6;
    *(_DWORD *)(result + 20) = v7;
    *(_BYTE *)(result + 24) = v3;
    *(_BYTE *)(result + 25) = v8;
    *(_BYTE *)(result + 26) = v9;
    *(_BYTE *)(result + 27) = v10;
    *(_BYTE *)(result + 28) = v17;
    *(_BYTE *)(result + 29) = v11;
    *(_BYTE *)(result + 30) = v18;
    *(_BYTE *)(result + 31) = v19;
    *(_QWORD *)(result + 32) = v16;
    *(_QWORD *)(result + 40) = v15;
  }
  return result;
}

uint64_t SocketAddress.init(_:)(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  _QWORD v15[4];

  v15[3] = *MEMORY[0x1E0C80C00];
  v15[0] = a2;
  v15[1] = a3;
  OUTLINED_FUNCTION_6_10(a1, v15);
  if (v4)
  {
    OUTLINED_FUNCTION_1_8();
    result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    v11 = v9;
    v12 = v10;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A92E0);
    v13 = OUTLINED_FUNCTION_20_1();
    *(_QWORD *)(v13 + 16) = a1;
    *(_QWORD *)(v13 + 24) = a2;
    *(_QWORD *)(v13 + 32) = a3;
    *(_DWORD *)(v13 + 40) = a4;
    *(_QWORD *)(v13 + 48) = v11;
    *(_QWORD *)(v13 + 56) = v12;
    return v13 | 0x4000000000000000;
  }
  return result;
}

unint64_t SocketAddress.init(_:)(const void *a1)
{
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A92D8);
  v2 = OUTLINED_FUNCTION_20_1();
  memcpy((void *)(v2 + 16), a1, 0x6AuLL);
  return v2 | 0x8000000000000000;
}

uint64_t SocketAddressError.FailedToParseIPByteBuffer.address.getter()
{
  return swift_retain();
}

uint64_t SocketAddressError.FailedToParseIPByteBuffer.address.setter(uint64_t a1, unint64_t a2, unint64_t a3)
{
  uint64_t v3;
  int v4;
  int v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t result;

  v4 = a3;
  v5 = a2;
  v7 = HIDWORD(a2);
  v8 = HIDWORD(a3);
  v9 = HIWORD(a3);
  result = swift_release();
  *(_QWORD *)v3 = a1;
  *(_DWORD *)(v3 + 8) = v5;
  *(_DWORD *)(v3 + 12) = v7;
  *(_DWORD *)(v3 + 16) = v4;
  *(_WORD *)(v3 + 20) = v8;
  *(_BYTE *)(v3 + 22) = v9;
  return result;
}

double (*SocketAddressError.FailedToParseIPByteBuffer.address.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SocketAddressError.FailedToParseIPByteBuffer.hash(into:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unsigned int v3;
  unint64_t v4;
  uint64_t result;

  v3 = a3;
  v4 = HIDWORD(a3);
  result = OUTLINED_FUNCTION_176();
  if (v4 >= v3)
    return sub_1A594CE70();
  __break(1u);
  return result;
}

uint64_t static SocketAddressError.FailedToParseIPByteBuffer.__derived_struct_equals(_:_:)(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  BOOL v6;

  if (HIDWORD(a2) < a2)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (HIDWORD(a5) < a5)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  result = HIDWORD(a2) - (_DWORD)a2 == HIDWORD(a5) - (_DWORD)a5
        && ((a3 & 0xFFFFFFFFFFFFFFLL) == (a6 & 0xFFFFFFFFFFFFFFLL) ? (v6 = result == a4) : (v6 = 0),
            v6 || (OUTLINED_FUNCTION_155(), (sub_1A566B918() & 1) != 0));
  return result;
}

uint64_t SocketAddressError.FailedToParseIPByteBuffer.hashValue.getter(uint64_t a1, unint64_t a2)
{
  unsigned int v2;
  unint64_t v3;
  uint64_t result;

  v2 = a2;
  v3 = HIDWORD(a2);
  sub_1A594CE64();
  result = OUTLINED_FUNCTION_176();
  if (v3 < v2)
  {
    __break(1u);
  }
  else
  {
    sub_1A594CE70();
    return sub_1A594CED0();
  }
  return result;
}

uint64_t sub_1A567ACF4()
{
  uint64_t v0;

  return SocketAddressError.FailedToParseIPByteBuffer.hashValue.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
}

uint64_t sub_1A567AD10(uint64_t a1)
{
  uint64_t v1;

  return SocketAddressError.FailedToParseIPByteBuffer.hash(into:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8));
}

uint64_t sub_1A567AD2C()
{
  uint64_t v0;
  unsigned int v1;
  unsigned int v2;
  uint64_t result;

  v1 = *(_DWORD *)(v0 + 8);
  v2 = *(_DWORD *)(v0 + 12);
  sub_1A594CE64();
  result = swift_beginAccess();
  if (v2 < v1)
  {
    __break(1u);
  }
  else
  {
    sub_1A594CE70();
    return sub_1A594CED0();
  }
  return result;
}

uint64_t sub_1A567ADBC(uint64_t a1, uint64_t a2)
{
  return static SocketAddressError.FailedToParseIPByteBuffer.__derived_struct_equals(_:_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned __int16 *)(a1 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 22) << 48), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(unsigned int *)(a2 + 16) | ((unint64_t)*(unsigned __int16 *)(a2 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a2 + 22) << 48));
}

uint64_t SocketAddress.IPv4Address.address.getter(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16);
}

uint64_t SocketAddress.IPv4Address.host.getter(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t SocketAddress.IPv6Address.address.getter(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16);
}

uint64_t SocketAddress.IPv6Address.host.getter(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 48);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

__n128 SocketAddress.UnixSocketAddress.address.getter@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int16 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  v2 = *(_WORD *)(a1 + 120);
  v3 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)a2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 16) = v3;
  result = *(__n128 *)(a1 + 48);
  v5 = *(_OWORD *)(a1 + 64);
  v6 = *(_OWORD *)(a1 + 80);
  v7 = *(_OWORD *)(a1 + 96);
  v8 = *(_QWORD *)(a1 + 112);
  *(__n128 *)(a2 + 32) = result;
  *(_OWORD *)(a2 + 48) = v5;
  *(_OWORD *)(a2 + 64) = v6;
  *(_OWORD *)(a2 + 80) = v7;
  *(_QWORD *)(a2 + 96) = v8;
  *(_WORD *)(a2 + 104) = v2;
  return result;
}

uint64_t SocketAddress.description.getter(unint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  if (!(a1 >> 62))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v3 = *(_QWORD *)(a1 + 40);
    OUTLINED_FUNCTION_20_7();
    if (v6)
    {
      OUTLINED_FUNCTION_27();
    }
    else
    {
      v4 = 0;
      v3 = 0;
    }
    LODWORD(v21) = *(_DWORD *)(a1 + 20);
    v15 = swift_retain();
    OUTLINED_FUNCTION_5_9(v15, &v21);
    if (v1)
      goto LABEL_23;
    v11 = v16;
    v12 = v17;
    v24 = 0;
    v25 = 0xE000000000000000;
    v18 = SocketAddress.port.getter(a1);
    if ((v19 & 1) == 0)
    {
      v22 = v18;
      sub_1A594CC9C();
      sub_1A594B5F8();
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_16;
    }
    goto LABEL_22;
  }
  if (a1 >> 62 != 1)
  {
    v24 = 0x5D5344555BLL;
    v25 = 0xE500000000000000;
    SocketAddress.pathname.getter(a1);
    OUTLINED_FUNCTION_18_5();
LABEL_20:
    swift_bridgeObjectRelease();
    return v24;
  }
  v4 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  OUTLINED_FUNCTION_20_7();
  if (v5)
  {
    OUTLINED_FUNCTION_27();
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  v7 = *(_QWORD *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
  v24 = *(_QWORD *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
  v25 = v7;
  v8 = swift_retain();
  OUTLINED_FUNCTION_6_10(v8, &v24);
  if (!v1)
  {
    v11 = v9;
    v12 = v10;
    v22 = 0;
    v23 = 0xE000000000000000;
    v13 = SocketAddress.port.getter(a1);
    if ((v14 & 1) == 0)
    {
      v21 = v13;
      sub_1A594CC9C();
      sub_1A594B5F8();
      swift_release();
      swift_bridgeObjectRelease();
LABEL_16:
      v24 = 91;
      v25 = 0xE100000000000000;
      sub_1A594B5F8();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_82_0();
      if (v3)
      {
        v22 = v4;
        v23 = v3;
        OUTLINED_FUNCTION_27();
        OUTLINED_FUNCTION_82_0();
        sub_1A594B5F8();
        OUTLINED_FUNCTION_82_0();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_17();
      }
      else
      {
        v22 = v11;
        v23 = v12;
        OUTLINED_FUNCTION_82_0();
      }
      OUTLINED_FUNCTION_18_5();
      OUTLINED_FUNCTION_17();
      sub_1A594B5F8();
      goto LABEL_20;
    }
    OUTLINED_FUNCTION_17();
    __break(1u);
LABEL_22:
    OUTLINED_FUNCTION_17();
    __break(1u);
  }
LABEL_23:
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_1_8();
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

void sub_1A567B168(int a1, const void *a2, size_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;

  v7 = sub_1A567C914(0, a3);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
  {
    if ((a3 & 0x8000000000000000) == 0)
      goto LABEL_3;
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_1A57285C0();
  v7 = v8;
  if ((a3 & 0x8000000000000000) != 0)
    goto LABEL_8;
LABEL_3:
  if (HIDWORD(a3))
  {
LABEL_9:
    __break(1u);
    return;
  }
  sub_1A5668304(a1, a2, (char *)(v7 + 32), a3);
  if (!v3)
    sub_1A594B61C();
  OUTLINED_FUNCTION_17();
}

uint64_t SocketAddress.port.getter(unint64_t a1)
{
  unsigned __int16 *v1;

  if (!(a1 >> 62))
  {
    v1 = (unsigned __int16 *)(a1 + 18);
    return bswap32(*v1) >> 16;
  }
  if (a1 >> 62 == 1)
  {
    v1 = (unsigned __int16 *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 18);
    return bswap32(*v1) >> 16;
  }
  return 0;
}

uint64_t SocketAddress.pathname.getter(uint64_t a1)
{
  if (a1 < 0)
    return sub_1A594B610();
  else
    return 0;
}

uint64_t SocketAddress.protocolFamily.getter(unint64_t a1)
{
  return *(unsigned int *)((char *)&unk_1A59ADD64 + ((a1 >> 60) & 0xC));
}

uint64_t SocketAddress.protocol.getter(unint64_t a1)
{
  return *(unsigned int *)((char *)&unk_1A59ADD64 + ((a1 >> 60) & 0xC));
}

uint64_t SocketAddress.ipAddress.getter(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[4];

  v9[3] = *MEMORY[0x1E0C80C00];
  if (a1 >> 62)
  {
    v2 = 0;
    if (a1 >> 62 != 1)
      return v2;
    v3 = *(_QWORD *)(a1 + 32);
    v9[0] = *(_QWORD *)(a1 + 24);
    v9[1] = v3;
    v4 = swift_retain();
    OUTLINED_FUNCTION_6_10(v4, v9);
    if (!v1)
    {
      v2 = v5;
LABEL_7:
      swift_release();
      return v2;
    }
  }
  else
  {
    LODWORD(v9[0]) = *(_DWORD *)(a1 + 20);
    v6 = OUTLINED_FUNCTION_155();
    OUTLINED_FUNCTION_5_9(v6, v9);
    if (!v1)
    {
      v2 = v7;
      goto LABEL_7;
    }
  }
  OUTLINED_FUNCTION_1_8();
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t SocketAddress.port.setter(uint64_t result, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  char v17;
  int v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  int v23;

  v3 = *v2;
  v4 = (unint64_t)*v2 >> 62;
  if (!(_DWORD)v4)
  {
    if ((a2 & 1) != 0)
      v15 = 0;
    else
      v15 = result;
    if ((v15 & 0x8000000000000000) == 0)
    {
      if (!(v15 >> 16))
      {
        v16 = *(_BYTE *)(v3 + 16);
        v17 = *(_BYTE *)(v3 + 17);
        v18 = *(_DWORD *)(v3 + 20);
        v19 = *(_QWORD *)(v3 + 24);
        v20 = bswap32(v15) >> 16;
        v22 = *(_QWORD *)(v3 + 32);
        v21 = *(_QWORD *)(v3 + 40);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_release();
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A92E8);
        result = OUTLINED_FUNCTION_20_1();
        *(_BYTE *)(result + 16) = v16;
        *(_BYTE *)(result + 17) = v17;
        *(_WORD *)(result + 18) = v20;
        *(_DWORD *)(result + 20) = v18;
        *(_QWORD *)(result + 24) = v19;
        *(_QWORD *)(result + 32) = v22;
        *(_QWORD *)(result + 40) = v21;
        goto LABEL_15;
      }
      goto LABEL_21;
    }
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if ((_DWORD)v4 == 1)
  {
    if ((a2 & 1) != 0)
      v5 = 0;
    else
      v5 = result;
    if ((v5 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (!(v5 >> 16))
    {
      v6 = *(_BYTE *)(v3 + 16);
      v7 = *(_BYTE *)(v3 + 17);
      v23 = *(_DWORD *)(v3 + 20);
      v9 = *(_QWORD *)(v3 + 24);
      v8 = *(_QWORD *)(v3 + 32);
      v10 = *(_DWORD *)(v3 + 40);
      v11 = bswap32(v5) >> 16;
      v13 = *(_QWORD *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
      v12 = *(_QWORD *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x38);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A92E0);
      v14 = OUTLINED_FUNCTION_20_1();
      *(_BYTE *)(v14 + 16) = v6;
      *(_BYTE *)(v14 + 17) = v7;
      *(_WORD *)(v14 + 18) = v11;
      *(_DWORD *)(v14 + 20) = v23;
      *(_QWORD *)(v14 + 24) = v9;
      *(_QWORD *)(v14 + 32) = v8;
      *(_DWORD *)(v14 + 40) = v10;
      result = v14 | 0x4000000000000000;
      *(_QWORD *)(v14 + 48) = v13;
      *(_QWORD *)(v14 + 56) = v12;
LABEL_15:
      *v2 = result;
      return result;
    }
    __break(1u);
    goto LABEL_20;
  }
  if ((a2 & 1) == 0)
LABEL_22:
    __break(1u);
  return result;
}

uint64_t (*SocketAddress.port.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  unsigned __int16 *v4;
  char v5;
  uint64_t v6;

  *(_QWORD *)(a1 + 16) = v1;
  v2 = *v1;
  v3 = (unint64_t)*v1 >> 62;
  if ((_DWORD)v3)
  {
    if ((_DWORD)v3 != 1)
    {
      v6 = 0;
      v5 = 1;
      goto LABEL_6;
    }
    v2 &= 0x3FFFFFFFFFFFFFFFuLL;
  }
  v4 = (unsigned __int16 *)(v2 + 18);
  v5 = 0;
  v6 = bswap32(*v4) >> 16;
LABEL_6:
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v5;
  return sub_1A567B5EC;
}

uint64_t sub_1A567B5EC(uint64_t a1)
{
  return SocketAddress.port.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

BOOL sub_1A567B618(uint64_t a1, uint64_t a2, size_t a3)
{
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  BOOL v9;
  _OWORD v11[6];
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v4 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v4;
  v5 = *(_OWORD *)(a1 + 48);
  v6 = *(_OWORD *)(a1 + 64);
  v7 = *(_OWORD *)(a1 + 80);
  v8 = *(_QWORD *)(a1 + 96);
  v11[2] = *(_OWORD *)(a1 + 32);
  v11[3] = v5;
  v11[4] = v6;
  v11[5] = v7;
  v12 = v8;
  sub_1A567C694((const char *)v11, a2, a3, &v13);
  swift_release();
  if (!v3)
    return v13;
  return v9;
}

uint64_t SocketAddress.withSockAddr<A>(_:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a3 >> 62)
  {
    if (a3 >> 62 == 1)
    {
      MEMORY[0x1E0C80A78](a1);
      OUTLINED_FUNCTION_2_12();
      OUTLINED_FUNCTION_22_7();
      sub_1A567B8C0();
    }
    else
    {
      MEMORY[0x1E0C80A78](a1);
      OUTLINED_FUNCTION_2_12();
      OUTLINED_FUNCTION_22_7();
      sub_1A567B990();
    }
  }
  else
  {
    MEMORY[0x1E0C80A78](a1);
    swift_retain();
    sub_1A567B810();
  }
  return swift_release();
}

uint64_t sub_1A567B810()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _DWORD v10[2];
  uint64_t v11;
  _BYTE v12[16];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_13_6();
  v16 = *MEMORY[0x1E0C80C00];
  v1 = *(_DWORD *)(v0 + 4);
  v10[0] = *(_DWORD *)v0;
  v10[1] = v1;
  v11 = *(_QWORD *)(v0 + 8);
  v13 = v3;
  v14 = v2;
  v15 = v4;
  type metadata accessor for sockaddr_in(0);
  v5 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
  return OUTLINED_FUNCTION_0_17((uint64_t)v10, (uint64_t)sub_1A567CE1C, (uint64_t)v12, v6, v5, v7, MEMORY[0x1E0DEDB38], v8);
}

uint64_t sub_1A567B8C0()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _DWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;

  OUTLINED_FUNCTION_13_6();
  v21 = *MEMORY[0x1E0C80C00];
  v1 = *(_DWORD *)(v0 + 4);
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_DWORD *)(v0 + 24);
  v17[0] = *(_DWORD *)v0;
  v17[1] = v1;
  v19 = v3;
  v18 = v2;
  v20 = v4;
  v14 = v6;
  v15 = v5;
  v16 = v7;
  type metadata accessor for sockaddr_in6(0);
  v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
  return OUTLINED_FUNCTION_0_17((uint64_t)v17, (uint64_t)sub_1A567CE3C, (uint64_t)v13, v9, v8, v10, MEMORY[0x1E0DEDB38], v11);
}

uint64_t sub_1A567B97C()
{
  return sub_1A567BA58();
}

uint64_t sub_1A567B990()
{
  uint64_t v0;
  __int16 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD v15[6];
  uint64_t v16;
  __int16 v17;
  _BYTE v18[16];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_13_6();
  v22 = *MEMORY[0x1E0C80C00];
  v1 = *(_WORD *)(v0 + 104);
  v2 = *(_OWORD *)(v0 + 16);
  v15[0] = *(_OWORD *)v0;
  v15[1] = v2;
  v3 = *(_OWORD *)(v0 + 48);
  v4 = *(_OWORD *)(v0 + 64);
  v5 = *(_OWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 96);
  v15[2] = *(_OWORD *)(v0 + 32);
  v15[3] = v3;
  v15[4] = v4;
  v15[5] = v5;
  v16 = v6;
  v17 = v1;
  v19 = v8;
  v20 = v7;
  v21 = v9;
  type metadata accessor for sockaddr_un(0);
  v10 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B3D8);
  return OUTLINED_FUNCTION_0_17((uint64_t)v15, (uint64_t)sub_1A567CE3C, (uint64_t)v18, v11, v10, v12, MEMORY[0x1E0DEDB38], v13);
}

uint64_t sub_1A567BA58()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 24))();
}

uint64_t SocketAddress.init(_:host:)(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  char v4;
  char v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;
  unint64_t v15;
  unint64_t v16;

  v4 = a2;
  v5 = a1;
  v6 = a1 >> 8;
  v7 = a1 >> 16;
  v8 = HIDWORD(a1);
  v9 = a2 >> 8;
  v10 = a2 >> 16;
  v11 = a2 >> 24;
  v12 = HIDWORD(a2);
  v13 = a2 >> 40;
  v15 = HIWORD(a2);
  v16 = HIBYTE(a2);
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A92E8);
  result = OUTLINED_FUNCTION_20_1();
  *(_BYTE *)(result + 16) = v5;
  *(_BYTE *)(result + 17) = v6;
  *(_WORD *)(result + 18) = v7;
  *(_DWORD *)(result + 20) = v8;
  *(_BYTE *)(result + 24) = v4;
  *(_BYTE *)(result + 25) = v9;
  *(_BYTE *)(result + 26) = v10;
  *(_BYTE *)(result + 27) = v11;
  *(_BYTE *)(result + 28) = v12;
  *(_BYTE *)(result + 29) = v13;
  *(_BYTE *)(result + 30) = v15;
  *(_BYTE *)(result + 31) = v16;
  *(_QWORD *)(result + 32) = a3;
  *(_QWORD *)(result + 40) = a4;
  return result;
}

uint64_t SocketAddress.init(_:host:)(unint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  char v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v11 = a1;
  v12 = a1 >> 8;
  v13 = a1 >> 16;
  v14 = HIDWORD(a1);
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A92E0);
  v15 = OUTLINED_FUNCTION_20_1();
  *(_BYTE *)(v15 + 16) = v11;
  *(_BYTE *)(v15 + 17) = v12;
  *(_WORD *)(v15 + 18) = v13;
  *(_DWORD *)(v15 + 20) = v14;
  *(_QWORD *)(v15 + 24) = a2;
  *(_QWORD *)(v15 + 32) = a3;
  *(_DWORD *)(v15 + 40) = a4;
  *(_QWORD *)(v15 + 48) = a5;
  *(_QWORD *)(v15 + 56) = a6;
  return v15 | 0x4000000000000000;
}

unint64_t SocketAddress.init(unixDomainSocketPath:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t result;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  if ((a2 & 0x1000000000000000) != 0)
  {
    v4 = sub_1A594B640();
  }
  else
  {
    if ((a2 & 0x2000000000000000) != 0)
      goto LABEL_6;
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v4 > 103)
  {
    swift_bridgeObjectRelease();
    sub_1A567BDE4();
    v5 = OUTLINED_FUNCTION_21();
    v6[1] = 0;
    v6[2] = 0;
    *v6 = 1;
    return OUTLINED_FUNCTION_12_8(v5, (uint64_t)v6);
  }
LABEL_6:
  v8 = sub_1A567BD34(a1, a2, (uint64_t)&unk_1E4E5ECD8);
  swift_bridgeObjectRelease();
  v21 = 0;
  v19 = 0u;
  v20 = 0u;
  v17 = 0u;
  v18 = 0u;
  v15 = 0u;
  v16 = 0u;
  memmove(&v15, (const void *)(v8 + 32), *(_QWORD *)(v8 + 16));
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A92D8);
  v9 = OUTLINED_FUNCTION_20_1();
  *(_WORD *)(v9 + 16) = 256;
  v10 = v16;
  *(_OWORD *)(v9 + 18) = v15;
  *(_OWORD *)(v9 + 34) = v10;
  v11 = v18;
  *(_OWORD *)(v9 + 50) = v17;
  v12 = v19;
  v13 = v20;
  v14 = v21;
  *(_OWORD *)(v9 + 66) = v11;
  *(_OWORD *)(v9 + 82) = v12;
  *(_OWORD *)(v9 + 98) = v13;
  result = v9 | 0x8000000000000000;
  *(_QWORD *)(v9 + 114) = v14;
  return result;
}

uint64_t sub_1A567BD34(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 + 16);
  if ((a2 & 0x1000000000000000) != 0)
  {
    result = sub_1A594B640();
  }
  else if ((a2 & 0x2000000000000000) != 0)
  {
    result = HIBYTE(a2) & 0xF;
  }
  else
  {
    result = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (__OFADD__(v5, result))
  {
    __break(1u);
  }
  else
  {
    sub_1A569D850();
    v9 = v7;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A574E924(a1, a2);
    v8 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A574E808(v8);
    return v9;
  }
  return result;
}

unint64_t sub_1A567BDE4()
{
  unint64_t result;

  result = qword_1EE7A92F0;
  if (!qword_1EE7A92F0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for SocketAddressError, &type metadata for SocketAddressError);
    atomic_store(result, (unint64_t *)&qword_1EE7A92F0);
  }
  return result;
}

_QWORD *SocketAddress.init(ipAddress:port:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD v17[3];

  v13 = a3;
  v14 = a1;
  v15 = a2;
  if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | a1 & 0x1000000000000000))
  {
    sub_1A594C6FC();
    OUTLINED_FUNCTION_17();
    if (!v3)
      return (_QWORD *)v17[2];
  }
  else
  {
    MEMORY[0x1E0C80A78](a1);
    v4 = v11;
    v11[2] = sub_1A567CA14;
    v11[3] = &v12;
    if ((a2 & 0x2000000000000000) != 0)
    {
      v17[0] = v7;
      v17[1] = a2 & 0xFFFFFFFFFFFFFFLL;
      sub_1A567BF78((const char *)v17, v6, (uint64_t *)&v16);
      if (v3)
      {
        OUTLINED_FUNCTION_17();
      }
      else
      {
        v4 = v16;
        OUTLINED_FUNCTION_17();
      }
    }
    else
    {
      if ((v7 & 0x1000000000000000) != 0)
      {
        v8 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        v9 = v7 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        v8 = sub_1A594C7D4();
      }
      v4 = (_QWORD *)sub_1A567C9BC(v8, v9, (uint64_t (*)(void))sub_1A567CA30);
      OUTLINED_FUNCTION_17();
    }
  }
  return v4;
}

uint64_t sub_1A567BF78@<X0>(const char *a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  void *v3;
  int v7;
  uint64_t result;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  LODWORD(v12) = 0;
  sub_1A5668254(2, a1, &v12);
  if (!v3)
  {
    if ((a2 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (!(a2 >> 16))
    {
      v7 = v12;
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A92E8);
      result = swift_allocObject();
      *(_WORD *)(result + 16) = 512;
      *(_WORD *)(result + 18) = bswap32(a2) >> 16;
      *(_DWORD *)(result + 20) = v7;
      *(_QWORD *)(result + 24) = 0;
      *(_QWORD *)(result + 32) = 0;
      *(_QWORD *)(result + 40) = 0xE000000000000000;
      *a3 = result;
      return result;
    }
    __break(1u);
    goto LABEL_11;
  }

  v12 = 0;
  v13 = 0;
  sub_1A5668254(30, a1, &v12);
  if ((a2 & 0x8000000000000000) != 0)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
  }
  if (a2 >> 16)
    goto LABEL_12;
  v9 = bswap32(a2) >> 16;
  v10 = v12;
  v11 = v13;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A92E0);
  result = swift_allocObject();
  *(_WORD *)(result + 16) = 7680;
  *(_WORD *)(result + 18) = v9;
  *(_DWORD *)(result + 20) = 0;
  *(_QWORD *)(result + 24) = v10;
  *(_QWORD *)(result + 32) = v11;
  *(_DWORD *)(result + 40) = 0;
  *(_QWORD *)(result + 48) = 0;
  *(_QWORD *)(result + 56) = 0xE000000000000000;
  *a3 = result | 0x4000000000000000;
  return result;
}

uint64_t SocketAddress.init(packedIPAddress:port:)(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  unsigned int v6;
  unint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[40];
  __int128 v21;
  uint64_t v22;

  v6 = a2;
  v22 = *MEMORY[0x1E0C80C00];
  v8 = HIDWORD(a2);
  ByteBufferView.init(_:)(a1, a2, a3 & 0xFFFFFFFFFFFFFFLL, (uint64_t)v20);
  v9 = v8 - v6;
  if (v8 < v6)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v9 == 16)
  {
    v21 = 0uLL;
    if ((a4 & 0x8000000000000000) != 0)
    {
LABEL_13:
      __break(1u);
LABEL_14:
      __break(1u);
LABEL_15:
      __break(1u);
    }
    if (a4 >> 16)
      goto LABEL_15;
    OUTLINED_FUNCTION_155();
    v15 = sub_1A567C33C((uint64_t)v20, &v21);
    v16 = v21;
    OUTLINED_FUNCTION_21_6(v15);
    OUTLINED_FUNCTION_17_4();
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A92E0);
    v17 = OUTLINED_FUNCTION_20_1();
    *(_WORD *)(v17 + 16) = 7680;
    *(_WORD *)(v17 + 18) = bswap32(a4) >> 16;
    *(_DWORD *)(v17 + 20) = 0;
    *(_OWORD *)(v17 + 24) = v16;
    *(_DWORD *)(v17 + 40) = 0;
    result = v17 | 0x4000000000000000;
    *(_QWORD *)(v17 + 48) = 0;
    *(_QWORD *)(v17 + 56) = 0xE000000000000000;
  }
  else
  {
    if (v9 == 4)
    {
      LOWORD(v21) = 512;
      *(_QWORD *)((char *)&v21 + 4) = 0;
      HIDWORD(v21) = 0;
      if ((a4 & 0x8000000000000000) == 0)
      {
        if (!(a4 >> 16))
        {
          WORD1(v21) = bswap32(a4) >> 16;
          OUTLINED_FUNCTION_155();
          v10 = sub_1A567C33C((uint64_t)v20, (_BYTE *)&v21 + 4);
          v11 = v21;
          v12 = DWORD1(v21);
          v13 = *((_QWORD *)&v21 + 1);
          OUTLINED_FUNCTION_21_6(v10);
          OUTLINED_FUNCTION_17_4();
          __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A92E8);
          result = OUTLINED_FUNCTION_20_1();
          *(_DWORD *)(result + 16) = v11;
          *(_DWORD *)(result + 20) = v12;
          *(_QWORD *)(result + 24) = v13;
          *(_QWORD *)(result + 32) = 0;
          *(_QWORD *)(result + 40) = 0xE000000000000000;
          return result;
        }
        goto LABEL_14;
      }
      goto LABEL_12;
    }
    sub_1A567CA6C();
    OUTLINED_FUNCTION_21();
    *(_QWORD *)v18 = a1;
    *(_DWORD *)(v18 + 8) = v6;
    *(_DWORD *)(v18 + 12) = v8;
    *(_DWORD *)(v18 + 16) = a3;
    *(_WORD *)(v18 + 20) = WORD2(a3);
    *(_BYTE *)(v18 + 22) = BYTE6(a3);
    OUTLINED_FUNCTION_155();
    v19 = swift_willThrow();
    return OUTLINED_FUNCTION_21_6(v19);
  }
  return result;
}

uint64_t sub_1A567C33C(uint64_t result, _BYTE *a2)
{
  _BYTE *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  v6 = *(_OWORD *)result;
  v7 = *(_OWORD *)(result + 16);
  v8 = *(_QWORD *)(result + 32);
  if (a2)
  {
    v2 = a2;
    MEMORY[0x1E0C80A78](result);
    result = sub_1A567D5B4((void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1A567CE00);
    if ((result & 1) != 0)
    {
      v3 = *((_QWORD *)&v7 + 1);
      if (*((_QWORD *)&v7 + 1) != v8)
      {
        if (HIDWORD(v6) >= DWORD2(v6))
        {
          result = swift_beginAccess();
          if (*((uint64_t *)&v7 + 1) >= v8)
          {
LABEL_16:
            __break(1u);
            return result;
          }
          v4 = *(_QWORD *)(v6 + 24) + (BYTE6(v7) | ((unint64_t)WORD2(v7) << 8)) + DWORD2(v6);
          while (1)
          {
            v5 = v3 - DWORD2(v6);
            if (__OFSUB__(v3, DWORD2(v6)))
              break;
            if (v5 >= (HIDWORD(v6) - DWORD2(v6)))
              goto LABEL_13;
            if (v5 == 0x7FFFFFFFFFFFFFFFLL)
              goto LABEL_14;
            ++v3;
            *v2++ = *(_BYTE *)(v4 + v5);
            if (v8 == v3)
              return result;
          }
          __break(1u);
LABEL_13:
          __break(1u);
LABEL_14:
          __break(1u);
        }
        __break(1u);
        goto LABEL_16;
      }
    }
  }
  return result;
}

uint64_t static SocketAddress.makeAddressResolvingHost(_:port:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  const char *v6;
  uint64_t v7;
  int v8;
  uint64_t result;
  uint64_t v10;
  addrinfo *v11;
  int ai_family;
  sockaddr *ai_addr;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  sockaddr *v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  addrinfo *v26[2];

  v26[1] = *(addrinfo **)MEMORY[0x1E0C80C00];
  v26[0] = 0;
  sub_1A594CC9C();
  v6 = (const char *)(sub_1A594B4C0() + 32);
  v7 = sub_1A594B4C0();
  swift_bridgeObjectRelease();
  v8 = getaddrinfo(v6, (const char *)(v7 + 32), 0, v26);
  swift_release();
  result = OUTLINED_FUNCTION_17_4();
  if (v8)
  {
    sub_1A567BDE4();
    OUTLINED_FUNCTION_21();
    *(_QWORD *)v10 = a1;
    *(_QWORD *)(v10 + 8) = a2;
    *(_QWORD *)(v10 + 16) = a3;
    *(_BYTE *)(v10 + 24) = 0;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_willThrow();
    return a3;
  }
  v11 = v26[0];
  if (!v26[0])
    goto LABEL_9;
  ai_family = v26[0]->ai_family;
  if (ai_family != 30)
  {
    if (ai_family == 2)
    {
      ai_addr = v26[0]->ai_addr;
      if (ai_addr)
      {
        v14 = *(_DWORD *)&ai_addr->sa_len;
        v15 = *(_DWORD *)&ai_addr->sa_data[2];
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A92E8);
        a3 = OUTLINED_FUNCTION_20_1();
        v16 = *(_QWORD *)&ai_addr->sa_data[6];
        *(_DWORD *)(a3 + 16) = v14;
        *(_DWORD *)(a3 + 20) = v15;
        *(_QWORD *)(a3 + 24) = v16;
        *(_QWORD *)(a3 + 32) = a1;
        *(_QWORD *)(a3 + 40) = a2;
LABEL_13:
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        freeaddrinfo(v11);
        return a3;
      }
      __break(1u);
      goto LABEL_15;
    }
LABEL_9:
    sub_1A567BDE4();
    v17 = OUTLINED_FUNCTION_21();
    v18[1] = 0;
    v18[2] = 0;
    *v18 = 0;
    OUTLINED_FUNCTION_12_8(v17, (uint64_t)v18);
    if (v26[0])
      freeaddrinfo(v26[0]);
    return a3;
  }
  v19 = v26[0]->ai_addr;
  if (v19)
  {
    v20 = *(_DWORD *)&v19->sa_len;
    v21 = *(_DWORD *)&v19->sa_data[2];
    v22 = *(_QWORD *)&v19->sa_data[6];
    v23 = *(_QWORD *)&v19[1].sa_len;
    v24 = *(_DWORD *)&v19[1].sa_data[6];
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A92E0);
    v25 = OUTLINED_FUNCTION_20_1();
    *(_DWORD *)(v25 + 16) = v20;
    *(_DWORD *)(v25 + 20) = v21;
    *(_QWORD *)(v25 + 24) = v22;
    *(_QWORD *)(v25 + 32) = v23;
    *(_DWORD *)(v25 + 40) = v24;
    a3 = v25 | 0x4000000000000000;
    *(_QWORD *)(v25 + 48) = a1;
    *(_QWORD *)(v25 + 56) = a2;
    goto LABEL_13;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_1A567C68C()
{
  unint64_t *v0;

  return SocketAddress.description.getter(*v0);
}

uint64_t sub_1A567C694@<X0>(const char *a1@<X0>, uint64_t a2@<X1>, size_t a3@<X2>, BOOL *a4@<X8>)
{
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t result;
  _OWORD v11[6];
  uint64_t v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v5 = *(_OWORD *)(a2 + 34);
  v11[0] = *(_OWORD *)(a2 + 18);
  v11[1] = v5;
  v6 = *(_OWORD *)(a2 + 66);
  v7 = *(_OWORD *)(a2 + 82);
  v8 = *(_OWORD *)(a2 + 98);
  v9 = *(_QWORD *)(a2 + 114);
  v11[2] = *(_OWORD *)(a2 + 50);
  v11[3] = v6;
  v11[4] = v7;
  v11[5] = v8;
  v12 = v9;
  result = strncmp(a1, (const char *)v11, a3);
  *a4 = (_DWORD)result == 0;
  return result;
}

BOOL sub_1A567C72C(unint64_t *a1, unint64_t *a2)
{
  return static SocketAddress.== infix(_:_:)(*a1, *a2);
}

uint64_t SocketAddress.hash(into:)(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _OWORD v11[6];
  uint64_t v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  if (a2 >> 62)
  {
    if (a2 >> 62 == 1)
    {
      sub_1A594CE88();
      OUTLINED_FUNCTION_17_6();
      sub_1A594CEA0();
      sub_1A594CEAC();
      sub_1A594CEAC();
      v3 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)&v11[0] = *(_QWORD *)(a2 + 24);
      *((_QWORD *)&v11[0] + 1) = v3;
    }
    else
    {
      sub_1A594CE88();
      OUTLINED_FUNCTION_17_6();
      v5 = *(_OWORD *)(a2 + 34);
      v6 = *(_OWORD *)(a2 + 50);
      v7 = *(_OWORD *)(a2 + 66);
      v8 = *(_OWORD *)(a2 + 82);
      v9 = *(_OWORD *)(a2 + 98);
      v11[0] = *(_OWORD *)(a2 + 18);
      v11[1] = v5;
      v10 = *(_QWORD *)(a2 + 114);
      v11[2] = v6;
      v11[3] = v7;
      v11[4] = v8;
      v11[5] = v9;
      v12 = v10;
      strnlen((const char *)v11, 0x68uLL);
    }
    return sub_1A594CE70();
  }
  else
  {
    sub_1A594CE88();
    OUTLINED_FUNCTION_17_6();
    sub_1A594CEA0();
    return sub_1A594CEAC();
  }
}

uint64_t SocketAddress.hashValue.getter(unint64_t a1)
{
  _BYTE v3[72];

  sub_1A594CE64();
  SocketAddress.hash(into:)((uint64_t)v3, a1);
  return sub_1A594CED0();
}

uint64_t sub_1A567C88C()
{
  unint64_t *v0;

  return SocketAddress.hashValue.getter(*v0);
}

uint64_t sub_1A567C894(uint64_t a1)
{
  unint64_t *v1;

  return SocketAddress.hash(into:)(a1, *v1);
}

uint64_t sub_1A567C89C()
{
  unint64_t *v0;
  unint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1A594CE64();
  SocketAddress.hash(into:)((uint64_t)v3, v1);
  return sub_1A594CED0();
}

BOOL SocketAddress.isMulticast.getter(unint64_t a1)
{
  if (a1 >> 62)
  {
    if (a1 >> 62 != 1)
      return 0;
    return *(unsigned __int8 *)(a1 + 24) == 255;
  }
  else
  {
    return (*(_DWORD *)(a1 + 20) & 0xF0) == 224;
  }
}

uint64_t sub_1A567C914(uint64_t result, size_t a2)
{
  int v3;
  uint64_t v4;

  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if (!a2)
      return MEMORY[0x1E0DEE9D8];
    v3 = result;
    v4 = sub_1A594BA18();
    *(_QWORD *)(v4 + 16) = a2;
    memset((void *)(v4 + 32), v3, a2);
    return v4;
  }
  return result;
}

uint64_t sub_1A567C980(uint64_t result, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t), uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v6;

  if (result)
  {
    result = a3(result, a2 - result);
    if (v6)
      *a6 = v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A567C9BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  result = a3();
  if (!v3)
    return v5;
  return result;
}

void *sub_1A567C9F4(void *__src, size_t __len, int a3, int a4, int a5, void *__dst)
{
  if (__src)
  {
    if ((__len & 0x8000000000000000) != 0)
      __break(1u);
    else
      return memmove(__dst, __src, __len);
  }
  return __src;
}

uint64_t sub_1A567CA14@<X0>(const char *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1A567BF78(a1, *(_QWORD *)(v2 + 16), a2);
}

_QWORD *sub_1A567CA30@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = (*(_QWORD *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2)
    *a1 = v5;
  return result;
}

unint64_t sub_1A567CA6C()
{
  unint64_t result;

  result = qword_1EE7A92F8;
  if (!qword_1EE7A92F8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for SocketAddressError.FailedToParseIPByteBuffer, &type metadata for SocketAddressError.FailedToParseIPByteBuffer);
    atomic_store(result, (unint64_t *)&qword_1EE7A92F8);
  }
  return result;
}

unint64_t sub_1A567CAAC()
{
  unint64_t result;

  result = qword_1EE7A9300;
  if (!qword_1EE7A9300)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for SocketAddressError.FailedToParseIPByteBuffer, &type metadata for SocketAddressError.FailedToParseIPByteBuffer);
    atomic_store(result, (unint64_t *)&qword_1EE7A9300);
  }
  return result;
}

unint64_t sub_1A567CAEC()
{
  unint64_t result;

  result = qword_1EE7A9308[0];
  if (!qword_1EE7A9308[0])
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for SocketAddress, &type metadata for SocketAddress);
    atomic_store(result, qword_1EE7A9308);
  }
  return result;
}

uint64_t sub_1A567CB28(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t result;

  if (a4 <= 1u)
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return result;
}

uint64_t destroy for SocketAddressError(uint64_t a1)
{
  return sub_1A567CB54(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t sub_1A567CB54(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t result;

  if (a4 <= 1u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for SocketAddressError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1A567CB28(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for SocketAddressError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1A567CB28(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_1A567CB54(v7, v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy25_8_0(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for SocketAddressError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_1A567CB54(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for SocketAddressError(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 25))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 24);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1A567CCD4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 1u)
    return *(unsigned __int8 *)(a1 + 24);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1A567CCEC(uint64_t result, unsigned int a2)
{
  uint64_t v2;

  v2 = a2 - 2;
  if (a2 >= 2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    LOBYTE(a2) = 2;
    *(_QWORD *)result = v2;
  }
  *(_BYTE *)(result + 24) = a2;
  return result;
}

void type metadata accessor for SocketAddressError()
{
  OUTLINED_FUNCTION_3_1();
}

void type metadata accessor for SocketAddressError.FailedToParseIPByteBuffer()
{
  OUTLINED_FUNCTION_3_1();
}

_QWORD *__swift_memcpy8_8_1(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t _s10SinglepartV4KindOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x7E && *(_BYTE *)(a1 + 8))
    {
      v2 = *(_DWORD *)a1 + 125;
    }
    else
    {
      v2 = (((*(_QWORD *)a1 >> 57) >> 5) | (4 * ((*(_QWORD *)a1 >> 57) & 0x18 | *(_QWORD *)a1 & 7))) ^ 0x7F;
      if (v2 >= 0x7D)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t sub_1A567CD80(_QWORD *a1)
{
  return *a1 >> 62;
}

uint64_t *sub_1A567CD8C(uint64_t *result, uint64_t a2)
{
  *result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  return result;
}

void type metadata accessor for SocketAddress()
{
  OUTLINED_FUNCTION_3_1();
}

void type metadata accessor for SocketAddress.IPv4Address()
{
  OUTLINED_FUNCTION_3_1();
}

void type metadata accessor for SocketAddress.IPv6Address()
{
  OUTLINED_FUNCTION_3_1();
}

void type metadata accessor for SocketAddress.UnixSocketAddress()
{
  OUTLINED_FUNCTION_3_1();
}

void *sub_1A567CDD0(void *a1, size_t a2, uint64_t a3, int a4, int a5, void *a6)
{
  __int128 v6;
  _OWORD v8[2];
  uint64_t v9;

  v6 = *(_OWORD *)(a3 + 16);
  v8[0] = *(_OWORD *)a3;
  v8[1] = v6;
  v9 = *(_QWORD *)(a3 + 32);
  return sub_1A567C9F4(a1, a2, (int)v8, a4, a5, a6);
}

void *sub_1A567CE00(void *a1, size_t a2)
{
  uint64_t v2;

  return sub_1A567CDD0(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(void **)(v2 + 40));
}

uint64_t sub_1A567CE1C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;

  return sub_1A567C980(a1, a2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 16), a3);
}

uint64_t sub_1A567CE3C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  return sub_1A567CE1C(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_0_17(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v8;
  uint64_t v9;
  va_list va;

  va_start(va, a8);
  return sub_1A566F1D8(a1, a2, a3, v8, a5, v9, a7, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_1_8()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_2_12()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_5_9(uint64_t a1, const void *a2)
{
  sub_1A567B168(2, a2, 0x10uLL);
}

void OUTLINED_FUNCTION_6_10(uint64_t a1, const void *a2)
{
  sub_1A567B168(30, a2, 0x2EuLL);
}

uint64_t OUTLINED_FUNCTION_12_8(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)(a2 + 24) = 2;
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_17_6()
{
  return sub_1A594CE94();
}

uint64_t OUTLINED_FUNCTION_18_5()
{
  return sub_1A594B5F8();
}

uint64_t OUTLINED_FUNCTION_21_6(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  return sub_1A553E5DC((uint64_t)va);
}

uint64_t sub_1A567CF28(const char *a1)
{
  return if_nametoindex(a1);
}

uint64_t sub_1A567CF4C(ifaddrs **a1)
{
  uint64_t result;
  int v3;
  char *v5;

  result = getifaddrs(a1);
  if ((_DWORD)result == -1)
  {
    result = MEMORY[0x1A85ACCC0]();
    v3 = result;
    if ((_DWORD)result == 4)
    {
      while (1)
      {
        result = getifaddrs(a1);
        if ((_DWORD)result != -1)
          break;
        result = MEMORY[0x1A85ACCC0]();
        if ((_DWORD)result != 4)
        {
          v3 = result;
          goto LABEL_6;
        }
      }
    }
    else
    {
LABEL_6:
      if (v3 == 9 || v3 == 14)
      {
        __break(1u);
      }
      else
      {
        sub_1A56682C8();
        swift_allocError();
        strcpy(v5, "getifaddrs(_:)");
        v5[15] = -18;
        *((_DWORD *)v5 + 4) = v3;
        return swift_willThrow();
      }
    }
  }
  return result;
}

uint64_t sub_1A567D018()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 88));
  return v0;
}

uint64_t sub_1A567D044()
{
  sub_1A567D018();
  return swift_deallocClassInstance();
}

uint64_t static System.coreCount.getter()
{
  return sysconf(58);
}

void static System.enumerateInterfaces()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  ifaddrs *v13;
  _QWORD *v14;
  _BYTE v15[56];
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v11 = MEMORY[0x1E0DEE9D8];
  sub_1A567D284(12, 0);
  v1 = OUTLINED_FUNCTION_4_13();
  OUTLINED_FUNCTION_3_11(v1, v2, v3, v4, v5, v6, v7, v8, v11, v13);
  if (!v0)
  {
    if (v14)
    {
      type metadata accessor for NIONetworkInterface();
      v9 = v14;
      do
      {
        OUTLINED_FUNCTION_0_18();
        if (sub_1A5678CF8((uint64_t)v15))
        {
          v10 = swift_retain();
          MEMORY[0x1A85ADDB8](v10);
          if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            OUTLINED_FUNCTION_2_13();
          OUTLINED_FUNCTION_5_10();
          OUTLINED_FUNCTION_4_13();
          swift_release();
        }
        v9 = (_QWORD *)*v9;
      }
      while (v9);
    }
    OUTLINED_FUNCTION_6_11();
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_1_9();
}

void static System.enumerateDevices()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  ifaddrs *v13;
  _QWORD *v14;
  _BYTE v15[56];
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v11 = MEMORY[0x1A85AEC10](0, 12, 0, MEMORY[0x1E0DEE9D8]);
  v1 = OUTLINED_FUNCTION_4_13();
  OUTLINED_FUNCTION_3_11(v1, v2, v3, v4, v5, v6, v7, v8, v11, v13);
  if (!v0)
  {
    if (v14)
    {
      type metadata accessor for NIONetworkDevice.Backing();
      v9 = v14;
      do
      {
        OUTLINED_FUNCTION_0_18();
        if (sub_1A5679C98((uint64_t)v15))
        {
          v10 = swift_retain();
          MEMORY[0x1A85ADDB8](v10);
          if (*(_QWORD *)(v12 + 16) >= *(_QWORD *)(v12 + 24) >> 1)
            OUTLINED_FUNCTION_2_13();
          OUTLINED_FUNCTION_5_10();
          OUTLINED_FUNCTION_4_13();
          swift_release();
        }
        v9 = (_QWORD *)*v9;
      }
      while (v9);
    }
    OUTLINED_FUNCTION_6_11();
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_1_9();
}

uint64_t sub_1A567D284(uint64_t a1, char a2)
{
  uint64_t *v2;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *v2;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v5;
  v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x18) >> 1)
      return result;
    v7 = 1;
  }
  if (v5 >> 62)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v8 = sub_1A594CA38();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= a1)
    v9 = a1;
  else
    v9 = v8;
  result = MEMORY[0x1A85AEC10](v7, v9, a2 & 1, v5);
  *v2 = result;
  return result;
}

uint64_t sub_1A567D340()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for Box(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Box);
}

ValueMetadata *type metadata accessor for System()
{
  return &type metadata for System;
}

uint64_t OUTLINED_FUNCTION_0_18()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_2_13()
{
  return sub_1A594B9D0();
}

uint64_t OUTLINED_FUNCTION_3_11(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ifaddrs *a10)
{
  a10 = 0;
  return sub_1A567CF4C(&a10);
}

uint64_t OUTLINED_FUNCTION_4_13()
{
  return sub_1A594B988();
}

uint64_t OUTLINED_FUNCTION_5_10()
{
  return sub_1A594BA30();
}

void OUTLINED_FUNCTION_6_11()
{
  JUMPOUT(0x1A85B0A28);
}

uint64_t sub_1A567D458(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL4 v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(result + 8);
  if (v1 > 0xFFFFFFFFLL)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v2 = *(_QWORD *)(result + 32);
  if (v2 > 0xFFFFFFFFLL)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v3 = *(_QWORD *)(result + 16);
  if ((v3 | v1 | v2) < 0)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v3 <= 0xFFFFFFFFLL)
  {
    v4 = *(_QWORD *)result;
    v5 = *(_QWORD *)(result + 24);
    v6 = *(_QWORD *)result + 32;
    v7 = 1;
    v8 = *(_QWORD *)(result + 40);
    v9 = *(_QWORD *)(result + 32);
    v10 = 1;
    result = *(_QWORD *)(result + 8);
    while (1)
    {
      if (v3 < v1 != v10 && (_DWORD)result == (_DWORD)v3)
        return 1;
      result = result;
      v12 = *(_QWORD *)(v4 + 16);
      if (result >= v12)
        break;
      v13 = v6 + 16 * result;
      if ((*(_BYTE *)(v13 + 8) & 1) != 0)
        goto LABEL_33;
      result = (v12 - 1) & (result + 1);
      v10 = result >= v1;
      if (HIDWORD(result))
        goto LABEL_24;
      if (v8 < 0)
        goto LABEL_25;
      if (HIDWORD(v8))
        goto LABEL_26;
      v14 = *(_QWORD *)v13;
      if ((_DWORD)v9 == (_DWORD)v8 && (((v8 < v2) ^ v7) & 1) != 0)
        return 1;
      v15 = *(_QWORD *)(v5 + 16);
      if (v9 >= v15)
        goto LABEL_27;
      v16 = v5 + 32 + 16 * v9;
      if ((*(_BYTE *)(v16 + 8) & 1) != 0)
        goto LABEL_34;
      v9 = (v15 - 1) & (v9 + 1);
      if (HIDWORD(v9))
        goto LABEL_28;
      v17 = *(_QWORD *)v16;
      v7 = v9 >= v2;
      if (v14 != v17)
        return 0;
    }
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1A567D5B4(void (*a1)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(unsigned __int16 *)(v1 + 20);
  v4 = *(unsigned __int8 *)(v1 + 22);
  v5 = (_QWORD *)(*(_QWORD *)v1 + 24);
  result = swift_beginAccess();
  v7 = *(_QWORD *)(v1 + 24);
  v8 = *(_QWORD *)(v1 + 32);
  if (__OFSUB__(v8, v7))
  {
    __break(1u);
  }
  else
  {
    a1(&v9, *v5 + (v4 | (v3 << 8)) + v7, v8 - v7);
    return 0;
  }
  return result;
}

void sub_1A567D650(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE799EF8);
  v2 = sub_1A594BA18();
  *(_QWORD *)(v2 + 16) = 16;
  *(_QWORD *)(v2 + 32) = 0;
  *(_BYTE *)(v2 + 40) = 1;
  *(_QWORD *)(v2 + 48) = 0;
  *(_BYTE *)(v2 + 56) = 1;
  *(_QWORD *)(v2 + 64) = 0;
  *(_BYTE *)(v2 + 72) = 1;
  *(_QWORD *)(v2 + 80) = 0;
  *(_BYTE *)(v2 + 88) = 1;
  *(_QWORD *)(v2 + 96) = 0;
  *(_BYTE *)(v2 + 104) = 1;
  *(_QWORD *)(v2 + 112) = 0;
  *(_BYTE *)(v2 + 120) = 1;
  *(_QWORD *)(v2 + 128) = 0;
  *(_BYTE *)(v2 + 136) = 1;
  *(_QWORD *)(v2 + 144) = 0;
  *(_BYTE *)(v2 + 152) = 1;
  *(_QWORD *)(v2 + 160) = 0;
  *(_BYTE *)(v2 + 168) = 1;
  *(_QWORD *)(v2 + 176) = 0;
  *(_BYTE *)(v2 + 184) = 1;
  *(_QWORD *)(v2 + 192) = 0;
  *(_BYTE *)(v2 + 200) = 1;
  *(_QWORD *)(v2 + 208) = 0;
  *(_BYTE *)(v2 + 216) = 1;
  *(_QWORD *)(v2 + 224) = 0;
  *(_BYTE *)(v2 + 232) = 1;
  *(_QWORD *)(v2 + 240) = 0;
  *(_BYTE *)(v2 + 248) = 1;
  *(_QWORD *)(v2 + 256) = 0;
  *(_BYTE *)(v2 + 264) = 1;
  *(_QWORD *)(v2 + 272) = 0;
  *(_BYTE *)(v2 + 280) = 1;
  v10 = 0;
  v9 = v2;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    while (1)
    {
      v5 = *(_QWORD *)(a1 + 8 * v4 + 32);
      v6 = v9;
      if ((OUTLINED_FUNCTION_34_3() & 1) == 0)
      {
        OUTLINED_FUNCTION_41_3();
        v6 = v7;
      }
      if ((v10 & 0x8000000000000000) != 0)
        break;
      if (v10 >= *(_QWORD *)(v6 + 16))
        goto LABEL_13;
      v8 = v6 + 16 * v10;
      *(_QWORD *)(v8 + 32) = v5;
      *(_BYTE *)(v8 + 40) = 0;
      v9 = v6;
      v10 = (*(_QWORD *)(v6 + 16) - 1) & (v10 + 1);
      if (!v10)
        sub_1A567D808();
      if (v3 == ++v4)
        goto LABEL_10;
    }
    __break(1u);
LABEL_13:
    __break(1u);
  }
  else
  {
LABEL_10:
    OUTLINED_FUNCTION_17();
  }
}

uint64_t sub_1A567D7DC(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  if ((unint64_t)result >= *(_QWORD *)(a2 + 16))
  {
    __break(1u);
  }
  else
  {
    v2 = a2 + 16 * result;
    if ((*(_BYTE *)(v2 + 40) & 1) == 0)
      return *(_QWORD *)(v2 + 32);
  }
  __break(1u);
  return result;
}

void sub_1A567D808()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  _QWORD v39[2];
  char v40;
  uint64_t v41;
  uint64_t v42;

  v1 = *v0;
  v2 = 2 * *(_QWORD *)(*v0 + 16);
  if (v2 < 1)
    goto LABEL_40;
  v3 = v0;
  v4 = v0[1];
  v5 = v0[2];
  v42 = MEMORY[0x1E0DEE9D8];
  sub_1A5682FE8(0, v2, 0);
  v6 = sub_1A56AB694(v4, v1);
  sub_1A567DAD0(v6, v7, v8, v9);
  if ((v5 & 0x8000000000000000) != 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (*(_QWORD *)(v1 + 16) < v5)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v10 = swift_retain();
  sub_1A567DAD0(v10, v1 + 32, 0, (2 * v5) | 1);
  v11 = v42;
  v12 = *(_QWORD *)(v42 + 16);
  v13 = v2 - v12;
  if (v13 < 0)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  v15 = OUTLINED_FUNCTION_34_3();
  if (!v15 || (v16 = *(_QWORD *)(v42 + 24) >> 1, v16 < v14))
  {
    if (v12 <= v14)
      v17 = v12 + v13;
    else
      v17 = v12;
    sub_1A5682FE8(v15, v17, 1);
    v11 = v42;
    v16 = *(_QWORD *)(v42 + 24) >> 1;
  }
  v18 = *(_QWORD *)(v11 + 16);
  v19 = v16 - v18;
  v20 = sub_1A569D5C8((uint64_t)v39, v11 + 16 * v18 + 32, v16 - v18, v13, 0, 1);
  if (v20 < v13)
  {
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  if (v20 < 1)
    goto LABEL_16;
  v21 = *(_QWORD *)(v11 + 16);
  v22 = __OFADD__(v21, v20);
  v23 = v21 + v20;
  if (v22)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  *(_QWORD *)(v11 + 16) = v23;
LABEL_16:
  if (v20 != v19 || (v24 = v39[0], v41 == v39[0]))
  {
LABEL_38:
    swift_release();
    v3[1] = 0;
    v3[2] = v12;
    *v3 = v11;
    OUTLINED_FUNCTION_5_2();
    return;
  }
  if ((v41 & 0x8000000000000000) == 0 && v41 < v39[0])
  {
    v25 = *(_QWORD *)(v11 + 16);
    v26 = v39[1];
    v27 = v40;
    v28 = v41 + 1;
    v29 = 1 - v39[0];
    while (1)
    {
      v30 = *(_QWORD *)(v11 + 24);
      v31 = v30 >> 1;
      v32 = v25 + 1;
      if ((uint64_t)(v30 >> 1) < v25 + 1)
      {
        v38 = v29;
        sub_1A5682FE8(v30 > 1, v25 + 1, 1);
        v29 = v38;
        v11 = v42;
        v31 = *(_QWORD *)(v42 + 24) >> 1;
      }
      if (v25 >= v31)
      {
        v32 = v25;
        v34 = v28;
      }
      else
      {
        v33 = v11 + 32 + 16 * v25;
        *(_QWORD *)v33 = v26;
        *(_BYTE *)(v33 + 8) = v27;
        if (v28 == v24)
          goto LABEL_37;
        if (v28 < 0 || v28 >= v24)
          goto LABEL_46;
        v34 = v28 + 1;
        if (v32 < v31)
        {
          v35 = v11 + 32 + 16 * v32;
          *(_QWORD *)v35 = v26;
          *(_BYTE *)(v35 + 8) = v27;
          v32 = v25 + 2;
          if (v34 == v24)
          {
LABEL_37:
            *(_QWORD *)(v11 + 16) = v32;
            goto LABEL_38;
          }
          v36 = 0;
          v37 = (_BYTE *)(v11 + 16 * v25 + 72);
          while (v28 + v36 + 1 < v24)
          {
            if (v32 + v36 >= v31)
            {
              v34 = v28 + v36 + 2;
              v32 += v36;
              goto LABEL_35;
            }
            *((_QWORD *)v37 - 1) = v26;
            *v37 = v27;
            v37 += 16;
            ++v36;
            if (!(v29 + v28 + v36))
            {
              v32 = v25 + v36 + 2;
              goto LABEL_37;
            }
          }
          __break(1u);
LABEL_40:
          __break(1u);
          goto LABEL_41;
        }
      }
LABEL_35:
      *(_QWORD *)(v11 + 16) = v32;
      v25 = v32;
      v28 = v34;
    }
  }
LABEL_48:
  __break(1u);
}

void sub_1A567DAD0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  v5 = a4 >> 1;
  v6 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_18;
  }
  v7 = *v4;
  v8 = *(_QWORD *)(*v4 + 16);
  v9 = v8 + v6;
  if (__OFADD__(v8, v6))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v4 = v7;
  if (!isUniquelyReferenced_nonNull_native || (v13 = *(_QWORD *)(v7 + 24) >> 1, v13 < v9))
  {
    if (v8 <= v9)
      v14 = v8 + v6;
    else
      v14 = v8;
    sub_1A5682FE8(isUniquelyReferenced_nonNull_native, v14, 1);
    v7 = *v4;
    v13 = *(_QWORD *)(*v4 + 24) >> 1;
  }
  if (v5 == a3)
  {
    if (v6 <= 0)
    {
LABEL_16:
      swift_unknownObjectRelease();
      *v4 = v7;
      return;
    }
    __break(1u);
  }
  v15 = *(_QWORD *)(v7 + 16);
  if (v13 - v15 < v6)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  memcpy((void *)(v7 + 16 * v15 + 32), (const void *)(a2 + 16 * a3), 16 * v6);
  if (v6 <= 0)
    goto LABEL_16;
  v16 = *(_QWORD *)(v7 + 16);
  v17 = __OFADD__(v16, v6);
  v18 = v16 + v6;
  if (!v17)
  {
    *(_QWORD *)(v7 + 16) = v18;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
}

void sub_1A567DBD8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a1;
  v3 = *v1;
  v4 = v1[1];
  v5 = v1[2];
  v6 = v5 < v4;
  v7 = v5 - v4;
  if (v6)
    v7 += *(_QWORD *)(v3 + 16);
  if (v7 < a1)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if ((a1 & 0x8000000000000000) == 0)
  {
    if (!a1)
    {
LABEL_13:
      v1[1] = v4;
      return;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1A576C288();
      v3 = v8;
    }
    while ((v4 & 0x8000000000000000) == 0)
    {
      if ((unint64_t)v4 >= *(_QWORD *)(v3 + 16))
        goto LABEL_15;
      v9 = v3 + 32 + 16 * v4;
      *(_QWORD *)v9 = 0;
      *(_BYTE *)(v9 + 8) = 1;
      v4 = (*(_QWORD *)(v3 + 16) - 1) & (v4 + 1);
      if (!--v2)
      {
        *v1 = v3;
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
LABEL_17:
  __break(1u);
}

uint64_t CommandEncodeBuffer.buffer.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A567DC9C(v1, a1);
}

uint64_t sub_1A567DC9C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for EncodeBuffer(a2, a1);
  return a2;
}

uint64_t CommandEncodeBuffer.buffer.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1A567DCE0(a1, v1);
}

uint64_t sub_1A567DCE0(uint64_t a1, uint64_t a2)
{
  assignWithTake for EncodeBuffer(a2, a1);
  return a2;
}

double (*CommandEncodeBuffer.buffer.modify())(_QWORD)
{
  return nullsub_1;
}

void CommandEncodeBuffer.init(buffer:options:encodedAtLeastOneCatenateElement:loggingMode:)(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X8>)
{
  char v8;
  int v9;
  int v10;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v8 = BYTE4(a4);
  v9 = a3;
  v10 = a2;
  v13 = HIDWORD(a2);
  v14 = HIDWORD(a3);
  v15 = HIWORD(a3);
  v16 = a4 & 0x1010101;
  sub_1A567D650(MEMORY[0x1E0DEE9D8]);
  *(_BYTE *)a7 = a6;
  *(_BYTE *)(a7 + 5) = v8 & 1;
  *(_DWORD *)(a7 + 1) = v16;
  *(_QWORD *)(a7 + 8) = a1;
  *(_DWORD *)(a7 + 16) = v10;
  *(_DWORD *)(a7 + 20) = v13;
  *(_DWORD *)(a7 + 24) = v9;
  *(_WORD *)(a7 + 28) = v14;
  *(_BYTE *)(a7 + 30) = v15;
  *(_QWORD *)(a7 + 32) = v17;
  *(_QWORD *)(a7 + 40) = v18;
  *(_QWORD *)(a7 + 48) = v19;
  *(_BYTE *)(a7 + 56) = a5;
}

uint64_t CommandEncodeBuffer.hash(into:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_35_4();
  EncodeBuffer.hash(into:)(v0);
  return sub_1A594CE94();
}

uint64_t static CommandEncodeBuffer.__derived_struct_equals(_:_:)(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  char v4;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  unint64_t v22;
  BOOL v23;
  BOOL v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  _BYTE v35[24];
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  int v39;
  __int128 v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  unsigned int v44;
  unsigned __int8 v45;
  unsigned int v46;
  unsigned __int8 v47;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)&v35[8] = *(_OWORD *)a1;
  v36 = v2;
  v37 = *(_OWORD *)(a1 + 32);
  v38 = *(_QWORD *)(a1 + 48);
  v3 = a2[1];
  v31 = *a2;
  v32 = v3;
  v33 = a2[2];
  v34 = *((_QWORD *)a2 + 6);
  if ((v35[8] & 1) != (v31 & 1))
    goto LABEL_2;
  sub_1A567F6A8((int *)&v35[9], (uint64_t)&v39);
  sub_1A567F6A8((int *)((char *)&v31 + 1), (uint64_t)&v35[3]);
  v8 = sub_1A567F6A8(&v39, (uint64_t)&v44);
  v16 = v44 | ((unint64_t)v45 << 32);
  if ((v16 & 0x8000000000) == 0)
  {
    v17 = BYTE1(v44);
    v18 = BYTE2(v44);
    v19 = HIBYTE(v44);
    v20 = v45;
    result = OUTLINED_FUNCTION_58_1(v8, v9, v10, v11, v12, v13, v14, v15, v29, v30, v31, *((uint64_t *)&v31 + 1), v32, *((uint64_t *)&v32 + 1), v33, *((uint64_t *)&v33 + 1), v34, *(__int128 *)v35);
    if (((v46 | ((unint64_t)v47 << 32)) & 0x8000000000) == 0)
    {
      v4 = 0;
      if (((v16 ^ v46) & 1) != 0
        || ((v17 ^ BYTE1(v46)) & 1) != 0
        || ((v18 ^ BYTE2(v46)) & 1) != 0
        || ((v19 ^ HIBYTE(v46)) & 1) != 0)
      {
        return v4 & 1;
      }
      v21 = v47;
      goto LABEL_14;
    }
LABEL_2:
    v4 = 0;
    return v4 & 1;
  }
  v45 = BYTE4(v16) & 0x7F;
  v20 = BYTE1(v16);
  result = OUTLINED_FUNCTION_58_1(v8, v9, v10, v11, v12, v13, v14, v15, v29, v30, v31, *((uint64_t *)&v31 + 1), v32, *((uint64_t *)&v32 + 1), v33, *((uint64_t *)&v33 + 1), v34, *(__int128 *)v35);
  v22 = v46 | ((unint64_t)v47 << 32);
  if ((v22 & 0x8000000000) == 0)
    goto LABEL_2;
  v4 = 0;
  v47 = BYTE4(v22) & 0x7F;
  if (((v16 ^ v22) & 1) != 0)
    return v4 & 1;
  v21 = BYTE1(v46);
LABEL_14:
  if (((v20 ^ v21) & 1) != 0)
    return v4 & 1;
  if (DWORD1(v36) < v36)
  {
    __break(1u);
  }
  else if (DWORD1(v32) >= v32)
  {
    if (DWORD1(v36) - (_DWORD)v36 == DWORD1(v32) - (_DWORD)v32)
    {
      v23 = DWORD2(v36) == DWORD2(v32) && WORD6(v36) == WORD6(v32);
      v24 = v23 && BYTE14(v36) == BYTE14(v32);
      v25 = v24 && *(_QWORD *)&v35[16] == *((_QWORD *)&v31 + 1);
      if (v25 || (swift_retain(), (sub_1A566B918() & 1) != 0))
      {
        v26 = v38 - *((_QWORD *)&v37 + 1);
        if (v38 < *((uint64_t *)&v37 + 1))
          v26 += *(_QWORD *)(v37 + 16);
        v27 = v34 - *((_QWORD *)&v33 + 1);
        if (v34 < *((uint64_t *)&v33 + 1))
          v27 += *(_QWORD *)(v33 + 16);
        if (v26 == v27)
        {
          v40 = v37;
          v41 = v38;
          v42 = v33;
          v43 = v34;
          swift_retain();
          swift_retain();
          v28 = sub_1A567D458((uint64_t)&v40);
          swift_release();
          swift_release();
          if ((v28 & 1) != 0)
          {
            v4 = ((*(_BYTE *)(a1 + 56) & 1) == 0) ^ *((_BYTE *)a2 + 56);
            return v4 & 1;
          }
        }
      }
    }
    goto LABEL_2;
  }
  __break(1u);
  return result;
}

uint64_t CommandEncodeBuffer.hashValue.getter()
{
  __int128 *v0;
  __int128 v1;
  _BYTE v3[72];
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;

  sub_1A594CE64();
  v1 = v0[1];
  v4 = *v0;
  v5 = v1;
  v6 = v0[2];
  v7 = *((_QWORD *)v0 + 6);
  EncodeBuffer.hash(into:)((uint64_t)v3);
  sub_1A594CE94();
  return sub_1A594CED0();
}

uint64_t sub_1A567E144()
{
  __int128 *v0;
  __int128 v1;
  _BYTE v3[72];
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;

  v1 = v0[1];
  v4 = *v0;
  v5 = v1;
  v6 = v0[2];
  v7 = *((_QWORD *)v0 + 6);
  sub_1A594CE64();
  EncodeBuffer.hash(into:)((uint64_t)v3);
  sub_1A594CE94();
  return sub_1A594CED0();
}

unint64_t CommandEncodeBuffer.options.getter()
{
  unint64_t result;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6[16];
  int v7;
  unsigned int v8;
  char v9;

  OUTLINED_FUNCTION_35_4();
  sub_1A567F6A8(v6, (uint64_t)&v7);
  result = sub_1A567F6A8(&v7, (uint64_t)&v8);
  v1 = v8 | (unint64_t)((uint64_t)v9 << 32);
  if ((v1 & 0x8000000000000000) != 0)
  {
    v9 = BYTE4(v1) & 0x7F;
    __break(1u);
  }
  else
  {
    v2 = 0x100000000;
    if (!v9)
      v2 = 0;
    v3 = 0x1000000;
    if (!HIBYTE(v8))
      v3 = 0;
    v4 = 0x10000;
    if (!BYTE2(v8))
      v4 = 0;
    v5 = 256;
    if (!BYTE1(v8))
      v5 = 0;
    return v5 & 0xFFFFFFFFFFFFFFFELL | v8 & 1 | v4 | v3 | v2;
  }
  return result;
}

uint64_t CommandEncodeBuffer.options.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 5) = BYTE4(result) & 1;
  *(_DWORD *)(v1 + 1) = result & 0x1010101;
  return result;
}

uint64_t *(*CommandEncodeBuffer.options.modify(uint64_t *(*result)(uint64_t *result)))(uint64_t *result)
{
  uint64_t v1;
  unint64_t v2;
  int8x16_t v3;
  uint64x2_t v4;
  int16x8_t v5;

  *(_QWORD *)result = v1;
  v2 = *(unsigned int *)(v1 + 1) | (unint64_t)((uint64_t)*(char *)(v1 + 5) << 32);
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    *((_BYTE *)result + 8) = *(_DWORD *)(v1 + 1) & 1;
    v3.i64[0] = 0xFFFFFFFFFFLL;
    v3.i64[1] = 0xFFFFFFFFFFLL;
    v4 = (uint64x2_t)vandq_s8((int8x16_t)vdupq_n_s64(v2), v3);
    v5 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v4, (uint64x2_t)xmmword_1A59ABFB0), (int32x4_t)vshlq_u64(v4, (uint64x2_t)xmmword_1A59ABFA0));
    *(int8x8_t *)v5.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v5), (int8x8_t)0x1000100010001);
    *(_DWORD *)((char *)result + 9) = vmovn_s16(v5).u32[0];
    return sub_1A567E2DC;
  }
  return result;
}

uint64_t *sub_1A567E2DC(uint64_t *result)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;

  v1 = *result;
  v2 = 256;
  if (!*((_BYTE *)result + 9))
    v2 = 0;
  v3 = v2 | *((unsigned __int8 *)result + 8);
  v4 = 0x10000;
  if (!*((_BYTE *)result + 10))
    v4 = 0;
  v5 = 0x1000000;
  if (!*((_BYTE *)result + 11))
    v5 = 0;
  *(_BYTE *)(v1 + 5) = *((_BYTE *)result + 12) != 0;
  *(_DWORD *)(v1 + 1) = v3 | v4 | v5;
  return result;
}

void CommandEncodeBuffer.init(buffer:capabilities:encodedAtLeastOneCatenateElement:loggingMode:)(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, Swift::OpaquePointer a4@<X3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X8>)
{
  int v9;
  int v10;
  uint64_t v12;
  char v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;

  v9 = a3;
  v10 = a2;
  v22 = HIDWORD(a2);
  v23 = HIDWORD(a3);
  v24 = HIWORD(a3);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  *(NIOIMAPCore2::CommandEncodingOptions *)&v12 = CommandEncodingOptions.init(capabilities:)(a4);
  v13 = BYTE4(v12);
  v14 = v12 & 0x1010101;
  sub_1A567D650(MEMORY[0x1E0DEE9D8]);
  v16 = v15;
  v18 = v17;
  v20 = v19;
  swift_bridgeObjectRelease();
  *(_BYTE *)a7 = a6;
  *(_BYTE *)(a7 + 5) = v13 & 1;
  *(_DWORD *)(a7 + 1) = v14;
  *(_QWORD *)(a7 + 8) = a1;
  *(_DWORD *)(a7 + 16) = v10;
  *(_DWORD *)(a7 + 20) = v22;
  *(_DWORD *)(a7 + 24) = v9;
  *(_WORD *)(a7 + 28) = v23;
  *(_BYTE *)(a7 + 30) = v24;
  *(_QWORD *)(a7 + 32) = v16;
  *(_QWORD *)(a7 + 40) = v18;
  *(_QWORD *)(a7 + 48) = v20;
  *(_BYTE *)(a7 + 56) = a5;
  OUTLINED_FUNCTION_5_2();
}

void sub_1A567E418()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  unint64_t v18;
  unsigned __int16 v19;
  unsigned __int8 v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;
  unsigned int v29;
  unsigned int v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _BYTE v34[48];

  if (qword_1EE796BD0 != -1)
    goto LABEL_64;
  while (1)
  {
    OUTLINED_FUNCTION_22_8();
    sub_1A567D650(MEMORY[0x1E0DEE9D8]);
    v5 = (void *)OUTLINED_FUNCTION_5_11();
    sub_1A56B2BA0(v5);
    OUTLINED_FUNCTION_48_1();
    if (v6 < 0)
      break;
    sub_1A5681854();
    v8 = v29;
    if ((v9 & 1) != 0)
      goto LABEL_13;
    v2 = v7;
    v10 = v7 - v29;
    if (__OFSUB__(v7, v29))
      goto LABEL_66;
    OUTLINED_FUNCTION_12_9();
    v0 = OUTLINED_FUNCTION_2_14(v29, v10);
    v1 = v11;
    OUTLINED_FUNCTION_17_4();
    if (!v0)
      goto LABEL_73;
    if (__CFADD__(v29, (_DWORD)v10))
      goto LABEL_68;
    OUTLINED_FUNCTION_24_2();
LABEL_17:
    OUTLINED_FUNCTION_13_7(v12);
    swift_retain();
    sub_1A56D7A2C((uint64_t)v34);
    if (!(_DWORD)v0)
    {
      OUTLINED_FUNCTION_15_1();
      swift_release();
      OUTLINED_FUNCTION_17_4();
      sub_1A568081C(v25);
      OUTLINED_FUNCTION_15_9();
      return;
    }
    v0 = 4294967041;
    if (((v26 | (unint64_t)((uint64_t)v27 << 32)) & 0x8000000000000000) != 0)
    {
      OUTLINED_FUNCTION_57_2();
      if (!v22)
        goto LABEL_60;
      v4 = v28;
      v13 = v3 | (v21 << 32);
      OUTLINED_FUNCTION_3_12();
      OUTLINED_FUNCTION_4_14(v3, v8, v28, v13);
      OUTLINED_FUNCTION_6_12();
      if (!v1)
        goto LABEL_70;
      OUTLINED_FUNCTION_15_1();
      if (!__CFADD__((_DWORD)v3, (_DWORD)v8))
      {
        OUTLINED_FUNCTION_51_2();
        goto LABEL_45;
      }
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
      goto LABEL_63;
    }
    v13 = v31;
    v2 = v32;
    v14 = v33 - v32;
    if (v33 < (uint64_t)v32)
      OUTLINED_FUNCTION_31_2();
    if (v14 >= 1)
    {
      if (v33 == v32)
        goto LABEL_53;
      if ((v32 & 0x8000000000000000) != 0)
        goto LABEL_54;
      if (HIDWORD(v32))
        goto LABEL_55;
      OUTLINED_FUNCTION_39_3();
      if (v16 != v17)
        OUTLINED_FUNCTION_31_2();
      if (v15 < 1)
        goto LABEL_56;
      if ((OUTLINED_FUNCTION_34_3() & 1) == 0)
      {
        OUTLINED_FUNCTION_41_3();
        v13 = v18;
      }
      if (v32 >= *(_QWORD *)(v13 + 16))
        goto LABEL_57;
      OUTLINED_FUNCTION_10_7();
      if (v17)
        goto LABEL_58;
      OUTLINED_FUNCTION_9_10();
      OUTLINED_FUNCTION_4_14(v4, v33, v1, v13);
      OUTLINED_FUNCTION_36_4();
      OUTLINED_FUNCTION_15_1();
      if (!__CFADD__((_DWORD)v4, (_DWORD)v33))
      {
        OUTLINED_FUNCTION_23_5();
        goto LABEL_45;
      }
      goto LABEL_59;
    }
    OUTLINED_FUNCTION_57_2();
    if (!v22)
      goto LABEL_62;
    v4 = v28;
    v13 = v3 | (v23 << 32);
    OUTLINED_FUNCTION_3_12();
    OUTLINED_FUNCTION_4_14(v3, v33, v28, v13);
    OUTLINED_FUNCTION_6_12();
    if (!v1)
      goto LABEL_71;
    OUTLINED_FUNCTION_15_1();
    if (!__CFADD__((_DWORD)v3, (_DWORD)v33))
    {
      OUTLINED_FUNCTION_52_2();
LABEL_45:
      if (HIDWORD(v13) < v13)
      {
        __break(1u);
      }
      else
      {
        v24 = v20 | (v19 << 8);
        if (v2 >= v24)
        {
          if (HIDWORD(v13) <= v2 - v24)
          {
            OUTLINED_FUNCTION_20_8();
            OUTLINED_FUNCTION_47_1();
          }
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
LABEL_56:
          __break(1u);
LABEL_57:
          __break(1u);
LABEL_58:
          __break(1u);
LABEL_59:
          __break(1u);
LABEL_60:
          __break(1u);
          goto LABEL_61;
        }
      }
      __break(1u);
      goto LABEL_52;
    }
LABEL_63:
    __break(1u);
LABEL_64:
    swift_once();
  }
  v8 = v29;
  if (v30 >= v29)
  {
    OUTLINED_FUNCTION_0_19();
    OUTLINED_FUNCTION_1_10();
    OUTLINED_FUNCTION_7_11();
    if (!v0)
      goto LABEL_72;
    if (__CFADD__(v29, v30 - v29))
    {
      __break(1u);
LABEL_13:
      if (v30 < v8)
        goto LABEL_67;
      OUTLINED_FUNCTION_0_19();
      OUTLINED_FUNCTION_1_10();
      OUTLINED_FUNCTION_7_11();
      if (!v0)
        goto LABEL_74;
      if (__CFADD__((_DWORD)v8, v30 - v8))
        goto LABEL_69;
    }
    OUTLINED_FUNCTION_37_3();
    goto LABEL_17;
  }
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
}

void sub_1A567E948(const void *a1)
{
  char *v2;
  _BYTE v3[136];
  _BYTE v4[136];
  _BYTE v5[144];

  sub_1A567FF24(a1, v3);
  sub_1A567FF24(v3, v5);
  if (qword_1EE796BD0 != -1)
    swift_once();
  swift_retain();
  sub_1A567D650(MEMORY[0x1E0DEE9D8]);
  sub_1A567FF24(a1, v4);
  v2 = (char *)&loc_1A567EA20 + *((int *)qword_1A567F168 + sub_1A567FF60((uint64_t)v4));
  __asm { BR              X10 }
}

void sub_1A567F178()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  Swift::String *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  unint64_t v18;
  unsigned __int16 v19;
  unsigned __int8 v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;
  unsigned int v29;
  unsigned int v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _BYTE v34[48];

  if (qword_1EE796BD0 != -1)
    goto LABEL_64;
  while (1)
  {
    OUTLINED_FUNCTION_22_8();
    sub_1A567D650(MEMORY[0x1E0DEE9D8]);
    v5 = (Swift::String *)OUTLINED_FUNCTION_5_11();
    CommandEncodeBuffer.writeCommand(_:)(v5);
    OUTLINED_FUNCTION_48_1();
    if (v6 < 0)
      break;
    sub_1A5681854();
    v8 = v29;
    if ((v9 & 1) != 0)
      goto LABEL_13;
    v2 = v7;
    v10 = v7 - v29;
    if (__OFSUB__(v7, v29))
      goto LABEL_66;
    OUTLINED_FUNCTION_12_9();
    v0 = OUTLINED_FUNCTION_2_14(v29, v10);
    v1 = v11;
    OUTLINED_FUNCTION_17_4();
    if (!v0)
      goto LABEL_73;
    if (__CFADD__(v29, (_DWORD)v10))
      goto LABEL_68;
    OUTLINED_FUNCTION_24_2();
LABEL_17:
    OUTLINED_FUNCTION_13_7(v12);
    swift_retain();
    sub_1A56D7A2C((uint64_t)v34);
    if (!(_DWORD)v0)
    {
      OUTLINED_FUNCTION_15_1();
      swift_release();
      OUTLINED_FUNCTION_17_4();
      sub_1A567FA5C(v25);
      OUTLINED_FUNCTION_15_9();
      return;
    }
    v0 = 4294967041;
    if (((v26 | (unint64_t)((uint64_t)v27 << 32)) & 0x8000000000000000) != 0)
    {
      OUTLINED_FUNCTION_57_2();
      if (!v22)
        goto LABEL_60;
      v4 = v28;
      v13 = v3 | (v21 << 32);
      OUTLINED_FUNCTION_3_12();
      OUTLINED_FUNCTION_4_14(v3, v8, v28, v13);
      OUTLINED_FUNCTION_6_12();
      if (!v1)
        goto LABEL_70;
      OUTLINED_FUNCTION_15_1();
      if (!__CFADD__((_DWORD)v3, (_DWORD)v8))
      {
        OUTLINED_FUNCTION_51_2();
        goto LABEL_45;
      }
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
      goto LABEL_63;
    }
    v13 = v31;
    v2 = v32;
    v14 = v33 - v32;
    if (v33 < (uint64_t)v32)
      OUTLINED_FUNCTION_31_2();
    if (v14 >= 1)
    {
      if (v33 == v32)
        goto LABEL_53;
      if ((v32 & 0x8000000000000000) != 0)
        goto LABEL_54;
      if (HIDWORD(v32))
        goto LABEL_55;
      OUTLINED_FUNCTION_39_3();
      if (v16 != v17)
        OUTLINED_FUNCTION_31_2();
      if (v15 < 1)
        goto LABEL_56;
      if ((OUTLINED_FUNCTION_34_3() & 1) == 0)
      {
        OUTLINED_FUNCTION_41_3();
        v13 = v18;
      }
      if (v32 >= *(_QWORD *)(v13 + 16))
        goto LABEL_57;
      OUTLINED_FUNCTION_10_7();
      if (v17)
        goto LABEL_58;
      OUTLINED_FUNCTION_9_10();
      OUTLINED_FUNCTION_4_14(v4, v33, v1, v13);
      OUTLINED_FUNCTION_36_4();
      OUTLINED_FUNCTION_15_1();
      if (!__CFADD__((_DWORD)v4, (_DWORD)v33))
      {
        OUTLINED_FUNCTION_23_5();
        goto LABEL_45;
      }
      goto LABEL_59;
    }
    OUTLINED_FUNCTION_57_2();
    if (!v22)
      goto LABEL_62;
    v4 = v28;
    v13 = v3 | (v23 << 32);
    OUTLINED_FUNCTION_3_12();
    OUTLINED_FUNCTION_4_14(v3, v33, v28, v13);
    OUTLINED_FUNCTION_6_12();
    if (!v1)
      goto LABEL_71;
    OUTLINED_FUNCTION_15_1();
    if (!__CFADD__((_DWORD)v3, (_DWORD)v33))
    {
      OUTLINED_FUNCTION_52_2();
LABEL_45:
      if (HIDWORD(v13) < v13)
      {
        __break(1u);
      }
      else
      {
        v24 = v20 | (v19 << 8);
        if (v2 >= v24)
        {
          if (HIDWORD(v13) <= v2 - v24)
          {
            OUTLINED_FUNCTION_20_8();
            OUTLINED_FUNCTION_47_1();
          }
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
LABEL_56:
          __break(1u);
LABEL_57:
          __break(1u);
LABEL_58:
          __break(1u);
LABEL_59:
          __break(1u);
LABEL_60:
          __break(1u);
          goto LABEL_61;
        }
      }
      __break(1u);
      goto LABEL_52;
    }
LABEL_63:
    __break(1u);
LABEL_64:
    swift_once();
  }
  v8 = v29;
  if (v30 >= v29)
  {
    OUTLINED_FUNCTION_0_19();
    OUTLINED_FUNCTION_1_10();
    OUTLINED_FUNCTION_7_11();
    if (!v0)
      goto LABEL_72;
    if (__CFADD__(v29, v30 - v29))
    {
      __break(1u);
LABEL_13:
      if (v30 < v8)
        goto LABEL_67;
      OUTLINED_FUNCTION_0_19();
      OUTLINED_FUNCTION_1_10();
      OUTLINED_FUNCTION_7_11();
      if (!v0)
        goto LABEL_74;
      if (__CFADD__((_DWORD)v8, v30 - v8))
        goto LABEL_69;
    }
    OUTLINED_FUNCTION_37_3();
    goto LABEL_17;
  }
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
}

uint64_t sub_1A567F6A8(int *a1, uint64_t a2)
{
  __swift_memcpy5_1(a2, a1);
  return a2;
}

unint64_t sub_1A567F6E8()
{
  unint64_t result;

  result = qword_1EE7A9390;
  if (!qword_1EE7A9390)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for CommandEncodeBuffer, &type metadata for CommandEncodeBuffer);
    atomic_store(result, (unint64_t *)&qword_1EE7A9390);
  }
  return result;
}

uint64_t destroy for EncodeBuffer()
{
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for CommandEncodeBuffer(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_DWORD *)(a1 + 1) = *(_DWORD *)(a2 + 1);
  *(_BYTE *)(a1 + 5) = *(_BYTE *)(a2 + 5);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 27) = *(_DWORD *)(a2 + 27);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for CommandEncodeBuffer(uint64_t a1, uint64_t a2)
{
  int v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_DWORD *)(a2 + 1);
  *(_BYTE *)(a1 + 5) = *(_BYTE *)(a2 + 5);
  *(_DWORD *)(a1 + 1) = v4;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_WORD *)(a1 + 28) = *(_WORD *)(a2 + 28);
  *(_BYTE *)(a1 + 30) = *(_BYTE *)(a2 + 30);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

__n128 __swift_memcpy57_8_0(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for CommandEncodeBuffer(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_DWORD *)(a1 + 1) = *(_DWORD *)(a2 + 1);
  *(_BYTE *)(a1 + 5) = *(_BYTE *)(a2 + 5);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_WORD *)(a1 + 28) = *(_WORD *)(a2 + 28);
  *(_BYTE *)(a1 + 30) = *(_BYTE *)(a2 + 30);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for CommandEncodeBuffer(uint64_t a1, int a2)
{
  const float *v2;
  uint32x4_t v3;
  int8x16_t v4;
  unsigned int v5;
  int v6;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 57))
    {
      v6 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = (const float *)(a1 + 1);
      v3 = (uint32x4_t)vld1q_dup_f32(v2);
      v4 = vandq_s8((int8x16_t)vshlq_u32(v3, (uint32x4_t)xmmword_1A59ABFC0), (int8x16_t)xmmword_1A59ABFD0);
      *(int8x8_t *)v4.i8 = vorr_s8(*(int8x8_t *)v4.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v4, v4, 8uLL));
      v5 = v4.i32[0] | v4.i32[1] | (*(unsigned __int8 *)(a1 + 5) >> 1 << 28);
      if (v5 > 0x80000000)
        v6 = ~v5;
      else
        v6 = -1;
    }
  }
  else
  {
    v6 = -1;
  }
  return (v6 + 1);
}

int8x8_t storeEnumTagSinglePayload for CommandEncodeBuffer(uint64_t a1, int a2, int a3)
{
  int8x8_t result;
  uint64x2_t v4;
  int8x16_t v5;

  if (a2 < 0)
  {
    result = 0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_BYTE *)(a1 + 56) = 0;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 57) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      v4 = (uint64x2_t)vdupq_n_s64(-a2);
      v5 = vorrq_s8(vandq_s8((int8x16_t)vshlq_u64(v4, (uint64x2_t)xmmword_1A59994A0), (int8x16_t)xmmword_1A59AC000), vandq_s8((int8x16_t)vshlq_u64(v4, (uint64x2_t)xmmword_1A59ABFE0), (int8x16_t)xmmword_1A59ABFF0));
      result = vorr_s8(*(int8x8_t *)v5.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v5, v5, 8uLL));
      *(_DWORD *)(a1 + 1) = result.i32[0];
      *(_BYTE *)(a1 + 5) = (*(_QWORD *)&result | (32 * -a2) & 0x1E00000000uLL) >> 32;
      return result;
    }
    *(_BYTE *)(a1 + 57) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CommandEncodeBuffer()
{
  return &type metadata for CommandEncodeBuffer;
}

uint64_t sub_1A567FA5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(_QWORD *)(a1 + 64);
  v9 = *(_QWORD *)(a1 + 72);
  v12 = *(_OWORD *)(a1 + 96);
  v13 = *(_OWORD *)(a1 + 80);
  v11 = *(_OWORD *)(a1 + 112);
  swift_bridgeObjectRelease();
  sub_1A567FB10(v2, v3, v4, v5, v6, v7, v8, v9, v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v11, *((unint64_t *)&v11 + 1));
  return a1;
}

uint64_t sub_1A567FB10(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14)
{
  switch(a14 >> 58)
  {
    case 0uLL:
    case 2uLL:
    case 7uLL:
    case 8uLL:
    case 0x20uLL:
    case 0x24uLL:
      goto LABEL_20;
    case 1uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xDuLL:
    case 0x1BuLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
      goto LABEL_21;
    case 3uLL:
      sub_1A567FE0C(result, a2, a3, a4, a5, a6, a7, a8, a9);
      swift_bridgeObjectRelease();
      sub_1A56667E0(a12, a13, a14, HIBYTE(a14) & 1);
      goto LABEL_21;
    case 4uLL:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A56667E0(a4, a5, a6, HIBYTE(a6) & 1);
      goto LABEL_21;
    case 5uLL:
    case 0xBuLL:
      swift_bridgeObjectRelease();
      goto LABEL_18;
    case 6uLL:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      goto LABEL_18;
    case 0xCuLL:
      goto LABEL_15;
    case 0xEuLL:
    case 0x12uLL:
    case 0x14uLL:
    case 0x15uLL:
      sub_1A5503B8C(result, a2);
      goto LABEL_21;
    case 0xFuLL:
    case 0x16uLL:
      sub_1A5503B8C(result, a2);
      goto LABEL_20;
    case 0x10uLL:
    case 0x18uLL:
      sub_1A5503B8C(result, a2);
      swift_bridgeObjectRelease();
      return sub_1A567FE60();
    case 0x11uLL:
    case 0x17uLL:
      sub_1A567FE68(result);
LABEL_20:
      swift_bridgeObjectRelease();
      goto LABEL_21;
    case 0x13uLL:
      swift_release();
      swift_release();
      goto LABEL_18;
    case 0x19uLL:
      return sub_1A5503B8C(result, a2);
    case 0x1AuLL:
      goto LABEL_18;
    case 0x1CuLL:
      swift_release();
      goto LABEL_21;
    case 0x1DuLL:
      swift_bridgeObjectRelease();
LABEL_15:
      swift_bridgeObjectRelease();
LABEL_21:
      result = swift_bridgeObjectRelease();
      break;
    case 0x1EuLL:
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
LABEL_18:
      result = swift_release();
      break;
    case 0x1FuLL:
      sub_1A567FE68(result);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = sub_1A567FEA4(a5, a6, a7);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A567FE0C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (a9)
  {
    sub_1A568072C(result, a2, a3, a4, a5, a6, a7, a8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1A5666868, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A56668A4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A567FE60()
{
  return swift_bridgeObjectRelease();
}

unint64_t sub_1A567FE68(unint64_t result)
{
  switch((result >> 59) & 0x1E | (result >> 2) & 1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
      result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A567FEA4(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return sub_1A555D250(a2, a3);
  }
  return result;
}

unint64_t sub_1A567FEE8()
{
  unint64_t result;

  result = qword_1EE796320;
  if (!qword_1EE796320)
  {
    result = MEMORY[0x1A85B1874](MEMORY[0x1E0DEE460], MEMORY[0x1E0DEE458]);
    atomic_store(result, (unint64_t *)&qword_1EE796320);
  }
  return result;
}

void *sub_1A567FF24(const void *a1, void *a2)
{
  __swift_memcpy136_8(a2, a1);
  return a2;
}

uint64_t sub_1A567FF60(uint64_t a1)
{
  unsigned int v1;

  v1 = *(_BYTE *)(a1 + 127) & 2 | (*(_QWORD *)(a1 + 96) >> 63);
  if (v1 == 3)
    return (*(_DWORD *)a1 + 3);
  else
    return v1;
}

uint64_t sub_1A567FF88(uint64_t a1)
{
  sub_1A567FFE0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120));
  return a1;
}

uint64_t sub_1A567FFE0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16)
{
  int v16;

  v16 = HIBYTE(a16) & 2 | (a13 >> 63);
  switch(v16)
  {
    case 2:
      return swift_release();
    case 1:
      return sub_1A568014C(result, a2, a3, a4, a5, a6, a7, a8);
    case 0:
      swift_bridgeObjectRelease();
      return sub_1A567FB10(a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
  }
  return result;
}

uint64_t sub_1A568014C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned __int8 a8)
{
  switch(a8 >> 5)
  {
    case 0:
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      break;
    case 1:
    case 3:
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      goto LABEL_3;
    case 2:
    case 4:
LABEL_3:
      result = swift_release();
      break;
    case 5:
      result = sub_1A56801FC(result, a2, a3, SHIBYTE(a3));
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A56801FC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if (a4 == 1)
    return swift_release();
  return result;
}

uint64_t sub_1A5680210(uint64_t result)
{
  unint64_t v1;

  v1 = *(_QWORD *)(result + 120) & 0xFDFFFFFFFFFFFFFFLL;
  *(_QWORD *)(result + 96) &= ~0x8000000000000000;
  *(_QWORD *)(result + 120) = v1;
  return result;
}

uint64_t sub_1A568022C(uint64_t a1, uint64_t a2)
{
  __swift_memcpy57_8_0(a2, a1);
  return a2;
}

uint64_t sub_1A5680268(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned __int8 a8)
{
  switch(a8 >> 5)
  {
    case 0:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_5;
    case 1:
    case 3:
      swift_retain();
      swift_retain();
      swift_retain();
LABEL_5:
      result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      break;
    case 2:
    case 4:
      result = swift_retain();
      break;
    case 5:
      result = sub_1A5680328(result, a2, a3, SHIBYTE(a3));
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A5680328(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if (a4 == 1)
    return swift_retain();
  return result;
}

uint64_t sub_1A568033C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(_QWORD *)(a1 + 64);
  v9 = *(_QWORD *)(a1 + 72);
  v12 = *(_OWORD *)(a1 + 96);
  v13 = *(_OWORD *)(a1 + 80);
  v11 = *(_OWORD *)(a1 + 112);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A56803F0(v2, v3, v4, v5, v6, v7, v8, v9, v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v11, *((unint64_t *)&v11 + 1));
  return a1;
}

uint64_t sub_1A56803F0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14)
{
  switch(a14 >> 58)
  {
    case 0uLL:
    case 2uLL:
    case 7uLL:
    case 8uLL:
    case 0x20uLL:
    case 0x24uLL:
      goto LABEL_11;
    case 1uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xDuLL:
    case 0x1BuLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
      goto LABEL_20;
    case 3uLL:
      sub_1A56806D8(result, a2, a3, a4, a5, a6, a7, a8, a9);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A56667D4(a12, a13, a14, HIBYTE(a14) & 1);
      goto LABEL_20;
    case 4uLL:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A56667D4(a4, a5, a6, HIBYTE(a6) & 1);
      goto LABEL_20;
    case 5uLL:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      return swift_retain();
    case 6uLL:
      swift_retain();
      swift_retain();
      swift_retain();
LABEL_11:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_20;
    case 0xBuLL:
    case 0x1CuLL:
      swift_retain();
      goto LABEL_20;
    case 0xCuLL:
      goto LABEL_19;
    case 0xEuLL:
    case 0x12uLL:
    case 0x14uLL:
    case 0x15uLL:
      sub_1A5503BA0(result, a2);
      goto LABEL_20;
    case 0xFuLL:
    case 0x16uLL:
      sub_1A5503BA0(result, a2);
      goto LABEL_19;
    case 0x10uLL:
    case 0x18uLL:
      sub_1A5503BA0(result, a2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      return OUTLINED_FUNCTION_266_0();
    case 0x11uLL:
    case 0x17uLL:
      sub_1A568079C(result);
      goto LABEL_19;
    case 0x13uLL:
      swift_retain();
      swift_retain();
      return swift_retain();
    case 0x19uLL:
      return sub_1A5503BA0(result, a2);
    case 0x1AuLL:
      return swift_retain();
    case 0x1DuLL:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_19:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_20;
    case 0x1EuLL:
      swift_retain();
      swift_retain();
      swift_retain();
LABEL_20:
      result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      break;
    case 0x1FuLL:
      sub_1A568079C(result);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      result = sub_1A56807D8(a5, a6, a7);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A56806D8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (a9)
  {
    sub_1A568072C(result, a2, a3, a4, a5, a6, a7, a8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1A56667EC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5666818);
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return result;
}

uint64_t sub_1A568072C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD), uint64_t (*a10)(uint64_t, uint64_t, uint64_t))
{
  if (a5 != -1)
  {
    a9(result, a2, a3, a4, a5 & 1);
    return a10(a6, a7, a8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_266_0()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

unint64_t sub_1A568079C(unint64_t result)
{
  switch((result >> 59) & 0x1E | (result >> 2) & 1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
      result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A56807D8(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return sub_1A555ECF4(a2, a3);
  }
  return result;
}

uint64_t sub_1A568081C(uint64_t a1)
{
  sub_1A567FB10(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104));
  return a1;
}

uint64_t OUTLINED_FUNCTION_0_19()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_1_10()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return ByteBuffer.getSlice(at:length:)(v3, v4, v1, v0, v2);
}

uint64_t OUTLINED_FUNCTION_2_14(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return ByteBuffer.getSlice(at:length:)(a1, a2, v3, v2, v4);
}

uint64_t OUTLINED_FUNCTION_3_12()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_4_14(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;

  return ByteBuffer.getSlice(at:length:)(a1, a2, a3, a4, v4);
}

uint64_t OUTLINED_FUNCTION_5_11()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_6_12()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_7_11()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_9_10()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_10_7()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;

  v3 = v0 + 16 * v2;
  *(_QWORD *)(v3 + 32) = 0;
  *(_BYTE *)(v3 + 40) = v1;
}

uint64_t OUTLINED_FUNCTION_12_9()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_13_7@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;

  return ByteBufferView.init(_:)(v1, v2, a1 & 0xFFFF00000000 | v4 | v3 & 0xFF000000000000, v5 - 144);
}

uint64_t OUTLINED_FUNCTION_20_8()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_21_7()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_22_8()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_25_3()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_30_3()
{
  return sub_1A5788B14(0);
}

uint64_t OUTLINED_FUNCTION_32_4()
{
  return sub_1A594B52C();
}

uint64_t OUTLINED_FUNCTION_33_2()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_34_3()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

__n128 OUTLINED_FUNCTION_35_4()
{
  __n128 *v0;

  return v0[2];
}

uint64_t OUTLINED_FUNCTION_36_4()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_38_3()
{
  return sub_1A594CF48();
}

uint64_t OUTLINED_FUNCTION_39_3()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1A567D7DC(v1 | 0x1FFFFFF00000000, v0);
}

uint64_t OUTLINED_FUNCTION_40_3()
{
  return sub_1A594B5F8();
}

void OUTLINED_FUNCTION_41_3()
{
  sub_1A576C288();
}

void OUTLINED_FUNCTION_43_2(uint64_t a1, unint64_t a2)
{
  Swift::UInt32 v2;
  uint64_t v3;

  sub_1A56814E0(a1, a2, v3, v2);
}

uint64_t OUTLINED_FUNCTION_45_2()
{
  uint64_t v0;

  return v0;
}

Swift::Int OUTLINED_FUNCTION_46_2(uint64_t a1, uint64_t a2)
{
  Swift::Int v2;

  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v2);
}

void OUTLINED_FUNCTION_47_1()
{
  JUMPOUT(0x1A85AD968);
}

uint64_t OUTLINED_FUNCTION_49_2()
{
  uint64_t v0;

  return sub_1A567FF88(v0);
}

void *OUTLINED_FUNCTION_53_3()
{
  uint64_t v0;

  return sub_1A567FF24((const void *)(v0 - 224), &STACK[0x2A8]);
}

uint64_t OUTLINED_FUNCTION_54_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t (*v6)(char *, _QWORD);
  va_list va;

  va_start(va, a6);
  return v6(va, 0);
}

uint64_t OUTLINED_FUNCTION_56_3()
{
  return sub_1A5680210((uint64_t)&STACK[0x220]);
}

uint64_t OUTLINED_FUNCTION_58_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, __int128 a18)
{
  uint64_t v18;

  return sub_1A567F6A8((int *)((char *)&a18 + 3), v18 - 88);
}

uint64_t OUTLINED_FUNCTION_59_2()
{
  return 0xA0D454E4F44;
}

uint64_t sub_1A5680D80(uint64_t a1, uint64_t a2, unint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  _BYTE *i;
  uint64_t v11;
  char v12;
  BOOL v13;

  v5 = *(_QWORD *)(a5 + 16);
  if (!v5)
    return 0;
  for (i = (_BYTE *)(a5 + 56); ; i += 32)
  {
    v11 = *((_QWORD *)i - 1);
    v12 = *i;
    v13 = *((_QWORD *)i - 3) == a1 && *((_QWORD *)i - 2) == a2;
    if (!v13 && (sub_1A594CD38() & 1) == 0)
      goto LABEL_13;
    if ((v12 & 1) == 0)
      break;
    if ((a4 & 1) != 0)
      return 1;
LABEL_13:
    if (!--v5)
      return 0;
  }
  if ((a4 & 1) != 0 || (v11 ^ a3) >= 0x4000)
    goto LABEL_13;
  return 1;
}

uint64_t sub_1A5680E2C(uint64_t result)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;

  v2 = v1[3];
  v3 = v1[4];
  if (v2 == v3)
    return 0;
  v5 = *((unsigned int *)v1 + 2);
  v4 = *((_DWORD *)v1 + 3);
  v6 = v4 - v5;
  if (v4 >= v5)
  {
    v7 = result;
    v8 = *((unsigned __int8 *)v1 + 22);
    v9 = *((unsigned __int16 *)v1 + 10);
    v10 = *v1;
    v11 = v8 | (v9 << 8);
    result = swift_beginAccess();
    while (v2 < v3)
    {
      v12 = v2 - v5;
      if (__OFSUB__(v2, v5))
        goto LABEL_16;
      if (v12 < 0)
        goto LABEL_17;
      if (v12 >= v6)
        goto LABEL_18;
      v13 = *(unsigned __int8 *)(*(_QWORD *)(v10 + 24) + v11 + v2);
      result = v13 == v7;
      if (v13 == v7 || v3 - 1 == v2++)
        return result;
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
  }
  __break(1u);
  return result;
}

void *CommandEncodingOptions.rfc3501.unsafeMutableAddressor()
{
  return &static CommandEncodingOptions.rfc3501;
}

uint64_t CommandEncodingOptions.useQuotedString.getter(char a1)
{
  return a1 & 1;
}

uint64_t CommandEncodingOptions.useQuotedString.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

double (*CommandEncodingOptions.useQuotedString.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t CommandEncodingOptions.useSynchronizingLiteral.getter(unint64_t a1)
{
  return (a1 >> 8) & 1;
}

uint64_t CommandEncodingOptions.useSynchronizingLiteral.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

double (*CommandEncodingOptions.useSynchronizingLiteral.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t CommandEncodingOptions.useNonSynchronizingLiteralPlus.getter(unint64_t a1)
{
  return (a1 >> 16) & 1;
}

uint64_t CommandEncodingOptions.useNonSynchronizingLiteralPlus.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = result;
  return result;
}

double (*CommandEncodingOptions.useNonSynchronizingLiteralPlus.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t CommandEncodingOptions.useNonSynchronizingLiteralMinus.getter(unint64_t a1)
{
  return (a1 >> 24) & 1;
}

uint64_t CommandEncodingOptions.useNonSynchronizingLiteralMinus.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 3) = result;
  return result;
}

double (*CommandEncodingOptions.useNonSynchronizingLiteralMinus.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t CommandEncodingOptions.useBinaryLiteral.getter(unint64_t a1)
{
  return HIDWORD(a1) & 1;
}

uint64_t CommandEncodingOptions.useBinaryLiteral.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 4) = result;
  return result;
}

double (*CommandEncodingOptions.useBinaryLiteral.modify())(_QWORD)
{
  return nullsub_1;
}

NIOIMAPCore2::CommandEncodingOptions __swiftcall CommandEncodingOptions.init()()
{
  return (NIOIMAPCore2::CommandEncodingOptions)257;
}

uint64_t static CommandEncodingOptions.rfc3501.getter()
{
  return 257;
}

NIOIMAPCore2::CommandEncodingOptions __swiftcall CommandEncodingOptions.init(useQuotedString:useSynchronizingLiteral:useNonSynchronizingLiteralPlus:useNonSynchronizingLiteralMinus:useBinaryLiteral:)(Swift::Bool useQuotedString, Swift::Bool useSynchronizingLiteral, Swift::Bool useNonSynchronizingLiteralPlus, Swift::Bool useNonSynchronizingLiteralMinus, Swift::Bool useBinaryLiteral)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = 0x100000000;
  if (!useBinaryLiteral)
    v5 = 0;
  v6 = 0x1000000;
  if (!useNonSynchronizingLiteralMinus)
    v6 = 0;
  v7 = 0x10000;
  if (!useNonSynchronizingLiteralPlus)
    v7 = 0;
  v8 = 256;
  if (!useSynchronizingLiteral)
    v8 = 0;
  return (NIOIMAPCore2::CommandEncodingOptions)(v8 & 0xFFFFFFFFFFFFFFFELL | useQuotedString | v7 | v6 | v5);
}

uint64_t CommandEncodingOptions.hash(into:)()
{
  sub_1A594CE94();
  sub_1A594CE94();
  sub_1A594CE94();
  sub_1A594CE94();
  return sub_1A594CE94();
}

BOOL static CommandEncodingOptions.__derived_struct_equals(_:_:)(unint64_t a1, unint64_t a2)
{
  return ((a1 ^ a2) & 1 | (a1 >> 8) & 1 ^ (a2 >> 8) & 1 | (a1 >> 16) & 1 ^ (a2 >> 16) & 1 | (((a1 ^ a2) & 0x1000000) >> 24) & 1 | BYTE4(a1) & 1 ^ BYTE4(a2) & 1u) == 0;
}

uint64_t CommandEncodingOptions.hashValue.getter()
{
  sub_1A594CE64();
  CommandEncodingOptions.hash(into:)();
  return sub_1A594CED0();
}

uint64_t sub_1A56810E0()
{
  return CommandEncodingOptions.hashValue.getter();
}

uint64_t sub_1A5681138()
{
  return CommandEncodingOptions.hash(into:)();
}

uint64_t sub_1A5681190()
{
  sub_1A594CE64();
  CommandEncodingOptions.hash(into:)();
  return sub_1A594CED0();
}

BOOL sub_1A568122C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = *a2;
  v7 = a2[1];
  v8 = a2[2];
  v9 = a2[3];
  v10 = a2[4];
  if (a1[4])
    v11 = 0x100000000;
  else
    v11 = 0;
  v12 = v5 == 0;
  v13 = 0x1000000;
  if (v12)
    v14 = 0;
  else
    v14 = 0x1000000;
  v12 = v4 == 0;
  v15 = 0x10000;
  if (v12)
    v16 = 0;
  else
    v16 = 0x10000;
  v12 = v3 == 0;
  v17 = 256;
  if (v12)
    v18 = 0;
  else
    v18 = 256;
  v19 = v18 | v2 | v16 | v14 | v11;
  if (v10)
    v20 = 0x100000000;
  else
    v20 = 0;
  if (!v9)
    v13 = 0;
  if (!v8)
    v15 = 0;
  if (!v7)
    v17 = 0;
  return static CommandEncodingOptions.__derived_struct_equals(_:_:)(v19, v17 | v6 | v15 | v13 | v20);
}

NIOIMAPCore2::CommandEncodingOptions __swiftcall CommandEncodingOptions.init(capabilities:)(Swift::OpaquePointer capabilities)
{
  char v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_1EE796788 != -1)
    swift_once();
  v1 = OUTLINED_FUNCTION_0_20((uint64_t)&static Capability.literalPlus);
  if ((v1 & 1) != 0)
  {
    v2 = 0;
  }
  else
  {
    if (qword_1EE796790 != -1)
      swift_once();
    if ((OUTLINED_FUNCTION_0_20((uint64_t)&static Capability.literalMinus) & 1) != 0)
      v2 = 0x1000000;
    else
      v2 = 0;
  }
  if (qword_1EE7967C8 != -1)
    swift_once();
  v3 = OUTLINED_FUNCTION_0_20((uint64_t)&static Capability.binary);
  swift_bridgeObjectRelease();
  v4 = 0x100000000;
  if ((v3 & 1) == 0)
    v4 = 0;
  v5 = 257;
  if ((v1 & 1) != 0)
    v5 = 65793;
  return (NIOIMAPCore2::CommandEncodingOptions)(v5 | v2 | v4);
}

unint64_t sub_1A56813DC()
{
  unint64_t result;

  result = qword_1EE7A9398;
  if (!qword_1EE7A9398)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for CommandEncodingOptions, &type metadata for CommandEncodingOptions);
    atomic_store(result, (unint64_t *)&qword_1EE7A9398);
  }
  return result;
}

uint64_t __swift_memcpy5_1(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_BYTE *)(result + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for CommandEncodingOptions(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && a1[5])
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *a1;
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CommandEncodingOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 5) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 5) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for CommandEncodingOptions()
{
  return &type metadata for CommandEncodingOptions;
}

uint64_t OUTLINED_FUNCTION_0_20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A5680D80(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24), v1);
}

void sub_1A56814E0(uint64_t a1, unint64_t a2, uint64_t a3, Swift::UInt32 a4)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[2];
  uint64_t v9;

  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) != 0)
    {
      v8[0] = a1;
      v8[1] = a2 & 0xFFFFFFFFFFFFFFLL;
      ByteBuffer._setBytes(_:at:)((uint64_t)v8, (uint64_t)v8 + (HIBYTE(a2) & 0xF), a4);
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        v6 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        v7 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        v6 = sub_1A594C7D4();
      }
      sub_1A56687F0(v6, v7, a4, &v9);
    }
  }
}

Swift::Int __swiftcall EncodeBuffer.writeString(_:)(Swift::String a1)
{
  uint64_t v1;
  uint64_t v2;
  void *object;
  uint64_t countAndFlagsBits;
  Swift::Int v5;
  int v6;
  int v7;
  char v8;
  char v9;
  Swift::Int result;
  Swift::String v11;
  int v12;
  BOOL v13;
  int v14;

  v2 = v1;
  object = a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  v5 = *(unsigned int *)(v2 + 20);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A56814E0(countAndFlagsBits, (unint64_t)object, v2 + 8, v5);
  v7 = v6;
  v9 = v8;
  result = swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
  {
    v11._countAndFlagsBits = countAndFlagsBits;
    v11._object = object;
    result = ByteBuffer._setStringSlowpath(_:at:)(v11, v5);
    v7 = result;
  }
  v12 = *(_DWORD *)(v2 + 20);
  v13 = __CFADD__(v12, v7);
  v14 = v12 + v7;
  if (v13)
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(v2 + 20) = v14;
    OUTLINED_FUNCTION_164();
  }
  return result;
}

void EncodeBuffer.writeBytes<A>(_:)(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  _BYTE *v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  int v10;
  int v11;
  char v12;
  char v13;
  int v14;
  BOOL v15;
  int v16;
  _QWORD v17[4];

  v3 = v2;
  v8 = MEMORY[0x1E0C80A78](a1);
  if (*v2 == 1)
  {
    v17[2] = 91;
    v17[3] = 0xE100000000000000;
    (*(void (**)(char *, double))(v7 + 16))((char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
    v9 = *(_QWORD *)(sub_1A594BB08() + 16);
    swift_bridgeObjectRelease();
    v17[1] = v9;
    sub_1A594CC9C();
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_141();
    OUTLINED_FUNCTION_21_8();
    OUTLINED_FUNCTION_11_8();
    v11 = v10;
    v13 = v12;
    OUTLINED_FUNCTION_52();
    if ((v13 & 1) != 0)
      v11 = OUTLINED_FUNCTION_17_8();
    OUTLINED_FUNCTION_52();
    v14 = *((_DWORD *)v3 + 5);
    v15 = __CFADD__(v14, v11);
    v16 = v14 + v11;
    if (v15)
      __break(1u);
    else
      *((_DWORD *)v3 + 5) = v16;
  }
  else
  {
    ByteBuffer.writeBytes<A>(_:)(v5, a2);
  }
}

Swift::Int __swiftcall EncodeBuffer.markStopPoint()()
{
  uint64_t v0;
  Swift::Int result;

  if (((*(unsigned int *)(v0 + 1) | (unint64_t)((uint64_t)*(char *)(v0 + 5) << 32)) & 0x8000000000000000) == 0)
    sub_1A56817C0(*(unsigned int *)(v0 + 20));
  OUTLINED_FUNCTION_1();
  return result;
}

void sub_1A56817C0(uint64_t a1)
{
  uint64_t *v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = v1[2];
  v4 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1A576C288();
    v4 = v5;
  }
  if ((v3 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v3 >= *(_QWORD *)(v4 + 16))
  {
LABEL_9:
    __break(1u);
    return;
  }
  v6 = v4 + 16 * v3;
  *(_QWORD *)(v6 + 32) = a1;
  *(_BYTE *)(v6 + 40) = 0;
  *v1 = v4;
  v7 = (*(_QWORD *)(v4 + 16) - 1) & (v3 + 1);
  v1[2] = v7;
  if (v1[1] == v7)
    sub_1A567D808();
  else
    OUTLINED_FUNCTION_8_1();
}

void sub_1A5681854()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  v4 = v3 - v2;
  if (v3 < v2)
    v4 += *(_QWORD *)(v1 + 16);
  if (v4 >= 1)
  {
    if (v3 == v2)
    {
      __break(1u);
    }
    else if ((v2 & 0x8000000000000000) == 0)
    {
      if (!HIDWORD(v2))
      {
        sub_1A567D7DC(v2 | 0x1FFFFFF00000000, v1);
        sub_1A567DBD8(1);
        return;
      }
      goto LABEL_11;
    }
    __break(1u);
LABEL_11:
    __break(1u);
  }
}

uint64_t sub_1A56818DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;

  if (a3 > 0xFFFFFFFFLL)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (((a4 | a3) & 0x8000000000000000) == 0)
  {
    if (a4 > 0xFFFFFFFFLL)
      goto LABEL_19;
    if (a4 >= a3 && (_DWORD)a3 == (_DWORD)a4)
      return result;
    v7 = a2 + 32;
    v8 = *(_QWORD *)(a2 + 16);
    LODWORD(v9) = a3;
    while (v9 < v8)
    {
      if ((*(_BYTE *)(v7 + 16 * v9 + 8) & 1) != 0)
        goto LABEL_20;
      v9 = (v9 + 1) & (v8 - 1);
      if (HIDWORD(v9))
        goto LABEL_16;
      result = sub_1A594CE88();
      if ((_DWORD)v9 == (_DWORD)a4 && a4 < a3 != v9 >= a3)
        return result;
    }
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
LABEL_18:
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
  return result;
}

uint64_t static EncodeBuffer.__derived_struct_equals(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t result;
  unint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  unint64_t v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  int v28;
  int v29;
  _QWORD v30[6];
  unsigned int v31;
  unsigned __int8 v32;
  unsigned int v33;
  unsigned __int8 v34;

  if (((*a1 ^ *a2) & 1) != 0)
    return 0;
  sub_1A567F6A8((int *)(a1 + 1), (uint64_t)&v29);
  sub_1A567F6A8((int *)(a2 + 1), (uint64_t)&v28);
  sub_1A567F6A8(&v29, (uint64_t)&v31);
  v5 = v31 | ((unint64_t)v32 << 32);
  if ((v5 & 0x8000000000) != 0)
  {
    v32 = BYTE4(v5) & 0x7F;
    v9 = BYTE1(v5);
    sub_1A567F6A8(&v28, (uint64_t)&v33);
    v11 = v33 | ((unint64_t)v34 << 32);
    if ((v11 & 0x8000000000) != 0)
    {
      result = 0;
      v34 = BYTE4(v11) & 0x7F;
      if (((v5 ^ v11) & 1) != 0)
        return result;
      v10 = BYTE1(v33);
      goto LABEL_14;
    }
    return 0;
  }
  v6 = BYTE1(v31);
  v7 = BYTE2(v31);
  v8 = HIBYTE(v31);
  v9 = v32;
  sub_1A567F6A8(&v28, (uint64_t)&v33);
  if (((v33 | ((unint64_t)v34 << 32)) & 0x8000000000) != 0)
    return 0;
  result = 0;
  if (((v5 ^ v33) & 1) != 0
    || ((v6 ^ BYTE1(v33)) & 1) != 0
    || ((v7 ^ BYTE2(v33)) & 1) != 0
    || ((v8 ^ HIBYTE(v33)) & 1) != 0)
  {
    return result;
  }
  v10 = v34;
LABEL_14:
  if (((v9 ^ v10) & 1) == 0)
  {
    v12 = *((_DWORD *)a1 + 4);
    v13 = *((_DWORD *)a1 + 5);
    if (v13 < v12)
    {
      __break(1u);
    }
    else
    {
      v14 = *((_DWORD *)a2 + 4);
      v15 = *((_DWORD *)a2 + 5);
      if (v15 >= v14)
      {
        if (v13 - v12 == v15 - v14)
        {
          v16 = *((_DWORD *)a1 + 6) == *((_DWORD *)a2 + 6)
             && *((unsigned __int16 *)a1 + 14) == *((unsigned __int16 *)a2 + 14);
          v17 = v16 && a1[30] == a2[30];
          v18 = v17 && *((_QWORD *)a1 + 1) == *((_QWORD *)a2 + 1);
          if (v18 || (swift_retain(), (sub_1A566B918() & 1) != 0))
          {
            v20 = *((_QWORD *)a1 + 4);
            v19 = *((_QWORD *)a1 + 5);
            v21 = *((_QWORD *)a1 + 6);
            v23 = *((_QWORD *)a2 + 4);
            v22 = *((_QWORD *)a2 + 5);
            v24 = *((_QWORD *)a2 + 6);
            v25 = v21 - v19;
            if (v21 < v19)
              v25 += *(_QWORD *)(v20 + 16);
            v26 = v24 - v22;
            if (v24 < v22)
              v26 += *(_QWORD *)(v23 + 16);
            if (v25 == v26)
            {
              v30[0] = v20;
              v30[1] = v19;
              v30[2] = v21;
              v30[3] = v23;
              v30[4] = v22;
              v30[5] = v24;
              swift_retain();
              OUTLINED_FUNCTION_155();
              v27 = sub_1A567D458((uint64_t)v30);
              OUTLINED_FUNCTION_17_4();
              swift_release();
              if ((v27 & 1) != 0)
                return 1;
            }
          }
        }
        return 0;
      }
    }
    __break(1u);
  }
  return result;
}

void EncodeBuffer.nextChunk()()
{
  EncodeBuffer.nextChunk(allowEmptyChunk:)(1);
}

uint64_t EncodeBuffer.Mode.hash(into:)(uint64_t a1, uint64_t a2)
{
  if ((a2 & 0x8000000000) != 0)
  {
    sub_1A594CE88();
    sub_1A594CE94();
    return sub_1A594CE94();
  }
  else
  {
    sub_1A594CE88();
    return CommandEncodingOptions.hash(into:)();
  }
}

unint64_t static EncodeBuffer.Mode.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v4;

  if ((a1 & 0x8000000000) != 0)
  {
    v4 = ((a1 & 0x100) == 0) ^ ((a2 & 0xFFFFFFFFFFuLL) >> 8) & 1;
    if (((a1 & 1) == 0) == (a2 & 1))
      v4 = 0;
    if ((a2 & 0x8000000000) != 0)
      return v4;
    else
      return 0;
  }
  else if ((a2 & 0x8000000000) != 0)
  {
    return 0;
  }
  else
  {
    v2 = a1 & 0xFFFFFFFFFFLL;
    return (((a1 & 1) == 0) ^ a2) & (((v2 & 0x100) == 0) ^ ((unsigned __int16)(a2 & 0x100) >> 8)) & (((v2 & 0x10000) == 0) ^ WORD1(a2)) & (((v2 & 0x1000000) == 0) ^ BYTE3(a2)) & (((v2 & 0x100000000) == 0) ^ ((a2 & 0xFFFFFFFFFFuLL) >> 32) & 1);
  }
}

void EncodeBuffer.Mode.hashValue.getter(uint64_t a1)
{
  _BYTE v2[72];

  OUTLINED_FUNCTION_15_10();
  EncodeBuffer.Mode.hash(into:)((uint64_t)v2, a1 & 0xFFFFFFFFFFLL);
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_23_6();
}

void sub_1A5681D64()
{
  unsigned int *v0;

  EncodeBuffer.Mode.hashValue.getter(*v0 | ((unint64_t)*((unsigned __int8 *)v0 + 4) << 32));
}

uint64_t sub_1A5681D74(uint64_t a1)
{
  unsigned int *v1;

  return EncodeBuffer.Mode.hash(into:)(a1, *v1 | ((unint64_t)*((unsigned __int8 *)v1 + 4) << 32));
}

uint64_t sub_1A5681D84()
{
  unsigned int *v0;
  unint64_t v1;
  _BYTE v3[72];

  v1 = *v0 | ((unint64_t)*((unsigned __int8 *)v0 + 4) << 32);
  sub_1A594CE64();
  EncodeBuffer.Mode.hash(into:)((uint64_t)v3, v1);
  return sub_1A594CED0();
}

unint64_t sub_1A5681DCC(unsigned int *a1, unsigned int *a2)
{
  return static EncodeBuffer.Mode.__derived_enum_equals(_:_:)(*a1 | ((unint64_t)*((unsigned __int8 *)a1 + 4) << 32), *a2 | ((unint64_t)*((unsigned __int8 *)a2 + 4) << 32));
}

uint64_t EncodeBuffer.loggingMode.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t EncodeBuffer.loggingMode.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

double (*EncodeBuffer.loggingMode.modify())(_QWORD)
{
  return nullsub_1;
}

void EncodeBuffer.buffer.getter()
{
  swift_retain();
  OUTLINED_FUNCTION_1();
}

void EncodeBuffer.buffer.setter()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;
  __int16 v5;
  char v6;

  OUTLINED_FUNCTION_18_7();
  swift_release();
  *(_QWORD *)(v1 + 8) = v3;
  *(_DWORD *)(v1 + 16) = v2;
  *(_DWORD *)(v1 + 20) = v4;
  *(_DWORD *)(v1 + 24) = v0;
  *(_WORD *)(v1 + 28) = v5;
  *(_BYTE *)(v1 + 30) = v6;
  OUTLINED_FUNCTION_15_3();
}

double (*EncodeBuffer.buffer.modify())(_QWORD)
{
  return nullsub_1;
}

void EncodeBuffer.stopPoints.getter()
{
  swift_retain();
  OUTLINED_FUNCTION_1();
}

void EncodeBuffer.stopPoints.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  swift_release();
  v3[4] = a1;
  v3[5] = a2;
  v3[6] = a3;
  OUTLINED_FUNCTION_8_1();
}

double (*EncodeBuffer.stopPoints.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t EncodeBuffer.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned int v4;
  unsigned int v5;
  uint64_t result;

  v2 = v1;
  sub_1A594CE94();
  EncodeBuffer.Mode.hash(into:)(a1, *(unsigned int *)(v2 + 1) | ((unint64_t)*(unsigned __int8 *)(v2 + 5) << 32));
  v4 = *(_DWORD *)(v2 + 16);
  v5 = *(_DWORD *)(v2 + 20);
  result = OUTLINED_FUNCTION_176();
  if (v5 < v4)
  {
    __break(1u);
  }
  else
  {
    sub_1A594CE70();
    return sub_1A56818DC(a1, *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
  }
  return result;
}

void EncodeBuffer.hashValue.getter()
{
  _BYTE v0[72];

  OUTLINED_FUNCTION_15_10();
  EncodeBuffer.hash(into:)((uint64_t)v0);
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_23_6();
}

uint64_t sub_1A5681FE4()
{
  _BYTE v1[72];

  sub_1A594CE64();
  EncodeBuffer.hash(into:)((uint64_t)v1);
  return sub_1A594CED0();
}

uint64_t sub_1A568201C(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[3];
  uint64_t v6;
  _OWORD v7[3];
  uint64_t v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v5[2] = *(_OWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 48);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v7[2] = *(_OWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 48);
  return static EncodeBuffer.__derived_struct_equals(_:_:)((unsigned __int8 *)v5, (unsigned __int8 *)v7) & 1;
}

#error "1A56820C0: call analysis failed (funcsize=32)"

#error "1A568214C: call analysis failed (funcsize=32)"

#error "1A56821D8: call analysis failed (funcsize=32)"

void sub_1A5682218(unint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  int v6;
  __int16 v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unsigned int v18;
  unsigned __int16 v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  if (qword_1EE796BD0 != -1)
    swift_once();
  v5 = static ByteBufferAllocator.zeroCapacityWithDefaultAllocator;
  v6 = dword_1EE7F9220;
  v7 = word_1EE7F9224;
  v8 = byte_1EE7F9226;
  OUTLINED_FUNCTION_155();
  v9 = qword_1EE7F9218;
  sub_1A567D650(MEMORY[0x1E0DEE9D8]);
  LOBYTE(v30) = 0;
  BYTE5(v30) = 0;
  *(_DWORD *)((char *)&v30 + 1) = 65537;
  LODWORD(v31) = v6;
  WORD2(v31) = v7;
  BYTE6(v31) = v8;
  v32 = v10;
  v33 = v11;
  v34 = v12;
  v13 = OUTLINED_FUNCTION_46();
  v15 = sub_1A56F3CD4(v13, v14, a3);
  OUTLINED_FUNCTION_1_11(v15, v16, v17, v18, v19, v20, v21, v22, v30, v5, v9, v31, v32, v33, v34);
  v23 = OUTLINED_FUNCTION_155();
  OUTLINED_FUNCTION_9_11(v23, v24, v25, v26, v27, v28, v29);
  swift_release();
  OUTLINED_FUNCTION_17_4();
  sub_1A568380C(a1);
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_8_6();
}

#error "1A568235C: call analysis failed (funcsize=32)"

#error "1A568242C: call analysis failed (funcsize=91)"

#error "1A568259C: call analysis failed (funcsize=61)"

uint64_t sub_1A5682614(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;
  unsigned __int16 v6;
  unsigned __int8 v7;
  unint64_t v8;
  uint64_t v9;
  _BYTE v11[40];

  if (qword_1EE796BD0 != -1)
    swift_once();
  v4 = static ByteBufferAllocator.zeroCapacityWithDefaultAllocator;
  v5 = dword_1EE7F9220;
  v6 = word_1EE7F9224;
  v7 = byte_1EE7F9226;
  OUTLINED_FUNCTION_155();
  v8 = qword_1EE7F9218;
  sub_1A567D650(MEMORY[0x1E0DEE9D8]);
  sub_1A54E4334(a1, a2, SBYTE4(a2));
  sub_1A57087E0(a1, a2 & 0xFFFFFFFFFFLL, 0, 0xE000000000000000, 44, 0xE100000000000000, 0, 0xE000000000000000, 0);
  sub_1A54E3458(a1, a2, SBYTE4(a2));
  ByteBufferView.init(_:)(v4, v8, v5 | ((unint64_t)v6 << 32) | ((unint64_t)v7 << 48), (uint64_t)v11);
  OUTLINED_FUNCTION_155();
  v9 = sub_1A56D7A2C((uint64_t)v11);
  swift_release();
  OUTLINED_FUNCTION_17_4();
  sub_1A54E3458(a1, a2, SBYTE4(a2));
  return v9;
}

void sub_1A5682794(void (*a1)(char *))
{
  uint64_t v2;
  int v3;
  __int16 v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  int v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  unsigned int v22;
  unsigned __int16 v23;
  unsigned __int8 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[40];

  if (qword_1EE796BD0 != -1)
    swift_once();
  v2 = static ByteBufferAllocator.zeroCapacityWithDefaultAllocator;
  v3 = dword_1EE7F9220;
  v4 = word_1EE7F9224;
  v5 = byte_1EE7F9226;
  OUTLINED_FUNCTION_11_1();
  v6 = qword_1EE7F9218;
  sub_1A567D650(MEMORY[0x1E0DEE9D8]);
  v17 = 0;
  v19 = 0;
  v18 = 65537;
  v20 = v2;
  v21 = v6;
  v22 = v3;
  v23 = v4;
  v24 = v5;
  v25 = v7;
  v26 = v8;
  v27 = v9;
  a1(&v17);
  ByteBufferView.init(_:)(v20, v21, v22 | ((unint64_t)v23 << 32) | ((unint64_t)v24 << 48), (uint64_t)v28);
  v10 = swift_retain();
  OUTLINED_FUNCTION_9_11(v10, v11, v12, v13, v14, v15, v16);
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_8_6();
}

void EncodeBuffer.Chunk.bytes.getter()
{
  swift_retain();
  OUTLINED_FUNCTION_1();
}

void EncodeBuffer.Chunk.bytes.setter()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;
  __int16 v5;
  char v6;

  OUTLINED_FUNCTION_18_7();
  swift_release();
  *(_QWORD *)v1 = v3;
  *(_DWORD *)(v1 + 8) = v2;
  *(_DWORD *)(v1 + 12) = v4;
  *(_DWORD *)(v1 + 16) = v0;
  *(_WORD *)(v1 + 20) = v5;
  *(_BYTE *)(v1 + 22) = v6;
  OUTLINED_FUNCTION_15_3();
}

double (*EncodeBuffer.Chunk.bytes.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t EncodeBuffer.Chunk.waitForContinuation.getter(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return HIBYTE(a3) & 1;
}

uint64_t EncodeBuffer.Chunk.waitForContinuation.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 23) = result;
  return result;
}

double (*EncodeBuffer.Chunk.waitForContinuation.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t EncodeBuffer.Chunk.hash(into:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unsigned int v3;
  unint64_t v4;
  uint64_t result;

  v3 = a3;
  v4 = HIDWORD(a3);
  result = OUTLINED_FUNCTION_176();
  if (v4 < v3)
  {
    __break(1u);
  }
  else
  {
    sub_1A594CE70();
    return sub_1A594CE94();
  }
  return result;
}

uint64_t static EncodeBuffer.Chunk.__derived_struct_equals(_:_:)(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v6;
  BOOL v8;

  if (HIDWORD(a2) < a2)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (HIDWORD(a5) < a5)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  if (HIDWORD(a2) - (_DWORD)a2 == HIDWORD(a5) - (_DWORD)a5
    && ((v6 = HIBYTE(a6), (a3 & 0xFFFFFFFFFFFFFFLL) == (a6 & 0xFFFFFFFFFFFFFFLL)) ? (v8 = result == a4) : (v8 = 0),
        v8 || (swift_retain(), (sub_1A566B918() & 1) != 0)))
  {
    return ((a3 & 0x100000000000000) == 0) ^ v6 & 1u;
  }
  else
  {
    return 0;
  }
}

uint64_t EncodeBuffer.Chunk.hashValue.getter(uint64_t a1, unint64_t a2)
{
  _BYTE v5[72];

  OUTLINED_FUNCTION_15_10();
  EncodeBuffer.Chunk.hash(into:)((uint64_t)v5, a1, a2);
  return OUTLINED_FUNCTION_24_3();
}

uint64_t sub_1A5682AD8()
{
  uint64_t v0;

  return EncodeBuffer.Chunk.hashValue.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
}

uint64_t sub_1A5682B08(uint64_t a1)
{
  uint64_t v1;

  return EncodeBuffer.Chunk.hash(into:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8));
}

uint64_t sub_1A5682B38()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  _BYTE v4[72];

  v1 = *v0;
  v2 = v0[1];
  sub_1A594CE64();
  EncodeBuffer.Chunk.hash(into:)((uint64_t)v4, v1, v2);
  return sub_1A594CED0();
}

uint64_t sub_1A5682BB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 0x100000000000000;
  if (*(_BYTE *)(a1 + 23))
    v3 = 0x100000000000000;
  else
    v3 = 0;
  if (!*(_BYTE *)(a2 + 23))
    v2 = 0;
  return static EncodeBuffer.Chunk.__derived_struct_equals(_:_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned __int16 *)(a1 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 22) << 48) | v3, *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(unsigned int *)(a2 + 16) | ((unint64_t)*(unsigned __int16 *)(a2 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a2 + 22) << 48) | v2);
}

void EncodeBuffer.nextChunk(allowEmptyChunk:)(char a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  BOOL v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;

  if (((*(unsigned int *)(v1 + 1) | (unint64_t)((uint64_t)*(char *)(v1 + 5) << 32)) & 0x8000000000000000) == 0)
  {
    v2 = a1;
    sub_1A5681854();
    v4 = *(unsigned int *)(v1 + 16);
    if ((v5 & 1) == 0)
    {
      v6 = __OFSUB__(v3, v4);
      v7 = v3 - v4;
      if (!v6)
      {
        if (OUTLINED_FUNCTION_31_3(v7))
          return;
        goto LABEL_20;
      }
      goto LABEL_16;
    }
    goto LABEL_9;
  }
  v8 = *(_DWORD *)(v1 + 16);
  v9 = *(_DWORD *)(v1 + 20);
  if (v9 < v8)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (!OUTLINED_FUNCTION_31_3(v9 - v8))
  {
    __break(1u);
LABEL_9:
    v10 = *(_DWORD *)(v1 + 20);
    if ((v2 & 1) == 0)
    {
      if (v10 < v4)
      {
LABEL_18:
        __break(1u);
        goto LABEL_19;
      }
      if (v10 == (_DWORD)v4)
      {
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
    }
    if (v10 < v4)
    {
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
    if (!OUTLINED_FUNCTION_31_3(v10 - v4))
LABEL_21:
      __break(1u);
  }
}

void EncodeBuffer.writeBuffer(_:)(uint64_t a1)
{
  _BYTE *v1;
  _BYTE *v2;
  int v3;
  int v4;
  char v5;
  char v6;
  int v7;
  BOOL v8;
  int v9;

  v2 = v1;
  if (*v1 != 1)
  {
    ByteBuffer.writeBuffer(_:)();
    goto LABEL_9;
  }
  if (*(_DWORD *)(a1 + 12) >= *(_DWORD *)(a1 + 8))
  {
    sub_1A594CC9C();
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_141();
    OUTLINED_FUNCTION_21_8();
    OUTLINED_FUNCTION_11_8();
    v4 = v3;
    v6 = v5;
    OUTLINED_FUNCTION_52();
    if ((v6 & 1) != 0)
      v4 = OUTLINED_FUNCTION_17_8();
    OUTLINED_FUNCTION_52();
    v7 = *((_DWORD *)v2 + 5);
    v8 = __CFADD__(v7, v4);
    v9 = v7 + v4;
    if (v8)
      goto LABEL_10;
    *((_DWORD *)v2 + 5) = v9;
LABEL_9:
    OUTLINED_FUNCTION_23_6();
    return;
  }
  __break(1u);
LABEL_10:
  __break(1u);
}

Swift::Void __swiftcall EncodeBuffer.clear()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v1 = v0;
  v2 = (uint64_t *)(v0 + 32);
  swift_release();
  *v2 = MEMORY[0x1E0DEE9D8];
  sub_1A5682FE8(0, 1, 1);
  v3 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  v4 = *(_QWORD *)(*v2 + 24);
  if (v5 >= v4 >> 1)
  {
    sub_1A5682FE8(v4 > 1, v5 + 1, 1);
    v3 = *v2;
  }
  *(_QWORD *)(v3 + 16) = v5 + 1;
  v6 = v3 + 16 * v5;
  *(_QWORD *)(v6 + 32) = 0;
  *(_BYTE *)(v6 + 40) = 1;
  *(_QWORD *)(v1 + 40) = 0;
  *(_QWORD *)(v1 + 48) = 0;
  *(_QWORD *)(v1 + 32) = v3;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    *(_QWORD *)(v1 + 8) = sub_1A566C3C4(*(_DWORD *)(*(_QWORD *)(v1 + 8) + 16));
    swift_release();
  }
  *(_DWORD *)(v1 + 24) = *(_DWORD *)(*(_QWORD *)(v1 + 8) + 16);
  *(_WORD *)(v1 + 28) = 0;
  *(_BYTE *)(v1 + 30) = 0;
  *(_QWORD *)(v1 + 16) = 0;
}

void sub_1A5682ECC(unint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  unsigned int v4;
  unint64_t v5;
  uint64_t v6;
  Swift::Int v7;
  Swift::Int v8;
  Swift::Int v9;
  char v10;
  Swift::String v11;
  Swift::Int v12;
  int v13;
  BOOL v14;
  int v15;
  uint64_t v16;

  v4 = a1;
  v5 = HIDWORD(a1);
  v6 = a2();
  v7 = 0;
  if (v4 >= v5)
    goto LABEL_6;
  v8 = *(unsigned int *)(v2 + 20);
  sub_1A56814E0(58, 0xE100000000000000, v2 + 8, *(_DWORD *)(v2 + 20));
  if ((v10 & 1) != 0)
  {
    v11._countAndFlagsBits = 58;
    v11._object = (void *)0xE100000000000000;
    v9 = ByteBuffer._setStringSlowpath(_:at:)(v11, v8);
  }
  v12 = v9;
  v13 = *(_DWORD *)(v2 + 20);
  v14 = __CFADD__(v13, (_DWORD)v9);
  v15 = v13 + v9;
  if (v14)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  *(_DWORD *)(v2 + 20) = v15;
  v16 = ((uint64_t (*)(unint64_t))a2)(v5);
  v7 = v12 + v16;
  if (!__OFADD__(v12, v16))
  {
LABEL_6:
    if (!__OFADD__(v6, v7))
    {
      OUTLINED_FUNCTION_164();
      return;
    }
    __break(1u);
    goto LABEL_9;
  }
LABEL_10:
  __break(1u);
}

unint64_t sub_1A5682F84(unint64_t result)
{
  uint64_t v1;

  v1 = (result + 1);
  if ((_DWORD)result == -1)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (!HIDWORD(result))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v1 <= HIDWORD(result))
    return result & 0xFFFFFFFF00000000 | v1;
LABEL_7:
  __break(1u);
  return result;
}

void sub_1A5682FB4(unint64_t a1, uint64_t a2)
{
  sub_1A5682FC0(a1, a2, (uint64_t (*)(void))sub_1A570E17C);
}

void sub_1A5682FC0(unint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  unint64_t v4;

  v4 = sub_1A5682F84(a1);
  sub_1A5682ECC(v4, a3);
  OUTLINED_FUNCTION_1();
}

void sub_1A5682FE8(char a1, uint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_1A576C464(a1, a2, a3, *v3);
  *v3 = v4;
}

unint64_t sub_1A5683008()
{
  unint64_t result;

  result = qword_1EE7A93A0;
  if (!qword_1EE7A93A0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for EncodeBuffer.Mode, &type metadata for EncodeBuffer.Mode);
    atomic_store(result, (unint64_t *)&qword_1EE7A93A0);
  }
  return result;
}

unint64_t sub_1A5683048()
{
  unint64_t result;

  result = qword_1EE7A93A8;
  if (!qword_1EE7A93A8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for EncodeBuffer, &type metadata for EncodeBuffer);
    atomic_store(result, (unint64_t *)&qword_1EE7A93A8);
  }
  return result;
}

unint64_t sub_1A5683088()
{
  unint64_t result;

  result = qword_1EE7A93B0;
  if (!qword_1EE7A93B0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for EncodeBuffer.Chunk, &type metadata for EncodeBuffer.Chunk);
    atomic_store(result, (unint64_t *)&qword_1EE7A93B0);
  }
  return result;
}

uint64_t initializeWithCopy for EncodeBuffer(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_DWORD *)(a1 + 1) = *(_DWORD *)(a2 + 1);
  *(_BYTE *)(a1 + 5) = *(_BYTE *)(a2 + 5);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 27) = *(_DWORD *)(a2 + 27);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for EncodeBuffer(uint64_t a1, uint64_t a2)
{
  int v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_DWORD *)(a2 + 1);
  *(_BYTE *)(a1 + 5) = *(_BYTE *)(a2 + 5);
  *(_DWORD *)(a1 + 1) = v4;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_WORD *)(a1 + 28) = *(_WORD *)(a2 + 28);
  *(_BYTE *)(a1 + 30) = *(_BYTE *)(a2 + 30);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

__n128 __swift_memcpy56_8_1(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for EncodeBuffer(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_DWORD *)(a1 + 1) = *(_DWORD *)(a2 + 1);
  *(_BYTE *)(a1 + 5) = *(_BYTE *)(a2 + 5);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_WORD *)(a1 + 28) = *(_WORD *)(a2 + 28);
  *(_BYTE *)(a1 + 30) = *(_BYTE *)(a2 + 30);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for EncodeBuffer(uint64_t a1, int a2)
{
  const float *v2;
  uint32x4_t v3;
  int8x16_t v4;
  unsigned int v5;
  int v6;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 56))
    {
      v6 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = (const float *)(a1 + 1);
      v3 = (uint32x4_t)vld1q_dup_f32(v2);
      v4 = vandq_s8((int8x16_t)vshlq_u32(v3, (uint32x4_t)xmmword_1A59ABFC0), (int8x16_t)xmmword_1A59ABFD0);
      *(int8x8_t *)v4.i8 = vorr_s8(*(int8x8_t *)v4.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v4, v4, 8uLL));
      v5 = v4.i32[0] | v4.i32[1] | (*(unsigned __int8 *)(a1 + 5) >> 1 << 28);
      if (v5 > 0x80000000)
        v6 = ~v5;
      else
        v6 = -1;
    }
  }
  else
  {
    v6 = -1;
  }
  return (v6 + 1);
}

int8x8_t storeEnumTagSinglePayload for EncodeBuffer(uint64_t a1, int a2, int a3)
{
  int8x8_t result;
  uint64x2_t v4;
  int8x16_t v5;

  if (a2 < 0)
  {
    result = 0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      v4 = (uint64x2_t)vdupq_n_s64(-a2);
      v5 = vorrq_s8(vandq_s8((int8x16_t)vshlq_u64(v4, (uint64x2_t)xmmword_1A59994A0), (int8x16_t)xmmword_1A59AC000), vandq_s8((int8x16_t)vshlq_u64(v4, (uint64x2_t)xmmword_1A59ABFE0), (int8x16_t)xmmword_1A59ABFF0));
      result = vorr_s8(*(int8x8_t *)v5.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v5, v5, 8uLL));
      *(_DWORD *)(a1 + 1) = result.i32[0];
      *(_BYTE *)(a1 + 5) = (*(_QWORD *)&result | (32 * -a2) & 0x1E00000000uLL) >> 32;
      return result;
    }
    *(_BYTE *)(a1 + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for EncodeBuffer()
{
  OUTLINED_FUNCTION_3_1();
}

uint64_t getEnumTagSinglePayload for EncodeBuffer.Mode(uint64_t a1, int a2)
{
  unsigned __int8 *v2;
  uint32x4_t v3;
  int8x16_t v4;
  unsigned int v5;
  int v6;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 5))
    {
      v6 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v3 = (uint32x4_t)vld1q_dup_f32((const float *)a1);
      v2 = (unsigned __int8 *)(a1 + 4);
      v4 = vandq_s8((int8x16_t)vshlq_u32(v3, (uint32x4_t)xmmword_1A59ABFC0), (int8x16_t)xmmword_1A59ABFD0);
      *(int8x8_t *)v4.i8 = vorr_s8(*(int8x8_t *)v4.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v4, v4, 8uLL));
      v5 = v4.i32[0] | v4.i32[1] | (*v2 >> 1 << 28);
      if (v5 > 0x80000000)
        v6 = ~v5;
      else
        v6 = -1;
    }
  }
  else
  {
    v6 = -1;
  }
  return (v6 + 1);
}

int8x8_t storeEnumTagSinglePayload for EncodeBuffer.Mode(uint64_t a1, int a2, int a3)
{
  uint64x2_t v3;
  int8x16_t v4;
  int8x8_t result;

  if (a2 < 0)
  {
    *(_BYTE *)(a1 + 4) = 0;
    *(_DWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 5) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      v3 = (uint64x2_t)vdupq_n_s64(-a2);
      v4 = vorrq_s8(vandq_s8((int8x16_t)vshlq_u64(v3, (uint64x2_t)xmmword_1A59994A0), (int8x16_t)xmmword_1A59AC000), vandq_s8((int8x16_t)vshlq_u64(v3, (uint64x2_t)xmmword_1A59ABFE0), (int8x16_t)xmmword_1A59ABFF0));
      result = vorr_s8(*(int8x8_t *)v4.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v4, v4, 8uLL));
      *(_DWORD *)a1 = result.i32[0];
      *(_BYTE *)(a1 + 4) = (*(_QWORD *)&result | (32 * -a2) & 0x1E00000000uLL) >> 32;
      return result;
    }
    *(_BYTE *)(a1 + 5) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1A56834C8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 4) >> 7;
}

uint64_t sub_1A56834D4(uint64_t result)
{
  *(_BYTE *)(result + 4) &= ~0x80u;
  return result;
}

unsigned int *sub_1A56834EC(unsigned int *result, uint64_t a2)
{
  unint64_t v2;

  v2 = (*result | ((unint64_t)*((unsigned __int8 *)result + 4) << 32)) & 0x101010101010101 | (a2 << 39);
  *result &= 0x1010101u;
  *((_BYTE *)result + 4) = BYTE4(v2);
  return result;
}

void type metadata accessor for EncodeBuffer.Mode()
{
  OUTLINED_FUNCTION_3_1();
}

void sub_1A5683520(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 19) = *(_DWORD *)(a2 + 19);
  *(_BYTE *)(a1 + 23) = *(_BYTE *)(a2 + 23);
  swift_retain();
  OUTLINED_FUNCTION_1();
}

uint64_t assignWithCopy for EncodeBuffer.Chunk(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_WORD *)(a1 + 20) = *(_WORD *)(a2 + 20);
  *(_BYTE *)(a1 + 22) = *(_BYTE *)(a2 + 22);
  *(_BYTE *)(a1 + 23) = *(_BYTE *)(a2 + 23);
  return a1;
}

uint64_t assignWithTake for EncodeBuffer.Chunk(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_WORD *)(a1 + 20) = *(_WORD *)(a2 + 20);
  *(_BYTE *)(a1 + 22) = *(_BYTE *)(a2 + 22);
  *(_BYTE *)(a1 + 23) = *(_BYTE *)(a2 + 23);
  return a1;
}

void type metadata accessor for EncodeBuffer.Chunk()
{
  OUTLINED_FUNCTION_3_1();
}

void sub_1A5683644()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1A576C540();
  *v0 = v1;
}

void sub_1A5683660()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1A576C55C();
  *v0 = v1;
}

void sub_1A568367C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1A576C578();
  *v0 = v1;
}

void sub_1A5683698(char a1, uint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_1A576C594(a1, a2, a3, *v3);
  *v3 = v4;
}

void sub_1A56836B4(char a1, uint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_1A576C64C(a1, a2, a3, *v3);
  *v3 = v4;
}

void sub_1A56836D0(char a1, uint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_1A576C6FC(a1, a2, a3, *v3);
  *v3 = v4;
}

void sub_1A56836EC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1A576C718();
  *v0 = v1;
}

void sub_1A5683708()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1A576C734();
  *v0 = v1;
}

void sub_1A5683724()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1A576C750();
  *v0 = v1;
}

void sub_1A5683740()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1A576C81C();
  *v0 = v1;
}

void sub_1A568375C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1A576C838();
  *v0 = v1;
}

void sub_1A5683778(char a1, uint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_1A576C8E8(a1, a2, a3, *v3);
  *v3 = v4;
}

void sub_1A5683794(char a1, uint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_1A576C9CC(a1, a2, a3, *v3);
  *v3 = v4;
}

void sub_1A56837B0(unint64_t *a1, uint64_t a2)
{
  sub_1A5682FC0(*a1, a2, (uint64_t (*)(void))sub_1A570E17C);
}

unint64_t sub_1A56837D0(unint64_t result)
{
  switch((result >> 59) & 0x1E | (result >> 2) & 1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
      result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A568380C(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return sub_1A56837D0(result);
  return result;
}

uint64_t sub_1A5683820(uint64_t a1)
{
  sub_1A5683854(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  return a1;
}

uint64_t sub_1A5683854(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  if (a5 >> 6 == 1)
  {
    swift_bridgeObjectRelease();
    return sub_1A55DC738(a2, a3);
  }
  else if (!(a5 >> 6))
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A5683898(uint64_t a1)
{
  sub_1A5683900(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_WORD *)(a1 + 176));
  return a1;
}

void sub_1A5683900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int16 a23)
{
  switch(a23 >> 12)
  {
    case 0:
    case 6:
    case 0xB:
    case 0xC:
      goto LABEL_4;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
LABEL_4:
      swift_bridgeObjectRelease();
      break;
    case 5:
      sub_1A5524178(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
        a20,
        a21,
        a22,
        a23);
      break;
    case 7:
      sub_1A5683854(a1, a2, a3, a4, a5);
      break;
    default:
      return;
  }
}

uint64_t sub_1A5683A78(uint64_t a1)
{
  sub_1A5666BFC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(unsigned int *)(a1 + 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 36) << 32));
  return a1;
}

uint64_t OUTLINED_FUNCTION_0_21()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_1_11(uint64_t a1, uint64_t a2, unint64_t a3, unsigned int a4, unsigned __int16 a5, unsigned __int8 a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  return ByteBufferView.init(_:)(a2, a3, a4 | ((unint64_t)a5 << 32) | ((unint64_t)a6 << 48), (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_3_13()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_5_12(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, int a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, Swift::Int a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,Swift::Int a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  sub_1A5661874(a1, 0, 0xE000000000000000, 46, 0xE100000000000000, 0, 0xE000000000000000, 0, (uint64_t)&a11, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30,
    a31,
    a32,
    a33,
    a34,
    a35,
    a36,
    a37);
}

uint64_t OUTLINED_FUNCTION_6_13()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_9_11(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  return sub_1A56D7A2C((uint64_t)va);
}

void OUTLINED_FUNCTION_11_8()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::UInt32 v3;

  sub_1A56814E0(v1, v0, v2, v3);
}

uint64_t OUTLINED_FUNCTION_15_10()
{
  return sub_1A594CE64();
}

Swift::Int OUTLINED_FUNCTION_17_8()
{
  void *v0;
  uint64_t v1;
  Swift::Int v2;
  Swift::String v3;

  v3._countAndFlagsBits = v1;
  v3._object = v0;
  return ByteBuffer._setStringSlowpath(_:at:)(v3, v2);
}

uint64_t OUTLINED_FUNCTION_21_8()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t OUTLINED_FUNCTION_24_3()
{
  return sub_1A594CED0();
}

uint64_t OUTLINED_FUNCTION_31_3(int a1)
{
  return ByteBuffer.readSlice(length:)(a1);
}

uint64_t static InvalidFrame.__derived_struct_equals(_:_:)()
{
  return 1;
}

void InvalidFrame.hashValue.getter()
{
  OUTLINED_FUNCTION_15_10();
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_8_7();
}

uint64_t sub_1A5683C94()
{
  sub_1A594CE64();
  return sub_1A594CED0();
}

uint64_t LiteralSizeParsingError.buffer.getter()
{
  return swift_retain();
}

uint64_t LiteralSizeParsingError.buffer.setter(uint64_t a1, unint64_t a2, unint64_t a3)
{
  uint64_t v3;
  int v4;
  int v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t result;

  v4 = a3;
  v5 = a2;
  v7 = HIDWORD(a2);
  v8 = HIDWORD(a3);
  v9 = HIWORD(a3);
  result = swift_release();
  *(_QWORD *)v3 = a1;
  *(_DWORD *)(v3 + 8) = v5;
  *(_DWORD *)(v3 + 12) = v7;
  *(_DWORD *)(v3 + 16) = v4;
  *(_WORD *)(v3 + 20) = v8;
  *(_BYTE *)(v3 + 22) = v9;
  return result;
}

double (*LiteralSizeParsingError.buffer.modify())(_QWORD)
{
  return nullsub_1;
}

void LiteralSizeParsingError.hash(into:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unsigned int v3;
  unint64_t v4;

  v3 = a3;
  v4 = HIDWORD(a3);
  OUTLINED_FUNCTION_176();
  if (v4 < v3)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_2_16();
    OUTLINED_FUNCTION_4_6();
  }
}

uint64_t static LiteralSizeParsingError.__derived_struct_equals(_:_:)(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  BOOL v6;

  if (HIDWORD(a2) < a2)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (HIDWORD(a5) < a5)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  result = HIDWORD(a2) - (_DWORD)a2 == HIDWORD(a5) - (_DWORD)a5
        && ((a3 & 0xFFFFFFFFFFFFFFLL) == (a6 & 0xFFFFFFFFFFFFFFLL) ? (v6 = result == a4) : (v6 = 0),
            v6 || (swift_retain(), (OUTLINED_FUNCTION_13_8() & 1) != 0));
  return result;
}

uint64_t LiteralSizeParsingError.hashValue.getter(uint64_t a1, unint64_t a2)
{
  unsigned int v2;
  unint64_t v3;
  uint64_t result;

  v2 = a2;
  v3 = HIDWORD(a2);
  sub_1A594CE64();
  result = OUTLINED_FUNCTION_176();
  if (v3 < v2)
  {
    __break(1u);
  }
  else
  {
    sub_1A594CE70();
    return sub_1A594CED0();
  }
  return result;
}

uint64_t sub_1A5683EFC()
{
  uint64_t v0;

  return LiteralSizeParsingError.hashValue.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
}

void sub_1A5683F18(uint64_t a1)
{
  uint64_t v1;

  LiteralSizeParsingError.hash(into:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8));
}

uint64_t sub_1A5683F34(uint64_t a1, uint64_t a2)
{
  return static LiteralSizeParsingError.__derived_struct_equals(_:_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned __int16 *)(a1 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 22) << 48), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(unsigned int *)(a2 + 16) | ((unint64_t)*(unsigned __int16 *)(a2 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a2 + 22) << 48));
}

void FramingResult.debugDescription.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X10 }
}

uint64_t sub_1A5683FB8()
{
  uint64_t v0;

  if (HIDWORD(v0) < v0)
  {
    __break(1u);
    JUMPOUT(0x1A5683FE4);
  }
  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_3_14();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_12_10();
  return 0x4554454C504D4F43;
}

uint64_t sub_1A56841C4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if ((a3 >> 62) <= 3 && a3 >> 62 != 1)
    return swift_retain();
  return result;
}

uint64_t sub_1A56841DC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if ((a3 >> 62) <= 3 && a3 >> 62 != 1)
    return swift_release();
  return result;
}

void FramingResult.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

void sub_1A5684238()
{
  uint64_t v0;

  sub_1A594CE88();
  OUTLINED_FUNCTION_176();
  if (HIDWORD(v0) < v0)
  {
    __break(1u);
    JUMPOUT(0x1A5684260);
  }
  OUTLINED_FUNCTION_2_16();
  OUTLINED_FUNCTION_4_6();
}

void static FramingResult.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X10 }
}

uint64_t sub_1A568434C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int v19;
  int v20;
  char v21;
  BOOL v22;

  if (a7 >> 62)
    return 0;
  if (HIDWORD(v9) < v9)
  {
    __break(1u);
    JUMPOUT(0x1A5684448);
  }
  OUTLINED_FUNCTION_20_9();
  if (!v21)
  {
    __break(1u);
    JUMPOUT(0x1A568436CLL);
  }
  if (v19 == v20
    && ((v7 & 0xFFFFFFFFFFFFFFLL) == (v18 & 0xFFFFFFFFFFFFFFLL) ? (v22 = v10 == v11) : (v22 = 0),
        v22 || (OUTLINED_FUNCTION_1_12(v12, v13, v14, v15, v16, v17, v18), OUTLINED_FUNCTION_10_8(), (v8 & 1) != 0)))
  {
    return 1;
  }
  else
  {
    return 0;
  }
}

void FramingResult.hashValue.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE v6[72];

  OUTLINED_FUNCTION_15_10();
  FramingResult.hash(into:)((uint64_t)v6, a1, a2, a3);
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_7_12();
}

void sub_1A56844B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

void sub_1A56844F0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unsigned int v3;
  unint64_t v4;

  v3 = a3;
  v4 = HIDWORD(a3);
  sub_1A594CE88();
  OUTLINED_FUNCTION_176();
  if (v4 < v3)
  {
    __break(1u);
    JUMPOUT(0x1A5684574);
  }
  sub_1A594CE70();
  OUTLINED_FUNCTION_4_6();
}

void sub_1A5684588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X11 }
}

BOOL sub_1A56845D0@<W0>(uint64_t a1@<X1>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  char v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  if (a2)
    return 0;
  if (HIDWORD(a1) < a1)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    JUMPOUT(0x1A56846C8);
  }
  OUTLINED_FUNCTION_20_9();
  if (!v9)
    goto LABEL_14;
  if (v7 != v8)
    return 0;
  if ((v5 & 0xFFFFFFFFFFFFFFLL) == (v6 & 0xFFFFFFFFFFFFFFLL) && v3 == v2)
    return 1;
  sub_1A5685DB0(v2, v4, v6, 0);
  v11 = OUTLINED_FUNCTION_17_9();
  sub_1A5685DB0(v11, v12, v13, v14);
  OUTLINED_FUNCTION_16_8();
  v15 = OUTLINED_FUNCTION_13_8();
  v16 = OUTLINED_FUNCTION_17_9();
  sub_1A5685E04(v16, v17, v18, v19);
  return (v15 & 1) != 0;
}

void sub_1A56846DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE v6[72];

  OUTLINED_FUNCTION_15_10();
  sub_1A56844B4((uint64_t)v6, a1, a2, a3);
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_7_12();
}

void sub_1A5684720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_1A5684758()
{
  sub_1A594CE88();
  return sub_1A594CE88();
}

void sub_1A56847D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X10 }
}

BOOL sub_1A5684818()
{
  unsigned __int8 v0;
  unsigned __int8 v1;
  unint64_t v2;

  return !(v2 >> 61) && ((v0 ^ v1) & 1) == 0;
}

void sub_1A5684900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_15_10();
  __asm { BR              X10 }
}

void sub_1A5684940()
{
  sub_1A594CE88();
  sub_1A594CE88();
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_7_12();
}

void sub_1A56849C8()
{
  OUTLINED_FUNCTION_15_10();
  sub_1A594CE88();
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_8_7();
}

void sub_1A56849F8()
{
  uint64_t *v0;

  FramingResult.hashValue.getter(*v0, v0[1], v0[2]);
}

void sub_1A5684A04(uint64_t a1)
{
  uint64_t *v1;

  FramingResult.hash(into:)(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_1A5684A10()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[72];

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  sub_1A594CE64();
  FramingResult.hash(into:)((uint64_t)v5, v1, v2, v3);
  return sub_1A594CED0();
}

void sub_1A5684A68()
{
  uint64_t *v0;

  FramingResult.debugDescription.getter(*v0, v0[1], v0[2]);
}

void sub_1A5684A74(uint64_t *a1)
{
  static FramingResult.__derived_enum_equals(_:_:)(*a1, a1[1], a1[2]);
}

void sub_1A5684A94()
{
  uint64_t *v0;

  sub_1A56846DC(*v0, v0[1], v0[2]);
}

void sub_1A5684AA0(uint64_t a1)
{
  uint64_t *v1;

  sub_1A56844B4(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_1A5684AAC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[72];

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  sub_1A594CE64();
  sub_1A56844B4((uint64_t)v5, v1, v2, v3);
  return sub_1A594CED0();
}

void sub_1A5684B00(uint64_t *a1)
{
  sub_1A5684588(*a1, a1[1], a1[2]);
}

void sub_1A5684B1C()
{
  uint64_t *v0;

  sub_1A5684900(*v0, v0[1], v0[2]);
}

void sub_1A5684B28(uint64_t a1)
{
  uint64_t *v1;

  sub_1A5684720(a1, *v1, v1[1], v1[2]);
}

void sub_1A5684B34()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_1A594CE64();
  __asm { BR              X10 }
}

uint64_t sub_1A5684B74()
{
  sub_1A594CE88();
  sub_1A594CE88();
  return sub_1A594CED0();
}

void sub_1A5684C18(uint64_t *a1)
{
  sub_1A56847D0(*a1, a1[1], a1[2]);
}

void sub_1A5684C34()
{
  sub_1A56849C8();
}

void sub_1A5684C4C()
{
  sub_1A594CE64();
  sub_1A594CE88();
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_8_7();
}

uint64_t FramingParser.init(bufferSizeLimit:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  int v5;
  __int16 v6;
  char v7;

  if (qword_1EE796BD0 != -1)
    swift_once();
  v4 = static ByteBufferAllocator.zeroCapacityWithDefaultAllocator;
  v5 = dword_1EE7F9220;
  v6 = word_1EE7F9224;
  v7 = byte_1EE7F9226;
  *(_QWORD *)a2 = 1;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = v4;
  *(_QWORD *)(a2 + 40) = qword_1EE7F9218;
  *(_DWORD *)(a2 + 48) = v5;
  *(_WORD *)(a2 + 52) = v6;
  *(_BYTE *)(a2 + 54) = v7;
  *(_QWORD *)(a2 + 56) = a1;
  return swift_retain();
}

void FramingParser.appendAndFrameBuffer(_:)(uint64_t a1)
{
  unsigned int v1;
  unsigned int v2;

  v1 = *(_DWORD *)(a1 + 8);
  v2 = *(_DWORD *)(a1 + 12);
  if (v2 < v1)
  {
    __break(1u);
  }
  else
  {
    if (v2 != v1)
    {
      ByteBuffer.writeBuffer(_:)();
      OUTLINED_FUNCTION_19_7();
    }
    OUTLINED_FUNCTION_32_1();
  }
}

void sub_1A5684D58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  BOOL v7;

  sub_1A5684EC4();
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2 || *(_QWORD *)(v1 + 32 * v2 + 16) >> 62 != 1)
    goto LABEL_7;
  v3 = *(_DWORD *)(v0 + 40);
  v4 = *(_DWORD *)(v0 + 44);
  v7 = v4 >= v3;
  v5 = v4 - v3;
  if (!v7)
  {
    __break(1u);
    return;
  }
  if (*(_QWORD *)(v0 + 56) < (uint64_t)v5)
  {
    swift_bridgeObjectRelease();
    sub_1A5686660();
    swift_allocError();
    swift_willThrow();
    sub_1A5684E90(v0);
  }
  else
  {
LABEL_7:
    v6 = *(_DWORD *)(v0 + 40);
    v7 = v6 < 0x3E9 || *(_DWORD *)(v0 + 44) >> 1 >= v6;
    if (!v7)
      ByteBuffer.discardReadBytes()();
  }
}

void FramingParser.appendAndFrameBytes(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  int v4;
  BOOL v5;
  int v6;

  if (!a1 || a2 == a1)
    goto LABEL_5;
  ByteBuffer._setBytes(_:at:)(a1, a2, *(_DWORD *)(v2 + 44));
  v3 = *(_DWORD *)(v2 + 44);
  v5 = __CFADD__(v3, v4);
  v6 = v3 + v4;
  if (!v5)
  {
    *(_DWORD *)(v2 + 44) = v6;
    OUTLINED_FUNCTION_19_7();
LABEL_5:
    OUTLINED_FUNCTION_32_1();
    return;
  }
  __break(1u);
}

uint64_t FramingParser.inputBufferByteCount.getter()
{
  uint64_t v0;
  unsigned int v1;
  unsigned int v2;
  uint64_t result;

  v1 = *(_DWORD *)(v0 + 40);
  v2 = *(_DWORD *)(v0 + 44);
  result = v2 - v1;
  if (v2 < v1)
    __break(1u);
  return result;
}

BOOL sub_1A5684E90(_BOOL8 result)
{
  unsigned int v1;

  v1 = *(_DWORD *)(result + 40);
  if (v1 >= 0x3E9 && *(_DWORD *)(result + 44) >> 1 < v1)
    return ByteBuffer.discardReadBytes()();
  return result;
}

void sub_1A5684EC4()
{
  uint64_t v0;
  unsigned int v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_DWORD *)(v0 + 40);
  v2 = *(_DWORD *)(v0 + 44);
  if (v2 < v1)
  {
LABEL_13:
    __break(1u);
  }
  else
  {
    v3 = MEMORY[0x1E0DEE9D8];
    if (v2 != v1)
    {
      do
      {
        sub_1A5684FD0();
        v5 = v4;
        v7 = v6;
        v9 = v8;
        v11 = v10;
        sub_1A56841C4(v4, v6, v8);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1A569D85C();
          v3 = v16;
        }
        v12 = *(_QWORD *)(v3 + 16);
        if (v12 >= *(_QWORD *)(v3 + 24) >> 1)
        {
          sub_1A569D85C();
          v3 = v17;
        }
        *(_QWORD *)(v3 + 16) = v12 + 1;
        v13 = (_QWORD *)(v3 + 32 * v12);
        v13[4] = v5;
        v13[5] = v7;
        v13[6] = v9;
        v13[7] = v11;
        if (v9 >> 62 == 1)
          break;
        sub_1A56841DC(v5, v7, v9);
        v14 = *(_DWORD *)(v0 + 40);
        v15 = *(_DWORD *)(v0 + 44);
        if (v15 < v14)
        {
          __break(1u);
          goto LABEL_13;
        }
      }
      while (v15 != v14);
    }
  }
}

void sub_1A5684FD0()
{
  uint64_t v0;
  unsigned int v1;
  unsigned int v2;

  v1 = *(_DWORD *)(v0 + 40);
  v2 = *(_DWORD *)(v0 + 44);
  if (v2 >= v1)
  {
    if (*(_QWORD *)(v0 + 24) < (uint64_t)(v2 - v1))
      __asm { BR              X10 }
    __asm { BR              X12 }
  }
  __break(1u);
  JUMPOUT(0x1A56853A8);
}

uint64_t sub_1A56853F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(unsigned int *)(v0 + 40);
  v4 = v3 | ((unint64_t)*(unsigned int *)(v0 + 44) << 32);
  v5 = *(unsigned int *)(v0 + 48) | ((unint64_t)*(unsigned __int16 *)(v0 + 52) << 32) | ((unint64_t)*(unsigned __int8 *)(v0 + 54) << 48);
  swift_retain();
  v6 = ByteBuffer.getSlice(at:length:)(v3, v1, v2, v4, v5);
  result = swift_release();
  if (v6)
  {
    if (!__CFADD__((_DWORD)v3, (_DWORD)v1))
    {
      *(_DWORD *)(v0 + 40) = v3 + v1;
      *(_QWORD *)(v0 + 24) = 0;
      return v6;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1A56854A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int16 v4;

  v1 = *(unsigned int *)(v0 + 40);
  v2 = *(unsigned int *)(v0 + 44);
  if (v2 < v1)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return;
  }
  v3 = *(_QWORD *)(v0 + 24);
  if (v3 >= (v2 - v1))
  {
    sub_1A5685DEC(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16));
    *(_QWORD *)v0 = 0;
    *(_QWORD *)(v0 + 8) = 0;
    *(_QWORD *)(v0 + 16) = 0;
    return;
  }
  sub_1A566FE08(v3 + v1, 0, *(_QWORD *)(v0 + 32), v1 | (v2 << 32));
  if ((v4 & 0x100) != 0)
    goto LABEL_9;
  if (v4 == 10)
    *(_QWORD *)(v0 + 24) = v3 + 1;
  sub_1A5685DEC(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16));
  *(_QWORD *)(v0 + 8) = 0;
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)v0 = 1;
}

void sub_1A568554C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X10 }
}

uint64_t sub_1A5685588(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v7 = a3 & 0xFFFFFFFFFFFFFFLL;
  v8 = swift_retain();
  v9 = sub_1A56867E4(v8, a2, v7);
  sub_1A5685E04(v3, a2, a3, 0);
  if ((v9 & 1) != 0)
    __asm { BR              X12 }
  return sub_1A56853F8();
}

void sub_1A56857E4(char a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v4;
  __int16 v5;
  int v6;
  BOOL v7;
  uint64_t v8;
  unsigned int v9;
  BOOL v10;
  unint64_t v11;

  if ((a1 & 1) == 0)
  {
    sub_1A56859A8();
    if ((v5 & 0x1FF) == 0xA)
    {
      v6 = *(_DWORD *)(v2 + 40);
      v7 = __CFADD__(v6, 1);
      v8 = (v6 + 1);
      if (v7)
      {
LABEL_14:
        __break(1u);
        goto LABEL_15;
      }
      v4 = *(unsigned int *)(v2 + 44);
      if (v4 < v8)
      {
LABEL_15:
        __break(1u);
        goto LABEL_16;
      }
      *(_DWORD *)(v2 + 40) = v8;
    }
  }
  v8 = *(unsigned int *)(v2 + 40);
  v9 = *(_DWORD *)(v2 + 44);
  v7 = v9 >= v8;
  v4 = v9 - v8;
  if (!v7)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v8 = *(_QWORD *)(v2 + 24);
  v10 = __OFSUB__(v4, v8);
  v4 -= v8;
  if (v10)
    goto LABEL_13;
  if ((v4 & 0x8000000000000000) != 0)
  {
LABEL_16:
    *(_QWORD *)(v2 + 24) = v4 + v8;
    __break(1u);
    return;
  }
  v11 = a2 - v4;
  if (a2 <= v4)
  {
    *(_QWORD *)(v2 + 24) = v8 + a2;
    sub_1A5685DEC(*(_QWORD *)v2, *(_QWORD *)(v2 + 8), *(_QWORD *)(v2 + 16));
    *(_QWORD *)(v2 + 8) = 0;
    *(_QWORD *)(v2 + 16) = 0;
    *(_QWORD *)v2 = 1;
  }
  else
  {
    *(_QWORD *)(v2 + 24) = v4 + v8;
    sub_1A5685DEC(*(_QWORD *)v2, *(_QWORD *)(v2 + 8), *(_QWORD *)(v2 + 16));
    *(_QWORD *)v2 = 1;
    *(_QWORD *)(v2 + 8) = v11;
    *(_QWORD *)(v2 + 16) = 0x4000000000000000;
  }
}

void sub_1A56858C0()
{
  __int128 *v0;
  __int128 v1;
  _BYTE v2[16];

  sub_1A5687340(v0, (uint64_t)&v1);
  sub_1A5687340(&v1, (uint64_t)v2);
  __asm { BR              X11 }
}

uint64_t sub_1A5685908()
{
  return 2;
}

void sub_1A56859A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int16 v4;

  v1 = *(unsigned int *)(v0 + 40);
  v2 = *(unsigned int *)(v0 + 44);
  if (v2 < v1)
  {
    __break(1u);
LABEL_6:
    __break(1u);
    return;
  }
  v3 = *(_QWORD *)(v0 + 24);
  if (v3 < (v2 - v1))
  {
    sub_1A566FE08(v3 + v1, 0, *(_QWORD *)(v0 + 32), v1 | (v2 << 32));
    if ((v4 & 0x100) != 0)
      goto LABEL_6;
  }
}

uint64_t FramingParser.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  unsigned int v2;
  unsigned int v3;
  uint64_t result;

  sub_1A5684720(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16));
  sub_1A594CE88();
  v2 = *(_DWORD *)(v1 + 40);
  v3 = *(_DWORD *)(v1 + 44);
  result = OUTLINED_FUNCTION_176();
  if (v3 < v2)
  {
    __break(1u);
  }
  else
  {
    sub_1A594CE70();
    return sub_1A594CE88();
  }
  return result;
}

void static FramingParser.__derived_struct_equals(_:_:)(__int128 *a1, __int128 *a2)
{
  _BYTE v3[24];
  __int128 v4;
  _BYTE v5[16];

  sub_1A5687340(a1, (uint64_t)&v4);
  sub_1A5687340(a2, (uint64_t)v3);
  sub_1A5687340(&v4, (uint64_t)v5);
  __asm { BR              X11 }
}

BOOL sub_1A5685B38@<W0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  _BOOL8 result;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  BOOL v9;
  BOOL v10;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  unint64_t v15;

  OUTLINED_FUNCTION_11_9(a1, v12, v13);
  result = 0;
  if (!(v15 >> 61) && ((v3 ^ v14) & 1) == 0)
  {
    if (*(_QWORD *)(v2 + 24) == *(_QWORD *)(v1 + 24))
    {
      v5 = *(_DWORD *)(v2 + 40);
      v6 = *(_DWORD *)(v2 + 44);
      if (v6 < v5)
      {
        __break(1u);
      }
      else
      {
        v7 = *(_DWORD *)(v1 + 40);
        v8 = *(_DWORD *)(v1 + 44);
        if (v8 >= v7)
        {
          if (v6 - v5 == v8 - v7)
          {
            v9 = *(_DWORD *)(v2 + 48) == *(_DWORD *)(v1 + 48)
              && *(unsigned __int16 *)(v2 + 52) == *(unsigned __int16 *)(v1 + 52);
            v10 = v9 && *(unsigned __int8 *)(v2 + 54) == *(unsigned __int8 *)(v1 + 54);
            if (v10 && *(_QWORD *)(v2 + 32) == *(_QWORD *)(v1 + 32))
              return *(_QWORD *)(v2 + 56) == *(_QWORD *)(v1 + 56);
            swift_retain();
            if ((OUTLINED_FUNCTION_13_8() & 1) != 0)
              return *(_QWORD *)(v2 + 56) == *(_QWORD *)(v1 + 56);
          }
          return 0;
        }
      }
      __break(1u);
      JUMPOUT(0x1A5685D58);
    }
    return 0;
  }
  return result;
}

uint64_t sub_1A5685D6C(uint64_t a1)
{
  sub_1A5685D98(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
  return a1;
}

uint64_t sub_1A5685D98(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (a3 >> 61 == 1)
    return sub_1A5685DB0(result, a2, a3, HIBYTE(a3) & 0x1F);
  return result;
}

uint64_t sub_1A5685DB0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if (!a4)
    return swift_retain();
  return result;
}

uint64_t sub_1A5685DC0(uint64_t a1)
{
  sub_1A5685DEC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
  return a1;
}

uint64_t sub_1A5685DEC(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (a3 >> 61 == 1)
    return sub_1A5685E04(result, a2, a3, HIBYTE(a3) & 0x1F);
  return result;
}

uint64_t sub_1A5685E04(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if (!a4)
    return swift_release();
  return result;
}

void FramingParser.hashValue.getter()
{
  _BYTE v0[72];

  OUTLINED_FUNCTION_15_10();
  FramingParser.hash(into:)((uint64_t)v0);
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_8_7();
}

uint64_t sub_1A5685E44()
{
  _BYTE v1[72];

  sub_1A594CE64();
  FramingParser.hash(into:)((uint64_t)v1);
  return sub_1A594CED0();
}

unint64_t sub_1A5685E80()
{
  unint64_t result;

  result = qword_1EE7A93B8;
  if (!qword_1EE7A93B8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for InvalidFrame, &type metadata for InvalidFrame);
    atomic_store(result, (unint64_t *)&qword_1EE7A93B8);
  }
  return result;
}

unint64_t sub_1A5685EC0()
{
  unint64_t result;

  result = qword_1EE7A93C0;
  if (!qword_1EE7A93C0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for LiteralSizeParsingError, &type metadata for LiteralSizeParsingError);
    atomic_store(result, (unint64_t *)&qword_1EE7A93C0);
  }
  return result;
}

unint64_t sub_1A5685F00()
{
  unint64_t result;

  result = qword_1EE7A93C8;
  if (!qword_1EE7A93C8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for FramingResult, &type metadata for FramingResult);
    atomic_store(result, (unint64_t *)&qword_1EE7A93C8);
  }
  return result;
}

unint64_t sub_1A5685F40()
{
  unint64_t result;

  result = qword_1EE7A93D0;
  if (!qword_1EE7A93D0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for FramingParser, &type metadata for FramingParser);
    atomic_store(result, (unint64_t *)&qword_1EE7A93D0);
  }
  return result;
}

uint64_t sub_1A5685F7C(__int128 *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  char v6;
  __int128 v8[4];
  __int128 v9[4];

  v2 = a1[1];
  v8[0] = *a1;
  v8[1] = v2;
  v3 = a1[3];
  v8[2] = a1[2];
  v8[3] = v3;
  v4 = a2[1];
  v9[0] = *a2;
  v9[1] = v4;
  v5 = a2[3];
  v9[2] = a2[2];
  v9[3] = v5;
  static FramingParser.__derived_struct_equals(_:_:)(v8, v9);
  return v6 & 1;
}

void type metadata accessor for InvalidFrame()
{
  OUTLINED_FUNCTION_3_1();
}

void type metadata accessor for LiteralSizeParsingError()
{
  OUTLINED_FUNCTION_3_1();
}

uint64_t destroy for FramingResult(uint64_t a1)
{
  return sub_1A56841DC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
}

uint64_t *initializeWithCopy for FramingResult(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  sub_1A56841C4(*a2, v4, v5);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return a1;
}

uint64_t *assignWithCopy for FramingResult(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  sub_1A56841C4(*a2, v4, v5);
  v7 = *a1;
  v8 = a1[1];
  v9 = a1[2];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  sub_1A56841DC(v7, v8, v9);
  return a1;
}

uint64_t *assignWithTake for FramingResult(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  __int128 v6;

  v3 = *a1;
  v5 = a1[1];
  v4 = a1[2];
  v6 = a2[1];
  *(_OWORD *)a1 = *a2;
  *((_OWORD *)a1 + 1) = v6;
  sub_1A56841DC(v3, v5, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for FramingResult(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0xFD && *(_BYTE *)(a1 + 32))
    {
      v2 = *(_DWORD *)a1 + 252;
    }
    else
    {
      v2 = ((*(unsigned __int8 *)(a1 + 23) >> 6) & 0xFFFFFF03 | (4 * (*(_BYTE *)(a1 + 23) & 0x3F))) ^ 0xFF;
      if (v2 >= 0xFC)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for FramingResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = (unint64_t)((-(char)a2 >> 2) - (a2 << 6)) << 56;
      *(_QWORD *)(result + 24) = 0;
    }
  }
  return result;
}

uint64_t sub_1A5686178(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16) >> 62;
}

uint64_t sub_1A5686184(uint64_t result)
{
  *(_QWORD *)(result + 16) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_1A5686194(uint64_t result, char a2)
{
  *(_BYTE *)(result + 23) = a2 << 6;
  return result;
}

void type metadata accessor for FramingResult()
{
  OUTLINED_FUNCTION_3_1();
}

uint64_t destroy for FramingParser(uint64_t a1)
{
  sub_1A5685DEC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
  return swift_release();
}

uint64_t initializeWithCopy for FramingParser(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  sub_1A5685D98(*(_QWORD *)a2, v5, v6);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  v8 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 51) = *(_DWORD *)(a2 + 51);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for FramingParser(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  sub_1A5685D98(*(_QWORD *)a2, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  sub_1A5685DEC(v7, v8, v9);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_WORD *)(a1 + 52) = *(_WORD *)(a2 + 52);
  *(_BYTE *)(a1 + 54) = *(_BYTE *)(a2 + 54);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

__n128 __swift_memcpy64_8_1(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for FramingParser(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1A5685DEC(v4, v5, v6);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_WORD *)(a1 + 52) = *(_WORD *)(a2 + 52);
  *(_BYTE *)(a1 + 54) = *(_BYTE *)(a2 + 54);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for FramingParser(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 32);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FramingParser(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for FramingParser()
{
  OUTLINED_FUNCTION_3_1();
}

uint64_t sub_1A5686434(uint64_t a1)
{
  return sub_1A5685DEC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
}

uint64_t *sub_1A5686444(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  OUTLINED_FUNCTION_15_11(*a2);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  return a1;
}

uint64_t *sub_1A5686484(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  sub_1A5685D98(*a2, v4, v5);
  v6 = *a1;
  v7 = a1[1];
  v8 = a1[2];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  sub_1A5685DEC(v6, v7, v8);
  return a1;
}

uint64_t *sub_1A56864D8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *a1;
  v6 = a1[1];
  v5 = a1[2];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v3;
  sub_1A5685DEC(v4, v6, v5);
  return a1;
}

uint64_t sub_1A5686518(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x1C && *(_BYTE *)(a1 + 24))
    {
      v2 = *(_DWORD *)a1 + 27;
    }
    else
    {
      v2 = (((*(_QWORD *)(a1 + 16) >> 59) >> 2) & 0xFFFFFFE7 | (8 * ((*(_QWORD *)(a1 + 16) >> 59) & 3))) ^ 0x1F;
      if (v2 >= 0x1B)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t sub_1A5686564(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x1B)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 28;
    if (a3 >= 0x1C)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x1C)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = (unint64_t)(((-a2 >> 3) & 3) - 4 * a2) << 59;
    }
  }
  return result;
}

uint64_t sub_1A56865B8(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 16) >> 61;
  if (v1 <= 3)
    return v1;
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_1A56865D4(uint64_t result)
{
  *(_QWORD *)(result + 16) &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_1A56865E4(uint64_t result, uint64_t a2)
{
  if (a2 < 4)
  {
    *(_QWORD *)(result + 16) = *(_QWORD *)(result + 16) & 0x7FFFFFFFFFFFFFFLL | (a2 << 61);
  }
  else
  {
    *(_QWORD *)result = (a2 - 4);
    *(_OWORD *)(result + 8) = xmmword_1A59AC020;
  }
  return result;
}

void type metadata accessor for FramingParser.State()
{
  OUTLINED_FUNCTION_3_1();
}

unint64_t sub_1A5686624()
{
  unint64_t result;

  result = qword_1EE7A93D8;
  if (!qword_1EE7A93D8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AE3CC, &unk_1E4E5E3C8);
    atomic_store(result, (unint64_t *)&qword_1EE7A93D8);
  }
  return result;
}

unint64_t sub_1A5686660()
{
  unint64_t result;

  result = qword_1EE7A93E0;
  if (!qword_1EE7A93E0)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59B6CFC, &type metadata for ByteToMessageDecoderError.PayloadTooLargeError);
    atomic_store(result, (unint64_t *)&qword_1EE7A93E0);
  }
  return result;
}

void sub_1A568669C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int16 v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v1 = *(unsigned int *)(v0 + 40);
  v2 = *(unsigned int *)(v0 + 44);
  if (v2 < v1)
  {
    __break(1u);
LABEL_10:
    swift_once();
LABEL_7:
    v5 = static ByteBufferAllocator.zeroCapacityWithDefaultAllocator;
    v6 = qword_1EE7F9218;
    v7 = dword_1EE7F9220 | ((unint64_t)(unsigned __int16)word_1EE7F9224 << 32) | ((unint64_t)byte_1EE7F9226 << 48);
    v8 = *(_QWORD *)v0;
    v9 = *(_QWORD *)(v0 + 8);
    v10 = *(_QWORD *)(v0 + 16);
    swift_retain_n();
    sub_1A5685DEC(v8, v9, v10);
    *(_QWORD *)v0 = v5;
    *(_QWORD *)(v0 + 8) = v6;
    *(_QWORD *)(v0 + 16) = v7 | 0x2000000000000000;
    sub_1A56867E4(v5, v6, v7);
    swift_release();
    return;
  }
  v3 = *(_QWORD *)(v0 + 24);
  if (v3 < (v2 - v1))
  {
    sub_1A566FE08(v3 + v1, 0, *(_QWORD *)(v0 + 32), v1 | (v2 << 32));
    if ((v4 & 0x100) == 0)
    {
      if (v4 == 126)
        *(_QWORD *)(v0 + 24) = v3 + 1;
      if (qword_1EE796BD0 == -1)
        goto LABEL_7;
      goto LABEL_10;
    }
    __break(1u);
  }
}

uint64_t sub_1A56867E4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  unsigned int v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 *v21;
  uint64_t v22;
  char v23;
  char v24;
  unint64_t v25;
  int v26;
  unsigned int v27;
  unsigned __int8 v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  unsigned __int8 v36;
  BOOL v37;
  unint64_t v38;
  unsigned __int16 v39;
  unsigned __int8 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 *v44;
  unsigned int v45;
  char v46;
  uint64_t v47;
  unsigned __int8 *v48;
  unsigned int v49;
  unsigned __int8 v50;
  unint64_t v51;
  uint64_t v52;
  unsigned __int8 *v53;
  unsigned int v54;
  uint64_t v55;
  unsigned __int16 v56;
  unsigned __int8 v57;
  unint64_t v58;
  uint64_t v59;
  char v61;
  uint64_t *v62;
  _QWORD v63[3];
  uint64_t v64;
  unint64_t v65;
  unsigned int v66;
  unsigned __int16 v67;
  unsigned __int8 v68;
  char v69;
  _BYTE v70[55];

  v5 = a2;
  *(_QWORD *)&v70[47] = *MEMORY[0x1E0C80C00];
  v6 = HIDWORD(a2);
  v64 = a1;
  v65 = a2;
  v66 = a3;
  v67 = WORD2(a3);
  v68 = BYTE6(a3);
  v7 = *((unsigned int *)v3 + 10);
  v8 = v3[3];
  if (__OFADD__(v7, v8))
  {
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  if (__OFSUB__(v7 + v8, v7))
  {
LABEL_93:
    __break(1u);
    goto LABEL_94;
  }
  if ((v8 & 0x8000000000000000) != 0)
    goto LABEL_20;
  v9 = *((_DWORD *)v3 + 11);
  v10 = v9 - v7;
  if (v9 < v7)
  {
LABEL_94:
    __break(1u);
    goto LABEL_95;
  }
  if (v8 >= v10)
  {
LABEL_20:
    swift_retain();
LABEL_21:
    v25 = v66 | ((unint64_t)v67 << 32) | ((unint64_t)v68 << 48) | 0x2000000000000000;
    sub_1A5685DEC(*v3, v3[1], v3[2]);
    *v3 = v64;
    v3[1] = v5 | (v6 << 32);
    v14 = 1;
    v3[2] = v25;
    return v14;
  }
  v62 = v3;
  v11 = v3[4];
  v12 = *((unsigned __int8 *)v3 + 54) | ((unint64_t)*((unsigned __int16 *)v3 + 26) << 8);
  swift_retain();
  swift_beginAccess();
  v13 = *(unsigned __int8 *)(*(_QWORD *)(v11 + 24) + v12 + v7 + v8);
  v14 = v8 + 1;
  if ((v13 - 58) >= 0xFFFFFFF6)
  {
    while (1)
    {
      v69 = v13;
      ByteBuffer._setBytes(_:at:)((uint64_t)&v69, (uint64_t)v70, v6);
      v6 = (HIDWORD(v65) + v26);
      if (__CFADD__(HIDWORD(v65), v26))
        break;
      HIDWORD(v65) += v26;
      v5 = v65;
      if (v6 < v65)
        goto LABEL_89;
      if ((v6 - v65) >= 0x15)
      {
        v62[3] = v14;
        v14 = v66;
        v39 = v67;
        v40 = v68;
        sub_1A5687304();
        swift_allocError();
        *(_QWORD *)v41 = v64;
        *(_DWORD *)(v41 + 8) = v5;
        *(_DWORD *)(v41 + 12) = v6;
        *(_DWORD *)(v41 + 16) = v14;
        *(_WORD *)(v41 + 20) = v39;
        *(_BYTE *)(v41 + 22) = v40;
        goto LABEL_98;
      }
      if (__OFADD__(v7, v14))
        goto LABEL_90;
      if (__OFSUB__(v7 + v14, v7))
        goto LABEL_91;
      if (v14 < 0 || v14 >= v10)
      {
        v3 = v62;
        v62[3] = v14;
        goto LABEL_21;
      }
      v13 = *(unsigned __int8 *)(*(_QWORD *)(v11 + 24) + v12 + v7 + v14++);
      if ((v13 - 58) < 0xFFFFFFF6)
        goto LABEL_7;
    }
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
LABEL_7:
  v62[3] = v14;
  if (v13 == 43)
    goto LABEL_10;
  if (v13 != 125)
  {
    if (v13 != 45)
    {
      sub_1A56872C8();
      swift_allocError();
LABEL_99:
      swift_willThrow();
      goto LABEL_100;
    }
LABEL_10:
    if (v6 >= v5)
    {
      v14 = v68;
      swift_beginAccess();
      swift_retain();
      v15 = sub_1A594B538();
      v17 = v16;
      swift_release();
      v18 = HIBYTE(v17) & 0xF;
      v19 = v15 & 0xFFFFFFFFFFFFLL;
      if ((v17 & 0x2000000000000000) != 0)
        v20 = HIBYTE(v17) & 0xF;
      else
        v20 = v15 & 0xFFFFFFFFFFFFLL;
      if (v20)
      {
        if ((v17 & 0x1000000000000000) != 0)
        {
          v22 = sub_1A56A1354(v15, v17, 10);
          v24 = v61;
          goto LABEL_66;
        }
        if ((v17 & 0x2000000000000000) == 0)
        {
          if ((v15 & 0x1000000000000000) != 0)
            v21 = (unsigned __int8 *)((v17 & 0xFFFFFFFFFFFFFFFLL) + 32);
          else
            v21 = (unsigned __int8 *)sub_1A594C7D4();
          v22 = (uint64_t)sub_1A56A132C(v21, v19);
          v24 = v23 & 1;
LABEL_66:
          swift_bridgeObjectRelease();
          if ((v24 & 1) == 0)
          {
            sub_1A5685DEC(*v62, v62[1], v62[2]);
            *v62 = v22;
            *(_OWORD *)(v62 + 1) = xmmword_1A59AC030;
            v46 = sub_1A568704C(v22);
            if (!v4)
            {
              v14 = v46 & 1;
              swift_release();
              return v14;
            }
LABEL_100:
            swift_release();
            return v14;
          }
          goto LABEL_97;
        }
        v63[0] = v15;
        v63[1] = v17 & 0xFFFFFFFFFFFFFFLL;
        if (v15 == 43)
        {
          if (v18)
          {
            if (v18 != 1 && (BYTE1(v15) - 48) <= 9u)
            {
              v22 = (BYTE1(v15) - 48);
              if (v18 == 2)
                goto LABEL_65;
              if ((BYTE2(v15) - 48) <= 9u)
              {
                v22 = 10 * (BYTE1(v15) - 48) + (BYTE2(v15) - 48);
                v43 = v18 - 3;
                if (v43)
                {
                  v44 = (unsigned __int8 *)v63 + 3;
                  while (1)
                  {
                    v45 = *v44 - 48;
                    if (v45 > 9)
                      goto LABEL_62;
                    if (!is_mul_ok(v22, 0xAuLL))
                      goto LABEL_62;
                    v37 = __CFADD__(10 * v22, v45);
                    v22 = 10 * v22 + v45;
                    if (v37)
                      goto LABEL_62;
                    v24 = 0;
                    ++v44;
                    if (!--v43)
                      goto LABEL_66;
                  }
                }
                goto LABEL_65;
              }
            }
            goto LABEL_62;
          }
LABEL_106:
          __break(1u);
        }
        if (v15 != 45)
        {
          if (v18 && (v15 - 48) <= 9u)
          {
            v22 = (v15 - 48);
            if (v18 == 1)
              goto LABEL_65;
            if ((BYTE1(v15) - 48) <= 9u)
            {
              v22 = 10 * (v15 - 48) + (BYTE1(v15) - 48);
              v47 = v18 - 2;
              if (v47)
              {
                v48 = (unsigned __int8 *)v63 + 2;
                while (1)
                {
                  v49 = *v48 - 48;
                  if (v49 > 9)
                    goto LABEL_62;
                  if (!is_mul_ok(v22, 0xAuLL))
                    goto LABEL_62;
                  v37 = __CFADD__(10 * v22, v49);
                  v22 = 10 * v22 + v49;
                  if (v37)
                    goto LABEL_62;
                  v24 = 0;
                  ++v48;
                  if (!--v47)
                    goto LABEL_66;
                }
              }
              goto LABEL_65;
            }
          }
LABEL_62:
          v22 = 0;
LABEL_63:
          v24 = 1;
          goto LABEL_66;
        }
        if (v18)
        {
          if (v18 != 1)
          {
            v36 = BYTE1(v15) - 48;
            if ((BYTE1(v15) - 48) <= 9u)
            {
              v22 = 0;
              v37 = v36 == 0;
              v38 = -(uint64_t)v36;
              if (!v37)
                goto LABEL_63;
              if (v18 == 2)
              {
                v24 = 0;
                v22 = v38;
                goto LABEL_66;
              }
              v50 = BYTE2(v15) - 48;
              if ((BYTE2(v15) - 48) <= 9u && is_mul_ok(v38, 0xAuLL))
              {
                v51 = 10 * v38;
                v22 = v51 - v50;
                if (v51 >= v50)
                {
                  v52 = v18 - 3;
                  if (v52)
                  {
                    v53 = (unsigned __int8 *)v63 + 3;
                    while (1)
                    {
                      v54 = *v53 - 48;
                      if (v54 > 9)
                        goto LABEL_62;
                      if (!is_mul_ok(v22, 0xAuLL))
                        goto LABEL_62;
                      v37 = 10 * v22 >= (unint64_t)v54;
                      v22 = 10 * v22 - v54;
                      if (!v37)
                        goto LABEL_62;
                      v24 = 0;
                      ++v53;
                      if (!--v52)
                        goto LABEL_66;
                    }
                  }
LABEL_65:
                  v24 = 0;
                  goto LABEL_66;
                }
              }
            }
          }
          goto LABEL_62;
        }
LABEL_105:
        __break(1u);
        goto LABEL_106;
      }
LABEL_96:
      swift_bridgeObjectRelease();
LABEL_97:
      v55 = v64;
      v14 = v66;
      v56 = v67;
      v57 = v68;
      sub_1A5687304();
      swift_allocError();
      v58 = v65;
      *(_QWORD *)v59 = v55;
      *(_QWORD *)(v59 + 8) = v58;
      *(_DWORD *)(v59 + 16) = v14;
      *(_WORD *)(v59 + 20) = v56;
      *(_BYTE *)(v59 + 22) = v57;
      goto LABEL_98;
    }
LABEL_95:
    __break(1u);
    goto LABEL_96;
  }
  if (v6 < v5)
  {
    __break(1u);
    goto LABEL_105;
  }
  v27 = v66;
  v14 = v67;
  v28 = v68;
  swift_beginAccess();
  swift_retain();
  v29 = sub_1A594B538();
  v31 = v30;
  swift_release();
  v32 = sub_1A5751670(v29, v31);
  if ((v33 & 1) != 0)
  {
    sub_1A5687304();
    swift_allocError();
    *(_QWORD *)v42 = v64;
    *(_DWORD *)(v42 + 8) = v5;
    *(_DWORD *)(v42 + 12) = v6;
    *(_DWORD *)(v42 + 16) = v27;
    *(_WORD *)(v42 + 20) = v14;
    *(_BYTE *)(v42 + 22) = v28;
LABEL_98:
    swift_retain();
    goto LABEL_99;
  }
  v34 = v32;
  sub_1A5685DEC(*v62, v62[1], v62[2]);
  *v62 = v34;
  *(_OWORD *)(v62 + 1) = xmmword_1A59AC010;
  v35 = sub_1A5687130(v34);
  swift_release();
  if (!v4)
    return v35 & 1;
  return v14;
}

uint64_t sub_1A5686F3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  __int16 v7;

  v4 = *(unsigned int *)(v1 + 40);
  v5 = *(_QWORD *)(v1 + 24);
  result = v4 + v5;
  if (__OFADD__(v4, v5))
  {
    __break(1u);
  }
  else
  {
    sub_1A566FE08(result, 0, *(_QWORD *)(v1 + 32), v4 | ((unint64_t)*(unsigned int *)(v1 + 44) << 32));
    if ((v7 & 0x100) != 0)
      return 1;
    *(_QWORD *)(v1 + 24) = v5 + 1;
    switch(v7)
    {
      case '+':
LABEL_6:
        sub_1A5685DEC(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16));
        *(_QWORD *)v1 = a1;
        *(_OWORD *)(v1 + 8) = xmmword_1A59AC030;
        return 1;
      case '}':
        sub_1A5685DEC(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16));
        *(_QWORD *)v1 = a1;
        *(_OWORD *)(v1 + 8) = xmmword_1A59AC010;
        result = sub_1A5687130(a1);
        if (!v2)
          return result & 1;
        break;
      case '-':
        goto LABEL_6;
      default:
        sub_1A56872C8();
        swift_allocError();
        return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_1A568704C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  __int16 v7;

  v4 = *(unsigned int *)(v1 + 40);
  v5 = *(_QWORD *)(v1 + 24);
  result = v4 + v5;
  if (__OFADD__(v4, v5))
  {
    __break(1u);
  }
  else
  {
    sub_1A566FE08(result, 0, *(_QWORD *)(v1 + 32), v4 | ((unint64_t)*(unsigned int *)(v1 + 44) << 32));
    if ((v7 & 0x100) != 0)
    {
      return 1;
    }
    else
    {
      *(_QWORD *)(v1 + 24) = v5 + 1;
      if (v7 == 125)
      {
        sub_1A5685DEC(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16));
        *(_QWORD *)v1 = a1;
        *(_OWORD *)(v1 + 8) = xmmword_1A59AC010;
        result = sub_1A5687130(a1);
        if (!v2)
          return result & 1;
      }
      else
      {
        sub_1A56872C8();
        swift_allocError();
        return swift_willThrow();
      }
    }
  }
  return result;
}

uint64_t sub_1A5687130(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  __int16 v6;
  __int16 v7;

  v3 = *(unsigned int *)(v1 + 40);
  v4 = *(_QWORD *)(v1 + 24);
  result = v3 + v4;
  if (__OFADD__(v3, v4))
  {
    __break(1u);
  }
  else
  {
    sub_1A566FE08(result, 0, *(_QWORD *)(v1 + 32), v3 | ((unint64_t)*(unsigned int *)(v1 + 44) << 32));
    v7 = v6;
    if ((v6 & 0x100) != 0)
      return (unsigned __int16)(v7 & 0x100) >> 8;
    *(_QWORD *)(v1 + 24) = v4 + 1;
    if (v6 == 10)
    {
      sub_1A5685DEC(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16));
      *(_QWORD *)v1 = 1;
      *(_QWORD *)(v1 + 8) = a1;
      *(_QWORD *)(v1 + 16) = 0x4000000000000000;
      return (unsigned __int16)(v7 & 0x100) >> 8;
    }
    if (v6 == 13)
    {
      sub_1A5687214(a1);
      return (unsigned __int16)(v7 & 0x100) >> 8;
    }
    sub_1A56872C8();
    swift_allocError();
    return swift_willThrow();
  }
  return result;
}

void sub_1A5687214(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  __int16 v6;
  uint64_t v7;

  v2 = *(unsigned int *)(v1 + 40);
  v3 = *(unsigned int *)(v1 + 44);
  if (v3 < v2)
  {
    __break(1u);
  }
  else
  {
    v5 = *(_QWORD *)(v1 + 24);
    if (v5 >= (v3 - v2))
    {
      sub_1A5685DEC(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16));
      v7 = 0;
LABEL_8:
      *(_QWORD *)v1 = v7;
      *(_QWORD *)(v1 + 8) = a1;
      *(_QWORD *)(v1 + 16) = 0x4000000000000000;
      return;
    }
    sub_1A566FE08(v5 + v2, 0, *(_QWORD *)(v1 + 32), v2 | (v3 << 32));
    if ((v6 & 0x100) == 0)
    {
      if (v6 == 10)
        *(_QWORD *)(v1 + 24) = v5 + 1;
      sub_1A5685DEC(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16));
      v7 = 1;
      goto LABEL_8;
    }
  }
  __break(1u);
}

unint64_t sub_1A56872C8()
{
  unint64_t result;

  result = qword_1EE7A93E8;
  if (!qword_1EE7A93E8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for InvalidFrame, &type metadata for InvalidFrame);
    atomic_store(result, (unint64_t *)&qword_1EE7A93E8);
  }
  return result;
}

unint64_t sub_1A5687304()
{
  unint64_t result;

  result = qword_1EE7A93F0;
  if (!qword_1EE7A93F0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for LiteralSizeParsingError, &type metadata for LiteralSizeParsingError);
    atomic_store(result, (unint64_t *)&qword_1EE7A93F0);
  }
  return result;
}

uint64_t sub_1A5687340(__int128 *a1, uint64_t a2)
{
  __int128 v2;

  v2 = *a1;
  *(_QWORD *)(a2 + 16) = *((_QWORD *)a1 + 2);
  *(_OWORD *)a2 = v2;
  return a2;
}

void type metadata accessor for FramingParser.QuotedState()
{
  OUTLINED_FUNCTION_3_1();
}

uint64_t sub_1A568736C(uint64_t a1)
{
  return sub_1A5685E04(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned int *)(a1 + 16) | ((unint64_t)(*(unsigned __int16 *)(a1 + 20) | (*(unsigned __int8 *)(a1 + 22) << 16)) << 32), *(_BYTE *)(a1 + 23));
}

uint64_t sub_1A5687390(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  int v7;
  uint64_t v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(unsigned int *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 23);
  v7 = *(unsigned __int8 *)(a2 + 22);
  v8 = *(unsigned __int16 *)(a2 + 20) | (v7 << 16);
  sub_1A5685DB0(*(_QWORD *)a2, v4, v5 | (v8 << 32), v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 22) = v7;
  *(_WORD *)(a1 + 20) = v8;
  *(_DWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 23) = v6;
  return a1;
}

uint64_t sub_1A568740C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(unsigned int *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 23);
  v7 = *(unsigned __int8 *)(a2 + 22);
  v8 = *(unsigned __int16 *)(a2 + 20) | (v7 << 16);
  sub_1A5685DB0(*(_QWORD *)a2, v4, v5 | (v8 << 32), v6);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(unsigned int *)(a1 + 16) | ((unint64_t)(*(unsigned __int16 *)(a1 + 20) | (*(unsigned __int8 *)(a1 + 22) << 16)) << 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 22) = v7;
  *(_WORD *)(a1 + 20) = v8;
  v12 = *(_BYTE *)(a1 + 23);
  *(_BYTE *)(a1 + 23) = v6;
  sub_1A5685E04(v9, v10, v11, v12);
  return a1;
}

uint64_t sub_1A56874AC(uint64_t a1, __int128 *a2)
{
  char v3;
  __int128 v4;
  __int128 *v5;
  int v6;
  int v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;

  v3 = *((_BYTE *)a2 + 23);
  v4 = *a2;
  v7 = *((_DWORD *)a2 + 4);
  v5 = a2 + 1;
  v6 = v7;
  LOWORD(v7) = *((_WORD *)v5 + 2);
  v8 = *((_BYTE *)v5 + 6);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(unsigned int *)(a1 + 16) | ((unint64_t)(*(unsigned __int16 *)(a1 + 20) | (*(unsigned __int8 *)(a1 + 22) << 16)) << 32);
  *(_OWORD *)a1 = v4;
  *(_DWORD *)(a1 + 16) = v6;
  *(_WORD *)(a1 + 20) = v7;
  *(_BYTE *)(a1 + 22) = v8;
  v12 = *(_BYTE *)(a1 + 23);
  *(_BYTE *)(a1 + 23) = v3;
  sub_1A5685E04(v9, v10, v11, v12);
  return a1;
}

uint64_t sub_1A568751C(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFC && *(_BYTE *)(a1 + 24))
    {
      v2 = *(_DWORD *)a1 + 251;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 23);
      if (v3 <= 4)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1A568755C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_BYTE *)(result + 23) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A56875A0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 23) <= 3u)
    return *(unsigned __int8 *)(a1 + 23);
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_1A56875B8(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(_QWORD *)result = a2 - 4;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 22) = 0;
    *(_WORD *)(result + 20) = 0;
    LOBYTE(a2) = 4;
    *(_DWORD *)(result + 16) = 0;
  }
  *(_BYTE *)(result + 23) = a2;
  return result;
}

void type metadata accessor for FramingParser.LiteralHeaderState()
{
  OUTLINED_FUNCTION_3_1();
}

uint64_t sub_1A56875E8(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A5687634 + 4 * byte_1A59AE119[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A5687668 + 4 * byte_1A59AE114[v4]))();
}

uint64_t sub_1A5687668(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5687670(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5687678);
  return result;
}

uint64_t sub_1A5687684(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A568768CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A5687690(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5687698(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for LineFeedByteStrategy()
{
  OUTLINED_FUNCTION_3_1();
}

unint64_t sub_1A56876B4()
{
  unint64_t result;

  result = qword_1EE7A93F8;
  if (!qword_1EE7A93F8)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AE4B8, &unk_1E4E61CF8);
    atomic_store(result, (unint64_t *)&qword_1EE7A93F8);
  }
  return result;
}

unint64_t sub_1A56876F4()
{
  unint64_t result;

  result = qword_1EE7A9400;
  if (!qword_1EE7A9400)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AE4E0, &unk_1E4E5E338);
    atomic_store(result, (unint64_t *)&qword_1EE7A9400);
  }
  return result;
}

unint64_t sub_1A5687734()
{
  unint64_t result;

  result = qword_1EE7A9408;
  if (!qword_1EE7A9408)
  {
    result = MEMORY[0x1A85B1874](&unk_1A59AE588, &unk_1E4E5E2A8);
    atomic_store(result, (unint64_t *)&qword_1EE7A9408);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_12(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1A56841C4(v11, v8, a7);
  sub_1A56841C4(v10, v9, v7);
  return sub_1A566B918();
}

uint64_t OUTLINED_FUNCTION_2_16()
{
  return sub_1A594CE70();
}

uint64_t OUTLINED_FUNCTION_3_14()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  sub_1A56841C4(v0, v2, v1);
  return sub_1A594B538();
}

uint64_t OUTLINED_FUNCTION_10_8()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_1A56841DC(v2, v1, v0);
}

uint64_t OUTLINED_FUNCTION_11_9@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, ...)
{
  __int128 v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, __int128);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  va_arg(va1, _QWORD);
  v12 = a1 & 0x1FFFFFFFFFFFFFFFLL;
  return sub_1A5687340((__int128 *)va, (uint64_t)va1);
}

uint64_t OUTLINED_FUNCTION_12_10()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  return sub_1A56841DC(v0, v2, v1);
}

uint64_t OUTLINED_FUNCTION_13_8()
{
  return sub_1A566B918();
}

uint64_t OUTLINED_FUNCTION_14_5()
{
  return sub_1A594CEB8();
}

uint64_t OUTLINED_FUNCTION_15_11(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;

  return sub_1A5685D98(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_16_8()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_17_9()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_19_7()
{
  sub_1A5684D58();
}

uint64_t OUTLINED_FUNCTION_22_9()
{
  return sub_1A594CE88();
}

uint64_t OUTLINED_FUNCTION_23_7()
{
  return sub_1A594CE88();
}

uint64_t AbsoluteMessagePath.command.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A5687904(v1, a1);
}

uint64_t sub_1A5687904(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A90D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *AbsoluteMessagePath.command.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43[192];
  _BYTE v44[192];
  _QWORD v45[24];

  v9 = OUTLINED_FUNCTION_0_22(a1, a2, a3, a4, a5, a6, a7, a8, v18);
  OUTLINED_FUNCTION_3_15(v9, v10, v11, v12, v13, v14, v15, v16, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29,
    v30,
    v31,
    v32,
    v33,
    v34,
    v35,
    v36,
    v37,
    v38,
    v39,
    v40,
    v41,
    v42,
    v43[0]);
  sub_1A56879A8((uint64_t)v43, (uint64_t)v44);
  OUTLINED_FUNCTION_4_15(v45, v8);
  sub_1A56880FC(v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A56879F0);
  return OUTLINED_FUNCTION_4_15(v8, v44);
}

uint64_t sub_1A56879A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A90D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A56879F0(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned __int8 a20,uint64_t a21,uint64_t a22)
{
  if (a3 < 0xFFFFFFFE00000000 || (a9 & 0xFFFFFFFFFFFFFE00) != 0x200)
    return sub_1A5687A80(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22);
  return result;
}

uint64_t sub_1A5687A80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned __int8 a20,uint64_t a21,uint64_t a22)
{
  swift_bridgeObjectRelease();
  if ((a9 & 0x8000000000000000) == 0)
    return swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1A5687B8C(a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22);
}

uint64_t sub_1A5687B8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11, uint64_t a12, uint64_t a13)
{
  uint64_t result;

  if (a13)
  {
    sub_1A5687BD4(a9, a10, a11);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A5687BD4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRelease();
  return result;
}

double (*AbsoluteMessagePath.command.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t AbsoluteMessagePath.init(command:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44[192];

  v10 = OUTLINED_FUNCTION_0_22(a1, a2, a3, a4, a5, a6, a7, a8, v19);
  OUTLINED_FUNCTION_3_15(v10, v11, v12, v13, v14, v15, v16, v17, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30,
    v31,
    v32,
    v33,
    v34,
    v35,
    v36,
    v37,
    v38,
    v39,
    v40,
    v41,
    v42,
    v43,
    v44[0]);
  return sub_1A56879A8((uint64_t)v44, a9);
}

_QWORD *AbsoluteMessagePath.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11[24];
  _BYTE v12[192];
  _BYTE v13[192];
  _BYTE v14[192];

  OUTLINED_FUNCTION_5_13(a1, (uint64_t)v13);
  sub_1A56879A8((uint64_t)v13, (uint64_t)v14);
  if (sub_1A5687CDC((uint64_t)v14) == 1)
  {
    v8 = sub_1A594CE94();
  }
  else
  {
    OUTLINED_FUNCTION_0_22((uint64_t)v13, v1, v2, v3, v4, v5, v6, v7, v11[0]);
    sub_1A5687D00(v11, v12);
    v9 = sub_1A594CE94();
    OUTLINED_FUNCTION_1_13(v9, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5688168);
    v8 = URLCommand.hash(into:)();
  }
  return OUTLINED_FUNCTION_1_13(v8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A56879F0);
}

uint64_t sub_1A5687CDC(uint64_t a1)
{
  unsigned int v1;

  v1 = (*(_QWORD *)(a1 + 16) >> 33) & 0x7FFFFFFF | ((*(_DWORD *)(a1 + 64) >> 9) << 31);
  if (v1 > 0x80000000)
    return -v1;
  else
    return 0;
}

void *sub_1A5687D00(const void *a1, void *a2)
{
  __swift_memcpy192_8_0(a2, a1);
  return a2;
}

BOOL static AbsoluteMessagePath.__derived_struct_equals(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14[24];
  _BYTE v15[192];
  _BYTE v16[192];
  _BYTE v17[192];
  uint64_t v18;
  _BYTE v19[192];
  _BYTE v20[192];
  _BYTE v21[192];
  _BYTE v22[192];

  v4 = sub_1A56879A8((uint64_t)a1, (uint64_t)v20);
  OUTLINED_FUNCTION_5_13(v4, (uint64_t)v21);
  sub_1A56879A8((uint64_t)v20, (uint64_t)v22);
  if (sub_1A5687CDC((uint64_t)v22) != 1)
  {
    sub_1A56879A8((uint64_t)v21, (uint64_t)v16);
    if (sub_1A5687CDC((uint64_t)v16) != 1)
    {
      OUTLINED_FUNCTION_0_22((uint64_t)v20, v6, v7, v8, v9, v10, v11, v12, v14[0]);
      sub_1A5687D00(v14, v19);
      sub_1A56879A8((uint64_t)v21, (uint64_t)v15);
      sub_1A5687D00(v15, v17);
      OUTLINED_FUNCTION_2_17(a2);
      OUTLINED_FUNCTION_2_17(a1);
      v5 = static URLCommand.__derived_enum_equals(_:_:)(v19, v17);
      sub_1A56880FC(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A56879F0);
      sub_1A56880FC(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A56879F0);
      return v5;
    }
    goto LABEL_5;
  }
  sub_1A56879A8((uint64_t)v21, (uint64_t)v17);
  if (sub_1A5687CDC((uint64_t)v17) != 1)
  {
LABEL_5:
    sub_1A56879A8((uint64_t)v20, (uint64_t)v17);
    sub_1A56879A8((uint64_t)v21, (uint64_t)&v18);
    OUTLINED_FUNCTION_2_17(a2);
    OUTLINED_FUNCTION_2_17(a1);
    sub_1A5688360((uint64_t)v17);
    return 0;
  }
  sub_1A56880FC(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5688168);
  return 1;
}

uint64_t AbsoluteMessagePath.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[192];
  _BYTE v5[192];
  _BYTE v6[192];
  _BYTE v7[192];

  v0 = sub_1A594CE64();
  OUTLINED_FUNCTION_5_13(v0, (uint64_t)v6);
  sub_1A56879A8((uint64_t)v6, (uint64_t)v7);
  if (sub_1A5687CDC((uint64_t)v7) == 1)
  {
    v1 = sub_1A594CE94();
  }
  else
  {
    sub_1A56879A8((uint64_t)v6, (uint64_t)v4);
    sub_1A5687D00(v4, v5);
    v2 = sub_1A594CE94();
    OUTLINED_FUNCTION_1_13(v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5688168);
    v1 = URLCommand.hash(into:)();
  }
  OUTLINED_FUNCTION_1_13(v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A56879F0);
  return sub_1A594CED0();
}

uint64_t sub_1A5687F68()
{
  const void *v0;
  _BYTE v2[192];

  memcpy(v2, v0, sizeof(v2));
  return AbsoluteMessagePath.hashValue.getter();
}

_QWORD *sub_1A5687FA0(uint64_t a1)
{
  const void *v1;
  uint64_t v4;

  OUTLINED_FUNCTION_4_15(&v4, v1);
  return AbsoluteMessagePath.hash(into:)(a1);
}

uint64_t sub_1A5687FDC()
{
  const void *v0;
  _BYTE v2[192];
  _BYTE v3[192];
  _QWORD __dst[24];
  _BYTE v5[192];

  memcpy(__dst, v0, sizeof(__dst));
  sub_1A594CE64();
  sub_1A56879A8((uint64_t)__dst, (uint64_t)v5);
  if (sub_1A5687CDC((uint64_t)v5) == 1)
  {
    sub_1A594CE94();
  }
  else
  {
    sub_1A56879A8((uint64_t)__dst, (uint64_t)v2);
    sub_1A5687D00(v2, v3);
    sub_1A594CE94();
    sub_1A56880FC(__dst, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5688168);
    URLCommand.hash(into:)();
  }
  sub_1A56880FC(__dst, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A56879F0);
  return sub_1A594CED0();
}

BOOL sub_1A56880A8(void *__src, const void *a2)
{
  _QWORD v4[24];
  _QWORD __dst[24];

  memcpy(v4, __src, sizeof(v4));
  memcpy(__dst, a2, sizeof(__dst));
  return static AbsoluteMessagePath.__derived_struct_equals(_:_:)(v4, __dst);
}

_QWORD *sub_1A56880FC(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23]);
  return a1;
}

uint64_t sub_1A5688168(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned __int8 a20,uint64_t a21,uint64_t a22)
{
  if (a3 < 0xFFFFFFFE00000000 || (a9 & 0xFFFFFFFFFFFFFE00) != 0x200)
    return sub_1A56881F8(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22);
  return result;
}

uint64_t sub_1A56881F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned __int8 a20,uint64_t a21,uint64_t a22)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if ((a9 & 0x8000000000000000) == 0)
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return sub_1A5688300(a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22);
}

uint64_t sub_1A5688300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11, uint64_t a12, uint64_t a13)
{
  uint64_t result;

  if (a13)
  {
    sub_1A5688348(a9, a10, a11);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return result;
}

uint64_t sub_1A5688348(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return result;
}

uint64_t sub_1A5688360(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 200);
  v17 = *(_QWORD *)(a1 + 192);
  v3 = *(_QWORD *)(a1 + 208);
  v4 = *(_QWORD *)(a1 + 216);
  v5 = *(_QWORD *)(a1 + 224);
  v6 = *(_QWORD *)(a1 + 232);
  v7 = *(_QWORD *)(a1 + 240);
  v8 = *(_QWORD *)(a1 + 248);
  v16 = *(_OWORD *)(a1 + 256);
  v15 = *(_OWORD *)(a1 + 272);
  v14 = *(_OWORD *)(a1 + 288);
  v13 = *(_OWORD *)(a1 + 304);
  v12 = *(_OWORD *)(a1 + 320);
  v11 = *(_OWORD *)(a1 + 336);
  v10 = *(_OWORD *)(a1 + 352);
  sub_1A56879F0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168));
  sub_1A56879F0(v17, v2, v3, v4, v5, v6, v7, v8, v16, *((uint64_t *)&v16 + 1), v15, *((uint64_t *)&v15 + 1), v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v11,
    BYTE8(v11),
    v10,
    *((uint64_t *)&v10 + 1));
  return a1;
}

unint64_t sub_1A5688498()
{
  unint64_t result;

  result = qword_1EE7A9410;
  if (!qword_1EE7A9410)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for AbsoluteMessagePath, &type metadata for AbsoluteMessagePath);
    atomic_store(result, (unint64_t *)&qword_1EE7A9410);
  }
  return result;
}

uint64_t destroy for AbsoluteMessagePath(uint64_t result)
{
  unint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(result + 16);
  v2 = *(_QWORD *)(result + 64);
  if (v1 < 0xFFFFFFFE00000000 || (v2 & 0xFFFFFFFFFFFFFE00) != 0x200)
    return sub_1A5687A80(*(_QWORD *)result, *(_QWORD *)(result + 8), v1, *(_QWORD *)(result + 24), *(_QWORD *)(result + 32), *(_QWORD *)(result + 40), *(_QWORD *)(result + 48), *(_QWORD *)(result + 56), v2, *(_QWORD *)(result + 72), *(_QWORD *)(result + 80), *(_QWORD *)(result + 88), *(_QWORD *)(result + 96), *(_QWORD *)(result + 104), *(_QWORD *)(result + 112), *(_QWORD *)(result + 120), *(_QWORD *)(result + 128), *(_QWORD *)(result + 136), *(_QWORD *)(result + 144),
             *(_OWORD *)(result + 152),
             *(_QWORD *)(result + 160),
             *(_QWORD *)(result + 168));
  return result;
}

_QWORD *initializeWithCopy for AbsoluteMessagePath(_QWORD *__dst, uint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v3 = a2[2];
  v4 = a2[8];
  if (v3 >= 0xFFFFFFFE00000000 && (v4 & 0xFFFFFFFFFFFFFE00) == 0x200)
  {
    memcpy(__dst, a2, 0xC0uLL);
  }
  else
  {
    v5 = *a2;
    v6 = a2[3];
    v7 = a2[4];
    v13 = a2[9];
    v14 = a2[10];
    v15 = a2[11];
    v16 = a2[12];
    v17 = a2[13];
    v18 = a2[14];
    v19 = a2[15];
    v20 = a2[16];
    v21 = a2[17];
    v22 = a2[18];
    v23 = a2[19];
    v24 = a2[20];
    v25 = a2[21];
    v26 = a2[22];
    v27 = a2[23];
    v8 = a2[1];
    v9 = a2[5];
    v10 = a2[6];
    v11 = a2[7];
    sub_1A56881F8(*a2, v8, v3, v6, v7, v9, v10, v11, v4, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22,
      v23,
      v24,
      v25);
    *__dst = v5;
    __dst[1] = v8;
    __dst[2] = v3;
    __dst[3] = v6;
    __dst[4] = v7;
    __dst[5] = v9;
    __dst[6] = v10;
    __dst[7] = v11;
    __dst[8] = v4;
    __dst[9] = v13;
    __dst[10] = v14;
    __dst[11] = v15;
    __dst[12] = v16;
    __dst[13] = v17;
    __dst[14] = v18;
    __dst[15] = v19;
    __dst[16] = v20;
    __dst[17] = v21;
    __dst[18] = v22;
    __dst[19] = v23;
    __dst[20] = v24;
    __dst[21] = v25;
    __dst[22] = v26;
    __dst[23] = v27;
  }
  return __dst;
}

uint64_t *assignWithCopy for AbsoluteMessagePath(uint64_t *__dst, uint64_t *__src)
{
  unint64_t v4;
  uint64_t v5;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v4 = __src[2];
  v5 = __src[8];
  v7 = v4 > 0xFFFFFFFDFFFFFFFFLL && (v5 & 0xFFFFFFFFFFFFFE00) == 512;
  if ((unint64_t)__dst[2] < 0xFFFFFFFE00000000 || (__dst[8] & 0xFFFFFFFFFFFFFE00) != 0x200)
  {
    if (!v7)
    {
      v15 = *__src;
      v16 = __src[1];
      v17 = __src[3];
      v18 = __src[4];
      v19 = __src[6];
      v20 = __src[7];
      v39 = __src[9];
      v41 = __src[10];
      v43 = __src[11];
      v45 = __src[12];
      v47 = __src[13];
      v49 = __src[14];
      v51 = __src[15];
      v53 = __src[16];
      v55 = __src[17];
      v57 = __src[18];
      v59 = __src[19];
      v61 = __src[20];
      v63 = __src[21];
      v65 = __src[22];
      v67 = __src[23];
      v21 = __src[5];
      sub_1A56881F8(*__src, v16, v4, v17, v18, v21, v19, v20, v5, v39, v41, v43, v45, v47, v49, v51, v53, v55, v57,
        v59,
        v61,
        v63);
      v22 = *__dst;
      v23 = __dst[1];
      *__dst = v15;
      __dst[1] = v16;
      v24 = __dst[2];
      v25 = __dst[3];
      __dst[2] = v4;
      __dst[3] = v17;
      v26 = __dst[4];
      v27 = __dst[5];
      __dst[4] = v18;
      __dst[5] = v21;
      v28 = __dst[6];
      v29 = __dst[7];
      __dst[6] = v19;
      __dst[7] = v20;
      v30 = *((_OWORD *)__dst + 4);
      v31 = *((_OWORD *)__dst + 5);
      __dst[8] = v5;
      __dst[9] = v39;
      __dst[10] = v41;
      __dst[11] = v43;
      v32 = *((_OWORD *)__dst + 6);
      v33 = *((_OWORD *)__dst + 7);
      __dst[12] = v45;
      __dst[13] = v47;
      __dst[14] = v49;
      __dst[15] = v51;
      v34 = *((_OWORD *)__dst + 8);
      v35 = *((_OWORD *)__dst + 9);
      __dst[16] = v53;
      __dst[17] = v55;
      __dst[18] = v57;
      __dst[19] = v59;
      v36 = *((_OWORD *)__dst + 10);
      __dst[20] = v61;
      __dst[21] = v63;
      __dst[22] = v65;
      __dst[23] = v67;
      sub_1A5687A80(v22, v23, v24, v25, v26, v27, v28, v29, v30, *((uint64_t *)&v30 + 1), v31, *((uint64_t *)&v31 + 1), v32, *((uint64_t *)&v32 + 1), v33, *((uint64_t *)&v33 + 1), v34, *((uint64_t *)&v34 + 1), v35,
        BYTE8(v35),
        v36,
        *((uint64_t *)&v36 + 1));
      return __dst;
    }
    sub_1A5688A24(__dst);
    goto LABEL_13;
  }
  if (v7)
  {
LABEL_13:
    memcpy(__dst, __src, 0xC0uLL);
    return __dst;
  }
  v8 = __src[3];
  v9 = __src[4];
  v10 = __src[7];
  v38 = __src[9];
  v40 = __src[10];
  v42 = __src[11];
  v44 = __src[12];
  v46 = __src[13];
  v48 = __src[14];
  v50 = __src[15];
  v52 = __src[16];
  v54 = __src[17];
  v56 = __src[18];
  v58 = __src[19];
  v60 = __src[20];
  v62 = __src[21];
  v64 = __src[22];
  v66 = __src[23];
  v11 = *__src;
  v12 = __src[1];
  v13 = __src[5];
  v14 = __src[6];
  sub_1A56881F8(*__src, v12, v4, v8, v9, v13, v14, v10, v5, v38, v40, v42, v44, v46, v48, v50, v52, v54, v56,
    v58,
    v60,
    v62);
  *__dst = v11;
  __dst[1] = v12;
  __dst[2] = v4;
  __dst[3] = v8;
  __dst[4] = v9;
  __dst[5] = v13;
  __dst[6] = v14;
  __dst[7] = v10;
  __dst[8] = v5;
  __dst[9] = v38;
  __dst[10] = v40;
  __dst[11] = v42;
  __dst[12] = v44;
  __dst[13] = v46;
  __dst[14] = v48;
  __dst[15] = v50;
  __dst[16] = v52;
  __dst[17] = v54;
  __dst[18] = v56;
  __dst[19] = v58;
  __dst[20] = v60;
  __dst[21] = v62;
  __dst[22] = v64;
  __dst[23] = v66;
  return __dst;
}

uint64_t *sub_1A5688A24(uint64_t *a1)
{
  destroy for URLCommand(a1);
  return a1;
}

void *__swift_memcpy192_8_0(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xC0uLL);
}

char *assignWithTake for AbsoluteMessagePath(char *__dst, char *__src)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;

  v4 = *((_QWORD *)__dst + 2);
  v5 = *((_QWORD *)__dst + 8);
  v6 = *((_QWORD *)__src + 2);
  v7 = *((_QWORD *)__src + 8);
  if (v4 < 0xFFFFFFFE00000000 || (v5 & 0xFFFFFFFFFFFFFE00) != 0x200)
  {
    if (v6 < 0xFFFFFFFE00000000 || (v7 & 0xFFFFFFFFFFFFFE00) != 0x200)
    {
      v8 = *((_QWORD *)__src + 7);
      v9 = *((_QWORD *)__src + 23);
      v10 = *(_QWORD *)__dst;
      v11 = *((_QWORD *)__dst + 1);
      v12 = *((_QWORD *)__dst + 3);
      v13 = *((_QWORD *)__dst + 4);
      v14 = *((_QWORD *)__dst + 5);
      v15 = *((_QWORD *)__dst + 6);
      v16 = *((_QWORD *)__dst + 7);
      v17 = *(_OWORD *)(__dst + 72);
      v18 = *(_OWORD *)(__dst + 88);
      v19 = *(_OWORD *)(__dst + 104);
      v20 = *(_OWORD *)(__dst + 120);
      v21 = *(_OWORD *)(__dst + 136);
      v22 = *(_OWORD *)(__dst + 152);
      v23 = *(_OWORD *)(__dst + 168);
      *(_OWORD *)__dst = *(_OWORD *)__src;
      *((_QWORD *)__dst + 2) = v6;
      *(_OWORD *)(__dst + 24) = *(_OWORD *)(__src + 24);
      *(_OWORD *)(__dst + 40) = *(_OWORD *)(__src + 40);
      *((_QWORD *)__dst + 7) = v8;
      *((_QWORD *)__dst + 8) = v7;
      *(_OWORD *)(__dst + 72) = *(_OWORD *)(__src + 72);
      *(_OWORD *)(__dst + 88) = *(_OWORD *)(__src + 88);
      *(_OWORD *)(__dst + 104) = *(_OWORD *)(__src + 104);
      *(_OWORD *)(__dst + 120) = *(_OWORD *)(__src + 120);
      *(_OWORD *)(__dst + 136) = *(_OWORD *)(__src + 136);
      *(_OWORD *)(__dst + 152) = *(_OWORD *)(__src + 152);
      *(_OWORD *)(__dst + 168) = *(_OWORD *)(__src + 168);
      *((_QWORD *)__dst + 23) = v9;
      sub_1A5687A80(v10, v11, v4, v12, v13, v14, v15, v16, v5, v17, *((uint64_t *)&v17 + 1), v18, *((uint64_t *)&v18 + 1), v19, *((uint64_t *)&v19 + 1), v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1),
        v22,
        *((uint64_t *)&v22 + 1),
        v23);
      return __dst;
    }
    sub_1A5688A24((uint64_t *)__dst);
  }
  memcpy(__dst, __src, 0xC0uLL);
  return __dst;
}

uint64_t getEnumTagSinglePayload for AbsoluteMessagePath(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  int v4;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 192))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = (*(_QWORD *)(a1 + 16) >> 33) & 0x7FFFFFFF | ((*(_DWORD *)(a1 + 64) >> 9) << 31);
      v4 = -2 - v3;
      if ((int)(-2 - v3) < 0)
        v4 = -1;
      if (v3 <= 0x80000000)
        v2 = -1;
      else
        v2 = v4;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AbsoluteMessagePath(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 192) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 192) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = (unint64_t)~a2 << 33;
      *(_OWORD *)(result + 24) = 0u;
      *(_OWORD *)(result + 40) = 0u;
      *(_QWORD *)(result + 56) = 0;
      *(_QWORD *)(result + 64) = 512;
      *(_OWORD *)(result + 72) = 0u;
      *(_OWORD *)(result + 88) = 0u;
      *(_OWORD *)(result + 104) = 0u;
      *(_OWORD *)(result + 120) = 0u;
      *(_OWORD *)(result + 136) = 0u;
      *(_OWORD *)(result + 152) = 0u;
      *(_OWORD *)(result + 168) = 0u;
      *(_QWORD *)(result + 184) = 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AbsoluteMessagePath()
{
  return &type metadata for AbsoluteMessagePath;
}

uint64_t OUTLINED_FUNCTION_0_22(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1A56879A8(a1, (uint64_t)&a9);
}

_QWORD *OUTLINED_FUNCTION_1_13(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return sub_1A56880FC(v2, a2);
}

_QWORD *OUTLINED_FUNCTION_2_17(_QWORD *a1)
{
  void (*v1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);

  return sub_1A56880FC(a1, v1);
}

uint64_t OUTLINED_FUNCTION_3_15(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  return sub_1A56879A8((uint64_t)&a9, (uint64_t)&a33);
}

void *OUTLINED_FUNCTION_4_15(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xC0uLL);
}

uint64_t OUTLINED_FUNCTION_5_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A56879A8(v2, a2);
}

uint64_t Access.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  if (!a4)
  {
    sub_1A594CE88();
    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_0_23();
    v6 = a2;
    v7 = a3;
    v8 = 0;
    return sub_1A5687BD4(v6, v7, v8);
  }
  if (a4 == 1)
  {
    sub_1A594CE88();
    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_0_23();
    v6 = a2;
    v7 = a3;
    v8 = 1;
    return sub_1A5687BD4(v6, v7, v8);
  }
  return sub_1A594CE88();
}

uint64_t static Access.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  BOOL v8;

  if (a3)
  {
    if (a3 != 1)
    {
      if (a1 | a2)
      {
        v8 = a6 == 2 && a4 == 1;
        if (!v8 || a5)
          return 0;
      }
      else if (a6 != 2 || a5 | a4)
      {
        return 0;
      }
      return 1;
    }
    if (a6 != 1)
      return 0;
LABEL_6:
    if (a1 != a4 || a2 != a5)
      return sub_1A594CD38();
    return 1;
  }
  if (!a6)
    goto LABEL_6;
  return 0;
}

uint64_t Access.hashValue.getter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  sub_1A594CE64();
  if (a3)
  {
    if (a3 != 1)
    {
      sub_1A594CE88();
      return sub_1A594CED0();
    }
    sub_1A594CE88();
    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_0_23();
    v6 = a1;
    v7 = a2;
    v8 = 1;
  }
  else
  {
    sub_1A594CE88();
    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_0_23();
    v6 = a1;
    v7 = a2;
    v8 = 0;
  }
  sub_1A5687BD4(v6, v7, v8);
  return sub_1A594CED0();
}

uint64_t sub_1A5688F00()
{
  uint64_t v0;

  return Access.hashValue.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

uint64_t sub_1A5688F0C(uint64_t a1)
{
  uint64_t v1;

  return Access.hash(into:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16));
}

uint64_t sub_1A5688F18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(unsigned __int8 *)(v0 + 16);
  sub_1A594CE64();
  if (v3)
  {
    if (v3 != 1)
    {
      sub_1A594CE88();
      return sub_1A594CED0();
    }
    sub_1A594CE88();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594B1D8();
    v4 = v1;
    v5 = v2;
    v6 = 1;
  }
  else
  {
    sub_1A594CE88();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594B1D8();
    v4 = v1;
    v5 = v2;
    v6 = 0;
  }
  sub_1A5687BD4(v4, v5, v6);
  return sub_1A594CED0();
}

uint64_t sub_1A5688FEC(uint64_t a1, uint64_t a2)
{
  return static Access.__derived_enum_equals(_:_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16));
}

void sub_1A5689008(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  Swift::Int v4;
  char v5;
  uint64_t v6;
  uint64_t v9;
  Swift::UInt32 v10;
  uint64_t v11;
  unint64_t v12;
  Swift::Int v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  Swift::Int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  BOOL v21;
  int v22;
  Swift::UInt32 v23;
  uint64_t v24;
  unint64_t v25;
  Swift::Int v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  Swift::Int v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  int v34;
  Swift::Int v35;
  uint64_t v36;
  unint64_t v37;
  int v38;
  char v39;
  Swift::String v40;
  int v41;
  int v42;
  uint64_t v43;
  unint64_t v44;
  int v45;
  char v46;
  Swift::String v47;
  int v48;

  v6 = v3;
  v9 = v3 + 8;
  if (!a3)
    goto LABEL_12;
  if (a3 != 1)
  {
LABEL_21:
    v35 = *(unsigned int *)(v6 + 20);
    if (a1 | a2)
    {
      v36 = OUTLINED_FUNCTION_1_14();
      OUTLINED_FUNCTION_22_1(v36, v37, v9, v35);
      if ((v39 & 1) != 0)
      {
        v40._countAndFlagsBits = OUTLINED_FUNCTION_1_14();
        v38 = ByteBuffer._setStringSlowpath(_:at:)(v40, v35);
      }
      v41 = *(_DWORD *)(v6 + 20);
      v21 = __CFADD__(v41, v38);
      v42 = v41 + v38;
      if (!v21)
        goto LABEL_30;
      __break(1u);
    }
    v43 = OUTLINED_FUNCTION_3_16();
    OUTLINED_FUNCTION_22_1(v43, v44, v9, v35);
    if ((v46 & 1) != 0)
    {
      v47._countAndFlagsBits = OUTLINED_FUNCTION_3_16();
      v45 = ByteBuffer._setStringSlowpath(_:at:)(v47, v35);
    }
    v48 = *(_DWORD *)(v6 + 20);
    v21 = __CFADD__(v48, v45);
    v42 = v48 + v45;
    if (!v21)
    {
LABEL_30:
      *(_DWORD *)(v6 + 20) = v42;
      return;
    }
LABEL_35:
    __break(1u);
    return;
  }
  v10 = *(_DWORD *)(v6 + 20);
  v11 = OUTLINED_FUNCTION_9_12();
  OUTLINED_FUNCTION_22_1(v11, v12, v9, v10);
  if ((v14 & 1) != 0)
  {
    v15 = OUTLINED_FUNCTION_9_12();
    v13 = OUTLINED_FUNCTION_279(v15, v16);
  }
  v17 = v13;
  if (__CFADD__(*(_DWORD *)(v6 + 20), (_DWORD)v13))
  {
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  OUTLINED_FUNCTION_10_9();
  OUTLINED_FUNCTION_2_18();
  v18 = OUTLINED_FUNCTION_8_8();
  sub_1A5687BD4(v18, v19, 1u);
  if ((v5 & 1) != 0)
    v4 = OUTLINED_FUNCTION_279(a1, a2);
  v20 = *(_DWORD *)(v6 + 20);
  v21 = __CFADD__(v20, (_DWORD)v4);
  v22 = v20 + v4;
  if (v21)
    goto LABEL_32;
  *(_DWORD *)(v6 + 20) = v22;
  if (!__OFADD__(v17, v4))
    return;
  __break(1u);
LABEL_12:
  v23 = *(_DWORD *)(v6 + 20);
  v24 = OUTLINED_FUNCTION_4_16();
  OUTLINED_FUNCTION_22_1(v24, v25, v9, v23);
  if ((v27 & 1) != 0)
  {
    v28 = OUTLINED_FUNCTION_4_16();
    v26 = OUTLINED_FUNCTION_279(v28, v29);
  }
  v30 = v26;
  if (__CFADD__(*(_DWORD *)(v6 + 20), (_DWORD)v26))
    goto LABEL_33;
  OUTLINED_FUNCTION_10_9();
  OUTLINED_FUNCTION_2_18();
  v31 = OUTLINED_FUNCTION_8_8();
  sub_1A5687BD4(v31, v32, 0);
  if ((v5 & 1) != 0)
    v4 = OUTLINED_FUNCTION_279(a1, a2);
  v33 = *(_DWORD *)(v6 + 20);
  v21 = __CFADD__(v33, (_DWORD)v4);
  v34 = v33 + v4;
  if (v21)
    goto LABEL_34;
  *(_DWORD *)(v6 + 20) = v34;
  if (__OFADD__(v30, v4))
  {
    __break(1u);
    goto LABEL_21;
  }
}

unint64_t sub_1A56891CC()
{
  unint64_t result;

  result = qword_1EE7A9418;
  if (!qword_1EE7A9418)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for Access, &type metadata for Access);
    atomic_store(result, (unint64_t *)&qword_1EE7A9418);
  }
  return result;
}

uint64_t destroy for Access(uint64_t a1)
{
  return sub_1A5687BD4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s12NIOIMAPCore26AccessOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1A5688348(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for Access(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1A5688348(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1A5687BD4(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8_1(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for Access(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1A5687BD4(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for Access(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Access(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A5689394(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1A56893AC(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Access()
{
  return &type metadata for Access;
}

uint64_t OUTLINED_FUNCTION_0_23()
{
  return sub_1A594B1D8();
}

uint64_t OUTLINED_FUNCTION_1_14()
{
  return 0x756F6D796E6F6E61;
}

void OUTLINED_FUNCTION_2_18()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  Swift::UInt32 v3;

  sub_1A56814E0(v2, v1, v0, v3);
}

uint64_t OUTLINED_FUNCTION_3_16()
{
  return 0x7265737568747561;
}

uint64_t OUTLINED_FUNCTION_4_16()
{
  return 0x2B74696D627573;
}

uint64_t OUTLINED_FUNCTION_8_8()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_9_12()
{
  return 0x2B72657375;
}

uint64_t OUTLINED_FUNCTION_10_9()
{
  uint64_t v0;
  int v1;

  *(_DWORD *)(v0 + 20) = v1;
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t AppendData.byteCount.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

double (*AppendData.byteCount.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t AppendData.withoutContentTransferEncoding.getter(uint64_t a1, char a2)
{
  return a2 & 1;
}

uint64_t AppendData.withoutContentTransferEncoding.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = result;
  return result;
}

double (*AppendData.withoutContentTransferEncoding.modify())(_QWORD)
{
  return nullsub_1;
}

NIOIMAPCore2::AppendData __swiftcall AppendData.init(byteCount:withoutContentTransferEncoding:)(Swift::Int byteCount, Swift::Bool withoutContentTransferEncoding)
{
  Swift::Bool v2;
  NIOIMAPCore2::AppendData result;

  v2 = withoutContentTransferEncoding;
  result.byteCount = byteCount;
  result.withoutContentTransferEncoding = v2;
  return result;
}

uint64_t AppendData.hash(into:)()
{
  sub_1A594CE88();
  return sub_1A594CE94();
}

uint64_t static AppendData.__derived_struct_equals(_:_:)(uint64_t a1, int a2, uint64_t a3, int a4)
{
  return (a1 == a3) & (a2 ^ a4 ^ 1u);
}

uint64_t AppendData.hashValue.getter()
{
  sub_1A594CE64();
  sub_1A594CE88();
  sub_1A594CE94();
  return sub_1A594CED0();
}

uint64_t sub_1A568955C()
{
  return AppendData.hashValue.getter();
}

uint64_t sub_1A5689568()
{
  return AppendData.hash(into:)();
}

uint64_t sub_1A5689574()
{
  sub_1A594CE64();
  sub_1A594CE88();
  sub_1A594CE94();
  return sub_1A594CED0();
}

unint64_t sub_1A56895D0()
{
  unint64_t result;

  result = qword_1EE7A9420;
  if (!qword_1EE7A9420)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for AppendData, &type metadata for AppendData);
    atomic_store(result, (unint64_t *)&qword_1EE7A9420);
  }
  return result;
}

uint64_t sub_1A568960C(uint64_t a1, uint64_t a2)
{
  return static AppendData.__derived_struct_equals(_:_:)(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8), *(_QWORD *)a2, *(unsigned __int8 *)(a2 + 8));
}

uint64_t __swift_memcpy9_8_1(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for AppendData(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for AppendData()
{
  return &type metadata for AppendData;
}

void sub_1A5689698(uint64_t a1, char a2)
{
  uint64_t v2;
  int v3;
  char v4;
  unint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  BOOL v9;
  int v10;
  int v11;

  v5 = *(unsigned int *)(v2 + 1) | ((unint64_t)*(unsigned __int8 *)(v2 + 5) << 32);
  if ((v5 & 0x8000000000) != 0)
    goto LABEL_25;
  if ((a2 & 1) == 0)
  {
LABEL_9:
    if ((v5 & 0x10000) == 0)
    {
      OUTLINED_FUNCTION_10_10();
      OUTLINED_FUNCTION_9_13();
      OUTLINED_FUNCTION_5_14();
      OUTLINED_FUNCTION_55();
      OUTLINED_FUNCTION_7_13();
      OUTLINED_FUNCTION_2_19();
      OUTLINED_FUNCTION_0_24();
      OUTLINED_FUNCTION_3_17();
      if ((v4 & 1) != 0)
        v3 = OUTLINED_FUNCTION_1_15();
      OUTLINED_FUNCTION_72();
      v7 = *(_DWORD *)(v2 + 20);
      v6 = (v7 + v3);
      if (!__CFADD__(v7, v3))
      {
LABEL_13:
        *(_DWORD *)(v2 + 20) = v6;
        sub_1A56817C0(v6);
        return;
      }
      __break(1u);
      goto LABEL_24;
    }
    goto LABEL_19;
  }
  if ((*(_DWORD *)(v2 + 1) & 0x10000) == 0)
  {
    OUTLINED_FUNCTION_10_10();
    OUTLINED_FUNCTION_9_13();
    OUTLINED_FUNCTION_5_14();
    OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_7_13();
    OUTLINED_FUNCTION_2_19();
    OUTLINED_FUNCTION_0_24();
    OUTLINED_FUNCTION_3_17();
    if ((v4 & 1) != 0)
      v3 = OUTLINED_FUNCTION_1_15();
    OUTLINED_FUNCTION_72();
    LODWORD(v5) = *(_DWORD *)(v2 + 20);
    v6 = (v5 + v3);
    if (!__CFADD__((_DWORD)v5, v3))
      goto LABEL_13;
    __break(1u);
    goto LABEL_9;
  }
  OUTLINED_FUNCTION_10_10();
  OUTLINED_FUNCTION_9_13();
  OUTLINED_FUNCTION_5_14();
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_6_14();
  OUTLINED_FUNCTION_2_19();
  OUTLINED_FUNCTION_0_24();
  OUTLINED_FUNCTION_3_17();
  if ((v4 & 1) != 0)
    v3 = OUTLINED_FUNCTION_1_15();
  OUTLINED_FUNCTION_72();
  v8 = *(_DWORD *)(v2 + 20);
  v9 = __CFADD__(v8, v3);
  v10 = v8 + v3;
  if (!v9)
    goto LABEL_22;
  __break(1u);
LABEL_19:
  OUTLINED_FUNCTION_10_10();
  OUTLINED_FUNCTION_9_13();
  OUTLINED_FUNCTION_5_14();
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_6_14();
  OUTLINED_FUNCTION_2_19();
  OUTLINED_FUNCTION_0_24();
  OUTLINED_FUNCTION_3_17();
  if ((v4 & 1) != 0)
    v3 = OUTLINED_FUNCTION_1_15();
  OUTLINED_FUNCTION_72();
  v11 = *(_DWORD *)(v2 + 20);
  v9 = __CFADD__(v11, v3);
  v10 = v11 + v3;
  if (!v9)
  {
LABEL_22:
    *(_DWORD *)(v2 + 20) = v10;
    return;
  }
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
}

void OUTLINED_FUNCTION_0_24()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  Swift::UInt32 v3;

  sub_1A56814E0(v0, v2, v1, v3);
}

Swift::Int OUTLINED_FUNCTION_1_15()
{
  uint64_t v0;
  void *v1;
  Swift::Int v2;
  Swift::String v3;

  v3._countAndFlagsBits = v0;
  v3._object = v1;
  return ByteBuffer._setStringSlowpath(_:at:)(v3, v2);
}

uint64_t OUTLINED_FUNCTION_2_19()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t OUTLINED_FUNCTION_3_17()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_5_14()
{
  return sub_1A594B5F8();
}

uint64_t OUTLINED_FUNCTION_6_14()
{
  return sub_1A594B5F8();
}

uint64_t OUTLINED_FUNCTION_7_13()
{
  return sub_1A594B5F8();
}

uint64_t OUTLINED_FUNCTION_9_13()
{
  return sub_1A594CC9C();
}

uint64_t AppendMessage.options.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *v1;
  v3 = v1[1];
  v4 = *((_BYTE *)v1 + 16);
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_11_1();
  return swift_retain();
}

__n128 AppendMessage.options.setter(uint64_t a1)
{
  uint64_t v1;
  __int128 v3;
  __n128 result;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v1 = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 16) = v3;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 32) = result;
  return result;
}

double (*AppendMessage.options.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t AppendMessage.data.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t AppendMessage.data.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = result;
  *(_BYTE *)(v2 + 56) = a2;
  return result;
}

double (*AppendMessage.data.modify())(_QWORD)
{
  return nullsub_1;
}

__n128 AppendMessage.init(options:data:)@<Q0>(__n128 *a1@<X0>, unint64_t a2@<X1>, unsigned __int8 a3@<W2>, __n128 *a4@<X8>)
{
  unint64_t v4;
  unsigned __int8 v5;
  unint64_t v6;
  __n128 result;

  v4 = a1->n128_u64[1];
  v5 = a1[1].n128_u8[0];
  v6 = a1[1].n128_u64[1];
  a4->n128_u64[0] = a1->n128_u64[0];
  a4->n128_u64[1] = v4;
  a4[1].n128_u8[0] = v5 & 1;
  a4[1].n128_u64[1] = v6;
  result = a1[2];
  a4[2] = result;
  a4[3].n128_u64[0] = a2;
  a4[3].n128_u8[8] = a3;
  return result;
}

uint64_t AppendMessage.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  _BYTE v4[32];
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  _BYTE v8[8];
  uint64_t v9;

  *(_OWORD *)v4 = *((_OWORD *)v1 + 1);
  *(_OWORD *)&v4[16] = *((_OWORD *)v1 + 2);
  v9 = *v1;
  v6 = *(_OWORD *)&v4[8];
  sub_1A5689AD8((uint64_t)&v6, (uint64_t)v8);
  v7 = *((_QWORD *)&v6 + 1);
  v5 = *(_QWORD *)&v4[24];
  sub_1A54FCA28((uint64_t)&v9);
  sub_1A553E5B4((uint64_t)v8);
  sub_1A553E5B4((uint64_t)&v7);
  sub_1A553E5B4((uint64_t)&v5);
  AppendOptions.hash(into:)(a1);
  sub_1A54F81BC((uint64_t)&v9);
  sub_1A553E5DC((uint64_t)v8);
  sub_1A553E5DC((uint64_t)&v7);
  sub_1A553E5DC((uint64_t)&v5);
  sub_1A594CE88();
  return sub_1A594CE94();
}

uint64_t sub_1A5689AD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7986A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void static AppendMessage.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_BYTE *)(a1 + 16);
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1A5690B68();
  if ((v6 & 1) != 0)
  {
    if ((v3 & 1) != 0)
    {
      if ((v5 & 1) == 0)
        goto LABEL_9;
    }
    else if ((v5 & 1) != 0 || v2 != v4)
    {
      goto LABEL_9;
    }
    OUTLINED_FUNCTION_174_0();
    if ((v7 & 1) != 0)
      sub_1A5691860();
  }
LABEL_9:
  OUTLINED_FUNCTION_63_1();
}

uint64_t AppendMessage.hashValue.getter()
{
  _BYTE v1[72];

  sub_1A594CE64();
  AppendMessage.hash(into:)((uint64_t)v1);
  return sub_1A594CED0();
}

uint64_t sub_1A5689C3C()
{
  _BYTE v1[72];

  sub_1A594CE64();
  AppendMessage.hash(into:)((uint64_t)v1);
  return sub_1A594CED0();
}

uint64_t _s12NIOIMAPCore216SectionSpecifierV4PartV23__derived_struct_equalsySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a1[2];
  if (v2 != a2[2])
    return OUTLINED_FUNCTION_53();
  if (!v2 || a1 == a2)
    return OUTLINED_FUNCTION_56();
  if (a1[4] != a2[4])
    return OUTLINED_FUNCTION_53();
  v3 = a1 + 5;
  v4 = a2 + 5;
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v8 = *v3++;
    v7 = v8;
    v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

void sub_1A5689CDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;

  OUTLINED_FUNCTION_21_10();
  OUTLINED_FUNCTION_14_6();
  if (v3)
  {
    if (v0)
    {
      v4 = v2;
      v5 = v1;
      if (v1 != v2)
      {
        sub_1A56664F4(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(unsigned int *)(v1 + 56) | ((unint64_t)*(unsigned __int16 *)(v1 + 60) << 32));
        v6 = OUTLINED_FUNCTION_157_0();
        sub_1A56664F4(v6, v7, v8, v9);
        v10 = OUTLINED_FUNCTION_176_0();
        static SearchReturnData.__derived_enum_equals(_:_:)(v10, v11, v12, v13);
        v48 = v14;
        v15 = OUTLINED_FUNCTION_157_0();
        sub_1A5666598(v15, v16, v17, v18);
        v19 = OUTLINED_FUNCTION_176_0();
        sub_1A5666598(v19, v20, v21, v22);
        if ((v48 & 1) != 0)
        {
          v23 = v5 + 88;
          v24 = v4 + 88;
          do
          {
            if (!--v0)
              break;
            v47 = v24 + 32;
            v49 = v23 + 32;
            v25 = OUTLINED_FUNCTION_98_1();
            sub_1A56664F4(v25, v26, v27, v28);
            v29 = OUTLINED_FUNCTION_196_0();
            sub_1A56664F4(v29, v30, v31, v32);
            v33 = OUTLINED_FUNCTION_98_1();
            static SearchReturnData.__derived_enum_equals(_:_:)(v33, v34, v35, v36);
            v38 = v37;
            v39 = OUTLINED_FUNCTION_196_0();
            sub_1A5666598(v39, v40, v41, v42);
            v43 = OUTLINED_FUNCTION_98_1();
            sub_1A5666598(v43, v44, v45, v46);
            v24 = v47;
            v23 = v49;
          }
          while ((v38 & 1) != 0);
        }
      }
    }
  }
  OUTLINED_FUNCTION_3_18();
}

int32x2_t sub_1A5689E30(int32x2_t *a1, int32x2_t *a2)
{
  int32x2_t v2;
  int32x2_t result;
  int32x2_t *v5;
  uint64_t v6;
  char v7;

  v2 = a1[2];
  if (*(_QWORD *)&v2 != *(_QWORD *)&a2[2])
  {
LABEL_8:
    OUTLINED_FUNCTION_53();
    return result;
  }
  if (*(_QWORD *)&v2 && a1 != a2)
  {
    if (a2[4].i32[0] != a1[4].i32[0] || a2[4].i32[1] != a1[4].i32[1])
      goto LABEL_8;
    v5 = a1 + 5;
    v6 = *(_QWORD *)&v2 - 1;
    do
    {
      if (!v6)
        break;
      result = OUTLINED_FUNCTION_16_9(v5);
    }
    while ((v7 & 1) != 0);
  }
  return result;
}

void sub_1A5689E98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;

  OUTLINED_FUNCTION_15_12();
  if (v3)
  {
    if (v0)
    {
      OUTLINED_FUNCTION_48_2();
      if (!v3)
      {
        OUTLINED_FUNCTION_90_1();
        v3 = v3 && v1 == v2;
        if (v3 || (OUTLINED_FUNCTION_1_16(), OUTLINED_FUNCTION_88_1(), (v4 & 1) != 0))
        {
          if (v0 != 1)
          {
            do
            {
              OUTLINED_FUNCTION_50_2();
              v7 = v3 && v5 == v6;
              if (!v7 && (OUTLINED_FUNCTION_1_16() & 1) == 0)
                break;
              OUTLINED_FUNCTION_27_4();
            }
            while (!v3);
          }
        }
      }
    }
  }
  OUTLINED_FUNCTION_8_1();
}

void sub_1A5689F24()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;
  char v4;

  OUTLINED_FUNCTION_14_6();
  if (v4 && v0 && v2 != v3)
  {
    OUTLINED_FUNCTION_187_0();
    __asm { BR              X10 }
  }
  OUTLINED_FUNCTION_17_1();
}

uint64_t _s12NIOIMAPCore29MailboxesV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  unsigned __int8 *v12;
  unsigned __int8 *v13;
  uint64_t i;
  int v15;
  int v16;
  int v17;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return OUTLINED_FUNCTION_53();
  if (v2 && a1 != a2)
  {
    v3 = 0;
    v4 = a1 + 32;
    result = 1;
    while (1)
    {
      v6 = (uint64_t *)(v4 + 16 * v3);
      v7 = a2 + 32 + 16 * v3;
      if ((*((unsigned int *)v6 + 2) | ((unint64_t)*((unsigned int *)v6 + 2) << 32)) != (*(unsigned int *)(v7 + 8) | ((unint64_t)*(unsigned int *)(v7 + 8) << 32)))
        break;
      v8 = *v6;
      v9 = *(_QWORD *)v7;
      v10 = *(_QWORD *)(v8 + 16);
      if (v10 != *(_QWORD *)(v9 + 16))
        break;
      if (v10)
        v11 = v8 == v9;
      else
        v11 = 1;
      if (!v11)
      {
        if (*(unsigned __int8 *)(v8 + 32) != *(unsigned __int8 *)(v9 + 32))
          return OUTLINED_FUNCTION_53();
        v12 = (unsigned __int8 *)(v8 + 33);
        v13 = (unsigned __int8 *)(v9 + 33);
        for (i = v10 - 1; i; --i)
        {
          v16 = *v12++;
          v15 = v16;
          v17 = *v13++;
          if (v15 != v17)
            return OUTLINED_FUNCTION_53();
        }
      }
      if (++v3 == v2)
        return result;
    }
    return OUTLINED_FUNCTION_53();
  }
  return 1;
}

void sub_1A568A0E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  BOOL v17;
  char v18;
  uint64_t v19;
  int v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  char v32;
  char v34;
  int v35;
  uint64_t v36;
  int v38;
  int32x2_t *v39;
  int32x2_t *v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  OUTLINED_FUNCTION_142_0();
  if (!v17 || !v0 || v1 == v2)
  {
LABEL_126:
    OUTLINED_FUNCTION_63_1();
    return;
  }
  v3 = 0;
  v4 = v1 + 32;
  v5 = v2 + 32;
  v45 = v2 + 32;
  v46 = v1 + 32;
  while (1)
  {
    v6 = v4 + 32 * v3;
    v7 = *(_QWORD *)v6;
    v8 = *(_QWORD *)(v6 + 8);
    v9 = v5 + 32 * v3;
    v11 = *(_QWORD *)v9;
    v10 = *(_QWORD *)(v9 + 8);
    v12 = *(unsigned __int8 *)(v9 + 30);
    if (!*(_BYTE *)(v6 + 30))
    {
      if (*(_BYTE *)(v9 + 30))
        goto LABEL_126;
      if ((v8 & 1) != 0)
      {
        if ((v10 & 1) == 0)
          goto LABEL_126;
      }
      else if ((v10 & 1) != 0)
      {
        goto LABEL_126;
      }
      if (v11 != v7)
        goto LABEL_126;
      goto LABEL_54;
    }
    v13 = *(_QWORD *)(v6 + 16);
    v14 = *(unsigned int *)(v6 + 24) | ((unint64_t)*(unsigned __int16 *)(v6 + 28) << 32);
    v15 = *(_QWORD *)(v9 + 16);
    v16 = *(unsigned int *)(v9 + 24) | ((unint64_t)*(unsigned __int16 *)(v9 + 28) << 32);
    if (*(_BYTE *)(v6 + 30) != 1)
    {
      v19 = v13 | v8;
      if (v13 | v8 | v7 || (v14 & 0xFFFFFFFFFFFFLL) != 0)
      {
        if ((v14 & 0xFFFFFFFFFFFFLL) == 0 && v7 == 1 && v19 == 0)
        {
          if (v12 != 2)
            goto LABEL_126;
          v29 = (v16 & 0xFFFFFFFFFFFFLL) == 0 && v11 == 1;
          if (!v29 || (v15 | v10) != 0)
            goto LABEL_126;
        }
        else
        {
          if ((v14 & 0xFFFFFFFFFFFFLL) == 0 && v7 == 2 && v19 == 0)
          {
            if (v12 != 2 || (v16 & 0xFFFFFFFFFFFFLL) != 0 || v11 != 2)
              goto LABEL_126;
          }
          else if ((v14 & 0xFFFFFFFFFFFFLL) == 0 && v7 == 3 && v19 == 0)
          {
            if (v12 != 2 || (v16 & 0xFFFFFFFFFFFFLL) != 0 || v11 != 3)
              goto LABEL_126;
          }
          else if (v12 != 2 || (v16 & 0xFFFFFFFFFFFFLL) != 0 || v11 != 4)
          {
            goto LABEL_126;
          }
          if (v15 | v10)
            goto LABEL_126;
        }
      }
      else if (v12 != 2 || v15 | v10 | v11 || (v16 & 0xFFFFFFFFFFFFLL) != 0)
      {
        goto LABEL_126;
      }
      goto LABEL_54;
    }
    if (v12 != 1)
      goto LABEL_126;
    v17 = v7 == v11 && v8 == v10;
    if (!v17)
    {
      v18 = OUTLINED_FUNCTION_1_16();
      v5 = v45;
      v4 = v46;
      if ((v18 & 1) == 0)
        goto LABEL_126;
    }
    if (BYTE5(v14) == 255)
    {
      if (BYTE5(v16) != 255)
        goto LABEL_126;
      goto LABEL_54;
    }
    if (BYTE5(v16) == 255)
      goto LABEL_126;
    if ((v14 & 0x10000000000) != 0)
    {
      if ((v16 & 0x10000000000) == 0)
        goto LABEL_126;
      v10 = *(_QWORD *)(v13 + 16);
      if (v10 != *(_QWORD *)(v15 + 16))
        goto LABEL_126;
      if (v10 && v13 != v15)
      {
        if (*(_QWORD *)(v13 + 32) != *(_QWORD *)(v15 + 32) || *(_QWORD *)(v13 + 40) != *(_QWORD *)(v15 + 40))
        {
          v32 = OUTLINED_FUNCTION_1_16();
          v5 = v45;
          v4 = v46;
          if ((v32 & 1) == 0)
            goto LABEL_126;
        }
        if (v10 != 1)
        {
          v15 += 56;
          v11 = v13 + 56;
          v16 = 1;
          while (v16 < v10)
          {
            if (*(_QWORD *)(v11 - 8) != *(_QWORD *)(v15 - 8) || *(_QWORD *)v11 != *(_QWORD *)v15)
            {
              v34 = OUTLINED_FUNCTION_1_16();
              v5 = v45;
              v4 = v46;
              if ((v34 & 1) == 0)
                goto LABEL_126;
            }
            ++v16;
            v15 += 16;
            v11 += 16;
            if (v10 == v16)
              goto LABEL_54;
          }
          __break(1u);
          goto LABEL_128;
        }
      }
      goto LABEL_54;
    }
    if ((v16 & 0x10000000000) != 0)
      goto LABEL_126;
    OUTLINED_FUNCTION_136_0();
    if (!v17 & v28)
    {
      if (v27 <= 0xFE)
        goto LABEL_126;
      goto LABEL_54;
    }
    if (v27 > 0xFE)
      goto LABEL_126;
    if (!v26)
      break;
    if (v26 == 1)
    {
      OUTLINED_FUNCTION_23_8();
      if (v17)
      {
        v39 = (int32x2_t *)OUTLINED_FUNCTION_116_0();
        sub_1A5689E30(v39, v40);
        v5 = v45;
        v4 = v46;
        if ((v41 & 1) == 0)
          goto LABEL_126;
        goto LABEL_54;
      }
      v36 = v13;
      if (v35 != 2)
      {
        OUTLINED_FUNCTION_81_1(v13, v14);
        v43 = v13;
        goto LABEL_124;
      }
      goto LABEL_118;
    }
    OUTLINED_FUNCTION_23_8();
    if (v17)
    {
      v36 = v15;
LABEL_118:
      v42 = *(_QWORD *)(v36 + 16);
      sub_1A566676C(v15, v16);
      sub_1A566676C(v13, v14);
      OUTLINED_FUNCTION_55();
      v5 = v45;
      v4 = v46;
      if (v42)
        goto LABEL_126;
      goto LABEL_54;
    }
    if (v38 != 2)
      goto LABEL_123;
LABEL_54:
    if (++v3 == v0)
      goto LABEL_126;
  }
  if (!BYTE4(v16))
  {
    if ((_DWORD)v14 != (_DWORD)v16 || v13 != v15)
      goto LABEL_126;
    goto LABEL_54;
  }
  if (BYTE4(v16) != 1)
  {
LABEL_123:
    OUTLINED_FUNCTION_192_0();
    goto LABEL_126;
  }
  v43 = v15;
LABEL_124:
  v44 = *(_QWORD *)(v43 + 16);
  OUTLINED_FUNCTION_192_0();
  if (v44 != 1)
  {
    OUTLINED_FUNCTION_37();
    goto LABEL_126;
  }
LABEL_128:
  sub_1A566676C(v15, v16);
  sub_1A566676C(v13, v14);
  sub_1A566676C(v15, v16);
  sub_1A566676C(v13, v14);
  sub_1A5666CC4(v11, v10, v15, v16, 1);
  sub_1A5666CC4(v7, v8, v13, v14, 1);
  OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_37();
  __break(1u);
}

void sub_1A568A508()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  BOOL v8;
  unsigned int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  BOOL v16;
  BOOL v17;
  uint64_t v19;
  const void *v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  unsigned int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  int v32;
  uint64_t i;

  OUTLINED_FUNCTION_142_0();
  if (!v16 || !v0 || v1 == v2)
    goto LABEL_29;
  v4 = *(_DWORD *)(v1 + 40);
  v3 = *(_DWORD *)(v1 + 44);
  v5 = v3 - v4;
  if (v3 >= v4)
  {
    v7 = *(_DWORD *)(v2 + 40);
    v6 = *(_DWORD *)(v2 + 44);
    v8 = v6 >= v7;
    v9 = v6 - v7;
    if (!v8)
      goto LABEL_33;
    if (v5 == v9)
    {
      v10 = *(_QWORD *)(v1 + 32);
      v30 = *(_DWORD *)(v1 + 48);
      v31 = *(unsigned __int16 *)(v1 + 52);
      v28 = v2;
      v29 = v1;
      v11 = *(unsigned __int8 *)(v1 + 54);
      v12 = *(_QWORD *)(v2 + 32);
      v13 = *(_DWORD *)(v2 + 48);
      v32 = *(unsigned __int16 *)(v2 + 52);
      v14 = *(unsigned __int8 *)(v2 + 54);
      OUTLINED_FUNCTION_11_1();
      OUTLINED_FUNCTION_0_10();
      v15 = 0;
      for (i = v0 - 1; ; --i)
      {
        v16 = v30 == v13 && v31 == v32;
        v17 = v16 && v11 == v14;
        if (v17 && v10 == v12)
        {
          OUTLINED_FUNCTION_149_0();
        }
        else
        {
          OUTLINED_FUNCTION_176();
          OUTLINED_FUNCTION_155_0();
          v20 = (const void *)(v19 + v4);
          OUTLINED_FUNCTION_176();
          OUTLINED_FUNCTION_155_0();
          v22 = memcmp(v20, (const void *)(v21 + v7), v5);
          OUTLINED_FUNCTION_36();
          OUTLINED_FUNCTION_4_4();
          if (v22)
            break;
        }
        if (!i)
          break;
        v23 = v29 + v15;
        v4 = *(_DWORD *)(v29 + v15 + 64);
        v24 = *(_DWORD *)(v29 + v15 + 68);
        v5 = v24 - v4;
        if (v24 < v4)
        {
          __break(1u);
LABEL_31:
          __break(1u);
          goto LABEL_32;
        }
        v25 = v28 + v15;
        v7 = *(_DWORD *)(v28 + v15 + 64);
        v26 = *(_DWORD *)(v28 + v15 + 68);
        v8 = v26 >= v7;
        v27 = v26 - v7;
        if (!v8)
          goto LABEL_31;
        if (v5 != v27)
          break;
        v10 = *(_QWORD *)(v23 + 56);
        v30 = *(_DWORD *)(v23 + 72);
        v31 = *(unsigned __int16 *)(v23 + 76);
        v11 = *(unsigned __int8 *)(v23 + 78);
        v12 = *(_QWORD *)(v25 + 56);
        v13 = *(_DWORD *)(v25 + 72);
        v32 = *(unsigned __int16 *)(v25 + 76);
        v14 = *(unsigned __int8 *)(v25 + 78);
        OUTLINED_FUNCTION_11_1();
        OUTLINED_FUNCTION_0_10();
        v15 += 24;
      }
    }
LABEL_29:
    OUTLINED_FUNCTION_122();
    return;
  }
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
}

void sub_1A568A6D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  unsigned int v12;
  size_t v13;
  uint64_t v14;
  unsigned int v15;
  BOOL v16;
  int v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  BOOL v26;
  BOOL v27;
  const void *v28;
  const void *v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  size_t v35;
  int v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  BOOL v44;
  unint64_t v45;
  uint64_t v46;
  const void *v47;
  const void *v48;
  char v49;
  size_t __n;
  uint64_t v51;
  int v52;
  int v53;
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t __dst[12];
  uint64_t v66[13];

  OUTLINED_FUNCTION_16_4();
  OUTLINED_FUNCTION_148_0();
  if (!v25 || !v0 || v1 == v2)
  {
LABEL_52:
    OUTLINED_FUNCTION_1_3();
    return;
  }
  v3 = (uint64_t *)(v1 + 32);
  v4 = (uint64_t *)(v2 + 32);
  while (1)
  {
    v6 = *v3++;
    v5 = v6;
    v8 = *v4++;
    v7 = v8;
    if ((v5 & 0x8000000000000000) == 0)
    {
      memcpy(__dst, (const void *)(v5 + 16), 0x5FuLL);
      if (v7 < 0)
        goto LABEL_52;
      memcpy(v66, (const void *)(v7 + 16), 0x5FuLL);
      OUTLINED_FUNCTION_12_1();
      OUTLINED_FUNCTION_17_0();
      sub_1A566668C((uint64_t)__dst);
      sub_1A566668C((uint64_t)v66);
      static EmailAddress.__derived_struct_equals(_:_:)(__dst, v66);
      v10 = v9;
      sub_1A56666E0((uint64_t)v66);
      sub_1A56666E0((uint64_t)__dst);
      OUTLINED_FUNCTION_23();
      OUTLINED_FUNCTION_15_1();
      if ((v10 & 1) == 0)
        goto LABEL_52;
      goto LABEL_46;
    }
    if ((v7 & 0x8000000000000000) == 0)
      goto LABEL_52;
    v11 = *(unsigned int *)(v5 + 24);
    v12 = *(_DWORD *)((v5 & 0x7FFFFFFFFFFFFFFFLL) + 0x1C);
    v13 = v12 - v11;
    if (v12 < v11)
      break;
    v14 = *(unsigned int *)(v7 + 24);
    v15 = *(_DWORD *)((v7 & 0x7FFFFFFFFFFFFFFFLL) + 0x1C);
    v16 = v15 >= v14;
    v17 = v15 - v14;
    if (!v16)
      goto LABEL_54;
    if ((_DWORD)v13 != v17)
      goto LABEL_52;
    v59 = v4;
    v60 = v3;
    v18 = *(_QWORD *)(v5 + 16);
    v19 = *(_DWORD *)(v5 + 32);
    v20 = *(unsigned __int16 *)(v5 + 36);
    v21 = *(unsigned __int8 *)(v5 + 38);
    v58 = *(_QWORD *)(v5 + 48);
    v54 = *(unsigned __int16 *)(v5 + 60);
    v55 = *(unsigned __int8 *)(v5 + 62);
    v56 = *(unsigned int *)(v5 + 56);
    v62 = *(_QWORD *)(v5 + 64);
    v63 = *(_QWORD *)(v5 + 40);
    v22 = *(unsigned __int16 *)(v7 + 36);
    v23 = *(unsigned __int8 *)(v7 + 38);
    v24 = *(_QWORD *)(v7 + 40);
    v57 = *(_QWORD *)(v7 + 48);
    v53 = *(unsigned __int8 *)(v7 + 62);
    v52 = *(unsigned __int16 *)(v7 + 60);
    v51 = *(unsigned int *)(v7 + 56);
    v25 = v19 == *(_DWORD *)(v7 + 32) && (_DWORD)v20 == (_DWORD)v22;
    v26 = v25 && (_DWORD)v21 == (_DWORD)v23;
    v64 = *(_QWORD *)(v7 + 16);
    v27 = v26 && v18 == *(_QWORD *)(v7 + 16);
    v61 = *(_QWORD *)(v7 + 64);
    if (v27)
    {
      v30 = *(_QWORD *)(v7 + 40);
      OUTLINED_FUNCTION_155();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_retain();
      swift_retain();
      OUTLINED_FUNCTION_87();
      v31 = v63;
      OUTLINED_FUNCTION_1_2();
      v33 = v62;
      OUTLINED_FUNCTION_82();
    }
    else
    {
      __n = v13;
      OUTLINED_FUNCTION_176();
      v28 = (const void *)(*(_QWORD *)(v18 + 24) + (v21 | (v20 << 8)) + v11);
      OUTLINED_FUNCTION_176();
      v29 = (const void *)(*(_QWORD *)(v64 + 24) + (v23 | (v22 << 8)) + v14);
      v30 = v24;
      OUTLINED_FUNCTION_155();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_retain();
      swift_retain();
      OUTLINED_FUNCTION_1_2();
      v31 = v63;
      OUTLINED_FUNCTION_1_2();
      OUTLINED_FUNCTION_16_0();
      swift_retain();
      v32 = memcmp(v28, v29, __n);
      v33 = v62;
      if (v32)
      {
        OUTLINED_FUNCTION_180_0();
        swift_release();
        OUTLINED_FUNCTION_94();
        OUTLINED_FUNCTION_2_4();
        OUTLINED_FUNCTION_15_1();
        OUTLINED_FUNCTION_130_0();
        OUTLINED_FUNCTION_36();
        goto LABEL_51;
      }
    }
    v34 = v30;
    if (v31)
    {
      if (!v30)
        goto LABEL_48;
      v35 = (HIDWORD(v58) - v58);
      if (HIDWORD(v58) < v58)
        goto LABEL_55;
      OUTLINED_FUNCTION_138_0();
      if (!v16)
        goto LABEL_56;
      if ((_DWORD)v35 != v36)
        goto LABEL_49;
      v37 = v56 | ((unint64_t)(v54 | (v55 << 16)) << 32);
      v38 = v51 | ((unint64_t)(v52 | (v53 << 16)) << 32);
      v39 = BYTE6(v37);
      v40 = HIDWORD(v37) & 0xFFFFFF;
      v41 = HIDWORD(v38) & 0xFFFFFF;
      v42 = BYTE6(v38);
      if ((_DWORD)v56 != (_DWORD)v51
        || (WORD2(v37) == WORD2(v38) ? (v43 = BYTE6(v37) == BYTE6(v38)) : (v43 = 0),
            v43 ? (v44 = v31 == v34) : (v44 = 0),
            !v44))
      {
        OUTLINED_FUNCTION_176();
        v45 = *(_QWORD *)(v31 + 24) + (v39 & 0xFFFFFFFFFF0000FFLL | ((unint64_t)(unsigned __int16)v40 << 8));
        v46 = v33;
        v47 = (const void *)(v45 + v58);
        OUTLINED_FUNCTION_176();
        v48 = v47;
        v33 = v46;
        if (memcmp(v48, (const void *)(*(_QWORD *)(v34 + 24)+ (v42 & 0xFFFFFFFFFF0000FFLL | ((unint64_t)(unsigned __int16)v41 << 8))+ v57), v35))
        {
LABEL_49:
          OUTLINED_FUNCTION_94();
          OUTLINED_FUNCTION_2_4();
          OUTLINED_FUNCTION_15_1();
          OUTLINED_FUNCTION_130_0();
          OUTLINED_FUNCTION_48();
LABEL_50:
          OUTLINED_FUNCTION_23();
          OUTLINED_FUNCTION_180_0();
LABEL_51:
          OUTLINED_FUNCTION_23();
          goto LABEL_52;
        }
      }
    }
    else if (v30)
    {
LABEL_48:
      OUTLINED_FUNCTION_94();
      OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_130_0();
      OUTLINED_FUNCTION_23();
      OUTLINED_FUNCTION_2_4();
      goto LABEL_50;
    }
    v49 = sub_1A568A6D0(v33, v61);
    OUTLINED_FUNCTION_180_0();
    swift_release();
    OUTLINED_FUNCTION_94();
    OUTLINED_FUNCTION_2_4();
    OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_48();
    swift_release();
    v4 = v59;
    v3 = v60;
    if ((v49 & 1) == 0)
      goto LABEL_52;
LABEL_46:
    if (!--v0)
      goto LABEL_52;
  }
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
}

void sub_1A568AAF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  BOOL v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  __int16 v32;
  const void *v33;
  uint64_t v34;
  size_t v35;

  OUTLINED_FUNCTION_144_0();
  OUTLINED_FUNCTION_148_0();
  if (!v28 || !v0 || v1 == v2)
  {
LABEL_24:
    OUTLINED_FUNCTION_22_10();
    return;
  }
  v3 = (_BYTE *)(v2 + 55);
  v4 = (_BYTE *)(v1 + 55);
  while (1)
  {
    v5 = *(_QWORD *)(v4 - 23);
    v6 = *(_QWORD *)(v4 - 15);
    v7 = *(unsigned int *)(v4 - 7) | ((unint64_t)(*(unsigned __int16 *)(v4 - 3) | (*(v4 - 1) << 16)) << 32);
    v8 = *(_QWORD *)(v3 - 23);
    v9 = *(_QWORD *)(v3 - 15);
    v10 = *(unsigned int *)(v3 - 7) | ((unint64_t)(*(unsigned __int16 *)(v3 - 3) | (*(v3 - 1) << 16)) << 32);
    if ((*v4 & 1) != 0)
    {
      if ((*v3 & 1) == 0)
        goto LABEL_24;
      v11 = OUTLINED_FUNCTION_156_0();
      sub_1A56667D4(v11, v12, v13, v14);
      v15 = OUTLINED_FUNCTION_191_0();
      sub_1A56667D4(v15, v16, v17, v18);
      v19 = sub_1A568AAF8(v5, v8);
      v20 = OUTLINED_FUNCTION_156_0();
      sub_1A56667E0(v20, v21, v22, v23);
      v24 = OUTLINED_FUNCTION_191_0();
      sub_1A56667E0(v24, v25, v26, v27);
      if ((v19 & 1) == 0)
        goto LABEL_24;
      goto LABEL_23;
    }
    if ((*v3 & 1) != 0)
      goto LABEL_24;
    if (HIDWORD(v6) < v6)
      break;
    if (HIDWORD(v9) < v9)
      goto LABEL_26;
    if (HIDWORD(v6) - (_DWORD)v6 != HIDWORD(v9) - (_DWORD)v9)
      goto LABEL_24;
    if (*(_DWORD *)(v4 - 7) != *(_DWORD *)(v3 - 7)
      || (*(unsigned __int16 *)(v4 - 3) == *(unsigned __int16 *)(v3 - 3) ? (v28 = BYTE6(v7) == BYTE6(v10)) : (v28 = 0),
          v28 ? (v29 = v5 == v8) : (v29 = 0),
          !v29))
    {
      v34 = HIDWORD(v10) & 0xFFFFFF;
      v35 = (HIDWORD(v6) - v6);
      OUTLINED_FUNCTION_4_2();
      v31 = v30;
      LOWORD(v7) = v32;
      swift_beginAccess();
      v33 = (const void *)(*(_QWORD *)(v5 + 24)
                         + (BYTE6(v7) | ((unint64_t)(unsigned __int16)v7 << 8))
                         + v6);
      OUTLINED_FUNCTION_176();
      if (memcmp(v33, (const void *)(*(_QWORD *)(v8 + 24)+ (v31 & 0xFFFFFFFFFF0000FFLL | ((unint64_t)(unsigned __int16)v34 << 8))+ v9), v35))
      {
        goto LABEL_24;
      }
    }
LABEL_23:
    v3 += 24;
    v4 += 24;
    if (!--v0)
      goto LABEL_24;
  }
  __break(1u);
LABEL_26:
  __break(1u);
}

void sub_1A568AC80()
{
  sub_1A5690B68();
}

void sub_1A568AC90()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  BOOL v9;
  char v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;

  OUTLINED_FUNCTION_16_4();
  OUTLINED_FUNCTION_15_12();
  if (v9)
  {
    if (v0)
    {
      v3 = v2;
      v4 = v1;
      if (v1 != v2)
      {
        v5 = *(_QWORD *)(v1 + 48);
        v6 = *(_BYTE *)(v1 + 56);
        v7 = *(_QWORD *)(v2 + 48);
        v8 = *(_BYTE *)(v2 + 56);
        v9 = *(_QWORD *)(v1 + 32) == *(_QWORD *)(v2 + 32) && *(_QWORD *)(v1 + 40) == *(_QWORD *)(v2 + 40);
        if (v9 || (OUTLINED_FUNCTION_1_16(), OUTLINED_FUNCTION_88_1(), (v10 & 1) != 0))
        {
          v11 = 0;
          v12 = 1;
          if ((v6 & 1) == 0)
            goto LABEL_13;
LABEL_11:
          if ((v8 & 1) != 0)
          {
            while (v0 != v12)
            {
              if (v12 >= v0)
              {
                __break(1u);
                return;
              }
              v5 = *(_QWORD *)(v4 + v11 + 80);
              v13 = *(_BYTE *)(v4 + v11 + 88);
              v7 = *(_QWORD *)(v3 + v11 + 80);
              v8 = *(_BYTE *)(v3 + v11 + 88);
              v14 = *(_QWORD *)(v4 + v11 + 64) == *(_QWORD *)(v3 + v11 + 64)
                 && *(_QWORD *)(v4 + v11 + 72) == *(_QWORD *)(v3 + v11 + 72);
              if (!v14 && (OUTLINED_FUNCTION_1_16() & 1) == 0)
                break;
              v11 += 32;
              ++v12;
              if ((v13 & 1) != 0)
                goto LABEL_11;
LABEL_13:
              if (v8 & 1 | (((v7 ^ v5) & 0xFFFFFFFFFFFFC000) != 0))
                break;
            }
          }
        }
      }
    }
  }
  OUTLINED_FUNCTION_1_3();
}

void sub_1A568AD84()
{
  _QWORD *v0;
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  uint64_t *v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;

  OUTLINED_FUNCTION_15_12();
  if (!v7)
    goto LABEL_21;
  if (!v2)
    goto LABEL_21;
  OUTLINED_FUNCTION_48_2();
  if (v7)
    goto LABEL_21;
  v4 = v0[6];
  v3 = v0[7];
  v6 = v1[6];
  v5 = v1[7];
  v7 = v0[4] == v1[4] && v0[5] == v1[5];
  if (v7)
  {
    if (v4 != v6 || v3 != v5)
      goto LABEL_21;
  }
  else
  {
    OUTLINED_FUNCTION_1_16();
    OUTLINED_FUNCTION_88_1();
    if ((v8 & 1) == 0)
      goto LABEL_21;
    if (v4 != v6 || v3 != v5)
      goto LABEL_21;
  }
  if (v2 == 1)
  {
LABEL_21:
    OUTLINED_FUNCTION_15_3();
    return;
  }
  v11 = v1 + 11;
  v12 = v0 + 11;
  v13 = 1;
  while (v13 < v2)
  {
    v15 = *(v12 - 1);
    v14 = *v12;
    v17 = *(v11 - 1);
    v16 = *v11;
    if (*(v12 - 3) == *(v11 - 3) && *(v12 - 2) == *(v11 - 2))
    {
      if (v15 != v17 || v14 != v16)
        goto LABEL_21;
    }
    else
    {
      OUTLINED_FUNCTION_1_16();
      OUTLINED_FUNCTION_88_1();
      if ((v19 & 1) == 0)
        goto LABEL_21;
      if (v15 != v17 || v14 != v16)
        goto LABEL_21;
    }
    ++v13;
    v11 += 4;
    v12 += 4;
    if (v2 == v13)
      goto LABEL_21;
  }
  __break(1u);
}

void sub_1A568AE88(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  unint64_t v5;
  unint64_t v6;
  char v7;
  char v8;
  unint64_t *v9;
  unint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  char v16;

  v2 = a1[2];
  if (v2 == a2[2])
  {
    if (v2)
    {
      if (a1 != a2)
      {
        v5 = a1[4];
        v6 = a2[4];
        sub_1A568079C(v5);
        sub_1A568079C(v6);
        static SearchKey.__derived_enum_equals(_:_:)(v5);
        v8 = v7;
        sub_1A567FE68(v6);
        sub_1A567FE68(v5);
        if ((v8 & 1) != 0)
        {
          v9 = a1 + 5;
          v10 = a2 + 5;
          v11 = v2 - 1;
          do
          {
            if (!v11)
              break;
            v13 = *v9++;
            v12 = v13;
            v14 = *v10++;
            sub_1A568079C(v12);
            sub_1A568079C(v14);
            static SearchKey.__derived_enum_equals(_:_:)(v12);
            v16 = v15;
            sub_1A567FE68(v14);
            sub_1A567FE68(v12);
            --v11;
          }
          while ((v16 & 1) != 0);
        }
      }
    }
  }
  OUTLINED_FUNCTION_15_3();
}

void sub_1A568AF74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  BOOL v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  int v17;
  int v18;
  int v19;
  BOOL v20;
  BOOL v21;
  unsigned int v23;
  uint64_t v24;
  const void *v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int v36;

  OUTLINED_FUNCTION_70_1();
  v2 = *(_QWORD *)(v0 + 16);
  if (v2 != *(_QWORD *)(v1 + 16))
    goto LABEL_24;
  if (!v2)
    goto LABEL_24;
  v3 = v0;
  if (v0 == v1)
    goto LABEL_24;
  v5 = *(_DWORD *)(v0 + 40);
  v4 = *(_DWORD *)(v0 + 44);
  v6 = v4 - v5;
  if (v4 >= v5)
  {
    v8 = *(_DWORD *)(v1 + 40);
    v7 = *(_DWORD *)(v1 + 44);
    v9 = v7 >= v8;
    v10 = v7 - v8;
    if (!v9)
      goto LABEL_28;
    if (v6 == v10)
    {
      v11 = 0;
      v12 = *(_QWORD *)(v0 + 32);
      v13 = *(_DWORD *)(v0 + 48);
      v14 = *(unsigned __int16 *)(v0 + 52);
      v15 = *(unsigned __int8 *)(v0 + 54);
      v16 = *(_QWORD *)(v1 + 32);
      v17 = *(_DWORD *)(v1 + 48);
      v18 = *(unsigned __int16 *)(v1 + 52);
      v19 = *(unsigned __int8 *)(v1 + 54);
      v34 = v0;
      v35 = v1;
      do
      {
        v20 = v13 == v17 && v14 == v18;
        v21 = v20 && v15 == v19;
        if (!v21 || v12 != v16)
        {
          OUTLINED_FUNCTION_4_2();
          v36 = v23;
          swift_beginAccess();
          OUTLINED_FUNCTION_155_0();
          v25 = (const void *)(v24 + v5);
          OUTLINED_FUNCTION_176();
          OUTLINED_FUNCTION_155_0();
          v27 = memcmp(v25, (const void *)(v26 + v36), v6);
          v3 = v34;
          v1 = v35;
          if (v27)
            break;
        }
        if (!--v2)
          break;
        v28 = v3 + v11;
        v5 = *(_DWORD *)(v3 + v11 + 64);
        v29 = *(_DWORD *)(v3 + v11 + 68);
        v6 = v29 - v5;
        if (v29 < v5)
        {
          __break(1u);
LABEL_26:
          __break(1u);
          goto LABEL_27;
        }
        v30 = v1 + v11;
        v32 = *(_DWORD *)(v1 + v11 + 64);
        v31 = *(_DWORD *)(v1 + v11 + 68);
        v33 = v31 - v32;
        if (v31 < v32)
          goto LABEL_26;
        v11 += 24;
        v12 = *(_QWORD *)(v28 + 56);
        v13 = *(_DWORD *)(v28 + 72);
        v14 = *(unsigned __int16 *)(v28 + 76);
        v15 = *(unsigned __int8 *)(v28 + 78);
        v16 = *(_QWORD *)(v30 + 56);
        v17 = *(_DWORD *)(v30 + 72);
        v18 = *(unsigned __int16 *)(v30 + 76);
        v19 = *(unsigned __int8 *)(v30 + 78);
      }
      while (v6 == v33);
    }
LABEL_24:
    OUTLINED_FUNCTION_8_9();
    return;
  }
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
}

#error "1A568B3C4: call analysis failed (funcsize=221)"

#error "1A568B604: call analysis failed (funcsize=267)"

uint64_t sub_1A568B8B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int32x2_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  char v47;
  BOOL v48;
  uint64_t v50;
  int32x2_t *v51;
  BOOL v52;
  char v54;
  int32x2_t *v55;
  int32x2_t *v56;
  unint64_t v57;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int32x2_t *v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int32x2_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  int v106;
  int32x2_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  int v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char v133;
  unint64_t v134;
  unint64_t v135;
  char v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char v160;
  int32x2_t v161;
  uint64_t v162;
  uint64_t result;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  unint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  unint64_t v185;
  unint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  unint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  unint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  unint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  unint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  unint64_t v237;
  uint64_t v238;
  unint64_t v239;
  unint64_t v240;
  uint64_t v241;
  int32x2_t *v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  unint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  unint64_t v269;
  uint64_t v270;
  unint64_t v271;
  uint64_t v272;
  uint64_t v273;
  unint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  int32x2_t *v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  int32x2_t *v282;
  uint64_t v283;
  uint64_t v284;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v3 = 0;
  v4 = a1 + 32;
  v272 = a2 + 32;
  v267 = a1 + 32;
  v270 = *(_QWORD *)(a1 + 16);
  while (1)
  {
    v5 = v4 + (v3 << 6);
    v6 = *(_QWORD *)(v5 + 8);
    v284 = *(_QWORD *)v5;
    v7 = *(_QWORD *)(v5 + 24);
    v278 = *(int32x2_t **)(v5 + 16);
    v282 = *(int32x2_t **)(v5 + 32);
    v280 = *(_QWORD *)(v5 + 48);
    v274 = *(unsigned int *)(v5 + 56) | ((unint64_t)*(unsigned __int8 *)(v5 + 60) << 32);
    v276 = *(_QWORD *)(v5 + 40);
    v8 = v272 + (v3 << 6);
    v9 = *(_QWORD *)v8;
    v10 = *(_QWORD *)(v8 + 8);
    v11 = *(unsigned int *)(v8 + 56) | ((unint64_t)*(unsigned __int8 *)(v8 + 60) << 32);
    v12 = *(_QWORD *)(v8 + 24);
    v283 = *(_QWORD *)(v8 + 16);
    v13 = v12 >> 62;
    v14 = BYTE4(v7);
    v15 = *(_QWORD *)(v8 + 32);
    v16 = *(_QWORD *)(v8 + 40);
    v17 = BYTE4(v12);
    v18 = HIDWORD(v12);
    v279 = *(_QWORD *)(v8 + 48);
    if (v7 >> 62)
    {
      if (v7 >> 62 == 1)
      {
        if (v13 != 1 || (_DWORD)v284 != (_DWORD)v9)
          return 0;
        if ((v10 | v6) < 0)
        {
          __break(1u);
          goto LABEL_184;
        }
        if (v10 != v6)
          return 0;
        v268 = v6;
        v269 = v7;
        v271 = *(_QWORD *)(v8 + 24);
        v266 = v3;
        if (BYTE4(v7) == 255)
        {
          if (BYTE4(v12) != 255)
            return 0;
          v19 = OUTLINED_FUNCTION_79_1();
          v21 = v20;
          v22 = v12;
          v24 = (int32x2_t *)v23;
          v26 = v25;
          v12 = v279;
          OUTLINED_FUNCTION_65_1(v19, v27, v28, v22, v23, v25, v279);
          v29 = OUTLINED_FUNCTION_32_5();
          v31 = v276;
          v30 = (uint64_t)v278;
          v32 = v274;
          OUTLINED_FUNCTION_160_0(v29, v33, (uint64_t)v278, v21, (uint64_t)v282, v276, v280);
LABEL_14:
          v34 = v26;
          goto LABEL_83;
        }
        if (BYTE4(v12) == 255)
          return 0;
        if (BYTE4(v7))
        {
          if (BYTE4(v7) == 1)
          {
            v50 = (uint64_t)v278;
            if (BYTE4(v12) == 1)
            {
              v264 = *(_QWORD *)(v8 + 40);
              v17 = *(_QWORD *)(v8 + 32);
              sub_1A5689E30(v278, (int32x2_t *)v283);
              LODWORD(v260) = v78;
              v4 = v9;
              v79 = OUTLINED_FUNCTION_112_0();
              v24 = (int32x2_t *)v17;
              OUTLINED_FUNCTION_65_1(v79, v80, v283, v12, v17, v264, v279);
              v81 = OUTLINED_FUNCTION_32_5();
              v32 = v274;
              v31 = v276;
              OUTLINED_FUNCTION_160_0(v81, v82, (uint64_t)v278, v269, (uint64_t)v282, v276, v280);
              v34 = v264;
              v12 = v279;
              v30 = (uint64_t)v278;
              if ((v260 & 1) == 0)
                goto LABEL_149;
              goto LABEL_83;
            }
            v17 = *(unsigned int *)(v8 + 56) | ((unint64_t)*(unsigned __int8 *)(v8 + 60) << 32);
            v51 = v278;
            v32 = v274;
            v12 = v280;
            if (v18 != 2)
            {
              v11 = (unint64_t)v282;
              v200 = *(_QWORD *)v8;
              v201 = *(_QWORD *)(v8 + 40);
              v202 = *(_QWORD *)(v8 + 32);
              sub_1A5503BA0((uint64_t)v278, v7);
              OUTLINED_FUNCTION_13_0();
              v15 = v202;
              v16 = v201;
              v9 = v200;
              goto LABEL_162;
            }
          }
          else
          {
            if (BYTE4(v12) != 1)
            {
              v32 = v274;
              if (BYTE4(v12) != 2)
                goto LABEL_152;
              v68 = OUTLINED_FUNCTION_79_1();
              v24 = (int32x2_t *)v69;
              v26 = v70;
              v72 = v71;
              OUTLINED_FUNCTION_65_1(v68, v73, v74, v12, v69, v70, v71);
              v75 = OUTLINED_FUNCTION_32_5();
              v31 = v276;
              v12 = v72;
              v30 = (uint64_t)v278;
              OUTLINED_FUNCTION_160_0(v75, v76, (uint64_t)v278, v269, (uint64_t)v282, v276, v280);
              OUTLINED_FUNCTION_132_0((uint64_t)v278);
              goto LABEL_14;
            }
            v17 = *(unsigned int *)(v8 + 56) | ((unint64_t)*(unsigned __int8 *)(v8 + 60) << 32);
            v51 = *(int32x2_t **)(v8 + 16);
            v32 = v274;
            v12 = v280;
            v50 = (uint64_t)v278;
          }
          v259 = (uint64_t)v51;
          v260 = (uint64_t)v51[2];
          v30 = v50;
          v4 = *(_QWORD *)v8;
          v83 = OUTLINED_FUNCTION_112_0();
          v24 = (int32x2_t *)v84;
          v264 = v85;
          OUTLINED_FUNCTION_188_0(v83, v86, v283, v271, v84, v85, v87);
          v88 = OUTLINED_FUNCTION_32_5();
          sub_1A5666A3C(v88, v89, v50, v269, (uint64_t)v282, v276, v12, v32);
          sub_1A5503BA0(v283, v271);
          v31 = v276;
          v12 = v279;
          sub_1A5503BA0(v50, v269);
          swift_bridgeObjectRelease();
          v34 = v264;
          if (v260)
          {
LABEL_149:
            v177 = OUTLINED_FUNCTION_86_1();
            sub_1A56669A0(v177, v178, v179, v180, v181, v182, v183, v17);
            v170 = OUTLINED_FUNCTION_78_1();
            goto LABEL_178;
          }
LABEL_83:
          v90 = v34 & 0xFF00000000;
          if ((v31 & 0xFF00000000) == 0xFE00000000)
          {
            if (v90 != 0xFE00000000)
              goto LABEL_148;
            goto LABEL_139;
          }
          v11 = v17;
          if (v90 != 0xFE00000000)
          {
            v261 = v4;
            if (BYTE4(v31) == 255)
            {
              v9 = v34;
              v91 = (int32x2_t *)v280;
              if (BYTE4(v34) != 255)
              {
                OUTLINED_FUNCTION_4_17();
                OUTLINED_FUNCTION_4_17();
                OUTLINED_FUNCTION_13_9((uint64_t)v24, v9, v12, v17);
                v184 = (uint64_t)v24;
                v91 = (int32x2_t *)v280;
LABEL_175:
                v199 = v9;
                goto LABEL_176;
              }
              goto LABEL_89;
            }
            if (BYTE4(v34) == 255)
            {
              v91 = (int32x2_t *)v280;
              OUTLINED_FUNCTION_38_4();
              v186 = v185;
              sub_1A5691D84(v187, v188, v189, v190, (void (*)(void))sub_1A5503BA0);
              OUTLINED_FUNCTION_4_17();
              v191 = (uint64_t)v24;
              v9 = v186;
              v192 = v186;
            }
            else
            {
              if (BYTE4(v31))
              {
                if (BYTE4(v31) == 1)
                {
                  v9 = v34;
                  OUTLINED_FUNCTION_23_8();
                  if (v35)
                  {
                    sub_1A5689E30(v282, v24);
                    LODWORD(v279) = v120;
                    v91 = (int32x2_t *)v280;
                    OUTLINED_FUNCTION_38_4();
                    OUTLINED_FUNCTION_13_9(v121, v122, v123, v124);
                    OUTLINED_FUNCTION_4_17();
                    v104 = OUTLINED_FUNCTION_13_9((uint64_t)v24, v9, v12, v17);
                    if ((v279 & 1) == 0)
                      goto LABEL_174;
                    goto LABEL_116;
                  }
                  v107 = v282;
                  v108 = (uint64_t)v24;
                  v91 = (int32x2_t *)v280;
                  if (v106 != 2)
                  {
                    v10 = (uint64_t)v282;
                    OUTLINED_FUNCTION_13_0();
LABEL_171:
                    v279 = *(_QWORD *)(v10 + 16);
                    v225 = OUTLINED_FUNCTION_12_11();
                    OUTLINED_FUNCTION_143_0(v225, v226, v227, v228);
                    sub_1A5691D84(v30, v31, (uint64_t)v91, v32, (void (*)(void))sub_1A5503BA0);
                    v24 = (int32x2_t *)v108;
                    OUTLINED_FUNCTION_131_0();
                    sub_1A5691D84(v229, v230, v231, v232, (void (*)(void))sub_1A5503BA0);
                    if (v279 == 1)
                      goto LABEL_186;
                    OUTLINED_FUNCTION_19();
                    goto LABEL_177;
                  }
                  goto LABEL_115;
                }
                v9 = v34;
                if (BYTE4(v34) == 1)
                {
                  v107 = v24;
                  v108 = (uint64_t)v24;
                  v91 = (int32x2_t *)v280;
LABEL_115:
                  v276 = (uint64_t)v107;
                  v279 = (uint64_t)v107[2];
                  v125 = OUTLINED_FUNCTION_12_11();
                  OUTLINED_FUNCTION_143_0(v125, v126, v127, v128);
                  OUTLINED_FUNCTION_143_0(v30, v31, (uint64_t)v91, v32);
                  OUTLINED_FUNCTION_131_0();
                  OUTLINED_FUNCTION_143_0(v129, v130, v131, v132);
                  v24 = (int32x2_t *)v108;
                  sub_1A5503BA0(v108, v9);
                  OUTLINED_FUNCTION_189_0();
                  v104 = swift_bridgeObjectRelease();
                  if (v279)
                    goto LABEL_174;
                  goto LABEL_116;
                }
                v91 = (int32x2_t *)v280;
                if (BYTE4(v34) == 2)
                {
LABEL_89:
                  v92 = OUTLINED_FUNCTION_12_11();
                  OUTLINED_FUNCTION_195_0(v92, v93, v94, v95);
                  v96 = OUTLINED_FUNCTION_28_5();
                  OUTLINED_FUNCTION_195_0(v96, v97, v98, v99);
                  OUTLINED_FUNCTION_131_0();
                  v104 = OUTLINED_FUNCTION_195_0(v100, v101, v102, v103);
                  goto LABEL_116;
                }
                v221 = OUTLINED_FUNCTION_12_11();
              }
              else
              {
                if (!BYTE4(v34))
                {
                  v9 = v34;
                  if ((_DWORD)v31 != (_DWORD)v34)
                  {
                    v216 = v34;
                    v217 = OUTLINED_FUNCTION_112_0();
                    v91 = (int32x2_t *)v280;
                    OUTLINED_FUNCTION_6_15(v217, v218);
                    v219 = OUTLINED_FUNCTION_112_0();
                    OUTLINED_FUNCTION_6_15(v219, v220);
                    OUTLINED_FUNCTION_13_9((uint64_t)v24, v216, v12, v17);
                    v184 = (uint64_t)v24;
                    v9 = v216;
                    v199 = v216;
LABEL_176:
                    sub_1A5503B8C(v184, v199);
                    goto LABEL_177;
                  }
                  v91 = (int32x2_t *)v280;
                  OUTLINED_FUNCTION_38_4();
                  sub_1A5691D84(v109, v110, v111, v112, (void (*)(void))sub_1A5503BA0);
                  OUTLINED_FUNCTION_38_4();
                  sub_1A5691D84(v113, v114, v115, v116, (void (*)(void))sub_1A5503BA0);
                  v117 = OUTLINED_FUNCTION_116_0();
                  v104 = sub_1A5691D84(v117, v118, v12, v17, (void (*)(void))sub_1A5503BA0);
                  if (v282 != v24)
                    goto LABEL_174;
LABEL_116:
                  v133 = BYTE4(v11);
                  if (BYTE4(v32) == 255)
                  {
                    v134 = v9;
                    v9 = (unint64_t)v24;
                    if (BYTE4(v11) != 255)
                      goto LABEL_161;
LABEL_118:
                    OUTLINED_FUNCTION_42_2();
LABEL_138:
                    OUTLINED_FUNCTION_166_0();
                    sub_1A5503B8C((uint64_t)v282, v31);
                    sub_1A5503B8C((uint64_t)v91, v32);
                    v142 = OUTLINED_FUNCTION_28_5();
                    sub_1A5691D84(v142, v143, v144, v145, (void (*)(void))sub_1A5503B8C);
LABEL_139:
                    v146 = OUTLINED_FUNCTION_86_1();
                    OUTLINED_FUNCTION_165_0(v146, v147, v148, v149, v150, v151, v152);
                    v153 = OUTLINED_FUNCTION_78_1();
                    sub_1A56669A0(v153, v154, v155, v156, v157, v158, v159, v32);
                    v2 = v270;
                    v3 = v266;
                    v4 = v267;
                    goto LABEL_140;
                  }
                  v134 = v9;
                  v9 = (unint64_t)v24;
                  if (BYTE4(v11) == 255)
                    goto LABEL_161;
                  if (BYTE4(v32))
                  {
                    if (BYTE4(v32) == 1)
                    {
                      if (BYTE4(v11) == 1)
                      {
                        sub_1A5689E30(v91, (int32x2_t *)v12);
                        v138 = v137;
                        OUTLINED_FUNCTION_42_2();
                        if ((v138 & 1) == 0)
                          goto LABEL_177;
                        goto LABEL_138;
                      }
                      v9 = v134;
                      v135 = (unint64_t)v91;
                      if (BYTE4(v11) != 2)
                      {
                        v104 = OUTLINED_FUNCTION_82();
                        v133 = 0;
                        v10 = (uint64_t)v91;
LABEL_173:
                        v233 = *(_QWORD *)(v10 + 16);
                        OUTLINED_FUNCTION_167_0(v104, v105, v133);
                        OUTLINED_FUNCTION_19();
                        if (v233 == 1)
                          goto LABEL_187;
LABEL_174:
                        v184 = (uint64_t)v24;
                        goto LABEL_175;
                      }
                    }
                    else
                    {
                      if (BYTE4(v11) != 1)
                      {
                        if (BYTE4(v11) != 2)
                          goto LABEL_160;
                        goto LABEL_118;
                      }
                      v9 = v134;
                      v135 = v12;
                    }
                    v139 = *(_QWORD *)(v135 + 16);
                    OUTLINED_FUNCTION_145_0(v12);
                    sub_1A5503BA0((uint64_t)v91, v32);
                    OUTLINED_FUNCTION_19();
                    v140 = OUTLINED_FUNCTION_116_0();
                    sub_1A5503B8C(v140, v141);
                    if (v139)
                      goto LABEL_177;
                    goto LABEL_138;
                  }
                  if (!BYTE4(v11))
                  {
                    OUTLINED_FUNCTION_42_2();
                    if ((_DWORD)v32 != (_DWORD)v11 || v91 != (int32x2_t *)v12)
                      goto LABEL_177;
                    goto LABEL_138;
                  }
                  if (BYTE4(v11) != 1)
                  {
LABEL_160:
                    OUTLINED_FUNCTION_167_0(v104, v105, SBYTE4(v11));
LABEL_161:
                    v184 = v9;
                    v9 = v134;
                    v199 = v134;
                    goto LABEL_176;
                  }
                  v9 = v134;
                  v10 = v12;
                  goto LABEL_173;
                }
                v9 = v34;
                if (BYTE4(v34) == 1)
                {
                  v10 = (uint64_t)v24;
                  v108 = (uint64_t)v24;
                  v91 = (int32x2_t *)v280;
                  goto LABEL_171;
                }
                v91 = (int32x2_t *)v280;
                OUTLINED_FUNCTION_38_4();
              }
              OUTLINED_FUNCTION_13_9(v221, v222, v223, v224);
              OUTLINED_FUNCTION_4_17();
              v191 = OUTLINED_FUNCTION_116_0();
            }
            OUTLINED_FUNCTION_13_9(v191, v192, v12, v11);
LABEL_177:
            OUTLINED_FUNCTION_166_0();
            sub_1A5503B8C((uint64_t)v282, v31);
            sub_1A5503B8C((uint64_t)v91, v32);
            OUTLINED_FUNCTION_4_17();
            OUTLINED_FUNCTION_126_0();
            OUTLINED_FUNCTION_165_0(v234, v235, v236, v237, v238, v9, v12);
            v170 = v284;
            v171 = v268;
            v172 = (uint64_t)v278;
            v173 = v269;
            v174 = (uint64_t)v282;
            v175 = v31;
            v176 = (uint64_t)v91;
            goto LABEL_178;
          }
LABEL_148:
          v164 = v34;
          sub_1A5691D84((uint64_t)v282, v31, v280, v32, (void (*)(void))sub_1A5503BA0);
          OUTLINED_FUNCTION_99_1();
          sub_1A5691D84((uint64_t)v282, v31, v280, v32, (void (*)(void))sub_1A5503B8C);
          OUTLINED_FUNCTION_99_1();
          OUTLINED_FUNCTION_126_0();
          OUTLINED_FUNCTION_165_0(v165, v166, v167, v168, v169, v164, v12);
          v170 = v284;
          v171 = v268;
          v172 = (uint64_t)v278;
          v173 = v269;
          v174 = (uint64_t)v282;
          v175 = v31;
          v176 = v280;
LABEL_178:
          v198 = v32;
          goto LABEL_179;
        }
        if (!BYTE4(v12))
        {
          v60 = OUTLINED_FUNCTION_79_1();
          v24 = (int32x2_t *)v61;
          v63 = v62;
          OUTLINED_FUNCTION_65_1(v60, v64, v65, v12, v61, v62, v279);
          v66 = OUTLINED_FUNCTION_32_5();
          sub_1A5666A3C(v66, v67, (uint64_t)v278, v269, (uint64_t)v282, v276, v280, v274);
          OUTLINED_FUNCTION_132_0((uint64_t)v278);
          if ((_DWORD)v269 == (_DWORD)v12)
          {
            v31 = v276;
            v34 = v63;
            v32 = v274;
            v12 = v279;
            v30 = (uint64_t)v278;
            if (v278 != (int32x2_t *)v283)
              goto LABEL_149;
            goto LABEL_83;
          }
          OUTLINED_FUNCTION_126_0();
          OUTLINED_FUNCTION_124_0(v193, v194, v195, v196, v197);
          v170 = OUTLINED_FUNCTION_32_5();
          v172 = (uint64_t)v278;
          v173 = v269;
          v174 = (uint64_t)v282;
          v175 = v276;
          v176 = v280;
          v198 = v274;
LABEL_179:
          sub_1A56669A0(v170, v171, v172, v173, v174, v175, v176, v198);
          return 0;
        }
        if (BYTE4(v12) != 1)
        {
LABEL_152:
          sub_1A5503BA0(v283, v12);
          sub_1A5503B8C((uint64_t)v278, v269);
          return 0;
        }
        v11 = (unint64_t)v282;
        v50 = *(_QWORD *)(v8 + 16);
LABEL_162:
        v272 = v50;
        if (*(_QWORD *)(v50 + 16) == 1)
          goto LABEL_185;
        v203 = OUTLINED_FUNCTION_112_0();
        v204 = v271;
        v206 = v205;
        OUTLINED_FUNCTION_188_0(v203, v207, v283, v271, v205, v208, v279);
        v209 = OUTLINED_FUNCTION_32_5();
        v210 = (uint64_t)v278;
        v262 = v9;
        v211 = v269;
        OUTLINED_FUNCTION_120_0(v209, v212, (uint64_t)v278, v269, v213, v276, v214, v215, v259, v260, v262, v264, v266, v267, v6, v269, v270, v271, v50,
          v274,
          v276,
          (uint64_t)v278,
          v279,
          v280);
        sub_1A5503BA0(v283, v204);
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_132_0(v210);
        OUTLINED_FUNCTION_124_0(v263, v6, v283, v204, v206);
        v170 = OUTLINED_FUNCTION_32_5();
        v172 = v210;
        v173 = v211;
        v174 = v11;
        v198 = v275;
        v175 = v277;
        v176 = v281;
        goto LABEL_179;
      }
      if (v13 != 2)
        return 0;
      v48 = (v11 & 0xFFFFFFFFFFLL) == 0 && v12 == 0x8000000000000000;
      if (!v48 || (v10 | v9 | v283 | v15 | v16 | v279) != 0)
        return 0;
      goto LABEL_140;
    }
    if (v13)
      return 0;
    v35 = v284 == v9 && v6 == v10;
    if (!v35)
    {
      OUTLINED_FUNCTION_32_5();
      v264 = v11;
      v271 = v12;
      v36 = v3;
      v37 = v6;
      v39 = v38;
      v41 = v40;
      v42 = v9;
      v44 = v43;
      v46 = v45;
      v47 = sub_1A594CD38();
      LOBYTE(v18) = v46;
      v15 = v41;
      v16 = v44;
      v9 = v42;
      v7 = v39;
      v6 = v37;
      v3 = v36;
      v4 = v267;
      v2 = v270;
      v12 = v271;
      v11 = v264;
      if ((v47 & 1) == 0)
        return 0;
    }
    if (BYTE5(v7) == 255)
    {
      if (BYTE5(v12) != 255)
        return 0;
      goto LABEL_140;
    }
    if (BYTE5(v12) == 255)
      return 0;
    if ((v7 & 0x10000000000) != 0)
      break;
    if ((v12 & 0x10000000000) != 0)
      return 0;
    if (v14 > 0xFE)
    {
      if (v17 <= 0xFE)
        return 0;
      goto LABEL_140;
    }
    if (v17 > 0xFE)
      return 0;
    if (!(_DWORD)v14)
    {
      if (!(_BYTE)v18)
      {
        if ((_DWORD)v7 != (_DWORD)v12 || v278 != (int32x2_t *)v283)
          return 0;
        goto LABEL_140;
      }
      v24 = v278;
      if (v18 != 1)
      {
LABEL_168:
        OUTLINED_FUNCTION_81_1(v283, v12);
        return 0;
      }
      v242 = (int32x2_t *)v283;
LABEL_181:
      if (*(_QWORD *)&v242[2] == 1)
        goto LABEL_188;
      OUTLINED_FUNCTION_81_1(v283, v12);
      swift_bridgeObjectRelease();
      return 0;
    }
    if ((_DWORD)v14 == 1)
    {
      v24 = v278;
      if (v18 == 1)
      {
        sub_1A5689E30(v278, (int32x2_t *)v283);
        v2 = v270;
        if ((v160 & 1) == 0)
          return 0;
        goto LABEL_140;
      }
      v77 = v278;
      if (v18 != 2)
      {
        v239 = v9;
        v240 = v7;
        v241 = v16;
        v273 = v15;
        sub_1A566658C((uint64_t)v278, v7, 0);
        v15 = v273;
        v16 = v241;
        v7 = v240;
        v9 = v239;
        v242 = v278;
        goto LABEL_181;
      }
      goto LABEL_145;
    }
    v24 = v278;
    if (v18 == 1)
    {
      v77 = (int32x2_t *)v283;
LABEL_145:
      v161 = v77[2];
      v162 = v7;
      sub_1A566676C(v283, v12);
      sub_1A566676C((uint64_t)v24, v162);
      OUTLINED_FUNCTION_38();
      v2 = v270;
      if (v161)
        return 0;
      goto LABEL_140;
    }
    if (v18 != 2)
      goto LABEL_168;
LABEL_140:
    if (++v3 == v2)
      return 1;
  }
  if ((v12 & 0x10000000000) == 0)
    return 0;
  v12 = (unint64_t)v278;
  v9 = (unint64_t)v278[2];
  if (v9 != *(_QWORD *)(v283 + 16))
    return 0;
  if (v9)
    v52 = v278 == (int32x2_t *)v283;
  else
    v52 = 1;
  if (v52)
    goto LABEL_140;
  if (*(_QWORD *)&v278[4] != *(_QWORD *)(v283 + 32) || *(_QWORD *)&v278[5] != *(_QWORD *)(v283 + 40))
  {
    v54 = OUTLINED_FUNCTION_1_16();
    v2 = v270;
    if ((v54 & 1) == 0)
      return 0;
  }
  if (v9 == 1)
    goto LABEL_140;
  v55 = (int32x2_t *)(v283 + 56);
  v56 = v278 + 7;
  v57 = 1;
  while (v57 < v9)
  {
    if (*(_QWORD *)&v56[-1] != *(_QWORD *)&v55[-1] || *v56 != *v55)
    {
      v59 = OUTLINED_FUNCTION_1_16();
      v2 = v270;
      if ((v59 & 1) == 0)
        return 0;
    }
    ++v57;
    v55 += 2;
    v56 += 2;
    if (v9 == v57)
      goto LABEL_140;
  }
LABEL_184:
  __break(1u);
LABEL_185:
  v10 = v283;
  v243 = v9;
  v9 = v271;
  v244 = v16;
  v24 = (int32x2_t *)v15;
  sub_1A5503BA0(v283, v271);
  OUTLINED_FUNCTION_188_0(v243, v6, v283, v271, (uint64_t)v24, v244, v279);
  v245 = OUTLINED_FUNCTION_32_5();
  OUTLINED_FUNCTION_120_0(v245, v246, (uint64_t)v278, v269, v247, v276, v248, v249, v259, v260, v261, v264, v266, v267, v268, v269, v270, v271, v272,
    v274,
    v276,
    (uint64_t)v278,
    v279,
    v280);
  sub_1A5503BA0(v283, v9);
  swift_bridgeObjectRelease();
  __break(1u);
LABEL_186:
  v250 = OUTLINED_FUNCTION_116_0();
  sub_1A5503BA0(v250, v251);
  OUTLINED_FUNCTION_19();
  __break(1u);
LABEL_187:
  __break(1u);
LABEL_188:
  v252 = v9;
  v253 = v7;
  v265 = v16;
  v254 = v15;
  sub_1A566676C(v283, v12);
  sub_1A566676C(v283, v12);
  v255 = OUTLINED_FUNCTION_116_0();
  sub_1A566676C(v255, v256);
  sub_1A5666A3C(v252, v10, v283, v12, v254, v265, v279, v11);
  v257 = OUTLINED_FUNCTION_32_5();
  sub_1A5666A3C(v257, v258, (uint64_t)v24, v253, (uint64_t)v282, v276, v280, v274);
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

void sub_1A568C818()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v36;
  uint64_t v37;
  size_t v38;
  int v39;
  unint64_t v40;
  uint64_t v41;
  char v42;
  unint64_t v43;
  unint64_t v44;
  BOOL v45;
  unsigned __int8 v46;
  unint64_t v47;
  unsigned __int8 v48;
  unsigned __int8 v49;
  const void *v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_14_6();
  if (!v19 || !v0 || v2 == v3)
  {
LABEL_81:
    OUTLINED_FUNCTION_20_0();
    return;
  }
  v4 = (uint64_t *)(v3 + 48);
  v5 = (uint64_t *)(v2 + 48);
  while (1)
  {
    v6 = *(v5 - 2);
    v7 = *(v5 - 1);
    v8 = *v5;
    v9 = v5[2];
    v81 = v5[3];
    v82 = v5[1];
    v10 = v5[5];
    v11 = *(v4 - 2);
    v12 = *(v4 - 1);
    v13 = *v4;
    v14 = v4[1];
    v16 = v4[2];
    v15 = v4[3];
    v17 = v16 >> 62;
    v18 = v4[5];
    v83 = v4[4];
    if (!(v9 >> 62))
    {
      if (v17)
        goto LABEL_81;
      v69 = *(v4 - 1);
      v73 = *v4;
      v64 = v0;
      v66 = *(v4 - 2);
      v79 = v4[1];
      v62 = *v5;
      v77 = v4[3];
      v1 = v5[5];
      v23 = *(v5 - 2);
      v24 = *v5;
      sub_1A5666914(v11, v12, v13, v79, v16, v15, v83, v18);
      OUTLINED_FUNCTION_181_0(v23, v7, v24, v82, v9, v81);
      sub_1A568D0B4(v23, v66);
      LOBYTE(v24) = v25;
      sub_1A56668BC(v66, v69, v73, v79, v16, v77, v83, v18);
      v26 = v23;
      v0 = v64;
      OUTLINED_FUNCTION_121_0(v26, v7, v62, v82, v9);
      if ((v24 & 1) == 0)
        goto LABEL_81;
      goto LABEL_78;
    }
    if (v9 >> 62 != 1)
    {
      v27 = v8 | v7;
      v28 = v81 | v5[4] | v10;
      if (v9 != 0x8000000000000000 || v27 | v6 | v82 | v28)
      {
        v29 = v9 == 0x8000000000000000 && v6 == 1;
        if (!v29 || v27 | v82 | v28)
        {
          if (v17 != 2)
            goto LABEL_81;
          if (v16 != 0x8000000000000000 || v11 != 2)
            goto LABEL_81;
        }
        else
        {
          if (v17 != 2)
            goto LABEL_81;
          if (v16 != 0x8000000000000000 || v11 != 1)
            goto LABEL_81;
        }
        if (v13 | v12 | v14 || v83 | v15 | v18)
          goto LABEL_81;
      }
      else if (v17 != 2 || v16 != 0x8000000000000000 || v13 | v12 | v11 | v14 | v15 | v83 | v18)
      {
        goto LABEL_81;
      }
      goto LABEL_78;
    }
    if (v17 != 1)
      goto LABEL_81;
    v60 = v5[2];
    v61 = v5[4];
    v80 = *(v5 - 1);
    if ((v9 & 1) == 0)
    {
      if ((v16 & 1) != 0)
        goto LABEL_81;
      v19 = v6 == v11 && v7 == v12;
      if (v19)
        goto LABEL_49;
      v72 = *v4;
      v76 = v4[3];
      v20 = *(v4 - 2);
      v21 = *(v4 - 1);
      v78 = v4[1];
      v22 = OUTLINED_FUNCTION_133_0();
      v8 = v1;
      v11 = v20;
      v13 = v72;
      v12 = v21;
      v6 = v14;
      goto LABEL_48;
    }
    if ((v16 & 1) == 0)
      goto LABEL_81;
    v31 = v6 == v11 && v7 == v12;
    v76 = v4[3];
    v78 = v4[1];
    if (!v31)
    {
      v74 = *v4;
      v32 = *(v4 - 2);
      v33 = *(v4 - 1);
      v34 = OUTLINED_FUNCTION_133_0();
      v8 = v1;
      v11 = v32;
      v13 = v74;
      v15 = v76;
      v12 = v33;
      v6 = v14;
      v10 = v7;
      if ((v34 & 1) == 0)
        goto LABEL_81;
    }
    if (v8 != v13 || v82 != v14)
    {
      v36 = v13;
      v67 = v11;
      v70 = v12;
      v7 = v10;
      v37 = v6;
      v1 = v8;
      v22 = sub_1A594CD38();
      v8 = v1;
      v11 = v67;
      v12 = v70;
      v13 = v36;
      v6 = v37;
LABEL_48:
      v10 = v7;
      v14 = v78;
      v7 = v80;
      v15 = v76;
      if ((v22 & 1) == 0)
        goto LABEL_81;
    }
LABEL_49:
    if (HIBYTE(v10) == 255)
    {
      if (HIBYTE(v18) != 255)
        goto LABEL_80;
      goto LABEL_78;
    }
    if (HIBYTE(v18) == 255)
    {
LABEL_80:
      v56 = v15;
      v57 = v10;
      sub_1A5666818(v15, v83, v18);
      sub_1A5666818(v81, v61, v57);
      sub_1A56668A4(v81, v61, v57);
      sub_1A56668A4(v56, v83, v18);
      goto LABEL_81;
    }
    if ((v10 & 0x100000000000000) != 0)
    {
      if ((v18 & 0x100000000000000) == 0)
        goto LABEL_81;
      v71 = v12;
      v75 = v13;
      v65 = v0;
      v68 = v11;
      v63 = v8;
      v52 = v15;
      v1 = v10;
      v53 = v6;
      v59 = v6;
      v54 = v8;
      sub_1A5666914(v11, v12, v13, v14, v16, v15, v83, v18);
      OUTLINED_FUNCTION_181_0(v53, v7, v54, v82, v60, v81);
      sub_1A5666818(v52, v83, v18);
      sub_1A5666818(v81, v61, v1);
      sub_1A568AAF8();
      v58 = v55;
      sub_1A56668A4(v52, v83, v18);
      sub_1A56668A4(v81, v61, v1);
      sub_1A56668BC(v68, v71, v75, v14, v16, v52, v83, v18);
      v0 = v65;
      OUTLINED_FUNCTION_121_0(v59, v80, v63, v82, v60);
      if ((v58 & 1) == 0)
        goto LABEL_81;
      goto LABEL_78;
    }
    if ((v18 & 0x100000000000000) != 0)
      goto LABEL_81;
    v38 = (HIDWORD(v61) - v61);
    if (HIDWORD(v61) < v61)
      break;
    OUTLINED_FUNCTION_138_0();
    if (!v42)
      goto LABEL_83;
    if ((_DWORD)v38 != v39)
      goto LABEL_81;
    if ((v43 = HIDWORD(v40), v44 = HIDWORD(v18), (_DWORD)v40 != (_DWORD)v18)
      || WORD2(v40) != WORD2(v18)
      || (BYTE6(v40) == BYTE6(v18) ? (v45 = v81 == v41) : (v45 = 0), !v45))
    {
      OUTLINED_FUNCTION_4_2();
      v46 = BYTE6(v18);
      v1 = v47;
      v49 = v48;
      swift_beginAccess();
      v50 = (const void *)(*(_QWORD *)(v81 + 24)
                         + (v49 | ((unint64_t)(unsigned __int16)v43 << 8))
                         + v61);
      OUTLINED_FUNCTION_176();
      if (memcmp(v50, (const void *)(*(_QWORD *)(v1 + 24)+ (v46 | ((unint64_t)(unsigned __int16)v44 << 8))+ v83), v38))
      {
        goto LABEL_81;
      }
    }
LABEL_78:
    v4 += 8;
    v5 += 8;
    if (!--v0)
      goto LABEL_81;
  }
  __break(1u);
LABEL_83:
  __break(1u);
}

#error "1A568D00C: call analysis failed (funcsize=193)"

void sub_1A568D0B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16) && v2 && a1 != a2)
    __asm { BR              X10 }
  OUTLINED_FUNCTION_15_3();
}

uint64_t sub_1A568D2C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 v9;
  uint64_t v10;
  char v11;
  char v12;
  _BYTE v14[40];
  _BYTE v15[40];
  _BYTE v16[40];
  _BYTE v17[40];

  v4 = *(_QWORD *)(a1 + 16);
  if (v4 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v4)
    return 1;
  OUTLINED_FUNCTION_48_2();
  if (v5)
    return 1;
  sub_1A5666B28(v2 + 32, (uint64_t)v16);
  sub_1A5666B28(v3 + 32, (uint64_t)v17);
  static FetchAttribute.__derived_enum_equals(_:_:)((uint64_t)v16);
  if ((v6 & 1) == 0)
    return 0;
  v7 = v3 + 72;
  v8 = v2 + 72;
  do
  {
    v9 = --v4 == 0;
    if (!v4)
      break;
    v10 = v8 + 40;
    sub_1A5666B28(v8, (uint64_t)v14);
    sub_1A5666B28(v7, (uint64_t)v15);
    static FetchAttribute.__derived_enum_equals(_:_:)((uint64_t)v14);
    v12 = v11;
    v8 = v10;
    v7 += 40;
  }
  while ((v12 & 1) != 0);
  return v9;
}

void sub_1A568D398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  BOOL v26;
  unint64_t v27;
  char v28;
  int v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  int v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  OUTLINED_FUNCTION_21_10();
  OUTLINED_FUNCTION_142_0();
  if (!v26 || !v18 || v19 == v20)
  {
LABEL_57:
    OUTLINED_FUNCTION_3_18();
    return;
  }
  OUTLINED_FUNCTION_182_0();
  v48 = v18;
  while (1)
  {
    v21 = v11 + 32 * v17;
    v22 = *(_QWORD *)v21;
    v23 = v15 + 32 * v17;
    v24 = *(_QWORD *)v23;
    v25 = *(unsigned __int8 *)(v23 + 30);
    if (!*(_BYTE *)(v21 + 30))
    {
      if (*(_BYTE *)(v23 + 30))
        goto LABEL_57;
      if ((v24 | v22) < 0)
      {
        __break(1u);
        __break(1u);
        goto LABEL_59;
      }
      if (v24 != v22)
        goto LABEL_57;
      goto LABEL_28;
    }
    v12 = *(_QWORD *)(v21 + 8);
    v14 = *(_QWORD *)(v23 + 8);
    if (*(_BYTE *)(v21 + 30) == 1)
    {
      if (v25 != 1)
        goto LABEL_57;
      if ((v12 & 1) != 0)
      {
        if ((v14 & 1) == 0)
          goto LABEL_57;
      }
      else if ((v14 & 1) != 0)
      {
        goto LABEL_57;
      }
      if (v24 != v22)
        goto LABEL_57;
      goto LABEL_28;
    }
    if (v25 != 2)
      goto LABEL_57;
    v15 = *(unsigned __int16 *)(v21 + 28);
    v16 = *(unsigned int *)(v21 + 24);
    v26 = v22 == v24 && v12 == v14;
    if (!v26)
    {
      v13 = *(_QWORD *)v21;
      v14 = *(_QWORD *)(v23 + 8);
      if ((sub_1A594CD38() & 1) == 0)
        goto LABEL_57;
    }
    OUTLINED_FUNCTION_128_0();
    if (!v26 & v28)
    {
      v15 = a10;
      v11 = a11;
      v18 = v48;
      if (v27 <= 0xFE)
        goto LABEL_57;
      goto LABEL_28;
    }
    v18 = v48;
    if (v27 > 0xFE)
      goto LABEL_57;
    OUTLINED_FUNCTION_136_0();
    if (!v26 & v28)
    {
      v15 = a10;
      v11 = a11;
      if (v30 <= 0xFE)
        goto LABEL_57;
      goto LABEL_28;
    }
    if (v30 > 0xFE)
      goto LABEL_57;
    if (!v29)
    {
      v37 = (_DWORD)v15 == (_DWORD)v16 && v31 == v32;
      v15 = a10;
      v11 = a11;
      if (!v37)
        goto LABEL_57;
      goto LABEL_28;
    }
    if (v29 == 1)
      break;
    OUTLINED_FUNCTION_23_8();
    if (v26)
    {
      v13 = v35;
LABEL_52:
      v40 = *(_QWORD *)(v13 + 16);
      OUTLINED_FUNCTION_60_2(v35, v16);
      swift_bridgeObjectRelease();
      v15 = a10;
      v11 = a11;
      if (v40)
        goto LABEL_57;
      goto LABEL_28;
    }
    v15 = a10;
    v11 = a11;
    if (v38 != 2)
    {
      OUTLINED_FUNCTION_175(v35);
      goto LABEL_57;
    }
LABEL_28:
    if (++v17 == v18)
      goto LABEL_57;
  }
  OUTLINED_FUNCTION_23_8();
  if (v26)
  {
    OUTLINED_FUNCTION_162_0();
    v15 = a10;
    v11 = a11;
    if ((v39 & 1) == 0)
      goto LABEL_57;
    goto LABEL_28;
  }
  v13 = v34;
  if (v33 == 2)
    goto LABEL_52;
  v18 = v36;
  v41 = OUTLINED_FUNCTION_161_0();
  v43 = v42;
  sub_1A566658C(v41, v44, v45);
  v46 = v43;
  v11 = v17;
  v47 = *(_QWORD *)(v17 + 16);
  v13 = v46;
  sub_1A566676C(v46, v16);
  if (v47 != 1)
  {
    OUTLINED_FUNCTION_37();
    goto LABEL_57;
  }
LABEL_59:
  OUTLINED_FUNCTION_119_0();
  OUTLINED_FUNCTION_119_0();
  OUTLINED_FUNCTION_123_0(v24, v14, v13, v16);
  OUTLINED_FUNCTION_123_0(v18, v12, v11, v15);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_42();
  OUTLINED_FUNCTION_37();
  __break(1u);
}

void sub_1A568D6E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  int32x2_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v29;
  int32x2_t *v30;
  int v31;
  int32x2_t *v32;
  int32x2_t *v33;
  BOOL v34;
  int v35;
  char v36;
  int32x2_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;

  OUTLINED_FUNCTION_21_10();
  v42 = *(_QWORD *)(v18 + 16);
  if (v42 != *(_QWORD *)(v19 + 16) || !v42 || v18 == v19)
  {
LABEL_48:
    OUTLINED_FUNCTION_3_18();
    return;
  }
  OUTLINED_FUNCTION_182_0();
  while (1)
  {
    v20 = v11 + 32 * v16;
    v21 = *(_QWORD *)v20;
    v22 = v14 + 32 * v16;
    v23 = *(_QWORD *)v22;
    if (*(_BYTE *)(v20 + 30) != 1)
    {
      if ((*(_BYTE *)(v22 + 30) & 1) != 0)
        goto LABEL_48;
      if ((v23 | v21) < 0)
      {
        __break(1u);
        __break(1u);
        goto LABEL_50;
      }
      if (v23 != v21)
        goto LABEL_48;
      goto LABEL_20;
    }
    if ((*(_BYTE *)(v22 + 30) & 1) == 0)
      goto LABEL_48;
    v13 = *(_QWORD *)(v20 + 8);
    v14 = *(unsigned __int16 *)(v20 + 28);
    v15 = *(unsigned int *)(v20 + 24);
    v17 = *(_QWORD *)(v22 + 8);
    v12 = *(int32x2_t **)(v22 + 16);
    v24 = v21 == v23 && v13 == v17;
    if (!v24)
    {
      v23 = *(_QWORD *)v22;
      if ((sub_1A594CD38() & 1) == 0)
        goto LABEL_48;
    }
    OUTLINED_FUNCTION_128_0();
    if (!v24 & v26)
    {
      v27 = v25 > 0xFE;
      goto LABEL_15;
    }
    if (v25 > 0xFE)
      goto LABEL_48;
    OUTLINED_FUNCTION_136_0();
    if (!v24 & v26)
    {
      v27 = v29 > 0xFE;
LABEL_15:
      v14 = a10;
      v11 = a11;
      if (!v27)
        goto LABEL_48;
      goto LABEL_20;
    }
    if (v29 > 0xFE)
      goto LABEL_48;
    if (!v28)
    {
      v34 = (_DWORD)v14 == (_DWORD)v15 && v30 == v12;
      v14 = a10;
      v11 = a11;
      if (!v34)
        goto LABEL_48;
      goto LABEL_20;
    }
    if (v28 == 1)
      break;
    OUTLINED_FUNCTION_23_8();
    if (v24)
    {
      v33 = v12;
LABEL_43:
      v37 = v33[2];
      OUTLINED_FUNCTION_60_2((uint64_t)v12, v15);
      OUTLINED_FUNCTION_55();
      v14 = a10;
      v11 = a11;
      if (v37)
        goto LABEL_48;
      goto LABEL_20;
    }
    v14 = a10;
    v11 = a11;
    if (v35 != 2)
    {
      OUTLINED_FUNCTION_175((uint64_t)v12);
      goto LABEL_48;
    }
LABEL_20:
    if (++v16 == v42)
      goto LABEL_48;
  }
  OUTLINED_FUNCTION_23_8();
  if (v24)
  {
    sub_1A5689E30(v32, v12);
    v14 = a10;
    v11 = a11;
    if ((v36 & 1) == 0)
      goto LABEL_48;
    goto LABEL_20;
  }
  v33 = v32;
  if (v31 == 2)
    goto LABEL_43;
  v38 = OUTLINED_FUNCTION_161_0();
  sub_1A566658C(v38, v39, v40);
  v11 = v16;
  v41 = *(_QWORD *)(v16 + 16);
  OUTLINED_FUNCTION_175((uint64_t)v12);
  if (v41 != 1)
  {
    OUTLINED_FUNCTION_37();
    goto LABEL_48;
  }
LABEL_50:
  OUTLINED_FUNCTION_154_0();
  OUTLINED_FUNCTION_154_0();
  sub_1A5666C54(v23, v17, (uint64_t)v12, v15, 1);
  sub_1A5666C54(v21, v13, v11, v14, 1);
  OUTLINED_FUNCTION_42();
  OUTLINED_FUNCTION_82();
  OUTLINED_FUNCTION_37();
  __break(1u);
}

void sub_1A568D9EC()
{
  _QWORD *v0;
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char v6;
  uint64_t *v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;

  OUTLINED_FUNCTION_15_12();
  if (!v5)
    goto LABEL_26;
  if (!v2)
    goto LABEL_26;
  OUTLINED_FUNCTION_48_2();
  if (v5)
    goto LABEL_26;
  v3 = v0[6];
  v4 = v1[6];
  v5 = v0[4] == v1[4] && v0[5] == v1[5];
  if (v5)
  {
    if (v3 != v4)
    {
LABEL_26:
      OUTLINED_FUNCTION_17_1();
      return;
    }
  }
  else
  {
    OUTLINED_FUNCTION_1_16();
    OUTLINED_FUNCTION_88_1();
    if ((v6 & 1) == 0 || v3 != v4)
      goto LABEL_26;
  }
  if (v2 == 1)
    goto LABEL_26;
  v7 = v1 + 9;
  v8 = v0 + 9;
  v9 = 1;
  while (v9 < v2)
  {
    v10 = *v8;
    v11 = *v7;
    if (*(v8 - 2) == *(v7 - 2) && *(v8 - 1) == *(v7 - 1))
    {
      if (v10 != v11)
        goto LABEL_26;
    }
    else
    {
      OUTLINED_FUNCTION_1_16();
      OUTLINED_FUNCTION_88_1();
      if ((v13 & 1) == 0 || v10 != v11)
        goto LABEL_26;
    }
    ++v9;
    v7 += 3;
    v8 += 3;
    if (v2 == v9)
      goto LABEL_26;
  }
  __break(1u);
}

void sub_1A568DADC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  unint64_t v11;
  uint64_t v12;
  BOOL v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  unint64_t v31;
  uint64_t v32;
  char v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  int v40;
  uint64_t v41;
  _QWORD *v42;
  BOOL v43;
  int v44;
  char v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  OUTLINED_FUNCTION_21_10();
  OUTLINED_FUNCTION_148_0();
  if (!v13 || !v0 || v1 == v2)
  {
LABEL_92:
    OUTLINED_FUNCTION_3_18();
    return;
  }
  v3 = 0;
  v4 = v1 + 32;
  v5 = v2 + 32;
  v54 = v2 + 32;
  v55 = v1 + 32;
  v53 = v0;
  while (1)
  {
    v6 = v4 + 32 * v3;
    v7 = *(_QWORD *)v6;
    v8 = v5 + 32 * v3;
    v9 = *(_QWORD *)v8;
    v10 = *(unsigned __int8 *)(v8 + 30);
    if (!*(_BYTE *)(v6 + 30))
    {
      if (*(_BYTE *)(v8 + 30))
        v13 = 0;
      else
        v13 = v7 == v9;
      if (!v13)
        goto LABEL_92;
      goto LABEL_46;
    }
    if (*(_BYTE *)(v6 + 30) == 1)
    {
      if (v10 != 1)
        goto LABEL_92;
      if (*(_QWORD *)v6)
      {
        if (*(_QWORD *)v6 == 1)
        {
          v11 = 0xE100000000000000;
          v12 = 49;
        }
        else
        {
          v11 = 0xE800000000000000;
          v12 = 0x7974696E69666E69;
        }
      }
      else
      {
        v11 = 0xE100000000000000;
        v12 = 48;
      }
      if (*(_QWORD *)v8)
      {
        if (*(_QWORD *)v8 == 1)
        {
          v31 = 0xE100000000000000;
          v32 = 49;
        }
        else
        {
          v31 = 0xE800000000000000;
          v32 = 0x7974696E69666E69;
        }
      }
      else
      {
        v31 = 0xE100000000000000;
        v32 = 48;
      }
      if (v12 == v32 && v11 == v31)
      {
        OUTLINED_FUNCTION_94_1();
      }
      else
      {
        v34 = OUTLINED_FUNCTION_1_16();
        OUTLINED_FUNCTION_17();
        OUTLINED_FUNCTION_9_2();
        if ((v34 & 1) == 0)
          goto LABEL_92;
      }
      goto LABEL_46;
    }
    if (v10 != 2)
      goto LABEL_92;
    v15 = *(_QWORD *)(v6 + 8);
    v14 = *(_QWORD **)(v6 + 16);
    v16 = *(unsigned __int16 *)(v6 + 28);
    v17 = *(unsigned int *)(v6 + 24);
    v19 = *(_QWORD *)(v8 + 8);
    v18 = *(_QWORD **)(v8 + 16);
    v20 = *(unsigned __int16 *)(v8 + 28);
    v21 = *(unsigned int *)(v8 + 24);
    if (v7 != v9 || v15 != v19)
    {
      v52 = *(_QWORD *)v8;
      v23 = *(_QWORD *)(v8 + 8);
      v24 = *(_QWORD *)(v6 + 8);
      v25 = *(_QWORD **)(v6 + 16);
      v26 = *(_QWORD **)(v8 + 16);
      v27 = sub_1A594CD38();
      v18 = v26;
      v14 = v25;
      v15 = v24;
      v19 = v23;
      v9 = v52;
      if ((v27 & 1) == 0)
        goto LABEL_92;
    }
    v28 = v17 | (v16 << 32);
    v29 = v21 | (v20 << 32);
    if (BYTE5(v28) == 255)
    {
      v30 = BYTE5(v29) == 255;
      goto LABEL_25;
    }
    if (BYTE5(v29) == 255)
      goto LABEL_92;
    if ((v28 & 0x10000000000) != 0)
    {
      if ((v29 & 0x10000000000) == 0)
        goto LABEL_92;
      v35 = v14[2];
      if (v35 != v18[2])
        goto LABEL_92;
      v5 = v54;
      v4 = v55;
      v0 = v53;
      if (v35 && v14 != v18)
      {
        v36 = v14[4] == v18[4] && v14[5] == v18[5];
        if (!v36 && (sub_1A594CD38() & 1) == 0)
          goto LABEL_92;
        if (v35 != 1)
        {
          while (1)
          {
            OUTLINED_FUNCTION_50_2();
            v39 = v13 && v37 == v38;
            if (!v39 && (OUTLINED_FUNCTION_1_16() & 1) == 0)
              goto LABEL_92;
            OUTLINED_FUNCTION_27_4();
            if (v13)
              goto LABEL_46;
          }
        }
      }
      goto LABEL_46;
    }
    if ((v29 & 0x10000000000) != 0)
      goto LABEL_92;
    if (BYTE4(v28) == 255)
    {
      v30 = BYTE4(v29) == 255;
LABEL_25:
      v5 = v54;
      v4 = v55;
      v0 = v53;
      if (!v30)
        goto LABEL_92;
      goto LABEL_46;
    }
    if (BYTE4(v29) == 255)
      goto LABEL_92;
    if (!BYTE4(v28))
      break;
    if (BYTE4(v28) == 1)
    {
      OUTLINED_FUNCTION_23_8();
      if (v13)
      {
        OUTLINED_FUNCTION_162_0();
        v5 = v54;
        v4 = v55;
        v0 = v53;
        if ((v45 & 1) == 0)
          goto LABEL_92;
        goto LABEL_46;
      }
      v42 = (_QWORD *)v41;
      if (v40 != 2)
      {
        v47 = (_QWORD *)v41;
        v48 = v18;
        sub_1A566658C(v41, v28, 0);
        v18 = v48;
        v14 = v47;
        v49 = v47;
        goto LABEL_90;
      }
      goto LABEL_84;
    }
    OUTLINED_FUNCTION_23_8();
    if (v13)
    {
      v42 = v18;
LABEL_84:
      v46 = v42[2];
      OUTLINED_FUNCTION_60_2((uint64_t)v18, v29);
      OUTLINED_FUNCTION_94();
      v5 = v54;
      v4 = v55;
      v0 = v53;
      if (v46)
        goto LABEL_92;
      goto LABEL_46;
    }
    v5 = v54;
    v4 = v55;
    v0 = v53;
    if (v44 != 2)
      goto LABEL_89;
LABEL_46:
    if (++v3 == v0)
      goto LABEL_92;
  }
  if (!BYTE4(v29))
  {
    v43 = (_DWORD)v28 == (_DWORD)v21 && v14 == v18;
    v5 = v54;
    v4 = v55;
    v0 = v53;
    if (!v43)
      goto LABEL_92;
    goto LABEL_46;
  }
  if (BYTE4(v29) != 1)
  {
LABEL_89:
    OUTLINED_FUNCTION_81_1((uint64_t)v18, v21 | (v20 << 32));
    goto LABEL_92;
  }
  v49 = v18;
LABEL_90:
  if (v49[2] != 1)
  {
    sub_1A566658C((uint64_t)v18, v29, 0);
    OUTLINED_FUNCTION_37();
    goto LABEL_92;
  }
  v50 = (uint64_t)v14;
  v51 = (uint64_t)v18;
  sub_1A566676C((uint64_t)v18, v29);
  sub_1A566676C(v51, v29);
  sub_1A566676C(v50, v28);
  OUTLINED_FUNCTION_123_0(v9, v19, v51, v29);
  OUTLINED_FUNCTION_123_0(v7, v15, v50, v28);
  OUTLINED_FUNCTION_37();
  __break(1u);
}

void sub_1A568DEE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  size_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  BOOL v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  const void *v22;
  const void *v23;
  uint64_t v24;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  OUTLINED_FUNCTION_146_0();
  if (v19 && v2 && v0 != v1)
  {
    v3 = 0;
    v27 = v0;
    v28 = v1;
    while (1)
    {
      v4 = v0 + v3;
      v6 = *(unsigned int *)(v0 + v3 + 40);
      v5 = *(_DWORD *)(v0 + v3 + 44);
      v7 = v5 - v6;
      if (v5 < v6)
        break;
      v8 = v1 + v3;
      v10 = *(unsigned int *)(v1 + v3 + 40);
      v9 = *(_DWORD *)(v1 + v3 + 44);
      v11 = v9 >= v10;
      v12 = v9 - v10;
      if (!v11)
        goto LABEL_33;
      if ((_DWORD)v7 != v12)
        goto LABEL_31;
      v29 = v2;
      v13 = *(_QWORD *)(v4 + 32);
      v14 = *(unsigned __int16 *)(v4 + 52);
      v15 = *(unsigned __int8 *)(v4 + 54);
      v31 = *(_QWORD *)(v4 + 56);
      v32 = *(_QWORD *)(v4 + 64);
      v16 = *(_QWORD *)(v8 + 32);
      v17 = *(unsigned __int16 *)(v8 + 52);
      v18 = *(unsigned __int8 *)(v8 + 54);
      v30 = *(_QWORD *)(v8 + 56);
      v19 = *(_DWORD *)(v4 + 48) == *(_DWORD *)(v8 + 48) && (_DWORD)v14 == (_DWORD)v17;
      if (v19 && (_DWORD)v15 == (_DWORD)v18 && v13 == v16)
      {
        OUTLINED_FUNCTION_87();
        v24 = v32;
        OUTLINED_FUNCTION_16_0();
        OUTLINED_FUNCTION_185_0();
      }
      else
      {
        OUTLINED_FUNCTION_176();
        v22 = (const void *)(*(_QWORD *)(v13 + 24) + (v15 | (v14 << 8)) + v6);
        OUTLINED_FUNCTION_176();
        v23 = (const void *)(*(_QWORD *)(v16 + 24) + (v18 | (v17 << 8)) + v10);
        OUTLINED_FUNCTION_0_10();
        v24 = v32;
        OUTLINED_FUNCTION_16_0();
        OUTLINED_FUNCTION_1_2();
        OUTLINED_FUNCTION_185_0();
        if (memcmp(v22, v23, v7))
        {
          OUTLINED_FUNCTION_9_2();
          OUTLINED_FUNCTION_4_4();
          OUTLINED_FUNCTION_55();
          OUTLINED_FUNCTION_2_4();
          goto LABEL_31;
        }
      }
      if (v31 == v30 && v24 == v18)
      {
        OUTLINED_FUNCTION_4_4();
        OUTLINED_FUNCTION_94_1();
        OUTLINED_FUNCTION_2_4();
      }
      else
      {
        v26 = OUTLINED_FUNCTION_1_16();
        OUTLINED_FUNCTION_9_2();
        OUTLINED_FUNCTION_4_4();
        OUTLINED_FUNCTION_55();
        OUTLINED_FUNCTION_2_4();
        if ((v26 & 1) == 0)
          goto LABEL_31;
      }
      v3 += 40;
      v1 = v28;
      v2 = v29 - 1;
      v0 = v27;
      if (v29 == 1)
        goto LABEL_31;
    }
    __break(1u);
LABEL_33:
    __break(1u);
  }
  else
  {
LABEL_31:
    OUTLINED_FUNCTION_67_1();
  }
}

void sub_1A568E09C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  __int16 v8;
  unsigned __int8 v9;
  int v10;
  __int16 v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  BOOL v17;
  uint64_t v18;
  BOOL v19;
  unsigned __int16 v21;

  OUTLINED_FUNCTION_15_12();
  if (!v16 || !v0 || v1 == v2)
  {
LABEL_34:
    OUTLINED_FUNCTION_67_1();
    return;
  }
  v3 = v2 + 48;
  v4 = v1 + 48;
  while (1)
  {
    v6 = *(_QWORD *)(v4 - 16);
    v5 = *(_QWORD *)(v4 - 8);
    OUTLINED_FUNCTION_41_4();
    v14 = *(_QWORD *)(v3 - 16);
    v13 = *(_QWORD *)(v3 - 8);
    v15 = v12;
    if (v6 < 0)
    {
      if ((v14 & 0x8000000000000000) == 0)
        goto LABEL_34;
      if (HIDWORD(v5) < v5)
        goto LABEL_37;
      if (HIDWORD(v13) < v13)
        goto LABEL_38;
      if (HIDWORD(v5) - (_DWORD)v5 != HIDWORD(v13) - (_DWORD)v13)
        goto LABEL_34;
      v18 = v6 & 0x7FFFFFFFFFFFFFFFLL;
      v14 &= ~0x8000000000000000;
      if (v7 != v10)
        goto LABEL_32;
      v19 = v8 == v11 && v9 == v12;
      if (!v19 || v18 != v14)
        goto LABEL_32;
      goto LABEL_33;
    }
    if (v14 < 0)
      goto LABEL_34;
    if (HIDWORD(v5) < v5)
      break;
    if (HIDWORD(v13) < v13)
      goto LABEL_36;
    if (HIDWORD(v5) - (_DWORD)v5 != HIDWORD(v13) - (_DWORD)v13)
      goto LABEL_34;
    if (v7 != v10 || (v8 == v11 ? (v16 = v9 == v12) : (v16 = 0), v16 ? (v17 = v6 == v14) : (v17 = 0), !v17))
    {
LABEL_32:
      OUTLINED_FUNCTION_118_0();
      OUTLINED_FUNCTION_106_0();
      OUTLINED_FUNCTION_176();
      if (OUTLINED_FUNCTION_134_0(*(_QWORD *)(v14 + 24) + (v15 & 0xFFFFFFFFFF0000FFLL | ((unint64_t)v21 << 8))))
        goto LABEL_34;
    }
LABEL_33:
    v3 += 24;
    v4 += 24;
    if (!--v0)
      goto LABEL_34;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

void sub_1A568E1F8()
{
  sub_1A5690B68();
}

void sub_1A568E204()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t i;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t *v32;
  unint64_t *v33;
  char v34;
  unint64_t v35;
  _QWORD *v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  BOOL v40;
  __int16 v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  __int16 v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  BOOL v101;
  BOOL v102;
  uint64_t v103;
  uint64_t v104;
  BOOL v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char v135;
  _QWORD *v136;
  _QWORD *v137;
  unint64_t v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  BOOL v142;
  __int16 v143;
  uint64_t v144;
  int v145;
  uint64_t v146;
  uint64_t v147;
  __int16 v148;
  uint64_t *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  BOOL v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  BOOL v170;
  BOOL v171;
  uint64_t v172;
  uint64_t v173;
  BOOL v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  const void *v200;
  char v201;
  const void *v202;
  BOOL v203;
  uint64_t v204;
  uint64_t v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  __int128 v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  unint64_t v251;
  unint64_t v252;
  unint64_t v253;
  unint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  char v259;
  char v260;
  BOOL v261;
  BOOL v262;
  unint64_t *v263;
  BOOL v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  char v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t *v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  _QWORD *v454;
  uint64_t v455;
  uint64_t *v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  _QWORD *v461;
  uint64_t v462;
  uint64_t *v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  BOOL v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  uint64_t v511;
  BOOL v512;
  uint64_t v513;
  uint64_t v514;
  uint64_t v515;
  uint64_t v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  uint64_t v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  unint64_t v540;
  uint64_t v541;
  uint64_t v542;
  uint64_t v543;
  uint64_t v544;
  uint64_t v545;
  uint64_t v546;
  uint64_t v547;
  uint64_t v548;
  uint64_t v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  unint64_t v554;
  uint64_t v555;
  uint64_t v556;
  uint64_t v557;
  __int128 v558;
  uint64_t v559;
  uint64_t v560;
  uint64_t v561;
  uint64_t v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  uint64_t v566;
  uint64_t v567;
  unint64_t v568;
  uint64_t v569;
  uint64_t v570;
  uint64_t v571;
  uint64_t v572;
  unint64_t *v573;
  uint64_t v574;
  uint64_t v575;
  uint64_t v576;
  uint64_t v577;
  _QWORD *v578;
  uint64_t v579;
  char *v580;
  char *v581;
  uint64_t v582;
  uint64_t v583;
  _QWORD v584[24];
  _BYTE v585[184];
  _BYTE v586[184];
  _QWORD v587[2];
  __int128 v588;
  __int128 v589;
  int v590;
  _QWORD v591[24];
  uint64_t v592;
  uint64_t v593;
  __int128 v594;
  __int128 v595;
  uint64_t v596;
  __n128 v597;
  uint64_t v598;
  uint64_t v599;
  uint64_t v600;
  uint64_t v601;
  uint64_t v602;
  uint64_t v603;
  uint64_t v604;
  uint64_t v605;
  uint64_t v606;
  uint64_t v607;
  uint64_t v608;
  uint64_t v609;
  uint64_t v610;
  uint64_t v611;
  uint64_t v612;
  uint64_t v613;
  _BYTE v614[184];
  _BYTE v615[184];
  _QWORD v616[2];
  __int128 v617;
  __int128 v618;
  int v619;
  _QWORD v620[24];
  uint64_t v621;
  uint64_t v622;
  __int128 v623;
  _BYTE v624[24];
  __n128 v625;
  uint64_t v626;
  uint64_t v627;
  uint64_t v628;
  uint64_t v629;
  uint64_t v630;
  uint64_t v631;
  uint64_t v632;
  uint64_t v633;
  uint64_t v634;
  uint64_t v635;
  uint64_t v636;
  uint64_t v637;
  uint64_t v638;
  uint64_t v639;
  uint64_t v640;
  uint64_t v641;
  _BYTE v642[184];
  _BYTE v643[184];
  _BYTE v644[184];
  _BYTE v645[184];
  uint64_t v646[9];
  _QWORD v647[9];
  _QWORD v648[11];
  _QWORD v649[11];
  uint64_t v650;
  __int128 v651;
  __int128 v652;
  __int128 v653;
  __int128 v654;
  uint64_t v655;
  uint64_t v656;
  __int128 v657;
  __int128 v658;
  __int128 v659;
  __int128 v660;
  uint64_t v661;
  _BYTE __dst[176];
  _BYTE v663[176];
  _QWORD v664[12];
  _QWORD v665[12];
  _OWORD v666[2];
  int v667;
  __int16 v668;
  char v669;
  _OWORD v670[2];
  int v671;
  __int16 v672;
  uint64_t v673[9];
  _QWORD v674[9];
  _OWORD v675[2];
  int v676;
  __int16 v677;
  char v678;
  _OWORD v679[2];
  int v680;
  __int16 v681;
  uint64_t v682[2];
  __int128 v683;
  uint64_t v684;
  uint64_t v685;
  uint64_t v686;
  uint64_t v687;
  uint64_t v688;
  _QWORD v689[11];

  OUTLINED_FUNCTION_16_4();
  MEMORY[0x1E0C80A78](v0);
  v3 = *(_QWORD *)(v1 + 16);
  if (v3 != *(_QWORD *)(v2 + 16) || !v3 || v1 == v2)
    goto LABEL_217;
  v4 = (char *)(v1 + 32);
  v5 = (char *)(v2 + 32);
  v461 = v620;
  v463 = &v634;
  v454 = v591;
  v456 = &v606;
  for (i = v3 - 1; ; i = v582 - 1)
  {
    sub_1A55DC3E0(v4, v643);
    sub_1A55DC3E0(v5, v644);
    sub_1A55DC3E0(v643, v645);
    OUTLINED_FUNCTION_83_1((uint64_t)v645);
    v580 = v5;
    v581 = v4;
    v582 = i;
    if (!v34)
      break;
    nullsub_1(v645);
    v9 = *v7;
    v8 = v7[1];
    v10 = v7[2];
    v11 = v7[4];
    v475 = v7[5];
    v577 = v7[6];
    v509 = v7[7];
    v514 = v7[3];
    v12 = v7[10];
    v558 = *((_OWORD *)v7 + 4);
    v543 = v7[12];
    v550 = v7[11];
    v530 = v7[14];
    v536 = v7[13];
    sub_1A55DC3E0(v644, v616);
    OUTLINED_FUNCTION_83_1((uint64_t)v616);
    if (!v34)
      goto LABEL_217;
    nullsub_1(v616);
    v14 = v13[1];
    v482 = *v13;
    v15 = v13[2];
    v16 = v13[4];
    v572 = v13[8];
    v519 = v13[6];
    v525 = v13[9];
    v465 = v13[10];
    v470 = v13[7];
    v499 = v13[11];
    v503 = v13[3];
    v490 = v13[13];
    v494 = v13[12];
    v486 = v13[14];
    OUTLINED_FUNCTION_109_0((uint64_t)v644);
    OUTLINED_FUNCTION_109_0((uint64_t)v643);
    OUTLINED_FUNCTION_109_0((uint64_t)v644);
    OUTLINED_FUNCTION_109_0((uint64_t)v643);
    if ((sub_1A568E204(v9, v482) & 1) == 0)
      goto LABEL_215;
    v17 = v8 == v14 && v10 == v15;
    if (!v17 && (OUTLINED_FUNCTION_1_16() & 1) == 0)
      goto LABEL_215;
    if (!v11)
    {
      OUTLINED_FUNCTION_178_0();
      if (v16)
      {
LABEL_191:
        v621 = v12;
        v622 = v11;
        *(_QWORD *)&v623 = v475;
        *((_QWORD *)&v623 + 1) = v18;
        *(_QWORD *)v624 = v8;
        *(_OWORD *)&v624[8] = v558;
        v625.n128_u64[0] = v10;
        v625.n128_u64[1] = v550;
        v626 = v543;
        v627 = v536;
        v628 = v530;
        v629 = v503;
        v630 = v16;
        v631 = v15;
        v632 = v519;
        v633 = v470;
        v634 = v572;
        v635 = v525;
        v636 = v465;
        v637 = v499;
        v638 = v494;
        v639 = v490;
        v640 = v486;
        sub_1A5523A30(v12, v11, v475, v18, v8, v558, *((uint64_t *)&v558 + 1), v10, v550, v543, v536, v530);
        sub_1A5523A30(v503, v16, v15, v519, v470, v572, v525, v465, v499, v494, v490, v486);
        sub_1A5691E24((uint64_t)&v621);
        goto LABEL_215;
      }
LABEL_183:
      OUTLINED_FUNCTION_20_10((uint64_t)v644);
      OUTLINED_FUNCTION_20_10((uint64_t)v643);
      OUTLINED_FUNCTION_20_10((uint64_t)v644);
      goto LABEL_184;
    }
    OUTLINED_FUNCTION_178_0();
    if (!v16)
      goto LABEL_191;
    OUTLINED_FUNCTION_31_4();
    v19 = v475;
    sub_1A5523A30(v12, v11, v475, v20, v8, v21, *((uint64_t *)&v558 + 1), v10, v379, v398, v413, v426);
    v22 = v470;
    sub_1A5523A30(v503, v16, v15, v519, v470, v572, v525, v465, v499, v494, v490, v486);
    OUTLINED_FUNCTION_174_0();
    if ((v23 & 1) == 0 || (sub_1A5691350(), (v23 & 1) == 0))
    {
      OUTLINED_FUNCTION_19_8(v23, v24, v25, v26, v27, v28, v29, v30, v380, v399, v414, v427, v437, v439, v441, v443, v445, v448, v450,
        (uint64_t)v454,
        (uint64_t)v456,
        v458,
        (uint64_t)v461,
        (uint64_t)v463,
        v465,
        v470,
        v475,
        v482,
        v486,
        v490,
        v494,
        v499,
        v503,
        v509,
        v514,
        v519,
        v525,
        v530,
        v536,
        v543,
        v550,
        v558,
        *((uint64_t *)&v558 + 1),
        v572);
      v327 = OUTLINED_FUNCTION_59_3();
      v329 = v19;
      v330 = v577;
      v331 = v8;
      v332 = v565;
      v333 = v571;
      v334 = v10;
LABEL_195:
      sub_1A5524514(v327, v328, v329, v330, v331, v332, v333, v334, v392, v408, v422, v433);
      goto LABEL_215;
    }
    if (v8 == 1)
    {
      if (v470 != 1)
        goto LABEL_194;
      OUTLINED_FUNCTION_114_0(v503, v16, v15, v519, 1, v572, v525, v30, v499, v494, v490, v486);
      OUTLINED_FUNCTION_31_4();
      sub_1A5524514(v12, v11, v475, v577, 1, v31, *((uint64_t *)&v558 + 1), v10, v381, v400, v415, v428);
      goto LABEL_183;
    }
    if (v470 == 1)
    {
LABEL_194:
      v621 = v577;
      v622 = v8;
      v623 = v558;
      *(_QWORD *)v624 = v10;
      *(_QWORD *)&v624[8] = v550;
      *(_QWORD *)&v624[16] = v543;
      v625.n128_u64[0] = v536;
      v625.n128_u64[1] = v530;
      v626 = v519;
      v627 = v470;
      v628 = v572;
      v629 = v525;
      v630 = v465;
      v631 = v499;
      v632 = v494;
      v633 = v490;
      v634 = v486;
      OUTLINED_FUNCTION_171_0(v577, v558, *((uint64_t *)&v558 + 1), v10, v550, v543, v536, v530);
      sub_1A552391C(v519, v470, v572, v525, v465, v499, v494, v490, v486);
      v335 = sub_1A5691EE4(&v621);
      v343 = OUTLINED_FUNCTION_168_0((uint64_t)v335, v336, v337, v338, v339, v340, v341, v342, v393, v399, v490, v486, v437, v439, v441, v443, v445, v15, v11,
               (uint64_t)v454,
               (uint64_t)v456,
               v10,
               (uint64_t)v461,
               (uint64_t)v463,
               v465,
               v470,
               v475,
               v16,
               v486,
               v490,
               v494,
               v499,
               v503);
      OUTLINED_FUNCTION_114_0(v343, v344, v345, v519, v22, v572, v525, v346, v394, v409, v423, v434);
      OUTLINED_FUNCTION_31_4();
      v327 = v514;
      v328 = v451;
      v329 = v480;
      v330 = v577;
      v331 = v8;
      v333 = *((_QWORD *)&v558 + 1);
      v334 = v459;
      goto LABEL_195;
    }
    v682[0] = v577;
    v682[1] = v8;
    v683 = v558;
    v684 = v10;
    v685 = v550;
    v686 = v543;
    v687 = v536;
    v688 = v530;
    v689[0] = v519;
    v689[1] = v470;
    v689[2] = v572;
    v689[3] = v525;
    v689[4] = v465;
    v689[5] = v499;
    v689[6] = v494;
    v689[7] = v490;
    v689[8] = v486;
    OUTLINED_FUNCTION_171_0(v577, v558, *((uint64_t *)&v558 + 1), v10, v550, v543, v536, v530);
    OUTLINED_FUNCTION_115_0();
    sub_1A552391C(v106, v107, v108, v109, v110, v111, v112, v113, v486);
    LODWORD(v445) = static BodyStructure.DispositionAndLanguage.__derived_struct_equals(_:_:)(v682, v689);
    OUTLINED_FUNCTION_115_0();
    sub_1A5524400(v114, v115, v116, v117, v118, v119, v120, v121, v486);
    v122 = sub_1A5524400(v577, v8, v558, *((uint64_t *)&v558 + 1), v10, v550, v543, v536, v530);
    v130 = OUTLINED_FUNCTION_168_0(v122, v123, v124, v125, v126, v127, v128, v129, v385, v399, v490, v486, v437, v439, v441, v443, v445, v15, v11,
             (uint64_t)v454,
             (uint64_t)v456,
             v10,
             (uint64_t)v461,
             (uint64_t)v463,
             v465,
             v470,
             v475,
             v16,
             v486,
             v490,
             v494,
             v499,
             v503);
    sub_1A5524514(v130, v131, v132, v519, v472, v572, v525, v467, v386, v404, v418, v431);
    sub_1A5524514(v514, v450, v477, v577, v509, v558, *((uint64_t *)&v558 + 1), v458, v550, v543, v536, v530);
    OUTLINED_FUNCTION_20_10((uint64_t)v644);
    OUTLINED_FUNCTION_20_10((uint64_t)v643);
    OUTLINED_FUNCTION_20_10((uint64_t)v644);
    OUTLINED_FUNCTION_20_10((uint64_t)v643);
    if ((v445 & 1) == 0)
      goto LABEL_217;
LABEL_185:
    if (!v582)
      goto LABEL_217;
    v5 = v580 + 184;
    v4 = v581 + 184;
  }
  nullsub_1(v645);
  v33 = v32;
  sub_1A55DC3E0(v644, v642);
  OUTLINED_FUNCTION_83_1((uint64_t)v642);
  if (v34)
    goto LABEL_217;
  nullsub_1(v642);
  v35 = *v33;
  v573 = v33;
  v578 = v36;
  v37 = *v36;
  v38 = *v33 >> 62;
  v39 = *v36 >> 62;
  if (!(_DWORD)v38)
  {
    if (v39)
      goto LABEL_217;
    v95 = *(_QWORD *)(v35 + 32);
    v96 = *(_QWORD *)(v35 + 40);
    v97 = *(_QWORD *)(v37 + 16);
    v98 = *(_QWORD *)(v37 + 24);
    v99 = *(_QWORD *)(v37 + 32);
    v100 = *(_QWORD *)(v37 + 40);
    v101 = *(_QWORD *)(v35 + 16) == v97 && *(_QWORD *)(v35 + 24) == v98;
    if (!v101 && (OUTLINED_FUNCTION_1_16() & 1) == 0)
      goto LABEL_217;
    v102 = v95 == v99 && v96 == v100;
    if (!v102 && (OUTLINED_FUNCTION_1_16() & 1) == 0)
      goto LABEL_217;
    goto LABEL_70;
  }
  if ((_DWORD)v38 != 1)
  {
    if (v39 != 2)
      goto LABEL_217;
    v103 = *(_QWORD *)(v35 + 32);
    v104 = *(_QWORD *)(v37 + 32);
    v105 = *(_QWORD *)(v35 + 16) == *(_QWORD *)(v37 + 16) && *(_QWORD *)(v35 + 24) == *(_QWORD *)(v37 + 24);
    if (!v105 && (OUTLINED_FUNCTION_1_16() & 1) == 0 || v103 != v104)
      goto LABEL_217;
LABEL_70:
    OUTLINED_FUNCTION_2_20((uint64_t)v644);
    OUTLINED_FUNCTION_2_20((uint64_t)v643);
    OUTLINED_FUNCTION_2_20((uint64_t)v644);
    OUTLINED_FUNCTION_2_20((uint64_t)v643);
LABEL_138:
    v251 = v33[4];
    v253 = v33[5];
    v252 = v33[6];
    v254 = v33[7];
    v554 = v33[10];
    v255 = v578[4];
    v256 = v578[5];
    v257 = v578[6];
    v258 = v578[7];
    v534 = v578[8];
    v540 = v33[8];
    v562 = v578[9];
    v568 = v33[9];
    v547 = v578[10];
    sub_1A5690C88();
    if ((v259 & 1) == 0)
      goto LABEL_215;
    sub_1A5691350();
    if ((v260 & 1) == 0)
      goto LABEL_215;
    if (v253)
    {
      if (!v256)
        goto LABEL_215;
      v261 = v251 == v255 && v253 == v256;
      if (!v261 && (OUTLINED_FUNCTION_1_16() & 1) == 0)
        goto LABEL_215;
    }
    else if (v256)
    {
      goto LABEL_215;
    }
    if (v254)
    {
      if (!v258)
        goto LABEL_215;
      v262 = v252 == v257 && v254 == v258;
      if (!v262 && (OUTLINED_FUNCTION_1_16() & 1) == 0)
        goto LABEL_215;
    }
    else if (v258)
    {
      goto LABEL_215;
    }
    if (v568)
    {
      v263 = v573;
      if (!v562)
        goto LABEL_215;
      v264 = v540 == v534 && v568 == v562;
      if (!v264 && (OUTLINED_FUNCTION_1_16() & 1) == 0)
        goto LABEL_215;
    }
    else
    {
      v263 = v573;
      if (v562)
        goto LABEL_215;
    }
    if (v554 != v547)
      goto LABEL_215;
    v265 = v263[11];
    v266 = v263[12];
    v267 = v263[13];
    v268 = v263[14];
    v269 = v263[15];
    v270 = v263[16];
    v271 = v263[17];
    v272 = v263[18];
    v273 = v263[19];
    v274 = v263[20];
    v275 = v263[21];
    v276 = v578[11];
    v277 = v578[12];
    v279 = v578[13];
    v278 = v578[14];
    v280 = v578[15];
    v281 = v578[16];
    v283 = v578[17];
    v282 = v578[18];
    v285 = v578[19];
    v284 = v578[20];
    v286 = v578[21];
    if (v266 == 1)
    {
      if (v277 != 1)
        goto LABEL_192;
      goto LABEL_183;
    }
    if (v277 == 1)
    {
LABEL_192:
      v621 = v265;
      v622 = v266;
      *(_QWORD *)&v623 = v267;
      *((_QWORD *)&v623 + 1) = v268;
      *(_QWORD *)v624 = v269;
      *(_QWORD *)&v624[8] = v270;
      *(_QWORD *)&v624[16] = v271;
      v625.n128_u64[0] = v272;
      v625.n128_u64[1] = v273;
      v626 = v274;
      v627 = v275;
      v628 = v276;
      v629 = v277;
      v630 = v279;
      v631 = v278;
      v576 = v280;
      v632 = v280;
      v633 = v281;
      v634 = v283;
      v635 = v282;
      v636 = v285;
      v637 = v284;
      v638 = v286;
      v314 = OUTLINED_FUNCTION_183_0();
      v315 = v284;
      v317 = v316;
      v319 = v318;
      sub_1A552388C(v314, v320, v321, v322, v323, v324, v325, v326, v379, v398, v413);
      sub_1A552388C(v319, v277, v279, v278, v576, v281, v283, v282, v285, v315, v317);
      sub_1A5691F84((uint64_t)&v621);
      goto LABEL_215;
    }
    if (v266)
    {
      if (!v277)
        goto LABEL_215;
      if (v265 != v276 || v266 != v277)
      {
        v569 = v267;
        v574 = v578[15];
        v555 = v269;
        v563 = v268;
        v523 = v578[19];
        v529 = v578[13];
        v513 = v578[16];
        v518 = v578[17];
        v548 = v578[18];
        v288 = v272;
        v289 = v271;
        v290 = v270;
        v291 = v273;
        v292 = v274;
        v507 = v275;
        v293 = v578[21];
        v294 = sub_1A594CD38();
        v280 = v574;
        v286 = v293;
        v274 = v292;
        v273 = v291;
        v268 = v563;
        v267 = v569;
        v282 = v548;
        v269 = v555;
        v270 = v290;
        v283 = v518;
        v285 = v523;
        v271 = v289;
        v275 = v507;
        v281 = v513;
        v272 = v288;
        v279 = v529;
        if ((v294 & 1) == 0)
          goto LABEL_215;
      }
    }
    else if (v277)
    {
      goto LABEL_215;
    }
    if (v268 == 1)
    {
      if (v278 != 1)
        goto LABEL_196;
      goto LABEL_183;
    }
    if (v278 == 1)
    {
LABEL_196:
      v621 = v267;
      v622 = v268;
      *(_QWORD *)&v623 = v269;
      *((_QWORD *)&v623 + 1) = v270;
      *(_QWORD *)v624 = v271;
      *(_QWORD *)&v624[8] = v272;
      *(_QWORD *)&v624[16] = v273;
      v625.n128_u64[0] = v274;
      v625.n128_u64[1] = v275;
      v626 = v279;
      v627 = v278;
      v347 = v280;
      v628 = v280;
      v629 = v281;
      v630 = v283;
      v631 = v282;
      v632 = v285;
      v633 = v284;
      v634 = v286;
      v348 = v286;
      sub_1A552391C(v267, v268, v269, v270, v271, v272, v273, v274, v275);
      sub_1A552391C(v279, v278, v347, v281, v283, v282, v285, v284, v348);
      sub_1A5691EE4(&v621);
      OUTLINED_FUNCTION_2_20((uint64_t)v644);
      OUTLINED_FUNCTION_2_20((uint64_t)v643);
      OUTLINED_FUNCTION_2_20((uint64_t)v644);
      goto LABEL_216;
    }
    v646[0] = v267;
    v646[1] = v268;
    v564 = v268;
    v646[2] = v269;
    v646[3] = v270;
    v646[4] = v271;
    v646[5] = v272;
    v646[6] = v273;
    v646[7] = v274;
    v646[8] = v275;
    v647[0] = v279;
    v647[1] = v278;
    v570 = v267;
    v575 = v280;
    v647[2] = v280;
    v647[3] = v281;
    v647[4] = v283;
    v549 = v282;
    v556 = v269;
    v647[5] = v282;
    v647[6] = v285;
    v647[7] = v284;
    v647[8] = v286;
    v295 = OUTLINED_FUNCTION_183_0();
    v296 = v285;
    v524 = v285;
    v498 = v297;
    v502 = v298;
    v535 = v300;
    v541 = v299;
    v479 = v266;
    v301 = v283;
    v493 = v302;
    v304 = v303;
    v508 = v303;
    v306 = v305;
    v579 = v307;
    v309 = v308;
    v485 = v308;
    sub_1A552388C(v295, v310, v311, v312, v313, v297, v299, v300, v379, v398, v413);
    sub_1A552388C(v309, v277, v279, v278, v575, v281, v301, v549, v296, v284, v306);
    sub_1A552391C(v570, v564, v556, v498, v541, v535, v502, v493, v304);
    v458 = v306;
    sub_1A552391C(v279, v278, v575, v281, v301, v549, v524, v284, v306);
    v489 = static BodyStructure.DispositionAndLanguage.__derived_struct_equals(_:_:)(v646, v647);
    sub_1A5524400(v279, v278, v575, v281, v301, v549, v524, v284, v306);
    sub_1A5524400(v570, v564, v556, v498, v541, v535, v502, v493, v508);
    sub_1A5524370(v485, v277, v279, v278, v575, v281, v301, v549, v524, v284, v306);
    sub_1A5524370(v579, v479, v570, v564, v556, v498, v541, v535, v502, v493, v508);
    OUTLINED_FUNCTION_20_10((uint64_t)v644);
    OUTLINED_FUNCTION_20_10((uint64_t)v643);
    OUTLINED_FUNCTION_20_10((uint64_t)v644);
    if (!v489)
      goto LABEL_216;
LABEL_184:
    OUTLINED_FUNCTION_20_10((uint64_t)v643);
    goto LABEL_185;
  }
  OUTLINED_FUNCTION_153_0(&v621, (const void *)((v35 & 0x3FFFFFFFFFFFFFFFLL) + 16));
  if (v39 != 1)
    goto LABEL_217;
  OUTLINED_FUNCTION_153_0(v616, (const void *)((v37 & 0x3FFFFFFFFFFFFFFFLL) + 16));
  v40 = v621 == v616[0] && v622 == v616[1];
  if (!v40 && (OUTLINED_FUNCTION_1_16() & 1) == 0)
    goto LABEL_217;
  OUTLINED_FUNCTION_194_0();
  v675[0] = v623;
  v675[1] = *(_OWORD *)v624;
  v676 = *(_DWORD *)&v624[16];
  v677 = v41;
  v678 = *(_BYTE *)(v42 + 2);
  OUTLINED_FUNCTION_51_3(v625);
  OUTLINED_FUNCTION_194_0();
  v43 = v619;
  LOBYTE(v44) = *(_BYTE *)(v44 + 2);
  v679[0] = v617;
  v679[1] = v618;
  *(_BYTE *)(v45 + 166) = v44;
  v681 = v46;
  v680 = v43;
  OUTLINED_FUNCTION_43_3((uint64_t)v616);
  OUTLINED_FUNCTION_2_20((uint64_t)v644);
  OUTLINED_FUNCTION_2_20((uint64_t)v643);
  OUTLINED_FUNCTION_2_20((uint64_t)v644);
  OUTLINED_FUNCTION_2_20((uint64_t)v643);
  sub_1A5692040((uint64_t)&v621);
  sub_1A5692040((uint64_t)v616);
  if ((static Envelope.__derived_struct_equals(_:_:)((uint64_t)v675, (uint64_t)v679) & 1) == 0)
    goto LABEL_214;
  sub_1A55DC3E0(v463, v615);
  OUTLINED_FUNCTION_83_1((uint64_t)v615);
  if (v34)
  {
    nullsub_1(v615);
    v48 = *v47;
    v49 = v47[1];
    v50 = v47[3];
    v458 = v47[2];
    v51 = v47[4];
    v52 = v47[5];
    v566 = v47[9];
    v531 = v47[11];
    v537 = v47[10];
    v520 = v47[13];
    v526 = v47[12];
    v448 = v47[14];
    v450 = v47[7];
    sub_1A55DC3E0(v461, v587);
    OUTLINED_FUNCTION_83_1((uint64_t)v587);
    if (!v34)
      goto LABEL_214;
    v544 = v50;
    v487 = v52;
    nullsub_1(v587);
    v33 = *(unint64_t **)v53;
    v54 = *(_QWORD *)(v53 + 8);
    v55 = *(_QWORD *)(v53 + 16);
    v500 = *(_QWORD *)(v53 + 48);
    v476 = *(_QWORD *)(v53 + 24);
    v483 = *(_QWORD *)(v53 + 56);
    v504 = *(_QWORD *)(v53 + 64);
    v510 = *(_QWORD *)(v53 + 72);
    v515 = *(_QWORD *)(v53 + 80);
    v551 = *(_QWORD *)(v53 + 32);
    v559 = *(_QWORD *)(v53 + 88);
    v466 = *(_QWORD *)(v53 + 40);
    v471 = *(_QWORD *)(v53 + 96);
    v491 = *(_QWORD *)(v53 + 112);
    v495 = *(_QWORD *)(v53 + 104);
    OUTLINED_FUNCTION_152_0((uint64_t)v463);
    OUTLINED_FUNCTION_152_0((uint64_t)v461);
    if ((sub_1A568E204(v48, v33) & 1) == 0)
      goto LABEL_207;
    v56 = v49 == v54 && v458 == v55;
    if (!v56 && (OUTLINED_FUNCTION_1_16() & 1) == 0)
      goto LABEL_207;
    if (!v51)
    {
      OUTLINED_FUNCTION_184_0();
      v59 = v50;
      v163 = v551;
      if (v551)
        goto LABEL_201;
      OUTLINED_FUNCTION_109_0((uint64_t)v461);
      v94 = (uint64_t)v463;
      goto LABEL_100;
    }
    OUTLINED_FUNCTION_184_0();
    v59 = v50;
    if (!v551)
    {
      v162 = v51;
      v163 = 0;
LABEL_201:
      v557 = v163;
      v592 = v59;
      v593 = v162;
      *(_QWORD *)&v594 = v49;
      *((_QWORD *)&v594 + 1) = v57;
      *(_QWORD *)&v595 = v450;
      *((_QWORD *)&v595 + 1) = v58;
      v596 = v566;
      v597.n128_u64[0] = v537;
      v597.n128_u64[1] = v531;
      v598 = v526;
      v599 = v520;
      v600 = v448;
      v601 = v476;
      v602 = v163;
      v603 = v466;
      v604 = v500;
      v605 = v483;
      v606 = v504;
      v607 = v510;
      v608 = v515;
      v609 = v559;
      v610 = v471;
      v611 = v495;
      v612 = v491;
      sub_1A5523A30(v59, v162, v49, v57, v450, v58, v566, v537, v531, v526, v520, v448);
      sub_1A5523A30(v476, v557, v466, v500, v483, v504, v510, v515, v559, v471, v495, v491);
      sub_1A5691E24((uint64_t)&v592);
      goto LABEL_207;
    }
    v60 = v448;
    v446 = v57;
    v61 = v450;
    v62 = v58;
    sub_1A5523A30(v50, v51, v49, v57, v450, v58, v566, v537, v531, v526, v520, v448);
    v63 = v466;
    sub_1A5523A30(v476, v551, v466, v500, v483, v504, v510, v515, v559, v471, v495, v491);
    sub_1A5690C88();
    if ((v64 & 1) != 0)
    {
      sub_1A5691350();
      if ((v72 & 1) != 0)
      {
        v80 = v62;
        if (v450 == 1)
        {
          v81 = v483;
          if (v483 != 1)
            goto LABEL_205;
          v82 = sub_1A5524514(v476, v551, v466, v500, 1, v504, v510, v515, v559, v471, v495, v491);
          v89 = OUTLINED_FUNCTION_140_0(v82, v83, v84, v85, v86, v87, v88, v537, v383, v402, v520, v448, v437, v439, v441, v443, v446, v448, v450,
                  (uint64_t)v454,
                  (uint64_t)v456,
                  v458,
                  (uint64_t)v461,
                  (uint64_t)v463,
                  v466,
                  v471,
                  v476,
                  1,
                  v487,
                  v491,
                  v495,
                  v500,
                  v504,
                  v510,
                  v515,
                  v520,
                  v526,
                  v531,
                  v537,
                  v50);
          sub_1A5524514(v89, v90, v91, v92, 1, v80, v566, v93, v384, v403, v417, v430);
          OUTLINED_FUNCTION_2_20((uint64_t)v461);
          v94 = (uint64_t)v463;
LABEL_100:
          sub_1A55DC438(v94, sub_1A55241F0);
          OUTLINED_FUNCTION_80_1();
          OUTLINED_FUNCTION_97_1();
          goto LABEL_137;
        }
        v81 = v483;
        if (v483 != 1)
        {
          v673[0] = v446;
          v673[1] = v450;
          v673[2] = v80;
          v673[3] = v566;
          v673[4] = v537;
          v673[5] = v531;
          v673[6] = v526;
          v673[7] = v520;
          v673[8] = v448;
          v674[0] = v500;
          v674[1] = v483;
          v674[2] = v504;
          v674[3] = v510;
          v674[4] = v515;
          v674[5] = v559;
          v674[6] = v471;
          v674[7] = v495;
          v674[8] = v491;
          sub_1A552391C(v446, v450, v80, v566, v537, v531, v526, v520, v448);
          v175 = OUTLINED_FUNCTION_104_0();
          sub_1A552391C(v175, v176, v177, v178, v179, v559, v471, v495, v387);
          v180 = v450;
          LODWORD(v441) = static BodyStructure.DispositionAndLanguage.__derived_struct_equals(_:_:)(v673, v674);
          v181 = OUTLINED_FUNCTION_104_0();
          sub_1A5524400(v181, v182, v183, v184, v185, v559, v471, v495, v388);
          sub_1A5524400(v446, v450, v80, v566, v537, v531, v526, v520, v448);
          v186 = sub_1A5524514(v476, v551, v466, v500, v483, v504, v510, v515, v559, v471, v495, v491);
          v194 = OUTLINED_FUNCTION_179_0(v186, v187, v188, v189, v190, v191, v192, v193, v531, v526, v520, v448, v437, v439, v441, v80, v446, v448, v450,
                   (uint64_t)v454,
                   (uint64_t)v456,
                   v51,
                   (uint64_t)v461,
                   (uint64_t)v463,
                   v466,
                   v471,
                   v476,
                   v483,
                   v487,
                   v491,
                   v495,
                   v500,
                   v504,
                   v510,
                   v515,
                   v520,
                   v526,
                   v531,
                   v537,
                   v544);
          OUTLINED_FUNCTION_114_0(v194, v195, v196, v197, v180, v198, v566, v199, v389, v405, v419, v432);
          OUTLINED_FUNCTION_2_20((uint64_t)v461);
          OUTLINED_FUNCTION_2_20((uint64_t)v463);
          OUTLINED_FUNCTION_80_1();
          OUTLINED_FUNCTION_97_1();
          if ((v441 & 1) == 0)
            goto LABEL_215;
LABEL_137:
          if (v641 != v620[23])
            goto LABEL_215;
          goto LABEL_138;
        }
LABEL_205:
        v592 = v446;
        v593 = v450;
        *(_QWORD *)&v594 = v80;
        *((_QWORD *)&v594 + 1) = v566;
        *(_QWORD *)&v595 = v537;
        *((_QWORD *)&v595 + 1) = v531;
        v596 = v526;
        v597.n128_u64[0] = v520;
        v597.n128_u64[1] = v448;
        v598 = v500;
        v599 = v81;
        v600 = v504;
        v601 = v510;
        v602 = v515;
        v603 = v559;
        v604 = v471;
        v605 = v495;
        v606 = v491;
        sub_1A552391C(v446, v450, v80, v566, v537, v531, v526, v520, v448);
        sub_1A552391C(v500, v81, v504, v510, v515, v559, v471, v495, v491);
        sub_1A5691EE4(&v592);
        v369 = sub_1A5524514(v476, v551, v466, v500, v81, v504, v510, v515, v559, v471, v495, v491);
        v363 = OUTLINED_FUNCTION_179_0(v369, v370, v371, v372, v373, v374, v375, v376, v531, v526, v520, v448, v437, v439, v441, v80, v446, v448, v450,
                 (uint64_t)v454,
                 (uint64_t)v456,
                 v51,
                 (uint64_t)v461,
                 (uint64_t)v463,
                 v466,
                 v471,
                 v476,
                 v483,
                 v487,
                 v491,
                 v495,
                 v500,
                 v504,
                 v510,
                 v515,
                 v520,
                 v526,
                 v531,
                 v537,
                 v50);
        v367 = v453;
LABEL_206:
        sub_1A5524514(v363, v364, v365, v366, v367, v368, v566, v542, v397, v412, v425, v436);
        goto LABEL_207;
      }
      v352 = OUTLINED_FUNCTION_105_0(v72, v73, v74, v75, v76, v77, v78, v79, v382, v401, v416, v429, v437, v439, v441, v443, v446, v448, v450,
               (uint64_t)v454,
               (uint64_t)v456,
               v458,
               (uint64_t)v461,
               (uint64_t)v463,
               v466,
               v471,
               v476);
      v354 = v469;
    }
    else
    {
      v352 = OUTLINED_FUNCTION_105_0(v64, v65, v66, v67, v68, v69, v70, v71, v382, v401, v416, v429, v437, v439, v441, v443, v446, v448, v450,
               (uint64_t)v454,
               (uint64_t)v456,
               v458,
               (uint64_t)v461,
               (uint64_t)v463,
               v466,
               v471,
               v476);
      v354 = v63;
    }
    v355 = sub_1A5524514(v352, v353, v354, v500, v483, v504, v510, v515, v395, v410, v424, v435);
    v363 = OUTLINED_FUNCTION_140_0(v355, v356, v357, v358, v359, v360, v361, v362, v396, v411, v520, v60, v438, v440, v442, v444, v447, v449, v452,
             v455,
             v457,
             v460,
             v462,
             v464,
             v469,
             v474,
             v481,
             v483,
             v487,
             v491,
             v495,
             v500,
             v504,
             v510,
             v515,
             v520,
             v526,
             v531,
             v537,
             v50);
    v367 = v61;
    v368 = v62;
    goto LABEL_206;
  }
  nullsub_1(v615);
  v134 = v133;
  sub_1A55DC3E0(v461, v614);
  OUTLINED_FUNCTION_83_1((uint64_t)v614);
  if (v135)
    goto LABEL_214;
  nullsub_1(v614);
  v137 = v136;
  v138 = *(_QWORD *)v134;
  v139 = *v136;
  v140 = *(_QWORD *)v134 >> 62;
  v141 = *v136 >> 62;
  if (!(_DWORD)v140)
  {
    if (v141)
      goto LABEL_214;
    v164 = *(_QWORD *)(v138 + 32);
    v165 = *(_QWORD *)(v138 + 40);
    v166 = *(_QWORD *)(v139 + 16);
    v167 = *(_QWORD *)(v139 + 24);
    v169 = *(_QWORD *)(v139 + 32);
    v168 = *(_QWORD *)(v139 + 40);
    v170 = *(_QWORD *)(v138 + 16) == v166 && *(_QWORD *)(v138 + 24) == v167;
    if (!v170 && (OUTLINED_FUNCTION_1_16() & 1) == 0)
      goto LABEL_214;
    v171 = v164 == v169 && v165 == v168;
    if (!v171 && (OUTLINED_FUNCTION_1_16() & 1) == 0)
      goto LABEL_214;
    goto LABEL_120;
  }
  if ((_DWORD)v140 != 1)
  {
    if (v141 != 2)
      goto LABEL_214;
    v172 = *(_QWORD *)(v138 + 32);
    v173 = *(_QWORD *)(v139 + 32);
    v174 = *(_QWORD *)(v138 + 16) == *(_QWORD *)(v139 + 16) && *(_QWORD *)(v138 + 24) == *(_QWORD *)(v139 + 24);
    if (!v174 && (OUTLINED_FUNCTION_1_16() & 1) == 0 || v172 != v173)
      goto LABEL_214;
LABEL_120:
    OUTLINED_FUNCTION_2_20((uint64_t)v463);
    OUTLINED_FUNCTION_2_20((uint64_t)v461);
LABEL_130:
    v206 = *(_OWORD *)(v134 + 32);
    v651 = *(_OWORD *)(v134 + 16);
    v652 = v206;
    v207 = *(_OWORD *)(v134 + 64);
    v653 = *(_OWORD *)(v134 + 48);
    v654 = v207;
    v208 = *((_OWORD *)v137 + 2);
    v657 = *((_OWORD *)v137 + 1);
    v658 = v208;
    v209 = *((_OWORD *)v137 + 4);
    v659 = *((_OWORD *)v137 + 3);
    v210 = *(_QWORD *)(v134 + 80);
    v650 = *(_QWORD *)(v134 + 8);
    v655 = v210;
    v211 = v137[1];
    v212 = v137[10];
    v660 = v209;
    v656 = v211;
    v661 = v212;
    if (!static BodyStructure.Fields.__derived_struct_equals(_:_:)(&v650, &v656))
      goto LABEL_207;
    v213 = *(_QWORD *)(v134 + 88);
    v214 = *(_QWORD *)(v134 + 96);
    v215 = *(_QWORD *)(v134 + 104);
    v216 = *(_QWORD *)(v134 + 112);
    v217 = *(_QWORD *)(v134 + 120);
    v218 = *(_QWORD *)(v134 + 128);
    v219 = *(_QWORD *)(v134 + 136);
    v220 = *(_QWORD *)(v134 + 144);
    v221 = *(_QWORD *)(v134 + 152);
    v222 = *(_QWORD *)(v134 + 160);
    v223 = *(_QWORD *)(v134 + 168);
    v225 = v137[11];
    v224 = v137[12];
    v227 = v137[13];
    v226 = v137[14];
    v229 = v137[15];
    v228 = v137[16];
    v231 = v137[17];
    v230 = v137[18];
    v233 = v137[19];
    v232 = v137[20];
    v234 = v137[21];
    if (v214 == 1)
    {
      if (v224 != 1)
        goto LABEL_197;
      OUTLINED_FUNCTION_2_20((uint64_t)v461);
      OUTLINED_FUNCTION_2_20((uint64_t)v463);
      OUTLINED_FUNCTION_80_1();
      OUTLINED_FUNCTION_97_1();
LABEL_136:
      v33 = v573;
      goto LABEL_137;
    }
    if (v224 != 1)
    {
      v648[0] = v213;
      v648[1] = v214;
      v648[2] = v215;
      v648[3] = v216;
      v648[4] = v217;
      v648[5] = v218;
      v648[6] = v219;
      v648[7] = v220;
      v648[8] = v221;
      v648[9] = v222;
      v648[10] = v223;
      v649[0] = v225;
      v649[1] = v224;
      v649[2] = v227;
      v649[3] = v226;
      v649[4] = v229;
      v649[5] = v228;
      v649[6] = v231;
      v649[7] = v230;
      v649[8] = v233;
      v649[9] = v232;
      v649[10] = v234;
      v561 = v220;
      v546 = v219;
      v553 = v213;
      v517 = v214;
      v522 = v215;
      v528 = v216;
      v533 = v217;
      v539 = v218;
      v501 = v222;
      v506 = v221;
      v497 = v223;
      sub_1A552388C(v213, v214, v215, v216, v217, v218, v219, v220, v221, v222, v223);
      v235 = OUTLINED_FUNCTION_46_3();
      sub_1A552388C(v235, v236, v237, v238, v239, v240, v241, v242, v390, v406, v420);
      v512 = static BodyStructure.Singlepart.Extension.__derived_struct_equals(_:_:)(v648, v649);
      v243 = OUTLINED_FUNCTION_46_3();
      sub_1A5524370(v243, v244, v245, v246, v247, v248, v249, v250, v391, v407, v421);
      sub_1A5524370(v553, v517, v522, v528, v533, v539, v546, v561, v506, v501, v497);
      OUTLINED_FUNCTION_2_20((uint64_t)v461);
      OUTLINED_FUNCTION_2_20((uint64_t)v463);
      OUTLINED_FUNCTION_80_1();
      OUTLINED_FUNCTION_97_1();
      if (!v512)
        goto LABEL_215;
      goto LABEL_136;
    }
LABEL_197:
    v583 = v137[12];
    v592 = v213;
    v593 = v214;
    *(_QWORD *)&v594 = v215;
    *((_QWORD *)&v594 + 1) = v216;
    *(_QWORD *)&v595 = v217;
    *((_QWORD *)&v595 + 1) = v218;
    v596 = v219;
    v597.n128_u64[0] = v220;
    v597.n128_u64[1] = v221;
    v598 = v222;
    v599 = v223;
    v600 = v225;
    v601 = v224;
    v602 = v227;
    v603 = v226;
    v604 = v229;
    v605 = v228;
    v606 = v231;
    v607 = v230;
    v608 = v233;
    v609 = v232;
    v610 = v234;
    v349 = v233;
    v350 = v232;
    v351 = v234;
    sub_1A552388C(v213, v214, v215, v216, v217, v218, v219, v220, v221, v222, v223);
    sub_1A552388C(v225, v583, v227, v226, v229, v228, v231, v230, v349, v350, v351);
    sub_1A5691F84((uint64_t)&v592);
LABEL_207:
    OUTLINED_FUNCTION_2_20((uint64_t)v461);
    OUTLINED_FUNCTION_2_20((uint64_t)v463);
    OUTLINED_FUNCTION_80_1();
    OUTLINED_FUNCTION_97_1();
    goto LABEL_215;
  }
  OUTLINED_FUNCTION_153_0(&v592, (const void *)((v138 & 0x3FFFFFFFFFFFFFFFLL) + 16));
  if (v141 != 1)
    goto LABEL_214;
  OUTLINED_FUNCTION_153_0(v587, (const void *)((v139 & 0x3FFFFFFFFFFFFFFFLL) + 16));
  v142 = v592 == v587[0] && v593 == v587[1];
  if (!v142 && (OUTLINED_FUNCTION_1_16() & 1) == 0)
    goto LABEL_214;
  OUTLINED_FUNCTION_194_0();
  v666[0] = v594;
  v666[1] = v595;
  v667 = v596;
  v668 = v143;
  v669 = *(_BYTE *)(v144 + 2);
  OUTLINED_FUNCTION_51_3(v597);
  OUTLINED_FUNCTION_194_0();
  v145 = v590;
  LOBYTE(v146) = *(_BYTE *)(v146 + 2);
  v670[0] = v588;
  v670[1] = v589;
  *(_BYTE *)(v147 + 166) = v146;
  v672 = v148;
  v671 = v145;
  OUTLINED_FUNCTION_43_3((uint64_t)v587);
  OUTLINED_FUNCTION_2_20((uint64_t)v463);
  OUTLINED_FUNCTION_2_20((uint64_t)v461);
  sub_1A5692040((uint64_t)&v592);
  sub_1A5692040((uint64_t)v587);
  if ((static Envelope.__derived_struct_equals(_:_:)((uint64_t)v666, (uint64_t)v670) & 1) == 0)
    goto LABEL_198;
  sub_1A55DC3E0(v456, v586);
  OUTLINED_FUNCTION_83_1((uint64_t)v586);
  if (v34)
  {
    nullsub_1(v586);
    v150 = *v149;
    v458 = v149[1];
    v151 = v149[2];
    v152 = v149[4];
    v527 = v149[3];
    v532 = v149[5];
    v538 = v149[6];
    v545 = v149[7];
    v153 = v149[10];
    v552 = v149[8];
    v560 = v149[9];
    v154 = v149[11];
    v155 = v149[12];
    v156 = v149[13];
    v521 = v149[14];
    sub_1A55DC3E0(v454, v585);
    OUTLINED_FUNCTION_83_1((uint64_t)v585);
    if (!v34)
      goto LABEL_198;
    v492 = v156;
    v496 = v155;
    v505 = v153;
    nullsub_1(v585);
    v158 = v157[1];
    v159 = v157[2];
    v160 = v157[4];
    v473 = v157[3];
    v478 = v157[5];
    v484 = v157[6];
    v488 = v157[7];
    v567 = v157[8];
    v511 = v157[9];
    v516 = v157[10];
    v468 = v157[11];
    v448 = v157[12];
    v450 = *v157;
    v443 = v157[14];
    v445 = v157[13];
    OUTLINED_FUNCTION_152_0((uint64_t)v456);
    OUTLINED_FUNCTION_152_0((uint64_t)v454);
    if ((sub_1A568E204(v150, v450) & 1) == 0)
      goto LABEL_211;
    v161 = v458 == v158 && v151 == v159;
    if (!v161 && (OUTLINED_FUNCTION_1_16() & 1) == 0)
      goto LABEL_211;
    if (v152)
    {
      if (v160)
      {
        v664[0] = v527;
        v664[1] = v152;
        v664[2] = v532;
        v664[3] = v538;
        v664[4] = v545;
        v664[5] = v552;
        v664[6] = v560;
        v441 = v152;
        v664[7] = v505;
        v664[8] = v154;
        v664[9] = v496;
        v664[10] = v492;
        v664[11] = v521;
        v665[0] = v473;
        v665[1] = v160;
        v665[2] = v478;
        v665[3] = v484;
        v665[4] = v488;
        v665[5] = v567;
        v439 = v160;
        v665[6] = v511;
        v665[7] = v516;
        v665[8] = v468;
        v665[9] = v448;
        v665[10] = v445;
        v665[11] = v443;
        sub_1A5523A30(v527, v152, v532, v538, v545, v552, v560, v505, v154, v496, v492, v521);
        sub_1A5523A30(v473, v160, v478, v484, v488, v567, v511, v516, v468, v448, v445, v443);
        LODWORD(v458) = static BodyStructure.Multipart.Extension.__derived_struct_equals(_:_:)(v664, v665);
        sub_1A5524514(v473, v160, v478, v484, v488, v567, v511, v516, v468, v448, v445, v443);
        sub_1A5524514(v527, v152, v532, v538, v545, v552, v560, v505, v154, v496, v492, v521);
        OUTLINED_FUNCTION_2_20((uint64_t)v454);
        OUTLINED_FUNCTION_2_20((uint64_t)v456);
        OUTLINED_FUNCTION_107_0();
        OUTLINED_FUNCTION_101_1();
        if ((v458 & 1) != 0)
          goto LABEL_129;
        v378 = (uint64_t)v461;
      }
      else
      {
        v204 = 0;
LABEL_210:
        v584[0] = v527;
        v584[1] = v152;
        v584[2] = v532;
        v584[3] = v538;
        v584[4] = v545;
        v584[5] = v552;
        v584[6] = v560;
        v584[7] = v505;
        v584[8] = v154;
        v584[9] = v496;
        v584[10] = v492;
        v584[11] = v521;
        v584[12] = v473;
        v584[13] = v204;
        v584[14] = v478;
        v584[15] = v484;
        v584[16] = v488;
        v584[17] = v567;
        v584[18] = v511;
        v584[19] = v516;
        v584[20] = v468;
        v584[21] = v448;
        v584[22] = v445;
        v584[23] = v443;
        sub_1A5523A30(v527, v152, v532, v538, v545, v552, v560, v505, v154, v496, v492, v521);
        sub_1A5523A30(v473, v204, v478, v484, v488, v567, v511, v516, v468, v448, v445, v443);
        sub_1A5691E24((uint64_t)v584);
LABEL_211:
        OUTLINED_FUNCTION_2_20((uint64_t)v454);
        OUTLINED_FUNCTION_2_20((uint64_t)v456);
        OUTLINED_FUNCTION_107_0();
        OUTLINED_FUNCTION_101_1();
        v378 = (uint64_t)v461;
      }
      sub_1A55DC438(v378, sub_1A55241F0);
      v377 = (uint64_t)v463;
      goto LABEL_213;
    }
    v204 = v160;
    if (v160)
      goto LABEL_210;
    OUTLINED_FUNCTION_2_20((uint64_t)v454);
    OUTLINED_FUNCTION_2_20((uint64_t)v456);
    OUTLINED_FUNCTION_107_0();
    OUTLINED_FUNCTION_101_1();
LABEL_129:
    v205 = (uint64_t)v461;
    if (v613 != v591[23])
      goto LABEL_208;
    goto LABEL_130;
  }
  nullsub_1(v586);
  memcpy(__dst, v200, sizeof(__dst));
  sub_1A55DC3E0(v454, v584);
  OUTLINED_FUNCTION_83_1((uint64_t)v584);
  if (!v201)
  {
    nullsub_1(v584);
    memcpy(v663, v202, sizeof(v663));
    OUTLINED_FUNCTION_2_20((uint64_t)v456);
    OUTLINED_FUNCTION_2_20((uint64_t)v454);
    v203 = static BodyStructure.Singlepart.__derived_struct_equals(_:_:)();
    OUTLINED_FUNCTION_20_10((uint64_t)v454);
    OUTLINED_FUNCTION_20_10((uint64_t)v456);
    OUTLINED_FUNCTION_107_0();
    OUTLINED_FUNCTION_101_1();
    if (!v203)
      goto LABEL_199;
    goto LABEL_129;
  }
LABEL_198:
  OUTLINED_FUNCTION_107_0();
  OUTLINED_FUNCTION_101_1();
LABEL_199:
  v205 = (uint64_t)v461;
LABEL_208:
  OUTLINED_FUNCTION_2_20(v205);
  v377 = (uint64_t)v463;
LABEL_213:
  sub_1A55DC438(v377, sub_1A55241F0);
LABEL_214:
  OUTLINED_FUNCTION_80_1();
  OUTLINED_FUNCTION_97_1();
LABEL_215:
  OUTLINED_FUNCTION_2_20((uint64_t)v644);
  OUTLINED_FUNCTION_2_20((uint64_t)v643);
  OUTLINED_FUNCTION_2_20((uint64_t)v644);
LABEL_216:
  sub_1A55DC438((uint64_t)v643, sub_1A55241F0);
LABEL_217:
  OUTLINED_FUNCTION_1_3();
}

void sub_1A56900DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  size_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  BOOL v18;
  int v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  OUTLINED_FUNCTION_144_0();
  v2 = *(_QWORD *)(v0 + 16);
  if (v2 != *(_QWORD *)(v1 + 16) || !v2 || v0 == v1)
  {
LABEL_31:
    OUTLINED_FUNCTION_22_10();
    return;
  }
  v3 = (char *)(v1 + 55);
  v4 = (_BYTE *)(v0 + 55);
  while (1)
  {
    v5 = *(_QWORD *)(v4 - 23);
    v6 = *(_QWORD *)(v3 - 23);
    v7 = *v3;
    if ((*v4 & 1) != 0)
    {
      if (v5 != v6)
        v7 = 0;
      if ((v7 & 1) == 0)
        goto LABEL_31;
      goto LABEL_28;
    }
    if ((*v3 & 1) != 0)
      goto LABEL_31;
    v8 = *(_QWORD *)(v4 - 15);
    v9 = *(unsigned int *)(v4 - 7) | ((unint64_t)(*(unsigned __int16 *)(v4 - 3) | (*(v4 - 1) << 16)) << 32);
    v10 = *(_QWORD *)(v3 - 15);
    v11 = *(unsigned __int16 *)(v3 - 3) | (*(v3 - 1) << 16);
    v12 = *(unsigned int *)(v3 - 7);
    v13 = v12 | (v11 << 32);
    if (!v5)
    {
      if (v6)
      {
LABEL_30:
        v21 = *(_QWORD *)(v3 - 15);
        OUTLINED_FUNCTION_163_0(*(_QWORD *)(v4 - 23), *(_QWORD *)(v4 - 15), v9);
        OUTLINED_FUNCTION_163_0(v6, v21, v13);
        OUTLINED_FUNCTION_17_4();
        OUTLINED_FUNCTION_23();
        goto LABEL_31;
      }
      OUTLINED_FUNCTION_163_0(0, v10, v12 | (v11 << 32));
      goto LABEL_28;
    }
    if (!v6)
      goto LABEL_30;
    v14 = (HIDWORD(v8) - v8);
    if (HIDWORD(v8) < v8)
      break;
    if (HIDWORD(v10) < v10)
      goto LABEL_33;
    if ((_DWORD)v14 != HIDWORD(v10) - (_DWORD)v10)
      goto LABEL_31;
    v15 = HIDWORD(v9) & 0xFFFFFF;
    v16 = BYTE6(v9);
    if (*(_DWORD *)(v4 - 7) != (_DWORD)v12
      || (*(unsigned __int16 *)(v4 - 3) == WORD2(v13) ? (v17 = BYTE6(v9) == BYTE6(v13)) : (v17 = 0),
          v17 ? (v18 = v5 == v6) : (v18 = 0),
          !v18))
    {
      v22 = HIDWORD(v13) & 0xFFFFFF;
      v23 = *(_QWORD *)(v3 - 15);
      OUTLINED_FUNCTION_4_2();
      LODWORD(v13) = v19;
      swift_beginAccess();
      v20 = (const void *)(*(_QWORD *)(v5 + 24)
                         + (v16 & 0xFFFFFFFFFF0000FFLL | ((unint64_t)(unsigned __int16)v15 << 8))
                         + v13);
      OUTLINED_FUNCTION_176();
      if (memcmp(v20, (const void *)(*(_QWORD *)(v6 + 24)+ (BYTE6(v13) | ((unint64_t)(unsigned __int16)v22 << 8))+ v23), v14))
      {
        goto LABEL_31;
      }
    }
LABEL_28:
    v3 += 24;
    v4 += 24;
    if (!--v2)
      goto LABEL_31;
  }
  __break(1u);
LABEL_33:
  __break(1u);
}

void sub_1A5690284()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  size_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  BOOL v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  char v25;
  char v26;
  char v27;
  const void *v28;
  const void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_146_0();
  if (!v18 || !v2 || v0 == v1)
  {
LABEL_42:
    OUTLINED_FUNCTION_20_0();
    return;
  }
  v3 = 0;
  v30 = v0;
  v31 = v1;
  while (1)
  {
    v4 = v0 + v3;
    v6 = *(unsigned int *)(v0 + v3 + 40);
    v5 = *(_DWORD *)(v0 + v3 + 44);
    v7 = v5 - v6;
    if (v5 < v6)
      break;
    v8 = v1 + v3;
    v10 = *(unsigned int *)(v1 + v3 + 40);
    v9 = *(_DWORD *)(v1 + v3 + 44);
    v11 = v9 >= v10;
    v12 = v9 - v10;
    if (!v11)
      goto LABEL_44;
    if ((_DWORD)v7 != v12)
      goto LABEL_42;
    v34 = v3;
    v35 = v2;
    v13 = *(_QWORD *)(v4 + 32);
    v14 = *(unsigned __int16 *)(v4 + 52);
    v15 = *(unsigned __int8 *)(v4 + 54);
    v33 = *(_QWORD *)(v4 + 56);
    v38 = *(_QWORD *)(v4 + 64);
    v16 = *(unsigned __int16 *)(v8 + 52);
    v17 = *(unsigned __int8 *)(v8 + 54);
    v32 = *(_QWORD *)(v8 + 56);
    v18 = *(_DWORD *)(v4 + 48) == *(_DWORD *)(v8 + 48) && (_DWORD)v14 == (_DWORD)v16;
    v19 = v18 && (_DWORD)v15 == (_DWORD)v17;
    v39 = *(_QWORD *)(v8 + 32);
    v20 = v19 && v13 == *(_QWORD *)(v8 + 32);
    v36 = *(_QWORD *)(v8 + 88);
    v37 = *(_QWORD *)(v8 + 64);
    if (v20)
    {
      swift_retain();
      OUTLINED_FUNCTION_12_1();
      swift_retain();
      OUTLINED_FUNCTION_87();
      v22 = v38;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      OUTLINED_FUNCTION_17_0();
      OUTLINED_FUNCTION_155();
      OUTLINED_FUNCTION_198_0();
      v23 = v37;
      OUTLINED_FUNCTION_42();
      v21 = v36;
      if (v38)
        goto LABEL_22;
    }
    else
    {
      OUTLINED_FUNCTION_176();
      v29 = (const void *)(*(_QWORD *)(v13 + 24) + (v15 | (v14 << 8)) + v6);
      OUTLINED_FUNCTION_176();
      v28 = (const void *)(*(_QWORD *)(v39 + 24) + (v17 | (v16 << 8)) + v10);
      swift_retain();
      OUTLINED_FUNCTION_12_1();
      v21 = v36;
      OUTLINED_FUNCTION_12_1();
      swift_retain();
      OUTLINED_FUNCTION_42();
      OUTLINED_FUNCTION_17_0();
      OUTLINED_FUNCTION_0_10();
      OUTLINED_FUNCTION_198_0();
      OUTLINED_FUNCTION_1_2();
      OUTLINED_FUNCTION_82();
      v22 = v38;
      v23 = v37;
      if (memcmp(v29, v28, v7))
      {
        OUTLINED_FUNCTION_40();
        OUTLINED_FUNCTION_17_4();
        OUTLINED_FUNCTION_23();
        OUTLINED_FUNCTION_72();
        OUTLINED_FUNCTION_5_1();
        OUTLINED_FUNCTION_15_1();
        OUTLINED_FUNCTION_36();
        OUTLINED_FUNCTION_151_0();
        OUTLINED_FUNCTION_38();
        goto LABEL_41;
      }
      if (v38)
      {
LABEL_22:
        if (!v23)
        {
          OUTLINED_FUNCTION_40();
          OUTLINED_FUNCTION_17_4();
          OUTLINED_FUNCTION_5_1();
          OUTLINED_FUNCTION_15_1();
          OUTLINED_FUNCTION_36();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_108_0();
LABEL_37:
          OUTLINED_FUNCTION_151_0();
          OUTLINED_FUNCTION_72();
LABEL_41:
          swift_release();
          goto LABEL_42;
        }
        v24 = v33 == v32 && v22 == v23;
        if (!v24 && (OUTLINED_FUNCTION_1_16() & 1) == 0)
        {
          OUTLINED_FUNCTION_40();
          OUTLINED_FUNCTION_17_4();
          OUTLINED_FUNCTION_72();
          OUTLINED_FUNCTION_5_1();
          OUTLINED_FUNCTION_15_1();
          OUTLINED_FUNCTION_36();
          OUTLINED_FUNCTION_38();
          OUTLINED_FUNCTION_108_0();
          goto LABEL_40;
        }
        goto LABEL_31;
      }
    }
    if (v23)
    {
      OUTLINED_FUNCTION_40();
      OUTLINED_FUNCTION_17_4();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_5_1();
      OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_36();
      OUTLINED_FUNCTION_108_0();
      OUTLINED_FUNCTION_38();
LABEL_40:
      OUTLINED_FUNCTION_151_0();
      goto LABEL_41;
    }
LABEL_31:
    sub_1A5690DA8();
    if ((v25 & 1) == 0)
    {
      OUTLINED_FUNCTION_40();
      OUTLINED_FUNCTION_17_4();
      OUTLINED_FUNCTION_5_1();
      OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_36();
      OUTLINED_FUNCTION_108_0();
      OUTLINED_FUNCTION_38();
      goto LABEL_37;
    }
    sub_1A569164C(v17, v21);
    v27 = v26;
    swift_release();
    OUTLINED_FUNCTION_17_4();
    OUTLINED_FUNCTION_5_1();
    OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_36();
    OUTLINED_FUNCTION_108_0();
    OUTLINED_FUNCTION_38();
    OUTLINED_FUNCTION_151_0();
    OUTLINED_FUNCTION_72();
    OUTLINED_FUNCTION_23();
    if ((v27 & 1) != 0)
    {
      v3 = v34 + 64;
      v2 = v35 - 1;
      v0 = v30;
      v1 = v31;
      if (v35 != 1)
        continue;
    }
    goto LABEL_42;
  }
  __break(1u);
LABEL_44:
  __break(1u);
}

void sub_1A56905E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16) && v2 && a1 != a2)
  {
    v3 = (_QWORD *)(a1 + 40);
    v4 = (uint64_t *)(a2 + 40);
    do
    {
      v5 = *v4;
      if (*v3)
      {
        if (!v5)
          break;
        v6 = sub_1A594B4B4();
        v8 = v7;
        if (v6 == sub_1A594B4B4() && v8 == v9)
        {
          OUTLINED_FUNCTION_27();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_94_1();
        }
        else
        {
          v11 = OUTLINED_FUNCTION_1_16();
          OUTLINED_FUNCTION_27();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_9_2();
          OUTLINED_FUNCTION_55();
          if ((v11 & 1) == 0)
            break;
        }
      }
      else if (v5)
      {
        break;
      }
      v3 += 2;
      v4 += 2;
      --v2;
    }
    while (v2);
  }
  OUTLINED_FUNCTION_15_3();
}

void sub_1A56906D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned int *v3;
  unsigned int *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  OUTLINED_FUNCTION_70_1();
  OUTLINED_FUNCTION_15_12();
  if (v14 && v0 && v1 != v2)
  {
    v3 = (unsigned int *)(v2 + 64);
    v4 = (unsigned int *)(v1 + 64);
    do
    {
      v6 = *((_QWORD *)v4 - 2);
      v5 = *((_QWORD *)v4 - 1);
      v7 = *((unsigned __int8 *)v4 + 6);
      v8 = *((unsigned __int16 *)v4 + 2);
      v9 = *v4;
      v11 = *((_QWORD *)v3 - 2);
      v10 = *((_QWORD *)v3 - 1);
      v12 = *((unsigned __int8 *)v3 + 6);
      v13 = *((unsigned __int16 *)v3 + 2);
      v14 = *((_QWORD *)v4 - 4) == *((_QWORD *)v3 - 4) && *((_QWORD *)v4 - 3) == *((_QWORD *)v3 - 3);
      v15 = *v3;
      if (!v14)
      {
        v16 = *((_QWORD *)v3 - 1);
        v17 = *((_QWORD *)v4 - 1);
        v29 = *((_QWORD *)v4 - 2);
        v30 = v0;
        v28 = *((_QWORD *)v3 - 2);
        v18 = *v3;
        v19 = *((unsigned __int8 *)v3 + 6);
        v20 = *((unsigned __int16 *)v3 + 2);
        v21 = sub_1A594CD38();
        v13 = v20;
        v12 = v19;
        v15 = v18;
        v11 = v28;
        v6 = v29;
        v0 = v30;
        v5 = v17;
        v10 = v16;
        if ((v21 & 1) == 0)
          break;
      }
      if (v6)
      {
        if (!v11)
          break;
        if (HIDWORD(v5) < v5)
        {
          __break(1u);
LABEL_30:
          __break(1u);
          return;
        }
        if (HIDWORD(v10) < v10)
          goto LABEL_30;
        if (HIDWORD(v5) - (_DWORD)v5 != HIDWORD(v10) - (_DWORD)v10)
          break;
        v22 = v9 | ((unint64_t)(v8 | (v7 << 16)) << 32);
        v23 = v15 | ((unint64_t)(v13 | (v12 << 16)) << 32);
        v24 = HIDWORD(v23) & 0xFFFFFF;
        v25 = BYTE6(v23);
        if ((_DWORD)v22 != (_DWORD)v15
          || (WORD2(v22) == WORD2(v23) ? (v26 = BYTE6(v22) == BYTE6(v23)) : (v26 = 0),
              v26 ? (v27 = v6 == v11) : (v27 = 0),
              !v27))
        {
          OUTLINED_FUNCTION_4_2();
          swift_beginAccess();
          OUTLINED_FUNCTION_176();
          if (OUTLINED_FUNCTION_134_0(*(_QWORD *)(v11 + 24)+ (v25 & 0xFFFFFFFFFF0000FFLL | ((unint64_t)(unsigned __int16)v24 << 8))))break;
        }
      }
      else if (v11)
      {
        break;
      }
      v3 += 10;
      v4 += 10;
      --v0;
    }
    while (v0);
  }
  OUTLINED_FUNCTION_8_9();
}

void sub_1A569085C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  size_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  BOOL v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  BOOL v22;
  const void *v23;
  const void *v24;
  size_t v25;
  int v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  BOOL v34;
  const void *v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  int v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_146_0();
  if (!v20 || !v2 || v0 == v1)
  {
LABEL_47:
    OUTLINED_FUNCTION_20_0();
    return;
  }
  v3 = 0;
  v37 = v0;
  v38 = v1;
  while (1)
  {
    v4 = v0 + v3;
    v6 = *(unsigned int *)(v0 + v3 + 40);
    v5 = *(_DWORD *)(v0 + v3 + 44);
    v7 = v5 - v6;
    if (v5 < v6)
      break;
    v8 = v1 + v3;
    v10 = *(unsigned int *)(v1 + v3 + 40);
    v9 = *(_DWORD *)(v1 + v3 + 44);
    v11 = v9 >= v10;
    v12 = v9 - v10;
    if (!v11)
      goto LABEL_49;
    if ((_DWORD)v7 != v12)
      goto LABEL_47;
    v47 = v3;
    v48 = v2;
    v13 = *(_QWORD *)(v4 + 32);
    v14 = *(unsigned __int16 *)(v4 + 52);
    v15 = *(unsigned __int8 *)(v4 + 54);
    v45 = *(_QWORD *)(v4 + 64);
    v43 = *(unsigned __int8 *)(v4 + 78);
    v42 = *(unsigned __int16 *)(v4 + 76);
    v44 = *(unsigned int *)(v4 + 72);
    v16 = *(_QWORD *)(v8 + 32);
    v17 = *(unsigned __int16 *)(v8 + 52);
    v18 = *(unsigned __int8 *)(v8 + 54);
    v19 = *(_QWORD *)(v8 + 56);
    v46 = *(_QWORD *)(v8 + 64);
    v40 = *(unsigned __int16 *)(v8 + 76);
    v41 = *(unsigned __int8 *)(v8 + 78);
    v20 = *(_DWORD *)(v4 + 48) == *(_DWORD *)(v8 + 48) && (_DWORD)v14 == (_DWORD)v17;
    v22 = v20 && (_DWORD)v15 == (_DWORD)v18 && v13 == v16;
    v39 = *(unsigned int *)(v8 + 72);
    if (v22)
    {
      OUTLINED_FUNCTION_17_0();
      OUTLINED_FUNCTION_87();
      OUTLINED_FUNCTION_177_0();
      if (!v15)
        goto LABEL_38;
    }
    else
    {
      OUTLINED_FUNCTION_176();
      v23 = (const void *)(*(_QWORD *)(v13 + 24) + (v15 | (v14 << 8)) + v6);
      OUTLINED_FUNCTION_176();
      v24 = (const void *)(*(_QWORD *)(v16 + 24) + (v18 | (v17 << 8)) + v10);
      OUTLINED_FUNCTION_17_0();
      OUTLINED_FUNCTION_0_10();
      OUTLINED_FUNCTION_177_0();
      swift_retain();
      if (memcmp(v23, v24, v7))
        goto LABEL_44;
      if (!v15)
      {
LABEL_38:
        if (v19)
        {
LABEL_45:
          OUTLINED_FUNCTION_4_4();
          OUTLINED_FUNCTION_48();
          OUTLINED_FUNCTION_23();
          goto LABEL_46;
        }
        OUTLINED_FUNCTION_4_4();
        goto LABEL_40;
      }
    }
    if (!v19)
      goto LABEL_45;
    v25 = (HIDWORD(v45) - v45);
    if (HIDWORD(v45) < v45)
      goto LABEL_50;
    OUTLINED_FUNCTION_138_0();
    if (!v11)
      goto LABEL_51;
    if ((_DWORD)v25 != v26)
    {
LABEL_44:
      swift_release();
      OUTLINED_FUNCTION_4_4();
      OUTLINED_FUNCTION_23();
LABEL_46:
      swift_release();
      goto LABEL_47;
    }
    v27 = v44 | ((unint64_t)(v42 | (v43 << 16)) << 32);
    v28 = v39 | ((unint64_t)(v40 | (v41 << 16)) << 32);
    v29 = BYTE6(v27);
    v30 = HIDWORD(v27) & 0xFFFFFF;
    v31 = HIDWORD(v28) & 0xFFFFFF;
    v32 = BYTE6(v28);
    if ((_DWORD)v44 != (_DWORD)v39
      || (WORD2(v27) == WORD2(v28) ? (v33 = BYTE6(v27) == BYTE6(v28)) : (v33 = 0),
          v33 ? (v34 = v15 == v19) : (v34 = 0),
          !v34))
    {
      OUTLINED_FUNCTION_176();
      v35 = (const void *)(*(_QWORD *)(v15 + 24)
                         + (v29 & 0xFFFFFFFFFF0000FFLL | ((unint64_t)(unsigned __int16)v30 << 8))
                         + v45);
      OUTLINED_FUNCTION_176();
      v36 = memcmp(v35, (const void *)(*(_QWORD *)(v19 + 24)+ (v32 & 0xFFFFFFFFFF0000FFLL | ((unint64_t)(unsigned __int16)v31 << 8))+ v46), v25);
      swift_release();
      OUTLINED_FUNCTION_4_4();
      OUTLINED_FUNCTION_23();
      OUTLINED_FUNCTION_48();
      if (v36)
        goto LABEL_47;
      goto LABEL_42;
    }
    OUTLINED_FUNCTION_4_4();
    OUTLINED_FUNCTION_149_0();
LABEL_40:
    OUTLINED_FUNCTION_48();
LABEL_42:
    v3 = v47 + 48;
    v2 = v48 - 1;
    v0 = v37;
    v1 = v38;
    if (v48 == 1)
      goto LABEL_47;
  }
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
}

uint64_t sub_1A5690B04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  uint64_t v5;
  uint64_t result;
  int v7;
  int v8;
  int v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return OUTLINED_FUNCTION_53();
  if (!v2 || a1 == a2)
    return OUTLINED_FUNCTION_56();
  if (*(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(a2 + 32))
    return OUTLINED_FUNCTION_53();
  v3 = (unsigned __int8 *)(a1 + 33);
  v4 = (unsigned __int8 *)(a2 + 33);
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v8 = *v3++;
    v7 = v8;
    v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

void sub_1A5690B68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  char v14;

  OUTLINED_FUNCTION_91_0();
  if (v13 && v0 && v1 != v2)
  {
    v4 = v3;
    v5 = (uint64_t *)(v1 + 40);
    v6 = (uint64_t *)(v2 + 40);
    do
    {
      v7 = *(v6 - 1);
      v8 = *v6;
      v9 = v4(*(v5 - 1), *v5);
      v11 = v10;
      v13 = v9 == v4(v7, v8) && v11 == v12;
      if (v13)
      {
        OUTLINED_FUNCTION_94_1();
      }
      else
      {
        v14 = OUTLINED_FUNCTION_1_16();
        OUTLINED_FUNCTION_9_2();
        OUTLINED_FUNCTION_55();
        if ((v14 & 1) == 0)
          break;
      }
      v5 += 2;
      v6 += 2;
      --v0;
    }
    while (v0);
  }
  OUTLINED_FUNCTION_15_3();
}

uint64_t sub_1A5690C24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  int *v4;
  uint64_t v5;
  uint64_t result;
  int v7;
  int v8;
  int v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return OUTLINED_FUNCTION_53();
  if (!v2 || a1 == a2)
    return OUTLINED_FUNCTION_56();
  if (*(_DWORD *)(a2 + 32) != *(_DWORD *)(a1 + 32))
    return OUTLINED_FUNCTION_53();
  v3 = (int *)(a1 + 36);
  v4 = (int *)(a2 + 36);
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v8 = *v4++;
    v7 = v8;
    v9 = *v3++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

void sub_1A5690C88()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *i;
  uint64_t v7;

  OUTLINED_FUNCTION_21_10();
  OUTLINED_FUNCTION_40_4();
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_11_1();
  OUTLINED_FUNCTION_1_2();
  v5 = 0;
  for (i = (uint64_t *)(v1 + 40); ; i += 2)
  {
    if (v5 == v0)
    {
      OUTLINED_FUNCTION_170_0();
      if (!v4)
        goto LABEL_21;
      goto LABEL_8;
    }
    if (v5 >= v0)
      break;
    OUTLINED_FUNCTION_139_0();
    if (!v4)
    {
      if (v1)
      {
LABEL_19:
        OUTLINED_FUNCTION_4_4();
        OUTLINED_FUNCTION_25_4();
        OUTLINED_FUNCTION_34_4();
        OUTLINED_FUNCTION_84_1();
      }
      else
      {
        v2 = 0;
LABEL_21:
        OUTLINED_FUNCTION_4_4();
        OUTLINED_FUNCTION_25_4();
        OUTLINED_FUNCTION_34_4();
        OUTLINED_FUNCTION_84_1();
        if (!v2)
        {
LABEL_23:
          OUTLINED_FUNCTION_3_18();
          return;
        }
      }
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
    ++v5;
LABEL_8:
    v7 = *(i - 1);
    v2 = *i;
    OUTLINED_FUNCTION_42();
    if (!v1)
      goto LABEL_21;
    if (!v2)
      goto LABEL_19;
    if (v3 == v7 && v1 == v2)
    {
      OUTLINED_FUNCTION_72();
      OUTLINED_FUNCTION_38();
    }
    else
    {
      v3 = OUTLINED_FUNCTION_1_16();
      OUTLINED_FUNCTION_72();
      OUTLINED_FUNCTION_38();
      if ((v3 & 1) == 0)
      {
        OUTLINED_FUNCTION_4_4();
        OUTLINED_FUNCTION_25_4();
        OUTLINED_FUNCTION_34_4();
        OUTLINED_FUNCTION_84_1();
        goto LABEL_23;
      }
    }
    --v4;
  }
  __break(1u);
}

void sub_1A5690DA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  BOOL v14;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  OUTLINED_FUNCTION_33_4();
  v25 = v1;
  OUTLINED_FUNCTION_155();
  v26 = v0;
  OUTLINED_FUNCTION_17_0();
  v29 = v2;
  OUTLINED_FUNCTION_11_1();
  v7 = 0;
  v8 = 0;
  while (1)
  {
    if (v8 == v30)
    {
      v9 = 0;
      if (!v3)
        goto LABEL_28;
      OUTLINED_FUNCTION_135_0();
    }
    else
    {
      if (v8 >= v30)
        goto LABEL_39;
      OUTLINED_FUNCTION_39_4();
      if (!v3)
      {
        if (v0)
        {
LABEL_33:
          OUTLINED_FUNCTION_87_1();
          OUTLINED_FUNCTION_34_4();
          OUTLINED_FUNCTION_54_1();
          OUTLINED_FUNCTION_25_4();
          goto LABEL_35;
        }
        v9 = 0;
LABEL_28:
        OUTLINED_FUNCTION_87_1();
        OUTLINED_FUNCTION_34_4();
        OUTLINED_FUNCTION_54_1();
        OUTLINED_FUNCTION_25_4();
        if (v9)
          goto LABEL_35;
        goto LABEL_36;
      }
    }
    v10 = OUTLINED_FUNCTION_24_4();
    if (!v4)
    {
      v9 = v10;
      goto LABEL_28;
    }
    if (!v10)
      goto LABEL_33;
    OUTLINED_FUNCTION_129_0();
    if (!v13)
      break;
    if (v7 < v34)
      goto LABEL_38;
    if ((_DWORD)v3 != v7 - (_DWORD)v34)
    {
      OUTLINED_FUNCTION_54_1();
      OUTLINED_FUNCTION_25_4();
      OUTLINED_FUNCTION_23();
LABEL_34:
      swift_release();
      OUTLINED_FUNCTION_87_1();
LABEL_35:
      swift_release();
LABEL_36:
      OUTLINED_FUNCTION_63();
      return;
    }
    v14 = v6 == (_DWORD)v0;
    v6 = v33;
    v8 = v1;
    v14 = v14 && (_DWORD)v33 == (_DWORD)v1;
    v1 = HIDWORD(v33);
    if (v14 && HIDWORD(v33) == v5 && v11 == v12)
    {
      OUTLINED_FUNCTION_149_0();
    }
    else
    {
      v0 = v12;
      v7 = v11;
      OUTLINED_FUNCTION_176();
      v17 = OUTLINED_FUNCTION_176();
      v4 = OUTLINED_FUNCTION_56_4(v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34);
      OUTLINED_FUNCTION_23();
      OUTLINED_FUNCTION_4_4();
      if ((_DWORD)v4)
      {
        OUTLINED_FUNCTION_54_1();
        goto LABEL_34;
      }
    }
    OUTLINED_FUNCTION_169_0();
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

void sub_1A5690F6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int v46;
  unint64_t v47;
  unint64_t v48;
  unsigned __int8 v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned __int8 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;

  OUTLINED_FUNCTION_70_1();
  a29 = v30;
  a30 = v31;
  v33 = v32;
  v34 = 0;
  v36 = *(_QWORD *)(v35 + 16);
  OUTLINED_FUNCTION_164_0();
  v60 = v40 + 32;
  v61 = v39;
  v62 = v41;
  v42 = 4 * v41;
  v43 = (v39 >> 59) & 1;
  if ((v37 & 0x1000000000000000) == 0)
    LOBYTE(v43) = 1;
  v44 = 4 << v43;
  v56 = (v37 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v57 = v37 & 0xFFFFFFFFFFFFFFLL;
  v45 = 15;
  v58 = 4 << v43;
  v59 = v42;
  while (1)
  {
    if (v34 == v36)
    {
      v46 = 0;
      v47 = v36;
      goto LABEL_8;
    }
    if (v34 >= v36)
      break;
    v46 = *(unsigned __int8 *)(v60 + v34);
    v47 = v34 + 1;
LABEL_8:
    v48 = v45 >> 14;
    if (v45 >> 14 == v42)
    {
      v49 = 0;
    }
    else
    {
      v50 = v45;
      if ((v45 & 0xC) == v44)
      {
        v50 = OUTLINED_FUNCTION_125_0(v45, v61);
        v44 = v58;
        v38 = v61;
      }
      v51 = v50 >> 16;
      if (v50 >> 16 >= v62)
        goto LABEL_32;
      if ((v33 & 0x1000000000000000) != 0)
      {
        v54 = sub_1A594B670();
        v44 = v58;
        v38 = v61;
        v49 = v54;
      }
      else if ((v33 & 0x2000000000000000) != 0)
      {
        a17 = v38;
        a18 = v57;
        v49 = *((_BYTE *)&a17 + v51);
      }
      else
      {
        v52 = v56;
        if ((v38 & 0x1000000000000000) == 0)
        {
          v52 = sub_1A594C7D4();
          v44 = v58;
          v38 = v61;
        }
        v49 = *(_BYTE *)(v52 + v51);
      }
      if ((v45 & 0xC) == v44)
      {
        v55 = OUTLINED_FUNCTION_125_0(v45, v61);
        v44 = v58;
        v38 = v61;
        v45 = v55;
      }
      v42 = v59;
      if ((v33 & 0x1000000000000000) != 0)
      {
        if (v62 <= v45 >> 16)
          goto LABEL_33;
        v53 = sub_1A594B64C();
        v44 = v58;
        v38 = v61;
        v45 = v53;
      }
      else
      {
        v45 = (v45 & 0xFFFFFFFFFFFF0000) + 65540;
      }
    }
    if (v34 != v36 && v48 != v42)
    {
      v34 = v47;
      if (v46 == v49)
        continue;
    }
    OUTLINED_FUNCTION_8_9();
    return;
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
}

void sub_1A5691144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t *__return_ptr, _QWORD *);
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t *__return_ptr, _QWORD *);
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  uint64_t v28;

  v4 = *(_QWORD *)(a3 + 16);
  OUTLINED_FUNCTION_164_0();
  v22 = v6 + 32;
  v23 = v7;
  v25 = v9;
  v26 = v8;
  v24 = 4 * v9;
  v10 = (v8 >> 59) & 1;
  if ((v5 & 0x1000000000000000) == 0)
    LOBYTE(v10) = 1;
  v11 = 4 << v10;
  v20 = (v5 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v21 = v5 & 0xFFFFFFFFFFFFFFLL;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_155();
  OUTLINED_FUNCTION_27();
  v12 = 0;
  v13 = 15;
  while (1)
  {
    if (v12 == v4)
    {
      if (v24 == v13 >> 14)
        goto LABEL_28;
      v14 = 0;
      v15 = v4;
    }
    else
    {
      if (v12 >= v4)
        goto LABEL_30;
      LOBYTE(v27[0]) = *(_BYTE *)(v22 + v12);
      v23(&v28, v27);
      if (v24 == v13 >> 14)
      {
LABEL_28:
        OUTLINED_FUNCTION_17_4();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_17();
        OUTLINED_FUNCTION_122();
        return;
      }
      v15 = v12 + 1;
      v14 = v28;
    }
    v16 = v13;
    if ((v13 & 0xC) == v11)
      v16 = OUTLINED_FUNCTION_125_0(v13, v26);
    v17 = v16 >> 16;
    if (v16 >> 16 >= v25)
      break;
    if ((a2 & 0x1000000000000000) != 0)
    {
      v19 = sub_1A594B670();
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      v27[0] = v26;
      v27[1] = v21;
      v19 = *((_BYTE *)v27 + v17);
    }
    else
    {
      v18 = v20;
      if ((v26 & 0x1000000000000000) == 0)
        v18 = sub_1A594C7D4();
      v19 = *(_BYTE *)(v18 + v17);
    }
    if ((v13 & 0xC) == v11)
    {
      v13 = OUTLINED_FUNCTION_125_0(v13, v26);
      if ((a2 & 0x1000000000000000) != 0)
      {
LABEL_24:
        if (v25 <= v13 >> 16)
          goto LABEL_31;
        v13 = sub_1A594B64C();
        goto LABEL_26;
      }
    }
    else if ((a2 & 0x1000000000000000) != 0)
    {
      goto LABEL_24;
    }
    v13 = (v13 & 0xFFFFFFFFFFFF0000) + 65540;
LABEL_26:
    if (v12 != v4)
    {
      v12 = v15;
      if (v14 == v19)
        continue;
    }
    goto LABEL_28;
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
}

void sub_1A5691350()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;

  OUTLINED_FUNCTION_14_6();
  if (v5 && v0 && v3 != v4)
  {
    OUTLINED_FUNCTION_187_0();
    do
    {
      v5 = *(v1 - 1) == *(v2 - 1) && *v1 == *v2;
      if (!v5 && (OUTLINED_FUNCTION_1_16() & 1) == 0)
        break;
      OUTLINED_FUNCTION_147_0();
    }
    while (!v5);
  }
  OUTLINED_FUNCTION_8_1();
}

void sub_1A56913B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  int v20;
  uint64_t v21;
  int v23;
  uint64_t v24;
  int32x2_t *v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  OUTLINED_FUNCTION_16_4();
  OUTLINED_FUNCTION_91_0();
  if (!v12 || !v0 || v1 == v2)
  {
LABEL_79:
    OUTLINED_FUNCTION_1_3();
    return;
  }
  v3 = 0;
  v4 = v1 + 32;
  v5 = v2 + 32;
  while (1)
  {
    v6 = v4 + 16 * v3;
    v7 = v5 + 16 * v3;
    v8 = *(unsigned int *)(v7 + 8) | ((unint64_t)*(unsigned __int16 *)(v7 + 12) << 32);
    if (HIBYTE(*(unsigned __int16 *)(v6 + 12)) > 0xFEuLL)
    {
      if (BYTE5(v8) != 255)
        goto LABEL_79;
      goto LABEL_72;
    }
    if (BYTE5(v8) == 255)
      goto LABEL_79;
    v9 = *(_QWORD *)v6;
    v10 = *(unsigned int *)(v6 + 8) | ((unint64_t)*(unsigned __int16 *)(v6 + 12) << 32);
    v11 = *(_QWORD *)v7;
    if ((((unint64_t)*(unsigned __int16 *)(v6 + 12) << 32) & 0x10000000000) != 0)
    {
      if ((v8 & 0x10000000000) == 0)
        goto LABEL_79;
      v8 = *(_QWORD *)(v9 + 16);
      if (v8 != *(_QWORD *)(v11 + 16))
        goto LABEL_79;
      if (v8)
        v12 = v9 == v11;
      else
        v12 = 1;
      if (!v12)
      {
        OUTLINED_FUNCTION_90_1();
        v15 = v12 && v13 == v14;
        if (!v15 && (OUTLINED_FUNCTION_1_16() & 1) == 0)
          goto LABEL_79;
        if (v8 != 1)
        {
          v16 = *(_QWORD *)(v9 + 48) == *(_QWORD *)(v11 + 48) && *(_QWORD *)(v9 + 56) == *(_QWORD *)(v11 + 56);
          if (!v16 && (OUTLINED_FUNCTION_1_16() & 1) == 0)
            goto LABEL_79;
          if (v8 != 2)
          {
            v11 += 72;
            v9 += 72;
            v10 = 2;
            while (v8 > 2)
            {
              OUTLINED_FUNCTION_50_2();
              v19 = v12 && v17 == v18;
              if (!v19 && (OUTLINED_FUNCTION_1_16() & 1) == 0)
                goto LABEL_79;
              OUTLINED_FUNCTION_27_4();
              if (v12)
                goto LABEL_72;
            }
            __break(1u);
            goto LABEL_81;
          }
        }
      }
      goto LABEL_72;
    }
    if ((v8 & 0x10000000000) != 0)
      goto LABEL_79;
    if (BYTE4(v10) == 255)
    {
      if (BYTE4(v8) != 255)
        goto LABEL_79;
      goto LABEL_72;
    }
    if (BYTE4(v8) == 255)
      goto LABEL_79;
    if (!BYTE4(v10))
      break;
    if (BYTE4(v10) == 1)
    {
      OUTLINED_FUNCTION_23_8();
      if (!v12)
      {
        v21 = v9;
        if (v20 != 2)
        {
          v30 = OUTLINED_FUNCTION_112_0();
          OUTLINED_FUNCTION_81_1(v30, v31);
          v32 = v9;
          goto LABEL_77;
        }
        goto LABEL_71;
      }
      v24 = *(_QWORD *)(v9 + 16);
      if (v24 != *(_QWORD *)(v11 + 16))
        goto LABEL_79;
      if (v24 && v9 != v11)
      {
        if (*(_DWORD *)(v11 + 32) != *(_DWORD *)(v9 + 32) || *(_DWORD *)(v11 + 36) != *(_DWORD *)(v9 + 36))
          goto LABEL_79;
        v26 = (int32x2_t *)(v9 + 40);
        v27 = v24 - 1;
        while (v27)
        {
          OUTLINED_FUNCTION_16_9(v26);
          if ((v28 & 1) == 0)
            goto LABEL_79;
        }
      }
    }
    else
    {
      OUTLINED_FUNCTION_23_8();
      if (v12)
      {
        v21 = v11;
LABEL_71:
        v29 = *(_QWORD *)(v21 + 16);
        sub_1A566676C(v11, v8);
        sub_1A566676C(v9, v10);
        OUTLINED_FUNCTION_72();
        if (v29)
          goto LABEL_79;
        goto LABEL_72;
      }
      if (v23 != 2)
        goto LABEL_76;
    }
LABEL_72:
    if (++v3 == v0)
      goto LABEL_79;
  }
  if (!BYTE4(v8))
  {
    if (*(_DWORD *)(v6 + 8) != *(_DWORD *)(v7 + 8) || v9 != v11)
      goto LABEL_79;
    goto LABEL_72;
  }
  if (BYTE4(v8) != 1)
  {
LABEL_76:
    OUTLINED_FUNCTION_145_0(v11);
    goto LABEL_79;
  }
  v32 = *(_QWORD *)v7;
LABEL_77:
  if (*(_QWORD *)(v32 + 16) != 1)
  {
    OUTLINED_FUNCTION_145_0(v11);
    OUTLINED_FUNCTION_72();
    goto LABEL_79;
  }
LABEL_81:
  sub_1A566676C(v11, v8);
  sub_1A566676C(v11, v8);
  sub_1A566676C(v9, v10);
  OUTLINED_FUNCTION_72();
  __break(1u);
}

void sub_1A569164C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  BOOL v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16) && v2 && a1 != a2)
  {
    v3 = a1 + 32;
    v4 = a2 + 32;
    v5 = v2 - 1;
    do
    {
      v3 += 8;
      v4 += 8;
      OUTLINED_FUNCTION_16_0();
      sub_1A568A508();
      v7 = v6;
      OUTLINED_FUNCTION_9_2();
      v9 = v5-- != 0;
    }
    while ((v7 & 1) != 0 && v9);
  }
  OUTLINED_FUNCTION_17_1();
}

void sub_1A56916D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  const void *v17;
  uint64_t v18;
  size_t v19;

  OUTLINED_FUNCTION_144_0();
  OUTLINED_FUNCTION_15_12();
  if (!v15 || !v0 || v1 == v2)
  {
LABEL_23:
    OUTLINED_FUNCTION_22_10();
    return;
  }
  v3 = v2 + 48;
  v4 = v1 + 48;
  while (1)
  {
    v5 = *(_QWORD *)(v4 - 16);
    v6 = *(_QWORD *)(v3 - 16);
    if (!v5)
    {
      if (v6)
        goto LABEL_23;
      goto LABEL_22;
    }
    if (!v6)
      goto LABEL_23;
    v7 = *(_QWORD *)(v4 - 8);
    if (HIDWORD(v7) < v7)
      break;
    v8 = *(_QWORD *)(v3 - 8);
    if (HIDWORD(v8) < v8)
      goto LABEL_25;
    if (HIDWORD(v7) - (_DWORD)v7 != HIDWORD(v8) - (_DWORD)v8)
      goto LABEL_23;
    OUTLINED_FUNCTION_41_4();
    v12 = HIDWORD(v9) & 0xFFFFFF;
    v13 = BYTE6(v9);
    v14 = BYTE6(v10);
    if ((_DWORD)v9 != (_DWORD)v10
      || (WORD2(v9) == WORD2(v10) ? (v15 = BYTE6(v9) == BYTE6(v10)) : (v15 = 0), v15 ? (v16 = v5 == v6) : (v16 = 0), !v16))
    {
      v18 = HIDWORD(v10) & 0xFFFFFF;
      v19 = v11;
      OUTLINED_FUNCTION_176();
      v17 = (const void *)(*(_QWORD *)(v5 + 24)
                         + (v13 & 0xFFFFFFFFFF0000FFLL | ((unint64_t)(unsigned __int16)v12 << 8))
                         + v7);
      OUTLINED_FUNCTION_176();
      if (memcmp(v17, (const void *)(*(_QWORD *)(v6 + 24)+ (v14 & 0xFFFFFFFFFF0000FFLL | ((unint64_t)(unsigned __int16)v18 << 8))+ v8), v19))
      {
        goto LABEL_23;
      }
    }
LABEL_22:
    v3 += 24;
    v4 += 24;
    if (!--v0)
      goto LABEL_23;
  }
  __break(1u);
LABEL_25:
  __break(1u);
}

void sub_1A56917E8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  OUTLINED_FUNCTION_14_6();
  if (v6 && v0 && v3 != v4)
  {
    OUTLINED_FUNCTION_187_0();
    do
    {
      v5 = *v2;
      if (*v1)
      {
        if (!v5)
          break;
        v6 = *(v1 - 1) == *(v2 - 1) && *v1 == v5;
        if (!v6 && (OUTLINED_FUNCTION_1_16() & 1) == 0)
          break;
      }
      else if (v5)
      {
        break;
      }
      OUTLINED_FUNCTION_147_0();
    }
    while (!v6);
  }
  OUTLINED_FUNCTION_8_1();
}

void sub_1A5691860()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v24;
  BOOL v25;
  int32x2_t *v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;

  OUTLINED_FUNCTION_16_4();
  OUTLINED_FUNCTION_91_0();
  if (!v11 || !v0 || v1 == v2)
  {
LABEL_77:
    OUTLINED_FUNCTION_1_3();
    return;
  }
  v3 = 0;
  v4 = v1 + 32;
  v5 = v2 + 32;
  while (1)
  {
    v6 = v4 + 16 * v3;
    v7 = *(_QWORD *)v6;
    v8 = v5 + 16 * v3;
    v9 = *(_QWORD *)v8;
    if (*(_BYTE *)(v6 + 13) == 1)
    {
      if ((*(_BYTE *)(v8 + 13) & 1) == 0)
        goto LABEL_77;
      v10 = *(_QWORD *)(v7 + 16);
      if (v10 != *(_QWORD *)(v9 + 16))
        goto LABEL_77;
      if (v10)
        v11 = v7 == v9;
      else
        v11 = 1;
      if (!v11)
      {
        OUTLINED_FUNCTION_90_1();
        v14 = v11 && v12 == v13;
        if (!v14 && (OUTLINED_FUNCTION_1_16() & 1) == 0)
          goto LABEL_77;
        if (v10 != 1)
        {
          v15 = *(_QWORD *)(v7 + 48);
          v16 = *(_QWORD *)(v7 + 56);
          if (v15 != *(_QWORD *)(v9 + 48) || v16 != *(_QWORD *)(v9 + 56))
          {
            v15 = OUTLINED_FUNCTION_1_16();
            if ((v15 & 1) == 0)
              goto LABEL_77;
          }
          if (v10 != 2)
          {
            v7 += 72;
            while (v10 > 2)
            {
              OUTLINED_FUNCTION_50_2();
              v20 = v11 && v18 == v19;
              if (!v20 && (OUTLINED_FUNCTION_1_16() & 1) == 0)
                goto LABEL_77;
              OUTLINED_FUNCTION_27_4();
              if (v11)
                goto LABEL_70;
            }
            __break(1u);
            goto LABEL_79;
          }
        }
      }
      goto LABEL_70;
    }
    if ((*(_BYTE *)(v8 + 13) & 1) != 0)
      goto LABEL_77;
    v10 = *(unsigned int *)(v6 + 8) | ((unint64_t)*(unsigned __int8 *)(v6 + 12) << 32);
    v21 = *(unsigned int *)(v8 + 8) | ((unint64_t)*(unsigned __int8 *)(v8 + 12) << 32);
    if (BYTE4(v10) == 255)
    {
      if (BYTE4(v21) != 255)
        goto LABEL_77;
      goto LABEL_70;
    }
    if (BYTE4(v21) == 255)
      goto LABEL_77;
    if (!BYTE4(v10))
      break;
    if (BYTE4(v10) == 1)
    {
      if (BYTE4(v21) != 1)
      {
        v22 = *(_QWORD *)v6;
        if (BYTE4(v21) != 2)
        {
          OUTLINED_FUNCTION_145_0(v7);
          v31 = v7;
          goto LABEL_75;
        }
        goto LABEL_69;
      }
      v24 = *(_QWORD *)(v7 + 16);
      if (v24 != *(_QWORD *)(v9 + 16))
        goto LABEL_77;
      if (v24)
        v25 = v7 == v9;
      else
        v25 = 1;
      if (!v25)
      {
        if (*(_DWORD *)(v9 + 32) != *(_DWORD *)(v7 + 32) || *(_DWORD *)(v9 + 36) != *(_DWORD *)(v7 + 36))
          goto LABEL_77;
        v27 = (int32x2_t *)(v7 + 40);
        v28 = v24 - 1;
        while (v28)
        {
          OUTLINED_FUNCTION_16_9(v27);
          if ((v29 & 1) == 0)
            goto LABEL_77;
        }
      }
    }
    else
    {
      if (BYTE4(v21) == 1)
      {
        v22 = *(_QWORD *)v8;
LABEL_69:
        v30 = *(_QWORD *)(v22 + 16);
        sub_1A566658C(v9, v21, 0);
        sub_1A566658C(v7, v10, 0);
        OUTLINED_FUNCTION_72();
        if (v30)
          goto LABEL_77;
        goto LABEL_70;
      }
      if (BYTE4(v21) != 2)
        goto LABEL_74;
    }
LABEL_70:
    if (++v3 == v0)
      goto LABEL_77;
  }
  if (!BYTE4(v21))
  {
    if (*(_DWORD *)(v6 + 8) != *(_DWORD *)(v8 + 8) || v7 != v9)
      goto LABEL_77;
    goto LABEL_70;
  }
  if (BYTE4(v21) != 1)
  {
LABEL_74:
    OUTLINED_FUNCTION_189_0();
    goto LABEL_77;
  }
  v31 = *(_QWORD *)v8;
LABEL_75:
  v15 = v9;
  v16 = v21;
  if (*(_QWORD *)(v31 + 16) != 1)
  {
    sub_1A5503BA0(v9, v21);
    OUTLINED_FUNCTION_72();
    goto LABEL_77;
  }
LABEL_79:
  sub_1A566658C(v15, v16, 0);
  sub_1A566658C(v7, v10, 0);
  OUTLINED_FUNCTION_72();
  __break(1u);
}

unint64_t sub_1A5691ADC()
{
  unint64_t result;

  result = qword_1EE7A9428;
  if (!qword_1EE7A9428)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for AppendMessage, &type metadata for AppendMessage);
    atomic_store(result, (unint64_t *)&qword_1EE7A9428);
  }
  return result;
}

uint64_t destroy for AppendOptions()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for AppendMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for AppendMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t assignWithTake for AppendMessage(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppendMessage(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 57))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppendMessage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 57) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AppendMessage()
{
  return &type metadata for AppendMessage;
}

uint64_t sub_1A5691D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  uint64_t result;

  if ((a2 & 0xFF00000000) != 0xFE00000000)
  {
    a5();
    return ((uint64_t (*)(uint64_t, uint64_t))a5)(a3, a4);
  }
  return result;
}

uint64_t sub_1A5691DD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if (a5 == 2)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return sub_1A566676C(a3, a4);
  }
  return result;
}

uint64_t sub_1A5691E18(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if ((a4 & 1) == 0)
    return swift_retain();
  return result;
}

uint64_t sub_1A5691E24(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 104);
  v13 = *(_QWORD *)(a1 + 96);
  v3 = *(_QWORD *)(a1 + 112);
  v4 = *(_QWORD *)(a1 + 120);
  v5 = *(_QWORD *)(a1 + 128);
  v6 = *(_QWORD *)(a1 + 136);
  v7 = *(_QWORD *)(a1 + 144);
  v8 = *(_QWORD *)(a1 + 152);
  v12 = *(_OWORD *)(a1 + 160);
  v10 = *(_QWORD *)(a1 + 176);
  v9 = *(_QWORD *)(a1 + 184);
  sub_1A5524514(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88));
  sub_1A5524514(v13, v2, v3, v4, v5, v6, v7, v8, v12, *((uint64_t *)&v12 + 1), v10, v9);
  return a1;
}

uint64_t *sub_1A5691EE4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = a1[9];
  v3 = a1[10];
  v4 = a1[11];
  v5 = a1[12];
  v6 = a1[13];
  v7 = a1[14];
  v8 = a1[15];
  v9 = a1[16];
  v10 = a1[17];
  sub_1A5524400(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8]);
  sub_1A5524400(v2, v3, v4, v5, v6, v7, v8, v9, v10);
  return a1;
}

uint64_t sub_1A5691F84(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;

  v2 = *(_QWORD *)(a1 + 88);
  v3 = *(_QWORD *)(a1 + 96);
  v4 = *(_QWORD *)(a1 + 104);
  v5 = *(_QWORD *)(a1 + 112);
  v6 = *(_QWORD *)(a1 + 120);
  v7 = *(_QWORD *)(a1 + 128);
  v8 = *(_QWORD *)(a1 + 136);
  v9 = *(_QWORD *)(a1 + 144);
  v12 = *(_OWORD *)(a1 + 152);
  v10 = *(_QWORD *)(a1 + 168);
  sub_1A5524370(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80));
  sub_1A5524370(v2, v3, v4, v5, v6, v7, v8, v9, v12, *((uint64_t *)&v12 + 1), v10);
  return a1;
}

uint64_t sub_1A5692040(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v18 = *(_QWORD *)(a1 + 144);
  v19 = *(_QWORD *)(a1 + 136);
  v16 = *(_QWORD *)(a1 + 160);
  v17 = *(_QWORD *)(a1 + 152);
  v14 = *(_QWORD *)(a1 + 176);
  v15 = *(_QWORD *)(a1 + 168);
  v12 = *(_QWORD *)(a1 + 192);
  v13 = *(_QWORD *)(a1 + 184);
  v11 = *(_OWORD *)(a1 + 200);
  v10 = *(_OWORD *)(a1 + 216);
  v9 = *(_OWORD *)(a1 + 232);
  v8 = *(_OWORD *)(a1 + 248);
  v6 = *(_OWORD *)(a1 + 280);
  v7 = *(_OWORD *)(a1 + 264);
  v3 = *(_QWORD *)(a1 + 296);
  v2 = *(_QWORD *)(a1 + 304);
  v4 = *(_BYTE *)(a1 + 312);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_retain();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A552370C(v19, v18, v17, v16, v15, v14, v13, v12, v11, *((uint64_t *)&v11 + 1), v10, *((uint64_t *)&v10 + 1), v9, *((uint64_t *)&v9 + 1), v8, *((uint64_t *)&v8 + 1), v7, *((uint64_t *)&v7 + 1), v6,
    *((uint64_t *)&v6 + 1),
    v3,
    v2,
    v4);
  return a1;
}

uint64_t sub_1A56921B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v18 = *(_QWORD *)(a1 + 144);
  v19 = *(_QWORD *)(a1 + 136);
  v16 = *(_QWORD *)(a1 + 160);
  v17 = *(_QWORD *)(a1 + 152);
  v14 = *(_QWORD *)(a1 + 176);
  v15 = *(_QWORD *)(a1 + 168);
  v12 = *(_QWORD *)(a1 + 192);
  v13 = *(_QWORD *)(a1 + 184);
  v10 = *(_OWORD *)(a1 + 216);
  v11 = *(_OWORD *)(a1 + 200);
  v9 = *(_OWORD *)(a1 + 232);
  v7 = *(_OWORD *)(a1 + 264);
  v8 = *(_OWORD *)(a1 + 248);
  v6 = *(_OWORD *)(a1 + 280);
  v3 = *(_QWORD *)(a1 + 296);
  v2 = *(_QWORD *)(a1 + 304);
  v4 = *(_BYTE *)(a1 + 312);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A55241F0(v19, v18, v17, v16, v15, v14, v13, v12, v11, *((uint64_t *)&v11 + 1), v10, *((uint64_t *)&v10 + 1), v9, *((uint64_t *)&v9 + 1), v8, *((uint64_t *)&v8 + 1), v7, *((uint64_t *)&v7 + 1), v6,
    *((uint64_t *)&v6 + 1),
    v3,
    v2,
    v4);
  return a1;
}

uint64_t OUTLINED_FUNCTION_1_16()
{
  return sub_1A594CD38();
}

uint64_t OUTLINED_FUNCTION_2_20(uint64_t a1)
{
  void (*v1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char);

  return sub_1A55DC438(a1, v1);
}

uint64_t OUTLINED_FUNCTION_4_17()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(void);
  uint64_t v4;

  return sub_1A5691D84(v0, v1, v4, v2, v3);
}

uint64_t OUTLINED_FUNCTION_6_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(void);
  uint64_t v4;

  return sub_1A5691D84(a1, a2, v4, v2, v3);
}

uint64_t OUTLINED_FUNCTION_9_14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;

  v26 = v24;
  sub_1A5666818(a18, a23, v25);
  sub_1A5666818(a20, a24, v26);
  sub_1A56668A4(a20, a24, v26);
  return sub_1A56668A4(a18, a23, v25);
}

uint64_t OUTLINED_FUNCTION_12_11()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 112);
}

uint64_t OUTLINED_FUNCTION_13_9(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v4)(void);

  return sub_1A5691D84(a1, a2, a3, a4, v4);
}

int32x2_t OUTLINED_FUNCTION_16_9@<D0>(int32x2_t *a1@<X8>)
{
  int32x2_t *v1;

  return vceq_s32(*v1, *a1);
}

uint64_t OUTLINED_FUNCTION_19_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  return sub_1A5524514(a33, v45, v46, a36, v44, a44, a37, v47, a32, a31, a30, a29);
}

uint64_t OUTLINED_FUNCTION_20_10(uint64_t a1)
{
  void (*v1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char);

  return sub_1A55DC438(a1, v1);
}

uint64_t OUTLINED_FUNCTION_24_4()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_25_4()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_28_5()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_30_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;

  sub_1A5666818(v24, v26, v25);
  sub_1A5666818(a20, a24, a15);
  sub_1A568AAF8();
}

uint64_t OUTLINED_FUNCTION_32_5()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 96);
}

uint64_t OUTLINED_FUNCTION_33_4()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_34_4()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_37_4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  size_t v25;
  unsigned __int16 v26;
  const void *v27;

  return memcmp(v27, (const void *)(*(_QWORD *)(v23 + 24) + (BYTE6(v24) | ((unint64_t)v26 << 8)) + a23), v25);
}

uint64_t OUTLINED_FUNCTION_39_4()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_40_4()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_42_2()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1A5503B8C(v0, v1);
}

__n128 OUTLINED_FUNCTION_43_3@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __n128 result;

  *(_OWORD *)(v1 + 168) = *(_OWORD *)(a1 + 56);
  *(_OWORD *)(v1 + 184) = *(_OWORD *)(a1 + 72);
  *(_OWORD *)(v1 + 200) = *(_OWORD *)(a1 + 88);
  *(_OWORD *)(v1 + 216) = *(_OWORD *)(a1 + 104);
  result = *(__n128 *)(a1 + 120);
  *(__n128 *)(v1 + 232) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_46_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_47_2()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_50_2()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 8);
}

__n128 OUTLINED_FUNCTION_51_3(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 result;

  *(__n128 *)(v1 + 40) = a1;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(v2 + 72);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(v2 + 88);
  *(_OWORD *)(v1 + 88) = *(_OWORD *)(v2 + 104);
  result = *(__n128 *)(v2 + 120);
  *(__n128 *)(v1 + 104) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_54_1()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_55_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14, unint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_1A56668A4(v23, a23, a14);
  return sub_1A56668A4(v25, v24, a15);
}

uint64_t OUTLINED_FUNCTION_56_4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  size_t v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;

  return memcmp(v20, (const void *)(*(_QWORD *)(v18 + 24) + (v22 | (v21 << 8)) + a18), v19);
}

uint64_t OUTLINED_FUNCTION_59_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_60_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = v2;
  sub_1A566676C(a1, a2);
  return sub_1A566676C(v4, v3);
}

uint64_t OUTLINED_FUNCTION_61_1()
{
  return sub_1A594CD38();
}

uint64_t OUTLINED_FUNCTION_62_1()
{
  return sub_1A594CD38();
}

void OUTLINED_FUNCTION_65_1(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  sub_1A5666A3C(a1, a2, a3, a4, a5, a6, a7, v7);
}

uint64_t OUTLINED_FUNCTION_73_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_78_1()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 96);
}

uint64_t OUTLINED_FUNCTION_79_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_80_1()
{
  return sub_1A56921B8((uint64_t)&STACK[0x770]);
}

uint64_t OUTLINED_FUNCTION_81_1(uint64_t a1, uint64_t a2)
{
  return sub_1A566658C(a1, a2, 0);
}

uint64_t OUTLINED_FUNCTION_82_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_83_1(uint64_t a1)
{
  return sub_1A55DC430(a1);
}

uint64_t OUTLINED_FUNCTION_84_1()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_86_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_87_1()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_88_1()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_90_1()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t OUTLINED_FUNCTION_94_1()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_97_1()
{
  return sub_1A56921B8((uint64_t)&STACK[0x8B8]);
}

uint64_t OUTLINED_FUNCTION_98_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_99_1()
{
  void (*v0)(void);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return sub_1A5691D84(v3, v4, v2, v1, v0);
}

uint64_t OUTLINED_FUNCTION_100_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;

  return sub_1A5666784(v14, a11, a14, a12, 1);
}

uint64_t OUTLINED_FUNCTION_101_1()
{
  return sub_1A56921B8((uint64_t)&STACK[0x4B8]);
}

uint64_t OUTLINED_FUNCTION_103_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  return sub_1A5666784(a18, a13, a15, a16, 1);
}

uint64_t OUTLINED_FUNCTION_104_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_105_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  return a27;
}

uint64_t OUTLINED_FUNCTION_106_0()
{
  uint64_t v0;

  return v0 + 24;
}

uint64_t OUTLINED_FUNCTION_107_0()
{
  return sub_1A56921B8((uint64_t)&STACK[0x370]);
}

uint64_t OUTLINED_FUNCTION_108_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_109_0(uint64_t a1)
{
  void (*v1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char);

  return sub_1A55DC438(a1, v1);
}

uint64_t OUTLINED_FUNCTION_112_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_114_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  return sub_1A5524514(a1, a2, a3, a4, a5, a6, a7, v12, a9, a10, a11, a12);
}

uint64_t OUTLINED_FUNCTION_116_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_118_0()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_119_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1A566676C(v1, v3);
  return sub_1A566676C(v0, v2);
}

void OUTLINED_FUNCTION_120_0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;

  sub_1A5666A3C(a1, a2, a3, a4, v24, a6, a24, a20);
}

uint64_t OUTLINED_FUNCTION_121_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  return sub_1A56668BC(a1, a2, a3, a4, a5, v7, v5, v6);
}

uint64_t OUTLINED_FUNCTION_123_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A5691DD8(a1, a2, a3, a4, 2);
}

void OUTLINED_FUNCTION_124_0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1A56669A0(a1, a2, a3, a4, a5, v7, v5, v6);
}

uint64_t OUTLINED_FUNCTION_125_0(unint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A56C83D0(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_130_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_132_0(uint64_t a1)
{
  uint64_t v1;

  return sub_1A5503B8C(a1, v1);
}

uint64_t OUTLINED_FUNCTION_133_0()
{
  return sub_1A594CD38();
}

uint64_t OUTLINED_FUNCTION_134_0@<X0>(uint64_t a1@<X8>)
{
  unsigned int v1;
  size_t v2;
  const void *v3;

  return memcmp(v3, (const void *)(a1 + v1), v2);
}

uint64_t OUTLINED_FUNCTION_139_0()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t OUTLINED_FUNCTION_140_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  return a40;
}

uint64_t OUTLINED_FUNCTION_143_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v4)(void);

  return sub_1A5691D84(a1, a2, a3, a4, v4);
}

uint64_t OUTLINED_FUNCTION_145_0(uint64_t a1)
{
  uint64_t v1;

  return sub_1A5503BA0(a1, v1);
}

uint64_t OUTLINED_FUNCTION_149_0()
{
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_151_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_152_0(uint64_t a1)
{
  void (*v1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char);

  return sub_1A55DC438(a1, v1);
}

void *OUTLINED_FUNCTION_153_0(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x148uLL);
}

uint64_t OUTLINED_FUNCTION_154_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1A566676C(v1, v3);
  return sub_1A566676C(v0, v2);
}

uint64_t OUTLINED_FUNCTION_156_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_157_0()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_160_0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  sub_1A5666A3C(a1, a2, a3, a4, a5, a6, a7, v7);
}

uint64_t OUTLINED_FUNCTION_161_0()
{
  uint64_t v0;

  return v0;
}

int32x2_t OUTLINED_FUNCTION_162_0()
{
  int32x2_t *v0;
  int32x2_t *v1;

  return sub_1A5689E30(v0, v1);
}

uint64_t OUTLINED_FUNCTION_163_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A5691E18(a1, a2, a3, 0);
}

void OUTLINED_FUNCTION_165_0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  sub_1A56669A0(a1, a2, a3, a4, a5, a6, a7, v7);
}

uint64_t OUTLINED_FUNCTION_166_0()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1A5503B8C(v1, v0);
}

uint64_t OUTLINED_FUNCTION_167_0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;

  return sub_1A54E4334(v4, v3, a3);
}

uint64_t OUTLINED_FUNCTION_168_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  return a33;
}

uint64_t OUTLINED_FUNCTION_171_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v8;

  return sub_1A552391C(a1, v8, a2, a3, a4, a5, a6, a7, a8);
}

void OUTLINED_FUNCTION_174_0()
{
  sub_1A5690C88();
}

uint64_t OUTLINED_FUNCTION_175(uint64_t a1)
{
  uint64_t v1;

  return sub_1A566676C(a1, v1);
}

uint64_t OUTLINED_FUNCTION_176_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_177_0()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_179_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  return a40;
}

uint64_t OUTLINED_FUNCTION_180_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_181_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  uint64_t v6;
  unint64_t v7;

  return sub_1A5666914(a1, a2, a3, a4, a5, a6, v6, v7);
}

uint64_t OUTLINED_FUNCTION_183_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_185_0()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

void OUTLINED_FUNCTION_188_0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  sub_1A5666A3C(a1, a2, a3, a4, a5, a6, a7, v7);
}

uint64_t OUTLINED_FUNCTION_189_0()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1A5503BA0(v0, v1);
}

uint64_t OUTLINED_FUNCTION_191_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_192_0()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1A566676C(v0, v1);
}

uint64_t OUTLINED_FUNCTION_195_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v4)(void);

  return sub_1A5691D84(a1, a2, a3, a4, v4);
}

uint64_t OUTLINED_FUNCTION_196_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_197_0()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1A566676C(v1, v0);
}

uint64_t OUTLINED_FUNCTION_198_0()
{
  return swift_retain();
}

uint64_t static AppendOptions.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;
  char v6;
  char v7;

  sub_1A568E1F8();
  if ((v4 & 1) == 0)
    return 0;
  v5 = *(_BYTE *)(a2 + 16);
  if ((*(_BYTE *)(a1 + 16) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 16))
      return 0;
  }
  else
  {
    if (*(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8))
      v5 = 1;
    if ((v5 & 1) != 0)
      return 0;
  }
  sub_1A5690C88();
  if ((v6 & 1) != 0)
  {
    OUTLINED_FUNCTION_182();
    sub_1A5691860();
    if ((v7 & 1) != 0)
      return 1;
  }
  return 0;
}

void sub_1A5692F90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::Int v5;
  Swift::Int v6;
  char v7;
  Swift::String v8;
  Swift::Int v9;
  int v10;
  BOOL v11;
  int v12;
  uint64_t v13;
  BOOL v14;
  Swift::Int v15;
  Swift::Int v16;
  uint64_t v17;
  Swift::Int v18;
  Swift::Int v19;
  char v20;
  Swift::String v21;
  Swift::Int v22;
  int v23;
  int v24;
  uint64_t v25;
  Swift::Int v26;
  uint64_t v27;

  OUTLINED_FUNCTION_21_10();
  v1 = v0;
  v3 = v2;
  v4 = v0 + 8;
  if (!*(_QWORD *)(*(_QWORD *)v2 + 16))
    goto LABEL_8;
  v5 = *(unsigned int *)(v1 + 20);
  OUTLINED_FUNCTION_1_2();
  OUTLINED_FUNCTION_30();
  sub_1A56814E0(32, 0xE100000000000000, v4, v5);
  if ((v7 & 1) != 0)
  {
    v8._countAndFlagsBits = 32;
    v8._object = (void *)0xE100000000000000;
    v6 = ByteBuffer._setStringSlowpath(_:at:)(v8, v5);
  }
  v9 = v6;
  v10 = *(_DWORD *)(v1 + 20);
  v11 = __CFADD__(v10, (_DWORD)v6);
  v12 = v10 + v6;
  if (v11)
    goto LABEL_20;
  *(_DWORD *)(v1 + 20) = v12;
  v13 = j__OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_2_4();
  v14 = __OFADD__(v9, v13);
  v15 = v9 + v13;
  if (v14)
  {
    __break(1u);
LABEL_8:
    v15 = 0;
  }
  if ((*(_BYTE *)(v3 + 16) & 1) != 0)
  {
    v16 = 0;
  }
  else
  {
    v17 = *(_QWORD *)(v3 + 8);
    v18 = *(unsigned int *)(v1 + 20);
    sub_1A56814E0(32, 0xE100000000000000, v4, *(_DWORD *)(v1 + 20));
    if ((v20 & 1) != 0)
    {
      v21._countAndFlagsBits = 32;
      v21._object = (void *)0xE100000000000000;
      v19 = ByteBuffer._setStringSlowpath(_:at:)(v21, v18);
    }
    v22 = v19;
    v23 = *(_DWORD *)(v1 + 20);
    v11 = __CFADD__(v23, (_DWORD)v19);
    v24 = v23 + v19;
    if (v11)
      goto LABEL_21;
    *(_DWORD *)(v1 + 20) = v24;
    sub_1A56BE42C(v17);
    v16 = v22 + v25;
    if (__OFADD__(v22, v25))
    {
LABEL_22:
      __break(1u);
      return;
    }
  }
  v26 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_19;
  }
  sub_1A5665A90();
  if (__OFADD__(v26, v27))
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
}

uint64_t AppendOptions.flagList.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t AppendOptions.flagList.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

double (*AppendOptions.flagList.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t AppendOptions.internalDate.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t AppendOptions.internalDate.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 8) = result;
  *(_BYTE *)(v2 + 16) = a2 & 1;
  return result;
}

double (*AppendOptions.internalDate.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t AppendOptions.extensions.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_11_1();
  swift_retain();
  return v1;
}

void AppendOptions.extensions.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  swift_release();
  swift_release();
  swift_release();
  v3[3] = a1;
  v3[4] = a2;
  v3[5] = a3;
  OUTLINED_FUNCTION_8_1();
}

double (*AppendOptions.extensions.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1A5693234()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;

  v0 = MEMORY[0x1E0DEE9D8];
  result = sub_1A574EF80(MEMORY[0x1E0DEE9D8]);
  static AppendOptions.none = v0;
  unk_1EE7F9B10 = 0;
  byte_1EE7F9B18 = 1;
  qword_1EE7F9B20 = result;
  unk_1EE7F9B28 = v2;
  qword_1EE7F9B30 = v3;
  return result;
}

uint64_t AppendOptions.init(flagList:internalDate:extensions:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(_QWORD *)a7 = result;
  *(_QWORD *)(a7 + 8) = a2;
  *(_BYTE *)(a7 + 16) = a3 & 1;
  *(_QWORD *)(a7 + 24) = a4;
  *(_QWORD *)(a7 + 32) = a5;
  *(_QWORD *)(a7 + 40) = a6;
  return result;
}

uint64_t *AppendOptions.none.unsafeMutableAddressor()
{
  if (qword_1EE7A8F68 != -1)
    swift_once();
  return &static AppendOptions.none;
}

uint64_t static AppendOptions.none.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (qword_1EE7A8F68 != -1)
    swift_once();
  v2 = unk_1EE7F9B10;
  v3 = byte_1EE7F9B18;
  v4 = qword_1EE7F9B20;
  v5 = unk_1EE7F9B28;
  v6 = qword_1EE7F9B30;
  *(_QWORD *)a1 = static AppendOptions.none;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_retain();
  OUTLINED_FUNCTION_11_1();
  return swift_retain();
}

uint64_t AppendOptions.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(_QWORD, _QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = v1;
  OUTLINED_FUNCTION_69();
  v4 = OUTLINED_FUNCTION_126_1();
  sub_1A5697348(v4, v5, v6);
  OUTLINED_FUNCTION_55();
  if (*(_BYTE *)(v2 + 16) == 1)
  {
    OUTLINED_FUNCTION_35_3();
  }
  else
  {
    OUTLINED_FUNCTION_30_2();
    sub_1A594CEB8();
  }
  v7 = *(_QWORD *)(v2 + 24);
  v8 = *(_QWORD *)(v2 + 32);
  v9 = *(_QWORD *)(v2 + 40);
  OUTLINED_FUNCTION_11_1();
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_17_0();
  sub_1A5693AD4(a1, v7, v8, v9);
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_4_4();
  return swift_release();
}

uint64_t AppendOptions.hashValue.getter()
{
  _BYTE v1[72];

  sub_1A594CE64();
  AppendOptions.hash(into:)((uint64_t)v1);
  return sub_1A594CED0();
}

uint64_t sub_1A5693438()
{
  _BYTE v1[72];

  sub_1A594CE64();
  AppendOptions.hash(into:)((uint64_t)v1);
  return sub_1A594CED0();
}

void sub_1A5693474()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  OUTLINED_FUNCTION_96_1();
  OUTLINED_FUNCTION_6_16();
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 16);
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_11_1();
    OUTLINED_FUNCTION_0_10();
    while (v2)
    {
      OUTLINED_FUNCTION_90_2();
      OUTLINED_FUNCTION_13_0();
      OUTLINED_FUNCTION_43_4();
      OUTLINED_FUNCTION_38();
      OUTLINED_FUNCTION_59_4();
      OUTLINED_FUNCTION_38();
      OUTLINED_FUNCTION_19();
      OUTLINED_FUNCTION_87_2();
      if (v3)
      {
        OUTLINED_FUNCTION_4_4();
        OUTLINED_FUNCTION_36();
        OUTLINED_FUNCTION_10_11();
        return;
      }
    }
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_63_1();
  }
}

void sub_1A5693518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_6_16();
  if (v5)
  {
    v7 = *(_QWORD *)(v4 + 16);
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_11_1();
    OUTLINED_FUNCTION_0_10();
    v8 = 0;
    v14 = a4;
    v15 = v4;
    while (v7)
    {
      v16 = v5;
      v10 = *(_DWORD *)(v4 + v8 + 40);
      v9 = *(_DWORD *)(v4 + v8 + 44);
      v11 = a4 + v8;
      v12 = *(_QWORD *)(a4 + v8 + 32);
      v13 = *(_QWORD *)(v11 + 40);
      OUTLINED_FUNCTION_176();
      if (v9 < v10)
        goto LABEL_13;
      OUTLINED_FUNCTION_9_15();
      if (v12)
      {
        OUTLINED_FUNCTION_30_2();
        OUTLINED_FUNCTION_176();
        if (HIDWORD(v13) < v13)
          goto LABEL_14;
        OUTLINED_FUNCTION_39_5();
        OUTLINED_FUNCTION_9_15();
      }
      else
      {
        OUTLINED_FUNCTION_35_3();
      }
      --v7;
      v8 += 24;
      --v5;
      a4 = v14;
      v4 = v15;
      if (v16 == 1)
      {
        OUTLINED_FUNCTION_4_4();
        OUTLINED_FUNCTION_36();
        OUTLINED_FUNCTION_25_4();
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
  else
  {
LABEL_11:
    OUTLINED_FUNCTION_67_1();
  }
}

void sub_1A5693648()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  OUTLINED_FUNCTION_96_1();
  v3 = v2;
  OUTLINED_FUNCTION_6_16();
  if (v1)
  {
    v4 = *(_QWORD *)(v0 + 16);
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_11_1();
    OUTLINED_FUNCTION_0_10();
    while (v4)
    {
      v5 = *(_QWORD *)(v3 + 40);
      OUTLINED_FUNCTION_4_3();
      OUTLINED_FUNCTION_42();
      OUTLINED_FUNCTION_43_4();
      if (v5)
      {
        OUTLINED_FUNCTION_30_2();
        OUTLINED_FUNCTION_4_3();
        OUTLINED_FUNCTION_45_3();
        OUTLINED_FUNCTION_38();
        swift_bridgeObjectRelease_n();
      }
      else
      {
        OUTLINED_FUNCTION_35_3();
        OUTLINED_FUNCTION_38();
      }
      OUTLINED_FUNCTION_87_2();
      if (v6)
      {
        OUTLINED_FUNCTION_4_4();
        OUTLINED_FUNCTION_36();
        OUTLINED_FUNCTION_10_11();
        return;
      }
    }
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_63_1();
  }
}

uint64_t sub_1A5693704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  result = OUTLINED_FUNCTION_6_16();
  if (v6)
  {
    v9 = v5 + 32;
    v20 = a4 + 32;
    v21 = *(_QWORD *)(v5 + 16);
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_11_1();
    result = OUTLINED_FUNCTION_30();
    v10 = 0;
    v19 = v6;
    while (v10 != v21)
    {
      v11 = v20 + 16 * v10;
      v12 = *(_QWORD *)v11;
      v13 = *(unsigned __int16 *)(v11 + 12);
      v14 = *(unsigned int *)(v11 + 8) | ((unint64_t)*(unsigned __int16 *)(v11 + 12) << 32);
      OUTLINED_FUNCTION_4_3();
      sub_1A566676C(v12, v14);
      OUTLINED_FUNCTION_45_3();
      if (v13 >> 8 < 0xFFuLL)
      {
        OUTLINED_FUNCTION_30_2();
        if ((v14 & 0x10000000000) != 0)
        {
          v15 = v9;
          OUTLINED_FUNCTION_3_19();
          sub_1A594CE88();
          v16 = *(_QWORD *)(v12 + 16);
          if (v16)
          {
            OUTLINED_FUNCTION_48_3(v12, v14);
            v17 = v12 + 40;
            do
            {
              OUTLINED_FUNCTION_27();
              OUTLINED_FUNCTION_77_1();
              OUTLINED_FUNCTION_17();
              v17 += 16;
              --v16;
            }
            while (v16);
            OUTLINED_FUNCTION_35_5();
            OUTLINED_FUNCTION_35_5();
          }
          else
          {
            OUTLINED_FUNCTION_35_5();
          }
          v9 = v15;
          v6 = v19;
        }
        else
        {
          OUTLINED_FUNCTION_2_21();
          if (BYTE4(v14) == 255)
          {
            OUTLINED_FUNCTION_3_19();
            OUTLINED_FUNCTION_35_5();
          }
          else
          {
            OUTLINED_FUNCTION_2_21();
            v18 = v18 & 0xFFFFFF0000000000 | v14 | v14 & 0xFF00000000;
            sub_1A56B6298(v4, v12, v18);
          }
          OUTLINED_FUNCTION_35_5();
        }
      }
      else
      {
        OUTLINED_FUNCTION_35_3();
      }
      ++v10;
      result = OUTLINED_FUNCTION_41();
      if (v10 == v6)
      {
        OUTLINED_FUNCTION_48();
        OUTLINED_FUNCTION_25_4();
        return swift_release();
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1A56938D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  result = OUTLINED_FUNCTION_6_16();
  if (v5)
  {
    v17 = a4 + 32;
    v18 = v4 + 32;
    v19 = *(_QWORD *)(v4 + 16);
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_11_1();
    result = OUTLINED_FUNCTION_0_10();
    v8 = 0;
    while (v8 != v19)
    {
      v9 = v18 + 24 * v8;
      v10 = *(_DWORD *)(v9 + 8);
      v11 = *(_DWORD *)(v9 + 12);
      v12 = *(_QWORD *)(v17 + 8 * v8);
      result = OUTLINED_FUNCTION_176();
      if (v11 < v10)
        goto LABEL_14;
      OUTLINED_FUNCTION_9_15();
      result = OUTLINED_FUNCTION_124_1();
      v13 = *(_QWORD *)(v12 + 16);
      if (v13)
      {
        v14 = v12 + 54;
        while (1)
        {
          v15 = *(_DWORD *)(v14 - 14);
          v16 = *(_DWORD *)(v14 - 10);
          result = OUTLINED_FUNCTION_176();
          if (v16 < v15)
            break;
          v14 += 24;
          result = OUTLINED_FUNCTION_9_15();
          if (!--v13)
            goto LABEL_9;
        }
        __break(1u);
        break;
      }
LABEL_9:
      if (++v8 == v5)
      {
        swift_release();
        OUTLINED_FUNCTION_25_4();
        return swift_release();
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
  }
  return result;
}

void sub_1A5693A38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  OUTLINED_FUNCTION_96_1();
  OUTLINED_FUNCTION_6_16();
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 16);
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_11_1();
    OUTLINED_FUNCTION_0_10();
    while (v2)
    {
      OUTLINED_FUNCTION_42();
      OUTLINED_FUNCTION_13_0();
      OUTLINED_FUNCTION_43_4();
      OUTLINED_FUNCTION_59_4();
      OUTLINED_FUNCTION_38();
      OUTLINED_FUNCTION_19();
      OUTLINED_FUNCTION_87_2();
      if (v3)
      {
        OUTLINED_FUNCTION_4_4();
        OUTLINED_FUNCTION_36();
        OUTLINED_FUNCTION_10_11();
        return;
      }
    }
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_63_1();
  }
}

uint64_t sub_1A5693AD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v7 = *(_QWORD *)(a4 + 16);
  result = sub_1A594CE88();
  if (v7)
  {
    v21 = a4 + 32;
    v9 = *(_QWORD *)(a3 + 16);
    swift_retain();
    v10 = v9;
    swift_retain();
    result = swift_retain();
    v11 = 0;
    v18 = v10;
    v19 = v7;
    while (v11 != v10)
    {
      v12 = v21 + 16 * v11;
      v13 = *(_QWORD *)v12;
      v14 = *(unsigned __int8 *)(v12 + 13);
      v15 = *(unsigned int *)(v12 + 8) | ((unint64_t)*(unsigned __int8 *)(v12 + 12) << 32);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A566658C(v13, v15, v14);
      sub_1A594B1D8();
      if (v14 == 1)
      {
        sub_1A594CE88();
        sub_1A594CE88();
        v16 = *(_QWORD *)(v13 + 16);
        if (v16)
        {
          v17 = v13 + 40;
          do
          {
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            sub_1A594B1D8();
            swift_bridgeObjectRelease();
            v17 += 16;
            --v16;
          }
          while (v16);
          v10 = v18;
          v7 = v19;
        }
      }
      else
      {
        sub_1A594CE88();
        sub_1A594CE88();
        if (BYTE4(v15) != 255)
        {
          v20 = v20 & 0xFFFFFF0000000000 | v15 | v15 & 0xFF00000000;
          sub_1A56B6298(a1, v13, v20);
        }
      }
      ++v11;
      sub_1A5666618(v13, v15, v14);
      result = swift_bridgeObjectRelease();
      if (v11 == v7)
      {
        swift_release();
        swift_release();
        return swift_release();
      }
    }
    __break(1u);
  }
  return result;
}

void sub_1A5693CD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_6_16();
  if (v5)
  {
    v22 = a4 + 32;
    v23 = v4 + 32;
    v24 = *(_QWORD *)(v4 + 16);
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_11_1();
    OUTLINED_FUNCTION_0_10();
    v7 = 0;
    while (v7 != v24)
    {
      v8 = v23 + 24 * v7;
      v9 = *(_DWORD *)(v8 + 8);
      v10 = *(_DWORD *)(v8 + 12);
      v25 = v7;
      v11 = v22 + 16 * v7;
      v12 = *(_QWORD *)v11;
      v13 = *(unsigned __int8 *)(v11 + 12);
      v14 = *(unsigned int *)(v11 + 8);
      v15 = *(unsigned __int8 *)(v11 + 13);
      OUTLINED_FUNCTION_176();
      if (v10 < v9)
        goto LABEL_20;
      v16 = v14 | (v13 << 32);
      OUTLINED_FUNCTION_9_15();
      if (v15)
      {
        OUTLINED_FUNCTION_3_19();
        sub_1A594CE88();
        v17 = *(_QWORD *)(v12 + 16);
        if (v17)
        {
          swift_retain();
          OUTLINED_FUNCTION_48_3(v12, v16);
          v18 = v12 + 40;
          do
          {
            OUTLINED_FUNCTION_27();
            OUTLINED_FUNCTION_77_1();
            OUTLINED_FUNCTION_17();
            v18 += 16;
            --v17;
          }
          while (v17);
        }
        else
        {
          swift_retain();
          OUTLINED_FUNCTION_48_3(v12, v16);
        }
        sub_1A5666618(v12, v16, 1);
        OUTLINED_FUNCTION_2_4();
      }
      else
      {
        OUTLINED_FUNCTION_2_21();
        if (BYTE4(v16) == 255)
        {
          OUTLINED_FUNCTION_3_19();
        }
        else
        {
          OUTLINED_FUNCTION_2_21();
          v19 = OUTLINED_FUNCTION_126_1();
          OUTLINED_FUNCTION_111_0(v19, v20, v21);
        }
        OUTLINED_FUNCTION_17_0();
        sub_1A566658C(v12, v16, 0);
        sub_1A5666618(v12, v16, 0);
        OUTLINED_FUNCTION_23();
      }
      v7 = v25 + 1;
      if (v25 + 1 == v5)
      {
        OUTLINED_FUNCTION_4_4();
        OUTLINED_FUNCTION_25_4();
        swift_release();
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
  }
  else
  {
LABEL_18:
    OUTLINED_FUNCTION_67_1();
  }
}

void sub_1A5693EC8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_0_25();
  if (v0)
  {
    v2 = (unint64_t *)(v1 + 32);
    do
    {
      v3 = *v2++;
      sub_1A568079C(v3);
      v4 = OUTLINED_FUNCTION_126_1();
      SearchKey.hash(into:)(v4, v5);
      sub_1A567FE68(v3);
      --v0;
    }
    while (v0);
  }
  OUTLINED_FUNCTION_8_1();
}

void sub_1A5693F10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_0_25();
  if (v0)
  {
    v2 = v1 + 40;
    do
    {
      v2 += 16;
      sub_1A594CE88();
      --v0;
    }
    while (v0);
  }
  OUTLINED_FUNCTION_8_1();
}

void sub_1A5693F48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_0_25();
  if (v0)
  {
    v2 = v1 + 32;
    do
    {
      v2 += 8;
      sub_1A594CE88();
      --v0;
    }
    while (v0);
  }
  OUTLINED_FUNCTION_8_1();
}

uint64_t sub_1A5693F7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t *v18;
  uint64_t v19;

  result = OUTLINED_FUNCTION_0_25();
  if (!v0)
    return result;
  v3 = (uint64_t *)(v1 + 32);
  while (1)
  {
    v4 = *v3;
    v18 = v3 + 1;
    v19 = v0;
    if (*v3 < 0)
    {
      v8 = *(_DWORD *)(v4 + 24);
      v17 = *(_DWORD *)(v4 + 28);
      v9 = *(_QWORD *)(v4 + 40);
      v10 = *(_QWORD *)(v4 + 48);
      OUTLINED_FUNCTION_3_19();
      result = OUTLINED_FUNCTION_176();
      if (v17 < v8)
        goto LABEL_32;
      OUTLINED_FUNCTION_9_15();
      if (v9)
      {
        OUTLINED_FUNCTION_30_2();
        result = OUTLINED_FUNCTION_176();
        if (HIDWORD(v10) < v10)
          goto LABEL_33;
        OUTLINED_FUNCTION_39_5();
        OUTLINED_FUNCTION_9_15();
      }
      else
      {
        OUTLINED_FUNCTION_35_3();
      }
      OUTLINED_FUNCTION_30();
      OUTLINED_FUNCTION_17_0();
      OUTLINED_FUNCTION_1_2();
      OUTLINED_FUNCTION_90_2();
      v11 = OUTLINED_FUNCTION_126_1();
      sub_1A5693F7C(v11);
      OUTLINED_FUNCTION_48();
      OUTLINED_FUNCTION_2_4();
      OUTLINED_FUNCTION_23();
      result = swift_bridgeObjectRelease_n();
      goto LABEL_26;
    }
    v6 = *(_QWORD *)(v4 + 16);
    v5 = *(_QWORD *)(v4 + 24);
    v7 = *(_QWORD *)(v4 + 48);
    v15 = *(_QWORD *)(v4 + 72);
    v16 = *(_QWORD *)(v4 + 40);
    v12 = *(_QWORD *)(v4 + 88);
    v13 = *(_QWORD *)(v4 + 96);
    v14 = *(_QWORD *)(v4 + 64);
    OUTLINED_FUNCTION_2_21();
    if (!v6)
    {
      OUTLINED_FUNCTION_35_3();
      goto LABEL_12;
    }
    OUTLINED_FUNCTION_30_2();
    result = OUTLINED_FUNCTION_176();
    if (HIDWORD(v5) < v5)
      break;
    OUTLINED_FUNCTION_29_5();
    OUTLINED_FUNCTION_9_15();
LABEL_12:
    if (v16)
    {
      OUTLINED_FUNCTION_30_2();
      result = OUTLINED_FUNCTION_176();
      if (HIDWORD(v7) < v7)
        goto LABEL_29;
      OUTLINED_FUNCTION_9_15();
    }
    else
    {
      OUTLINED_FUNCTION_35_3();
    }
    if (v14)
    {
      OUTLINED_FUNCTION_30_2();
      result = OUTLINED_FUNCTION_176();
      if (HIDWORD(v15) < v15)
        goto LABEL_30;
      OUTLINED_FUNCTION_29_5();
      OUTLINED_FUNCTION_9_15();
    }
    else
    {
      OUTLINED_FUNCTION_35_3();
    }
    if (v12)
    {
      OUTLINED_FUNCTION_30_2();
      result = OUTLINED_FUNCTION_176();
      if (HIDWORD(v13) < v13)
        goto LABEL_31;
      result = OUTLINED_FUNCTION_9_15();
    }
    else
    {
      result = OUTLINED_FUNCTION_35_3();
    }
LABEL_26:
    v3 = v18;
    v0 = v19 - 1;
    if (v19 == 1)
      return result;
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

void sub_1A569428C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_0_25();
  if (v0)
  {
    v2 = v1 + 40;
    do
    {
      OUTLINED_FUNCTION_90();
      OUTLINED_FUNCTION_31_5();
      OUTLINED_FUNCTION_52();
      v2 += 16;
      --v0;
    }
    while (v0);
  }
  OUTLINED_FUNCTION_17_1();
}

void sub_1A56942D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_21_10();
  OUTLINED_FUNCTION_0_25();
  if (v0)
  {
    do
    {
      OUTLINED_FUNCTION_85_1();
      if (v3)
      {
        if (v3 == 1)
        {
          OUTLINED_FUNCTION_3_19();
          sub_1A594B1D8();
          OUTLINED_FUNCTION_52();
        }
        else
        {
          OUTLINED_FUNCTION_108_1();
          OUTLINED_FUNCTION_23_7();
          OUTLINED_FUNCTION_4_3();
          sub_1A566676C(v1, v2);
          OUTLINED_FUNCTION_45_3();
          if (BYTE5(v2) == 255)
          {
            OUTLINED_FUNCTION_35_3();
          }
          else
          {
            OUTLINED_FUNCTION_30_2();
            if ((v2 & 0x10000000000) != 0)
            {
              OUTLINED_FUNCTION_3_19();
              sub_1A594CE88();
              if (*(_QWORD *)(v1 + 16))
              {
                sub_1A566658C(v1, v2, 1);
                do
                {
                  OUTLINED_FUNCTION_29();
                  OUTLINED_FUNCTION_26_1();
                  OUTLINED_FUNCTION_37();
                  OUTLINED_FUNCTION_109_1();
                }
                while (!v4);
                sub_1A56667BC(v1, v2);
                OUTLINED_FUNCTION_21_11();
                goto LABEL_12;
              }
            }
            else
            {
              OUTLINED_FUNCTION_2_21();
              if (BYTE4(v2) == 255)
              {
                OUTLINED_FUNCTION_3_19();
                OUTLINED_FUNCTION_118_1();
              }
              else
              {
                OUTLINED_FUNCTION_2_21();
                v5 = OUTLINED_FUNCTION_76_2();
                sub_1A56B6298(v5, v6, v7);
              }
            }
          }
          OUTLINED_FUNCTION_21_11();
        }
      }
      else
      {
        OUTLINED_FUNCTION_2_21();
        sub_1A594CE88();
      }
LABEL_12:
      OUTLINED_FUNCTION_119_1();
    }
    while (!v4);
  }
  OUTLINED_FUNCTION_3_18();
}

void sub_1A5694464()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_0_25();
  if (v0)
  {
    v2 = v1 + 48;
    do
    {
      v2 += 24;
      OUTLINED_FUNCTION_90();
      OUTLINED_FUNCTION_31_5();
      sub_1A594CE88();
      OUTLINED_FUNCTION_52();
      --v0;
    }
    while (v0);
  }
  OUTLINED_FUNCTION_17_1();
}

void sub_1A56944B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;

  OUTLINED_FUNCTION_21_10();
  OUTLINED_FUNCTION_0_25();
  if (v10)
  {
    v12 = v11 + 32;
    do
    {
      if (*(_BYTE *)(v12 + 30))
      {
        v13 = *(_QWORD *)(v12 + 16);
        v14 = *(unsigned int *)(v12 + 24) | ((unint64_t)*(unsigned __int16 *)(v12 + 28) << 32);
        if (*(_BYTE *)(v12 + 30) == 1)
        {
          sub_1A594CE88();
          OUTLINED_FUNCTION_42();
          sub_1A566676C(v13, v14);
          OUTLINED_FUNCTION_83_2();
          OUTLINED_FUNCTION_43_4();
          if (BYTE5(v14) == 255)
          {
            OUTLINED_FUNCTION_35_3();
          }
          else
          {
            OUTLINED_FUNCTION_30_2();
            if ((v14 & 0x10000000000) != 0)
            {
              OUTLINED_FUNCTION_3_19();
              OUTLINED_FUNCTION_56_5();
              if (*(_QWORD *)(v13 + 16))
              {
                OUTLINED_FUNCTION_48_3(v13, v14);
                do
                {
                  OUTLINED_FUNCTION_29();
                  OUTLINED_FUNCTION_26_1();
                  OUTLINED_FUNCTION_37();
                  OUTLINED_FUNCTION_109_1();
                }
                while (!v15);
                OUTLINED_FUNCTION_115_1();
                OUTLINED_FUNCTION_68_1();
                v12 = v11 + 32;
                goto LABEL_19;
              }
            }
            else
            {
              OUTLINED_FUNCTION_2_21();
              if (BYTE4(v14) == 255)
              {
                OUTLINED_FUNCTION_3_19();
                OUTLINED_FUNCTION_115_1();
              }
              else
              {
                OUTLINED_FUNCTION_2_21();
                OUTLINED_FUNCTION_75_1(a10 & 0xFFFFFF0000000000 | v14);
              }
            }
          }
          OUTLINED_FUNCTION_68_1();
        }
        else
        {
          sub_1A594CE88();
        }
      }
      else
      {
        OUTLINED_FUNCTION_125_1();
        sub_1A594CE88();
        sub_1A594CEAC();
        sub_1A594CEAC();
      }
LABEL_19:
      OUTLINED_FUNCTION_119_1();
    }
    while (!v15);
  }
  OUTLINED_FUNCTION_3_18();
}

void sub_1A569467C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_21_10();
  OUTLINED_FUNCTION_0_25();
  if (v0)
  {
    do
    {
      OUTLINED_FUNCTION_85_1();
      if (v3 == 1)
      {
        OUTLINED_FUNCTION_108_1();
        OUTLINED_FUNCTION_3_19();
        OUTLINED_FUNCTION_4_3();
        sub_1A566676C(v1, v2);
        OUTLINED_FUNCTION_45_3();
        if (BYTE5(v2) == 255)
        {
          OUTLINED_FUNCTION_35_3();
        }
        else
        {
          OUTLINED_FUNCTION_30_2();
          if ((v2 & 0x10000000000) != 0)
          {
            OUTLINED_FUNCTION_3_19();
            sub_1A594CE88();
            if (*(_QWORD *)(v1 + 16))
            {
              sub_1A566658C(v1, v2, 1);
              do
              {
                OUTLINED_FUNCTION_29();
                OUTLINED_FUNCTION_26_1();
                OUTLINED_FUNCTION_37();
                OUTLINED_FUNCTION_109_1();
              }
              while (!v4);
              sub_1A56667BC(v1, v2);
              OUTLINED_FUNCTION_66_1();
              goto LABEL_7;
            }
          }
          else
          {
            OUTLINED_FUNCTION_2_21();
            if (BYTE4(v2) == 255)
            {
              OUTLINED_FUNCTION_3_19();
              OUTLINED_FUNCTION_118_1();
            }
            else
            {
              OUTLINED_FUNCTION_2_21();
              v5 = OUTLINED_FUNCTION_76_2();
              OUTLINED_FUNCTION_111_0(v5, v6, v7);
            }
          }
        }
        OUTLINED_FUNCTION_66_1();
      }
      else
      {
        OUTLINED_FUNCTION_2_21();
        sub_1A594CEB8();
      }
LABEL_7:
      OUTLINED_FUNCTION_119_1();
    }
    while (!v4);
  }
  OUTLINED_FUNCTION_3_18();
}

#error "1A56948E0: call analysis failed (funcsize=83)"

void sub_1A56948F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_21_10();
  v2 = OUTLINED_FUNCTION_0_25();
  if (v0)
    ((void (*)(uint64_t))((char *)&loc_1A5694958 + 4 * byte_1A59AE7F8[*(unsigned __int8 *)(v1 + 68) >> 5]))(v2);
  else
    OUTLINED_FUNCTION_3_18();
}

void sub_1A5694CF8()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 *v2;
  int v3;

  OUTLINED_FUNCTION_0_25();
  if (v0)
  {
    v2 = (unsigned __int8 *)(v1 + 56);
    do
    {
      v3 = *v2;
      OUTLINED_FUNCTION_69();
      OUTLINED_FUNCTION_83_2();
      OUTLINED_FUNCTION_71_1();
      if (v3 == 1)
      {
        OUTLINED_FUNCTION_35_3();
      }
      else
      {
        OUTLINED_FUNCTION_30_2();
        sub_1A594CEB8();
      }
      OUTLINED_FUNCTION_55();
      v2 += 32;
      --v0;
    }
    while (v0);
  }
  OUTLINED_FUNCTION_15_3();
}

void sub_1A5694D68()
{
  uint64_t v0;

  OUTLINED_FUNCTION_0_25();
  if (v0)
  {
    OUTLINED_FUNCTION_122_0();
    __asm { BR              X9 }
  }
  OUTLINED_FUNCTION_17_1();
}

void sub_1A5694E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;

  OUTLINED_FUNCTION_70_1();
  OUTLINED_FUNCTION_0_25();
  if (v12)
  {
    v16 = v13 + 48;
    while (1)
    {
      v17 = *(_QWORD *)(v16 + 16);
      if (v17 != 254 && v17 != 255)
        break;
      sub_1A594CE88();
LABEL_18:
      v16 += 64;
      if (!--v12)
        goto LABEL_19;
    }
    OUTLINED_FUNCTION_92_1();
    OUTLINED_FUNCTION_3_19();
    v29 = v15;
    if ((v17 & 1) != 0)
    {
      OUTLINED_FUNCTION_3_19();
      OUTLINED_FUNCTION_62_2();
      v20 = v15;
      v15 = a12;
      sub_1A5666818(v20, v14, a12);
      OUTLINED_FUNCTION_24_5();
      OUTLINED_FUNCTION_59_4();
      v19 = v14;
    }
    else
    {
      OUTLINED_FUNCTION_2_21();
      OUTLINED_FUNCTION_63_2();
      v18 = v15;
      v15 = a12;
      sub_1A5666818(v18, v14, a12);
      v19 = v14;
      OUTLINED_FUNCTION_24_5();
    }
    if (HIBYTE(v15) == 255)
    {
      OUTLINED_FUNCTION_35_3();
      v21 = OUTLINED_FUNCTION_99_2();
    }
    else
    {
      OUTLINED_FUNCTION_30_2();
      if ((v15 & 0x100000000000000) == 0)
      {
        v14 = v15;
        OUTLINED_FUNCTION_2_21();
        v15 = v29;
        OUTLINED_FUNCTION_176();
        if (HIDWORD(v19) < v19)
        {
          __break(1u);
          return;
        }
        OUTLINED_FUNCTION_9_15();
        v21 = OUTLINED_FUNCTION_51_4();
        goto LABEL_17;
      }
      OUTLINED_FUNCTION_3_19();
      v14 = v29;
      OUTLINED_FUNCTION_90();
      OUTLINED_FUNCTION_127_1();
      v21 = OUTLINED_FUNCTION_53_4();
    }
    v27 = v19;
    v28 = v15;
LABEL_17:
    sub_1A5697434(v21, v22, v23, v24, v25, v26, v27, v28);
    goto LABEL_18;
  }
LABEL_19:
  OUTLINED_FUNCTION_8_9();
}

uint64_t sub_1A5694FA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  result = OUTLINED_FUNCTION_0_25();
  if (v0)
  {
    v4 = (_BYTE *)(v2 + 55);
    do
    {
      v5 = *(_QWORD *)(v4 - 23);
      v6 = *(_QWORD *)(v4 - 15);
      v7 = *(unsigned int *)(v4 - 7) | ((unint64_t)(*(unsigned __int16 *)(v4 - 3) | (*(v4 - 1) << 16)) << 32);
      if ((*v4 & 1) != 0)
      {
        OUTLINED_FUNCTION_3_19();
        OUTLINED_FUNCTION_184();
        sub_1A5694FA8(v1, v5);
        result = sub_1A56667E0(v5, v6, v7, 1);
      }
      else
      {
        OUTLINED_FUNCTION_2_21();
        result = OUTLINED_FUNCTION_176();
        if (HIDWORD(v6) < v6)
        {
          __break(1u);
          return result;
        }
        OUTLINED_FUNCTION_131_1();
        result = OUTLINED_FUNCTION_9_15();
      }
      v4 += 24;
      --v0;
    }
    while (v0);
  }
  return result;
}

void sub_1A569507C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  OUTLINED_FUNCTION_70_1();
  v24 = v23;
  OUTLINED_FUNCTION_107_1();
  v51 = v22;
  if (v22)
  {
    v25 = 0;
    v50 = v24 + 32;
    do
    {
      v26 = (uint64_t *)(v50 + (v25 << 6));
      v27 = *v26;
      v28 = v26[1];
      v29 = v26[3];
      v31 = v26[4];
      v30 = v26[5];
      v33 = v26[6];
      v32 = v26[7];
      if (v31 >> 62)
      {
        if (v31 >> 62 == 1)
        {
          v52 = v26[2];
          OUTLINED_FUNCTION_22_9();
          if ((v31 & 1) != 0)
          {
            OUTLINED_FUNCTION_3_19();
            sub_1A56667EC(v27, v28, v52, v29, 1);
            sub_1A5666818(v30, v33, v32);
            OUTLINED_FUNCTION_60_3();
          }
          else
          {
            OUTLINED_FUNCTION_2_21();
            sub_1A56667EC(v27, v28, v52, v29, 0);
            sub_1A5666818(v30, v33, v32);
          }
          sub_1A594B1D8();
          if (HIBYTE(v32) == 255)
          {
            OUTLINED_FUNCTION_35_3();
            v43 = OUTLINED_FUNCTION_78_2();
            v49 = v33;
          }
          else
          {
            OUTLINED_FUNCTION_30_2();
            if ((v32 & 0x100000000000000) != 0)
            {
              OUTLINED_FUNCTION_3_19();
              OUTLINED_FUNCTION_27();
              OUTLINED_FUNCTION_182();
              sub_1A5694FA8();
              sub_1A56668A4(v30, v33, v32);
            }
            else
            {
              OUTLINED_FUNCTION_2_21();
              OUTLINED_FUNCTION_176();
              if (HIDWORD(v33) < v33)
              {
                __break(1u);
                JUMPOUT(0x1A5695350);
              }
              OUTLINED_FUNCTION_131_1();
              OUTLINED_FUNCTION_9_15();
            }
            v43 = OUTLINED_FUNCTION_78_2();
            v49 = v33;
          }
          sub_1A56668BC(v43, v44, v45, v46, v47, v48, v49, v32);
        }
        else
        {
          sub_1A594CE88();
        }
      }
      else
      {
        v53 = v26[2];
        OUTLINED_FUNCTION_23_7();
        OUTLINED_FUNCTION_56_5();
        if (*(_QWORD *)(v27 + 16))
        {
          OUTLINED_FUNCTION_4_3();
          OUTLINED_FUNCTION_122_0();
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_1A5695150 + *((int *)qword_1A5695350 + v34)))(v35, v36, v37, v38, v39, v40, v41, v42, a9, v30, v29, v50, v51, v53, v33, a16, a17, a18, a19,
            a20,
            a21,
            a22);
          return;
        }
      }
      ++v25;
    }
    while (v25 != v51);
  }
  OUTLINED_FUNCTION_8_9();
}

void sub_1A569536C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;

  OUTLINED_FUNCTION_70_1();
  OUTLINED_FUNCTION_0_25();
  v47 = v12;
  if (v12)
  {
    v15 = 0;
    v46 = v14 + 32;
    while (1)
    {
      v16 = v46 + (v15 << 6);
      v18 = *(_QWORD *)(v16 + 16);
      v17 = *(_QWORD *)(v16 + 24);
      v20 = *(_QWORD *)(v16 + 32);
      v19 = *(_QWORD *)(v16 + 40);
      v21 = *(_QWORD *)(v16 + 48);
      v22 = *(unsigned int *)(v16 + 56) | ((unint64_t)*(unsigned __int8 *)(v16 + 60) << 32);
      if (!(v17 >> 62))
        break;
      if (v17 >> 62 == 1)
      {
        OUTLINED_FUNCTION_3_19();
        sub_1A594CEAC();
        sub_1A594CEB8();
        if ((~v17 & 0xFF00000000) != 0)
        {
          OUTLINED_FUNCTION_30_2();
          v32 = OUTLINED_FUNCTION_83_2();
          sub_1A56B6298(v32, v33, v34);
        }
        else
        {
          OUTLINED_FUNCTION_35_3();
        }
        if ((v19 & 0xFF00000000) == 0xFE00000000)
        {
          OUTLINED_FUNCTION_35_3();
          goto LABEL_27;
        }
        OUTLINED_FUNCTION_30_2();
        if ((v19 & 0xFF00000000) == 0xFF00000000)
        {
          OUTLINED_FUNCTION_3_19();
        }
        else
        {
          OUTLINED_FUNCTION_2_21();
          OUTLINED_FUNCTION_111_0(v13, v20, a12 & 0xFFFFFF0000000000 | v19 & 0xFFFFFFFFFFLL);
        }
        if (BYTE4(v22) != 255)
        {
          OUTLINED_FUNCTION_2_21();
          v39 = OUTLINED_FUNCTION_182();
          sub_1A56B6298(v39, v40, v41);
          goto LABEL_27;
        }
      }
      sub_1A594CE88();
LABEL_27:
      if (++v15 == v47)
        goto LABEL_30;
    }
    v45 = *(unsigned int *)(v16 + 56) | ((unint64_t)*(unsigned __int8 *)(v16 + 60) << 32);
    OUTLINED_FUNCTION_2_21();
    OUTLINED_FUNCTION_42();
    v23 = OUTLINED_FUNCTION_98_2();
    sub_1A566676C(v23, v24);
    OUTLINED_FUNCTION_32_6();
    if (BYTE5(v17) == 255)
    {
      OUTLINED_FUNCTION_35_3();
    }
    else
    {
      OUTLINED_FUNCTION_30_2();
      if ((v17 & 0x10000000000) != 0)
      {
        OUTLINED_FUNCTION_3_19();
        OUTLINED_FUNCTION_124_1();
        v35 = *(_QWORD *)(v18 + 16);
        if (v35)
        {
          v36 = OUTLINED_FUNCTION_98_2();
          OUTLINED_FUNCTION_48_3(v36, v37);
          v38 = v18 + 40;
          do
          {
            OUTLINED_FUNCTION_4_3();
            OUTLINED_FUNCTION_182();
            OUTLINED_FUNCTION_45_3();
            OUTLINED_FUNCTION_41();
            v38 += 16;
            --v35;
          }
          while (v35);
          OUTLINED_FUNCTION_117_0();
          v25 = OUTLINED_FUNCTION_101_2();
          v31 = v21;
          goto LABEL_10;
        }
      }
      else
      {
        OUTLINED_FUNCTION_2_21();
        if (BYTE4(v17) == 255)
        {
          OUTLINED_FUNCTION_3_19();
          OUTLINED_FUNCTION_117_0();
        }
        else
        {
          OUTLINED_FUNCTION_2_21();
          v42 = OUTLINED_FUNCTION_83_2();
          sub_1A56B6298(v42, v43, v44);
        }
      }
    }
    v25 = OUTLINED_FUNCTION_101_2();
    v31 = v21;
LABEL_10:
    sub_1A56669A0(v25, v26, v27, v28, v29, v30, v31, v45);
    goto LABEL_27;
  }
LABEL_30:
  OUTLINED_FUNCTION_8_9();
}

void sub_1A5695590(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v3 = *(_QWORD *)(a2 + 16);
  OUTLINED_FUNCTION_61_2();
  if (v3)
  {
    v4 = 0;
    v5 = a2 + 32;
    v29 = v3;
    v30 = a2 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v5 + 32 * v4);
      v7 = *v6;
      v8 = v6[2];
      v9 = *((unsigned int *)v6 + 6) | ((unint64_t)*((unsigned __int16 *)v6 + 14) << 32);
      v10 = *((_BYTE *)v6 + 30);
      if ((v10 & 1) == 0)
        break;
      OUTLINED_FUNCTION_3_19();
      OUTLINED_FUNCTION_124_1();
      v11 = *(_QWORD *)(v7 + 16);
      if (v11)
      {
        v31 = v10;
        OUTLINED_FUNCTION_90();
        v12 = v7 + 40;
        do
        {
          sub_1A594B49C();
          OUTLINED_FUNCTION_29();
          OUTLINED_FUNCTION_71_1();
          OUTLINED_FUNCTION_37();
          OUTLINED_FUNCTION_55();
          v12 += 16;
          --v11;
        }
        while (v11);
        v3 = v29;
        goto LABEL_17;
      }
LABEL_20:
      if (++v4 == v3)
        goto LABEL_23;
    }
    OUTLINED_FUNCTION_2_21();
    OUTLINED_FUNCTION_82();
    sub_1A566676C(v8, v9);
    OUTLINED_FUNCTION_83_2();
    OUTLINED_FUNCTION_60_3();
    if (BYTE5(v9) == 255)
    {
      OUTLINED_FUNCTION_35_3();
    }
    else
    {
      OUTLINED_FUNCTION_30_2();
      if ((v9 & 0x10000000000) != 0)
      {
        v31 = v10;
        OUTLINED_FUNCTION_3_19();
        sub_1A594CE88();
        v13 = *(_QWORD *)(v8 + 16);
        if (v13)
        {
          OUTLINED_FUNCTION_48_3(v8, v9);
          v14 = v8 + 40;
          do
          {
            OUTLINED_FUNCTION_82();
            OUTLINED_FUNCTION_57_3();
            OUTLINED_FUNCTION_94();
            v14 += 16;
            --v13;
          }
          while (v13);
          OUTLINED_FUNCTION_52_3();
LABEL_17:
          v5 = v30;
        }
        v10 = v31;
      }
      else
      {
        OUTLINED_FUNCTION_2_21();
        if (BYTE4(v9) == 255)
        {
          OUTLINED_FUNCTION_3_19();
          OUTLINED_FUNCTION_52_3();
        }
        else
        {
          v19 = OUTLINED_FUNCTION_2_21();
          OUTLINED_FUNCTION_40_5(v19, v20, v21, v22, v23, v24, v25, v26, v27, v28);
        }
      }
    }
    OUTLINED_FUNCTION_91_1();
    sub_1A5666784(v15, v16, v17, v18, v10);
    goto LABEL_20;
  }
LABEL_23:
  OUTLINED_FUNCTION_5_2();
}

void sub_1A569572C(uint64_t a1, uint64_t a2)
{
  sub_1A5697348(a1, a2, (void (*)(_QWORD, _QWORD))MEMORY[0x1E0DEA610]);
}

void sub_1A5695738()
{
  uint64_t v0;

  OUTLINED_FUNCTION_0_25();
  if (v0)
    __asm { BR              X9 }
  OUTLINED_FUNCTION_15_3();
}

void sub_1A5695818()
{
  uint64_t v0;

  OUTLINED_FUNCTION_0_25();
  if (v0)
    __asm { BR              X9 }
  OUTLINED_FUNCTION_5_2();
}

uint64_t sub_1A5695A08(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v3 = *(_QWORD *)(a2 + 16);
  result = OUTLINED_FUNCTION_97_2();
  if (v3)
  {
    v5 = 0;
    v20 = v3;
    v21 = a2 + 32;
    while (1)
    {
      v22 = v5;
      v6 = v21 + (v5 << 6);
      v7 = *(_QWORD *)(v6 + 32);
      v24 = *(_QWORD *)(v6 + 48);
      v23 = *(_QWORD *)(v6 + 56);
      v8 = *(_DWORD *)(v6 + 8);
      v9 = *(_DWORD *)(v6 + 12);
      result = OUTLINED_FUNCTION_176();
      if (v9 < v8)
        break;
      OUTLINED_FUNCTION_9_15();
      if (v7)
      {
        OUTLINED_FUNCTION_30_2();
        sub_1A594B1D8();
      }
      else
      {
        OUTLINED_FUNCTION_35_3();
      }
      v10 = *(_QWORD *)(v23 + 16);
      OUTLINED_FUNCTION_61_2();
      if (v10)
      {
        v25 = *(_QWORD *)(v23 + 16);
        v26 = *(_QWORD *)(v24 + 16);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        OUTLINED_FUNCTION_129_1();
        OUTLINED_FUNCTION_129_1();
        OUTLINED_FUNCTION_129_1();
        result = swift_retain();
        v11 = 0;
        while (v11 != v26)
        {
          if (v11 == v25)
            goto LABEL_23;
          v12 = v24 + 32 + 24 * v11;
          v13 = *(_DWORD *)(v12 + 8);
          v14 = *(_DWORD *)(v12 + 12);
          v15 = *(_QWORD *)(v23 + 32 + 8 * v11);
          result = OUTLINED_FUNCTION_176();
          if (v14 < v13)
            goto LABEL_24;
          OUTLINED_FUNCTION_9_15();
          result = OUTLINED_FUNCTION_56_5();
          v16 = *(_QWORD *)(v15 + 16);
          if (v16)
          {
            v17 = v15 + 54;
            while (1)
            {
              v18 = *(_DWORD *)(v17 - 14);
              v19 = *(_DWORD *)(v17 - 10);
              result = OUTLINED_FUNCTION_176();
              if (v19 < v18)
                break;
              v17 += 24;
              result = OUTLINED_FUNCTION_9_15();
              if (!--v16)
                goto LABEL_16;
            }
            __break(1u);
            break;
          }
LABEL_16:
          if (++v11 == v10)
          {
            OUTLINED_FUNCTION_149_0();
            OUTLINED_FUNCTION_149_0();
            OUTLINED_FUNCTION_149_0();
            v3 = v20;
            goto LABEL_19;
          }
        }
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
        break;
      }
      OUTLINED_FUNCTION_1_2();
      OUTLINED_FUNCTION_12_1();
      OUTLINED_FUNCTION_39();
      OUTLINED_FUNCTION_11_1();
      OUTLINED_FUNCTION_90();
LABEL_19:
      v5 = v22 + 1;
      swift_release();
      swift_release();
      OUTLINED_FUNCTION_2_4();
      OUTLINED_FUNCTION_52();
      result = OUTLINED_FUNCTION_36();
      if (v22 + 1 == v3)
        return result;
    }
    __break(1u);
  }
  return result;
}

void sub_1A5695CB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  _UNKNOWN *__ptr32 *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _UNKNOWN *__ptr32 *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;

  OUTLINED_FUNCTION_70_1();
  OUTLINED_FUNCTION_0_25();
  if (v12)
  {
    v16 = v13 + 48;
    while (1)
    {
      v17 = *(_QWORD *)(v16 + 16);
      switch((char)v17)
      {
        case -4:
        case -3:
        case -2:
        case -1:
          sub_1A594CE88();
          goto LABEL_7;
        default:
          OUTLINED_FUNCTION_92_1();
          OUTLINED_FUNCTION_103_2();
          v29 = v15;
          if ((v17 & 1) != 0)
          {
            OUTLINED_FUNCTION_3_19();
            OUTLINED_FUNCTION_62_2();
            v20 = v15;
            v15 = a12;
            sub_1A5666818(v20, (uint64_t)v14, a12);
            OUTLINED_FUNCTION_24_5();
            OUTLINED_FUNCTION_59_4();
            v19 = v14;
          }
          else
          {
            OUTLINED_FUNCTION_2_21();
            OUTLINED_FUNCTION_63_2();
            v18 = v15;
            v15 = a12;
            sub_1A5666818(v18, (uint64_t)v14, a12);
            v19 = v14;
            OUTLINED_FUNCTION_24_5();
          }
          if (HIBYTE(v15) == 255)
          {
            OUTLINED_FUNCTION_35_3();
            v21 = OUTLINED_FUNCTION_99_2();
          }
          else
          {
            OUTLINED_FUNCTION_30_2();
            if ((v15 & 0x100000000000000) == 0)
            {
              OUTLINED_FUNCTION_2_21();
              v15 = v29;
              OUTLINED_FUNCTION_176();
              if (HIDWORD(v19) < v19)
              {
                __break(1u);
                JUMPOUT(0x1A5695E54);
              }
              OUTLINED_FUNCTION_9_15();
              v21 = OUTLINED_FUNCTION_51_4();
              goto LABEL_18;
            }
            OUTLINED_FUNCTION_3_19();
            OUTLINED_FUNCTION_90();
            OUTLINED_FUNCTION_127_1();
            v21 = OUTLINED_FUNCTION_53_4();
          }
          v27 = (uint64_t)v19;
          v28 = v15;
LABEL_18:
          sub_1A56973E0(v21, v22, v23, v24, v25, v26, v27, v28);
          v14 = &jpt_1A5695CF8;
LABEL_7:
          v16 += 64;
          if (!--v12)
            goto LABEL_19;
          break;
      }
    }
  }
LABEL_19:
  OUTLINED_FUNCTION_8_9();
}

void sub_1A5695E64()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_0_25();
  if (v0)
  {
    v2 = (_QWORD *)(v1 + 40);
    do
    {
      if (*v2)
      {
        OUTLINED_FUNCTION_2_21();
        OUTLINED_FUNCTION_98_2();
        sub_1A594B4B4();
        OUTLINED_FUNCTION_69();
        OUTLINED_FUNCTION_104_1();
        OUTLINED_FUNCTION_55();
        OUTLINED_FUNCTION_72();
      }
      else
      {
        OUTLINED_FUNCTION_3_19();
      }
      v2 += 2;
      --v0;
    }
    while (v0);
  }
  OUTLINED_FUNCTION_17_1();
}

void sub_1A5695ED0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_0_25();
  if (v0)
  {
    v2 = v1 + 36;
    do
    {
      sub_1A594CEAC();
      sub_1A594CEAC();
      v2 += 8;
      --v0;
    }
    while (v0);
  }
  OUTLINED_FUNCTION_8_1();
}

void sub_1A5695F10(uint64_t a1, uint64_t a2)
{
  sub_1A5697348(a1, a2, (void (*)(_QWORD, _QWORD))MEMORY[0x1E0DEA628]);
}

unint64_t sub_1A5695F20()
{
  unint64_t result;

  result = qword_1EE7A9430;
  if (!qword_1EE7A9430)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for AppendOptions, &type metadata for AppendOptions);
    atomic_store(result, (unint64_t *)&qword_1EE7A9430);
  }
  return result;
}

uint64_t initializeWithCopy for AppendOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for AppendOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy48_8_1(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AppendOptions(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for MailboxInfo(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for AppendOptions()
{
  return &type metadata for AppendOptions;
}

void sub_1A569612C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_0_25();
  if (v0)
  {
    v2 = v1 + 56;
    do
    {
      OUTLINED_FUNCTION_90();
      OUTLINED_FUNCTION_31_5();
      sub_1A594CE88();
      OUTLINED_FUNCTION_97_2();
      OUTLINED_FUNCTION_52();
      v2 += 32;
      --v0;
    }
    while (v0);
  }
  OUTLINED_FUNCTION_15_3();
}

uint64_t sub_1A5696184(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  const void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _BYTE *v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _BYTE *v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  _BYTE *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  __int128 v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  __int128 v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  _BYTE v164[184];
  _BYTE __dst[328];
  _BYTE v166[184];
  _BYTE v167[184];
  _BYTE v168[184];
  _BYTE v169[105];
  _BYTE v170[176];
  __int128 v171;
  uint64_t v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  uint64_t v179;
  uint64_t v180;
  __int128 v181;
  int v182;
  __int16 v183;
  char v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  __int128 v192;
  uint64_t v193;

  v4 = *(_QWORD *)(a2 + 16);
  result = OUTLINED_FUNCTION_112_1();
  v142 = v4;
  if (!v4)
    return result;
  v6 = 0;
  v141 = a2 + 32;
  v122 = &__dst[136];
  v163 = a1;
  while (1)
  {
    v162 = v6;
    sub_1A55DC3E0((const void *)(v141 + 184 * v6), v168);
    sub_1A55DC3E0(v168, v169);
    if (sub_1A55DC430((uint64_t)v169) != 1)
    {
      nullsub_1(v169);
      v18 = v17;
      OUTLINED_FUNCTION_112_1();
      v19 = *v18 >> 62;
      if ((_DWORD)v19)
      {
        if ((_DWORD)v19 == 1)
        {
          memcpy(__dst, (const void *)((*v18 & 0x3FFFFFFFFFFFFFFFLL) + 16), sizeof(__dst));
          OUTLINED_FUNCTION_112_1();
          sub_1A55DC3E0(v168, v166);
          nullsub_1(v166);
          sub_1A56974D0(v20);
          sub_1A55DC438((uint64_t)v168, sub_1A552370C);
          OUTLINED_FUNCTION_1_2();
          OUTLINED_FUNCTION_69();
          sub_1A5692040((uint64_t)__dst);
          OUTLINED_FUNCTION_71_1();
          OUTLINED_FUNCTION_55();
          v179 = *(_QWORD *)&__dst[16];
          v180 = *(_QWORD *)&__dst[24];
          v181 = *(_OWORD *)&__dst[32];
          v183 = *(_WORD *)&__dst[52];
          v182 = *(_DWORD *)&__dst[48];
          v184 = __dst[54];
          v185 = *(_QWORD *)&__dst[56];
          v186 = *(_QWORD *)&__dst[64];
          v187 = *(_QWORD *)&__dst[72];
          v188 = *(_QWORD *)&__dst[80];
          v189 = *(_QWORD *)&__dst[88];
          v190 = *(_QWORD *)&__dst[96];
          v192 = *(_OWORD *)&__dst[112];
          v191 = *(_QWORD *)&__dst[104];
          v193 = *(_QWORD *)&__dst[128];
          OUTLINED_FUNCTION_184();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          OUTLINED_FUNCTION_12_1();
          OUTLINED_FUNCTION_27();
          OUTLINED_FUNCTION_13_0();
          OUTLINED_FUNCTION_29();
          OUTLINED_FUNCTION_82();
          OUTLINED_FUNCTION_13_0();
          OUTLINED_FUNCTION_69();
          OUTLINED_FUNCTION_42();
          Envelope.hash(into:)(v163);
          OUTLINED_FUNCTION_72();
          OUTLINED_FUNCTION_38();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_19();
          OUTLINED_FUNCTION_94();
          OUTLINED_FUNCTION_37();
          OUTLINED_FUNCTION_17();
          swift_bridgeObjectRelease();
          swift_release();
          v21 = swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_128_1(v21, v167);
          if (sub_1A55DC430((uint64_t)v167) == 1)
          {
            nullsub_1(v167);
            v23 = *((_QWORD *)v22 + 2);
            v171 = *v22;
            v172 = v23;
            v173 = *(__int128 *)((char *)v22 + 24);
            v174 = *(__int128 *)((char *)v22 + 40);
            v175 = *(__int128 *)((char *)v22 + 56);
            v176 = *(__int128 *)((char *)v22 + 72);
            v177 = *(__int128 *)((char *)v22 + 88);
            v178 = *(__int128 *)((char *)v22 + 104);
            v24 = sub_1A594CE88();
            OUTLINED_FUNCTION_128_1(v24, v164);
            nullsub_1(v164);
            v26 = *(_QWORD *)(v25 + 40);
            v153 = *(_QWORD *)(v25 + 32);
            v157 = *(_QWORD *)(v25 + 24);
            v27 = *(_QWORD *)(v25 + 48);
            v28 = *(_QWORD *)(v25 + 56);
            v29 = *(_QWORD *)(v25 + 64);
            v30 = *(_QWORD *)(v25 + 72);
            v149 = *(_QWORD *)(v25 + 80);
            v145 = *(_OWORD *)(v25 + 88);
            v31 = *(_QWORD *)(v25 + 104);
            v32 = *(_QWORD *)(v25 + 112);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            sub_1A5523A30(v157, v153, v26, v27, v28, v29, v30, v149, v145, *((uint64_t *)&v145 + 1), v31, v32);
            BodyStructure.Multipart.hash(into:)(v163);
          }
          else
          {
            nullsub_1(v167);
            memcpy(v170, v44, sizeof(v170));
            v45 = sub_1A594CE88();
            OUTLINED_FUNCTION_128_1(v45, v164);
            nullsub_1(v164);
            sub_1A56974D0(v46);
            BodyStructure.Singlepart.hash(into:)(v163);
          }
          sub_1A55DC438((uint64_t)v122, sub_1A55241F0);
          v33 = v163;
          sub_1A594CE88();
          sub_1A56921B8((uint64_t)__dst);
        }
        else
        {
          v33 = a1;
          OUTLINED_FUNCTION_23_7();
          OUTLINED_FUNCTION_2_20((uint64_t)v168);
          OUTLINED_FUNCTION_2_20((uint64_t)v168);
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_42();
          OUTLINED_FUNCTION_32_6();
          OUTLINED_FUNCTION_38();
          sub_1A594CE88();
        }
        swift_release();
      }
      else
      {
        v33 = a1;
        OUTLINED_FUNCTION_2_21();
        sub_1A55DC438((uint64_t)v168, sub_1A552370C);
        sub_1A55DC438((uint64_t)v168, sub_1A552370C);
        OUTLINED_FUNCTION_17_0();
        OUTLINED_FUNCTION_184();
        sub_1A594B1D8();
        OUTLINED_FUNCTION_72();
        OUTLINED_FUNCTION_4_3();
        OUTLINED_FUNCTION_45_3();
        OUTLINED_FUNCTION_23();
        OUTLINED_FUNCTION_41();
      }
      v47 = v18[5];
      v48 = v18[7];
      v49 = v18[9];
      OUTLINED_FUNCTION_29();
      OUTLINED_FUNCTION_87();
      OUTLINED_FUNCTION_87();
      OUTLINED_FUNCTION_87();
      OUTLINED_FUNCTION_4_3();
      OUTLINED_FUNCTION_13_0();
      sub_1A5693A38();
      OUTLINED_FUNCTION_48();
      OUTLINED_FUNCTION_2_4();
      OUTLINED_FUNCTION_36();
      if (v47)
      {
        OUTLINED_FUNCTION_30_2();
        OUTLINED_FUNCTION_4_3();
        OUTLINED_FUNCTION_45_3();
        OUTLINED_FUNCTION_41();
        if (v48)
          goto LABEL_21;
      }
      else
      {
        OUTLINED_FUNCTION_35_3();
        if (v48)
        {
LABEL_21:
          OUTLINED_FUNCTION_17_10();
          OUTLINED_FUNCTION_13_0();
          OUTLINED_FUNCTION_59_4();
          OUTLINED_FUNCTION_19();
          if (v49)
          {
LABEL_22:
            OUTLINED_FUNCTION_17_10();
            OUTLINED_FUNCTION_29();
            OUTLINED_FUNCTION_26_1();
            OUTLINED_FUNCTION_37();
LABEL_26:
            sub_1A594CE88();
            OUTLINED_FUNCTION_37();
            OUTLINED_FUNCTION_19();
            OUTLINED_FUNCTION_41();
            OUTLINED_FUNCTION_48();
            OUTLINED_FUNCTION_2_4();
            OUTLINED_FUNCTION_36();
            v161 = v18[12];
            if (v161 == 1)
            {
              OUTLINED_FUNCTION_35_3();
              OUTLINED_FUNCTION_2_20((uint64_t)v168);
              result = OUTLINED_FUNCTION_2_20((uint64_t)v168);
              a1 = v33;
LABEL_52:
              v16 = v162;
              goto LABEL_88;
            }
            v50 = v18[11];
            v51 = v18[14];
            v154 = v18[13];
            v53 = v18[15];
            v52 = v18[16];
            v54 = v18[17];
            v55 = v18[18];
            v57 = v18[19];
            v56 = v18[20];
            v58 = v18[21];
            OUTLINED_FUNCTION_30_2();
            v158 = v58;
            v150 = v56;
            *(_QWORD *)&v145 = v55;
            if (v161)
            {
              OUTLINED_FUNCTION_30_2();
              v119 = v58;
              v59 = v53;
              sub_1A552388C(v50, v161, v154, v51, v53, v52, v54, v55, v57, v56, v119);
              OUTLINED_FUNCTION_4_3();
              OUTLINED_FUNCTION_45_3();
              OUTLINED_FUNCTION_41();
            }
            else
            {
              OUTLINED_FUNCTION_35_3();
              v116 = v58;
              v59 = v53;
              sub_1A552391C(v154, v51, v53, v52, v54, v55, v57, v56, v116);
            }
            v60 = v57;
            if (v51 == 1)
            {
              a1 = v163;
              OUTLINED_FUNCTION_113_0();
              sub_1A5524370(v50, v161, v154, 1, v59, v52, v54, v145, v57, v150, v158);
            }
            else
            {
              OUTLINED_FUNCTION_17_10();
              v138 = v52;
              if (v51)
              {
                OUTLINED_FUNCTION_30_2();
                OUTLINED_FUNCTION_130_1();
                v61 = v145;
                sub_1A552391C(v62, v63, v64, v65, v66, v145, v57, v150, v158);
                v67 = OUTLINED_FUNCTION_89_1();
                sub_1A552396C(v67, v68);
                OUTLINED_FUNCTION_0_10();
                OUTLINED_FUNCTION_1_2();
                OUTLINED_FUNCTION_17_0();
                OUTLINED_FUNCTION_69();
                OUTLINED_FUNCTION_71_1();
                OUTLINED_FUNCTION_0_10();
                OUTLINED_FUNCTION_1_2();
                OUTLINED_FUNCTION_17_0();
                sub_1A5693A38();
                OUTLINED_FUNCTION_55();
                OUTLINED_FUNCTION_149_0();
                OUTLINED_FUNCTION_149_0();
                OUTLINED_FUNCTION_149_0();
                v69 = OUTLINED_FUNCTION_89_1();
                sub_1A5524450(v69, v70);
              }
              else
              {
                OUTLINED_FUNCTION_35_3();
                OUTLINED_FUNCTION_130_1();
                sub_1A552396C(v75, v76);
                v61 = v145;
                sub_1A55239BC(v145, v57, v150, v158);
              }
              if (v61)
              {
                v134 = v54;
                OUTLINED_FUNCTION_17_10();
                OUTLINED_FUNCTION_56_5();
                v77 = *(_QWORD *)(v61 + 16);
                if (v77)
                {
                  v78 = v52;
                  OUTLINED_FUNCTION_90_2();
                  v79 = v150;
                  OUTLINED_FUNCTION_123_1(v61, v57, v150, v80, v81, v82, v83, v84, v115, v117, v118, v120, v121, (uint64_t)v122, v123, v124, v125, v126, v127,
                    v128,
                    v129,
                    *((uint64_t *)&v129 + 1),
                    v130,
                    v131,
                    v132,
                    v134,
                    v50,
                    v138,
                    v50,
                    v141,
                    v142,
                    v51,
                    v145,
                    *((uint64_t *)&v145 + 1),
                    v147,
                    v150,
                    v154,
                    v158);
                  v85 = v79;
                  sub_1A5523A00(v60, v79, v59);
                  v86 = v61 + 40;
                  do
                  {
                    OUTLINED_FUNCTION_42();
                    OUTLINED_FUNCTION_32_6();
                    OUTLINED_FUNCTION_38();
                    v86 += 16;
                    --v77;
                  }
                  while (v77);
                  swift_bridgeObjectRelease();
                  v87 = v78;
                  v50 = v137;
                  v51 = v144;
                  if (v59)
                    goto LABEL_48;
LABEL_59:
                  OUTLINED_FUNCTION_19_9();
                  v100 = 0;
                  v101 = v59;
                  v102 = v87;
                }
                else
                {
                  v94 = OUTLINED_FUNCTION_4_3();
                  v85 = v150;
                  OUTLINED_FUNCTION_123_1(v94, v60, v150, v95, v96, v97, v98, v99, v115, v117, v118, v120, v121, (uint64_t)v122, v123, v124, v125, v126, v127,
                    v128,
                    v129,
                    *((uint64_t *)&v129 + 1),
                    v130,
                    v131,
                    v132,
                    v134,
                    v50,
                    v52,
                    v50,
                    v141,
                    v142,
                    v51,
                    v145,
                    *((uint64_t *)&v145 + 1),
                    v147,
                    v150,
                    v154,
                    v158);
                  OUTLINED_FUNCTION_94_2();
                  v87 = v139;
                  if (!v59)
                    goto LABEL_59;
LABEL_48:
                  OUTLINED_FUNCTION_17_10();
                  if (v85)
                  {
                    OUTLINED_FUNCTION_30_2();
                    OUTLINED_FUNCTION_94_2();
                    OUTLINED_FUNCTION_90();
                    OUTLINED_FUNCTION_13_0();
                    OUTLINED_FUNCTION_59_4();
                  }
                  else
                  {
                    OUTLINED_FUNCTION_35_3();
                    sub_1A5523A00(v60, 0, v59);
                    OUTLINED_FUNCTION_90();
                  }
                  v110 = *(_QWORD *)(v59 + 16);
                  OUTLINED_FUNCTION_97_2();
                  if (v110)
                  {
                    OUTLINED_FUNCTION_90();
                    v111 = (_BYTE *)(v59 + 55);
                    do
                    {
                      v112 = *(_QWORD *)(v111 - 23);
                      if ((*v111 & 1) != 0)
                      {
                        OUTLINED_FUNCTION_3_19();
                        OUTLINED_FUNCTION_61_2();
                      }
                      else
                      {
                        v113 = *(_QWORD *)(v111 - 15);
                        v114 = *(unsigned int *)(v111 - 7) | ((unint64_t)(*(unsigned __int16 *)(v111 - 3) | (*(v111 - 1) << 16)) << 32);
                        OUTLINED_FUNCTION_2_21();
                        if (v112)
                        {
                          sub_1A594CE94();
                          result = OUTLINED_FUNCTION_176();
                          if (HIDWORD(v113) < v113)
                            goto LABEL_91;
                          sub_1A594CE70();
                          v51 = v144;
                          v59 = v159;
                        }
                        else
                        {
                          sub_1A594CE94();
                          sub_1A56974C4(0, v113, v114, 0);
                          v51 = v144;
                        }
                      }
                      v111 += 24;
                      --v110;
                    }
                    while (v110);
                    OUTLINED_FUNCTION_52();
                    v85 = v151;
                  }
                  OUTLINED_FUNCTION_52();
                  OUTLINED_FUNCTION_19();
                  sub_1A55244E4(v60, v85, v59);
                  v100 = v59;
                  v50 = v137;
                  v102 = v139;
                  v101 = v59;
                }
                OUTLINED_FUNCTION_52();
                sub_1A55244E4(v60, v85, v100);
                sub_1A55244A0(v145, v60, v85, v101);
                sub_1A5524400(v155, v51, v50, v102, v135, v145, v60, v85, v101);
                sub_1A5524370(v140, v161, v155, v51, v50, v102, v135, v145, v60, v85, v101);
LABEL_87:
                OUTLINED_FUNCTION_2_20((uint64_t)v168);
                result = OUTLINED_FUNCTION_2_20((uint64_t)v168);
                v16 = v162;
                a1 = v163;
                goto LABEL_88;
              }
              OUTLINED_FUNCTION_19_9();
              v88 = OUTLINED_FUNCTION_98_2();
              sub_1A5524400(v88, v89, v50, v52, v54, 0, v57, v150, v158);
              a1 = v33;
              sub_1A5524370(v50, v161, v154, v51, v50, v52, v54, 0, v57, v150, v158);
            }
LABEL_51:
            OUTLINED_FUNCTION_2_20((uint64_t)v168);
            result = OUTLINED_FUNCTION_2_20((uint64_t)v168);
            goto LABEL_52;
          }
LABEL_25:
          OUTLINED_FUNCTION_19_9();
          goto LABEL_26;
        }
      }
      OUTLINED_FUNCTION_19_9();
      if (v49)
        goto LABEL_22;
      goto LABEL_25;
    }
    nullsub_1(v169);
    v8 = *v7;
    v125 = v7[3];
    v126 = v7[5];
    v143 = v7[4];
    v146 = v7[7];
    v127 = v7[6];
    v128 = v7[8];
    v123 = v7[11];
    v124 = v7[9];
    v148 = v7[10];
    v152 = v7[13];
    v156 = v7[14];
    v160 = v7[12];
    sub_1A55DC3E0(v168, __dst);
    nullsub_1(__dst);
    v10 = *(_QWORD *)(v9 + 24);
    v12 = *(_QWORD *)(v9 + 32);
    v11 = *(_QWORD *)(v9 + 40);
    v13 = *(_QWORD *)(v9 + 64);
    v133 = *(_QWORD *)(v9 + 56);
    v136 = *(_QWORD *)(v9 + 48);
    v131 = *(_QWORD *)(v9 + 80);
    v132 = *(_QWORD *)(v9 + 72);
    v129 = *(_OWORD *)(v9 + 88);
    v14 = *(_QWORD *)(v9 + 104);
    v15 = *(_QWORD *)(v9 + 112);
    sub_1A594CE88();
    OUTLINED_FUNCTION_4_3();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    a1 = v163;
    sub_1A5523A30(v10, v12, v11, v136, v133, v13, v132, v131, v129, *((uint64_t *)&v129 + 1), v14, v15);
    sub_1A55DC438((uint64_t)v168, sub_1A552370C);
    OUTLINED_FUNCTION_42();
    sub_1A5696184(v163, v8);
    OUTLINED_FUNCTION_38();
    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_77_1();
    OUTLINED_FUNCTION_17();
    if (!v143)
    {
      OUTLINED_FUNCTION_113_0();
      goto LABEL_51;
    }
    OUTLINED_FUNCTION_113_0();
    OUTLINED_FUNCTION_11_1();
    OUTLINED_FUNCTION_39();
    sub_1A5523A30(v125, v143, v126, v127, v146, v128, v124, v148, v123, v160, v152, v156);
    swift_retain();
    sub_1A5693A38();
    swift_release();
    OUTLINED_FUNCTION_36();
    swift_release();
    if (v146 != 1)
      break;
    OUTLINED_FUNCTION_19_9();
    sub_1A5524514(v125, v143, v126, v127, 1, v128, v124, v148, v123, v160, v152, v156);
    OUTLINED_FUNCTION_2_20((uint64_t)v168);
    result = OUTLINED_FUNCTION_2_20((uint64_t)v168);
    v16 = v162;
    a1 = v124;
LABEL_88:
    v6 = v16 + 1;
    if (v6 == v142)
      return result;
  }
  OUTLINED_FUNCTION_17_10();
  if (v146)
  {
    OUTLINED_FUNCTION_30_2();
    OUTLINED_FUNCTION_91_1();
    v34 = v123;
    v35 = v160;
    sub_1A552391C(v36, v37, v38, v39, v148, v123, v160, v40, v156);
    OUTLINED_FUNCTION_91_1();
    sub_1A552396C(v41, v42);
    OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_12_1();
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_82();
    OUTLINED_FUNCTION_182();
    OUTLINED_FUNCTION_60_3();
    OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_12_1();
    OUTLINED_FUNCTION_39();
    sub_1A5693A38();
    OUTLINED_FUNCTION_94();
    OUTLINED_FUNCTION_149_0();
    OUTLINED_FUNCTION_149_0();
    OUTLINED_FUNCTION_149_0();
    v43 = v124;
    sub_1A5524450(v127, v146);
  }
  else
  {
    OUTLINED_FUNCTION_35_3();
    v43 = v124;
    sub_1A552396C(v127, 0);
    v34 = v123;
    v35 = v160;
    sub_1A55239BC(v123, v160, v152, v156);
  }
  v71 = v146;
  if (!v34)
  {
    OUTLINED_FUNCTION_19_9();
    sub_1A5524400(v127, v146, v128, v43, v148, 0, v35, v152, v156);
    a1 = v124;
    sub_1A5524514(v125, v143, v126, v127, v146, v128, v43, v148, 0, v35, v152, v156);
    goto LABEL_51;
  }
  OUTLINED_FUNCTION_17_10();
  sub_1A594CE88();
  v72 = *(_QWORD *)(v34 + 16);
  v73 = v156;
  if (v72)
  {
    OUTLINED_FUNCTION_90_2();
    sub_1A55239BC(v34, v35, v152, v156);
    OUTLINED_FUNCTION_88_2(v35, v152);
    v74 = v34 + 40;
    do
    {
      OUTLINED_FUNCTION_184();
      OUTLINED_FUNCTION_182();
      sub_1A594B1D8();
      OUTLINED_FUNCTION_72();
      v74 += 16;
      --v72;
    }
    while (v72);
    OUTLINED_FUNCTION_19();
    v71 = v146;
    v35 = v160;
  }
  else
  {
    v90 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A55239BC(v90, v35, v152, v156);
    OUTLINED_FUNCTION_88_2(v35, v152);
  }
  v91 = v143;
  if (!v156)
  {
    OUTLINED_FUNCTION_35_3();
    v92 = 0;
    v93 = v152;
LABEL_73:
    OUTLINED_FUNCTION_19();
    v108 = OUTLINED_FUNCTION_98_2();
    sub_1A55244E4(v108, v109, v92);
    sub_1A55244A0(v34, v35, v93, v73);
    sub_1A5524400(v127, v71, v128, v124, v148, v34, v35, v93, v73);
    sub_1A5524514(v125, v91, v126, v127, v71, v128, v124, v148, v34, v35, v93, v73);
    goto LABEL_87;
  }
  OUTLINED_FUNCTION_30_2();
  if (v152)
  {
    sub_1A594CE94();
    OUTLINED_FUNCTION_88_2(v35, v152);
    OUTLINED_FUNCTION_82();
    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_83_2();
    OUTLINED_FUNCTION_77_1();
  }
  else
  {
    OUTLINED_FUNCTION_35_3();
    OUTLINED_FUNCTION_88_2(v35, 0);
    OUTLINED_FUNCTION_82();
  }
  sub_1A594CE88();
  v103 = *(_QWORD *)(v156 + 16);
  if (!v103)
  {
LABEL_72:
    OUTLINED_FUNCTION_94();
    v93 = v152;
    OUTLINED_FUNCTION_55();
    sub_1A55244E4(v35, v152, v73);
    v92 = v73;
    goto LABEL_73;
  }
  OUTLINED_FUNCTION_82();
  v104 = (_BYTE *)(v156 + 55);
  while (1)
  {
    v105 = *(_QWORD *)(v104 - 23);
    if ((*v104 & 1) == 0)
      break;
    OUTLINED_FUNCTION_3_19();
    sub_1A594CE88();
LABEL_70:
    v104 += 24;
    if (!--v103)
    {
      v73 = v156;
      OUTLINED_FUNCTION_94();
      v91 = v143;
      goto LABEL_72;
    }
  }
  v106 = *(_QWORD *)(v104 - 15);
  v107 = *(unsigned int *)(v104 - 7) | ((unint64_t)(*(unsigned __int16 *)(v104 - 3) | (*(v104 - 1) << 16)) << 32);
  OUTLINED_FUNCTION_2_21();
  if (!v105)
  {
    OUTLINED_FUNCTION_35_3();
    sub_1A56974C4(0, v106, v107, 0);
    goto LABEL_69;
  }
  OUTLINED_FUNCTION_30_2();
  result = OUTLINED_FUNCTION_176();
  if (HIDWORD(v106) >= v106)
  {
    OUTLINED_FUNCTION_9_15();
    v71 = v146;
LABEL_69:
    v35 = v160;
    goto LABEL_70;
  }
  __break(1u);
LABEL_91:
  __break(1u);
  return result;
}

void sub_1A569726C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_70_1();
  OUTLINED_FUNCTION_0_25();
  if (v0)
  {
    v2 = v1 + 72;
    while (1)
    {
      v7 = v0;
      v4 = *(_DWORD *)(v2 - 32);
      v3 = *(_DWORD *)(v2 - 28);
      v6 = *(_QWORD *)(v2 - 16);
      v5 = *(_QWORD *)(v2 - 8);
      OUTLINED_FUNCTION_176();
      if (v3 < v4)
        break;
      OUTLINED_FUNCTION_9_15();
      if (v6)
      {
        OUTLINED_FUNCTION_30_2();
        OUTLINED_FUNCTION_176();
        if (HIDWORD(v5) < v5)
          goto LABEL_11;
        OUTLINED_FUNCTION_29_5();
        OUTLINED_FUNCTION_9_15();
      }
      else
      {
        OUTLINED_FUNCTION_35_3();
      }
      v2 += 48;
      --v0;
      if (v7 == 1)
        goto LABEL_9;
    }
    __break(1u);
LABEL_11:
    __break(1u);
  }
  else
  {
LABEL_9:
    OUTLINED_FUNCTION_8_9();
  }
}

void sub_1A5697348(uint64_t a1, uint64_t a2, void (*a3)(_QWORD, _QWORD))
{
  uint64_t v3;
  _QWORD *v6;

  OUTLINED_FUNCTION_107_1();
  if (v3)
  {
    v6 = (_QWORD *)(a2 + 40);
    do
    {
      a3(*(v6 - 1), *v6);
      OUTLINED_FUNCTION_90();
      OUTLINED_FUNCTION_32_6();
      OUTLINED_FUNCTION_52();
      OUTLINED_FUNCTION_38();
      v6 += 2;
      --v3;
    }
    while (v3);
  }
  OUTLINED_FUNCTION_15_3();
}

void sub_1A56973AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_0_25();
  if (v0)
  {
    v2 = v1 + 32;
    do
    {
      v2 += 4;
      sub_1A594CEAC();
      --v0;
    }
    while (v0);
  }
  OUTLINED_FUNCTION_8_1();
}

uint64_t sub_1A56973E0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  if ((a5 & 0xFC | 2) != 0xFE)
  {
    sub_1A5666868(result, a2, a3, a4, a5 & 1);
    return sub_1A56668A4(a6, a7, a8);
  }
  return result;
}

uint64_t sub_1A5697434(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  if ((~a5 & 0xFE) != 0)
  {
    sub_1A5666868(result, a2, a3, a4, a5 & 1);
    return sub_1A56668A4(a6, a7, a8);
  }
  return result;
}

uint64_t sub_1A5697484(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((a2 & 0xFF00000000) != 0xFE00000000)
  {
    sub_1A5503B8C(result, a2);
    return sub_1A5503B8C(a3, a4);
  }
  return result;
}

uint64_t sub_1A56974C4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if ((a4 & 1) == 0)
    return swift_release();
  return result;
}

uint64_t sub_1A56974D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 104);
  v11 = *(_QWORD *)(a1 + 96);
  v12 = *(_QWORD *)(a1 + 88);
  v3 = *(_QWORD *)(a1 + 112);
  v9 = *(_QWORD *)(a1 + 128);
  v10 = *(_QWORD *)(a1 + 120);
  v7 = *(_QWORD *)(a1 + 144);
  v8 = *(_QWORD *)(a1 + 136);
  v6 = *(_OWORD *)(a1 + 152);
  v4 = *(_QWORD *)(a1 + 168);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A552388C(v12, v11, v2, v3, v10, v9, v8, v7, v6, *((uint64_t *)&v6 + 1), v4);
  return a1;
}

uint64_t OUTLINED_FUNCTION_0_25()
{
  return sub_1A594CE88();
}

uint64_t OUTLINED_FUNCTION_2_21()
{
  return sub_1A594CE88();
}

uint64_t OUTLINED_FUNCTION_3_19()
{
  return sub_1A594CE88();
}

uint64_t OUTLINED_FUNCTION_6_16()
{
  return sub_1A594CE88();
}

uint64_t OUTLINED_FUNCTION_9_15()
{
  return sub_1A594CE70();
}

uint64_t OUTLINED_FUNCTION_10_11()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_17_10()
{
  return sub_1A594CE94();
}

uint64_t OUTLINED_FUNCTION_19_9()
{
  return sub_1A594CE94();
}

void OUTLINED_FUNCTION_21_11()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1A5666D80(v0, v3, v1, v2, 2);
}

uint64_t OUTLINED_FUNCTION_23_9()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  uint64_t v4;

  return sub_1A5666B64(v0, v4, v2, v3, v1);
}

uint64_t OUTLINED_FUNCTION_24_5()
{
  return sub_1A594B1D8();
}

uint64_t OUTLINED_FUNCTION_26_1()
{
  return sub_1A594B1D8();
}

uint64_t OUTLINED_FUNCTION_31_5()
{
  return sub_1A594B1D8();
}

uint64_t OUTLINED_FUNCTION_32_6()
{
  return sub_1A594B1D8();
}

uint64_t OUTLINED_FUNCTION_35_5()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1A56667BC(v1, v0);
}

uint64_t OUTLINED_FUNCTION_37_5()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  return sub_1A5666598(v0, v3, v1, v2);
}

void OUTLINED_FUNCTION_40_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1A56B6298(v10, v11, a10 & 0xFFFFFF0000000000 | v12 | v12 & 0xFF00000000);
}

uint64_t OUTLINED_FUNCTION_43_4()
{
  return sub_1A594B1D8();
}

uint64_t OUTLINED_FUNCTION_45_3()
{
  return sub_1A594B1D8();
}

uint64_t OUTLINED_FUNCTION_48_3(uint64_t a1, uint64_t a2)
{
  return sub_1A566658C(a1, a2, 1);
}

uint64_t OUTLINED_FUNCTION_51_4()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_52_3()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1A56667BC(v0, v1);
}

uint64_t OUTLINED_FUNCTION_53_4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  sub_1A56668A4(v0, v1, v2);
  return v3;
}

uint64_t OUTLINED_FUNCTION_56_5()
{
  return sub_1A594CE88();
}

uint64_t OUTLINED_FUNCTION_57_3()
{
  return sub_1A594B1D8();
}

uint64_t OUTLINED_FUNCTION_59_4()
{
  return sub_1A594B1D8();
}

uint64_t OUTLINED_FUNCTION_60_3()
{
  return sub_1A594B1D8();
}

uint64_t OUTLINED_FUNCTION_61_2()
{
  return sub_1A594CE88();
}

uint64_t OUTLINED_FUNCTION_62_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_1A56667EC(v3, v2, v0, v1, 1);
}

uint64_t OUTLINED_FUNCTION_63_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_1A56667EC(v3, v2, v0, v1, 0);
}

void OUTLINED_FUNCTION_65_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1A5666D80(v0, v1, v2, v3, 2);
}

uint64_t OUTLINED_FUNCTION_66_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_1A5666C8C(v0, v3, v1, v2, 1);
}

uint64_t OUTLINED_FUNCTION_68_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_1A5666D04(v0, v2, v3, v1, 1);
}

uint64_t OUTLINED_FUNCTION_71_1()
{
  return sub_1A594B1D8();
}

void OUTLINED_FUNCTION_75_1(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1A56B6298(v2, v3, a1 | v1);
}

uint64_t OUTLINED_FUNCTION_76_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_77_1()
{
  return sub_1A594B1D8();
}

uint64_t OUTLINED_FUNCTION_78_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_79_2()
{
  return sub_1A594CE88();
}

uint64_t OUTLINED_FUNCTION_83_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_88_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A5523A00(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_89_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_90_2()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t OUTLINED_FUNCTION_94_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_1A5523A00(v2, v1, v0);
}

uint64_t OUTLINED_FUNCTION_97_2()
{
  return sub_1A594CE88();
}

uint64_t OUTLINED_FUNCTION_98_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_99_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_101_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_103_2()
{
  return sub_1A594CE88();
}

uint64_t OUTLINED_FUNCTION_104_1()
{
  return sub_1A594B1D8();
}

uint64_t OUTLINED_FUNCTION_105_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_107_1()
{
  return sub_1A594CE88();
}

void OUTLINED_FUNCTION_111_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A56B6298(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_112_1()
{
  return sub_1A594CE88();
}

uint64_t OUTLINED_FUNCTION_113_0()
{
  return sub_1A594CE94();
}

uint64_t OUTLINED_FUNCTION_115_1()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1A56667BC(v1, v0);
}

uint64_t OUTLINED_FUNCTION_116_1()
{
  return sub_1A594CEAC();
}

uint64_t OUTLINED_FUNCTION_117_0()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1A56667BC(v1, v0);
}

uint64_t OUTLINED_FUNCTION_118_1()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1A56667BC(v0, v1);
}

uint64_t OUTLINED_FUNCTION_123_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  return sub_1A55239BC(a1, a2, a3, a38);
}

uint64_t OUTLINED_FUNCTION_124_1()
{
  return sub_1A594CE88();
}

uint64_t OUTLINED_FUNCTION_125_1()
{
  return sub_1A594CE88();
}

uint64_t OUTLINED_FUNCTION_126_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_127_1()
{
  return sub_1A5694FA8();
}

void *OUTLINED_FUNCTION_128_1(uint64_t a1, void *a2)
{
  const void *v2;

  return sub_1A55DC3E0(v2, a2);
}

uint64_t OUTLINED_FUNCTION_129_1()
{
  return swift_retain_n();
}

uint64_t sub_1A5697AE0()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1A594B49C();
  static AttributeFlag.answered = result;
  unk_1EE7F9B40 = v1;
  return result;
}

NIOIMAPCore2::AttributeFlag __swiftcall AttributeFlag.init(_:)(Swift::String a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  NIOIMAPCore2::AttributeFlag result;

  v1 = sub_1A594B49C();
  v3 = v2;
  swift_bridgeObjectRelease();
  v4 = v1;
  v5 = v3;
  result.stringValue._object = v5;
  result.stringValue._countAndFlagsBits = v4;
  return result;
}

uint64_t *AttributeFlag.answered.unsafeMutableAddressor()
{
  if (qword_1EE7A8F70 != -1)
    swift_once();
  return &static AttributeFlag.answered;
}

uint64_t static AttributeFlag.answered.getter()
{
  return sub_1A5697FEC(&qword_1EE7A8F70, &static AttributeFlag.answered);
}

uint64_t static AttributeFlag.answered.setter(uint64_t a1, uint64_t a2)
{
  return sub_1A5698078(a1, a2, &qword_1EE7A8F70, &static AttributeFlag.answered, &qword_1EE7F9B40);
}

void static AttributeFlag.answered.modify()
{
  if (qword_1EE7A8F70 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_26();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1A5697C30()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1A594B49C();
  static AttributeFlag.flagged = result;
  unk_1EE7F9B50 = v1;
  return result;
}

uint64_t *AttributeFlag.flagged.unsafeMutableAddressor()
{
  if (qword_1EE7A8F78 != -1)
    swift_once();
  return &static AttributeFlag.flagged;
}

uint64_t static AttributeFlag.flagged.getter()
{
  return sub_1A5697FEC(&qword_1EE7A8F78, &static AttributeFlag.flagged);
}

uint64_t static AttributeFlag.flagged.setter(uint64_t a1, uint64_t a2)
{
  return sub_1A5698078(a1, a2, &qword_1EE7A8F78, &static AttributeFlag.flagged, &qword_1EE7F9B50);
}

void static AttributeFlag.flagged.modify()
{
  if (qword_1EE7A8F78 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_26();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1A5697D40()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1A594B49C();
  static AttributeFlag.deleted = result;
  unk_1EE7F9B60 = v1;
  return result;
}

uint64_t *AttributeFlag.deleted.unsafeMutableAddressor()
{
  if (qword_1EE7A8F80 != -1)
    swift_once();
  return &static AttributeFlag.deleted;
}

uint64_t static AttributeFlag.deleted.getter()
{
  return sub_1A5697FEC(&qword_1EE7A8F80, &static AttributeFlag.deleted);
}

uint64_t static AttributeFlag.deleted.setter(uint64_t a1, uint64_t a2)
{
  return sub_1A5698078(a1, a2, &qword_1EE7A8F80, &static AttributeFlag.deleted, &qword_1EE7F9B60);
}

void static AttributeFlag.deleted.modify()
{
  if (qword_1EE7A8F80 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_26();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1A5697E50()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1A594B49C();
  static AttributeFlag.seen = result;
  unk_1EE7F9B70 = v1;
  return result;
}

uint64_t *AttributeFlag.seen.unsafeMutableAddressor()
{
  if (qword_1EE7A8F88 != -1)
    swift_once();
  return &static AttributeFlag.seen;
}

uint64_t static AttributeFlag.seen.getter()
{
  return sub_1A5697FEC(&qword_1EE7A8F88, &static AttributeFlag.seen);
}

uint64_t static AttributeFlag.seen.setter(uint64_t a1, uint64_t a2)
{
  return sub_1A5698078(a1, a2, &qword_1EE7A8F88, &static AttributeFlag.seen, &qword_1EE7F9B70);
}

void static AttributeFlag.seen.modify()
{
  if (qword_1EE7A8F88 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_26();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1A5697F58()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1A594B49C();
  static AttributeFlag.draft = result;
  unk_1EE7F9B80 = v1;
  return result;
}

uint64_t *AttributeFlag.draft.unsafeMutableAddressor()
{
  if (qword_1EE7A8F90 != -1)
    swift_once();
  return &static AttributeFlag.draft;
}

uint64_t static AttributeFlag.draft.getter()
{
  return sub_1A5697FEC(&qword_1EE7A8F90, &static AttributeFlag.draft);
}

uint64_t sub_1A5697FEC(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;

  if (*a1 != -1)
    swift_once();
  swift_beginAccess();
  v3 = *a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v3;
}

uint64_t static AttributeFlag.draft.setter(uint64_t a1, uint64_t a2)
{
  return sub_1A5698078(a1, a2, &qword_1EE7A8F90, &static AttributeFlag.draft, &qword_1EE7F9B80);
}

uint64_t sub_1A5698078(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4, _QWORD *a5)
{
  if (*a3 != -1)
    swift_once();
  swift_beginAccess();
  *a4 = a1;
  *a5 = a2;
  return swift_bridgeObjectRelease();
}

void static AttributeFlag.draft.modify()
{
  if (qword_1EE7A8F90 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_26();
  OUTLINED_FUNCTION_1();
}

uint64_t AttributeFlag.hash(into:)()
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_2_22();
  return swift_bridgeObjectRelease();
}

uint64_t static AttributeFlag.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4)
    return 1;
  else
    return sub_1A594CD38();
}

uint64_t AttributeFlag.hashValue.getter()
{
  sub_1A594CE64();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_2_22();
  swift_bridgeObjectRelease();
  return sub_1A594CED0();
}

uint64_t sub_1A56981F8()
{
  return AttributeFlag.hashValue.getter();
}

uint64_t sub_1A5698200()
{
  return AttributeFlag.hash(into:)();
}

uint64_t sub_1A5698208()
{
  sub_1A594CE64();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  return sub_1A594CED0();
}

uint64_t sub_1A569825C(uint64_t *a1, uint64_t *a2)
{
  return static AttributeFlag.__derived_struct_equals(_:_:)(*a1, a1[1], *a2, a2[1]);
}

unint64_t sub_1A5698278()
{
  unint64_t result;

  result = qword_1EE7A9438;
  if (!qword_1EE7A9438)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for AttributeFlag, &type metadata for AttributeFlag);
    atomic_store(result, (unint64_t *)&qword_1EE7A9438);
  }
  return result;
}

_QWORD *assignWithCopy for InternetMessageDate(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8_1(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_QWORD *assignWithTake for Media.TopLevelType(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InternetMessageDate(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InternetMessageDate(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AttributeFlag()
{
  return &type metadata for AttributeFlag;
}

uint64_t OUTLINED_FUNCTION_0_26()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_2_22()
{
  return sub_1A594B1D8();
}

uint64_t AuthenticatedURL.authenticatedURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A56983EC(v1, a1);
}

uint64_t sub_1A56983EC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for AuthenticatedURLRump(a2, a1);
  return a2;
}

uint64_t AuthenticatedURL.authenticatedURL.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1A5698430(a1, v1);
}

uint64_t sub_1A5698430(uint64_t a1, uint64_t a2)
{
  assignWithTake for AuthenticatedURLRump(a2, a1);
  return a2;
}

double (*AuthenticatedURL.authenticatedURL.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t AuthenticatedURL.verifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t AuthenticatedURL.verifier.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t result;

  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v4[11] = a1;
  v4[12] = a2;
  v4[13] = a3;
  v4[14] = a4;
  return result;
}

double (*AuthenticatedURL.verifier.modify())(_QWORD)
{
  return nullsub_1;
}

__n128 AuthenticatedURL.init(authenticatedURL:verifier:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  __int128 v10;
  __n128 result;

  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_BYTE *)(a1 + 56);
  v8 = *(_BYTE *)(a1 + 57);
  v9 = *(_BYTE *)(a1 + 80);
  v10 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a6 = *(_OWORD *)a1;
  *(_OWORD *)(a6 + 16) = v10;
  *(_OWORD *)(a6 + 32) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(a6 + 48) = v6;
  *(_BYTE *)(a6 + 56) = v7;
  *(_BYTE *)(a6 + 57) = v8 & 1;
  result = *(__n128 *)(a1 + 64);
  *(__n128 *)(a6 + 64) = result;
  *(_BYTE *)(a6 + 80) = v9;
  *(_QWORD *)(a6 + 88) = a2;
  *(_QWORD *)(a6 + 96) = a3;
  *(_QWORD *)(a6 + 104) = a4;
  *(_QWORD *)(a6 + 112) = a5;
  return result;
}

uint64_t AuthenticatedURL.hash(into:)()
{
  uint64_t v0;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  _OWORD v5[3];
  uint64_t v6;
  char v7;
  char v8;
  __n128 v9;
  _QWORD v10[10];
  char v11;
  __n128 v12;
  char v13;

  OUTLINED_FUNCTION_1_17(v5);
  if (v8 == 1)
  {
    sub_1A594CE94();
  }
  else
  {
    *(_OWORD *)&v10[3] = v5[0];
    *(_OWORD *)&v10[5] = v5[1];
    *(_OWORD *)&v10[7] = v5[2];
    v10[9] = v6;
    v11 = v7 & 1;
    sub_1A594CE94();
    Expire.hash(into:)();
  }
  sub_1A5698818(&v9, (__n128 *)v10);
  sub_1A5698818((__n128 *)v10, &v12);
  if (v13 && v13 != 1)
  {
    sub_1A594CE88();
  }
  else
  {
    sub_1A594CE88();
    sub_1A5698884((uint64_t)v5);
    OUTLINED_FUNCTION_0_27();
  }
  sub_1A5698854((uint64_t)v5);
  v2 = *(_OWORD *)(v0 + 88);
  v3 = *(_OWORD *)(v0 + 104);
  v4 = v2;
  sub_1A5524B84((uint64_t)&v4);
  sub_1A5524B84((uint64_t)&v3);
  sub_1A594B1D8();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_0_27();
  sub_1A5503278((uint64_t)&v3);
  sub_1A5503278((uint64_t)&v4);
  return sub_1A5503278((uint64_t)&v3);
}

uint64_t static AuthenticatedURL.__derived_struct_equals(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  BOOL v13;
  _BYTE v15[88];
  _BYTE v16[88];

  OUTLINED_FUNCTION_1_17(v16);
  memcpy(v15, a2, 0x51uLL);
  if (!static AuthenticatedURLRump.__derived_struct_equals(_:_:)((uint64_t)v16, (uint64_t)v15))
    return 0;
  v4 = a1[11];
  v5 = a1[12];
  v6 = a1[13];
  v7 = a1[14];
  v8 = a2[11];
  v9 = a2[12];
  v10 = a2[13];
  v11 = a2[14];
  v12 = v4 == v8 && v5 == v9;
  if ((v12 || (sub_1A594CD38() & 1) != 0)
    && (v6 == v10 ? (v13 = v7 == v11) : (v13 = 0), v13 || (sub_1A594CD38() & 1) != 0))
  {
    return 1;
  }
  else
  {
    return 0;
  }
}

uint64_t AuthenticatedURL.hashValue.getter()
{
  sub_1A594CE64();
  AuthenticatedURL.hash(into:)();
  return sub_1A594CED0();
}

uint64_t sub_1A56987DC()
{
  sub_1A594CE64();
  AuthenticatedURL.hash(into:)();
  return sub_1A594CED0();
}

__n128 *sub_1A5698818(__n128 *a1, __n128 *a2)
{
  __swift_memcpy17_8_1(a2, a1);
  return a2;
}

uint64_t sub_1A5698854(uint64_t a1)
{
  sub_1A5687BD4(*(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
  return a1;
}

uint64_t sub_1A5698884(uint64_t a1)
{
  sub_1A5688348(*(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
  return a1;
}

unint64_t sub_1A56988B8()
{
  unint64_t result;

  result = qword_1EE7A9440;
  if (!qword_1EE7A9440)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for AuthenticatedURL, &type metadata for AuthenticatedURL);
    atomic_store(result, (unint64_t *)&qword_1EE7A9440);
  }
  return result;
}

uint64_t destroy for AuthenticatedURL(uint64_t a1)
{
  sub_1A5687BD4(*(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AuthenticatedURL(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 42) = *(_OWORD *)(a2 + 42);
  v5 = *(_QWORD *)(a2 + 64);
  v6 = *(_QWORD *)(a2 + 72);
  v7 = *(_BYTE *)(a2 + 80);
  sub_1A5688348(v5, v6, v7);
  *(_QWORD *)(a1 + 64) = v5;
  *(_QWORD *)(a1 + 72) = v6;
  *(_BYTE *)(a1 + 80) = v7;
  v8 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v8;
  v9 = *(_QWORD *)(a2 + 104);
  v10 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = v9;
  *(_QWORD *)(a1 + 112) = v10;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for AuthenticatedURL(uint64_t a1, __int128 *a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;

  v4 = *a2;
  v5 = a2[1];
  v6 = a2[2];
  *(_OWORD *)(a1 + 42) = *(__int128 *)((char *)a2 + 42);
  *(_OWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)a1 = v4;
  v7 = *((_QWORD *)a2 + 8);
  v8 = *((_QWORD *)a2 + 9);
  v9 = *((_BYTE *)a2 + 80);
  sub_1A5688348(v7, v8, v9);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 72) = v8;
  v12 = *(_BYTE *)(a1 + 80);
  *(_BYTE *)(a1 + 80) = v9;
  sub_1A5687BD4(v10, v11, v12);
  *(_QWORD *)(a1 + 88) = *((_QWORD *)a2 + 11);
  *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *((_QWORD *)a2 + 13);
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy120_8_1(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x78uLL);
}

uint64_t assignWithTake for AuthenticatedURL(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 42) = *(_OWORD *)(a2 + 42);
  v5 = *(_BYTE *)(a2 + 80);
  v6 = *(_QWORD *)(a1 + 64);
  v7 = *(_QWORD *)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  v8 = *(_BYTE *)(a1 + 80);
  *(_BYTE *)(a1 + 80) = v5;
  sub_1A5687BD4(v6, v7, v8);
  v9 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AuthenticatedURL(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 120))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 96);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AuthenticatedURL(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 96) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AuthenticatedURL()
{
  return &type metadata for AuthenticatedURL;
}

uint64_t OUTLINED_FUNCTION_0_27()
{
  return sub_1A594B1D8();
}

void *OUTLINED_FUNCTION_1_17(void *a1)
{
  const void *v1;

  return memcpy(a1, v1, 0x51uLL);
}

BOOL static AuthenticatedURLRump.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v5;
  __n128 *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  unint64_t v15;
  _BOOL8 result;
  BOOL v17;
  __n128 v18;
  __n128 v19;
  __n128 v20;
  char v21;
  __n128 v22;
  char v23;

  v5 = *(_BYTE *)(a2 + 57);
  if ((*(_BYTE *)(a1 + 57) & 1) != 0)
  {
LABEL_2:
    if ((v5 & 1) == 0)
      return 0;
    goto LABEL_3;
  }
  if ((*(_BYTE *)(a2 + 57) & 1) != 0)
    return 0;
  result = 0;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_s64(*(int64x2_t *)a1, *(int64x2_t *)a2), (int32x4_t)vceqq_s64(*(int64x2_t *)(a1 + 16), *(int64x2_t *)(a2 + 16)))), 0xFuLL))) & 1) != 0&& *(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32)&& *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40))
  {
    v5 = *(_BYTE *)(a2 + 56);
    if ((*(_BYTE *)(a1 + 56) & 1) != 0)
      goto LABEL_2;
    result = 0;
    if ((*(_BYTE *)(a2 + 56) & 1) == 0 && *(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48))
    {
LABEL_3:
      sub_1A5698818((__n128 *)(a1 + 64), &v19);
      sub_1A5698818((__n128 *)(a2 + 64), &v18);
      v6 = sub_1A5698818(&v19, &v20);
      v15 = v20.n128_u64[0];
      if (v21)
      {
        if (v21 != 1)
        {
          if (*(_OWORD *)&v20 == 0)
          {
            sub_1A5698818(&v18, &v22);
            if (v23 != 2 || *(_OWORD *)&v22 != 0)
              return 0;
          }
          else
          {
            sub_1A5698818(&v18, &v22);
            if (v23 != 2 || v22.n128_u64[1] || v22.n128_u64[0] != 1)
              return 0;
          }
          return 1;
        }
        OUTLINED_FUNCTION_2_23((uint64_t)v6, v7, v8, v9, v10, v11, v12, v13, v14);
        if (v23 != 1)
          return 0;
LABEL_16:
        v17 = v15 == v22.n128_u64[0] && v2 == v22.n128_u64[1];
        return v17 || (sub_1A594CD38() & 1) != 0;
      }
      OUTLINED_FUNCTION_2_23((uint64_t)v6, v7, v8, v9, v10, v11, v12, v13, v14);
      if (!v23)
        goto LABEL_16;
      return 0;
    }
  }
  return result;
}

void sub_1A5698D54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  Swift::UInt32 v9;
  uint64_t v10;
  unint64_t v11;
  Swift::Int v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  Swift::Int v16;
  int v17;
  BOOL v18;
  int v19;
  uint64_t v20;
  Swift::Int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  Swift::Int v31;
  uint64_t v32;
  unint64_t v33;
  Swift::Int v34;
  char v35;
  Swift::String v36;
  int v37;
  int v38;
  Swift::Int v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  _OWORD v43[2];
  char v44;

  v2 = v1;
  v4 = 0;
  if ((*(_BYTE *)(a1 + 57) & 1) == 0)
  {
    v5 = *(_QWORD *)a1;
    v6 = *(_QWORD *)(a1 + 8);
    v7 = *(_QWORD *)(a1 + 16);
    v41 = *(_OWORD *)(a1 + 40);
    v42 = *(_OWORD *)(a1 + 24);
    v8 = *(_BYTE *)(a1 + 56);
    v9 = *(_DWORD *)(v1 + 20);
    v10 = OUTLINED_FUNCTION_1_18();
    sub_1A56814E0(v10, v11, v2 + 8, v9);
    if ((v13 & 1) != 0)
    {
      v14 = OUTLINED_FUNCTION_1_18();
      v12 = OUTLINED_FUNCTION_34(v14, v15);
    }
    v16 = v12;
    v17 = *(_DWORD *)(v2 + 20);
    v18 = __CFADD__(v17, (_DWORD)v12);
    v19 = v17 + v12;
    if (v18)
      goto LABEL_20;
    *(_DWORD *)(v2 + 20) = v19;
    v20 = sub_1A56CB734(v5, v6, v7);
    sub_1A56814E0(84, 0xE100000000000000, v2 + 8, *(_DWORD *)(v2 + 20));
    if ((v22 & 1) != 0)
      v21 = OUTLINED_FUNCTION_34(84, 0xE100000000000000);
    v25 = *(_DWORD *)(v2 + 20);
    v18 = __CFADD__(v25, (_DWORD)v21);
    v26 = v25 + v21;
    if (v18)
      goto LABEL_21;
    *(_DWORD *)(v2 + 20) = v26;
    v27 = v20 + v21;
    if (__OFADD__(v20, v21))
    {
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
    v43[0] = v42;
    v43[1] = v41;
    v44 = v8 & 1;
    v28 = sub_1A56CB868((uint64_t)v43, v22, v23, v24);
    v29 = v27 + v28;
    if (__OFADD__(v27, v28))
    {
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    v30 = __OFADD__(v16, v29);
    v4 = v16 + v29;
    if (v30)
    {
LABEL_24:
      __break(1u);
      return;
    }
  }
  v31 = *(unsigned int *)(v2 + 20);
  v32 = OUTLINED_FUNCTION_0_28();
  sub_1A56814E0(v32, v33, v2 + 8, v31);
  if ((v35 & 1) != 0)
  {
    v36._countAndFlagsBits = OUTLINED_FUNCTION_0_28();
    v34 = ByteBuffer._setStringSlowpath(_:at:)(v36, v31);
  }
  v37 = *(_DWORD *)(v2 + 20);
  v18 = __CFADD__(v37, (_DWORD)v34);
  v38 = v37 + v34;
  if (v18)
  {
    __break(1u);
    goto LABEL_18;
  }
  *(_DWORD *)(v2 + 20) = v38;
  v39 = v4 + v34;
  if (__OFADD__(v4, v34))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  sub_1A5689008(*(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
  if (__OFADD__(v39, v40))
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
}

__n128 AuthenticatedURLRump.expire.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  __int128 v5;
  __n128 result;

  v2 = *(_QWORD *)(v1 + 48);
  v3 = *(_BYTE *)(v1 + 56);
  v4 = *(_BYTE *)(v1 + 57);
  v5 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v5;
  result = *(__n128 *)(v1 + 32);
  *(__n128 *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 48) = v2;
  *(_BYTE *)(a1 + 56) = v3;
  *(_BYTE *)(a1 + 57) = v4;
  return result;
}

uint64_t AuthenticatedURLRump.expire.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1A56994A8(a1, v1);
}

double (*AuthenticatedURLRump.expire.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t AuthenticatedURLRump.access.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  sub_1A5688348(v1, *(_QWORD *)(v0 + 72), *(_BYTE *)(v0 + 80));
  return v1;
}

uint64_t AuthenticatedURLRump.access.setter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t result;

  result = sub_1A5687BD4(*(_QWORD *)(v3 + 64), *(_QWORD *)(v3 + 72), *(_BYTE *)(v3 + 80));
  *(_QWORD *)(v3 + 64) = a1;
  *(_QWORD *)(v3 + 72) = a2;
  *(_BYTE *)(v3 + 80) = a3;
  return result;
}

double (*AuthenticatedURLRump.access.modify())(_QWORD)
{
  return nullsub_1;
}

double AuthenticatedURLRump.init(expire:access:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  char v10;
  char v11;
  double result;
  __int128 v13;
  __int128 v14;
  _OWORD v15[3];
  uint64_t v16;
  char v17;
  char v18;

  sub_1A56994A8(a1, (uint64_t)v15);
  v9 = v16;
  v10 = v17;
  v11 = v18;
  result = *(double *)v15;
  v13 = v15[1];
  v14 = v15[2];
  *(_OWORD *)a5 = v15[0];
  *(_OWORD *)(a5 + 16) = v13;
  *(_OWORD *)(a5 + 32) = v14;
  *(_QWORD *)(a5 + 48) = v9;
  *(_BYTE *)(a5 + 56) = v10;
  *(_BYTE *)(a5 + 57) = v11;
  *(_QWORD *)(a5 + 64) = a2;
  *(_QWORD *)(a5 + 72) = a3;
  *(_BYTE *)(a5 + 80) = a4;
  return result;
}

uint64_t AuthenticatedURLRump.hash(into:)()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  __int128 v3;
  _QWORD v5[10];
  char v6;
  __n128 v7;
  char v8;

  if (*(_BYTE *)(v0 + 57) == 1)
  {
    sub_1A594CE94();
  }
  else
  {
    v1 = *(_BYTE *)(v0 + 56);
    v2 = *(_QWORD *)(v0 + 48);
    v3 = *(_OWORD *)(v0 + 16);
    *(_OWORD *)&v5[3] = *(_OWORD *)v0;
    *(_OWORD *)&v5[5] = v3;
    *(_OWORD *)&v5[7] = *(_OWORD *)(v0 + 32);
    v5[9] = v2;
    v6 = v1 & 1;
    sub_1A594CE94();
    Expire.hash(into:)();
  }
  sub_1A5698818((__n128 *)(v0 + 64), (__n128 *)v5);
  sub_1A5698818((__n128 *)v5, &v7);
  if (v8 && v8 != 1)
  {
    sub_1A594CE88();
  }
  else
  {
    sub_1A594CE88();
    sub_1A5698884(v0);
    sub_1A594B1D8();
  }
  return sub_1A5698854(v0);
}

uint64_t AuthenticatedURLRump.hashValue.getter()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  __int128 v3;
  _QWORD v5[10];
  char v6;
  __n128 v7;
  char v8;

  sub_1A594CE64();
  if (*(_BYTE *)(v0 + 57) == 1)
  {
    sub_1A594CE94();
  }
  else
  {
    v1 = *(_BYTE *)(v0 + 56);
    v2 = *(_QWORD *)(v0 + 48);
    v3 = *(_OWORD *)(v0 + 16);
    *(_OWORD *)&v5[3] = *(_OWORD *)v0;
    *(_OWORD *)&v5[5] = v3;
    *(_OWORD *)&v5[7] = *(_OWORD *)(v0 + 32);
    v5[9] = v2;
    v6 = v1 & 1;
    sub_1A594CE94();
    Expire.hash(into:)();
  }
  sub_1A5698818((__n128 *)(v0 + 64), (__n128 *)v5);
  sub_1A5698818((__n128 *)v5, &v7);
  if (v8 && v8 != 1)
  {
    sub_1A594CE88();
  }
  else
  {
    sub_1A594CE88();
    sub_1A5698884(v0);
    sub_1A594B1D8();
  }
  sub_1A5698854(v0);
  return sub_1A594CED0();
}

uint64_t sub_1A5699290()
{
  const void *v0;
  _BYTE __dst[81];

  memcpy(__dst, v0, sizeof(__dst));
  return AuthenticatedURLRump.hashValue.getter();
}

uint64_t sub_1A56992C8()
{
  const void *v0;
  _BYTE __dst[81];

  memcpy(__dst, v0, sizeof(__dst));
  return AuthenticatedURLRump.hash(into:)();
}

uint64_t sub_1A5699308()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(unsigned __int8 *)(v0 + 57);
  v7 = *(_QWORD *)(v0 + 72);
  v8 = *(_QWORD *)(v0 + 64);
  v6 = *(unsigned __int8 *)(v0 + 80);
  sub_1A594CE64();
  sub_1A594CE94();
  if (v1 != 1)
    Expire.hash(into:)();
  if (v6)
  {
    if (v6 != 1)
    {
      sub_1A594CE88();
      goto LABEL_9;
    }
    sub_1A594CE88();
    v2 = v8;
    v3 = v7;
    v4 = 1;
  }
  else
  {
    sub_1A594CE88();
    v2 = v8;
    v3 = v7;
    v4 = 0;
  }
  sub_1A5688348(v2, v3, v4);
  sub_1A594B1D8();
LABEL_9:
  sub_1A5687BD4(v8, v7, v6);
  return sub_1A594CED0();
}

BOOL sub_1A5699454(void *__src, const void *a2)
{
  _BYTE v4[88];
  _BYTE __dst[88];

  memcpy(v4, __src, 0x51uLL);
  memcpy(__dst, a2, 0x51uLL);
  return static AuthenticatedURLRump.__derived_struct_equals(_:_:)((uint64_t)v4, (uint64_t)__dst);
}

uint64_t sub_1A56994A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9448);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A56994F4()
{
  unint64_t result;

  result = qword_1EE7A9450;
  if (!qword_1EE7A9450)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for AuthenticatedURLRump, &type metadata for AuthenticatedURLRump);
    atomic_store(result, (unint64_t *)&qword_1EE7A9450);
  }
  return result;
}

uint64_t destroy for AuthenticatedURLRump(uint64_t a1)
{
  return sub_1A5687BD4(*(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
}

uint64_t initializeWithCopy for AuthenticatedURLRump(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 42) = *(_OWORD *)(a2 + 42);
  v4 = *(_QWORD *)(a2 + 64);
  v5 = *(_QWORD *)(a2 + 72);
  v6 = *(_BYTE *)(a2 + 80);
  sub_1A5688348(v4, v5, v6);
  *(_QWORD *)(a1 + 64) = v4;
  *(_QWORD *)(a1 + 72) = v5;
  *(_BYTE *)(a1 + 80) = v6;
  return a1;
}

uint64_t assignWithCopy for AuthenticatedURLRump(uint64_t a1, __int128 *a2)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  *(_OWORD *)(a1 + 42) = *(__int128 *)((char *)a2 + 42);
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)a1 = v3;
  v6 = *((_QWORD *)a2 + 8);
  v7 = *((_QWORD *)a2 + 9);
  v8 = *((_BYTE *)a2 + 80);
  sub_1A5688348(v6, v7, v8);
  v9 = *(_QWORD *)(a1 + 64);
  v10 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 72) = v7;
  v11 = *(_BYTE *)(a1 + 80);
  *(_BYTE *)(a1 + 80) = v8;
  sub_1A5687BD4(v9, v10, v11);
  return a1;
}

void *__swift_memcpy81_8_0(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x51uLL);
}

uint64_t assignWithTake for AuthenticatedURLRump(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 42) = *(_OWORD *)(a2 + 42);
  v4 = *(_BYTE *)(a2 + 80);
  v5 = *(_QWORD *)(a1 + 64);
  v6 = *(_QWORD *)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  v7 = *(_BYTE *)(a1 + 80);
  *(_BYTE *)(a1 + 80) = v4;
  sub_1A5687BD4(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for AuthenticatedURLRump(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 81))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 80);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for AuthenticatedURLRump()
{
  return &type metadata for AuthenticatedURLRump;
}

uint64_t OUTLINED_FUNCTION_0_28()
{
  return 0x485455414C52553BLL;
}

uint64_t OUTLINED_FUNCTION_1_18()
{
  return 0x3D4552495058453BLL;
}

__n128 *OUTLINED_FUNCTION_2_23(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 a9)
{
  uint64_t v9;

  return sub_1A5698818(&a9, (__n128 *)(v9 - 40));
}

uint64_t static AuthenticatedURLVerifier.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  BOOL v12;
  char v13;
  uint64_t result;

  v12 = a1 == a5 && a2 == a6;
  if (v12 || (v13 = sub_1A594CD38(), result = 0, (v13 & 1) != 0))
  {
    if (a3 == a7 && a4 == a8)
      return 1;
    else
      return sub_1A594CD38();
  }
  return result;
}

void sub_1A5699790(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  Swift::Int v11;
  Swift::Int v12;
  char v13;
  Swift::String v14;
  Swift::Int v15;
  int v16;
  Swift::Int v17;
  Swift::Int v18;
  Swift::Int v19;
  char v20;
  char v21;
  Swift::String v22;
  int v23;
  Swift::Int v24;
  Swift::Int v25;
  Swift::Int v26;
  char v27;
  Swift::String v28;
  int v29;
  Swift::Int v30;
  Swift::Int v31;
  Swift::Int v32;
  Swift::Int v33;
  char v34;
  char v35;
  Swift::String v36;
  int v37;
  BOOL v38;
  int v39;
  uint64_t v40;

  v5 = v4;
  v10 = v4 + 8;
  v11 = *(unsigned int *)(v5 + 20);
  sub_1A56814E0(58, 0xE100000000000000, v10, *(_DWORD *)(v5 + 20));
  if ((v13 & 1) != 0)
  {
    v14._countAndFlagsBits = 58;
    v14._object = (void *)0xE100000000000000;
    v12 = ByteBuffer._setStringSlowpath(_:at:)(v14, v11);
  }
  v15 = v12;
  v16 = *(_DWORD *)(v5 + 20);
  v17 = (v16 + v12);
  if (__CFADD__(v16, (_DWORD)v12))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v40 = a3;
  *(_DWORD *)(v5 + 20) = v17;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A56814E0(a1, (unint64_t)a2, v10, v17);
  v19 = v18;
  v21 = v20;
  swift_bridgeObjectRelease();
  if ((v21 & 1) != 0)
  {
    v22._countAndFlagsBits = a1;
    v22._object = a2;
    v19 = ByteBuffer._setStringSlowpath(_:at:)(v22, v17);
  }
  v23 = *(_DWORD *)(v5 + 20);
  v24 = (v23 + v19);
  if (__CFADD__(v23, (_DWORD)v19))
    goto LABEL_18;
  *(_DWORD *)(v5 + 20) = v24;
  v25 = v15 + v19;
  if (__OFADD__(v15, v19))
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  OUTLINED_FUNCTION_1_19(58, 0xE100000000000000);
  if ((v27 & 1) != 0)
  {
    v28._countAndFlagsBits = 58;
    v28._object = (void *)0xE100000000000000;
    v26 = ByteBuffer._setStringSlowpath(_:at:)(v28, v24);
  }
  v29 = *(_DWORD *)(v5 + 20);
  v30 = (v29 + v26);
  if (__CFADD__(v29, (_DWORD)v26))
    goto LABEL_20;
  *(_DWORD *)(v5 + 20) = v30;
  v31 = v25 + v26;
  if (__OFADD__(v25, v26))
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_1_19(v40, (unint64_t)a4);
  v33 = v32;
  v35 = v34;
  swift_bridgeObjectRelease();
  if ((v35 & 1) != 0)
  {
    v36._countAndFlagsBits = v40;
    v36._object = a4;
    v33 = ByteBuffer._setStringSlowpath(_:at:)(v36, v30);
  }
  v37 = *(_DWORD *)(v5 + 20);
  v38 = __CFADD__(v37, (_DWORD)v33);
  v39 = v37 + v33;
  if (v38)
    goto LABEL_22;
  *(_DWORD *)(v5 + 20) = v39;
  if (__OFADD__(v31, v33))
LABEL_23:
    __break(1u);
}

uint64_t AuthenticatedURLVerifier.urlAuthenticationMechanism.getter(uint64_t a1)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

void AuthenticatedURLVerifier.urlAuthenticationMechanism.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_8_1();
}

double (*AuthenticatedURLVerifier.urlAuthenticationMechanism.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t AuthenticatedURLVerifier.encodedAuthenticationURL.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a3;
}

void AuthenticatedURLVerifier.encodedAuthenticationURL.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  OUTLINED_FUNCTION_8_1();
}

double (*AuthenticatedURLVerifier.encodedAuthenticationURL.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t AuthenticatedURLVerifier.hash(into:)()
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_2_24();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_2_22();
  return swift_bridgeObjectRelease();
}

uint64_t AuthenticatedURLVerifier.hashValue.getter()
{
  sub_1A594CE64();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_2_24();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_2_22();
  swift_bridgeObjectRelease();
  return sub_1A594CED0();
}

uint64_t sub_1A5699AF8()
{
  return AuthenticatedURLVerifier.hashValue.getter();
}

uint64_t sub_1A5699B04()
{
  return AuthenticatedURLVerifier.hash(into:)();
}

uint64_t sub_1A5699B10()
{
  sub_1A594CE64();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  return sub_1A594CED0();
}

uint64_t sub_1A5699B90(uint64_t *a1, uint64_t *a2)
{
  return static AuthenticatedURLVerifier.__derived_struct_equals(_:_:)(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

unint64_t sub_1A5699BB0()
{
  unint64_t result;

  result = qword_1EE7A9458;
  if (!qword_1EE7A9458)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for AuthenticatedURLVerifier, &type metadata for AuthenticatedURLVerifier);
    atomic_store(result, (unint64_t *)&qword_1EE7A9458);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Media.MediaType(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for AuthenticatedURLVerifier()
{
  return &type metadata for AuthenticatedURLVerifier;
}

void OUTLINED_FUNCTION_1_19(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  Swift::UInt32 v3;

  sub_1A56814E0(a1, a2, v2, v3);
}

uint64_t OUTLINED_FUNCTION_2_24()
{
  return sub_1A594B1D8();
}

const char *AuthenticationMechanism.token.unsafeMutableAddressor()
{
  return "TOKEN";
}

unint64_t static AuthenticationMechanism.token.getter()
{
  return OUTLINED_FUNCTION_2_25(1162563412);
}

const char *AuthenticationMechanism.plain.unsafeMutableAddressor()
{
  return "PLAIN";
}

unint64_t static AuthenticationMechanism.plain.getter()
{
  return OUTLINED_FUNCTION_2_25(1229016144);
}

const char *AuthenticationMechanism.pToken.unsafeMutableAddressor()
{
  return "PTOKEN";
}

uint64_t static AuthenticationMechanism.pToken.getter()
{
  return 0x4E454B4F5450;
}

const char *AuthenticationMechanism.weToken.unsafeMutableAddressor()
{
  return "WETOKEN";
}

uint64_t static AuthenticationMechanism.weToken.getter()
{
  return OUTLINED_FUNCTION_0_29(0x4557u);
}

const char *AuthenticationMechanism.wsToken.unsafeMutableAddressor()
{
  return "WSTOKEN";
}

uint64_t static AuthenticationMechanism.wsToken.getter()
{
  return OUTLINED_FUNCTION_0_29(0x5357u);
}

const char *AuthenticationMechanism.gssAPI.unsafeMutableAddressor()
{
  return "GSSAPI";
}

uint64_t static AuthenticationMechanism.gssAPI.getter()
{
  return 0x495041535347;
}

uint64_t AuthenticationMechanism.rawValue.getter(uint64_t a1)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

NIOIMAPCore2::AuthenticationMechanism __swiftcall AuthenticationMechanism.init(_:)(Swift::String a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  NIOIMAPCore2::AuthenticationMechanism result;

  v1 = sub_1A594B4B4();
  v3 = v2;
  swift_bridgeObjectRelease();
  v4 = v1;
  v5 = v3;
  result.rawValue._object = v5;
  result.rawValue._countAndFlagsBits = v4;
  return result;
}

uint64_t AuthenticationMechanism.hash(into:)()
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_2_22();
  return swift_bridgeObjectRelease();
}

uint64_t static AuthenticationMechanism.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4)
    return 1;
  else
    return sub_1A594CD38();
}

uint64_t AuthenticationMechanism.hashValue.getter()
{
  sub_1A594CE64();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_2_22();
  swift_bridgeObjectRelease();
  return sub_1A594CED0();
}

uint64_t sub_1A5699E0C()
{
  return AuthenticationMechanism.hashValue.getter();
}

uint64_t sub_1A5699E14()
{
  return AuthenticationMechanism.hash(into:)();
}

unint64_t sub_1A5699E20()
{
  unint64_t result;

  result = qword_1EE7A9460;
  if (!qword_1EE7A9460)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for AuthenticationMechanism, &type metadata for AuthenticationMechanism);
    atomic_store(result, (unint64_t *)&qword_1EE7A9460);
  }
  return result;
}

uint64_t sub_1A5699E5C(uint64_t *a1, uint64_t *a2)
{
  return static AuthenticationMechanism.__derived_struct_equals(_:_:)(*a1, a1[1], *a2, a2[1]);
}

ValueMetadata *type metadata accessor for AuthenticationMechanism()
{
  return &type metadata for AuthenticationMechanism;
}

uint64_t OUTLINED_FUNCTION_0_29(unsigned __int16 a1)
{
  return a1 | 0x4E454B4F540000;
}

unint64_t OUTLINED_FUNCTION_2_25(uint64_t a1)
{
  return a1 & 0xFFFF0000FFFFFFFFLL | 0x4E00000000;
}

void sub_1A5699EA0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  if ((a4 & 1) == 0)
    goto LABEL_2;
  sub_1A594CD68();
  swift_unknownObjectRetain_n();
  v8 = swift_dynamicCastClass();
  if (!v8)
  {
    OUTLINED_FUNCTION_77_2();
    v8 = MEMORY[0x1E0DEE9D8];
  }
  v9 = *(_QWORD *)(v8 + 16);
  swift_release();
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v9 != (a4 >> 1) - a3)
  {
LABEL_11:
    swift_unknownObjectRelease();
LABEL_2:
    sub_1A566AC24(a1, a2, a3, a4);
    goto LABEL_9;
  }
  if (!swift_dynamicCastClass())
    OUTLINED_FUNCTION_77_2();
LABEL_9:
  OUTLINED_FUNCTION_77_2();
  OUTLINED_FUNCTION_17_1();
}

uint64_t sub_1A5699F6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  BOOL v3;
  uint64_t result;

  v3 = __OFADD__(a1, a2);
  result = a1 + a2;
  if (v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result < *(_QWORD *)(v2 + 24) || *(_QWORD *)(v2 + 32) < result)
    goto LABEL_8;
  return result;
}

uint64_t sub_1A5699F90(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;

  v4 = *(_QWORD *)(v3 + 24);
  v5 = *(_QWORD *)(v3 + 32);
  if (v5 >= a3)
  {
    v8 = __OFSUB__(v4, a3);
    v6 = v4 == a3;
    v7 = v4 - a3 < 0;
  }
  else
  {
    v8 = 0;
    v6 = 0;
    v7 = 0;
  }
  if (v7 ^ v8 | v6)
  {
    v11 = __OFSUB__(v4, result);
    v9 = v4 == result;
    v10 = v4 - result < 0;
  }
  else
  {
    v11 = 0;
    v9 = 0;
    v10 = 0;
  }
  if (v10 ^ v11 | v9)
  {
    v13 = __OFSUB__(v5, result);
    v12 = v5 - result < 0;
  }
  else
  {
    v13 = 0;
    v12 = 1;
  }
  if (v12 != v13)
  {
    __break(1u);
    goto LABEL_28;
  }
  v14 = a3 - result;
  if (__OFSUB__(a3, result))
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    return result;
  }
  if (a2 < 1)
  {
    if (v14 <= 0)
    {
      v17 = __OFSUB__(v14, a2);
      v15 = v14 == a2;
      v16 = v14 - a2 < 0;
    }
    else
    {
      v17 = 0;
      v15 = 1;
      v16 = 0;
    }
    if (!(v16 ^ v17 | v15))
      return OUTLINED_FUNCTION_0_7();
  }
  else if ((v14 & 0x8000000000000000) == 0 && v14 < (unint64_t)a2)
  {
    return OUTLINED_FUNCTION_0_7();
  }
  v8 = __OFADD__(result, a2);
  result += a2;
  if (v8)
    goto LABEL_29;
  if (result >= v4)
  {
    v19 = __OFSUB__(v5, result);
    v18 = v5 - result < 0;
  }
  else
  {
    v19 = 0;
    v18 = 1;
  }
  if (v18 != v19)
    goto LABEL_30;
  return result;
}

_QWORD *sub_1A569A000(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A566B070();
  if (a2 < 1)
  {
    if (v4 <= 0 && v4 > a2)
      return 0;
  }
  else if ((v4 & 0x8000000000000000) == 0 && v4 < (unint64_t)a2)
  {
    return 0;
  }
  return sub_1A569C150(a1, a2);
}

unint64_t sub_1A569A064(unint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  char v5;
  int64_t v9;
  unint64_t result;
  unint64_t v12;

  v5 = BYTE4(a5);
  v9 = sub_1A5670E3C(a1, a3, a4, a5 & 0xFFFFFFFFFFLL);
  if (a2 < 1)
  {
    if (v9 <= 0 && v9 > a2)
      return 0;
  }
  else if ((v9 & 0x8000000000000000) == 0 && v9 < a2)
  {
    return 0;
  }
  result = a1 + a2;
  if (__OFADD__(a1, a2))
  {
    __break(1u);
LABEL_19:
    __break(1u);
    return result;
  }
  if (v5)
  {
    if (v5 == 1)
      v12 = *(_QWORD *)(a4 + 16);
    else
      v12 = 0;
  }
  else
  {
    v12 = 1;
  }
  if (result > v12)
    goto LABEL_19;
  return result;
}

uint64_t sub_1A569A114(uint64_t result, uint64_t a2, uint64_t a3)
{
  BOOL v3;
  BOOL v4;

  if (result >= a2)
  {
    v4 = __OFSUB__(result, a3);
    v3 = result - a3 < 0;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  if (v3 == v4)
    __break(1u);
  return result;
}

BOOL sub_1A569A128(_BOOL8 a1, uint64_t a2, uint64_t a3)
{
  _BOOL8 result;

  result = static SectionSpecifier.Part.< infix(_:_:)(a1, a2);
  if (result)
  {
    __break(1u);
    goto LABEL_5;
  }
  result = static SectionSpecifier.Part.< infix(_:_:)(a1, a3);
  if (!result)
LABEL_5:
    __break(1u);
  return result;
}

uint64_t sub_1A569A168(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result < a3 || a4 < a2)
    __break(1u);
  return result;
}

BOOL sub_1A569A17C(_BOOL8 a1, uint64_t a2, uint64_t a3, _BOOL8 a4)
{
  _BOOL8 result;

  result = static SectionSpecifier.Part.< infix(_:_:)(a1, a3);
  if (result)
  {
    __break(1u);
    goto LABEL_5;
  }
  result = static SectionSpecifier.Part.< infix(_:_:)(a4, a2);
  if (result)
LABEL_5:
    __break(1u);
  return result;
}

void sub_1A569A1C8(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1A55DC3E0(v1, a1);
  a1[23] = MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B2D0);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1A59ABD10;
  sub_1A569D010(v1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A552370C);
  BodyStructure.subpartCount.getter(v4);
  *(_QWORD *)(v3 + 32) = v5 + 1;
  a1[24] = v3;
}

uint64_t sub_1A569A24C(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
    return *(_QWORD *)(a1 + 8 * v1 + 24);
  else
    return 0;
}

unint64_t sub_1A569A270(uint64_t a1, uint64_t a2)
{
  unint64_t result;
  unint64_t v4;
  int v5;

  if (BYTE4(a2) == 1)
  {
    result = *(_QWORD *)(a1 + 16);
    if (!result)
      return result;
    v4 = sub_1A5670EF8(result, a1, a2 & 0xFFFFFFFFFFLL);
    if ((v4 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v4 < *(_QWORD *)(a1 + 16))
    {
      return *(_QWORD *)(a1 + 8 * v4 + 32);
    }
    __break(1u);
  }
  else if (BYTE4(a2) == 2)
  {
    return 0;
  }
  v5 = a2;
  result = sub_1A5670EF8(1, a1, a2 & 0xFFFFFFFFFFLL);
  if (a1 >= v5)
    __break(1u);
  __break(1u);
  return result;
}

void sub_1A569A310()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int16 v5;

  v1 = v0[3];
  v2 = v0[4];
  if (v1 != v2)
  {
    v3 = v2 - 1;
    if (__OFSUB__(v2, 1))
    {
      __break(1u);
LABEL_11:
      __break(1u);
      goto LABEL_12;
    }
    if (v3 < v1 || v2 - 1 >= v2)
      goto LABEL_11;
    sub_1A566FE08(v3, 0, *v0, v0[1]);
    if ((v5 & 0x100) != 0)
LABEL_12:
      __break(1u);
  }
}

void sub_1A569A3A0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    sub_1A594B5BC();
    sub_1A594B6E8();
  }
  else
  {
    OUTLINED_FUNCTION_3_1();
  }
}

void MessageAttribute.BodyStructure.hash(into:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  char v4;
  const void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21[23];
  _BYTE v22[184];
  _BYTE v23[184];
  _BYTE v24[184];
  _BYTE v25[184];
  _BYTE v26[176];
  _BYTE v27[184];

  OUTLINED_FUNCTION_79_3();
  OUTLINED_FUNCTION_17_11(v2, v22);
  v3 = sub_1A55DC3E0(v22, v27);
  OUTLINED_FUNCTION_17_11((uint64_t)v3, v23);
  OUTLINED_FUNCTION_27_5((uint64_t)v23);
  if (v4)
  {
    OUTLINED_FUNCTION_36_5();
  }
  else
  {
    sub_1A55DC3E0(v23, v24);
    OUTLINED_FUNCTION_36_5();
    sub_1A55DC3E0(v24, v25);
    OUTLINED_FUNCTION_83_1((uint64_t)v25);
    if (v4)
    {
      nullsub_1(v25);
      OUTLINED_FUNCTION_35_6(v26, v5);
      OUTLINED_FUNCTION_36_5();
      OUTLINED_FUNCTION_71_2(v27, v6, v7, v8, v9, v10, v11, v12, v21[0]);
      sub_1A569D010(v21, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A552370C);
      BodyStructure.Multipart.hash(into:)(v1);
    }
    else
    {
      nullsub_1(v25);
      OUTLINED_FUNCTION_30_5(v26, v13);
      OUTLINED_FUNCTION_36_5();
      OUTLINED_FUNCTION_71_2(v27, v14, v15, v16, v17, v18, v19, v20, v21[0]);
      sub_1A569D010(v21, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A552370C);
      BodyStructure.Singlepart.hash(into:)(v1);
    }
    sub_1A569D010(v0, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5524178);
  }
  OUTLINED_FUNCTION_8_1();
}

uint64_t static MessageAttribute.BodyStructure.__derived_enum_equals(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t result;
  void *v6;
  char v7;
  int v8;
  const void *v9;
  const void *v10;
  BOOL v11;
  const void *v12;
  BOOL v13;
  _BYTE v14[184];
  _BYTE v15[184];
  _QWORD v16[22];
  _BYTE v17[184];
  _BYTE v18[184];
  _BYTE v19[184];
  _BYTE v20[184];
  _QWORD v21[22];

  sub_1A55DC3E0(a1, v18);
  v4 = OUTLINED_FUNCTION_27_5((uint64_t)v18);
  if (v7)
  {
    OUTLINED_FUNCTION_17_11(v4, v19);
    result = OUTLINED_FUNCTION_27_5((uint64_t)v19);
    if (v7)
      return result;
    OUTLINED_FUNCTION_69_1();
    return 0;
  }
  v6 = sub_1A55DC3E0(v18, v19);
  OUTLINED_FUNCTION_17_11((uint64_t)v6, v14);
  OUTLINED_FUNCTION_27_5((uint64_t)v14);
  if (!v7)
  {
    sub_1A55DC3E0(v14, v15);
    OUTLINED_FUNCTION_69_1();
    v8 = sub_1A55DC430((uint64_t)v20);
    nullsub_1(v20);
    if (v8 == 1)
    {
      OUTLINED_FUNCTION_35_6(v21, v9);
      sub_1A55DC3E0(v15, v17);
      OUTLINED_FUNCTION_83_1((uint64_t)v17);
      if (!v7)
        return 0;
      nullsub_1(v17);
      OUTLINED_FUNCTION_35_6(v16, v10);
      OUTLINED_FUNCTION_33_5(a2);
      OUTLINED_FUNCTION_33_5(a1);
      v11 = static BodyStructure.Multipart.__derived_struct_equals(_:_:)(v21, v16);
    }
    else
    {
      OUTLINED_FUNCTION_30_5(v21, v9);
      sub_1A55DC3E0(v15, v17);
      OUTLINED_FUNCTION_83_1((uint64_t)v17);
      if (v7)
        return 0;
      nullsub_1(v17);
      OUTLINED_FUNCTION_30_5(v16, v12);
      OUTLINED_FUNCTION_33_5(a2);
      OUTLINED_FUNCTION_33_5(a1);
      v11 = static BodyStructure.Singlepart.__derived_struct_equals(_:_:)();
    }
    v13 = v11;
    OUTLINED_FUNCTION_76_3(a2);
    OUTLINED_FUNCTION_76_3(a1);
    if (v13)
      return 1;
  }
  return 0;
}

uint64_t static BodyStructure.__derived_enum_equals(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  int v6;
  unint64_t *v7;
  unint64_t *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  unint64_t *v37;
  unint64_t *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  _QWORD *v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  unint64_t v99;
  BOOL v100;
  unint64_t v101;
  _QWORD *v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  _BYTE v152[80];
  _QWORD v153[2];
  _QWORD v154[2];
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;

  OUTLINED_FUNCTION_16_4();
  v167 = v0;
  v168 = v1;
  v3 = v2;
  v5 = v4;
  sub_1A55DC3E0(v4, &v151);
  v6 = sub_1A55DC430((uint64_t)&v151);
  nullsub_1(&v151);
  v8 = v7;
  v103 = v5;
  if (v6 != 1)
  {
    v101 = *v7;
    OUTLINED_FUNCTION_40_6(v152, v7 + 1);
    v98 = v8[12];
    v28 = v8[14];
    v94 = v8[11];
    v96 = v8[13];
    v30 = v8[15];
    v29 = v8[16];
    v31 = v8[17];
    v32 = v8[18];
    v33 = v8[19];
    v34 = v8[20];
    v35 = v8[21];
    v102 = v3;
    sub_1A55DC3E0(v3, &v104);
    v36 = sub_1A55DC430((uint64_t)&v104);
    nullsub_1(&v104);
    if (v36 == 1)
      return 0;
    v38 = v37;
    v76 = v35;
    v77 = v34;
    v78 = v33;
    v80 = v28;
    v82 = v30;
    v84 = v29;
    v39 = *v37;
    OUTLINED_FUNCTION_40_6(&v128, v37 + 1);
    v41 = v38[11];
    v40 = v38[12];
    v42 = v38[13];
    v90 = v38[16];
    v92 = v38[15];
    v73 = v38[17];
    v74 = v38[14];
    v43 = v38[19];
    v88 = v38[18];
    v45 = v38[20];
    v44 = v38[21];
    OUTLINED_FUNCTION_52_4(v103);
    OUTLINED_FUNCTION_52_4(v102);
    static BodyStructure.Singlepart.Kind.__derived_enum_equals(_:_:)(v101, v39);
    if ((v46 & 1) != 0)
    {
      OUTLINED_FUNCTION_40_6(v153, v152);
      OUTLINED_FUNCTION_40_6(v154, &v128);
      if (static BodyStructure.Fields.__derived_struct_equals(_:_:)(v153, v154))
      {
        if (v98 == 1)
        {
          if (v40 == 1)
          {
            v47 = v102;
            goto LABEL_33;
          }
        }
        else if (v40 != 1)
        {
          v155 = v94;
          v156 = v98;
          v157 = v96;
          v158 = v80;
          v159 = v82;
          v160 = v84;
          v161 = v31;
          v162 = v32;
          v163 = v78;
          v164 = v77;
          v165 = v76;
          v129 = v41;
          v130 = v40;
          v131 = v42;
          v132 = v74;
          v133 = v92;
          v134 = v90;
          v135 = v73;
          v136 = v88;
          v137 = v43;
          v138 = v45;
          v139 = v44;
          sub_1A552388C(v94, v98, v96, v80, v82, v84, v31, v32, v78, v77, v76);
          OUTLINED_FUNCTION_75_2();
          sub_1A552388C(v51, v52, v53, v54, v55, v56, v73, v57, v43, v45, v44);
          v67 = static BodyStructure.Singlepart.Extension.__derived_struct_equals(_:_:)(&v155, &v129);
          OUTLINED_FUNCTION_75_2();
          sub_1A5524370(v58, v59, v60, v61, v62, v63, v73, v64, v43, v45, v44);
          sub_1A5524370(v94, v98, v96, v80, v82, v84, v31, v32, v78, v77, v76);
          sub_1A569D010(v102, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A55241F0);
          sub_1A569D010(v103, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A55241F0);
          return v67;
        }
        v129 = v94;
        v130 = v98;
        v131 = v96;
        v132 = v80;
        v133 = v82;
        v134 = v84;
        v135 = v31;
        v136 = v32;
        v137 = v78;
        v138 = v77;
        v139 = v76;
        v140 = v41;
        v141 = v40;
        v142 = v42;
        v143 = v74;
        v144 = v92;
        v145 = v90;
        v146 = v73;
        v147 = v88;
        v148 = v43;
        v149 = v45;
        v150 = v44;
        sub_1A552388C(v94, v98, v96, v80, v82, v84, v31, v32, v78, v77, v76);
        sub_1A552388C(v41, v40, v42, v74, v92, v90, v73, v88, v43, v45, v44);
        sub_1A5691F84((uint64_t)&v129);
      }
      v49 = v102;
      goto LABEL_27;
    }
    OUTLINED_FUNCTION_33_5(v102);
    v48 = v103;
LABEL_28:
    OUTLINED_FUNCTION_33_5(v48);
    return 0;
  }
  v99 = v7[1];
  v9 = v3;
  v89 = v7[4];
  v91 = v7[3];
  v93 = v7[5];
  v10 = v7[7];
  v95 = v7[6];
  v97 = v7[2];
  v12 = v7[8];
  v11 = v7[9];
  v14 = v7[10];
  v13 = v7[11];
  v16 = v7[12];
  v15 = v7[13];
  v17 = v7[14];
  OUTLINED_FUNCTION_17_11((uint64_t)v7, &v129);
  v18 = sub_1A55DC430((uint64_t)&v129);
  nullsub_1(&v129);
  if (v18 != 1)
    return 0;
  v70 = v17;
  v71 = v15;
  v72 = v16;
  v75 = v10;
  v79 = v14;
  v83 = v19[1];
  v85 = v19[2];
  v20 = v19[5];
  v81 = v19[4];
  v21 = v19[6];
  v68 = v19[8];
  v69 = v19[7];
  v66 = v19[9];
  v22 = v19[11];
  v86 = v19[10];
  v87 = v19[3];
  v24 = v19[12];
  v23 = v19[13];
  v25 = v19[14];
  OUTLINED_FUNCTION_52_4(v103);
  OUTLINED_FUNCTION_52_4(v9);
  sub_1A568E204();
  if ((v26 & 1) == 0)
  {
    OUTLINED_FUNCTION_33_5(v9);
    v48 = v103;
    goto LABEL_28;
  }
  v27 = v99 == v83 && v97 == v85;
  if (!v27 && (sub_1A594CD38() & 1) == 0)
  {
    v49 = v9;
    goto LABEL_27;
  }
  if (v89)
  {
    if (v81)
    {
      v155 = v91;
      v156 = v89;
      v157 = v93;
      v158 = v95;
      v159 = v75;
      v160 = v12;
      v161 = v11;
      v162 = v79;
      v163 = v13;
      v164 = v72;
      v165 = v71;
      v166 = v70;
      v104 = v87;
      v105 = v81;
      v106 = v20;
      v107 = v21;
      v108 = v69;
      v109 = v68;
      v110 = v66;
      v111 = v86;
      v112 = v22;
      v113 = v24;
      v114 = v23;
      v115 = v25;
      OUTLINED_FUNCTION_63_3(v91, v93, v95, v75, v12, v11, v79, v13, v65, v72, v71, v70);
      sub_1A5523A30(v87, v81, v20, v21, v69, v68, v66, v86, v22, v24, v23, v25);
      v100 = static BodyStructure.Multipart.Extension.__derived_struct_equals(_:_:)(&v155, &v104);
      sub_1A5524514(v87, v81, v20, v21, v69, v68, v66, v86, v22, v24, v23, v25);
      sub_1A5524514(v91, v89, v93, v95, v75, v12, v11, v79, v13, v72, v71, v70);
      sub_1A569D010(v9, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A55241F0);
      sub_1A569D010(v103, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A55241F0);
      return v100;
    }
    goto LABEL_22;
  }
  if (v81)
  {
LABEL_22:
    v104 = v91;
    v105 = v89;
    v106 = v93;
    v107 = v95;
    v108 = v75;
    v109 = v12;
    v110 = v11;
    v111 = v79;
    v112 = v13;
    v113 = v72;
    v114 = v71;
    v115 = v70;
    v116 = v87;
    v117 = v81;
    v118 = v20;
    v119 = v21;
    v120 = v69;
    v121 = v68;
    v122 = v66;
    v123 = v86;
    v124 = v22;
    v125 = v24;
    v126 = v23;
    v127 = v25;
    OUTLINED_FUNCTION_63_3(v91, v93, v95, v75, v12, v11, v79, v13, v65, v72, v71, v70);
    sub_1A5523A30(v87, v81, v20, v21, v69, v68, v66, v86, v22, v24, v23, v25);
    sub_1A5691E24((uint64_t)&v104);
    v49 = v9;
LABEL_27:
    OUTLINED_FUNCTION_33_5(v49);
    v48 = v103;
    goto LABEL_28;
  }
  v47 = v9;
LABEL_33:
  OUTLINED_FUNCTION_33_5(v47);
  OUTLINED_FUNCTION_33_5(v103);
  return 1;
}

void MessageAttribute.BodyStructure.hashValue.getter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  char v3;
  const void *v4;
  uint64_t v5;
  const void *v6;
  uint64_t v7;
  _QWORD v8[23];
  _BYTE v9[72];
  _BYTE v10[184];
  _BYTE v11[184];
  _BYTE v12[184];
  _BYTE v13[184];
  _BYTE v14[176];
  _BYTE v15[184];

  OUTLINED_FUNCTION_17_11(a1, v10);
  sub_1A55DC3E0(v10, v15);
  v2 = sub_1A594CE64();
  OUTLINED_FUNCTION_17_11(v2, v11);
  OUTLINED_FUNCTION_27_5((uint64_t)v11);
  if (v3)
  {
    OUTLINED_FUNCTION_3_19();
  }
  else
  {
    sub_1A55DC3E0(v11, v12);
    OUTLINED_FUNCTION_64_1();
    sub_1A55DC3E0(v12, v13);
    OUTLINED_FUNCTION_83_1((uint64_t)v13);
    if (v3)
    {
      nullsub_1(v13);
      OUTLINED_FUNCTION_35_6(v14, v4);
      v5 = OUTLINED_FUNCTION_3_19();
      OUTLINED_FUNCTION_72_1(v5);
      sub_1A569D010(v8, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A552370C);
      BodyStructure.Multipart.hash(into:)((uint64_t)v9);
    }
    else
    {
      nullsub_1(v13);
      OUTLINED_FUNCTION_30_5(v14, v6);
      v7 = OUTLINED_FUNCTION_64_1();
      OUTLINED_FUNCTION_72_1(v7);
      sub_1A569D010(v8, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A552370C);
      BodyStructure.Singlepart.hash(into:)((uint64_t)v9);
    }
    sub_1A569D010(v1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5524178);
  }
  sub_1A594CED0();
  OUTLINED_FUNCTION_60_4();
}

void sub_1A569AF80()
{
  const void *v0;
  void *v1;
  _BYTE v2[184];

  v1 = sub_1A55DC3E0(v0, v2);
  MessageAttribute.BodyStructure.hashValue.getter((uint64_t)v1);
}

void sub_1A569AFB4()
{
  const void *v0;
  _BYTE v1[184];

  sub_1A55DC3E0(v0, v1);
  MessageAttribute.BodyStructure.hash(into:)();
  OUTLINED_FUNCTION_25_5();
}

uint64_t sub_1A569AFE8()
{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  const void *v3;
  _QWORD v5[23];
  _BYTE v6[184];
  _BYTE v7[72];
  _OWORD __dst[11];
  _QWORD v9[23];
  _BYTE v10[184];

  sub_1A55DC3E0(v0, v9);
  sub_1A594CE64();
  sub_1A55DC3E0(v9, v10);
  if (sub_1A55DC41C((uint64_t)v10) == 1)
  {
    sub_1A594CE88();
  }
  else
  {
    sub_1A594CE88();
    sub_1A55DC3E0(v10, v6);
    if (sub_1A55DC430((uint64_t)v6) == 1)
    {
      nullsub_1(v6);
      v2 = *(_QWORD *)(v1 + 16);
      __dst[0] = *(_OWORD *)v1;
      *(_QWORD *)&__dst[1] = v2;
      *(_OWORD *)((char *)&__dst[1] + 8) = *(_OWORD *)(v1 + 24);
      *(_OWORD *)((char *)&__dst[2] + 8) = *(_OWORD *)(v1 + 40);
      *(_OWORD *)((char *)&__dst[3] + 8) = *(_OWORD *)(v1 + 56);
      *(_OWORD *)((char *)&__dst[4] + 8) = *(_OWORD *)(v1 + 72);
      *(_OWORD *)((char *)&__dst[5] + 8) = *(_OWORD *)(v1 + 88);
      *(_OWORD *)((char *)&__dst[6] + 8) = *(_OWORD *)(v1 + 104);
      sub_1A594CE88();
      sub_1A55DC3E0(v9, v5);
      sub_1A569D010(v5, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A552370C);
      BodyStructure.Multipart.hash(into:)((uint64_t)v7);
    }
    else
    {
      nullsub_1(v6);
      memcpy(__dst, v3, sizeof(__dst));
      sub_1A594CE88();
      sub_1A55DC3E0(v9, v5);
      sub_1A569D010(v5, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A552370C);
      BodyStructure.Singlepart.hash(into:)((uint64_t)v7);
    }
    sub_1A569D010(v9, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5524178);
  }
  return sub_1A594CED0();
}

uint64_t sub_1A569B164(const void *a1, const void *a2)
{
  _QWORD v4[23];
  _QWORD v5[23];

  sub_1A55DC3E0(a1, v4);
  sub_1A55DC3E0(a2, v5);
  return static MessageAttribute.BodyStructure.__derived_enum_equals(_:_:)(v4, v5) & 1;
}

void BodyStructure.hash(into:)()
{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[24];
  _BYTE v22[96];
  _BYTE v23[96];
  _BYTE v24[96];
  _BYTE v25[96];
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_16_4();
  v26 = v3;
  v27 = v4;
  OUTLINED_FUNCTION_79_3();
  OUTLINED_FUNCTION_17_11(v5, v22);
  sub_1A55DC3E0(v22, v25);
  sub_1A55DC3E0(v0, v23);
  OUTLINED_FUNCTION_83_1((uint64_t)v23);
  if (v6)
  {
    nullsub_1(v23);
    OUTLINED_FUNCTION_35_6(v24, v7);
    OUTLINED_FUNCTION_36_5();
    sub_1A55DC3E0(v25, v21);
    nullsub_1(v21);
    v9 = *(_QWORD *)(v8 + 32);
    v10 = *(_QWORD *)(v8 + 40);
    v11 = *(_QWORD *)(v8 + 48);
    v12 = *(_QWORD *)(v8 + 56);
    v13 = *(_QWORD *)(v8 + 64);
    v14 = *(_QWORD *)(v8 + 72);
    v19 = *(_QWORD *)(v8 + 80);
    v20 = *(_QWORD *)(v8 + 24);
    v18 = *(_OWORD *)(v8 + 88);
    OUTLINED_FUNCTION_55_3();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5523A30(v20, v9, v10, v11, v12, v13, v14, v19, v18, *((uint64_t *)&v18 + 1), v1, v2);
    v17 = BodyStructure.Multipart.hash(into:)(v1);
  }
  else
  {
    nullsub_1(v23);
    OUTLINED_FUNCTION_30_5(v24, v15);
    OUTLINED_FUNCTION_36_5();
    sub_1A55DC3E0(v25, v21);
    nullsub_1(v21);
    sub_1A56974D0(v16);
    BodyStructure.Singlepart.hash(into:)(v1);
  }
  OUTLINED_FUNCTION_49_3(v17, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A55241F0);
}

void BodyStructure.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  const void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[184];
  _BYTE v20[72];
  _BYTE v21[184];
  _BYTE v22[184];
  _BYTE v23[176];
  _BYTE v24[192];

  OUTLINED_FUNCTION_16_4();
  OUTLINED_FUNCTION_17_11(v2, v21);
  sub_1A55DC3E0(v21, v24);
  v3 = sub_1A594CE64();
  OUTLINED_FUNCTION_17_11(v3, v22);
  OUTLINED_FUNCTION_83_1((uint64_t)v22);
  if (v4)
  {
    nullsub_1(v22);
    OUTLINED_FUNCTION_35_6(v23, v5);
    OUTLINED_FUNCTION_3_19();
    sub_1A55DC3E0(v24, v19);
    nullsub_1(v19);
    v7 = *(_QWORD *)(v6 + 40);
    v17 = *(_QWORD *)(v6 + 32);
    v18 = *(_QWORD *)(v6 + 24);
    v8 = *(_QWORD *)(v6 + 48);
    v9 = *(_QWORD *)(v6 + 56);
    v10 = *(_QWORD *)(v6 + 64);
    v11 = *(_QWORD *)(v6 + 72);
    v12 = *(_QWORD *)(v6 + 80);
    v16 = *(_OWORD *)(v6 + 88);
    OUTLINED_FUNCTION_55_3();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5523A30(v18, v17, v7, v8, v9, v10, v11, v12, v16, *((uint64_t *)&v16 + 1), v0, v1);
    v15 = BodyStructure.Multipart.hash(into:)((uint64_t)v20);
  }
  else
  {
    nullsub_1(v22);
    OUTLINED_FUNCTION_30_5(v23, v13);
    sub_1A594CE88();
    sub_1A55DC3E0(v24, v19);
    nullsub_1(v19);
    sub_1A56974D0(v14);
    BodyStructure.Singlepart.hash(into:)((uint64_t)v20);
  }
  OUTLINED_FUNCTION_49_3(v15, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A55241F0);
  sub_1A594CED0();
  OUTLINED_FUNCTION_1_3();
}

void sub_1A569B450()
{
  const void *v0;
  _BYTE v1[184];

  sub_1A55DC3E0(v0, v1);
  BodyStructure.hashValue.getter();
}

void sub_1A569B484()
{
  const void *v0;
  _BYTE v1[184];

  sub_1A55DC3E0(v0, v1);
  BodyStructure.hash(into:)();
  OUTLINED_FUNCTION_25_5();
}

uint64_t sub_1A569B4B8()
{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  const void *v13;
  uint64_t v14;
  __int128 v16;
  uint64_t v17;
  char v18;
  _BYTE v19[72];
  _OWORD __dst[11];
  _QWORD v21[23];
  _BYTE v22[192];

  sub_1A55DC3E0(v0, v21);
  sub_1A594CE64();
  sub_1A55DC3E0(v21, v22);
  if (sub_1A55DC430((uint64_t)v22) == 1)
  {
    nullsub_1(v22);
    v2 = *(_QWORD *)(v1 + 16);
    __dst[0] = *(_OWORD *)v1;
    *(_QWORD *)&__dst[1] = v2;
    *(_OWORD *)((char *)&__dst[1] + 8) = *(_OWORD *)(v1 + 24);
    *(_OWORD *)((char *)&__dst[2] + 8) = *(_OWORD *)(v1 + 40);
    *(_OWORD *)((char *)&__dst[3] + 8) = *(_OWORD *)(v1 + 56);
    *(_OWORD *)((char *)&__dst[4] + 8) = *(_OWORD *)(v1 + 72);
    *(_OWORD *)((char *)&__dst[5] + 8) = *(_OWORD *)(v1 + 88);
    *(_OWORD *)((char *)&__dst[6] + 8) = *(_OWORD *)(v1 + 104);
    sub_1A594CE88();
    sub_1A55DC3E0(v21, &v18);
    nullsub_1(&v18);
    v17 = *(_QWORD *)(v3 + 24);
    v4 = *(_QWORD *)(v3 + 32);
    v5 = *(_QWORD *)(v3 + 40);
    v6 = *(_QWORD *)(v3 + 48);
    v7 = *(_QWORD *)(v3 + 56);
    v8 = *(_QWORD *)(v3 + 64);
    v9 = *(_QWORD *)(v3 + 72);
    v10 = *(_QWORD *)(v3 + 80);
    v16 = *(_OWORD *)(v3 + 88);
    v12 = *(_QWORD *)(v3 + 104);
    v11 = *(_QWORD *)(v3 + 112);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A5523A30(v17, v4, v5, v6, v7, v8, v9, v10, v16, *((uint64_t *)&v16 + 1), v12, v11);
    BodyStructure.Multipart.hash(into:)((uint64_t)v19);
  }
  else
  {
    nullsub_1(v22);
    memcpy(__dst, v13, sizeof(__dst));
    sub_1A594CE88();
    sub_1A55DC3E0(v21, &v18);
    nullsub_1(&v18);
    sub_1A56974D0(v14);
    BodyStructure.Singlepart.hash(into:)((uint64_t)v19);
  }
  sub_1A569D010(v21, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A55241F0);
  return sub_1A594CED0();
}

uint64_t sub_1A569B678(const void *a1, const void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  _BYTE v11[184];

  OUTLINED_FUNCTION_71_2(a1, (uint64_t)a2, a3, a4, a5, a6, a7, a8, v10);
  sub_1A55DC3E0(a2, v11);
  return static BodyStructure.__derived_enum_equals(_:_:)() & 1;
}

uint64_t BodyStructure.underestimatedCount.getter(uint64_t a1)
{
  uint64_t v1;

  BodyStructure.subpartCount.getter(a1);
  return v1 + 1;
}

void BodyStructure.subpartCount.getter(uint64_t a1)
{
  int v1;
  const void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE __dst[328];
  _BYTE v7[184];
  _QWORD v8[22];
  uint64_t v9;
  _BYTE v10[184];
  unint64_t v11;

  OUTLINED_FUNCTION_17_11(a1, v7);
  v1 = sub_1A55DC430((uint64_t)v7);
  nullsub_1(v7);
  if (v1 != 1)
  {
    OUTLINED_FUNCTION_30_5(v8, v2);
    sub_1A569D030(v8, &v9);
    sub_1A569D030(&v9, &v11);
    if (v11 >> 62 == 1)
    {
      v11 &= 0x3FFFFFFFFFFFFFFFuLL;
      memcpy(__dst, (const void *)(v11 + 16), sizeof(__dst));
      v3 = sub_1A55DC3E0(&__dst[136], v10);
      OUTLINED_FUNCTION_49_3((uint64_t)v3, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A552370C);
      v4 = sub_1A5692040((uint64_t)__dst);
      BodyStructure.subpartCount.getter(v4);
      v5 = sub_1A56921B8((uint64_t)__dst);
      OUTLINED_FUNCTION_49_3(v5, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A55241F0);
    }
  }
  OUTLINED_FUNCTION_60_4();
}

uint64_t BodyStructure.isEmpty.getter()
{
  return 0;
}

void BodyStructure.subscript.getter(uint64_t a1@<X0>, void *a2@<X8>)
{
  char v3;
  uint64_t v4;
  _BYTE v5[184];
  _BYTE v6[184];

  sub_1A569B8A4(a1, (uint64_t)v5);
  sub_1A569D06C((uint64_t)v5, (uint64_t)v6);
  OUTLINED_FUNCTION_27_5((uint64_t)v6);
  if (v3)
  {
    OUTLINED_FUNCTION_41_5();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_24_6();
    OUTLINED_FUNCTION_27();
    sub_1A594B4A8();
    sub_1A594B5F8();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_15_13();
    __break(1u);
  }
  else
  {
    sub_1A55DC3E0(v6, &v4);
    sub_1A55DC3E0(&v4, a2);
    OUTLINED_FUNCTION_8_1();
  }
}

uint64_t sub_1A569B8A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _BYTE v14[184];
  _BYTE v15[184];
  _QWORD v16[23];
  _QWORD v17[23];
  _BYTE v18[184];
  _BYTE v19[184];
  _BYTE v20[184];
  _BYTE v21[184];
  _BYTE v22[184];

  sub_1A55DC3E0(v2, v18);
  sub_1A55DC3E0(v18, v22);
  if (*(_QWORD *)(a1 + 16))
  {
    sub_1A569CB1C(*(_QWORD *)(a1 + 32), (uint64_t)v16);
    sub_1A569D06C((uint64_t)v16, (uint64_t)v15);
    sub_1A569D06C((uint64_t)v16, (uint64_t)v19);
    if (sub_1A55DC41C((uint64_t)v19) == 1)
    {
      v5 = v15;
    }
    else
    {
      sub_1A55DC3E0(v19, v20);
      v6 = sub_1A566CB1C(1, a1);
      v8 = v7;
      v10 = v9;
      v12 = v11;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A5699EA0(v6, v8, v10, v12);
      sub_1A569B8A4(v17);
      sub_1A569D06C((uint64_t)v17, (uint64_t)v14);
      swift_bridgeObjectRelease();
      sub_1A569D010(v16, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5524178);
      v5 = v14;
    }
  }
  else
  {
    sub_1A55DC3E0(v22, v20);
    nullsub_1(v20);
    sub_1A569D010(v2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A552370C);
    v5 = v20;
  }
  sub_1A569D06C((uint64_t)v5, (uint64_t)v21);
  return sub_1A569D06C((uint64_t)v21, a2);
}

void BodyStructure.find(_:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE v3[184];

  sub_1A569B8A4(a1, (uint64_t)v3);
  sub_1A569D06C((uint64_t)v3, a2);
  OUTLINED_FUNCTION_25_5();
}

uint64_t BodyStructure.startIndex.getter()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t BodyStructure.endIndex.getter()
{
  uint64_t v0;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B2D0);
  v0 = OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_54_2(v0, (__n128)xmmword_1A59ABD10);
  *(_QWORD *)(v0 + 32) = v1 + 1;
  return v0;
}

NIOIMAPCore2::SectionSpecifier::Part __swiftcall BodyStructure.index(before:)(NIOIMAPCore2::SectionSpecifier::Part before)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  void *v12;
  NIOIMAPCore2::SectionSpecifier::Part v13;
  _QWORD *rawValue;
  unint64_t v15;
  NIOIMAPCore2::SectionSpecifier::Part result;
  _QWORD *v17;
  _QWORD *v18;

  v2 = sub_1A569A24C((uint64_t)before.array._rawValue);
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_41_5();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_24_6();
    OUTLINED_FUNCTION_27();
    sub_1A594B4A8();
    sub_1A594B5F8();
    OUTLINED_FUNCTION_17();
    result.array._rawValue = (void *)OUTLINED_FUNCTION_15_13();
    __break(1u);
  }
  else
  {
    v4 = v2;
    v5 = sub_1A569BC04(1, (uint64_t)before.array._rawValue);
    v7 = v6;
    v9 = v8;
    v11 = v10;
    OUTLINED_FUNCTION_27();
    sub_1A5699EA0(v5, v7, v9, v11);
    v13.array._rawValue = v12;
    if (v4 >= 2)
    {
      OUTLINED_FUNCTION_27();
      rawValue = v13.array._rawValue;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A569D6EC();
        rawValue = v17;
      }
      v15 = rawValue[2];
      if (v15 >= rawValue[3] >> 1)
      {
        sub_1A569D6EC();
        rawValue = v18;
      }
      rawValue[2] = v15 + 1;
      rawValue[v15 + 4] = v4 - 1;
      OUTLINED_FUNCTION_17();
      sub_1A569BD5C();
      OUTLINED_FUNCTION_78_3();
    }
    return v13;
  }
  return result;
}

uint64_t sub_1A569BC04(uint64_t result, uint64_t a2)
{
  unint64_t v3;
  char v4;
  unint64_t v5;

  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v3 = *(_QWORD *)(a2 + 16);
  result = sub_1A569EA78(0, (v3 - result) & ~((uint64_t)(v3 - result) >> 63), v3);
  if ((v4 & 1) != 0)
    v5 = v3;
  else
    v5 = result;
  if ((v5 & 0x8000000000000000) != 0)
    goto LABEL_9;
  if (v3 >= v5)
    return a2;
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_1A569BC74(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v1 = result;
    result = sub_1A594B5A4();
    if (!__OFSUB__(result, v1))
    {
      sub_1A594B5C8();
      v2 = sub_1A594B718();
      OUTLINED_FUNCTION_17();
      return v2;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A569BD5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53[184];
  _BYTE v54[184];

  OUTLINED_FUNCTION_79_3();
  v1 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v2 = sub_1A569B8A4(v1, (uint64_t)&v30);
  OUTLINED_FUNCTION_61_3(v2, v3, v4, v5, v6, v7, v8, v9, v28, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39,
    v40,
    v41,
    v42,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52,
    v53[0]);
  OUTLINED_FUNCTION_27_5((uint64_t)v53);
  if (!v10)
  {
    while (1)
    {
      v11 = sub_1A55DC3E0(v53, v54);
      BodyStructure.subpartCount.getter((uint64_t)v11);
      if (!v12)
        break;
      BodyStructure.subpartCount.getter(v12);
      v14 = v13;
      OUTLINED_FUNCTION_69();
      v15 = v0;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A569D6EC();
        v15 = v25;
      }
      v16 = *(_QWORD *)(v15 + 16);
      if (v16 >= *(_QWORD *)(v15 + 24) >> 1)
      {
        sub_1A569D6EC();
        v15 = v26;
      }
      *(_QWORD *)(v15 + 16) = v16 + 1;
      *(_QWORD *)(v15 + 8 * v16 + 32) = v14;
      OUTLINED_FUNCTION_76_3(&v30);
      OUTLINED_FUNCTION_55();
      v17 = sub_1A569B8A4(v15, (uint64_t)&v30);
      OUTLINED_FUNCTION_61_3(v17, v18, v19, v20, v21, v22, v23, v24, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39,
        v40,
        v41,
        v42,
        v43,
        v44,
        v45,
        v46,
        v47,
        v48,
        v49,
        v50,
        v51,
        v52,
        v53[0]);
      v0 = v15;
      if (sub_1A55DC41C((uint64_t)v53) == 1)
        return v15;
    }
    sub_1A569D010(&v30, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5524178);
  }
  return v0;
}

NIOIMAPCore2::SectionSpecifier::Part __swiftcall BodyStructure.index(after:)(NIOIMAPCore2::SectionSpecifier::Part after)
{
  _QWORD *v1;
  uint64_t v2;
  char v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  size_t v16;
  uint64_t v17;
  uint64_t v18;
  NIOIMAPCore2::SectionSpecifier::Part result;
  uint64_t v20;
  unint64_t v21;
  _QWORD v22[23];
  _QWORD v23[23];
  _BYTE v24[184];
  _QWORD *v25;
  _BYTE v26[184];
  uint64_t v27;
  unint64_t v28;

  OUTLINED_FUNCTION_16_4();
  OUTLINED_FUNCTION_79_3();
  sub_1A569B8A4(v2, (uint64_t)v22);
  sub_1A569D06C((uint64_t)v22, (uint64_t)v26);
  OUTLINED_FUNCTION_27_5((uint64_t)v26);
  if (v3)
  {
LABEL_23:
    v27 = 0;
    v28 = 0xE000000000000000;
    OUTLINED_FUNCTION_41_5();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_24_6();
    v27 = v20;
    v28 = v21;
    v25 = v1;
    OUTLINED_FUNCTION_69();
    sub_1A594B4A8();
    sub_1A594B5F8();
    OUTLINED_FUNCTION_17();
    result.array._rawValue = (void *)OUTLINED_FUNCTION_15_13();
    __break(1u);
    return result;
  }
  v4 = sub_1A55DC3E0(v26, &v27);
  BodyStructure.subpartCount.getter((uint64_t)v4);
  if (v5)
  {
    SectionSpecifier.Part.appending(_:)(1);
    goto LABEL_20;
  }
  v6 = v1[2];
  if (v6)
  {
    OUTLINED_FUNCTION_69();
    sub_1A594CD68();
    v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v8 = v6 - 1;
      v9 = v1[v6 + 3];
      swift_unknownObjectRetain_n();
      v10 = swift_dynamicCastClass();
      if (!v10)
      {
        OUTLINED_FUNCTION_55();
        v10 = (uint64_t)v7;
      }
      v11 = *(_QWORD *)(v10 + 16);
      swift_release();
      if (v11 == v8)
        break;
      swift_bridgeObjectRelease();
      if (v6 == 1)
        goto LABEL_11;
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B2D0);
      v12 = (_QWORD *)OUTLINED_FUNCTION_4_18();
      v16 = _swift_stdlib_malloc_size_0(v12);
      v12[2] = v8;
      v12[3] = 2 * ((uint64_t)(v16 - 32) / 8);
      memcpy(v12 + 4, v1 + 4, 8 * v8);
LABEL_12:
      OUTLINED_FUNCTION_55();
      sub_1A569B8A4((uint64_t)v12, (uint64_t)v23);
      sub_1A569D06C((uint64_t)v23, (uint64_t)v24);
      OUTLINED_FUNCTION_27_5((uint64_t)v24);
      if (v3)
      {
        __break(1u);
        goto LABEL_23;
      }
      v13 = sub_1A55DC3E0(v24, &v25);
      BodyStructure.subpartCount.getter((uint64_t)v13);
      v15 = v14;
      sub_1A569D010(v23, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5524178);
      if (v9 < v15)
      {
        SectionSpecifier.Part.appending(_:)(v9 + 1);
        sub_1A569D010(v22, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5524178);
        swift_release();
        goto LABEL_21;
      }
      v6 = v12[2];
      v1 = v12;
      if (!v6)
      {
        swift_release();
        goto LABEL_19;
      }
    }
    v12 = (_QWORD *)swift_dynamicCastClass();
    if (v12)
      goto LABEL_12;
    OUTLINED_FUNCTION_55();
LABEL_11:
    v12 = v7;
    goto LABEL_12;
  }
LABEL_19:
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B2D0);
  v17 = OUTLINED_FUNCTION_20_1();
  *(_OWORD *)(v17 + 16) = xmmword_1A59ABD10;
  BodyStructure.subpartCount.getter(v17);
  *(_QWORD *)(v17 + 32) = v18 + 1;
LABEL_20:
  sub_1A569D010(v22, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5524178);
LABEL_21:
  OUTLINED_FUNCTION_1_3();
  return result;
}

_QWORD *sub_1A569C150(_QWORD *rawValue, uint64_t a2)
{
  uint64_t v2;
  NIOIMAPCore2::SectionSpecifier::Part v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  size_t v26;
  _QWORD *result;

  v2 = a2;
  if (a2 < 0)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v5 = 0;
    v6 = (void *)MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v7 = rawValue[2];
      if (!v7)
      {
        sub_1A594C720();
        swift_bridgeObjectRelease();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A594B4A8();
        sub_1A594B5F8();
        swift_bridgeObjectRelease();
        result = (_QWORD *)sub_1A594C9C0();
        __break(1u);
        return result;
      }
      v8 = v7 - 1;
      v9 = rawValue[v7 + 3];
      v10 = v9 - 1;
      if (v9 > 1)
      {
        v11 = sub_1A569BC04(1, (uint64_t)rawValue);
        v13 = v12;
        v15 = v14;
        v17 = v16;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A5699EA0(v11, v13, v15, v17);
        v19 = v18;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v20 = v19;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1A569D6EC();
          v20 = v24;
        }
        v21 = *(_QWORD *)(v20 + 16);
        if (v21 >= *(_QWORD *)(v20 + 24) >> 1)
        {
          sub_1A569D6EC();
          v20 = v25;
        }
        *(_QWORD *)(v20 + 16) = v21 + 1;
        *(_QWORD *)(v20 + 8 * v21 + 32) = v10;
        swift_bridgeObjectRelease();
        v4.array._rawValue = (void *)sub_1A569BD5C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
      sub_1A594CD68();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_unknownObjectRetain_n();
      v22 = swift_dynamicCastClass();
      if (!v22)
      {
        swift_bridgeObjectRelease();
        v22 = (uint64_t)v6;
      }
      v23 = *(_QWORD *)(v22 + 16);
      swift_release();
      if (v23 != v8)
        break;
      v4.array._rawValue = (void *)swift_dynamicCastClass();
      swift_bridgeObjectRelease_n();
      if (!v4.array._rawValue)
      {
        swift_bridgeObjectRelease();
LABEL_18:
        v4.array._rawValue = v6;
      }
LABEL_19:
      --v5;
      rawValue = v4.array._rawValue;
      if (v5 <= v2)
        return v4.array._rawValue;
    }
    swift_bridgeObjectRelease();
    if (v7 >= 2)
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B2D0);
      v4.array._rawValue = (void *)swift_allocObject();
      v26 = _swift_stdlib_malloc_size_0(v4.array._rawValue);
      *((_QWORD *)v4.array._rawValue + 2) = v8;
      *((_QWORD *)v4.array._rawValue + 3) = 2 * ((uint64_t)(v26 - 32) / 8);
      memcpy((char *)v4.array._rawValue + 32, rawValue + 4, 8 * v8);
      swift_bridgeObjectRelease_n();
      goto LABEL_19;
    }
    swift_bridgeObjectRelease_n();
    goto LABEL_18;
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (!v2)
    return rawValue;
  do
  {
    v4.array._rawValue = BodyStructure.index(after:)((NIOIMAPCore2::SectionSpecifier::Part)rawValue).array._rawValue;
    swift_bridgeObjectRelease();
    rawValue = v4.array._rawValue;
    --v2;
  }
  while (v2);
  return v4.array._rawValue;
}

void sub_1A569C46C(uint64_t *a1@<X8>)
{
  sub_1A569C990(a1);
}

void sub_1A569C478(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  sub_1A569C9D8(a1, a2, a3, (uint64_t)BodyStructure.index(before:));
}

void sub_1A569C484(uint64_t a1)
{
  _QWORD *v1;

  OUTLINED_FUNCTION_46_4(a1);
  *v1 = MEMORY[0x1E0DEE9D8];
  OUTLINED_FUNCTION_25_5();
}

void sub_1A569C4AC(uint64_t a1)
{
  uint64_t *v1;

  OUTLINED_FUNCTION_46_4(a1);
  *v1 = BodyStructure.endIndex.getter();
  OUTLINED_FUNCTION_25_5();
}

void (*sub_1A569C4D4(_QWORD *a1, uint64_t *a2))(uint64_t a1)
{
  const void *v2;
  char *v5;
  void *v6;
  void *v7;
  uint64_t v8;

  v5 = (char *)malloc(0x221uLL);
  *a1 = v5;
  v6 = v5 + 184;
  v7 = v5 + 368;
  v8 = *a2;
  sub_1A55DC3E0(v2, v5);
  BodyStructure.subscript.getter(v8, v6);
  sub_1A55DC3E0(v6, v7);
  return sub_1A569C554;
}

void sub_1A569C554(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  sub_1A569D010((_QWORD *)(*(_QWORD *)a1 + 184), (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A55241F0);
  free(v1);
}

uint64_t sub_1A569C584@<X0>(uint64_t *a1@<X0>, _BOOL8 *a2@<X8>)
{
  const void *v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[184];

  v4 = *a1;
  v5 = a1[1];
  sub_1A55DC3E0(v2, v7);
  return sub_1A569C5D4(v4, v5, a2);
}

uint64_t sub_1A569C5D4@<X0>(_BOOL8 a1@<X0>, uint64_t a2@<X1>, _BOOL8 *a3@<X8>)
{
  _QWORD *v3;
  uint64_t inited;
  uint64_t v8;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B2D0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A59ABD10;
  BodyStructure.subpartCount.getter(inited);
  *(_QWORD *)(inited + 32) = v8 + 1;
  result = static SectionSpecifier.Part.< infix(_:_:)(inited, MEMORY[0x1E0DEE9D8]);
  if ((result & 1) != 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  result = static SectionSpecifier.Part.< infix(_:_:)(a1, MEMORY[0x1E0DEE9D8]);
  if ((result & 1) != 0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  result = static SectionSpecifier.Part.< infix(_:_:)(inited, a2);
  if ((result & 1) == 0)
  {
    swift_setDeallocating();
    sub_1A55DC3E0(v3, a3 + 2);
    *a3 = a1;
    a3[1] = a2;
    sub_1A569D010(v3, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A552370C);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1A569C6BC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  v4 = result;
  if (BYTE4(a4))
  {
    if (BYTE4(a4) == 1)
      v5 = *(_QWORD *)(a3 + 16);
    else
      v5 = 0;
  }
  else
  {
    v5 = 1;
  }
  if (result < 0)
  {
    __break(1u);
  }
  else if (v5 >= a2)
  {
    sub_1A54E4334(a3, a4, SBYTE4(a4));
    return v4;
  }
  __break(1u);
  return result;
}

void sub_1A569C744(_QWORD *a1@<X8>)
{
  const void *v1;
  _BYTE v3[184];

  sub_1A55DC3E0(v1, v3);
  sub_1A569A1C8(a1);
}

uint64_t sub_1A569C780()
{
  const void *v0;
  _BYTE v2[184];

  sub_1A55DC3E0(v0, v2);
  return 0;
}

void sub_1A569C7A8()
{
  const void *v0;
  _BYTE v1[184];

  sub_1A55DC3E0(v0, v1);
  sub_1A5668C34();
}

void sub_1A569C7DC(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

void sub_1A569C7E8(_QWORD **a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  const void *v3;
  _QWORD *v6;
  _BYTE v7[184];

  v6 = *a1;
  sub_1A55DC3E0(v3, v7);
  *a3 = sub_1A569C150(v6, a2);
  OUTLINED_FUNCTION_29_6();
}

void sub_1A569C830(_QWORD **a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  const void *v3;
  _QWORD *v6;
  _BYTE v7[184];

  v6 = *a1;
  sub_1A55DC3E0(v3, v7);
  *a3 = sub_1A569A000(v6, a2);
  OUTLINED_FUNCTION_37_6();
}

void sub_1A569C884()
{
  const void *v0;
  _BYTE v1[184];

  sub_1A55DC3E0(v0, v1);
  sub_1A566AC20();
  OUTLINED_FUNCTION_29_6();
}

void sub_1A569C8C4(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  sub_1A569C8DC(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1A569A128);
}

void sub_1A569C8D0(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  sub_1A569C8DC(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1A5671224);
}

void sub_1A569C8DC(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  const void *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[184];

  v7 = *a1;
  v8 = *a2;
  v9 = a2[1];
  sub_1A55DC3E0(v5, v10);
  a5(v7, v8, v9);
  OUTLINED_FUNCTION_37_6();
}

BOOL sub_1A569C928(uint64_t *a1, uint64_t *a2)
{
  const void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[184];

  v3 = *a1;
  v4 = a1[1];
  v5 = *a2;
  v6 = a2[1];
  sub_1A55DC3E0(v2, v8);
  return sub_1A569A17C(v3, v4, v5, v6);
}

void sub_1A569C984(uint64_t *a1@<X8>)
{
  sub_1A569C990(a1);
}

void sub_1A569C990(uint64_t *a1@<X8>)
{
  const void *v1;
  _BYTE v3[184];

  sub_1A55DC3E0(v1, v3);
  *a1 = OUTLINED_FUNCTION_58_2();
  OUTLINED_FUNCTION_29_6();
}

void sub_1A569C9CC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  sub_1A569C9D8(a1, a2, a3, (uint64_t)BodyStructure.index(after:));
}

void sub_1A569C9D8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _BYTE v6[184];

  OUTLINED_FUNCTION_17_11((uint64_t)a1, v6);
  OUTLINED_FUNCTION_58_2();
  OUTLINED_FUNCTION_78_3();
  *a1 = a4;
  OUTLINED_FUNCTION_29_6();
}

void *sub_1A569CA14@<X0>(void *a1@<X8>)
{
  const void *v1;
  _BYTE v4[184];
  _QWORD __src[25];

  sub_1A55DC3E0(v1, v4);
  sub_1A55DC3E0(v4, __src);
  __src[23] = MEMORY[0x1E0DEE9D8];
  return memcpy(a1, __src, 0xC0uLL);
}

uint64_t sub_1A569CA6C()
{
  const void *v0;
  void *v1;
  _BYTE v3[184];

  v1 = sub_1A55DC3E0(v0, v3);
  return BodyStructure.underestimatedCount.getter((uint64_t)v1);
}

uint64_t sub_1A569CAA0()
{
  const void *v0;
  _BYTE v2[184];

  sub_1A55DC3E0(v0, v2);
  return sub_1A56BC1A8();
}

void sub_1A569CAD4()
{
  const void *v0;
  _BYTE v1[184];

  sub_1A55DC3E0(v0, v1);
  sub_1A569A1C4();
  OUTLINED_FUNCTION_29_6();
}

void sub_1A569CB1C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  unint64_t v4;
  _QWORD *v5;
  int v7;
  const void *v8;
  unint64_t v9;
  unint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  _BYTE v13[184];
  _BYTE v14[184];
  _QWORD v15[41];
  _BYTE v16[184];
  _QWORD v17[23];
  _BYTE v18[184];
  _BYTE v19[184];
  _BYTE v20[184];
  _QWORD __dst[22];
  uint64_t v22;
  _QWORD v23[23];
  unint64_t v24;
  _BYTE v25[184];

  v4 = a1 - 1;
  if (a1 < 1)
    goto LABEL_9;
  v5 = v2;
  sub_1A55DC3E0(v2, v20);
  v7 = sub_1A55DC430((uint64_t)v20);
  nullsub_1(v20);
  if (v7 != 1)
  {
    memcpy(__dst, v8, sizeof(__dst));
    sub_1A569D030(__dst, &v22);
    sub_1A569D030(&v22, &v24);
    v10 = v24;
    if (v24 >> 62 == 1)
    {
      v24 &= 0x3FFFFFFFFFFFFFFFuLL;
      memcpy(v15, (const void *)((v10 & 0x3FFFFFFFFFFFFFFFLL) + 16), sizeof(v15));
      sub_1A55DC3E0(&v15[17], v23);
      sub_1A569D010(v5, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A552370C);
      sub_1A5692040((uint64_t)v15);
      sub_1A569CB1C(v17, a1);
      sub_1A569D06C((uint64_t)v17, (uint64_t)v16);
      sub_1A569D06C((uint64_t)v17, (uint64_t)v18);
      if (sub_1A55DC41C((uint64_t)v18) == 1)
      {
        sub_1A569D010(&v15[17], (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A552370C);
        sub_1A56921B8((uint64_t)v15);
        sub_1A569D010(v5, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A55241F0);
        v11 = &v15[17];
      }
      else
      {
        sub_1A55DC3E0(v18, v19);
        sub_1A56921B8((uint64_t)v15);
        sub_1A569D010(v5, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A55241F0);
        sub_1A569D06C((uint64_t)v16, (uint64_t)v25);
        v11 = v25;
      }
      sub_1A55DC3E0(v11, v14);
      sub_1A55DC3E0(v14, v13);
      nullsub_1(v13);
      v12 = v13;
      goto LABEL_11;
    }
    goto LABEL_9;
  }
  v9 = *(_QWORD *)(*(_QWORD *)v8 + 16);
  if (v9 < a1)
  {
LABEL_9:
    sub_1A569F978(v15);
    goto LABEL_10;
  }
  if (v4 < v9)
  {
    sub_1A55DC3E0((const void *)(*(_QWORD *)v8 + 184 * v4 + 32), v23);
    sub_1A55DC3E0(v23, v15);
    nullsub_1(v15);
    sub_1A569D010(v23, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A552370C);
LABEL_10:
    v12 = v15;
LABEL_11:
    sub_1A569D06C((uint64_t)v12, (uint64_t)v25);
    sub_1A569D06C((uint64_t)v25, a2);
    return;
  }
  __break(1u);
}

void BodyStructure.enumerateParts(_:)(void (*a1)(uint64_t, _BYTE *), uint64_t a2)
{
  _BYTE *v2;
  uint64_t v3;
  _BYTE *v4;

  v4 = v2;
  a1(MEMORY[0x1E0DEE9D8], v4);
  if (!v3)
    sub_1A569CD98(MEMORY[0x1E0DEE9D8], a1, a2);
}

void sub_1A569CD98(uint64_t a1, void (*a2)(uint64_t, _BYTE *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[23];
  _BYTE v18[184];
  _BYTE v19[192];
  uint64_t v20;

  v5 = v3;
  BodyStructure.subpartCount.getter(a1);
  if (v9)
  {
    BodyStructure.subpartCount.getter(v9);
    v16 = v10;
    if (v10)
    {
      v11 = 0;
      while (1)
      {
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v12 = a1;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1A569D6EC();
          v12 = v14;
        }
        v13 = *(_QWORD *)(v12 + 16);
        if (v13 >= *(_QWORD *)(v12 + 24) >> 1)
        {
          sub_1A569D6EC();
          v12 = v15;
        }
        *(_QWORD *)(v12 + 16) = v13 + 1;
        *(_QWORD *)(v12 + 8 * v13 + 32) = v11 + 1;
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B2D0);
        v4 = swift_allocObject();
        *(_OWORD *)(v4 + 16) = xmmword_1A59ABD10;
        *(_QWORD *)(v4 + 32) = v11 + 1;
        sub_1A569B8A4(v4, (uint64_t)v17);
        sub_1A569D06C((uint64_t)v17, (uint64_t)v18);
        if (sub_1A55DC41C((uint64_t)v18) == 1)
          break;
        sub_1A55DC3E0(v18, v19);
        swift_bridgeObjectRelease();
        a2(v12, v19);
        if (v5)
        {
          sub_1A569D010(v17, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5524178);
          swift_bridgeObjectRelease();
          return;
        }
        sub_1A569CD98(v12, a2, a3);
        v5 = 0;
        sub_1A569D010(v17, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A5524178);
        swift_bridgeObjectRelease();
        if (v16 == ++v11)
          return;
      }
    }
    else
    {
      __break(1u);
    }
    sub_1A594C720();
    swift_bridgeObjectRelease();
    v20 = v4;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594B4A8();
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
    sub_1A594C9C0();
    __break(1u);
  }
}

void sub_1A569D010(_QWORD *a1, uint64_t (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  OUTLINED_FUNCTION_10_12(a1, a2);
  OUTLINED_FUNCTION_53_5();
}

_QWORD *sub_1A569D030(_QWORD *a1, _QWORD *a2)
{
  __swift_memcpy8_8_1(a2, a1);
  return a2;
}

uint64_t sub_1A569D06C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A569D0B4(uint64_t result, _BYTE *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v4 = result;
  v5 = *v3;
  v6 = *((unsigned int *)v3 + 2);
  v7 = *(uint64_t *)((char *)v3 + 12);
  v8 = *((unsigned __int16 *)v3 + 10);
  v9 = *((unsigned __int8 *)v3 + 22);
  v11 = v3[3];
  v10 = v3[4];
  if (!a2)
    goto LABEL_5;
  v12 = a3;
  if (!a3)
  {
LABEL_6:
    v13 = v11;
LABEL_7:
    *(_QWORD *)v4 = v5;
    *(_DWORD *)(v4 + 8) = v6;
    *(_QWORD *)(v4 + 12) = v7;
    *(_WORD *)(v4 + 20) = v8;
    *(_BYTE *)(v4 + 22) = v9;
    *(_QWORD *)(v4 + 24) = v11;
    *(_QWORD *)(v4 + 32) = v10;
    *(_QWORD *)(v4 + 40) = v13;
    return v12;
  }
  if (a3 < 0)
    goto LABEL_25;
  if (v10 == v11)
  {
LABEL_5:
    v12 = 0;
    goto LABEL_6;
  }
  v20 = v7;
  v14 = (v7 - v6);
  if (v7 >= v6)
  {
    v15 = a2;
    result = swift_beginAccess();
    v7 = v20;
    if (v10 <= v11)
    {
LABEL_20:
      __break(1u);
LABEL_21:
      v13 = v10;
      v12 = v10 - v11;
      goto LABEL_7;
    }
    v16 = *(_QWORD *)(v5 + 24) + (v9 | (v8 << 8)) + v6;
    v17 = v12 - 1;
    v13 = v11 + 1;
    while (1)
    {
      v18 = v13 - 1 - v6;
      if (__OFSUB__(v13 - 1, v6))
        break;
      if (v18 < 0)
        goto LABEL_23;
      if (v18 >= v14)
        goto LABEL_24;
      *v15 = *(_BYTE *)(v16 + v18);
      if (!v17)
        goto LABEL_7;
      if (v10 == v13)
        goto LABEL_21;
      ++v15;
      --v17;
      v19 = v13 >= v11 && v13 < v10;
      ++v13;
      if (!v19)
        goto LABEL_20;
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1A569D204()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *rawValue;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  char v113;
  _BYTE v114[184];
  _BYTE v115[184];
  _BYTE v116[184];
  _BYTE v117[192];

  OUTLINED_FUNCTION_16_4();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  sub_1A55DC3E0(v0, v114);
  sub_1A55DC3E0(v114, v117);
  if (!v4)
  {
    v19 = sub_1A55DC3E0(v117, &v89);
    v112 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    OUTLINED_FUNCTION_31_6(v19, v20, v21, v22, v23, v24, v25, v26, v66, v69, v72, v75, v78.n128_i64[0], v78.n128_i64[1], v83, v86, v89);
LABEL_16:
    OUTLINED_FUNCTION_1_3();
    return;
  }
  if (!v2)
  {
    rawValue = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_15:
    v58 = sub_1A55DC3E0(v117, &v89);
    v112 = rawValue;
    OUTLINED_FUNCTION_31_6(v58, v59, v60, v61, v62, v63, v64, v65, v66, v69, v72, v75, v78.n128_i64[0], v78.n128_i64[1], v83, v86, v89);
    goto LABEL_16;
  }
  if ((v2 & 0x8000000000000000) == 0)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B2D0);
    v7 = (_QWORD *)OUTLINED_FUNCTION_20_1();
    v78 = (__n128)xmmword_1A59ABD10;
    OUTLINED_FUNCTION_54_2((uint64_t)v7, (__n128)xmmword_1A59ABD10);
    v7[4] = v8 + 1;
    rawValue = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v10 = _s12NIOIMAPCore216SectionSpecifierV4PartV23__derived_struct_equalsySbAE_AEtFZ_0(MEMORY[0x1E0DEE9D8], v7);
    swift_setDeallocating();
    v11 = OUTLINED_FUNCTION_68_2();
    if ((v10 & 1) == 0)
    {
      v27 = OUTLINED_FUNCTION_62_3(v11, v12, v13, v14, v15, v16, v17, v18, v66, v69, v72, v6, 1, 2, v83, v86, v89, v90, v91,
              v92,
              v93,
              v94,
              v95,
              v96,
              v97,
              v98,
              v99,
              v100,
              v101,
              v102,
              v103,
              v104,
              v105,
              v106,
              v107,
              v108,
              v109,
              v110,
              v111,
              (uint64_t)v112,
              v113);
      OUTLINED_FUNCTION_57_4(v27, v28, v29, v30, v31, v32, v33, v34, v67, v70, v73, v76, v79, v81, v84, v87, v89, v90, v91,
        v92,
        v93,
        v94,
        v95,
        v96,
        v97,
        v98,
        v99,
        v100,
        v101,
        v102,
        v103,
        v104,
        v105,
        v106,
        v107,
        v108,
        v109,
        v110,
        v111,
        (uint64_t)v112,
        v113);
      OUTLINED_FUNCTION_27_5((uint64_t)v115);
      if (v35)
      {
LABEL_14:
        OUTLINED_FUNCTION_41_5();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_24_6();
        v89 = v57;
        v90 = v56;
        v86 = (uint64_t)rawValue;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A594B4A8();
        sub_1A594B5F8();
        OUTLINED_FUNCTION_17();
        LODWORD(v69) = 0;
        v66 = 73;
        OUTLINED_FUNCTION_15_13();
        __break(1u);
      }
      else
      {
        v36 = 1;
        while (1)
        {
          sub_1A55DC3E0(v115, v116);
          sub_1A569D010(v0, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A552370C);
          rawValue = BodyStructure.index(after:)((NIOIMAPCore2::SectionSpecifier::Part)rawValue).array._rawValue;
          swift_bridgeObjectRelease();
          sub_1A569D010(v0, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A55241F0);
          sub_1A55DC3E0(v116, v4);
          if (v2 == v36)
            break;
          v37 = (_QWORD *)OUTLINED_FUNCTION_20_1();
          OUTLINED_FUNCTION_54_2((uint64_t)v37, v78);
          v37[4] = v38 + 1;
          v39 = _s12NIOIMAPCore216SectionSpecifierV4PartV23__derived_struct_equalsySbAE_AEtFZ_0(rawValue, v37);
          swift_setDeallocating();
          v40 = OUTLINED_FUNCTION_68_2();
          if ((v39 & 1) != 0)
            break;
          ++v36;
          v4 += 184;
          v48 = OUTLINED_FUNCTION_62_3(v40, v41, v42, v43, v44, v45, v46, v47, v66, v69, v72, v75, v78.n128_i64[0], v78.n128_i64[1], v83, v86, v89, v90, v91,
                  v92,
                  v93,
                  v94,
                  v95,
                  v96,
                  v97,
                  v98,
                  v99,
                  v100,
                  v101,
                  v102,
                  v103,
                  v104,
                  v105,
                  v106,
                  v107,
                  v108,
                  v109,
                  v110,
                  v111,
                  (uint64_t)v112,
                  v113);
          OUTLINED_FUNCTION_57_4(v48, v49, v50, v51, v52, v53, v54, v55, v68, v71, v74, v77, v80, v82, v85, v88, v89, v90, v91,
            v92,
            v93,
            v94,
            v95,
            v96,
            v97,
            v98,
            v99,
            v100,
            v101,
            v102,
            v103,
            v104,
            v105,
            v106,
            v107,
            v108,
            v109,
            v110,
            v111,
            (uint64_t)v112,
            v113);
          OUTLINED_FUNCTION_27_5((uint64_t)v115);
          if (v35)
            goto LABEL_14;
        }
      }
    }
    goto LABEL_15;
  }
  __break(1u);
}

uint64_t sub_1A569D488(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v8;
  unint64_t v9;
  _BYTE *v10;
  BOOL v11;

  if (a5 < 0)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (HIDWORD(a5))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (!a2)
  {
    a3 = 0;
    *(_QWORD *)result = a4;
    *(_QWORD *)(result + 8) = a5;
    *(_QWORD *)(result + 16) = a6;
    *(_DWORD *)(result + 24) = a5;
    *(_DWORD *)(result + 28) = 0x1FFFFFF;
    return a3;
  }
  if (!a3)
  {
    v11 = 1;
    LODWORD(v8) = a5;
LABEL_23:
    *(_QWORD *)result = a4;
    *(_QWORD *)(result + 8) = a5;
    *(_QWORD *)(result + 16) = a6;
    *(_DWORD *)(result + 24) = v8;
    *(_WORD *)(result + 28) = -1;
    *(_BYTE *)(result + 30) = -1;
LABEL_25:
    *(_BYTE *)(result + 31) = v11;
    return a3;
  }
  if (a3 < 0)
    goto LABEL_31;
  if ((a6 & 0x8000000000000000) == 0)
  {
    if (HIDWORD(a6))
      goto LABEL_33;
    v6 = 0;
    if ((_DWORD)a5 == (_DWORD)a6 && a6 >= a5)
    {
      v11 = 1;
LABEL_24:
      *(_QWORD *)result = a4;
      *(_QWORD *)(result + 8) = a5;
      *(_QWORD *)(result + 16) = a6;
      *(_DWORD *)(result + 24) = a6;
      *(_WORD *)(result + 28) = -1;
      *(_BYTE *)(result + 30) = -1;
      a3 = v6;
      goto LABEL_25;
    }
    LODWORD(v8) = a5;
    while (1)
    {
      v9 = *(_QWORD *)(a4 + 16);
      if (v9 <= v8)
        break;
      v10 = (_BYTE *)(a4 + 32 + 2 * v8);
      if ((v10[1] & 1) != 0)
        goto LABEL_34;
      v8 = (v9 - 1) & (v8 + 1);
      if (HIDWORD(v8))
        goto LABEL_28;
      v11 = v8 >= a5;
      *(_BYTE *)(a2 + v6) = *v10;
      if (a3 - 1 == v6)
        goto LABEL_23;
      ++v6;
      if ((_DWORD)v8 == (_DWORD)a6 && a6 < a5 != v8 >= a5)
        goto LABEL_24;
    }
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1A569D5C8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;

  if (!a2)
  {
    v6 = 0;
    goto LABEL_13;
  }
  if (!a3)
    goto LABEL_11;
  if (a3 < 0)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v6 = a4;
  if (!a4)
  {
LABEL_13:
    *(_QWORD *)result = a4;
    *(_QWORD *)(result + 8) = a5;
    *(_BYTE *)(result + 16) = a6 & 1;
    *(_QWORD *)(result + 24) = v6;
    return v6;
  }
  if (a4 >= 1)
  {
    *(_QWORD *)a2 = a5;
    *(_BYTE *)(a2 + 8) = a6 & 1;
    if (a3 != 1)
    {
      v7 = (_BYTE *)(a2 + 24);
      v8 = 1;
      while (a3 != v8)
      {
        if (a4 == v8)
        {
          v6 = a4;
          goto LABEL_13;
        }
        ++v8;
        *((_QWORD *)v7 - 1) = a5;
        *v7 = a6 & 1;
        v7 += 16;
        if (a3 == v8)
          goto LABEL_11;
      }
      __break(1u);
      goto LABEL_16;
    }
LABEL_11:
    v6 = a3;
    goto LABEL_13;
  }
LABEL_17:
  __break(1u);
  return result;
}

char *sub_1A569D660(char *result, uint64_t a2, char *a3)
{
  if (a3 != result || &result[8 * a2] <= a3)
    return (char *)OUTLINED_FUNCTION_2_26(a3, result);
  return result;
}

char *sub_1A569D680(char *__src, size_t __len, char *__dst)
{
  if (__dst != __src || &__src[__len] <= __dst)
    return (char *)memmove(__dst, __src, __len);
  return __src;
}

char *sub_1A569D6A8(char *result, uint64_t a2, char *a3)
{
  if (a3 != result || &result[16 * a2] <= a3)
    return (char *)OUTLINED_FUNCTION_2_26(a3, result);
  return result;
}

char *sub_1A569D6C8(char *result, uint64_t a2, char *a3)
{
  if (a3 != result || &result[24 * a2] <= a3)
    return (char *)OUTLINED_FUNCTION_2_26(a3, result);
  return result;
}

void sub_1A569D6EC()
{
  _QWORD *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  _QWORD *v7;
  size_t v8;
  char *v9;
  char *v10;

  OUTLINED_FUNCTION_11_10();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_1_20();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_7_14();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_0_30();
    }
  }
  OUTLINED_FUNCTION_16_10();
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B2D0);
    v7 = (_QWORD *)OUTLINED_FUNCTION_4_18();
    v8 = _swift_stdlib_malloc_size_0(v7);
    OUTLINED_FUNCTION_23_10(v8 - 32);
  }
  else
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v9 = (char *)OUTLINED_FUNCTION_34_5();
  if ((v1 & 1) != 0)
  {
    if (v7 != v0 || &v10[8 * v3] <= v9)
      OUTLINED_FUNCTION_42_3(v9, v10);
    v0[2] = 0;
  }
  else
  {
    OUTLINED_FUNCTION_67_2(v9, v10);
  }
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_8_1();
}

void sub_1A569D798()
{
  sub_1A569DDC0();
}

void sub_1A569D7A4()
{
  _QWORD *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  _QWORD *v7;
  size_t v8;
  char *v9;
  char *v10;

  OUTLINED_FUNCTION_11_10();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_1_20();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_7_14();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_0_30();
    }
  }
  OUTLINED_FUNCTION_16_10();
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79B2F8);
    v7 = (_QWORD *)OUTLINED_FUNCTION_4_18();
    v8 = _swift_stdlib_malloc_size_0(v7);
    OUTLINED_FUNCTION_23_10(v8 - 32);
  }
  else
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v9 = (char *)OUTLINED_FUNCTION_34_5();
  if ((v1 & 1) != 0)
  {
    if (v7 != v0 || &v10[8 * v3] <= v9)
      OUTLINED_FUNCTION_42_3(v9, v10);
    v0[2] = 0;
  }
  else
  {
    OUTLINED_FUNCTION_67_2(v9, v10);
  }
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_8_1();
}

void sub_1A569D850()
{
  sub_1A569DDC0();
}

void sub_1A569D85C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  _QWORD *v7;
  char *v8;
  char *v9;

  OUTLINED_FUNCTION_11_10();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_1_20();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_7_14();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_0_30();
    }
  }
  OUTLINED_FUNCTION_9_16();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AE58);
    v7 = (_QWORD *)OUTLINED_FUNCTION_4_18();
    OUTLINED_FUNCTION_12_12(v7);
  }
  else
  {
    v3 = MEMORY[0x1E0DEE9D8];
  }
  v8 = (char *)OUTLINED_FUNCTION_26_2();
  if ((v1 & 1) != 0)
  {
    if (v3 != v0 || &v9[32 * v2] <= v8)
      memmove(v8, v9, 32 * v2);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    OUTLINED_FUNCTION_22_11();
  }
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_8_1();
}

void sub_1A569D904()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  size_t v7;
  uint64_t v8;
  _QWORD *v9;

  OUTLINED_FUNCTION_11_10();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_1_20();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_7_14();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_0_30();
    }
  }
  OUTLINED_FUNCTION_9_16();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9590);
    v9 = (_QWORD *)OUTLINED_FUNCTION_4_18();
    v7 = OUTLINED_FUNCTION_12_12(v9);
  }
  else
  {
    v3 = MEMORY[0x1E0DEE9D8];
  }
  if ((v1 & 1) != 0)
  {
    if (v3 != v0 || v0 + 32 + 32 * v2 <= (unint64_t)(v3 + 32))
      OUTLINED_FUNCTION_39_6(v7, v8, 32 * v2);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9598);
    OUTLINED_FUNCTION_22_11();
  }
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_17_1();
}

void sub_1A569D9C4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  const void *v7;
  uint64_t v8;
  char *v9;
  char *v10;

  OUTLINED_FUNCTION_11_10();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_1_20();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_7_14();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_0_30();
    }
  }
  OUTLINED_FUNCTION_16_10();
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A95A0);
    v7 = (const void *)OUTLINED_FUNCTION_4_18();
    OUTLINED_FUNCTION_51_5(v7);
    OUTLINED_FUNCTION_23_10(v8);
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9D8];
  }
  v9 = (char *)OUTLINED_FUNCTION_34_5();
  if ((v1 & 1) != 0)
  {
    if (v2 != v0 || &v10[2 * v3] <= v9)
      memmove(v9, v10, 2 * v3);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    memcpy(v9, v10, 2 * v3);
  }
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_8_1();
}

void sub_1A569DA70()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  size_t v7;
  uint64_t v8;
  _QWORD *v9;

  OUTLINED_FUNCTION_11_10();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_1_20();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_7_14();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_0_30();
    }
  }
  OUTLINED_FUNCTION_9_16();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7962E8);
    v9 = (_QWORD *)OUTLINED_FUNCTION_4_18();
    v7 = OUTLINED_FUNCTION_12_12(v9);
  }
  else
  {
    v3 = MEMORY[0x1E0DEE9D8];
  }
  if ((v1 & 1) != 0)
  {
    if (v3 != v0 || v0 + 32 + 32 * v2 <= (unint64_t)(v3 + 32))
      OUTLINED_FUNCTION_39_6(v7, v8, 32 * v2);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79A670);
    OUTLINED_FUNCTION_22_11();
  }
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_17_1();
}

void sub_1A569DB30()
{
  sub_1A569E1D0();
}

void sub_1A569DB3C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  const void *v7;
  uint64_t v8;
  char *v9;
  char *v10;

  OUTLINED_FUNCTION_11_10();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_1_20();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_7_14();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_0_30();
    }
  }
  OUTLINED_FUNCTION_16_10();
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AF70);
    v7 = (const void *)OUTLINED_FUNCTION_20_1();
    OUTLINED_FUNCTION_51_5(v7);
    *(_QWORD *)(v2 + 16) = v3;
    *(_QWORD *)(v2 + 24) = 2 * (v8 / 184);
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9D8];
  }
  v9 = (char *)OUTLINED_FUNCTION_34_5();
  if ((v1 & 1) != 0)
  {
    if (v2 != v0 || &v10[184 * v3] <= v9)
      memmove(v9, v10, 184 * v3);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_17_1();
}

void sub_1A569DC04()
{
  sub_1A569E82C();
}

void sub_1A569DC18()
{
  _QWORD *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  _QWORD *v7;
  size_t v8;
  char *v9;
  char *v10;

  OUTLINED_FUNCTION_11_10();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_1_20();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_7_14();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_0_30();
    }
  }
  OUTLINED_FUNCTION_9_16();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796290);
    v7 = (_QWORD *)OUTLINED_FUNCTION_4_18();
    v8 = _swift_stdlib_malloc_size_0(v7);
    OUTLINED_FUNCTION_13_10(v8 - 32);
  }
  else
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v9 = (char *)OUTLINED_FUNCTION_26_2();
  if ((v1 & 1) != 0)
  {
    if (v7 != v0 || &v10[16 * v2] <= v9)
      memmove(v9, v10, 16 * v2);
    v0[2] = 0;
  }
  else
  {
    OUTLINED_FUNCTION_22_11();
  }
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_8_1();
}

void sub_1A569DCD0()
{
  char *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  size_t v10;

  OUTLINED_FUNCTION_11_10();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_1_20();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_7_14();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_0_30();
    }
  }
  OUTLINED_FUNCTION_9_16();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9528);
    v9 = (char *)OUTLINED_FUNCTION_4_18();
    v10 = _swift_stdlib_malloc_size_0(v9);
    OUTLINED_FUNCTION_13_10(v10 - 32);
  }
  else
  {
    v9 = (char *)MEMORY[0x1E0DEE9D8];
  }
  if ((v1 & 1) != 0)
  {
    if (v9 != v0 || &v0[8 * v2 + 32] <= v9 + 32)
      OUTLINED_FUNCTION_39_6(v7, v8, 8 * v2);
    *((_QWORD *)v0 + 2) = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9530);
    OUTLINED_FUNCTION_22_11();
  }
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_17_1();
}

void sub_1A569DDA0()
{
  sub_1A569E02C();
}

void sub_1A569DDB4()
{
  sub_1A569DDC0();
}

void sub_1A569DDC0()
{
  _QWORD *v0;
  char v1;
  size_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  _QWORD *v12;
  size_t v13;
  char *v14;
  char *v15;

  OUTLINED_FUNCTION_11_10();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_1_20();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_7_14();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_0_30();
    }
  }
  OUTLINED_FUNCTION_9_16();
  if (v3)
  {
    OUTLINED_FUNCTION_18_8(v7, v8, v9, v10, v11);
    v12 = (_QWORD *)OUTLINED_FUNCTION_20_1();
    v13 = _swift_stdlib_malloc_size_0(v12);
    v12[2] = v2;
    v12[3] = 2 * v13 - 64;
  }
  else
  {
    v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v14 = (char *)OUTLINED_FUNCTION_26_2();
  if ((v1 & 1) != 0)
  {
    if (v12 != v0 || &v15[v2] <= v14)
      memmove(v14, v15, v2);
    v0[2] = 0;
  }
  else
  {
    memcpy(v14, v15, v2);
  }
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_8_1();
}

void sub_1A569DE6C()
{
  sub_1A569E590();
}

void sub_1A569DE78()
{
  sub_1A569E698();
}

void sub_1A569DE8C()
{
  _QWORD *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  _QWORD *v7;
  size_t v8;
  char *v9;
  char *v10;

  OUTLINED_FUNCTION_11_10();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_1_20();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_7_14();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_0_30();
    }
  }
  OUTLINED_FUNCTION_9_16();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AE98);
    v7 = (_QWORD *)OUTLINED_FUNCTION_20_1();
    v8 = _swift_stdlib_malloc_size_0(v7);
    OUTLINED_FUNCTION_13_10(v8 - 32);
  }
  else
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v9 = (char *)OUTLINED_FUNCTION_26_2();
  if ((v1 & 1) != 0)
  {
    if (v7 != v0 || &v10[64 * v2] <= v9)
      memmove(v9, v10, v2 << 6);
    v0[2] = 0;
  }
  else
  {
    OUTLINED_FUNCTION_22_11();
  }
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_8_1();
}

void sub_1A569DF48()
{
  sub_1A569E76C();
}

void sub_1A569DF5C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  _QWORD *v7;
  char *v8;
  char *v9;

  OUTLINED_FUNCTION_11_10();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_1_20();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_7_14();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_0_30();
    }
  }
  OUTLINED_FUNCTION_9_16();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9538);
    v7 = (_QWORD *)OUTLINED_FUNCTION_20_1();
    OUTLINED_FUNCTION_65_3(v7);
  }
  else
  {
    v3 = MEMORY[0x1E0DEE9D8];
  }
  v8 = (char *)OUTLINED_FUNCTION_26_2();
  if ((v1 & 1) != 0)
  {
    if (v3 != v0 || &v9[56 * v2] <= v8)
      memmove(v8, v9, 56 * v2);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    OUTLINED_FUNCTION_22_11();
  }
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_17_1();
}

void sub_1A569E018()
{
  sub_1A569E02C();
}

void sub_1A569E02C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  const void *v12;
  uint64_t v13;
  char *v14;
  char *v15;

  OUTLINED_FUNCTION_14_7();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_1_20();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_7_14();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_0_30();
    }
  }
  OUTLINED_FUNCTION_21_12();
  if (v3)
  {
    OUTLINED_FUNCTION_18_8(v7, v8, v9, v10, v11);
    v12 = (const void *)OUTLINED_FUNCTION_4_18();
    OUTLINED_FUNCTION_48_4(v12);
    OUTLINED_FUNCTION_28_6(v13);
  }
  else
  {
    v3 = MEMORY[0x1E0DEE9D8];
  }
  v14 = (char *)OUTLINED_FUNCTION_38_5();
  if ((v1 & 1) != 0)
  {
    if (v3 != v0 || &v15[8 * v2] <= v14)
      OUTLINED_FUNCTION_42_3(v14, v15);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    OUTLINED_FUNCTION_19_10();
  }
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_17_1();
}

void sub_1A569E0CC()
{
  sub_1A569E41C();
}

void sub_1A569E0E0()
{
  sub_1A569E8F4();
}

void sub_1A569E0F4()
{
  sub_1A569E11C();
}

void sub_1A569E108()
{
  sub_1A569E11C();
}

void sub_1A569E11C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  const void *v12;
  uint64_t v13;
  char *v14;
  char *v15;

  OUTLINED_FUNCTION_14_7();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_1_20();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_7_14();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_0_30();
    }
  }
  OUTLINED_FUNCTION_21_12();
  if (v3)
  {
    OUTLINED_FUNCTION_18_8(v7, v8, v9, v10, v11);
    v12 = (const void *)OUTLINED_FUNCTION_20_1();
    OUTLINED_FUNCTION_48_4(v12);
    OUTLINED_FUNCTION_28_6(v13);
  }
  else
  {
    v3 = MEMORY[0x1E0DEE9D8];
  }
  v14 = (char *)OUTLINED_FUNCTION_38_5();
  if ((v1 & 1) != 0)
  {
    if (v3 != v0 || &v15[64 * v2] <= v14)
      memmove(v14, v15, v2 << 6);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    OUTLINED_FUNCTION_19_10();
  }
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_17_1();
}

void sub_1A569E1C4()
{
  sub_1A569E1D0();
}

void sub_1A569E1D0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  const void *v12;
  uint64_t v13;
  char *v14;
  char *v15;

  OUTLINED_FUNCTION_11_10();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_1_20();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_7_14();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_0_30();
    }
  }
  OUTLINED_FUNCTION_16_10();
  if (v2)
  {
    OUTLINED_FUNCTION_18_8(v7, v8, v9, v10, v11);
    v12 = (const void *)OUTLINED_FUNCTION_4_18();
    OUTLINED_FUNCTION_51_5(v12);
    OUTLINED_FUNCTION_23_10(v13);
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9D8];
  }
  v14 = (char *)OUTLINED_FUNCTION_34_5();
  if ((v1 & 1) != 0)
  {
    if (v2 != v0 || &v15[4 * v3] <= v14)
      memmove(v14, v15, 4 * v3);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    memcpy(v14, v15, 4 * v3);
  }
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_8_1();
}

void sub_1A569E274()
{
  sub_1A569E698();
}

void sub_1A569E288()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  const void *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  size_t v11;

  OUTLINED_FUNCTION_11_10();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_1_20();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_7_14();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_0_30();
    }
  }
  OUTLINED_FUNCTION_16_10();
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AE68);
    v7 = (const void *)OUTLINED_FUNCTION_4_18();
    OUTLINED_FUNCTION_51_5(v7);
    OUTLINED_FUNCTION_23_10(v8);
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9D8];
  }
  v9 = (char *)OUTLINED_FUNCTION_34_5();
  v11 = 16 * v3;
  if ((v1 & 1) != 0)
  {
    if (v2 != v0 || &v10[v11] <= v9)
      memmove(v9, v10, v11);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    memcpy(v9, v10, v11);
  }
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_8_1();
}

void sub_1A569E330()
{
  sub_1A569E76C();
}

void sub_1A569E344()
{
  sub_1A569E590();
}

void sub_1A569E350()
{
  _QWORD *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  _QWORD *v7;
  size_t v8;
  char *v9;
  char *v10;

  OUTLINED_FUNCTION_11_10();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_1_20();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_7_14();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_0_30();
    }
  }
  OUTLINED_FUNCTION_9_16();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE79AE78);
    v7 = (_QWORD *)OUTLINED_FUNCTION_4_18();
    v8 = _swift_stdlib_malloc_size_0(v7);
    OUTLINED_FUNCTION_13_10(v8 - 32);
  }
  else
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v9 = (char *)OUTLINED_FUNCTION_26_2();
  if ((v1 & 1) != 0)
  {
    if (v7 != v0 || &v10[16 * v2] <= v9)
      memmove(v9, v10, 16 * v2);
    v0[2] = 0;
  }
  else
  {
    OUTLINED_FUNCTION_22_11();
  }
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_8_1();
}

void sub_1A569E408()
{
  sub_1A569E41C();
}

void sub_1A569E41C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  char *v13;
  char *v14;

  OUTLINED_FUNCTION_14_7();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_1_20();
    if (v8 != v9)
    {
      OUTLINED_FUNCTION_7_14();
      if (v8)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_0_30();
    }
  }
  else
  {
    v7 = v3;
  }
  v10 = *(_QWORD *)(v0 + 16);
  if (v7 <= v10)
    v11 = *(_QWORD *)(v0 + 16);
  else
    v11 = v7;
  if (v11)
  {
    OUTLINED_FUNCTION_18_8(v2, v3, v4, v5, v6);
    v12 = (_QWORD *)OUTLINED_FUNCTION_20_1();
    OUTLINED_FUNCTION_66_2(v12);
  }
  else
  {
    v11 = MEMORY[0x1E0DEE9D8];
  }
  v13 = (char *)OUTLINED_FUNCTION_26_2();
  if ((v1 & 1) != 0)
  {
    if (v11 != v0 || &v14[40 * v10] <= v13)
      OUTLINED_FUNCTION_47_3(v13, v14, 5 * v10);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    OUTLINED_FUNCTION_81_2();
  }
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_17_1();
}

void sub_1A569E4C8()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  _QWORD *v7;
  char *v8;
  char *v9;

  OUTLINED_FUNCTION_11_10();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_1_20();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_7_14();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_0_30();
    }
  }
  OUTLINED_FUNCTION_9_16();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9500);
    v7 = (_QWORD *)OUTLINED_FUNCTION_4_18();
    OUTLINED_FUNCTION_12_12(v7);
  }
  else
  {
    v3 = MEMORY[0x1E0DEE9D8];
  }
  v8 = (char *)OUTLINED_FUNCTION_26_2();
  if ((v1 & 1) != 0)
  {
    if (v3 != v0 || &v9[32 * v2] <= v8)
      memmove(v8, v9, 32 * v2);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    OUTLINED_FUNCTION_22_11();
  }
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_8_1();
}

void sub_1A569E570()
{
  sub_1A569E8F4();
}

void sub_1A569E584()
{
  sub_1A569E590();
}

void sub_1A569E590()
{
  _QWORD *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  _QWORD *v12;
  size_t v13;
  char *v14;
  char *v15;

  OUTLINED_FUNCTION_11_10();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_1_20();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_7_14();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_0_30();
    }
  }
  OUTLINED_FUNCTION_16_10();
  if (v2)
  {
    OUTLINED_FUNCTION_18_8(v7, v8, v9, v10, v11);
    v12 = (_QWORD *)OUTLINED_FUNCTION_4_18();
    v13 = _swift_stdlib_malloc_size_0(v12);
    OUTLINED_FUNCTION_23_10(v13 - 32);
  }
  else
  {
    v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v14 = (char *)OUTLINED_FUNCTION_34_5();
  if ((v1 & 1) != 0)
  {
    if (v12 != v0 || &v15[8 * v3] <= v14)
      OUTLINED_FUNCTION_42_3(v14, v15);
    v0[2] = 0;
  }
  else
  {
    OUTLINED_FUNCTION_67_2(v14, v15);
  }
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_8_1();
}

void sub_1A569E634()
{
  sub_1A569E8F4();
}

void sub_1A569E648()
{
  sub_1A569E698();
}

void sub_1A569E65C()
{
  sub_1A569E8F4();
}

void sub_1A569E670()
{
  sub_1A569E8F4();
}

void sub_1A569E684()
{
  sub_1A569E698();
}

void sub_1A569E698()
{
  _QWORD *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  _QWORD *v12;
  size_t v13;
  char *v14;
  char *v15;

  OUTLINED_FUNCTION_14_7();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_1_20();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_7_14();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_0_30();
    }
  }
  OUTLINED_FUNCTION_21_12();
  if (v3)
  {
    OUTLINED_FUNCTION_18_8(v7, v8, v9, v10, v11);
    v12 = (_QWORD *)OUTLINED_FUNCTION_4_18();
    v13 = _swift_stdlib_malloc_size_0(v12);
    OUTLINED_FUNCTION_28_6(v13 - 32);
  }
  else
  {
    v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v14 = (char *)OUTLINED_FUNCTION_38_5();
  if ((v1 & 1) != 0)
  {
    if (v12 != v0 || &v15[16 * v2] <= v14)
      memmove(v14, v15, 16 * v2);
    v0[2] = 0;
  }
  else
  {
    OUTLINED_FUNCTION_19_10();
  }
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_17_1();
}

void sub_1A569E744()
{
  sub_1A569E8F4();
}

void sub_1A569E758()
{
  sub_1A569E76C();
}

void sub_1A569E76C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  char *v13;
  char *v14;

  OUTLINED_FUNCTION_14_7();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_1_20();
    if (v8 != v9)
    {
      OUTLINED_FUNCTION_7_14();
      if (v8)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_0_30();
    }
  }
  else
  {
    v7 = v3;
  }
  v10 = *(_QWORD *)(v0 + 16);
  if (v7 <= v10)
    v11 = *(_QWORD *)(v0 + 16);
  else
    v11 = v7;
  if (v11)
  {
    OUTLINED_FUNCTION_18_8(v2, v3, v4, v5, v6);
    v12 = (_QWORD *)OUTLINED_FUNCTION_20_1();
    OUTLINED_FUNCTION_66_2(v12);
  }
  else
  {
    v11 = MEMORY[0x1E0DEE9D8];
  }
  v13 = (char *)OUTLINED_FUNCTION_26_2();
  if ((v1 & 1) != 0)
  {
    if (v11 != v0 || &v14[24 * v10] <= v13)
      OUTLINED_FUNCTION_47_3(v13, v14, 3 * v10);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    OUTLINED_FUNCTION_81_2();
  }
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_17_1();
}

void sub_1A569E818()
{
  sub_1A569E82C();
}

void sub_1A569E82C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  const void *v12;
  uint64_t v13;
  char *v14;
  char *v15;

  OUTLINED_FUNCTION_14_7();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_1_20();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_7_14();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_0_30();
    }
  }
  OUTLINED_FUNCTION_21_12();
  if (v3)
  {
    OUTLINED_FUNCTION_18_8(v7, v8, v9, v10, v11);
    v12 = (const void *)OUTLINED_FUNCTION_20_1();
    OUTLINED_FUNCTION_48_4(v12);
    *(_QWORD *)(v3 + 16) = v2;
    *(_QWORD *)(v3 + 24) = 2 * (v13 / 24);
  }
  else
  {
    v3 = MEMORY[0x1E0DEE9D8];
  }
  v14 = (char *)OUTLINED_FUNCTION_38_5();
  if ((v1 & 1) != 0)
  {
    if (v3 != v0 || &v15[24 * v2] <= v14)
      OUTLINED_FUNCTION_47_3(v14, v15, 3 * v2);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    OUTLINED_FUNCTION_19_10();
  }
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_17_1();
}

void sub_1A569E8E0()
{
  sub_1A569E8F4();
}

void sub_1A569E8F4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  const void *v12;
  uint64_t v13;
  char *v14;
  char *v15;

  OUTLINED_FUNCTION_14_7();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_1_20();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_7_14();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_0_30();
    }
  }
  OUTLINED_FUNCTION_21_12();
  if (v3)
  {
    OUTLINED_FUNCTION_18_8(v7, v8, v9, v10, v11);
    v12 = (const void *)OUTLINED_FUNCTION_4_18();
    OUTLINED_FUNCTION_48_4(v12);
    OUTLINED_FUNCTION_28_6(v13);
  }
  else
  {
    v3 = MEMORY[0x1E0DEE9D8];
  }
  v14 = (char *)OUTLINED_FUNCTION_38_5();
  if ((v1 & 1) != 0)
  {
    if (v3 != v0 || &v15[32 * v2] <= v14)
      memmove(v14, v15, 32 * v2);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    OUTLINED_FUNCTION_19_10();
  }
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_17_1();
}

void sub_1A569E998()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  _QWORD *v7;
  char *v8;
  char *v9;

  OUTLINED_FUNCTION_11_10();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_1_20();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_7_14();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_0_30();
    }
  }
  OUTLINED_FUNCTION_9_16();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7A9548);
    v7 = (_QWORD *)OUTLINED_FUNCTION_20_1();
    OUTLINED_FUNCTION_65_3(v7);
  }
  else
  {
    v3 = MEMORY[0x1E0DEE9D8];
  }
  v8 = (char *)OUTLINED_FUNCTION_26_2();
  if ((v1 & 1) != 0)
  {
    if (v3 != v0 || &v9[24 * v2] <= v8)
      OUTLINED_FUNCTION_47_3(v8, v9, 3 * v2);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    OUTLINED_FUNCTION_22_11();
  }
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_17_1();
}

void sub_1A569EA50()
{
  sub_1A569E698();
}

void sub_1A569EA64()
{
  sub_1A569E698();
}

uint64_t sub_1A569EA78(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  BOOL v5;
  BOOL v6;

  v3 = a3 - result;
  if (__OFSUB__(a3, result))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if (a2 < 1)
  {
    if (v3 <= 0)
    {
      v6 = __OFSUB__(v3, a2);
      v4 = v3 == a2;
      v5 = v3 - a2 < 0;
    }
    else
    {
      v6 = 0;
      v4 = 1;
      v5 = 0;
    }
    if (!(v5 ^ v6 | v4))
      return OUTLINED_FUNCTION_0_7();
  }
  else if ((v3 & 0x8000000000000000) == 0 && v3 < (unint64_t)a2)
  {
    return OUTLINED_FUNCTION_0_7();
  }
  v6 = __OFADD__(result, a2);
  result += a2;
  if (v6)
    goto LABEL_14;
  return result;
}

unint64_t sub_1A569EAC0()
{
  unint64_t result;

  result = qword_1EE7A9468;
  if (!qword_1EE7A9468)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for MessageAttribute.BodyStructure, &type metadata for MessageAttribute.BodyStructure);
    atomic_store(result, (unint64_t *)&qword_1EE7A9468);
  }
  return result;
}

unint64_t sub_1A569EB00()
{
  unint64_t result;

  result = qword_1EE7A9470;
  if (!qword_1EE7A9470)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for BodyStructure, &type metadata for BodyStructure);
    atomic_store(result, (unint64_t *)&qword_1EE7A9470);
  }
  return result;
}

unint64_t sub_1A569EB40()
{
  unint64_t result;

  result = qword_1EE7A9478;
  if (!qword_1EE7A9478)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for BodyStructure, &type metadata for BodyStructure);
    atomic_store(result, (unint64_t *)&qword_1EE7A9478);
  }
  return result;
}

uint64_t sub_1A569EB7C()
{
  return sub_1A569ECC8(&qword_1EE7A9480, &qword_1EE7A9488, (uint64_t (*)(void))sub_1A569EBB0, MEMORY[0x1E0DEA220]);
}

unint64_t sub_1A569EBB0()
{
  unint64_t result;

  result = qword_1EE7A9490;
  if (!qword_1EE7A9490)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for BodyStructure, &type metadata for BodyStructure);
    atomic_store(result, (unint64_t *)&qword_1EE7A9490);
  }
  return result;
}

uint64_t sub_1A569EBEC()
{
  return sub_1A569ECC8(&qword_1EE7A9498, &qword_1EE7A94A0, (uint64_t (*)(void))sub_1A569EBB0, MEMORY[0x1E0DEDE40]);
}

unint64_t sub_1A569EC24()
{
  unint64_t result;

  result = qword_1EE7A94A8;
  if (!qword_1EE7A94A8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for BodyStructure, &type metadata for BodyStructure);
    atomic_store(result, (unint64_t *)&qword_1EE7A94A8);
  }
  return result;
}

uint64_t sub_1A569EC60()
{
  return sub_1A569ECC8(&qword_1EE7A94B0, &qword_1EE7A9488, (uint64_t (*)(void))sub_1A569EB40, MEMORY[0x1E0DEA210]);
}

uint64_t sub_1A569EC94()
{
  return sub_1A569ECC8(&qword_1EE7A94B8, &qword_1EE7A94A0, (uint64_t (*)(void))sub_1A569EB40, MEMORY[0x1E0DEDE28]);
}

uint64_t sub_1A569ECC8(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract_0(a2);
    v9 = a3();
    result = MEMORY[0x1A85B1874](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A569ED30()
{
  unint64_t result;

  result = qword_1EE7A94C0;
  if (!qword_1EE7A94C0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for BodyStructure, &type metadata for BodyStructure);
    atomic_store(result, (unint64_t *)&qword_1EE7A94C0);
  }
  return result;
}

unint64_t sub_1A569ED70()
{
  unint64_t result;

  result = qword_1EE796A90;
  if (!qword_1EE796A90)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for SectionSpecifier.Part, &type metadata for SectionSpecifier.Part);
    atomic_store(result, (unint64_t *)&qword_1EE796A90);
  }
  return result;
}

uint64_t sub_1A569EDAC()
{
  return sub_1A54E2E30(&qword_1EE7A94C8, &qword_1EE7A9488, MEMORY[0x1E0DEA228]);
}

uint64_t sub_1A569EDD8()
{
  return sub_1A54E2E30(&qword_1EE7A94D0, &qword_1EE7A94A0, MEMORY[0x1E0DEDE48]);
}

uint64_t sub_1A569EE04()
{
  return sub_1A54E2E30(&qword_1EE7A94D8, &qword_1EE7A94E0, MEMORY[0x1E0DEC908]);
}

_QWORD *_s13BodyStructureOwcp(_QWORD *__dst, uint64_t *a2)
{
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;

  v3 = *((unsigned __int8 *)a2 + 176);
  if (v3 > 1)
  {
    memcpy(__dst, a2, 0xB1uLL);
  }
  else
  {
    v27 = v3 != 0;
    v4 = a2[4];
    v5 = a2[5];
    v6 = a2[6];
    v7 = a2[7];
    v14 = a2[9];
    v15 = a2[10];
    v16 = a2[11];
    v17 = a2[12];
    v18 = a2[13];
    v19 = a2[14];
    v20 = a2[15];
    v21 = a2[16];
    v22 = a2[17];
    v23 = a2[18];
    v24 = a2[19];
    v25 = a2[20];
    v26 = a2[21];
    v8 = a2[8];
    v9 = *a2;
    v10 = a2[1];
    v11 = a2[2];
    v12 = a2[3];
    sub_1A552370C(*a2, v10, v11, v12, v4, v5, v6, v7, v8, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23,
      v24,
      v25,
      v26,
      v3 != 0);
    *__dst = v9;
    __dst[1] = v10;
    __dst[2] = v11;
    __dst[3] = v12;
    __dst[4] = v4;
    __dst[5] = v5;
    __dst[6] = v6;
    __dst[7] = v7;
    __dst[8] = v8;
    __dst[9] = v14;
    __dst[10] = v15;
    __dst[11] = v16;
    __dst[12] = v17;
    __dst[13] = v18;
    __dst[14] = v19;
    __dst[15] = v20;
    __dst[16] = v21;
    __dst[17] = v22;
    __dst[18] = v23;
    __dst[19] = v24;
    __dst[20] = v25;
    __dst[21] = v26;
    *((_BYTE *)__dst + 176) = v27;
  }
  return __dst;
}

uint64_t *_s13BodyStructureOwca(uint64_t *__dst, uint64_t *__src)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  BOOL v68;
  BOOL v69;

  v4 = *((unsigned __int8 *)__dst + 176);
  v5 = *((unsigned __int8 *)__src + 176);
  if (v4 > 1)
  {
    if (v5 <= 1)
    {
      v69 = v5 != 0;
      v32 = __src[3];
      v33 = __src[4];
      v34 = __src[5];
      v35 = __src[6];
      v43 = __src[9];
      v45 = __src[10];
      v47 = __src[11];
      v49 = __src[12];
      v51 = __src[13];
      v53 = __src[14];
      v55 = __src[15];
      v57 = __src[16];
      v59 = __src[17];
      v61 = __src[18];
      v63 = __src[19];
      v65 = __src[20];
      v67 = __src[21];
      v36 = __src[8];
      v37 = *__src;
      v38 = __src[1];
      v39 = __src[2];
      v40 = __src[7];
      sub_1A552370C(*__src, v38, v39, v32, v33, v34, v35, v40, v36, v43, v45, v47, v49, v51, v53, v55, v57, v59, v61,
        v63,
        v65,
        v67,
        v5 != 0);
      *__dst = v37;
      __dst[1] = v38;
      __dst[2] = v39;
      __dst[3] = v32;
      __dst[4] = v33;
      __dst[5] = v34;
      __dst[6] = v35;
      __dst[7] = v40;
      __dst[8] = v36;
      __dst[9] = v43;
      __dst[10] = v45;
      __dst[11] = v47;
      __dst[12] = v49;
      __dst[13] = v51;
      __dst[14] = v53;
      __dst[15] = v55;
      __dst[16] = v57;
      __dst[17] = v59;
      __dst[18] = v61;
      __dst[19] = v63;
      __dst[20] = v65;
      __dst[21] = v67;
      *((_BYTE *)__dst + 176) = v69;
      return __dst;
    }
LABEL_7:
    memcpy(__dst, __src, 0xB1uLL);
    return __dst;
  }
  if (v5 > 1)
  {
    sub_1A55241F0(*__dst, __dst[1], __dst[2], __dst[3], __dst[4], __dst[5], __dst[6], __dst[7], __dst[8], __dst[9], __dst[10], __dst[11], __dst[12], __dst[13], __dst[14], __dst[15], __dst[16], __dst[17], __dst[18],
      __dst[19],
      __dst[20],
      __dst[21],
      v4 & 1);
    goto LABEL_7;
  }
  v68 = v5 != 0;
  v6 = *__src;
  v7 = __src[1];
  v8 = __src[2];
  v9 = __src[3];
  v10 = __src[4];
  v11 = __src[5];
  v12 = __src[6];
  v13 = __src[7];
  v42 = __src[9];
  v44 = __src[10];
  v46 = __src[11];
  v48 = __src[12];
  v50 = __src[13];
  v52 = __src[14];
  v54 = __src[15];
  v56 = __src[16];
  v58 = __src[17];
  v60 = __src[18];
  v62 = __src[19];
  v64 = __src[20];
  v66 = __src[21];
  v14 = __src[8];
  sub_1A552370C(*__src, v7, v8, v9, v10, v11, v12, v13, v14, v42, v44, v46, v48, v50, v52, v54, v56, v58, v60,
    v62,
    v64,
    v66,
    v5 != 0);
  v15 = *__dst;
  v16 = __dst[1];
  *__dst = v6;
  __dst[1] = v7;
  v17 = __dst[2];
  v18 = __dst[3];
  __dst[2] = v8;
  __dst[3] = v9;
  v19 = __dst[4];
  v20 = __dst[5];
  __dst[4] = v10;
  __dst[5] = v11;
  v21 = __dst[6];
  v22 = __dst[7];
  __dst[6] = v12;
  __dst[7] = v13;
  v23 = *((_OWORD *)__dst + 4);
  v24 = *((_OWORD *)__dst + 5);
  __dst[8] = v14;
  __dst[9] = v42;
  __dst[10] = v44;
  __dst[11] = v46;
  v25 = *((_OWORD *)__dst + 6);
  v26 = *((_OWORD *)__dst + 7);
  __dst[12] = v48;
  __dst[13] = v50;
  __dst[14] = v52;
  __dst[15] = v54;
  v27 = *((_OWORD *)__dst + 8);
  v28 = *((_OWORD *)__dst + 9);
  __dst[16] = v56;
  __dst[17] = v58;
  __dst[18] = v60;
  __dst[19] = v62;
  v29 = __dst[20];
  v30 = __dst[21];
  __dst[20] = v64;
  __dst[21] = v66;
  v31 = *((_BYTE *)__dst + 176);
  *((_BYTE *)__dst + 176) = v68;
  sub_1A55241F0(v15, v16, v17, v18, v19, v20, v21, v22, v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25, *((uint64_t *)&v25 + 1), v26, *((uint64_t *)&v26 + 1), v27, *((uint64_t *)&v27 + 1), v28,
    *((uint64_t *)&v28 + 1),
    v29,
    v30,
    v31);
  return __dst;
}

void *__swift_memcpy177_8_0(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xB1uLL);
}

uint64_t *_s13BodyStructureOwta(uint64_t *__dst, unsigned __int8 *__src)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;

  v4 = *((unsigned __int8 *)__dst + 176);
  if (v4 > 1)
    goto LABEL_5;
  v5 = __src[176];
  if (v5 > 1)
  {
    sub_1A55241F0(*__dst, __dst[1], __dst[2], __dst[3], __dst[4], __dst[5], __dst[6], __dst[7], __dst[8], __dst[9], __dst[10], __dst[11], __dst[12], __dst[13], __dst[14], __dst[15], __dst[16], __dst[17], __dst[18],
      __dst[19],
      __dst[20],
      __dst[21],
      v4 & 1);
LABEL_5:
    memcpy(__dst, __src, 0xB1uLL);
    return __dst;
  }
  v6 = *__dst;
  v7 = __dst[1];
  v8 = __dst[2];
  v9 = __dst[3];
  v10 = __dst[4];
  v11 = __dst[5];
  v12 = __dst[6];
  v13 = __dst[7];
  v14 = *((_OWORD *)__dst + 4);
  v15 = *((_OWORD *)__dst + 5);
  v16 = *((_OWORD *)__dst + 6);
  v17 = *((_OWORD *)__dst + 7);
  v18 = *((_OWORD *)__dst + 8);
  v19 = *((_OWORD *)__dst + 9);
  v20 = __dst[20];
  v21 = __dst[21];
  v22 = *((_OWORD *)__src + 1);
  *(_OWORD *)__dst = *(_OWORD *)__src;
  *((_OWORD *)__dst + 1) = v22;
  v23 = *((_OWORD *)__src + 3);
  *((_OWORD *)__dst + 2) = *((_OWORD *)__src + 2);
  *((_OWORD *)__dst + 3) = v23;
  v24 = *((_OWORD *)__src + 5);
  *((_OWORD *)__dst + 4) = *((_OWORD *)__src + 4);
  *((_OWORD *)__dst + 5) = v24;
  v25 = *((_OWORD *)__src + 7);
  *((_OWORD *)__dst + 6) = *((_OWORD *)__src + 6);
  *((_OWORD *)__dst + 7) = v25;
  v26 = *((_OWORD *)__src + 9);
  *((_OWORD *)__dst + 8) = *((_OWORD *)__src + 8);
  *((_OWORD *)__dst + 9) = v26;
  *((_OWORD *)__dst + 10) = *((_OWORD *)__src + 10);
  *((_BYTE *)__dst + 176) = v5 != 0;
  sub_1A55241F0(v6, v7, v8, v9, v10, v11, v12, v13, v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17, *((uint64_t *)&v17 + 1), v18, *((uint64_t *)&v18 + 1), v19,
    *((uint64_t *)&v19 + 1),
    v20,
    v21,
    v4 & 1);
  return __dst;
}

uint64_t _s13BodyStructureOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  unsigned int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 177))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 176);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  if (v4 + 1 >= 2)
    return v4;
  else
    return 0;
}

void _s13BodyStructureOwst(unsigned int *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v5;

  if (a2 > 0xFD)
  {
    v5 = a2 - 254;
    bzero(a1, 0xB1uLL);
    *a1 = v5;
    if (a3 >= 0xFE)
      *((_BYTE *)a1 + 177) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *((_BYTE *)a1 + 177) = 0;
    if (a2)
      *((_BYTE *)a1 + 176) = ~(_BYTE)a2;
  }
}

double sub_1A569F46C(uint64_t a1, unsigned int a2)
{
  double result;

  if (a2 > 0xFE)
  {
    *(_QWORD *)(a1 + 168) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 152) = 0u;
    *(_OWORD *)(a1 + 136) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_BYTE *)(a1 + 176) = 0;
    *(_QWORD *)a1 = a2 - 255;
  }
  else if (a2)
  {
    *(_BYTE *)(a1 + 176) = -(char)a2;
  }
  return result;
}

void type metadata accessor for MessageAttribute.BodyStructure()
{
  OUTLINED_FUNCTION_3_1();
}

void destroy for BodyStructure(uint64_t a1)
{
  sub_1A55241F0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_BYTE *)(a1 + 176));
}

uint64_t initializeWithCopy for BodyStructure(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 56);
  v13 = *(_QWORD *)(a2 + 72);
  v14 = *(_QWORD *)(a2 + 80);
  v15 = *(_QWORD *)(a2 + 88);
  v16 = *(_QWORD *)(a2 + 96);
  v17 = *(_QWORD *)(a2 + 104);
  v18 = *(_QWORD *)(a2 + 112);
  v19 = *(_QWORD *)(a2 + 120);
  v20 = *(_QWORD *)(a2 + 128);
  v21 = *(_QWORD *)(a2 + 136);
  v22 = *(_QWORD *)(a2 + 144);
  v23 = *(_QWORD *)(a2 + 152);
  v24 = *(_QWORD *)(a2 + 160);
  v25 = *(_QWORD *)(a2 + 168);
  v26 = *(_BYTE *)(a2 + 176);
  v7 = *(_QWORD *)(a2 + 64);
  v8 = *(_QWORD *)a2;
  v9 = *(_QWORD *)(a2 + 8);
  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_QWORD *)(a2 + 24);
  sub_1A552370C(*(_QWORD *)a2, v9, v10, v11, v3, v4, v5, v6, v7, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22,
    v23,
    v24,
    v25,
    v26);
  *(_QWORD *)a1 = v8;
  *(_QWORD *)(a1 + 8) = v9;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v11;
  *(_QWORD *)(a1 + 32) = v3;
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v14;
  *(_QWORD *)(a1 + 88) = v15;
  *(_QWORD *)(a1 + 96) = v16;
  *(_QWORD *)(a1 + 104) = v17;
  *(_QWORD *)(a1 + 112) = v18;
  *(_QWORD *)(a1 + 120) = v19;
  *(_QWORD *)(a1 + 128) = v20;
  *(_QWORD *)(a1 + 136) = v21;
  *(_QWORD *)(a1 + 144) = v22;
  *(_QWORD *)(a1 + 152) = v23;
  *(_QWORD *)(a1 + 160) = v24;
  *(_QWORD *)(a1 + 168) = v25;
  *(_BYTE *)(a1 + 176) = v26;
  return a1;
}

uint64_t assignWithCopy for BodyStructure(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v30 = *(_QWORD *)(a2 + 72);
  v31 = *(_QWORD *)(a2 + 80);
  v32 = *(_QWORD *)(a2 + 88);
  v33 = *(_QWORD *)(a2 + 96);
  v34 = *(_QWORD *)(a2 + 104);
  v35 = *(_QWORD *)(a2 + 112);
  v36 = *(_QWORD *)(a2 + 120);
  v37 = *(_QWORD *)(a2 + 128);
  v38 = *(_QWORD *)(a2 + 136);
  v39 = *(_QWORD *)(a2 + 144);
  v40 = *(_QWORD *)(a2 + 152);
  v41 = *(_QWORD *)(a2 + 160);
  v42 = *(_QWORD *)(a2 + 168);
  v43 = *(_BYTE *)(a2 + 176);
  sub_1A552370C(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39,
    v40,
    v41,
    v42,
    v43);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v30;
  *(_QWORD *)(a1 + 80) = v31;
  *(_QWORD *)(a1 + 88) = v32;
  v22 = *(_OWORD *)(a1 + 96);
  v23 = *(_OWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 96) = v33;
  *(_QWORD *)(a1 + 104) = v34;
  *(_QWORD *)(a1 + 112) = v35;
  *(_QWORD *)(a1 + 120) = v36;
  v24 = *(_OWORD *)(a1 + 128);
  v25 = *(_OWORD *)(a1 + 144);
  *(_QWORD *)(a1 + 128) = v37;
  *(_QWORD *)(a1 + 136) = v38;
  *(_QWORD *)(a1 + 144) = v39;
  *(_QWORD *)(a1 + 152) = v40;
  v26 = *(_QWORD *)(a1 + 160);
  v27 = *(_QWORD *)(a1 + 168);
  *(_QWORD *)(a1 + 160) = v41;
  *(_QWORD *)(a1 + 168) = v42;
  v28 = *(_BYTE *)(a1 + 176);
  *(_BYTE *)(a1 + 176) = v43;
  sub_1A55241F0(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    *((uint64_t *)&v25 + 1),
    v26,
    v27,
    v28);
  return a1;
}

uint64_t assignWithTake for BodyStructure(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;

  v3 = *(_BYTE *)(a2 + 176);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_OWORD *)(a1 + 64);
  v13 = *(_OWORD *)(a1 + 80);
  v14 = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 112);
  v16 = *(_OWORD *)(a1 + 128);
  v17 = *(_OWORD *)(a1 + 144);
  v18 = *(_QWORD *)(a1 + 160);
  v19 = *(_QWORD *)(a1 + 168);
  v20 = *(_BYTE *)(a1 + 176);
  v21 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v21;
  v22 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v22;
  v23 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v23;
  v24 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v24;
  v25 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v25;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 176) = v3;
  sub_1A55241F0(v4, v6, v5, v7, v8, v9, v10, v11, v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17,
    *((uint64_t *)&v17 + 1),
    v18,
    v19,
    v20);
  return a1;
}

uint64_t getEnumTagSinglePayload for BodyStructure(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 177))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 176);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BodyStructure(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 176) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 177) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 177) = 0;
    if (a2)
      *(_BYTE *)(result + 176) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A569F960(uint64_t result, char a2)
{
  *(_BYTE *)(result + 176) = a2 & 1;
  return result;
}

void type metadata accessor for BodyStructure()
{
  OUTLINED_FUNCTION_3_1();
}

void sub_1A569F978(_BYTE *a1)
{
  bzero(a1, 0xB0uLL);
  a1[176] = -1;
}

void *OUTLINED_FUNCTION_2_26@<X0>(void *__dst@<X2>, const void *a2@<X8>)
{
  size_t v2;

  return memmove(__dst, a2, v2);
}

uint64_t OUTLINED_FUNCTION_4_18()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_10_12(_QWORD *a1, uint64_t (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  return a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
           a1[19],
           a1[20],
           a1[21]);
}

size_t OUTLINED_FUNCTION_12_12(_QWORD *a1)
{
  uint64_t v1;
  size_t result;

  result = _swift_stdlib_malloc_size_0(a1);
  a1[2] = v1;
  a1[3] = 2 * ((uint64_t)(result - 32) / 32);
  return result;
}

void OUTLINED_FUNCTION_13_10(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = 2 * (a1 / v1);
}

uint64_t OUTLINED_FUNCTION_15_13()
{
  return sub_1A594C9C0();
}

void *OUTLINED_FUNCTION_17_11(uint64_t a1, void *a2)
{
  const void *v2;

  return sub_1A55DC3E0(v2, a2);
}

uint64_t OUTLINED_FUNCTION_18_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return __swift_instantiateConcreteTypeFromMangledName_0(a5);
}

uint64_t OUTLINED_FUNCTION_19_10()
{
  return swift_arrayInitWithCopy();
}

uint64_t OUTLINED_FUNCTION_22_11()
{
  return swift_arrayInitWithCopy();
}

void OUTLINED_FUNCTION_23_10(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 16) = v3;
  *(_QWORD *)(v2 + 24) = 2 * (a1 / v1);
}

uint64_t OUTLINED_FUNCTION_26_2()
{
  uint64_t v0;

  return v0 + 32;
}

uint64_t OUTLINED_FUNCTION_27_5(uint64_t a1)
{
  return sub_1A55DC41C(a1);
}

void OUTLINED_FUNCTION_28_6(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = 2 * (a1 / v1);
}

void *OUTLINED_FUNCTION_30_5(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xB0uLL);
}

void *OUTLINED_FUNCTION_31_6(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char __src)
{
  void *v17;

  return memcpy(v17, &__src, 0xC0uLL);
}

void OUTLINED_FUNCTION_33_5(_QWORD *a1)
{
  uint64_t (*v1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);

  sub_1A569D010(a1, v1);
}

uint64_t OUTLINED_FUNCTION_34_5()
{
  uint64_t v0;

  return v0 + 32;
}

void *OUTLINED_FUNCTION_35_6(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x78uLL);
}

uint64_t OUTLINED_FUNCTION_36_5()
{
  return sub_1A594CE88();
}

uint64_t OUTLINED_FUNCTION_38_5()
{
  uint64_t v0;

  return v0 + 32;
}

void *OUTLINED_FUNCTION_39_6(uint64_t a1, uint64_t a2, size_t a3)
{
  void *v3;
  const void *v4;

  return memmove(v3, v4, a3);
}

void *OUTLINED_FUNCTION_40_6(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x50uLL);
}

uint64_t OUTLINED_FUNCTION_41_5()
{
  return sub_1A594C720();
}

void *OUTLINED_FUNCTION_42_3(void *a1, const void *a2)
{
  uint64_t v2;

  return memmove(a1, a2, 8 * v2);
}

void *OUTLINED_FUNCTION_46_4(uint64_t a1, ...)
{
  const void *v1;
  va_list va;

  va_start(va, a1);
  return sub_1A55DC3E0(v1, va);
}

void *OUTLINED_FUNCTION_47_3@<X0>(void *a1@<X0>, const void *a2@<X1>, uint64_t a3@<X8>)
{
  return memmove(a1, a2, 8 * a3);
}

size_t OUTLINED_FUNCTION_48_4(const void *a1)
{
  return _swift_stdlib_malloc_size_0(a1);
}

void OUTLINED_FUNCTION_49_3(uint64_t a1, uint64_t (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  sub_1A569D010(v2, a2);
}

size_t OUTLINED_FUNCTION_51_5(const void *a1)
{
  return _swift_stdlib_malloc_size_0(a1);
}

void OUTLINED_FUNCTION_52_4(_QWORD *a1)
{
  uint64_t (*v1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);

  sub_1A569D010(a1, v1);
}

void OUTLINED_FUNCTION_54_2(uint64_t a1, __n128 a2)
{
  *(__n128 *)(a1 + 16) = a2;
  BodyStructure.subpartCount.getter(a1);
}

uint64_t OUTLINED_FUNCTION_55_3()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t OUTLINED_FUNCTION_57_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  return sub_1A569D06C((uint64_t)&a41, (uint64_t)&STACK[0x270]);
}

uint64_t OUTLINED_FUNCTION_58_2()
{
  uint64_t (*v0)(uint64_t);
  uint64_t v1;

  return v0(v1);
}

uint64_t OUTLINED_FUNCTION_61_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  return sub_1A569D06C((uint64_t)&a10, (uint64_t)&a33);
}

uint64_t OUTLINED_FUNCTION_62_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  uint64_t v41;

  return sub_1A569B8A4(v41, (uint64_t)&a41);
}

uint64_t OUTLINED_FUNCTION_63_3@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  return sub_1A5523A30(a1, v12, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12);
}

uint64_t OUTLINED_FUNCTION_64_1()
{
  return sub_1A594CE88();
}

size_t OUTLINED_FUNCTION_65_3(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  size_t result;

  result = _swift_stdlib_malloc_size_0(a1);
  a1[2] = v1;
  a1[3] = 2 * ((uint64_t)(result - 32) / v2);
  return result;
}

size_t OUTLINED_FUNCTION_66_2(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  size_t result;

  result = _swift_stdlib_malloc_size_0(a1);
  a1[2] = v1;
  a1[3] = 2 * ((uint64_t)(result - 32) / v2);
  return result;
}

void *OUTLINED_FUNCTION_67_2(void *a1, const void *a2)
{
  uint64_t v2;

  return memcpy(a1, a2, 8 * v2);
}

uint64_t OUTLINED_FUNCTION_68_2()
{
  return swift_deallocClassInstance();
}

void *OUTLINED_FUNCTION_69_1()
{
  return sub_1A55DC3E0(&STACK[0x390], &STACK[0x448]);
}

void *OUTLINED_FUNCTION_71_2(const void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1A55DC3E0(a1, &a9);
}

void *OUTLINED_FUNCTION_72_1(uint64_t a1, ...)
{
  uint64_t v1;
  va_list va;

  va_start(va, a1);
  return sub_1A55DC3E0((const void *)(v1 - 216), va);
}

void OUTLINED_FUNCTION_76_3(_QWORD *a1)
{
  uint64_t (*v1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);

  sub_1A569D010(a1, v1);
}

uint64_t OUTLINED_FUNCTION_77_2()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_78_3()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_81_2()
{
  return swift_arrayInitWithCopy();
}

void BodyExtension.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((a4 & 0x100000000000000) != 0)
  {
    sub_1A594CE88();
    sub_1A594CE88();
  }
  else
  {
    sub_1A594CE88();
    sub_1A56A00DC(a1, a2);
  }
}

uint64_t static BodyExtension.__derived_enum_equals(_:_:)(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  char v10;

  v6 = result;
  if ((a3 & 0x100000000000000) != 0)
    return HIBYTE(a6) & (result == a4);
  if ((a6 & 0x100000000000000) != 0)
    return 0;
  if (!result)
  {
    if (!a4)
      return 1;
    goto LABEL_16;
  }
  if (!a4)
  {
LABEL_16:
    OUTLINED_FUNCTION_0_31(result, a2, a3, a4, a5, a6);
    swift_release();
    swift_release();
    return 0;
  }
  if (HIDWORD(a2) < a2)
  {
    __break(1u);
  }
  else if (HIDWORD(a5) >= a5)
  {
    if (HIDWORD(a2) - (_DWORD)a2 == HIDWORD(a5) - (_DWORD)a5)
    {
      if ((a3 & 0xFFFFFFFFFFFFFFLL) == (a6 & 0xFFFFFFFFFFFFFFLL) && result == a4)
        return 1;
      OUTLINED_FUNCTION_0_31(result, a2, a3, a4, a5, a6);
      v10 = sub_1A566B918();
      sub_1A56974C4(v6, a2, a3, 0);
      if ((v10 & 1) != 0)
        return 1;
    }
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t BodyExtension.hashValue.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE v6[72];

  sub_1A594CE64();
  sub_1A594CE88();
  if ((a3 & 0x100000000000000) != 0)
    sub_1A594CE88();
  else
    sub_1A56A00DC((uint64_t)v6, a1);
  return sub_1A594CED0();
}

uint64_t sub_1A569FF74()
{
  uint64_t v0;

  return BodyExtension.hashValue.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(unsigned int *)(v0 + 16) | ((unint64_t)(*(unsigned __int16 *)(v0 + 20) | (*(unsigned __int8 *)(v0 + 22) << 16)) << 32) | ((unint64_t)*(unsigned __int8 *)(v0 + 23) << 56));
}

void sub_1A569FFA8(uint64_t a1)
{
  uint64_t v1;

  BodyExtension.hash(into:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(unsigned int *)(v1 + 16) | ((unint64_t)(*(unsigned __int16 *)(v1 + 20) | (*(unsigned __int8 *)(v1 + 22) << 16)) << 32) | ((unint64_t)*(unsigned __int8 *)(v1 + 23) << 56));
}

uint64_t sub_1A569FFDC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  _BYTE v4[72];

  v1 = *(_QWORD *)v0;
  v2 = *(_BYTE *)(v0 + 23);
  sub_1A594CE64();
  sub_1A594CE88();
  if ((v2 & 1) != 0)
    sub_1A594CE88();
  else
    sub_1A56A00DC((uint64_t)v4, v1);
  return sub_1A594CED0();
}

uint64_t sub_1A56A0078(uint64_t a1, uint64_t a2)
{
  return static BodyExtension.__derived_enum_equals(_:_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned int *)(a1 + 16) | ((unint64_t)(*(unsigned __int16 *)(a1 + 20) | (*(unsigned __int8 *)(a1 + 22) << 16)) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 23) << 56), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(unsigned int *)(a2 + 16) | ((unint64_t)(*(unsigned __int16 *)(a2 + 20) | (*(unsigned __int8 *)(a2 + 22) << 16)) << 32) | ((unint64_t)*(unsigned __int8 *)(a2 + 23) << 56));
}

void sub_1A56A00DC(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  unsigned int v3;

  if (!a2)
  {
    sub_1A594CE94();
    goto LABEL_5;
  }
  OUTLINED_FUNCTION_3_20();
  OUTLINED_FUNCTION_2_27();
  if (v3 >= v2)
  {
    OUTLINED_FUNCTION_1_21();
LABEL_5:
    OUTLINED_FUNCTION_4_6();
    return;
  }
  __break(1u);
}

unint64_t sub_1A56A012C()
{
  unint64_t result;

  result = qword_1EE7A95B0;
  if (!qword_1EE7A95B0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for BodyExtension, &type metadata for BodyExtension);
    atomic_store(result, (unint64_t *)&qword_1EE7A95B0);
  }
  return result;
}

uint64_t destroy for BodyExtension(uint64_t a1)
{
  return sub_1A56974C4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned int *)(a1 + 16) | ((unint64_t)(*(unsigned __int16 *)(a1 + 20) | (*(unsigned __int8 *)(a1 + 22) << 16)) << 32), *(_BYTE *)(a1 + 23));
}

uint64_t _s12NIOIMAPCore213BodyExtensionOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  int v7;
  uint64_t v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(unsigned int *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 23);
  v7 = *(unsigned __int8 *)(a2 + 22);
  v8 = *(unsigned __int16 *)(a2 + 20) | (v7 << 16);
  sub_1A5691E18(*(_QWORD *)a2, v4, v5 | (v8 << 32), v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 22) = v7;
  *(_WORD *)(a1 + 20) = v8;
  *(_DWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 23) = v6;
  return a1;
}

uint64_t assignWithCopy for BodyExtension(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(unsigned int *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 23);
  v7 = *(unsigned __int8 *)(a2 + 22);
  v8 = *(unsigned __int16 *)(a2 + 20) | (v7 << 16);
  sub_1A5691E18(*(_QWORD *)a2, v4, v5 | (v8 << 32), v6);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(unsigned int *)(a1 + 16) | ((unint64_t)(*(unsigned __int16 *)(a1 + 20) | (*(unsigned __int8 *)(a1 + 22) << 16)) << 32);
  v12 = *(_BYTE *)(a1 + 23);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 22) = v7;
  *(_WORD *)(a1 + 20) = v8;
  *(_BYTE *)(a1 + 23) = v6;
  sub_1A56974C4(v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for BodyExtension(uint64_t a1, __int128 *a2)
{
  char v3;
  __int128 v4;
  __int128 *v5;
  int v6;
  int v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;

  v3 = *((_BYTE *)a2 + 23);
  v4 = *a2;
  v7 = *((_DWORD *)a2 + 4);
  v5 = a2 + 1;
  v6 = v7;
  LOWORD(v7) = *((_WORD *)v5 + 2);
  v8 = *((_BYTE *)v5 + 6);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(unsigned int *)(a1 + 16) | ((unint64_t)(*(unsigned __int16 *)(a1 + 20) | (*(unsigned __int8 *)(a1 + 22) << 16)) << 32);
  v12 = *(_BYTE *)(a1 + 23);
  *(_OWORD *)a1 = v4;
  *(_DWORD *)(a1 + 16) = v6;
  *(_WORD *)(a1 + 20) = v7;
  *(_BYTE *)(a1 + 22) = v8;
  *(_BYTE *)(a1 + 23) = v3;
  sub_1A56974C4(v9, v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for BodyExtension(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 24))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 23);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BodyExtension(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_BYTE *)(result + 23) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A56A03A0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 23);
}

uint64_t sub_1A56A03A8(uint64_t result, char a2)
{
  *(_BYTE *)(result + 23) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for BodyExtension()
{
  return &type metadata for BodyExtension;
}

uint64_t OUTLINED_FUNCTION_0_31(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1A5691E18(v7, v8, a6, 0);
  sub_1A5691E18(v6, v10, v9, 0);
  return v6;
}

uint64_t OUTLINED_FUNCTION_1_21()
{
  return sub_1A594CE70();
}

uint64_t OUTLINED_FUNCTION_2_27()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_3_20()
{
  return sub_1A594CE94();
}

uint64_t sub_1A56A044C()
{
  OUTLINED_FUNCTION_77_1();
  return OUTLINED_FUNCTION_0_32();
}

void sub_1A56A04A4(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1A56A04E4()
{
  OUTLINED_FUNCTION_77_1();
  return OUTLINED_FUNCTION_0_32();
}

uint64_t sub_1A56A0584()
{
  OUTLINED_FUNCTION_77_1();
  return OUTLINED_FUNCTION_0_32();
}

uint64_t sub_1A56A05CC()
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_77_1();
  return swift_bridgeObjectRelease();
}

void sub_1A56A0610()
{
  OUTLINED_FUNCTION_2_28();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1A56A0628()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1A594B49C();
  static BodyStructure.DispositionKind.inline = result;
  *(_QWORD *)algn_1EE7F9598 = v1;
  return result;
}

uint64_t *BodyStructure.DispositionKind.inline.unsafeMutableAddressor()
{
  if (qword_1EE796908 != -1)
    swift_once();
  return &static BodyStructure.DispositionKind.inline;
}

void static BodyStructure.DispositionKind.inline.getter()
{
  sub_1A56A0754(&qword_1EE796908);
}

uint64_t sub_1A56A06BC()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1A594B49C();
  static BodyStructure.DispositionKind.attachment = result;
  *(_QWORD *)algn_1EE7F9208 = v1;
  return result;
}

uint64_t *BodyStructure.DispositionKind.attachment.unsafeMutableAddressor()
{
  if (qword_1EE796900 != -1)
    swift_once();
  return &static BodyStructure.DispositionKind.attachment;
}

void static BodyStructure.DispositionKind.attachment.getter()
{
  sub_1A56A0754(&qword_1EE796900);
}

void sub_1A56A0754(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_1();
}

void BodyStructure.DispositionKind.rawValue.getter()
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_1();
}

void sub_1A56A07C0()
{
  sub_1A56F9F14();
}

uint64_t sub_1A56A07C8()
{
  return sub_1A56A05CC();
}

void sub_1A56A07D0()
{
  sub_1A56FA05C();
}

uint64_t sub_1A56A07D8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = BodyStructure.DispositionKind.init(stringLiteral:)(*a1, a1[1]);
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1A56A0804@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t sub_1A56A0810(uint64_t *a1, uint64_t *a2)
{
  return _s12NIOIMAPCore210CapabilityV11ContextKindV23__derived_struct_equalsySbAE_AEtFZ_0(*a1, a1[1], *a2, a2[1]);
}

void BodyStructure.Disposition.kind.getter()
{
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_1();
}

void BodyStructure.Disposition.kind.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_8_1();
}

double (*BodyStructure.Disposition.kind.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t BodyStructure.Disposition.parameters.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_9_17();
  OUTLINED_FUNCTION_11_1();
  OUTLINED_FUNCTION_155();
  return v0;
}

void BodyStructure.Disposition.parameters.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  swift_release();
  swift_release();
  swift_release();
  v3[2] = a1;
  v3[3] = a2;
  v3[4] = a3;
  OUTLINED_FUNCTION_8_1();
}

double (*BodyStructure.Disposition.parameters.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t BodyStructure.Disposition.init(kind:parameters:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t BodyStructure.Disposition.size.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t result;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unsigned __int8 *v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  unsigned __int8 v101;
  char v102;
  uint64_t v103;
  unsigned __int8 v104;
  uint64_t v105;
  unsigned __int8 v106;
  unsigned __int8 v107;
  uint64_t v108;
  uint64_t v109;
  unsigned __int8 v110;
  unsigned __int8 v111;
  uint64_t v112;
  unsigned __int8 v113;
  uint64_t v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  __int128 v120;
  uint64_t v121;
  _BYTE v122[8];

  v1 = *(_QWORD *)(v0 + 32);
  v119 = v1;
  if (!*(_QWORD *)(v1 + 16))
    return 0;
  v120 = *(_OWORD *)(v0 + 16);
  sub_1A55032A0((uint64_t)&v120, (uint64_t)v122, &qword_1EE7986A8);
  v121 = *((_QWORD *)&v120 + 1);
  v2 = *(_QWORD *)(*((_QWORD *)&v120 + 1) + 16);
  sub_1A553E5B4((uint64_t)v122);
  sub_1A553E5B4((uint64_t)&v121);
  sub_1A553E5B4((uint64_t)&v119);
  sub_1A553E5B4((uint64_t)v122);
  sub_1A553E5B4((uint64_t)&v121);
  sub_1A553E5B4((uint64_t)&v119);
  v3 = (unint64_t *)(v1 + 40);
  while (1)
  {
    if (!v2)
    {
      __break(1u);
      goto LABEL_70;
    }
    v5 = *(v3 - 1);
    v4 = *v3;
    v7 = sub_1A594B49C() == 1702521203 && v6 == 0xE400000000000000;
    if (v7)
      break;
    v8 = OUTLINED_FUNCTION_1_16();
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_27();
    v9 = OUTLINED_FUNCTION_52();
    if ((v8 & 1) != 0)
      goto LABEL_14;
    OUTLINED_FUNCTION_17();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_22_12();
    if (v7)
    {
      v25 = OUTLINED_FUNCTION_17_12(v17, v18, v19, v20, v21, v22, v23, v24, v116);
      v33 = OUTLINED_FUNCTION_14_8(v25, v26, v27, v28, v29, v30, v31, v32);
      v38 = OUTLINED_FUNCTION_11_11(v33, v34, v35, v36, v37);
      v46 = OUTLINED_FUNCTION_17_12(v38, v39, v40, v41, v42, v43, v44, v45, v117);
      v54 = OUTLINED_FUNCTION_14_8(v46, v47, v48, v49, v50, v51, v52, v53);
      OUTLINED_FUNCTION_11_11(v54, v55, v56, v57, v58);
      return 0;
    }
  }
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_27();
  v9 = swift_bridgeObjectRelease();
LABEL_14:
  v60 = OUTLINED_FUNCTION_17_12(v9, v10, v11, v12, v13, v14, v15, v16, v116);
  v68 = OUTLINED_FUNCTION_14_8(v60, v61, v62, v63, v64, v65, v66, v67);
  v73 = OUTLINED_FUNCTION_11_11(v68, v69, v70, v71, v72);
  v81 = OUTLINED_FUNCTION_17_12(v73, v74, v75, v76, v77, v78, v79, v80, v118);
  v89 = OUTLINED_FUNCTION_14_8(v81, v82, v83, v84, v85, v86, v87, v88);
  OUTLINED_FUNCTION_11_11(v89, v90, v91, v92, v93);
  result = swift_bridgeObjectRelease();
  v94 = HIBYTE(v4) & 0xF;
  v95 = v5 & 0xFFFFFFFFFFFFLL;
  if ((v4 & 0x2000000000000000) != 0)
    v96 = HIBYTE(v4) & 0xF;
  else
    v96 = v5 & 0xFFFFFFFFFFFFLL;
  if (!v96)
  {
LABEL_70:
    OUTLINED_FUNCTION_17();
    return 0;
  }
  if ((v4 & 0x1000000000000000) != 0)
  {
    v98 = sub_1A56A136C(v5, v4, 10, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1A56A16B8);
    LOBYTE(v5) = v115;
    goto LABEL_59;
  }
  if ((v4 & 0x2000000000000000) != 0)
  {
    if (v5 == 43)
    {
      if (!v94)
        goto LABEL_74;
      if (v94 == 1)
        goto LABEL_45;
      OUTLINED_FUNCTION_4_19();
      if (!v7 & v102)
        goto LABEL_45;
      v98 = v104;
      if (v103 != 2)
      {
        OUTLINED_FUNCTION_4_19();
        if (!v7 & v102)
          goto LABEL_45;
        v98 = 10 * v98 + v106;
        if (v105 != 3)
        {
          while (1)
          {
            OUTLINED_FUNCTION_10_13();
            if (!v7 & v102)
              goto LABEL_45;
            OUTLINED_FUNCTION_3_21();
            if (!v7)
              goto LABEL_45;
            v98 = v108 + v107;
            if (__OFADD__(v108, v107))
              goto LABEL_45;
            OUTLINED_FUNCTION_18_9();
            if (v7)
              goto LABEL_59;
          }
        }
      }
    }
    else
    {
      if (v5 == 45)
      {
        if (v94)
        {
          if (v94 != 1)
          {
            OUTLINED_FUNCTION_4_19();
            if (!(!v7 & v102))
            {
              if (v100 == 2)
              {
                LOBYTE(v5) = 0;
                v98 = -(uint64_t)v101;
                goto LABEL_59;
              }
              if ((BYTE2(v5) - 48) <= 9u)
              {
                v98 = -10 * v101 - (BYTE2(v5) - 48);
                if (v100 == 3)
                  goto LABEL_58;
                while (1)
                {
                  OUTLINED_FUNCTION_10_13();
                  if (!v7 & v102)
                    break;
                  OUTLINED_FUNCTION_3_21();
                  if (!v7)
                    break;
                  v98 = v114 - v113;
                  if (__OFSUB__(v114, v113))
                    break;
                  OUTLINED_FUNCTION_18_9();
                  if (v7)
                    goto LABEL_59;
                }
              }
            }
          }
LABEL_45:
          v98 = 0;
          LOBYTE(v5) = 1;
          goto LABEL_59;
        }
        __break(1u);
LABEL_74:
        __break(1u);
        return result;
      }
      if (!v94 || (v5 - 48) > 9u)
        goto LABEL_45;
      v98 = (v5 - 48);
      if (v94 != 1)
      {
        OUTLINED_FUNCTION_4_19();
        if (!v7 & v102)
          goto LABEL_45;
        v98 = 10 * (v5 - 48) + v110;
        if (v109 != 2)
        {
          while (1)
          {
            OUTLINED_FUNCTION_10_13();
            if (!v7 & v102)
              goto LABEL_45;
            OUTLINED_FUNCTION_3_21();
            if (!v7)
              goto LABEL_45;
            v98 = v112 + v111;
            if (__OFADD__(v112, v111))
              goto LABEL_45;
            OUTLINED_FUNCTION_18_9();
            if (v7)
              goto LABEL_59;
          }
        }
      }
    }
LABEL_58:
    LOBYTE(v5) = 0;
    goto LABEL_59;
  }
  if ((v5 & 0x1000000000000000) != 0)
    v97 = (unsigned __int8 *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 32);
  else
    v97 = (unsigned __int8 *)sub_1A594C7D4();
  v98 = (uint64_t)sub_1A56A16B8(v97, v95);
  LOBYTE(v5) = v99 & 1;
LABEL_59:
  OUTLINED_FUNCTION_17();
  if ((v5 & 1) != 0)
    return 0;
  else
    return v98;
}

void BodyStructure.Disposition.filename.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  _BYTE v48[8];

  v45 = *(_QWORD *)(v0 + 32);
  if (*(_QWORD *)(v45 + 16))
  {
    v46 = *(_OWORD *)(v0 + 16);
    sub_1A55032A0((uint64_t)&v46, (uint64_t)v48, &qword_1EE7986A8);
    v47 = *((_QWORD *)&v46 + 1);
    v1 = *(_QWORD *)(*((_QWORD *)&v46 + 1) + 16);
    sub_1A553E5B4((uint64_t)v48);
    sub_1A553E5B4((uint64_t)&v47);
    sub_1A553E5B4((uint64_t)&v45);
    sub_1A553E5B4((uint64_t)v48);
    sub_1A553E5B4((uint64_t)&v47);
    sub_1A553E5B4((uint64_t)&v45);
    while (v1)
    {
      v3 = sub_1A594B49C() == 0x656D616E656C6966 && v2 == 0xE800000000000000;
      if (v3)
      {
        OUTLINED_FUNCTION_69();
        OUTLINED_FUNCTION_27();
        v5 = swift_bridgeObjectRelease();
LABEL_14:
        v30 = OUTLINED_FUNCTION_11_11(v5, v6, v7, v8, v9);
        v34 = OUTLINED_FUNCTION_15_14(v30, v31, v32, v33);
        v35 = OUTLINED_FUNCTION_21_6(v34);
        v40 = OUTLINED_FUNCTION_11_11(v35, v36, v37, v38, v39);
        v44 = OUTLINED_FUNCTION_15_14(v40, v41, v42, v43);
        OUTLINED_FUNCTION_21_6(v44);
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
      v4 = OUTLINED_FUNCTION_1_16();
      OUTLINED_FUNCTION_69();
      OUTLINED_FUNCTION_27();
      v5 = OUTLINED_FUNCTION_52();
      if ((v4 & 1) != 0)
        goto LABEL_14;
      OUTLINED_FUNCTION_17();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_22_12();
      if (v3)
      {
        v15 = OUTLINED_FUNCTION_11_11(v10, v11, v12, v13, v14);
        v19 = OUTLINED_FUNCTION_15_14(v15, v16, v17, v18);
        v20 = OUTLINED_FUNCTION_21_6(v19);
        v25 = OUTLINED_FUNCTION_11_11(v20, v21, v22, v23, v24);
        v29 = OUTLINED_FUNCTION_15_14(v25, v26, v27, v28);
        OUTLINED_FUNCTION_21_6(v29);
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    OUTLINED_FUNCTION_182();
  }
}

uint64_t BodyStructure.Disposition.hash(into:)()
{
  __int128 *v0;
  __int128 v2;

  v2 = *v0;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  sub_1A5503278((uint64_t)&v2);
  OUTLINED_FUNCTION_11_1();
  swift_retain();
  OUTLINED_FUNCTION_155();
  sub_1A5693A38();
  swift_release();
  swift_release();
  return swift_release();
}

BOOL static BodyStructure.Disposition.__derived_struct_equals(_:_:)(_QWORD *a1, _QWORD *a2)
{
  BOOL v2;
  char v3;
  _BOOL8 result;
  char v5;
  char v6;

  v2 = *a1 == *a2 && a1[1] == a2[1];
  if (v2 || (v3 = OUTLINED_FUNCTION_1_16(), result = 0, (v3 & 1) != 0))
  {
    sub_1A5690C88();
    result = 0;
    if ((v5 & 1) != 0)
    {
      OUTLINED_FUNCTION_182();
      sub_1A5691350();
      if ((v6 & 1) != 0)
        return 1;
    }
  }
  return result;
}

uint64_t BodyStructure.Disposition.hashValue.getter()
{
  __int128 *v0;
  __int128 v2;

  sub_1A594CE64();
  v2 = *v0;
  OUTLINED_FUNCTION_69();
  sub_1A594B1D8();
  sub_1A5503278((uint64_t)&v2);
  OUTLINED_FUNCTION_9_17();
  OUTLINED_FUNCTION_11_1();
  OUTLINED_FUNCTION_155();
  sub_1A5693A38();
  swift_release();
  swift_release();
  swift_release();
  return sub_1A594CED0();
}

uint64_t sub_1A56A0FFC()
{
  sub_1A594CE64();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1A5693A38();
  swift_release();
  swift_release();
  swift_release();
  return sub_1A594CED0();
}

uint64_t _s12NIOIMAPCore213BodyStructureO15DispositionKindV8rawValueAESS_tcfC_0()
{
  uint64_t v0;

  v0 = sub_1A594B49C();
  OUTLINED_FUNCTION_17();
  return v0;
}

void sub_1A56A10F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::UInt32 v7;
  Swift::Int v8;
  char v9;
  Swift::Int v10;
  int v11;
  BOOL v12;
  int v13;
  __int128 v14;
  Swift::Int v15;
  Swift::Int v16;
  Swift::Int v17;
  char v18;
  Swift::String v19;
  int v20;
  int v21;
  BOOL v22;
  Swift::Int v23;
  uint64_t v24;
  Swift::Int v25;
  char v26;
  int v27;
  int v28;
  Swift::Int v29;
  int v30;
  char v31;
  Swift::String v32;
  int v33;
  int v34;
  char v35[8];
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;

  v2 = v1;
  sub_1A55032A0(a1, (uint64_t)v35, &qword_1EE7968F0);
  sub_1A55032A0(a1, (uint64_t)&v36, &qword_1EE7968F0);
  if (!*((_QWORD *)&v36 + 1))
    goto LABEL_17;
  v40 = v36;
  v4 = v37;
  v5 = v38;
  v6 = v39;
  v7 = *(_DWORD *)(v1 + 20);
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_11_1();
  OUTLINED_FUNCTION_16_0();
  sub_1A56814E0(40, 0xE100000000000000, v1 + 8, v7);
  if ((v9 & 1) != 0)
    v8 = OUTLINED_FUNCTION_7_15(40);
  v10 = v8;
  v11 = *(_DWORD *)(v1 + 20);
  v12 = __CFADD__(v11, (_DWORD)v8);
  v13 = v11 + v8;
  if (v12)
  {
    __break(1u);
    goto LABEL_23;
  }
  *(_DWORD *)(v1 + 20) = v13;
  v41 = v40;
  v14 = v40;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A56BA418(v14, *((unint64_t *)&v14 + 1));
  OUTLINED_FUNCTION_27_6();
  v15 = v10 + v1;
  if (__OFADD__(v10, v1))
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v16 = *(unsigned int *)(v1 + 20);
  sub_1A56814E0(32, 0xE100000000000000, v2 + 8, *(_DWORD *)(v2 + 20));
  if ((v18 & 1) != 0)
  {
    v19._countAndFlagsBits = 32;
    v19._object = (void *)0xE100000000000000;
    v17 = ByteBuffer._setStringSlowpath(_:at:)(v19, v16);
  }
  v20 = *(_DWORD *)(v2 + 20);
  v12 = __CFADD__(v20, (_DWORD)v17);
  v21 = v20 + v17;
  if (v12)
    goto LABEL_24;
  *(_DWORD *)(v2 + 20) = v21;
  v22 = __OFADD__(v15, v17);
  v23 = v15 + v17;
  if (v22)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  sub_1A56A46D4(v4, v5, v6);
  v25 = v23 + v24;
  if (__OFADD__(v23, v24))
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    return;
  }
  sub_1A56814E0(41, 0xE100000000000000, v2 + 8, *(_DWORD *)(v2 + 20));
  if ((v26 & 1) != 0)
    OUTLINED_FUNCTION_7_15(41);
  OUTLINED_FUNCTION_27_6();
  v27 = *(_DWORD *)(v2 + 20);
  v12 = __CFADD__(v27, (_DWORD)v2);
  v28 = v27 + v2;
  if (v12)
    goto LABEL_27;
  *(_DWORD *)(v2 + 20) = v28;
  swift_release();
  swift_release();
  swift_release();
  if (!__OFADD__(v25, v2))
    return;
  __break(1u);
LABEL_17:
  v29 = *(unsigned int *)(v2 + 20);
  sub_1A56814E0(4999502, 0xE300000000000000, v2 + 8, *(_DWORD *)(v2 + 20));
  if ((v31 & 1) != 0)
  {
    v32._countAndFlagsBits = 4999502;
    v32._object = (void *)0xE300000000000000;
    v30 = ByteBuffer._setStringSlowpath(_:at:)(v32, v29);
  }
  v33 = *(_DWORD *)(v2 + 20);
  v12 = __CFADD__(v33, v30);
  v34 = v33 + v30;
  if (v12)
    goto LABEL_28;
  *(_DWORD *)(v2 + 20) = v34;
}

unsigned __int8 *sub_1A56A132C(unsigned __int8 *a1, uint64_t a2)
{
  return sub_1A56A1454(a1, a2);
}

unsigned __int8 *sub_1A56A1340(unsigned __int8 *a1, uint64_t a2)
{
  return sub_1A56A16B8(a1, a2);
}

uint64_t sub_1A56A1354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A56A136C(a1, a2, a3, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1A56A1454);
}

uint64_t sub_1A56A1360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A56A136C(a1, a2, a3, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1A56A16B8);
}

uint64_t sub_1A56A136C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD *, uint64_t, uint64_t))
{
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v15 = a1;
  v16 = a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v7 = sub_1A594B70C();
  v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v10 = HIBYTE(v8) & 0xF;
    v15 = v7;
    v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    v9 = &v15;
    goto LABEL_7;
  }
  v7 = sub_1A565A574();
  v12 = v11;
  OUTLINED_FUNCTION_52();
  v8 = v12;
  if ((v12 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    v9 = (_QWORD *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v9 = (_QWORD *)sub_1A594C7D4();
  }
LABEL_7:
  v13 = a4(v9, v10, a3);
  OUTLINED_FUNCTION_52();
  return v13;
}

unsigned __int8 *sub_1A56A1454(unsigned __int8 *result, uint64_t a2)
{
  int v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  unsigned __int8 v10;
  unsigned __int8 v11;
  unsigned __int8 v12;
  unint64_t v13;
  unsigned __int8 *i;
  unsigned int v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  unsigned __int8 v19;
  BOOL v20;
  char v21;
  char v22;
  char v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  unsigned __int8 v28;
  unsigned __int8 v29;
  unsigned __int8 v30;
  unsigned __int8 *v31;
  unsigned int v32;
  char v33;
  unint64_t v34;
  unsigned __int8 v35;
  char v36;
  char v37;
  char v38;
  unsigned __int8 *v39;
  unint64_t v40;
  uint64_t v41;
  unsigned __int8 v42;
  unsigned __int8 v43;
  unsigned __int8 v44;
  unsigned __int8 v45;
  unint64_t v46;
  unsigned int v47;
  char v48;
  unint64_t v49;
  unsigned __int8 v50;

  v2 = *result;
  if (v2 == 43)
  {
    if (a2 >= 1)
    {
      if (a2 != 1)
      {
        OUTLINED_FUNCTION_1_22();
        if (v22 ^ v23 | v21)
          v27 = v30;
        if (v22 ^ v23 | v21)
          v28 = 65;
        if (!(v22 ^ v23 | v21))
          v29 = 58;
        if (v24)
        {
          v13 = 0;
          v31 = (unsigned __int8 *)(v24 + 1);
          do
          {
            v32 = *v31;
            if (v32 < 0x30 || v32 >= v29)
            {
              if (v32 < 0x41 || v32 >= v28)
              {
                v17 = 0;
                if (v32 < 0x61 || v32 >= v27)
                  return (unsigned __int8 *)v17;
                v33 = -87;
              }
              else
              {
                v33 = -55;
              }
            }
            else
            {
              v33 = -48;
            }
            if (!is_mul_ok(v13, v25))
              return 0;
            v34 = v13 * v25;
            v35 = v32 + v33;
            v20 = __CFADD__(v34, v35);
            v13 = v34 + v35;
            if (v20)
              return 0;
            ++v31;
            --v26;
          }
          while (v26);
          return (unsigned __int8 *)v13;
        }
        return 0;
      }
      return 0;
    }
  }
  else
  {
    if (v2 != 45)
    {
      if (a2)
      {
        OUTLINED_FUNCTION_1_22();
        if (v37 ^ v38 | v36)
          v42 = v45;
        if (v37 ^ v38 | v36)
          v43 = 65;
        if (!(v37 ^ v38 | v36))
          v44 = 58;
        if (v39)
        {
          v46 = 0;
          do
          {
            v47 = *v39;
            if (v47 < 0x30 || v47 >= v44)
            {
              if (v47 < 0x41 || v47 >= v43)
              {
                v17 = 0;
                if (v47 < 0x61 || v47 >= v42)
                  return (unsigned __int8 *)v17;
                v48 = -87;
              }
              else
              {
                v48 = -55;
              }
            }
            else
            {
              v48 = -48;
            }
            if (!is_mul_ok(v46, v40))
              return 0;
            v49 = v46 * v40;
            v50 = v47 + v48;
            v20 = __CFADD__(v49, v50);
            v46 = v49 + v50;
            if (v20)
              return 0;
            ++v39;
            --v41;
          }
          while (v41);
          return (unsigned __int8 *)v46;
        }
        return 0;
      }
      return 0;
    }
    if (a2 >= 1)
    {
      if (a2 != 1)
      {
        OUTLINED_FUNCTION_1_22();
        if (v4 ^ v5 | v3)
          v9 = v12;
        if (v4 ^ v5 | v3)
          v10 = 65;
        if (!(v4 ^ v5 | v3))
          v11 = 58;
        if (v6)
        {
          v13 = 0;
          for (i = (unsigned __int8 *)(v6 + 1); ; ++i)
          {
            v15 = *i;
            if (v15 < 0x30 || v15 >= v11)
            {
              if (v15 < 0x41 || v15 >= v10)
              {
                v17 = 0;
                if (v15 < 0x61 || v15 >= v9)
                  return (unsigned __int8 *)v17;
                v16 = -87;
              }
              else
              {
                v16 = -55;
              }
            }
            else
            {
              v16 = -48;
            }
            if (!is_mul_ok(v13, v7))
              return 0;
            v18 = v13 * v7;
            v19 = v15 + v16;
            v20 = v18 >= v19;
            v13 = v18 - v19;
            if (!v20)
              return 0;
            if (!--v8)
              return (unsigned __int8 *)v13;
          }
        }
        return 0;
      }
      return 0;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unsigned __int8 *sub_1A56A16B8(unsigned __int8 *result, uint64_t a2)
{
  int v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  unsigned __int8 v10;
  unsigned __int8 v11;
  unsigned __int8 v12;
  uint64_t v13;
  unsigned __int8 *i;
  unsigned int v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  unsigned __int8 v28;
  unsigned __int8 *v29;
  unsigned int v30;
  char v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  unsigned __int8 *v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 v39;
  unsigned __int8 v40;
  unsigned __int8 v41;
  unsigned __int8 v42;
  uint64_t v43;
  unsigned int v44;
  char v45;
  uint64_t v46;

  v2 = *result;
  if (v2 == 43)
  {
    if (a2 >= 1)
    {
      if (a2 != 1)
      {
        OUTLINED_FUNCTION_1_22();
        if (v20 ^ v21 | v19)
          v25 = v28;
        if (v20 ^ v21 | v19)
          v26 = 65;
        if (!(v20 ^ v21 | v19))
          v27 = 58;
        if (v22)
        {
          v13 = 0;
          v29 = (unsigned __int8 *)(v22 + 1);
          do
          {
            v30 = *v29;
            if (v30 < 0x30 || v30 >= v27)
            {
              if (v30 < 0x41 || v30 >= v26)
              {
                v17 = 0;
                if (v30 < 0x61 || v30 >= v25)
                  return (unsigned __int8 *)v17;
                v31 = -87;
              }
              else
              {
                v31 = -55;
              }
            }
            else
            {
              v31 = -48;
            }
            v32 = v13 * v23;
            if ((unsigned __int128)(v13 * (__int128)v23) >> 64 != (v13 * v23) >> 63)
              return 0;
            v13 = v32 + (v30 + v31);
            if (__OFADD__(v32, (v30 + v31)))
              return 0;
            ++v29;
            --v24;
          }
          while (v24);
          return (unsigned __int8 *)v13;
        }
        return 0;
      }
      return 0;
    }
  }
  else
  {
    if (v2 != 45)
    {
      if (a2)
      {
        OUTLINED_FUNCTION_1_22();
        if (v34 ^ v35 | v33)
          v39 = v42;
        if (v34 ^ v35 | v33)
          v40 = 65;
        if (!(v34 ^ v35 | v33))
          v41 = 58;
        if (v36)
        {
          v43 = 0;
          do
          {
            v44 = *v36;
            if (v44 < 0x30 || v44 >= v41)
            {
              if (v44 < 0x41 || v44 >= v40)
              {
                v17 = 0;
                if (v44 < 0x61 || v44 >= v39)
                  return (unsigned __int8 *)v17;
                v45 = -87;
              }
              else
              {
                v45 = -55;
              }
            }
            else
            {
              v45 = -48;
            }
            v46 = v43 * v37;
            if ((unsigned __int128)(v43 * (__int128)v37) >> 64 != (v43 * v37) >> 63)
              return 0;
            v43 = v46 + (v44 + v45);
            if (__OFADD__(v46, (v44 + v45)))
              return 0;
            ++v36;
            --v38;
          }
          while (v38);
          return (unsigned __int8 *)(v46 + (v44 + v45));
        }
        return 0;
      }
      return 0;
    }
    if (a2 >= 1)
    {
      if (a2 != 1)
      {
        OUTLINED_FUNCTION_1_22();
        if (v4 ^ v5 | v3)
          v9 = v12;
        if (v4 ^ v5 | v3)
          v10 = 65;
        if (!(v4 ^ v5 | v3))
          v11 = 58;
        if (v6)
        {
          v13 = 0;
          for (i = (unsigned __int8 *)(v6 + 1); ; ++i)
          {
            v15 = *i;
            if (v15 < 0x30 || v15 >= v11)
            {
              if (v15 < 0x41 || v15 >= v10)
              {
                v17 = 0;
                if (v15 < 0x61 || v15 >= v9)
                  return (unsigned __int8 *)v17;
                v16 = -87;
              }
              else
              {
                v16 = -55;
              }
            }
            else
            {
              v16 = -48;
            }
            v18 = v13 * v7;
            if ((unsigned __int128)(v13 * (__int128)v7) >> 64 != (v13 * v7) >> 63)
              return 0;
            v13 = v18 - (v15 + v16);
            if (__OFSUB__(v18, (v15 + v16)))
              return 0;
            if (!--v8)
              return (unsigned __int8 *)v13;
          }
        }
        return 0;
      }
      return 0;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_1A56A1920()
{
  unint64_t result;

  result = qword_1EE7A95B8;
  if (!qword_1EE7A95B8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for BodyStructure.DispositionKind, &type metadata for BodyStructure.DispositionKind);
    atomic_store(result, (unint64_t *)&qword_1EE7A95B8);
  }
  return result;
}

unint64_t sub_1A56A1960()
{
  unint64_t result;

  result = qword_1EE7A95C0;
  if (!qword_1EE7A95C0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for BodyStructure.Disposition, &type metadata for BodyStructure.Disposition);
    atomic_store(result, (unint64_t *)&qword_1EE7A95C0);
  }
  return result;
}

unint64_t sub_1A56A19A0()
{
  unint64_t result;

  result = qword_1EE7A95C8;
  if (!qword_1EE7A95C8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for BodyStructure.DispositionKind, &type metadata for BodyStructure.DispositionKind);
    atomic_store(result, (unint64_t *)&qword_1EE7A95C8);
  }
  return result;
}

uint64_t sub_1A56A19DC()
{
  return MEMORY[0x1E0DEA9F0];
}

unint64_t sub_1A56A19EC()
{
  unint64_t result;

  result = qword_1EE7A95D0;
  if (!qword_1EE7A95D0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for BodyStructure.DispositionKind, &type metadata for BodyStructure.DispositionKind);
    atomic_store(result, (unint64_t *)&qword_1EE7A95D0);
  }
  return result;
}

uint64_t sub_1A56A1A28()
{
  return MEMORY[0x1E0DEAA00];
}

uint64_t sub_1A56A1A34()
{
  return MEMORY[0x1E0DEA9F8];
}

ValueMetadata *type metadata accessor for BodyStructure.DispositionKind()
{
  return &type metadata for BodyStructure.DispositionKind;
}

uint64_t _s11DispositionVwxx()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *_s11DispositionVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *_s11DispositionVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s11DispositionVwta(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t _s11DispositionVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MoveOrCopy(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BodyStructure.Disposition()
{
  return &type metadata for BodyStructure.Disposition;
}

uint64_t OUTLINED_FUNCTION_0_32()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_2_28()
{
  return sub_1A594CEAC();
}

Swift::Int OUTLINED_FUNCTION_7_15(uint64_t a1)
{
  Swift::Int v1;
  unint64_t v2;

  v2 = 0xE100000000000000;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v1);
}

uint64_t OUTLINED_FUNCTION_9_17()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_11_11(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  return sub_1A553E5DC((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_14_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  return sub_1A553E5DC((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_15_14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  return sub_1A553E5DC((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_17_12(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  return sub_1A553E5DC((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_27_6()
{
  uint64_t v0;

  return sub_1A5503278(v0 - 96);
}

uint64_t BodyStructure.DispositionAndLanguage.disposition.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A56A1D4C(v1, a1);
}

uint64_t sub_1A56A1D4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7968F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t BodyStructure.DispositionAndLanguage.disposition.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1A56A1D9C(a1, v1);
}

uint64_t sub_1A56A1D9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7968F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

double (*BodyStructure.DispositionAndLanguage.disposition.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t BodyStructure.DispositionAndLanguage.language.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = OUTLINED_FUNCTION_9_18();
  sub_1A55239BC(v0, v1, v2, v3);
  return OUTLINED_FUNCTION_9_18();
}

uint64_t BodyStructure.DispositionAndLanguage.language.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t result;

  result = sub_1A55244A0(v4[5], v4[6], v4[7], v4[8]);
  v4[5] = a1;
  v4[6] = a2;
  v4[7] = a3;
  v4[8] = a4;
  return result;
}

double (*BodyStructure.DispositionAndLanguage.language.modify())(_QWORD)
{
  return nullsub_1;
}

double BodyStructure.DispositionAndLanguage.init(disposition:language:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  double result;
  __int128 v13;
  _OWORD v14[2];
  uint64_t v15;

  sub_1A56A1EE8(a1, (uint64_t)v14);
  v11 = v15;
  result = *(double *)v14;
  v13 = v14[1];
  *(_OWORD *)a6 = v14[0];
  *(_OWORD *)(a6 + 16) = v13;
  *(_QWORD *)(a6 + 32) = v11;
  *(_QWORD *)(a6 + 40) = a2;
  *(_QWORD *)(a6 + 48) = a3;
  *(_QWORD *)(a6 + 56) = a4;
  *(_QWORD *)(a6 + 64) = a5;
  return result;
}

uint64_t sub_1A56A1EE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7968F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t BodyStructure.DispositionAndLanguage.hash(into:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = v1;
  if (v2[1])
  {
    sub_1A594CE94();
    v4 = OUTLINED_FUNCTION_6_17();
    sub_1A552396C(v4, v5);
    swift_retain();
    swift_retain();
    swift_retain();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594B1D8();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1A5693A38();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_149_0();
    OUTLINED_FUNCTION_149_0();
    OUTLINED_FUNCTION_149_0();
    v6 = OUTLINED_FUNCTION_6_17();
    sub_1A5524450(v6, v7);
  }
  else
  {
    sub_1A594CE94();
  }
  v8 = v2[5];
  if (!v8)
    return sub_1A594CE94();
  v10 = v2[7];
  v9 = v2[8];
  v11 = v2[6];
  sub_1A594CE94();
  v12 = OUTLINED_FUNCTION_7_16();
  sub_1A55239BC(v12, v13, v14, v15);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5523A00(v11, v10, v9);
  BodyStructure.LanguageLocation.hash(into:)(a1, v8, v11, v10, v9);
  swift_bridgeObjectRelease();
  sub_1A55244E4(v11, v10, v9);
  v16 = OUTLINED_FUNCTION_7_16();
  return sub_1A55244A0(v16, v17, v18, v19);
}

BOOL static BodyStructure.DispositionAndLanguage.__derived_struct_equals(_:_:)(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;

  v5 = *a1;
  v4 = a1[1];
  v6 = a2[1];
  if (v4)
  {
    if (v6)
    {
      v7 = v5 == *a2 && v4 == v6;
      v30 = *a1;
      if (v7 || (sub_1A594CD38() & 1) != 0)
      {
        OUTLINED_FUNCTION_0_33();
        OUTLINED_FUNCTION_0_33();
        v8 = OUTLINED_FUNCTION_8_10();
        OUTLINED_FUNCTION_2_29(v8, v9);
        sub_1A5690C88();
        if ((v10 & 1) != 0)
        {
          sub_1A5691350();
          v12 = v11;
          swift_bridgeObjectRelease();
          v13 = v30;
          if ((v12 & 1) != 0)
          {
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            OUTLINED_FUNCTION_3_22();
            goto LABEL_13;
          }
          goto LABEL_19;
        }
      }
      else
      {
        OUTLINED_FUNCTION_0_33();
        OUTLINED_FUNCTION_0_33();
        v27 = OUTLINED_FUNCTION_8_10();
        OUTLINED_FUNCTION_2_29(v27, v28);
      }
      swift_bridgeObjectRelease();
      v13 = v30;
LABEL_19:
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v16 = v13;
      v17 = v4;
      goto LABEL_20;
    }
LABEL_12:
    OUTLINED_FUNCTION_2_29(v5, v4);
    v14 = OUTLINED_FUNCTION_8_10();
    sub_1A552396C(v14, v15);
    OUTLINED_FUNCTION_3_22();
    v16 = OUTLINED_FUNCTION_8_10();
LABEL_20:
    sub_1A5524450(v16, v17);
    return 0;
  }
  if (v6)
    goto LABEL_12;
LABEL_13:
  v18 = a1[5];
  v19 = a1[6];
  v20 = a1[7];
  v21 = a1[8];
  v23 = a2[5];
  v22 = a2[6];
  v24 = a2[7];
  v25 = a2[8];
  if (v18)
  {
    if (v23)
    {
      OUTLINED_FUNCTION_1_23();
      OUTLINED_FUNCTION_1_23();
      OUTLINED_FUNCTION_4_20();
      v26 = static BodyStructure.LanguageLocation.__derived_struct_equals(_:_:)(v18, v19, v20, v21, v23, v22, v24, v25);
      swift_bridgeObjectRelease();
      sub_1A55244E4(v22, v24, v25);
      swift_bridgeObjectRelease();
      sub_1A55244E4(v19, v20, v21);
      OUTLINED_FUNCTION_5_15();
      return (v26 & 1) != 0;
    }
LABEL_23:
    OUTLINED_FUNCTION_1_23();
    OUTLINED_FUNCTION_4_20();
    OUTLINED_FUNCTION_5_15();
    sub_1A55244A0(v23, v22, v24, v25);
    return 0;
  }
  if (v23)
    goto LABEL_23;
  return 1;
}

uint64_t BodyStructure.DispositionAndLanguage.hashValue.getter()
{
  _BYTE v1[72];

  sub_1A594CE64();
  BodyStructure.DispositionAndLanguage.hash(into:)((uint64_t)v1);
  return sub_1A594CED0();
}

uint64_t sub_1A56A23B8()
{
  _BYTE v1[72];

  sub_1A594CE64();
  BodyStructure.DispositionAndLanguage.hash(into:)((uint64_t)v1);
  return sub_1A594CED0();
}

unint64_t sub_1A56A23F8()
{
  unint64_t result;

  result = qword_1EE7A95D8;
  if (!qword_1EE7A95D8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for BodyStructure.DispositionAndLanguage, &type metadata for BodyStructure.DispositionAndLanguage);
    atomic_store(result, (unint64_t *)&qword_1EE7A95D8);
  }
  return result;
}

uint64_t _s22DispositionAndLanguageVwxx(_QWORD *a1)
{
  uint64_t result;

  if (a1[1])
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
  result = a1[5];
  if (result)
  {
    swift_bridgeObjectRelease();
    result = a1[8];
    if (result)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

_QWORD *_s22DispositionAndLanguageVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  v4 = a2[1];
  if (v4)
  {
    *a1 = *a2;
    a1[1] = v4;
    v5 = a2[3];
    a1[2] = a2[2];
    a1[3] = v5;
    a1[4] = a2[4];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    v6 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v6;
    a1[4] = a2[4];
  }
  v7 = a2[5];
  if (v7)
  {
    a1[5] = v7;
    v8 = a2[8];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v8)
    {
      v9 = a2[7];
      a1[6] = a2[6];
      a1[7] = v9;
      a1[8] = v8;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
    else
    {
      *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
      a1[8] = a2[8];
    }
  }
  else
  {
    v10 = *(_OWORD *)(a2 + 7);
    *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 7) = v10;
  }
  return a1;
}

uint64_t _s22DispositionAndLanguageVwca(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 *v9;
  uint64_t v10;
  __int128 *v11;
  __int128 *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;

  v4 = *((_QWORD *)a2 + 1);
  if (*(_QWORD *)(a1 + 8))
  {
    if (v4)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_1A56A27CC(a1);
      v5 = *((_QWORD *)a2 + 4);
      v6 = a2[1];
      *(_OWORD *)a1 = *a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(_QWORD *)(a1 + 32) = v5;
    }
  }
  else if (v4)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
    *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
    *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    v7 = *a2;
    v8 = a2[1];
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    *(_OWORD *)a1 = v7;
    *(_OWORD *)(a1 + 16) = v8;
  }
  v9 = (__int128 *)(a1 + 40);
  v11 = (__int128 *)((char *)a2 + 40);
  v10 = *((_QWORD *)a2 + 5);
  if (!*(_QWORD *)(a1 + 40))
  {
    if (v10)
    {
      *(_QWORD *)(a1 + 40) = v10;
      v14 = *((_QWORD *)a2 + 8);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      if (!v14)
      {
        v15 = a2[3];
        *(_QWORD *)(a1 + 64) = *((_QWORD *)a2 + 8);
        *(_OWORD *)(a1 + 48) = v15;
        return a1;
      }
LABEL_18:
      *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
      *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
      *(_QWORD *)(a1 + 64) = *((_QWORD *)a2 + 8);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      return a1;
    }
    v17 = *v11;
    *(_OWORD *)(a1 + 56) = *(__int128 *)((char *)a2 + 56);
LABEL_22:
    *v9 = v17;
    return a1;
  }
  if (!v10)
  {
    sub_1A56A2834(a1 + 40);
    v16 = *(__int128 *)((char *)a2 + 56);
    *v9 = *v11;
    *(_OWORD *)(a1 + 56) = v16;
    return a1;
  }
  *(_QWORD *)(a1 + 40) = v10;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v9 = (__int128 *)(a1 + 48);
  v12 = a2 + 3;
  v13 = *((_QWORD *)a2 + 8);
  if (!*(_QWORD *)(a1 + 64))
  {
    if (v13)
      goto LABEL_18;
    v17 = *v12;
    *(_QWORD *)(a1 + 64) = *((_QWORD *)a2 + 8);
    goto LABEL_22;
  }
  if (v13)
  {
    *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
    *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 64) = *((_QWORD *)a2 + 8);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1A56A2800(a1 + 48);
    v18 = *((_QWORD *)a2 + 8);
    *v9 = *v12;
    *(_QWORD *)(a1 + 64) = v18;
  }
  return a1;
}

uint64_t sub_1A56A27CC(uint64_t a1)
{
  _s11DispositionVwxx();
  return a1;
}

uint64_t sub_1A56A2800(uint64_t a1)
{
  _s21LocationAndExtensionsVwxx();
  return a1;
}

uint64_t sub_1A56A2834(uint64_t a1)
{
  _s16LanguageLocationVwxx(a1);
  return a1;
}

void *__swift_memcpy72_8_1(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x48uLL);
}

uint64_t _s22DispositionAndLanguageVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(_QWORD *)(a2 + 8);
    if (v4)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v4;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      swift_release();
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      swift_release();
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      swift_release();
      goto LABEL_6;
    }
    sub_1A56A27CC(a1);
  }
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
LABEL_6:
  v6 = *(_QWORD *)(a2 + 40);
  if (!*(_QWORD *)(a1 + 40))
  {
LABEL_12:
    v9 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v9;
    return a1;
  }
  if (!v6)
  {
    sub_1A56A2834(a1 + 40);
    goto LABEL_12;
  }
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 64))
  {
LABEL_14:
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    return a1;
  }
  v7 = *(_QWORD *)(a2 + 64);
  if (!v7)
  {
    sub_1A56A2800(a1 + 48);
    goto LABEL_14;
  }
  v8 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s22DispositionAndLanguageVwet(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 72))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s22DispositionAndLanguageVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 72) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for BodyStructure.DispositionAndLanguage()
{
  return &type metadata for BodyStructure.DispositionAndLanguage;
}

uint64_t OUTLINED_FUNCTION_0_33()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1A552396C(v1, v0);
}

uint64_t OUTLINED_FUNCTION_1_23()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_1A55239BC(v0, v1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_2_29(uint64_t a1, uint64_t a2)
{
  return sub_1A552396C(a1, a2);
}

uint64_t OUTLINED_FUNCTION_3_22()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1A5524450(v1, v0);
}

uint64_t OUTLINED_FUNCTION_4_20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_1A55239BC(v3, v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_5_15()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_1A55244A0(v0, v1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_6_17()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_7_16()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_8_10()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_9_18()
{
  uint64_t v0;

  return v0;
}

uint64_t static BodyStructure.Encoding.sevenBit.getter()
{
  return OUTLINED_FUNCTION_0_34();
}

uint64_t BodyStructure.Encoding.init(_:)()
{
  uint64_t v0;

  v0 = sub_1A594B4B4();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t static BodyStructure.Encoding.eightBit.getter()
{
  return OUTLINED_FUNCTION_0_34();
}

uint64_t static BodyStructure.Encoding.binary.getter()
{
  return OUTLINED_FUNCTION_1_24();
}

uint64_t static BodyStructure.Encoding.base64.getter()
{
  return OUTLINED_FUNCTION_1_24();
}

uint64_t static BodyStructure.Encoding.quotedPrintable.getter()
{
  return sub_1A594B4B4();
}

uint64_t BodyStructure.Encoding.debugDescription.getter(uint64_t a1)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t BodyStructure.Encoding.hash(into:)()
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_2_22();
  return swift_bridgeObjectRelease();
}

uint64_t static BodyStructure.Encoding.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4)
    return 1;
  else
    return sub_1A594CD38();
}

uint64_t BodyStructure.Encoding.hashValue.getter()
{
  sub_1A594CE64();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_2_22();
  swift_bridgeObjectRelease();
  return sub_1A594CED0();
}

uint64_t sub_1A56A2C84()
{
  uint64_t *v0;

  return BodyStructure.Encoding.debugDescription.getter(*v0);
}

uint64_t sub_1A56A2C8C()
{
  return BodyStructure.Encoding.hashValue.getter();
}

uint64_t sub_1A56A2C94()
{
  return BodyStructure.Encoding.hash(into:)();
}

uint64_t sub_1A56A2C9C(uint64_t *a1, uint64_t *a2)
{
  return static BodyStructure.Encoding.__derived_struct_equals(_:_:)(*a1, a1[1], *a2, a2[1]);
}

unint64_t sub_1A56A2CB8()
{
  unint64_t result;

  result = qword_1EE7A95E0;
  if (!qword_1EE7A95E0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for BodyStructure.Encoding, &type metadata for BodyStructure.Encoding);
    atomic_store(result, (unint64_t *)&qword_1EE7A95E0);
  }
  return result;
}

ValueMetadata *type metadata accessor for BodyStructure.Encoding()
{
  return &type metadata for BodyStructure.Encoding;
}

uint64_t OUTLINED_FUNCTION_0_34()
{
  return sub_1A594B4B4();
}

uint64_t OUTLINED_FUNCTION_1_24()
{
  return sub_1A594B4B4();
}

uint64_t BodyStructure.Fields.parameters.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_retain();
  swift_retain();
  swift_retain();
  return v1;
}

void BodyStructure.Fields.parameters.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  swift_release();
  swift_release();
  swift_release();
  *v3 = a1;
  v3[1] = a2;
  v3[2] = a3;
  OUTLINED_FUNCTION_8_1();
}

double (*BodyStructure.Fields.parameters.modify())(_QWORD)
{
  return nullsub_1;
}

void BodyStructure.Fields.id.getter()
{
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_1();
}

void BodyStructure.Fields.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  OUTLINED_FUNCTION_8_1();
}

double (*BodyStructure.Fields.id.modify())(_QWORD)
{
  return nullsub_1;
}

void BodyStructure.Fields.contentDescription.getter()
{
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_1();
}

void BodyStructure.Fields.contentDescription.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  OUTLINED_FUNCTION_8_1();
}

double (*BodyStructure.Fields.contentDescription.modify())(_QWORD)
{
  return nullsub_1;
}

void BodyStructure.Fields.encoding.getter()
{
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_1();
}

void BodyStructure.Fields.encoding.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  OUTLINED_FUNCTION_8_1();
}

double (*BodyStructure.Fields.encoding.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t BodyStructure.Fields.octetCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 72);
}

uint64_t BodyStructure.Fields.octetCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = result;
  return result;
}

double (*BodyStructure.Fields.octetCount.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t BodyStructure.Fields.init(parameters:id:contentDescription:encoding:octetCount:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  a9[8] = a10;
  a9[9] = a11;
  return result;
}

uint64_t BodyStructure.Fields.hash(into:)()
{
  _QWORD *v0;

  swift_retain();
  swift_retain();
  swift_retain();
  sub_1A5693A38();
  swift_release();
  swift_release();
  swift_release();
  if (v0[4])
  {
    OUTLINED_FUNCTION_30_2();
    OUTLINED_FUNCTION_69();
    OUTLINED_FUNCTION_5_16();
    OUTLINED_FUNCTION_55();
  }
  else
  {
    OUTLINED_FUNCTION_35_3();
  }
  if (v0[6])
  {
    OUTLINED_FUNCTION_30_2();
    OUTLINED_FUNCTION_69();
    OUTLINED_FUNCTION_5_16();
    OUTLINED_FUNCTION_55();
  }
  else
  {
    OUTLINED_FUNCTION_35_3();
  }
  if (v0[8])
  {
    OUTLINED_FUNCTION_30_2();
    OUTLINED_FUNCTION_69();
    OUTLINED_FUNCTION_5_16();
    OUTLINED_FUNCTION_55();
  }
  else
  {
    OUTLINED_FUNCTION_35_3();
  }
  return sub_1A594CE88();
}

BOOL static BodyStructure.Fields.__derived_struct_equals(_:_:)(_QWORD *a1, _QWORD *a2)
{
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char v9;
  _BOOL8 result;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  sub_1A5690C88();
  if ((v4 & 1) == 0)
    return 0;
  sub_1A5691350();
  if ((v5 & 1) == 0)
    return 0;
  v6 = a1[4];
  v7 = a2[4];
  if (!v6)
  {
    if (v7)
      return 0;
    goto LABEL_12;
  }
  if (!v7)
    return 0;
  v8 = a1[3] == a2[3] && v6 == v7;
  if (v8 || (v9 = OUTLINED_FUNCTION_1_16(), result = 0, (v9 & 1) != 0))
  {
LABEL_12:
    v11 = a1[6];
    v12 = a2[6];
    if (v11)
    {
      if (!v12)
        return 0;
      if (a1[5] != a2[5] || v11 != v12)
      {
        v14 = OUTLINED_FUNCTION_1_16();
        result = 0;
        if ((v14 & 1) == 0)
          return result;
      }
    }
    else if (v12)
    {
      return 0;
    }
    v15 = a1[8];
    v16 = a2[8];
    if (v15)
    {
      if (v16)
      {
        if (a1[7] != a2[7] || v15 != v16)
        {
          v18 = OUTLINED_FUNCTION_1_16();
          result = 0;
          if ((v18 & 1) == 0)
            return result;
        }
        return a1[9] == a2[9];
      }
    }
    else if (!v16)
    {
      return a1[9] == a2[9];
    }
    return 0;
  }
  return result;
}

uint64_t BodyStructure.Fields.hashValue.getter()
{
  sub_1A594CE64();
  BodyStructure.Fields.hash(into:)();
  return sub_1A594CED0();
}

uint64_t sub_1A56A3164()
{
  sub_1A594CE64();
  BodyStructure.Fields.hash(into:)();
  return sub_1A594CED0();
}

void sub_1A56A31A0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::Int v7;
  char v8;
  int v9;
  Swift::Int v10;
  Swift::Int v11;
  Swift::Int v12;
  Swift::Int v13;
  char v14;
  int v15;
  BOOL v16;
  int v17;
  BOOL v18;
  Swift::Int v19;
  Swift::Int v20;
  char v21;
  int v22;
  Swift::Int v23;
  Swift::Int v24;
  Swift::Int v25;
  Swift::Int v26;
  char v27;
  int v28;
  int v29;
  Swift::Int v30;
  Swift::Int v31;
  char v32;
  int v33;
  Swift::Int v34;
  Swift::Int v35;
  Swift::Int v36;
  Swift::Int v37;
  char v38;
  char v39;
  int v40;
  Swift::UInt32 v41;
  Swift::Int v42;
  char v43;
  int v44;
  Swift::Int v45;
  Swift::Int v46;
  Swift::Int v47;
  char v48;
  char v49;
  int v50;
  int v51;
  _BYTE v52[16];
  _BYTE v53[16];
  _QWORD v54[2];
  _QWORD v55[2];
  Swift::String v56;
  Swift::String v57;
  Swift::String v58;

  v2 = v1;
  sub_1A56A46D4(*a1, a1[1], a1[2]);
  v5 = v4;
  v6 = v1 + 8;
  sub_1A56814E0(32, 0xE100000000000000, v1 + 8, *(_DWORD *)(v1 + 20));
  if ((v8 & 1) != 0)
    v7 = OUTLINED_FUNCTION_0_35();
  v9 = *(_DWORD *)(v1 + 20);
  if (__CFADD__(v9, (_DWORD)v7))
  {
    __break(1u);
    goto LABEL_43;
  }
  *(_DWORD *)(v1 + 20) = v9 + v7;
  v10 = v5 + v7;
  if (__OFADD__(v5, v7))
  {
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  sub_1A56A3860((uint64_t)(a1 + 3), (uint64_t)v53);
  sub_1A56A3860((uint64_t)v53, (uint64_t)v54);
  if (v54[1])
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    OUTLINED_FUNCTION_6_18();
    v12 = v11;
    sub_1A5503278((uint64_t)v53);
  }
  else
  {
    OUTLINED_FUNCTION_3_23(4999502, 0xE300000000000000);
    if ((v14 & 1) != 0)
      v13 = OUTLINED_FUNCTION_1_25(4999502, 0xE300000000000000);
    v12 = v13;
    v15 = *(_DWORD *)(v1 + 20);
    v16 = __CFADD__(v15, (_DWORD)v13);
    v17 = v15 + v13;
    if (v16)
      goto LABEL_53;
    *(_DWORD *)(v1 + 20) = v17;
  }
  v18 = __OFADD__(v10, v12);
  v19 = v10 + v12;
  if (v18)
    goto LABEL_44;
  OUTLINED_FUNCTION_3_23(32, 0xE100000000000000);
  if ((v21 & 1) != 0)
    v20 = OUTLINED_FUNCTION_0_35();
  v22 = *(_DWORD *)(v1 + 20);
  if (__CFADD__(v22, (_DWORD)v20))
    goto LABEL_45;
  *(_DWORD *)(v1 + 20) = v22 + v20;
  v23 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  sub_1A56A3860((uint64_t)(a1 + 5), (uint64_t)v52);
  sub_1A56A3860((uint64_t)v52, (uint64_t)v55);
  if (v55[1])
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    OUTLINED_FUNCTION_6_18();
    v25 = v24;
    sub_1A5503278((uint64_t)v52);
  }
  else
  {
    OUTLINED_FUNCTION_3_23(4999502, 0xE300000000000000);
    if ((v27 & 1) != 0)
      v26 = OUTLINED_FUNCTION_1_25(4999502, 0xE300000000000000);
    v25 = v26;
    v28 = *(_DWORD *)(v1 + 20);
    v16 = __CFADD__(v28, (_DWORD)v26);
    v29 = v28 + v26;
    if (v16)
      goto LABEL_54;
    *(_DWORD *)(v1 + 20) = v29;
  }
  v18 = __OFADD__(v23, v25);
  v30 = v23 + v25;
  if (v18)
    goto LABEL_47;
  OUTLINED_FUNCTION_3_23(32, 0xE100000000000000);
  if ((v32 & 1) != 0)
    v31 = OUTLINED_FUNCTION_0_35();
  v33 = *(_DWORD *)(v1 + 20);
  v34 = (v33 + v31);
  if (__CFADD__(v33, (_DWORD)v31))
    goto LABEL_48;
  *(_DWORD *)(v1 + 20) = v34;
  v35 = v30 + v31;
  if (__OFADD__(v30, v31))
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  if (a1[8])
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594B5F8();
    OUTLINED_FUNCTION_41();
    sub_1A594B5F8();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    OUTLINED_FUNCTION_10_14(34, 0xE100000000000000);
    v37 = v36;
    v39 = v38;
    OUTLINED_FUNCTION_41();
    if ((v39 & 1) != 0)
    {
      v56._countAndFlagsBits = 34;
      v56._object = (void *)0xE100000000000000;
      v37 = OUTLINED_FUNCTION_104(v56, v34);
    }
    OUTLINED_FUNCTION_41();
    v40 = *(_DWORD *)(v2 + 20);
    v41 = v40 + v37;
    if (!__CFADD__(v40, (_DWORD)v37))
      goto LABEL_36;
    __break(1u);
  }
  OUTLINED_FUNCTION_10_14(4999502, 0xE300000000000000);
  if ((v43 & 1) != 0)
  {
    v57._countAndFlagsBits = 4999502;
    v57._object = (void *)0xE300000000000000;
    v42 = OUTLINED_FUNCTION_104(v57, v34);
  }
  v37 = v42;
  v44 = *(_DWORD *)(v2 + 20);
  v41 = v44 + v42;
  if (__CFADD__(v44, (_DWORD)v42))
    goto LABEL_55;
LABEL_36:
  *(_DWORD *)(v2 + 20) = v41;
  v45 = v35 + v37;
  if (__OFADD__(v35, v37))
  {
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  sub_1A594CC9C();
  sub_1A594B5F8();
  OUTLINED_FUNCTION_72();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A56814E0(32, 0xE100000000000000, v6, v41);
  v47 = v46;
  v49 = v48;
  OUTLINED_FUNCTION_72();
  if ((v49 & 1) != 0)
  {
    v58._countAndFlagsBits = 32;
    v58._object = (void *)0xE100000000000000;
    v47 = OUTLINED_FUNCTION_104(v58, v41);
  }
  OUTLINED_FUNCTION_72();
  v50 = *(_DWORD *)(v2 + 20);
  v16 = __CFADD__(v50, (_DWORD)v47);
  v51 = v50 + v47;
  if (v16)
    goto LABEL_51;
  *(_DWORD *)(v2 + 20) = v51;
  if (__OFADD__(v45, v47))
  {
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
  }
}

unint64_t sub_1A56A354C()
{
  unint64_t result;

  result = qword_1EE7A95E8;
  if (!qword_1EE7A95E8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for BodyStructure.Fields, &type metadata for BodyStructure.Fields);
    atomic_store(result, (unint64_t *)&qword_1EE7A95E8);
  }
  return result;
}

uint64_t _s6FieldsVwxx()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s6FieldsVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  swift_retain();
  swift_retain();
  swift_retain();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

_QWORD *_s6FieldsVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  a1[4] = a2[4];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  return a1;
}

void *__swift_memcpy80_8_1(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x50uLL);
}

uint64_t _s6FieldsVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

uint64_t _s6FieldsVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 80))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s6FieldsVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BodyStructure.Fields()
{
  return &type metadata for BodyStructure.Fields;
}

uint64_t sub_1A56A3860(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE7993B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

Swift::Int OUTLINED_FUNCTION_0_35()
{
  Swift::Int v0;
  Swift::String v1;

  v1._countAndFlagsBits = 32;
  v1._object = (void *)0xE100000000000000;
  return ByteBuffer._setStringSlowpath(_:at:)(v1, v0);
}

Swift::Int OUTLINED_FUNCTION_1_25(uint64_t a1, uint64_t a2)
{
  Swift::Int v2;

  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v2);
}

void OUTLINED_FUNCTION_3_23(uint64_t a1, unint64_t a2)
{
  Swift::UInt32 v2;
  uint64_t v3;

  sub_1A56814E0(a1, a2, v3, v2);
}

uint64_t OUTLINED_FUNCTION_5_16()
{
  return sub_1A594B1D8();
}

void OUTLINED_FUNCTION_6_18()
{
  unint64_t v0;
  unint64_t v1;

  sub_1A56BA418(v0, v1);
}

void OUTLINED_FUNCTION_10_14(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  Swift::UInt32 v3;

  sub_1A56814E0(a1, a2, v2, v3);
}

uint64_t BodyStructure.LanguageLocation.languages.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

double (*BodyStructure.LanguageLocation.languages.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t BodyStructure.LanguageLocation.location.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1A5523A00(a2, a3, a4);
  return a2;
}

uint64_t BodyStructure.LanguageLocation.location.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1A55244E4(v3[1], v3[2], v3[3]);
  v3[1] = a1;
  v3[2] = a2;
  v3[3] = a3;
  return result;
}

double (*BodyStructure.LanguageLocation.location.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t BodyStructure.LanguageLocation.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A569428C();
  swift_bridgeObjectRelease();
  if (!a5)
    return OUTLINED_FUNCTION_35_3();
  OUTLINED_FUNCTION_30_2();
  if (a4)
  {
    OUTLINED_FUNCTION_30_2();
    OUTLINED_FUNCTION_1_26();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594B1D8();
  }
  else
  {
    OUTLINED_FUNCTION_35_3();
    sub_1A5523A00(a3, 0, a5);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  v9 = *(_QWORD *)(a5 + 16);
  sub_1A594CE88();
  if (v9)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v10 = (_BYTE *)(a5 + 55);
    while (1)
    {
      v11 = *(_QWORD *)(v10 - 23);
      if ((*v10 & 1) != 0)
      {
        sub_1A594CE88();
        sub_1A594CE88();
      }
      else
      {
        v12 = *(_QWORD *)(v10 - 15);
        v13 = *(unsigned int *)(v10 - 7) | ((unint64_t)(*(unsigned __int16 *)(v10 - 3) | (*(v10 - 1) << 16)) << 32);
        sub_1A594CE88();
        if (v11)
        {
          OUTLINED_FUNCTION_30_2();
          result = swift_beginAccess();
          if (HIDWORD(v12) < v12)
          {
            __break(1u);
            return result;
          }
          sub_1A594CE70();
        }
        else
        {
          OUTLINED_FUNCTION_35_3();
          sub_1A56974C4(0, v12, v13, 0);
        }
      }
      v10 += 24;
      if (!--v9)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_17;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_17:
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_0_36();
}

uint64_t static BodyStructure.LanguageLocation.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v14;
  char v15;
  char v16;

  sub_1A5689E98();
  if ((v14 & 1) != 0)
  {
    if (a4)
    {
      if (a8)
      {
        sub_1A5523A00(a6, a7, a8);
        OUTLINED_FUNCTION_1_26();
        static BodyStructure.LocationAndExtensions.__derived_struct_equals(_:_:)(a2, a3, a4, a6, a7);
        v16 = v15;
        sub_1A55244E4(a6, a7, a8);
        OUTLINED_FUNCTION_0_36();
        if ((v16 & 1) != 0)
          return 1;
      }
    }
    else if (!a8)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t BodyStructure.LanguageLocation.hashValue.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _BYTE v9[72];

  sub_1A594CE64();
  BodyStructure.LanguageLocation.hash(into:)((uint64_t)v9, a1, a2, a3, a4);
  return sub_1A594CED0();
}

uint64_t sub_1A56A3CB4()
{
  uint64_t *v0;

  return BodyStructure.LanguageLocation.hashValue.getter(*v0, v0[1], v0[2], v0[3]);
}

uint64_t sub_1A56A3CC0(uint64_t a1)
{
  uint64_t *v1;

  return BodyStructure.LanguageLocation.hash(into:)(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1A56A3CCC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[72];

  v1 = *v0;
  v2 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  sub_1A594CE64();
  BodyStructure.LanguageLocation.hash(into:)((uint64_t)v6, v1, v2, v4, v3);
  return sub_1A594CED0();
}

uint64_t sub_1A56A3D24(uint64_t *a1, uint64_t *a2)
{
  return static BodyStructure.LanguageLocation.__derived_struct_equals(_:_:)(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

unint64_t sub_1A56A3D44()
{
  unint64_t result;

  result = qword_1EE7A95F0;
  if (!qword_1EE7A95F0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for BodyStructure.LanguageLocation, &type metadata for BodyStructure.LanguageLocation);
    atomic_store(result, (unint64_t *)&qword_1EE7A95F0);
  }
  return result;
}

uint64_t _s16LanguageLocationVwxx(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 24);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *_s16LanguageLocationVwcp(_QWORD *a1, _QWORD *a2)
{
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;

  *a1 = *a2;
  v4 = a1 + 1;
  v5 = a2[3];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v5)
  {
    v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    a1[3] = v5;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    *v4 = *(_OWORD *)(a2 + 1);
    a1[3] = a2[3];
  }
  return a1;
}

_QWORD *_s16LanguageLocationVwca(_QWORD *a1, _QWORD *a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  *a1 = *a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = a1 + 1;
  v5 = a2 + 1;
  v6 = a2[3];
  if (a1[3])
  {
    if (v6)
    {
      a1[1] = a2[1];
      a1[2] = a2[2];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      a1[3] = a2[3];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1A56A2800((uint64_t)(a1 + 1));
      v7 = a2[3];
      *v4 = *v5;
      a1[3] = v7;
    }
  }
  else if (v6)
  {
    a1[1] = a2[1];
    a1[2] = a2[2];
    a1[3] = a2[3];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    v8 = *v5;
    a1[3] = a2[3];
    *v4 = v8;
  }
  return a1;
}

uint64_t _s16LanguageLocationVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 24))
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 24);
  if (!v4)
  {
    sub_1A56A2800(a1 + 8);
LABEL_5:
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    return a1;
  }
  v5 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for BodyStructure.LanguageLocation()
{
  return &type metadata for BodyStructure.LanguageLocation;
}

uint64_t OUTLINED_FUNCTION_0_36()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_1A55244E4(v2, v1, v0);
}

uint64_t OUTLINED_FUNCTION_1_26()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_1A5523A00(v2, v1, v0);
}

uint64_t BodyStructure.LocationAndExtensions.location.getter(uint64_t a1)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t BodyStructure.LocationAndExtensions.location.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

double (*BodyStructure.LocationAndExtensions.location.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t BodyStructure.LocationAndExtensions.extensions.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t BodyStructure.LocationAndExtensions.extensions.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

double (*BodyStructure.LocationAndExtensions.extensions.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t BodyStructure.LocationAndExtensions.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t result;
  _BYTE *i;
  uint64_t v9;

  if (a3)
  {
    v4 = a2;
    OUTLINED_FUNCTION_30_2();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    OUTLINED_FUNCTION_2_24();
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_35_3();
  }
  v6 = *(_QWORD *)(a4 + 16);
  result = sub_1A594CE88();
  if (v6)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    for (i = (_BYTE *)(a4 + 55); ; i += 24)
    {
      v9 = *(_QWORD *)(i - 23);
      if ((*i & 1) != 0)
      {
        sub_1A594CE88();
        sub_1A594CE88();
      }
      else
      {
        OUTLINED_FUNCTION_2_30();
        sub_1A594CE88();
        if (v9)
        {
          OUTLINED_FUNCTION_30_2();
          result = OUTLINED_FUNCTION_176();
          if (HIDWORD(v4) < v4)
          {
            __break(1u);
            return result;
          }
          OUTLINED_FUNCTION_1_27();
          sub_1A594CE70();
        }
        else
        {
          OUTLINED_FUNCTION_35_3();
          OUTLINED_FUNCTION_0_37();
        }
      }
      if (!--v6)
        return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void static BodyStructure.LocationAndExtensions.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  BOOL v5;

  if (a2)
  {
    if (a5)
    {
      v5 = a1 == a4 && a2 == a5;
      if (v5 || (sub_1A594CD38() & 1) != 0)
        goto LABEL_8;
    }
  }
  else if (!a5)
  {
LABEL_8:
    sub_1A56900DC();
  }
}

uint64_t BodyStructure.LocationAndExtensions.hashValue.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *i;
  uint64_t v8;
  uint64_t result;

  sub_1A594CE64();
  if (a2)
  {
    OUTLINED_FUNCTION_30_2();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    OUTLINED_FUNCTION_2_24();
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_35_3();
  }
  v6 = *(_QWORD *)(a3 + 16);
  sub_1A594CE88();
  if (!v6)
    return sub_1A594CED0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  for (i = (_BYTE *)(a3 + 55); ; i += 24)
  {
    v8 = *(_QWORD *)(i - 23);
    if ((*i & 1) == 0)
      break;
    sub_1A594CE88();
    sub_1A594CE88();
LABEL_12:
    if (!--v6)
    {
      swift_bridgeObjectRelease();
      return sub_1A594CED0();
    }
  }
  OUTLINED_FUNCTION_2_30();
  sub_1A594CE88();
  if (!v8)
  {
    OUTLINED_FUNCTION_35_3();
    OUTLINED_FUNCTION_0_37();
    goto LABEL_12;
  }
  OUTLINED_FUNCTION_30_2();
  result = OUTLINED_FUNCTION_176();
  if (HIDWORD(a1) >= a1)
  {
    OUTLINED_FUNCTION_1_27();
    sub_1A594CE70();
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A56A4350()
{
  uint64_t *v0;

  return BodyStructure.LocationAndExtensions.hashValue.getter(*v0, v0[1], v0[2]);
}

uint64_t sub_1A56A435C(uint64_t a1)
{
  uint64_t *v1;

  return BodyStructure.LocationAndExtensions.hash(into:)(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_1A56A4368()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *i;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 16);
  sub_1A594CE64();
  sub_1A594CE94();
  if (v1)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594B1D8();
    swift_bridgeObjectRelease();
  }
  v3 = *(_QWORD *)(v2 + 16);
  sub_1A594CE88();
  if (!v3)
    return sub_1A594CED0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  for (i = (_BYTE *)(v2 + 55); ; i += 24)
  {
    v5 = *(_QWORD *)(i - 23);
    if ((*i & 1) == 0)
      break;
    sub_1A594CE88();
    sub_1A594CE88();
LABEL_11:
    if (!--v3)
    {
      swift_bridgeObjectRelease();
      return sub_1A594CED0();
    }
  }
  v6 = *(_QWORD *)(i - 15);
  v7 = *(unsigned int *)(i - 7) | ((unint64_t)(*(unsigned __int16 *)(i - 3) | (*(i - 1) << 16)) << 32);
  sub_1A594CE88();
  if (!v5)
  {
    sub_1A594CE94();
    sub_1A56974C4(0, v6, v7, 0);
    goto LABEL_11;
  }
  sub_1A594CE94();
  result = swift_beginAccess();
  if (HIDWORD(v6) >= v6)
  {
    sub_1A594CE70();
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

void sub_1A56A44F4(uint64_t *a1, uint64_t *a2)
{
  static BodyStructure.LocationAndExtensions.__derived_struct_equals(_:_:)(*a1, a1[1], a1[2], *a2, a2[1]);
}

unint64_t sub_1A56A4514()
{
  unint64_t result;

  result = qword_1EE7A95F8;
  if (!qword_1EE7A95F8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for BodyStructure.LocationAndExtensions, &type metadata for BodyStructure.LocationAndExtensions);
    atomic_store(result, (unint64_t *)&qword_1EE7A95F8);
  }
  return result;
}

_QWORD *sub_1A56A4554(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

_QWORD *_s21LocationAndExtensionsVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s21LocationAndExtensionsVwta(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s21LocationAndExtensionsVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for BodyStructure.LocationAndExtensions()
{
  return &type metadata for BodyStructure.LocationAndExtensions;
}

uint64_t OUTLINED_FUNCTION_0_37()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1A56974C4(0, v0, v1, 0);
}

uint64_t OUTLINED_FUNCTION_1_27()
{
  uint64_t v0;
  unsigned int v1;
  unint64_t v2;

  return v0 + ((v2 >> 24) & 0xFFFF00 | BYTE6(v2)) + v1;
}

void sub_1A56A46D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  Swift::Int v4;
  int v5;
  char v6;
  Swift::String v7;
  int v8;
  BOOL v9;
  int v10;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_1A5665AB4();
  }
  else
  {
    v4 = *(unsigned int *)(v3 + 20);
    sub_1A56814E0(4999502, 0xE300000000000000, v3 + 8, *(_DWORD *)(v3 + 20));
    if ((v6 & 1) != 0)
    {
      v7._countAndFlagsBits = 4999502;
      v7._object = (void *)0xE300000000000000;
      v5 = ByteBuffer._setStringSlowpath(_:at:)(v7, v4);
    }
    v8 = *(_DWORD *)(v3 + 20);
    v9 = __CFADD__(v8, v5);
    v10 = v8 + v5;
    if (v9)
      __break(1u);
    else
      *(_DWORD *)(v3 + 20) = v10;
  }
}

BOOL static BodyStructure.Multipart.__derived_struct_equals(_:_:)(_QWORD *a1, _QWORD *a2)
{
  char v4;
  BOOL v5;
  char v6;
  _BOOL8 result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD v97[13];

  sub_1A568E204();
  if ((v4 & 1) == 0)
    return 0;
  v5 = a1[1] == a2[1] && a1[2] == a2[2];
  if (v5 || (v6 = sub_1A594CD38(), result = 0, (v6 & 1) != 0))
  {
    v8 = a1[3];
    v9 = a1[4];
    v10 = a1[5];
    v11 = a1[6];
    v12 = a1[7];
    v13 = a1[8];
    v14 = a1[9];
    v15 = a1[10];
    v16 = a1[11];
    v17 = a1[12];
    v18 = a1[13];
    v19 = a1[14];
    v20 = a2[3];
    v21 = a2[4];
    v22 = a2[5];
    v23 = a2[6];
    v25 = a2[7];
    v24 = a2[8];
    v27 = a2[9];
    v26 = a2[10];
    v28 = a2[11];
    v29 = a2[12];
    v31 = a2[13];
    v30 = a2[14];
    if (v9)
    {
      if (v21)
      {
        v97[0] = v8;
        v97[1] = v9;
        v97[2] = v10;
        v97[3] = v11;
        v97[4] = v12;
        v97[5] = v13;
        v97[6] = v14;
        v97[7] = v15;
        v97[8] = v16;
        v97[9] = v17;
        v97[10] = v18;
        v97[11] = v19;
        v73 = v20;
        v74 = v21;
        v75 = v22;
        v76 = v23;
        v77 = v25;
        v78 = v24;
        v79 = v27;
        v80 = v26;
        v81 = v28;
        v82 = v29;
        v83 = v31;
        v84 = v30;
        v56 = v19;
        v64 = v8;
        v65 = v10;
        v58 = v9;
        v70 = v15;
        v66 = v11;
        v67 = v12;
        v68 = v13;
        v69 = v14;
        v60 = v19;
        v61 = v18;
        v62 = v17;
        v63 = v16;
        v32 = v30;
        v33 = v28;
        v34 = v29;
        sub_1A5523A30(v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v56);
        OUTLINED_FUNCTION_2_31();
        sub_1A5523A30(v35, v36, v37, v38, v39, v40, v41, v42, v33, v34, v31, v32);
        v59 = static BodyStructure.Multipart.Extension.__derived_struct_equals(_:_:)(v97, &v73);
        OUTLINED_FUNCTION_2_31();
        sub_1A5524514(v43, v44, v45, v46, v47, v48, v49, v50, v33, v34, v31, v32);
        sub_1A5524514(v64, v58, v65, v66, v67, v68, v69, v70, v63, v62, v61, v60);
        return v59;
      }
    }
    else if (!v21)
    {
      return 1;
    }
    v73 = v8;
    v74 = v9;
    v75 = v10;
    v76 = v11;
    v77 = v12;
    v78 = v13;
    v79 = v14;
    v80 = v15;
    v81 = v16;
    v82 = v17;
    v83 = v18;
    v84 = v19;
    v85 = v20;
    v86 = v21;
    v87 = v22;
    v88 = v23;
    v89 = v25;
    v90 = v24;
    v91 = v27;
    v92 = v26;
    v93 = v28;
    v94 = v29;
    v95 = v31;
    v96 = v30;
    v57 = v19;
    v51 = v31;
    v71 = v27;
    v72 = v26;
    v52 = v22;
    v53 = v20;
    v54 = v28;
    v55 = v29;
    sub_1A5523A30(v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v57);
    sub_1A5523A30(v53, v21, v52, v23, v25, v24, v71, v72, v54, v55, v51, v30);
    sub_1A5691E24((uint64_t)&v73);
    return 0;
  }
  return result;
}

void sub_1A56A49C8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int v10;
  Swift::Int v11;
  char v12;
  Swift::String v13;
  uint64_t v14;
  int v15;
  BOOL v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __n128 *v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  Swift::Int v54;
  Swift::Int v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  Swift::Int v75;
  __int128 v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  Swift::Int v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  Swift::Int v96;
  char v97;
  Swift::String v98;
  int v99;
  int v100;
  Swift::Int v101;
  uint64_t v102;
  uint64_t v103;
  Swift::Int v104;
  Swift::Int v105;
  char v106;
  Swift::String v107;
  Swift::Int v108;
  int v109;
  int v110;
  Swift::Int v111;
  Swift::Int v112;
  char v113;
  Swift::String v114;
  Swift::Int v115;
  int v116;
  int v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  Swift::Int v139;
  char v140;
  Swift::String v141;
  Swift::Int v142;
  int v143;
  int v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  Swift::Int v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  _QWORD *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  __int128 v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  Swift::Int v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char v185[184];
  _BYTE v186[192];
  uint64_t v187[23];
  uint64_t v188;
  _QWORD v189[11];
  uint64_t v190[10];
  _BYTE __dst[328];
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  __int128 v195;
  __int128 v196;
  __int128 v197;
  __int128 v198;
  uint64_t v199;
  __int128 v200;
  uint64_t v201;
  __int128 v202;
  __int128 v203;
  __int128 v204;
  __int128 v205;
  __int128 v206;
  __int128 v207;

  v2 = v1;
  v160 = a1;
  v3 = *a1;
  v188 = v3;
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v5 = (char *)(v3 + 32);
    v6 = v1 + 8;
    swift_bridgeObjectRetain_n();
    v7 = 0;
    v8 = 0;
    v9 = v4 - 1;
    v174 = v1 + 8;
    while (1)
    {
      sub_1A55DC3E0(v5, v187);
      v10 = *(unsigned int *)(v2 + 20);
      sub_1A55DC438((uint64_t)v187, sub_1A552370C);
      sub_1A56814E0(40, 0xE100000000000000, v6, v10);
      v183 = v8;
      if ((v12 & 1) != 0)
      {
        v13._countAndFlagsBits = 40;
        v13._object = (void *)0xE100000000000000;
        v11 = ByteBuffer._setStringSlowpath(_:at:)(v13, v10);
      }
      v14 = v11;
      v15 = *(_DWORD *)(v2 + 20);
      v16 = __CFADD__(v15, (_DWORD)v11);
      v17 = v15 + v11;
      if (v16)
      {
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
        goto LABEL_58;
      }
      *(_DWORD *)(v2 + 20) = v17;
      sub_1A55DC3E0(v187, v186);
      v180 = v9;
      v181 = v14;
      if (sub_1A55DC430((uint64_t)v186) != 1)
        break;
      nullsub_1(v186);
      v19 = *(_QWORD *)(v18 + 16);
      v200 = *(_OWORD *)v18;
      v201 = v19;
      v202 = *(_OWORD *)(v18 + 24);
      v203 = *(_OWORD *)(v18 + 40);
      v204 = *(_OWORD *)(v18 + 56);
      v205 = *(_OWORD *)(v18 + 72);
      v206 = *(_OWORD *)(v18 + 88);
      v207 = *(_OWORD *)(v18 + 104);
      OUTLINED_FUNCTION_4_21(v18, v20, v21, v22, v23, v24, v25, v26, v156, v157, v158, v159, (uint64_t)v160, v161, v162, v164, v165, v166, v167,
        v168,
        v169,
        *((uint64_t *)&v169 + 1),
        v170,
        v171,
        v173,
        v174,
        (uint64_t)v5,
        v7,
        v9,
        v14,
        v8,
        v185[0]);
      nullsub_1(v185);
      v28 = *(_QWORD *)(v27 + 24);
      v29 = *(_QWORD *)(v27 + 32);
      v30 = *(_QWORD *)(v27 + 40);
      v31 = *(_QWORD *)(v27 + 48);
      v32 = *(_QWORD *)(v27 + 56);
      v33 = *(_QWORD *)(v27 + 64);
      v170 = *(_QWORD *)(v27 + 80);
      v171 = *(_QWORD *)(v27 + 72);
      v169 = *(_OWORD *)(v27 + 88);
      v34 = *(_QWORD *)(v27 + 104);
      v35 = *(_QWORD *)(v27 + 112);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A5523A30(v28, v29, v30, v31, v32, v33, v171, v170, v169, *((uint64_t *)&v169 + 1), v34, v35);
      v36 = sub_1A56A49C8(&v200);
      OUTLINED_FUNCTION_8_11((uint64_t)v187);
      v37 = __OFADD__(v182, v36);
      v38 = v182 + v36;
      if (v37)
        goto LABEL_52;
      v5 = (char *)v176;
      v7 = v178;
      v6 = v174;
LABEL_24:
      v104 = *(unsigned int *)(v2 + 20);
      v8 = v183;
      sub_1A56814E0(41, 0xE100000000000000, v6, *(_DWORD *)(v2 + 20));
      if ((v106 & 1) != 0)
      {
        v107._countAndFlagsBits = 41;
        v107._object = (void *)0xE100000000000000;
        v105 = ByteBuffer._setStringSlowpath(_:at:)(v107, v104);
      }
      v108 = v105;
      OUTLINED_FUNCTION_8_11((uint64_t)v187);
      v109 = *(_DWORD *)(v2 + 20);
      v16 = __CFADD__(v109, (_DWORD)v108);
      v110 = v109 + v108;
      if (v16)
        goto LABEL_49;
      *(_DWORD *)(v2 + 20) = v110;
      v111 = v38 + v108;
      if (__OFADD__(v38, v108))
        goto LABEL_50;
      v37 = __OFADD__(v7, v111);
      v7 += v111;
      if (v37)
        goto LABEL_51;
      if (!v180)
      {
        sub_1A54F81BC((uint64_t)&v188);
        sub_1A54F81BC((uint64_t)&v188);
        goto LABEL_33;
      }
      v9 = v180 - 1;
      v5 += 184;
    }
    nullsub_1(v186);
    v47 = (__n128 *)v39;
    v48 = *(_QWORD *)v39;
    v49 = *(_QWORD *)v39 >> 62;
    if ((_DWORD)v49)
    {
      if ((_DWORD)v49 == 1)
      {
        memcpy(__dst, (const void *)((v48 & 0x3FFFFFFFFFFFFFFFLL) + 16), sizeof(__dst));
        OUTLINED_FUNCTION_15_15(v47[1], v47[2]);
        *(_OWORD *)(v50 + 56) = v51;
        v192 = v52;
        v193 = v53;
        sub_1A55DC438((uint64_t)v187, sub_1A552370C);
        sub_1A5692040((uint64_t)__dst);
        sub_1A56A84F0();
        v55 = v54;
        sub_1A56921B8((uint64_t)__dst);
        goto LABEL_15;
      }
      v76 = *(_OWORD *)(v39 + 32);
      v195 = *(_OWORD *)(v39 + 16);
      v196 = v76;
      v77 = *(_OWORD *)(v39 + 64);
      v197 = *(_OWORD *)(v39 + 48);
      v78 = *(_QWORD *)(v48 + 16);
      v79 = *(_QWORD *)(v48 + 24);
      v80 = *(_QWORD *)(v48 + 32);
      v81 = *(_QWORD *)(v39 + 8);
      v82 = *(_QWORD *)(v39 + 80);
      v198 = v77;
      v194 = v81;
      v199 = v82;
      OUTLINED_FUNCTION_4_21(v39, v40, v41, v42, v43, v44, v45, v46, v156, v157, v158, v159, (uint64_t)v160, v161, v162, v164, v165, v166, v167,
        v168,
        v169,
        *((uint64_t *)&v169 + 1),
        v170,
        v171,
        v173,
        v174,
        v176,
        v178,
        v9,
        v181,
        v8,
        v185[0]);
      nullsub_1(v185);
      sub_1A56974D0(v83);
      sub_1A56A88B4(v78, v79, v80, &v194);
    }
    else
    {
      OUTLINED_FUNCTION_15_15(*(__n128 *)(v39 + 16), *(__n128 *)(v39 + 32));
      v57 = v56[2];
      v58 = v56[3];
      v59 = v56[4];
      v60 = v56[5];
      v61 = v47->n128_i64[1];
      v62 = v47[5].n128_i64[0];
      *(_OWORD *)(v63 + 56) = v64;
      v190[0] = v61;
      v190[9] = v62;
      OUTLINED_FUNCTION_4_21(v65, v66, v67, v68, v69, v70, v71, v72, v156, v157, v158, v159, (uint64_t)v160, v161, v162, v164, v165, v166, v167,
        v168,
        v169,
        *((uint64_t *)&v169 + 1),
        v170,
        v171,
        v173,
        v174,
        v176,
        v178,
        v9,
        v181,
        v8,
        v185[0]);
      nullsub_1(v185);
      sub_1A56974D0(v73);
      v74 = v60;
      v6 = v174;
      sub_1A56A83FC(v57, v58, v59, v74, v190);
    }
    v55 = v75;
LABEL_15:
    v84 = v47[6].n128_i64[0];
    if (v84 == 1)
    {
      OUTLINED_FUNCTION_8_11((uint64_t)v187);
      v2 = v173;
    }
    else
    {
      *(_QWORD *)&v169 = v55;
      v176 = (uint64_t)v5;
      v178 = v7;
      v85 = v47[6].n128_i64[1];
      v87 = v47[7].n128_i64[1];
      v86 = v47[8].n128_i64[0];
      v88 = v47[8].n128_i64[1];
      v89 = v47[9].n128_i64[0];
      v90 = v47[10].n128_i64[0];
      v170 = v47[9].n128_i64[1];
      v171 = v47[7].n128_i64[0];
      v91 = v47[10].n128_i64[1];
      v168 = v47[5].n128_i64[1];
      v189[0] = v168;
      v189[1] = v84;
      v189[2] = v85;
      v189[3] = v171;
      v189[4] = v87;
      v189[5] = v86;
      v189[6] = v88;
      v189[7] = v89;
      v189[8] = v170;
      v189[9] = v90;
      v189[10] = v91;
      v2 = v173;
      v92 = *(unsigned int *)(v173 + 20);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v162 = v88;
      v164 = v91;
      v166 = v89;
      v167 = v85;
      v161 = v86;
      v165 = v90;
      sub_1A552391C(v85, v171, v87, v86, v88, v89, v170, v90, v91);
      v93 = OUTLINED_FUNCTION_3_24();
      sub_1A56814E0(v93, v94, v95, v92);
      if ((v97 & 1) != 0)
      {
        v98._countAndFlagsBits = 32;
        v98._object = (void *)0xE100000000000000;
        v96 = ByteBuffer._setStringSlowpath(_:at:)(v98, v92);
      }
      v99 = *(_DWORD *)(v173 + 20);
      v16 = __CFADD__(v99, (_DWORD)v96);
      v100 = v99 + v96;
      if (v16)
        goto LABEL_54;
      *(_DWORD *)(v173 + 20) = v100;
      v101 = v169 + v96;
      if (__OFADD__((_QWORD)v169, v96))
        goto LABEL_55;
      sub_1A56A8A54(v189);
      v103 = v102;
      sub_1A5524370(v168, v84, v85, v171, v87, v86, v162, v89, v170, v165, v91);
      OUTLINED_FUNCTION_8_11((uint64_t)v187);
      v37 = __OFADD__(v101, v103);
      v55 = v101 + v103;
      if (v37)
        goto LABEL_56;
      v5 = (char *)v176;
      v7 = v178;
      v6 = v174;
    }
    v38 = v181 + v55;
    if (__OFADD__(v181, v55))
      goto LABEL_53;
    goto LABEL_24;
  }
  v7 = 0;
LABEL_33:
  sub_1A56814E0(32, 0xE100000000000000, v2 + 8, *(_DWORD *)(v2 + 20));
  if ((v113 & 1) != 0)
  {
    v114._countAndFlagsBits = OUTLINED_FUNCTION_3_24();
    v112 = ByteBuffer._setStringSlowpath(_:at:)(v114, v115);
  }
  v116 = *(_DWORD *)(v2 + 20);
  v16 = __CFADD__(v116, (_DWORD)v112);
  v117 = v116 + v112;
  if (v16)
    goto LABEL_57;
  *(_DWORD *)(v2 + 20) = v117;
  v118 = v7 + v112;
  if (__OFADD__(v7, v112))
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  sub_1A56DAA90();
  v184 = v118 + v119;
  if (__OFADD__(v118, v119))
  {
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  v120 = v160[4];
  if (!v120)
  {
LABEL_45:
    v155 = 0;
    goto LABEL_46;
  }
  v121 = v160[5];
  v179 = v160[7];
  v122 = v2;
  v123 = v160[9];
  v172 = v160[8];
  v124 = v160[10];
  v125 = v160[11];
  v127 = v160[12];
  v126 = v160[13];
  v128 = v160[14];
  v175 = v160[6];
  v177 = *(unsigned int *)(v122 + 20);
  v187[0] = v160[3];
  v187[1] = v120;
  v187[2] = v121;
  v187[3] = v175;
  v187[4] = v179;
  v187[5] = v172;
  v187[6] = v123;
  v187[7] = v124;
  v187[8] = v125;
  v187[9] = v127;
  v187[10] = v126;
  v187[11] = v128;
  swift_retain();
  swift_retain();
  v163 = v126;
  OUTLINED_FUNCTION_9_19();
  sub_1A5523A30(v129, v130, v131, v132, v133, v134, v135, v124, v125, v127, v126, v128);
  v136 = OUTLINED_FUNCTION_3_24();
  sub_1A56814E0(v136, v137, v138, v177);
  if ((v140 & 1) != 0)
  {
    v141._countAndFlagsBits = 32;
    v141._object = (void *)0xE100000000000000;
    v139 = ByteBuffer._setStringSlowpath(_:at:)(v141, v177);
  }
  v142 = v139;
  v143 = *(_DWORD *)(v173 + 20);
  v16 = __CFADD__(v143, (_DWORD)v139);
  v144 = v143 + v139;
  if (v16)
    goto LABEL_61;
  *(_DWORD *)(v173 + 20) = v144;
  sub_1A56A58C0(v187);
  v146 = v145;
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_9_19();
  sub_1A5524514(v147, v148, v149, v150, v151, v152, v153, v154, v125, v127, v163, v128);
  v155 = v142 + v146;
  if (__OFADD__(v142, v146))
  {
    __break(1u);
    goto LABEL_45;
  }
LABEL_46:
  if (__OFADD__(v184, v155))
  {
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
  }
}

uint64_t BodyStructure.Multipart.parts.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t BodyStructure.Multipart.parts.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

double (*BodyStructure.Multipart.parts.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t BodyStructure.Multipart.mediaSubtype.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

void BodyStructure.Multipart.mediaSubtype.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  OUTLINED_FUNCTION_8_1();
}

double (*BodyStructure.Multipart.mediaSubtype.modify())(_QWORD)
{
  return nullsub_1;
}

void BodyStructure.Multipart.extension.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1A56A5A60(v1 + 24, a1, &qword_1EE796938);
}

void BodyStructure.Multipart.extension.setter(uint64_t a1)
{
  uint64_t v1;

  sub_1A56A5A8C(a1, v1 + 24, &qword_1EE796938);
}

double (*BodyStructure.Multipart.extension.modify())(_QWORD)
{
  return nullsub_1;
}

void BodyStructure.Multipart.init(parts:mediaSubtype:extension:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __n128 v10;
  __n128 v11;
  __n128 v12;
  __n128 v13;

  OUTLINED_FUNCTION_17_13();
  OUTLINED_FUNCTION_16_11(v1, v2, &qword_1EE796938, v3, v4, v5, v6, v7, v10.n128_i64[0]);
  OUTLINED_FUNCTION_6_19(v10, v11, v12, v13);
  *(_OWORD *)(v0 + 88) = v8;
  *(_OWORD *)(v0 + 104) = v9;
}

uint64_t BodyStructure.Multipart.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v3 = *(_QWORD *)v1;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A5696184(a1, v3);
  swift_bridgeObjectRelease();
  v17 = *(_OWORD *)(v1 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  sub_1A5503278((uint64_t)&v17);
  v4 = *(_QWORD *)(v1 + 32);
  if (!v4)
    return OUTLINED_FUNCTION_7_17();
  v5 = *(_QWORD *)(v1 + 112);
  v13 = *(_QWORD *)(v1 + 104);
  v14 = *(_QWORD *)(v1 + 96);
  v7 = *(_QWORD *)(v1 + 72);
  v6 = *(_QWORD *)(v1 + 80);
  v8 = *(_QWORD *)(v1 + 56);
  v9 = *(_QWORD *)(v1 + 64);
  v10 = *(_QWORD *)(v1 + 40);
  v15 = *(_QWORD *)(v1 + 48);
  v16 = *(_QWORD *)(v1 + 88);
  v18 = *(_QWORD *)(v1 + 24);
  v11 = v18;
  v19 = v4;
  v20 = v10;
  v21 = v15;
  v22 = v8;
  v23 = v9;
  v24 = v7;
  v25 = v6;
  v26 = v16;
  v27 = v14;
  v28 = v13;
  v29 = v5;
  OUTLINED_FUNCTION_7_17();
  swift_retain();
  OUTLINED_FUNCTION_11_1();
  swift_retain();
  sub_1A552391C(v15, v8, v9, v7, v6, v16, v14, v13, v5);
  BodyStructure.Multipart.Extension.hash(into:)(a1);
  return sub_1A5524514(v11, v4, v10, v15, v8, v9, v7, v6, v16, v14, v13, v5);
}

void BodyStructure.Multipart.hashValue.getter()
{
  _BYTE v0[72];

  OUTLINED_FUNCTION_15_10();
  BodyStructure.Multipart.hash(into:)((uint64_t)v0);
  sub_1A594CED0();
  OUTLINED_FUNCTION_8_7();
}

uint64_t sub_1A56A5404()
{
  _BYTE v1[72];

  sub_1A594CE64();
  BodyStructure.Multipart.hash(into:)((uint64_t)v1);
  return sub_1A594CED0();
}

uint64_t BodyStructure.Multipart.Extension.parameters.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_retain();
  OUTLINED_FUNCTION_11_1();
  swift_retain();
  return v1;
}

void BodyStructure.Multipart.Extension.parameters.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  swift_release();
  swift_release();
  swift_release();
  *v3 = a1;
  v3[1] = a2;
  v3[2] = a3;
  OUTLINED_FUNCTION_8_1();
}

double (*BodyStructure.Multipart.Extension.parameters.modify())(_QWORD)
{
  return nullsub_1;
}

void BodyStructure.Multipart.Extension.dispositionAndLanguage.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1A56A5A60(v1 + 24, a1, &qword_1EE796920);
}

void BodyStructure.Multipart.Extension.dispositionAndLanguage.setter(uint64_t a1)
{
  uint64_t v1;

  sub_1A56A5A8C(a1, v1 + 24, &qword_1EE796920);
}

double (*BodyStructure.Multipart.Extension.dispositionAndLanguage.modify())(_QWORD)
{
  return nullsub_1;
}

void BodyStructure.Multipart.Extension.init(parameters:dispositionAndLanguage:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  __n128 v10;
  __n128 v11;
  __n128 v12;

  OUTLINED_FUNCTION_17_13();
  OUTLINED_FUNCTION_16_11(v1, v2, &qword_1EE796920, v3, v4, v5, v6, v7, v9.n128_i64[0]);
  OUTLINED_FUNCTION_6_19(v9, v10, v11, v12);
  *(_QWORD *)(v0 + 88) = v8;
}

uint64_t BodyStructure.Multipart.Extension.hash(into:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_11_1();
  swift_retain();
  swift_retain();
  sub_1A5693A38();
  swift_release();
  swift_release();
  swift_release();
  if (v1[4] == 1)
    return OUTLINED_FUNCTION_7_17();
  v4 = v1[10];
  v6 = v1[8];
  v5 = v1[9];
  v13 = v1[11];
  v14 = v1[7];
  OUTLINED_FUNCTION_7_17();
  v7 = OUTLINED_FUNCTION_18_10();
  sub_1A552396C(v7, v8);
  sub_1A55239BC(v6, v5, v4, v13);
  BodyStructure.DispositionAndLanguage.hash(into:)(a1);
  v9 = OUTLINED_FUNCTION_18_10();
  return sub_1A5524400(v9, v10, v11, v12, v14, v6, v5, v4, v13);
}

BOOL static BodyStructure.Multipart.Extension.__derived_struct_equals(_:_:)(_QWORD *a1, _QWORD *a2)
{
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71[10];

  sub_1A5690C88();
  if ((v4 & 1) == 0)
    return 0;
  sub_1A5691350();
  if ((v5 & 1) == 0)
    return 0;
  v6 = a1[3];
  v7 = a1[4];
  v8 = a1[5];
  v9 = a1[6];
  v10 = a1[7];
  v11 = a1[8];
  v12 = a1[9];
  v13 = a1[10];
  v14 = a1[11];
  v16 = a2[3];
  v15 = a2[4];
  v18 = a2[5];
  v17 = a2[6];
  v20 = a2[7];
  v19 = a2[8];
  v22 = a2[9];
  v21 = a2[10];
  v23 = a2[11];
  if (v7 == 1)
  {
    if (v15 == 1)
      return 1;
    goto LABEL_7;
  }
  if (v15 == 1)
  {
LABEL_7:
    v53 = v6;
    v54 = v7;
    v55 = v8;
    v56 = v9;
    v57 = v10;
    v58 = v11;
    v59 = v12;
    v60 = v13;
    v61 = v14;
    v62 = v16;
    v63 = v15;
    v64 = v18;
    v65 = v17;
    v66 = v20;
    v67 = v19;
    v68 = v22;
    v69 = v21;
    v70 = v23;
    v24 = v7;
    v25 = v21;
    sub_1A552391C(v6, v24, v8, v9, v10, v11, v12, v13, v14);
    sub_1A552391C(v16, v15, v18, v17, v20, v19, v22, v25, v23);
    sub_1A5691EE4(&v53);
    return 0;
  }
  v71[0] = v6;
  v71[1] = v7;
  v71[2] = v8;
  v71[3] = v9;
  v71[4] = v10;
  v71[5] = v11;
  v71[6] = v12;
  v71[7] = v13;
  v71[8] = v14;
  v53 = v16;
  v54 = v15;
  v55 = v18;
  v56 = v17;
  v57 = v20;
  v58 = v19;
  v59 = v22;
  v60 = v21;
  v61 = v23;
  v46 = v6;
  v47 = v8;
  v48 = v9;
  v49 = v10;
  v50 = v11;
  v51 = v12;
  v52 = v13;
  sub_1A552391C(v6, v7, v8, v9, v10, v11, v12, v13, v14);
  v26 = OUTLINED_FUNCTION_0_38();
  sub_1A552391C(v26, v27, v28, v29, v30, v31, v32, v33, v43);
  v45 = static BodyStructure.DispositionAndLanguage.__derived_struct_equals(_:_:)(v71, &v53);
  v34 = OUTLINED_FUNCTION_0_38();
  sub_1A5524400(v34, v35, v36, v37, v38, v39, v40, v41, v44);
  sub_1A5524400(v46, v7, v47, v48, v49, v50, v51, v52, v14);
  return v45;
}

void BodyStructure.Multipart.Extension.hashValue.getter()
{
  _BYTE v0[72];

  OUTLINED_FUNCTION_15_10();
  BodyStructure.Multipart.Extension.hash(into:)((uint64_t)v0);
  sub_1A594CED0();
  OUTLINED_FUNCTION_8_7();
}

uint64_t sub_1A56A5884()
{
  _BYTE v1[72];

  sub_1A594CE64();
  BodyStructure.Multipart.Extension.hash(into:)((uint64_t)v1);
  return sub_1A594CED0();
}

void sub_1A56A58C0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::Int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  Swift::Int v16;
  char v17;
  Swift::String v18;
  Swift::Int v19;
  int v20;
  BOOL v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[5];

  sub_1A56A46D4(*a1, a1[1], a1[2]);
  v4 = 0;
  v5 = a1[4];
  if (v5 != 1)
  {
    v25 = v3;
    v6 = a1[3];
    v7 = a1[7];
    v29 = a1[6];
    v30 = a1[5];
    v8 = a1[8];
    v9 = a1[9];
    v10 = a1[10];
    v11 = a1[11];
    v28 = v10;
    v12 = *(unsigned int *)(v1 + 20);
    swift_retain();
    swift_retain();
    v26 = v11;
    v27 = v8;
    sub_1A552391C(v6, v5, v30, v29, v7, v8, v9, v28, v11);
    v13 = OUTLINED_FUNCTION_3_24();
    sub_1A56814E0(v13, v14, v15, v12);
    if ((v17 & 1) != 0)
    {
      v18._countAndFlagsBits = 32;
      v18._object = (void *)0xE100000000000000;
      v16 = ByteBuffer._setStringSlowpath(_:at:)(v18, v12);
    }
    v19 = v16;
    v31[0] = v6;
    v31[1] = v5;
    v31[2] = v30;
    v31[3] = v29;
    v31[4] = v7;
    v20 = *(_DWORD *)(v1 + 20);
    v21 = __CFADD__(v20, (_DWORD)v16);
    v22 = v20 + v16;
    if (v21)
      goto LABEL_10;
    *(_DWORD *)(v1 + 20) = v22;
    sub_1A56A10F0((uint64_t)v31);
    v24 = v23;
    swift_release();
    swift_release();
    sub_1A5524400(v6, v5, v30, v29, v7, v27, v9, v28, v26);
    v4 = v19 + v24;
    if (__OFADD__(v19, v24))
    {
LABEL_11:
      __break(1u);
      return;
    }
    v3 = v25;
  }
  if (__OFADD__(v3, v4))
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
}

void sub_1A56A5A60(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_1_28(a1, a2, a3);
  OUTLINED_FUNCTION_5_17(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  OUTLINED_FUNCTION_1();
}

void sub_1A56A5A8C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_1_28(a1, a2, a3);
  OUTLINED_FUNCTION_5_17(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40));
  OUTLINED_FUNCTION_1();
}

void sub_1A56A5AB8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_1_28(a1, a2, a3);
  OUTLINED_FUNCTION_5_17(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  OUTLINED_FUNCTION_1();
}

unint64_t sub_1A56A5AE8()
{
  unint64_t result;

  result = qword_1EE7A9600;
  if (!qword_1EE7A9600)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for BodyStructure.Multipart, &type metadata for BodyStructure.Multipart);
    atomic_store(result, (unint64_t *)&qword_1EE7A9600);
  }
  return result;
}

unint64_t sub_1A56A5B28()
{
  unint64_t result;

  result = qword_1EE7A9608;
  if (!qword_1EE7A9608)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for BodyStructure.Multipart.Extension, &type metadata for BodyStructure.Multipart.Extension);
    atomic_store(result, (unint64_t *)&qword_1EE7A9608);
  }
  return result;
}

uint64_t _s9MultipartVwxx(_QWORD *a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = a1[4];
  if (result)
  {
    swift_release();
    swift_release();
    swift_release();
    result = a1[7];
    if (result)
    {
      if (result == 1)
        return result;
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
    }
    result = a1[11];
    if (result)
    {
      swift_bridgeObjectRelease();
      result = a1[14];
      if (result)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

_QWORD *_s9MultipartVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  size_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = a2[4];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (!v5)
  {
    v7 = a1 + 3;
    v8 = a2 + 3;
    v9 = 96;
    goto LABEL_6;
  }
  a1[3] = a2[3];
  a1[4] = v5;
  a1[5] = a2[5];
  v6 = a2[7];
  swift_retain();
  swift_retain();
  swift_retain();
  if (v6)
  {
    if (v6 == 1)
    {
      v7 = a1 + 6;
      v8 = a2 + 6;
      v9 = 72;
LABEL_6:
      memcpy(v7, v8, v9);
      return a1;
    }
    a1[6] = a2[6];
    a1[7] = v6;
    v11 = a2[9];
    a1[8] = a2[8];
    a1[9] = v11;
    a1[10] = a2[10];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    v10 = *((_OWORD *)a2 + 4);
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
    *((_OWORD *)a1 + 4) = v10;
    a1[10] = a2[10];
  }
  v12 = a2[11];
  if (v12)
  {
    a1[11] = v12;
    v13 = a2[14];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v13)
    {
      v14 = a2[13];
      a1[12] = a2[12];
      a1[13] = v14;
      a1[14] = v13;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
    else
    {
      *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
      a1[14] = a2[14];
    }
  }
  else
  {
    v15 = *(_OWORD *)(a2 + 13);
    *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
    *(_OWORD *)(a1 + 13) = v15;
  }
  return a1;
}

uint64_t _s9MultipartVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  size_t v12;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _OWORD *v24;
  _OWORD *v25;
  __int128 *v26;
  __int128 *v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  if (!*(_QWORD *)(a1 + 32))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      v5 = (_QWORD *)(a1 + 48);
      v6 = (_OWORD *)(a2 + 48);
      v9 = *(_QWORD *)(a2 + 56);
      swift_retain();
      swift_retain();
      swift_retain();
      if (v9)
      {
        if (v9 != 1)
        {
LABEL_10:
          *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
          *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
          *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
          *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
          *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          swift_retain();
          swift_retain();
          swift_retain();
          goto LABEL_19;
        }
        goto LABEL_15;
      }
      goto LABEL_18;
    }
LABEL_12:
    v10 = (void *)(a1 + 24);
    v11 = (const void *)(a2 + 24);
    v12 = 96;
LABEL_16:
    memcpy(v10, v11, v12);
    return a1;
  }
  if (!v4)
  {
    sub_1A56A61A8((_QWORD *)(a1 + 24));
    goto LABEL_12;
  }
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  v5 = (_QWORD *)(a1 + 48);
  v6 = (_OWORD *)(a2 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(_QWORD *)(a2 + 56);
  if (v7 == 1)
  {
    if (v8)
    {
      if (v8 != 1)
        goto LABEL_10;
      goto LABEL_15;
    }
LABEL_18:
    v14 = *v6;
    v15 = v6[1];
    v5[4] = *((_QWORD *)v6 + 4);
    *(_OWORD *)v5 = v14;
    *((_OWORD *)v5 + 1) = v15;
LABEL_19:
    v16 = *(_QWORD *)(a2 + 88);
    if (!v16)
    {
      v18 = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = v18;
      return a1;
    }
    goto LABEL_20;
  }
  if (v8 == 1)
  {
    sub_1A56A6174((_QWORD *)(a1 + 48));
LABEL_15:
    v10 = v5;
    v11 = v6;
    v12 = 72;
    goto LABEL_16;
  }
  if (v7)
  {
    if (v8)
    {
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_1A56A27CC(a1 + 48);
      v20 = *(_QWORD *)(a2 + 80);
      v21 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)v5 = *v6;
      *(_OWORD *)(a1 + 64) = v21;
      *(_QWORD *)(a1 + 80) = v20;
    }
  }
  else if (v8)
  {
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    v22 = *v6;
    v23 = *(_OWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_OWORD *)v5 = v22;
    *(_OWORD *)(a1 + 64) = v23;
  }
  v24 = (_OWORD *)(a1 + 88);
  v25 = (_OWORD *)(a2 + 88);
  v16 = *(_QWORD *)(a2 + 88);
  if (!*(_QWORD *)(a1 + 88))
  {
    if (!v16)
    {
      v29 = *(_OWORD *)(a2 + 104);
      *v24 = *v25;
      *(_OWORD *)(a1 + 104) = v29;
      return a1;
    }
LABEL_20:
    *(_QWORD *)(a1 + 88) = v16;
    v17 = *(_QWORD *)(a2 + 112);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (!v17)
    {
      v19 = *(_OWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = v19;
      return a1;
    }
    goto LABEL_21;
  }
  if (!v16)
  {
    sub_1A56A2834(a1 + 88);
    v30 = *(_OWORD *)(a2 + 104);
    *v24 = *v25;
    *(_OWORD *)(a1 + 104) = v30;
    return a1;
  }
  *(_QWORD *)(a1 + 88) = v16;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v26 = (__int128 *)(a1 + 96);
  v27 = (__int128 *)(a2 + 96);
  v28 = *(_QWORD *)(a2 + 112);
  if (!*(_QWORD *)(a1 + 112))
  {
    if (!v28)
    {
      v31 = *v27;
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *v26 = v31;
      return a1;
    }
LABEL_21:
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return a1;
  }
  if (v28)
  {
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1A56A2800(a1 + 96);
    v32 = *(_QWORD *)(a2 + 112);
    *v26 = *v27;
    *(_QWORD *)(a1 + 112) = v32;
  }
  return a1;
}

_QWORD *sub_1A56A6174(_QWORD *a1)
{
  _s22DispositionAndLanguageVwxx(a1);
  return a1;
}

_QWORD *sub_1A56A61A8(_QWORD *a1)
{
  _s9MultipartV9ExtensionVwxx(a1);
  return a1;
}

_QWORD *_s9MultipartVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  size_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  if (!a1[4])
    goto LABEL_8;
  v5 = a2[4];
  if (!v5)
  {
    sub_1A56A61A8(a1 + 3);
LABEL_8:
    v8 = a1 + 3;
    v9 = a2 + 3;
    v10 = 96;
    goto LABEL_9;
  }
  a1[3] = a2[3];
  swift_release();
  a1[4] = v5;
  swift_release();
  a1[5] = a2[5];
  swift_release();
  v6 = a1[7];
  if (v6 != 1)
  {
    v7 = a2[7];
    if (v7 == 1)
    {
      sub_1A56A6174(a1 + 6);
      goto LABEL_6;
    }
    if (v6)
    {
      if (v7)
      {
        a1[6] = a2[6];
        a1[7] = v7;
        swift_bridgeObjectRelease();
        a1[8] = a2[8];
        swift_release();
        a1[9] = a2[9];
        swift_release();
        a1[10] = a2[10];
        swift_release();
        goto LABEL_16;
      }
      sub_1A56A27CC((uint64_t)(a1 + 6));
    }
    v12 = *((_OWORD *)a2 + 4);
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
    *((_OWORD *)a1 + 4) = v12;
    a1[10] = a2[10];
LABEL_16:
    v13 = a2[11];
    if (a1[11])
    {
      if (v13)
      {
        a1[11] = v13;
        swift_bridgeObjectRelease();
        if (a1[14])
        {
          v14 = a2[14];
          if (v14)
          {
            v15 = a2[13];
            a1[12] = a2[12];
            a1[13] = v15;
            swift_bridgeObjectRelease();
            a1[14] = v14;
            swift_bridgeObjectRelease();
            return a1;
          }
          sub_1A56A2800((uint64_t)(a1 + 12));
        }
        *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
        a1[14] = a2[14];
        return a1;
      }
      sub_1A56A2834((uint64_t)(a1 + 11));
    }
    v16 = *(_OWORD *)(a2 + 13);
    *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
    *(_OWORD *)(a1 + 13) = v16;
    return a1;
  }
LABEL_6:
  v8 = a1 + 6;
  v9 = a2 + 6;
  v10 = 72;
LABEL_9:
  memcpy(v8, v9, v10);
  return a1;
}

uint64_t _s9MultipartVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 120))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for BodyStructure.Multipart()
{
  return &type metadata for BodyStructure.Multipart;
}

uint64_t _s9MultipartV9ExtensionVwxx(_QWORD *a1)
{
  uint64_t result;

  swift_release();
  swift_release();
  swift_release();
  result = a1[4];
  if (result)
  {
    if (result == 1)
      return result;
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
  result = a1[8];
  if (result)
  {
    swift_bridgeObjectRelease();
    result = a1[11];
    if (result)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

_QWORD *_s9MultipartV9ExtensionVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  _OWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = a1 + 3;
  v6 = a2 + 3;
  v7 = a2[4];
  swift_retain();
  swift_retain();
  swift_retain();
  if (v7)
  {
    if (v7 == 1)
    {
      memcpy(a1 + 3, v6, 0x48uLL);
      return a1;
    }
    a1[3] = a2[3];
    a1[4] = v7;
    v9 = a2[6];
    a1[5] = a2[5];
    a1[6] = v9;
    a1[7] = a2[7];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    v8 = v6[1];
    *v5 = *v6;
    *(_OWORD *)(a1 + 5) = v8;
    a1[7] = *((_QWORD *)v6 + 4);
  }
  v10 = a2[8];
  if (v10)
  {
    a1[8] = v10;
    v11 = a2[11];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v11)
    {
      v12 = a2[10];
      a1[9] = a2[9];
      a1[10] = v12;
      a1[11] = v11;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
    else
    {
      *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
      a1[11] = a2[11];
    }
  }
  else
  {
    v13 = *((_OWORD *)a2 + 5);
    *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
    *((_OWORD *)a1 + 5) = v13;
  }
  return a1;
}

uint64_t _s9MultipartV9ExtensionVwca(uint64_t a1, uint64_t a2)
{
  __int128 *v4;
  __int128 *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD *v16;
  _OWORD *v17;
  __int128 *v18;
  __int128 *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  v4 = (__int128 *)(a1 + 24);
  v5 = (__int128 *)(a2 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a2 + 32);
  if (v6 == 1)
  {
    if (!v7)
    {
      v8 = *v5;
      v9 = *(_OWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *v4 = v8;
      *(_OWORD *)(a1 + 40) = v9;
LABEL_12:
      v10 = *(_QWORD *)(a2 + 64);
      if (!v10)
      {
        v11 = *(_OWORD *)(a2 + 80);
        *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
        *(_OWORD *)(a1 + 80) = v11;
        return a1;
      }
      goto LABEL_24;
    }
    if (v7 != 1)
    {
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_retain();
      swift_retain();
      swift_retain();
      goto LABEL_12;
    }
    goto LABEL_7;
  }
  if (v7 == 1)
  {
    sub_1A56A6174((_QWORD *)(a1 + 24));
LABEL_7:
    memcpy((void *)(a1 + 24), (const void *)(a2 + 24), 0x48uLL);
    return a1;
  }
  if (v6)
  {
    if (v7)
    {
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_1A56A27CC(a1 + 24);
      v12 = *(_QWORD *)(a2 + 56);
      v13 = *(_OWORD *)(a2 + 40);
      *v4 = *v5;
      *(_OWORD *)(a1 + 40) = v13;
      *(_QWORD *)(a1 + 56) = v12;
    }
  }
  else if (v7)
  {
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    v14 = *v5;
    v15 = *(_OWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *v4 = v14;
    *(_OWORD *)(a1 + 40) = v15;
  }
  v16 = (_OWORD *)(a1 + 64);
  v17 = (_OWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 64);
  if (!*(_QWORD *)(a1 + 64))
  {
    if (!v10)
    {
      v25 = *(_OWORD *)(a2 + 80);
      *v16 = *v17;
      *(_OWORD *)(a1 + 80) = v25;
      return a1;
    }
LABEL_24:
    *(_QWORD *)(a1 + 64) = v10;
    v21 = *(_QWORD *)(a2 + 88);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (!v21)
    {
      v22 = *(_OWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 72) = v22;
      return a1;
    }
    goto LABEL_25;
  }
  if (!v10)
  {
    sub_1A56A2834(a1 + 64);
    v23 = *(_OWORD *)(a2 + 80);
    *v16 = *v17;
    *(_OWORD *)(a1 + 80) = v23;
    return a1;
  }
  *(_QWORD *)(a1 + 64) = v10;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v18 = (__int128 *)(a1 + 72);
  v19 = (__int128 *)(a2 + 72);
  v20 = *(_QWORD *)(a2 + 88);
  if (!*(_QWORD *)(a1 + 88))
  {
    if (!v20)
    {
      v24 = *v19;
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *v18 = v24;
      return a1;
    }
LABEL_25:
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return a1;
  }
  if (v20)
  {
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1A56A2800(a1 + 72);
    v26 = *(_QWORD *)(a2 + 88);
    *v18 = *v19;
    *(_QWORD *)(a1 + 88) = v26;
  }
  return a1;
}

void *__swift_memcpy96_8_0(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x60uLL);
}

_QWORD *_s9MultipartV9ExtensionVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  v4 = a1[4];
  if (v4 == 1)
    goto LABEL_4;
  v5 = a2[4];
  if (v5 != 1)
  {
    if (v4)
    {
      if (v5)
      {
        a1[3] = a2[3];
        a1[4] = v5;
        swift_bridgeObjectRelease();
        a1[5] = a2[5];
        swift_release();
        a1[6] = a2[6];
        swift_release();
        a1[7] = a2[7];
        swift_release();
        goto LABEL_11;
      }
      sub_1A56A27CC((uint64_t)(a1 + 3));
    }
    v7 = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 5) = v7;
    a1[7] = a2[7];
LABEL_11:
    v8 = a2[8];
    if (a1[8])
    {
      if (v8)
      {
        a1[8] = v8;
        swift_bridgeObjectRelease();
        if (a1[11])
        {
          v9 = a2[11];
          if (v9)
          {
            v10 = a2[10];
            a1[9] = a2[9];
            a1[10] = v10;
            swift_bridgeObjectRelease();
            a1[11] = v9;
            swift_bridgeObjectRelease();
            return a1;
          }
          sub_1A56A2800((uint64_t)(a1 + 9));
        }
        *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
        a1[11] = a2[11];
        return a1;
      }
      sub_1A56A2834((uint64_t)(a1 + 8));
    }
    v11 = *((_OWORD *)a2 + 5);
    *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
    *((_OWORD *)a1 + 5) = v11;
    return a1;
  }
  sub_1A56A6174(a1 + 3);
LABEL_4:
  memcpy(a1 + 3, a2 + 3, 0x48uLL);
  return a1;
}

uint64_t _s9MultipartV9ExtensionVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 96))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s9MultipartV9ExtensionVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BodyStructure.Multipart.Extension()
{
  return &type metadata for BodyStructure.Multipart.Extension;
}

uint64_t OUTLINED_FUNCTION_0_38()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_1_28(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return __swift_instantiateConcreteTypeFromMangledName_0(a3);
}

uint64_t OUTLINED_FUNCTION_3_24()
{
  return 32;
}

void *OUTLINED_FUNCTION_4_21(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  return sub_1A55DC3E0(&STACK[0x230], &a32);
}

uint64_t OUTLINED_FUNCTION_5_17@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

void OUTLINED_FUNCTION_6_19(__n128 a1, __n128 a2, __n128 a3, __n128 a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)v7 = v6;
  *(_QWORD *)(v7 + 8) = v5;
  *(_QWORD *)(v7 + 16) = v4;
  *(__n128 *)(v7 + 24) = a1;
  *(__n128 *)(v7 + 40) = a2;
  *(__n128 *)(v7 + 56) = a3;
  *(__n128 *)(v7 + 72) = a4;
}

uint64_t OUTLINED_FUNCTION_7_17()
{
  return sub_1A594CE94();
}

uint64_t OUTLINED_FUNCTION_8_11(uint64_t a1)
{
  void (*v1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char);

  return sub_1A55DC438(a1, v1);
}

__n128 OUTLINED_FUNCTION_15_15(__n128 a1, __n128 a2)
{
  uint64_t v2;
  __n128 *v3;
  __n128 result;

  *(__n128 *)(v2 + 8) = a1;
  *(__n128 *)(v2 + 24) = a2;
  result = v3[3];
  *(__n128 *)(v2 + 40) = result;
  return result;
}

void OUTLINED_FUNCTION_16_11(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1A56A5AB8(a4, (uint64_t)&a9, a3);
}

uint64_t OUTLINED_FUNCTION_18_10()
{
  uint64_t v0;

  return v0;
}

BOOL static BodyStructure.Singlepart.__derived_struct_equals(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t *v2;
  unint64_t *v3;
  unint64_t *v4;
  unint64_t *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD v84[22];
  uint64_t v85;
  uint64_t v86;

  OUTLINED_FUNCTION_16_4();
  v85 = v0;
  v86 = v1;
  v3 = v2;
  v5 = v4;
  static BodyStructure.Singlepart.Kind.__derived_enum_equals(_:_:)(*v4, *v2);
  if ((v6 & 1) == 0)
    return 0;
  OUTLINED_FUNCTION_40_6(&v83, v5 + 1);
  OUTLINED_FUNCTION_40_6(&v82, v3 + 1);
  if (!static BodyStructure.Fields.__derived_struct_equals(_:_:)(&v83, &v82))
    return 0;
  v7 = v5[11];
  v8 = v5[12];
  v9 = v5[13];
  v10 = v5[14];
  v11 = v5[15];
  v12 = v5[16];
  v13 = v5[17];
  v14 = v5[18];
  v15 = v5[19];
  v16 = v5[20];
  v17 = v5[21];
  v18 = v3[11];
  v19 = v3[12];
  v21 = v3[13];
  v20 = v3[14];
  v22 = v3[15];
  v23 = v3[16];
  v25 = v3[17];
  v24 = v3[18];
  v26 = v3[19];
  v27 = v3[20];
  v28 = v3[21];
  if (v8 == 1)
  {
    if (v19 == 1)
      return 1;
    goto LABEL_7;
  }
  if (v19 == 1)
  {
LABEL_7:
    v60 = v5[11];
    v61 = v8;
    v62 = v9;
    v63 = v10;
    v64 = v11;
    v65 = v12;
    v66 = v13;
    v67 = v14;
    v68 = v15;
    v69 = v16;
    v70 = v17;
    v71 = v18;
    v72 = v19;
    v73 = v21;
    v74 = v20;
    v75 = v22;
    v76 = v23;
    v77 = v25;
    v78 = v24;
    v79 = v26;
    v80 = v27;
    v81 = v28;
    v29 = v8;
    v58 = v24;
    v30 = v25;
    v31 = v19;
    v32 = v26;
    sub_1A552388C(v7, v29, v9, v10, v11, v12, v13, v14, v15, v16, v17);
    sub_1A552388C(v18, v31, v21, v20, v22, v23, v30, v58, v32, v27, v28);
    sub_1A5691F84((uint64_t)&v60);
    return 0;
  }
  v84[0] = v5[11];
  v84[1] = v8;
  v84[2] = v9;
  v84[3] = v10;
  v84[4] = v11;
  v84[5] = v12;
  v84[6] = v13;
  v84[7] = v14;
  v84[8] = v15;
  v84[9] = v16;
  v84[10] = v17;
  v60 = v18;
  v61 = v19;
  v62 = v21;
  v63 = v20;
  v64 = v22;
  v65 = v23;
  v66 = v25;
  v67 = v24;
  v68 = v26;
  v69 = v27;
  v70 = v28;
  v51 = v7;
  v52 = v9;
  v53 = v10;
  v54 = v11;
  v55 = v12;
  v56 = v13;
  v57 = v14;
  v59 = v24;
  v46 = v25;
  v47 = v17;
  v49 = v16;
  v50 = v15;
  sub_1A552388C(v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17);
  v33 = OUTLINED_FUNCTION_30_6();
  sub_1A552388C(v33, v34, v35, v20, v22, v23, v46, v59, v40, v42, v44);
  v48 = static BodyStructure.Singlepart.Extension.__derived_struct_equals(_:_:)(v84, &v60);
  v36 = OUTLINED_FUNCTION_30_6();
  sub_1A5524370(v36, v37, v38, v20, v22, v23, v46, v59, v41, v43, v45);
  sub_1A5524370(v51, v8, v52, v53, v54, v55, v56, v57, v50, v49, v47);
  return v48;
}

void sub_1A56A6E68()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  char v24;
  Swift::String v25;
  Swift::Int v26;
  int v27;
  BOOL v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[80];
  uint64_t v38;
  _QWORD v39[11];
  uint64_t v40[41];
  unint64_t v41;

  OUTLINED_FUNCTION_16_4();
  v2 = v1;
  sub_1A569D030(v1, &v38);
  sub_1A569D030(&v38, &v41);
  v3 = v41;
  if (v41 >> 62)
  {
    if (v41 >> 62 == 1)
    {
      v41 &= 0x3FFFFFFFFFFFFFFFuLL;
      OUTLINED_FUNCTION_153_0(v40, (const void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 16));
      OUTLINED_FUNCTION_40_6(v37, v2 + 1);
      sub_1A5692040((uint64_t)v40);
      v4 = sub_1A56A84F0(v40, v37);
      sub_1A56921B8((uint64_t)v40);
      goto LABEL_7;
    }
    v41 &= 0x3FFFFFFFFFFFFFFFuLL;
    v10 = *(_QWORD *)(v3 + 16);
    v11 = *(_QWORD *)(v3 + 24);
    v12 = *(_QWORD *)(v3 + 32);
    OUTLINED_FUNCTION_40_6(v40, v2 + 1);
    sub_1A56A88B4(v10, v11, v12, v40);
  }
  else
  {
    v41 &= 0x3FFFFFFFFFFFFFFFuLL;
    v5 = *(_QWORD *)(v3 + 16);
    v6 = *(_QWORD *)(v3 + 24);
    v7 = *(_QWORD *)(v3 + 32);
    v8 = *(_QWORD *)(v3 + 40);
    OUTLINED_FUNCTION_40_6(v40, v2 + 1);
    sub_1A56A83FC(v5, v6, v7, v8, v40);
  }
  v4 = v9;
LABEL_7:
  v13 = v2[12];
  if (v13 == 1)
  {
LABEL_13:
    OUTLINED_FUNCTION_1_3();
    return;
  }
  v14 = v2[11];
  v15 = v2[13];
  v36 = v2[14];
  v16 = v2[15];
  v17 = v2[16];
  v19 = v2[17];
  v18 = v2[18];
  v21 = v2[19];
  v20 = v2[20];
  v22 = v2[21];
  v35 = v14;
  v39[0] = v14;
  v39[1] = v13;
  v39[2] = v15;
  v39[3] = v36;
  v39[4] = v16;
  v39[5] = v17;
  v39[6] = v19;
  v39[7] = v18;
  v39[8] = v21;
  v39[9] = v20;
  v39[10] = v22;
  v34 = v13;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v33 = v22;
  sub_1A552391C(v15, v36, v16, v17, v19, v18, v21, v20, v22);
  OUTLINED_FUNCTION_5_18(32, 0xE100000000000000, v0 + 8);
  if ((v24 & 1) != 0)
  {
    v25._countAndFlagsBits = OUTLINED_FUNCTION_3_24();
    v23 = ByteBuffer._setStringSlowpath(_:at:)(v25, v26);
  }
  v27 = *(_DWORD *)(v0 + 20);
  v28 = __CFADD__(v27, (_DWORD)v23);
  v29 = v27 + v23;
  if (v28)
  {
    __break(1u);
    goto LABEL_15;
  }
  *(_DWORD *)(v0 + 20) = v29;
  v30 = v4 + v23;
  if (__OFADD__(v4, v23))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  sub_1A56A8A54(v39);
  v32 = v31;
  sub_1A5524370(v35, v34, v15, v36, v16, v17, v19, v18, v21, v20, v33);
  if (!__OFADD__(v30, v32))
    goto LABEL_13;
LABEL_16:
  __break(1u);
}

void BodyStructure.Singlepart.kind.getter()
{
  swift_retain();
  OUTLINED_FUNCTION_1();
}

uint64_t BodyStructure.Singlepart.kind.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_release();
  *v1 = a1;
  return result;
}

double (*BodyStructure.Singlepart.kind.modify())(_QWORD)
{
  return nullsub_1;
}

_QWORD *BodyStructure.Singlepart.fields.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1A56A8238((_QWORD *)(v1 + 8), a1);
}

uint64_t BodyStructure.Singlepart.fields.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1A56A8274(a1, v1 + 8);
}

double (*BodyStructure.Singlepart.fields.modify())(_QWORD)
{
  return nullsub_1;
}

void BodyStructure.Singlepart.extension.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1A56A5A60(v1 + 88, a1, &qword_1EE7968E0);
}

void BodyStructure.Singlepart.extension.setter(uint64_t a1)
{
  uint64_t v1;

  sub_1A56A5A8C(a1, v1 + 88, &qword_1EE7968E0);
}

double (*BodyStructure.Singlepart.extension.modify())(_QWORD)
{
  return nullsub_1;
}

__n128 BodyStructure.Singlepart.init(kind:fields:extension:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 result;
  __int128 v13;
  __int128 v14;
  __n128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  OUTLINED_FUNCTION_44_2();
  OUTLINED_FUNCTION_43_5(v3, v4, &qword_1EE7968E0, v5, v6, v7, v8, v9, v15.n128_i64[0]);
  v10 = *v0;
  v11 = v0[9];
  result = v15;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = v10;
  v13 = *(_OWORD *)(v0 + 3);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 1);
  *(_OWORD *)(v2 + 32) = v13;
  v14 = *(_OWORD *)(v0 + 7);
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(v0 + 5);
  *(_OWORD *)(v2 + 64) = v14;
  *(_QWORD *)(v2 + 80) = v11;
  *(__n128 *)(v2 + 88) = v15;
  *(_OWORD *)(v2 + 104) = v16;
  *(_OWORD *)(v2 + 120) = v17;
  *(_OWORD *)(v2 + 136) = v18;
  *(_OWORD *)(v2 + 152) = v19;
  *(_QWORD *)(v2 + 168) = v20;
  return result;
}

void BodyStructure.Singlepart.hash(into:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[80];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  swift_retain();
  v3 = OUTLINED_FUNCTION_39_7();
  BodyStructure.Singlepart.Kind.hash(into:)(v3, v4);
  swift_release();
  OUTLINED_FUNCTION_40_6(v16, v1 + 1);
  sub_1A56A82B0((uint64_t)v16);
  BodyStructure.Fields.hash(into:)();
  sub_1A56A8320((uint64_t)v16);
  v5 = v1[12];
  if (v5 == 1)
  {
    OUTLINED_FUNCTION_7_17();
  }
  else
  {
    v6 = v1[21];
    v7 = v1[19];
    v12 = v1[20];
    v13 = v1[18];
    v8 = v1[16];
    v9 = v1[14];
    v10 = v1[15];
    v11 = v1[13];
    v14 = v1[17];
    v17 = v1[11];
    v15 = v17;
    v18 = v5;
    v19 = v11;
    v20 = v9;
    v21 = v10;
    v22 = v8;
    v23 = v14;
    v24 = v13;
    v25 = v7;
    v26 = v12;
    v27 = v6;
    OUTLINED_FUNCTION_7_17();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A552391C(v11, v9, v10, v8, v14, v13, v7, v12, v6);
    BodyStructure.Singlepart.Extension.hash(into:)(a1);
    sub_1A5524370(v15, v5, v11, v9, v10, v8, v14, v13, v7, v12, v6);
  }
}

void static BodyStructure.Singlepart.Kind.__derived_enum_equals(_:_:)(unint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  _QWORD v10[41];
  _QWORD v11[41];

  if (a1 >> 62)
  {
    if (a1 >> 62 == 1)
    {
      OUTLINED_FUNCTION_153_0(v10, (const void *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 16));
      if (a2 >> 62 == 1)
      {
        OUTLINED_FUNCTION_153_0(v11, (const void *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 16));
        sub_1A5692040((uint64_t)v10);
        sub_1A5692040((uint64_t)v11);
        static BodyStructure.Singlepart.Message.__derived_struct_equals(_:_:)(v10, v11);
        sub_1A56921B8((uint64_t)v11);
        sub_1A56921B8((uint64_t)v10);
      }
      goto LABEL_22;
    }
    if (a2 >> 62 == 2 && (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16) || *(_QWORD *)(a1 + 24) != *(_QWORD *)(a2 + 24)))
LABEL_21:
      OUTLINED_FUNCTION_1_16();
  }
  else if (!(a2 >> 62))
  {
    v3 = *(_QWORD *)(a1 + 32);
    v4 = *(_QWORD *)(a1 + 40);
    v6 = *(_QWORD *)(a2 + 32);
    v5 = *(_QWORD *)(a2 + 40);
    v7 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24);
    if ((v7 || (OUTLINED_FUNCTION_1_16() & 1) != 0) && (v3 != v6 || v4 != v5))
      goto LABEL_21;
  }
LABEL_22:
  OUTLINED_FUNCTION_26_3();
}

void BodyStructure.Singlepart.hashValue.getter()
{
  _BYTE v0[72];

  OUTLINED_FUNCTION_15_10();
  BodyStructure.Singlepart.hash(into:)((uint64_t)v0);
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_8_7();
}

uint64_t sub_1A56A74A4()
{
  _BYTE v1[72];

  sub_1A594CE64();
  BodyStructure.Singlepart.hash(into:)((uint64_t)v1);
  return sub_1A594CED0();
}

uint64_t BodyStructure.Singlepart.Kind.hash(into:)(uint64_t a1, unint64_t a2)
{
  _BYTE v3[328];

  if (a2 >> 62)
  {
    if (a2 >> 62 == 1)
    {
      OUTLINED_FUNCTION_153_0(v3, (const void *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 16));
      OUTLINED_FUNCTION_9_20();
      sub_1A5692040((uint64_t)v3);
      OUTLINED_FUNCTION_34_6();
      return sub_1A56921B8((uint64_t)v3);
    }
    else
    {
      OUTLINED_FUNCTION_9_20();
      OUTLINED_FUNCTION_90();
      OUTLINED_FUNCTION_27_7();
      OUTLINED_FUNCTION_52();
      return sub_1A594CE88();
    }
  }
  else
  {
    OUTLINED_FUNCTION_9_20();
    OUTLINED_FUNCTION_90();
    OUTLINED_FUNCTION_27_7();
    OUTLINED_FUNCTION_52();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594B1D8();
    return swift_bridgeObjectRelease();
  }
}

void static BodyStructure.Singlepart.Message.__derived_struct_equals(_:_:)(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  int v5;
  const void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  const void *v24;
  uint64_t v25[23];
  _BYTE v26[184];
  _BYTE v27[120];
  _BYTE v28[120];
  _BYTE v29[176];
  _BYTE v30[176];
  _BYTE v31[368];

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (OUTLINED_FUNCTION_1_16() & 1) != 0)
  {
    OUTLINED_FUNCTION_35_6(v28, a1 + 2);
    OUTLINED_FUNCTION_35_6(v27, a2 + 2);
    if ((static Envelope.__derived_struct_equals(_:_:)((uint64_t)v28, (uint64_t)v27) & 1) != 0)
    {
      sub_1A55DC3E0(a1 + 17, v26);
      sub_1A55DC3E0(a2 + 17, v25);
      sub_1A55DC3E0(v26, v31);
      v5 = sub_1A55DC430((uint64_t)v31);
      nullsub_1(v31);
      if (v5 == 1)
      {
        v7 = OUTLINED_FUNCTION_35_6(v29, v6);
        OUTLINED_FUNCTION_45_4((uint64_t)v7, v8, v9, v10, v11, v12, v13, v14, v25[0]);
        OUTLINED_FUNCTION_35_7();
        if (!v4)
          goto LABEL_14;
        OUTLINED_FUNCTION_35_6(v30, v15);
        OUTLINED_FUNCTION_24_7((uint64_t)v26);
        OUTLINED_FUNCTION_24_7((uint64_t)v25);
        static BodyStructure.Multipart.__derived_struct_equals(_:_:)(v29, v30);
        goto LABEL_13;
      }
      v16 = OUTLINED_FUNCTION_30_5(v29, v6);
      OUTLINED_FUNCTION_45_4((uint64_t)v16, v17, v18, v19, v20, v21, v22, v23, v25[0]);
      OUTLINED_FUNCTION_35_7();
      if (!v4)
      {
        OUTLINED_FUNCTION_30_5(v30, v24);
        OUTLINED_FUNCTION_24_7((uint64_t)v26);
        OUTLINED_FUNCTION_24_7((uint64_t)v25);
        static BodyStructure.Singlepart.__derived_struct_equals(_:_:)(v29, v30);
LABEL_13:
        sub_1A55DC438((uint64_t)v25, sub_1A55241F0);
        sub_1A55DC438((uint64_t)v26, sub_1A55241F0);
      }
    }
  }
LABEL_14:
  OUTLINED_FUNCTION_26_3();
}

BOOL static BodyStructure.Singlepart.Text.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v9;
  _BOOL8 result;

  if (a1 == a4 && a2 == a5)
    return a3 == a6;
  v9 = OUTLINED_FUNCTION_1_16();
  result = 0;
  if ((v9 & 1) != 0)
    return a3 == a6;
  return result;
}

void BodyStructure.Singlepart.Kind.hashValue.getter(unint64_t a1)
{
  _BYTE v2[72];

  OUTLINED_FUNCTION_15_10();
  BodyStructure.Singlepart.Kind.hash(into:)((uint64_t)v2, a1);
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_8_7();
}

void sub_1A56A77D8()
{
  unint64_t *v0;

  BodyStructure.Singlepart.Kind.hashValue.getter(*v0);
}

uint64_t sub_1A56A77E0(uint64_t a1)
{
  unint64_t *v1;

  return BodyStructure.Singlepart.Kind.hash(into:)(a1, *v1);
}

uint64_t sub_1A56A77E8()
{
  unint64_t *v0;
  unint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1A594CE64();
  BodyStructure.Singlepart.Kind.hash(into:)((uint64_t)v3, v1);
  return sub_1A594CED0();
}

void sub_1A56A7828(unint64_t *a1, unint64_t *a2)
{
  static BodyStructure.Singlepart.Kind.__derived_enum_equals(_:_:)(*a1, *a2);
}

void BodyStructure.Singlepart.Message.message.getter()
{
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_39_7();
  OUTLINED_FUNCTION_1();
}

void BodyStructure.Singlepart.Message.message.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_28_7();
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_8_1();
}

double (*BodyStructure.Singlepart.Message.message.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t BodyStructure.Singlepart.Message.envelope.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A56A8C98(v1 + 16, a1);
}

uint64_t BodyStructure.Singlepart.Message.envelope.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1A56A8CD4(a1, v1 + 16);
}

double (*BodyStructure.Singlepart.Message.envelope.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t BodyStructure.Singlepart.Message.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A56A8D10(v1 + 136, a1);
}

uint64_t BodyStructure.Singlepart.Message.body.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1A56A8D4C(a1, v1 + 136);
}

double (*BodyStructure.Singlepart.Message.body.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t BodyStructure.Singlepart.Message.lineCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 320);
}

uint64_t BodyStructure.Singlepart.Message.lineCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 320) = result;
  return result;
}

double (*BodyStructure.Singlepart.Message.lineCount.modify())(_QWORD)
{
  return nullsub_1;
}

void *BodyStructure.Singlepart.Message.init(message:envelope:body:lineCount:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, const void *a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  int v11;
  __int16 v12;
  __int128 v13;
  _BYTE v15[129];
  _BYTE v16[184];
  _QWORD v17[2];
  __int128 v18;
  __int128 v19;
  int v20;
  __int16 v21;
  char v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _QWORD v28[24];

  sub_1A55DC3E0(a4, v15);
  sub_1A55DC3E0(v15, v16);
  v11 = *((_DWORD *)a3 + 8);
  v12 = *((_WORD *)a3 + 18);
  v17[0] = a1;
  v17[1] = a2;
  v13 = a3[1];
  v18 = *a3;
  v19 = v13;
  v20 = v11;
  v21 = v12;
  v22 = *((_BYTE *)a3 + 38);
  v23 = *(__int128 *)((char *)a3 + 40);
  v24 = *(__int128 *)((char *)a3 + 56);
  v25 = *(__int128 *)((char *)a3 + 72);
  v26 = *(__int128 *)((char *)a3 + 88);
  v27 = *(__int128 *)((char *)a3 + 104);
  sub_1A55DC3E0(v16, v28);
  v28[23] = a5;
  return OUTLINED_FUNCTION_153_0(a6, v17);
}

uint64_t BodyStructure.Singlepart.Message.hash(into:)()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[16];
  _BYTE v41[96];
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  _BYTE v45[96];
  _BYTE v46[96];
  uint64_t v47;
  uint64_t v48;

  OUTLINED_FUNCTION_16_4();
  v47 = v1;
  v48 = v2;
  v4 = v3;
  v42 = *v0;
  OUTLINED_FUNCTION_90();
  OUTLINED_FUNCTION_39_7();
  sub_1A594B1D8();
  sub_1A5503278((uint64_t)&v42);
  OUTLINED_FUNCTION_35_6(v41, v0 + 1);
  sub_1A56A8D88((uint64_t)v41);
  Envelope.hash(into:)(v4);
  sub_1A56A8E2C((uint64_t)v41);
  sub_1A55DC3E0((char *)v0 + 136, v45);
  sub_1A55DC3E0(v45, v46);
  if (sub_1A55DC430((uint64_t)v46) == 1)
  {
    nullsub_1(v46);
    v6 = *(_QWORD *)(v5 + 16);
    v43 = *(_OWORD *)v5;
    v44 = v6;
    OUTLINED_FUNCTION_2_32(v5);
    v7 = OUTLINED_FUNCTION_9_20();
    OUTLINED_FUNCTION_40_7(v7, v8, v9, v10, v11, v12, v13, v14, v34, v35);
    nullsub_1(v40);
    v16 = *(_QWORD *)(v15 + 40);
    v38 = *(_QWORD *)(v15 + 32);
    v39 = *(_QWORD *)(v15 + 24);
    v17 = *(_QWORD *)(v15 + 48);
    v18 = *(_QWORD *)(v15 + 56);
    v19 = *(_QWORD *)(v15 + 64);
    v20 = *(_QWORD *)(v15 + 72);
    v37 = *(_QWORD *)(v15 + 80);
    v36 = *(_OWORD *)(v15 + 88);
    v21 = *(_QWORD *)(v15 + 104);
    v22 = *(_QWORD *)(v15 + 112);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    OUTLINED_FUNCTION_16_0();
    sub_1A5523A30(v39, v38, v16, v17, v18, v19, v20, v37, v36, *((uint64_t *)&v36 + 1), v21, v22);
    ((void (*)(uint64_t))BodyStructure.Multipart.hash(into:))(v4);
  }
  else
  {
    nullsub_1(v46);
    OUTLINED_FUNCTION_30_5(&v43, v23);
    v24 = OUTLINED_FUNCTION_9_20();
    OUTLINED_FUNCTION_40_7(v24, v25, v26, v27, v28, v29, v30, v31, v34, v35);
    nullsub_1(v40);
    sub_1A56974D0(v32);
    ((void (*)(uint64_t))BodyStructure.Singlepart.hash(into:))(v4);
  }
  sub_1A55DC438((uint64_t)v45, sub_1A55241F0);
  return OUTLINED_FUNCTION_9_20();
}

void BodyStructure.Singlepart.Message.hashValue.getter()
{
  OUTLINED_FUNCTION_15_10();
  BodyStructure.Singlepart.Message.hash(into:)();
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_8_7();
}

void sub_1A56A7BA0()
{
  const void *v0;
  _BYTE __dst[328];

  memcpy(__dst, v0, sizeof(__dst));
  BodyStructure.Singlepart.Message.hashValue.getter();
}

uint64_t sub_1A56A7BD8()
{
  const void *v0;
  _BYTE v2[328];

  OUTLINED_FUNCTION_153_0(v2, v0);
  return OUTLINED_FUNCTION_34_6();
}

uint64_t sub_1A56A7C14()
{
  const void *v0;
  _BYTE __dst[328];

  memcpy(__dst, v0, sizeof(__dst));
  sub_1A594CE64();
  BodyStructure.Singlepart.Message.hash(into:)();
  return sub_1A594CED0();
}

uint64_t sub_1A56A7C70(void *__src, const void *a2)
{
  char v3;
  _QWORD v5[41];
  _QWORD __dst[41];

  memcpy(v5, __src, sizeof(v5));
  memcpy(__dst, a2, sizeof(__dst));
  static BodyStructure.Singlepart.Message.__derived_struct_equals(_:_:)(v5, __dst);
  return v3 & 1;
}

void BodyStructure.Singlepart.Text.mediaSubtype.getter()
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_1();
}

void BodyStructure.Singlepart.Text.mediaSubtype.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_28_7();
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_8_1();
}

double (*BodyStructure.Singlepart.Text.mediaSubtype.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t BodyStructure.Singlepart.Text.lineCount.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t BodyStructure.Singlepart.Text.lineCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

double (*BodyStructure.Singlepart.Text.lineCount.modify())(_QWORD)
{
  return nullsub_1;
}

void BodyStructure.Singlepart.Text.hash(into:)()
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_36_6();
  swift_bridgeObjectRelease();
  sub_1A594CE88();
  OUTLINED_FUNCTION_8_1();
}

uint64_t BodyStructure.Singlepart.Text.hashValue.getter()
{
  OUTLINED_FUNCTION_15_10();
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_36_6();
  swift_bridgeObjectRelease();
  sub_1A594CE88();
  return OUTLINED_FUNCTION_24_3();
}

uint64_t sub_1A56A7DEC()
{
  return BodyStructure.Singlepart.Text.hashValue.getter();
}

void sub_1A56A7DF8()
{
  BodyStructure.Singlepart.Text.hash(into:)();
}

uint64_t sub_1A56A7E04()
{
  sub_1A594CE64();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  sub_1A594CE88();
  return sub_1A594CED0();
}

BOOL sub_1A56A7E70(uint64_t *a1, uint64_t *a2)
{
  return static BodyStructure.Singlepart.Text.__derived_struct_equals(_:_:)(*a1, a1[1], a1[2], *a2, a2[1], a2[2]);
}

void BodyStructure.Singlepart.Extension.digest.getter()
{
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_39_7();
  OUTLINED_FUNCTION_1();
}

void BodyStructure.Singlepart.Extension.dispositionAndLanguage.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1A56A5A60(v1 + 16, a1, &qword_1EE796920);
}

void BodyStructure.Singlepart.Extension.dispositionAndLanguage.setter(uint64_t a1)
{
  uint64_t v1;

  sub_1A56A5A8C(a1, v1 + 16, &qword_1EE796920);
}

double (*BodyStructure.Singlepart.Extension.dispositionAndLanguage.modify())(_QWORD)
{
  return nullsub_1;
}

__n128 BodyStructure.Singlepart.Extension.init(digest:dispositionAndLanguage:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 result;
  __n128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;

  OUTLINED_FUNCTION_44_2();
  OUTLINED_FUNCTION_43_5(v3, v4, &qword_1EE796920, v5, v6, v7, v8, v9, v11.n128_i64[0]);
  result = v11;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = v0;
  *(__n128 *)(v2 + 16) = v11;
  *(_OWORD *)(v2 + 32) = v12;
  *(_OWORD *)(v2 + 48) = v13;
  *(_OWORD *)(v2 + 64) = v14;
  *(_QWORD *)(v2 + 80) = v15;
  return result;
}

uint64_t BodyStructure.Singlepart.Extension.hash(into:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (v1[1])
  {
    OUTLINED_FUNCTION_7_17();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A594B1D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_7_17();
  }
  if (v1[3] == 1)
    return OUTLINED_FUNCTION_7_17();
  v4 = v1[9];
  v6 = v1[7];
  v5 = v1[8];
  v13 = v1[10];
  v14 = v1[6];
  OUTLINED_FUNCTION_7_17();
  v7 = OUTLINED_FUNCTION_46_5();
  sub_1A552396C(v7, v8);
  sub_1A55239BC(v6, v5, v4, v13);
  BodyStructure.DispositionAndLanguage.hash(into:)(a1);
  v9 = OUTLINED_FUNCTION_46_5();
  return sub_1A5524400(v9, v10, v11, v12, v14, v6, v5, v4, v13);
}

BOOL static BodyStructure.Singlepart.Extension.__derived_struct_equals(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  _BOOL8 result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73[10];

  v4 = a1[1];
  v5 = a2[1];
  if (!v4)
  {
    if (v5)
      return 0;
    goto LABEL_10;
  }
  if (!v5)
    return 0;
  v6 = *a1 == *a2 && v4 == v5;
  if (v6 || (v7 = OUTLINED_FUNCTION_1_16(), result = 0, (v7 & 1) != 0))
  {
LABEL_10:
    v9 = a1[2];
    v10 = a1[3];
    v11 = a1[4];
    v12 = a1[5];
    v13 = a1[6];
    v14 = a1[7];
    v15 = a1[8];
    v16 = a1[9];
    v17 = a1[10];
    v19 = a2[2];
    v18 = a2[3];
    v21 = a2[4];
    v20 = a2[5];
    v23 = a2[6];
    v22 = a2[7];
    v25 = a2[8];
    v24 = a2[9];
    v26 = a2[10];
    if (v10 == 1)
    {
      if (v18 == 1)
        return 1;
      goto LABEL_14;
    }
    if (v18 == 1)
    {
LABEL_14:
      v55 = v9;
      v56 = v10;
      v57 = v11;
      v58 = v12;
      v59 = v13;
      v60 = v14;
      v61 = v15;
      v62 = v16;
      v63 = v17;
      v64 = v19;
      v65 = v18;
      v66 = v21;
      v67 = v20;
      v68 = v23;
      v69 = v22;
      v70 = v25;
      v71 = v24;
      v72 = v26;
      v27 = v10;
      v28 = v24;
      sub_1A552391C(v9, v27, v11, v12, v13, v14, v15, v16, v17);
      sub_1A552391C(v19, v18, v21, v20, v23, v22, v25, v28, v26);
      sub_1A5691EE4(&v55);
      return 0;
    }
    v73[0] = v9;
    v73[1] = v10;
    v73[2] = v11;
    v73[3] = v12;
    v73[4] = v13;
    v73[5] = v14;
    v73[6] = v15;
    v73[7] = v16;
    v73[8] = v17;
    v55 = v19;
    v56 = v18;
    v57 = v21;
    v58 = v20;
    v59 = v23;
    v60 = v22;
    v61 = v25;
    v62 = v24;
    v63 = v26;
    v48 = v9;
    v49 = v11;
    v50 = v12;
    v51 = v13;
    v52 = v14;
    v53 = v15;
    v54 = v16;
    sub_1A552391C(v9, v10, v11, v12, v13, v14, v15, v16, v17);
    v29 = OUTLINED_FUNCTION_0_38();
    sub_1A552391C(v29, v30, v31, v32, v33, v34, v35, v36, v45);
    v47 = static BodyStructure.DispositionAndLanguage.__derived_struct_equals(_:_:)(v73, &v55);
    v37 = OUTLINED_FUNCTION_0_38();
    sub_1A5524400(v37, v38, v39, v40, v41, v42, v43, v44, v46);
    sub_1A5524400(v48, v10, v49, v50, v51, v52, v53, v54, v17);
    return v47;
  }
  return result;
}

_QWORD *sub_1A56A8238(_QWORD *a1, _QWORD *a2)
{
  _s6FieldsVwcp(a2, a1);
  return a2;
}

uint64_t sub_1A56A8274(uint64_t a1, uint64_t a2)
{
  _s6FieldsVwta(a2, a1);
  return a2;
}

uint64_t sub_1A56A82B0(uint64_t a1)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_retain();
  swift_retain();
  swift_retain();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t sub_1A56A8320(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void BodyStructure.Singlepart.Extension.hashValue.getter()
{
  _BYTE v0[72];

  OUTLINED_FUNCTION_15_10();
  BodyStructure.Singlepart.Extension.hash(into:)((uint64_t)v0);
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_8_7();
}

uint64_t sub_1A56A83C0()
{
  _BYTE v1[72];

  sub_1A594CE64();
  BodyStructure.Singlepart.Extension.hash(into:)((uint64_t)v1);
  return sub_1A594CED0();
}

void sub_1A56A83FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  int v11;
  char v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;

  sub_1A56DBCE8();
  v8 = v7;
  OUTLINED_FUNCTION_5_18(32, 0xE100000000000000, v5 + 8);
  if ((v9 & 1) != 0)
    OUTLINED_FUNCTION_20_11();
  OUTLINED_FUNCTION_249();
  if (v12)
  {
    __break(1u);
    goto LABEL_13;
  }
  *(_DWORD *)(v5 + 20) = v11;
  v13 = __OFADD__(v8, v10);
  v14 = v8 + v10;
  if (v13)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  OUTLINED_FUNCTION_42_4();
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  sub_1A56814E0(32, 0xE100000000000000, v5 + 8, *(_DWORD *)(v5 + 20));
  if ((v17 & 1) != 0)
    OUTLINED_FUNCTION_20_11();
  OUTLINED_FUNCTION_249();
  if (v12)
    goto LABEL_15;
  *(_DWORD *)(v5 + 20) = v19;
  v20 = v16 + v18;
  if (__OFADD__(v16, v18))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  OUTLINED_FUNCTION_41_6(a5);
  if (__OFADD__(v20, v21))
LABEL_17:
    __break(1u);
}

void sub_1A56A84F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::Int v8;
  uint64_t v9;
  unint64_t v10;
  Swift::Int v11;
  char v12;
  Swift::String v13;
  Swift::Int v14;
  int v15;
  BOOL v16;
  int v17;
  uint64_t v18;
  Swift::Int v19;
  char v20;
  uint64_t v21;
  int v22;
  BOOL v23;
  Swift::Int v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  Swift::Int v33;
  char v34;
  int v35;
  uint64_t v36;
  Swift::Int v37;
  char v38;
  Swift::Int v39;
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  Swift::Int v62;
  const void *v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  Swift::Int v75;
  char v76;
  int v77;
  Swift::Int v78;
  Swift::Int v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  Swift::Int v83;
  Swift::Int v84;
  char v85;
  char v86;
  Swift::String v87;
  int v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  __int128 v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  Swift::Int v108;
  uint64_t v109;
  uint64_t v110;
  void *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  _BYTE v151[57];
  _BYTE v152[120];
  __int128 v153;
  uint64_t v154;

  OUTLINED_FUNCTION_16_4();
  v2 = v0;
  v4 = v3;
  v6 = v5;
  v7 = v0 + 8;
  v8 = *(unsigned int *)(v0 + 20);
  v9 = OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_5_18(v9, v10, v7);
  if ((v12 & 1) != 0)
  {
    v13._countAndFlagsBits = OUTLINED_FUNCTION_22_13();
    v11 = ByteBuffer._setStringSlowpath(_:at:)(v13, v8);
  }
  v14 = v11;
  v15 = *(_DWORD *)(v2 + 20);
  v16 = __CFADD__(v15, (_DWORD)v11);
  v17 = v15 + v11;
  if (v16)
  {
    __break(1u);
    goto LABEL_37;
  }
  *(_DWORD *)(v2 + 20) = v17;
  OUTLINED_FUNCTION_42_4();
  v19 = v14 + v18;
  if (__OFADD__(v14, v18))
  {
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  OUTLINED_FUNCTION_0_39(32);
  if ((v20 & 1) != 0)
    OUTLINED_FUNCTION_1_29(32);
  OUTLINED_FUNCTION_249();
  if (v16)
    goto LABEL_38;
  *(_DWORD *)(v2 + 20) = v22;
  v23 = __OFADD__(v19, v21);
  v24 = v19 + v21;
  if (v23)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  OUTLINED_FUNCTION_41_6(v4);
  v23 = __OFADD__(v24, v25);
  v26 = v24 + v25;
  if (v23)
  {
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  OUTLINED_FUNCTION_0_39(32);
  if ((v27 & 1) != 0)
    OUTLINED_FUNCTION_1_29(32);
  OUTLINED_FUNCTION_249();
  if (v16)
    goto LABEL_41;
  *(_DWORD *)(v2 + 20) = v29;
  v23 = __OFADD__(v26, v28);
  v30 = v26 + v28;
  if (v23)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  OUTLINED_FUNCTION_35_6(v152, (const void *)(v6 + 16));
  sub_1A56C3A88((uint64_t)v152);
  v23 = __OFADD__(v30, v31);
  v32 = v30 + v31;
  if (v23)
  {
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  OUTLINED_FUNCTION_0_39(32);
  if ((v34 & 1) != 0)
    v33 = OUTLINED_FUNCTION_1_29(32);
  v35 = *(_DWORD *)(v2 + 20);
  if (__CFADD__(v35, (_DWORD)v33))
    goto LABEL_44;
  *(_DWORD *)(v2 + 20) = v35 + v33;
  v36 = v32 + v33;
  if (__OFADD__(v32, v33))
  {
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  sub_1A55DC3E0((const void *)(v6 + 136), v151);
  OUTLINED_FUNCTION_0_39(40);
  if ((v38 & 1) != 0)
    v37 = OUTLINED_FUNCTION_1_29(40);
  v39 = v37;
  v40 = *(_DWORD *)(v2 + 20);
  v16 = __CFADD__(v40, (_DWORD)v37);
  v41 = v40 + v37;
  if (v16)
    goto LABEL_46;
  *(_DWORD *)(v2 + 20) = v41;
  sub_1A55DC3E0(v151, &v133);
  if (sub_1A55DC430((uint64_t)&v133) == 1)
  {
    nullsub_1(&v133);
    v43 = *(_QWORD *)(v42 + 16);
    v153 = *(_OWORD *)v42;
    v154 = v43;
    OUTLINED_FUNCTION_2_32(v42);
    OUTLINED_FUNCTION_37_7(v44, v45, v46, v47, v48, v49, v50, v51, v90, v91, v92, v93, v1, v36, v6, v7, v100, v102, v103,
      v105,
      v107,
      v109,
      v110,
      (uint64_t)v111,
      v112,
      v113,
      v114,
      v115,
      v116,
      v117,
      v118,
      v119,
      v120,
      v121,
      v122,
      v123,
      v124,
      v125,
      v126,
      v127,
      v128,
      v129,
      v130,
      v131,
      v132,
      v133,
      v134,
      v135,
      v136,
      v137,
      v138,
      v139,
      v140,
      v141,
      v142,
      v143,
      v144,
      v145,
      v146,
      v147,
      v148,
      v149,
      v150);
    nullsub_1(&v110);
    v53 = *(_QWORD *)(v52 + 24);
    v54 = *(_QWORD *)(v52 + 32);
    v55 = *(_QWORD *)(v52 + 40);
    v57 = *(_QWORD *)(v52 + 48);
    v56 = *(_QWORD *)(v52 + 56);
    v58 = *(_QWORD *)(v52 + 64);
    v104 = *(_QWORD *)(v52 + 80);
    v106 = *(_QWORD *)(v52 + 72);
    v101 = *(_OWORD *)(v52 + 88);
    v108 = v39;
    v59 = *(_QWORD *)(v52 + 104);
    v60 = *(_QWORD *)(v52 + 112);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    OUTLINED_FUNCTION_16_0();
    sub_1A5523A30(v53, v54, v55, v57, v56, v58, v106, v104, v101, *((uint64_t *)&v101 + 1), v59, v60);
    v61 = sub_1A56A49C8(&v153);
    sub_1A55DC438((uint64_t)v151, sub_1A55241F0);
    v62 = v108 + v61;
    if (__OFADD__(v108, v61))
    {
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
    v7 = v99;
    v36 = v96;
LABEL_26:
    OUTLINED_FUNCTION_0_39(41);
    if ((v76 & 1) != 0)
      v75 = OUTLINED_FUNCTION_1_29(41);
    v77 = *(_DWORD *)(v2 + 20);
    v78 = (v77 + v75);
    if (!__CFADD__(v77, (_DWORD)v75))
    {
      *(_DWORD *)(v2 + 20) = v78;
      v79 = v62 + v75;
      if (!__OFADD__(v62, v75))
      {
        v80 = v36 + v79;
        if (!__OFADD__(v36, v79))
        {
          v110 = 32;
          v111 = (void *)0xE100000000000000;
          sub_1A594CC9C();
          sub_1A594B5F8();
          OUTLINED_FUNCTION_52();
          v82 = v110;
          v81 = v111;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A56814E0(v82, (unint64_t)v81, v7, v78);
          v84 = v83;
          v86 = v85;
          OUTLINED_FUNCTION_72();
          if ((v86 & 1) != 0)
          {
            v87._countAndFlagsBits = v82;
            v87._object = v81;
            v84 = ByteBuffer._setStringSlowpath(_:at:)(v87, v78);
          }
          OUTLINED_FUNCTION_72();
          v88 = *(_DWORD *)(v2 + 20);
          v16 = __CFADD__(v88, (_DWORD)v84);
          v89 = v88 + v84;
          if (!v16)
          {
            *(_DWORD *)(v2 + 20) = v89;
            if (!__OFADD__(v80, v84))
            {
              OUTLINED_FUNCTION_1_3();
              return;
            }
            goto LABEL_51;
          }
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
          goto LABEL_52;
        }
LABEL_49:
        __break(1u);
        goto LABEL_50;
      }
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  nullsub_1(&v133);
  v64 = OUTLINED_FUNCTION_30_5(&v153, v63);
  OUTLINED_FUNCTION_37_7((uint64_t)v64, v65, v66, v67, v68, v69, v70, v71, v90, v91, v92, v93, v94, v95, v97, v98, v100, v102, v103,
    v105,
    v107,
    v109,
    v110,
    (uint64_t)v111,
    v112,
    v113,
    v114,
    v115,
    v116,
    v117,
    v118,
    v119,
    v120,
    v121,
    v122,
    v123,
    v124,
    v125,
    v126,
    v127,
    v128,
    v129,
    v130,
    v131,
    v132,
    v133,
    v134,
    v135,
    v136,
    v137,
    v138,
    v139,
    v140,
    v141,
    v142,
    v143,
    v144,
    v145,
    v146,
    v147,
    v148,
    v149,
    v150);
  nullsub_1(&v110);
  sub_1A56974D0(v72);
  sub_1A56A6E68();
  v74 = v73;
  sub_1A55DC438((uint64_t)v151, sub_1A55241F0);
  v23 = __OFADD__(v39, v74);
  v62 = v39 + v74;
  if (!v23)
    goto LABEL_26;
LABEL_53:
  __break(1u);
}

void sub_1A56A88B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  Swift::Int v8;
  uint64_t v9;
  unint64_t v10;
  Swift::Int v11;
  char v12;
  Swift::Int v13;
  int v14;
  BOOL v15;
  int v16;
  uint64_t v17;
  Swift::Int v18;
  char v19;
  Swift::Int v20;
  uint64_t v21;
  int v22;
  BOOL v23;
  Swift::Int v24;
  uint64_t v25;
  uint64_t v26;
  Swift::Int v27;
  Swift::Int v28;
  Swift::Int v29;
  char v30;
  char v31;
  int v32;
  int v33;
  Swift::String v34;
  Swift::String v35;
  Swift::String v36;

  v5 = v4;
  v7 = v4 + 8;
  v8 = *(unsigned int *)(v4 + 20);
  v9 = OUTLINED_FUNCTION_25_6();
  OUTLINED_FUNCTION_5_18(v9, v10, v7);
  if ((v12 & 1) != 0)
  {
    v34._countAndFlagsBits = OUTLINED_FUNCTION_25_6();
    v11 = OUTLINED_FUNCTION_104(v34, v8);
  }
  v13 = v11;
  v14 = *(_DWORD *)(v5 + 20);
  v15 = __CFADD__(v14, (_DWORD)v11);
  v16 = v14 + v11;
  if (v15)
  {
    __break(1u);
    goto LABEL_16;
  }
  *(_DWORD *)(v5 + 20) = v16;
  OUTLINED_FUNCTION_42_4();
  v18 = v13 + v17;
  if (__OFADD__(v13, v17))
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  sub_1A56814E0(32, 0xE100000000000000, v7, *(_DWORD *)(v5 + 20));
  if ((v19 & 1) != 0)
  {
    v35._countAndFlagsBits = OUTLINED_FUNCTION_3_24();
    OUTLINED_FUNCTION_104(v35, v20);
  }
  OUTLINED_FUNCTION_249();
  if (v15)
    goto LABEL_17;
  *(_DWORD *)(v5 + 20) = v22;
  v23 = __OFADD__(v18, v21);
  v24 = v18 + v21;
  if (v23)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  OUTLINED_FUNCTION_41_6(a4);
  v26 = v24 + v25;
  if (__OFADD__(v24, v25))
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  sub_1A594CC9C();
  sub_1A594B5F8();
  OUTLINED_FUNCTION_72();
  v27 = *(unsigned int *)(v5 + 20);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A56814E0(32, 0xE100000000000000, v7, v27);
  v29 = v28;
  v31 = v30;
  OUTLINED_FUNCTION_72();
  if ((v31 & 1) != 0)
  {
    v36._countAndFlagsBits = 32;
    v36._object = (void *)0xE100000000000000;
    v29 = OUTLINED_FUNCTION_104(v36, v27);
  }
  OUTLINED_FUNCTION_72();
  v32 = *(_DWORD *)(v5 + 20);
  v15 = __CFADD__(v32, (_DWORD)v29);
  v33 = v32 + v29;
  if (v15)
    goto LABEL_20;
  *(_DWORD *)(v5 + 20) = v33;
  if (__OFADD__(v26, v29))
LABEL_21:
    __break(1u);
}

void sub_1A56A8A54(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v4;
  unint64_t v5;
  Swift::Int v6;
  Swift::Int v7;
  Swift::Int v8;
  Swift::Int v9;
  char v10;
  Swift::String v11;
  int v12;
  BOOL v13;
  int v14;
  uint64_t v15;
  Swift::Int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Swift::Int v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  Swift::Int v26;
  char v27;
  Swift::String v28;
  Swift::Int v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  Swift::Int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[16];
  _QWORD v39[5];
  unint64_t v40;
  unint64_t v41;

  v2 = v1;
  sub_1A56A5AB8((uint64_t)a1, (uint64_t)v38, &qword_1EE7993B0);
  sub_1A56A5AB8((uint64_t)v38, (uint64_t)&v40, &qword_1EE7993B0);
  v4 = v41;
  if (v41)
  {
    v5 = v40;
    OUTLINED_FUNCTION_16_0();
    sub_1A56BA418(v5, v4);
    v7 = v6;
    sub_1A5503278((uint64_t)v38);
  }
  else
  {
    v8 = *(unsigned int *)(v2 + 20);
    sub_1A56814E0(4999502, 0xE300000000000000, v2 + 8, *(_DWORD *)(v2 + 20));
    if ((v10 & 1) != 0)
    {
      v11._countAndFlagsBits = 4999502;
      v11._object = (void *)0xE300000000000000;
      v9 = ByteBuffer._setStringSlowpath(_:at:)(v11, v8);
    }
    v7 = v9;
    v12 = *(_DWORD *)(v2 + 20);
    v13 = __CFADD__(v12, (_DWORD)v9);
    v14 = v12 + v9;
    if (v13)
      goto LABEL_19;
    *(_DWORD *)(v2 + 20) = v14;
  }
  v15 = a1[3];
  if (v15 == 1)
  {
    v16 = 0;
  }
  else
  {
    v34 = v7;
    v17 = a1[2];
    v35 = a1[4];
    v18 = a1[6];
    v37 = a1[5];
    v19 = a1[7];
    v36 = a1[8];
    v21 = a1[9];
    v20 = a1[10];
    v22 = *(unsigned int *)(v2 + 20);
    swift_retain();
    swift_retain();
    sub_1A552391C(v17, v15, v35, v37, v18, v19, v36, v21, v20);
    v23 = OUTLINED_FUNCTION_3_24();
    sub_1A56814E0(v23, v24, v25, v22);
    if ((v27 & 1) != 0)
    {
      v28._countAndFlagsBits = 32;
      v28._object = (void *)0xE100000000000000;
      v26 = ByteBuffer._setStringSlowpath(_:at:)(v28, v22);
    }
    v29 = v26;
    v39[0] = v17;
    v39[1] = v15;
    v39[2] = v35;
    v39[3] = v37;
    v39[4] = v18;
    v30 = *(_DWORD *)(v2 + 20);
    v13 = __CFADD__(v30, (_DWORD)v26);
    v31 = v30 + v26;
    if (v13)
      goto LABEL_17;
    *(_DWORD *)(v2 + 20) = v31;
    sub_1A56A10F0((uint64_t)v39);
    v33 = v32;
    swift_release();
    swift_release();
    sub_1A5524400(v17, v15, v35, v37, v18, v19, v36, v21, v20);
    v16 = v29 + v33;
    if (__OFADD__(v29, v33))
    {
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
      return;
    }
    v7 = v34;
  }
  if (__OFADD__(v7, v16))
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
}

uint64_t sub_1A56A8C98(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for Envelope(a2, a1);
  return a2;
}

uint64_t sub_1A56A8CD4(uint64_t a1, uint64_t a2)
{
  assignWithTake for Envelope(a2, a1);
  return a2;
}

uint64_t sub_1A56A8D10(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for BodyStructure(a2, a1);
  return a2;
}

uint64_t sub_1A56A8D4C(uint64_t a1, uint64_t a2)
{
  assignWithTake for BodyStructure(a2, a1);
  return a2;
}

uint64_t sub_1A56A8D88(uint64_t a1)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_retain();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t sub_1A56A8E2C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1A56A8ED4()
{
  unint64_t result;

  result = qword_1EE7A9610;
  if (!qword_1EE7A9610)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for BodyStructure.Singlepart, &type metadata for BodyStructure.Singlepart);
    atomic_store(result, (unint64_t *)&qword_1EE7A9610);
  }
  return result;
}

unint64_t sub_1A56A8F14()
{
  unint64_t result;

  result = qword_1EE7A9618;
  if (!qword_1EE7A9618)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for BodyStructure.Singlepart.Kind, &type metadata for BodyStructure.Singlepart.Kind);
    atomic_store(result, (unint64_t *)&qword_1EE7A9618);
  }
  return result;
}

unint64_t sub_1A56A8F54()
{
  unint64_t result;

  result = qword_1EE7A9620;
  if (!qword_1EE7A9620)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for BodyStructure.Singlepart.Message, &type metadata for BodyStructure.Singlepart.Message);
    atomic_store(result, (unint64_t *)&qword_1EE7A9620);
  }
  return result;
}

unint64_t sub_1A56A8F94()
{
  unint64_t result;

  result = qword_1EE7A9628;
  if (!qword_1EE7A9628)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for BodyStructure.Singlepart.Text, &type metadata for BodyStructure.Singlepart.Text);
    atomic_store(result, (unint64_t *)&qword_1EE7A9628);
  }
  return result;
}

unint64_t sub_1A56A8FD4()
{
  unint64_t result;

  result = qword_1EE7A9630;
  if (!qword_1EE7A9630)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for BodyStructure.Singlepart.Extension, &type metadata for BodyStructure.Singlepart.Extension);
    atomic_store(result, (unint64_t *)&qword_1EE7A9630);
  }
  return result;
}

uint64_t _s10SinglepartVwxx(_QWORD *a1)
{
  uint64_t result;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = a1[12];
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    result = a1[14];
    if (result)
    {
      if (result == 1)
        return result;
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
    }
    result = a1[18];
    if (result)
    {
      swift_bridgeObjectRelease();
      result = a1[21];
      if (result)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

_QWORD *_s10SinglepartVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  size_t v12;
  uint64_t v13;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  a1[10] = a2[10];
  v9 = a2[12];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v9 == 1)
  {
    v10 = a1 + 11;
    v11 = a2 + 11;
    v12 = 88;
LABEL_6:
    memcpy(v10, v11, v12);
    return a1;
  }
  a1[11] = a2[11];
  a1[12] = v9;
  v13 = a2[14];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v13)
  {
    if (v13 == 1)
    {
      v10 = a1 + 13;
      v11 = a2 + 13;
      v12 = 72;
      goto LABEL_6;
    }
    a1[13] = a2[13];
    a1[14] = v13;
    v16 = a2[16];
    a1[15] = a2[15];
    a1[16] = v16;
    a1[17] = a2[17];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    v15 = *(_OWORD *)(a2 + 15);
    *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
    *(_OWORD *)(a1 + 15) = v15;
    a1[17] = a2[17];
  }
  v17 = a2[18];
  if (v17)
  {
    a1[18] = v17;
    v18 = a2[21];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v18)
    {
      v19 = a2[20];
      a1[19] = a2[19];
      a1[20] = v19;
      a1[21] = v18;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
    else
    {
      *(_OWORD *)(a1 + 19) = *(_OWORD *)(a2 + 19);
      a1[21] = a2[21];
    }
  }
  else
  {
    v20 = *((_OWORD *)a2 + 10);
    *((_OWORD *)a1 + 9) = *((_OWORD *)a2 + 9);
    *((_OWORD *)a1 + 10) = v20;
  }
  return a1;
}

uint64_t _s10SinglepartVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _OWORD *v24;
  _OWORD *v25;
  __int128 *v26;
  __int128 *v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v4 = *(_QWORD *)(a2 + 96);
  if (*(_QWORD *)(a1 + 96) == 1)
  {
    if (v4 != 1)
    {
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      v5 = (_QWORD *)(a1 + 104);
      v6 = (_OWORD *)(a2 + 104);
      v7 = *(_QWORD *)(a2 + 112);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      if (v7)
      {
        if (v7 != 1)
          goto LABEL_12;
        goto LABEL_15;
      }
LABEL_18:
      v14 = *v6;
      v15 = v6[1];
      v5[4] = *((_QWORD *)v6 + 4);
      *(_OWORD *)v5 = v14;
      *((_OWORD *)v5 + 1) = v15;
LABEL_19:
      v16 = *(_QWORD *)(a2 + 144);
      if (!v16)
      {
        v18 = *(_OWORD *)(a2 + 160);
        *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
        *(_OWORD *)(a1 + 160) = v18;
        return a1;
      }
      goto LABEL_20;
    }
LABEL_8:
    v8 = (void *)(a1 + 88);
    v9 = (const void *)(a2 + 88);
    v10 = 88;
LABEL_16:
    memcpy(v8, v9, v10);
    return a1;
  }
  if (v4 == 1)
  {
    sub_1A56A96D8((_QWORD *)(a1 + 88));
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v5 = (_QWORD *)(a1 + 104);
  v6 = (_OWORD *)(a2 + 104);
  v11 = *(_QWORD *)(a1 + 112);
  v12 = *(_QWORD *)(a2 + 112);
  if (v11 == 1)
  {
    if (v12)
    {
      if (v12 != 1)
      {
LABEL_12:
        *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
        *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
        *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
        *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
        *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_retain();
        swift_retain();
        swift_retain();
        goto LABEL_19;
      }
      goto LABEL_15;
    }
    goto LABEL_18;
  }
  if (v12 == 1)
  {
    sub_1A56A6174((_QWORD *)(a1 + 104));
LABEL_15:
    v8 = v5;
    v9 = v6;
    v10 = 72;
    goto LABEL_16;
  }
  if (v11)
  {
    if (v12)
    {
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_1A56A27CC(a1 + 104);
      v20 = *(_QWORD *)(a2 + 136);
      v21 = *(_OWORD *)(a2 + 120);
      *(_OWORD *)v5 = *v6;
      *(_OWORD *)(a1 + 120) = v21;
      *(_QWORD *)(a1 + 136) = v20;
    }
  }
  else if (v12)
  {
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    v22 = *v6;
    v23 = *(_OWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_OWORD *)v5 = v22;
    *(_OWORD *)(a1 + 120) = v23;
  }
  v24 = (_OWORD *)(a1 + 144);
  v25 = (_OWORD *)(a2 + 144);
  v16 = *(_QWORD *)(a2 + 144);
  if (!*(_QWORD *)(a1 + 144))
  {
    if (!v16)
    {
      v29 = *(_OWORD *)(a2 + 160);
      *v24 = *v25;
      *(_OWORD *)(a1 + 160) = v29;
      return a1;
    }
LABEL_20:
    *(_QWORD *)(a1 + 144) = v16;
    v17 = *(_QWORD *)(a2 + 168);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (!v17)
    {
      v19 = *(_OWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      *(_OWORD *)(a1 + 152) = v19;
      return a1;
    }
    goto LABEL_21;
  }
  if (!v16)
  {
    sub_1A56A2834(a1 + 144);
    v30 = *(_OWORD *)(a2 + 160);
    *v24 = *v25;
    *(_OWORD *)(a1 + 160) = v30;
    return a1;
  }
  *(_QWORD *)(a1 + 144) = v16;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v26 = (__int128 *)(a1 + 152);
  v27 = (__int128 *)(a2 + 152);
  v28 = *(_QWORD *)(a2 + 168);
  if (!*(_QWORD *)(a1 + 168))
  {
    if (!v28)
    {
      v31 = *v27;
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      *v26 = v31;
      return a1;
    }
LABEL_21:
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return a1;
  }
  if (v28)
  {
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1A56A2800(a1 + 152);
    v32 = *(_QWORD *)(a2 + 168);
    *v26 = *v27;
    *(_QWORD *)(a1 + 168) = v32;
  }
  return a1;
}

_QWORD *sub_1A56A96D8(_QWORD *a1)
{
  _s10SinglepartV9ExtensionVwxx(a1);
  return a1;
}

void *__swift_memcpy176_8_0(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xB0uLL);
}

_QWORD *_s10SinglepartVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  v4 = a2[5];
  a1[4] = a2[4];
  a1[5] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[7];
  a1[6] = a2[6];
  a1[7] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[9];
  a1[8] = a2[8];
  a1[9] = v6;
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  if (a1[12] == 1)
    goto LABEL_4;
  v7 = a2[12];
  if (v7 != 1)
  {
    a1[11] = a2[11];
    a1[12] = v7;
    swift_bridgeObjectRelease();
    v11 = a1[14];
    if (v11 == 1)
    {
LABEL_8:
      v8 = a1 + 13;
      v9 = a2 + 13;
      v10 = 72;
      goto LABEL_9;
    }
    v12 = a2[14];
    if (v12 == 1)
    {
      sub_1A56A6174(a1 + 13);
      goto LABEL_8;
    }
    if (v11)
    {
      if (v12)
      {
        a1[13] = a2[13];
        a1[14] = v12;
        swift_bridgeObjectRelease();
        a1[15] = a2[15];
        swift_release();
        a1[16] = a2[16];
        swift_release();
        a1[17] = a2[17];
        swift_release();
        goto LABEL_16;
      }
      sub_1A56A27CC((uint64_t)(a1 + 13));
    }
    v14 = *(_OWORD *)(a2 + 15);
    *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
    *(_OWORD *)(a1 + 15) = v14;
    a1[17] = a2[17];
LABEL_16:
    v15 = a2[18];
    if (a1[18])
    {
      if (v15)
      {
        a1[18] = v15;
        swift_bridgeObjectRelease();
        if (a1[21])
        {
          v16 = a2[21];
          if (v16)
          {
            v17 = a2[20];
            a1[19] = a2[19];
            a1[20] = v17;
            swift_bridgeObjectRelease();
            a1[21] = v16;
            swift_bridgeObjectRelease();
            return a1;
          }
          sub_1A56A2800((uint64_t)(a1 + 19));
        }
        *(_OWORD *)(a1 + 19) = *(_OWORD *)(a2 + 19);
        a1[21] = a2[21];
        return a1;
      }
      sub_1A56A2834((uint64_t)(a1 + 18));
    }
    v18 = *((_OWORD *)a2 + 10);
    *((_OWORD *)a1 + 9) = *((_OWORD *)a2 + 9);
    *((_OWORD *)a1 + 10) = v18;
    return a1;
  }
  sub_1A56A96D8(a1 + 11);
LABEL_4:
  v8 = a1 + 11;
  v9 = a2 + 11;
  v10 = 88;
LABEL_9:
  memcpy(v8, v9, v10);
  return a1;
}

uint64_t _s10SinglepartVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 176))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s10SinglepartVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 176) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 176) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for BodyStructure.Singlepart()
{
  OUTLINED_FUNCTION_3_1();
}

void type metadata accessor for BodyStructure.Singlepart.Kind()
{
  OUTLINED_FUNCTION_3_1();
}

void _s10SinglepartV7MessageVwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(a1 + 136);
  v3 = *(_QWORD *)(a1 + 144);
  a1 += 136;
  sub_1A55241F0(v2, v3, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_BYTE *)(a1 + 176));
}

uint64_t _s10SinglepartV7MessageVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 56);
  v6 = a2 + 136;
  v29 = *(_QWORD *)(a2 + 136);
  *(_DWORD *)(a1 + 51) = *(_DWORD *)(a2 + 51);
  v8 = *(_QWORD *)(a2 + 64);
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = v8;
  v9 = *(_QWORD *)(a2 + 80);
  v21 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 72) = v7;
  *(_QWORD *)(a1 + 80) = v9;
  v11 = *(_QWORD *)(a2 + 96);
  v10 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 88) = v21;
  *(_QWORD *)(a1 + 96) = v11;
  v12 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = v10;
  *(_QWORD *)(a1 + 112) = v12;
  v13 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v13;
  v27 = *(_QWORD *)(a2 + 152);
  v28 = *(_QWORD *)(a2 + 144);
  v25 = *(_QWORD *)(a2 + 168);
  v26 = *(_QWORD *)(a2 + 160);
  v23 = *(_QWORD *)(a2 + 184);
  v24 = *(_QWORD *)(a2 + 176);
  v22 = *(_QWORD *)(a2 + 192);
  v37 = *(_QWORD *)(a2 + 208);
  v38 = *(_QWORD *)(a2 + 200);
  v35 = *(_QWORD *)(a2 + 224);
  v36 = *(_QWORD *)(a2 + 216);
  v33 = *(_QWORD *)(a2 + 240);
  v34 = *(_QWORD *)(a2 + 232);
  v31 = *(_QWORD *)(a2 + 256);
  v32 = *(_QWORD *)(a2 + 248);
  v14 = *(_QWORD *)(a2 + 272);
  v30 = *(_QWORD *)(a2 + 264);
  v15 = *(_QWORD *)(a2 + 280);
  v16 = *(_QWORD *)(a2 + 288);
  v17 = *(_QWORD *)(a2 + 296);
  v18 = *(_QWORD *)(a2 + 304);
  v19 = *(_BYTE *)(a2 + 312);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_retain();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A552370C(v29, v28, v27, v26, v25, v24, v23, v22, v38, v37, v36, v35, v34, v33, v32, v31, v30, v14, v15,
    v16,
    v17,
    v18,
    v19);
  *(_QWORD *)(a1 + 136) = v29;
  *(_QWORD *)(a1 + 144) = v28;
  *(_QWORD *)(a1 + 152) = v27;
  *(_QWORD *)(a1 + 160) = v26;
  *(_QWORD *)(a1 + 168) = v25;
  *(_QWORD *)(a1 + 176) = v24;
  *(_QWORD *)(a1 + 184) = v23;
  *(_QWORD *)(a1 + 192) = v22;
  *(_QWORD *)(a1 + 200) = v38;
  *(_QWORD *)(a1 + 208) = v37;
  *(_QWORD *)(a1 + 216) = v36;
  *(_QWORD *)(a1 + 224) = v35;
  *(_QWORD *)(a1 + 232) = v34;
  *(_QWORD *)(a1 + 240) = v33;
  *(_QWORD *)(a1 + 248) = v32;
  *(_QWORD *)(a1 + 256) = v31;
  *(_QWORD *)(a1 + 264) = v30;
  *(_QWORD *)(a1 + 272) = v14;
  *(_QWORD *)(a1 + 280) = v15;
  *(_QWORD *)(a1 + 288) = v16;
  *(_QWORD *)(a1 + 296) = v17;
  *(_QWORD *)(a1 + 304) = v18;
  *(_BYTE *)(a1 + 312) = v19;
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(v6 + 184);
  return a1;
}

uint64_t _s10SinglepartV7MessageVwca(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = a2[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = v2[2];
  *(_QWORD *)(a1 + 24) = v2[3];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = v2[4];
  swift_retain();
  swift_release();
  *(_DWORD *)(a1 + 40) = *((_DWORD *)v2 + 10);
  *(_DWORD *)(a1 + 44) = *((_DWORD *)v2 + 11);
  *(_DWORD *)(a1 + 48) = *((_DWORD *)v2 + 12);
  *(_WORD *)(a1 + 52) = *((_WORD *)v2 + 26);
  *(_BYTE *)(a1 + 54) = *((_BYTE *)v2 + 54);
  *(_QWORD *)(a1 + 56) = v2[7];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = v2[8];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = v2[9];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = v2[10];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = v2[11];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = v2[12];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = v2[13];
  *(_QWORD *)(a1 + 112) = v2[14];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = v2[15];
  *(_QWORD *)(a1 + 128) = v2[16];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = v2[17];
  v5 = v2[18];
  v2 += 17;
  v6 = v2[4];
  v7 = v2[5];
  v8 = v2[6];
  v32 = v2[8];
  v33 = v2[9];
  v34 = v2[10];
  v35 = v2[11];
  v36 = v2[12];
  v37 = v2[13];
  v38 = v2[14];
  v39 = v2[15];
  v40 = v2[16];
  v41 = v2[17];
  v42 = v2[18];
  v43 = v2[19];
  v45 = v2[20];
  v46 = v2[21];
  v44 = *((_BYTE *)v2 + 176);
  v9 = v4;
  v10 = v5;
  v11 = v2[2];
  v12 = v2[3];
  v13 = v2[7];
  sub_1A552370C(v4, v5, v11, v12, v6, v7, v8, v13, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42,
    v43,
    v45,
    v46,
    v44);
  v14 = *(_QWORD *)(a1 + 136);
  *(_QWORD *)(a1 + 136) = v9;
  v15 = *(_QWORD *)(a1 + 144);
  v16 = *(_QWORD *)(a1 + 152);
  *(_QWORD *)(a1 + 144) = v10;
  *(_QWORD *)(a1 + 152) = v11;
  v17 = *(_QWORD *)(a1 + 160);
  v18 = *(_QWORD *)(a1 + 168);
  *(_QWORD *)(a1 + 160) = v12;
  *(_QWORD *)(a1 + 168) = v6;
  v19 = *(_QWORD *)(a1 + 176);
  v20 = *(_QWORD *)(a1 + 184);
  *(_QWORD *)(a1 + 176) = v7;
  *(_QWORD *)(a1 + 184) = v8;
  v21 = *(_QWORD *)(a1 + 192);
  v22 = *(_OWORD *)(a1 + 200);
  *(_QWORD *)(a1 + 192) = v13;
  *(_QWORD *)(a1 + 200) = v32;
  v23 = *(_OWORD *)(a1 + 216);
  *(_QWORD *)(a1 + 208) = v33;
  *(_QWORD *)(a1 + 216) = v34;
  v24 = *(_OWORD *)(a1 + 232);
  *(_QWORD *)(a1 + 224) = v35;
  *(_QWORD *)(a1 + 232) = v36;
  v25 = *(_OWORD *)(a1 + 248);
  *(_QWORD *)(a1 + 240) = v37;
  *(_QWORD *)(a1 + 248) = v38;
  *(_QWORD *)(a1 + 256) = v39;
  v26 = *(_OWORD *)(a1 + 264);
  v27 = *(_OWORD *)(a1 + 280);
  *(_QWORD *)(a1 + 264) = v40;
  *(_QWORD *)(a1 + 272) = v41;
  *(_QWORD *)(a1 + 280) = v42;
  v28 = *(_BYTE *)(a1 + 312);
  *(_BYTE *)(a1 + 312) = v44;
  v29 = *(_QWORD *)(a1 + 296);
  v30 = *(_QWORD *)(a1 + 304);
  *(_QWORD *)(a1 + 288) = v43;
  *(_QWORD *)(a1 + 296) = v45;
  *(_QWORD *)(a1 + 304) = v46;
  sub_1A55241F0(v14, v15, v16, v17, v18, v19, v20, v21, v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25, *((uint64_t *)&v25 + 1), v26, *((uint64_t *)&v26 + 1), v27,
    *((uint64_t *)&v27 + 1),
    v29,
    v30,
    v28);
  *(_QWORD *)(a1 + 320) = v2[23];
  return a1;
}

void *__swift_memcpy328_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x148uLL);
}

uint64_t _s10SinglepartV7MessageVwta(uint64_t a1, uint64_t a2)
{
  __int128 *v4;
  __int128 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  __int128 v28;

  v4 = (__int128 *)(a1 + 264);
  v5 = (__int128 *)(a2 + 264);
  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_WORD *)(a1 + 52) = *(_WORD *)(a2 + 52);
  *(_BYTE *)(a1 + 54) = *(_BYTE *)(a2 + 54);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v9;
  swift_bridgeObjectRelease();
  v10 = *((_BYTE *)v5 + 48);
  v11 = *(_QWORD *)(a1 + 136);
  v12 = *(_QWORD *)(a1 + 144);
  v13 = *(_QWORD *)(a1 + 152);
  v14 = *(_QWORD *)(a1 + 160);
  v15 = *(_QWORD *)(a1 + 168);
  v16 = *(_QWORD *)(a1 + 176);
  v17 = *(_QWORD *)(a1 + 184);
  v18 = *(_QWORD *)(a1 + 192);
  v19 = *(_OWORD *)(a1 + 200);
  v20 = *(_OWORD *)(a1 + 216);
  v21 = *(_OWORD *)(a1 + 232);
  v22 = *(_OWORD *)(a1 + 248);
  v23 = *v4;
  v24 = v4[1];
  v25 = *((_QWORD *)v4 + 4);
  v26 = *(_QWORD *)(a1 + 304);
  v27 = *((_BYTE *)v4 + 48);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  v28 = v5[1];
  *v4 = *v5;
  v4[1] = v28;
  v4[2] = v5[2];
  *((_BYTE *)v4 + 48) = v10;
  sub_1A55241F0(v11, v12, v13, v14, v15, v16, v17, v18, v19, *((uint64_t *)&v19 + 1), v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24,
    *((uint64_t *)&v24 + 1),
    v25,
    v26,
    v27);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  return a1;
}

uint64_t _s10SinglepartV7MessageVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 328))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s10SinglepartV7MessageVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 328) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 328) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for BodyStructure.Singlepart.Message()
{
  OUTLINED_FUNCTION_3_1();
}

void sub_1A56AA2E8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_1();
}

_QWORD *_s10SinglepartV4TextVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

_QWORD *_s10SinglepartV4TextVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t _s10SinglepartV4TextVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

void type metadata accessor for BodyStructure.Singlepart.Text()
{
  OUTLINED_FUNCTION_3_1();
}

uint64_t _s10SinglepartV9ExtensionVwxx(_QWORD *a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  result = a1[3];
  if (result)
  {
    if (result == 1)
      return result;
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
  result = a1[7];
  if (result)
  {
    swift_bridgeObjectRelease();
    result = a1[10];
    if (result)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

_QWORD *_s10SinglepartV9ExtensionVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2 + 2;
  v6 = a2[3];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v6)
  {
    if (v6 == 1)
    {
      memcpy(a1 + 2, v5, 0x48uLL);
      return a1;
    }
    a1[2] = a2[2];
    a1[3] = v6;
    v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    a1[6] = a2[6];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    v7 = v5[1];
    *((_OWORD *)a1 + 1) = *v5;
    *((_OWORD *)a1 + 2) = v7;
    a1[6] = *((_QWORD *)v5 + 4);
  }
  v9 = a2[7];
  if (v9)
  {
    a1[7] = v9;
    v10 = a2[10];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v10)
    {
      v11 = a2[9];
      a1[8] = a2[8];
      a1[9] = v11;
      a1[10] = v10;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
    else
    {
      *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
      a1[10] = a2[10];
    }
  }
  else
  {
    v12 = *(_OWORD *)(a2 + 9);
    *(_OWORD *)(a1 + 7) = *(_OWORD *)(a2 + 7);
    *(_OWORD *)(a1 + 9) = v12;
  }
  return a1;
}

uint64_t _s10SinglepartV9ExtensionVwca(uint64_t a1, uint64_t a2)
{
  __int128 *v4;
  __int128 *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD *v16;
  _OWORD *v17;
  __int128 *v18;
  __int128 *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = (__int128 *)(a1 + 16);
  v5 = (__int128 *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a2 + 24);
  if (v6 == 1)
  {
    if (!v7)
    {
      v8 = *v5;
      v9 = *(_OWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *v4 = v8;
      *(_OWORD *)(a1 + 32) = v9;
LABEL_12:
      v10 = *(_QWORD *)(a2 + 56);
      if (!v10)
      {
        v11 = *(_OWORD *)(a2 + 72);
        *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
        *(_OWORD *)(a1 + 72) = v11;
        return a1;
      }
      goto LABEL_24;
    }
    if (v7 != 1)
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_retain();
      swift_retain();
      swift_retain();
      goto LABEL_12;
    }
    goto LABEL_7;
  }
  if (v7 == 1)
  {
    sub_1A56A6174((_QWORD *)(a1 + 16));
LABEL_7:
    memcpy((void *)(a1 + 16), (const void *)(a2 + 16), 0x48uLL);
    return a1;
  }
  if (v6)
  {
    if (v7)
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_1A56A27CC(a1 + 16);
      v12 = *(_QWORD *)(a2 + 48);
      v13 = *(_OWORD *)(a2 + 32);
      *v4 = *v5;
      *(_OWORD *)(a1 + 32) = v13;
      *(_QWORD *)(a1 + 48) = v12;
    }
  }
  else if (v7)
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    v14 = *v5;
    v15 = *(_OWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *v4 = v14;
    *(_OWORD *)(a1 + 32) = v15;
  }
  v16 = (_OWORD *)(a1 + 56);
  v17 = (_OWORD *)(a2 + 56);
  v10 = *(_QWORD *)(a2 + 56);
  if (!*(_QWORD *)(a1 + 56))
  {
    if (!v10)
    {
      v25 = *(_OWORD *)(a2 + 72);
      *v16 = *v17;
      *(_OWORD *)(a1 + 72) = v25;
      return a1;
    }
LABEL_24:
    *(_QWORD *)(a1 + 56) = v10;
    v21 = *(_QWORD *)(a2 + 80);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (!v21)
    {
      v22 = *(_OWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = v22;
      return a1;
    }
    goto LABEL_25;
  }
  if (!v10)
  {
    sub_1A56A2834(a1 + 56);
    v23 = *(_OWORD *)(a2 + 72);
    *v16 = *v17;
    *(_OWORD *)(a1 + 72) = v23;
    return a1;
  }
  *(_QWORD *)(a1 + 56) = v10;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v18 = (__int128 *)(a1 + 64);
  v19 = (__int128 *)(a2 + 64);
  v20 = *(_QWORD *)(a2 + 80);
  if (!*(_QWORD *)(a1 + 80))
  {
    if (!v20)
    {
      v24 = *v19;
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *v18 = v24;
      return a1;
    }
LABEL_25:
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return a1;
  }
  if (v20)
  {
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1A56A2800(a1 + 64);
    v26 = *(_QWORD *)(a2 + 80);
    *v18 = *v19;
    *(_QWORD *)(a1 + 80) = v26;
  }
  return a1;
}

void *__swift_memcpy88_8_1(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x58uLL);
}

_QWORD *_s10SinglepartV9ExtensionVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a1[3];
  if (v5 == 1)
    goto LABEL_4;
  v6 = a2[3];
  if (v6 != 1)
  {
    if (v5)
    {
      if (v6)
      {
        a1[2] = a2[2];
        a1[3] = v6;
        swift_bridgeObjectRelease();
        a1[4] = a2[4];
        swift_release();
        a1[5] = a2[5];
        swift_release();
        a1[6] = a2[6];
        swift_release();
        goto LABEL_11;
      }
      sub_1A56A27CC((uint64_t)(a1 + 2));
    }
    v8 = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    *((_OWORD *)a1 + 2) = v8;
    a1[6] = a2[6];
LABEL_11:
    v9 = a2[7];
    if (a1[7])
    {
      if (v9)
      {
        a1[7] = v9;
        swift_bridgeObjectRelease();
        if (a1[10])
        {
          v10 = a2[10];
          if (v10)
          {
            v11 = a2[9];
            a1[8] = a2[8];
            a1[9] = v11;
            swift_bridgeObjectRelease();
            a1[10] = v10;
            swift_bridgeObjectRelease();
            return a1;
          }
          sub_1A56A2800((uint64_t)(a1 + 8));
        }
        *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
        a1[10] = a2[10];
        return a1;
      }
      sub_1A56A2834((uint64_t)(a1 + 7));
    }
    v12 = *(_OWORD *)(a2 + 9);
    *(_OWORD *)(a1 + 7) = *(_OWORD *)(a2 + 7);
    *(_OWORD *)(a1 + 9) = v12;
    return a1;
  }
  sub_1A56A6174(a1 + 2);
LABEL_4:
  memcpy(a1 + 2, a2 + 2, 0x48uLL);
  return a1;
}

uint64_t _s10SinglepartV9ExtensionVwet(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 88))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s10SinglepartV9ExtensionVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 88) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

void type metadata accessor for BodyStructure.Singlepart.Extension()
{
  OUTLINED_FUNCTION_3_1();
}

void OUTLINED_FUNCTION_0_39(uint64_t a1)
{
  Swift::UInt32 v1;
  uint64_t v2;

  sub_1A56814E0(a1, 0xE100000000000000, v2, v1);
}

Swift::Int OUTLINED_FUNCTION_1_29(uint64_t a1)
{
  Swift::Int v1;
  unint64_t v2;

  v2 = 0xE100000000000000;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v1);
}

__n128 OUTLINED_FUNCTION_2_32(uint64_t a1)
{
  uint64_t v1;
  __n128 result;

  *(_OWORD *)(v1 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v1 + 40) = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 56);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 72);
  *(_OWORD *)(v1 + 88) = *(_OWORD *)(a1 + 88);
  result = *(__n128 *)(a1 + 104);
  *(__n128 *)(v1 + 104) = result;
  return result;
}

void OUTLINED_FUNCTION_5_18(uint64_t a1, unint64_t a2, uint64_t a3)
{
  Swift::UInt32 v3;

  sub_1A56814E0(a1, a2, a3, v3);
}

uint64_t OUTLINED_FUNCTION_9_20()
{
  return sub_1A594CE88();
}

Swift::Int OUTLINED_FUNCTION_20_11()
{
  Swift::Int v0;
  Swift::String v1;

  v1._countAndFlagsBits = 32;
  v1._object = (void *)0xE100000000000000;
  return ByteBuffer._setStringSlowpath(_:at:)(v1, v0);
}

uint64_t OUTLINED_FUNCTION_22_13()
{
  return 0x4547415353454D22;
}

uint64_t OUTLINED_FUNCTION_24_7(uint64_t a1)
{
  void (*v1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char);

  return sub_1A55DC438(a1, v1);
}

uint64_t OUTLINED_FUNCTION_25_6()
{
  return 0x20225458455422;
}

uint64_t OUTLINED_FUNCTION_27_7()
{
  return sub_1A594B1D8();
}

uint64_t OUTLINED_FUNCTION_28_7()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_30_6()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_34_6()
{
  return BodyStructure.Singlepart.Message.hash(into:)();
}

double OUTLINED_FUNCTION_35_7()
{
  uint64_t v0;

  sub_1A55DC430(v0 - 232);
  return nullsub_1(v0 - 232);
}

uint64_t OUTLINED_FUNCTION_36_6()
{
  return sub_1A594B1D8();
}

void *OUTLINED_FUNCTION_37_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a69;

  return sub_1A55DC3E0(&a69, &a23);
}

uint64_t OUTLINED_FUNCTION_39_7()
{
  uint64_t v0;

  return v0;
}

void *OUTLINED_FUNCTION_40_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  return sub_1A55DC3E0(&STACK[0x240], va);
}

void OUTLINED_FUNCTION_41_6(uint64_t *a1)
{
  sub_1A56A31A0(a1);
}

void OUTLINED_FUNCTION_42_4()
{
  sub_1A56DAA90();
}

void OUTLINED_FUNCTION_43_5(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_1A56A5AB8(v9, (uint64_t)&a9, a3);
}

void *OUTLINED_FUNCTION_45_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  return sub_1A55DC3E0(&a9, (void *)(v9 - 232));
}

uint64_t OUTLINED_FUNCTION_46_5()
{
  uint64_t v0;

  return v0;
}

uint64_t ByteRange.offset.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

double (*ByteRange.offset.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ByteRange.length.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t ByteRange.length.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 8) = result;
  *(_BYTE *)(v2 + 16) = a2 & 1;
  return result;
}

double (*ByteRange.length.modify())(_QWORD)
{
  return nullsub_1;
}

NIOIMAPCore2::ByteRange __swiftcall ByteRange.init(offset:length:)(Swift::Int offset, Swift::Int_optional length)
{
  NIOIMAPCore2::ByteRange result;

  length.is_nil &= 1u;
  result.length = length;
  result.offset = offset;
  return result;
}

uint64_t ByteRange.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1A594CE88();
  if ((a4 & 1) != 0)
    return sub_1A594CE94();
  sub_1A594CE94();
  return sub_1A594CE88();
}

uint64_t static ByteRange.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a1 == a4)
  {
    if ((a3 & 1) != 0)
    {
      if ((a6 & 1) != 0)
        return 1;
    }
    else if ((a6 & 1) == 0 && a2 == a5)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t ByteRange.hashValue.getter(uint64_t a1, uint64_t a2, char a3)
{
  sub_1A594CE64();
  sub_1A594CE88();
  sub_1A594CE94();
  if ((a3 & 1) == 0)
    sub_1A594CE88();
  return sub_1A594CED0();
}

uint64_t sub_1A56AADD4()
{
  uint64_t v0;

  return ByteRange.hashValue.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

uint64_t sub_1A56AADE0(uint64_t a1)
{
  uint64_t v1;

  return ByteRange.hash(into:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16));
}

uint64_t sub_1A56AADEC()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1A594CE64();
  sub_1A594CE88();
  sub_1A594CE94();
  if (v1 != 1)
    sub_1A594CE88();
  return sub_1A594CED0();
}

unint64_t sub_1A56AAE68()
{
  unint64_t result;

  result = qword_1EE7A9638;
  if (!qword_1EE7A9638)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ByteRange, &type metadata for ByteRange);
    atomic_store(result, (unint64_t *)&qword_1EE7A9638);
  }
  return result;
}

uint64_t sub_1A56AAEA4(uint64_t a1, uint64_t a2)
{
  return static ByteRange.__derived_struct_equals(_:_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16));
}

uint64_t getEnumTagSinglePayload for MailboxSyncStatus(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MailboxSyncStatus(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 17) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ByteRange()
{
  return &type metadata for ByteRange;
}

uint64_t sub_1A56AAF1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;
  Swift::Int v5;
  Swift::Int v6;
  char v7;
  Swift::String v8;
  uint64_t result;
  int v10;
  BOOL v11;
  int v12;

  v2 = v1;
  OUTLINED_FUNCTION_9_13();
  sub_1A594B5F8();
  OUTLINED_FUNCTION_52();
  sub_1A594B5F8();
  sub_1A5668CD4(a1);
  OUTLINED_FUNCTION_9_13();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  v4 = *(unsigned int *)(v1 + 20);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A56814E0(60, 0xE100000000000000, v1 + 8, v4);
  v6 = v5;
  LOBYTE(a1) = v7;
  OUTLINED_FUNCTION_52();
  if ((a1 & 1) != 0)
  {
    v8._countAndFlagsBits = 60;
    v8._object = (void *)0xE100000000000000;
    v6 = ByteBuffer._setStringSlowpath(_:at:)(v8, v4);
  }
  result = OUTLINED_FUNCTION_52();
  v10 = *(_DWORD *)(v2 + 20);
  v11 = __CFADD__(v10, (_DWORD)v6);
  v12 = v10 + v6;
  if (v11)
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(v2 + 20) = v12;
    return v6;
  }
  return result;
}

uint64_t sub_1A56AB054(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  unint64_t v7;
  void *v8;
  Swift::Int v9;
  Swift::Int v10;
  char v11;
  Swift::String v12;
  Swift::Int v13;
  uint64_t result;
  int v15;
  Swift::Int v16;
  Swift::Int v17;
  Swift::Int v18;
  char v19;
  char v20;
  Swift::String v21;
  int v22;
  BOOL v23;
  int v24;

  v4 = v3;
  v6 = OUTLINED_FUNCTION_9_13();
  v8 = (void *)v7;
  v9 = *(unsigned int *)(v4 + 20);
  sub_1A56814E0(v6, v7, v4 + 8, *(_DWORD *)(v4 + 20));
  if ((v11 & 1) != 0)
  {
    v12._countAndFlagsBits = v6;
    v12._object = v8;
    v10 = ByteBuffer._setStringSlowpath(_:at:)(v12, v9);
  }
  v13 = v10;
  result = swift_bridgeObjectRelease();
  v15 = *(_DWORD *)(v4 + 20);
  v16 = (v15 + v13);
  if (__CFADD__(v15, (_DWORD)v13))
  {
    __break(1u);
    goto LABEL_13;
  }
  *(_DWORD *)(v4 + 20) = v16;
  if ((a3 & 1) != 0)
  {
    v18 = 0;
  }
  else
  {
    sub_1A594CC9C();
    sub_1A594B5F8();
    OUTLINED_FUNCTION_38();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A56814E0(46, 0xE100000000000000, v4 + 8, v16);
    v18 = v17;
    v20 = v19;
    OUTLINED_FUNCTION_38();
    if ((v20 & 1) != 0)
    {
      v21._countAndFlagsBits = 46;
      v21._object = (void *)0xE100000000000000;
      v18 = ByteBuffer._setStringSlowpath(_:at:)(v21, v16);
    }
    result = OUTLINED_FUNCTION_38();
    v22 = *(_DWORD *)(v4 + 20);
    v23 = __CFADD__(v22, (_DWORD)v18);
    v24 = v22 + v18;
    if (v23)
      goto LABEL_14;
    *(_DWORD *)(v4 + 20) = v24;
  }
  result = v13 + v18;
  if (__OFADD__(v13, v18))
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
  return result;
}

uint64_t MessagePath.ByteRange.range.setter(uint64_t result, uint64_t a2, char a3)
{
  uint64_t v3;

  *(_QWORD *)v3 = result;
  *(_QWORD *)(v3 + 8) = a2;
  *(_BYTE *)(v3 + 16) = a3 & 1;
  return result;
}

double (*MessagePath.ByteRange.range.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t MessagePath.ByteRange.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1A594CE88();
  if ((a4 & 1) != 0)
    return sub_1A594CE94();
  sub_1A594CE94();
  return sub_1A594CE88();
}

uint64_t static MessagePath.ByteRange.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a1 == a4)
  {
    if ((a3 & 1) != 0)
    {
      if ((a6 & 1) != 0)
        return 1;
    }
    else if ((a6 & 1) == 0 && a2 == a5)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t MessagePath.ByteRange.hashValue.getter(uint64_t a1, uint64_t a2, char a3)
{
  sub_1A594CE64();
  sub_1A594CE88();
  sub_1A594CE94();
  if ((a3 & 1) == 0)
    sub_1A594CE88();
  return sub_1A594CED0();
}

uint64_t sub_1A56AB2EC()
{
  uint64_t v0;

  return MessagePath.ByteRange.hashValue.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

uint64_t sub_1A56AB2F8(uint64_t a1)
{
  uint64_t v1;

  return MessagePath.ByteRange.hash(into:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16));
}

unint64_t sub_1A56AB308()
{
  unint64_t result;

  result = qword_1EE7A9640;
  if (!qword_1EE7A9640)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for MessagePath.ByteRange, &type metadata for MessagePath.ByteRange);
    atomic_store(result, (unint64_t *)&qword_1EE7A9640);
  }
  return result;
}

uint64_t sub_1A56AB344(uint64_t a1, uint64_t a2)
{
  return static MessagePath.ByteRange.__derived_struct_equals(_:_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16));
}

ValueMetadata *type metadata accessor for MessagePath.ByteRange()
{
  return &type metadata for MessagePath.ByteRange;
}

unint64_t sub_1A56AB370(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char v11;

  v4 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v4 = a3 & 0xFFFFFFFFFFFFLL;
  if (!v4)
    return 0;
  v7 = 4 * v4;
  v8 = 15;
  while (sub_1A594B6E8() != a1 || v9 != a2)
  {
    v11 = sub_1A594CD38();
    swift_bridgeObjectRelease();
    if ((v11 & 1) != 0)
      return v8;
    v8 = sub_1A594B5B0();
    if (v7 == v8 >> 14)
      return 0;
  }
  OUTLINED_FUNCTION_9_2();
  return v8;
}

void sub_1A56AB450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  BOOL v14;
  unsigned int v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  uint64_t v27;
  int v28;
  int v29;

  if (a5)
  {
    v11 = HIDWORD(a2) - a2;
    if (HIDWORD(a2) >= a2)
    {
      OUTLINED_FUNCTION_5_19();
      while (1)
      {
        v12 = *(_DWORD *)(v10 - 14);
        v13 = *(_DWORD *)(v10 - 10);
        v14 = v13 >= v12;
        v15 = v13 - v12;
        if (!v14)
          break;
        if (v15 != v11
          || ((OUTLINED_FUNCTION_29_7(), v16) ? (v16 = v9 == v29) : (v16 = 0),
              v16 ? (v17 = v8 == v28) : (v17 = 0),
              v17 ? (v18 = v7 == a1) : (v18 = 0),
              !v18
           && (OUTLINED_FUNCTION_176(),
               v19 = OUTLINED_FUNCTION_8_12(),
               OUTLINED_FUNCTION_16_12(v19, v20, v21, v22, v23, v24, v25, v26, v27))))
        {
          v10 += 24;
          if (v6 != ++v5)
            continue;
        }
        goto LABEL_19;
      }
      __break(1u);
    }
    __break(1u);
  }
  else
  {
LABEL_19:
    OUTLINED_FUNCTION_8_9();
  }
}

void *Capability.literalPlus.unsafeMutableAddressor()
{
  if (qword_1EE796788 != -1)
    swift_once();
  return &static Capability.literalPlus;
}

void *Capability.literalMinus.unsafeMutableAddressor()
{
  if (qword_1EE796790 != -1)
    swift_once();
  return &static Capability.literalMinus;
}

void *Capability.binary.unsafeMutableAddressor()
{
  if (qword_1EE7967C8 != -1)
    swift_once();
  return &static Capability.binary;
}

void Capability.name.getter(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  OUTLINED_FUNCTION_266_0();
  if ((a4 & 1) == 0)
  {
    sub_1A594B718();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_20_12();
  }
  OUTLINED_FUNCTION_17_1();
}

unint64_t sub_1A56AB644(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;

  v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v3 = a2 & 0xFFFFFFFFFFFFLL;
  if (4 * v3 >= result >> 14)
    return sub_1A594B718();
  __break(1u);
  return result;
}

uint64_t sub_1A56AB694(uint64_t result, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16) < result)
  {
    __break(1u);
  }
  else if ((result & 0x8000000000000000) == 0)
  {
    return swift_retain();
  }
  __break(1u);
  return result;
}

void Capability.value.getter(uint64_t a1, unint64_t a2, uint64_t a3, char a4)
{
  unint64_t v6;

  if ((a4 & 1) == 0)
  {
    v6 = sub_1A594B5B0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A56AB644(v6, a1, a2);
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_20_12();
  }
  OUTLINED_FUNCTION_17_1();
}

void Capability.init(_:)(uint64_t a1, unint64_t a2)
{
  OUTLINED_FUNCTION_266_0();
  sub_1A56AB370(61, 0xE100000000000000, a1, a2);
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_26_4();
  OUTLINED_FUNCTION_8_1();
}

void Capability.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  OUTLINED_FUNCTION_52();
  sub_1A594CE94();
  if ((a5 & 1) == 0)
    sub_1A594CEB8();
  OUTLINED_FUNCTION_17_1();
}

uint64_t static Capability.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, unint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  BOOL v12;
  char v13;
  uint64_t result;

  v12 = a1 == a5 && a2 == a6;
  if (v12 || (v13 = sub_1A594CD38(), result = 0, (v13 & 1) != 0))
  {
    if ((a4 & 1) != 0)
    {
      if ((a8 & 1) != 0)
        return 1;
    }
    else if ((a8 & 1) == 0 && (a7 ^ a3) < 0x4000)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t Capability.hashValue.getter(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  OUTLINED_FUNCTION_15_10();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  OUTLINED_FUNCTION_55();
  sub_1A594CE94();
  if ((a4 & 1) == 0)
    sub_1A594CEB8();
  return OUTLINED_FUNCTION_24_3();
}

uint64_t sub_1A56AB93C()
{
  uint64_t v0;

  return Capability.hashValue.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

void sub_1A56AB94C(uint64_t a1)
{
  uint64_t v1;

  Capability.hash(into:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t sub_1A56AB95C()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 24);
  sub_1A594CE64();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  sub_1A594CE94();
  if (v1 != 1)
    sub_1A594CEB8();
  return sub_1A594CED0();
}

uint64_t sub_1A56AB9F0(uint64_t a1, uint64_t a2)
{
  return static Capability.__derived_struct_equals(_:_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(_BYTE *)(a2 + 24));
}

const char *Capability.ContextKind.search.unsafeMutableAddressor()
{
  return "SEARCH";
}

uint64_t static Capability.ContextKind.search.getter()
{
  return 0x484352414553;
}

const char *Capability.ContextKind.sort.unsafeMutableAddressor()
{
  return "SORT";
}

void static Capability.ContextKind.sort.getter()
{
  OUTLINED_FUNCTION_38_6();
}

const char *Capability.SortKind.display.unsafeMutableAddressor()
{
  return "DISPLAY";
}

uint64_t static Capability.SortKind.display.getter()
{
  return 0x59414C50534944;
}

const char *Capability.ThreadKind.orderedSubject.unsafeMutableAddressor()
{
  return "ORDEREDSUBJECT";
}

uint64_t static Capability.ThreadKind.orderedSubject.getter()
{
  return 0x534445524544524FLL;
}

const char *Capability.ThreadKind.references.unsafeMutableAddressor()
{
  return "REFERENCES";
}

uint64_t static Capability.ThreadKind.references.getter()
{
  return 0x434E455245464552;
}

const char *Capability.StatusKind.size.unsafeMutableAddressor()
{
  return "SIZE";
}

void static Capability.StatusKind.size.getter()
{
  OUTLINED_FUNCTION_38_6();
}

const char *Capability.UTF8Kind.accept.unsafeMutableAddressor()
{
  return "ACCEPT";
}

uint64_t static Capability.UTF8Kind.accept.getter()
{
  return 0x545045434341;
}

const char *Capability.RightsKind.tekx.unsafeMutableAddressor()
{
  return "TEKX";
}

void static Capability.RightsKind.tekx.getter()
{
  OUTLINED_FUNCTION_38_6();
}

uint64_t sub_1A56ABB7C()
{
  _QWORD *v0;

  return Capability.RightsKind.hashValue.getter(*v0, v0[1]);
}

uint64_t sub_1A56ABB84(uint64_t a1)
{
  _QWORD *v1;

  return Capability.RightsKind.hash(into:)(a1, *v1, v1[1]);
}

uint64_t sub_1A56ABB8C(_QWORD *a1, _QWORD *a2)
{
  return static Capability.RightsKind.__derived_struct_equals(_:_:)(*a1, a1[1], *a2, a2[1]);
}

const char *Capability.CompressionKind.deflate.unsafeMutableAddressor()
{
  return "DEFLATE";
}

uint64_t static Capability.CompressionKind.deflate.getter()
{
  return 0x4554414C464544;
}

uint64_t _s12NIOIMAPCore210CapabilityV11ContextKindVyAESScfC_0()
{
  uint64_t v0;

  v0 = sub_1A594B4B4();
  OUTLINED_FUNCTION_17();
  return v0;
}

uint64_t _s12NIOIMAPCore210CapabilityV11ContextKindV4hash4intoys6HasherVz_tF_0()
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_2_22();
  return swift_bridgeObjectRelease();
}

void _s12NIOIMAPCore210CapabilityV11ContextKindV9hashValueSivg_0()
{
  OUTLINED_FUNCTION_15_10();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_2_22();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_8_7();
}

void sub_1A56ABC8C()
{
  sub_1A594CE64();
  OUTLINED_FUNCTION_16_0();
  sub_1A594B1D8();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_8_7();
}

uint64_t sub_1A56ABCCC()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  uint64_t result;
  char v5;

  v0 = 15;
  while (sub_1A594B6E8() != 61 || v1 != 0xE100000000000000)
  {
    v3 = sub_1A594CD38();
    result = swift_bridgeObjectRelease();
    if ((v3 & 1) != 0)
      goto LABEL_9;
    result = sub_1A594B5B0();
    v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x30000)
    {
      v0 = 0;
LABEL_9:
      v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  result = swift_bridgeObjectRelease();
  v5 = 0;
LABEL_11:
  static Capability.acl = 4997953;
  unk_1EE7F9B90 = 0xE300000000000000;
  qword_1EE7F9B98 = v0;
  byte_1EE7F9BA0 = v5 & 1;
  return result;
}

uint64_t *Capability.acl.unsafeMutableAddressor()
{
  if (qword_1EE7A8F98 != -1)
    swift_once();
  return &static Capability.acl;
}

void static Capability.acl.getter()
{
  if (qword_1EE7A8F98 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_40();
  OUTLINED_FUNCTION_1_30();
  OUTLINED_FUNCTION_8_1();
}

void sub_1A56ABE30()
{
  unint64_t v0;
  unint64_t v1;
  char v2;
  uint64_t v3;
  char v5;

  if ((0x80000001A5A0F4B0 & 0x2000000000000000) != 0)
    v0 = (0x80000001A5A0F4B0 & 0xF00000000000000) >> 54;
  else
    v0 = 84;
  if ((((unint64_t)"CREATE-SPECIAL-USE" >> 61) & ((0x80000001A5A0F4B0 & 0xF00000000000000) >> 54 == 0)) != 0)
  {
    v1 = 0;
    v2 = 1;
  }
  else
  {
    v1 = 15;
    while (sub_1A594B6E8() != 61 || v3 != 0xE100000000000000)
    {
      v5 = sub_1A594CD38();
      swift_bridgeObjectRelease();
      if ((v5 & 1) != 0)
        goto LABEL_14;
      v1 = sub_1A594B5B0();
      if (v0 == v1 >> 14)
      {
        v1 = 0;
LABEL_14:
        v2 = v5 ^ 1;
        goto LABEL_16;
      }
    }
    swift_bridgeObjectRelease();
    v2 = 0;
  }
LABEL_16:
  static Capability.annotateExperiment1 = 0xD000000000000015;
  unk_1EE7F9BB0 = 0x80000001A5A0F4B0;
  qword_1EE7F9BB8 = v1;
  byte_1EE7F9BC0 = v2 & 1;
}

uint64_t *Capability.annotateExperiment1.unsafeMutableAddressor()
{
  if (qword_1EE7A8FA0 != -1)
    swift_once();
  return &static Capability.annotateExperiment1;
}

void static Capability.annotateExperiment1.getter()
{
  if (qword_1EE7A8FA0 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_40();
  OUTLINED_FUNCTION_1_30();
  OUTLINED_FUNCTION_8_1();
}

void sub_1A56ABFD8()
{
  uint64_t v0;
  char v2;
  char v3;

  while (1)
  {
    OUTLINED_FUNCTION_30_7();
    if (sub_1A594B6E8() == 61 && v0 == 0xE100000000000000)
      break;
    v2 = OUTLINED_FUNCTION_4_22();
    OUTLINED_FUNCTION_55();
    if ((v2 & 1) == 0)
    {
      OUTLINED_FUNCTION_30_7();
      if ((sub_1A594B5B0() & 0xFFFFFFFFFFFFC000) != 0x60000)
        continue;
    }
    v3 = v2 ^ 1;
    goto LABEL_9;
  }
  OUTLINED_FUNCTION_32_7();
  v3 = 0;
LABEL_9:
  OUTLINED_FUNCTION_18_11(v3);
  OUTLINED_FUNCTION_17_1();
}

void static Capability.binary.getter()
{
  if (qword_1EE7967C8 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_40();
  OUTLINED_FUNCTION_1_30();
  OUTLINED_FUNCTION_8_1();
}

uint64_t sub_1A56AC0BC()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  uint64_t result;
  char v5;

  v0 = 15;
  while (sub_1A594B6E8() != 61 || v1 != 0xE100000000000000)
  {
    v3 = sub_1A594CD38();
    result = swift_bridgeObjectRelease();
    if ((v3 & 1) != 0)
      goto LABEL_9;
    result = sub_1A594B5B0();
    v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x80000)
    {
      v0 = 0;
LABEL_9:
      v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  result = swift_bridgeObjectRelease();
  v5 = 0;
LABEL_11:
  static Capability.catenate = 0x4554414E45544143;
  unk_1EE7F9BD0 = 0xE800000000000000;
  qword_1EE7F9BD8 = v0;
  byte_1EE7F9BE0 = v5 & 1;
  return result;
}

uint64_t *Capability.catenate.unsafeMutableAddressor()
{
  if (qword_1EE7A8FA8 != -1)
    swift_once();
  return &static Capability.catenate;
}

void static Capability.catenate.getter()
{
  if (qword_1EE7A8FA8 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_40();
  OUTLINED_FUNCTION_1_30();
  OUTLINED_FUNCTION_8_1();
}

uint64_t sub_1A56AC238()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  uint64_t result;
  char v5;

  v0 = 15;
  while (sub_1A594B6E8() != 61 || v1 != 0xE100000000000000)
  {
    v3 = sub_1A594CD38();
    result = swift_bridgeObjectRelease();
    if ((v3 & 1) != 0)
      goto LABEL_9;
    result = sub_1A594B5B0();
    v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x80000)
    {
      v0 = 0;
LABEL_9:
      v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  result = swift_bridgeObjectRelease();
  v5 = 0;
LABEL_11:
  static Capability.children = 0x4E4552444C494843;
  unk_1EE7F9BF0 = 0xE800000000000000;
  qword_1EE7F9BF8 = v0;
  byte_1EE7F9C00 = v5 & 1;
  return result;
}

uint64_t *Capability.children.unsafeMutableAddressor()
{
  if (qword_1EE7A8FB0 != -1)
    swift_once();
  return &static Capability.children;
}

void static Capability.children.getter()
{
  if (qword_1EE7A8FB0 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_40();
  OUTLINED_FUNCTION_1_30();
  OUTLINED_FUNCTION_8_1();
}

uint64_t sub_1A56AC3B4()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  uint64_t result;
  char v5;

  v0 = 15;
  while (sub_1A594B6E8() != 61 || v1 != 0xE100000000000000)
  {
    v3 = sub_1A594CD38();
    result = swift_bridgeObjectRelease();
    if ((v3 & 1) != 0)
      goto LABEL_9;
    result = sub_1A594B5B0();
    v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x90000)
    {
      v0 = 0;
LABEL_9:
      v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  result = swift_bridgeObjectRelease();
  v5 = 0;
LABEL_11:
  static Capability.condStore = 0x524F5453444E4F43;
  *(_QWORD *)algn_1EE7F9548 = 0xE900000000000045;
  qword_1EE7F9550 = v0;
  byte_1EE7F9558 = v5 & 1;
  return result;
}

uint64_t *Capability.condStore.unsafeMutableAddressor()
{
  if (qword_1EE7967E0 != -1)
    swift_once();
  return &static Capability.condStore;
}

void static Capability.condStore.getter()
{
  if (qword_1EE7967E0 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_40();
  OUTLINED_FUNCTION_1_30();
  OUTLINED_FUNCTION_8_1();
}

void sub_1A56AC53C()
{
  unint64_t v0;
  unint64_t v1;
  char v2;
  uint64_t v3;
  char v5;

  if ((0x80000001A5A0F490 & 0x2000000000000000) != 0)
    v0 = (0x80000001A5A0F490 & 0xF00000000000000) >> 54;
  else
    v0 = 72;
  if ((((unint64_t)"XYMHIGHESTMODSEQ" >> 61) & ((0x80000001A5A0F490 & 0xF00000000000000) >> 54 == 0)) != 0)
  {
    v1 = 0;
    v2 = 1;
  }
  else
  {
    v1 = 15;
    while (sub_1A594B6E8() != 61 || v3 != 0xE100000000000000)
    {
      v5 = sub_1A594CD38();
      swift_bridgeObjectRelease();
      if ((v5 & 1) != 0)
        goto LABEL_14;
      v1 = sub_1A594B5B0();
      if (v0 == v1 >> 14)
      {
        v1 = 0;
LABEL_14:
        v2 = v5 ^ 1;
        goto LABEL_16;
      }
    }
    swift_bridgeObjectRelease();
    v2 = 0;
  }
LABEL_16:
  static Capability.createSpecialUse = 0xD000000000000012;
  unk_1EE7F9C10 = 0x80000001A5A0F490;
  qword_1EE7F9C18 = v1;
  byte_1EE7F9C20 = v2 & 1;
}

uint64_t *Capability.createSpecialUse.unsafeMutableAddressor()
{
  if (qword_1EE7A8FB8 != -1)
    swift_once();
  return &static Capability.createSpecialUse;
}

void static Capability.createSpecialUse.getter()
{
  if (qword_1EE7A8FB8 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_40();
  OUTLINED_FUNCTION_1_30();
  OUTLINED_FUNCTION_8_1();
}

uint64_t sub_1A56AC6E4()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  uint64_t result;
  char v5;

  v0 = 15;
  while (sub_1A594B6E8() != 61 || v1 != 0xE100000000000000)
  {
    v3 = sub_1A594CD38();
    result = swift_bridgeObjectRelease();
    if ((v3 & 1) != 0)
      goto LABEL_9;
    result = sub_1A594B5B0();
    v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x60000)
    {
      v0 = 0;
LABEL_9:
      v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  result = swift_bridgeObjectRelease();
  v5 = 0;
LABEL_11:
  static Capability.enable = 0x454C42414E45;
  unk_1EE7F9C30 = 0xE600000000000000;
  qword_1EE7F9C38 = v0;
  byte_1EE7F9C40 = v5 & 1;
  return result;
}

uint64_t *Capability.enable.unsafeMutableAddressor()
{
  if (qword_1EE7A8FC0 != -1)
    swift_once();
  return &static Capability.enable;
}

void static Capability.enable.getter()
{
  if (qword_1EE7A8FC0 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_40();
  OUTLINED_FUNCTION_1_30();
  OUTLINED_FUNCTION_8_1();
}

uint64_t sub_1A56AC854()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  uint64_t result;
  char v5;

  v0 = 15;
  while (sub_1A594B6E8() != 61 || v1 != 0xE100000000000000)
  {
    v3 = sub_1A594CD38();
    result = swift_bridgeObjectRelease();
    if ((v3 & 1) != 0)
      goto LABEL_9;
    result = sub_1A594B5B0();
    v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x70000)
    {
      v0 = 0;
LABEL_9:
      v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  result = swift_bridgeObjectRelease();
  v5 = 0;
LABEL_11:
  static Capability.extendedSearch = 0x48435241455345;
  *(_QWORD *)algn_1EE7F9468 = 0xE700000000000000;
  qword_1EE7F9470 = v0;
  byte_1EE7F9478 = v5 & 1;
  return result;
}

uint64_t *Capability.extendedSearch.unsafeMutableAddressor()
{
  if (qword_1EE7967A0 != -1)
    swift_once();
  return &static Capability.extendedSearch;
}

void static Capability.extendedSearch.getter()
{
  if (qword_1EE7967A0 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_40();
  OUTLINED_FUNCTION_1_30();
  OUTLINED_FUNCTION_8_1();
}

uint64_t sub_1A56AC9D0()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  uint64_t result;
  char v5;

  v0 = 15;
  while (sub_1A594B6E8() != 61 || v1 != 0xE100000000000000)
  {
    v3 = sub_1A594CD38();
    result = swift_bridgeObjectRelease();
    if ((v3 & 1) != 0)
      goto LABEL_9;
    result = sub_1A594B5B0();
    v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x50000)
    {
      v0 = 0;
LABEL_9:
      v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  result = swift_bridgeObjectRelease();
  v5 = 0;
LABEL_11:
  static Capability.esort = 0x54524F5345;
  unk_1EE7F9C50 = 0xE500000000000000;
  qword_1EE7F9C58 = v0;
  byte_1EE7F9C60 = v5 & 1;
  return result;
}

uint64_t *Capability.esort.unsafeMutableAddressor()
{
  if (qword_1EE7A8FC8 != -1)
    swift_once();
  return &static Capability.esort;
}

void static Capability.esort.getter()
{
  if (qword_1EE7A8FC8 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_40();
  OUTLINED_FUNCTION_1_30();
  OUTLINED_FUNCTION_8_1();
}

uint64_t sub_1A56ACB40()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  uint64_t result;
  char v5;

  v0 = 15;
  while (sub_1A594B6E8() != 61 || v1 != 0xE100000000000000)
  {
    v3 = sub_1A594CD38();
    result = swift_bridgeObjectRelease();
    if ((v3 & 1) != 0)
      goto LABEL_9;
    result = sub_1A594B5B0();
    v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x70000)
    {
      v0 = 0;
LABEL_9:
      v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  result = swift_bridgeObjectRelease();
  v5 = 0;
LABEL_11:
  static Capability.filters = 0x535245544C4946;
  unk_1EE7F9C70 = 0xE700000000000000;
  qword_1EE7F9C78 = v0;
  byte_1EE7F9C80 = v5 & 1;
  return result;
}

uint64_t *Capability.filters.unsafeMutableAddressor()
{
  if (qword_1EE7A8FD0 != -1)
    swift_once();
  return &static Capability.filters;
}

void static Capability.filters.getter()
{
  if (qword_1EE7A8FD0 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_40();
  OUTLINED_FUNCTION_1_30();
  OUTLINED_FUNCTION_8_1();
}

uint64_t sub_1A56ACCBC()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  uint64_t result;
  char v5;

  v0 = 15;
  while (sub_1A594B6E8() != 61 || v1 != 0xE100000000000000)
  {
    v3 = sub_1A594CD38();
    result = swift_bridgeObjectRelease();
    if ((v3 & 1) != 0)
      goto LABEL_9;
    result = sub_1A594B5B0();
    v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x20000)
    {
      v0 = 0;
LABEL_9:
      v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  result = swift_bridgeObjectRelease();
  v5 = 0;
LABEL_11:
  static Capability.id = 17481;
  *(_QWORD *)algn_1EE7F91C8 = 0xE200000000000000;
  qword_1EE7F91D0 = v0;
  byte_1EE7F91D8 = v5 & 1;
  return result;
}

uint64_t *Capability.id.unsafeMutableAddressor()
{
  if (qword_1EE795BA8 != -1)
    swift_once();
  return &static Capability.id;
}

void static Capability.id.getter()
{
  if (qword_1EE795BA8 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_40();
  OUTLINED_FUNCTION_1_30();
  OUTLINED_FUNCTION_8_1();
}

uint64_t sub_1A56ACE0C()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  uint64_t result;
  char v5;

  v0 = 15;
  while (sub_1A594B6E8() != 61 || v1 != 0xE100000000000000)
  {
    v3 = sub_1A594CD38();
    result = swift_bridgeObjectRelease();
    if ((v3 & 1) != 0)
      goto LABEL_9;
    result = sub_1A594B5B0();
    v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x40000)
    {
      v0 = 0;
LABEL_9:
      v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  result = swift_bridgeObjectRelease();
  v5 = 0;
LABEL_11:
  static Capability.idle = 1162626121;
  *(_QWORD *)algn_1EE7F94C8 = 0xE400000000000000;
  qword_1EE7F94D0 = v0;
  byte_1EE7F94D8 = v5 & 1;
  return result;
}

uint64_t *Capability.idle.unsafeMutableAddressor()
{
  if (qword_1EE7967B8 != -1)
    swift_once();
  return &static Capability.idle;
}

void static Capability.idle.getter()
{
  if (qword_1EE7967B8 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_40();
  OUTLINED_FUNCTION_1_30();
  OUTLINED_FUNCTION_8_1();
}

uint64_t sub_1A56ACF70()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  uint64_t result;
  char v5;

  v0 = 15;
  while (sub_1A594B6E8() != 61 || v1 != 0xE100000000000000)
  {
    v3 = sub_1A594CD38();
    result = swift_bridgeObjectRelease();
    if ((v3 & 1) != 0)
      goto LABEL_9;
    result = sub_1A594B5B0();
    v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x90000)
    {
      v0 = 0;
LABEL_9:
      v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  result = swift_bridgeObjectRelease();
  v5 = 0;
LABEL_11:
  static Capability.imap4rev1 = 0x7665723450414D49;
  unk_1EE7F9C90 = 0xE900000000000031;
  qword_1EE7F9C98 = v0;
  byte_1EE7F9CA0 = v5 & 1;
  return result;
}

uint64_t *Capability.imap4rev1.unsafeMutableAddressor()
{
  if (qword_1EE7A8FD8 != -1)
    swift_once();
  return &static Capability.imap4rev1;
}

void static Capability.imap4rev1.getter()
{
  if (qword_1EE7A8FD8 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_40();
  OUTLINED_FUNCTION_1_30();
  OUTLINED_FUNCTION_8_1();
}

uint64_t sub_1A56AD0F8()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  uint64_t result;
  char v5;

  v0 = 15;
  while (sub_1A594B6E8() != 61 || v1 != 0xE100000000000000)
  {
    v3 = sub_1A594CD38();
    result = swift_bridgeObjectRelease();
    if ((v3 & 1) != 0)
      goto LABEL_9;
    result = sub_1A594B5B0();
    v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x50000)
    {
      v0 = 0;
LABEL_9:
      v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  result = swift_bridgeObjectRelease();
  v5 = 0;
LABEL_11:
  static Capability.imap4 = 0x3450414D49;
  unk_1EE7F9CB0 = 0xE500000000000000;
  qword_1EE7F9CB8 = v0;
  byte_1EE7F9CC0 = v5 & 1;
  return result;
}

uint64_t *Capability.imap4.unsafeMutableAddressor()
{
  if (qword_1EE7A8FE0 != -1)
    swift_once();
  return &static Capability.imap4;
}

void static Capability.imap4.getter()
{
  if (qword_1EE7A8FE0 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_40();
  OUTLINED_FUNCTION_1_30();
  OUTLINED_FUNCTION_8_1();
}

uint64_t sub_1A56AD268()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  uint64_t result;
  char v5;

  v0 = 15;
  while (sub_1A594B6E8() != 61 || v1 != 0xE100000000000000)
  {
    v3 = sub_1A594CD38();
    result = swift_bridgeObjectRelease();
    if ((v3 & 1) != 0)
      goto LABEL_9;
    result = sub_1A594B5B0();
    v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x80000)
    {
      v0 = 0;
LABEL_9:
      v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  result = swift_bridgeObjectRelease();
  v5 = 0;
LABEL_11:
  static Capability.language = 0x45474155474E414CLL;
  unk_1EE7F9CD0 = 0xE800000000000000;
  qword_1EE7F9CD8 = v0;
  byte_1EE7F9CE0 = v5 & 1;
  return result;
}

uint64_t *Capability.language.unsafeMutableAddressor()
{
  if (qword_1EE7A8FE8 != -1)
    swift_once();
  return &static Capability.language;
}

void static Capability.language.getter()
{
  if (qword_1EE7A8FE8 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_40();
  OUTLINED_FUNCTION_1_30();
  OUTLINED_FUNCTION_8_1();
}

uint64_t sub_1A56AD3E4()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  uint64_t result;
  char v5;

  v0 = 15;
  while (sub_1A594B6E8() != 61 || v1 != 0xE100000000000000)
  {
    v3 = sub_1A594CD38();
    result = swift_bridgeObjectRelease();
    if ((v3 & 1) != 0)
      goto LABEL_9;
    result = sub_1A594B5B0();
    v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0xB0000)
    {
      v0 = 0;
LABEL_9:
      v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  result = swift_bridgeObjectRelease();
  v5 = 0;
LABEL_11:
  static Capability.listStatus = 0x4154532D5453494CLL;
  *(_QWORD *)algn_1EE7F93E8 = 0xEB00000000535554;
  qword_1EE7F93F0 = v0;
  byte_1EE7F93F8 = v5 & 1;
  return result;
}

uint64_t *Capability.listStatus.unsafeMutableAddressor()
{
  if (qword_1EE796778 != -1)
    swift_once();
  return &static Capability.listStatus;
}

void static Capability.listStatus.getter()
{
  if (qword_1EE796778 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_40();
  OUTLINED_FUNCTION_1_30();
  OUTLINED_FUNCTION_8_1();
}

uint64_t sub_1A56AD578()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  uint64_t result;
  char v5;

  v0 = 15;
  while (sub_1A594B6E8() != 61 || v1 != 0xE100000000000000)
  {
    v3 = sub_1A594CD38();
    result = swift_bridgeObjectRelease();
    if ((v3 & 1) != 0)
      goto LABEL_9;
    result = sub_1A594B5B0();
    v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0xD0000)
    {
      v0 = 0;
LABEL_9:
      v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  result = swift_bridgeObjectRelease();
  v5 = 0;
LABEL_11:
  strcpy((char *)&static Capability.listExtended, "LIST-EXTENDED");
  unk_1EE7F9CF6 = -4864;
  qword_1EE7F9CF8 = v0;
  byte_1EE7F9D00 = v5 & 1;
  return result;
}

uint64_t *Capability.listExtended.unsafeMutableAddressor()
{
  if (qword_1EE7A8FF0 != -1)
    swift_once();
  return &static Capability.listExtended;
}

void static Capability.listExtended.getter()
{
  if (qword_1EE7A8FF0 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_40();
  OUTLINED_FUNCTION_1_30();
  OUTLINED_FUNCTION_8_1();
}

uint64_t sub_1A56AD718()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  uint64_t result;
  char v5;

  v0 = 15;
  while (sub_1A594B6E8() != 61 || v1 != 0xE100000000000000)
  {
    v3 = sub_1A594CD38();
    result = swift_bridgeObjectRelease();
    if ((v3 & 1) != 0)
      goto LABEL_9;
    result = sub_1A594B5B0();
    v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0xD0000)
    {
      v0 = 0;
LABEL_9:
      v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  result = swift_bridgeObjectRelease();
  v5 = 0;
LABEL_11:
  strcpy((char *)&static Capability.loginDisabled, "LOGINDISABLED");
  unk_1EE7F9D16 = -4864;
  qword_1EE7F9D18 = v0;
  byte_1EE7F9D20 = v5 & 1;
  return result;
}

uint64_t *Capability.loginDisabled.unsafeMutableAddressor()
{
  if (qword_1EE7A8FF8 != -1)
    swift_once();
  return &static Capability.loginDisabled;
}

void static Capability.loginDisabled.getter()
{
  if (qword_1EE7A8FF8 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_40();
  OUTLINED_FUNCTION_1_30();
  OUTLINED_FUNCTION_8_1();
}

uint64_t sub_1A56AD8B8()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  uint64_t result;
  char v5;

  v0 = 15;
  while (sub_1A594B6E8() != 61 || v1 != 0xE100000000000000)
  {
    v3 = sub_1A594CD38();
    result = swift_bridgeObjectRelease();
    if ((v3 & 1) != 0)
      goto LABEL_9;
    result = sub_1A594B5B0();
    v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0xF0000)
    {
      v0 = 0;
LABEL_9:
      v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  result = swift_bridgeObjectRelease();
  v5 = 0;
LABEL_11:
  static Capability.loginReferrals = 0x45522D4E49474F4CLL;
  unk_1EE7F9D30 = 0xEF534C4152524546;
  qword_1EE7F9D38 = v0;
  byte_1EE7F9D40 = v5 & 1;
  return result;
}

uint64_t *Capability.loginReferrals.unsafeMutableAddressor()
{
  if (qword_1EE7A9000 != -1)
    swift_once();
  return &static Capability.loginReferrals;
}

void static Capability.loginReferrals.getter()
{
  if (qword_1EE7A9000 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_40();
  OUTLINED_FUNCTION_1_30();
  OUTLINED_FUNCTION_8_1();
}

uint64_t sub_1A56ADA58()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  uint64_t result;
  char v5;

  v0 = 15;
  while (sub_1A594B6E8() != 61 || v1 != 0xE100000000000000)
  {
    v3 = sub_1A594CD38();
    result = swift_bridgeObjectRelease();
    if ((v3 & 1) != 0)
      goto LABEL_9;
    result = sub_1A594B5B0();
    v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x80000)
    {
      v0 = 0;
LABEL_9:
      v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  result = swift_bridgeObjectRelease();
  v5 = 0;
LABEL_11:
  static Capability.metadata = 0x415441444154454DLL;
  unk_1EE7F9D50 = 0xE800000000000000;
  qword_1EE7F9D58 = v0;
  byte_1EE7F9D60 = v5 & 1;
  return result;
}

uint64_t *Capability.metadata.unsafeMutableAddressor()
{
  if (qword_1EE7A9008 != -1)
    swift_once();
  return &static Capability.metadata;
}

void static Capability.metadata.getter()
{
  if (qword_1EE7A9008 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_40();
  OUTLINED_FUNCTION_1_30();
  OUTLINED_FUNCTION_8_1();
}

uint64_t sub_1A56ADBD4()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  uint64_t result;
  char v5;

  v0 = 15;
  while (sub_1A594B6E8() != 61 || v1 != 0xE100000000000000)
  {
    v3 = sub_1A594CD38();
    result = swift_bridgeObjectRelease();
    if ((v3 & 1) != 0)
      goto LABEL_9;
    result = sub_1A594B5B0();
    v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0xF0000)
    {
      v0 = 0;
LABEL_9:
      v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  result = swift_bridgeObjectRelease();
  v5 = 0;
LABEL_11:
  static Capability.metadataServer = 0x415441444154454DLL;
  unk_1EE7F9D70 = 0xEF5245565245532DLL;
  qword_1EE7F9D78 = v0;
  byte_1EE7F9D80 = v5 & 1;
  return result;
}

uint64_t *Capability.metadataServer.unsafeMutableAddressor()
{
  if (qword_1EE7A9010 != -1)
    swift_once();
  return &static Capability.metadataServer;
}

void static Capability.metadataServer.getter()
{
  if (qword_1EE7A9010 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_40();
  OUTLINED_FUNCTION_1_30();
  OUTLINED_FUNCTION_8_1();
}

uint64_t sub_1A56ADD74()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  uint64_t result;
  char v5;

  v0 = 15;
  while (sub_1A594B6E8() != 61 || v1 != 0xE100000000000000)
  {
    v3 = sub_1A594CD38();
    result = swift_bridgeObjectRelease();
    if ((v3 & 1) != 0)
      goto LABEL_9;
    result = sub_1A594B5B0();
    v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x40000)
    {
      v0 = 0;
LABEL_9:
      v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  result = swift_bridgeObjectRelease();
  v5 = 0;
LABEL_11:
  static Capability.move = 1163284301;
  *(_QWORD *)algn_1EE7F94E8 = 0xE400000000000000;
  qword_1EE7F94F0 = v0;
  byte_1EE7F94F8 = v5 & 1;
  return result;
}

uint64_t *Capability.move.unsafeMutableAddressor()
{
  if (qword_1EE7967C0 != -1)
    swift_once();
  return &static Capability.move;
}

void static Capability.move.getter()
{
  if (qword_1EE7967C0 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_40();
  OUTLINED_FUNCTION_1_30();
  OUTLINED_FUNCTION_8_1();
}

uint64_t sub_1A56ADED8()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  uint64_t result;
  char v5;

  v0 = 15;
  while (sub_1A594B6E8() != 61 || v1 != 0xE100000000000000)
  {
    v3 = sub_1A594CD38();
    result = swift_bridgeObjectRelease();
    if ((v3 & 1) != 0)
      goto LABEL_9;
    result = sub_1A594B5B0();
    v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0xB0000)
    {
      v0 = 0;
LABEL_9:
      v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  result = swift_bridgeObjectRelease();
  v5 = 0;
LABEL_11:
  static Capability.multiSearch = 0x41455349544C554DLL;
  unk_1EE7F9D90 = 0xEB00000000484352;
  qword_1EE7F9D98 = v0;
  byte_1EE7F9DA0 = v5 & 1;
  return result;
}

uint64_t *Capability.multiSearch.unsafeMutableAddressor()
{
  if (qword_1EE7A9018 != -1)
    swift_once();
  return &static Capability.multiSearch;
}

void static Capability.multiSearch.getter()
{
  if (qword_1EE7A9018 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_40();
  OUTLINED_FUNCTION_1_30();
  OUTLINED_FUNCTION_8_1();
}

uint64_t sub_1A56AE06C()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  uint64_t result;
  char v5;

  v0 = 15;
  while (sub_1A594B6E8() != 61 || v1 != 0xE100000000000000)
  {
    v3 = sub_1A594CD38();
    result = swift_bridgeObjectRelease();
    if ((v3 & 1) != 0)
      goto LABEL_9;
    result = sub_1A594B5B0();
    v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x90000)
    {
      v0 = 0;
LABEL_9:
      v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  result = swift_bridgeObjectRelease();
  v5 = 0;
LABEL_11:
  static Capability.namespace = 0x43415053454D414ELL;
  *(_QWORD *)algn_1EE7F9568 = 0xE900000000000045;
  qword_1EE7F9570 = v0;
  byte_1EE7F9578 = v5 & 1;
  return result;
}

uint64_t *Capability.namespace.unsafeMutableAddressor()
{
  if (qword_1EE7967E8 != -1)
    swift_once();
  return &static Capability.namespace;
}

void static Capability.namespace.getter()
{
  if (qword_1EE7967E8 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_40();
  OUTLINED_FUNCTION_1_30();
  OUTLINED_FUNCTION_8_1();
}

uint64_t sub_1A56AE1F4()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  uint64_t result;
  char v5;

  v0 = 15;
  while (sub_1A594B6E8() != 61 || v1 != 0xE100000000000000)
  {
    v3 = sub_1A594CD38();
    result = swift_bridgeObjectRelease();
    if ((v3 & 1) != 0)
      goto LABEL_9;
    result = sub_1A594B5B0();
    v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x70000)
    {
      v0 = 0;
LABEL_9:
      v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  result = swift_bridgeObjectRelease();
  v5 = 0;
LABEL_11:
  static Capability.qresync = 0x434E5953455251;
  unk_1EE7F9DB0 = 0xE700000000000000;
  qword_1EE7F9DB8 = v0;
  byte_1EE7F9DC0 = v5 & 1;
  return result;
}

uint64_t *Capability.qresync.unsafeMutableAddressor()
{
  if (qword_1EE7A9020 != -1)
    swift_once();
  return &static Capability.qresync;
}

void static Capability.qresync.getter()
{
  if (qword_1EE7A9020 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_40();
  OUTLINED_FUNCTION_1_30();
  OUTLINED_FUNCTION_8_1();
}

uint64_t sub_1A56AE370()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  uint64_t result;
  char v5;

  v0 = 15;
  while (sub_1A594B6E8() != 61 || v1 != 0xE100000000000000)
  {
    v3 = sub_1A594CD38();
    result = swift_bridgeObjectRelease();
    if ((v3 & 1) != 0)
      goto LABEL_9;
    result = sub_1A594B5B0();
    v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x50000)
    {
      v0 = 0;
LABEL_9:
      v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  result = swift_bridgeObjectRelease();
  v5 = 0;
LABEL_11:
  static Capability.quota = 0x41544F5551;
  unk_1EE7F9DD0 = 0xE500000000000000;
  qword_1EE7F9DD8 = v0;
  byte_1EE7F9DE0 = v5 & 1;
  return result;
}

uint64_t *Capability.quota.unsafeMutableAddressor()
{
  if (qword_1EE7A9028 != -1)
    swift_once();
  return &static Capability.quota;
}

void static Capability.quota.getter()
{
  if (qword_1EE7A9028 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_40();
  OUTLINED_FUNCTION_1_30();
  OUTLINED_FUNCTION_8_1();
}

uint64_t sub_1A56AE4E0()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  uint64_t result;
  char v5;

  v0 = 15;
  while (sub_1A594B6E8() != 61 || v1 != 0xE100000000000000)
  {
    v3 = sub_1A594CD38();
    result = swift_bridgeObjectRelease();
    if ((v3 & 1) != 0)
      goto LABEL_9;
    result = sub_1A594B5B0();
    v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x70000)
    {
      v0 = 0;
LABEL_9:
      v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  result = swift_bridgeObjectRelease();
  v5 = 0;
LABEL_11:
  static Capability.saslIR = 0x52492D4C534153;
  *(_QWORD *)algn_1EE7F91E8 = 0xE700000000000000;
  qword_1EE7F91F0 = v0;
  byte_1EE7F91F8 = v5 & 1;
  return result;
}

uint64_t *Capability.saslIR.unsafeMutableAddressor()
{
  if (qword_1EE7967D0 != -1)
    swift_once();
  return &static Capability.saslIR;
}

void static Capability.saslIR.getter()
{
  if (qword_1EE7967D0 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_40();
  OUTLINED_FUNCTION_1_30();
  OUTLINED_FUNCTION_8_1();
}

uint64_t sub_1A56AE65C()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  uint64_t result;
  char v5;

  v0 = 15;
  while (sub_1A594B6E8() != 61 || v1 != 0xE100000000000000)
  {
    v3 = sub_1A594CD38();
    result = swift_bridgeObjectRelease();
    if ((v3 & 1) != 0)
      goto LABEL_9;
    result = sub_1A594B5B0();
    v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x90000)
    {
      v0 = 0;
LABEL_9:
      v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  result = swift_bridgeObjectRelease();
  v5 = 0;
LABEL_11:
  static Capability.searchRes = 0x4552484352414553;
  unk_1EE7F9DF0 = 0xE900000000000053;
  qword_1EE7F9DF8 = v0;
  byte_1EE7F9E00 = v5 & 1;
  return result;
}

uint64_t *Capability.searchRes.unsafeMutableAddressor()
{
  if (qword_1EE7A9030 != -1)
    swift_once();
  return &static Capability.searchRes;
}

void static Capability.searchRes.getter()
{
  if (qword_1EE7A9030 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_40();
  OUTLINED_FUNCTION_1_30();
  OUTLINED_FUNCTION_8_1();
}

uint64_t sub_1A56AE7E4()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  uint64_t result;
  char v5;

  v0 = 15;
  while (sub_1A594B6E8() != 61 || v1 != 0xE100000000000000)
  {
    v3 = sub_1A594CD38();
    result = swift_bridgeObjectRelease();
    if ((v3 & 1) != 0)
      goto LABEL_9;
    result = sub_1A594B5B0();
    v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0xB0000)
    {
      v0 = 0;
LABEL_9:
      v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  result = swift_bridgeObjectRelease();
  v5 = 0;
LABEL_11:
  static Capability.specialUse = 0x2D4C414943455053;
  *(_QWORD *)algn_1EE7F9408 = 0xEB00000000455355;
  qword_1EE7F9410 = v0;
  byte_1EE7F9418 = v5 & 1;
  return result;
}

uint64_t *Capability.specialUse.unsafeMutableAddressor()
{
  if (qword_1EE796780 != -1)
    swift_once();
  return &static Capability.specialUse;
}

void static Capability.specialUse.getter()
{
  if (qword_1EE796780 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_40();
  OUTLINED_FUNCTION_1_30();
  OUTLINED_FUNCTION_8_1();
}

uint64_t sub_1A56AE978()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  uint64_t result;
  char v5;

  v0 = 15;
  while (sub_1A594B6E8() != 61 || v1 != 0xE100000000000000)
  {
    v3 = sub_1A594CD38();
    result = swift_bridgeObjectRelease();
    if ((v3 & 1) != 0)
      goto LABEL_9;
    result = sub_1A594B5B0();
    v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x80000)
    {
      v0 = 0;
LABEL_9:
      v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  result = swift_bridgeObjectRelease();
  v5 = 0;
LABEL_11:
  static Capability.startTLS = 0x534C545452415453;
  unk_1EE7F9E10 = 0xE800000000000000;
  qword_1EE7F9E18 = v0;
  byte_1EE7F9E20 = v5 & 1;
  return result;
}

uint64_t *Capability.startTLS.unsafeMutableAddressor()
{
  if (qword_1EE7A9038 != -1)
    swift_once();
  return &static Capability.startTLS;
}

void static Capability.startTLS.getter()
{
  if (qword_1EE7A9038 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_40();
  OUTLINED_FUNCTION_1_30();
  OUTLINED_FUNCTION_8_1();
}

uint64_t sub_1A56AEAF4()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  uint64_t result;
  char v5;

  v0 = 15;
  while (sub_1A594B6E8() != 61 || v1 != 0xE100000000000000)
  {
    v3 = sub_1A594CD38();
    result = swift_bridgeObjectRelease();
    if ((v3 & 1) != 0)
      goto LABEL_9;
    result = sub_1A594B5B0();
    v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x70000)
    {
      v0 = 0;
LABEL_9:
      v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  result = swift_bridgeObjectRelease();
  v5 = 0;
LABEL_11:
  static Capability.uidPlus = 0x53554C50444955;
  unk_1EE7F9E30 = 0xE700000000000000;
  qword_1EE7F9E38 = v0;
  byte_1EE7F9E40 = v5 & 1;
  return result;
}

uint64_t *Capability.uidPlus.unsafeMutableAddressor()
{
  if (qword_1EE7A9040 != -1)
    swift_once();
  return &static Capability.uidPlus;
}

void static Capability.uidPlus.getter()
{
  if (qword_1EE7A9040 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_40();
  OUTLINED_FUNCTION_1_30();
  OUTLINED_FUNCTION_8_1();
}

uint64_t sub_1A56AEC70()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  uint64_t result;
  char v5;

  v0 = 15;
  while (sub_1A594B6E8() != 61 || v1 != 0xE100000000000000)
  {
    v3 = sub_1A594CD38();
    result = swift_bridgeObjectRelease();
    if ((v3 & 1) != 0)
      goto LABEL_9;
    result = sub_1A594B5B0();
    v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x80000)
    {
      v0 = 0;
LABEL_9:
      v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  result = swift_bridgeObjectRelease();
  v5 = 0;
LABEL_11:
  static Capability.unselect = 0x5443454C45534E55;
  unk_1EE7F9E50 = 0xE800000000000000;
  qword_1EE7F9E58 = v0;
  byte_1EE7F9E60 = v5 & 1;
  return result;
}

uint64_t *Capability.unselect.unsafeMutableAddressor()
{
  if (qword_1EE7A9048 != -1)
    swift_once();
  return &static Capability.unselect;
}

void static Capability.unselect.getter()
{
  if (qword_1EE7A9048 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_40();
  OUTLINED_FUNCTION_1_30();
  OUTLINED_FUNCTION_8_1();
}

uint64_t sub_1A56AEDEC()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  uint64_t result;
  char v5;

  v0 = 15;
  while (sub_1A594B6E8() != 61 || v1 != 0xE100000000000000)
  {
    v3 = sub_1A594CD38();
    result = swift_bridgeObjectRelease();
    if ((v3 & 1) != 0)
      goto LABEL_9;
    result = sub_1A594B5B0();
    v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0xB0000)
    {
      v0 = 0;
LABEL_9:
      v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  result = swift_bridgeObjectRelease();
  v5 = 0;
LABEL_11:
  static Capability.partialURL = 0x545241502D4C5255;
  unk_1EE7F9E70 = 0xEB000000004C4149;
  qword_1EE7F9E78 = v0;
  byte_1EE7F9E80 = v5 & 1;
  return result;
}

uint64_t *Capability.partialURL.unsafeMutableAddressor()
{
  if (qword_1EE7A9050 != -1)
    swift_once();
  return &static Capability.partialURL;
}

void static Capability.partialURL.getter()
{
  if (qword_1EE7A9050 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_40();
  OUTLINED_FUNCTION_1_30();
  OUTLINED_FUNCTION_8_1();
}

uint64_t sub_1A56AEF80()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  uint64_t result;
  char v5;

  v0 = 15;
  while (sub_1A594B6E8() != 61 || v1 != 0xE100000000000000)
  {
    v3 = sub_1A594CD38();
    result = swift_bridgeObjectRelease();
    if ((v3 & 1) != 0)
      goto LABEL_9;
    result = sub_1A594B5B0();
    v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x70000)
    {
      v0 = 0;
LABEL_9:
      v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  result = swift_bridgeObjectRelease();
  v5 = 0;
LABEL_11:
  static Capability.partial = 0x4C414954524150;
  *(_QWORD *)algn_1EE7F9528 = 0xE700000000000000;
  qword_1EE7F9530 = v0;
  byte_1EE7F9538 = v5 & 1;
  return result;
}

uint64_t *Capability.partial.unsafeMutableAddressor()
{
  if (qword_1EE7967D8 != -1)
    swift_once();
  return &static Capability.partial;
}

void static Capability.partial.getter()
{
  if (qword_1EE7967D8 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_40();
  OUTLINED_FUNCTION_1_30();
  OUTLINED_FUNCTION_8_1();
}

uint64_t sub_1A56AF0FC()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  uint64_t result;
  char v5;

  v0 = 15;
  while (sub_1A594B6E8() != 61 || v1 != 0xE100000000000000)
  {
    v3 = sub_1A594CD38();
    result = swift_bridgeObjectRelease();
    if ((v3 & 1) != 0)
      goto LABEL_9;
    result = sub_1A594B5B0();
    v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x70000)
    {
      v0 = 0;
LABEL_9:
      v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  result = swift_bridgeObjectRelease();
  v5 = 0;
LABEL_11:
  static Capability.authenticatedURL = 0x485455414C5255;
  unk_1EE7F9E90 = 0xE700000000000000;
  qword_1EE7F9E98 = v0;
  byte_1EE7F9EA0 = v5 & 1;
  return result;
}

uint64_t *Capability.authenticatedURL.unsafeMutableAddressor()
{
  if (qword_1EE7A9058 != -1)
    swift_once();
  return &static Capability.authenticatedURL;
}

void static Capability.authenticatedURL.getter()
{
  if (qword_1EE7A9058 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_40();
  OUTLINED_FUNCTION_1_30();
  OUTLINED_FUNCTION_8_1();
}

uint64_t sub_1A56AF278()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  uint64_t result;
  char v5;

  v0 = 15;
  while (sub_1A594B6E8() != 61 || v1 != 0xE100000000000000)
  {
    v3 = sub_1A594CD38();
    result = swift_bridgeObjectRelease();
    if ((v3 & 1) != 0)
      goto LABEL_9;
    result = sub_1A594B5B0();
    v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x60000)
    {
      v0 = 0;
LABEL_9:
      v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  result = swift_bridgeObjectRelease();
  v5 = 0;
LABEL_11:
  static Capability.within = 0x4E4948544957;
  unk_1EE7F9EB0 = 0xE600000000000000;
  qword_1EE7F9EB8 = v0;
  byte_1EE7F9EC0 = v5 & 1;
  return result;
}

uint64_t *Capability.within.unsafeMutableAddressor()
{
  if (qword_1EE7A9060 != -1)
    swift_once();
  return &static Capability.within;
}

void static Capability.within.getter()
{
  if (qword_1EE7A9060 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_40();
  OUTLINED_FUNCTION_1_30();
  OUTLINED_FUNCTION_8_1();
}

uint64_t sub_1A56AF3E8()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  uint64_t result;
  char v5;

  v0 = 15;
  while (sub_1A594B6E8() != 61 || v1 != 0xE100000000000000)
  {
    v3 = sub_1A594CD38();
    result = swift_bridgeObjectRelease();
    if ((v3 & 1) != 0)
      goto LABEL_9;
    result = sub_1A594B5B0();
    v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0xA0000)
    {
      v0 = 0;
LABEL_9:
      v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  result = swift_bridgeObjectRelease();
  v5 = 0;
LABEL_11:
  static Capability.gmailExtensions = 0x5458452D4D472D58;
  *(_QWORD *)algn_1EE7F9488 = 0xEA0000000000312DLL;
  qword_1EE7F9490 = v0;
  byte_1EE7F9498 = v5 & 1;
  return result;
}

uint64_t *Capability.gmailExtensions.unsafeMutableAddressor()
{
  if (qword_1EE7967A8 != -1)
    swift_once();
  return &static Capability.gmailExtensions;
}

void static Capability.gmailExtensions.getter()
{
  if (qword_1EE7967A8 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_40();
  OUTLINED_FUNCTION_1_30();
  OUTLINED_FUNCTION_8_1();
}

void sub_1A56AF570()
{
  unint64_t v0;
  unint64_t v1;
  char v2;
  uint64_t v3;
  char v5;

  if ((0x80000001A5A0F470 & 0x2000000000000000) != 0)
    v0 = (0x80000001A5A0F470 & 0xF00000000000000) >> 54;
  else
    v0 = 64;
  if ((((unint64_t)"QUOTED-PRINTABLE" >> 61) & ((0x80000001A5A0F470 & 0xF00000000000000) >> 54 == 0)) != 0)
  {
    v1 = 0;
    v2 = 1;
  }
  else
  {
    v1 = 15;
    while (sub_1A594B6E8() != 61 || v3 != 0xE100000000000000)
    {
      v5 = sub_1A594CD38();
      swift_bridgeObjectRelease();
      if ((v5 & 1) != 0)
        goto LABEL_14;
      v1 = sub_1A594B5B0();
      if (v0 == v1 >> 14)
      {
        v1 = 0;
LABEL_14:
        v2 = v5 ^ 1;
        goto LABEL_16;
      }
    }
    swift_bridgeObjectRelease();
    v2 = 0;
  }
LABEL_16:
  static Capability.yahooMailHighestModificationSequence = 0xD000000000000010;
  *(_QWORD *)algn_1EE7F94A8 = 0x80000001A5A0F470;
  qword_1EE7F94B0 = v1;
  byte_1EE7F94B8 = v2 & 1;
}

uint64_t *Capability.yahooMailHighestModificationSequence.unsafeMutableAddressor()
{
  if (qword_1EE7967B0 != -1)
    swift_once();
  return &static Capability.yahooMailHighestModificationSequence;
}

void static Capability.yahooMailHighestModificationSequence.getter()
{
  if (qword_1EE7967B0 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_40();
  OUTLINED_FUNCTION_1_30();
  OUTLINED_FUNCTION_8_1();
}

void sub_1A56AF718()
{
  uint64_t v0;
  char v2;
  char v3;

  while (1)
  {
    OUTLINED_FUNCTION_21_13();
    if (sub_1A594B6E8() == 61 && v0 == 0xE100000000000000)
      break;
    v2 = OUTLINED_FUNCTION_4_22();
    OUTLINED_FUNCTION_55();
    if ((v2 & 1) == 0)
    {
      OUTLINED_FUNCTION_21_13();
      if ((sub_1A594B5B0() & 0xFFFFFFFFFFFFC000) != 0x80000)
        continue;
    }
    v3 = v2 ^ 1;
    goto LABEL_9;
  }
  OUTLINED_FUNCTION_32_7();
  v3 = 0;
LABEL_9:
  OUTLINED_FUNCTION_18_11(v3);
  OUTLINED_FUNCTION_17_1();
}

void static Capability.literalPlus.getter()
{
  if (qword_1EE796788 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_40();
  OUTLINED_FUNCTION_1_30();
  OUTLINED_FUNCTION_8_1();
}

void sub_1A56AF800()
{
  uint64_t v0;
  char v2;
  char v3;

  while (1)
  {
    OUTLINED_FUNCTION_22_14();
    if (sub_1A594B6E8() == 61 && v0 == 0xE100000000000000)
      break;
    v2 = OUTLINED_FUNCTION_4_22();
    OUTLINED_FUNCTION_55();
    if ((v2 & 1) == 0)
    {
      OUTLINED_FUNCTION_22_14();
      if ((sub_1A594B5B0() & 0xFFFFFFFFFFFFC000) != 0x80000)
        continue;
    }
    v3 = v2 ^ 1;
    goto LABEL_9;
  }
  OUTLINED_FUNCTION_32_7();
  v3 = 0;
LABEL_9:
  OUTLINED_FUNCTION_18_11(v3);
  OUTLINED_FUNCTION_17_1();
}

void static Capability.literalMinus.getter()
{
  if (qword_1EE796790 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_40();
  OUTLINED_FUNCTION_1_30();
  OUTLINED_FUNCTION_8_1();
}

uint64_t sub_1A56AF8E8()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  uint64_t result;
  char v5;

  v0 = 15;
  while (sub_1A594B6E8() != 61 || v1 != 0xE100000000000000)
  {
    v3 = sub_1A594CD38();
    result = swift_bridgeObjectRelease();
    if ((v3 & 1) != 0)
      goto LABEL_9;
    result = sub_1A594B5B0();
    v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x70000)
    {
      v0 = 0;
LABEL_9:
      v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  result = swift_bridgeObjectRelease();
  v5 = 0;
LABEL_11:
  static Capability.preview = 0x57454956455250;
  unk_1EE7F9ED0 = 0xE700000000000000;
  qword_1EE7F9ED8 = v0;
  byte_1EE7F9EE0 = v5 & 1;
  return result;
}

uint64_t *Capability.preview.unsafeMutableAddressor()
{
  if (qword_1EE7A9068 != -1)
    swift_once();
  return &static Capability.preview;
}

void static Capability.preview.getter()
{
  if (qword_1EE7A9068 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_40();
  OUTLINED_FUNCTION_1_30();
  OUTLINED_FUNCTION_8_1();
}

uint64_t sub_1A56AFA64()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  uint64_t result;
  char v5;

  v0 = 15;
  while (sub_1A594B6E8() != 61 || v1 != 0xE100000000000000)
  {
    v3 = sub_1A594CD38();
    result = swift_bridgeObjectRelease();
    if ((v3 & 1) != 0)
      goto LABEL_9;
    result = sub_1A594B5B0();
    v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x70000)
    {
      v0 = 0;
LABEL_9:
      v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  result = swift_bridgeObjectRelease();
  v5 = 0;
LABEL_11:
  static Capability.uidOnly = 0x594C4E4F444955;
  unk_1EE7F9EF0 = 0xE700000000000000;
  qword_1EE7F9EF8 = v0;
  byte_1EE7F9F00 = v5 & 1;
  return result;
}

uint64_t *Capability.uidOnly.unsafeMutableAddressor()
{
  if (qword_1EE7A9070 != -1)
    swift_once();
  return &static Capability.uidOnly;
}

void static Capability.uidOnly.getter()
{
  if (qword_1EE7A9070 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_40();
  OUTLINED_FUNCTION_1_30();
  OUTLINED_FUNCTION_8_1();
}

uint64_t static Capability.messageLimit(_:)(uint64_t a1)
{
  return sub_1A56AFC20(a1, 0x4C4547415353454DLL, 0xED00003D54494D49);
}

uint64_t static Capability.saveLimit(_:)(uint64_t a1)
{
  return sub_1A56AFC20(a1, 0x494D494C45564153, 0xEA00000000003D54);
}

uint64_t sub_1A56AFC20(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;

  sub_1A594CC9C();
  sub_1A594B5F8();
  OUTLINED_FUNCTION_17();
  if ((a3 & 0x2000000000000000) != 0)
    v3 = HIBYTE(a3) & 0xF;
  else
    v3 = a2 & 0xFFFFFFFFFFFFLL;
  OUTLINED_FUNCTION_16_0();
  if (v3)
  {
    while (OUTLINED_FUNCTION_24_8() != 61 || v4 != 0xE100000000000000)
    {
      v6 = OUTLINED_FUNCTION_4_22();
      OUTLINED_FUNCTION_52();
      if ((v6 & 1) != 0)
        goto LABEL_13;
      if (4 * v3 == (unint64_t)OUTLINED_FUNCTION_25_7() >> 14)
        goto LABEL_11;
    }
    OUTLINED_FUNCTION_9_2();
LABEL_13:
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_11:
    OUTLINED_FUNCTION_9_2();
  }
  return a2;
}

void static Capability.authenticate(_:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_17_14(a1, a2, 1213486401);
}

void static Capability.context(_:)(uint64_t a1, uint64_t a2)
{
  sub_1A56AFEF0(a1, a2, 0x3D545845544E4F43, 0xE800000000000000);
}

void static Capability.sort(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  char v7;

  if (a2)
  {
    OUTLINED_FUNCTION_266_0();
    OUTLINED_FUNCTION_27_8();
    OUTLINED_FUNCTION_17();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    while (1)
    {
      OUTLINED_FUNCTION_26_4();
      if (sub_1A594B6E8() == 61 && v2 == 0xE100000000000000)
        break;
      v4 = OUTLINED_FUNCTION_4_22();
      OUTLINED_FUNCTION_52();
      if ((v4 & 1) != 0)
        goto LABEL_18;
      OUTLINED_FUNCTION_26_4();
      if ((unint64_t)sub_1A594B5B0() >> 14 == 20)
      {
        OUTLINED_FUNCTION_55();
        goto LABEL_20;
      }
    }
    OUTLINED_FUNCTION_55();
LABEL_18:
    swift_bridgeObjectRelease();
  }
  else
  {
    while (1)
    {
      OUTLINED_FUNCTION_34_7();
      if (sub_1A594B6E8() == 61 && v5 == 0xE100000000000000)
        break;
      v7 = OUTLINED_FUNCTION_4_22();
      OUTLINED_FUNCTION_52();
      if ((v7 & 1) == 0)
      {
        OUTLINED_FUNCTION_34_7();
        if ((sub_1A594B5B0() & 0xFFFFFFFFFFFFC000) != 0x40000)
          continue;
      }
      goto LABEL_20;
    }
    OUTLINED_FUNCTION_32_7();
  }
LABEL_20:
  OUTLINED_FUNCTION_164();
}

void static Capability.utf8(_:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_17_14(a1, a2, 944133205);
}

void static Capability.thread(_:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_6_20(a1, a2, 0x444145524854);
}

void static Capability.status(_:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_6_20(a1, a2, 0x535554415453);
}

void static Capability.rights(_:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_6_20(a1, a2, 0x535448474952);
}

void static Capability.compression(_:)(uint64_t a1, uint64_t a2)
{
  sub_1A56AFEF0(a1, a2, 0x53534552504D4F43, 0xE90000000000003DLL);
}

void sub_1A56AFEF0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char v7;

  OUTLINED_FUNCTION_266_0();
  OUTLINED_FUNCTION_27_8();
  OUTLINED_FUNCTION_17();
  if ((a4 & 0x2000000000000000) != 0)
    v4 = HIBYTE(a4) & 0xF;
  else
    v4 = a3 & 0xFFFFFFFFFFFFLL;
  OUTLINED_FUNCTION_16_0();
  if (v4)
  {
    while (OUTLINED_FUNCTION_24_8() != 61 || v5 != 0xE100000000000000)
    {
      v7 = OUTLINED_FUNCTION_4_22();
      OUTLINED_FUNCTION_52();
      if ((v7 & 1) != 0)
        goto LABEL_13;
      if (4 * v4 == (unint64_t)OUTLINED_FUNCTION_25_7() >> 14)
        goto LABEL_11;
    }
    OUTLINED_FUNCTION_9_2();
LABEL_13:
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_11:
    OUTLINED_FUNCTION_9_2();
  }
  OUTLINED_FUNCTION_164();
}

unint64_t sub_1A56AFFC4()
{
  unint64_t result;

  result = qword_1EE796800;
  if (!qword_1EE796800)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for Capability, &type metadata for Capability);
    atomic_store(result, (unint64_t *)&qword_1EE796800);
  }
  return result;
}

unint64_t sub_1A56B0004()
{
  unint64_t result;

  result = qword_1EE7A9648;
  if (!qword_1EE7A9648)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for Capability.ContextKind, &type metadata for Capability.ContextKind);
    atomic_store(result, (unint64_t *)&qword_1EE7A9648);
  }
  return result;
}

unint64_t sub_1A56B0044()
{
  unint64_t result;

  result = qword_1EE7A9650;
  if (!qword_1EE7A9650)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for Capability.SortKind, &type metadata for Capability.SortKind);
    atomic_store(result, (unint64_t *)&qword_1EE7A9650);
  }
  return result;
}

unint64_t sub_1A56B0084()
{
  unint64_t result;

  result = qword_1EE7A9658;
  if (!qword_1EE7A9658)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for Capability.ThreadKind, &type metadata for Capability.ThreadKind);
    atomic_store(result, (unint64_t *)&qword_1EE7A9658);
  }
  return result;
}

unint64_t sub_1A56B00C4()
{
  unint64_t result;

  result = qword_1EE7A9660;
  if (!qword_1EE7A9660)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for Capability.StatusKind, &type metadata for Capability.StatusKind);
    atomic_store(result, (unint64_t *)&qword_1EE7A9660);
  }
  return result;
}

unint64_t sub_1A56B0104()
{
  unint64_t result;

  result = qword_1EE7A9668;
  if (!qword_1EE7A9668)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for Capability.UTF8Kind, &type metadata for Capability.UTF8Kind);
    atomic_store(result, (unint64_t *)&qword_1EE7A9668);
  }
  return result;
}

unint64_t sub_1A56B0144()
{
  unint64_t result;

  result = qword_1EE7A9670;
  if (!qword_1EE7A9670)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for Capability.RightsKind, &type metadata for Capability.RightsKind);
    atomic_store(result, (unint64_t *)&qword_1EE7A9670);
  }
  return result;
}

unint64_t sub_1A56B0184()
{
  unint64_t result;

  result = qword_1EE7A9678;
  if (!qword_1EE7A9678)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for Capability.CompressionKind, &type metadata for Capability.CompressionKind);
    atomic_store(result, (unint64_t *)&qword_1EE7A9678);
  }
  return result;
}

uint64_t initializeWithCopy for Capability(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for Capability(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  return a1;
}

uint64_t assignWithTake for Capability(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for Capability(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 25))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

void type metadata accessor for Capability()
{
  OUTLINED_FUNCTION_3_1();
}

void type metadata accessor for Capability.ContextKind()
{
  OUTLINED_FUNCTION_3_1();
}

void type metadata accessor for Capability.SortKind()
{
  OUTLINED_FUNCTION_3_1();
}

void type metadata accessor for Capability.ThreadKind()
{
  OUTLINED_FUNCTION_3_1();
}

void type metadata accessor for Capability.StatusKind()
{
  OUTLINED_FUNCTION_3_1();
}

void type metadata accessor for Capability.UTF8Kind()
{
  OUTLINED_FUNCTION_3_1();
}

void type metadata accessor for Capability.RightsKind()
{
  OUTLINED_FUNCTION_3_1();
}

_QWORD *_s12NIOIMAPCore210CapabilityV11ContextKindVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_9_2();
  return a1;
}

void type metadata accessor for Capability.CompressionKind()
{
  OUTLINED_FUNCTION_3_1();
}

void sub_1A56B0384()
{
  uint64_t v0;
  Swift::Int v1;
  uint64_t v2;
  unint64_t v3;
  Swift::Int v4;
  char v5;
  Swift::String v6;
  int v7;
  BOOL v8;
  int v9;

  v1 = *(unsigned int *)(v0 + 20);
  v2 = OUTLINED_FUNCTION_19_11();
  sub_1A56814E0(v2, v3, v0 + 8, v1);
  if ((v5 & 1) != 0)
  {
    v6._countAndFlagsBits = OUTLINED_FUNCTION_19_11();
    v4 = ByteBuffer._setStringSlowpath(_:at:)(v6, v1);
  }
  v7 = *(_DWORD *)(v0 + 20);
  v8 = __CFADD__(v7, (_DWORD)v4);
  v9 = v7 + v4;
  if (v8)
  {
    __break(1u);
    goto LABEL_7;
  }
  *(_DWORD *)(v0 + 20) = v9;
  if (__OFADD__(v4, j__OUTLINED_FUNCTION_167()))
LABEL_7:
    __break(1u);
}

uint64_t OUTLINED_FUNCTION_0_40()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t OUTLINED_FUNCTION_1_30()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_4_22()
{
  return sub_1A594CD38();
}

void OUTLINED_FUNCTION_6_20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A56AFEF0(a1, a2, a3 & 0xFFFFFFFFFFFFLL | 0x3D000000000000, 0xE700000000000000);
}

uint64_t OUTLINED_FUNCTION_8_12()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_16_12(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  size_t v9;
  _QWORD *v10;
  const void *v11;

  return memcmp(v11, (const void *)(*v10 + a9), v9);
}

void OUTLINED_FUNCTION_17_14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A56AFEF0(a1, a2, a3 & 0xFFFF0000FFFFFFFFLL | 0x3D00000000, 0xE500000000000000);
}

void OUTLINED_FUNCTION_18_11(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)v1 = v4;
  *(_QWORD *)(v1 + 8) = v2;
  *(_QWORD *)(v1 + 16) = v3;
  *(_BYTE *)(v1 + 24) = a1 & 1;
}

uint64_t OUTLINED_FUNCTION_19_11()
{
  return 0x494C494241504143;
}

void OUTLINED_FUNCTION_20_12()
{
  JUMPOUT(0x1A85AD950);
}

uint64_t OUTLINED_FUNCTION_21_13()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_22_14()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_24_8()
{
  return sub_1A594B6E8();
}

uint64_t OUTLINED_FUNCTION_25_7()
{
  return sub_1A594B5B0();
}

uint64_t OUTLINED_FUNCTION_26_4()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_27_8()
{
  return sub_1A594B5F8();
}

uint64_t OUTLINED_FUNCTION_30_7()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_32_7()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_34_7()
{
  uint64_t v0;

  return v0;
}

uint64_t ChangedSinceModifier.modificationSequence.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

double (*ChangedSinceModifier.modificationSequence.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ChangedSinceModifier.hash(into:)()
{
  return sub_1A594CEB8();
}

uint64_t sub_1A56B0674()
{
  _QWORD *v0;

  return ChangedSinceModifier.hashValue.getter(*v0);
}

uint64_t sub_1A56B067C()
{
  return ChangedSinceModifier.hash(into:)();
}

uint64_t sub_1A56B0688(_QWORD *a1, _QWORD *a2)
{
  return static ChangedSinceModifier.__derived_struct_equals(_:_:)(*a1, *a2);
}

uint64_t UnchangedSinceModifier.modificationSequence.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

double (*UnchangedSinceModifier.modificationSequence.modify())(_QWORD)
{
  return nullsub_1;
}

BOOL _s12NIOIMAPCore220ChangedSinceModifierV23__derived_struct_equalsySbAC_ACtFZ_0(_BOOL8 result, uint64_t a2)
{
  if (((a2 | result) & 0x8000000000000000) == 0)
    return a2 == result;
  __break(1u);
  return result;
}

void _s12NIOIMAPCore220ChangedSinceModifierV9hashValueSivg_0()
{
  sub_1A594CE64();
  OUTLINED_FUNCTION_0_41();
  sub_1A594CED0();
  OUTLINED_FUNCTION_8_7();
}

void sub_1A56B0704()
{
  sub_1A594CE64();
  OUTLINED_FUNCTION_0_41();
  sub_1A594CED0();
  OUTLINED_FUNCTION_8_7();
}

unint64_t sub_1A56B0738()
{
  unint64_t result;

  result = qword_1EE7A9680;
  if (!qword_1EE7A9680)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ChangedSinceModifier, &type metadata for ChangedSinceModifier);
    atomic_store(result, (unint64_t *)&qword_1EE7A9680);
  }
  return result;
}

unint64_t sub_1A56B0778()
{
  unint64_t result;

  result = qword_1EE7A9688;
  if (!qword_1EE7A9688)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for UnchangedSinceModifier, &type metadata for UnchangedSinceModifier);
    atomic_store(result, (unint64_t *)&qword_1EE7A9688);
  }
  return result;
}

ValueMetadata *type metadata accessor for ChangedSinceModifier()
{
  return &type metadata for ChangedSinceModifier;
}

ValueMetadata *type metadata accessor for UnchangedSinceModifier()
{
  return &type metadata for UnchangedSinceModifier;
}

uint64_t OUTLINED_FUNCTION_0_41()
{
  return sub_1A594CEB8();
}

void sub_1A56B07F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v4;

  OUTLINED_FUNCTION_93_1(a1, a2, a3, a4);
  sub_1A5690C88();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_182();
    sub_1A56913B0();
  }
}

void sub_1A56B082C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v4;

  OUTLINED_FUNCTION_93_1(a1, a2, a3, a4);
  sub_1A5690DA8();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_182();
    sub_1A56916D0();
  }
}

void Command.hash(into:)(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  _QWORD v3[15];

  v1 = OUTLINED_FUNCTION_163_1(a1, &v2);
  OUTLINED_FUNCTION_163_1((uint64_t)v1, v3);
  __asm { BR              X10 }
}

void sub_1A56B08D4()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_24_9();
  OUTLINED_FUNCTION_23_11();
  OUTLINED_FUNCTION_103_3();
  v0 = OUTLINED_FUNCTION_182();
  sub_1A5695590(v0, v1);
}

void static Command.__derived_enum_equals(_:_:)(void *a1)
{
  _BYTE __dst[104];

  sub_1A56B60BC(a1, __dst);
  __asm { BR              X10 }
}

uint64_t sub_1A56B16A0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v10;
  unsigned int v11;
  unint64_t v12;

  OUTLINED_FUNCTION_69_2();
  v3 = *(_DWORD *)(v2 + 272);
  sub_1A56B60BC(v1, &v10);
  if (!(v12 >> 58)
    && (v4 = v10, v5 = v11, v6 = MailboxName.HashValue.value.getter(v3), v6 == MailboxName.HashValue.value.getter(v5))
    && (sub_1A568A0E0(v0, v4) & 1) != 0)
  {
    v7 = OUTLINED_FUNCTION_60_5();
    v8 = ((uint64_t (*)(uint64_t))sub_1A568B488)(v7);
  }
  else
  {
    v8 = 0;
  }
  return v8 & 1;
}

void sub_1A56B29FC(int32x2_t *a1, uint64_t a2, int32x2_t *a3, uint64_t a4)
{
  if ((a2 & 0xFF00000000) != 0xFF00000000 && (a4 & 0xFF00000000) != 0xFF00000000)
    sub_1A56B614C(a1, a2 & 0xFFFFFFFFFFLL, a3, a4 & 0xFFFFFFFFFFLL);
}

uint64_t Command.hashValue.getter()
{
  _BYTE v1[72];

  sub_1A594CE64();
  Command.hash(into:)((uint64_t)v1);
  return sub_1A594CED0();
}

uint64_t sub_1A56B2A74()
{
  void *v0;
  _BYTE __dst[120];

  sub_1A56B60BC(v0, __dst);
  return Command.hashValue.getter();
}

void sub_1A56B2AA8(uint64_t a1)
{
  void *v1;
  _BYTE __dst[120];

  sub_1A56B60BC(v1, __dst);
  Command.hash(into:)(a1);
}

uint64_t sub_1A56B2AE4()
{
  void *v0;
  uint64_t v2;
  _BYTE __dst[120];

  sub_1A56B60BC(v0, __dst);
  sub_1A594CE64();
  Command.hash(into:)((uint64_t)&v2);
  return sub_1A594CED0();
}

uint64_t sub_1A56B2B34(void *a1, void *a2)
{
  char v3;
  _BYTE v5[120];
  _BYTE __dst[120];

  sub_1A56B60BC(a1, v5);
  sub_1A56B60BC(a2, __dst);
  static Command.__derived_enum_equals(_:_:)(v5);
  return v3 & 1;
}

void Command.debugDescription.getter()
{
  uint64_t v0;

  sub_1A56B6324(v0);
  sub_1A567E418();
}

void sub_1A56B2BA0(void *a1)
{
  void *v1;
  uint64_t __dst;
  _QWORD v3[17];

  v1 = sub_1A56B60BC(a1, &__dst);
  OUTLINED_FUNCTION_163_1((uint64_t)v1, v3);
  __asm { BR              X10 }
}

uint64_t sub_1A56B2C10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::UInt32 v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  OUTLINED_FUNCTION_25_8();
  v4 = OUTLINED_FUNCTION_133_1();
  OUTLINED_FUNCTION_22_1(v4, v5, v1, v3);
  if ((v6 & 1) != 0)
  {
    v7 = OUTLINED_FUNCTION_133_1();
    OUTLINED_FUNCTION_33(v7, v8);
  }
  OUTLINED_FUNCTION_13_11();
  if (v10)
  {
    __break(1u);
    JUMPOUT(0x1A56B42D4);
  }
  *(_DWORD *)(v0 + 20) = v9;
  v11 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_87_3(v11);
  OUTLINED_FUNCTION_156_1();
  v12 = v2 + v1;
  if (__OFADD__(v2, v1))
  {
    __break(1u);
    JUMPOUT(0x1A56B4330);
  }
  if (*(_QWORD *)(v16 + 16))
  {
    OUTLINED_FUNCTION_11_1();
    OUTLINED_FUNCTION_155();
    sub_1A56B5CC0(v0, v16, 0, 0xE000000000000000, (uint64_t (*)(uint64_t, _QWORD, unint64_t, uint64_t, uint64_t, _QWORD, unint64_t, uint64_t, uint64_t))sub_1A565F00C);
    v14 = v13;
    OUTLINED_FUNCTION_17_4();
    OUTLINED_FUNCTION_36();
  }
  else
  {
    v14 = 0;
  }
  if (__OFADD__(v12, v14))
  {
    __break(1u);
    JUMPOUT(0x1A56B409CLL);
  }
  return v12 + v14;
}

void sub_1A56B4470()
{
  void *v0;
  _BYTE __dst[120];

  sub_1A56B60BC(v0, __dst);
  Command.debugDescription.getter();
}

void sub_1A56B44A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v12;
  Swift::Int v13;
  Swift::Int v14;
  char v15;
  Swift::String v16;
  Swift::Int v17;
  int v18;
  Swift::Int v19;
  uint64_t v20;
  Swift::Int v21;
  char v22;
  Swift::String v23;
  Swift::Int v24;
  int v25;
  BOOL v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  Swift::Int v30;
  Swift::Int v31;
  Swift::Int v32;
  char v33;
  Swift::String v34;
  int v35;
  int v36;
  BOOL v37;
  Swift::Int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  Swift::Int v42;
  Swift::Int v43;
  Swift::Int v44;
  char v45;
  Swift::String v46;
  uint64_t v47;
  int v48;
  int v49;
  Swift::Int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  Swift::Int v54;
  Swift::Int v55;
  Swift::Int v56;
  Swift::Int v57;
  char v58;
  Swift::String v59;
  Swift::Int v60;
  int v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v69;
  uint64_t v70[5];
  uint64_t v71[3];
  int v72;
  int v73;
  int v74;
  __int16 v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t vars0;

  v8 = v7;
  v12 = v7 + 8;
  v13 = *(unsigned int *)(v7 + 20);
  sub_1A56814E0(1414744396, 0xE400000000000000, v12, v13);
  if ((v15 & 1) != 0)
  {
    v16._countAndFlagsBits = 1414744396;
    v16._object = (void *)0xE400000000000000;
    v14 = ByteBuffer._setStringSlowpath(_:at:)(v16, v13);
  }
  v17 = v14;
  v18 = *(_DWORD *)(v8 + 20);
  v19 = (v18 + v14);
  if (__CFADD__(v18, (_DWORD)v14))
  {
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  *(_DWORD *)(v8 + 20) = v19;
  sub_1A56B6868(a1, (uint64_t)v71, &qword_1EE796B88);
  v20 = v80;
  if (v80)
  {
    v66 = a4;
    swift_retain();
    swift_retain();
    sub_1A56B68A8(a1);
    sub_1A56814E0(32, 0xE100000000000000, v12, v19);
    if ((v22 & 1) != 0)
    {
      v23._countAndFlagsBits = 32;
      v23._object = (void *)0xE100000000000000;
      v21 = ByteBuffer._setStringSlowpath(_:at:)(v23, v19);
    }
    v24 = v21;
    v25 = *(_DWORD *)(v8 + 20);
    v26 = __CFADD__(v25, (_DWORD)v21);
    v27 = v25 + v21;
    if (v26)
      goto LABEL_40;
    *(_DWORD *)(v8 + 20) = v27;
    sub_1A56D1930(a1);
    v29 = v28;
    sub_1A56B68A8(a1);
    swift_release();
    swift_release();
    v20 = v24 + v29;
    if (__OFADD__(v24, v29))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    a4 = v66;
  }
  v30 = v17 + v20;
  if (__OFADD__(v17, v20))
    goto LABEL_32;
  v31 = *(unsigned int *)(v8 + 20);
  sub_1A56814E0(32, 0xE100000000000000, v12, *(_DWORD *)(v8 + 20));
  if ((v33 & 1) != 0)
  {
    v34._countAndFlagsBits = 32;
    v34._object = (void *)0xE100000000000000;
    v32 = ByteBuffer._setStringSlowpath(_:at:)(v34, v31);
  }
  v35 = *(_DWORD *)(v8 + 20);
  v26 = __CFADD__(v35, (_DWORD)v32);
  v36 = v35 + v32;
  if (v26)
    goto LABEL_33;
  *(_DWORD *)(v8 + 20) = v36;
  v37 = __OFADD__(v30, v32);
  v38 = v30 + v32;
  if (v37)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v39 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A56BABD4(v39);
  v41 = v40;
  swift_bridgeObjectRelease();
  v37 = __OFADD__(v38, v41);
  v42 = v38 + v41;
  if (v37)
  {
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v43 = *(unsigned int *)(v8 + 20);
  sub_1A56814E0(32, 0xE100000000000000, v12, *(_DWORD *)(v8 + 20));
  if ((v45 & 1) != 0)
  {
    v46._countAndFlagsBits = 32;
    v46._object = (void *)0xE100000000000000;
    v44 = ByteBuffer._setStringSlowpath(_:at:)(v46, v43);
  }
  v47 = a7;
  v48 = *(_DWORD *)(v8 + 20);
  v26 = __CFADD__(v48, (_DWORD)v44);
  v49 = v48 + v44;
  if (v26)
    goto LABEL_36;
  *(_DWORD *)(v8 + 20) = v49;
  v37 = __OFADD__(v42, v44);
  v50 = v42 + v44;
  if (v37)
  {
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if ((a6 & 0x100000000000000) != 0)
  {
    j__OUTLINED_FUNCTION_73(a4, 0, 0xE000000000000000, 32, 0xE100000000000000, 0, 0xE000000000000000, 1, v8, v65, v66, a5, a6, a7, v69, v70[0], v70[1], v70[2], v70[3],
      v70[4],
      v71[0],
      v71[1],
      v71[2],
      v72,
      v73,
      v74,
      v75,
      v76,
      v77,
      v78,
      v79,
      v80,
      v81,
      v82,
      v83,
      v84,
      v85,
      v86,
      v87,
      v88,
      v89,
      v90,
      v91,
      vars0);
    v52 = v53;
  }
  else
  {
    ByteBufferView.init(_:)(a4, a5, a6 & 0xFFFFFFFFFFFFFFLL, (uint64_t)v70);
    sub_1A56667D4(a4, a5, a6, 0);
    swift_retain();
    sub_1A56BA79C((uint64_t)v70);
    v52 = v51;
    sub_1A553E5DC((uint64_t)v70);
    sub_1A56667E0(a4, a5, a6, 0);
  }
  v54 = v50 + v52;
  if (__OFADD__(v50, v52))
    goto LABEL_38;
  v55 = *(_QWORD *)(v47 + 16);
  if (v55)
  {
    v56 = *(unsigned int *)(v8 + 20);
    swift_retain();
    swift_retain();
    sub_1A56814E0(32, 0xE100000000000000, v12, v56);
    if ((v58 & 1) != 0)
    {
      v59._countAndFlagsBits = 32;
      v59._object = (void *)0xE100000000000000;
      v57 = ByteBuffer._setStringSlowpath(_:at:)(v59, v56);
    }
    v60 = v57;
    v61 = *(_DWORD *)(v8 + 20);
    v26 = __CFADD__(v61, (_DWORD)v57);
    v62 = v61 + v57;
    if (v26)
      goto LABEL_42;
    *(_DWORD *)(v8 + 20) = v62;
    sub_1A56CFDF8(v47);
    v64 = v63;
    swift_release();
    swift_release();
    v55 = v60 + v64;
    if (__OFADD__(v60, v64))
    {
LABEL_43:
      __break(1u);
      return;
    }
  }
  if (__OFADD__(v54, v55))
    goto LABEL_39;
}

#error "1A56B49E4: call analysis failed (funcsize=153)"

void sub_1A56B4AA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v12;
  Swift::Int v13;
  Swift::Int v14;
  char v15;
  Swift::String v16;
  Swift::Int v17;
  int v18;
  BOOL v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  Swift::Int v24;
  Swift::Int v25;
  Swift::Int v26;
  char v27;
  Swift::String v28;
  int v29;
  int v30;
  Swift::Int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  Swift::Int v35;
  uint64_t v36;
  uint64_t v37;

  v8 = v7;
  v12 = v7 + 8;
  v13 = *(unsigned int *)(v7 + 20);
  sub_1A56814E0(0x20454D414E4552, 0xE700000000000000, v12, v13);
  if ((v15 & 1) != 0)
  {
    v16._countAndFlagsBits = 0x20454D414E4552;
    v16._object = (void *)0xE700000000000000;
    v14 = ByteBuffer._setStringSlowpath(_:at:)(v16, v13);
  }
  v17 = v14;
  v18 = *(_DWORD *)(v8 + 20);
  v19 = __CFADD__(v18, (_DWORD)v14);
  v20 = v18 + v14;
  if (v19)
  {
    __break(1u);
    goto LABEL_13;
  }
  *(_DWORD *)(v8 + 20) = v20;
  v21 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A56BABD4(v21);
  v23 = v22;
  swift_bridgeObjectRelease();
  v24 = v17 + v23;
  if (__OFADD__(v17, v23))
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v25 = *(unsigned int *)(v8 + 20);
  sub_1A56814E0(32, 0xE100000000000000, v12, *(_DWORD *)(v8 + 20));
  if ((v27 & 1) != 0)
  {
    v28._countAndFlagsBits = 32;
    v28._object = (void *)0xE100000000000000;
    v26 = ByteBuffer._setStringSlowpath(_:at:)(v28, v25);
  }
  v29 = *(_DWORD *)(v8 + 20);
  v19 = __CFADD__(v29, (_DWORD)v26);
  v30 = v29 + v26;
  if (v19)
    goto LABEL_14;
  *(_DWORD *)(v8 + 20) = v30;
  v31 = v24 + v26;
  if (__OFADD__(v24, v26))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v32 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A56BABD4(v32);
  v34 = v33;
  swift_bridgeObjectRelease();
  v35 = v31 + v34;
  if (__OFADD__(v31, v34))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1A570544C(a5, a6, a7);
  v37 = v36;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (__OFADD__(v35, v37))
LABEL_17:
    __break(1u);
}

void sub_1A56B4C84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::Int v3;
  Swift::Int v4;
  char v5;
  Swift::String v6;
  Swift::Int v7;
  int v8;
  BOOL v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Swift::Int v14;
  Swift::Int v15;
  Swift::Int v16;
  char v17;
  Swift::String v18;
  int v19;
  int v20;
  Swift::Int v21;
  uint64_t v22;
  Swift::Int v23;
  Swift::Int v24;
  Swift::Int v25;
  char v26;
  Swift::String v27;
  int v28;
  int v29;

  v1 = v0;
  v2 = v0 + 8;
  v3 = *(unsigned int *)(v0 + 20);
  sub_1A56814E0(0x20535554415453, 0xE700000000000000, v2, v3);
  if ((v5 & 1) != 0)
  {
    v6._countAndFlagsBits = 0x20535554415453;
    v6._object = (void *)0xE700000000000000;
    v4 = ByteBuffer._setStringSlowpath(_:at:)(v6, v3);
  }
  v7 = v4;
  v8 = *(_DWORD *)(v1 + 20);
  v9 = __CFADD__(v8, (_DWORD)v4);
  v10 = v8 + v4;
  if (v9)
  {
    __break(1u);
    goto LABEL_16;
  }
  *(_DWORD *)(v1 + 20) = v10;
  v11 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A56BABD4(v11);
  v13 = v12;
  swift_bridgeObjectRelease();
  v14 = v7 + v13;
  if (__OFADD__(v7, v13))
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v15 = *(unsigned int *)(v1 + 20);
  sub_1A56814E0(10272, 0xE200000000000000, v2, *(_DWORD *)(v1 + 20));
  if ((v17 & 1) != 0)
  {
    v18._countAndFlagsBits = 10272;
    v18._object = (void *)0xE200000000000000;
    v16 = ByteBuffer._setStringSlowpath(_:at:)(v18, v15);
  }
  v19 = *(_DWORD *)(v1 + 20);
  v9 = __CFADD__(v19, (_DWORD)v16);
  v20 = v19 + v16;
  if (v9)
    goto LABEL_17;
  *(_DWORD *)(v1 + 20) = v20;
  v21 = v14 + v16;
  if (__OFADD__(v14, v16))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  sub_1A565C4AC();
  v23 = v21 + v22;
  if (__OFADD__(v21, v22))
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v24 = *(unsigned int *)(v1 + 20);
  sub_1A56814E0(41, 0xE100000000000000, v2, *(_DWORD *)(v1 + 20));
  if ((v26 & 1) != 0)
  {
    v27._countAndFlagsBits = 41;
    v27._object = (void *)0xE100000000000000;
    v25 = ByteBuffer._setStringSlowpath(_:at:)(v27, v24);
  }
  v28 = *(_DWORD *)(v1 + 20);
  v9 = __CFADD__(v28, (_DWORD)v25);
  v29 = v28 + v25;
  if (v9)
    goto LABEL_20;
  *(_DWORD *)(v1 + 20) = v29;
  if (__OFADD__(v23, v25))
LABEL_21:
    __break(1u);
}

void sub_1A56B4E2C()
{
  uint64_t v0;
  uint64_t v1;
  Swift::Int v2;
  uint64_t v3;
  unint64_t v4;
  Swift::Int v5;
  char v6;
  Swift::Int v7;
  int v8;
  BOOL v9;
  int v10;
  Swift::String v11;

  OUTLINED_FUNCTION_148_1();
  v3 = OUTLINED_FUNCTION_126_2();
  OUTLINED_FUNCTION_22_1(v3, v4, v1, v2);
  if ((v6 & 1) != 0)
  {
    v11._countAndFlagsBits = OUTLINED_FUNCTION_126_2();
    v5 = OUTLINED_FUNCTION_53_0(v11, v2);
  }
  v7 = v5;
  v8 = *(_DWORD *)(v0 + 20);
  v9 = __CFADD__(v8, (_DWORD)v5);
  v10 = v8 + v5;
  if (v9)
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(v0 + 20) = v10;
    OUTLINED_FUNCTION_57_5();
    if (!__OFADD__(v7, j__OUTLINED_FUNCTION_167()))
    {
      OUTLINED_FUNCTION_6_4();
      return;
    }
  }
  __break(1u);
}

void sub_1A56B4EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  Swift::UInt32 v13;
  uint64_t v14;
  unint64_t v15;
  Swift::Int v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  Swift::Int v20;
  int v21;
  Swift::Int v22;
  char v23;
  Swift::Int v24;
  int v25;
  BOOL v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  Swift::Int v35;
  Swift::Int v36;
  uint64_t v37;
  uint64_t v38;
  Swift::Int v39;
  Swift::Int v40;
  char v41;
  int v42;
  int v43;
  Swift::Int v44;
  uint64_t v45;
  unsigned __int8 v46;
  uint64_t v47;

  v6 = v5;
  v12 = v5 + 8;
  v13 = *(_DWORD *)(v5 + 20);
  v14 = OUTLINED_FUNCTION_143_1();
  OUTLINED_FUNCTION_22_1(v14, v15, v12, v13);
  if ((v17 & 1) != 0)
  {
    v18 = OUTLINED_FUNCTION_143_1();
    v16 = OUTLINED_FUNCTION_34(v18, v19);
  }
  v20 = v16;
  v21 = *(_DWORD *)(v6 + 20);
  if (__CFADD__(v21, (_DWORD)v16))
  {
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v47 = a5;
  *(_DWORD *)(v6 + 20) = v21 + v16;
  if (BYTE4(a2) == 255)
  {
    OUTLINED_FUNCTION_5_20(36);
    if ((v23 & 1) != 0)
      v22 = OUTLINED_FUNCTION_34(36, 0xE100000000000000);
    v24 = v22;
    v25 = *(_DWORD *)(v6 + 20);
    v26 = __CFADD__(v25, (_DWORD)v22);
    v27 = v25 + v22;
    if (v26)
      goto LABEL_30;
    *(_DWORD *)(v6 + 20) = v27;
  }
  else
  {
    sub_1A54E4334(a1, a2, SBYTE4(a2));
    OUTLINED_FUNCTION_146_1();
    OUTLINED_FUNCTION_54_3(a1, v28, v29, v30, v31, v32, v33, v34, v46);
    v24 = v35;
    sub_1A5503B8C(a1, a2);
  }
  v36 = v20 + v24;
  if (__OFADD__(v20, v24))
    goto LABEL_25;
  if (*(_QWORD *)(a3 + 16))
  {
    OUTLINED_FUNCTION_3_3();
    OUTLINED_FUNCTION_0_10();
    sub_1A56B5CC0(v6, a3, 32, 0xE100000000000000, (uint64_t (*)(uint64_t, _QWORD, unint64_t, uint64_t, uint64_t, _QWORD, unint64_t, uint64_t, uint64_t))j__OUTLINED_FUNCTION_166);
    v38 = v37;
    OUTLINED_FUNCTION_4_4();
    OUTLINED_FUNCTION_5_1();
  }
  else
  {
    v38 = 0;
  }
  v39 = v36 + v38;
  if (__OFADD__(v36, v38))
    goto LABEL_26;
  OUTLINED_FUNCTION_5_20(32);
  if ((v41 & 1) != 0)
    v40 = OUTLINED_FUNCTION_34(32, 0xE100000000000000);
  v42 = *(_DWORD *)(v6 + 20);
  v26 = __CFADD__(v42, (_DWORD)v40);
  v43 = v42 + v40;
  if (v26)
    goto LABEL_27;
  *(_DWORD *)(v6 + 20) = v43;
  v44 = v39 + v40;
  if (__OFADD__(v39, v40))
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    return;
  }
  if (a4 < 0)
    v45 = sub_1A56C9A64(a4 & 0x1FF, v47);
  else
    sub_1A56C997C();
  if (__OFADD__(v44, v45))
    goto LABEL_29;
}

#error "1A56B5224: call analysis failed (funcsize=148)"

void sub_1A56B52FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  Swift::Int v11;
  Swift::Int v12;
  char v13;
  Swift::String v14;
  Swift::Int v15;
  int v16;
  BOOL v17;
  int v18;
  uint64_t v19;
  Swift::Int v20;
  Swift::Int v21;
  Swift::Int v22;
  char v23;
  Swift::String v24;
  int v25;
  int v26;
  BOOL v27;
  Swift::Int v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[3];

  v5 = v4;
  v10 = v4 + 8;
  v11 = *(unsigned int *)(v4 + 20);
  sub_1A56814E0(0x484352414553, 0xE600000000000000, v10, v11);
  if ((v13 & 1) != 0)
  {
    v14._countAndFlagsBits = 0x484352414553;
    v14._object = (void *)0xE600000000000000;
    v12 = ByteBuffer._setStringSlowpath(_:at:)(v14, v11);
  }
  v15 = v12;
  v16 = *(_DWORD *)(v5 + 20);
  v17 = __CFADD__(v16, (_DWORD)v12);
  v18 = v16 + v12;
  if (v17)
  {
    __break(1u);
    goto LABEL_18;
  }
  v31 = a2;
  *(_DWORD *)(v5 + 20) = v18;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_retain();
  swift_retain();
  v19 = sub_1A56FF1A4(a4);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v20 = v15 + v19;
  if (__OFADD__(v15, v19))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v21 = *(unsigned int *)(v5 + 20);
  sub_1A56814E0(32, 0xE100000000000000, v10, *(_DWORD *)(v5 + 20));
  if ((v23 & 1) != 0)
  {
    v24._countAndFlagsBits = 32;
    v24._object = (void *)0xE100000000000000;
    v22 = ByteBuffer._setStringSlowpath(_:at:)(v24, v21);
  }
  v25 = *(_DWORD *)(v5 + 20);
  v17 = __CFADD__(v25, (_DWORD)v22);
  v26 = v25 + v22;
  if (v17)
    goto LABEL_19;
  *(_DWORD *)(v5 + 20) = v26;
  v27 = __OFADD__(v20, v22);
  v28 = v20 + v22;
  if (v27)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_retain();
  swift_retain();
  sub_1A56FB62C(a1);
  if ((v29 & 1) != 0)
  {
    if (a3)
    {
      v32[0] = v31;
      v32[1] = a3;
      a3 = sub_1A56B5D7C((uint64_t)v32, v5);
    }
    swift_release();
    swift_release();
  }
  else
  {
    swift_release();
    swift_release();
    a3 = 0;
  }
  if (__OFADD__(v28, a3))
    goto LABEL_21;
  sub_1A56FBF14(a1);
  if (__OFADD__(v28 + a3, v30))
LABEL_22:
    __break(1u);
}

#error "1A56B55CC: call analysis failed (funcsize=74)"

#error "1A56B583C: call analysis failed (funcsize=151)"

void sub_1A56B5890(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  Swift::Int v9;
  char v10;
  Swift::String v11;
  Swift::Int v12;
  int v13;
  Swift::Int v14;
  char v15;
  Swift::String v16;
  int v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v3 = v1;
  v5 = v1 + 8;
  v6 = *(unsigned int *)(v3 + 20);
  v7 = OUTLINED_FUNCTION_134_1();
  OUTLINED_FUNCTION_22_1(v7, v8, v5, v6);
  if ((v10 & 1) != 0)
  {
    v11._countAndFlagsBits = OUTLINED_FUNCTION_134_1();
    v9 = ByteBuffer._setStringSlowpath(_:at:)(v11, v6);
  }
  v12 = v9;
  v13 = *(_DWORD *)(v3 + 20);
  v14 = (v13 + v9);
  if (__CFADD__(v13, (_DWORD)v9))
  {
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  *(_DWORD *)(v3 + 20) = v14;
  if (!a1)
    goto LABEL_12;
  OUTLINED_FUNCTION_90();
  OUTLINED_FUNCTION_12_1();
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_27();
  sub_1A56814E0(32, 0xE100000000000000, v5, v14);
  if ((v15 & 1) != 0)
  {
    v16._countAndFlagsBits = 32;
    v16._object = (void *)0xE100000000000000;
    ByteBuffer._setStringSlowpath(_:at:)(v16, v14);
  }
  OUTLINED_FUNCTION_132_1();
  if (v18)
    goto LABEL_17;
  *(_DWORD *)(v3 + 20) = v17;
  v19 = OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_149_1(v19);
  v21 = v20;
  OUTLINED_FUNCTION_17();
  v22 = __OFADD__(v2, v21);
  v23 = v2 + v21;
  if (!v22)
  {
    OUTLINED_FUNCTION_57_5();
    v24 = j__OUTLINED_FUNCTION_74();
    OUTLINED_FUNCTION_5_1();
    OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_52();
    OUTLINED_FUNCTION_17();
    v25 = v23 + v24;
    if (!__OFADD__(v23, v24))
    {
LABEL_13:
      if (!__OFADD__(v12, v25))
      {
        OUTLINED_FUNCTION_63_1();
        return;
      }
      goto LABEL_16;
    }
    __break(1u);
LABEL_12:
    v25 = 0;
    goto LABEL_13;
  }
LABEL_18:
  __break(1u);
}

#error "1A56B5A20: call analysis failed (funcsize=32)"

#error "1A56B5AE4: call analysis failed (funcsize=47)"

void sub_1A56B5B10(uint64_t a1, uint64_t a2)
{
  Swift::Int v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  char v12;
  Swift::UInt32 v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[2];
  unsigned __int16 v25;
  unsigned __int8 v26;
  uint64_t v27;
  uint64_t v28;
  Swift::String v29;

  ByteBufferView.init(_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned __int16 *)(a1 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 22) << 48), (uint64_t)v24);
  if (*(_BYTE *)a2 == 1)
  {
    OUTLINED_FUNCTION_1_2();
    sub_1A566ACC0((uint64_t)v24);
    swift_release();
    sub_1A594CC9C();
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
    sub_1A594B5F8();
    v3 = *(unsigned int *)(a2 + 20);
    OUTLINED_FUNCTION_90();
    OUTLINED_FUNCTION_22_1(91, 0xE100000000000000, a2 + 8, v3);
    v5 = v4;
    OUTLINED_FUNCTION_52();
    if ((v5 & 1) != 0)
    {
      v29._countAndFlagsBits = 91;
      v29._object = (void *)0xE100000000000000;
      OUTLINED_FUNCTION_50(v29, v3);
    }
    v6 = OUTLINED_FUNCTION_52();
    OUTLINED_FUNCTION_11_11(v6, v7, v8, v9, v10);
    OUTLINED_FUNCTION_140();
    if (!v12)
      goto LABEL_9;
    __break(1u);
  }
  v13 = *(_DWORD *)(a2 + 20);
  v14 = v25;
  v15 = v26;
  v16 = (_QWORD *)(v24[0] + 24);
  OUTLINED_FUNCTION_176();
  if (__OFSUB__(v28, v27))
  {
    __break(1u);
  }
  else
  {
    v17 = *v16 + (v15 | (v14 << 8)) + v27;
    v18 = v17 + v28 - v27;
    OUTLINED_FUNCTION_1_2();
    ByteBuffer._setBytes(_:at:)(v17, v18, v13);
    OUTLINED_FUNCTION_11_11(v19, v20, v21, v22, v23);
    OUTLINED_FUNCTION_140();
    if (!v12)
    {
LABEL_9:
      *(_DWORD *)(a2 + 20) = v11;
      return;
    }
  }
  __break(1u);
}

void sub_1A56B5CC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, _QWORD, unint64_t, uint64_t, uint64_t, _QWORD, unint64_t, uint64_t, uint64_t))
{
  Swift::Int v10;
  Swift::Int v11;
  char v12;
  Swift::String v13;
  int v14;
  BOOL v15;
  int v16;

  v10 = *(unsigned int *)(a1 + 20);
  OUTLINED_FUNCTION_22_1(32, 0xE100000000000000, a1 + 8, v10);
  if ((v12 & 1) != 0)
  {
    v13._countAndFlagsBits = 32;
    v13._object = (void *)0xE100000000000000;
    v11 = ByteBuffer._setStringSlowpath(_:at:)(v13, v10);
  }
  v14 = *(_DWORD *)(a1 + 20);
  v15 = __CFADD__(v14, (_DWORD)v11);
  v16 = v14 + v11;
  if (v15)
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(a1 + 20) = v16;
    if (!__OFADD__(v11, a5(a2, 0, 0xE000000000000000, a3, a4, 0, 0xE000000000000000, 1, a1)))
    {
      OUTLINED_FUNCTION_63_1();
      return;
    }
  }
  __break(1u);
}

uint64_t sub_1A56B5D7C(uint64_t a1, uint64_t a2)
{
  Swift::Int v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t result;
  Swift::String v9;
  int v10;
  BOOL v11;
  int v12;

  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  v3 = *(unsigned int *)(a2 + 20);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A56814E0(0x2054455352414843, 0xE800000000000000, a2 + 8, v3);
  v5 = v4;
  v7 = v6;
  result = swift_bridgeObjectRelease();
  if ((v7 & 1) != 0)
  {
    v9._countAndFlagsBits = 0x2054455352414843;
    v9._object = (void *)0xE800000000000000;
    result = ByteBuffer._setStringSlowpath(_:at:)(v9, v3);
    v5 = result;
  }
  v10 = *(_DWORD *)(a2 + 20);
  v11 = __CFADD__(v10, (_DWORD)v5);
  v12 = v10 + v5;
  if (v11)
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(a2 + 20) = v12;
    swift_bridgeObjectRelease();
    return v5;
  }
  return result;
}

void static Command.uidMove(messages:mailbox:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;

  OUTLINED_FUNCTION_75_3(a1, a2);
  if (v7 != v8)
  {
    OUTLINED_FUNCTION_109_2();
  }
  else
  {
    OUTLINED_FUNCTION_94_3();
    v9 = 0x5400000000000000;
  }
  *v2 = v4;
  v2[1] = v5;
  v2[2] = v3;
  v2[3] = v6;
  OUTLINED_FUNCTION_36_7(v9);
  OUTLINED_FUNCTION_17_1();
}

void static Command.uidCopy(messages:mailbox:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;

  OUTLINED_FUNCTION_75_3(a1, a2);
  if (v7 != v8)
  {
    OUTLINED_FUNCTION_109_2();
  }
  else
  {
    OUTLINED_FUNCTION_94_3();
    v9 = 0x5000000000000000;
  }
  *v2 = v4;
  v2[1] = v5;
  v2[2] = v3;
  v2[3] = v6;
  OUTLINED_FUNCTION_36_7(v9);
  OUTLINED_FUNCTION_17_1();
}

void static Command.uidFetch(messages:attributes:modifiers:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v8 = a1;
  v10 = a2 & 0xFFFFFFFFFFLL;
  if (sub_1A56B60D4(a1, a2 & 0xFFFFFFFFFFLL) < 1)
  {
    v8 = 0;
    v10 = 0;
    OUTLINED_FUNCTION_162_1();
  }
  else
  {
    sub_1A54E4334(v8, a2, SBYTE4(a2));
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v11 = 0x5800000000000000;
  }
  *a5 = v8;
  a5[1] = v10;
  a5[2] = a3;
  a5[3] = a4;
  OUTLINED_FUNCTION_36_7(v11);
  OUTLINED_FUNCTION_17_1();
}

void static Command.uidStore(messages:modifiers:data:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v10 = a1;
  v12 = a2 & 0xFFFFFFFFFFLL;
  if (sub_1A56B60D4(a1, a2 & 0xFFFFFFFFFFLL) < 1)
  {
    v10 = 0;
    v12 = 0;
    a3 = 0;
    OUTLINED_FUNCTION_162_1();
  }
  else
  {
    sub_1A54E4334(v10, a2, SBYTE4(a2));
    OUTLINED_FUNCTION_90();
    OUTLINED_FUNCTION_60_5();
    OUTLINED_FUNCTION_266_0();
    v13 = 0;
    v14 = 0x6000000000000000;
  }
  *(_QWORD *)a6 = v10;
  *(_QWORD *)(a6 + 8) = v12;
  *(_QWORD *)(a6 + 16) = a3;
  *(_QWORD *)(a6 + 24) = a4;
  *(_QWORD *)(a6 + 32) = a5;
  *(_OWORD *)(a6 + 40) = 0u;
  *(_OWORD *)(a6 + 56) = 0u;
  *(_QWORD *)(a6 + 72) = 0;
  *(_QWORD *)(a6 + 80) = v13;
  *(_QWORD *)(a6 + 88) = 0;
  *(_QWORD *)(a6 + 96) = 0;
  *(_QWORD *)(a6 + 104) = v14;
  *(_QWORD *)(a6 + 112) = 0;
  OUTLINED_FUNCTION_15_3();
}

double static Command.uidExpunge(messages:mailbox:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  double result;

  v4 = a1;
  v6 = a2 & 0xFFFFFFFFFFLL;
  if (sub_1A56B60D4(a1, a2 & 0xFFFFFFFFFFLL) < 1)
  {
    v4 = 0;
    v6 = 0;
    v8 = 0;
    v7 = 0xFFFFFFFF00000000;
  }
  else
  {
    sub_1A54E4334(v4, a2, SBYTE4(a2));
    v7 = 0;
    v8 = 0x6400000000000000;
  }
  *(_QWORD *)a3 = v4;
  *(_QWORD *)(a3 + 8) = v6;
  result = 0.0;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  *(_QWORD *)(a3 + 80) = v7;
  *(_QWORD *)(a3 + 88) = 0;
  *(_QWORD *)(a3 + 96) = 0;
  *(_QWORD *)(a3 + 104) = v8;
  *(_QWORD *)(a3 + 112) = 0;
  return result;
}

void *sub_1A56B60BC(void *__src, void *__dst)
{
  return memcpy(__dst, __src, 0x78uLL);
}

uint64_t sub_1A56B60D4(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unsigned int *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;

  result = 0;
  v4 = (unsigned int *)(a1 + 36);
  v5 = -1;
  while (BYTE4(a2) == 1)
  {
    v6 = *(_QWORD *)(a1 + 16);
    if (v5 + 1 == v6)
      return result;
    if (++v5 >= v6)
    {
      __break(1u);
      goto LABEL_12;
    }
    v8 = *(v4 - 1);
    v7 = *v4;
    v4 += 2;
    v9 = v7 - v8;
    v10 = __OFADD__(result, v9);
    result += v9;
    if (v10)
    {
      __break(1u);
      break;
    }
  }
  if (BYTE4(a2) == 2)
    return 0;
LABEL_12:
  if (a1 >= (int)a2)
    __break(1u);
  __break(1u);
  return result;
}

void sub_1A56B614C(int32x2_t *a1, uint64_t a2, int32x2_t *a3, unint64_t a4)
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v7 = (uint64_t)a1;
  v8 = HIDWORD(a4);
  if (!BYTE4(a2))
  {
    if (!BYTE4(a4))
      return;
    if (BYTE4(a4) == 1)
    {
      v7 = (uint64_t)a3;
LABEL_14:
      v9 = *(_QWORD *)(v7 + 16);
      sub_1A54E4334((uint64_t)a3, a4, v8);
      swift_bridgeObjectRelease();
      if (v9 == 1)
        __break(1u);
      return;
    }
LABEL_12:
    sub_1A54E4334((uint64_t)a3, a4, SBYTE4(a4));
    return;
  }
  if (BYTE4(a2) == 1)
  {
    if (BYTE4(a4))
    {
      if (BYTE4(a4) == 1)
      {
        sub_1A5689E30(a1, a3);
        return;
      }
      goto LABEL_11;
    }
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    goto LABEL_14;
  }
  if (!BYTE4(a4))
    goto LABEL_12;
  if (BYTE4(a4) == 1)
  {
LABEL_11:
    sub_1A54E4334((uint64_t)a3, a4, SBYTE4(a4));
    sub_1A54E4334(v7, a2, SBYTE4(a2));
    swift_bridgeObjectRelease();
  }
}

void sub_1A56B6298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  unint64_t v5;
  uint64_t v6;
  int v7;
  unint64_t v8;

  v3 = a3;
  v5 = 0;
  v6 = a2 + 36;
  v7 = BYTE4(a3);
  while (v7 == 1)
  {
    v8 = *(_QWORD *)(a2 + 16);
    if (v5 == v8)
      goto LABEL_7;
    if (v5 >= v8)
    {
      __break(1u);
      goto LABEL_9;
    }
    ++v5;
    sub_1A594CEAC();
    sub_1A594CEAC();
    v6 += 8;
  }
  if (v7 == 2)
  {
LABEL_7:
    OUTLINED_FUNCTION_15_3();
    return;
  }
LABEL_9:
  if (a2 >= v3)
    __break(1u);
  __break(1u);
}

uint64_t sub_1A56B6324(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);

  v2 = OUTLINED_FUNCTION_114_2(a1);
  v3(v2);
  return v1;
}

uint64_t *sub_1A56B636C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = a1[9];
  v3 = a1[10];
  v4 = a1[11];
  v5 = a1[12];
  v6 = a1[13];
  v7 = a1[14];
  v8 = a1[15];
  v9 = a1[16];
  v10 = a1[17];
  sub_1A567FE0C(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8]);
  sub_1A567FE0C(v2, v3, v4, v5, v6, v7, v8, v9, v10);
  return a1;
}

unint64_t sub_1A56B6410()
{
  unint64_t result;

  result = qword_1EE7A9698;
  if (!qword_1EE7A9698)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for Command, &type metadata for Command);
    atomic_store(result, (unint64_t *)&qword_1EE7A9698);
  }
  return result;
}

uint64_t destroy for Command(uint64_t a1)
{
  return sub_1A567FB10(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104));
}

{
  return sub_1A58640B0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
}

uint64_t *initializeWithCopy for Command(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  v11 = a2[8];
  v13 = a2[9];
  v14 = a2[10];
  v15 = a2[11];
  v16 = a2[12];
  v17 = a2[13];
  v18 = a2[14];
  sub_1A56803F0(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16, v17);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v13;
  a1[10] = v14;
  a1[11] = v15;
  a1[12] = v16;
  a1[13] = v17;
  a1[14] = v18;
  return a1;
}

uint64_t assignWithCopy for Command(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  v11 = a2[8];
  v24 = a2[9];
  v25 = a2[10];
  v26 = a2[11];
  v27 = a2[12];
  v28 = a2[13];
  v29 = a2[14];
  sub_1A56803F0(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v24, v25, v26, v27, v28);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  v22 = *(_OWORD *)(a1 + 96);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v24;
  *(_QWORD *)(a1 + 80) = v25;
  *(_QWORD *)(a1 + 88) = v26;
  *(_QWORD *)(a1 + 96) = v27;
  *(_QWORD *)(a1 + 104) = v28;
  *(_QWORD *)(a1 + 112) = v29;
  sub_1A567FB10(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((unint64_t *)&v22 + 1));
  return a1;
}

uint64_t assignWithTake for Command(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v3 = *(_QWORD *)(a2 + 112);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_OWORD *)(a1 + 64);
  v13 = *(_OWORD *)(a1 + 80);
  v14 = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v15;
  v16 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v16;
  v17 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v17;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 112) = v3;
  sub_1A567FB10(v4, v6, v5, v7, v8, v9, v10, v11, v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14, *((unint64_t *)&v14 + 1));
  return a1;
}

{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  __int128 v14;

  v3 = *(_BYTE *)(a2 + 64);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_BYTE *)(a1 + 64);
  v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v13;
  v14 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v14;
  *(_BYTE *)(a1 + 64) = v3;
  sub_1A58640B0(v4, v6, v5, v7, v8, v9, v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for Command(uint64_t a1, int a2)
{
  unsigned int v2;
  int v3;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 120))
    {
      v3 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_DWORD *)(a1 + 84);
      if (v2 > 0x80000000)
        v3 = ~v2;
      else
        v3 = -1;
    }
  }
  else
  {
    v3 = -1;
  }
  return (v3 + 1);
}

double storeEnumTagSinglePayload for Command(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      result = 0.0;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)(a1 + 64) = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_QWORD *)(a1 + 80) = (unint64_t)-a2 << 32;
      *(_OWORD *)(a1 + 88) = 0u;
      *(_OWORD *)(a1 + 104) = 0u;
      return result;
    }
    *(_BYTE *)(a1 + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1A56B67D8(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 104) >> 58;
  if (v1 <= 0x24)
    return v1;
  else
    return (*(_DWORD *)a1 + 37);
}

uint64_t sub_1A56B67F4(uint64_t result)
{
  *(_QWORD *)(result + 104) &= 0x3FFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_1A56B6804(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  if (a2 < 0x25)
  {
    v2 = *(_QWORD *)(result + 104) & 0x1FFFFFFFFFFFFFFLL | (a2 << 58);
    *(_QWORD *)(result + 80) = *(unsigned int *)(result + 80);
    *(_QWORD *)(result + 104) = v2;
  }
  else
  {
    *(_QWORD *)result = (a2 - 37);
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 104) = xmmword_1A59AC040;
  }
  return result;
}

ValueMetadata *type metadata accessor for Command()
{
  return &type metadata for Command;
}

{
  return &type metadata for Command;
}

uint64_t sub_1A56B6868(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t);

  __swift_instantiateConcreteTypeFromMangledName_0(a3);
  v4 = OUTLINED_FUNCTION_39_7();
  v5(v4);
  return a2;
}

uint64_t sub_1A56B68A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);

  v2 = OUTLINED_FUNCTION_114_2(a1);
  v3(v2);
  return v1;
}

void *OUTLINED_FUNCTION_0_42(int a1, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  void *v48;

  return sub_1A56B60BC(v48, a2);
}

void *OUTLINED_FUNCTION_2_33(int a1, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  void *v48;

  return sub_1A56B60BC(v48, a2);
}

void OUTLINED_FUNCTION_3_25(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1A57087E0(v2, a2, 0, 0xE000000000000000, 44, 0xE100000000000000, 0, 0xE000000000000000, 0);
}

void OUTLINED_FUNCTION_5_20(uint64_t a1)
{
  Swift::UInt32 v1;
  uint64_t v2;

  sub_1A56814E0(a1, 0xE100000000000000, v2, v1);
}

uint64_t OUTLINED_FUNCTION_6_21()
{
  return swift_beginAccess();
}

Swift::Int OUTLINED_FUNCTION_9_21(uint64_t a1, uint64_t a2)
{
  Swift::Int v2;

  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v2);
}

Swift::Int OUTLINED_FUNCTION_10_15(uint64_t a1, uint64_t a2)
{
  Swift::Int v2;

  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v2);
}

void *OUTLINED_FUNCTION_11_12(int a1, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  void *v48;

  return sub_1A56B60BC(v48, a2);
}

uint64_t OUTLINED_FUNCTION_15_16()
{
  return sub_1A594CE70();
}

uint64_t OUTLINED_FUNCTION_21_14()
{
  return sub_1A594CE70();
}

uint64_t OUTLINED_FUNCTION_23_11()
{
  return sub_1A594CE88();
}

uint64_t OUTLINED_FUNCTION_30_8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;

  sub_1A56667E0(a1, a2, a3, a4);
  sub_1A56667E0(v25, v24, v22, v23);
  return sub_1A567FE0C(a15, a16, a17, a18, a19, a20, a21, a22, a14);
}

uint64_t OUTLINED_FUNCTION_31_7(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;

  return sub_1A54E4334(v4, v3, a3);
}

uint64_t OUTLINED_FUNCTION_32_8()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1A5503B8C(v0, v1);
}

uint64_t OUTLINED_FUNCTION_33_6()
{
  return 541346133;
}

uint64_t OUTLINED_FUNCTION_34_8@<X0>(int a1@<W8>)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 20) = a1;
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

double OUTLINED_FUNCTION_36_7@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  double result;

  result = 0.0;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_QWORD *)(v2 + 80) = v1;
  *(_QWORD *)(v2 + 88) = 0;
  *(_QWORD *)(v2 + 96) = 0;
  *(_QWORD *)(v2 + 104) = a1;
  *(_QWORD *)(v2 + 112) = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_40_8()
{
  uint64_t v0;

  return sub_1A56B6324(v0);
}

void OUTLINED_FUNCTION_42_5()
{
  int v0;
  uint64_t v1;

  *(_DWORD *)(v1 + 20) = v0;
}

uint64_t OUTLINED_FUNCTION_44_3()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_45_5(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int32x2_t *a28)
{
  uint64_t v28;
  int32x2_t *v29;

  sub_1A56B614C(v29, a1 & 0xFFFFFFFFFFLL, a28, v28 & 0xFFFFFFFFFFLL);
}

uint64_t OUTLINED_FUNCTION_47_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33)
{
  uint64_t v33;
  uint64_t v34;

  return sub_1A567FE0C(v33, a28, a29, a30, a31, a32, a27, v34, a33);
}

uint64_t OUTLINED_FUNCTION_48_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36)
{
  uint64_t v36;
  int v37;

  return static MailboxName.== infix(_:_:)(v36, v37, a35, a36);
}

void OUTLINED_FUNCTION_53_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  sub_1A57087E0(a1, a2, 0, 0xE000000000000000, 44, 0xE100000000000000, 0, 0xE000000000000000, a9);
}

void OUTLINED_FUNCTION_54_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  sub_1A57087E0(a1, a2, 0, 0xE000000000000000, 44, 0xE100000000000000, 0, 0xE000000000000000, a9);
}

uint64_t OUTLINED_FUNCTION_56_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return a6;
}

uint64_t OUTLINED_FUNCTION_60_5()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_64_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return a6;
}

uint64_t OUTLINED_FUNCTION_66_3()
{
  return 0x41544F5551544547;
}

uint64_t OUTLINED_FUNCTION_67_3()
{
  return 0x49544E4548545541;
}

uint64_t OUTLINED_FUNCTION_68_3()
{
  return sub_1A594CE88();
}

void OUTLINED_FUNCTION_69_2()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 368) = v0 & 0x3FFFFFFFFFFFFFFLL;
}

uint64_t OUTLINED_FUNCTION_72_2()
{
  return sub_1A594CD38();
}

uint64_t OUTLINED_FUNCTION_75_3(uint64_t a1, uint64_t a2)
{
  return sub_1A56B60D4(a1, a2 & 0xFFFFFFFFFFLL);
}

uint64_t OUTLINED_FUNCTION_81_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_82_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  char v24;
  uint64_t v25;

  return sub_1A56667D4(v25, a23, v23, v24);
}

uint64_t OUTLINED_FUNCTION_83_3()
{
  return 0x5243534255534E55;
}

void OUTLINED_FUNCTION_87_3(uint64_t a1)
{
  sub_1A56BABD4(a1);
}

uint64_t OUTLINED_FUNCTION_88_3()
{
  return 0x444154454D544553;
}

uint64_t OUTLINED_FUNCTION_93_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a4;
}

uint64_t OUTLINED_FUNCTION_94_3()
{
  uint64_t v0;
  uint64_t v1;

  sub_1A54E4334(v0, v1, SBYTE4(v1));
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t OUTLINED_FUNCTION_95_1()
{
  return sub_1A594CE88();
}

uint64_t OUTLINED_FUNCTION_97_3(unsigned __int16 a1)
{
  return a1 | 0x41544F5551540000;
}

uint64_t OUTLINED_FUNCTION_98_3()
{
  return 0x55414C52554E4547;
}

uint64_t OUTLINED_FUNCTION_103_3()
{
  return sub_1A594CE88();
}

uint64_t OUTLINED_FUNCTION_105_2()
{
  return sub_1A594CE88();
}

uint64_t OUTLINED_FUNCTION_106_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  sub_1A56667E0(v3, v2, v1, v4);
  return v0;
}

uint64_t OUTLINED_FUNCTION_108_2()
{
  return 0x4249524353425553;
}

uint64_t OUTLINED_FUNCTION_114_2(uint64_t a1)
{
  return *(_QWORD *)a1;
}

void OUTLINED_FUNCTION_115_2(uint64_t a1)
{
  sub_1A56BABD4(a1);
}

uint64_t OUTLINED_FUNCTION_118_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, char a20,uint64_t a21)
{
  uint64_t v21;

  return sub_1A56667D4(a1, a21, v21, a20);
}

uint64_t OUTLINED_FUNCTION_119_2()
{
  return 0x534C545452415453;
}

uint64_t OUTLINED_FUNCTION_120_2(unsigned __int16 a1)
{
  return a1 | 0x41544F5551540000;
}

void OUTLINED_FUNCTION_121_2(int a1@<W8>)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 20) = a1;
}

uint64_t OUTLINED_FUNCTION_122_1(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return sub_1A56807D8(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_123_2()
{
  return 0x20454E494D415845;
}

uint64_t OUTLINED_FUNCTION_124_2()
{
  return 0x45474E55505845;
}

uint64_t OUTLINED_FUNCTION_125_2()
{
  return 0x2045474E55505845;
}

uint64_t OUTLINED_FUNCTION_126_2()
{
  return 0x20454C42414E45;
}

uint64_t OUTLINED_FUNCTION_127_2()
{
  return 0x204554454C4544;
}

uint64_t OUTLINED_FUNCTION_128_2()
{
  return 0x5443454C45534E55;
}

uint64_t OUTLINED_FUNCTION_129_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_130_2()
{
  return 0x4354454620444955;
}

uint64_t OUTLINED_FUNCTION_131_2()
{
  return 0x205443454C4553;
}

uint64_t OUTLINED_FUNCTION_133_1()
{
  return 0x20455441455243;
}

uint64_t OUTLINED_FUNCTION_134_1()
{
  return 0x59454B5445534552;
}

uint64_t OUTLINED_FUNCTION_135_1()
{
  return 0x48435241455345;
}

uint64_t OUTLINED_FUNCTION_136_1(uint64_t a1)
{
  return sub_1A56B6324(a1);
}

void OUTLINED_FUNCTION_137_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1A56B6298(v0, v2, v1);
}

uint64_t OUTLINED_FUNCTION_138_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_139_1()
{
  return 0x43415053454D414ELL;
}

uint64_t OUTLINED_FUNCTION_141_0()
{
  return 0x45534F4C43;
}

uint64_t OUTLINED_FUNCTION_142_1()
{
  return 0x4B43454843;
}

uint64_t OUTLINED_FUNCTION_143_1()
{
  return 0x2045524F5453;
}

uint64_t OUTLINED_FUNCTION_145_1()
{
  return sub_1A594CE88();
}

void OUTLINED_FUNCTION_147_1()
{
  uint64_t v0;

  sub_1A56BA79C(v0 - 176);
}

void OUTLINED_FUNCTION_149_1(uint64_t a1)
{
  sub_1A56BABD4(a1);
}

uint64_t OUTLINED_FUNCTION_150_0()
{
  return sub_1A594CE88();
}

uint64_t OUTLINED_FUNCTION_151_1()
{
  return sub_1A594CE88();
}

uint64_t OUTLINED_FUNCTION_152_1(unsigned int a1)
{
  return a1 | 0x45564F4D00000000;
}

uint64_t OUTLINED_FUNCTION_153_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_154_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_156_1()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_159_1()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 368) = v0 & 0x3FFFFFFFFFFFFFFLL;
}

uint64_t OUTLINED_FUNCTION_160_1(unsigned int a1)
{
  return a1 | 0x59504F4300000000;
}

void *OUTLINED_FUNCTION_163_1(uint64_t a1, void *a2)
{
  void *v2;

  return sub_1A56B60BC(v2, a2);
}

void OUTLINED_FUNCTION_164_1()
{
  uint64_t v0;

  sub_1A5701674(v0);
}

Swift::Int OUTLINED_FUNCTION_165_1(uint64_t a1, uint64_t a2)
{
  Swift::Int v2;

  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v2);
}

uint64_t OUTLINED_FUNCTION_167_1()
{
  return 0x2045564F4DLL;
}

uint64_t OUTLINED_FUNCTION_168_1()
{
  return 0x204843544546;
}

uint64_t OUTLINED_FUNCTION_169_1()
{
  return 0x204255534CLL;
}

uint64_t OUTLINED_FUNCTION_170_1()
{
  uint64_t v0;

  return v0;
}

unint64_t OUTLINED_FUNCTION_171_1()
{
  unint64_t v0;

  return sub_1A567FE68(v0);
}

int8x8_t OUTLINED_FUNCTION_173_1(int8x16_t a1, int8x16_t a2)
{
  int8x16_t v2;

  v2 = vorrq_s8(a1, a2);
  return vorr_s8(*(int8x8_t *)v2.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v2, v2, 8uLL));
}

void OUTLINED_FUNCTION_175_0()
{
  sub_1A569467C();
}

uint64_t OUTLINED_FUNCTION_176_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_177_1()
{
  uint64_t v0;

  return sub_1A553E5DC(v0 - 176);
}

uint64_t OUTLINED_FUNCTION_178_1()
{
  return 0x2059504F43;
}

uint64_t OUTLINED_FUNCTION_179_1()
{
  return 0x204E49474F4CLL;
}

uint64_t OUTLINED_FUNCTION_180_1()
{
  return 0x54554F474F4CLL;
}

uint64_t OUTLINED_FUNCTION_181_1()
{
  uint64_t v0;

  return sub_1A56C4D28(v0);
}

uint64_t OUTLINED_FUNCTION_182_1()
{
  uint64_t v0;

  return v0;
}

void sub_1A56B7438(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  char v5;
  char v6;
  int v7;
  char v8;

  if (*(_BYTE *)v2 != 1)
  {
    sub_1A56D7830(a1, a2);
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_90();
  sub_1A56D947C(a1, a2);
  OUTLINED_FUNCTION_52();
  swift_release();
  sub_1A594CC9C();
  OUTLINED_FUNCTION_5_14();
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_4_23();
  OUTLINED_FUNCTION_19_12();
  OUTLINED_FUNCTION_11_8();
  v6 = v5;
  OUTLINED_FUNCTION_52();
  if ((v6 & 1) != 0)
    OUTLINED_FUNCTION_17_8();
  OUTLINED_FUNCTION_52();
  OUTLINED_FUNCTION_140();
  if (!v8)
  {
    *(_DWORD *)(v2 + 20) = v7;
LABEL_7:
    OUTLINED_FUNCTION_2_6();
    return;
  }
  __break(1u);
}

void sub_1A56B7518(uint64_t a1)
{
  uint64_t v1;
  char v2;
  char v3;
  int v4;
  char v5;

  if (*(_BYTE *)v1 != 1)
  {
    sub_1A56D78A4(a1);
    goto LABEL_7;
  }
  sub_1A594CC9C();
  OUTLINED_FUNCTION_5_14();
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_4_23();
  OUTLINED_FUNCTION_19_12();
  OUTLINED_FUNCTION_11_8();
  v3 = v2;
  OUTLINED_FUNCTION_52();
  if ((v3 & 1) != 0)
    OUTLINED_FUNCTION_17_8();
  OUTLINED_FUNCTION_52();
  OUTLINED_FUNCTION_140();
  if (!v5)
  {
    *(_DWORD *)(v1 + 20) = v4;
LABEL_7:
    OUTLINED_FUNCTION_2_6();
    return;
  }
  __break(1u);
}

void AppendCommand.tag.getter()
{
  uint64_t v0;
  _QWORD v1[7];

  sub_1A568022C(v0, (uint64_t)v1);
  __asm { BR              X11 }
}

uint64_t sub_1A56B7610()
{
  uint64_t v0;

  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v0;
}

void AppendCommand.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD v2[3];
  _QWORD v3[7];

  v1 = OUTLINED_FUNCTION_39_9(a1, (uint64_t)v2);
  OUTLINED_FUNCTION_39_9(v1, (uint64_t)v3);
  __asm { BR              X11 }
}

uint64_t sub_1A56B76EC()
{
  OUTLINED_FUNCTION_9_20();
  sub_1A594B1D8();
  return sub_1A594CE88();
}

void static AppendCommand.__derived_enum_equals(_:_:)(uint64_t a1)
{
  uint64_t v2;
  _QWORD v3[7];

  OUTLINED_FUNCTION_39_9(a1, (uint64_t)&v2);
  sub_1A568022C(a1, (uint64_t)v3);
  __asm { BR              X10 }
}

BOOL sub_1A56B79F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  _BOOL8 result;
  _QWORD v11[3];
  unsigned int v12;
  unsigned __int8 v13;

  OUTLINED_FUNCTION_65_4();
  v4 = *(_QWORD *)(v2 - 192);
  v3 = *(_QWORD *)(v2 - 184);
  v5 = *(unsigned int *)(v2 - 176);
  sub_1A568022C(v0, (uint64_t)v11);
  if (v13 > 0x1Fu)
    return 0;
  v6 = v11[2];
  v7 = v12;
  if (v1 == v11[0] && v4 == v11[1])
    return (v5 | (v5 << 32)) == (v7 | (v7 << 32)) && (sub_1A568A0E0(v3, v6) & 1) != 0;
  v9 = sub_1A594CD38();
  result = 0;
  if ((v9 & 1) != 0)
    return (v5 | (v5 << 32)) == (v7 | (v7 << 32)) && (sub_1A568A0E0(v3, v6) & 1) != 0;
  return result;
}

uint64_t static AppendCommand.CatenateData.__derived_enum_equals(_:_:)(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  unint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v6 = HIBYTE(a6);
  if (!HIBYTE(a3))
  {
    if (!(_DWORD)v6)
      return result == a4;
    return 0;
  }
  if (HIBYTE(a3) != 1)
    return (_DWORD)v6 == 2 && !(a5 | a4) && (a6 & 0xFFFFFFFFFFFFFFLL) == 0;
  if ((_DWORD)v6 != 1)
    return 0;
  if (HIDWORD(a2) < a2)
  {
    __break(1u);
  }
  else if (HIDWORD(a5) >= a5)
  {
    if (HIDWORD(a2) - (_DWORD)a2 == HIDWORD(a5) - (_DWORD)a5)
    {
      if ((a3 & 0xFFFFFFFFFFFFFFLL) != (a6 & 0xFFFFFFFFFFFFFFLL) || result != a4)
      {
        v8 = 1;
        sub_1A5680328(a4, a5, a6, 1);
        v9 = OUTLINED_FUNCTION_67_4();
        sub_1A5680328(v9, v10, v11, v12);
        v13 = sub_1A566B918();
        v14 = OUTLINED_FUNCTION_67_4();
        sub_1A56801FC(v14, v15, v16, v17);
        if ((v13 & 1) != 0)
          return v8;
        return 0;
      }
      return 1;
    }
    return 0;
  }
  __break(1u);
  return result;
}

void AppendCommand.hashValue.getter()
{
  _BYTE v0[72];

  OUTLINED_FUNCTION_15_10();
  AppendCommand.hash(into:)((uint64_t)v0);
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_23_6();
}

void sub_1A56B8208()
{
  uint64_t v0;
  uint64_t v1;

  sub_1A568022C(v0, (uint64_t)&v1);
  AppendCommand.hashValue.getter();
}

void sub_1A56B823C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1A568022C(v1, (uint64_t)&v3);
  AppendCommand.hash(into:)(a1);
}

uint64_t sub_1A56B8278()
{
  uint64_t v0;
  _BYTE v2[72];
  _BYTE v3[64];

  sub_1A568022C(v0, (uint64_t)v3);
  sub_1A594CE64();
  AppendCommand.hash(into:)((uint64_t)v2);
  return sub_1A594CED0();
}

uint64_t sub_1A56B82C8(uint64_t a1, uint64_t a2)
{
  char v3;
  _BYTE v5[64];
  _BYTE v6[64];

  sub_1A568022C(a1, (uint64_t)v5);
  sub_1A568022C(a2, (uint64_t)v6);
  static AppendCommand.__derived_enum_equals(_:_:)((uint64_t)v5);
  return v3 & 1;
}

uint64_t AppendCommand.CatenateData.hash(into:)(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  unsigned int v4;
  unint64_t v5;
  uint64_t result;

  if (!HIBYTE(a4))
  {
    sub_1A594CE88();
    return sub_1A594CE88();
  }
  if (HIBYTE(a4) != 1)
    return sub_1A594CE88();
  v4 = a3;
  v5 = HIDWORD(a3);
  sub_1A594CE88();
  result = swift_beginAccess();
  if (v5 >= v4)
    return sub_1A594CE70();
  __break(1u);
  return result;
}

uint64_t AppendCommand.CatenateData.hashValue.getter(uint64_t a1, unint64_t a2, unint64_t a3)
{
  _BYTE v7[72];

  OUTLINED_FUNCTION_15_10();
  AppendCommand.CatenateData.hash(into:)((uint64_t)v7, a1, a2, a3);
  return OUTLINED_FUNCTION_24_3();
}

uint64_t sub_1A56B841C()
{
  uint64_t v0;

  return AppendCommand.CatenateData.hashValue.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16));
}

uint64_t sub_1A56B8428(uint64_t a1)
{
  uint64_t v1;

  return AppendCommand.CatenateData.hash(into:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16));
}

uint64_t sub_1A56B8434()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  _BYTE v5[72];

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  sub_1A594CE64();
  AppendCommand.CatenateData.hash(into:)((uint64_t)v5, v1, v2, v3);
  return sub_1A594CED0();
}

uint64_t sub_1A56B8488(uint64_t a1, uint64_t a2)
{
  return static AppendCommand.CatenateData.__derived_enum_equals(_:_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16));
}

void CommandStreamPart.tag.getter()
{
  const void *v0;
  char *v1;
  _BYTE v2[288];

  sub_1A567FF24(v0, v2);
  v1 = (char *)sub_1A56B84F0 + 4 * byte_1A59AFE8D[sub_1A567FF60((uint64_t)v2)];
  __asm { BR              X10 }
}

uint64_t sub_1A56B84F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v10;

  v8 = *(_QWORD *)OUTLINED_FUNCTION_64_3(a1, a2, a3, a4, a5, a6, a7, a8, v10);
  OUTLINED_FUNCTION_16_0();
  return v8;
}

void sub_1A56B857C(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 64) = a1 & 0x1F;
  sub_1A5687340((__int128 *)(v1 - 120), v1 - 56);
  JUMPOUT(0x1A56B8558);
}

void CommandStreamPart.hash(into:)(uint64_t a1)
{
  void *v1;
  char *v2;
  _BYTE v3[136];
  _BYTE v4[392];
  _BYTE v5[136];

  OUTLINED_FUNCTION_37_9(a1, v3);
  v1 = sub_1A567FF24(v3, v5);
  OUTLINED_FUNCTION_37_9((uint64_t)v1, v4);
  v2 = (char *)&loc_1A56B8618 + dword_1A56B8764[sub_1A567FF60((uint64_t)v4)];
  __asm { BR              X10 }
}

void sub_1A56B8628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  __n128 *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32[21];

  v10 = (const void *)OUTLINED_FUNCTION_44_4(a1, a2, a3, a4, a5, a6, a7, a8, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21,
                        v22,
                        v23,
                        v24,
                        v25,
                        v26,
                        v27,
                        v28,
                        v29);
  OUTLINED_FUNCTION_27_9(&v30, v10);
  OUTLINED_FUNCTION_9_20();
  sub_1A56B9540(v9);
  OUTLINED_FUNCTION_90();
  sub_1A594B1D8();
  OUTLINED_FUNCTION_52();
  sub_1A56B60BC(&v31, v32);
  sub_1A56B96E8(v32);
  Command.hash(into:)(v8);
  sub_1A56B96E8(v32);
  sub_1A56B9540(v9);
}

void static CommandStreamPart.__derived_enum_equals(_:_:)(const void *a1)
{
  char *v1;
  _BYTE v2[520];

  sub_1A567FF24(a1, v2);
  v1 = (char *)&loc_1A56B87B8 + dword_1A56B8A1C[sub_1A567FF60((uint64_t)v2)];
  __asm { BR              X10 }
}

uint64_t sub_1A56B87C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  __n128 *v8;
  __n128 *v9;
  uint64_t v10;
  const void *v11;
  void *v12;
  const void *v13;
  BOOL v14;
  char v15;
  char v16;
  char v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24[17];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27[15];
  char v28;
  _QWORD v29[2];
  uint64_t v30;
  _BYTE v31[344];

  v11 = (const void *)OUTLINED_FUNCTION_58_3(a1, a2, a3, a4, a5, a6, a7, a8, v19, v20, v21, v22, v23, v24[0], v24[1], v24[2], v24[3], v24[4], v24[5],
                        v24[6],
                        v24[7],
                        v24[8],
                        v24[9],
                        v24[10],
                        v24[11],
                        v24[12],
                        v24[13],
                        v24[14],
                        v24[15],
                        v24[16],
                        v25,
                        v26,
                        v27[0],
                        v27[1],
                        v27[2],
                        v27[3],
                        v27[4],
                        v27[5],
                        v27[6],
                        v27[7],
                        v27[8],
                        v27[9],
                        v27[10],
                        v27[11],
                        v27[12],
                        v27[13],
                        v27[14],
                        v28);
  v12 = OUTLINED_FUNCTION_27_9(v29, v11);
  OUTLINED_FUNCTION_37_9((uint64_t)v12, v24);
  if (sub_1A567FF60((uint64_t)v24))
    goto LABEL_8;
  v13 = (const void *)sub_1A5680210((uint64_t)v24);
  OUTLINED_FUNCTION_27_9(&v25, v13);
  v14 = v29[0] == v25 && v29[1] == v26;
  if (!v14 && (sub_1A594CD38() & 1) == 0)
    goto LABEL_8;
  sub_1A56B60BC(&v30, v31);
  sub_1A56B60BC(v27, (void *)(v10 - 208));
  OUTLINED_FUNCTION_35_8(v8);
  OUTLINED_FUNCTION_35_8(v9);
  static Command.__derived_enum_equals(_:_:)(v31);
  v16 = v15;
  OUTLINED_FUNCTION_31_8(v9);
  OUTLINED_FUNCTION_31_8(v8);
  if ((v16 & 1) != 0)
    v17 = 1;
  else
LABEL_8:
    v17 = 0;
  return v17 & 1;
}

void CommandStreamPart.hashValue.getter()
{
  _BYTE v0[72];

  OUTLINED_FUNCTION_15_10();
  CommandStreamPart.hash(into:)((uint64_t)v0);
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_23_6();
}

void sub_1A56B8A58()
{
  const void *v0;
  _BYTE v1[136];

  sub_1A567FF24(v0, v1);
  CommandStreamPart.hashValue.getter();
}

void sub_1A56B8A8C(uint64_t a1)
{
  _BYTE v2[136];

  OUTLINED_FUNCTION_37_9(a1, v2);
  CommandStreamPart.hash(into:)(a1);
}

uint64_t sub_1A56B8AC4()
{
  const void *v0;
  uint64_t v2;
  _BYTE v3[136];

  sub_1A567FF24(v0, v3);
  sub_1A594CE64();
  CommandStreamPart.hash(into:)((uint64_t)&v2);
  return sub_1A594CED0();
}

uint64_t sub_1A56B8B14(const void *a1, const void *a2)
{
  char v3;
  _BYTE v5[136];
  _BYTE v6[136];

  sub_1A567FF24(a1, v5);
  sub_1A567FF24(a2, v6);
  static CommandStreamPart.__derived_enum_equals(_:_:)(v5);
  return v3 & 1;
}

void CommandStreamPart.debugDescription.getter()
{
  __n128 *v0;

  sub_1A56B9540(v0);
  sub_1A567E948(v0);
}

void CommandEncodeBuffer.writeCommandStream(_:)(const void *a1)
{
  char *v2;
  _BYTE v3[136];
  _BYTE v4[272];
  _BYTE v5[136];

  sub_1A567FF24(a1, v3);
  sub_1A567FF24(v3, v5);
  sub_1A567FF24(a1, v4);
  v2 = (char *)&loc_1A56B8BD8 + dword_1A56B8DBC[sub_1A567FF60((uint64_t)v4)];
  __asm { BR              X10 }
}

uint64_t sub_1A56B8BE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  __n128 *v8;
  uint64_t v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17[39];
  char v18;
  Swift::String v19[22];

  v10 = (const void *)OUTLINED_FUNCTION_59_5(a1, a2, a3, a4, a5, a6, a7, a8, v15, v16, v17[0], v17[1], v17[2], v17[3], v17[4], v17[5], v17[6], v17[7], v17[8],
                        v17[9],
                        v17[10],
                        v17[11],
                        v17[12],
                        v17[13],
                        v17[14],
                        v17[15],
                        v17[16],
                        v17[17],
                        v17[18],
                        v17[19],
                        v17[20],
                        v17[21],
                        v17[22],
                        v17[23],
                        v17[24],
                        v17[25],
                        v17[26],
                        v17[27],
                        v17[28],
                        v17[29],
                        v17[30],
                        v17[31],
                        v17[32],
                        v17[33],
                        v17[34],
                        v17[35],
                        v17[36],
                        v17[37],
                        v17[38],
                        v18);
  OUTLINED_FUNCTION_27_9(v19, v10);
  sub_1A567FF24((const void *)(v9 - 200), v17);
  v11 = sub_1A5680210((uint64_t)v17);
  sub_1A568033C(v11);
  CommandEncodeBuffer.writeCommand(_:)(v19);
  v13 = v12;
  sub_1A56B9540(v8);
  return v13;
}

void sub_1A56B8DCC()
{
  const void *v0;
  _BYTE v1[136];

  sub_1A567FF24(v0, v1);
  CommandStreamPart.debugDescription.getter();
}

void sub_1A56B8E00(uint64_t a1)
{
  _QWORD v2[3];
  _QWORD v3[7];

  sub_1A568022C(a1, (uint64_t)v2);
  sub_1A568022C(a1, (uint64_t)v3);
  __asm { BR              X10 }
}

Swift::Int sub_1A56B8E74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  Swift::Int v5;
  Swift::Int v6;
  Swift::Int v7;
  char v8;
  char v9;
  Swift::String v10;
  int v11;
  BOOL v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  Swift::Int v18;
  uint64_t v20;

  OUTLINED_FUNCTION_60_6();
  *(_QWORD *)(v2 - 144) = v1;
  *(_QWORD *)(v2 - 136) = v20;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B5F8();
  v3 = *(_QWORD *)(v2 - 144);
  v4 = *(void **)(v2 - 136);
  v5 = *(unsigned int *)(v0 + 20);
  OUTLINED_FUNCTION_184();
  sub_1A56814E0(v3, (unint64_t)v4, v0 + 8, v5);
  v7 = v6;
  v9 = v8;
  OUTLINED_FUNCTION_72();
  if ((v9 & 1) != 0)
  {
    v10._countAndFlagsBits = v3;
    v10._object = v4;
    v7 = ByteBuffer._setStringSlowpath(_:at:)(v10, v5);
  }
  OUTLINED_FUNCTION_72();
  v11 = *(_DWORD *)(v0 + 20);
  v12 = __CFADD__(v11, (_DWORD)v7);
  v13 = v11 + v7;
  if (v12)
  {
    __break(1u);
    JUMPOUT(0x1A56B94B0);
  }
  *(_DWORD *)(v0 + 20) = v13;
  v14 = OUTLINED_FUNCTION_90();
  sub_1A56BABD4(v14);
  v16 = v15;
  OUTLINED_FUNCTION_52();
  v17 = __OFADD__(v7, v16);
  v18 = v7 + v16;
  if (v17)
  {
    __break(1u);
    JUMPOUT(0x1A56B8F20);
  }
  return v18;
}

uint64_t sub_1A56B9504(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(unsigned __int8 *)(a1 + 56));
  return a1;
}

void sub_1A56B9540(__n128 *a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t);

  v1 = OUTLINED_FUNCTION_3_26(a1).n128_u64[0];
  v10(v2, v3, v4, v5, v6, v7, v8, v9, v1);
  OUTLINED_FUNCTION_23_6();
}

uint64_t sub_1A56B957C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16)
{
  int v16;

  v16 = HIBYTE(a16) & 2 | (a13 >> 63);
  switch(v16)
  {
    case 2:
      return swift_retain();
    case 1:
      return sub_1A5680268(result, a2, a3, a4, a5, a6, a7, a8);
    case 0:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      return sub_1A56803F0(a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
  }
  return result;
}

uint64_t sub_1A56B96E8(__n128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  OUTLINED_FUNCTION_3_26(a1);
  v9(v2, v3, v4, v5, v6, v7, v8);
  return v1;
}

unint64_t sub_1A56B972C()
{
  unint64_t result;

  result = qword_1EE7A96A0;
  if (!qword_1EE7A96A0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for AppendCommand, &type metadata for AppendCommand);
    atomic_store(result, (unint64_t *)&qword_1EE7A96A0);
  }
  return result;
}

unint64_t sub_1A56B976C()
{
  unint64_t result;

  result = qword_1EE7A96A8;
  if (!qword_1EE7A96A8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for AppendCommand.CatenateData, &type metadata for AppendCommand.CatenateData);
    atomic_store(result, (unint64_t *)&qword_1EE7A96A8);
  }
  return result;
}

unint64_t sub_1A56B97AC()
{
  unint64_t result;

  result = qword_1EE7A96B0;
  if (!qword_1EE7A96B0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for CommandStreamPart, &type metadata for CommandStreamPart);
    atomic_store(result, (unint64_t *)&qword_1EE7A96B0);
  }
  return result;
}

uint64_t destroy for AppendCommand(uint64_t a1)
{
  return sub_1A568014C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
}

uint64_t initializeWithCopy for AppendCommand(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_BYTE *)(a2 + 56);
  sub_1A5680268(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_BYTE *)(a1 + 56) = v10;
  return a1;
}

uint64_t assignWithCopy for AppendCommand(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_BYTE *)(a2 + 56);
  sub_1A5680268(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10);
  v11 = *(_QWORD *)a1;
  v12 = *(_QWORD *)(a1 + 8);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 24);
  v15 = *(_QWORD *)(a1 + 32);
  v16 = *(_QWORD *)(a1 + 40);
  v17 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  v18 = *(_BYTE *)(a1 + 56);
  *(_BYTE *)(a1 + 56) = v10;
  sub_1A568014C(v11, v12, v13, v14, v15, v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for AppendCommand(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  unsigned __int8 v13;

  v3 = *(_QWORD *)(a2 + 48);
  v4 = *(_BYTE *)(a2 + 56);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v12;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = v3;
  v13 = *(_BYTE *)(a1 + 56);
  *(_BYTE *)(a1 + 56) = v4;
  sub_1A568014C(v5, v7, v6, v8, v9, v10, v11, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppendCommand(uint64_t a1, unsigned int a2)
{
  int v2;

  if (a2)
  {
    if (a2 > 0x1FFFF9 && *(_BYTE *)(a1 + 57))
    {
      v2 = *(_DWORD *)a1 + 2097145;
    }
    else if ((((*(unsigned __int8 *)(a1 + 56) >> 5) | (8
                                                      * ((*(_QWORD *)(a1 + 32) >> 57) & 0x78 | *(_QWORD *)(a1 + 32) & 7 | (*(_QWORD *)(a1 + 40) >> 50) & 0x3C00 | ((*(_QWORD *)(a1 + 40) & 7) << 7) & 0x3FFF | (((*(unsigned __int8 *)(a1 + 56) >> 1) & 0xFu) << 14)))) ^ 0x1FFFFF) >= 0x1FFFF9)
    {
      v2 = -1;
    }
    else
    {
      v2 = ((*(unsigned __int8 *)(a1 + 56) >> 5) | (8
                                                  * ((*(_QWORD *)(a1 + 32) >> 57) & 0x78 | *(_QWORD *)(a1 + 32) & 7 | (*(_QWORD *)(a1 + 40) >> 50) & 0x3C00 | ((*(_QWORD *)(a1 + 40) & 7) << 7) & 0x3FFF | (((*(unsigned __int8 *)(a1 + 56) >> 1) & 0xF) << 14)))) ^ 0x1FFFFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppendCommand(uint64_t result, unsigned int a2, unsigned int a3)
{
  unint64_t v3;

  if (a2 >= 0x1FFFFA)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 - 2097146;
    if (a3 > 0x1FFFF9)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if (a3 > 0x1FFFF9)
      *(_BYTE *)(result + 57) = 0;
    if (a2)
    {
      v3 = ((-a2 >> 3) & 0x3FFFF) - (a2 << 18);
      *(_OWORD *)result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(_QWORD *)(result + 32) = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(_QWORD *)(result + 40) = ((v3 >> 7) | (v3 << 50)) & 0xF000000000000007;
      *(_QWORD *)(result + 48) = 0;
      *(_BYTE *)(result + 56) = (v3 >> 13) & 0xFE;
    }
  }
  return result;
}

uint64_t sub_1A56B9AA0(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 56);
  if (v1 <= 0xBF)
    return v1 >> 5;
  else
    return (*(_DWORD *)a1 + 6);
}

uint64_t sub_1A56B9ABC(uint64_t result)
{
  *(_BYTE *)(result + 56) &= 0x1Fu;
  return result;
}

uint64_t sub_1A56B9ACC(uint64_t result, unsigned int a2)
{
  char v2;

  if (a2 < 6)
  {
    v2 = *(_BYTE *)(result + 56) & 1 | (32 * a2);
    *(int8x16_t *)(result + 32) = vandq_s8(*(int8x16_t *)(result + 32), (int8x16_t)vdupq_n_s64(0xFFFFFFFFFFFFFF8uLL));
  }
  else
  {
    *(_QWORD *)result = a2 - 6;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    v2 = -64;
  }
  *(_BYTE *)(result + 56) = v2;
  return result;
}

void type metadata accessor for AppendCommand()
{
  OUTLINED_FUNCTION_3_1();
}

uint64_t destroy for AppendCommand.CatenateData(uint64_t a1)
{
  return sub_1A56801FC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned int *)(a1 + 16) | ((unint64_t)(*(unsigned __int16 *)(a1 + 20) | (*(unsigned __int8 *)(a1 + 22) << 16)) << 32), *(_BYTE *)(a1 + 23));
}

uint64_t _s12NIOIMAPCore213AppendCommandO12CatenateDataOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  int v7;
  uint64_t v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(unsigned int *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 23);
  v7 = *(unsigned __int8 *)(a2 + 22);
  v8 = *(unsigned __int16 *)(a2 + 20) | (v7 << 16);
  sub_1A5680328(*(_QWORD *)a2, v4, v5 | (v8 << 32), v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 22) = v7;
  *(_WORD *)(a1 + 20) = v8;
  *(_DWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 23) = v6;
  return a1;
}

uint64_t assignWithCopy for AppendCommand.CatenateData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(unsigned int *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 23);
  v7 = *(unsigned __int8 *)(a2 + 22);
  v8 = *(unsigned __int16 *)(a2 + 20) | (v7 << 16);
  sub_1A5680328(*(_QWORD *)a2, v4, v5 | (v8 << 32), v6);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(unsigned int *)(a1 + 16) | ((unint64_t)(*(unsigned __int16 *)(a1 + 20) | (*(unsigned __int8 *)(a1 + 22) << 16)) << 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 22) = v7;
  *(_WORD *)(a1 + 20) = v8;
  v12 = *(_BYTE *)(a1 + 23);
  *(_BYTE *)(a1 + 23) = v6;
  sub_1A56801FC(v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for AppendCommand.CatenateData(uint64_t a1, __int128 *a2)
{
  char v3;
  __int128 v4;
  __int128 *v5;
  int v6;
  int v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;

  v3 = *((_BYTE *)a2 + 23);
  v4 = *a2;
  v7 = *((_DWORD *)a2 + 4);
  v5 = a2 + 1;
  v6 = v7;
  LOWORD(v7) = *((_WORD *)v5 + 2);
  v8 = *((_BYTE *)v5 + 6);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(unsigned int *)(a1 + 16) | ((unint64_t)(*(unsigned __int16 *)(a1 + 20) | (*(unsigned __int8 *)(a1 + 22) << 16)) << 32);
  *(_OWORD *)a1 = v4;
  *(_DWORD *)(a1 + 16) = v6;
  *(_WORD *)(a1 + 20) = v7;
  *(_BYTE *)(a1 + 22) = v8;
  v12 = *(_BYTE *)(a1 + 23);
  *(_BYTE *)(a1 + 23) = v3;
  sub_1A56801FC(v9, v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppendCommand.CatenateData(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 24))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 23);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppendCommand.CatenateData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_BYTE *)(result + 23) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A56B9D5C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 23) <= 1u)
    return *(unsigned __int8 *)(a1 + 23);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1A56B9D74(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 22) = 0;
    *(_WORD *)(result + 20) = 0;
    LOBYTE(a2) = 2;
    *(_DWORD *)(result + 16) = 0;
  }
  *(_BYTE *)(result + 23) = a2;
  return result;
}

void type metadata accessor for AppendCommand.CatenateData()
{
  OUTLINED_FUNCTION_3_1();
}

uint64_t destroy for CommandStreamPart(uint64_t a1)
{
  return sub_1A567FFE0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120));
}

uint64_t *initializeWithCopy for CommandStreamPart(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  v11 = a2[8];
  v13 = a2[9];
  v14 = a2[10];
  v15 = a2[11];
  v16 = a2[12];
  v17 = a2[13];
  v18 = a2[14];
  v19 = a2[15];
  v20 = a2[16];
  sub_1A56B957C(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16, v17, v18, v19);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v13;
  a1[10] = v14;
  a1[11] = v15;
  a1[12] = v16;
  a1[13] = v17;
  a1[14] = v18;
  a1[15] = v19;
  a1[16] = v20;
  return a1;
}

uint64_t assignWithCopy for CommandStreamPart(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  v11 = a2[8];
  v25 = a2[9];
  v26 = a2[10];
  v27 = a2[11];
  v28 = a2[12];
  v29 = a2[13];
  v30 = a2[14];
  v31 = a2[15];
  v32 = a2[16];
  sub_1A56B957C(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v25, v26, v27, v28, v29, v30, v31);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  v22 = *(_OWORD *)(a1 + 96);
  v23 = *(_OWORD *)(a1 + 112);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v25;
  *(_QWORD *)(a1 + 80) = v26;
  *(_QWORD *)(a1 + 88) = v27;
  *(_QWORD *)(a1 + 96) = v28;
  *(_QWORD *)(a1 + 104) = v29;
  *(_QWORD *)(a1 + 112) = v30;
  *(_QWORD *)(a1 + 120) = v31;
  *(_QWORD *)(a1 + 128) = v32;
  sub_1A567FFE0(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((unint64_t *)&v23 + 1));
  return a1;
}

void *__swift_memcpy136_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x88uLL);
}

uint64_t assignWithTake for CommandStreamPart(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  v3 = *(_QWORD *)(a2 + 128);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_OWORD *)(a1 + 64);
  v13 = *(_OWORD *)(a1 + 80);
  v14 = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 112);
  v16 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v16;
  v17 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v17;
  v18 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v18;
  v19 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v19;
  *(_QWORD *)(a1 + 128) = v3;
  sub_1A567FFE0(v4, v6, v5, v7, v8, v9, v10, v11, v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, *((unint64_t *)&v15 + 1));
  return a1;
}

uint64_t getEnumTagSinglePayload for CommandStreamPart(uint64_t a1, int a2)
{
  unsigned int v2;
  unint64_t v3;
  int v4;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 136))
    {
      v4 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      HIDWORD(v3) = *(_DWORD *)(a1 + 100);
      LODWORD(v3) = HIDWORD(v3);
      v2 = v3 >> 31;
      if (v2 > 0x80000000)
        v4 = ~v2;
      else
        v4 = -1;
    }
  }
  else
  {
    v4 = -1;
  }
  return (v4 + 1);
}

double storeEnumTagSinglePayload for CommandStreamPart(uint64_t a1, int a2, int a3)
{
  double result;
  unint64_t v4;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 136) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      result = 0.0;
      *(_OWORD *)(a1 + 64) = 0u;
      *(_OWORD *)(a1 + 80) = 0u;
      HIDWORD(v4) = -a2;
      LODWORD(v4) = -a2;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_QWORD *)(a1 + 96) = (unint64_t)(v4 >> 1) << 32;
      *(_OWORD *)(a1 + 104) = 0u;
      *(_OWORD *)(a1 + 120) = 0u;
      return result;
    }
    *(_BYTE *)(a1 + 136) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1A56BA17C(uint64_t result, unint64_t a2)
{
  unint64_t v2;

  if (a2 < 3)
  {
    v2 = *(_QWORD *)(result + 120) & 0xFDFFFFFFFFFFFFFFLL | (((a2 >> 1) & 1) << 57);
    *(_DWORD *)(result + 100) = (_DWORD)a2 << 31;
    *(_QWORD *)(result + 120) = v2;
  }
  else
  {
    *(_QWORD *)result = (a2 - 3);
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_QWORD *)(result + 88) = 0;
    *(_QWORD *)(result + 96) = 0x8000000000000000;
    *(_QWORD *)(result + 104) = 0;
    *(_QWORD *)(result + 112) = 0;
    *(_OWORD *)(result + 120) = xmmword_1A59AC050;
  }
  return result;
}

void type metadata accessor for CommandStreamPart()
{
  OUTLINED_FUNCTION_3_1();
}

uint64_t OUTLINED_FUNCTION_1_31()
{
  return swift_beginAccess();
}

__n128 OUTLINED_FUNCTION_3_26(__n128 *a1)
{
  return a1[4];
}

uint64_t OUTLINED_FUNCTION_4_23()
{
  return sub_1A594B5F8();
}

uint64_t OUTLINED_FUNCTION_8_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A568022C(v2, a2);
}

uint64_t OUTLINED_FUNCTION_9_22(uint64_t a1)
{
  return sub_1A5680268(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
}

uint64_t OUTLINED_FUNCTION_14_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A568022C(v2, a2);
}

uint64_t OUTLINED_FUNCTION_15_17()
{
  return 0x54414E4554414320;
}

uint64_t OUTLINED_FUNCTION_19_12()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

void OUTLINED_FUNCTION_22_15()
{
  uint64_t v0;
  Swift::UInt32 v1;
  unint64_t v2;
  uint64_t v3;

  sub_1A56814E0(v3, v2, v0, v1);
}

uint64_t OUTLINED_FUNCTION_24_10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_1A5680328(v0, v1, v2, SHIBYTE(v2));
}

void *OUTLINED_FUNCTION_27_9(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x88uLL);
}

uint64_t OUTLINED_FUNCTION_30_9()
{
  return sub_1A566B918();
}

void OUTLINED_FUNCTION_31_8(__n128 *a1)
{
  sub_1A56B9540(a1);
}

void OUTLINED_FUNCTION_35_8(__n128 *a1)
{
  sub_1A56B9540(a1);
}

uint64_t OUTLINED_FUNCTION_36_8()
{
  return sub_1A594CE70();
}

void *OUTLINED_FUNCTION_37_9(uint64_t a1, void *a2)
{
  const void *v2;

  return sub_1A567FF24(v2, a2);
}

uint64_t OUTLINED_FUNCTION_39_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A568022C(v2, a2);
}

uint64_t OUTLINED_FUNCTION_44_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  return sub_1A5680210((uint64_t)&a27);
}

void OUTLINED_FUNCTION_45_6()
{
  sub_1A5692F90();
}

uint64_t OUTLINED_FUNCTION_51_7()
{
  return sub_1A594B5F8();
}

uint64_t OUTLINED_FUNCTION_53_7(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v2;

  return sub_1A56B9504(v2, a2);
}

uint64_t OUTLINED_FUNCTION_57_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a65;

  return sub_1A567FF60((uint64_t)&a65);
}

uint64_t OUTLINED_FUNCTION_58_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,char a48)
{
  return sub_1A5680210((uint64_t)&a48);
}

uint64_t OUTLINED_FUNCTION_59_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,char a50)
{
  return sub_1A5680210((uint64_t)&a50);
}

uint64_t OUTLINED_FUNCTION_62_4()
{
  return 0x2054584554;
}

uint64_t OUTLINED_FUNCTION_64_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1A5680210((uint64_t)&a9);
}

void OUTLINED_FUNCTION_65_4()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 144) = v0 & 0x1F;
}

uint64_t OUTLINED_FUNCTION_67_4()
{
  uint64_t v0;

  return v0;
}

void sub_1A56BA418(unint64_t a1, unint64_t a2)
{
  _BYTE *v2;
  char *v5;

  if (*v2 != 1)
  {
    OUTLINED_FUNCTION_30_10();
    OUTLINED_FUNCTION_29_8();
    v5 = (char *)&loc_1A56BA4D0 + dword_1A56BA78C[sub_1A56BBB5C(a1, a2)];
    __asm { BR              X10 }
  }
  sub_1A56BAF1C(a1, a2);
}

void sub_1A56BA4E0()
{
  uint64_t v0;
  Swift::Int v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  Swift::Int v5;
  char v6;
  Swift::Int v7;
  int v8;
  BOOL v9;
  int v10;
  uint64_t v11;
  Swift::Int v12;
  Swift::Int v13;
  char v14;
  uint64_t v15;
  int v16;
  Swift::String v17;
  Swift::String v18;

  v3 = OUTLINED_FUNCTION_33_7();
  OUTLINED_FUNCTION_22_1(v3, v4, v2, v1);
  if ((v6 & 1) != 0)
  {
    v17._countAndFlagsBits = 34;
    v17._object = (void *)0xE100000000000000;
    v5 = OUTLINED_FUNCTION_50(v17, v1);
  }
  v7 = v5;
  v8 = *(_DWORD *)(v0 + 20);
  v9 = __CFADD__(v8, (_DWORD)v5);
  v10 = v8 + v5;
  if (v9)
  {
    __break(1u);
    goto LABEL_12;
  }
  *(_DWORD *)(v0 + 20) = v10;
  OUTLINED_FUNCTION_3_27();
  v12 = v7 + v11;
  if (__OFADD__(v7, v11))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v13 = *(unsigned int *)(v0 + 20);
  OUTLINED_FUNCTION_9_3(34, 0xE100000000000000, v2);
  if ((v14 & 1) != 0)
  {
    v18._countAndFlagsBits = 34;
    v18._object = (void *)0xE100000000000000;
    OUTLINED_FUNCTION_50(v18, v13);
  }
  OUTLINED_FUNCTION_249();
  if (v9)
  {
LABEL_13:
    __break(1u);
    JUMPOUT(0x1A56BA764);
  }
  *(_DWORD *)(v0 + 20) = v16;
  if (__OFADD__(v12, v15))
  {
    __break(1u);
    JUMPOUT(0x1A56BA568);
  }
  OUTLINED_FUNCTION_63();
}

void sub_1A56BA79C(uint64_t a1)
{
  _BYTE *v1;
  char *v3;

  if (*v1 != 1)
  {
    OUTLINED_FUNCTION_30_10();
    OUTLINED_FUNCTION_29_8();
    v3 = (char *)&loc_1A56BA848 + dword_1A56BABC4[sub_1A56BBCA8(a1)];
    __asm { BR              X10 }
  }
  sub_1A56BB360(a1);
}

void sub_1A56BA858()
{
  uint64_t v0;
  Swift::UInt32 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  Swift::Int v6;
  char v7;
  Swift::Int v8;
  int v9;
  Swift::UInt32 v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  int v20;
  Swift::Int v21;
  char v22;
  uint64_t v23;
  int v24;
  char v25;

  v4 = OUTLINED_FUNCTION_33_7();
  OUTLINED_FUNCTION_22_1(v4, v5, v2, v1);
  if ((v7 & 1) != 0)
    v6 = OUTLINED_FUNCTION_26_6();
  v8 = v6;
  v9 = *(_DWORD *)(v0 + 20);
  v10 = v9 + v6;
  if (__CFADD__(v9, (_DWORD)v6))
  {
    __break(1u);
    goto LABEL_14;
  }
  *(_DWORD *)(v0 + 20) = v10;
  v11 = *(unsigned __int16 *)(v3 + 20);
  v12 = *(unsigned __int8 *)(v3 + 22);
  v13 = (_QWORD *)(*(_QWORD *)v3 + 24);
  OUTLINED_FUNCTION_176();
  v14 = *(_QWORD *)(v3 + 24);
  v15 = *(_QWORD *)(v3 + 32);
  v16 = __OFSUB__(v15, v14);
  v17 = v15 - v14;
  if (v16)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = *v13 + (v12 | (v11 << 8)) + v14;
  ByteBuffer._setBytes(_:at:)(v18, v18 + v17, v10);
  v20 = *(_DWORD *)(v0 + 20);
  if (__CFADD__(v20, v19))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  *(_DWORD *)(v0 + 20) = v20 + v19;
  v21 = v8 + v19;
  if (__OFADD__(v8, v19))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  OUTLINED_FUNCTION_9_3(34, 0xE100000000000000, v2);
  if ((v22 & 1) != 0)
    OUTLINED_FUNCTION_26_6();
  OUTLINED_FUNCTION_249();
  if (v25)
  {
LABEL_17:
    __break(1u);
    JUMPOUT(0x1A56BAB90);
  }
  *(_DWORD *)(v0 + 20) = v24;
  if (__OFADD__(v21, v23))
  {
    __break(1u);
    JUMPOUT(0x1A56BA918);
  }
  OUTLINED_FUNCTION_63();
}

void sub_1A56BABD4(uint64_t a1)
{
  _BYTE *v1;
  char *v2;

  if (*v1 != 1)
  {
    v2 = (char *)&loc_1A56BACA0 + dword_1A56BAF0C[sub_1A56BBD8C(a1)];
    __asm { BR              X10 }
  }
  sub_1A56BB77C(a1);
}

Swift::Int sub_1A56BACB0()
{
  uint64_t v0;
  Swift::Int v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  Swift::Int v5;
  char v6;
  Swift::Int v7;
  int v8;
  BOOL v9;
  int v10;
  uint64_t v11;
  Swift::Int v12;
  Swift::Int v13;
  char v14;
  uint64_t v15;
  int v16;
  BOOL v17;
  Swift::Int result;
  Swift::String v19;
  Swift::String v20;

  v3 = OUTLINED_FUNCTION_33_7();
  OUTLINED_FUNCTION_22_1(v3, v4, v2, v1);
  if ((v6 & 1) != 0)
  {
    v19._countAndFlagsBits = 34;
    v19._object = (void *)0xE100000000000000;
    v5 = OUTLINED_FUNCTION_53_0(v19, v1);
  }
  v7 = v5;
  v8 = *(_DWORD *)(v0 + 20);
  v9 = __CFADD__(v8, (_DWORD)v5);
  v10 = v8 + v5;
  if (v9)
  {
    __break(1u);
    goto LABEL_12;
  }
  *(_DWORD *)(v0 + 20) = v10;
  OUTLINED_FUNCTION_12_13();
  v12 = v7 + v11;
  if (__OFADD__(v7, v11))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v13 = *(unsigned int *)(v0 + 20);
  OUTLINED_FUNCTION_9_3(34, 0xE100000000000000, v2);
  if ((v14 & 1) != 0)
  {
    v20._countAndFlagsBits = 34;
    v20._object = (void *)0xE100000000000000;
    OUTLINED_FUNCTION_53_0(v20, v13);
  }
  OUTLINED_FUNCTION_249();
  if (v9)
  {
LABEL_13:
    __break(1u);
    JUMPOUT(0x1A56BAEFCLL);
  }
  *(_DWORD *)(v0 + 20) = v16;
  v17 = __OFADD__(v12, v15);
  result = v12 + v15;
  if (v17)
  {
    __break(1u);
    JUMPOUT(0x1A56BAD38);
  }
  return result;
}

void sub_1A56BAF1C(unint64_t a1, unint64_t a2)
{
  char *v2;

  v2 = (char *)&loc_1A56BAF74 + *((int *)qword_1A56BB350 + sub_1A56BBB5C(a1, a2));
  __asm { BR              X10 }
}

void sub_1A56BAF84()
{
  uint64_t v0;
  Swift::Int v1;
  int v2;
  char v3;
  Swift::String v4;
  _DWORD *v5;
  int v6;
  int v7;

  sub_1A56814E0(0x228588E222, 0xA500000000000000, v0 + 8, v1);
  if ((v3 & 1) != 0)
  {
    v4._countAndFlagsBits = 0x228588E222;
    v4._object = (void *)0xA500000000000000;
    v2 = ByteBuffer._setStringSlowpath(_:at:)(v4, v1);
  }
  v6 = *(_DWORD *)(v0 + 20);
  v5 = (_DWORD *)(v0 + 20);
  v7 = v6 + v2;
  if (__CFADD__(v6, v2))
  {
    __break(1u);
    JUMPOUT(0x1A56BAFDCLL);
  }
  *v5 = v7;
}

void sub_1A56BB360(uint64_t a1)
{
  char *v1;

  v1 = (char *)&loc_1A56BB3B4 + dword_1A56BB76C[sub_1A56BBCA8(a1)];
  __asm { BR              X10 }
}

void sub_1A56BB3C4()
{
  uint64_t v0;
  Swift::Int v1;
  int v2;
  char v3;
  Swift::String v4;
  _DWORD *v5;
  int v6;
  int v7;

  sub_1A56814E0(0x228588E222, 0xA500000000000000, v0 + 8, v1);
  if ((v3 & 1) != 0)
  {
    v4._countAndFlagsBits = 0x228588E222;
    v4._object = (void *)0xA500000000000000;
    v2 = ByteBuffer._setStringSlowpath(_:at:)(v4, v1);
  }
  v6 = *(_DWORD *)(v0 + 20);
  v5 = (_DWORD *)(v0 + 20);
  v7 = v6 + v2;
  if (__CFADD__(v6, v2))
  {
    __break(1u);
    JUMPOUT(0x1A56BB41CLL);
  }
  *v5 = v7;
}

void sub_1A56BB77C(uint64_t a1)
{
  char *v1;

  v1 = (char *)&loc_1A56BB7D0 + dword_1A56BBB4C[sub_1A56BBD8C(a1)];
  __asm { BR              X10 }
}

void sub_1A56BB7E0()
{
  uint64_t v0;
  Swift::Int v1;
  int v2;
  char v3;
  Swift::String v4;
  _DWORD *v5;
  int v6;
  int v7;

  sub_1A56814E0(0x228588E222, 0xA500000000000000, v0 + 8, v1);
  if ((v3 & 1) != 0)
  {
    v4._countAndFlagsBits = 0x228588E222;
    v4._object = (void *)0xA500000000000000;
    v2 = ByteBuffer._setStringSlowpath(_:at:)(v4, v1);
  }
  v6 = *(_DWORD *)(v0 + 20);
  v5 = (_DWORD *)(v0 + 20);
  v7 = v6 + v2;
  if (__CFADD__(v6, v2))
  {
    __break(1u);
    JUMPOUT(0x1A56BB838);
  }
  *v5 = v7;
}

uint64_t sub_1A56BBB5C(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v5;
  char v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  char v11;
  char v12;
  uint64_t v13;
  int v14;
  unsigned int v15;
  unsigned __int8 v16;

  sub_1A567F6A8((int *)(v2 + 1), (uint64_t)&v14);
  sub_1A567F6A8(&v14, (uint64_t)&v15);
  v5 = v15 | ((unint64_t)v16 << 32);
  if ((v5 & 0x8000000000) != 0)
  {
    v16 = BYTE4(v5) & 0x7F;
    if ((v5 & 0x100) != 0)
    {
      if ((a2 & 0x1000000000000000) != 0)
      {
        v9 = sub_1A594B640();
      }
      else
      {
        if ((a2 & 0x2000000000000000) != 0)
          goto LABEL_14;
        v9 = a1 & 0xFFFFFFFFFFFFLL;
      }
      if (v9 <= 70)
      {
LABEL_14:
        if ((sub_1A56BBFD0(a1, a2) & 1) != 0)
          return 0;
      }
    }
    return 1;
  }
  v6 = BYTE2(v15);
  v7 = HIBYTE(v15);
  if ((v15 & 1) == 0)
    goto LABEL_7;
  if ((a2 & 0x1000000000000000) != 0)
  {
    v8 = sub_1A594B640();
  }
  else
  {
    if ((a2 & 0x2000000000000000) != 0)
      goto LABEL_17;
    v8 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v8 > 70)
  {
LABEL_7:
    if ((v6 & 1) != 0)
      return 3;
LABEL_21:
    if (!v7)
      return 2;
    if ((a2 & 0x1000000000000000) != 0)
    {
      v13 = sub_1A594B640();
    }
    else
    {
      if ((a2 & 0x2000000000000000) != 0)
        return 3;
      v13 = a1 & 0xFFFFFFFFFFFFLL;
    }
    if (v13 > 4096)
      return 2;
    return 3;
  }
LABEL_17:
  v11 = sub_1A56BBFD0(a1, a2);
  v12 = v11 | v6;
  if ((v11 & 1) != 0)
    result = 0;
  else
    result = 3;
  if ((v12 & 1) == 0)
    goto LABEL_21;
  return result;
}

uint64_t sub_1A56BBCA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  unint64_t v4;
  char v5;
  int v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  int v13;
  unsigned int v14;
  unsigned __int8 v15;

  sub_1A567F6A8((int *)(v1 + 1), (uint64_t)&v13);
  result = sub_1A567F6A8(&v13, (uint64_t)&v14);
  v4 = v14 | ((unint64_t)v15 << 32);
  if ((v4 & 0x8000000000) != 0)
  {
    v15 = BYTE4(v4) & 0x7F;
    return (v4 & 0x100) == 0 || (sub_1A56BBEC4(a1) & 1) == 0;
  }
  else
  {
    v5 = BYTE2(v14);
    v6 = HIBYTE(v14);
    if ((v14 & 1) == 0)
    {
      if ((v14 & 0x10000) != 0)
        return 3;
LABEL_12:
      if (!v6)
        return 2;
      v9 = *(_QWORD *)(a1 + 24);
      v10 = *(_QWORD *)(a1 + 32);
      v11 = __OFSUB__(v10, v9);
      v12 = v10 - v9;
      if (v12 < 0 != v11)
      {
        __break(1u);
      }
      else if (!v11)
      {
        if (v12 <= 4096)
          return 3;
        return 2;
      }
      __break(1u);
      return result;
    }
    v7 = sub_1A56BBEC4(a1);
    v8 = v7 | v5;
    if ((v7 & 1) != 0)
      result = 0;
    else
      result = 3;
    if ((v8 & 1) == 0)
      goto LABEL_12;
  }
  return result;
}

uint64_t sub_1A56BBD8C(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t result;
  unint64_t v6;
  unsigned __int8 *v7;
  int v8;
  int v9;
  BOOL v10;
  unsigned __int8 *v11;
  int v12;
  int v13;
  BOOL v14;
  int v15;
  unsigned int v16;
  unsigned __int8 v17;

  sub_1A567F6A8((int *)(v1 + 1), (uint64_t)&v15);
  sub_1A567F6A8(&v15, (uint64_t)&v16);
  v3 = v16 | ((unint64_t)v17 << 32);
  if ((v3 & 0x8000000000) != 0)
  {
    v17 = BYTE4(v3) & 0x7F;
    if ((v3 & 0x100) != 0)
    {
      v6 = *(_QWORD *)(a1 + 16);
      if (v6 <= 0x46)
      {
        if (!v6)
          return 0;
        v11 = (unsigned __int8 *)(a1 + 32);
        while (1)
        {
          v13 = *v11++;
          v12 = v13;
          v14 = v13 == 10 || v12 == 13;
          if (v14 || (v12 & 0x80) != 0)
            break;
          result = 1;
          if (v12)
          {
            if (v12 != 34 && v12 != 92)
            {
              result = 0;
              if (--v6)
                continue;
            }
          }
          return result;
        }
      }
    }
    return 1;
  }
  if ((v16 & 1) != 0)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 <= 0x46)
    {
      if (v4)
      {
        v7 = (unsigned __int8 *)(a1 + 32);
        while (1)
        {
          v9 = *v7++;
          v8 = v9;
          v10 = v9 == 10 || v8 == 13;
          if (v10 || (v8 & 0x80) != 0 || !v8 || v8 == 34 || v8 == 92)
            break;
          result = 0;
          if (!--v4)
            return result;
        }
        goto LABEL_4;
      }
      return 0;
    }
  }
LABEL_4:
  if ((v16 & 0x10000) != 0 || HIBYTE(v16) && *(_QWORD *)(a1 + 16) <= 0x1000uLL)
    return 3;
  else
    return 2;
}

uint64_t sub_1A56BBEC4(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  BOOL v10;

  v1 = *(_QWORD *)(result + 24);
  v2 = *(_QWORD *)(result + 32);
  if (v2 < v1)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (__OFSUB__(v2, v1))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v2 - v1 > 70)
    return 0;
  if (v1 != v2)
  {
    v4 = *(unsigned int *)(result + 8);
    v3 = *(_DWORD *)(result + 12);
    v5 = v3 - v4;
    if (v3 < v4)
    {
LABEL_30:
      __break(1u);
      return result;
    }
    v6 = *(_QWORD *)result;
    v7 = *(unsigned __int8 *)(result + 22) | ((unint64_t)*(unsigned __int16 *)(result + 20) << 8);
    result = swift_beginAccess();
    while (v1 < v2)
    {
      v8 = v1 - v4;
      if (__OFSUB__(v1, v4))
        goto LABEL_25;
      if (v8 < 0)
        goto LABEL_26;
      if (v8 >= v5)
        goto LABEL_27;
      v9 = *(unsigned __int8 *)(*(_QWORD *)(v6 + 24) + v7 + v1);
      v10 = v9 == 10 || v9 == 13;
      if (v10 || (v9 & 0x80) != 0)
        return 0;
      result = 0;
      if (!*(_BYTE *)(*(_QWORD *)(v6 + 24) + v7 + v1) || v9 == 34 || v9 == 92)
        return result;
      if (v2 == ++v1)
        return 1;
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  return 1;
}

unint64_t sub_1A56BBFD0(unint64_t a1, unint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t result;
  unint64_t v11;
  char v12;
  BOOL v13;
  uint64_t v14;
  _QWORD v15[2];
  uint64_t v16;

  if ((a2 & 0x2000000000000000) != 0)
    v4 = HIBYTE(a2) & 0xF;
  else
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  v5 = 4 * v4;
  v6 = (a1 >> 59) & 1;
  if ((a2 & 0x1000000000000000) == 0)
    LOBYTE(v6) = 1;
  v7 = 4 << v6;
  v16 = a2 & 0xFFFFFFFFFFFFFFLL;
  v14 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v8 = 15;
  while (1)
  {
    v9 = v8 >> 14;
    if (v8 >> 14 == v5)
      return v9 == v5;
    result = v8;
    if ((v8 & 0xC) == v7)
      result = sub_1A56C83D0(v8, a1, a2);
    v11 = result >> 16;
    if (result >> 16 >= v4)
      break;
    if ((a2 & 0x1000000000000000) != 0)
    {
      result = sub_1A594B670();
      v12 = result;
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      v15[0] = a1;
      v15[1] = v16;
      v12 = *((_BYTE *)v15 + v11);
    }
    else
    {
      result = v14;
      if ((a1 & 0x1000000000000000) == 0)
        result = sub_1A594C7D4();
      v12 = *(_BYTE *)(result + v11);
    }
    if ((v8 & 0xC) == v7)
    {
      result = sub_1A56C83D0(v8, a1, a2);
      v8 = result;
      if ((a2 & 0x1000000000000000) != 0)
      {
LABEL_22:
        if (v4 <= v8 >> 16)
          goto LABEL_34;
        v8 = sub_1A594B64C();
        goto LABEL_24;
      }
    }
    else if ((a2 & 0x1000000000000000) != 0)
    {
      goto LABEL_22;
    }
    v8 = (v8 & 0xFFFFFFFFFFFF0000) + 65540;
LABEL_24:
    v13 = v12 == 10 || v12 == 13;
    if (v13 || v12 < 0 || !v12 || v12 == 34 || v12 == 92)
      return v9 == v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1A56BC178()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1A566ACC0(v0);
  sub_1A553E5DC(v0);
  return v1;
}

uint64_t sub_1A56BC1A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1A566AD90(v0);
  v2 = v1;
  sub_1A56BC9C8(v0);
  return v2;
}

uint64_t EncodeBuffer.writeCustomCommandPayload(_:)(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::Int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  Swift::Int v12;
  char v13;
  char v14;
  Swift::String v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  BOOL v22;
  int v23;
  Swift::UInt32 v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  _QWORD v36[2];
  unsigned __int16 v37;
  unsigned __int8 v38;
  uint64_t v39;
  uint64_t v40;

  v4 = v3;
  if ((a1 & 0x8000000000000000) == 0)
  {
    ByteBufferView.init(_:)(a1, a2, a3 & 0xFFFFFFFFFFFFFFLL, (uint64_t)v36);
    OUTLINED_FUNCTION_31_9();
    swift_retain();
    sub_1A56BA79C((uint64_t)v36);
    v6 = v5;
    OUTLINED_FUNCTION_11_11(v5, v7, v8, v9, v10);
    OUTLINED_FUNCTION_32_10();
    return v6;
  }
  ByteBufferView.init(_:)(a1 & 0x7FFFFFFFFFFFFFFFLL, a2, a3 & 0xFFFFFFFFFFFFFFLL, (uint64_t)v36);
  if (*(_BYTE *)v3 == 1)
  {
    swift_retain_n();
    sub_1A566ACC0((uint64_t)v36);
    swift_release();
    sub_1A594CC9C();
    sub_1A594B5F8();
    OUTLINED_FUNCTION_55();
    sub_1A594B5F8();
    v11 = *(unsigned int *)(v3 + 20);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    OUTLINED_FUNCTION_22_1(91, 0xE100000000000000, v3 + 8, v11);
    v6 = v12;
    v14 = v13;
    OUTLINED_FUNCTION_41();
    if ((v14 & 1) != 0)
    {
      v15._countAndFlagsBits = 91;
      v15._object = (void *)0xE100000000000000;
      v6 = ByteBuffer._setStringSlowpath(_:at:)(v15, v11);
    }
    OUTLINED_FUNCTION_41();
    v16 = OUTLINED_FUNCTION_32_10();
    OUTLINED_FUNCTION_11_11(v16, v17, v18, v19, v20);
    v21 = *(_DWORD *)(v4 + 20);
    v22 = __CFADD__(v21, (_DWORD)v6);
    v23 = v21 + v6;
    if (!v22)
      goto LABEL_12;
    __break(1u);
  }
  v24 = *(_DWORD *)(v4 + 20);
  v6 = v37;
  v25 = v38;
  v26 = (_QWORD *)(v36[0] + 24);
  result = OUTLINED_FUNCTION_176();
  if (__OFSUB__(v40, v39))
  {
    __break(1u);
  }
  else
  {
    v28 = *v26 + (v25 | (v6 << 8)) + v39;
    v29 = v28 + v40 - v39;
    OUTLINED_FUNCTION_31_9();
    ByteBuffer._setBytes(_:at:)(v28, v29, v24);
    LODWORD(v6) = v30;
    result = OUTLINED_FUNCTION_11_11(v30, v31, v32, v33, v34);
    v35 = *(_DWORD *)(v4 + 20);
    v22 = __CFADD__(v35, (_DWORD)v6);
    v23 = v35 + v6;
    if (!v22)
    {
      v6 = v6;
LABEL_12:
      *(_DWORD *)(v4 + 20) = v23;
      return v6;
    }
  }
  __break(1u);
  return result;
}

uint64_t Command.CustomCommandPayload.hash(into:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v4;
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0)
  {
    v4 = HIDWORD(a3);
    sub_1A594CE88();
    OUTLINED_FUNCTION_176();
    if (v4 >= a3)
      return sub_1A594CE70();
    __break(1u);
  }
  sub_1A594CE88();
  result = OUTLINED_FUNCTION_176();
  if (HIDWORD(a3) >= a3)
    return sub_1A594CE70();
  __break(1u);
  return result;
}

uint64_t static Command.CustomCommandPayload.__derived_enum_equals(_:_:)(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v8;

  if ((result & 0x8000000000000000) == 0)
  {
    if (a4 < 0)
      return 0;
    if (HIDWORD(a2) < a2)
    {
      __break(1u);
    }
    else if (HIDWORD(a5) >= a5)
    {
      if (HIDWORD(a2) - (_DWORD)a2 == HIDWORD(a5) - (_DWORD)a5)
      {
        if ((a3 & 0xFFFFFFFFFFFFFFLL) == (a6 & 0xFFFFFFFFFFFFFFLL) && result == a4)
          return 1;
LABEL_19:
        OUTLINED_FUNCTION_16_14();
        v8 = sub_1A566B918();
        sub_1A550F72C();
        return (v8 & 1) != 0;
      }
      return 0;
    }
    __break(1u);
    goto LABEL_24;
  }
  if ((a4 & 0x8000000000000000) == 0)
    return 0;
  if (HIDWORD(a2) < a2)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (HIDWORD(a5) >= a5)
  {
    if (HIDWORD(a2) - (_DWORD)a2 == HIDWORD(a5) - (_DWORD)a5)
    {
      if ((a3 & 0xFFFFFFFFFFFFFFLL) == (a6 & 0xFFFFFFFFFFFFFFLL)
        && (result & 0x7FFFFFFFFFFFFFFFLL) == (a4 & 0x7FFFFFFFFFFFFFFFLL))
      {
        return 1;
      }
      goto LABEL_19;
    }
    return 0;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t Command.CustomCommandPayload.hashValue.getter(uint64_t a1, unint64_t a2)
{
  _BYTE v5[72];

  sub_1A594CE64();
  Command.CustomCommandPayload.hash(into:)((uint64_t)v5, a1, a2);
  return sub_1A594CED0();
}

uint64_t sub_1A56BC644()
{
  uint64_t v0;

  return Command.CustomCommandPayload.hashValue.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
}

uint64_t sub_1A56BC660(uint64_t a1)
{
  uint64_t v1;

  return Command.CustomCommandPayload.hash(into:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8));
}

uint64_t sub_1A56BC67C()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  _BYTE v4[72];

  v1 = *v0;
  v2 = v0[1];
  sub_1A594CE64();
  Command.CustomCommandPayload.hash(into:)((uint64_t)v4, v1, v2);
  return sub_1A594CED0();
}

uint64_t sub_1A56BC6E0(uint64_t a1, uint64_t a2)
{
  return static Command.CustomCommandPayload.__derived_enum_equals(_:_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned int *)(a1 + 16) | ((unint64_t)(*(unsigned __int16 *)(a1 + 20) | (*(unsigned __int8 *)(a1 + 22) << 16)) << 32), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(unsigned int *)(a2 + 16) | ((unint64_t)(*(unsigned __int16 *)(a2 + 20) | (*(unsigned __int8 *)(a2 + 22) << 16)) << 32));
}

unint64_t sub_1A56BC720()
{
  unint64_t result;

  result = qword_1EE7A96B8;
  if (!qword_1EE7A96B8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for Command.CustomCommandPayload, &type metadata for Command.CustomCommandPayload);
    atomic_store(result, (unint64_t *)&qword_1EE7A96B8);
  }
  return result;
}

uint64_t _s20CustomCommandPayloadOwxx()
{
  return sub_1A550F72C();
}

uint64_t _s20CustomCommandPayloadOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  int v6;
  char v7;
  __int16 v8;

  v3 = *a2;
  v4 = a2[1];
  v6 = *((_DWORD *)a2 + 4);
  v5 = a2 + 2;
  v7 = *((_BYTE *)v5 + 6);
  v8 = *((_WORD *)v5 + 2);
  sub_1A5666DE4();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 22) = v7;
  *(_WORD *)(a1 + 20) = v8;
  *(_DWORD *)(a1 + 16) = v6;
  return a1;
}

uint64_t _s20CustomCommandPayloadOwca(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  int v6;
  char v7;
  __int16 v8;

  v3 = *a2;
  v4 = a2[1];
  v6 = *((_DWORD *)a2 + 4);
  v5 = a2 + 2;
  v7 = *((_BYTE *)v5 + 6);
  v8 = *((_WORD *)v5 + 2);
  sub_1A5666DE4();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 22) = v7;
  *(_WORD *)(a1 + 20) = v8;
  sub_1A550F72C();
  return a1;
}

uint64_t _s20CustomCommandPayloadOwta(uint64_t a1, __int128 *a2)
{
  __int128 v3;
  __int128 *v4;
  int v5;
  int v6;
  char v7;

  v3 = *a2;
  v6 = *((_DWORD *)a2 + 4);
  v4 = a2 + 1;
  v5 = v6;
  LOWORD(v6) = *((_WORD *)v4 + 2);
  v7 = *((_BYTE *)v4 + 6);
  *(_OWORD *)a1 = v3;
  *(_DWORD *)(a1 + 16) = v5;
  *(_WORD *)(a1 + 20) = v6;
  *(_BYTE *)(a1 + 22) = v7;
  sub_1A550F72C();
  return a1;
}

uint64_t _s20CustomCommandPayloadOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x7F && *(_BYTE *)(a1 + 23))
    {
      v2 = *(_DWORD *)a1 + 126;
    }
    else
    {
      v2 = (((*(_QWORD *)a1 >> 57) >> 6) | (2 * ((*(_QWORD *)a1 >> 57) & 0x38 | *(_QWORD *)a1 & 7))) ^ 0x7F;
      if (v2 >= 0x7E)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t _s20CustomCommandPayloadOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7E)
  {
    *(_BYTE *)(result + 22) = 0;
    *(_WORD *)(result + 20) = 0;
    *(_DWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 127;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 23) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 23) = 0;
    if (a2)
    {
      v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(_QWORD *)(result + 8) = 0;
      *(_BYTE *)(result + 22) = 0;
      *(_WORD *)(result + 20) = 0;
      *(_DWORD *)(result + 16) = 0;
    }
  }
  return result;
}

uint64_t sub_1A56BC988(_QWORD *a1)
{
  return *a1 >> 63;
}

_QWORD *sub_1A56BC994(_QWORD *result)
{
  *result &= ~0x8000000000000000;
  return result;
}

uint64_t *sub_1A56BC9A4(uint64_t *result, uint64_t a2)
{
  *result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for Command.CustomCommandPayload()
{
  return &type metadata for Command.CustomCommandPayload;
}

uint64_t sub_1A56BC9C8(uint64_t a1)
{
  sub_1A55241F0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_BYTE *)(a1 + 176));
  return a1;
}

uint64_t OUTLINED_FUNCTION_0_43()
{
  return sub_1A594B5F8();
}

void OUTLINED_FUNCTION_3_27()
{
  unint64_t v0;
  uint64_t v1;

  sub_1A56B7438(v1, v0);
}

uint64_t OUTLINED_FUNCTION_4_24()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_5_21()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_9_23()
{
  Swift::UInt32 v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *(_QWORD *)(v2 + 24) + (v1 | (v3 << 8)) + v5;
  ByteBuffer._setBytes(_:at:)(v6, v6 + v4, v0);
}

void OUTLINED_FUNCTION_12_13()
{
  uint64_t v0;

  sub_1A56B7518(v0);
}

uint64_t OUTLINED_FUNCTION_13_12()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t OUTLINED_FUNCTION_14_11()
{
  return sub_1A594B5F8();
}

uint64_t OUTLINED_FUNCTION_15_18()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t OUTLINED_FUNCTION_16_14()
{
  sub_1A5666DE4();
  return sub_1A5666DE4();
}

uint64_t OUTLINED_FUNCTION_18_13()
{
  return sub_1A594B640();
}

Swift::Int OUTLINED_FUNCTION_19_13()
{
  uint64_t v0;
  void *v1;
  Swift::Int v2;
  Swift::String v3;

  v3._countAndFlagsBits = v0;
  v3._object = v1;
  return ByteBuffer._setStringSlowpath(_:at:)(v3, v2);
}

Swift::Int OUTLINED_FUNCTION_20_14()
{
  uint64_t v0;
  void *v1;
  Swift::Int v2;
  Swift::String v3;

  v3._countAndFlagsBits = v0;
  v3._object = v1;
  return ByteBuffer._setStringSlowpath(_:at:)(v3, v2);
}

uint64_t OUTLINED_FUNCTION_23_12()
{
  return sub_1A594B5F8();
}

uint64_t OUTLINED_FUNCTION_24_11()
{
  return sub_1A594B5F8();
}

uint64_t OUTLINED_FUNCTION_25_9()
{
  return sub_1A594B5F8();
}

Swift::Int OUTLINED_FUNCTION_26_6()
{
  Swift::Int v0;
  Swift::String v1;

  v1._countAndFlagsBits = 34;
  v1._object = (void *)0xE100000000000000;
  return ByteBuffer._setStringSlowpath(_:at:)(v1, v0);
}

uint64_t OUTLINED_FUNCTION_31_9()
{
  return sub_1A5666DE4();
}

uint64_t OUTLINED_FUNCTION_32_10()
{
  return sub_1A550F72C();
}

uint64_t OUTLINED_FUNCTION_33_7()
{
  return 34;
}

uint64_t OUTLINED_FUNCTION_36_9()
{
  return sub_1A594CC9C();
}

uint64_t OUTLINED_FUNCTION_37_10()
{
  return sub_1A594CC9C();
}

uint64_t OUTLINED_FUNCTION_38_7()
{
  return sub_1A594CC9C();
}

uint64_t static TaggedCommand.__derived_struct_equals(_:_:)(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  char v5;
  char v6;
  uint64_t v8;
  _BYTE __dst[120];

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = sub_1A594CD38(), v6 = 0, (v5 & 1) != 0))
  {
    sub_1A56B60BC(a1 + 2, __dst);
    sub_1A56B60BC(a2 + 2, &v8);
    static Command.__derived_enum_equals(_:_:)(__dst);
  }
  return v6 & 1;
}

void CommandEncodeBuffer.writeCommand(_:)(Swift::String *a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;
  Swift::Int v5;
  Swift::Int v6;
  char v7;
  char v8;
  int v9;
  BOOL v10;
  int v11;
  uint64_t v12;
  Swift::Int v13;
  Swift::Int v14;
  Swift::Int v15;
  char v16;
  Swift::String v17;
  int v18;
  int v19;
  Swift::String __dst;
  Swift::String v21;

  v2 = v1;
  v21 = *a1;
  __dst = v21;
  sub_1A5524B84((uint64_t)&v21);
  sub_1A594B5F8();
  v4 = *(unsigned int *)(v1 + 20);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A56814E0(__dst._countAndFlagsBits, (unint64_t)__dst._object, v1 + 8, v4);
  v6 = v5;
  v8 = v7;
  swift_bridgeObjectRelease();
  if ((v8 & 1) != 0)
    v6 = ByteBuffer._setStringSlowpath(_:at:)(__dst, v4);
  swift_bridgeObjectRelease();
  v9 = *(_DWORD *)(v1 + 20);
  v10 = __CFADD__(v9, (_DWORD)v6);
  v11 = v9 + v6;
  if (v10)
  {
    __break(1u);
    goto LABEL_11;
  }
  *(_DWORD *)(v1 + 20) = v11;
  sub_1A56B60BC(&a1[1], &__dst);
  sub_1A56B2BA0(&__dst);
  v13 = v6 + v12;
  if (__OFADD__(v6, v12))
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v14 = *(unsigned int *)(v1 + 20);
  sub_1A56814E0(2573, 0xE200000000000000, v2 + 8, *(_DWORD *)(v2 + 20));
  if ((v16 & 1) != 0)
  {
    v17._countAndFlagsBits = 2573;
    v17._object = (void *)0xE200000000000000;
    v15 = ByteBuffer._setStringSlowpath(_:at:)(v17, v14);
  }
  v18 = *(_DWORD *)(v2 + 20);
  v10 = __CFADD__(v18, (_DWORD)v15);
  v19 = v18 + v15;
  if (v10)
    goto LABEL_12;
  *(_DWORD *)(v2 + 20) = v19;
  if (__OFADD__(v13, v15))
LABEL_13:
    __break(1u);
}

uint64_t TaggedCommand.tag.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t TaggedCommand.tag.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

double (*TaggedCommand.tag.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t *TaggedCommand.command.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1A56BCE70((uint64_t *)(v1 + 16), a1);
}

uint64_t *sub_1A56BCE70(uint64_t *a1, uint64_t *a2)
{
  initializeWithCopy for Command(a2, a1);
  return a2;
}

uint64_t TaggedCommand.command.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1A56BCEB4(a1, v1 + 16);
}

uint64_t sub_1A56BCEB4(uint64_t a1, uint64_t a2)
{
  assignWithTake for Command(a2, a1);
  return a2;
}

double (*TaggedCommand.command.modify())(_QWORD)
{
  return nullsub_1;
}

__n128 TaggedCommand.init(tag:command:)@<Q0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X8>)
{
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __n128 result;
  _OWORD v16[7];
  uint64_t v17;

  sub_1A56B60BC(__src, v16);
  v7 = v17;
  v8 = v16[0];
  v9 = v16[1];
  v10 = v16[2];
  v11 = v16[3];
  v12 = v16[4];
  v13 = v16[5];
  v14 = v16[6];
  *(_QWORD *)a4 = a2;
  *(_QWORD *)(a4 + 8) = a3;
  *(_OWORD *)(a4 + 16) = v8;
  *(_OWORD *)(a4 + 32) = v9;
  *(_OWORD *)(a4 + 48) = v10;
  *(_OWORD *)(a4 + 64) = v11;
  *(_OWORD *)(a4 + 80) = v12;
  *(_OWORD *)(a4 + 96) = v13;
  *(_OWORD *)(a4 + 112) = v14;
  *(_QWORD *)(a4 + 128) = v7;
  OUTLINED_FUNCTION_0_44();
  return result;
}

void TaggedCommand.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD __dst[15];

  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  sub_1A56B60BC((void *)(v1 + 16), __dst);
  sub_1A56BCFDC(__dst, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A56803F0);
  Command.hash(into:)(a1);
  sub_1A56BCFDC(__dst, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A567FB10);
  OUTLINED_FUNCTION_0_44();
}

_QWORD *sub_1A56BCFDC(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14]);
  return a1;
}

uint64_t TaggedCommand.hashValue.getter()
{
  uint64_t v0;
  uint64_t v2;
  _QWORD __dst[15];

  sub_1A594CE64();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  sub_1A56B60BC((void *)(v0 + 16), __dst);
  sub_1A56BCFDC(__dst, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A56803F0);
  Command.hash(into:)((uint64_t)&v2);
  sub_1A56BCFDC(__dst, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A567FB10);
  return sub_1A594CED0();
}

uint64_t sub_1A56BD0D0()
{
  const void *v0;
  _BYTE __dst[136];

  memcpy(__dst, v0, sizeof(__dst));
  return TaggedCommand.hashValue.getter();
}

void sub_1A56BD108(uint64_t a1)
{
  const void *v1;
  _BYTE __dst[136];

  memcpy(__dst, v1, sizeof(__dst));
  TaggedCommand.hash(into:)(a1);
}

uint64_t sub_1A56BD148()
{
  uint64_t v0;
  uint64_t v2;
  _QWORD __dst[15];

  sub_1A56B60BC((void *)(v0 + 16), __dst);
  sub_1A594CE64();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  sub_1A56BCFDC(__dst, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A56803F0);
  Command.hash(into:)((uint64_t)&v2);
  sub_1A56BCFDC(__dst, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A567FB10);
  return sub_1A594CED0();
}

uint64_t sub_1A56BD1E4(void *__src, const void *a2)
{
  _QWORD v4[17];
  _QWORD __dst[17];

  memcpy(v4, __src, sizeof(v4));
  memcpy(__dst, a2, sizeof(__dst));
  return static TaggedCommand.__derived_struct_equals(_:_:)(v4, __dst) & 1;
}

void TaggedCommand.debugDescription.getter()
{
  uint64_t v0;

  sub_1A568033C(v0);
  sub_1A567F178();
}

unint64_t sub_1A56BD258()
{
  unint64_t result;

  result = qword_1EE7A96C0;
  if (!qword_1EE7A96C0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for TaggedCommand, &type metadata for TaggedCommand);
    atomic_store(result, (unint64_t *)&qword_1EE7A96C0);
  }
  return result;
}

void sub_1A56BD294()
{
  const void *v0;
  _BYTE __dst[136];

  memcpy(__dst, v0, sizeof(__dst));
  TaggedCommand.debugDescription.getter();
}

uint64_t destroy for TaggedCommand(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return sub_1A567FB10(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120));
}

_QWORD *initializeWithCopy for TaggedCommand(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v18 = a2[2];
  v16 = a2[4];
  v17 = a2[3];
  v4 = a2[7];
  v14 = a2[6];
  v15 = a2[5];
  v5 = a2[8];
  v6 = a2[10];
  v7 = a2[11];
  v9 = a2[12];
  v8 = a2[13];
  v10 = a2[14];
  v11 = a2[15];
  v13 = a2[9];
  v19 = a2[16];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A56803F0(v18, v17, v16, v15, v14, v4, v5, v13, v6, v7, v9, v8, v10, v11);
  a1[2] = v18;
  a1[3] = v17;
  a1[4] = v16;
  a1[5] = v15;
  a1[6] = v14;
  a1[7] = v4;
  a1[8] = v5;
  a1[9] = v13;
  a1[10] = v6;
  a1[11] = v7;
  a1[12] = v9;
  a1[13] = v8;
  a1[14] = v10;
  a1[15] = v11;
  a1[16] = v19;
  return a1;
}

uint64_t assignWithCopy for TaggedCommand(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;

  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = a2[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = a2[2];
  v5 = a2[3];
  v6 = a2[4];
  v7 = a2[5];
  v8 = a2[6];
  v9 = a2[7];
  v10 = a2[8];
  v11 = a2[9];
  v25 = a2[10];
  v26 = a2[11];
  v27 = a2[12];
  v28 = a2[13];
  v29 = a2[14];
  v30 = a2[15];
  v12 = a2[16];
  sub_1A56803F0(v4, v5, v6, v7, v8, v9, v10, v11, v25, v26, v27, v28, v29, v30);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 24);
  v15 = *(_QWORD *)(a1 + 32);
  v16 = *(_QWORD *)(a1 + 40);
  v17 = *(_QWORD *)(a1 + 48);
  v18 = *(_QWORD *)(a1 + 56);
  v19 = *(_QWORD *)(a1 + 64);
  v20 = *(_QWORD *)(a1 + 72);
  v21 = *(_OWORD *)(a1 + 80);
  v22 = *(_OWORD *)(a1 + 96);
  v23 = *(_OWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_QWORD *)(a1 + 80) = v25;
  *(_QWORD *)(a1 + 88) = v26;
  *(_QWORD *)(a1 + 96) = v27;
  *(_QWORD *)(a1 + 104) = v28;
  *(_QWORD *)(a1 + 112) = v29;
  *(_QWORD *)(a1 + 120) = v30;
  *(_QWORD *)(a1 + 128) = v12;
  sub_1A567FB10(v13, v14, v15, v16, v17, v18, v19, v20, v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((unint64_t *)&v23 + 1));
  return a1;
}

uint64_t assignWithTake for TaggedCommand(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 128);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_QWORD *)(a1 + 64);
  v13 = *(_QWORD *)(a1 + 72);
  v14 = *(_OWORD *)(a1 + 80);
  v15 = *(_OWORD *)(a1 + 96);
  v16 = *(_OWORD *)(a1 + 112);
  v17 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v17;
  v18 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v18;
  v19 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v19;
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 128) = v5;
  sub_1A567FB10(v6, v7, v8, v9, v10, v11, v12, v13, v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((unint64_t *)&v16 + 1));
  return a1;
}

uint64_t getEnumTagSinglePayload for TaggedCommand(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 136))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TaggedCommand(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 136) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 136) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TaggedCommand()
{
  return &type metadata for TaggedCommand;
}

void CreateParameter.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((a5 & 0x1000000000000) != 0)
  {
    OUTLINED_FUNCTION_3_19();
    sub_1A569572C(a1, a2);
    return;
  }
  OUTLINED_FUNCTION_2_21();
  sub_1A594B1D8();
  if (BYTE5(a5) == 255)
  {
    sub_1A594CE94();
    return;
  }
  sub_1A594CE94();
  if ((a5 & 0x10000000000) != 0)
  {
    OUTLINED_FUNCTION_3_19();
    sub_1A566658C(a4, a5, 1);
    OUTLINED_FUNCTION_126_1();
    sub_1A569428C();
    goto LABEL_9;
  }
  OUTLINED_FUNCTION_2_21();
  if (BYTE4(a5) == 255)
  {
    OUTLINED_FUNCTION_3_19();
LABEL_9:
    sub_1A56667BC(a4, a5);
    return;
  }
  OUTLINED_FUNCTION_2_21();
  v9 = OUTLINED_FUNCTION_126_1();
  sub_1A56B6298(v9, v10, v11);
}

void static CreateParameter.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, int32x2_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, int32x2_t *a7, uint64_t a8)
{
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if ((a4 & 0x1000000000000) != 0)
  {
    if ((a8 & 0x1000000000000) != 0)
      sub_1A568AC80();
  }
  else if ((a8 & 0x1000000000000) == 0)
  {
    v12 = a1 == a5 && a2 == a6;
    if ((v12 || (sub_1A594CD38() & 1) != 0) && BYTE5(a4) != 255 && BYTE5(a8) != 255)
    {
      if ((a4 & 0x10000000000) != 0)
      {
        if ((a8 & 0x10000000000) != 0)
          sub_1A5689E98();
      }
      else if ((a8 & 0x10000000000) == 0 && (~a4 & 0xFF00000000) != 0 && (a8 & 0xFF00000000) != 0xFF00000000)
      {
        v13 = OUTLINED_FUNCTION_126_1();
        sub_1A566676C(v13, v14);
        sub_1A566676C((uint64_t)a3, a4);
        sub_1A56B614C(a3, a4 & 0xFFFFFFFFFFLL, a7, a8 & 0xFFFFFFFFFFLL);
        v15 = OUTLINED_FUNCTION_126_1();
        sub_1A56667BC(v15, v16);
        sub_1A56667BC((uint64_t)a3, a4);
      }
    }
  }
}

uint64_t CreateParameter.hashValue.getter(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  _BYTE v9[72];

  sub_1A594CE64();
  CreateParameter.hash(into:)((uint64_t)v9, a1, a2, a3, a4 & 0xFFFFFFFFFFFFLL | ((HIWORD(a4) & 1) << 48));
  return sub_1A594CED0();
}

uint64_t sub_1A56BD96C()
{
  uint64_t v0;

  return CreateParameter.hashValue.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(unsigned int *)(v0 + 24) | ((unint64_t)*(unsigned __int16 *)(v0 + 28) << 32) | ((unint64_t)*(unsigned __int8 *)(v0 + 30) << 48));
}

void sub_1A56BD99C(uint64_t a1)
{
  uint64_t v1;

  CreateParameter.hash(into:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(unsigned int *)(v1 + 24) | ((unint64_t)*(unsigned __int16 *)(v1 + 28) << 32) | ((unint64_t)*(unsigned __int8 *)(v1 + 30) << 48));
}

uint64_t sub_1A56BD9CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unsigned __int8 v5;
  _BYTE v7[72];

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(unsigned int *)(v0 + 24) | ((unint64_t)*(unsigned __int16 *)(v0 + 28) << 32);
  v5 = *(_BYTE *)(v0 + 30);
  sub_1A594CE64();
  CreateParameter.hash(into:)((uint64_t)v7, v1, v2, v3, v4 | ((unint64_t)v5 << 48));
  return sub_1A594CED0();
}

void sub_1A56BDA44(uint64_t a1, uint64_t a2)
{
  static CreateParameter.__derived_enum_equals(_:_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(int32x2_t **)(a1 + 16), *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int16 *)(a1 + 28) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 30) << 48), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(int32x2_t **)(a2 + 16), *(unsigned int *)(a2 + 24) | ((unint64_t)*(unsigned __int16 *)(a2 + 28) << 32) | ((unint64_t)*(unsigned __int8 *)(a2 + 30) << 48));
}

unint64_t sub_1A56BDAA4()
{
  unint64_t result;

  result = qword_1EE7A96C8;
  if (!qword_1EE7A96C8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for CreateParameter, &type metadata for CreateParameter);
    atomic_store(result, (unint64_t *)&qword_1EE7A96C8);
  }
  return result;
}

uint64_t destroy for CreateParameter(uint64_t a1)
{
  return sub_1A5666784(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int16 *)(a1 + 28) << 32), *(_BYTE *)(a1 + 30));
}

uint64_t initializeWithCopy for CreateParameter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(unsigned __int16 *)(a2 + 28);
  v7 = *(unsigned int *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 30);
  sub_1A5666734(*(_QWORD *)a2, v4, v5, v7 | (v6 << 32), v8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_WORD *)(a1 + 28) = v6;
  *(_DWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 30) = v8;
  return a1;
}

uint64_t assignWithCopy for CreateParameter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(unsigned __int16 *)(a2 + 28);
  v7 = *(unsigned int *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 30);
  sub_1A5666734(*(_QWORD *)a2, v4, v5, v7 | (v6 << 32), v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int16 *)(a1 + 28) << 32);
  v13 = *(_BYTE *)(a1 + 30);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_DWORD *)(a1 + 24) = v7;
  *(_WORD *)(a1 + 28) = v6;
  *(_BYTE *)(a1 + 30) = v8;
  sub_1A5666784(v9, v10, v11, v12, v13);
  return a1;
}

__n128 __swift_memcpy31_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 15) = *(_OWORD *)(a2 + 15);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for CreateParameter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int16 v4;
  int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_WORD *)(a2 + 28);
  v5 = *(_DWORD *)(a2 + 24);
  v6 = *(_BYTE *)(a2 + 30);
  v7 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v10 = *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int16 *)(a1 + 28) << 32);
  v11 = *(_BYTE *)(a1 + 30);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_DWORD *)(a1 + 24) = v5;
  *(_WORD *)(a1 + 28) = v4;
  *(_BYTE *)(a1 + 30) = v6;
  sub_1A5666784(v7, v9, v8, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for CreateParameter(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 31))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 30);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CreateParameter(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 30) = 0;
    *(_WORD *)(result + 28) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 31) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 31) = 0;
    if (a2)
      *(_BYTE *)(result + 30) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A56BDD20(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 30);
}

uint64_t sub_1A56BDD28(uint64_t result, char a2)
{
  *(_BYTE *)(result + 30) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for CreateParameter()
{
  return &type metadata for CreateParameter;
}

uint64_t IMAPCalendarDay.month.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t IMAPCalendarDay.day.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

NIOIMAPCore2::IMAPCalendarDay_optional __swiftcall IMAPCalendarDay.init(year:month:day:)(Swift::Int year, Swift::Int month, Swift::Int day)
{
  BOOL v3;
  BOOL v4;
  BOOL v5;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  _BOOL4 v13;
  NIOIMAPCore2::IMAPCalendarDay_optional result;

  if ((unint64_t)(day - 32) >= 0xFFFFFFFFFFFFFFE1)
  {
    v4 = __OFSUB__(month, 1);
    v3 = month - 1 < 0;
  }
  else
  {
    v4 = 0;
    v3 = 1;
  }
  if (v3 != v4)
  {
    v7 = 0;
    v5 = 0;
    v6 = 0;
  }
  else
  {
    v7 = __OFSUB__(month, 12);
    v5 = month == 12;
    v6 = month - 12 < 0;
  }
  if (v6 ^ v7 | v5)
  {
    v9 = __OFSUB__(year, 1900);
    v8 = year - 1900 < 0;
  }
  else
  {
    v9 = 0;
    v8 = 1;
  }
  if (v8 != v9)
  {
    v12 = 0;
    v10 = 0;
    v11 = 0;
  }
  else
  {
    v12 = __OFSUB__(year, 2500);
    v10 = year == 2500;
    v11 = year - 2500 < 0;
  }
  if (v11 ^ v12 | v10)
    v13 = 0;
  else
    v13 = 1;
  if (v13)
  {
    year = 0;
    month = 0;
    day = 0;
  }
  result.value.day = day;
  result.value.month = month;
  result.value.year = year;
  result.is_nil = v13;
  return result;
}

uint64_t IMAPCalendarDay.hash(into:)()
{
  sub_1A594CE88();
  sub_1A594CE88();
  return sub_1A594CE88();
}

BOOL static IMAPCalendarDay.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return a1 == a4 && a2 == a5 && a3 == a6;
}

uint64_t IMAPCalendarDay.hashValue.getter()
{
  sub_1A594CE64();
  sub_1A594CE88();
  sub_1A594CE88();
  sub_1A594CE88();
  return sub_1A594CED0();
}

uint64_t sub_1A56BDE54()
{
  return IMAPCalendarDay.hashValue.getter();
}

uint64_t sub_1A56BDE60()
{
  return IMAPCalendarDay.hash(into:)();
}

uint64_t sub_1A56BDE6C()
{
  sub_1A594CE64();
  sub_1A594CE88();
  sub_1A594CE88();
  sub_1A594CE88();
  return sub_1A594CED0();
}

unint64_t sub_1A56BDED4()
{
  unint64_t result;

  result = qword_1EE7A96D0;
  if (!qword_1EE7A96D0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for IMAPCalendarDay, &type metadata for IMAPCalendarDay);
    atomic_store(result, (unint64_t *)&qword_1EE7A96D0);
  }
  return result;
}

BOOL sub_1A56BDF10(uint64_t *a1, uint64_t *a2)
{
  return static IMAPCalendarDay.__derived_struct_equals(_:_:)(*a1, a1[1], a1[2], *a2, a2[1], a2[2]);
}

uint64_t getEnumTagSinglePayload for SearchRequest.Predicate.Day(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SearchRequest.Predicate.Day(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for IMAPCalendarDay()
{
  return &type metadata for IMAPCalendarDay;
}

uint64_t sub_1A56BDF88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v5;
  uint64_t v6;
  Swift::Int v7;
  Swift::Int v8;
  Swift::Int v9;
  char v10;
  uint64_t result;
  int v12;
  BOOL v13;
  int v14;
  Swift::String v15;

  v3 = v2;
  v15._countAndFlagsBits = OUTLINED_FUNCTION_23_1();
  v15._object = v5;
  v6 = OUTLINED_FUNCTION_2_34();
  sub_1A56BE0A0(v6, a2);
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_2_34();
  OUTLINED_FUNCTION_23_1();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  v7 = *(unsigned int *)(v2 + 20);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A56814E0(v15._countAndFlagsBits, (unint64_t)v15._object, v2 + 8, v7);
  v9 = v8;
  LOBYTE(a2) = v10;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
    v9 = ByteBuffer._setStringSlowpath(_:at:)(v15, v7);
  result = swift_bridgeObjectRelease();
  v12 = *(_DWORD *)(v3 + 20);
  v13 = __CFADD__(v12, (_DWORD)v9);
  v14 = v12 + v9;
  if (v13)
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(v3 + 20) = v14;
    return v9;
  }
  return result;
}

uint64_t sub_1A56BE0A0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if ((unint64_t)(a2 - 1) <= 0xB)
    return *(_QWORD *)&aJan[8 * a2 - 8];
  __break(1u);
  return result;
}

uint64_t sub_1A56BE0C4()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  char v17;

  v0 = sub_1A594B49C();
  v2 = v0 == 7233898 && v1 == 0xE300000000000000;
  if (v2 || (v3 = v0, v4 = v1, (OUTLINED_FUNCTION_0_45() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = v3 == 6448486 && v4 == 0xE300000000000000;
    if (v6 || (OUTLINED_FUNCTION_0_45() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = v3 == 7496045 && v4 == 0xE300000000000000;
      if (v7 || (OUTLINED_FUNCTION_0_45() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v8 = v3 == 7499873 && v4 == 0xE300000000000000;
        if (v8 || (OUTLINED_FUNCTION_0_45() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v9 = v3 == 7954797 && v4 == 0xE300000000000000;
          if (v9 || (OUTLINED_FUNCTION_0_45() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            v10 = v3 == 7239018 && v4 == 0xE300000000000000;
            if (v10 || (OUTLINED_FUNCTION_0_45() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              v11 = v3 == 7107946 && v4 == 0xE300000000000000;
              if (v11 || (OUTLINED_FUNCTION_0_45() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 7;
              }
              else
              {
                v12 = v3 == 6780257 && v4 == 0xE300000000000000;
                if (v12 || (OUTLINED_FUNCTION_0_45() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 8;
                }
                else
                {
                  v13 = v3 == 7366003 && v4 == 0xE300000000000000;
                  if (v13 || (OUTLINED_FUNCTION_0_45() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 9;
                  }
                  else
                  {
                    v14 = v3 == 7627631 && v4 == 0xE300000000000000;
                    if (v14 || (OUTLINED_FUNCTION_0_45() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 10;
                    }
                    else
                    {
                      v15 = v3 == 7761774 && v4 == 0xE300000000000000;
                      if (v15 || (OUTLINED_FUNCTION_0_45() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 11;
                      }
                      else if (v3 == 6514020 && v4 == 0xE300000000000000)
                      {
                        swift_bridgeObjectRelease();
                        return 12;
                      }
                      else
                      {
                        v17 = OUTLINED_FUNCTION_0_45();
                        swift_bridgeObjectRelease();
                        if ((v17 & 1) != 0)
                          return 12;
                        else
                          return 0;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t OUTLINED_FUNCTION_0_45()
{
  return sub_1A594CD38();
}

uint64_t OUTLINED_FUNCTION_2_34()
{
  return sub_1A594B5F8();
}

void sub_1A56BE42C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::Int v4;
  Swift::Int v5;
  Swift::Int v6;
  char v7;
  char v8;
  Swift::String v9;
  int v10;
  BOOL v11;
  int v12;
  uint64_t v13;
  Swift::Int v14;
  Swift::Int v15;
  char v16;
  int v17;
  int v18;
  BOOL v19;
  Swift::Int v20;
  uint64_t v21;
  Swift::Int v22;
  Swift::Int v23;
  char v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[7];

  ServerMessageDate.components.getter(a1, (uint64_t)v29);
  if ((unint64_t)(v29[1] - 1) > 0xB)
    goto LABEL_23;
  v2 = v29[4];
  v3 = v29[5];
  v27 = v29[6];
  v28 = v29[3];
  OUTLINED_FUNCTION_3_28();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_2_35();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_3_28();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  v4 = *(unsigned int *)(v1 + 20);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A56814E0(34, 0xE100000000000000, v1 + 8, v4);
  v6 = v5;
  v8 = v7;
  swift_bridgeObjectRelease();
  if ((v8 & 1) != 0)
  {
    v9._countAndFlagsBits = 34;
    v9._object = (void *)0xE100000000000000;
    v6 = ByteBuffer._setStringSlowpath(_:at:)(v9, v4);
  }
  swift_bridgeObjectRelease();
  v10 = *(_DWORD *)(v1 + 20);
  v11 = __CFADD__(v10, (_DWORD)v6);
  v12 = v10 + v6;
  if (v11)
  {
    __break(1u);
    goto LABEL_17;
  }
  *(_DWORD *)(v1 + 20) = v12;
  v13 = sub_1A56BED14(v28, v2, v3);
  v14 = v6 + v13;
  if (__OFADD__(v6, v13))
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  OUTLINED_FUNCTION_4_25(32);
  if ((v16 & 1) != 0)
    v15 = OUTLINED_FUNCTION_44(32);
  v17 = *(_DWORD *)(v1 + 20);
  v11 = __CFADD__(v17, (_DWORD)v15);
  v18 = v17 + v15;
  if (v11)
    goto LABEL_18;
  *(_DWORD *)(v1 + 20) = v18;
  v19 = __OFADD__(v14, v15);
  v20 = v14 + v15;
  if (v19)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v21 = sub_1A56BEF74(v27);
  v19 = __OFADD__(v20, v21);
  v22 = v20 + v21;
  if (v19)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  OUTLINED_FUNCTION_4_25(34);
  if ((v24 & 1) != 0)
    v23 = OUTLINED_FUNCTION_44(34);
  v25 = *(_DWORD *)(v1 + 20);
  v11 = __CFADD__(v25, (_DWORD)v23);
  v26 = v25 + v23;
  if (v11)
    goto LABEL_21;
  *(_DWORD *)(v1 + 20) = v26;
  if (__OFADD__(v22, v23))
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
  }
}

Swift::Int ServerMessageDate.components.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  Swift::Int v3;
  Swift::Int v4;
  Swift::Int v5;
  Swift::Int v6;
  Swift::Int v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int result;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  NIOIMAPCore2::ServerMessageDate::Components_optional v16;
  _OWORD v17[3];
  uint64_t v18;
  char v19;

  *(_QWORD *)(OUTLINED_FUNCTION_6_22() + 16) = a1;
  v3 = OUTLINED_FUNCTION_0_46(31);
  v4 = OUTLINED_FUNCTION_0_46(12);
  v5 = OUTLINED_FUNCTION_0_46(60);
  v6 = OUTLINED_FUNCTION_0_46(60);
  v7 = OUTLINED_FUNCTION_0_46(60);
  v8 = OUTLINED_FUNCTION_0_46(1440);
  v9 = OUTLINED_FUNCTION_0_46(2);
  result = OUTLINED_FUNCTION_0_46(65534);
  v11 = 1;
  if (v9)
    v11 = -1;
  if ((unsigned __int128)(v8 * (__int128)v11) >> 64 == (v8 * v11) >> 63)
  {
    ServerMessageDate.Components.init(year:month:day:hour:minute:second:timeZoneMinutes:)(&v16, result, v4, v3, v5, v6, v7, v8 * v11);
    result = sub_1A56BE8B4((uint64_t)&v16, (uint64_t)v17);
    if ((v19 & 1) == 0)
    {
      v14 = v17[1];
      v15 = v17[0];
      v13 = v17[2];
      v12 = v18;
      result = swift_release();
      *(_OWORD *)a2 = v15;
      *(_OWORD *)(a2 + 16) = v14;
      *(_OWORD *)(a2 + 32) = v13;
      *(_QWORD *)(a2 + 48) = v12;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A56BE790()
{
  return swift_deallocObject();
}

uint64_t sub_1A56BE7A0(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t result;
  unint64_t v5;
  unint64_t v6;

  v3 = (_QWORD *)(a2 + 16);
  result = swift_beginAccess();
  v5 = a1 + 1;
  if (a1 == -1)
  {
    __break(1u);
  }
  else
  {
    v6 = *v3 % v5;
    result = swift_beginAccess();
    *v3 /= v5;
    if ((v6 & 0x8000000000000000) == 0)
      return v6;
  }
  __break(1u);
  return result;
}

void __swiftcall ServerMessageDate.Components.init(year:month:day:hour:minute:second:timeZoneMinutes:)(NIOIMAPCore2::ServerMessageDate::Components_optional *__return_ptr retstr, Swift::Int year, Swift::Int month, Swift::Int day, Swift::Int hour, Swift::Int minute, Swift::Int second, Swift::Int timeZoneMinutes)
{
  Swift::Bool v20;
  Swift::Int v21;
  Swift::Int v22;
  Swift::Int v23;
  Swift::Int v24;
  Swift::Int v25;
  Swift::Int v26;
  Swift::Int v27;

  v20 = (unint64_t)(day - 32) < 0xFFFFFFFFFFFFFFE1
     || month < 1
     || month > 12
     || hour < 0
     || hour > 23
     || minute < 0
     || minute > 59
     || second < 0
     || second > 60
     || timeZoneMinutes < -1440
     || timeZoneMinutes > 1440
     || year < 1
     || year >= 0x10000;
  if (v20)
    v21 = 0;
  else
    v21 = year;
  if (v20)
    v22 = 0;
  else
    v22 = month;
  retstr->value.year = v21;
  retstr->value.month = v22;
  if (v20)
    v23 = 0;
  else
    v23 = day;
  if (v20)
    v24 = 0;
  else
    v24 = hour;
  if (v20)
    v25 = 0;
  else
    v25 = minute;
  retstr->value.day = v23;
  retstr->value.hour = v24;
  if (v20)
    v26 = 0;
  else
    v26 = second;
  retstr->value.minute = v25;
  retstr->value.second = v26;
  if (v20)
    v27 = 0;
  else
    v27 = timeZoneMinutes;
  retstr->value.zoneMinutes = v27;
  retstr->is_nil = v20;
}

uint64_t sub_1A56BE8B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1EE796B90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t ServerMessageDate.init(_:)(unint64_t *a1)
{
  uint64_t v2;
  unint64_t result;
  unint64_t v4;
  BOOL v5;
  uint64_t v6;

  v2 = OUTLINED_FUNCTION_6_22();
  *(_QWORD *)(v2 + 16) = 0;
  result = *a1;
  if ((*a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (result >> 16)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  sub_1A56BEA4C(result, 1u, v2);
  v4 = a1[6];
  result = OUTLINED_FUNCTION_1_32(v4 >> 63, 2u);
  if ((v4 & 0x8000000000000000) == 0)
    goto LABEL_6;
  v5 = __OFSUB__(0, v4);
  v4 = -(uint64_t)v4;
  if (!v5)
  {
    if ((v4 & 0x8000000000000000) == 0)
    {
LABEL_6:
      if (!(v4 >> 16))
      {
        sub_1A56BEA4C(v4, 0x5A0u, v2);
        result = a1[5];
        if ((result & 0x8000000000000000) == 0)
        {
          if (result <= 0xFF)
          {
            OUTLINED_FUNCTION_1_32(result, 0x3Cu);
            result = a1[4];
            if ((result & 0x8000000000000000) == 0)
            {
              if (result <= 0xFF)
              {
                OUTLINED_FUNCTION_1_32(result, 0x3Cu);
                result = a1[3];
                if ((result & 0x8000000000000000) == 0)
                {
                  if (result <= 0xFF)
                  {
                    OUTLINED_FUNCTION_1_32(result, 0x3Cu);
                    result = a1[1];
                    if ((result & 0x8000000000000000) == 0)
                    {
                      if (result <= 0xFF)
                      {
                        OUTLINED_FUNCTION_1_32(result, 0xCu);
                        result = a1[2];
                        if ((result & 0x8000000000000000) == 0)
                        {
                          if (result <= 0xFF)
                          {
                            OUTLINED_FUNCTION_1_32(result, 0x1Fu);
                            v6 = *(_QWORD *)(v2 + 16);
                            swift_release();
                            return v6;
                          }
                          goto LABEL_31;
                        }
LABEL_30:
                        __break(1u);
LABEL_31:
                        __break(1u);
                        goto LABEL_32;
                      }
LABEL_29:
                      __break(1u);
                      goto LABEL_30;
                    }
LABEL_28:
                    __break(1u);
                    goto LABEL_29;
                  }
LABEL_27:
                  __break(1u);
                  goto LABEL_28;
                }
LABEL_26:
                __break(1u);
                goto LABEL_27;
              }
LABEL_25:
              __break(1u);
              goto LABEL_26;
            }
LABEL_24:
            __break(1u);
            goto LABEL_25;
          }
LABEL_23:
          __break(1u);
          goto LABEL_24;
        }
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1A56BEA4C(uint64_t result, unsigned __int16 a2, uint64_t a3)
{
  unsigned __int16 v3;
  unint64_t *v4;
  unint64_t v5;
  unint64_t v6;
  BOOL v7;
  unint64_t v8;

  if (((a2 + 1) & 0x10000) != 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  v3 = result;
  v4 = (unint64_t *)(a3 + 16);
  v5 = (unsigned __int16)(a2 + 1);
  result = swift_beginAccess();
  if (!is_mul_ok(*v4, v5))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v6 = *v4 * v5;
  v7 = __CFADD__(v6, v3);
  v8 = v6 + v3;
  if (!v7)
  {
    *v4 = v8;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1A56BEAD0(uint64_t result, unsigned __int8 a2, uint64_t a3)
{
  unsigned __int8 v3;
  unint64_t *v4;
  unint64_t v5;
  unint64_t v6;
  BOOL v7;
  unint64_t v8;

  if ((((a2 + 1) >> 8) & 1) != 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  v3 = result;
  v4 = (unint64_t *)(a3 + 16);
  v5 = (a2 + 1);
  result = swift_beginAccess();
  if (!is_mul_ok(*v4, v5))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v6 = *v4 * v5;
  v7 = __CFADD__(v6, v3);
  v8 = v6 + v3;
  if (!v7)
  {
    *v4 = v8;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t ServerMessageDate.hash(into:)()
{
  return sub_1A594CEB8();
}

BOOL static ServerMessageDate.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t ServerMessageDate.hashValue.getter()
{
  sub_1A594CE64();
  sub_1A594CEB8();
  return sub_1A594CED0();
}

uint64_t sub_1A56BEBC8()
{
  return ServerMessageDate.hashValue.getter();
}

uint64_t sub_1A56BEBD0()
{
  return ServerMessageDate.hash(into:)();
}

uint64_t sub_1A56BEBD8()
{
  sub_1A594CE64();
  sub_1A594CEB8();
  return sub_1A594CED0();
}

BOOL sub_1A56BEC18(uint64_t *a1, uint64_t *a2)
{
  return static ServerMessageDate.__derived_struct_equals(_:_:)(*a1, *a2);
}

uint64_t ServerMessageDate.Components.year.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t ServerMessageDate.Components.month.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t ServerMessageDate.Components.day.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t ServerMessageDate.Components.hour.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t ServerMessageDate.Components.minute.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t ServerMessageDate.Components.second.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t ServerMessageDate.Components.zoneMinutes.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

unint64_t sub_1A56BEC60()
{
  unint64_t result;

  result = qword_1EE7A96D8;
  if (!qword_1EE7A96D8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ServerMessageDate, &type metadata for ServerMessageDate);
    atomic_store(result, (unint64_t *)&qword_1EE7A96D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ServerMessageDate()
{
  return &type metadata for ServerMessageDate;
}

uint64_t getEnumTagSinglePayload for ServerMessageDate.Components(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ServerMessageDate.Components(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 56) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ServerMessageDate.Components()
{
  return &type metadata for ServerMessageDate.Components;
}

uint64_t sub_1A56BED14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  Swift::Int v11;
  Swift::Int v12;
  Swift::Int v13;
  char v14;
  char v15;
  Swift::String v16;
  uint64_t result;
  int v18;
  BOOL v19;
  int v20;

  v4 = v3;
  if (a1 > 9)
  {
    v7 = sub_1A594CC9C();
    v8 = v9;
  }
  else
  {
    sub_1A594CC9C();
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
    v7 = 48;
    v8 = (void *)0xE100000000000000;
  }
  sub_1A594CC9C();
  if (a2 <= 9)
  {
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
  }
  sub_1A594CC9C();
  if (a3 <= 9)
  {
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
  }
  sub_1A594B5F8();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  v10 = v7;
  v11 = *(unsigned int *)(v3 + 20);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A56814E0(v7, (unint64_t)v8, v3 + 8, v11);
  v13 = v12;
  v15 = v14;
  swift_bridgeObjectRelease();
  if ((v15 & 1) != 0)
  {
    v16._countAndFlagsBits = v10;
    v16._object = v8;
    v13 = ByteBuffer._setStringSlowpath(_:at:)(v16, v11);
  }
  result = swift_bridgeObjectRelease();
  v18 = *(_DWORD *)(v4 + 20);
  v19 = __CFADD__(v18, (_DWORD)v13);
  v20 = v18 + v13;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(v4 + 20) = v20;
    return v13;
  }
  return result;
}

uint64_t sub_1A56BEF74(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  Swift::Int v13;
  Swift::Int v14;
  char v15;
  char v16;
  Swift::String v17;
  int v18;
  BOOL v19;
  int v20;
  uint64_t v21;

  v2 = v1;
  v3 = result;
  v4 = result;
  if (result < 0)
  {
    v4 = -result;
    if (__OFSUB__(0, result))
      goto LABEL_20;
  }
  v5 = v4 % 60;
  v6 = __OFSUB__(v4, v4 % 60);
  v7 = v4 - v4 % 60;
  if (v6)
  {
    __break(1u);
    goto LABEL_16;
  }
  v8 = v7 / 60;
  v9 = 100 * (v7 / 60);
  if ((unsigned __int128)(v8 * (__int128)100) >> 64 != v9 >> 63)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (__OFADD__(v9, v5))
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  sub_1A594CC9C();
  if (sub_1A594B5A4() > 3)
    goto LABEL_9;
  MEMORY[0x1A85AD968](4);
  result = sub_1A594B5A4();
  if (!__OFSUB__(4, result))
  {
    v10 = MEMORY[0x1A85ADB48](48, 0xE100000000000000, 4 - result);
    MEMORY[0x1A85ADA58](v10);
    swift_bridgeObjectRelease();
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
LABEL_9:
    v11 = 43;
    if (v3 < 0)
      v11 = 45;
    v21 = v11;
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
    v12 = *(unsigned int *)(v1 + 20);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A56814E0(v21, 0xE100000000000000, v1 + 8, v12);
    v14 = v13;
    v16 = v15;
    swift_bridgeObjectRelease();
    if ((v16 & 1) != 0)
    {
      v17._countAndFlagsBits = v21;
      v17._object = (void *)0xE100000000000000;
      v14 = ByteBuffer._setStringSlowpath(_:at:)(v17, v12);
    }
    result = swift_bridgeObjectRelease();
    v18 = *(_DWORD *)(v2 + 20);
    v19 = __CFADD__(v18, (_DWORD)v14);
    v20 = v18 + v14;
    if (!v19)
    {
      *(_DWORD *)(v2 + 20) = v20;
      return v14;
    }
    goto LABEL_18;
  }
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
  return result;
}

uint64_t OUTLINED_FUNCTION_0_46(uint64_t a1)
{
  uint64_t v1;

  return sub_1A56BE7A0(a1, v1);
}

uint64_t OUTLINED_FUNCTION_1_32(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;

  return sub_1A56BEAD0(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_2_35()
{
  return sub_1A594B5F8();
}

uint64_t OUTLINED_FUNCTION_3_28()
{
  return sub_1A594CC9C();
}

void OUTLINED_FUNCTION_4_25(uint64_t a1)
{
  Swift::UInt32 v1;
  uint64_t v2;

  sub_1A56814E0(a1, 0xE100000000000000, v2, v1);
}

uint64_t OUTLINED_FUNCTION_6_22()
{
  return swift_allocObject();
}

uint64_t EItemVendorTag.token.getter(uint64_t a1)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

void EItemVendorTag.token.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_8_1();
}

double (*EItemVendorTag.token.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t EItemVendorTag.atom.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a3;
}

void EItemVendorTag.atom.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  OUTLINED_FUNCTION_8_1();
}

double (*EItemVendorTag.atom.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t EItemVendorTag.hash(into:)()
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_2_24();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_2_22();
  return swift_bridgeObjectRelease();
}

uint64_t static EItemVendorTag.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  BOOL v12;
  char v13;
  uint64_t result;

  v12 = a1 == a5 && a2 == a6;
  if (v12 || (v13 = sub_1A594CD38(), result = 0, (v13 & 1) != 0))
  {
    if (a3 == a7 && a4 == a8)
      return 1;
    else
      return sub_1A594CD38();
  }
  return result;
}

uint64_t EItemVendorTag.hashValue.getter()
{
  sub_1A594CE64();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_2_24();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_2_22();
  swift_bridgeObjectRelease();
  return sub_1A594CED0();
}

uint64_t sub_1A56BF3E8()
{
  return EItemVendorTag.hashValue.getter();
}

uint64_t sub_1A56BF3F4()
{
  return EItemVendorTag.hash(into:)();
}

unint64_t sub_1A56BF404()
{
  unint64_t result;

  result = qword_1EE7A96E0;
  if (!qword_1EE7A96E0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for EItemVendorTag, &type metadata for EItemVendorTag);
    atomic_store(result, (unint64_t *)&qword_1EE7A96E0);
  }
  return result;
}

uint64_t sub_1A56BF440(uint64_t *a1, uint64_t *a2)
{
  return static EItemVendorTag.__derived_struct_equals(_:_:)(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

ValueMetadata *type metadata accessor for EItemVendorTag()
{
  return &type metadata for EItemVendorTag;
}

BOOL static ExtendedSearchOptions.__derived_struct_equals(_:_:)(uint64_t *a1, _QWORD *a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  _BOOL8 result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;

  static SearchKey.__derived_enum_equals(_:_:)(*a1);
  if ((v4 & 1) == 0)
    return 0;
  v5 = a1[2];
  v6 = a2[2];
  if (!v5)
  {
    if (v6)
      return 0;
LABEL_11:
    sub_1A568A0E4();
    if ((v10 & 1) == 0)
      return 0;
    v11 = a1[4];
    v12 = a1[5];
    v13 = a1[6];
    v14 = a1[7];
    v16 = a2[4];
    v15 = a2[5];
    v17 = a2[6];
    if (v11)
    {
      if (v16)
      {
        OUTLINED_FUNCTION_2_36();
        OUTLINED_FUNCTION_4_26();
        v18 = static ExtendedSearchSourceOptions.__derived_struct_equals(_:_:)(v11, v12, v13, v14, v16, v15, v17);
        OUTLINED_FUNCTION_3_29();
        OUTLINED_FUNCTION_1_33();
        return v18;
      }
    }
    else if (!v16)
    {
      return 1;
    }
    OUTLINED_FUNCTION_2_36();
    OUTLINED_FUNCTION_4_26();
    OUTLINED_FUNCTION_1_33();
    OUTLINED_FUNCTION_3_29();
    return 0;
  }
  if (!v6)
    return 0;
  if (a1[1] == a2[1] && v5 == v6)
    goto LABEL_11;
  v8 = sub_1A594CD38();
  result = 0;
  if ((v8 & 1) != 0)
    goto LABEL_11;
  return result;
}

void sub_1A56BF584(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Swift::Int v17;
  Swift::Int v18;
  char v19;
  Swift::String v20;
  int v21;
  BOOL v22;
  int v23;
  Swift::Int v24;
  uint64_t v25;
  uint64_t v26;
  Swift::Int v27;
  uint64_t v28;
  _QWORD v29[3];
  _OWORD v30[3];
  uint64_t v31;

  v2 = v1;
  v4 = *(_OWORD *)(v1 + 16);
  v30[0] = *(_OWORD *)v1;
  v30[1] = v4;
  v30[2] = *(_OWORD *)(v1 + 32);
  v31 = *(_QWORD *)(v1 + 48);
  sub_1A56BFF80((uint64_t)v30);
  v5 = OUTLINED_FUNCTION_0_47();
  sub_1A56807D8(v5, v6, v7);
  v8 = OUTLINED_FUNCTION_0_47();
  sub_1A566614C(v8);
  v10 = v9;
  sub_1A56BFFB4((uint64_t)v30);
  v11 = OUTLINED_FUNCTION_0_47();
  sub_1A567FEA4(v11, v12, v13);
  v14 = a1[3];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_retain();
  swift_retain();
  v15 = sub_1A56FF1A4(v14);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v16 = v10 + v15;
  if (__OFADD__(v10, v15))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v17 = *(unsigned int *)(v2 + 20);
  sub_1A56814E0(32, 0xE100000000000000, v2 + 8, *(_DWORD *)(v2 + 20));
  if ((v19 & 1) != 0)
  {
    v20._countAndFlagsBits = 32;
    v20._object = (void *)0xE100000000000000;
    v18 = ByteBuffer._setStringSlowpath(_:at:)(v20, v17);
  }
  v21 = *(_DWORD *)(v2 + 20);
  v22 = __CFADD__(v21, (_DWORD)v18);
  v23 = v21 + v18;
  if (v22)
    goto LABEL_13;
  *(_DWORD *)(v2 + 20) = v23;
  v24 = v16 + v18;
  if (__OFADD__(v16, v18))
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v25 = a1[2];
  if (v25)
  {
    v29[0] = a1[1];
    v29[1] = v25;
    v26 = sub_1A56B5D7C((uint64_t)v29, v2);
  }
  else
  {
    v26 = 0;
  }
  v27 = v24 + v26;
  if (__OFADD__(v24, v26))
    goto LABEL_15;
  sub_1A56FBF14(*a1);
  if (__OFADD__(v27, v28))
LABEL_16:
    __break(1u);
}

unint64_t ExtendedSearchOptions.key.getter()
{
  unint64_t *v0;
  unint64_t v1;

  v1 = *v0;
  sub_1A568079C(*v0);
  return v1;
}

unint64_t ExtendedSearchOptions.key.setter(unint64_t a1)
{
  unint64_t *v1;
  unint64_t result;

  result = sub_1A567FE68(*v1);
  *v1 = a1;
  return result;
}

double (*ExtendedSearchOptions.key.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ExtendedSearchOptions.charset.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t ExtendedSearchOptions.charset.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

double (*ExtendedSearchOptions.charset.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ExtendedSearchOptions.returnOptions.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t ExtendedSearchOptions.returnOptions.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

double (*ExtendedSearchOptions.returnOptions.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ExtendedSearchOptions.sourceOptions.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = OUTLINED_FUNCTION_9_18();
  sub_1A56807D8(v0, v1, v2);
  return OUTLINED_FUNCTION_9_18();
}

void ExtendedSearchOptions.sourceOptions.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  sub_1A567FEA4(v4[4], v4[5], v4[6]);
  v4[4] = a1;
  v4[5] = a2;
  v4[6] = a3;
  v4[7] = a4;
  OUTLINED_FUNCTION_17_1();
}

double (*ExtendedSearchOptions.sourceOptions.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ExtendedSearchOptions.init(key:charset:returnOptions:sourceOptions:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  return result;
}

void ExtendedSearchOptions.hash(into:)(uint64_t a1)
{
  unint64_t *v1;
  unint64_t *v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = v1;
  v4 = *v2;
  sub_1A568079C(*v2);
  SearchKey.hash(into:)(a1, v4);
  sub_1A567FE68(v4);
  if (v2[2])
  {
    sub_1A594CE94();
    OUTLINED_FUNCTION_69();
    sub_1A594B1D8();
    OUTLINED_FUNCTION_55();
  }
  else
  {
    sub_1A594CE94();
  }
  v5 = v2[3];
  OUTLINED_FUNCTION_69();
  sub_1A56944B0(a1, v5, v6, v7, v8, v9, v10, v11, v22, v23);
  OUTLINED_FUNCTION_55();
  v12 = v2[4];
  if (v12)
  {
    v14 = v2[6];
    v13 = v2[7];
    v15 = v2[5];
    sub_1A594CE94();
    v16 = OUTLINED_FUNCTION_7_16();
    sub_1A56807D8(v16, v17, v18);
    OUTLINED_FUNCTION_69();
    sub_1A555ECF4(v15, v14);
    ExtendedSearchSourceOptions.hash(into:)(a1, v12, v15, v14, v13);
    OUTLINED_FUNCTION_55();
    sub_1A555D250(v15, v14);
    v19 = OUTLINED_FUNCTION_7_16();
    sub_1A567FEA4(v19, v20, v21);
  }
  else
  {
    sub_1A594CE94();
    OUTLINED_FUNCTION_17_1();
  }
}

uint64_t ExtendedSearchOptions.hashValue.getter()
{
  _BYTE v1[72];

  sub_1A594CE64();
  ExtendedSearchOptions.hash(into:)((uint64_t)v1);
  return sub_1A594CED0();
}

uint64_t sub_1A56BFA10()
{
  _BYTE v1[72];

  sub_1A594CE64();
  ExtendedSearchOptions.hash(into:)((uint64_t)v1);
  return sub_1A594CED0();
}

unint64_t sub_1A56BFA50()
{
  unint64_t result;

  result = qword_1EE7A96E8;
  if (!qword_1EE7A96E8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ExtendedSearchOptions, &type metadata for ExtendedSearchOptions);
    atomic_store(result, (unint64_t *)&qword_1EE7A96E8);
  }
  return result;
}

uint64_t destroy for ExtendedSearchOptions(unint64_t *a1)
{
  uint64_t result;

  sub_1A567FE68(*a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = a1[4];
  if (result)
  {
    swift_bridgeObjectRelease();
    result = a1[6];
    if (result)
    {
      swift_release();
      swift_release();
      return swift_release();
    }
  }
  return result;
}

unint64_t *initializeWithCopy for ExtendedSearchOptions(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  __int128 v10;

  v4 = *a2;
  sub_1A568079C(*a2);
  v5 = a2[4];
  v7 = a2[1];
  v6 = a2[2];
  *a1 = v4;
  a1[1] = v7;
  v8 = a2[3];
  a1[2] = v6;
  a1[3] = v8;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v5)
  {
    a1[4] = v5;
    v9 = a2[6];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v9)
    {
      a1[5] = a2[5];
      a1[6] = v9;
      a1[7] = a2[7];
      swift_retain();
      swift_retain();
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
      a1[7] = a2[7];
    }
  }
  else
  {
    v10 = *((_OWORD *)a2 + 3);
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 3) = v10;
  }
  return a1;
}

uint64_t assignWithCopy for ExtendedSearchOptions(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  __int128 *v6;
  uint64_t v7;
  __int128 *v8;
  __int128 *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;

  v4 = *(_QWORD *)a2;
  sub_1A568079C(*(_QWORD *)a2);
  v5 = *(_QWORD *)a1;
  *(_QWORD *)a1 = v4;
  sub_1A567FE68(v5);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v6 = (__int128 *)(a1 + 32);
  v8 = (__int128 *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 32);
  if (!*(_QWORD *)(a1 + 32))
  {
    if (v7)
    {
      *(_QWORD *)(a1 + 32) = v7;
      v11 = *(_QWORD *)(a2 + 48);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      if (!v11)
      {
        v12 = *(_OWORD *)(a2 + 40);
        *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
        *(_OWORD *)(a1 + 40) = v12;
        return a1;
      }
LABEL_11:
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      swift_retain();
      swift_retain();
      swift_retain();
      return a1;
    }
    v14 = *v8;
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
LABEL_15:
    *v6 = v14;
    return a1;
  }
  if (!v7)
  {
    sub_1A56BFDB4(a1 + 32);
    v13 = *(_OWORD *)(a2 + 48);
    *v6 = *v8;
    *(_OWORD *)(a1 + 48) = v13;
    return a1;
  }
  *(_QWORD *)(a1 + 32) = v7;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v6 = (__int128 *)(a1 + 40);
  v9 = (__int128 *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  if (!*(_QWORD *)(a1 + 48))
  {
    if (v10)
      goto LABEL_11;
    v14 = *v9;
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    goto LABEL_15;
  }
  if (v10)
  {
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    swift_retain();
    swift_release();
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    swift_retain();
    swift_release();
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    swift_retain();
    swift_release();
  }
  else
  {
    sub_1A56BFD80(a1 + 40);
    v15 = *(_QWORD *)(a2 + 56);
    *v6 = *v9;
    *(_QWORD *)(a1 + 56) = v15;
  }
  return a1;
}

uint64_t sub_1A56BFD80(uint64_t a1)
{
  destroy for SearchModificationSequence();
  return a1;
}

uint64_t sub_1A56BFDB4(uint64_t a1)
{
  destroy for ExtendedSearchSourceOptions(a1);
  return a1;
}

uint64_t assignWithTake for ExtendedSearchOptions(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  v4 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  sub_1A567FE68(v4);
  v5 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 32);
  if (!*(_QWORD *)(a1 + 32))
    goto LABEL_7;
  if (!v6)
  {
    sub_1A56BFDB4(a1 + 32);
LABEL_7:
    v8 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v8;
    return a1;
  }
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 48))
  {
LABEL_9:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    return a1;
  }
  v7 = *(_QWORD *)(a2 + 48);
  if (!v7)
  {
    sub_1A56BFD80(a1 + 40);
    goto LABEL_9;
  }
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
  *(_QWORD *)(a1 + 48) = v7;
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExtendedSearchOptions(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ExtendedSearchOptions(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ExtendedSearchOptions()
{
  return &type metadata for ExtendedSearchOptions;
}

uint64_t sub_1A56BFF80(uint64_t a1)
{
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1A56BFFB4(uint64_t a1)
{
  swift_release();
  swift_release();
  return a1;
}

uint64_t OUTLINED_FUNCTION_0_47()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_1_33()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_1A567FEA4(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_2_36()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_1A56807D8(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_3_29()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_1A567FEA4(v2, v0, v1);
}

uint64_t OUTLINED_FUNCTION_4_26()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_1A56807D8(v2, v0, v1);
}

uint64_t ExtendedSearchScopeOptions.content.getter(uint64_t a1)
{
  swift_retain();
  OUTLINED_FUNCTION_155();
  OUTLINED_FUNCTION_17_0();
  return a1;
}

uint64_t ExtendedSearchScopeOptions.hash(into:)(uint64_t a1)
{
  swift_retain();
  OUTLINED_FUNCTION_155();
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_0_48(a1);
  swift_release();
  swift_release();
  return swift_release();
}

BOOL static ExtendedSearchScopeOptions.__derived_struct_equals(_:_:)()
{
  char v0;
  char v1;
  _BOOL8 result;

  sub_1A5690C88();
  result = 0;
  if ((v0 & 1) != 0)
  {
    sub_1A56913B0();
    if ((v1 & 1) != 0)
      return 1;
  }
  return result;
}

uint64_t ExtendedSearchScopeOptions.hashValue.getter()
{
  _BYTE v1[72];

  sub_1A594CE64();
  swift_retain();
  OUTLINED_FUNCTION_155();
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_0_48((uint64_t)v1);
  swift_release();
  swift_release();
  swift_release();
  return sub_1A594CED0();
}

uint64_t sub_1A56C01BC()
{
  return ExtendedSearchScopeOptions.hashValue.getter();
}

uint64_t sub_1A56C01C8(uint64_t a1)
{
  return ExtendedSearchScopeOptions.hash(into:)(a1);
}

uint64_t sub_1A56C01D4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[72];

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  sub_1A594CE64();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1A5693704((uint64_t)v5, v1, v2, v3);
  swift_release();
  swift_release();
  swift_release();
  return sub_1A594CED0();
}

BOOL sub_1A56C0258()
{
  return static ExtendedSearchScopeOptions.__derived_struct_equals(_:_:)();
}

unint64_t sub_1A56C0278()
{
  unint64_t result;

  result = qword_1EE7A96F0;
  if (!qword_1EE7A96F0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ExtendedSearchScopeOptions, &type metadata for ExtendedSearchScopeOptions);
    atomic_store(result, (unint64_t *)&qword_1EE7A96F0);
  }
  return result;
}

_QWORD *sub_1A56C02B8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  OUTLINED_FUNCTION_155();
  swift_retain();
  return a1;
}

ValueMetadata *type metadata accessor for ExtendedSearchScopeOptions()
{
  return &type metadata for ExtendedSearchScopeOptions;
}

uint64_t OUTLINED_FUNCTION_0_48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_1A5693704(a1, v3, v2, v1);
}

#error "1A56C03CC: call analysis failed (funcsize=87)"

uint64_t ExtendedSearchSourceOptions.scopeOptions.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_34();
  sub_1A555ECF4(v1, v2);
  return v0;
}

uint64_t ExtendedSearchSourceOptions.init(sourceMailbox:scopeOptions:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  v3 = a1;
  if (!*(_QWORD *)(a1 + 16))
  {
    sub_1A555D250(a2, a3);
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

uint64_t ExtendedSearchSourceOptions.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1A5695738();
  if (!a4)
    return sub_1A594CE94();
  sub_1A594CE94();
  OUTLINED_FUNCTION_0_49();
  OUTLINED_FUNCTION_0_49();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1A5693704(a1, a3, a4, a5);
  OUTLINED_FUNCTION_149_0();
  OUTLINED_FUNCTION_149_0();
  OUTLINED_FUNCTION_149_0();
  return sub_1A555D250(a3, a4);
}

BOOL static ExtendedSearchSourceOptions.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  char v11;
  _BOOL8 v12;
  char v13;
  char v14;

  OUTLINED_FUNCTION_1_34();
  sub_1A5689F24();
  if ((v11 & 1) == 0)
    return 0;
  v12 = (v7 | a7) == 0;
  if (v7 && a7)
  {
    OUTLINED_FUNCTION_2_37();
    OUTLINED_FUNCTION_2_37();
    sub_1A555ECF4(a6, a7);
    sub_1A5690C88();
    v12 = 0;
    if ((v13 & 1) != 0)
    {
      sub_1A56913B0();
      if ((v14 & 1) != 0)
        v12 = 1;
    }
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_1A555D250(v8, v7);
  }
  return v12;
}

uint64_t ExtendedSearchSourceOptions.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[72];

  OUTLINED_FUNCTION_1_34();
  v4 = v3;
  sub_1A594CE64();
  ExtendedSearchSourceOptions.hash(into:)((uint64_t)v6, v4, v2, v1, v0);
  return sub_1A594CED0();
}

uint64_t sub_1A56C071C()
{
  return ExtendedSearchSourceOptions.hashValue.getter();
}

uint64_t sub_1A56C0728(uint64_t a1)
{
  uint64_t *v1;

  return ExtendedSearchSourceOptions.hash(into:)(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1A56C0734()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[72];

  v1 = *v0;
  v2 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  sub_1A594CE64();
  ExtendedSearchSourceOptions.hash(into:)((uint64_t)v6, v1, v2, v4, v3);
  return sub_1A594CED0();
}

BOOL sub_1A56C078C(uint64_t *a1, uint64_t *a2)
{
  return static ExtendedSearchSourceOptions.__derived_struct_equals(_:_:)(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2]);
}

void sub_1A56C07A8(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  Swift::Int v5;
  Swift::Int v6;
  char v7;
  Swift::String v8;
  Swift::Int v9;
  int v10;
  BOOL v11;
  int v12;
  uint64_t v13;
  BOOL v14;
  Swift::Int v15;
  Swift::Int v16;
  Swift::Int v17;
  char v18;
  Swift::String v19;
  int v20;
  int v21;

  v4 = a2 + 8;
  v5 = *(unsigned int *)(a2 + 20);
  sub_1A56814E0(10272, 0xE200000000000000, a2 + 8, v5);
  if ((v7 & 1) != 0)
  {
    v8._countAndFlagsBits = 10272;
    v8._object = (void *)0xE200000000000000;
    v6 = ByteBuffer._setStringSlowpath(_:at:)(v8, v5);
  }
  v9 = v6;
  v10 = *(_DWORD *)(a2 + 20);
  v11 = __CFADD__(v10, (_DWORD)v6);
  v12 = v10 + v6;
  if (v11)
  {
    __break(1u);
    goto LABEL_11;
  }
  *(_DWORD *)(a2 + 20) = v12;
  j__OUTLINED_FUNCTION_84(*a1, a1[1], a1[2], 0, 0xE000000000000000, 32, 0xE100000000000000, 0, (void *)0xE000000000000000);
  v14 = __OFADD__(v9, v13);
  v15 = v9 + v13;
  if (v14)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v16 = *(unsigned int *)(a2 + 20);
  sub_1A56814E0(41, 0xE100000000000000, v4, *(_DWORD *)(a2 + 20));
  if ((v18 & 1) != 0)
  {
    v19._countAndFlagsBits = 41;
    v19._object = (void *)0xE100000000000000;
    v17 = ByteBuffer._setStringSlowpath(_:at:)(v19, v16);
  }
  v20 = *(_DWORD *)(a2 + 20);
  v11 = __CFADD__(v20, (_DWORD)v17);
  v21 = v20 + v17;
  if (v11)
    goto LABEL_12;
  *(_DWORD *)(a2 + 20) = v21;
  if (__OFADD__(v15, v17))
LABEL_13:
    __break(1u);
}

unint64_t sub_1A56C08B8()
{
  unint64_t result;

  result = qword_1EE7A96F8;
  if (!qword_1EE7A96F8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for ExtendedSearchSourceOptions, &type metadata for ExtendedSearchSourceOptions);
    atomic_store(result, (unint64_t *)&qword_1EE7A96F8);
  }
  return result;
}

uint64_t destroy for ExtendedSearchSourceOptions(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 16);
  if (result)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

_QWORD *initializeWithCopy for ExtendedSearchSourceOptions(_QWORD *a1, _QWORD *a2)
{
  _OWORD *v4;
  uint64_t v5;

  *a1 = *a2;
  v4 = a1 + 1;
  v5 = a2[2];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v5)
  {
    a1[1] = a2[1];
    a1[2] = v5;
    a1[3] = a2[3];
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    *v4 = *(_OWORD *)(a2 + 1);
    a1[3] = a2[3];
  }
  return a1;
}

_QWORD *assignWithCopy for ExtendedSearchSourceOptions(_QWORD *a1, _QWORD *a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  *a1 = *a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = a1 + 1;
  v5 = a2 + 1;
  v6 = a2[2];
  if (a1[2])
  {
    if (v6)
    {
      a1[1] = a2[1];
      swift_retain();
      swift_release();
      a1[2] = a2[2];
      swift_retain();
      swift_release();
      a1[3] = a2[3];
      swift_retain();
      swift_release();
    }
    else
    {
      sub_1A56BFD80((uint64_t)(a1 + 1));
      v7 = a2[3];
      *v4 = *v5;
      a1[3] = v7;
    }
  }
  else if (v6)
  {
    a1[1] = a2[1];
    a1[2] = a2[2];
    a1[3] = a2[3];
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    v8 = *v5;
    a1[3] = a2[3];
    *v4 = v8;
  }
  return a1;
}

uint64_t assignWithTake for ExtendedSearchSourceOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 16);
  if (!v4)
  {
    sub_1A56BFD80(a1 + 8);
LABEL_5:
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    return a1;
  }
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  *(_QWORD *)(a1 + 16) = v4;
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for ExtendedSearchSourceOptions()
{
  return &type metadata for ExtendedSearchSourceOptions;
}

uint64_t OUTLINED_FUNCTION_0_49()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1A555ECF4(v1, v0);
}

uint64_t OUTLINED_FUNCTION_2_37()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1A555ECF4(v1, v0);
}

void EmailAddress.personName.getter()
{
  OUTLINED_FUNCTION_19_14();
  OUTLINED_FUNCTION_13_13();
  OUTLINED_FUNCTION_204();
  OUTLINED_FUNCTION_1();
}

void EmailAddress.personName.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_6_23();
  swift_release();
  *(_QWORD *)v1 = v3;
  *(_QWORD *)(v1 + 8) = v2;
  *(_BYTE *)(v1 + 22) = BYTE6(v0);
  *(_WORD *)(v1 + 20) = WORD2(v0);
  *(_DWORD *)(v1 + 16) = v0;
  OUTLINED_FUNCTION_8_1();
}

double (*EmailAddress.personName.modify())(_QWORD)
{
  return nullsub_1;
}

void EmailAddress.sourceRoot.getter()
{
  OUTLINED_FUNCTION_18_14();
  OUTLINED_FUNCTION_13_13();
  OUTLINED_FUNCTION_204();
  OUTLINED_FUNCTION_1();
}

void EmailAddress.sourceRoot.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_6_23();
  swift_release();
  *(_QWORD *)(v1 + 24) = v3;
  *(_QWORD *)(v1 + 32) = v2;
  *(_BYTE *)(v1 + 46) = BYTE6(v0);
  *(_WORD *)(v1 + 44) = WORD2(v0);
  *(_DWORD *)(v1 + 40) = v0;
  OUTLINED_FUNCTION_8_1();
}

double (*EmailAddress.sourceRoot.modify())(_QWORD)
{
  return nullsub_1;
}

void EmailAddress.mailbox.getter()
{
  OUTLINED_FUNCTION_15_19();
  OUTLINED_FUNCTION_13_13();
  OUTLINED_FUNCTION_204();
  OUTLINED_FUNCTION_1();
}

void EmailAddress.mailbox.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_6_23();
  swift_release();
  *(_QWORD *)(v1 + 48) = v3;
  *(_QWORD *)(v1 + 56) = v2;
  *(_BYTE *)(v1 + 70) = BYTE6(v0);
  *(_WORD *)(v1 + 68) = WORD2(v0);
  *(_DWORD *)(v1 + 64) = v0;
  OUTLINED_FUNCTION_8_1();
}

double (*EmailAddress.mailbox.modify())(_QWORD)
{
  return nullsub_1;
}

void EmailAddress.host.getter()
{
  OUTLINED_FUNCTION_22_16();
  OUTLINED_FUNCTION_13_13();
  OUTLINED_FUNCTION_204();
  OUTLINED_FUNCTION_1();
}

void EmailAddress.host.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_6_23();
  swift_release();
  *(_QWORD *)(v1 + 72) = v3;
  *(_QWORD *)(v1 + 80) = v2;
  *(_BYTE *)(v1 + 94) = BYTE6(v0);
  *(_WORD *)(v1 + 92) = WORD2(v0);
  *(_DWORD *)(v1 + 88) = v0;
  OUTLINED_FUNCTION_8_1();
}

double (*EmailAddress.host.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t EmailAddress.init(personName:sourceRoot:mailbox:host:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, int a10, __int16 a11, char a12, uint64_t a13, uint64_t a14, int a15, __int16 a16, char a17)
{
  *(_QWORD *)a9 = result;
  *(_QWORD *)(a9 + 8) = a2;
  *(_DWORD *)(a9 + 16) = a3;
  *(_BYTE *)(a9 + 22) = BYTE6(a3);
  *(_WORD *)(a9 + 20) = WORD2(a3);
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_DWORD *)(a9 + 40) = a6;
  *(_BYTE *)(a9 + 46) = BYTE6(a6);
  *(_WORD *)(a9 + 44) = WORD2(a6);
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_DWORD *)(a9 + 64) = a10;
  *(_BYTE *)(a9 + 70) = a12;
  *(_WORD *)(a9 + 68) = a11;
  *(_QWORD *)(a9 + 72) = a13;
  *(_QWORD *)(a9 + 80) = a14;
  *(_DWORD *)(a9 + 88) = a15;
  *(_BYTE *)(a9 + 94) = a17;
  *(_WORD *)(a9 + 92) = a16;
  return result;
}

void EmailAddress.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  sub_1A56A00DC(a1, *v1);
  OUTLINED_FUNCTION_17_16(v3, v1[3]);
  OUTLINED_FUNCTION_17_16(v4, v1[6]);
  sub_1A56A00DC(a1, v1[9]);
}

void static EmailAddress.__derived_struct_equals(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v4 = *a1;
  v5 = *a2;
  if (!*a1)
  {
    if (v5)
      return;
    goto LABEL_13;
  }
  if (!v5)
    return;
  v6 = a1[1];
  if (HIDWORD(v6) < v6)
  {
    __break(1u);
    goto LABEL_35;
  }
  v7 = a2[1];
  if (HIDWORD(v7) < v7)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if (HIDWORD(v6) - (_DWORD)v6 != HIDWORD(v7) - (_DWORD)v7)
    return;
  OUTLINED_FUNCTION_19_14();
  OUTLINED_FUNCTION_14_12();
  v8 = v8 && v4 == v5;
  if (!v8)
  {
    OUTLINED_FUNCTION_87();
    swift_retain();
    v9 = OUTLINED_FUNCTION_8_15();
    swift_release();
    OUTLINED_FUNCTION_4_4();
    if ((v9 & 1) == 0)
      return;
  }
LABEL_13:
  v10 = a1[3];
  v11 = a2[3];
  if (v10)
  {
    if (!v11)
      return;
    v12 = a1[4];
    if (HIDWORD(v12) >= v12)
    {
      v13 = a2[4];
      if (HIDWORD(v13) >= v13)
      {
        if (HIDWORD(v12) - (_DWORD)v12 != HIDWORD(v13) - (_DWORD)v13)
          return;
        OUTLINED_FUNCTION_18_14();
        OUTLINED_FUNCTION_14_12();
        if (!v8 || v10 != v11)
        {
          OUTLINED_FUNCTION_87();
          swift_retain();
          v15 = OUTLINED_FUNCTION_8_15();
          swift_release();
          OUTLINED_FUNCTION_4_4();
          if ((v15 & 1) == 0)
            return;
        }
        goto LABEL_25;
      }
LABEL_37:
      __break(1u);
      return;
    }
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if (v11)
    return;
LABEL_25:
  v16 = a1[6];
  v17 = a2[6];
  if (v16)
  {
    if (!v17)
      return;
    v18 = a1[7];
    OUTLINED_FUNCTION_15_19();
    v21 = a2[7];
    v22 = (v20 | (v19 << 32)) & 0xFFFFFFFFFFFFFFLL;
    v23 = (*((unsigned int *)a2 + 16) | ((unint64_t)(*((unsigned __int16 *)a2 + 34) | (*((unsigned __int8 *)a2
                                                                                              + 70) << 16)) << 32)) & 0xFFFFFFFFFFFFFFLL;
    swift_retain();
    swift_retain();
    LOBYTE(v18) = static ByteBuffer.== infix(_:_:)(v16, v18, v22, v17, v21, v23);
    OUTLINED_FUNCTION_4_4();
    swift_release();
    if ((v18 & 1) == 0)
      return;
  }
  else if (v17)
  {
    return;
  }
  v24 = a1[9];
  v25 = a2[9];
  if (v24)
  {
    if (v25)
    {
      v26 = a1[10];
      OUTLINED_FUNCTION_22_16();
      v29 = v28 | (v27 << 32);
      v30 = a2[10];
      v31 = *((unsigned int *)a2 + 22) | ((unint64_t)(*((unsigned __int16 *)a2 + 46) | (*((unsigned __int8 *)a2
                                                                                               + 94) << 16)) << 32);
      v32 = v29 & 0xFFFFFFFFFFFFFFLL;
      v33 = v31 & 0xFFFFFFFFFFFFFFLL;
      swift_retain();
      swift_retain();
      static ByteBuffer.== infix(_:_:)(v24, v26, v32, v25, v30, v33);
      OUTLINED_FUNCTION_4_4();
      swift_release();
    }
  }
}

uint64_t EmailAddress.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = sub_1A594CE64();
  OUTLINED_FUNCTION_4_27(v1, *v0, v0[1]);
  OUTLINED_FUNCTION_4_27(v2, v0[3], v0[4]);
  OUTLINED_FUNCTION_4_27(v3, v0[6], v0[7]);
  OUTLINED_FUNCTION_4_27(v4, v0[9], v0[10]);
  return sub_1A594CED0();
}

uint64_t sub_1A56C117C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _BYTE v6[72];

  v5 = *v0;
  v1 = v0[3];
  v2 = v0[6];
  v3 = v0[9];
  sub_1A594CE64();
  sub_1A56A00DC((uint64_t)v6, v5);
  sub_1A56A00DC((uint64_t)v6, v1);
  sub_1A56A00DC((uint64_t)v6, v2);
  sub_1A56A00DC((uint64_t)v6, v3);
  return sub_1A594CED0();
}

void sub_1A56C1284(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  Swift::Int v6;
  char v7;
  Swift::Int v8;
  int v9;
  Swift::Int v10;
  uint64_t v11;
  char v12;
  Swift::String v13;
  int v14;
  BOOL v15;
  BOOL v16;
  Swift::Int v17;
  Swift::Int v18;
  char v19;
  int v20;
  Swift::Int v21;
  uint64_t v22;
  char v23;
  int v24;
  Swift::Int v25;
  Swift::Int v26;
  char v27;
  int v28;
  Swift::Int v29;
  uint64_t v30;
  char v31;
  int v32;
  Swift::Int v33;
  Swift::Int v34;
  char v35;
  int v36;
  Swift::Int v37;
  uint64_t v38;
  char v39;
  int v40;
  Swift::Int v41;
  char v42;
  int v43;
  int v44;
  _BYTE v45[40];
  _BYTE v46[40];
  _BYTE v47[40];
  _BYTE v48[40];

  v2 = v1;
  v4 = v1 + 8;
  v5 = *(unsigned int *)(v1 + 20);
  sub_1A56814E0(40, 0xE100000000000000, v4, v5);
  if ((v7 & 1) != 0)
    v6 = OUTLINED_FUNCTION_0_50(40);
  v8 = v6;
  v9 = *(_DWORD *)(v2 + 20);
  v10 = (v9 + v6);
  if (__CFADD__(v9, (_DWORD)v6))
  {
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  *(_DWORD *)(v2 + 20) = v10;
  if (*(_QWORD *)a1)
  {
    ByteBufferView.init(_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned int *)(a1 + 16) | ((unint64_t)(*(unsigned __int16 *)(a1 + 20) | (*(unsigned __int8 *)(a1 + 22) << 16)) << 32), (uint64_t)v45);
    OUTLINED_FUNCTION_87();
    OUTLINED_FUNCTION_12_14((uint64_t)v45);
    v5 = v11;
    sub_1A553E5DC((uint64_t)v45);
    swift_release();
  }
  else
  {
    sub_1A56814E0(4999502, 0xE300000000000000, v4, v10);
    if ((v12 & 1) != 0)
    {
      v13._countAndFlagsBits = 4999502;
      v13._object = (void *)0xE300000000000000;
      v5 = v4;
      ByteBuffer._setStringSlowpath(_:at:)(v13, v10);
    }
    OUTLINED_FUNCTION_18_12();
    if (v15)
      goto LABEL_62;
    *(_DWORD *)(v2 + 20) = v14;
  }
  v16 = __OFADD__(v8, v5);
  v17 = v8 + v5;
  if (v16)
    goto LABEL_50;
  OUTLINED_FUNCTION_1_35();
  if ((v19 & 1) != 0)
    v18 = OUTLINED_FUNCTION_0_50(32);
  v20 = *(_DWORD *)(v2 + 20);
  if (__CFADD__(v20, (_DWORD)v18))
    goto LABEL_51;
  *(_DWORD *)(v2 + 20) = v20 + v18;
  v21 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  if (*(_QWORD *)(a1 + 24))
  {
    OUTLINED_FUNCTION_21_15(*(_QWORD *)(a1 + 32), *(unsigned int *)(a1 + 40) | ((unint64_t)(*(unsigned __int16 *)(a1 + 44) | (*(unsigned __int8 *)(a1 + 46) << 16)) << 32), (uint64_t)v46);
    OUTLINED_FUNCTION_87();
    OUTLINED_FUNCTION_12_14((uint64_t)v46);
    v5 = v22;
    sub_1A553E5DC((uint64_t)v46);
    OUTLINED_FUNCTION_48();
  }
  else
  {
    OUTLINED_FUNCTION_3_30();
    if ((v23 & 1) != 0)
      OUTLINED_FUNCTION_2_38();
    OUTLINED_FUNCTION_18_12();
    if (v15)
      goto LABEL_63;
    *(_DWORD *)(v2 + 20) = v24;
  }
  v25 = v21 + v5;
  if (__OFADD__(v21, v5))
    goto LABEL_53;
  OUTLINED_FUNCTION_1_35();
  if ((v27 & 1) != 0)
    v26 = OUTLINED_FUNCTION_0_50(32);
  v28 = *(_DWORD *)(v2 + 20);
  if (__CFADD__(v28, (_DWORD)v26))
    goto LABEL_54;
  *(_DWORD *)(v2 + 20) = v28 + v26;
  v29 = v25 + v26;
  if (__OFADD__(v25, v26))
  {
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  if (*(_QWORD *)(a1 + 48))
  {
    OUTLINED_FUNCTION_21_15(*(_QWORD *)(a1 + 56), *(unsigned int *)(a1 + 64) | ((unint64_t)(*(unsigned __int16 *)(a1 + 68) | (*(unsigned __int8 *)(a1 + 70) << 16)) << 32), (uint64_t)v47);
    OUTLINED_FUNCTION_87();
    OUTLINED_FUNCTION_12_14((uint64_t)v47);
    v5 = v30;
    sub_1A553E5DC((uint64_t)v47);
    OUTLINED_FUNCTION_48();
  }
  else
  {
    OUTLINED_FUNCTION_3_30();
    if ((v31 & 1) != 0)
      OUTLINED_FUNCTION_2_38();
    OUTLINED_FUNCTION_18_12();
    if (v15)
      goto LABEL_64;
    *(_DWORD *)(v2 + 20) = v32;
  }
  v33 = v29 + v5;
  if (__OFADD__(v29, v5))
    goto LABEL_56;
  OUTLINED_FUNCTION_1_35();
  if ((v35 & 1) != 0)
    v34 = OUTLINED_FUNCTION_0_50(32);
  v36 = *(_DWORD *)(v2 + 20);
  if (__CFADD__(v36, (_DWORD)v34))
    goto LABEL_57;
  *(_DWORD *)(v2 + 20) = v36 + v34;
  v37 = v33 + v34;
  if (__OFADD__(v33, v34))
  {
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  if (*(_QWORD *)(a1 + 72))
  {
    OUTLINED_FUNCTION_21_15(*(_QWORD *)(a1 + 80), *(unsigned int *)(a1 + 88) | ((unint64_t)(*(unsigned __int16 *)(a1 + 92) | (*(unsigned __int8 *)(a1 + 94) << 16)) << 32), (uint64_t)v48);
    OUTLINED_FUNCTION_87();
    OUTLINED_FUNCTION_12_14((uint64_t)v48);
    v5 = v38;
    sub_1A553E5DC((uint64_t)v48);
    OUTLINED_FUNCTION_48();
  }
  else
  {
    OUTLINED_FUNCTION_3_30();
    if ((v39 & 1) != 0)
      OUTLINED_FUNCTION_2_38();
    OUTLINED_FUNCTION_18_12();
    if (v15)
      goto LABEL_65;
    *(_DWORD *)(v2 + 20) = v40;
  }
  if (__OFADD__(v37, v5))
    goto LABEL_59;
  sub_1A56814E0(41, 0xE100000000000000, v4, *(_DWORD *)(v2 + 20));
  if ((v42 & 1) != 0)
    v41 = OUTLINED_FUNCTION_0_50(41);
  v43 = *(_DWORD *)(v2 + 20);
  v15 = __CFADD__(v43, (_DWORD)v41);
  v44 = v43 + v41;
  if (v15)
    goto LABEL_60;
  *(_DWORD *)(v2 + 20) = v44;
  if (__OFADD__(v37 + v5, v41))
  {
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
  }
}

unint64_t sub_1A56C15E8()
{
  unint64_t result;

  result = qword_1EE7A9700;
  if (!qword_1EE7A9700)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for EmailAddress, &type metadata for EmailAddress);
    atomic_store(result, (unint64_t *)&qword_1EE7A9700);
  }
  return result;
}

uint64_t destroy for EmailAddress()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EmailAddress(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 19) = *(_DWORD *)(a2 + 19);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 43) = *(_DWORD *)(a2 + 43);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 67) = *(_DWORD *)(a2 + 67);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_DWORD *)(a1 + 91) = *(_DWORD *)(a2 + 91);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  v6 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v6;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for EmailAddress(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_WORD *)(a1 + 20) = *(_WORD *)(a2 + 20);
  *(_BYTE *)(a1 + 22) = *(_BYTE *)(a2 + 22);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_WORD *)(a1 + 44) = *(_WORD *)(a2 + 44);
  *(_BYTE *)(a1 + 46) = *(_BYTE *)(a2 + 46);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_WORD *)(a1 + 68) = *(_WORD *)(a2 + 68);
  *(_BYTE *)(a1 + 70) = *(_BYTE *)(a2 + 70);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_retain();
  swift_release();
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(_WORD *)(a1 + 92) = *(_WORD *)(a2 + 92);
  *(_BYTE *)(a1 + 94) = *(_BYTE *)(a2 + 94);
  return a1;
}

void *__swift_memcpy95_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x5FuLL);
}

uint64_t assignWithTake for EmailAddress(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_WORD *)(a1 + 20) = *(_WORD *)(a2 + 20);
  *(_BYTE *)(a1 + 22) = *(_BYTE *)(a2 + 22);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_WORD *)(a1 + 44) = *(_WORD *)(a2 + 44);
  *(_BYTE *)(a1 + 46) = *(_BYTE *)(a2 + 46);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_WORD *)(a1 + 68) = *(_WORD *)(a2 + 68);
  *(_BYTE *)(a1 + 70) = *(_BYTE *)(a2 + 70);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_release();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(_WORD *)(a1 + 92) = *(_WORD *)(a2 + 92);
  *(_BYTE *)(a1 + 94) = *(_BYTE *)(a2 + 94);
  return a1;
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EmailAddress(uint64_t *a1, unsigned int a2)
{
  int v2;
  uint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 95))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EmailAddress(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 94) = 0;
    *(_WORD *)(result + 92) = 0;
    *(_DWORD *)(result + 88) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 95) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 95) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for EmailAddress()
{
  return &type metadata for EmailAddress;
}

{
  return &type metadata for EmailAddress;
}

Swift::Int OUTLINED_FUNCTION_0_50(uint64_t a1)
{
  Swift::Int v1;
  unint64_t v2;

  v2 = 0xE100000000000000;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v1);
}

void OUTLINED_FUNCTION_1_35()
{
  uint64_t v0;
  uint64_t v1;

  sub_1A56814E0(32, 0xE100000000000000, v1, *(_DWORD *)(v0 + 20));
}

Swift::Int OUTLINED_FUNCTION_2_38()
{
  Swift::Int v0;
  Swift::String v1;

  v1._countAndFlagsBits = 4999502;
  v1._object = (void *)0xE300000000000000;
  return ByteBuffer._setStringSlowpath(_:at:)(v1, v0);
}

void OUTLINED_FUNCTION_3_30()
{
  uint64_t v0;
  Swift::UInt32 v1;

  sub_1A56814E0(4999502, 0xE300000000000000, v0, v1);
}

void OUTLINED_FUNCTION_4_27(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_1A56A00DC((uint64_t)va, a2);
}

uint64_t OUTLINED_FUNCTION_8_15()
{
  return sub_1A566B918();
}

void OUTLINED_FUNCTION_12_14(uint64_t a1)
{
  sub_1A56BA79C(a1);
}

uint64_t OUTLINED_FUNCTION_13_13()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_17_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1A56A00DC(v2, a2);
}

uint64_t OUTLINED_FUNCTION_21_15@<X0>(unint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return ByteBufferView.init(_:)(v3, a1, a2, a3);
}

uint64_t EncodedAuthenticationType.authenticationType.getter(uint64_t a1)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t EncodedAuthenticationType.authenticationType.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

double (*EncodedAuthenticationType.authenticationType.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t EncodedAuthenticationType.hash(into:)()
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_2_22();
  return swift_bridgeObjectRelease();
}

uint64_t static EncodedAuthenticationType.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4)
    return 1;
  else
    return sub_1A594CD38();
}

uint64_t EncodedAuthenticationType.hashValue.getter()
{
  sub_1A594CE64();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_2_22();
  swift_bridgeObjectRelease();
  return sub_1A594CED0();
}

uint64_t sub_1A56C1C4C()
{
  return EncodedAuthenticationType.hashValue.getter();
}

uint64_t sub_1A56C1C54()
{
  return EncodedAuthenticationType.hash(into:)();
}

unint64_t sub_1A56C1C60()
{
  unint64_t result;

  result = qword_1EE7A9708;
  if (!qword_1EE7A9708)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for EncodedAuthenticationType, &type metadata for EncodedAuthenticationType);
    atomic_store(result, (unint64_t *)&qword_1EE7A9708);
  }
  return result;
}

uint64_t sub_1A56C1C9C(uint64_t *a1, uint64_t *a2)
{
  return static EncodedAuthenticationType.__derived_struct_equals(_:_:)(*a1, a1[1], *a2, a2[1]);
}

ValueMetadata *type metadata accessor for EncodedAuthenticationType()
{
  return &type metadata for EncodedAuthenticationType;
}

uint64_t EncodedMailbox.mailbox.getter(uint64_t a1)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t EncodedMailbox.mailbox.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

double (*EncodedMailbox.mailbox.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t EncodedMailbox.hash(into:)()
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_2_22();
  return swift_bridgeObjectRelease();
}

uint64_t static EncodedMailbox.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4)
    return 1;
  else
    return sub_1A594CD38();
}

uint64_t EncodedMailbox.hashValue.getter()
{
  sub_1A594CE64();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_2_22();
  swift_bridgeObjectRelease();
  return sub_1A594CED0();
}

uint64_t sub_1A56C1DE8()
{
  return EncodedMailbox.hashValue.getter();
}

uint64_t sub_1A56C1DF0()
{
  return EncodedMailbox.hash(into:)();
}

unint64_t sub_1A56C1DFC()
{
  unint64_t result;

  result = qword_1EE7A9710;
  if (!qword_1EE7A9710)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for EncodedMailbox, &type metadata for EncodedMailbox);
    atomic_store(result, (unint64_t *)&qword_1EE7A9710);
  }
  return result;
}

uint64_t sub_1A56C1E38(uint64_t *a1, uint64_t *a2)
{
  return static EncodedMailbox.__derived_struct_equals(_:_:)(*a1, a1[1], *a2, a2[1]);
}

ValueMetadata *type metadata accessor for EncodedMailbox()
{
  return &type metadata for EncodedMailbox;
}

uint64_t EncodedSearch.query.getter(uint64_t a1)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t EncodedSearch.query.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

double (*EncodedSearch.query.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t EncodedSearch.hash(into:)()
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_2_22();
  return swift_bridgeObjectRelease();
}

uint64_t static EncodedSearch.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4)
    return 1;
  else
    return sub_1A594CD38();
}

uint64_t EncodedSearch.hashValue.getter()
{
  sub_1A594CE64();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_2_22();
  swift_bridgeObjectRelease();
  return sub_1A594CED0();
}

uint64_t sub_1A56C1F84()
{
  return EncodedSearch.hashValue.getter();
}

uint64_t sub_1A56C1F8C()
{
  return EncodedSearch.hash(into:)();
}

unint64_t sub_1A56C1F98()
{
  unint64_t result;

  result = qword_1EE7A9718;
  if (!qword_1EE7A9718)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for EncodedSearch, &type metadata for EncodedSearch);
    atomic_store(result, (unint64_t *)&qword_1EE7A9718);
  }
  return result;
}

uint64_t sub_1A56C1FD4(uint64_t *a1, uint64_t *a2)
{
  return static EncodedSearch.__derived_struct_equals(_:_:)(*a1, a1[1], *a2, a2[1]);
}

ValueMetadata *type metadata accessor for EncodedSearch()
{
  return &type metadata for EncodedSearch;
}

uint64_t EncodedSearchQuery.mailboxUIDValidity.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

void EncodedSearchQuery.mailboxUIDValidity.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  swift_bridgeObjectRelease();
  *(_QWORD *)v3 = a1;
  *(_QWORD *)(v3 + 8) = a2;
  *(_DWORD *)(v3 + 16) = a3;
  *(_BYTE *)(v3 + 20) = BYTE4(a3) & 1;
  OUTLINED_FUNCTION_8_1();
}

double (*EncodedSearchQuery.mailboxUIDValidity.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t EncodedSearchQuery.encodedSearch.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

void EncodedSearchQuery.encodedSearch.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  OUTLINED_FUNCTION_8_1();
}

double (*EncodedSearchQuery.encodedSearch.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t EncodedSearchQuery.init(mailboxUIDValidity:encodedSearch:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  *(_QWORD *)a6 = result;
  *(_QWORD *)(a6 + 8) = a2;
  *(_DWORD *)(a6 + 16) = a3;
  *(_BYTE *)(a6 + 20) = BYTE4(a3) & 1;
  *(_QWORD *)(a6 + 24) = a4;
  *(_QWORD *)(a6 + 32) = a5;
  return result;
}

uint64_t EncodedSearchQuery.hash(into:)()
{
  uint64_t v0;
  _BYTE v2[21];

  *(_OWORD *)v2 = *(_OWORD *)v0;
  *(_QWORD *)&v2[13] = *(_QWORD *)(v0 + 13);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  sub_1A594CE94();
  if (v2[20] != 1)
    sub_1A594CEAC();
  sub_1A5503278((uint64_t)v2);
  if (!*(_QWORD *)(v0 + 32))
    return sub_1A594CE94();
  sub_1A594CE94();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  return swift_bridgeObjectRelease();
}

uint64_t static EncodedSearchQuery.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  int v4;
  char v5;
  int v6;
  char v7;
  BOOL v8;
  char v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;

  v4 = *(_DWORD *)(a1 + 16);
  v5 = *(_BYTE *)(a1 + 20);
  v6 = *(_DWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 20);
  v8 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v8 || (v9 = sub_1A594CD38(), result = 0, (v9 & 1) != 0))
  {
    if ((v5 & 1) != 0)
    {
      if ((v7 & 1) == 0)
        return 0;
    }
    else
    {
      result = 0;
      if ((v7 & 1) != 0 || v4 != v6)
        return result;
    }
    v11 = *(_QWORD *)(a1 + 32);
    v12 = *(_QWORD *)(a2 + 32);
    if (v11)
    {
      if (v12)
      {
        v13 = *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24) && v11 == v12;
        if (v13 || (sub_1A594CD38() & 1) != 0)
          return 1;
      }
    }
    else if (!v12)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t EncodedSearchQuery.hashValue.getter()
{
  sub_1A594CE64();
  EncodedSearchQuery.hash(into:)();
  return sub_1A594CED0();
}

uint64_t sub_1A56C22F0()
{
  sub_1A594CE64();
  EncodedSearchQuery.hash(into:)();
  return sub_1A594CED0();
}

void sub_1A56C232C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::String v4;
  uint64_t v5;
  Swift::Int v6;
  Swift::Int v7;
  Swift::Int v8;
  char v9;
  char v10;
  int v11;
  Swift::Int v12;
  Swift::Int v13;
  uint64_t v14;
  unint64_t v15;
  Swift::Int v16;
  char v17;
  Swift::String v18;
  Swift::Int v19;
  int v20;
  BOOL v21;
  int v22;
  uint64_t v23;
  Swift::Int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27[3];
  _BYTE v28[21];

  v2 = v1;
  *(_OWORD *)v28 = *(_OWORD *)a1;
  *(_QWORD *)&v28[13] = *(_QWORD *)(a1 + 13);
  v4 = *(Swift::String *)v28;
  v5 = v1 + 8;
  v6 = *(unsigned int *)(v2 + 20);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A56814E0(*(uint64_t *)v28, *(unint64_t *)&v28[8], v5, v6);
  v8 = v7;
  v10 = v9;
  sub_1A5503278((uint64_t)v28);
  if ((v10 & 1) != 0)
    v8 = ByteBuffer._setStringSlowpath(_:at:)(v4, v6);
  v11 = *(_DWORD *)(v2 + 20);
  v12 = (v11 + v8);
  if (__CFADD__(v11, (_DWORD)v8))
  {
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  *(_DWORD *)(v2 + 20) = v12;
  if ((v28[20] & 1) != 0)
  {
    v13 = 0;
  }
  else
  {
    v14 = OUTLINED_FUNCTION_0_51();
    sub_1A56814E0(v14, v15, v5, v12);
    if ((v17 & 1) != 0)
    {
      v18._countAndFlagsBits = OUTLINED_FUNCTION_0_51();
      v16 = ByteBuffer._setStringSlowpath(_:at:)(v18, v12);
    }
    v19 = v16;
    v20 = *(_DWORD *)(v2 + 20);
    v21 = __CFADD__(v20, (_DWORD)v16);
    v22 = v20 + v16;
    if (v21)
      goto LABEL_19;
    *(_DWORD *)(v2 + 20) = v22;
    v23 = sub_1A570EB8C();
    v13 = v19 + v23;
    if (__OFADD__(v19, v23))
    {
LABEL_20:
      __break(1u);
      return;
    }
  }
  v24 = v8 + v13;
  if (__OFADD__(v8, v13))
    goto LABEL_17;
  v25 = *(_QWORD *)(a1 + 32);
  if (v25)
  {
    v27[0] = *(_QWORD *)(a1 + 24);
    v27[1] = v25;
    sub_1A56C248C(v27, v2);
  }
  else
  {
    v26 = 0;
  }
  if (__OFADD__(v24, v26))
    goto LABEL_18;
}

void sub_1A56C248C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  Swift::Int v5;
  Swift::Int v6;
  char v7;
  Swift::String v8;
  Swift::Int v9;
  int v10;
  Swift::Int v11;
  void *v12;
  uint64_t v13;
  Swift::Int v14;
  Swift::Int v15;
  char v16;
  char v17;
  Swift::String v18;
  int v19;
  BOOL v20;
  int v21;

  v4 = a2 + 8;
  v5 = *(unsigned int *)(a2 + 20);
  sub_1A56814E0(63, 0xE100000000000000, a2 + 8, v5);
  if ((v7 & 1) != 0)
  {
    v8._countAndFlagsBits = 63;
    v8._object = (void *)0xE100000000000000;
    v6 = ByteBuffer._setStringSlowpath(_:at:)(v8, v5);
  }
  v9 = v6;
  v10 = *(_DWORD *)(a2 + 20);
  v11 = (v10 + v6);
  if (__CFADD__(v10, (_DWORD)v6))
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  *(_DWORD *)(a2 + 20) = v11;
  v13 = *a1;
  v12 = (void *)a1[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A56814E0(v13, (unint64_t)v12, v4, v11);
  v15 = v14;
  v17 = v16;
  swift_bridgeObjectRelease();
  if ((v17 & 1) != 0)
  {
    v18._countAndFlagsBits = v13;
    v18._object = v12;
    v15 = ByteBuffer._setStringSlowpath(_:at:)(v18, v11);
  }
  v19 = *(_DWORD *)(a2 + 20);
  v20 = __CFADD__(v19, (_DWORD)v15);
  v21 = v19 + v15;
  if (v20)
    goto LABEL_10;
  *(_DWORD *)(a2 + 20) = v21;
  if (__OFADD__(v9, v15))
LABEL_11:
    __break(1u);
}

unint64_t sub_1A56C2584()
{
  unint64_t result;

  result = qword_1EE7A9720;
  if (!qword_1EE7A9720)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for EncodedSearchQuery, &type metadata for EncodedSearchQuery);
    atomic_store(result, (unint64_t *)&qword_1EE7A9720);
  }
  return result;
}

uint64_t destroy for EncodedSearchQuery()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EncodedSearchQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for EncodedSearchQuery(uint64_t a1, uint64_t a2)
{
  int v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v4 = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_DWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for EncodedSearchQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for EncodedSearchQuery()
{
  return &type metadata for EncodedSearchQuery;
}

uint64_t OUTLINED_FUNCTION_0_51()
{
  return 0x494C41564449553BLL;
}

uint64_t EncodedSection.section.getter(uint64_t a1)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t EncodedSection.section.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

double (*EncodedSection.section.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t EncodedSection.hash(into:)()
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_2_22();
  return swift_bridgeObjectRelease();
}

uint64_t static EncodedSection.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4)
    return 1;
  else
    return sub_1A594CD38();
}

uint64_t EncodedSection.hashValue.getter()
{
  sub_1A594CE64();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_2_22();
  swift_bridgeObjectRelease();
  return sub_1A594CED0();
}

uint64_t sub_1A56C2860()
{
  return EncodedSection.hashValue.getter();
}

uint64_t sub_1A56C2868()
{
  return EncodedSection.hash(into:)();
}

unint64_t sub_1A56C2874()
{
  unint64_t result;

  result = qword_1EE7A9728;
  if (!qword_1EE7A9728)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for EncodedSection, &type metadata for EncodedSection);
    atomic_store(result, (unint64_t *)&qword_1EE7A9728);
  }
  return result;
}

uint64_t sub_1A56C28B0(uint64_t *a1, uint64_t *a2)
{
  return static EncodedSection.__derived_struct_equals(_:_:)(*a1, a1[1], *a2, a2[1]);
}

ValueMetadata *type metadata accessor for EncodedSection()
{
  return &type metadata for EncodedSection;
}

uint64_t static EncodedAuthenticatedURL.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4)
    return 1;
  else
    return sub_1A594CD38();
}

uint64_t EncodedAuthenticatedURL.data.getter(uint64_t a1)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t EncodedAuthenticatedURL.data.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

double (*EncodedAuthenticatedURL.data.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t EncodedAuthenticatedURL.hash(into:)()
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_2_22();
  return swift_bridgeObjectRelease();
}

uint64_t EncodedAuthenticatedURL.hashValue.getter()
{
  sub_1A594CE64();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_2_22();
  swift_bridgeObjectRelease();
  return sub_1A594CED0();
}

uint64_t sub_1A56C29FC()
{
  return EncodedAuthenticatedURL.hashValue.getter();
}

uint64_t sub_1A56C2A04()
{
  return EncodedAuthenticatedURL.hash(into:)();
}

unint64_t sub_1A56C2A10()
{
  unint64_t result;

  result = qword_1EE7A9730;
  if (!qword_1EE7A9730)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for EncodedAuthenticatedURL, &type metadata for EncodedAuthenticatedURL);
    atomic_store(result, (unint64_t *)&qword_1EE7A9730);
  }
  return result;
}

uint64_t sub_1A56C2A4C(uint64_t *a1, uint64_t *a2)
{
  return static EncodedAuthenticatedURL.__derived_struct_equals(_:_:)(*a1, a1[1], *a2, a2[1]);
}

ValueMetadata *type metadata accessor for EncodedAuthenticatedURL()
{
  return &type metadata for EncodedAuthenticatedURL;
}

uint64_t static EncodedUser.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4)
    return 1;
  else
    return sub_1A594CD38();
}

uint64_t EncodedUser.data.getter(uint64_t a1)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t EncodedUser.data.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

double (*EncodedUser.data.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t EncodedUser.hash(into:)()
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_2_22();
  return swift_bridgeObjectRelease();
}

uint64_t EncodedUser.hashValue.getter()
{
  sub_1A594CE64();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_2_22();
  swift_bridgeObjectRelease();
  return sub_1A594CED0();
}

uint64_t sub_1A56C2B98()
{
  return EncodedUser.hashValue.getter();
}

uint64_t sub_1A56C2BA0()
{
  return EncodedUser.hash(into:)();
}

unint64_t sub_1A56C2BAC()
{
  unint64_t result;

  result = qword_1EE7A9738;
  if (!qword_1EE7A9738)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for EncodedUser, &type metadata for EncodedUser);
    atomic_store(result, (unint64_t *)&qword_1EE7A9738);
  }
  return result;
}

uint64_t sub_1A56C2BE8(uint64_t *a1, uint64_t *a2)
{
  return static EncodedUser.__derived_struct_equals(_:_:)(*a1, a1[1], *a2, a2[1]);
}

ValueMetadata *type metadata accessor for EncodedUser()
{
  return &type metadata for EncodedUser;
}

uint64_t EntryFlagName.flag.getter(uint64_t a1)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t EntryFlagName.flag.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

double (*EntryFlagName.flag.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t EntryFlagName.hash(into:)()
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_2_22();
  return swift_bridgeObjectRelease();
}

uint64_t static EntryFlagName.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4)
    return 1;
  else
    return sub_1A594CD38();
}

void EntryFlagName.hashValue.getter()
{
  sub_1A594CE64();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_2_22();
  swift_bridgeObjectRelease();
  sub_1A594CED0();
  OUTLINED_FUNCTION_23_6();
}

void sub_1A56C2D30()
{
  EntryFlagName.hashValue.getter();
}

uint64_t sub_1A56C2D38()
{
  return EntryFlagName.hash(into:)();
}

void sub_1A56C2D40()
{
  sub_1A594CE64();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A594B1D8();
  swift_bridgeObjectRelease();
  sub_1A594CED0();
  OUTLINED_FUNCTION_23_6();
}

unint64_t sub_1A56C2D94()
{
  unint64_t result;

  result = qword_1EE7A9740;
  if (!qword_1EE7A9740)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for EntryFlagName, &type metadata for EntryFlagName);
    atomic_store(result, (unint64_t *)&qword_1EE7A9740);
  }
  return result;
}

uint64_t sub_1A56C2DD0(uint64_t *a1, uint64_t *a2)
{
  return static EntryFlagName.__derived_struct_equals(_:_:)(*a1, a1[1], *a2, a2[1]);
}

ValueMetadata *type metadata accessor for EntryFlagName()
{
  return &type metadata for EntryFlagName;
}

void sub_1A56C2DF4(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  Swift::Int v7;
  uint64_t v8;
  unint64_t v9;
  Swift::Int v10;
  char v11;
  Swift::String v12;
  Swift::Int v13;
  int v14;
  Swift::Int v15;
  Swift::Int v16;
  Swift::Int v17;
  char v18;
  char v19;
  Swift::String v20;
  int v21;
  Swift::Int v22;
  Swift::Int v23;
  char v24;
  Swift::String v25;
  int v26;
  BOOL v27;
  int v28;

  v3 = v2;
  v6 = v2 + 8;
  v7 = *(unsigned int *)(v3 + 20);
  v8 = OUTLINED_FUNCTION_0_52();
  sub_1A56814E0(v8, v9, v6, v7);
  if ((v11 & 1) != 0)
  {
    v12._countAndFlagsBits = OUTLINED_FUNCTION_0_52();
    v10 = ByteBuffer._setStringSlowpath(_:at:)(v12, v7);
  }
  v13 = v10;
  v14 = *(_DWORD *)(v3 + 20);
  v15 = (v14 + v10);
  if (__CFADD__(v14, (_DWORD)v10))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  *(_DWORD *)(v3 + 20) = v15;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A56814E0(a1, (unint64_t)a2, v6, v15);
  v17 = v16;
  v19 = v18;
  swift_bridgeObjectRelease();
  if ((v19 & 1) != 0)
  {
    v20._countAndFlagsBits = a1;
    v20._object = a2;
    v17 = ByteBuffer._setStringSlowpath(_:at:)(v20, v15);
  }
  v21 = *(_DWORD *)(v3 + 20);
  v22 = (v21 + v17);
  if (__CFADD__(v21, (_DWORD)v17))
    goto LABEL_14;
  *(_DWORD *)(v3 + 20) = v22;
  if (__OFADD__(v13, v17))
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  sub_1A56814E0(34, 0xE100000000000000, v6, v21 + v17);
  if ((v24 & 1) != 0)
  {
    v25._countAndFlagsBits = 34;
    v25._object = (void *)0xE100000000000000;
    v23 = ByteBuffer._setStringSlowpath(_:at:)(v25, v22);
  }
  v26 = *(_DWORD *)(v3 + 20);
  v27 = __CFADD__(v26, (_DWORD)v23);
  v28 = v26 + v23;
  if (v27)
    goto LABEL_16;
  *(_DWORD *)(v3 + 20) = v28;
  if (!__OFADD__(v13 + v17, v23))
  {
    OUTLINED_FUNCTION_23_6();
    return;
  }
LABEL_17:
  __break(1u);
}

uint64_t OUTLINED_FUNCTION_0_52()
{
  return 0x2F7367616C662F22;
}

char *EntryKindRequest.private.unsafeMutableAddressor()
{
  return static EntryKindRequest.private;
}

uint64_t static EntryKindRequest.private.getter()
{
  return OUTLINED_FUNCTION_1_36((uint64_t *)static EntryKindRequest.private);
}

uint64_t static EntryKindRequest.private.setter(uint64_t a1, uint64_t a2)
{
  return OUTLINED_FUNCTION_0_53(a1, a2, static EntryKindRequest.private);
}

void static EntryKindRequest.private.modify()
{
  OUTLINED_FUNCTION_2_39();
  OUTLINED_FUNCTION_1();
}

char *EntryKindRequest.shared.unsafeMutableAddressor()
{
  return static EntryKindRequest.shared;
}

uint64_t static EntryKindRequest.shared.getter()
{
  return OUTLINED_FUNCTION_1_36((uint64_t *)static EntryKindRequest.shared);
}

uint64_t static EntryKindRequest.shared.setter(uint64_t a1, uint64_t a2)
{
  return OUTLINED_FUNCTION_0_53(a1, a2, static EntryKindRequest.shared);
}

void static EntryKindRequest.shared.modify()
{
  OUTLINED_FUNCTION_2_39();
  OUTLINED_FUNCTION_1();
}

void *EntryKindRequest.all.unsafeMutableAddressor()
{
  return &static EntryKindRequest.all;
}

uint64_t static EntryKindRequest.all.getter()
{
  return OUTLINED_FUNCTION_1_36((uint64_t *)&static EntryKindRequest.all);
}

uint64_t sub_1A56C3004(uint64_t *a1)
{
  uint64_t v2;

  swift_beginAccess();
  v2 = *a1;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v2;
}

uint64_t static EntryKindRequest.all.setter(uint64_t a1, uint64_t a2)
{
  return OUTLINED_FUNCTION_0_53(a1, a2, static EntryKindRequest.all);
}

uint64_t sub_1A56C3060(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4)
{
  swift_beginAccess();
  *a3 = a1;
  *a4 = a2;
  return swift_bridgeObjectRelease();
}

void static EntryKindRequest.all.modify()
{
  OUTLINED_FUNCTION_2_39();
  OUTLINED_FUNCTION_1();
}

uint64_t EntryKindRequest.hash(into:)()
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_2_22();
  return swift_bridgeObjectRelease();
}

uint64_t static EntryKindRequest.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4)
    return 1;
  else
    return sub_1A594CD38();
}

uint64_t EntryKindRequest.hashValue.getter()
{
  sub_1A594CE64();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_2_22();
  swift_bridgeObjectRelease();
  return sub_1A594CED0();
}

uint64_t sub_1A56C319C()
{
  return EntryKindRequest.hashValue.getter();
}

uint64_t sub_1A56C31A4()
{
  return EntryKindRequest.hash(into:)();
}

unint64_t sub_1A56C31B0()
{
  unint64_t result;

  result = qword_1EE7A9778;
  if (!qword_1EE7A9778)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for EntryKindRequest, &type metadata for EntryKindRequest);
    atomic_store(result, (unint64_t *)&qword_1EE7A9778);
  }
  return result;
}

uint64_t sub_1A56C31EC(uint64_t *a1, uint64_t *a2)
{
  return static EntryKindRequest.__derived_struct_equals(_:_:)(*a1, a1[1], *a2, a2[1]);
}

ValueMetadata *type metadata accessor for EntryKindRequest()
{
  return &type metadata for EntryKindRequest;
}

uint64_t OUTLINED_FUNCTION_0_53(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  return sub_1A56C3060(a1, a2, a3, a3 + 1);
}

uint64_t OUTLINED_FUNCTION_1_36(uint64_t *a1)
{
  return sub_1A56C3004(a1);
}

uint64_t OUTLINED_FUNCTION_2_39()
{
  return swift_beginAccess();
}

char *EntryKindResponse.private.unsafeMutableAddressor()
{
  return static EntryKindResponse.private;
}

uint64_t static EntryKindResponse.private.getter()
{
  return OUTLINED_FUNCTION_1_36((uint64_t *)static EntryKindResponse.private);
}

uint64_t static EntryKindResponse.private.setter(uint64_t a1, uint64_t a2)
{
  return OUTLINED_FUNCTION_0_53(a1, a2, static EntryKindResponse.private);
}

uint64_t (*static EntryKindResponse.private.modify())()
{
  OUTLINED_FUNCTION_2_39();
  return j_j__swift_endAccess;
}

char *EntryKindResponse.shared.unsafeMutableAddressor()
{
  return static EntryKindResponse.shared;
}

uint64_t static EntryKindResponse.shared.getter()
{
  return OUTLINED_FUNCTION_1_36((uint64_t *)static EntryKindResponse.shared);
}

uint64_t static EntryKindResponse.shared.setter(uint64_t a1, uint64_t a2)
{
  return OUTLINED_FUNCTION_0_53(a1, a2, static EntryKindResponse.shared);
}

uint64_t (*static EntryKindResponse.shared.modify())()
{
  OUTLINED_FUNCTION_2_39();
  return j__swift_endAccess;
}

uint64_t EntryKindResponse.hash(into:)()
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_2_22();
  return swift_bridgeObjectRelease();
}

uint64_t static EntryKindResponse.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4)
    return 1;
  else
    return sub_1A594CD38();
}

uint64_t EntryKindResponse.hashValue.getter()
{
  sub_1A594CE64();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_2_22();
  swift_bridgeObjectRelease();
  return sub_1A594CED0();
}

uint64_t sub_1A56C3390()
{
  return EntryKindResponse.hashValue.getter();
}

uint64_t sub_1A56C3398()
{
  return EntryKindResponse.hash(into:)();
}

unint64_t sub_1A56C33A4()
{
  unint64_t result;

  result = qword_1EE7A97A0;
  if (!qword_1EE7A97A0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for EntryKindResponse, &type metadata for EntryKindResponse);
    atomic_store(result, (unint64_t *)&qword_1EE7A97A0);
  }
  return result;
}

uint64_t sub_1A56C33E0(uint64_t *a1, uint64_t *a2)
{
  return static EntryKindResponse.__derived_struct_equals(_:_:)(*a1, a1[1], *a2, a2[1]);
}

ValueMetadata *type metadata accessor for EntryKindResponse()
{
  return &type metadata for EntryKindResponse;
}

void sub_1A56C3404(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Swift::Int v9;
  Swift::Int v10;
  Swift::Int v11;
  char v12;
  char v13;
  Swift::String v14;
  int v15;
  uint64_t v16;
  Swift::Int v17;
  Swift::Int v18;
  char v19;
  char v20;
  Swift::String v21;
  int v22;
  BOOL v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  int v30;
  uint64_t v31;

  v3 = *(_QWORD *)(a1 + 24);
  v2 = *(_QWORD *)(a1 + 32);
  v4 = __OFSUB__(v2, v3);
  v5 = v2 < v3;
  v6 = v2 - v3;
  if (v5)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (v4)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v7 = v1;
  v8 = a1;
  v31 = v6;
  sub_1A594CC9C();
  sub_1A594B5F8();
  swift_bridgeObjectRelease();
  sub_1A594B5F8();
  v9 = *(unsigned int *)(v1 + 20);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A56814E0(31614, 0xE200000000000000, v1 + 8, v9);
  v11 = v10;
  v13 = v12;
  swift_bridgeObjectRelease();
  if ((v13 & 1) != 0)
  {
    v14._countAndFlagsBits = 31614;
    v14._object = (void *)0xE200000000000000;
    v11 = ByteBuffer._setStringSlowpath(_:at:)(v14, v9);
  }
  swift_bridgeObjectRelease();
  v15 = *(_DWORD *)(v1 + 20);
  v16 = (v15 + v11);
  if (__CFADD__(v15, (_DWORD)v11))
    goto LABEL_20;
  *(_DWORD *)(v1 + 20) = v16;
  if (((*(unsigned int *)(v1 + 1) | (unint64_t)((uint64_t)*(char *)(v1 + 5) << 32)) & 0x8000000000000000) == 0)
    sub_1A56817C0(v16);
  if (*(_BYTE *)v1 == 1)
  {
    sub_1A553E5B4(v8);
    sub_1A566ACC0(v8);
    sub_1A553E5DC(v8);
    swift_release();
    sub_1A594CC9C();
    sub_1A594B5F8();
    swift_bridgeObjectRelease();
    sub_1A594B5F8();
    v8 = 0xE100000000000000;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A56814E0(91, 0xE100000000000000, v1 + 8, v16);
    v18 = v17;
    v20 = v19;
    swift_bridgeObjectRelease();
    if ((v20 & 1) != 0)
    {
      v21._countAndFlagsBits = 91;
      v21._object = (void *)0xE100000000000000;
      v18 = ByteBuffer._setStringSlowpath(_:at:)(v21, v16);
    }
    swift_bridgeObjectRelease();
    v22 = *(_DWORD *)(v7 + 20);
    v23 = __CFADD__(v22, (_DWORD)v18);
    v24 = v22 + v18;
    if (!v23)
      goto LABEL_16;
    __break(1u);
  }
  v25 = *(_QWORD *)v8;
  v26 = *(unsigned __int16 *)(v8 + 20);
  v27 = *(unsigned __int8 *)(v8 + 22);
  swift_beginAccess();
  v28 = *(_QWORD *)(v25 + 24) + (v27 | (v26 << 8)) + v3;
  ByteBuffer._setBytes(_:at:)(v28, v28 + v31, v16);
  v30 = *(_DWORD *)(v7 + 20);
  v23 = __CFADD__(v30, v29);
  v24 = v30 + v29;
  if (v23)
  {
LABEL_22:
    __break(1u);
    return;
  }
  v18 = v29;
LABEL_16:
  *(_DWORD *)(v7 + 20) = v24;
  if (__OFADD__(v11, v18))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
}

void sub_1A56C36A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Swift::Int v9;
  Swift::Int v10;
  char v11;
  Swift::String v12;
  int v13;
  Swift::Int v14;
  Swift::Int v15;
  Swift::Int v16;
  Swift::Int v17;
  Swift::Int v18;
  char v19;
  Swift::String v20;
  int v21;
  BOOL v22;
  int v23;
  _BYTE v24[40];
  _BYTE v25[23];

  v2 = v1;
  *(_OWORD *)v25 = *(_OWORD *)a1;
  *(_QWORD *)&v25[15] = *(_QWORD *)(a1 + 15);
  if (*(_DWORD *)&v25[12] < *(_DWORD *)&v25[8])
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  swift_beginAccess();
  sub_1A553E5B4((uint64_t)v25);
  v4 = sub_1A594B538();
  v6 = v5;
  sub_1A553E5DC((uint64_t)v25);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A56BA418(v4, v6);
  v8 = v7;
  swift_bridgeObjectRelease_n();
  v9 = *(unsigned int *)(v2 + 20);
  sub_1A56814E0(32, 0xE100000000000000, v2 + 8, *(_DWORD *)(v2 + 20));
  if ((v11 & 1) != 0)
  {
    v12._countAndFlagsBits = 32;
    v12._object = (void *)0xE100000000000000;
    v10 = ByteBuffer._setStringSlowpath(_:at:)(v12, v9);
  }
  v13 = *(_DWORD *)(v2 + 20);
  v14 = (v13 + v10);
  if (__CFADD__(v13, (_DWORD)v10))
    goto LABEL_15;
  *(_DWORD *)(v2 + 20) = v14;
  v15 = v8 + v10;
  if (__OFADD__(v8, v10))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (*(_QWORD *)(a1 + 24))
  {
    ByteBufferView.init(_:)(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(unsigned int *)(a1 + 40) | ((unint64_t)(*(unsigned __int16 *)(a1 + 44) | (*(unsigned __int8 *)(a1 + 46) << 16)) << 32), (uint64_t)v24);
    swift_retain();
    sub_1A56C3404((uint64_t)v24);
    v17 = v16;
    sub_1A553E5DC((uint64_t)v24);
  }
  else
  {
    sub_1A56814E0(4999502, 0xE300000000000000, v2 + 8, v14);
    if ((v19 & 1) != 0)
    {
      v20._countAndFlagsBits = 4999502;
      v20._object = (void *)0xE300000000000000;
      v18 = ByteBuffer._setStringSlowpath(_:at:)(v20, v14);
    }
    v17 = v18;
    v21 = *(_DWORD *)(v2 + 20);
    v22 = __CFADD__(v21, (_DWORD)v18);
    v23 = v21 + v18;
    if (v22)
      goto LABEL_18;
    *(_DWORD *)(v2 + 20) = v23;
  }
  if (__OFADD__(v15, v17))
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
  }
}

uint64_t static Envelope.__derived_struct_equals(_:_:)(uint64_t result, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;

  v3 = (_QWORD *)result;
  v4 = *(_QWORD *)(result + 8);
  v5 = *(_QWORD *)(a2 + 8);
  if (!v4)
  {
    if (v5)
      return 0;
    goto LABEL_10;
  }
  if (!v5)
    return 0;
  result = *(_QWORD *)result;
  v6 = *v3 == *(_QWORD *)a2 && v4 == v5;
  if (v6 || (v7 = OUTLINED_FUNCTION_1_16(), result = 0, (v7 & 1) != 0))
  {
LABEL_10:
    v8 = v3[2];
    v9 = *(_QWORD *)(a2 + 16);
    if (v8)
    {
      if (!v9)
        return 0;
      v10 = v3[3];
      if (HIDWORD(v10) < v10)
      {
        __break(1u);
      }
      else
      {
        v11 = *(_QWORD *)(a2 + 24);
        if (HIDWORD(v11) >= v11)
        {
          if (HIDWORD(v10) - (_DWORD)v10 != HIDWORD(v11) - (_DWORD)v11)
            return 0;
          OUTLINED_FUNCTION_19_15();
          if (((v13 | (v12 << 32)) & 0xFFFFFFFFFFFFFFLL) != ((*(unsigned int *)(a2 + 32) | ((unint64_t)(*(unsigned __int16 *)(a2 + 36) | (*(unsigned __int8 *)(a2 + 38) << 16)) << 32)) & 0xFFFFFFFFFFFFFFLL)
            || v8 != v9)
          {
            swift_retain_n();
            swift_retain();
            v15 = sub_1A566B918();
            swift_release();
            swift_release();
            if ((v15 & 1) == 0)
              return 0;
          }
LABEL_22:
          sub_1A568A6D0();
          if ((v16 & 1) == 0)
            return 0;
          sub_1A568A6D0();
          if ((v17 & 1) == 0)
            return 0;
          sub_1A568A6D0();
          if ((v18 & 1) == 0)
            return 0;
          sub_1A568A6D0();
          if ((v19 & 1) == 0)
            return 0;
          sub_1A568A6D0();
          if ((v20 & 1) == 0)
            return 0;
          sub_1A568A6D0();
          if ((v21 & 1) == 0)
            return 0;
          v22 = v3[12];
          v23 = *(_QWORD *)(a2 + 96);
          if (v22)
          {
            if (!v23)
              return 0;
            if (v3[11] != *(_QWORD *)(a2 + 88) || v22 != v23)
            {
              v25 = OUTLINED_FUNCTION_1_16();
              result = 0;
              if ((v25 & 1) == 0)
                return result;
            }
          }
          else if (v23)
          {
            return 0;
          }
          v26 = v3[14];
          v27 = *(_QWORD *)(a2 + 112);
          if (v26)
          {
            if (v27)
            {
              v28 = v3[13] == *(_QWORD *)(a2 + 104) && v26 == v27;
              if (v28 || (OUTLINED_FUNCTION_1_16() & 1) != 0)
                return 1;
            }
          }
          else if (!v27)
          {
            return 1;
          }
          return 0;
        }
      }
      __break(1u);
      return result;
    }
    if (v9)
      return 0;
    goto LABEL_22;
  }
  return result;
}

void sub_1A56C3A88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  Swift::Int v5;
  char v6;
  Swift::Int v7;
  int v8;
  unint64_t v9;
  unint64_t v10;
  Swift::Int v11;
  Swift::Int v12;
  Swift::Int v13;
  char v14;
  int v15;
  BOOL v16;
  int v17;
  BOOL v18;
  Swift::Int v19;
  Swift::Int v20;
  char v21;
  int v22;
  Swift::Int v23;
  Swift::Int v24;
  Swift::Int v25;
  Swift::Int v26;
  Swift::Int v27;
  char v28;
  Swift::String v29;
  int v30;
  int v31;
  Swift::Int v32;
  char v33;
  int v34;
  uint64_t v35;
  Swift::Int v36;
  char v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  Swift::Int v57;
  char v58;
  int v59;
  Swift::Int v60;
  unint64_t v61;
  unint64_t v62;
  Swift::Int v63;
  Swift::Int v64;
  Swift::Int v65;
  char v66;
  int v67;
  int v68;
  Swift::Int v69;
  Swift::Int v70;
  char v71;
  int v72;
  Swift::Int v73;
  unint64_t v74;
  unint64_t v75;
  Swift::Int v76;
  Swift::Int v77;
  Swift::Int v78;
  char v79;
  int v80;
  int v81;
  Swift::Int v82;
  char v83;
  uint64_t v84;
  int v85;
  _BYTE v86[40];
  _BYTE v87[16];
  _BYTE v88[16];
  _BYTE v89[16];
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;

  v2 = v1;
  v4 = v1 + 8;
  sub_1A56814E0(40, 0xE100000000000000, v1 + 8, *(_DWORD *)(v1 + 20));
  if ((v6 & 1) != 0)
    v5 = OUTLINED_FUNCTION_0_50(40);
  v7 = v5;
  v8 = *(_DWORD *)(v1 + 20);
  if (__CFADD__(v8, (_DWORD)v5))
  {
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  *(_DWORD *)(v1 + 20) = v8 + v5;
  sub_1A56B6868(a1, (uint64_t)v89, &qword_1EE7A97B0);
  sub_1A56B6868((uint64_t)v89, (uint64_t)&v90, &qword_1EE7A97B0);
  v9 = v91;
  if (v91)
  {
    v10 = v90;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    OUTLINED_FUNCTION_17_17(v10, v9);
    v12 = v11;
    sub_1A5503278((uint64_t)v89);
  }
  else
  {
    OUTLINED_FUNCTION_3_23(4999502, 0xE300000000000000);
    if ((v14 & 1) != 0)
      v13 = OUTLINED_FUNCTION_1_25(4999502, 0xE300000000000000);
    v12 = v13;
    v15 = *(_DWORD *)(v1 + 20);
    v16 = __CFADD__(v15, (_DWORD)v13);
    v17 = v15 + v13;
    if (v16)
      goto LABEL_110;
    *(_DWORD *)(v1 + 20) = v17;
  }
  v18 = __OFADD__(v7, v12);
  v19 = v7 + v12;
  if (v18)
    goto LABEL_80;
  OUTLINED_FUNCTION_1_35();
  if ((v21 & 1) != 0)
    v20 = OUTLINED_FUNCTION_0_35();
  v22 = *(_DWORD *)(v2 + 20);
  v23 = (v22 + v20);
  if (__CFADD__(v22, (_DWORD)v20))
    goto LABEL_81;
  *(_DWORD *)(v2 + 20) = v23;
  v24 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
LABEL_82:
    __break(1u);
LABEL_83:
    __break(1u);
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
  if (*(_QWORD *)(a1 + 16))
  {
    ByteBufferView.init(_:)(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(unsigned int *)(a1 + 32) | ((unint64_t)(*(unsigned __int16 *)(a1 + 36) | (*(unsigned __int8 *)(a1 + 38) << 16)) << 32), (uint64_t)v86);
    swift_retain_n();
    sub_1A56BA79C((uint64_t)v86);
    v26 = v25;
    sub_1A553E5DC((uint64_t)v86);
    swift_release();
  }
  else
  {
    sub_1A56814E0(4999502, 0xE300000000000000, v4, v23);
    if ((v28 & 1) != 0)
    {
      v29._countAndFlagsBits = 4999502;
      v29._object = (void *)0xE300000000000000;
      v27 = ByteBuffer._setStringSlowpath(_:at:)(v29, v23);
    }
    v26 = v27;
    v30 = *(_DWORD *)(v2 + 20);
    v16 = __CFADD__(v30, (_DWORD)v27);
    v31 = v30 + v27;
    if (v16)
      goto LABEL_111;
    *(_DWORD *)(v2 + 20) = v31;
  }
  v32 = v24 + v26;
  if (__OFADD__(v24, v26))
    goto LABEL_83;
  OUTLINED_FUNCTION_1_35();
  if ((v33 & 1) != 0)
    OUTLINED_FUNCTION_0_35();
  OUTLINED_FUNCTION_249();
  if (v16)
    goto LABEL_84;
  OUTLINED_FUNCTION_12_15(v34);
  if (v18)
  {
LABEL_85:
    __break(1u);
    goto LABEL_86;
  }
  OUTLINED_FUNCTION_10_16(*(_QWORD *)(a1 + 40));
  v18 = __OFADD__(v32, v35);
  v36 = v32 + v35;
  if (v18)
  {
LABEL_86:
    __break(1u);
LABEL_87:
    __break(1u);
    goto LABEL_88;
  }
  OUTLINED_FUNCTION_1_35();
  if ((v37 & 1) != 0)
    OUTLINED_FUNCTION_0_35();
  OUTLINED_FUNCTION_249();
  if (v16)
    goto LABEL_87;
  OUTLINED_FUNCTION_12_15(v38);
  if (v18)
  {
LABEL_88:
    __break(1u);
    goto LABEL_89;
  }
  OUTLINED_FUNCTION_10_16(*(_QWORD *)(a1 + 48));
  v18 = __OFADD__(v36, v39);
  v40 = v36 + v39;
  if (v18)
  {
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
    goto LABEL_91;
  }
  OUTLINED_FUNCTION_1_35();
  if ((v41 & 1) != 0)
    OUTLINED_FUNCTION_0_35();
  OUTLINED_FUNCTION_249();
  if (v16)
    goto LABEL_90;
  OUTLINED_FUNCTION_12_15(v42);
  if (v18)
  {
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  OUTLINED_FUNCTION_10_16(*(_QWORD *)(a1 + 56));
  v18 = __OFADD__(v40, v43);
  v44 = v40 + v43;
  if (v18)
  {
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
    goto LABEL_94;
  }
  OUTLINED_FUNCTION_1_35();
  if ((v45 & 1) != 0)
    OUTLINED_FUNCTION_0_35();
  OUTLINED_FUNCTION_249();
  if (v16)
    goto LABEL_93;
  OUTLINED_FUNCTION_12_15(v46);
  if (v18)
  {
LABEL_94:
    __break(1u);
    goto LABEL_95;
  }
  OUTLINED_FUNCTION_10_16(*(_QWORD *)(a1 + 64));
  v18 = __OFADD__(v44, v47);
  v48 = v44 + v47;
  if (v18)
  {
LABEL_95:
    __break(1u);
LABEL_96:
    __break(1u);
    goto LABEL_97;
  }
  OUTLINED_FUNCTION_1_35();
  if ((v49 & 1) != 0)
    OUTLINED_FUNCTION_0_35();
  OUTLINED_FUNCTION_249();
  if (v16)
    goto LABEL_96;
  OUTLINED_FUNCTION_12_15(v50);
  if (v18)
  {
LABEL_97:
    __break(1u);
    goto LABEL_98;
  }
  OUTLINED_FUNCTION_10_16(*(_QWORD *)(a1 + 72));
  v18 = __OFADD__(v48, v51);
  v52 = v48 + v51;
  if (v18)
  {
LABEL_98:
    __break(1u);
LABEL_99:
    __break(1u);
    goto LABEL_100;
  }
  OUTLINED_FUNCTION_1_35();
  if ((v53 & 1) != 0)
    OUTLINED_FUNCTION_0_35();
  OUTLINED_FUNCTION_249();
  if (v16)
    goto LABEL_99;
  OUTLINED_FUNCTION_12_15(v54);
  if (v18)
  {
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }
  OUTLINED_FUNCTION_10_16(*(_QWORD *)(a1 + 80));
  v18 = __OFADD__(v52, v55);
  v56 = v52 + v55;
  if (v18)
  {
LABEL_101:
    __break(1u);
LABEL_102:
    __break(1u);
    goto LABEL_103;
  }
  OUTLINED_FUNCTION_1_35();
  if ((v58 & 1) != 0)
    v57 = OUTLINED_FUNCTION_0_35();
  v59 = *(_DWORD *)(v2 + 20);
  if (__CFADD__(v59, (_DWORD)v57))
    goto LABEL_102;
  *(_DWORD *)(v2 + 20) = v59 + v57;
  v60 = v56 + v57;
  if (__OFADD__(v56, v57))
  {
LABEL_103:
    __break(1u);
LABEL_104:
    __break(1u);
LABEL_105:
    __break(1u);
    goto LABEL_106;
  }
  sub_1A56B6868(a1 + 88, (uint64_t)v88, &qword_1EE7A97B8);
  sub_1A56B6868((uint64_t)v88, (uint64_t)&v92, &qword_1EE7A97B8);
  v61 = v93;
  if (v93)
  {
    v62 = v92;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    OUTLINED_FUNCTION_17_17(v62, v61);
    v64 = v63;
    sub_1A5503278((uint64_t)v88);
  }
  else
  {
    OUTLINED_FUNCTION_3_23(4999502, 0xE300000000000000);
    if ((v66 & 1) != 0)
      v65 = OUTLINED_FUNCTION_1_25(4999502, 0xE300000000000000);
    v64 = v65;
    v67 = *(_DWORD *)(v2 + 20);
    v16 = __CFADD__(v67, (_DWORD)v65);
    v68 = v67 + v65;
    if (v16)
      goto LABEL_112;
    *(_DWORD *)(v2 + 20) = v68;
  }
  v18 = __OFADD__(v60, v64);
  v69 = v60 + v64;
  if (v18)
    goto LABEL_104;
  OUTLINED_FUNCTION_1_35();
  if ((v71 & 1) != 0)
    v70 = OUTLINED_FUNCTION_0_35();
  v72 = *(_DWORD *)(v2 + 20);
  if (__CFADD__(v72, (_DWORD)v70))
    goto LABEL_105;
  *(_DWORD *)(v2 + 20) = v72 + v70;
  v18 = __OFADD__(v69, v70);
  v73 = v69 + v70;
  if (v18)
  {
LABEL_106:
    __break(1u);
LABEL_107:
    __break(1u);
LABEL_108:
    __break(1u);
    goto LABEL_109;
  }
  sub_1A56B6868(a1 + 104, (uint64_t)v87, &qword_1EE7A97B8);
  sub_1A56B6868((uint64_t)v87, (uint64_t)&v94, &qword_1EE7A97B8);
  v74 = v95;
  if (v95)
  {
    v75 = v94;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    OUTLINED_FUNCTION_17_17(v75, v74);
    v77 = v76;
    sub_1A5503278((uint64_t)v87);
  }
  else
  {
    OUTLINED_FUNCTION_3_23(4999502, 0xE300000000000000);
    if ((v79 & 1) != 0)
      v78 = OUTLINED_FUNCTION_1_25(4999502, 0xE300000000000000);
    v77 = v78;
    v80 = *(_DWORD *)(v2 + 20);
    v16 = __CFADD__(v80, (_DWORD)v78);
    v81 = v80 + v78;
    if (v16)
      goto LABEL_113;
    *(_DWORD *)(v2 + 20) = v81;
  }
  v18 = __OFADD__(v73, v77);
  v82 = v73 + v77;
  if (v18)
    goto LABEL_107;
  OUTLINED_FUNCTION_3_23(41, 0xE100000000000000);
  if ((v83 & 1) != 0)
    OUTLINED_FUNCTION_0_50(41);
  OUTLINED_FUNCTION_249();
  if (v16)
    goto LABEL_108;
  *(_DWORD *)(v2 + 20) = v85;
  if (__OFADD__(v82, v84))
  {
LABEL_109:
    __break(1u);
LABEL_110:
    __break(1u);
LABEL_111:
    __break(1u);
LABEL_112:
    __break(1u);
LABEL_113:
    __break(1u);
  }
}

void Envelope.date.getter()
{
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_39_7();
  OUTLINED_FUNCTION_1();
}

void Envelope.date.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_8_1();
}

double (*Envelope.date.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t Envelope.subject.getter()
{
  OUTLINED_FUNCTION_19_15();
  return swift_retain();
}

void Envelope.subject.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  swift_release();
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a2;
  *(_BYTE *)(v3 + 38) = BYTE6(a3);
  *(_WORD *)(v3 + 36) = WORD2(a3);
  *(_DWORD *)(v3 + 32) = a3;
  OUTLINED_FUNCTION_8_1();
}

double (*Envelope.subject.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t Envelope.from.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

void Envelope.from.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 40) = a1;
  OUTLINED_FUNCTION_1();
}

double (*Envelope.from.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t Envelope.sender.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

void Envelope.sender.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = a1;
  OUTLINED_FUNCTION_1();
}

double (*Envelope.sender.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t Envelope.reply.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

void Envelope.reply.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 56) = a1;
  OUTLINED_FUNCTION_1();
}

double (*Envelope.reply.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t Envelope.to.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

void Envelope.to.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 64) = a1;
  OUTLINED_FUNCTION_1();
}

double (*Envelope.to.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t Envelope.cc.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

void Envelope.cc.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 72) = a1;
  OUTLINED_FUNCTION_1();
}

double (*Envelope.cc.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t Envelope.bcc.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

void Envelope.bcc.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 80) = a1;
  OUTLINED_FUNCTION_1();
}

double (*Envelope.bcc.modify())(_QWORD)
{
  return nullsub_1;
}

void Envelope.inReplyTo.getter()
{
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_39_7();
  OUTLINED_FUNCTION_1();
}

void Envelope.inReplyTo.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 88) = a1;
  *(_QWORD *)(v2 + 96) = a2;
  OUTLINED_FUNCTION_8_1();
}

double (*Envelope.inReplyTo.modify())(_QWORD)
{
  return nullsub_1;
}

void Envelope.messageID.getter()
{
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_39_7();
  OUTLINED_FUNCTION_1();
}

void Envelope.messageID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 104) = a1;
  *(_QWORD *)(v2 + 112) = a2;
  OUTLINED_FUNCTION_8_1();
}

double (*Envelope.messageID.modify())(_QWORD)
{
  return nullsub_1;
}

__n128 Envelope.init(date:subject:from:sender:reply:to:cc:bcc:inReplyTo:messageID:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, __int128 a11, __n128 a12, uint64_t a13)
{
  __n128 result;

  result = a12;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_DWORD *)(a9 + 32) = a5;
  *(_BYTE *)(a9 + 38) = BYTE6(a5);
  *(_WORD *)(a9 + 36) = WORD2(a5);
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_OWORD *)(a9 + 64) = a10;
  *(_OWORD *)(a9 + 80) = a11;
  *(__n128 *)(a9 + 96) = a12;
  *(_QWORD *)(a9 + 112) = a13;
  return result;
}

void Envelope.hash(into:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v2 = v1;
  if (v2[1])
  {
    OUTLINED_FUNCTION_30_2();
    OUTLINED_FUNCTION_69();
    OUTLINED_FUNCTION_5_16();
    OUTLINED_FUNCTION_55();
  }
  else
  {
    OUTLINED_FUNCTION_35_3();
  }
  sub_1A56A00DC(a1, v2[2]);
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_5_22();
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_5_22();
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_5_22();
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_5_22();
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_5_22();
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_5_22();
  OUTLINED_FUNCTION_55();
  if (v2[12])
  {
    OUTLINED_FUNCTION_30_2();
    OUTLINED_FUNCTION_69();
    OUTLINED_FUNCTION_5_16();
    OUTLINED_FUNCTION_55();
  }
  else
  {
    OUTLINED_FUNCTION_35_3();
  }
  if (v2[14])
  {
    OUTLINED_FUNCTION_30_2();
    OUTLINED_FUNCTION_69();
    sub_1A594B1D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_35_3();
    OUTLINED_FUNCTION_8_1();
  }
}

uint64_t Envelope.hashValue.getter()
{
  _BYTE v1[72];

  sub_1A594CE64();
  Envelope.hash(into:)((uint64_t)v1);
  return sub_1A594CED0();
}

uint64_t sub_1A56C4454()
{
  _BYTE v1[72];

  sub_1A594CE64();
  Envelope.hash(into:)((uint64_t)v1);
  return sub_1A594CED0();
}

void sub_1A56C4490(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::Int v4;
  Swift::Int v6;
  char v7;
  Swift::String v8;
  Swift::Int v9;
  int v10;
  BOOL v11;
  int v12;
  uint64_t v13;
  Swift::Int v14;
  char v15;
  Swift::String v16;
  uint64_t v17;
  int v18;
  char v19;
  Swift::String v20;
  int v21;

  v2 = v1;
  v3 = v1 + 8;
  v4 = *(unsigned int *)(v2 + 20);
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_12;
  OUTLINED_FUNCTION_13_14(40, 0xE100000000000000);
  if ((v7 & 1) != 0)
  {
    v8._countAndFlagsBits = 40;
    v8._object = (void *)0xE100000000000000;
    v6 = ByteBuffer._setStringSlowpath(_:at:)(v8, v4);
  }
  v9 = v6;
  v10 = *(_DWORD *)(v2 + 20);
  v11 = __CFADD__(v10, (_DWORD)v6);
  v12 = v10 + v6;
  if (v11)
  {
    __break(1u);
    goto LABEL_17;
  }
  *(_DWORD *)(v2 + 20) = v12;
  sub_1A565AF50(a1, 0, 0xE000000000000000, 0);
  v4 = v9 + v13;
  if (__OFADD__(v9, v13))
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    return;
  }
  v14 = *(unsigned int *)(v2 + 20);
  sub_1A56814E0(41, 0xE100000000000000, v3, *(_DWORD *)(v2 + 20));
  if ((v15 & 1) != 0)
  {
    v16._countAndFlagsBits = 41;
    v16._object = (void *)0xE100000000000000;
    ByteBuffer._setStringSlowpath(_:at:)(v16, v14);
  }
  OUTLINED_FUNCTION_249();
  if (v11)
    goto LABEL_18;
  *(_DWORD *)(v2 + 20) = v18;
  if (__OFADD__(v4, v17))
  {
    __break(1u);
LABEL_12:
    OUTLINED_FUNCTION_13_14(4999502, 0xE300000000000000);
    if ((v19 & 1) != 0)
    {
      v20._countAndFlagsBits = 4999502;
      v20._object = (void *)0xE300000000000000;
      ByteBuffer._setStringSlowpath(_:at:)(v20, v4);
    }
    OUTLINED_FUNCTION_249();
    if (!v11)
    {
      *(_DWORD *)(v2 + 20) = v21;
      return;
    }
    goto LABEL_19;
  }
}

unint64_t sub_1A56C45C8()
{
  unint64_t result;

  result = qword_1EE7A97A8;
  if (!qword_1EE7A97A8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for Envelope, &type metadata for Envelope);
    atomic_store(result, (unint64_t *)&qword_1EE7A97A8);
  }
  return result;
}

uint64_t destroy for Envelope()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Envelope(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 35) = *(_DWORD *)(a2 + 35);
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  v6 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v6;
  v7 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v7;
  v8 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v8;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_retain();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for Envelope(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_WORD *)(a1 + 36) = *(_WORD *)(a2 + 36);
  *(_BYTE *)(a1 + 38) = *(_BYTE *)(a2 + 38);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Envelope(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_WORD *)(a1 + 36) = *(_WORD *)(a2 + 36);
  *(_BYTE *)(a1 + 38) = *(_BYTE *)(a2 + 38);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Envelope(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 120))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 40);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Envelope(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Envelope()
{
  return &type metadata for Envelope;
}

uint64_t OUTLINED_FUNCTION_5_22()
{
  return sub_1A5693F7C();
}

void OUTLINED_FUNCTION_10_16(uint64_t a1)
{
  sub_1A56C4490(a1);
}

void OUTLINED_FUNCTION_12_15(int a1@<W8>)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 20) = a1;
}

void OUTLINED_FUNCTION_13_14(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  Swift::UInt32 v3;

  sub_1A56814E0(a1, a2, v2, v3);
}

void OUTLINED_FUNCTION_17_17(unint64_t a1, unint64_t a2)
{
  sub_1A56BA418(a1, a2);
}

__n128 Expire.dateTime.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  __int128 v4;
  __n128 result;

  v2 = *(_QWORD *)(v1 + 48);
  v3 = *(_BYTE *)(v1 + 56);
  v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v4;
  result = *(__n128 *)(v1 + 32);
  *(__n128 *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 48) = v2;
  *(_BYTE *)(a1 + 56) = v3;
  return result;
}

__n128 Expire.dateTime.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  __int128 v4;
  __n128 result;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_BYTE *)(a1 + 56);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v1 = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 16) = v4;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 32) = result;
  *(_QWORD *)(v1 + 48) = v2;
  *(_BYTE *)(v1 + 56) = v3 & 1;
  return result;
}

double (*Expire.dateTime.modify())(_QWORD)
{
  return nullsub_1;
}

void __swiftcall Expire.init(dateTime:)(NIOIMAPCore2::Expire *__return_ptr retstr, NIOIMAPCore2::FullDateTime *dateTime)
{
  Swift::Int value;
  Swift::Bool is_nil;
  __int128 v4;

  value = dateTime->time.fraction.value;
  is_nil = dateTime->time.fraction.is_nil;
  v4 = *(_OWORD *)&dateTime->date.day;
  *(_OWORD *)&retstr->dateTime.date.year = *(_OWORD *)&dateTime->date.year;
  *(_OWORD *)&retstr->dateTime.date.day = v4;
  *(_OWORD *)&retstr->dateTime.time.minute = *(_OWORD *)&dateTime->time.minute;
  retstr->dateTime.time.fraction.value = value;
  retstr->dateTime.time.fraction.is_nil = is_nil;
}

uint64_t Expire.hash(into:)()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 56);
  sub_1A594CE88();
  sub_1A594CE88();
  sub_1A594CE88();
  sub_1A594CE88();
  sub_1A594CE88();
  sub_1A594CE88();
  if ((v1 & 1) != 0)
    return sub_1A594CE94();
  sub_1A594CE94();
  return sub_1A594CE88();
}

uint64_t static Expire.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v3;
  BOOL v4;

  if (*(_QWORD *)a1 != *(_QWORD *)a2)
    return 0;
  v2 = *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8) && *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16);
  v3 = v2 && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24);
  v4 = v3 && *(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32);
  if (!v4 || *(_QWORD *)(a1 + 40) != *(_QWORD *)(a2 + 40))
    return 0;
  if ((*(_BYTE *)(a1 + 56) & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 56) & 1) == 0)
      return 0;
  }
  else if ((*(_BYTE *)(a2 + 56) & 1) != 0 || *(_QWORD *)(a1 + 48) != *(_QWORD *)(a2 + 48))
  {
    return 0;
  }
  return 1;
}

uint64_t Expire.hashValue.getter()
{
  sub_1A594CE64();
  Expire.hash(into:)();
  return sub_1A594CED0();
}

uint64_t sub_1A56C4C40()
{
  sub_1A594CE64();
  Expire.hash(into:)();
  return sub_1A594CED0();
}

unint64_t sub_1A56C4C80()
{
  unint64_t result;

  result = qword_1EE7A97C0;
  if (!qword_1EE7A97C0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for Expire, &type metadata for Expire);
    atomic_store(result, (unint64_t *)&qword_1EE7A97C0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FullDateTime(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 57))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for FullDateTime(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 57) = v3;
  return result;
}

ValueMetadata *type metadata accessor for Expire()
{
  return &type metadata for Expire;
}

#error "1A56C5068: call analysis failed (funcsize=959)"

void FetchAttribute.hash(into:)()
{
  uint64_t v0;
  _QWORD v1[4];

  sub_1A5666B28(v0, (uint64_t)v1);
  __asm { BR              X11 }
}

uint64_t sub_1A56C5C9C()
{
  OUTLINED_FUNCTION_7_18();
  sub_1A594CE88();
  return sub_1A594CE94();
}

void static FetchAttribute.__derived_enum_equals(_:_:)(uint64_t a1)
{
  _QWORD v1[4];

  sub_1A5666B28(a1, (uint64_t)v1);
  __asm { BR              X11 }
}

uint64_t sub_1A56C5F38@<X0>(uint64_t a1@<X8>)
{
  char v1;
  uint64_t v2;
  char v3;
  _BYTE v5[72];
  int v6;
  char v7;

  v6 = a1;
  v7 = BYTE4(a1) & 0x1F;
  sub_1A5666B28(v2, (uint64_t)v5);
  if (v5[36] >> 5)
    v3 = 0;
  else
    v3 = v1 ^ v5[0] ^ 1;
  return v3 & 1;
}

uint64_t FetchAttribute.hashValue.getter()
{
  sub_1A594CE64();
  FetchAttribute.hash(into:)();
  return sub_1A594CED0();
}

uint64_t sub_1A56C6464()
{
  uint64_t v0;
  _BYTE v2[40];

  sub_1A5666B28(v0, (uint64_t)v2);
  return FetchAttribute.hashValue.getter();
}

void sub_1A56C6498()
{
  uint64_t v0;
  _BYTE v1[40];

  sub_1A5666B28(v0, (uint64_t)v1);
  FetchAttribute.hash(into:)();
}

uint64_t sub_1A56C64D4()
{
  uint64_t v0;
  _BYTE v2[40];

  sub_1A5666B28(v0, (uint64_t)v2);
  sub_1A594CE64();
  FetchAttribute.hash(into:)();
  return sub_1A594CED0();
}

uint64_t sub_1A56C6524(uint64_t a1, uint64_t a2)
{
  char v3;
  _BYTE v5[40];
  _BYTE v6[40];

  sub_1A5666B28(a1, (uint64_t)v5);
  sub_1A5666B28(a2, (uint64_t)v6);
  static FetchAttribute.__derived_enum_equals(_:_:)((uint64_t)v5);
  return v3 & 1;
}

void sub_1A56C656C()
{
  static Array<A>.all = (uint64_t)&unk_1E4E84A48;
}

uint64_t *Array<A>.all.unsafeMutableAddressor()
{
  if (qword_1EE7A9078 != -1)
    swift_once();
  return &static Array<A>.all;
}

uint64_t static Array<A>.all.getter()
{
  return sub_1A565A53C(&qword_1EE7A9078);
}

void sub_1A56C65DC()
{
  static Array<A>.fast = (uint64_t)&unk_1E4E84B08;
}

uint64_t *Array<A>.fast.unsafeMutableAddressor()
{
  if (qword_1EE7A9080 != -1)
    swift_once();
  return &static Array<A>.fast;
}

uint64_t static Array<A>.fast.getter()
{
  return sub_1A565A53C(&qword_1EE7A9080);
}

void sub_1A56C664C()
{
  static Array<A>.full = (uint64_t)&unk_1E4E84BA0;
}

uint64_t *Array<A>.full.unsafeMutableAddressor()
{
  if (qword_1EE7A9088 != -1)
    swift_once();
  return &static Array<A>.full;
}

uint64_t static Array<A>.full.getter()
{
  return sub_1A565A53C(&qword_1EE7A9088);
}

uint64_t FetchAttribute.debugDescription.getter()
{
  uint64_t v0;

  sub_1A5666BBC(v0, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1A5666B64);
  return sub_1A5682074(v0);
}

void sub_1A56C66E0(uint64_t a1)
{
  _QWORD v1[4];

  sub_1A5666B28(a1, (uint64_t)v1);
  __asm { BR              X11 }
}

Swift::Int sub_1A56C6738()
{
  uint64_t v0;
  Swift::Int v1;
  char v2;
  uint64_t v3;
  Swift::UInt32 v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  BOOL v9;
  int v10;

  OUTLINED_FUNCTION_37_11();
  if (v5)
    v6 = 1497648962;
  else
    v6 = 0x5552545359444F42;
  if (v5)
    v7 = 0xE400000000000000;
  else
    v7 = 0xED00004552555443;
  OUTLINED_FUNCTION_25_10();
  OUTLINED_FUNCTION_22_1(v6, v7, v3, v4);
  OUTLINED_FUNCTION_26_7();
  if ((v2 & 1) != 0)
    v1 = OUTLINED_FUNCTION_17_8();
  swift_bridgeObjectRelease();
  v8 = *(_DWORD *)(v0 + 20);
  v9 = __CFADD__(v8, (_DWORD)v1);
  v10 = v8 + v1;
  if (v9)
  {
    __break(1u);
    JUMPOUT(0x1A56C67B0);
  }
  *(_DWORD *)(v0 + 20) = v10;
  return v1;
}

uint64_t sub_1A56C6C9C()
{
  uint64_t v0;
  _BYTE v2[40];

  sub_1A5666B28(v0, (uint64_t)v2);
  return FetchAttribute.debugDescription.getter();
}

void sub_1A56C6CD0(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v11;
  void *v12;
  Swift::Int v13;
  Swift::Int v14;
  Swift::Int v15;
  char v16;
  char v17;
  Swift::String v18;
  int v19;
  BOOL v20;
  int v21;
  uint64_t v22;
  BOOL v23;
  Swift::Int v24;
  uint64_t v25;

  v7 = v6;
  if ((a1 & 1) != 0)
    v11 = 0x4545502E59444F42;
  else
    v11 = 1497648962;
  if ((a1 & 1) != 0)
    v12 = (void *)0xE90000000000004BLL;
  else
    v12 = (void *)0xE400000000000000;
  v13 = *(unsigned int *)(v7 + 20);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  OUTLINED_FUNCTION_22_1(v11, (unint64_t)v12, v7 + 8, v13);
  v15 = v14;
  v17 = v16;
  swift_bridgeObjectRelease();
  if ((v17 & 1) != 0)
  {
    v18._countAndFlagsBits = v11;
    v18._object = v12;
    v15 = ByteBuffer._setStringSlowpath(_:at:)(v18, v13);
  }
  swift_bridgeObjectRelease();
  v19 = *(_DWORD *)(v7 + 20);
  v20 = __CFADD__(v19, (_DWORD)v15);
  v21 = v19 + v15;
  if (v20)
  {
    __break(1u);
    goto LABEL_17;
  }
  *(_DWORD *)(v7 + 20) = v21;
  sub_1A5700244(a2, a3, a4);
  v23 = __OFADD__(v15, v22);
  v24 = v15 + v22;
  if (v23)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    return;
  }
  if ((a6 & 1) != 0)
    v25 = 0;
  else
    v25 = sub_1A56AAF1C(a5);
  if (__OFADD__(v24, v25))
    goto LABEL_18;
}

#error "1A56C6EEC: call analysis failed (funcsize=105)"

unint64_t sub_1A56C6FB4()
{
  unint64_t result;

  result = qword_1EE7A97C8;
  if (!qword_1EE7A97C8)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for FetchAttribute, &type metadata for FetchAttribute);
    atomic_store(result, (unint64_t *)&qword_1EE7A97C8);
  }
  return result;
}

uint64_t destroy for FetchAttribute(uint64_t a1)
{
  return sub_1A5666BFC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(unsigned int *)(a1 + 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 36) << 32));
}

uint64_t initializeWithCopy for FetchAttribute(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(unsigned __int8 *)(a2 + 36);
  v8 = *(unsigned int *)(a2 + 32);
  sub_1A5666B64(*(_QWORD *)a2, v4, v5, v6, v8 | (v7 << 32));
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 36) = v7;
  *(_DWORD *)(a1 + 32) = v8;
  return a1;
}

uint64_t assignWithCopy for FetchAttribute(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(unsigned __int8 *)(a2 + 36);
  v8 = *(unsigned int *)(a2 + 32);
  sub_1A5666B64(*(_QWORD *)a2, v4, v5, v6, v8 | (v7 << 32));
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(unsigned int *)(a1 + 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 36) << 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_DWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 36) = v7;
  sub_1A5666BFC(v9, v10, v11, v12, v13);
  return a1;
}

__n128 __swift_memcpy37_8_1(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 29) = *(_QWORD *)(a2 + 29);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for FetchAttribute(uint64_t a1, uint64_t a2)
{
  char v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;

  v3 = *(_BYTE *)(a2 + 36);
  v4 = *(_DWORD *)(a2 + 32);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(unsigned int *)(a1 + 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 36) << 32);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_DWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 36) = v3;
  sub_1A5666BFC(v5, v7, v6, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for FetchAttribute(uint64_t a1, int a2)
{
  unsigned int v2;
  int v3;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 37))
    {
      v3 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = (*(_DWORD *)(a1 + 24) >> 2) & 0x3FFFFFFF | (*(_BYTE *)(a1 + 36) >> 1 << 30);
      if (v2 > 0x80000000)
        v3 = ~v2;
      else
        v3 = -1;
    }
  }
  else
  {
    v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for FetchAttribute(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 36) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 37) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 0;
      *(_QWORD *)(result + 24) = (-4 * a2);
      *(_DWORD *)(result + 32) = 0;
      *(_BYTE *)(result + 36) = (-a2 >> 29) & 6;
      return result;
    }
    *(_BYTE *)(result + 37) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1A56C722C(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 36) >> 5;
  if (v1 <= 5)
    return v1;
  else
    return (*(_DWORD *)a1 + 6);
}

uint64_t sub_1A56C7248(uint64_t a1)
{
  uint64_t result;
  unsigned int v2;
  unint64_t v3;

  v2 = *(_DWORD *)(a1 + 32);
  result = a1 + 32;
  v3 = v2 | ((unint64_t)*(unsigned __int8 *)(result + 4) << 32);
  *(_DWORD *)result = v2;
  *(_BYTE *)(result + 4) = BYTE4(v3) & 0x1F;
  return result;
}

uint64_t sub_1A56C7264(uint64_t result, uint64_t a2)
{
  int v2;
  unint64_t v3;

  if (a2 < 6)
  {
    v2 = *(_DWORD *)(result + 32);
    result += 32;
    v3 = (a2 << 37) | ((unint64_t)(*(_BYTE *)(result + 4) & 1) << 32);
    *(_QWORD *)(result - 8) &= 0xFFFFFFFF00000003;
    *(_DWORD *)result = v2;
    *(_BYTE *)(result + 4) = BYTE4(v3);
  }
  else
  {
    *(_QWORD *)result = (a2 - 6);
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(_BYTE *)(result + 36) = -64;
  }
  return result;
}

ValueMetadata *type metadata accessor for FetchAttribute()
{
  return &type metadata for FetchAttribute;
}

uint64_t OUTLINED_FUNCTION_0_54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A5666B28(v2, a2);
}

void OUTLINED_FUNCTION_1_37(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  Swift::UInt32 v3;

  sub_1A56814E0(a1, a2, v2, v3);
}

uint64_t OUTLINED_FUNCTION_5_23(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A5666B28(v2, a2);
}

uint64_t OUTLINED_FUNCTION_6_24()
{
  return 0x323238434652;
}

uint64_t OUTLINED_FUNCTION_9_24(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0x532E000000000000;
}

void OUTLINED_FUNCTION_10_17(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, int a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, Swift::Int a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,Swift::Int a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  uint64_t v37;

  sub_1A5661874(a1, 0, 0xE000000000000000, 46, 0xE100000000000000, 0, 0xE000000000000000, 0, v37, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30,
    a31,
    a32,
    a33,
    a34,
    a35,
    a36,
    a37);
}

uint64_t OUTLINED_FUNCTION_11_13()
{
  return 0x4C414E5245544E49;
}

uint64_t OUTLINED_FUNCTION_12_16()
{
  return 1296510296;
}

void OUTLINED_FUNCTION_13_15()
{
  uint64_t v0;
  Swift::UInt32 v1;

  sub_1A56814E0(91, 0xE100000000000000, v0, v1);
}

uint64_t OUTLINED_FUNCTION_18_15(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0x482E000000000000;
}

uint64_t OUTLINED_FUNCTION_19_16()
{
  char v0;

  return v0 & 1;
}

uint64_t OUTLINED_FUNCTION_23_13()
{
  return 0x45504F4C45564E45;
}

uint64_t OUTLINED_FUNCTION_25_10()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t OUTLINED_FUNCTION_26_7()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_28_9(unsigned int a1)
{
  return a1 | 0x42414C2D00000000;
}

uint64_t OUTLINED_FUNCTION_31_10()
{
  return 0x514553444F4DLL;
}

uint64_t OUTLINED_FUNCTION_32_11(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0x542E000000000000;
}

uint64_t OUTLINED_FUNCTION_33_8()
{
  return 0x4B4545502ELL;
}

uint64_t OUTLINED_FUNCTION_34_10()
{
  return 0x5952414E4942;
}

void OUTLINED_FUNCTION_35_9()
{
  sub_1A5693F48();
}

uint64_t OUTLINED_FUNCTION_36_10()
{
  return 0x5347414C46;
}

uint64_t OUTLINED_FUNCTION_38_8(unsigned int a1)
{
  return a1 | 0x5248542D00000000;
}

uint64_t OUTLINED_FUNCTION_39_10(unsigned int a1)
{
  return a1 | 0x47534D2D00000000;
}

uint64_t FetchModificationResponse.modificationSequenceValue.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

double (*FetchModificationResponse.modificationSequenceValue.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FetchModificationResponse.hash(into:)()
{
  return sub_1A594CEB8();
}

BOOL static FetchModificationResponse.__derived_struct_equals(_:_:)(_BOOL8 result, uint64_t a2)
{
  if (((a2 | result) & 0x8000000000000000) == 0)
    return a2 == result;
  __break(1u);
  return result;
}

uint64_t FetchModificationResponse.hashValue.getter()
{
  sub_1A594CE64();
  sub_1A594CEB8();
  return sub_1A594CED0();
}

uint64_t sub_1A56C7600()
{
  return FetchModificationResponse.hashValue.getter();
}

uint64_t sub_1A56C7608()
{
  return FetchModificationResponse.hash(into:)();
}

BOOL sub_1A56C7610(_BOOL8 *a1, uint64_t *a2)
{
  return static FetchModificationResponse.__derived_struct_equals(_:_:)(*a1, *a2);
}

void sub_1A56C761C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::UInt32 v3;
  uint64_t v4;
  unint64_t v5;
  Swift::Int v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int v10;
  int v11;
  BOOL v12;
  int v13;
  uint64_t v14;
  Swift::Int v15;
  Swift::Int v16;
  char v17;
  int v18;
  int v19;

  v1 = v0;
  v2 = v0 + 8;
  v3 = *(_DWORD *)(v0 + 20);
  v4 = OUTLINED_FUNCTION_0_55();
  sub_1A56814E0(v4, v5, v2, v3);
  if ((v7 & 1) != 0)
  {
    v8 = OUTLINED_FUNCTION_0_55();
    v6 = OUTLINED_FUNCTION_1_25(v8, v9);
  }
  v10 = v6;
  v11 = *(_DWORD *)(v1 + 20);
  v12 = __CFADD__(v11, (_DWORD)v6);
  v13 = v11 + v6;
  if (v12)
  {
    __break(1u);
    goto LABEL_11;
  }
  *(_DWORD *)(v1 + 20) = v13;
  v14 = sub_1A56E14D4();
  v15 = v10 + v14;
  if (__OFADD__(v10, v14))
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_1A56814E0(41, 0xE100000000000000, v2, *(_DWORD *)(v1 + 20));
  if ((v17 & 1) != 0)
    v16 = OUTLINED_FUNCTION_1_25(41, 0xE100000000000000);
  v18 = *(_DWORD *)(v1 + 20);
  v12 = __CFADD__(v18, (_DWORD)v16);
  v19 = v18 + v16;
  if (v12)
    goto LABEL_12;
  *(_DWORD *)(v1 + 20) = v19;
  if (__OFADD__(v15, v16))
LABEL_13:
    __break(1u);
}

unint64_t sub_1A56C76F8()
{
  unint64_t result;

  result = qword_1EE7A97D0;
  if (!qword_1EE7A97D0)
  {
    result = MEMORY[0x1A85B1874](&protocol conformance descriptor for FetchModificationResponse, &type metadata for FetchModificationResponse);
    atomic_store(result, (unint64_t *)&qword_1EE7A97D0);
  }
  return result;
}

